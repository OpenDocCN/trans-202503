- en: —11—
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: —11—
- en: Depth-First Search in an Abandoned Prison
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在废弃监狱中的深度优先搜索
- en: 'Two steps into the prison, and Frank knew they had walked into a maze. The
    old computational prisons used to rely on their bizarre structure as much as on
    guards. Potential escapees think twice about sneaking through a door when they
    don’t know what lies on the other side: freedom or the guard’s breakroom.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 踏入监狱的两步，弗兰克就知道他们已经走进了一个迷宫。旧时的计算监狱往往依赖于其奇特的结构，和守卫一样，构成了其防守的核心。潜在的逃脱者在不知道另一边是自由还是守卫的休息室时，会三思而后行，犹豫是否通过一扇门。
- en: “How about some light?” suggested Frank.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: “要不要来点光？”弗兰克建议道。
- en: “Oh. Right,” agreed Socks. He muttered an incantation and a bluish flame flickered
    from the end of his staff, lighting up the completely unremarkable room.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: “哦。对，”袜子同意了。他低声念出一个咒语，蓝色的火焰从他法杖的尖端闪烁出来，点亮了这个完全不起眼的房间。
- en: 'The square room, rough stone walls, and heavy oaken door were enough to confirm
    what Frank already knew: the entire structure was a grid of rooms, each with doors
    to only some of its neighbors. They would have to navigate from room to room.
    But since they didn’t know which rooms had doors between them, they would have
    to search out a path as they went.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 方形的房间、粗糙的石墙和沉重的橡木门足以证实弗兰克已经知道的事情：整个结构是一个房间的网格，每个房间只有一些相邻房间有门。他们必须从一个房间走到另一个房间。但由于他们不知道哪些房间之间有门，他们必须在前进的过程中寻找出一条路径。
- en: “Time for another search,” he said.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: “该再搜索一次了，”他说。
- en: “A search?” asked Socks. “For what?”
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: “搜索？”袜子问道。“搜索什么？”
- en: “The papers, of course,” responded Frank. He had no doubt that the papers were
    stashed here. An abandoned prison provided an ideal location for stashing stolen
    goods, clearly surpassing the more commonly used warehouse. Arguably, the only
    better location would be an abandoned castle—provided it had a moat. The question
    now was whether they could find the documents and then, if they did, whether the
    documents would provide any valuable clues.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: “当然是文件，”弗兰克回答道。他毫不怀疑那些文件藏在这里。废弃的监狱提供了一个理想的藏匿赃物的地方，显然比更常用的仓库更合适。可以说，唯一更好的地方是废弃的城堡——前提是它有护城河。现在的问题是，他们能否找到这些文件，之后，如果找到了，这些文件是否能提供任何有价值的线索。
- en: “Not another breadth-first search,” protested Socks.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: “不是广度优先搜索，”袜子抗议道。
- en: Frank considered the idea. In theory, breadth-first worked fine on a grid. Each
    state of the search space was a grid square. Once you explored one grid square,
    you could add its unexplored neighboring squares to your list of things to try.
    Frank could clearly picture the search propagating out over an empty grid, like
    a wave moving across the water.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克考虑了一下这个想法。从理论上讲，广度优先搜索在网格上是行得通的。搜索空间的每个状态都是一个网格方格。一旦你探索了一个网格方格，你就可以将它的未探索相邻方格添加到你要尝试的列表中。弗兰克可以清晰地想象到，搜索会像波浪在水面上扩展，蔓延开来，覆盖整个空旷的网格。
- en: '![image](../images/f0084-01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0084-01.jpg)'
- en: However, breadth-first search had one major drawback in the physical world—an
    excessive amount of backtracking. Since you were always adding items to the end
    of the list, the next square to explore could be annoyingly far away. Even on
    an empty grid, without walls blocking your path, you could find yourself hiking
    back to the other end of the search space.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，广度优先搜索在物理世界中有一个主要缺点——过多的回溯。因为你总是将新的项目添加到列表的末尾，下一个要探索的方格可能会非常远。即使在一个空的网格上，没有墙壁阻挡你的路，你也可能发现自己不得不走回搜索空间的另一端。
- en: '![image](../images/f0085-01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0085-01.jpg)'
- en: It was the type of unnecessary movement that Frank made it a policy to avoid.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是弗兰克决定避免的那种不必要的动作。
- en: “No,” said Frank. “Too much backtracking. We’re better off going depth-first
    here.”
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: “没有，”弗兰克说。“回溯太多。我们还是用深度优先搜索比较好。”
- en: “Depth-first search. Depth-first search,” Socks mumbled to himself as though
    willing the spell into his memory. “I—I don’t think I remember—”
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: “深度优先搜索，深度优先搜索，”袜子低声自言自语，仿佛在将这个咒语刻进他的记忆中。“我—我想我记不住—”
- en: Frank waved him off, and strode confidently down the corridor. “We don’t need
    a spell for this one. I’ve been doing depth-first searches through buildings since
    you were in diapers.”
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克挥了挥手，信心十足地朝走廊走去。“这个我们不需要咒语。我从你还在穿尿布的时候就开始在建筑物里做深度优先搜索了。”
- en: “No backtracking with depth-first search then?” asked Socks.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: “那深度优先搜索就没有回溯吗？”袜子问道。
- en: “There’s backtracking with most search algorithms. But backtracking in a depth-first
    search is better suited for walking.”
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: “大多数搜索算法都有回溯。但是深度优先搜索中的回溯更适合走路。”
- en: “Um . . . I see.”
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: “嗯。。。我明白了。”
- en: “No, you don’t,” said Frank bluntly. “If you don’t know the algorithm, just
    ask. Pretending to know algorithms is a recipe for disaster. I’ve seen too many
    rookies tripped up due to bad searches. Good kids, like you.”
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: “不，你不知道，”弗兰克直截了当地说。“如果你不知道算法，就直接问。假装知道算法会导致灾难。我见过太多新手因为糟糕的搜索而被绊倒。像你这样的好孩子。”
- en: “Okay. What is depth-first search?” Socks asked.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: “好吧。什么是深度优先搜索？”索克斯问。
- en: “It’s a simple algorithm,” explained Frank. “Basically we explore deeply down
    each path. We go down one path until we hit a dead end. Then we backtrack to the
    most recent path that we didn’t take and try that. We’ll stop when we find the
    target.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: “这只是一个简单的算法，”弗兰克解释道。“基本上我们会深入探索每条路径。我们沿着一条路径走，直到遇到死胡同。然后我们回溯到最近一个没有走过的路径，并尝试那条。我们会在找到目标时停止。”
- en: “In this case, we’re going to use clockwise ordering. Whenever we have multiple
    options, we’ll try north, east, south, then west—avoiding paths we’ve already
    tried, of course. We’ll use the same ordering at every intersection, so we’ll
    always prefer going north if we can. But in this case we have only one option,
    so we start by going south.”
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: “在这种情况下，我们将使用顺时针顺序。每当我们有多个选项时，我们会尝试北、东、南、西——当然，避开我们已经尝试过的路径。我们会在每个交叉口使用相同的顺序，所以如果可能，我们总是优先选择北边。但在这种情况下我们只有一个选项，所以我们先选择向南走。”
- en: '![image](../images/f0086-01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0086-01.jpg)'
- en: Even as Frank spoke, they reached their first decision point. Frank surveyed
    the options. They had come from the north, so he chose east—the next unexplored
    direction in his ordering. Before leaving the intersection, he retrieved a piece
    of chalk from his pocket and made a small mark on the wall.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 即使弗兰克在说话，他们也已经到达了第一个决策点。弗兰克看了一眼选项。他们是从北边来的，所以他选择了东边——在他的顺序中下一个未探索的方向。在离开交叉口之前，他从口袋里拿出一块粉笔，在墙上做了一个小标记。
- en: '![image](../images/f0086-02.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0086-02.jpg)'
- en: After two more intersections—turning north, then east—they reached their first
    dead end. So far the rooms had either been completely empty or contained only
    the odd prison cell—the cells being enclosures within the rooms. With the complete
    lack of other distinguishing characteristics, Frank chalked a number onto a wall
    in each room and linked that number in his mind to the different mold formations
    he found there.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 经过两个交叉口——先是向北转，然后向东转——他们达到了第一个死胡同。到目前为止，房间要么完全空荡，要么只包含一些奇怪的监狱单元格——这些单元格是房间内的围栏。由于缺乏其他明显特征，弗兰克在每个房间的墙上标记了一个数字，并在脑海中将这个数字与他在那儿发现的不同霉菌形态联系起来。
- en: '![image](../images/f0087-01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0087-01.jpg)'
- en: “Now we backtrack to the last room, room 5, with the mold that looked like a
    horse,” explained Frank as they retraced their steps. This time they chose the
    only unexplored option from room 5, heading west. Unfortunately, they immediately
    hit another dead end—an empty room that sported a complex floral pattern of green
    and blue fuzz.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: “现在我们回溯到最后一个房间，5号房，那里有一个看起来像马的霉菌，”弗兰克一边回溯一边解释道。这次他们选择了从5号房间出来后唯一未探索的选项，向西走。不幸的是，他们马上又遇到了一个死胡同——一个空房间，墙上布满了复杂的绿色和蓝色毛绒图案。
- en: '![image](../images/f0087-02.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0087-02.jpg)'
- en: They backtracked through the most recent intersection whose options had been
    exhausted until they had a new option at room 4\. The eastern option was a dead
    end, and they’d already explored the northern option, so this time they went south.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 他们回溯到最近一个选项已经被探索完的交叉口，直到他们在房间4找到一个新的选项。东边的选项是死胡同，他们已经探索过北边的选项，所以这次他们选择了向南走。
- en: They ventured through two new empty rooms (8 and 9), differentiated only by
    the occurrence of a large stalactite of orange mold, which they stayed as far
    away from as possible. Orange mold was not known for its structural stability.
    After hitting another dead end, they found themselves retracing their steps all
    the way back to the first intersection in room 2.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 他们走过了两个新的空房间（8号和9号），仅通过一个大橙色霉菌的钟乳石来区分，而他们尽量远离这些霉菌。橙色霉菌的结构稳定性不太好。经过另一个死胡同后，他们发现自己又回到了2号房间的第一个交叉口。
- en: '![image](../images/f0087-03.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0087-03.jpg)'
- en: “What if we miss it?” asked Socks in his now-standard worried tone. “Or what
    if we end up in a loop? We could be stuck forever!”
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: “如果我们错过了怎么办？”索克斯以他那种标准的担忧语气问。“或者如果我们陷入死循环怎么办？我们可能永远卡在这里！”
- en: Frank groaned. “Listen, kid. This isn’t my first time depth-first searching.
    I know what I’m doing.”
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克呻吟了一声。“听着，孩子。这不是我第一次做深度优先搜索了。我知道自己在做什么。”
- en: “But loops.”
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: “但死循环。”
- en: “Why do you think I’m marking the walls?” asked Frank. “If we avoid taking passages
    that we’ve already explored, we avoid going in loops.”
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: “你为什么认为我在标记墙壁？”弗兰克问道。“如果我们避免走已经探索过的通道，就能避免进入死胡同。”
- en: Frank had learned that lesson during a Police Algorithms exercise. With the
    whole class watching, Frank had done six loops of the hedge maze before he heard
    another student loudly joke, “There he goes again.”
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克在警察算法的练习中学到了这个教训。当全班同学在场时，弗兰克走了六圈树篱迷宫，直到他听到另一位同学大声开玩笑道：“他又来了。”
- en: They explored deeper into the maze, following snaking paths and backtracking
    at dead ends.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 他们继续深入迷宫，沿着曲折的小路走，不时在死胡同处倒回头。
- en: '![image](../images/f0088-01.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0088-01.jpg)'
- en: Then, in room 23, they found a small cell packed high with rolls of parchment
    and stacks of ledgers.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在23号房间，他们发现了一个小牢房，里面堆满了羊皮纸卷和账簿。
- en: '![image](../images/f0088-02.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0088-02.jpg)'
- en: “We found it!” said Socks enthusiastically. His staff’s flame cast a flickering
    blue glow through the room.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: “我们找到了！”袜子兴奋地说道。他的法杖火焰在房间里投射出闪烁的蓝光。
- en: Frank felt the hairs on his neck rise as he took in the scene. He compared the
    height of the stacks with the mountains of paperwork he had completed through
    the years and did some quick calculations. The captain had never been shy about
    dumping paperwork on him, but Frank had still never seen anything like this. There
    were even mold-stained pages at the bottom of the stacks. Everything felt wrong.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克感到脖子上的汗毛竖起，他仔细观察眼前的场景。他对比了书堆的高度与他多年来完成的文书堆积，做了几个快速的计算。队长从不避讳把文件堆给他，但弗兰克从未见过如此场面。书堆底部甚至有发霉的页面。一切都让人觉得不对劲。
- en: 'Frank walked to the nearest stack and pulled off a sheet of parchment: a notice
    on the proper use of duck fences. The date and station number marked it as belonging
    to the stolen files. The next sheet, listing noise complaints in the Port of West
    Serial, also came from the stolen collection. It appeared equally random and unhelpful.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克走到最近的书堆前，拿起一张羊皮纸：一则关于使用鸭栅栏的注意事项。日期和车站编号标明这份文件属于被盗的档案。接下来的那张，列出了西部序列港口的噪音投诉，也来自被盗的档案集。它看起来同样随机且无助。
- en: He knelt down and pried open a gap near the bottom, yanking a ledger free. The
    pages were spotted with a trio of mold-butterflies, but Frank could clearly make
    out supply lists for the castle guards. This ledger could have come only from
    the castle itself. He grabbed another book and found castle guard rotations for
    last November.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 他跪下来，撬开底部附近的缝隙，猛地拉出一本账簿。页面上点缀着三只霉菌蝶的斑点，但弗兰克仍然能清楚地看出城堡卫兵的物资清单。这本账簿只能来自城堡本身。他拿起另一本书，发现上面记录了去年十一月的城堡卫兵轮换情况。
- en: “This is wrong,” he muttered. “There’s too much here. There’s castle ledgers
    as well.” Frank shifted to an adjacent pile, starting again at the top.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: “这不对劲，”他低声说，“这里太多了，还有城堡的账簿。”弗兰克移到旁边的一堆文件，重新从上面开始。
- en: “Is there a pattern?” asked Socks, as though he had just noticed the extent
    of the document piles.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: “有规律可循吗？”袜子问道，似乎他刚刚注意到文件堆积的规模。
- en: “I—” started Frank, but he pulled up short as he opened another ledger, entitled
    *Transfer Requests*. Four pages had been torn from the middle of the ledger.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: “我—”弗兰克开始说道，但他停住了脚步，当他翻开另一本账簿，上面写着*转移请求*。账簿中间的四页被撕掉了。
- en: “Very strange,” said Frank, flipping through the undamaged pages. “This could
    be—”
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: “很奇怪，”弗兰克一边翻阅完好的页面一边说，“这可能是—”
- en: Frank was cut off as Socks stumbled toward him, flailing for balance. Behind
    him, Frank could see motion in the gloom. It wasn’t until he heard the rusty shriek
    of the door’s hinges that he realized what was happening.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当袜子跌跌撞撞地朝他走来时，弗兰克的话被打断了，袜子挣扎着保持平衡。弗兰克看到背后在昏暗中有动静。直到他听到门铰链发出的生锈尖叫声，他才意识到发生了什么。
- en: “Door!” Frank yelled as the junior wizard fell into him.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: “门！”弗兰克大喊道，当年轻的巫师撞进他怀里。
- en: '![image](../images/f0090-01.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0090-01.jpg)'
- en: The two of them tumbled to the ground. The door slammed. A loud click sounded
    as the lock engaged. Socks’s staff, which had been dropped in the commotion, spun
    lazily into a tall stack of dry parchment. The staff’s blue flame seemed much
    larger than Frank remembered.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 他们俩摔倒在地。门砰的一声关上了。锁扣发出一声响亮的“咔嗒”声，锁定了。袜子的法杖在混乱中掉落，懒洋洋地旋转着，撞入了一堆干羊皮纸。法杖的蓝色火焰似乎比弗兰克记得的要大得多。
- en: Frank lay stunned on the stone floor as he watched the papers ignite.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克震惊地躺在石地板上，看着纸张燃起火焰。
- en: '**POLICE ALGORITHMS 101: DEPTH-FIRST SEARCH**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**警察算法 101：深度优先搜索**'
- en: '***Excerpt from Professor Drecker’s Lecture***'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '***来自德雷克教授讲座的摘录***'
- en: Unlike breadth-first search, depth-first search is an algorithm that explores
    more recently encountered search states first. The algorithm progresses down paths
    until it hits either the target or a dead end.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 与广度优先搜索不同，深度优先搜索是一种优先探索最近遇到的搜索状态的算法。该算法沿路径推进，直到找到目标或遇到死胡同。
- en: As with breadth-first search, you can visualize depth-first search as keeping
    a list (in this case, a *stack*) of known but unexplored states. At each step,
    the algorithm picks the next state to explore from the top of the stack. But unlike
    breadth-first search, depth-first search adds new options to the *top* of the
    stack.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 与广度优先搜索一样，你可以将深度优先搜索想象成保持一个已知但未探索的状态列表（在这种情况下是一个*栈*）。在每一步中，算法从栈的顶部选择下一个状态进行探索。但不同于广度优先搜索，深度优先搜索将新选项添加到*栈顶*。
- en: Consider our graph example from the lecture on breadth-first search. Remember,
    graphs are data structures composed of individual nodes and edges linking those
    nodes. They can be used to represent all sorts of concepts, like city maps, networks
    of criminals, or even the layout of a castle. We’ll use the Kingdom Highway Map
    from the same lecture and start our search from city A—the scene of the crime.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下讲座中关于广度优先搜索的图示例子。记住，图是由单独的节点和连接这些节点的边组成的数据结构。它们可以用来表示各种概念，如城市地图、犯罪网络，甚至是城堡的布局。我们将使用讲座中提到的王国高速公路地图，从城市
    A（犯罪现场）开始我们的搜索。
- en: '![image](../images/f0091-01.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0091-01.jpg)'
- en: Depth-first search explores down one path until it hits a dead end (or a node
    it has already explored). In this way, the algorithm prioritizes exploring *deeply*
    down paths over exploring *broadly* over the options, as in breadth-first search.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 深度优先搜索沿着一条路径深入，直到遇到死胡同（或已经探索过的节点）。通过这种方式，算法优先在路径上进行*深入*探索，而不是像广度优先搜索那样在所有选项中进行*广泛*探索。
- en: '![image](../images/f0092-01.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0092-01.jpg)'
- en: Once again, we find our suspect hiding in city H—although this time we travel
    a different path during our search.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们在城市 H 找到了嫌疑人隐藏的地方——不过这次我们在搜索过程中走了不同的路径。
- en: As with breadth-first search, we avoid exploring nodes more than once by keeping
    track of previously visited nodes. This check is particularly important if you
    want to avoid falling into endless loops, checking the same nodes over and over
    again. In the above example, we avoid adding previously seen nodes (either explored
    or unexplored) to our list altogether.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 与广度优先搜索一样，我们通过跟踪之前访问过的节点来避免重复探索节点。如果你想避免陷入无尽的循环，一直检查相同的节点，这个检查尤为重要。在上面的例子中，我们完全避免将以前见过的节点（无论是已探索的还是未探索的）再次添加到列表中。
