- en: '17'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '17'
- en: DEPLOYING ACTIVE DIRECTORY
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 部署 ACTIVE DIRECTORY
- en: '![Images](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Images](../images/common.jpg)'
- en: In this chapter, you’ll take what you’ve learned over the last few chapters
    of [Part II](part2.xhtml#part2) and begin deploying services on top of your virtual
    machines. Because so many other services depend on Active Directory, you must
    first deploy an Active Directory forest and domain. The AD forest and domain will
    support your authentication and authorization needs for the remaining chapters.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将运用你在[第二部分](part2.xhtml#part2)中学到的内容，开始在虚拟机上部署服务。由于许多其他服务依赖于 Active Directory，你必须首先部署一个
    Active Directory 林和域。AD 林和域将支持你在接下来的章节中进行身份验证和授权的需求。
- en: Assuming that you already read through and provisioned the LABDC VM in the preceding
    chapter, you’ll be using that to fully automate provisioning an Active Directory
    forest, and populating it with some test users and groups.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经阅读并在前一章中配置了 LABDC 虚拟机，你将使用它来完全自动化部署 Active Directory 林，并用一些测试用户和组填充它。
- en: Prerequisites
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'You’ll use what you made in [Chapter 16](ch16.xhtml#ch16), so I’m assuming
    that you have a LABDC VM set up, built using the unattended XML, and booted up
    running Windows Server 2016\. If so, you’re good to go! If not, you can still
    mine this chapter for examples of how to automate Active Directory, but fair warning:
    you won’t be able to completely follow along.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你将使用你在[第16章](ch16.xhtml#ch16)中创建的内容，因此我假设你已经设置了一个 LABDC 虚拟机，使用无人值守的 XML 构建并启动，运行
    Windows Server 2016。如果是这样，你就可以开始了！如果不是，你仍然可以从本章中获取有关如何自动化 Active Directory 的示例，但请注意：你将无法完全跟上。
- en: As always, run the associated prerequisite Pester test to ensure that you meet
    all the prerequisites for this chapter.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，运行相关的前提条件 Pester 测试，以确保你满足本章的所有前提条件。
- en: Creating an Active Directory Forest
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个 Active Directory 林
- en: 'The good news is that, all things considered, creating an AD forest with PowerShell
    is pretty easy. When it comes down to it, you’re essentially running just two
    commands: `Install-WindowsFeature` and `Install-ADDSForest`. With these two commands,
    you can build a single forest, build a domain, and provision a Windows server
    as a domain controller.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，考虑到所有因素，使用 PowerShell 创建 AD 林其实非常简单。归根结底，你实际上只需要运行两个命令：`Install-WindowsFeature`
    和 `Install-ADDSForest`。通过这两个命令，你可以构建一个林，创建一个域，并将 Windows 服务器配置为域控制器。
- en: Because you’ll use this forest in a lab environment, you’ll also be creating
    some organizational units, users, and groups. Being in a lab environment means
    you don’t have any production objects to work with. Without going through the
    hassle of attempting to sync production AD objects with your lab, you can, instead,
    create many objects that mimic production and give you some objects to work with.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你将在实验环境中使用这个林，你还将创建一些组织单位、用户和组。处于实验环境意味着你没有任何生产对象可以使用。无需费劲地尝试将生产 AD 对象与实验环境同步，你可以创建许多模拟生产环境的对象，以便你有一些对象可以操作。
- en: Building the Forest
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建林
- en: The first thing you need to do when creating a new AD forest is to promote a
    *domain controller*, the lowest common denominator in Active Directory. To have
    a functioning AD environment, you must have at least one domain controller.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的 AD 林时，首先需要提升一个 *域控制器*，这是 Active Directory 中的最低公分母。为了拥有一个正常运行的 AD 环境，你必须至少有一个域控制器。
- en: 'Since this is a lab environment, you’ll use a single domain controller. In
    a real-world situation, you’d want at least two domain controllers for redundancy.
    However, because you have no data in your lab environment and the ability to quickly
    re-create it from scratch, you’ll use only one here. Before doing anything, you
    need to install the `AD-Domain-Services` Windows feature on your LABDC server.
    The command to install a Windows feature is `Install-WindowsFeature`:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一个实验环境，你将使用单个域控制器。在实际环境中，你希望至少有两个域控制器以确保冗余。然而，由于你的实验环境中没有数据，并且能够迅速从头开始重新创建它，因此这里只使用一个。在进行任何操作之前，你需要在
    LABDC 服务器上安装 `AD-Domain-Services` Windows 功能。安装 Windows 功能的命令是 `Install-WindowsFeature`：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: PS> 'P@$$w0rd12' | ConvertTo-SecureString -Force -AsPlainText
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: PS> 'P@$$w0rd12' | ConvertTo-SecureString -Force -AsPlainText
- en: '| Export-Clixml -Path C:\PowerLab\SafeModeAdministratorPassword.xml'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '| Export-Clixml -Path C:\PowerLab\SafeModeAdministratorPassword.xml'
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: PS> $safeModePw = Import-CliXml -Path C:\PowerLab\
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: PS> $safeModePw = Import-CliXml -Path C:\PowerLab\
- en: SafeModeAdministratorPassword.xml
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: SafeModeAdministratorPassword.xml
- en: PS> $cred = Import-CliXml -Path C:\PowerLab\VMCredential.xml
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: PS> $cred = Import-CliXml -Path C:\PowerLab\VMCredential.xml
- en: PS> $forestParams = @{
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: PS> $forestParams = @{
- en: '>>> DomainName                    = ''powerlab.local'' ❶'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> DomainName                    = ''powerlab.local'' ❶'
- en: '>>> DomainMode                    = ''WinThreshold'' ❷'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> DomainMode                    = ''WinThreshold'' ❷'
- en: '>>> ForestMode                    = ''WinThreshold'''
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> ForestMode                    = ''WinThreshold'''
- en: '>>> Confirm                       = $false ❸'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> Confirm                       = $false ❸'
- en: '>>> SafeModeAdministratorPassword = $safeModePw ❹'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> SafeModeAdministratorPassword = $safeModePw ❹'
- en: '>>> WarningAction                 = ''Ignore ❺'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> WarningAction                 = ''Ignore ❺'
- en: '>>>}'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '>>>}'
- en: PS> Invoke-Command -VMName 'LABDC' -Credential $cred -ScriptBlock { $null =
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: PS> Invoke-Command -VMName 'LABDC' -Credential $cred -ScriptBlock { $null =
- en: Install-ADDSForest @using:forestParams }
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Install-ADDSForest @using:forestParams }
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: function New-PowerLabActiveDirectoryForest {
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: function New-PowerLabActiveDirectoryForest {
- en: param(
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: param(
- en: '[Parameter(Mandatory)]'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[Parameter(Mandatory)]'
- en: '[pscredential]$Credential,'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[pscredential]$Credential,'
- en: '[Parameter(Mandatory)]'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[Parameter(Mandatory)]'
- en: '[string]$SafeModePassword,'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[string]$SafeModePassword,'
- en: '[Parameter()]'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[Parameter()]'
- en: '[string]$VMName = ''LABDC'','
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[string]$VMName = ''LABDC'','
- en: '[Parameter()]'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[Parameter()]'
- en: '[string]$DomainName = ''powerlab.local'','
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[string]$DomainName = ''powerlab.local'','
- en: '[Parameter()]'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[Parameter()]'
- en: '[string]$DomainMode = ''WinThreshold'','
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[string]$DomainMode = ''WinThreshold'','
- en: '[Parameter()]'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[Parameter()]'
- en: '[string]$ForestMode = ''WinThreshold'''
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[string]$ForestMode = ''WinThreshold'''
- en: )
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: )
- en: Invoke-Command -VMName $VMName -Credential $Credential -ScriptBlock {
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Invoke-Command -VMName $VMName -Credential $Credential -ScriptBlock {
- en: Install-windowsfeature -Name AD-Domain-Services
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Install-windowsfeature -Name AD-Domain-Services
- en: $forestParams = @{
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $forestParams = @{
- en: DomainName                    = $using:DomainName
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: DomainName                    = $using:DomainName
- en: DomainMode                    = $using:DomainMode
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: DomainMode                    = $using:DomainMode
- en: ForestMode                    = $using:ForestMode
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ForestMode                    = $using:ForestMode
- en: Confirm                       = $false
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Confirm                       = $false
- en: SafeModeAdministratorPassword = (ConvertTo-SecureString
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: SafeModeAdministratorPassword = (ConvertTo-SecureString
- en: '-AsPlainText -String $using:'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '-AsPlainText -String $using:'
- en: SafeModePassword -Force)
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: SafeModePassword -Force)
- en: WarningAction                 = 'Ignore'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: WarningAction                 = 'Ignore'
- en: '}'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: $null = Install-ADDSForest @forestParams
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $null = Install-ADDSForest @forestParams
- en: '}'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: PS> $safeModePw = Import-CliXml -Path C:\PowerLab\SafeModeAdministratorPassword.xml
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: PS> $safeModePw = Import-CliXml -Path C:\PowerLab\SafeModeAdministratorPassword.xml
- en: PS> $cred = Import-CliXml -Path C:\PowerLab\VMCredential.xml
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: PS> $cred = Import-CliXml -Path C:\PowerLab\VMCredential.xml
- en: PS> New-PowerLabActiveDirectoryForest -Credential $cred -SafeModePassword $safeModePw
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: PS> New-PowerLabActiveDirectoryForest -Credential $cred -SafeModePassword $safeModePw
- en: '[PRE5]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: PS> Get-Credential | Export-CliXml -Path C:\PowerLab\DomainCredential.xml
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: PS> Get-Credential | Export-CliXml -Path C:\PowerLab\DomainCredential.xml
- en: '[PRE6]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: function Test-PowerLabActiveDirectoryForest {
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: function Test-PowerLabActiveDirectoryForest {
- en: param(
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: param(
- en: '[Parameter(Mandatory)]'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[Parameter(Mandatory)]'
- en: '[pscredential]$Credential,'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[pscredential]$Credential,'
- en: '[Parameter()]'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[Parameter()]'
- en: '[string]$VMName = ''LABDC'''
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[string]$VMName = ''LABDC'''
- en: )
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: )
- en: Invoke-Command -Credential $Credential -ScriptBlock {Get-AdUser -Filter * }
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Invoke-Command -Credential $Credential -ScriptBlock {Get-AdUser -Filter * }
- en: '}'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE7]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: PS> Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\PowerLab\
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: PS> Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\PowerLab\
- en: ActiveDirectoryObjects.xlsx' -WorksheetName Users | Format-Table -AutoSize
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: ActiveDirectoryObjects.xlsx' -WorksheetName Users | Format-Table -AutoSize
- en: OUName         UserName   FirstName LastName  MemberOf
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: OUName         UserName   FirstName LastName  MemberOf
- en: '------         --------   --------- --------  --------'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '------         --------   --------- --------  --------'
- en: PowerLab Users jjones     Joe       Jones     Accounting
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 用户 jjones     Joe       Jones     会计
- en: PowerLab Users abertram   Adam      Bertram   Accounting
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 用户 abertram   Adam      Bertram   会计
- en: PowerLab Users jhicks     Jeff      Hicks     Accounting
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 用户 jhicks     Jeff      Hicks     会计
- en: PowerLab Users dtrump     Donald    Trump     Human Resources
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 用户 dtrump     Donald    Trump     人力资源
- en: PowerLab Users alincoln   Abraham   Lincoln   Human Resources
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 用户 alincoln   Abraham   Lincoln   人力资源
- en: PowerLab Users bobama     Barack    Obama     Human Resources
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 用户 bobama     Barack    Obama     人力资源
- en: PowerLab Users tjefferson Thomas    Jefferson IT
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 用户 tjefferson Thomas    Jefferson IT
- en: PowerLab Users bclinton   Bill      Clinton   IT
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 用户 bclinton   Bill      Clinton   IT
- en: PowerLab Users gbush      George    Bush      IT
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 用户 gbush      George    Bush      IT
- en: PowerLab Users rreagan    Ronald    Reagan    IT
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 用户 rreagan    Ronald    Reagan    IT
- en: PS> Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\PowerLab\
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: PS> Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\PowerLab\
- en: ActiveDirectoryObjects.xlsx' -WorksheetName Groups | Format-Table -AutoSize
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: ActiveDirectoryObjects.xlsx' -WorksheetName Groups | Format-Table -AutoSize
- en: OUName          GroupName       Type
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: OUName          GroupName       Type
- en: '------          ---------       ----'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '------          ---------       ----'
- en: PowerLab Groups Accounting      DomainLocal
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 组 会计      DomainLocal
- en: PowerLab Groups Human Resources DomainLocal
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 组 人力资源 DomainLocal
- en: PowerLab Groups IT              DomainLocal
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab 组 IT              DomainLocal
- en: '[PRE8]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Get-ADOrganizationalUnit -Filter "Name -eq 'OUName'" ❶
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Get-ADOrganizationalUnit -Filter "Name -eq 'OUName'" ❶
- en: New-ADOrganizationalUnit -Name OUName ❷
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: New-ADOrganizationalUnit -Name OUName ❷
- en: Get-ADGroup -Filter "Name -eq 'GroupName'" ❸
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Get-ADGroup -Filter "Name -eq 'GroupName'" ❸
- en: New-ADGroup -Name $group.GroupName -GroupScope GroupScope -Path "OU=$group.OUName,DC=powerlab,DC=local"
    ❹
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: New-ADGroup -Name $group.GroupName -GroupScope GroupScope -Path "OU=$group.OUName,DC=powerlab,DC=local"
    ❹
- en: Get-ADUser -Filter "Name -eq 'UserName'" ❺
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Get-ADUser -Filter "Name -eq 'UserName'" ❺
- en: New-ADUser -Name $user.UserName -Path "OU=$($user.OUName),DC=powerlab,DC=local"
    ❻
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: New-ADUser -Name $user.UserName -Path "OU=$($user.OUName),DC=powerlab,DC=local"
    ❻
- en: UserName -in (Get-ADGroupMember -Identity GroupName).Name ❼
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: UserName -in (Get-ADGroupMember -Identity GroupName).Name ❼
- en: Add-ADGroupMember -Identity GroupName -Members UserName ❽
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Add-ADGroupMember -Identity GroupName -Members UserName ❽
- en: '[PRE9]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: if (-not (Get-ADOrganizationalUnit -Filter "Name -eq 'OUName'")) {
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 (-not (Get-ADOrganizationalUnit -Filter "Name -eq 'OUName'")) {
- en: New-ADOrganizationalUnit -Name OUName
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: New-ADOrganizationalUnit -Name OUName
- en: '}'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: if (-not (Get-ADGroup -Filter "Name -eq 'GroupName'")) {
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 (-not (Get-ADGroup -Filter "Name -eq 'GroupName'")) {
- en: New-ADGroup -Name GroupName -GroupScope GroupScope -Path "OU=OUName,DC=powerlab,DC=local"
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: New-ADGroup -Name GroupName -GroupScope GroupScope -Path "OU=OUName,DC=powerlab,DC=local"
- en: '}'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: if (-not (Get-ADUser -Filter "Name -eq 'UserName'")) {
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 (-not (Get-ADUser -Filter "Name -eq 'UserName'")) {
- en: New-ADUser -Name $user.UserName -Path "OU=OUName,DC=powerlab,DC=local"
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: New-ADUser -Name $user.UserName -Path "OU=OUName,DC=powerlab,DC=local"
- en: '}'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: if (UserName -notin (Get-AdGroupMember -Identity GroupName).Name) {
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 (UserName -notin (Get-AdGroupMember -Identity GroupName).Name) {
- en: Add-ADGroupMember -Identity GroupName -Members UserName
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Add-ADGroupMember -Identity GroupName -Members UserName
- en: '}'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE10]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: $users = Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: $users = Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\
- en: PowerLab\ActiveDirectoryObjects.xlsx' -WorksheetName Users
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab\ActiveDirectoryObjects.xlsx' -WorksheetName Users
- en: $groups = Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: $groups = Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\
- en: PowerLab\ActiveDirectoryObjects.xlsx' -WorksheetName Groups
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: PowerLab\ActiveDirectoryObjects.xlsx' -WorksheetName Groups
- en: foreach ($group in $groups) {
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历 ($group 在 $groups 中) {
- en: '}'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: foreach ($user in $users) {
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历 ($user 在 $users 中) {
- en: '}'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE11]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: $users = Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\PowerLab\
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: $users = Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\PowerLab\
- en: ActiveDirectoryObjects.xlsx' -WorksheetName Users
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: ActiveDirectoryObjects.xlsx' -WorksheetName Users
- en: $groups = Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\PowerLab\
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: $groups = Import-Excel -Path 'C:\Program Files\WindowsPowerShell\Modules\PowerLab\
- en: ActiveDirectoryObjects.xlsx' -WorksheetName Groups
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: ActiveDirectoryObjects.xlsx' -WorksheetName Groups
- en: foreach ($group in $groups) {
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历 ($group 在 $groups 中) {
- en: if (-not (Get-ADOrganizationalUnit -Filter "Name -eq '$($group.OUName)'")) {
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 (-not (Get-ADOrganizationalUnit -Filter "Name -eq '$($group.OUName)'")) {
- en: New-ADOrganizationalUnit -Name $group.OUName
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: New-ADOrganizationalUnit -Name $group.OUName
- en: '}'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: if (-not (Get-ADGroup -Filter "Name -eq '$($group.GroupName)'")) {
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 (-not (Get-ADGroup -Filter "Name -eq '$($group.GroupName)'")) {
- en: New-ADGroup -Name $group.GroupName -GroupScope $group.Type
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: New-ADGroup -Name $group.GroupName -GroupScope $group.Type
- en: -Path "OU=$($group.OUName),DC=powerlab,DC=local"
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: -Path "OU=$($group.OUName),DC=powerlab,DC=local"
- en: '}'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: foreach ($user in $users) {
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历 ($user 在 $users 中) {
- en: if (-not (Get-ADOrganizationalUnit -Filter "Name -eq '$($user.OUName)'")) {
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 (-not (Get-ADOrganizationalUnit -Filter "Name -eq '$($user.OUName)'")) {
- en: New-ADOrganizationalUnit -Name $user.OUName
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: New-ADOrganizationalUnit -Name $user.OUName
- en: '}'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: if (-not (Get-ADUser -Filter "Name -eq '$($user.UserName)'")) {
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 (-not (Get-ADUser -Filter "Name -eq '$($user.UserName)'")) {
- en: New-ADUser -Name $user.UserName -Path "OU=$($user.OUName),DC=powerlab,DC=local"
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: New-ADUser -Name $user.UserName -Path "OU=$($user.OUName),DC=powerlab,DC=local"
- en: '}'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: if ($user.UserName -notin (Get-ADGroupMember -Identity $user.MemberOf).Name)
    {
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 ($user.UserName -notin (Get-ADGroupMember -Identity $user.MemberOf).Name)
    {
- en: Add-ADGroupMember -Identity $user.MemberOf -Members $user.UserName
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: Add-ADGroupMember -Identity $user.MemberOf -Members $user.UserName
- en: '}'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE12]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: context 'Domain' {
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文 '域' {
- en: ❶ $domain = Invoke-Command -Session $session -ScriptBlock { Get-AdDomain }
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: ❶ $domain = Invoke-Command -Session $session -ScriptBlock { Get-AdDomain }
- en: $forest = Invoke-Command -Session $session -ScriptBlock { Get-AdForest }
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $forest = Invoke-Command -Session $session -ScriptBlock { Get-AdForest }
- en: ❷ it "the domain mode should be Windows2016Domain" {
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: ❷ 它 "域模式应为 Windows2016Domain" {
- en: $domain.DomainMode | should be 'Windows2016Domain'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $domain.DomainMode | 应该是 'Windows2016Domain'
- en: '}'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: it "the forest mode should be WinThreshold" {
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它 "林模式应为 WinThreshold" {
- en: $forest.ForestMode | should be 'Windows2016Forest'
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $forest.ForestMode | 应该是 'Windows2016Forest'
- en: '}'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: it "the domain name should be powerlab.local" {
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它 "域名应为 powerlab.local" {
- en: $domain.Name | should be 'powerlab'
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $domain.Name | 应该是 'powerlab'
- en: '}'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE13]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Describing Active Directory Forest
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 描述 Active Directory 林
- en: Context Domain
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文 域
- en: '[+] the domain mode should be Windows2016Domain 933ms'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 域模式应为 Windows2016Domain 933ms'
- en: '[+] the forest mode should be WinThreshold 25ms'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 林模式应为 WinThreshold 25ms'
- en: '[+] the domain name should be powerlab.local 41ms'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 域名应该是powerlab.local 41ms'
- en: Context Organizational Units
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文 组织单位
- en: '[+] the OU [PowerLab Users] should exist 85ms'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] OU[PowerLab Users]应该存在 85ms'
- en: '[+] the OU [PowerLab Groups] should exist 37ms'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] OU[PowerLab Groups]应该存在 37ms'
- en: Context Users
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文 用户
- en: '[+] the user [jjones] should exist 74ms'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[jjones]应该存在 74ms'
- en: '[+] the user [jjones] should be in the [PowerLab Users] OU 35ms'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[jjones]应该在[PowerLab Users] OU中 35ms'
- en: '[+] the user [jjones] should be in the [Accounting] group 121ms'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[jjones]应该在[Accounting]组中 121ms'
- en: '[+] the user [abertram] should exist 39ms'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[abertram]应该存在 39ms'
- en: '[+] the user [abertram] should be in the [PowerLab Users] OU 30ms'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[abertram]应该在[PowerLab Users] OU中 30ms'
- en: '[+] the user [abertram] should be in the [Accounting] group 80ms'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[abertram]应该在[Accounting]组中 80ms'
- en: '[+] the user [jhicks] should exist 39ms'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[jhicks]应该存在 39ms'
- en: '[+] the user [jhicks] should be in the [PowerLab Users] OU 32ms'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[jhicks]应该在[PowerLab Users] OU中 32ms'
- en: '[+] the user [jhicks] should be in the [Accounting] group 81ms'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[jhicks]应该在[Accounting]组中 81ms'
- en: '[+] the user [dtrump] should exist 45ms'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[dtrump]应该存在 45ms'
- en: '[+] the user [dtrump] should be in the [PowerLab Users] OU 40ms'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[dtrump]应该在[PowerLab Users] OU中 40ms'
- en: '[+] the user [dtrump] should be in the [Human Resources] group 84ms'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[dtrump]应该在[Human Resources]组中 84ms'
- en: '[+] the user [alincoln] should exist 41ms'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[alincoln]应该存在 41ms'
- en: '[+] the user [alincoln] should be in the [PowerLab Users] OU 40ms'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[alincoln]应该在[PowerLab Users] OU中 40ms'
- en: '[+] the user [alincoln] should be in the [Human Resources] group 125ms'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[alincoln]应该在[Human Resources]组中 125ms'
- en: '[+] the user [bobama] should exist 44ms'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[bobama]应该存在 44ms'
- en: '[+] the user [bobama] should be in the [PowerLab Users] OU 27ms'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[bobama]应该在[PowerLab Users] OU中 27ms'
- en: '[+] the user [bobama] should be in the [Human Resources] group 92ms'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[bobama]应该在[Human Resources]组中 92ms'
- en: '[+] the user [tjefferson] should exist 58ms'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '[+] 用户[tjefferson]应该存在 58ms'
- en: '[+] the user [tjefferson] should be in the [PowerLab Users] OU 33ms'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[tjefferson]应该在[PowerLab Users] OU中 33ms'
- en: '[+] the user [tjefferson] should be in the [IT] group 73ms'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[tjefferson]应该在[IT]组中 73ms'
- en: '[+] the user [bclinton] should exist 47ms'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[bclinton]应该存在 47ms'
- en: '[+] the user [bclinton] should be in the [PowerLab Users] OU 29ms'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[bclinton]应该在[PowerLab Users] OU中 29ms'
- en: '[+] the user [bclinton] should be in the [IT] group 84ms'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[bclinton]应该在[IT]组中 84ms'
- en: '[+] the user [gbush] should exist 50ms'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[gbush]应该存在 50ms'
- en: '[+] the user [gbush] should be in the [PowerLab Users] OU 33ms'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[gbush]应该在[PowerLab Users] OU中 33ms'
- en: '[+] the user [gbush] should be in the [IT] group 78ms'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[gbush]应该在[IT]组中 78ms'
- en: '[+] the user [rreagan] should exist 56ms'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[rreagan]应该存在 56ms'
- en: '[+] the user [rreagan] should be in the [PowerLab Users] OU 30ms'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[rreagan]应该在[PowerLab Users] OU中 30ms'
- en: '[+] the user [rreagan] should be in the [IT] group 78ms'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 用户[rreagan]应该在[IT]组中 78ms'
- en: Context Groups
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文 组
- en: '[+] the group [Accounting] should exist 71ms'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 组[Accounting]应该存在 71ms'
- en: '[+] the group [Accounting] should be in the [PowerLab Groups] OU 42ms'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 组[Accounting]应该在[PowerLab Groups] OU中 42ms'
- en: '[+] the group [Human Resources] should exist 48ms'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 组[Human Resources]应该存在 48ms'
- en: '[+] the group [Human Resources] should be in the [PowerLab Groups] OU 29ms'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 组[Human Resources]应该在[PowerLab Groups] OU中 29ms'
- en: '[+] the group [IT] should exist 51ms'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 组[IT]应该存在 51ms'
- en: '[+] the group [IT] should be in the [PowerLab Groups] OU 31ms'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[+] 组[IT]应该在[PowerLab Groups] OU中 31ms'
- en: '```'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Summary
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you took the next step in the creation of your PowerLab and
    added an Active Directory forest before populating it with several objects. You
    did this both manually and automatically, and in the process, reviewed some of
    what you had learned about Active Directory in previous chapters. Lastly, you
    dived a little deeper into Pester testing, taking a closer look at how to build
    custom tests that suit your needs. In the next chapter, you’ll continue with the
    PowerLab project and learn how to automate installing and configuring a SQL server.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你在创建PowerLab的过程中迈出了下一步，添加了一个Active Directory森林，并在其中填充了多个对象。你既进行了手动操作，也进行了自动操作，在这个过程中复习了一些你在前几章中学到的关于Active
    Directory的内容。最后，你深入了解了Pester测试，仔细研究了如何构建符合你需求的自定义测试。在下一章中，你将继续PowerLab项目，学习如何自动化安装和配置SQL服务器。
