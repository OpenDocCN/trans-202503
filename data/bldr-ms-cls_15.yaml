- en: Chapter 15. Going Further
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第15章：进一步发展
- en: In this chapter, we look at some possible additions to the final projects, potential
    ways to develop them, and where to find the information on how to do so. Both
    Blender and GIMP have many uses beyond those discussed in this book. But as a
    full 3D animation suite, Blender has a number of features that we haven’t had
    time to examine, so I’ll concentrate on how we can use Blender to take our projects
    further.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨一些可能的添加项，如何进一步开发它们以及在哪里找到相关的操作信息。Blender和GIMP有许多超出本书讨论范围的用途。作为一个完整的3D动画套件，Blender拥有一些我们尚未有时间深入研究的功能，因此我将专注于如何利用Blender进一步完善我们的项目。
- en: For example, one Blender feature we can use to expand the projects is the Armature
    object, which gives models a kind of skeleton that allows them to be moved or
    posed. The process of creating an armature for a model and setting up the connections
    that make the armature control the mesh is known as *rigging*, and the resulting
    armature is known as a *rig*. Rigging can be complex. Covering it in full is well
    beyond the scope of this book, but I will briefly review the principles of rigging
    the Spider Bot. Once you have rigged your creations, you can animate them using
    Blender’s animation tools. Like rigging, animation is a topic that would take
    a book of its own to cover, so I’ll just suggest some ideas, as well as resources
    for further reading.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以使用Blender的一个功能来扩展项目，那就是骨架物体，它为模型提供了一种骨架，使其能够进行移动或摆姿势。为模型创建骨架并设置连接，使骨架控制网格的过程被称为*绑定*，而生成的骨架则称为*绑定骨架*。绑定可能会很复杂，全面讲解这个过程超出了本书的范围，但我会简要回顾如何为蜘蛛机器人进行绑定。一旦你为创作物体进行了绑定，你就可以使用Blender的动画工具来为它们制作动画。像绑定一样，动画是一个足以成书的主题，因此我将简单地提供一些想法，并推荐一些进一步阅读的资源。
- en: But first, let’s look at some simple ways to add extra details to the projects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 但首先，让我们看一些简单的方法，来为项目添加额外的细节。
- en: Embellishments
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 装饰
- en: It’s often difficult to find the point where you’re finally ready to call a
    project finished. Sometimes a project is just missing something—certain details
    or additional objects that would allow you to get extra mileage out of your creation.
    To that end, here are some ideas for extras we could add to the projects.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 有时很难找到一个恰当的时机，决定项目已经完成。有时，一个项目就差点什么——某些细节或额外的物体，能够让你的创作更加出色。为此，以下是一些我们可以为项目添加的额外内容的想法。
- en: Adding to the Jungle Temple
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为丛林神庙添加内容
- en: 'The Jungle Temple scene already has a lot going on, but the color scheme is
    pretty simple. One way to dress it up would be to create a few flowering plants
    to add a splash of color here and there. I used face duplication (a way to duplicate
    one object over the faces of another) to add some flowers to the IvyGen mesh,
    and I increased the number of leaves to make the plant life more interesting.
    I created a new “branch” object consisting of a few leaves and flowers and then
    replaced the faces in the original leaf mesh with an instance of this object.
    Conveniently, this branch object also renders quickly: Cycles recognizes that
    each instance of the duplicated branch shares the same mesh data, so it stores
    the object only once, keeping the memory requirements for rendering reasonably
    low.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 丛林神庙场景已经有很多元素，但配色方案相对简单。提升场景的一个方法是创建一些开花植物，随意地点缀一些颜色。我使用了面复制（这是一种将一个物体复制到另一个物体的面上）为IvyGen网格添加了一些花朵，并增加了叶子的数量，使植物生命看起来更有趣。我创建了一个新的“树枝”物体，它由一些叶子和花朵组成，然后用这个物体的实例替换了原始叶子网格中的面。方便的是，这个树枝物体的渲染也很快速：Cycles引擎识别到每个复制的树枝实例共享相同的网格数据，因此它只存储一次物体，保持渲染时的内存需求合理低。
- en: Creating the Branch Object
  id: totrans-8
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建树枝物体
- en: 'To create a branch, I began by subdividing a plane and giving it a slightly
    curved shape. This formed the basis of my leaf, which I duplicated a few times
    and arranged in an arching group of five leaves. I created a flower using a five-vertex
    circle, which I then filled in and extruded out to create the petals. Next, I
    unwrapped the flower and the leaf. I used the same texture and material for the
    leaves of the branch as before. For the flower, I used a flower photo from CGTextures.
    I created a texture and material from it as I had done for the leaves. I also
    modeled some basic twigs for the new leaves to attach to by creating a cube and
    extruding from it to roughly line up with the leaves. In the end, I created two
    branch objects: one with flowers and one without, as shown in [Figure 15-1](ch15.html#branch_objects_i_used_to_increase_the_co
    "Figure 15-1. The branch objects I used to increase the complexity of the foliage
    in the Jungle Temple. Above: The branch objects in the 3D Viewport. Below: The
    branch objects rendered.").'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建一个分支，我首先细分了一个平面并赋予它一个稍微弯曲的形状。这形成了我的叶子的基础，我复制了几次并将它们排列成一个拱形的五片叶子组合。我用一个五个顶点的圆形创建了一个花朵，接着填充并拉伸它以创建花瓣。然后，我展开了花朵和叶子的UV。我为分支的叶子使用了之前相同的纹理和材质。对于花朵，我使用了来自CGTextures的花朵照片。我像之前做叶子时一样，创建了花朵的纹理和材质。我还通过创建一个立方体并从中挤出一些基本的枝条模型，为新叶子附着的枝条做了建模。最终，我创建了两个分支物体：一个带花，一个不带花，如[图15-1](ch15.html#branch_objects_i_used_to_increase_the_co
    "图15-1。 我用来增加丛林神庙中植被复杂度的分支物体。上图：3D视图中的分支物体。下图：渲染出的分支物体。")所示。
- en: '![The branch objects I used to increase the complexity of the foliage in the
    Jungle Temple. Above: The branch objects in the 3D Viewport. Below: The branch
    objects rendered.](httpatomoreillycomsourcenostarchimages1538894.png.jpg)Figure 15-1. The
    branch objects I used to increase the complexity of the foliage in the Jungle
    Temple. Above: The branch objects in the 3D Viewport. Below: The branch objects
    rendered.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![我用来增加丛林神庙中植被复杂度的分支物体。上图：3D视图中的分支物体。下图：渲染出的分支物体。](httpatomoreillycomsourcenostarchimages1538894.png.jpg)图15-1。
    我用来增加丛林神庙中植被复杂度的分支物体。上图：3D视图中的分支物体。下图：渲染出的分支物体。'
- en: Duplicating with Face Duplication
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用面复制进行复制
- en: To use the branch object to create some extra foliage, I turned on Face Duplication
    in the Duplication panel, which you can find in the Object tab of the Properties
    editor. To duplicate a branch, I parented it (selecting the branch, then the IvyGen
    mesh, and hitting CTRL-P) to the IvyGen leaf mesh. Then, I set the duplication
    type to Faces in the Duplication panel. This created a duplicate of the branch
    object for each face of the IvyGen mesh.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用分支物体创建一些额外的植被，我在复制面板中启用了面复制功能，该面板可以在属性编辑器的物体标签中找到。为了复制一个分支，我将它设为父物体（选择分支，然后选择IvyGen网格，并按CTRL-P）到IvyGen叶片网格。接着，我将复制类型设置为“面”，这样每个IvyGen网格的面都会创建一个分支物体的副本。
- en: The objects must have the same origin or the duplicates will be offset from
    the parent mesh, so I selected my branch object and snapped my cursor to it (SHIFT-S▸Cursor
    to Selection). Next, I selected the IvyGen leaf mesh, clicked Origin operator
    in the 3D Viewport Tool Shelf, and selected Origin to 3D Cursor, giving the two
    objects the same origin.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 物体必须具有相同的原点，否则复制体将会从父网格偏移，因此我选择了我的分支物体，并将光标对准它（SHIFT-S▸光标对齐选择）。接下来，我选择了IvyGen叶片网格，点击3D视图工具架中的原点操作符，并选择“原点对准3D光标”，从而使这两个物体具有相同的原点。
- en: Face duplication allows each duplicate to inherit the scale of the face it is
    duplicated from. I took advantage of this by enabling Scale in the Duplication
    panel and then adding some random variation to the scale of the IvyGen faces.
    To do so, I used Select▸Random in Edit mode to select a random sample of the faces
    in the mesh. Next, I scaled them down slightly with the Pivot Point set to Individual
    Faces in the 3D Viewport header (so the faces would scale down toward their centers).
    This scaled down a random selection of the faces. Then, I repeated the process—this
    time selecting different faces—and scaled them up a bit.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 面复制允许每个复制体继承其复制来源面的缩放。我利用这一点，通过在复制面板中启用缩放功能，然后为IvyGen面添加了一些随机的缩放变化。为了做到这一点，我在编辑模式下使用“选择▸随机”命令来随机选择网格中的面。接下来，我稍微缩小了它们，旋转中心设置为3D视图头部中的“单独面”选项（这样这些面会向它们的中心缩放）。这缩小了随机选择的面。然后，我重复了这个过程——这次选择了不同的面——并将它们稍微放大了一些。
- en: To create a mix between the two branch objects, I split the IvyGen mesh by selecting
    it, switching to Edit mode, and setting the selection method to Faces from the
    3D Viewport header. Then, I used Select▸Random—again choosing 20 percent of the
    faces in the mesh (you can adjust the percentage in the Tool Options panel of
    the Tool Shelf)—and pressed **P** to part them from the mesh and turn them into
    their own object. Next, I parented the branch without flowers to the original
    IvyGen object and the branch with flowers to the new one, creating some branches
    with flowers and some without. The result is shown in [Figure 15-2](ch15.html#increasing_the_number_of_leaves_by_dupli
    "Figure 15-2. Increasing the number of leaves by duplicating multiple branch objects
    for each original face in the IvyGen leaf mesh").
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建两个分支对象之间的混合，我首先通过选择IvyGen网格，切换到编辑模式，并设置选择方式为“面”（在3D视口头部），将IvyGen网格分割开。然后，我使用了选择▸随机—再次选择网格中20%的面（可以在工具选项面板中调整百分比）—并按**P**将它们从网格中分离出来，变成独立的对象。接下来，我将没有花的分支父级绑定到原始的IvyGen对象，将有花的分支绑定到新的对象，从而创建了部分有花的分支和部分没有花的分支。结果如[图15-2](ch15.html#increasing_the_number_of_leaves_by_dupli
    "图15-2. 通过为每个原始面复制多个分支对象，增加IvyGen叶网格中的叶片数量")所示。
- en: Creating Pebbles
  id: totrans-16
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建卵石
- en: To give the ground in the scene a little more variation, I used another particle
    system to scatter pebbles on the ground. I created a group of pebble objects,
    as I did for the grass. Then, I added a new particle system to the ground, setting
    it up similarly to the grass system. This time, though, I used Simple Child particles
    to scatter the pebbles in small clusters around the scene. [Figure 15-3](ch15.html#render_of_the_jungle_temple_scene_with_s
    "Figure 15-3. A render of the Jungle Temple scene with some extra features added")
    shows a render of the scene with the addition of the extra foliage and the pebbles.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了给场景中的地面增加一些变化，我使用了另一个粒子系统来将卵石散布到地面上。我创建了一组卵石对象，就像为草地创建的那样。然后，我在地面上添加了一个新的粒子系统，设置方式与草地系统类似。不过这次，我使用了简单子粒子将卵石分散成小簇，分布在场景中。[图15-3](ch15.html#render_of_the_jungle_temple_scene_with_s
    "图15-3. 带有附加特性的丛林神庙场景渲染图")展示了增加额外植物和卵石后的场景渲染效果。
- en: '![Increasing the number of leaves by duplicating multiple branch objects for
    each original face in the IvyGen leaf mesh](httpatomoreillycomsourcenostarchimages1538896.png.jpg)Figure 15-2. Increasing
    the number of leaves by duplicating multiple branch objects for each original
    face in the IvyGen leaf mesh'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '![通过为每个原始面复制多个分支对象，增加IvyGen叶网格中的叶片数量](httpatomoreillycomsourcenostarchimages1538896.png.jpg)图15-2.
    通过为每个原始面复制多个分支对象，增加IvyGen叶网格中的叶片数量'
- en: Adding to the Bat Creature
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加蝙蝠生物
- en: I decided that the Bat Creature might benefit from having something to stand
    on, so I created a rocky plinth to give him a platform. I also experimented with
    adding a wispy cloud around his feet.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我决定蝙蝠生物可能需要一个站立的平台，所以我创建了一个岩石基座来给它提供平台。我还尝试在它的脚下加上一些飘渺的云雾。
- en: '![A render of the Jungle Temple scene with some extra features added](httpatomoreillycomsourcenostarchimages1538898.png.jpg)Figure 15-3. A
    render of the Jungle Temple scene with some extra features added'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '![带有附加特性的丛林神庙场景渲染图](httpatomoreillycomsourcenostarchimages1538898.png.jpg)图15-3.
    带有附加特性的丛林神庙场景渲染图'
- en: Creating the Rock
  id: totrans-22
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建岩石
- en: To create the platform (a rock), I first modeled a rough shape by scaling and
    extruding out from a cube. Next, I used Blender’s sculpt tools and a Multiresolution
    modifier to sculpt this rough shape into a rocky one. The Clay Tubes and Scrape
    Flat brush from [Chapter 6](ch06.html "Chapter 6. Sculpting") were particularly
    useful for this purpose (see [Figure 15-4](ch15.html#creating_the_rock_for_the_bat_creature_t
    "Figure 15-4. Creating the rock for the Bat Creature to stand on")). I used the
    seamless rock texture from [Chapter 11](ch11.html "Chapter 11. Texture Painting")
    (that I created for the Jungle Temple project) on top of the sculpted details
    as a displacement map.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建平台（一个岩石），我首先通过缩放和从立方体挤出建模了一个粗略的形状。接着，我使用了Blender的雕刻工具和一个多分辨率修改器，将这个粗略的形状雕刻成一个岩石的形状。[第6章](ch06.html
    "第6章. 雕刻")中的Clay Tubes和Scrape Flat画笔在这个过程中非常有用（请参见[图15-4](ch15.html#creating_the_rock_for_the_bat_creature_t
    "图15-4. 为蝙蝠生物创造岩石平台")）。我将[第11章](ch11.html "第11章. 纹理绘制")中（为丛林神庙项目创建的）无缝岩石纹理作为位移贴图，应用于雕刻的细节之上。
- en: I made a material for the rock using the same rock textures I created in [Chapter 11](ch11.html
    "Chapter 11. Texture Painting"), and I added another light behind the rock to
    light up its top rim from the camera’s perspective. I set this light to This Layer
    Only in the Lamps settings so that it would light only the rock, which was on
    its own layer along with the lamp. I then shifted the camera down slightly and
    angled it up to give a different perspective on the Bat Creature, and I adjusted
    the positions of his feet to make him stand on the rock correctly.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我为岩石创建了一个材质，使用了我在[第11章](ch11.html "第11章. 纹理绘制")中创建的相同岩石纹理，并在岩石后面添加了另一盏灯，以从相机的角度照亮它的顶部边缘。我将这个灯设置为“仅此图层”模式，这样它就只会照亮岩石，而岩石和灯具在同一图层上。接着，我稍微将相机向下移动并稍微调整了角度，以便从不同的视角展示蝙蝠生物，并调整了它的脚的位置，使它能够正确地站在岩石上。
- en: '![Creating the rock for the Bat Creature to stand on](httpatomoreillycomsourcenostarchimages1538900.png.jpg)Figure 15-4. Creating
    the rock for the Bat Creature to stand on'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '![为蝙蝠生物创建站立的岩石](httpatomoreillycomsourcenostarchimages1538900.png.jpg)图 15-4. 为蝙蝠生物创建站立的岩石'
- en: Adding Clouds
  id: totrans-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 添加云朵
- en: To complement the mood of the image, I added some clouds around the rock. Blender
    has some fantastic tools for rendering volumetric materials like clouds. A full
    discussion would require its own chapter, but thankfully for our purposes, it’s
    simple enough to say that a terrific add-on called Cloud Generator will do most
    of the work. Enable the addon from the User Preferences editor.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了配合图像的氛围，我在岩石周围添加了一些云朵。Blender 提供了很棒的工具来渲染体积材质，如云朵。要详细讨论这些内容将需要独立的章节，但幸运的是，对于我们的目的来说，简单地说，名为“云生成器”的优秀插件能够完成大部分工作。从用户偏好设置中启用该插件。
- en: To use the Cloud Generator script, I first sketched the rough volume of my cloud
    using cubes. Then, I used the Generate Cloud button, which can be found in the
    Tool Shelf, to automatically generate cloud objects with the rough shape of the
    cube objects selected and to set up appropriate materials (see [Figure 15-5](ch15.html#creating_clouds_with_the_cloud_generator
    "Figure 15-5. Creating clouds with the Cloud Generator script")).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用云生成器脚本，我首先用立方体草拟了云朵的大致体积。然后，我使用工具架中的“生成云朵”按钮，自动生成与选定立方体物体大致形状相符的云朵对象，并设置合适的材质（见[图 15-5](ch15.html#creating_clouds_with_the_cloud_generator
    "图 15-5. 使用云生成器脚本创建云朵")）。
- en: I left the generated material almost as it was made by the add-on, except that
    I turned on External Shadows in the Lighting panel of the Materials tab and set
    the scale of the clouds texture belonging to the material a bit lower to give
    the cloud some more detail. I rendered the cloud on its own render layer and composited
    it into my image after adding the background in my comp setup (before the bloom
    and color grading were applied). The results are shown in [Figure 15-6](ch15.html#finished_clouds_composited_into_my_scene
    "Figure 15-6. The finished clouds composited into my scene").
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我几乎保持了生成的材料与插件生成的内容一致，唯一的不同是我在“材料”标签的“光照”面板中启用了外部阴影，并将属于材料的云纹理的比例略微调低，以便给云朵增加一些细节。我将云朵渲染在单独的渲染层上，并在合成设置中添加背景后将其合成到我的图像中（在应用了辉光和色彩分级之前）。结果如[图 15-6](ch15.html#finished_clouds_composited_into_my_scene
    "图 15-6. 完成的云朵合成到我的场景中")所示。
- en: '![Creating clouds with the Cloud Generator script](httpatomoreillycomsourcenostarchimages1538902.png.jpg)Figure 15-5. Creating
    clouds with the Cloud Generator script![The finished clouds composited into my
    scene](httpatomoreillycomsourcenostarchimages1538904.png.jpg)Figure 15-6. The
    finished clouds composited into my scene'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![使用云生成器脚本创建云朵](httpatomoreillycomsourcenostarchimages1538902.png.jpg)图 15-5. 使用云生成器脚本创建云朵![完成的云朵合成到我的场景中](httpatomoreillycomsourcenostarchimages1538904.png.jpg)图 15-6. 完成的云朵合成到我的场景中'
- en: Different Looks
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不同的外观
- en: Another way to get more out of a project is to consider some different looks
    for your final renders. This might involve finding new camera angles or trying
    different lighting schemes. I experimented with some different looks for lighting
    the Spider Bot, as well as different camera angles, as shown in [Figure 15-7](ch15.html#alternate_renders_of_the_spider_botcomma
    "Figure 15-7. Alternate renders of the Spider Bot, with different lighting and
    camera angles").
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 获得更多项目成果的另一种方式是考虑为最终渲染效果找到不同的外观。这可能涉及找到新的相机角度或尝试不同的光照方案。我尝试了不同的光照效果和相机角度来照亮蜘蛛机器人，效果如[图 15-7](ch15.html#alternate_renders_of_the_spider_botcomma
    "图 15-7. 蜘蛛机器人的替代渲染，采用不同的光照和相机角度")所示。
- en: Rigging and Animation
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 装配与动画
- en: Of course, the most dramatic way to take your projects further is to animate
    them. One simple way to animate a scene is to render a turntable by rotating the
    camera around the subject and keying its position and rotation as it moves in
    a circle. Another way is to render a fly-through, with your camera moving around
    the scene to show different points of interest. More complex animation—for example,
    animating your character’s movements—involves creating rigs for any moving elements
    and then keying, or storing, the different properties and positions of these elements
    through time.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，推动项目进一步发展的最戏剧性方式就是为它们添加动画。让场景动起来的一个简单方法是通过旋转相机围绕主题进行渲染，并在相机围绕场景旋转时记录其位置和旋转。另一种方法是渲染飞行镜头，让相机在场景中移动，展示不同的兴趣点。更复杂的动画——例如，为角色的动作制作动画——涉及为任何移动元素创建骨架，并通过关键帧或存储这些元素的不同属性和位置来进行时间上的动画。
- en: '![Alternate renders of the Spider Bot, with different lighting and camera angles](httpatomoreillycomsourcenostarchimages1538906.png.jpg)Figure 15-7. Alternate
    renders of the Spider Bot, with different lighting and camera angles'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![蜘蛛机器人在不同光照和相机角度下的替代渲染](httpatomoreillycomsourcenostarchimages1538906.png.jpg)图15-7.
    蜘蛛机器人在不同光照和相机角度下的替代渲染'
- en: 'Rigging requires adding an armature object to your scene and editing it to
    create a “skeleton” for your model. Next, you must bind your model to the armature,
    either by parenting the model’s objects to specific bones or, preferably, by using
    the Armature modifier to assign different vertex groups within objects to the
    different bones of the armature. Once you’ve completed these steps, you can switch
    to Pose mode with the armature selected to begin moving and posing your model
    (see [Figure 15-8](ch15.html#working_with_armaturesdot_top_the_armatu "Figure 15-8. Working
    with armatures. Top: The armature for the Spider Bot seen on its own from above,
    in B-Bone view (one of the display options for armatures). Middle: Posing the
    Spider Bot using the rig. Bottom: The posed Spider Bot shown on its own.")).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 骨架绑定需要将一个骨架对象添加到场景中，并对其进行编辑，以为模型创建一个“骨架”。接下来，你必须将模型绑定到骨架，可以通过将模型的对象作为子物体绑定到特定的骨骼，或者最好使用骨架修改器，将对象内的不同顶点组分配给骨架的不同骨骼。一旦完成这些步骤，你可以选择骨架切换到姿势模式，开始移动和调整模型的姿势（参见[图15-8](ch15.html#working_with_armaturesdot_top_the_armatu
    "图15-8. 使用骨架。顶部：从上方独立看到的蜘蛛机器人骨架，使用B-Bone视图（骨架的显示选项之一）。中间：使用骨架摆姿势。底部：独立展示的摆姿势后的蜘蛛机器人。")）。
- en: 'In addition to creating bones to directly control parts of your model, you
    can also create constraints and helper bones to form a kind of user interface
    for your rig. These could include controls to make sure that limbs reach for a
    specific point automatically or controls to make the model perform certain actions.
    For example, in [Figure 15-8](ch15.html#working_with_armaturesdot_top_the_armatu
    "Figure 15-8. Working with armatures. Top: The armature for the Spider Bot seen
    on its own from above, in B-Bone view (one of the display options for armatures).
    Middle: Posing the Spider Bot using the rig. Bottom: The posed Spider Bot shown
    on its own."), the bones shown highlighted in yellow and green are those that
    have had constraints applied to make posing the legs easier. This is a complex
    process, though. To learn more about rigging, look at the resources available
    from the Blender Foundation Shop and on the Blender wiki.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 除了创建骨骼来直接控制模型的部分，你还可以创建约束和辅助骨骼，形成一种用户界面来控制骨架。这些控制可以包括确保肢体自动到达特定点的控制，或控制模型执行特定动作。例如，在[图15-8](ch15.html#working_with_armaturesdot_top_the_armatu
    "图15-8. 使用骨架。顶部：从上方独立看到的蜘蛛机器人骨架，使用B-Bone视图（骨架的显示选项之一）。中间：使用骨架摆姿势。底部：独立展示的摆姿势后的蜘蛛机器人。")中，黄色和绿色突出显示的骨骼是应用了约束以便更轻松地调整腿部姿势的骨骼。不过，这是一个复杂的过程。想要了解更多关于骨架绑定的内容，可以查看Blender基金会商店和Blender
    wiki上的资源。
- en: '![Working with armatures. Top: The armature for the Spider Bot seen on its
    own from above, in B-Bone view (one of the display options for armatures). Middle:
    Posing the Spider Bot using the rig. Bottom: The posed Spider Bot shown on its
    own.](httpatomoreillycomsourcenostarchimages1538908.png.jpg)Figure 15-8. Working
    with armatures. Top: The armature for the Spider Bot seen on its own from above,
    in B-Bone view (one of the display options for armatures). Middle: Posing the
    Spider Bot using the rig. Bottom: The posed Spider Bot shown on its own.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![使用骨架。顶部：蜘蛛机器人骨架的单独视图，从上方看，采用 B-Bone 视图（骨架显示选项之一）。中间：使用绑定系统为蜘蛛机器人进行姿势设定。底部：单独展示已设定姿势的蜘蛛机器人。](httpatomoreillycomsourcenostarchimages1538908.png.jpg)图15-8.
    使用骨架。顶部：蜘蛛机器人骨架的单独视图，从上方看，采用 B-Bone 视图（骨架显示选项之一）。中间：使用绑定系统为蜘蛛机器人进行姿势设定。底部：单独展示已设定姿势的蜘蛛机器人。'
- en: Once your model is rigged, you can begin animating your creation. By keying
    the transformations of the bones in your rigs, or storing their poses, and then
    moving through Blender’s timeline, changing the rig’s pose, and keying it again,
    you can build up a sequence of positions and poses for your rig to move through.
    When played back, your model will then perform the sequence of movements defined
    by the poses you created.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的模型已完成绑定，你就可以开始为你的创作制作动画。通过设置骨骼的变换关键帧，或储存它们的姿势，再通过 Blender 的时间轴移动，改变绑定的姿势并重新设置关键帧，你就能建立一系列的姿势和位置，供你的模型依次通过。当播放时，你的模型将按照你创建的姿势所定义的运动顺序进行表演。
- en: In Review
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: Over the course of this book, we have progressed from the initial inspiration
    for our projects to final images and beyond. After introducing Blender and GIMP
    in [Chapter 1](ch01.html "Chapter 1. Introduction to Blender") and [Chapter 2](ch02.html
    "Chapter 2. Introduction to GIMP"), we looked at how to gather, create, and use
    reference and concept art in [Chapter 3](ch03.html "Chapter 3. Preparation"),
    and moved on to blocking in the fundamentals of our scenes in the form of rough
    geometry and base meshes in [Chapter 4](ch04.html "Chapter 4. Blocking In"). In
    [Chapter 5](ch05.html "Chapter 5. Modeling the Details"), [Chapter 6](ch06.html
    "Chapter 6. Sculpting"), and [Chapter 7](ch07.html "Chapter 7. Retopology"), we
    expanded upon these rough forms with further geometry and with Blender’s sculpting
    and retopology tools. In [Chapter 8](ch08.html "Chapter 8. UV Unwrapping"), we
    unwrapped the models for texturing.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的过程中，我们从项目的最初灵感到最终图像及其后续内容不断进步。在[第1章](ch01.html "第1章. Blender介绍")和[第2章](ch02.html
    "第2章. GIMP介绍")中介绍了 Blender 和 GIMP 后，我们在[第3章](ch03.html "第3章. 准备工作")中探讨了如何收集、创建和使用参考图和概念艺术，接着在[第4章](ch04.html
    "第4章. 基础搭建")中用粗略的几何体和基础网格开始搭建场景的基本元素。在[第5章](ch05.html "第5章. 细节建模")、[第6章](ch06.html
    "第6章. 雕刻")和[第7章](ch07.html "第7章. 重新拓扑")中，我们通过进一步的几何建模以及 Blender 的雕刻和重新拓扑工具，扩展了这些粗略形态。在[第8章](ch08.html
    "第8章. UV展开")中，我们展开了模型，为纹理制作做准备。
- en: With the models laid out, we added further details with particle systems in
    [Chapter 9](ch09.html "Chapter 9. Hair and Particle Systems") and textures in
    [Chapter 10](ch10.html "Chapter 10. Texture Baking") and [Chapter 11](ch11.html
    "Chapter 11. Texture Painting"). In [Chapter 12](ch12.html "Chapter 12. Materials")
    and [Chapter 13](ch13.html "Chapter 13. Lighting"), we began turning our collection
    of models and textures into a renderable scene with materials and lighting, and
    in [Chapter 14](ch14.html "Chapter 14. Rendering and Compositing"), we turned
    our *.blend* files into finished renders.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 模型布置好后，我们在[第9章](ch09.html "第9章. 头发与粒子系统")加入了粒子系统的更多细节，在[第10章](ch10.html "第10章.
    纹理烘焙")和[第11章](ch11.html "第11章. 纹理绘制")中添加了纹理。在[第12章](ch12.html "第12章. 材质")和[第13章](ch13.html
    "第13章. 灯光")中，我们开始将我们的模型和纹理集转化为可渲染的场景，加入材质和光照，并在[第14章](ch14.html "第14章. 渲染与合成")中，我们将
    *.blend* 文件转化为最终的渲染图像。
- en: I hope that this chapter has given you a few ideas for ways you can enhance
    the finished projects in this book or your own projects. I’ve covered adding extra
    details to scenes and producing extra renders with different scenery or moods.
    I’ve also touched on the idea of animating and rigging projects, moving from the
    realm of still images into moving pictures.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望本章能给你一些启发，帮助你提升本书中的完成项目或你自己的项目。我已经讲解了如何为场景添加更多细节，并用不同的景观或氛围生成额外的渲染图像。我还提到了动画和绑定项目的概念，探索了从静态图像到动态画面的过渡。
- en: Throughout this book, I’ve used my three projects to illustrate what powerful
    tools Blender and GIMP are and how their diverse range of functions can be used.
    Each tool has tremendous depth and can be daunting at first, but once you get
    to know the tools, they’re fantastic for bringing your ideas to life. I hope you’ll
    enjoy using the skills you’ve learned in this book to do just that.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我通过三个项目来说明Blender和GIMP是多么强大的工具，以及它们多样的功能如何得到应用。每个工具都有极大的深度，初学时可能会让人感到难以应对，但一旦你掌握了这些工具，它们将非常棒，能帮助你将创意变为现实。我希望你能享受在本书中学到的技能，并用它们来实现你的想法。
