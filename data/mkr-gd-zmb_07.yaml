- en: '**7**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**7**'
- en: '**ENVIRONMENTAL MONITORING**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**环境监控**'
- en: '![image](graphics/f0001-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f0001-01.jpg)'
- en: Zombies are pretty frightening, but they’re not the only threat in a postapocalyptic
    world. More mundane risks like fire are especially serious if you can’t safely
    leave your compound (see [Figure 7-1](ch07.html#ch07fig1)). In this chapter, I’ll
    show you how to build a fire alarm and a temperature alarm that alert you to environmental
    hazards—without alerting the zombies.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 僵尸确实很可怕，但它们并不是末日世界中唯一的威胁。像火灾这样的日常风险，尤其在你无法安全离开住所时，显得尤为严重（见[图7-1](ch07.html#ch07fig1)）。在这一章中，我将展示如何制作一个火警和温度警报器，帮助你警告环境危险——而且不会引来僵尸的注意。
- en: '![image](graphics/f07-01.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-01.jpg)'
- en: 'Figure 7-1: No smoking!'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-1：禁止吸烟！
- en: '**PROJECT 11: QUIET FIRE ALARM**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**项目11：安静的火警报警器**'
- en: 'Normally, you want a fire alarm to be as close to you as possible and as noisy
    as possible. But there’s one problem with loud alarms: zombies can hear. The last
    thing you want when escaping a burning building is to attract unwanted attention
    from passing zombies!'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你希望火警器离你尽可能近，而且声音尽可能大。但大声警报有一个问题：僵尸能听见。你在逃离着火的建筑时，最不希望的就是引来路过的僵尸的注意！
- en: 'This project modifies a regular battery-operated smoke detector so that it
    registers an alarm on the Arduino display and sounds a much quieter buzzer, using
    the basic setup from “[Project 4: Battery Monitor](ch03.html#ch00lev1sec63)” on
    [page 53](ch03.html#page_53). [Figure 7-2](ch07.html#ch07fig2) shows the smoke
    detector connected directly to the screwshield.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目修改了一个普通的电池驱动烟雾探测器，使它能在Arduino显示屏上触发警报，并发出更为轻微的蜂鸣声，使用的基本设置来自“[项目4：电池监控器](ch03.html#ch00lev1sec63)”中的内容（见[第53页](ch03.html#page_53)）。[图7-2](ch07.html#ch07fig2)展示了烟雾探测器直接连接到螺丝板的样子。
- en: '![image](graphics/f07-02.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-02.jpg)'
- en: 'Figure 7-2: Testing the finished fire alarm. In your base, the detector will
    be connected to the Arduino by a long lead.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-2：测试完成的火警报警器。在你的基地中，探测器将通过一根长电缆连接到Arduino。
- en: '**WHAT YOU WILL NEED**'
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**你将需要的材料**'
- en: 'To make this project, you’ll need the Arduino and screwshield that you used
    in “[Project 4: Battery Monitor](ch03.html#ch00lev1sec63)” on [page 53](ch03.html#page_53)
    as well as the following parts:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要制作这个项目，你需要使用你在“[项目4：电池监控器](ch03.html#ch00lev1sec63)”中使用的Arduino和螺丝板，并准备以下零件：
- en: '| **ITEMS** | **NOTES** | **SOURCE** |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| **项目名称** | **备注** | **来源** |'
- en: '| --- | --- | --- |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| ![image](graphics/square.jpg) Smoke detector | Battery operated | Hardware
    store, Supermarket |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 烟雾探测器 | 电池驱动 | 五金店，超市 |'
- en: '| ![image](graphics/square.jpg) Cable | Double core and long enough to reach
    from the smoke detector to the Arduino | Scavenged speaker or bell cable is good
    for this. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 电缆 | 双股电缆，长度足够从烟雾探测器到Arduino | 可回收的扬声器或铃声电缆都可以使用。
    |'
- en: '| ![image](graphics/square.jpg) D1 | 1N4001 diode | Adafruit (755) |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) D1 | 1N4001二极管 | Adafruit（755） |'
- en: '| ![image](graphics/square.jpg) R1 | 1 kΩ resistor | Mouser (293-1k-RC) |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) R1 | 1kΩ电阻 | Mouser（293-1k-RC） |'
- en: '| ![image](graphics/square.jpg) LED1 | Blue or white LED | Adafruit (301) |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) LED1 | 蓝色或白色LED | Adafruit（301） |'
- en: '| ![image](graphics/square.jpg) C1 | 100 µF capacitor | Adafruit (753) |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) C1 | 100 µF 电容器 | Adafruit（753） |'
- en: '| ![image](graphics/square.jpg) Solid-core wire | 2 inches (5 cm) long | Abandoned
    electronics, Adafruit (1311) |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 实心铜芯线 | 2英寸（5厘米）长 | 废弃电子产品，Adafruit（1311） |'
- en: Be sure to use the LED colors I recommend, as I don’t suggest blue or white
    LEDs just because they look cool. For this project’s circuit to work, the LED
    needs to have a forward voltage of more than about 2V. Red and green LEDs often
    have a forward voltage of about 1.7V, but blue and white LEDs have a much higher
    forward voltage of around 3V, which is perfect.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一定要使用我推荐的LED颜色，因为我并不是因为它们看起来酷才推荐蓝色或白色LED。为了让这个项目的电路正常工作，LED的正向电压需要大于2V。红色和绿色LED的正向电压通常约为1.7V，而蓝色和白色LED的正向电压则较高，大约为3V，这是非常合适的。
- en: '**CONSTRUCTION**'
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**构建**'
- en: To adapt the smoke detector to communicate silently with the Arduino, you’ll
    disconnect the detector’s buzzer from its circuit board and then change the signal
    that would go to the buzzer into a signal the Arduino can use. You’ll condition
    the buzzer signal by sending it through the circuit ([Figure 7-3](ch07.html#ch07fig3)).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让烟雾探测器能静默地与Arduino通信，你需要将探测器的蜂鸣器从电路板上断开，然后将原本发送到蜂鸣器的信号改成Arduino可以使用的信号。你将通过电路（[图7-3](ch07.html#ch07fig3)）来调节蜂鸣器信号。
- en: '![image](graphics/f07-03.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-03.jpg)'
- en: 'Figure 7-3: Schematic for the fire alarm'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-3：火灾警报电路原理图
- en: A typical smoke alarm is really loud because its buzzer is driven with the highest
    possible voltage the circuit can wring out of a little 9V battery. This means
    that for most alarms, the signal on the buzzer looks something like the chart
    on the left of [Figure 7-4](ch07.html#ch07fig4).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一般的烟雾报警器非常响，因为它的蜂鸣器是由电路能从一块小小的 9V 电池中榨取的最高电压驱动的。这意味着对于大多数报警器来说，蜂鸣器上的信号大致类似于[图
    7-4](ch07.html#ch07fig4)左侧的图表。
- en: '![image](graphics/f07-04.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f07-04.jpg)'
- en: 'Figure 7-4: Taming the buzzer signal for Arduino is much easier than taming
    a zombie!'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-4：驯服 Arduino 上的蜂鸣器信号要比驯服僵尸简单得多！
- en: The buzzer is driven by an alternating current (AC) square wave, with a voltage
    that swings from +9V to –9V at roughly 600 times per second. This causes a piezo
    element to alternately expand and contract, generating the buzzing sound. But
    this voltage swing is too wild for the Arduino, which can be damaged by inputs
    greater than 5V or less than 0V.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 蜂鸣器是由交流（AC）方波驱动的，电压大约每秒钟变化 600 次，电压从 +9V 到 -9V 来回摆动。这使得压电元件交替膨胀和收缩，产生蜂鸣声。但是这种电压摆动对于
    Arduino 来说太剧烈，Arduino 会因输入电压超过 5V 或低于 0V 而受到损坏。
- en: The circuit to convert the buzzer signal begins with the diode D1, which completely
    prevents the negative voltages from reaching the rest of the circuit (diodes only
    allow current to flow in one direction). The resistor limits the current flowing
    to the LED, which limits the voltage across the LED to about 3V. The capacitor
    gets rid of any voltage spikes and smoothes out the signal to something like the
    chart on the right in [Figure 7-4](ch07.html#ch07fig4).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 用于转换蜂鸣器信号的电路以二极管 D1 开始，二极管完全防止负电压到达电路的其余部分（二极管只允许电流单方向流动）。电阻限制了流向 LED 的电流，从而将
    LED 上的电压限制在大约 3V。电容器去除任何电压尖峰，并将信号平滑成类似于[图 7-4](ch07.html#ch07fig4)右侧的图表。
- en: '**STEP 1: DISCONNECT THE BUZZER**'
  id: totrans-32
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤 1：断开蜂鸣器**'
- en: First, disassemble the smoke detector. When you remove the lid, you should see
    a PCB and some wires ([Figure 7-5](ch07.html#ch07fig5)).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，拆解烟雾探测器。当你拆下盖子时，你应该能看到一个 PCB 和一些电线（[图 7-5](ch07.html#ch07fig5)）。
- en: '![image](graphics/f07-05.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f07-05.jpg)'
- en: 'Figure 7-5: Inside the smoke detector'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-5：烟雾探测器内部
- en: In this smoke detector, the three leads going from the circuit board to the
    lid are the buzzer leads. Chop off the leads to the buzzer now, but don’t cut
    too close to the buzzer itself. Resources are scarce during an apocalypse, and
    you might want to repurpose that buzzer later.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个烟雾探测器中，从电路板到盖子有三条导线是连接蜂鸣器的导线。现在剪掉蜂鸣器的导线，但不要剪得离蜂鸣器太近。末日来临时资源紧张，你可能想以后再利用这个蜂鸣器。
- en: '**DANGER: RADIATION!**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**危险：辐射！**'
- en: As you start this project, keep two warnings in mind. First, if you take apart
    your smoke detector before the zombie outbreak, do not use it as a smoke detector
    again. Smoke detectors save thousands of lives a year, so don’t rely on one you’ve
    messed with; just buy a new one.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始这个项目时，请牢记两个警告。首先，如果你在僵尸爆发前拆解了烟雾探测器，不要再将其用作烟雾探测器。烟雾探测器每年拯救成千上万的生命，所以不要依赖你已经拆解过的那个；直接买个新的。
- en: Second, although removing the smoke detector’s plastic case is safe, if your
    smoke detector has a round metal box inside (see [Figure 7-5](ch07.html#ch07fig5)),
    do not open that box, as it contains a radiation source that ionizes air in a
    small chamber. Smoke particles will absorb the ions, and the resulting reduction
    in current through the ionized air triggers the alarm. This type of smoke detector
    is gradually being replaced by designs that detect smoke optically instead, so
    hopefully, yours won’t have that box at all.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，虽然拆下烟雾探测器的塑料外壳是安全的，但如果你的烟雾探测器内部有一个圆形金属盒（见[图 7-5](ch07.html#ch07fig5)），不要打开那个盒子，因为它包含一个辐射源，能够在一个小的腔体内电离空气。烟雾颗粒会吸收这些离子，导致电离空气中的电流减少，从而触发警报。这种类型的烟雾探测器正在逐渐被光学烟雾探测设计所取代，因此希望你的烟雾探测器里不会有那个盒子。
- en: '**NOTE**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: 'You can use the buzzer from your smoke detector to build “[Project 16: Arduino
    Movement and Sound Distractor](ch09.html#ch00lev1sec167)” on [page 169](ch09.html#page_169).
    If you’ve ever been close to one of these smoke alarms when they sound, you’ll
    know just how distracting they are!'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用烟雾探测器中的蜂鸣器来构建 “[项目 16：Arduino 移动和声音干扰器](ch09.html#ch00lev1sec167)”（见 [第
    169 页](ch09.html#page_169)）。如果你曾经靠近过这种烟雾报警器，当它响起时，你就知道它有多么令人分心！
- en: Your buzzer may have two leads or three leads. If it has three, follow Step
    2 to determine which lead is which. If it has just two, these are the leads that
    you will connect to, and you can skip Step 2.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您的蜂鸣器可能有两个引脚或三个引脚。如果有三个引脚，请按照步骤 2 确定每个引脚的作用。如果只有两个引脚，这些就是您将要连接的引脚，您可以跳过步骤 2。
- en: '**STEP 2: IDENTIFY THE LEADS**'
  id: totrans-43
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤 2：识别引脚**'
- en: If your buzzer has three connections, then your smoke alarm uses a type of piezo
    buzzer called a *self-drive piezo*. The third connection is called the *feedback*
    connection and is used to make the piezo sound as loud as possible.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的蜂鸣器有三个连接，那您的烟雾报警器使用的是一种叫做*自驱动压电蜂鸣器*的蜂鸣器。第三个连接被称为*反馈*连接，用于让压电蜂鸣器发出最响的声音。
- en: For this project, you just want the two drive connections on the smoke detector.
    Sometimes the wires are color coded; if so, the drive connections will probably
    be red and black, and the feedback connection might be white (see [Figure 7-6](ch07.html#ch07fig6))
    or some other color. But if you have a multimeter, then you can just check which
    wires are the drive wires and avoid guesswork. [Figure 7-6](ch07.html#ch07fig6)
    shows this process in action.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，您只需要烟雾探测器上的两个驱动连接。有时电线会有颜色编码；如果是这样，驱动连接通常是红色和黑色的，反馈连接可能是白色（见[图 7-6](ch07.html#ch07fig6)）或其他颜色。但是，如果您有万用表，您可以直接检查哪些电线是驱动电线，从而避免猜测。[图
    7-6](ch07.html#ch07fig6)展示了这一过程的实际操作。
- en: '![image](graphics/f07-06.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-06.jpg)'
- en: 'Figure 7-6: Identifying the smoke alarm buzzer wires'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-6：识别烟雾报警器蜂鸣器电线
- en: Strip the ends of all three wires and set your multimeter to its 200V AC range
    if it’s available on your meter, or at least the 10V AC range. (Yes, I mean AC,
    not the usual DC.) Connect the multimeter leads to any two of the three wires
    and measure the voltage as you hold down the contacts of the smoke alarm’s “test”
    switch. If the meter indicates about 9V, or anything above 4V or 5V, then these
    are the wires you are looking for; otherwise, try different pairs until you find
    the correct wires. Note that the project relies on the battery or batteries still
    being present in the smoke alarm.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 剥去三根电线的末端，并将万用表设置为200V交流电范围（如果您的万用表支持），或者至少是10V交流电范围。（是的，我指的是交流电，而不是通常的直流电。）将万用表的探头连接到三根电线中的任意两根，并在按下烟雾报警器“测试”开关的接触点时测量电压。如果万用表显示大约9V，或者4V或5V以上的电压，那么这就是您要找的电线；如果没有，请尝试不同的电线对，直到找到正确的电线。请注意，该项目依赖于烟雾报警器中的电池或电池组仍然存在。
- en: '**STEP 3: SOLDER COMPONENTS TO THE SCREWSHIELD**'
  id: totrans-49
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤 3：将组件焊接到螺丝护板上**'
- en: This circuit has too many components to attach all of them to the screw terminals,
    so use the prototyping area on the screwshield to solder the components into place.
    [Figure 7-7](ch07.html#ch07fig7) shows the wiring diagram for the screwshield;
    the letters marked will be used later to describe just how to solder this together.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由于该电路包含的组件太多，无法将它们全部连接到螺丝端子，因此请使用螺丝护板上的原型区域将组件焊接到位。[图 7-7](ch07.html#ch07fig7)展示了螺丝护板的接线图；标记的字母将在后面用来描述如何将其焊接在一起。
- en: '**NOTE**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: For the sake of clarity, [Figure 7-7](ch07.html#ch07fig7) doesn’t include components
    from earlier Arduino-based projects that might be hanging off the screwshield.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了清晰起见，[图 7-7](ch07.html#ch07fig7)没有包括来自早期基于 Arduino 的项目的组件，这些组件可能会挂在螺丝护板上。
- en: '![image](graphics/f07-07.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-07.jpg)'
- en: 'Figure 7-7: Wiring diagram for the screwshield'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-7：螺丝护板的接线图
- en: Holding your screwshield so that it looks like [Figure 7-7](ch07.html#ch07fig7),
    push the component legs through from the top of the board. Note that the diode
    (labeled D1) and LED are *polarized*, meaning they only work when oriented a certain
    way. Point the diode’s stripe toward the top of the board. Then place the LED’s
    longer lead (the positive lead) toward the bottom of the board ([Figure 7-7](ch07.html#ch07fig7)).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 持着螺丝护板，使其看起来像[图 7-7](ch07.html#ch07fig7)所示，从电路板顶部将组件引脚插入。请注意，二极管（标记为 D1）和 LED
    是*极性*元件，意味着它们只有在特定方向上才会工作。将二极管的条纹朝向电路板顶部。然后将 LED 的较长引脚（正极引脚）朝向电路板底部（[图 7-7](ch07.html#ch07fig7)）。
- en: When you’ve pushed all the component leads through, flip the board over and
    solder the leads where they emerge from the hole. (If you are new to soldering,
    take a look at [Appendix B](app02.html#app02), especially “[Soldering a PCB](app02.html#ch00lev1sec229)”
    on [page 234](app02.html#page_234).) It may help to bend the leads slightly so
    that the components don’t fall out when the board is upside down. When all the
    components are soldered, the underside of the board should look like [Figure 7-8](ch07.html#ch07fig8).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将所有组件引脚穿过孔后，翻转电路板并在引脚从孔中露出的位置焊接引脚。（如果你是焊接新手，建议查看[附录B](app02.html#app02)，尤其是“[焊接PCB](app02.html#ch00lev1sec229)”在[第234页](app02.html#page_234)的内容。）适当弯曲引脚，以防在电路板倒置时组件掉出。当所有组件焊接完毕后，电路板的底面应如[图7-8](ch07.html#ch07fig8)所示。
- en: '![image](graphics/f07-08.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-08.jpg)'
- en: 'Figure 7-8: Fixing the components in place'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-8：固定组件的位置
- en: Now that the components are fixed, bend the leads and arrange them to make the
    connections, using [Figure 7-9](ch07.html#ch07fig9) and the steps below as a guide.
    (The connections described below are indicated in [Figures 7-7](ch07.html#ch07fig7),
    [7-9](ch07.html#ch07fig9), and [7-10](ch07.html#ch07fig10) with letters.)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在组件已固定好，弯曲引脚并排列它们以完成连接，参考[图7-9](ch07.html#ch07fig9)和以下步骤作为指导。（下面描述的连接在[图7-7](ch07.html#ch07fig7)、[7-9](ch07.html#ch07fig9)和[7-10](ch07.html#ch07fig10)中有字母标注。）
- en: 1\. Bend the top (negative) lead of the LED over so that it lies next to the
    top lead of C1 and the GND power line on the screwshield (A). Solder the LED lead
    where it crosses C1 and then where it meets the GND line. Cut off the excess LED
    lead and the remainder of the top lead of C2.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 将LED的顶部（负极）引脚弯曲，使其与C1的顶部引脚以及螺丝罩上的GND电源线（A）相邻。将LED引脚焊接到C1交点处，然后焊接到GND线处。剪掉多余的LED引脚和C2顶部引脚的剩余部分。
- en: 2\. Bend the other LED lead over to run next to the top lead of R1 and the bottom
    lead of C1 (B). Solder the bottom LED lead at the junctions where it crosses R1
    and C1 and cut off the remainders of both the C1 lead and the R1 lead you just
    soldered to. If there is any remaining LED lead after connecting to R1 and C1,
    cut that off too.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 将另一个LED引脚弯曲，使其与R1的顶部引脚和C1的底部引脚并排（B）。将LED底部引脚焊接在交叉处，即R1和C1的交点处，然后剪掉C1和R1引脚的剩余部分。如果在连接R1和C1后还有剩余的LED引脚，也请剪掉。
- en: 3\. Cut a length of solid-core wire that is long enough to reach all the way
    from the end of the positive LED that you soldered in Step 2 as far as D3 on the
    top Arduino connector (C). Strip the ends of the wire (see “[Stripping Wires](app02.html#ch00lev1sec225)”
    on [page 227](app02.html#page_227)). Flip over to the top side of the board and
    push one stripped end of the wire into a hole next to where the positive LED lead
    connects to C1 and solder the wire to that junction. Solder the other end of the
    wire to the solder pad next to Arduino pin 3\. Push the stripped end through the
    hole from the top and solder on the underside.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 切一段足够长的固芯线，从你在步骤2中焊接的LED正极端延伸到顶部Arduino连接器的D3引脚（C）。剥去线端（参见“[剥线](app02.html#ch00lev1sec225)”在[第227页](app02.html#page_227)的内容）。翻到电路板的另一面，将剥去的一端插入靠近LED正极引脚连接C1的孔中，并将线焊接到该连接点。将线的另一端焊接到靠近Arduino
    3号引脚的焊盘。将剥去的线端从顶部穿过孔，并在板的底面焊接。
- en: '![image](graphics/f07-09.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-09.jpg)'
- en: 'Figure 7-9: The underside of the screwshield, after soldering. The dashed lines
    indicate wires running on the top of the shield.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-9：焊接完成后的螺丝罩底面。虚线表示位于罩顶的线路。
- en: 4\. Bend the bottom lead of R1 over so that it crosses the top lead of D1 (D).
    Solder these leads together and cut off the excess wire.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 将R1的底部引脚弯曲，使其与D1的顶部引脚交叉（D）。将这两根引脚焊接在一起，并剪掉多余的线。
- en: 5\. Use another short length of solid-core wire (or if they are long enough,
    one of the leads you trimmed off R1) to connect the solder pad labeled X to the
    bottom GND power line on the screwshield (E).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 使用另一段固芯线（或者如果它们足够长，可以使用你从R1上修剪下来的引脚）将标记为X的焊盘连接到底部的GND电源线（E）。
- en: When this is done, the underside of the board should look like [Figure 7-9](ch07.html#ch07fig9).
    The dotted lines represent the wires on the other side of the board.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，电路板的底面应如[图7-9](ch07.html#ch07fig9)所示。虚线表示板另一面的线路。
- en: Next, flip the board over and add a wire to link pin D3 (just marked 3 on the
    screwshield) of the Arduino to the junction of the capacitor, diode, and resistor.
    Solder that wire in place. When this is done, the top of the screwshield should
    look like [Figure 7-10](ch07.html#ch07fig10).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，翻转电路板并添加一根导线，将Arduino的D3引脚（在螺丝盾上标记为3）连接到电容器、二极管和电阻的交点。将该导线焊接到位。完成后，螺丝盾的顶部应该像[图7-10](ch07.html#ch07fig10)一样。
- en: Now that the board is complete, reassemble the electronics by fitting the display
    shield back on top of the screw shield and the screw shield onto the Arduino.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在电路板已经完成，重新组装电子元件，将显示屏护盾放回螺丝盾上，并将螺丝盾安装到Arduino上。
- en: '![image](graphics/f07-10.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-10.jpg)'
- en: 'Figure 7-10: The finished screwshield'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-10：完成的螺丝盾
- en: '**STEP 4: CONNECT THE SMOKE DETECTOR TO THE ARDUINO**'
  id: totrans-72
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤4：将烟雾探测器连接到Arduino**'
- en: Finally, strip the buzzer wires if you haven’t done so already, and solder longer
    leads to them. To make the soldered connections stronger, you could use heatshrink
    as described in “[Using Heatshrink](app02.html#ch00lev1sec230)” on [page 235](app02.html#page_235).
    Connect the smoke detector to pins W and X on the screwshield. The wire connecting
    the smoke detector to the Arduino can be any double-core cable, such as bell wire,
    but if you plan to use this alarm in your base, just use wires long enough to
    reach the mounting position. I found that the project worked just fine with 30
    feet (10 m) of telephone extension cable.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你还没有剥开蜂鸣器的导线，请先剥开它们，并将较长的导线焊接到上面。为了让焊接连接更加牢固，你可以使用在“[使用热缩管](app02.html#ch00lev1sec230)”中描述的热缩管，如[第235页](app02.html#page_235)所示。将烟雾探测器连接到螺丝盾上的W和X引脚。连接烟雾探测器与Arduino的导线可以使用任何双线电缆，如电话线，但如果你打算在基地中使用此报警器，请使用足够长的导线，以便到达安装位置。我发现使用30英尺（10米）的电话扩展线，项目运行得非常顺利。
- en: '**SOFTWARE**'
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**软件**'
- en: If you want to make this project without any of the other Arduino-based projects
    in this book, then load the sketch *Project_11_Smoke_Alarm* from this book’s source
    files onto the Arduino now. If on the other hand, you’ve built one or more of
    this book’s earlier Arduino projects, then use the sketch *All_Sensors* and change
    the constants at the top to select the projects that you’ve made. See the comments
    section in that sketch for instructions on the correct changes to make.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在没有本书中其他任何Arduino项目的情况下制作这个项目，可以从本书的源文件中加载草图*Project_11_Smoke_Alarm*到Arduino上。如果你已经制作了本书中一个或多个早期的Arduino项目，则可以使用草图*All_Sensors*并更改顶部的常量，以选择你所制作的项目。有关正确更改的说明，请查看该草图中的注释部分。
- en: '**NOTE**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: You’ll find a link to the source code for this book at [http://nostarch.com/zombies/](http://nostarch.com/zombies/).
    See [Appendix C](app03.html#app03) in this book for instructions on loading the
    programs.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[http://nostarch.com/zombies/](http://nostarch.com/zombies/)找到本书源代码的链接。有关加载程序的说明，请参见本书的[附录C](app03.html#app03)。
- en: This code builds on the code from Project 4, so for more information on how
    the program as a whole works, please refer to “[Software](ch11.html#ch00lev1sec215)”
    on [page 57](ch03.html#page_57). Here I will just describe the code specific to
    the fire alarm.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码基于项目4的代码，因此有关程序如何整体工作的更多信息，请参考“[软件](ch11.html#ch00lev1sec215)”中的[第57页](ch03.html#page_57)。在这里，我将仅描述与火灾报警器相关的代码。
- en: 'First, we define a new constant for pin D3 on the Arduino:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们为Arduino上的D3引脚定义一个新的常量：
- en: '[PRE0]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This pin will act as an input for the signal from the smoke detector. After
    adding the `smokePin` constant, we add a new line of code to the `setup` function
    to initialize this pin as an input:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这个引脚将作为来自烟雾探测器的信号输入。在添加`smokePin`常量后，我们在`setup`函数中添加一行新代码，将此引脚初始化为输入：
- en: '[PRE1]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, we add a call to a new function called `checkSmoke` to the `loop` function.
    The `checkSmoke` function is defined as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们在`loop`函数中添加对一个名为`checkSmoke`的新函数的调用。`checkSmoke`函数定义如下：
- en: '[PRE2]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `checkSmoke` function contains the rest of the code for checking for a
    signal from the smoke detector and displaying the message and/or turning on the
    buzzer. To change the display and control the buzzer, call the `alarm` function,
    which you first met in “[Project 6: PIR Zombie Detector](ch04.html#ch00lev1sec81)”
    on [page 72](ch04.html#page_72):'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`checkSmoke`函数包含了检查烟雾探测器信号并显示信息和/或开启蜂鸣器的其余代码。要更改显示并控制蜂鸣器，请调用`alarm`函数，你第一次在“[项目6：PIR僵尸探测器](ch04.html#ch00lev1sec81)”中见到该函数，见[第72页](ch04.html#page_72)：'
- en: '[PRE3]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Unless you press a button to mute (a holdover from Project 4), this function
    prints your message (`"FIRE!!"`) to the LCD in lieu of that loud, zombie-attracting
    buzzer.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你按下按钮将其静音（这是项目 4 的遗留功能），否则此功能将把你的信息（`"FIRE!!"`）打印到 LCD 上，代替那种吵闹、吸引僵尸的蜂鸣器。
- en: '**USING THE FIRE ALARM**'
  id: totrans-88
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**使用火灾报警器**'
- en: 'Testing the smoke detector is simple: just hold down the contacts of the test
    button with a screwdriver (see [Figure 7-6](ch07.html#ch07fig6)). This will cause
    the buzzer to sound and a message to appear on the LCD screen.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 测试烟雾探测器很简单：只需用螺丝刀按住测试按钮的触点（见 [图 7-6](ch07.html#ch07fig6)）。这将导致蜂鸣器发出声音，并在 LCD
    屏幕上显示消息。
- en: When you know the alarm works, place the sensor somewhere close enough to a
    potential fire that you’ll receive enough advance warning to put out the flames,
    or at least flee in an orderly manner. Creating a quiet smoke alarm won’t be worth
    much if you exit in a noisy panic and attract all the zombies on the block!
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 当你知道报警器工作正常时，将传感器放置在一个靠近潜在火源的地方，以便在火灾发生时能提前获得足够的警告，以扑灭火焰，或至少有序地逃离。如果你在噪音中恐慌逃跑，吸引了街区上的所有僵尸，制造一个安静的烟雾报警器就毫无意义了！
- en: '**PROJECT 12: TEMPERATURE ALARM**'
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**项目 12：温度报警器**'
- en: Since your compound is zombie-proofed, you (hopefully) won’t have to change
    lodgings often, and over time, you’re sure to acquire some valuable climate-sensitive
    items. Depending on what you have cached away, you might want to make sure that
    a generator isn’t getting too hot or that your wine cellar isn’t too cold. To
    protect these assets that ensure your survival and are good to trade with other
    survivors, you need a temperature alarm that can notify you of extremes of heat
    or cold.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你的住所以防僵尸，因此你（希望）不会经常更换住所，随着时间的推移，你肯定会获得一些有价值的气候敏感物品。根据你所储备的物品，你可能想确保发电机不会过热，或者你的酒窖不会过冷。为了保护这些确保你生存的资产，并且能够与其他幸存者交换，你需要一个温度报警器，它可以通知你过热或过冷的极端情况。
- en: This is the final project that uses your now heavily laden Arduino, and [Figure
    7-11](ch07.html#ch07fig11) shows the LCD screen reporting a high temperature in
    Celsius.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最终的项目，使用了现在负载很重的 Arduino，[图 7-11](ch07.html#ch07fig11) 显示了 LCD 屏幕报告摄氏高温。
- en: '![image](graphics/f07-11.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-11.jpg)'
- en: 'Figure 7-11: A fully laden Arduino, complete with temperature sensor (circled),
    movement detector, smoke alarm, and battery monitor'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-11：一个完全负载的 Arduino，配有温度传感器（已圈出）、运动检测器、烟雾报警器和电池监视器
- en: A three-pin temperature sensor is on the left of [Figure 7-11](ch07.html#ch07fig11),
    over the remains of the smoke alarm from Project 11\. That sensor will send the
    Arduino temperature data, which the Arduino will then display as human-readable
    text.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 一个三针温度传感器位于 [图 7-11](ch07.html#ch07fig11) 的左侧，覆盖在项目 11 的烟雾报警器的残骸上。该传感器会将温度数据发送给
    Arduino，然后 Arduino 会将其显示为人类可读的文本。
- en: '**WHAT YOU WILL NEED**'
  id: totrans-97
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**所需物品**'
- en: 'To make this project, you’ll need the Arduino and screwshield that you used
    in “[Project 4: Battery Monitor](ch03.html#ch00lev1sec63)” on [page 53](ch03.html#page_53)
    and the following parts:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 为了制作这个项目，你需要在 “[项目 4：电池监视器](ch03.html#ch00lev1sec63)” 第 53 页上使用的 Arduino 和螺旋护罩，以及以下零件：
- en: '| **ITEMS** | **NOTES** | **SOURCE** |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| **物品** | **备注** | **来源** |'
- en: '| --- | --- | --- |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| ![image](graphics/square.jpg) TMP36 | Temperature sensor | Adafruit (165)
    |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) TMP36 | 温度传感器 | Adafruit（165） |'
- en: '| ![image](graphics/square.jpg) Three-core wire | To connect the sensor chip
    to the Arduino screwshield | Scavenged telephone cable or other three-core wire.
    |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 三芯电缆 | 用于将传感器芯片连接到 Arduino 螺旋护罩 | 回收的电话线或其他三芯电缆。
    |'
- en: '| ![image](graphics/square.jpg) Heatshrink | 3 lengths of about an inch (25
    mm) | Auto parts store |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 热缩管 | 三段大约一英寸（25 毫米）长 | 汽车零件商店 |'
- en: You could use electrical tape instead of heatshrink for this project, but I
    recommend heatshrink because it’s a lot tougher and not prone to unraveling.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用电工胶带代替热缩管，但我推荐使用热缩管，因为它更坚固，不容易散开。
- en: '**CONSTRUCTION**'
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**构建过程**'
- en: '[Figure 7-12](ch07.html#ch07fig12) shows the wiring diagram for the project.
    The LCD should be attached from an earlier project, so the only new part you’ll
    add is the TMP36 temperature sensor.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 7-12](ch07.html#ch07fig12) 显示了该项目的接线图。LCD 屏幕应来自早期项目，因此你要添加的唯一新零件是 TMP36
    温度传感器。'
- en: '![image](graphics/f07-12.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-12.jpg)'
- en: 'Figure 7-12: The wiring diagram for the temperature alarm'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-12：温度报警器的接线图
- en: '**TMP36 TEMPERATURE SENSOR**'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**TMP36 温度传感器**'
- en: The TMP36 is a handy little temperature sensor chip. It has three pins, and
    in this project, they’re connected to 5V, GND, and A2 on the Arduino. [Figure
    7-13](ch07.html#ch07fig13) shows the pinout of this chip. These chips are only
    accurate to about 2 degrees Celsius. If you want greater accuracy, then you could
    consider changing this project’s design and software to use a digital temperature
    sensor like the DS18B20.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: TMP36 是一款非常实用的小型温度传感器芯片。它有三个引脚，在本项目中，这些引脚分别连接到 Arduino 的 5V、GND 和 A2 引脚。[图 7-13](ch07.html#ch07fig13)显示了该芯片的引脚排列。该芯片的精度大约为
    2 摄氏度。如果你需要更高的精度，可以考虑修改本项目的设计和软件，使用像 DS18B20 这样的数字温度传感器。
- en: '![image](graphics/f07-13.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-13.jpg)'
- en: 'Figure 7-13: The TMP36 pinout'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-13：TMP36 引脚排列
- en: 'The positive supply voltage to pin V+ on the TMP36 can be anything between
    2.7V and 5.5V. On its middle pin, the chip produces an analog output voltage proportional
    to the temperature. The temperature of the chip (in degrees Celsius) can be calculated
    from the voltage at the Out pin by this formula:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: TMP36 的 V+ 引脚的正电源电压可以在 2.7V 到 5.5V 之间。其中间引脚会生成一个与温度成比例的模拟输出电压。可以通过以下公式，从 Out
    引脚的电压计算出芯片的温度（单位：摄氏度）：
- en: Temperature = 100 × volts - 50
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 温度 = 100 × 电压 - 50
- en: 'So, if the voltage were 0.6V, the temperature would be 100 × 0.6 - 50 = 10
    degrees Celsius. If you prefer your temperatures in degrees Fahrenheit, then just
    make one further calculation:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果电压为 0.6V，温度将是 100 × 0.6 - 50 = 10 摄氏度。如果你希望温度以华氏度表示，只需进行一个额外的计算：
- en: ^°F = ^°C × 9/5 + 32
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: ^°F = ^°C × 9/5 + 32
- en: The TMP36 can measure temperatures in the range -40 to +125 degrees Celsius,
    but the measured temperature is accurate only to within 2 degrees Celsius of the
    actual temperature.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: TMP36 可以测量从 -40 到 +125 摄氏度范围的温度，但测量的温度仅能准确到实际温度的 2 摄氏度之内。
- en: '**STEP 1: MAKE A LONGER LEAD FOR THE TMP36**'
  id: totrans-118
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤 1：为 TMP36 制作更长的引线**'
- en: To extend the lead of the TMP36, you could just solder a three-core wire to
    it. However, to make it a bit more durable, you can use heatshrink tubing on top
    of the soldered connections. [Figure 7-14](ch07.html#ch07fig14) shows the process.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要延长 TMP36 的引脚，你可以直接将三芯电线焊接到其上。然而，为了提高耐用性，你可以在焊接连接处使用热缩管。[图 7-14](ch07.html#ch07fig14)展示了这个过程。
- en: '![image](graphics/f07-14.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f07-14.jpg)'
- en: 'Figure 7-14: Using heatshrink on the TMP36 lead'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-14：在 TMP36 引脚上使用热缩管
- en: First, strip the wires of each lead and slip the cut lengths of heatshrink over
    the individual wires ([Figure 7-14](ch07.html#ch07fig14)a). Next solder the wires
    to the leads of the TMP36 ([Figure 7-14](ch07.html#ch07fig14)b). Slide the heatshrink
    up over the solder joint ([Figure 7-14](ch07.html#ch07fig14)c) and finally apply
    a hair dryer or hot air gun to the heatshrink until it, well, shrinks ([Figure
    7-14](ch07.html#ch07fig14)d). If you have wide diameter heatshrink, then you could
    place this around the whole sensor and individual leads to make this build more
    durable.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，剥去每根引线的外皮，并将切好的热缩管滑到每根电线的单独部分上（[图 7-14](ch07.html#ch07fig14)a）。接下来将电线焊接到
    TMP36 的引脚上（[图 7-14](ch07.html#ch07fig14)b）。将热缩管滑到焊接点上（[图 7-14](ch07.html#ch07fig14)c），然后用吹风机或热风枪对热缩管加热，直到它收缩（[图
    7-14](ch07.html#ch07fig14)d）。如果你有直径较大的热缩管，可以将它包裹在整个传感器和各个引脚周围，以增加该结构的耐用性。
- en: '**NOTE**'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: For more information on using heatshrink, see the “[Using Heatshrink](app02.html#ch00lev1sec230)”
    on [page 235](app02.html#page_235).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用热缩管的更多信息，请参见 “[使用热缩管](app02.html#ch00lev1sec230)” 第 235 页（[page 235](app02.html#page_235)）。
- en: '**STEP 2: ATTACH THE TEMPERATURE SENSOR LEAD TO THE SCREWSHIELD**'
  id: totrans-125
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤 2：将温度传感器引脚连接到螺丝屏蔽**'
- en: Attach the wires from the temperature sensor to the screwshield ([Figure 7-11](ch07.html#ch07fig11)).
    You don’t have to use the GND connection shown; any of the GND terminals on the
    screwshield will do.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 将温度传感器的电线连接到螺丝屏蔽上（[图 7-11](ch07.html#ch07fig11)）。你不必使用所示的 GND 连接；螺丝屏蔽上的任何 GND
    端子都可以。
- en: '**SOFTWARE**'
  id: totrans-127
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**软件**'
- en: If you want to make this project on its own, without any of the earlier Arduino-based
    projects, then open the sketch *Project_12_Temperature* from this book’s source
    files and load it on to your Arduino now. If, on the other hand, you built one
    or more of the earlier Arduino projects, then use the sketch *All_Sensors* and
    change the constants at the top to select the projects that you have made. See
    the comments section in this sketch for instructions on this.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想单独制作这个项目，而不使用之前的任何Arduino项目，可以现在从本书的源文件中打开*Project_12_Temperature*草图并加载到你的Arduino中。如果你已经做了一个或多个之前的Arduino项目，那么可以使用*All_Sensors*草图，并更改顶部的常量，选择你已完成的项目。有关此操作的说明，请参阅该草图中的注释部分。
- en: '**NOTE**'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: All the source code for this book is available from [http://www.nostarch.com/zombies/](http://www.nostarch.com/zombies/).
    See “[Installing the Antizombie Sketches](app03.html#ch00lev1sec241)” on [page
    248](app03.html#page_248) for instructions on installing the programs.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的所有源代码可以从[http://www.nostarch.com/zombies/](http://www.nostarch.com/zombies/)下载。有关安装程序的说明，请参见[第248页](app03.html#page_248)中的“[安装Antizombie草图](app03.html#ch00lev1sec241)”。
- en: This code follows the same pattern as Project 4, so for more information on
    how the program as a whole works, please refer to “[Software](ch11.html#ch00lev1sec215)”
    on [page 57](ch03.html#page_57). Here, I’ll just describe the code specific to
    this project.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码遵循与项目4相同的模式，因此有关程序整体工作原理的更多信息，请参阅[第57页](ch03.html#page_57)中的“[软件](ch11.html#ch00lev1sec215)”。在这里，我只会描述与此项目相关的代码。
- en: 'First, a new constant is defined for the Arduino pin that will act as an analog
    input for the TMP36:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为将作为TMP36模拟输入的Arduino引脚定义一个新的常量：
- en: '[PRE4]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Two more constants are defined to set the maximum and minimum temperatures allowed
    before an alarm is triggered. These are `floats` rather than `ints` because they
    represent decimal numbers rather than whole numbers.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 定义了两个常量来设置在触发警报之前允许的最大和最小温度。这些常量是`floats`而不是`ints`，因为它们表示的是小数而非整数。
- en: '[PRE5]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As the comments above the constants state, these temperature values can be in
    either Celsius or Fahrenheit. The units that the temperature is measured in are
    decided by a new function you’ll define.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 正如常量上方的注释所述，这些温度值可以是摄氏度或华氏度。温度的单位由你将定义的一个新函数决定。
- en: 'The main `loop` function now includes a call to `checkTemp`, too. This function
    is defined as follows:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，主`loop`函数也包括对`checkTemp`的调用。这个函数的定义如下：
- en: '[PRE6]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `checkTemp` function first calls `readTemp` to measure the temperature and
    then compares that with the maximum and minimum temperatures. If the temperature
    is too high or too low, then the `alarm` function is called. Note that this version
    of the `alarm` function has an additional parameter that is used to display the
    temperature on the LCD screen.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`checkTemp`函数首先调用`readTemp`来测量温度，然后将其与最大和最小温度进行比较。如果温度过高或过低，则会调用`alarm`函数。请注意，这个版本的`alarm`函数有一个额外的参数，用于在LCD屏幕上显示温度。'
- en: The `readTemp` function is where the raw analog input reading from the TMP36
    is converted into a temperature.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '`readTemp`函数是将TMP36的原始模拟输入读取值转换为温度的地方。'
- en: '[PRE7]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The raw value returned by `analogRead` is a number between 0 and 1023, where
    0 indicates 0V at the analog input pin and 1023 indicates 5V. This voltage is
    calculated by dividing the raw value by 205 (205 is roughly 1023/5).
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`analogRead`返回的原始值是一个介于0到1023之间的数字，其中0表示模拟输入引脚的电压为0V，1023表示电压为5V。通过将原始值除以205来计算该电压（205大约等于1023/5）。'
- en: The temperature in degrees Celsius is then calculated using the formula described
    in “TMP36 Temperature Sensor” on [page 133](ch07.html#page_133), as the voltage
    multiplied by 100 with 50 subtracted from the result. The temperature in degrees
    Fahrenheit is also calculated.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 摄氏温度是通过使用在[第133页](ch07.html#page_133)的“TMP36温度传感器”中描述的公式计算的，该公式为电压乘以100后再减去50。华氏温度也可以通过类似的方法计算。
- en: 'Finally, one of these two values has to be returned. In this version of `readTemp`,
    the line to return `tempF` is commented out, so the temperature in Celsius will
    be returned. If you want to flip this, then comment out the line `return tempC`
    and un-comment return `tempF` so that the last three lines of the function look
    like this:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，必须返回这两个值中的一个。在这个版本的`readTemp`中，返回`tempF`的那一行被注释掉了，所以将返回摄氏度温度。如果你想切换返回华氏度，则可以注释掉`return
    tempC`这一行，并取消注释`return tempF`，使得函数的最后三行如下所示：
- en: '[PRE8]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: To test the sensor, try changing the value of the `maxTemp` constant to just
    above the room’s temperature, load the updated sketch onto the Arduino, and then
    squeeze the temperature sensor between your fingers to warm it up. Watch the LCD,
    and the readout should change.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试传感器，可以尝试将 `maxTemp` 常量的值设置为略高于房间温度，将更新后的草图加载到 Arduino 中，然后用手指捏住温度传感器使其升温。观察
    LCD 屏幕，读数应该会发生变化。
- en: '**USING THE TEMPERATURE ALARM**'
  id: totrans-147
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**使用温度警报**'
- en: There’s a limit to how much distance you can put between your temperature sensor
    and your Arduino. You could make the lead you attach to the TMP36 as long as 20
    feet (7 m), but the sensor will become less and less accurate as the lead gets
    longer due to electrical noise on the line and the resistance of the wire.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将温度传感器与 Arduino 之间的距离拉得多远，但这有一定的限制。你可以将连接到 TMP36 的引线做得长达 20 英尺（7 米），但是随着引线长度的增加，传感器的准确度会逐渐下降，原因是线路上的电噪声和电线的电阻。
- en: Leave the sensor near the item you want to stay at a certain temperature and
    watch the LCD. If that wine cellar just won’t stay cool enough, try setting up
    the sensor in different rooms in your base until you find one with the right climate.
    If there isn’t a good room for the wine, just put the sensor back on your generator,
    invite the other survivors in your area over for a drink, and have an antizombie
    strategy meeting.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 将传感器放置在你希望保持某个温度的物品附近，并观察 LCD 屏幕。如果酒窖温度始终无法保持足够低，试着将传感器放在基地的不同房间，直到找到一个合适的环境。如果没有合适的房间存放酒，只需把传感器放回发电机旁，邀请你周围的其他幸存者来喝一杯，并举行一个抗僵尸策略会议。
- en: Now that you have a bunch of sensors to warn you of dangers in your base, in
    the next chapter, you’ll combine the Arduino projects with a Raspberry Pi to make
    a control center.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了一堆传感器来提醒你基地中的危险，在下一章中，你将把 Arduino 项目与树莓派结合，制作一个控制中心。
