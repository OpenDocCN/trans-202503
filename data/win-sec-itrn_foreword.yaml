- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: <samp class="SANS_Dogma_OT_Bold_B_11">FOREWORD</samp>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_11">前言</samp>
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: A Microsoft Technical Fellow once told me he had never met someone who understood
    how the security of the Windows operating system actually worked. While I don’t
    think he was right (and plan to send him a copy of this book to prove it), he
    had a point. Though critical, there is no doubt that Windows security is complex.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一位微软技术院士曾告诉我，他从未遇到过能够真正理解 Windows 操作系统安全性是如何工作的的人。虽然我不认为他是对的（并且计划给他寄一本这本书以证明这一点），但他说的确实有一定道理。尽管至关重要，Windows
    安全性毫无疑问是复杂的。
- en: One of the reasons for this is related to the core architectural difference
    between Linux and Windows. Linux is a file-oriented operating system, while Windows
    is API oriented, and though APIs can provide a much richer set of capabilities,
    they come at the expense of simplicity. So, exploring an API-oriented operating
    system is more difficult. You need to read the API documentation, write code,
    compile and run it, and debug the results.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 造成这种情况的原因之一与 Linux 和 Windows 之间的核心架构差异有关。Linux 是面向文件的操作系统，而 Windows 是面向 API
    的，虽然 API 可以提供更丰富的功能集，但它们也牺牲了简洁性。因此，探索一个面向 API 的操作系统更为困难。你需要阅读 API 文档，编写代码，编译并运行它，然后调试结果。
- en: This is a very time-consuming loop, and it’s why so few people have a deep understanding
    of how Windows security works—it’s just too hard to explore.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常耗时的过程，这也是为什么那么少有人能够深入理解 Windows 安全性是如何运作的——因为它实在是太难以探索了。
- en: It was because of these problems that I invented PowerShell. I wanted administrators
    to automate Windows and had originally tried to do so by distributing Unix tools
    for free. (Remember Windows Services for Unix?) This failed because Unix tools
    work on files, while everything important in Windows lives behind an API. Thus,
    <samp class="SANS_TheSansMonoCd_W5Regular_11">awk</samp> didn’t work against the
    registry, <samp class="SANS_TheSansMonoCd_W5Regular_11">grep</samp> didn’t work
    against Windows Management Instrumentation (WMI), <samp class="SANS_TheSansMonoCd_W5Regular_11">sed</samp>
    didn’t work against Active Directory, and so on. What we needed was an API-oriented
    command line interface and scripting tool. So, I created PowerShell.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 正是因为这些问题，我发明了 PowerShell。我希望管理员能够自动化 Windows 操作系统，最初我尝试通过免费分发 Unix 工具来实现这一点。（还记得
    Windows Services for Unix 吗？）这个尝试失败了，因为 Unix 工具是针对文件的，而 Windows 中所有重要的东西都在 API
    后面。因此，<samp class="SANS_TheSansMonoCd_W5Regular_11">awk</samp> 无法在注册表中工作，<samp
    class="SANS_TheSansMonoCd_W5Regular_11">grep</samp> 无法在 Windows 管理工具（WMI）中工作，<samp
    class="SANS_TheSansMonoCd_W5Regular_11">sed</samp> 无法在活动目录中工作，等等。我们需要的是一个面向 API
    的命令行界面和脚本工具。所以，我创造了 PowerShell。
- en: 'Today, James is using PowerShell to address the difficulty of acquiring Windows
    security expertise; he has made the system explorable. Step one: install his PowerShell
    module, <samp class="SANS_TheSansMonoCd_W5Regular_11">NTObjectManager</samp>,
    which provides over 550 cmdlets to experiment with all aspects of Windows security.
    This hands-on exploration will allow you to understand how things really work.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，James 使用 PowerShell 解决了获取 Windows 安全专业知识的难题；他让这个系统变得可以探索。第一步：安装他的 PowerShell
    模块，<samp class="SANS_TheSansMonoCd_W5Regular_11">NTObjectManager</samp>，该模块提供了超过
    550 个 cmdlet，可以用来实验 Windows 安全的各个方面。通过这种动手探索，你将理解事物如何真正运作。
- en: This book belongs on the desk of every security professional and developer working
    with Windows security. [Part I](part1.xhtml) provides an overview of Windows security’s
    architecture, [Part II](part2.xhtml) covers the details of the operating system’s
    security mechanisms and services, and [Part III](part3.xhtml) explores the various
    aspects of Windows authentication. Each chapter includes a set of PowerShell examples.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是每一位从事 Windows 安全工作的安全专家和开发人员的必备工具。[第一部分](part1.xhtml)概述了 Windows 安全架构，[第二部分](part2.xhtml)详细介绍了操作系统的安全机制和服务，[第三部分](part3.xhtml)探讨了
    Windows 认证的各个方面。每一章都包含了一组 PowerShell 示例。
- en: I strongly encourage you to follow the examples provided; exploration turns
    words into experience, and experience is the foundation of competence. Run the
    commands, make intentional mistakes, and see what errors you get. In doing so,
    you’ll acquire a deep understanding of the system.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我强烈建议你遵循所提供的示例；探索将文字转化为经验，而经验是能力的基础。运行命令，故意犯错，并查看错误信息。通过这样做，你将获得对系统的深刻理解。
- en: 'And trust me: it will be fun.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 相信我：这将会很有趣。
- en: Jeffrey Snover
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Jeffrey Snover
- en: Inventor of PowerShell, former chief architect for Windows Server, and former
    Microsoft Technical Fellow
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 发明者，前 Windows Server 首席架构师，前微软技术院士
