- en: '**1**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**1**'
- en: '**INTRODUCING SMALL BASIC**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**介绍小型Basic**'
- en: '![image](graphics/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/common01.jpg)'
- en: Bill Gates once had a goal to get a computer into every home. Now, nearly every
    desk has a personal computer—so just about anyone can learn to code, too. In this
    book, you’ll learn to program with a language called Microsoft Small Basic.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 比尔·盖茨曾经有一个目标：让每个家庭都有一台计算机。现在，几乎每个桌子上都有个人计算机——所以几乎每个人也可以学习编程了。在本书中，你将学习使用一种名为Microsoft
    Small Basic的编程语言。
- en: We’ll start this chapter by explaining some general computing concepts and Small
    Basic itself. Then we’ll show you how to set up everything you need to use Small
    Basic and top it off with writing your first program!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从解释一些基本的计算机概念和Small Basic本身开始本章内容。接着，我们将向你展示如何设置使用Small Basic所需的一切，并最后写出你的第一个程序！
- en: '**What Is a Computer?**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**什么是计算机？**'
- en: A computer is an electronic device that processes data according to a set of
    instructions—it’s that magical device in your pocket or on your desk or lap. Computers
    can perform calculations (like your math teacher) and compare numbers (like in
    fantasy football), and they can store, retrieve, and process data at high levels
    of speed and accuracy (like parents remembering a curfew).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机是一种电子设备，它根据一组指令处理数据——它就是你口袋里或桌面上或膝上的那个神奇设备。计算机可以进行计算（就像你的数学老师一样），并比较数字（比如在幻想足球中），它们能够以高速和高精度存储、检索和处理数据（就像父母记住宵禁时间一样）。
- en: A computer’s hardware is everything you can touch on your computer—inside the
    guts of every computer are hundreds of interconnected electronic pieces. If you
    want to imagine data inside your computer, picture a massive mall with hundreds
    of stores and tens of thousands of shoppers moving like clockwork between the
    stores.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机的硬件是指你能触摸到的所有部分——每台计算机内部都包含数百个相互连接的电子元件。如果你想象计算机中的数据，可以把它想象成一个庞大的商场，里面有成百上千的商店，成千上万的顾客像时钟一样在商店之间移动。
- en: But without something more, all that hardware couldn’t do anything useful. Every
    computer requires programs to tell it what to do—we call these instructions *software*.
    The people who can write software are called *programmers*—and you’re about to
    become one today.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 但没有一些额外的东西，这些硬件什么也做不了。每台计算机都需要程序来告诉它该做什么——我们称这些指令为*软件*。能够编写软件的人被称为*程序员*——今天你就要成为其中一员。
- en: '**What Is a Computer Program?**'
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**什么是计算机程序？**'
- en: A computer program is a set of instructions given to a computer to perform a
    task (like a list of homework from your teacher). Your web browser, your favorite
    video games, word processors—these are all computer programs.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机程序是一组指令，给计算机执行某个任务（就像老师布置的作业清单）。你的网页浏览器、你最喜欢的视频游戏、文字处理器——这些都是计算机程序。
- en: A program tells the computer what data to read (like numbers or text), where
    to read the data from (like from a user, file, or the Internet), how to process
    this data (it might search, sort, or calculate the data), what kind of information
    to produce (like paragraphs, reports, or graphs), where to store the produced
    output (like a disk, network, or database), and how to display the results (like
    through a monitor, printer, or plotter). Whoa, that’s a lot!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 程序告诉计算机要读取哪些数据（比如数字或文本）、从哪里读取数据（比如从用户、文件或互联网）、如何处理这些数据（可能是搜索、排序或计算数据）、要生成什么样的信息（比如段落、报告或图表）、将生成的输出存储在哪里（比如磁盘、网络或数据库），以及如何显示结果（比如通过显示器、打印机或绘图仪）。哇，这真是很多内容！
- en: A computer program specifies every detail along the way. Computers communicate
    in machine language, which is a bunch of 1s and 0s. (Can you imagine talking 1s
    and 0s to your friends?) A long time ago, the first computer programs ever written
    were actually entered into to the computer by flipping some switches on the computer’s
    front panel (on for 1, off for 0). Would you want to flip switches all day? Imagine
    the errors!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机程序指定了执行过程中的每个细节。计算机使用机器语言进行通信，这种语言由一堆1和0组成。（你能想象和朋友们用1和0交流吗？）很久以前，第一批计算机程序实际上是通过在计算机前面板上切换一些开关来输入的（1为开，0为关）。你想整天切换开关吗？想象一下可能出现的错误！
- en: Luckily, computer scientists invented programming languages, which are a lot
    easier to use than machine language. Today there are hundreds of programming languages,
    but Small Basic is the programming language you’ll learn in this book!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，计算机科学家发明了编程语言，这些语言比机器语言更容易使用。今天有成百上千种编程语言，但在本书中你将学习的编程语言就是Small Basic！
- en: '**What Is Small Basic?**'
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**什么是小型Basic？**'
- en: Small Basic is a free programming language that Microsoft created for anyone
    who wants to learn programming. You can write all kinds of applications with Small
    Basic, including games, simulations, animations, and more.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 小型基础是一种微软为任何想学习编程的人创建的免费编程语言。你可以使用小型基础编写各种应用程序，包括游戏、模拟、动画等。
- en: How did the language come about? It started with a programmer at Microsoft named
    Vijaye Raji. Raji had just read David Brin’s article, “Why Johnny Can’t Code,”^([1](footnote.html#fn02))
    which describes how valuable it is to learn and teach coding in BASIC. In his
    article, Brin challenged Microsoft to make a new BASIC language that would help
    kids learn to code, and Raji accepted that challenge. Although BASIC was crucial
    to Microsoft’s success in the 1970s, 1980s, and 1990s, there really wasn’t a great
    programming language suitable for beginners in 2007.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这个语言是如何诞生的呢？它源于微软的一位程序员Vijaye Raji。Raji刚刚读了David Brin的文章《为什么Johnny不会编程》，^([1](footnote.html#fn02))
    文章描述了学习和教授BASIC编程语言的价值。在文章中，Brin挑战微软创造一种新的BASIC语言，帮助孩子们学习编程，Raji接受了这个挑战。尽管BASIC在1970年代、1980年代和1990年代对微软的成功至关重要，但在2007年，实际上并没有适合初学者的优秀编程语言。
- en: So Raji wondered if he could create a smaller version of BASIC using only the
    simplest parts of the original language. On October 23, 2008, he released Microsoft
    Small Basic v0.1, the first version of Small Basic.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 所以Raji想知道是否可以只使用原始语言中最简单的部分，创建一个简化版的BASIC。2008年10月23日，他发布了微软小型基础v0.1，这是小型基础的第一个版本。
- en: '**The Vision of Small Basic**'
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**小型基础的愿景**'
- en: 'Small Basic’s four goals will help make your learning experience as awesome
    as possible:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 小型基础的四个目标将帮助你获得尽可能棒的学习体验：
- en: • **It’s Simple.** Small Basic is a simple programming language with a helpful
    code Editor and a Help Area to make coding easy.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: • **简单**。小型基础是一种简单的编程语言，配有便捷的代码编辑器和帮助区域，使得编程变得轻松。
- en: • **It’s Fun.** Small Basic lets you create games and other cool programs right
    away. It also lets you command a turtle to make art, and it’s fun to use!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: • **有趣**。小型基础让你立即开始创建游戏和其他有趣的程序。它还允许你控制海龟绘制艺术，非常有趣！
- en: • **It’s Social.** With Small Basic, you can publish your game to the Web on
    the Microsoft gallery, show it to your friends, and embed it on your blog or website.
    Your friends can import your program and collaborate with you to make it better.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: • **社交性**。使用小型基础，你可以将你的游戏发布到微软画廊网站上，展示给朋友们，并将它嵌入到你的博客或网站上。你的朋友们可以导入你的程序，与您合作改进它。
- en: • **It’s Gradual.** Once you learn the fundamentals of programming with Small
    Basic, it’s easy to export your code into the free Visual Studio Community and
    start a new adventure with Visual Basic .NET, a programming language that’s used
    by millions of professional programmers and an important next step in your learning
    journey.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: • **渐进性**。一旦你掌握了小型基础的编程基础，就可以轻松地将代码导出到免费的Visual Studio Community，并开始新的冒险，学习Visual
    Basic .NET，这是一种被数百万专业程序员使用的编程语言，也是你学习旅程中的一个重要步骤。
- en: We’ll cover everything you need to get started with Small Basic in this book!
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将涵盖你开始使用小型基础所需的所有内容！
- en: '**The Basics of Small Basic**'
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**小型基础的基础**'
- en: The three main parts of Small Basic are the language, the supporting library,
    and the *programming environment*, which is the interface you’ll use to write
    your own programs. Let’s explore each element now.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 小型基础的三个主要部分是语言、支持库和*编程环境*，后者是你用来编写自己程序的界面。现在，让我们来探索每个元素。
- en: '***The Small Basic Language***'
  id: totrans-27
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***小型基础语言***'
- en: To form a valid sentence in English, you need to follow its grammatical rules.
    In the same way, to write a valid Small Basic program, you must follow the grammatical
    rules of Small Basic, which are called *syntax rules*. Syntax includes punctuation,
    spelling, statement ordering, and so on. When you break these rules, Small Basic
    detects all the *syntax errors* in your program and reports them to you so you
    can fix them.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在英语中形成一个有效的句子，你需要遵循其语法规则。同样，要编写一个有效的小型基础程序，你必须遵循小型基础的语法规则，这些规则被称为*语法规则*。语法包括标点、拼写、语句顺序等。当你违反这些规则时，小型基础会检测到程序中的所有*语法错误*并报告给你，以便你修复它们。
- en: '***The Small Basic Library***'
  id: totrans-29
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***小型基础库***'
- en: The Small Basic *library* contains hundreds of methods that you can use in your
    programs to perform different tasks. For example, you can use these methods when
    you want to tell the computer to display an image on the screen, draw a circle,
    download a file from the Internet, or even compute the square root of 275,625.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Small Basic *库* 包含了数百种方法，你可以在程序中使用它们来执行不同的任务。例如，当你想让计算机在屏幕上显示图片、画圆形、从互联网上下载文件，甚至计算
    275,625 的平方根时，你都可以使用这些方法。
- en: '***The Small Basic Development Environment***'
  id: totrans-31
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Small Basic 开发环境***'
- en: Small Basic comes with an *integrated development environment (IDE)*, which
    is the application you’ll use to write your programs. The IDE contains a text
    Editor (in which you’ll type your program) and a Toolbar. The Toolbar has buttons
    that let you save and run your program, open a program so you can modify it, share
    your program on the Web, graduate your program to Visual Basic, and much more.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Small Basic 配备了一个*集成开发环境（IDE）*，这是你用来编写程序的应用程序。IDE 包含一个文本编辑器（你将在其中输入程序）和一个工具栏。工具栏有一些按钮，可以让你保存和运行程序，打开程序以便修改，分享程序到网页，将程序转换为
    Visual Basic 等等。
- en: '**Installing Small Basic**'
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**安装 Small Basic**'
- en: The first step in your learning journey is to install Small Basic on your computer.
    Open your web browser, go to Microsoft’s Small Basic website at *[http://www.smallbasic.com/](http://www.smallbasic.com/)*,
    and click the **Download** button in the upper-right corner. You’ll go to the
    Download page to pick your operating system and language. When you start the download,
    a dialog appears asking for your permission to open the *SmallBasic.msi* file.
    Click the **Run** or **Open** button to start the setup wizard.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你学习旅程的第一步是将 Small Basic 安装到你的计算机上。打开你的网页浏览器，访问微软的 Small Basic 网站 *[http://www.smallbasic.com/](http://www.smallbasic.com/)*，并点击右上角的
    **下载** 按钮。你将进入下载页面，选择操作系统和语言。开始下载时，会弹出一个对话框，询问是否允许打开 *SmallBasic.msi* 文件。点击 **运行**
    或 **打开** 按钮开始安装向导。
- en: When the wizard starts, click **Next** on the first page, accept the License
    Agreement, click **Next** again, click **Next** for the default setup, and then
    click **Install**. (If a User Access Control dialog pops up and asks for your
    permission to install the program, click **Yes**.) Click **Finish** when the installation
    is done. If you need to see these steps in detail, check out *[http://tiny.cc/installationguide/](http://tiny.cc/installationguide/)*.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 启动安装向导后，在第一页点击 **下一步**，接受许可协议，再次点击 **下一步**，选择默认设置并点击 **安装**。（如果弹出用户访问控制对话框并请求安装许可，点击
    **是**。）安装完成后，点击 **完成**。如果你需要查看这些步骤的详细信息，请访问 *[http://tiny.cc/installationguide/](http://tiny.cc/installationguide/)*。
- en: '**The Small Basic IDE**'
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Small Basic IDE**'
- en: Now that your installation is complete, let’s take a look at the Small Basic
    IDE. Open the Windows Start menu, and either type **Small Basic** to search for
    it (and click to open it) or select **All Programs** ![image](graphics/arrow.jpg)
    **Small Basic** ![image](graphics/arrow.jpg) **Microsoft Small Basic**. When you
    run the program for the first time, you’ll see something like [Figure 1-1](ch01.html#ch1fig1)
    (enter `Prog` in the Editor to see the IntelliSense menu).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的安装完成了，让我们来看看 Small Basic IDE。打开 Windows 开始菜单，输入 **Small Basic** 来搜索并打开它，或者选择
    **所有程序** ![image](graphics/arrow.jpg) **Small Basic** ![image](graphics/arrow.jpg)
    **Microsoft Small Basic**。当你第一次运行程序时，你会看到类似于 [图 1-1](ch01.html#ch1fig1) 的界面（在编辑器中输入
    `Prog` 来查看 IntelliSense 菜单）。
- en: The IDE contains four main parts. The Editor ➊ is where you enter your Small
    Basic programs. You can open and work with multiple Editor windows at the same
    time, but only one Editor is active at once. Right-click the Editor to see a pop-up
    menu with options like Cut, Copy, Paste, and Find. The menu also has a Format
    Program option that indents the lines in your program to make it easier to read.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: IDE 包含四个主要部分。编辑器 ➊ 是你输入 Small Basic 程序的地方。你可以同时打开并处理多个编辑器窗口，但每次只有一个编辑器窗口是活动的。右键点击编辑器可以查看包含剪切、复制、粘贴和查找等选项的弹出菜单。该菜单还包含一个“格式化程序”选项，可以对程序中的行进行缩进，使其更容易阅读。
- en: '![image](graphics/f01-01.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f01-01.jpg)'
- en: '*Figure 1-1: The Small Basic IDE*'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1-1：Small Basic IDE*'
- en: The Toolbar ➋ contains buttons that let you edit and run your program, and the
    Help Area ➌ provides instant information about the code you enter into the Editor.
    The Surface ➍ is an open area where you can move and organize your Editor windows
    for each Small Basic program.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 工具栏 ➋ 包含按钮，允许你编辑和运行程序，帮助区域 ➌ 提供关于你输入编辑器的代码的即时信息。工作区 ➍ 是一个开放区域，你可以在这里移动和整理每个
    Small Basic 程序的编辑器窗口。
- en: You’ll use the Toolbar a lot, so let’s explore it in detail.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你将经常使用工具栏，所以让我们详细了解它。
- en: '***Opening and Saving Your Work***'
  id: totrans-43
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***打开和保存你的工作***'
- en: In the Toolbar’s File group, click **New** (CTRL-N) to start programming from
    scratch, or click **Open** (CTRL-O) to pick up where you left off in writing a
    program. **Save** (CTRL-S) often so you don’t lose your work, and click **Save
    As** to save your program in a new file.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在工具栏的文件组中，点击**新建**（CTRL-N）从头开始编程，或点击**打开**（CTRL-O）继续写程序。**保存**（CTRL-S）经常保存，以免丢失工作，并点击**另存为**将程序保存在新文件中。
- en: '***Sharing Your Work and Importing Games***'
  id: totrans-45
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***分享你的作品并导入游戏***'
- en: Let’s say your friend just published a new game to the Small Basic website,
    and you want to check it out. In the Web group, click **Import** to enter the
    Import ID (which you get from your friend) and download your friend’s code. Then
    you can make the game even cooler with your own modifications.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你的朋友刚刚将一个新游戏发布到 Small Basic 网站，而你想看看。点击网页组中的**导入**，输入导入 ID（你从朋友那里获得的），然后下载你朋友的代码。然后，你可以通过自己的修改使这个游戏更酷。
- en: Let’s try opening a game that someone has already made. Click **Import**, and
    then enter the code **TETRIS**. You’ll see the code someone wrote to re-create
    the famous game, and you can see how it was made. To play the game now, click
    **Run**.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试打开别人已经制作的游戏。点击**导入**，然后输入代码**TETRIS**。你将看到某人写的代码，重现了著名的游戏，并可以看到它是如何制作的。现在，点击**运行**来玩游戏。
- en: Later, when you’re ready to share your own programs, you can click **Publish**,
    and Small Basic will publish your program to the Web so your friends can play
    your game or app online and see your code. You can also share your program in
    the Small Basic forum to get direct help from the community. Small Basic even
    gives you the option to embed your code snippet so you can add the project to
    your website. You’ll find the embed code on the published web page.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后，当你准备好分享自己的程序时，可以点击**发布**，Small Basic 将把你的程序发布到网页上，供你的朋友在线玩你的游戏或应用，并查看你的代码。你还可以在
    Small Basic 论坛分享你的程序，直接向社区寻求帮助。Small Basic 甚至允许你嵌入代码片段，这样你就可以将项目添加到你的网站上。你可以在发布的网页上找到嵌入代码。
- en: When you click **Publish**, you’ll see a dialog like the one in [Figure 1-2](ch01.html#ch1fig2).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击**发布**时，你将看到一个对话框，类似于[图 1-2](ch01.html#ch1fig2)。
- en: '![image](graphics/f01-02.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f01-02.jpg)'
- en: '*Figure 1-2: The Publish to Web dialog*'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1-2：发布到网页对话框*'
- en: When you Publish your code, in addition to getting the Import ID and the web
    page URL, you can also click **Add More Details** to enter a title, description,
    and category (like *game*, *sample exercise*, *example*, *math*, *fun*, or *miscellaneous*)
    for your program.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当你发布代码时，除了获得导入 ID 和网页 URL 外，你还可以点击**添加更多详细信息**，输入程序的标题、描述和类别（如*游戏*、*示例练习*、*示例*、*数学*、*娱乐*或*杂项*）。
- en: '***Copy and Paste; Undo and Redo***'
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***复制和粘贴；撤销和重做***'
- en: In Small Basic, you can edit your code like you’re editing any kind of text.
    From the Clipboard group, click **Cut** (CTRL-X) to remove a piece of code from
    one place in the Editor to paste it somewhere else. To avoid retyping code, click
    **Copy** (CTRL-C). To select all your code, press CTRL-A, and then cut or copy
    it.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Small Basic 中，你可以像编辑任何文本一样编辑代码。在剪贴板组中，点击**剪切**（CTRL-X）将代码从编辑器中的一个位置移除并粘贴到另一个位置。为了避免重新输入代码，点击**复制**（CTRL-C）。要选择所有代码，按
    CTRL-A，然后剪切或复制它。
- en: After you cut or copy, click **Paste** (CTRL-V) to paste the contents into the
    Editor. If you make a mistake, no worries! Just click **Undo** (CTRL-Z). If you
    click **Undo** too many times, click **Redo** (CTRL-Y) to reverse the change.
    You can also look for a bit of code in a large file. To open the Find window and
    search for your text, just press F3, press CTRL-F, or right-click in the Editor
    and click **Find** in the context menu.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在剪切或复制之后，点击**粘贴**（CTRL-V）将内容粘贴到编辑器中。如果你犯了错误，不用担心！只需点击**撤销**（CTRL-Z）。如果你点击了**撤销**太多次，点击**重做**（CTRL-Y）来恢复更改。你还可以在一个大型文件中查找某段代码。要打开查找窗口并搜索文本，只需按
    F3，按 CTRL-F，或右击编辑器并在上下文菜单中点击**查找**。
- en: '***Running Your Program and Graduating***'
  id: totrans-56
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***运行你的程序并毕业***'
- en: When you finish a program, click **Run** (F5) in the Program group to *compile*
    it; the Small Basic compiler, which is part of the IDE, checks if you have any
    errors, and if not, builds your program. When you’ve mastered Small Basic, just
    click **Graduate** to export your code into Visual Basic in Visual Studio Community
    and go on to learn your next language.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成一个程序时，点击**运行**（F5）按钮进行*编译*；Small Basic编译器，作为IDE的一部分，会检查是否有错误，如果没有，则构建你的程序。当你掌握了Small
    Basic后，只需点击**毕业**按钮，将代码导出到Visual Studio Community中的Visual Basic，并开始学习下一种语言。
- en: '**Writing and Running Your First Program**'
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**编写和运行你的第一个程序**'
- en: Now that you know your way around the IDE, let’s write a Small Basic program.
    First, create a new folder on your computer called *Small Basic*; this is where
    you’ll save all the programs you create throughout this book.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经熟悉了IDE，让我们写一个Small Basic程序。首先，在你的计算机上创建一个名为*Small Basic*的新文件夹；这里将是你保存本书中创建的所有程序的地方。
- en: 'Then click the **New** button to open a new Editor window, and follow these
    steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然后点击**新建**按钮打开一个新的编辑器窗口，并按照以下步骤操作：
- en: Enter the program in [Listing 1-1](ch01.html#ch1ex1) into the Editor. You’ll
    need to enter it exactly as you see it.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑器中输入[清单 1-1](ch01.html#ch1ex1)中的程序。你需要准确地按照所示输入。
- en: '[PRE0]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Listing 1-1: Your first program*'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*清单 1-1：你的第一个程序*'
- en: '**NOTE**'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*When you enter a listing to try it out, don’t include the line numbers at
    the left! These numbers are just for reference; we’ll use them to explain the
    code. You’ll see them in your Editor, too, but they aren’t part of your code.*'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*当你输入清单并尝试时，不要包括左侧的行号！这些行号仅供参考；我们会用它们来解释代码。你在编辑器中也会看到这些行号，但它们不是代码的一部分。*'
- en: Click the **Save** button on the Toolbar (or press CTRL-S), browse to the *Small
    Basic* folder you just made, and save your program as *Greetings.sb*.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击工具栏上的**保存**按钮（或按CTRL-S），浏览到你刚创建的*Small Basic*文件夹，并将程序保存为*Greetings.sb*。
- en: Click **Run** on the Toolbar. If you didn’t make any typing mistakes, you’ll
    see an output window like the one in [Figure 1-3](ch01.html#ch1fig3).
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击工具栏上的**运行**按钮。如果没有输入错误，你将看到一个类似于[图 1-3](ch01.html#ch1fig3)的输出窗口。
- en: '![image](graphics/f01-03.jpg)'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](graphics/f01-03.jpg)'
- en: '*Figure 1-3: The output of* Greetings.sb'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 1-3：* Greetings.sb的输出'
- en: '**NOTE**'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*When you run this program, your window will have a black background; that
    is the default background color for the text window. The images in this book were
    created with a white background to make it easier for you to read them.*'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*当你运行这个程序时，窗口将有一个黑色的背景；这是文本窗口的默认背景色。本书中的图片使用白色背景，便于你阅读。*'
- en: Even though it’s short, this is a complete Small Basic program! But what does
    each piece of the program do? Let’s dissect it.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这段程序很短，但它是一个完整的Small Basic程序！那么每一部分程序是做什么的呢？让我们来分析一下。
- en: '***Objects and Methods***'
  id: totrans-73
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***对象和方法***'
- en: The window in [Figure 1-3](ch01.html#ch1fig3) is the *text window*, and it can
    only display text. You told Small Basic to bring up the text window using `TextWindow`,
    one of the many *objects* in the Small Basic library. You can think of an object
    as a little toolbox for a specific job, such as doing math problems, defining
    words, or drawing pictures.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 1-3](ch01.html#ch1fig3)中的窗口是*文本窗口*，它只能显示文本。你通过`TextWindow`（Small Basic库中的许多*对象*之一）告诉Small
    Basic弹出文本窗口。你可以将对象看作是为特定任务提供工具的小工具箱，例如解决数学问题、定义单词或绘制图片。'
- en: Objects in Small Basic can perform predefined tasks using *methods*. Methods
    are like the tools in your object toolbox. To get most methods to do something,
    you have to give them one or more values (such as text or numbers) to act on.
    Each value is called an *argument*.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Small Basic中的对象可以通过使用*方法*执行预定义的任务。方法就像是你对象工具箱中的工具。为了让大多数方法完成某个任务，你需要给它们一个或多个值（如文本或数字）来操作。每个值都称为*参数*。
- en: '`WriteLine()` is one method of the `TextWindow` object, and the message `"Greetings,
    Planet!"` is an argument that goes in the parentheses. The statement `TextWindow.WriteLine()`
    instructs the computer to display the message `Greetings, Planet!` in the text
    window.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`WriteLine()`是`TextWindow`对象的一个方法，消息`"Greetings, Planet!"`是传递给括号的一个参数。语句`TextWindow.WriteLine()`指示计算机在文本窗口中显示消息`Greetings,
    Planet!`。'
- en: Throughout this book we’ll include parentheses with the names of the methods,
    like `WriteLine()`, so you can easily tell that they’re methods.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将包括方法名称的括号，例如`WriteLine()`，以便你能轻松辨认出它们是方法。
- en: '***Naming Your Programs***'
  id: totrans-78
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***命名你的程序***'
- en: Project names can make it easy for you to identify what your project is about;
    these names don’t really matter much to Small Basic. Although we asked you to
    save this program as *Greetings.sb* because it was what the program was about,
    you could save it as *SecretGarden.sb*, *FuzzyKittens.sb*, or even *HungerBoardGames.sb*,
    if you really wanted to. Just don’t change the *.sb* part of the filename, which
    is called the *extension*. Small Basic programs use that extension by default,
    and there’s no reason to change it!
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 项目名称可以帮助你轻松识别项目的内容；这些名称对 Small Basic 来说并不重要。虽然我们建议你将该程序保存为*Greetings.sb*，因为它代表了程序的内容，但你也可以将它保存为*SecretGarden.sb*、*FuzzyKittens.sb*，甚至是*HungerBoardGames.sb*，如果你真想这么做的话。只是不要更改文件名的*
    .sb *部分，这叫做*扩展名*。Small Basic 程序默认使用这个扩展名，没有理由去更改它！
- en: '***Files Generated by Small Basic***'
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Small Basic 生成的文件***'
- en: When you click the Run button, Small Basic creates other files in order to run
    your program. Open the folder where you saved your *Greetings.sb* program. [Table
    1-1](ch01.html#ch1table1) lists the files you should find in that folder if you
    clicked Run earlier.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击运行按钮时，Small Basic 会生成其他文件以便运行你的程序。打开你保存*Greetings.sb*程序的文件夹。[表 1-1](ch01.html#ch1table1)列出了你在该文件夹中应该找到的文件，如果你之前点击了运行。
- en: '**Table 1-1:** Files Generated by the Small Basic Compiler'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 1-1：** Small Basic 编译器生成的文件'
- en: '| **File** | **Description** |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| **文件** | **描述** |'
- en: '| --- | --- |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| *Greetings.sb* | This is your *source code* file, which contains everything
    you entered into the IDE. If you want to edit your code and make it better, you
    edit this file. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| *Greetings.sb* | 这是你的*源代码*文件，包含你在 IDE 中输入的所有内容。如果你想编辑代码并使其更好，你就编辑这个文件。 |'
- en: '| *Greetings.exe* | This is the executable file created by Small Basic. This
    file is what your computer actually runs. Double-click this file, and your program
    will run. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| *Greetings.exe* | 这是 Small Basic 创建的可执行文件。这个文件是你电脑实际运行的文件。双击该文件，你的程序就会运行。
    |'
- en: '| *SmallBasicLibrary.dll* | You can ignore this file for now. The dynamic link
    library (*.dll*) file contains executable code that supplements your *Greetings.exe*
    file. The *Greetings.exe* file won’t run without this file! |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| *SmallBasicLibrary.dll* | 你现在可以忽略这个文件。动态链接库（*.dll*）文件包含补充*Greetings.exe*文件的可执行代码。没有这个文件，*Greetings.exe*
    文件无法运行！ |'
- en: '| *Greetings.pdb* | You can ignore this file for now, too. This program database
    (*.pdb*) file contains information that is used by advanced tools to *debug*,
    or fix any errors, in the program. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| *Greetings.pdb* | 你目前可以忽略这个文件。这个程序数据库（* .pdb *）文件包含高级工具用来*调试*，或修复程序中的错误所需的信息。
    |'
- en: Now that you’ve compiled your source code, you can also run your *Greetings.sb*
    program without using the IDE. You do this by double-clicking the *Greetings.exe*
    file.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经编译了源代码，你也可以在不使用 IDE 的情况下运行*Greetings.sb*程序。你只需双击*Greetings.exe*文件即可。
- en: '**NOTE**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*When you click Run after editing your source file, Small Basic overwrites
    the* .exe, .dll, *and* .pdb *files. If you want to keep these files, you need
    to manually copy them to a different location before you click Run. Also, don’t
    forget to click Save to save the changes to your* .sb *file.*'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '*当你编辑源文件后点击运行时，Small Basic 会覆盖* .exe、.dll *和* .pdb *文件。如果你想保留这些文件，你需要在点击运行之前手动将它们复制到其他位置。另外，别忘了点击保存，以便保存对*
    .sb *文件的更改。*'
- en: '***Helping Hands: IntelliSense and Syntax Coloring***'
  id: totrans-92
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***帮助提示：智能感知和语法高亮***'
- en: If you’re following along and typing in Small Basic, you’ve seen how it analyzes
    what you type, even before you finish the word. Small Basic offers a list of suggestions
    that could help you complete what you’re typing. You can scroll through this list
    by pressing the up and down arrows on your keyboard. Press ENTER or double-click
    your selection to insert the highlighted text into your code. This technology
    is called *intelligent sense* or *IntelliSense* for short. Use it to speed up
    your typing time and reduce your syntax errors.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在跟着操作并在 Small Basic 中输入，你会看到它会在你完成输入单词之前就分析你输入的内容。Small Basic 会提供一个建议列表，帮助你完成输入的内容。你可以通过按键盘上的上下箭头来滚动这个列表。按回车键或双击选项来将高亮的文本插入到代码中。这项技术叫做*智能感知*，简称*IntelliSense*。利用它可以加速你的输入速度，并减少语法错误。
- en: '**TIP**'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: '*You can make IntelliSense transparent by just holding down the* CTRL *key
    to see your code underneath it.*'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '*你可以通过按住* CTRL *键来使 IntelliSense 变得透明，以便查看下面的代码。*'
- en: You might have also noticed that the Small Basic Editor used different colors
    for some words in the program. This feature is called *syntax coloring*. *Keywords*,
    which are reserved words with special meanings to Small Basic, are shown in blue-purple.
    *Strings*, which are sequences of characters enclosed in quotes, are orange, and
    so are numbers. Method names are dark red, object names are blue-green, and so
    on. Syntax coloring helps you distinguish the different parts of the code and
    makes your program easier to read. You’ll learn more about these parts of code
    later in the book.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还注意到 Small Basic 编辑器使用不同的颜色显示了程序中的某些单词。这个功能叫做*语法高亮*。*关键字*是对 Small Basic 有特殊含义的保留字，显示为蓝紫色。*字符串*是用引号括起来的字符序列，显示为橙色，数字也是如此。方法名称是深红色的，对象名称是蓝绿色的，依此类推。语法高亮帮助你区分代码的不同部分，并使你的程序更易于阅读。你将在本书后面学到更多关于这些代码部分的内容。
- en: '**Drawing with Small Basic**'
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用 Small Basic 绘图**'
- en: The `TextWindow` object we used earlier works well for applications that don’t
    have a *graphical user interface (GUI)*, which is a user interface that contains
    buttons, text boxes, and images, like Microsoft Word or Angry Birds (or Angry
    Words). For example, you can use `TextWindow` to write applications that perform
    math problems or that process data, where the input and output use only characters
    (like text). This is called a *text-based user interface*. If you want to create
    an application with a GUI (pronounced *gooey*, like a candy bar), complete with
    buttons and images, you can use the Small Basic library’s `GraphicsWindow` object.
    Using `GraphicsWindow`, you can create applications that show buttons, images,
    and more for your users to interact with. Let’s try it out!
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前使用的`TextWindow`对象非常适合没有*图形用户界面 (GUI)* 的应用程序，GUI 是包含按钮、文本框和图像的用户界面，例如 Microsoft
    Word 或 Angry Birds（或 Angry Words）。例如，你可以使用`TextWindow`来编写执行数学题目或处理数据的应用程序，其中的输入和输出只使用字符（如文本）。这被称为*基于文本的用户界面*。如果你想创建一个具有
    GUI（发音为*gooey*，像糖果条一样）的应用程序，包含按钮和图像，你可以使用 Small Basic 库中的`GraphicsWindow`对象。使用`GraphicsWindow`，你可以创建展示按钮、图像等内容供用户互动的应用程序。让我们试试吧！
- en: Enter the program in [Listing 1-2](ch01.html#ch1ex2) into the Editor, and then
    click **Run** in the Toolbar.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 将[清单 1-2](ch01.html#ch1ex2)中的程序输入到编辑器中，然后点击工具栏中的**运行**。
- en: '[PRE1]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*Listing 1-2: Your first graphical program*'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 1-2：你的第一个图形程序*'
- en: This program uses the `DrawText()` method of the `GraphicsWindow` object to
    display a message. The `DrawText()` method requires three arguments. The first
    two arguments tell Small Basic the horizontal (*x*) and vertical (*y*) positions
    of the output message, starting in the upper-left corner of the window. The third
    argument tells Small Basic what text to display. The output of this program is
    shown in [Figure 1-4](ch01.html#ch1fig4). As you can see, the message is displayed
    at position (100, 50).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这个程序使用了`GraphicsWindow`对象的`DrawText()`方法来显示一条消息。`DrawText()`方法需要三个参数。前两个参数告诉
    Small Basic 输出消息的水平（*x*）和垂直（*y*）位置，从窗口的左上角开始。第三个参数告诉 Small Basic 显示什么文本。这个程序的输出如[图
    1-4](ch01.html#ch1fig4)所示。你可以看到，消息显示在位置 (100, 50)。
- en: '![image](graphics/f01-04.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f01-04.jpg)'
- en: '*Figure 1-4: The output of* Graphic.sb'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1-4：Graphic.sb 的输出*'
- en: The `GraphicsWindow` object contains many other methods that let you create
    GUI applications; explore a few of them in [Try It Out 1-1](ch01.html#ch01sb01).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`GraphicsWindow`对象包含许多其他方法，允许你创建 GUI 应用程序；在[试试看 1-1](ch01.html#ch01sb01)中可以探索其中的一些方法。'
- en: '**TRY IT OUT 1-1**'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**试试看 1-1**'
- en: 'Enter the following program into the Editor, and then run it to see what happens:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下程序输入到编辑器中，然后运行它，看看会发生什么：
- en: '[PRE2]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The output of the program is shown in [Figure 1-5](ch01.html#ch1fig5). The numbers
    illustrate how Small Basic followed your code.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 程序的输出如[图 1-5](ch01.html#ch1fig5)所示。数字显示了 Small Basic 如何跟随你的代码。
- en: '![image](graphics/f01-05.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f01-05.jpg)'
- en: '*Figure 1-5: The output of the program*'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1-5：程序的输出*'
- en: '**Programming Challenges**'
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**编程挑战**'
- en: If you get stuck, check out *[http://nostarch.com/smallbasic/](http://nostarch.com/smallbasic/)*
    for the solutions and for more resources and review questions for teachers and
    students.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你遇到问题，可以查看 *[http://nostarch.com/smallbasic/](http://nostarch.com/smallbasic/)*
    获取解决方案以及更多的资源和教师、学生的复习问题。
- en: 'Identify the objects, methods, arguments, and keywords in the following code
    snippet. (Hint: the Small Basic editor shows keywords in blue-purple.)'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以下代码片段中识别对象、方法、参数和关键字。（提示：Small Basic 编辑器会将关键字显示为蓝紫色。）
- en: '[PRE3]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Write a program to display your name in the text window.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个程序，在文本窗口中显示你的名字。
- en: 'Write a program to display your name in a message box using the `GraphicsWindow`
    object. (Hint: use the `ShowMessage()` method.)'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个程序，使用`GraphicsWindow`对象在消息框中显示你的名字。（提示：使用`ShowMessage()`方法。）
