- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: <samp class="SANS_Dogma_OT_Bold_B_11">AFTERWORD</samp>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_11">后记</samp>
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: '![](../images/opener.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/opener.png)'
- en: You’ve learned the core of the JavaScript language, you’ve worked through the
    book’s three projects, and you’re wondering what to do now. The good news (or
    the bad news, depending on your outlook) is that the learning never stops. There
    are many different directions in which you can take your programming career. Here
    are some suggestions about possible next steps and tools and resources to explore.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经学习了 JavaScript 语言的核心内容，完成了本书的三个项目，现在你可能在想接下来该做什么。好消息（或者坏消息，这取决于你的心态）是学习永远不会停止。你可以将编程事业带向许多不同的方向。以下是一些关于可能的下一步建议，以及可以探索的工具和资源。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Projects</samp>
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">项目</samp>
- en: You should have a fairly good understanding of how to set up a new JavaScript
    project at this point, so why not try building something new? One option would
    be to make your own game, using the techniques you learned in this book. Some
    relatively simple arcade games in a similar vein to *Pong* include *Snake*, *Space
    Invaders*, *Tetris*, and *Breakout*. Or you could try something completely different
    and make a word game, like *Wordle* or *Hangman*.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你应该已经相当了解如何设置一个新的 JavaScript 项目了，为什么不尝试构建一些新东西呢？一个选择是利用本书中学到的技术制作你自己的游戏。一些相对简单的街机游戏，如
    *Pong*，包括 *Snake*、*Space Invaders*、*Tetris* 和 *Breakout*。或者你可以尝试完全不同的东西，制作一个字谜游戏，比如
    *Wordle* 或 *Hangman*。
- en: You could also try to build on what you learned in the book’s other projects
    by making your own musical creation or data visualization. On the music side,
    you might want to experiment with making a drum machine, or perhaps an endless
    music generator. You could also use your knowledge to add sound effects to one
    of your games. On the data visualization side, there are countless other APIs
    you can try out for fetching data from other services. As discussed in [Chapter
    15](chapter15.xhtml), many APIs require some sort of authentication, which isn’t
    feasible for browser-based applications; with Node.js, however, you can experiment
    with building your own backend applications as well.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以尝试在本书其他项目的基础上进行扩展，创造属于你自己的音乐作品或数据可视化。在音乐方面，你可能想尝试制作一个鼓机，或者一个无限音乐生成器。你还可以利用你的知识为你开发的游戏加入音效。在数据可视化方面，有无数的其他
    API 可以尝试，用来从其他服务获取数据。如 [第 15 章](chapter15.xhtml) 中讨论的，许多 API 需要某种形式的身份验证，这对于基于浏览器的应用程序来说是不可行的；然而，使用
    Node.js，你可以尝试构建自己的后端应用程序。
- en: Of course, you shouldn’t feel limited to the sorts of projects you worked through
    in this book. If there’s something that interests you, try to build it! If you’re
    not sure where to start, use Google to get some ideas. JavaScript is one of the
    most popular languages in the world, so chances are somebody has written up instructions
    on doing whatever it is you want to do.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你不必仅限于本书中所做的项目。如果有某些东西引起了你的兴趣，试着去构建它！如果你不确定从哪里开始，可以用 Google 获取一些灵感。JavaScript
    是全球最受欢迎的语言之一，因此有人可能已经写好了关于如何做你想做的事的教程。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Node.js</samp>
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">Node.js</samp>
- en: This book only explains how to write JavaScript for running in web browsers,
    but with Node.js you can also run JavaScript on backend web servers. Check out
    [*https://<wbr>nodejs<wbr>.dev<wbr>/en<wbr>/learn<wbr>/*](https://nodejs.dev/en/learn/)
    for a great guide to getting started with Node.js. Once you have a backend for
    your app, you can start to do more interesting things, such as storing data on
    the user’s behalf, accessing third-party authenticated HTTP APIs with a secret
    key, and much more.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本书只解释了如何编写在 Web 浏览器中运行的 JavaScript，但通过 Node.js，你还可以在后端 Web 服务器上运行 JavaScript。查看
    [*https://<wbr>nodejs<wbr>.dev<wbr>/en<wbr>/learn<wbr>/*](https://nodejs.dev/en/learn/)
    以获得一个关于 Node.js 入门的优秀指南。一旦你为应用程序搭建了后端，就可以开始做更有趣的事情，比如代表用户存储数据、使用密钥访问第三方认证的 HTTP
    API 等等。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Tools</samp>
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">工具</samp>
- en: There are many tools of various kinds that will help you as you continue your
    programming journey. This section introduces a few of them, but it’s in no way
    comprehensive.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同种类的工具可以帮助你继续编程之旅。本节介绍了一些工具，但远非全面。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Git</samp>
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Git</samp>
- en: Git is a popular version control system that allows you to keep track of changes
    to your code and go back to earlier versions. When I first started programming,
    I would often find myself making changes to my code and breaking something, then
    not understanding how I had broken it and not being able to get back to the previous
    state. To avoid that, I started making backups of my code so I could go back to
    an earlier version. Git is a much better way to achieve the same goal. With Git,
    you make *commits* that store the state of your code at a particular point in
    time. Each commit builds on previous ones, while keeping track of what’s changed.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Git 是一个流行的版本控制系统，允许你跟踪代码的变化并回退到早期的版本。当我刚开始编程时，我常常会修改代码并破坏某些功能，然后不知道是怎么破坏的，也无法恢复到之前的状态。为了避免这种情况，我开始备份代码，以便能回到早期版本。而
    Git 是一种更好的方式来实现同样的目标。使用 Git 时，你会做出 *commit*，保存代码在某个特定时间点的状态。每个 commit 都是在之前的基础上构建的，同时记录了变化的内容。
- en: There are a lot of online resources for learning Git. Many of them can be found
    at [*https://<wbr>git<wbr>-scm<wbr>.com<wbr>/doc*](https://git-scm.com/doc).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多在线资源可以学习 Git。许多资源可以在 [*https://<wbr>git<wbr>-scm<wbr>.com<wbr>/doc*](https://git-scm.com/doc)
    找到。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">GitHub</samp>
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">GitHub</samp>
- en: Once you have Git installed on your computer, using GitHub (the service from
    which we drew our data in [Chapter 15](chapter15.xhtml)) is a great next step.
    GitHub provides a way to upload and share your local Git repositories so they
    can be accessed anywhere.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在电脑上安装了 Git，使用 GitHub（我们在 [第 15 章](chapter15.xhtml) 中使用的数据来源）是一个很好的下一步。GitHub
    提供了一种上传和共享本地 Git 仓库的方式，让它们可以在任何地方访问。
- en: GitHub also gives you access to millions of open source repositories that you
    can *fork* (make your own copy of) and modify to your heart’s content. For example,
    to see all my public repositories, go to [*https://<wbr>github<wbr>.com<wbr>/skilldrick*](https://github.com/skilldrick).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 还为你提供了访问数百万个开源仓库的权限，你可以 *fork*（创建自己的副本）并根据需要修改它们。例如，要查看我所有的公开仓库，请访问 [*https://<wbr>github<wbr>.com<wbr>/skilldrick*](https://github.com/skilldrick)。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">CodePen</samp>
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">CodePen</samp>
- en: To share your projects with others, you’ll need a way to make them accessible
    via the web. You could set up your own web hosting, but a much easier option is
    using CodePen ([*https://<wbr>codepen<wbr>.io*](https://codepen.io)). This is
    also the tool used for hosting the companion resources for this book, available
    at [*https://<wbr>codepen<wbr>.io<wbr>/collection<wbr>/ZMjYLO*](https://codepen.io/collection/ZMjYLO).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要与他人分享你的项目，你需要一种通过网络使它们可访问的方式。你可以自己搭建网站托管，但一个更简单的选择是使用 CodePen（[*https://<wbr>codepen<wbr>.io*](https://codepen.io)）。这也是本书配套资源的托管工具，资源可以在
    [*https://<wbr>codepen<wbr>.io<wbr>/collection<wbr>/ZMjYLO*](https://codepen.io/collection/ZMjYLO)
    查看。
- en: With CodePen, you can create and share projects built using HTML, CSS, and JavaScript.
    The code is all viewable on the page in separate panels. For example, [Figure
    A-1](#figA-1) shows a sample Pen I put together that adds an extra exclamation
    mark every time you click the text. Check out the Pen online at [*https://<wbr>codepen<wbr>.io<wbr>/skilldrick<wbr>/pen<wbr>/abKaQpo*](https://codepen.io/skilldrick/pen/abKaQpo).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 CodePen，你可以创建并分享使用 HTML、CSS 和 JavaScript 构建的项目。页面上的代码会在不同的面板中显示。例如，[图 A-1](#figA-1)
    显示了我制作的一个示例 Pen，每次点击文本时都会添加一个额外的感叹号。你可以在线查看该 Pen，链接为 [*https://<wbr>codepen<wbr>.io<wbr>/skilldrick<wbr>/pen<wbr>/abKaQpo*](https://codepen.io/skilldrick/pen/abKaQpo)。
- en: '![](../images/Figure_A-1.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/Figure_A-1.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-1: A sample Pen on
    CodePen</samp>'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 A-1：CodePen 上的一个示例 Pen</samp>
- en: In the HTML panel, only the contents of the body element are needed. CodePen
    supplies the rest of the HTML structure automatically. You can also easily include
    external JavaScript libraries through the Settings dialog.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在 HTML 面板中，仅需包含 body 元素的内容。CodePen 会自动提供其余的 HTML 结构。你也可以通过设置对话框轻松地引入外部 JavaScript
    库。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Glitch</samp>
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Glitch</samp>
- en: Like CodePen, Glitch is a service that hosts your code for you and lets you
    share it with the world. What sets Glitch apart is its ability to run frontend
    *and* backend code. Instead of just providing panels for HTML, CSS, and JavaScript,
    Glitch allows you to define a full directory structure with all the files you
    need. You can even add a SQLite database to store data. Go to [*https://<wbr>glitch<wbr>.com*](https://glitch.com)
    to learn more, or check out [*https://<wbr>glitch<wbr>.new*](https://glitch.new)
    to choose from a list of starter apps.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 像 CodePen 一样，Glitch 是一个托管代码的服务，并允许你与全世界分享代码。Glitch 与众不同之处在于它能够运行前端 *和* 后端代码。Glitch
    不仅提供 HTML、CSS 和 JavaScript 的面板，还允许你定义一个完整的目录结构并存放所需的所有文件。你甚至可以添加一个 SQLite 数据库来存储数据。访问
    [*https://<wbr>glitch<wbr>.com*](https://glitch.com) 了解更多信息，或查看 [*https://<wbr>glitch<wbr>.new*](https://glitch.new)
    选择一个启动应用程序。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Web Development</samp>
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">网页开发</samp>
- en: Although this book’s focus is on JavaScript, along the way you also learned
    some general web development skills. If this has whetted your appetite, you may
    want to spend some more time learning about other aspects of web development.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本书的重点是 JavaScript，但在学习过程中，你也掌握了一些通用的网页开发技能。如果这激发了你的兴趣，你可能会想花更多时间学习网页开发的其他方面。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">HTML and CSS</samp>
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">HTML 和 CSS</samp>
- en: HTML is the language that the vast majority of web pages are written in, so
    it’s valuable to have a deeper understanding of its intricacies. To learn more,
    check out the MDN docs at [*https://<wbr>developer<wbr>.mozilla<wbr>.org<wbr>/HTML*](https://developer.mozilla.org/HTML).
    CSS is used for styling web pages, so if you want your pages to look nice, it’s
    essential to understand how it works. Learn more on MDN at [*https://<wbr>developer<wbr>.mozilla<wbr>.org<wbr>/CSS*](https://developer.mozilla.org/CSS).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 是绝大多数网页使用的语言，因此深入了解其复杂性非常有价值。欲了解更多信息，请查阅 MDN 文档：[*https://<wbr>developer<wbr>.mozilla<wbr>.org<wbr>/HTML*](https://developer.mozilla.org/HTML)。CSS
    用于网页样式，因此如果你希望页面看起来漂亮，理解其工作原理至关重要。想了解更多，可以访问 MDN：[*https://<wbr>developer<wbr>.mozilla<wbr>.org<wbr>/CSS*](https://developer.mozilla.org/CSS)。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">JavaScript Frameworks
    and Libraries</samp>
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">JavaScript 框架和库</samp>
- en: 'Web development today is very complex, with web apps regularly containing thousands
    of lines of HTML, CSS, and JavaScript. To greatly reduce the amount of code needed
    to write a fully functional modern web app, many developers use JavaScript frameworks
    and libraries. Two of the most popular at the time of this writing are React and
    Vue.js. Knowledge of such tools isn’t necessary, but it can dramatically simplify
    the process of building complex websites and frontend applications. You can try
    out React and Vue.js in CodePen, or check out their websites:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现代网页开发非常复杂，网页应用程序通常包含成千上万行的 HTML、CSS 和 JavaScript。为了大大减少编写功能齐全的现代网页应用程序所需的代码量，许多开发人员使用
    JavaScript 框架和库。本文写作时，最受欢迎的两个框架是 React 和 Vue.js。虽然掌握这些工具并非必需，但它们可以显著简化构建复杂网站和前端应用程序的过程。你可以在
    CodePen 上尝试 React 和 Vue.js，或者访问它们的网站：
- en: 'React: [*https://<wbr>reactjs<wbr>.org*](https://reactjs.org)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'React: [*https://<wbr>reactjs<wbr>.org*](https://reactjs.org)'
- en: 'Vue.js: [*https://<wbr>vuejs<wbr>.org*](https://vuejs.org)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Vue.js: [*https://<wbr>vuejs<wbr>.org*](https://vuejs.org)'
- en: 'React on CodePen: [*https://<wbr>codepen<wbr>.io<wbr>/topic<wbr>/react<wbr>/templates*](https://codepen.io/topic/react/templates)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'React 在 CodePen 上: [*https://<wbr>codepen<wbr>.io<wbr>/topic<wbr>/react<wbr>/templates*](https://codepen.io/topic/react/templates)'
- en: 'Vue.js on CodePen: [*https://<wbr>codepen<wbr>.io<wbr>/topic<wbr>/vue<wbr>/templates*](https://codepen.io/topic/vue/templates)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Vue.js 在 CodePen 上: [*https://<wbr>codepen<wbr>.io<wbr>/topic<wbr>/vue<wbr>/templates*](https://codepen.io/topic/vue/templates)'
- en: <samp class="SANS_Futura_Std_Bold_B_11">Testing</samp>
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">测试</samp>
- en: One essential tool for programmers is an automated testing framework. Automated
    tests are designed to run against your code regularly, to confirm it does what
    you expect it to do. A common problem when writing code is adding a new feature
    without realizing that the change breaks some other aspect of your program. By
    writing good tests and running them regularly, you can identify the moment something
    breaks, and fix it. You can also work on large refactors of your code with confidence,
    knowing that as long as the tests pass, it’s unlikely that you’ve broken anything.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对程序员来说，一个重要的工具就是自动化测试框架。自动化测试旨在定期运行在你的代码上，以确认它是否按预期执行功能。在编写代码时，一个常见的问题是添加新功能时没有意识到这段更改会破坏程序的其他部分。通过编写好的测试并定期运行它们，你可以及时发现问题并进行修复。你也可以在进行大型代码重构时充满信心，因为只要测试通过，就不太可能破坏其他内容。
- en: 'There are a huge number of testing libraries and frameworks for JavaScript.
    One of the most popular at the time of this writing is Jest: check it out at [*https://<wbr>jestjs<wbr>.io*](https://jestjs.io).'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多用于JavaScript的测试库和框架。在写这篇文章时，最流行的框架之一是Jest：可以通过 [*https://<wbr>jestjs<wbr>.io*](https://jestjs.io)
    了解更多。
- en: <samp class="SANS_Futura_Std_Bold_B_11">More JavaScript!</samp>
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">更多JavaScript！</samp>
- en: 'If you want to deepen your JavaScript knowledge, there are many resources available
    to you. Here are a few recommendations of where to get started:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想加深对JavaScript的理解，有许多资源可以供你参考。以下是一些推荐的学习起点：
- en: 'MDN JavaScript Portal: [*https://<wbr>developer<wbr>.mozilla<wbr>.org<wbr>/JavaScript*](https://developer.mozilla.org/JavaScript)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MDN JavaScript门户：[ *https://<wbr>developer<wbr>.mozilla<wbr>.org<wbr>/JavaScript*](https://developer.mozilla.org/JavaScript)
- en: '*Eloquent JavaScript*, 3rd edition, by Marijn Haverbeke (No Starch Press, 2018)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Eloquent JavaScript*，第3版，作者Marijn Haverbeke（No Starch Press，2018）'
- en: '*JavaScript: The Definitive Guide*, 7th edition, by David Flanagan (O’Reilly
    Media, 2020)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*JavaScript: The Definitive Guide*，第7版，作者David Flanagan（O''Reilly Media，2020）'
- en: <samp class="SANS_Futura_Std_Bold_B_11">Other Languages</samp>
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">其他语言</samp>
- en: You might decide at this point that you want to broaden your programming knowledge
    rather than dig deeper into JavaScript. Go for it! Every language you learn gives
    you valuable insights into programming in general, so this is actually a great
    way to get better at JavaScript.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，你可能决定拓宽自己的编程知识，而不是更深入地研究JavaScript。去做吧！每学习一门语言都会为你提供宝贵的编程见解，这实际上是提高JavaScript技能的好方法。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">TypeScript</samp>
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">TypeScript</samp>
- en: One of the problems that people have with JavaScript is its weak, dynamic typing,
    which allows values to be implicitly coerced to different data types depending
    on the surrounding code. For example, the + operator will convert a number operand
    to a string if the other operand is a string, while the - operator will convert
    a string operand to a number if the other operand is a number.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 人们对JavaScript的一个常见问题是其弱动态类型，这允许根据周围代码的不同隐式地将值强制转换为不同的数据类型。例如，如果一个操作数是字符串，那么+运算符会将数字操作数转换为字符串，而-运算符则会将字符串操作数转换为数字，如果另一个操作数是数字。
- en: The TypeScript language is an attempt to add static typing to JavaScript. *Static
    typing* means that a variable of a certain type can only contain values of that
    type, and conversions between types must be explicit. TypeScript is syntactically
    a superset of JavaScript, which means that a valid JavaScript program is also
    a valid TypeScript program. TypeScript code can be converted to JavaScript using
    the TypeScript compiler.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript语言试图为JavaScript增加静态类型。*静态类型*意味着某一类型的变量只能包含该类型的值，并且类型之间的转换必须是显式的。TypeScript在语法上是JavaScript的超集，这意味着有效的JavaScript程序也是有效的TypeScript程序。TypeScript代码可以通过TypeScript编译器转换为JavaScript。
- en: Using static types makes it impossible to write code with certain bugs. For
    example, in JavaScript you might take a value from a text box, assume that it’s
    a number, and add it to another number. Unfortunately, any value from a text box
    is treated as a string, so the other number will be implicitly converted to a
    string as well, and you’ll end up with the two strings concatenated. TypeScript
    doesn’t allow this. It knows that the value from the text box is a string, and
    it forces you to decide whether you want to convert both operands to strings for
    concatenation or convert both operands to numbers for addition.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用静态类型使得某些错误代码无法编写。例如，在 JavaScript 中，你可能从文本框中获取一个值，假设它是一个数字，并将其加到另一个数字上。不幸的是，来自文本框的任何值都会被当作字符串处理，因此另一个数字也会隐式转换为字符串，最终你会得到两个字符串连接在一起。TypeScript
    不允许这种情况发生。它知道来自文本框的值是字符串，并强制你决定是否将两个操作数转换为字符串进行连接，或者将两个操作数转换为数字进行加法运算。
- en: The downside of TypeScript is that it can sometimes be more difficult to write
    code that otherwise seems like it should work. This is sometimes known as *fighting
    the compiler*.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 的一个缺点是，有时编写看似应该工作的代码可能会更加困难。这有时被称为 *与编译器作斗争*。
- en: 'If you’d like to learn more, here are some books and other resources that can
    help you get started with TypeScript:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多内容，以下是一些书籍和其他资源，可以帮助你开始学习 TypeScript：
- en: 'The TypeScript Handbook: [*https://<wbr>www<wbr>.typescriptlang<wbr>.org<wbr>/docs<wbr>/handbook<wbr>/intro<wbr>.html*](https://www.typescriptlang.org/docs/handbook/intro.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TypeScript 手册：[*https://<wbr>www<wbr>.typescriptlang<wbr>.org<wbr>/docs<wbr>/handbook<wbr>/intro<wbr>.html*](https://www.typescriptlang.org/docs/handbook/intro.html)
- en: '*Effective TypeScript* by Dan Vanderkam (O’Reilly Media, 2019)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*有效的 TypeScript* 由 Dan Vanderkam 编写（O’Reilly Media, 2019）'
- en: '*Learning TypeScript* by Josh Goldberg (O’Reilly Media, 2022)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*学习 TypeScript* 由 Josh Goldberg 编写（O’Reilly Media, 2022）'
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Python</samp>
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Python</samp>
- en: Python is a scripting language, like JavaScript, but it has a different philosophy.
    The language takes a “batteries included” approach, meaning that its standard
    library comes fully featured with a wide array of functionality (JavaScript’s
    standard library, by comparison, is very limited). Like JavaScript, Python is
    dynamically typed, so the same variable can hold values of different data types.
    But whereas JavaScript is weakly typed, Python is *strongly typed*, meaning that
    there are no implicit coercions. Syntactically, Python looks very different, using
    indentation (which is required, not optional) rather than braces to define nested
    blocks of code.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种脚本语言，像 JavaScript 一样，但它有不同的哲学。Python 采用“电池全包”的方法，这意味着它的标准库功能非常丰富（与之相比，JavaScript
    的标准库非常有限）。像 JavaScript 一样，Python 是动态类型的，因此同一个变量可以存储不同数据类型的值。但不同于 JavaScript 的弱类型，Python
    是 *强类型* 的，这意味着没有隐式类型转换。从语法上看，Python 非常不同，它使用缩进（这要求严格，不是可选的）来定义嵌套代码块，而不是大括号。
- en: 'Python is a popular language of choice for web servers, as well as for scientific
    and numeric programming. If you’re looking to broaden your skills, it’s a good
    choice. The following book (in the same series as *JavaScript Crash Course*) is
    a great introduction to the language, and its projects highlight some of the areas
    in which Python shines:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种流行的 Web 服务器编程语言，也广泛应用于科学和数值编程。如果你想拓宽技能，Python 是一个很好的选择。以下这本书（与 *JavaScript
    编程快速上手* 同一系列）是学习该语言的极好入门书籍，它的项目展示了 Python 在某些领域的优势：
- en: '*Python Crash Course*, 3rd edition, by Eric Matthes (No Starch Press, 2023)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Python 编程快速上手* 第3版，由 Eric Matthes 编写（No Starch Press, 2023）'
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Rust</samp>
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Rust</samp>
- en: One of the languages I’m most excited about today is Rust. Like TypeScript,
    it’s a statically typed language, but it has a much more powerful type system
    than most languages in use today. Rust aims to replace the older languages C and
    C++ for developing high-performance code.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 今天我最兴奋的编程语言之一是 Rust。与 TypeScript 类似，它也是一种静态类型语言，但它拥有比大多数现今使用的语言更强大的类型系统。Rust
    旨在替代旧的 C 和 C++ 语言，用于开发高性能代码。
- en: C and C++ are both languages without *garbage collection*, the process that
    tells the computer which values and objects are no longer used, in order to free
    up the computer’s memory. Instead, C/C++ programmers must manually free data that
    is no longer in use—a process that’s error prone and can often lead to bugs. These
    languages are commonly used in performance-critical environments, and they don’t
    use garbage collection because it can reduce the performance of software. Rust
    avoids this problem with a compile-time *borrow checker*, which keeps track of
    which objects are in use at any given time, and by which parts of the program.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: C 和 C++ 都是没有 *垃圾回收* 的语言，垃圾回收是指计算机自动识别哪些值和对象不再使用，从而释放内存的过程。相反，C/C++ 程序员必须手动释放不再使用的数据——这个过程容易出错，且常常导致
    bug。这些语言通常在对性能要求高的环境中使用，之所以不使用垃圾回收，是因为垃圾回收会降低软件的性能。Rust 通过编译时的 *借用检查器* 避免了这个问题，该检查器跟踪哪些对象在任何时刻正在使用，以及程序的哪些部分正在使用它们。
- en: 'Rust is also used heavily as a source language for compiling to WebAssembly,
    which is an exciting new technology for running extremely efficient and performant
    code in the browser. Here are some resources for learning more:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Rust 也被广泛用作编译 WebAssembly 的源语言，WebAssembly 是一种令人兴奋的新技术，可在浏览器中运行高效且性能优异的代码。以下是一些学习更多内容的资源：
- en: '*The Rust Programming Language*, 2nd edition, by Steve Klabnik and Carol Nichols
    (No Starch Press, 2023)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Rust 编程语言*（第二版），由 Steve Klabnik 和 Carol Nichols 编写（No Starch Press，2023）'
- en: 'Rust and WebAssembly: [*https://<wbr>rustwasm<wbr>.github<wbr>.io<wbr>/docs<wbr>/book<wbr>/*](https://rustwasm.github.io/docs/book/)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rust 和 WebAssembly：[*https://<wbr>rustwasm<wbr>.github<wbr>.io<wbr>/docs<wbr>/book<wbr>/*](https://rustwasm.github.io/docs/book/)
