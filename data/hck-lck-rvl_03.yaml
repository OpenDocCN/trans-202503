- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">2</samp> <samp class="SANS_Dogma_OT_Bold_B_11">ACQUIRING
    DATASETS</samp>
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">2</samp> <samp class="SANS_Dogma_OT_Bold_B_11">获取数据集</samp>
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: In early January 2010, 22-year-old Chelsea Manning sat at a Windows computer
    in a temporary Sensitive Compartmented Information Facility (SCIF)—an enclosed
    area or room suitable for working with secret documents—in eastern Baghdad. She
    was downloading half a million secret “significant activity” reports from the
    military network SIPRNet, a Department of Defense computer network used for transmitting
    classified information.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 2010年1月初，22岁的切尔西·曼宁坐在巴格达东部一个临时的敏感信息隔离设施（SCIF）内，使用一台Windows电脑。她正在从军事网络SIPRNet下载50万份秘密的“重要活动”报告，SIPRNet是美国国防部用于传输机密信息的计算机网络。
- en: As an intelligence analyst working for the US Army, Manning needed regular access
    to these databases, so she downloaded them for work purposes. Having a local copy
    would be useful in a war zone where network access can be unreliable. It wasn’t
    until later that month that she decided to leak them to the public, after realizing
    they documented American war crimes in Iraq and Afghanistan. They would soon become
    some of the most significant public datasets of the 21st century. “I believe that
    if the general public, especially the American public, had access to the information
    contained within the [Iraq War Logs and Afghan War Logs], this could spark a domestic
    debate on the role of the military and our foreign policy in general,” she later
    said at her court martial hearing.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名为美国陆军工作的情报分析员，曼宁需要定期访问这些数据库，因此她将它们下载以便工作使用。拥有本地副本在网络访问可能不可靠的战区尤其有用。直到那个月稍晚些时候，她才决定将这些文件泄露给公众，因为她意识到这些文件记录了美国在伊拉克和阿富汗的战争罪行。这些文件很快成为21世纪最重要的公共数据集之一。“我相信，如果普通公众，尤其是美国公众，能够接触到[伊拉克战争日志和阿富汗战争日志]中的信息，这将激发关于军队角色和我们外交政策的一场国内辩论，”她在军事法庭听证会上后来这样说。
- en: At the SCIF computer, Manning compressed the files using a program called WinRAR,
    burned them to a rewritable CD, and left them in the SCIF for easy reference.
    A few weeks later, at the end of her shift on a Friday night, she slipped the
    CD into her cargo pocket and headed to her dorm, where she copied the data to
    her laptop. Eventually, she copied it to the SD card in her digital camera, and
    on January 23 she flew into the Reagan National Airport just outside of Washington,
    DC, with the SD card in hand.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在SCIF的电脑前，曼宁使用名为WinRAR的程序压缩文件，将其刻录到可重写CD上，并将其留在SCIF内以便参考。几周后，在一个星期五的夜班结束时，她将CD放入自己的货裤口袋，前往宿舍，将数据复制到自己的笔记本电脑上。最终，她将其复制到数码相机的SD卡中，并在1月23日带着SD卡飞抵华盛顿特区外的里根国家机场。
- en: 'In 2010, massive leaks like this were unprecedented. Today, they happen all
    the time. Back then, WikiLeaks was the only place for sources to go—traditional
    newsrooms weren’t prepared to handle leaks like this. Now, however, there are
    lots of options: sources can send documents to a transparency collective like
    Distributed Denial of Secrets (DDoSecrets), they can contact journalists directly
    using tools like Signal and OnionShare, or they can get in touch with a newsroom
    by following instructions on its public tips page.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 2010年，像这样的巨大泄密事件是前所未有的。今天，这种事情时有发生。那时，WikiLeaks是唯一可以供消息来源泄露信息的地方——传统新闻机构并未准备好处理这种泄密事件。然而，现在有了很多选择：消息来源可以将文件发送给像“分布式否认机密”（DDoSecrets）这样的透明性组织，也可以通过Signal和OnionShare等工具直接联系记者，或者他们可以通过新闻机构的公开提示页面上的指示与新闻机构取得联系。
- en: In this chapter, you’ll learn best practices for safely acquiring public and
    private datasets. You’ll learn more about the history of WikiLeaks and DDoSecrets,
    then use a technology called BitTorrent to obtain your own copy of the BlueLeaks
    dataset from DDoSecrets. You’ll download the Signal instant messaging app to securely
    communicate with sources and learn about PGP encryption, an alternative method
    of securing messages. You’ll practice sending data anonymously with Tor and OnionShare,
    then read the story of how I communicated with a source using several of these
    tools. Finally, I’ll outline several more ways to securely receive data from sources,
    including techniques appropriate for professional newsrooms rather than individual
    reporters.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你将学习安全获取公共和私人数据集的最佳实践。你将了解更多关于维基解密和DDoSecrets的历史，然后使用名为BitTorrent的技术从DDoSecrets获取你自己的BlueLeaks数据集副本。你将下载Signal即时通讯应用程序来安全地与消息源沟通，并学习PGP加密，这是另一种保护消息的方式。你将练习使用Tor和OnionShare匿名传输数据，接着阅读我如何使用这些工具与消息源沟通的故事。最后，我将概述几种从消息源安全接收数据的其他方法，包括适用于专业新闻机构而非单个记者的技术。
- en: <samp class="SANS_Futura_Std_Bold_B_11">The End of WikiLeaks</samp>
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">维基解密的终结</samp>
- en: After deciding she wanted to leak the War Logs, Manning first called a reporter
    at the *Washington Post*, but she didn’t feel like they took her seriously. She
    tried the *New York Times* but managed only to leave a voicemail, and the paper
    never returned her call. Finally, she settled on WikiLeaks, a leak site founded
    in 2006 by Australian information activist Julian Assange. This turned out to
    be a great choice at the time. In addition to publishing the documents, WikiLeaks
    worked in partnership with newspapers across the world, including the *New York
    Times*, the *Guardian*, and *Der Spiegel*, to break major stories about US imperialism.
    Along with the dataset of 250,000 State Department cables known as Cablegate,
    the two datasets that Manning leaked were a catalyst for the Arab Spring, the
    2011 pro-democracy movement that led to the toppling of governments in the Middle
    East and North Africa, including the authoritarian regimes in Egypt and Tunisia.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在决定泄露《战争日志》之后，曼宁首先联系了*华盛顿邮报*的一名记者，但她感觉他们没有认真对待她。她又试图联系*纽约时报*，但只留下了语音邮件，报社从未回电。最终，她选择了维基解密，一个由澳大利亚信息活动家朱利安·阿桑奇于2006年创办的泄密网站。事实证明，当时这个选择是非常正确的。除了发布这些文件外，维基解密还与世界各地的报纸合作，包括*纽约时报*、*卫报*和*明镜周刊*，一起披露关于美国帝国主义的重大新闻。与25万个被称为Cablegate的美国国务院电报数据集一起，曼宁泄露的两个数据集成为了阿拉伯之春的催化剂，这是2011年推动中东和北非地区推翻政府的亲民主运动，其中包括埃及和突尼斯的专制政权。
- en: Back then, WikiLeaks was revolutionary, initiating the document-based transparency
    movement by making massive datasets accessible to the public. The documents that
    Manning leaked were its first major releases with international consequences,
    making WikiLeaks a proof-of-concept for sites that allow anyone to anonymously
    submit leaked documents. Today, nearly every major newsroom in the US and many
    throughout the world have this capability using open source software like SecureDrop,
    though news organizations rarely publish raw datasets like WikiLeaks did.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当时，维基解密具有革命性，通过使大量数据集对公众开放，启动了基于文档的透明度运动。曼宁泄露的文件是其首次发布的具有国际影响力的重要文件，这使得维基解密成为一个概念验证，证明了允许任何人匿名提交泄露文件的网站是可行的。如今，几乎每个美国的大型新闻机构以及世界上许多新闻机构都可以使用像SecureDrop这样的开源软件具备这种能力，尽管新闻机构很少像维基解密那样发布原始数据集。
- en: Manning sent these datasets to WikiLeaks several years before the transparency
    group and its editor, Assange, shifted from a journalism outfit based on the premise
    that “information wants to be free” to an ethically dubious political organization
    working to get Donald Trump elected president in 2016\. During that US election,
    WikiLeaks and Assange went off the rails. The group published a dataset full of
    hacked Democratic National Committee (DNC) and Clinton campaign email messages
    just in time to distract the news cycle from the infamous *Access Hollywood* audio
    clip of Trump bragging about committing sexual assault. Assange lied to the public
    about his source for this data (it was Russian military intelligence), boosting
    the conspiracy theory that Seth Rich, an unrelated Democratic Party staffer who
    was murdered in Washington, DC, was his real source. WikiLeaks also promoted the
    Pizzagate conspiracy theory claiming that high-ranking Democratic Party officials
    were involved in a child sex-trafficking ring run out of a pizza shop in DC.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 曼宁几年前将这些数据集发送给WikiLeaks，当时这个透明度组织及其编辑阿桑奇从一个基于“信息应当自由”的新闻事业转变为一个道德上有疑问的政治组织，致力于帮助唐纳德·特朗普在2016年当选总统。在那次美国大选期间，WikiLeaks和阿桑奇彻底失控。该组织发布了一个充满被黑客窃取的民主党全国委员会（DNC）和克林顿竞选邮件的数据集，恰好分散了新闻周期的注意力，而那个周期正在报道特朗普在“好莱坞访问”录音带中的丑闻，这段录音展示了他吹嘘性侵行为。阿桑奇对公众撒谎，声称数据的来源是俄罗斯军事情报，从而助长了“塞思·里奇”阴谋论，声称这位在华盛顿特区被谋杀的无关民主党工作人员才是数据的真实来源。WikiLeaks还推广了“披萨门”阴谋论，声称高层民主党官员涉及一个由披萨店经营的儿童性贩运团伙。
- en: 'Today, WikiLeaks is little more than an X (formerly Twitter) account. Its document
    submission systems have stopped working, and its website is no longer maintained.
    The loss of WikiLeaks to the online fever swamp was tragic for investigative journalism
    around the world, but a new and better organization has grown to take its place:
    DDoSecrets.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，WikiLeaks仅仅是一个X（前身为Twitter）账号。它的文档提交系统已经停止工作，网站也不再维护。WikiLeaks的消失对于全球的调查性新闻事业来说是一次悲剧，但一个新的、更好的组织已经崛起，取而代之：DDoSecrets。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Distributed Denial of Secrets</samp>
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">分布式秘密拒绝</samp>
- en: Distributed Denial of Secrets, or DDoSecrets, is a nonprofit transparency collective
    in the US founded by Emma Best in 2018\. It’s similar to WikiLeaks, but without
    the toxic ego of Julian Assange and with considerably more transparency around
    the group’s decision-making, and it’s largely run by queer people.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式秘密拒绝（DDoSecrets）是一个美国非营利透明度集体，由Emma Best于2018年成立。它类似于WikiLeaks，但没有朱利安·阿桑奇那种有毒的自负，而且在集体决策方面具有更多透明度，并且大部分由酷儿群体运营。
- en: DDoSecrets hosts data previously published by WikiLeaks, like the DNC Emails
    dataset, as well as those WikiLeaks declined to publish, like the Dark Side of
    the Kremlin dataset, which contains over 100GB of documents and emails from Russian
    oligarchs and politicians. Notably, it also hosts a great deal of data leaked
    in the months following Russia’s invasion of Ukraine in February 2022\. At that
    time, hackers—mostly claiming to be hacktivists, many identifying with the Anonymous
    hacktivist movement—bombarded Russia with cyberattacks. They hacked dozens of
    Russian organizations, including government agencies, oil and gas companies, and
    finance institutions, and submitted tens of terabytes of data to DDoSecrets to
    distribute to the public and to journalists.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: DDoSecrets托管了之前由WikiLeaks发布的数据集，如DNC电子邮件数据集，也包括那些WikiLeaks拒绝发布的内容，比如“克里姆林宫黑暗面”数据集，其中包含了来自俄罗斯寡头和政治家的超过100GB的文件和电子邮件。值得注意的是，它还托管了大量在2022年2月俄罗斯入侵乌克兰后泄露的数据。在那时，黑客——大多声称自己是黑客活动分子，许多人认同匿名黑客运动——对俄罗斯发动了网络攻击。他们黑入了数十个俄罗斯组织，包括政府机构、石油和天然气公司以及金融机构，并向DDoSecrets提交了数十TB的数据，供公众和记者传播。
- en: '> <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '> <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>'
- en: '*I work closely with DDoSecrets as an adviser and sometimes volunteer.*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*我与DDoSecrets密切合作，担任顾问，有时也会做志愿者工作。*'
- en: 'Anyone can download the following datasets from DDoSecrets:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 任何人都可以从DDoSecrets下载以下数据集：
- en: '**BlueLeaks**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**BlueLeaks**'
- en: BlueLeaks is a collection of 270GB of documents from hundreds of US law enforcement
    and police fusion center websites, released during the height of 2020’s Black
    Lives Matter uprising. You’ll know this dataset well by the end of this book,
    and you’ll download a copy of it in this chapter’s first exercise.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: BlueLeaks 是一个包含270GB文件的集合，来自数百个美国执法机构和警察融合中心网站，这些文件在2020年黑人命也是命（Black Lives
    Matter）运动高峰期发布。到本书结束时，你会非常熟悉这个数据集，并且你将在本章的第一个练习中下载它。
- en: '**Parler**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**Parler**'
- en: The Parler dataset contains 32TB (yes, terabytes) of video scraped from the
    right-wing social network Parler, including many from the January 6, 2021, anti-democracy
    riot at the US Capitol. Many of these videos were used as evidence in Donald Trump’s
    second impeachment inquiry. You’ll learn more about this dataset in [Chapter 11](chapter11.xhtml).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Parler 数据集包含32TB（是的，TB）的视频，这些视频来自右翼社交网络 Parler，其中包括许多2021年1月6日美国国会大厦反民主骚乱的视频。这些视频中的许多被用作唐纳德·特朗普第二次弹劾调查的证据。你将在[第11章](chapter11.xhtml)中了解更多关于该数据集的信息。
- en: '**Epik Fail**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**Epik Fail**'
- en: The Epik Fail dataset includes 10 years of domain name registrar data from Epik,
    a company that’s notorious for hosting domain names and websites for neo-Nazis
    and other extremist groups. You’ll explore this dataset in [Chapter 12](chapter12.xhtml).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Epik Fail 数据集包含来自 Epik 的10年域名注册数据，Epik 是一家以为新纳粹分子及其他极端组织托管域名和网站而臭名昭著的公司。你将在[第12章](chapter12.xhtml)中探讨这个数据集。
- en: In addition to public datasets like these, DDoSecrets hosts many private datasets
    available only to journalists and researchers who request access. Datasets containing
    large quantities of PII, like names, email addresses, birth dates, or passwords,
    are often kept private. For example, the Oath Keepers dataset includes gigabytes
    of data from the American far-right paramilitary organization, including spreadsheets
    full of the group’s member and donor records. That part of the release is limited
    only to journalists and researchers who request access, but another part, 5GB
    of email and chat logs, is available to the public. You’ll download part of this
    release in [Chapter 4](chapter4.xhtml) and work with it in [Chapter 6](chapter6.xhtml).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 除了像这样的公共数据集外，DDoSecrets 还托管许多仅对请求访问的记者和研究人员开放的私有数据集。包含大量个人身份信息（PII）如姓名、电子邮件地址、出生日期或密码的数据集通常会被保密。例如，Oath
    Keepers 数据集包括来自美国极右翼准军事组织的数GB数据，包括充满该组织成员和捐赠者记录的电子表格。该部分数据仅限于请求访问的记者和研究人员，但另一部分5GB的电子邮件和聊天记录对公众开放。你将在[第4章](chapter4.xhtml)下载这部分数据，并在[第6章](chapter6.xhtml)中使用它。
- en: DDoSecrets publishes many more datasets than these, and it continues to release
    new ones all the time. For an inventory of all of those available, as well as
    instructions on how to request access to the limited-distribution datasets, visit
    [*https://<wbr>ddosecrets<wbr>.com*](https://ddosecrets.com).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: DDoSecrets 发布了比这些更多的数据集，并且它持续不断地发布新的数据集。欲了解所有可用的数据集清单，以及如何请求访问限量分发数据集的说明，请访问
    [*https://<wbr>ddosecrets<wbr>.com*](https://ddosecrets.com)。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*You won’t be able to share that DDoSecrets link on X. Shortly after DDoSecrets
    released BlueLeaks, Twitter permanently suspended the @DDoSecrets account and
    censored all links to* [https://ddosecrets.com](https://ddosecrets.com)*,* *citing
    its selectively enforced policy against posting hacked data. Twitter, now X, prevents
    tweets or even DMs including DDoSecrets links from going through, though WikiLeaks
    has faced no such censorship.*'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*你将无法在 X 上分享 DDoSecrets 的链接。在 DDoSecrets 发布 BlueLeaks 后不久，Twitter 永久封禁了 @DDoSecrets
    账户，并审查了所有指向* [https://ddosecrets.com](https://ddosecrets.com)*的链接，*理由是其对发布被黑客攻击数据的政策执行不力。Twitter，现在称为
    X，阻止包含 DDoSecrets 链接的推文甚至私信通过，尽管 WikiLeaks 并未面临类似的审查。*'
- en: DDoSecrets distributes public datasets using a protocol called BitTorrent. To
    download datasets, you’ll need to learn how to use it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: DDoSecrets 使用一种名为 BitTorrent 的协议来分发公共数据集。要下载数据集，你需要学习如何使用它。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Downloading Datasets with</samp> <samp
    class="SANS_Futura_Std_Bold_B_11">BitTorrent</samp>
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">使用</samp> <samp class="SANS_Futura_Std_Bold_B_11">BitTorrent
    下载数据集</samp>
- en: At the turn of the 21st century, long before services like Netflix and Spotify
    made online entertainment cheap and accessible to the public, peer-to-peer file-sharing
    services like Napster, LimeWire, and Kazaa enjoyed immense popularity because
    they made downloading pirated media and software so easy. The copyright industry
    quickly shut down these centralized services with lawsuits, but decentralized
    technologies rose from their ashes. The most popular of these is BitTorrent. In
    addition to piracy, BitTorrent is also frequently used to legally distribute large
    files like Linux operating systems, as well as massive datasets.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在21世纪初，早在像Netflix和Spotify这样的服务让在线娱乐变得廉价且普及之前，像Napster、LimeWire和Kazaa这样的点对点文件共享服务因其让下载盗版媒体和软件变得如此简单而风靡一时。版权行业迅速通过诉讼关闭了这些集中式服务，但去中心化技术从它们的废墟中崛起。最受欢迎的去中心化技术之一就是BitTorrent。除了盗版，BitTorrent也常用于合法分发大型文件，如Linux操作系统以及庞大的数据集。
- en: BitTorrent works well for sharing controversial data like BlueLeaks, because
    no one—not the US government, police departments, tech companies, internet service
    providers, or anyone else—can easily censor it. Traditionally, one computer on
    the internet hosts data (on a website, for example), and all other computers connect
    to that host to download it. If someone wants to censor that data, they only have
    to bring down that single host. With BitTorrent, however, data is hosted in *swarms*,
    a collection of computers currently sharing a specific set of files. If you want
    to download some data, you join the swarm by opening a link to the data, called
    a *torrent*, in your BitTorrent software and become a *peer*. Your BitTorrent
    software downloads pieces of the data that you need from other peers in the swarm,
    and in return, you upload pieces of data you already have to peers who need it.
    Once you have all of the data you need, you can remain in the swarm and continue
    sharing with peers as long as you keep your BitTorrent software open, making you
    a *seed*. If you have the internet bandwidth and are allowed to share the files,
    it’s generally good practice to keep seeding, especially if there are few other
    seeds.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: BitTorrent非常适合分享有争议的数据，如BlueLeaks，因为没有人——无论是美国政府、警察部门、科技公司、互联网服务提供商，还是其他任何人——能轻易地对其进行审查。传统上，互联网上的一台计算机托管数据（例如在一个网站上），所有其他计算机连接到这个主机下载数据。如果有人想要审查这些数据，他们只需要关闭那个唯一的主机。然而，使用BitTorrent时，数据托管在*swarms*中，swarms是当前共享特定文件集的计算机集合。如果你想下载某个数据，你可以通过在你的BitTorrent软件中打开一个指向数据的链接，称为*torrent*，加入这个swarm并成为一个*peer*。你的BitTorrent软件从swarm中的其他同伴那里下载你需要的文件片段，作为回报，你将自己已拥有的数据片段上传给其他需要的同伴。一旦你拥有了所有所需的数据，你可以继续留在swarm中，并与其他同伴继续分享，只要你保持BitTorrent软件打开，这样你就成为一个*seed*。如果你有足够的网络带宽并且被允许分享这些文件，通常的好习惯是保持做种，尤其是在其他种子较少的情况下。
- en: Every BitTorrent swarm needs to have at least one seed in order to enable the
    peers to finish downloading all the data. The more popular the data, the bigger
    the swarm, the faster the downloads—and the more difficult censorship becomes.
    It’s hard to block access to every peer in a swarm (swarms can grow to have tens
    of thousands of peers), and nothing stops more peers from joining. There’s no
    single entity to sue or pressure financially. Swarms often consist of computers
    distributed around the world, so national laws also can’t achieve the censorship
    they might otherwise aim for.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 每个BitTorrent下载群体需要至少一个种子，才能让同伴完成所有数据的下载。数据越受欢迎，群体越大，下载速度越快——而审查也变得越难。很难阻止一个下载群体中的每一个同伴（群体可能有数万名同伴），也没有什么能阻止更多的同伴加入。没有单一的实体可以起诉或施加财务压力。下载群体通常由分布在全球的计算机组成，因此国家法律也无法实现它们可能追求的审查。
- en: There is nothing illegal about using BitTorrent to share files that you’re legally
    allowed to share. Blizzard Entertainment has even adopted the technology itself
    to distribute large video games like *World of Warcraft* to its users, and the
    Internet Archive, the nonprofit digital library at [*https://<wbr>archive<wbr>.org*](https://archive.org),
    uses BitTorrent to distribute large files like radio and TV shows. The structure
    of BitTorrent hosting makes for faster downloads, and bandwidth costs are shared
    throughout the swarm.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用BitTorrent共享你合法允许共享的文件并不违法。暴雪娱乐甚至采用了这项技术来分发大型视频游戏，比如*魔兽世界*，并且互联网档案馆（位于[*https://<wbr>archive<wbr>.org*](https://archive.org)的非营利数字图书馆）也使用BitTorrent来分发像广播和电视节目这样的庞大文件。BitTorrent的托管结构使得下载速度更快，并且带宽成本在整个下载群体中分担。
- en: 'Most publicly available DDoSecrets datasets are distributed through BitTorrent.
    In order to download something with BitTorrent, you’ll need the following:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数公开可用的DDoSecrets数据集是通过BitTorrent分发的。为了通过BitTorrent下载某些内容，你需要以下条件：
- en: A program installed in your computer called a *BitTorrent client*. You can use
    whatever client you prefer, including a command line version, but I like one called
    Transmission. It’s free and open source and works great in Windows, macOS, and
    Linux.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序已安装在你的计算机中，称为*BitTorrent客户端*。你可以使用任何你喜欢的客户端，包括命令行版本，但我喜欢一个叫Transmission的客户端。它是免费的开源软件，在Windows、macOS和Linux中表现得都很出色。
- en: Either a *.torrent* file that you can open in your BitTorrent client or a *magnet
    link*, a type of URL that starts with *magnet:* and tells your BitTorrent client
    where to find the full *.torrent* file.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个*.torrent*文件，你可以在你的BitTorrent客户端中打开它，或者一个*磁力链接*，这是一种以*magnet:*开头的URL，告诉你的BitTorrent客户端去哪里找到完整的*.torrent*文件。
- en: Roughly 1TB of storage space, at least if you want to download the datasets
    used in this book. I recommend downloading to the encrypted *datasets* USB disk
    that you set up in Exercise 1-2.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大约1TB的存储空间，至少如果你想下载本书中使用的数据集。我建议你将数据下载到你在练习1-2中设置的加密*数据集*USB磁盘上。
- en: In a moment, you’ll use BitTorrent to download a copy of the BlueLeaks dataset,
    but first let’s take a look at where that data originated.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后，你将使用BitTorrent下载BlueLeaks数据集的副本，但首先让我们来看看这些数据的来源。
- en: <samp class="SANS_Futura_Std_Bold_B_11">The Origins of BlueLeaks</samp>
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">BlueLeaks的起源</samp>
- en: The disparate surveillance systems of local, state, and federal law enforcement
    agencies in the United States collected enough intelligence to learn critical
    clues about the September 11, 2001, terrorist attack before it happened. However,
    each agency kept this information to itself, failing to prevent the attack. Afterward,
    the US government decided these agencies needed to improve how they share information
    with each other. Congress directed the newly formed Department of Homeland Security
    (DHS) to create *fusion centers* across the country, collaborations between federal
    agencies like the DHS and FBI with state and local police departments, to share
    intelligence and prevent future terrorist attacks. These fusion centers are the
    source of much of the BlueLeaks data.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 美国地方、州和联邦执法机构的不同监视系统收集了足够的情报，提前发现了2001年9月11日恐怖袭击的关键线索。然而，每个机构将这些信息保留在自己手中，未能阻止此次袭击。事后，美国政府决定这些机构需要改善彼此之间的信息共享。国会指示新成立的国土安全部（DHS）在全国范围内创建*融合中心*，这些中心是联邦机构（如DHS和FBI）与州和地方警察部门之间的合作，旨在共享情报并防止未来的恐怖袭击。这些融合中心是BlueLeaks数据的主要来源之一。
- en: According to a 2012 Senate report, these fusion centers have “not produced useful
    intelligence to support Federal counterterrorism efforts,” and the intelligence
    reports they produced were “oftentimes shoddy, rarely timely, sometimes endangering
    citizens’ civil liberties and Privacy Act protections, occasionally taken from
    already-published public sources, and more often than not unrelated to terrorism.”
    Fusion centers had also been caught infiltrating and spying on anti-war activists,
    and in 2008, the American Civil Liberties Union published a report about fusion
    center abuses, including spying on religious groups in violation of the First
    Amendment.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 根据2012年参议院的一份报告，这些融合中心“没有提供有用的情报来支持联邦反恐工作”，而它们所产生的情报报告“往往不靠谱，时效性差，有时危及公民的公民自由和隐私法保护，偶尔是从已经发布的公共来源中获取的，且大多数情况下与恐怖主义无关。”融合中心还曾被发现渗透并监视反战活动人士，并且在2008年，美国公民自由联盟发布了一份关于融合中心滥用的报告，包括对宗教团体的监视，违反了第一修正案。
- en: In June 2020, a hacktivist self-identifying with the Anonymous movement hacked
    251 law enforcement websites, most of them fusion centers and related organizations.
    The hacked data, known as BlueLeaks, includes thousands of police documents and
    spreadsheets with over 16 million rows of data. The data spans from 2007 to June
    14, 2020, when the Black Lives Matter uprising triggered by the police murder
    of George Floyd was in full swing.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 2020年6月，一名自称为匿名者运动的黑客攻击了251个执法网站，其中大多数是融合中心及相关组织。被黑客攻击的数据被称为BlueLeaks，包含了数千份警察文件和电子表格，共有超过1600万行数据。这些数据的时间跨度从2007年到2020年6月14日，正值乔治·弗洛伊德被警察谋杀引发的黑人生命也重要运动（Black
    Lives Matter）全面爆发之时。
- en: While the hacktivist from Anonymous violated the law when they broke into these
    police websites and stole all this data, in the US it’s legal for you to download
    BlueLeaks, investigate it, and publish your findings.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然来自 Anonymous 的黑客活动者在闯入这些警察网站并窃取所有这些数据时违反了法律，但在美国，下载 BlueLeaks、调查它并发布你的发现是合法的。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 2-1: Download the BlueLeaks
    Dataset</samp>'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 2-1：下载 BlueLeaks 数据集</samp>
- en: In this exercise, you’ll download a local copy of the BlueLeaks dataset onto
    the 1TB USB disk you encrypted in the previous chapter. You’ll be investigating
    the contents of this dataset later in the book.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你将把 BlueLeaks 数据集下载到你在上一章加密的 1TB USB 硬盘上。稍后你将研究该数据集的内容。
- en: Download Transmission ([*https://<wbr>transmissionbt<wbr>.com*](https://transmissionbt.com))
    or any BitTorrent client of your choice and install it on your computer following
    the instructions for your operating system. Load the BlueLeaks page on the DDoSecrets
    website at [*https://<wbr>ddosecrets<wbr>.com<wbr>/wiki<wbr>/BlueLeaks*](https://ddosecrets.com/wiki/BlueLeaks).
    From there, find the magnet link for the BlueLeaks torrent and copy that to your
    clipboard.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 Transmission（[*https://<wbr>transmissionbt<wbr>.com*](https://transmissionbt.com)）或任何你选择的
    BitTorrent 客户端，并根据你的操作系统安装它。加载 DDoSecrets 网站上的 BlueLeaks 页面，地址为 [*https://<wbr>ddosecrets<wbr>.com<wbr>/wiki<wbr>/BlueLeaks*](https://ddosecrets.com/wiki/BlueLeaks)。从那里找到
    BlueLeaks 种子的磁力链接并将其复制到剪贴板。
- en: Next, open Transmission. Click **File**▸**Open Torrent Address**, paste the
    magnet link, and click **Open** to start downloading the data. When you first
    add this torrent to your client, it will ask where you want to save it. Save it
    to your *datasets* USB disk, then sit back and watch BitTorrent do its thing.
    It should connect you to the swarm, start downloading chunks of BlueLeaks from
    other peers (while possibly uploading chunks to other peers as well), and alert
    you when it’s done downloading. When the download completes, you’ll be seeding
    the BlueLeaks torrent and letting others download from you, until you remove the
    torrent from Transmission.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，打开 Transmission。点击 **文件**▸**打开种子地址**，粘贴磁力链接，然后点击 **打开** 开始下载数据。当你第一次将这个种子添加到客户端时，它会询问你想将其保存到哪里。将其保存到你的
    *datasets* USB 硬盘上，然后坐下来，看着 BitTorrent 按照自己的方式工作。它应该会连接到 swarm，开始从其他节点下载 BlueLeaks
    的数据块（同时也可能将数据块上传到其他节点），并在下载完成时提醒你。当下载完成后，你将为 BlueLeaks 种子做种，允许其他人从你这里下载，直到你将种子从
    Transmission 中移除。
- en: The 269GB download might take several hours, or even days if you have a slow
    internet connection. While you’re waiting, read on.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 269GB 的下载可能需要几个小时，甚至几天，如果你的网络连接比较慢的话。在等待的同时，请继续阅读。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Communicating with Encrypted Messaging
    Apps</samp>
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">使用加密消息应用程序进行沟通</samp>
- en: Most ways you communicate online aren’t very secure, even when you send messages
    that are ostensibly private. This is fine if you’re discussing nonsensitive information
    over Slack, SMS messages, or DMs on social media. However, when communicating
    with a confidential source who might face retaliation for talking with you, you
    should always use an encrypted messaging app.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你在线上沟通的大多数方式并不十分安全，即使你发送的是表面上看似私密的消息。如果你在 Slack、短信或社交媒体上的私信中讨论一些非敏感的信息，这倒是没问题。然而，当你与一个可能因为和你交谈而面临报复的机密来源沟通时，你应该始终使用加密的消息应用程序。
- en: Among encrypted messaging apps like WhatsApp and iMessage, Signal stands out
    as the best choice for source communications. Unlike other apps, Signal can’t
    be forced to share most information about its users with law enforcement or leak
    investigators, because it can’t access that user data in the first place. The
    only information the company can retrieve is the date that a user created their
    Signal account and the date that account most recently connected to Signal. Not
    even those who might typically be able to spy on your communications, like the
    messaging app’s employees, cloud hosting provider, or internet monitoring agencies,
    can access your Signal messages. Signal is the primary app I use for sensitive
    work communication, as well as for personal messaging. If I start out chatting
    with people on other platforms—SMS, DMs on social media, or anything else—I tend
    to move the conversation to Signal as soon as possible.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在 WhatsApp 和 iMessage 等加密消息应用中，Signal 因其源通信的最佳选择而脱颖而出。与其他应用不同，Signal 无法被强迫与执法机构或泄漏调查员分享关于其用户的大多数信息，因为它根本无法访问这些用户数据。公司唯一能检索到的信息是用户创建
    Signal 账户的日期，以及该账户最后一次连接到 Signal 的日期。即便是那些通常能够监视你通信的人，如消息应用的员工、云托管提供商或互联网监控机构，也无法访问你的
    Signal 消息。Signal 是我处理敏感工作通信和个人消息的主要应用。如果我一开始在其他平台（如 SMS、社交媒体的私信等）与人聊天，我会尽快将对话转移到
    Signal 上。
- en: 'In more detail, here’s how Signal ensures that it has as little information
    about its users as possible:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 更详细地说，Signal 如何确保尽可能少地收集关于用户的信息：
- en: Since messages and calls are *end-to-end encrypted*, the Signal service can’t
    access their contents. This means if you type a Signal message to me on your phone
    (your end) and hit send, the Signal app will encrypt it for me, or in other words,
    create a totally scrambled version of the message so that it’s impossible for
    anyone but me to unscramble it. The encrypted message then goes to Signal’s servers,
    which forward it to my phone (my end). Once it’s on my phone, the Signal app can
    then decrypt it so I can read the original message. Signal’s servers themselves
    never have access to the original message, only the encrypted version, and they
    never have the ability to decrypt it—only message recipients do.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于消息和通话是*端到端加密*的，Signal 服务无法访问它们的内容。这意味着，如果你在手机（你的端）上给我发送一条 Signal 消息并点击发送，Signal
    应用会为我加密消息，换句话说，会创建一条完全混乱的消息版本，只有我才能解密它。这条加密消息随后会传输到 Signal 的服务器，服务器将其转发到我的手机（我的端）。一旦消息到了我的手机，Signal
    应用就会解密它，这样我就能读取原始消息。Signal 的服务器本身永远无法访问原始消息，只有加密版本，并且它们永远没有能力解密——只有消息接收者才有能力解密。
- en: Signal servers don’t store metadata, the records of when you send messages and
    to whom. They also can’t access your list of contacts or even the name and avatar
    associated with your own phone number.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Signal 服务器不会存储元数据，即你发送消息的时间和对象记录。它们也无法访问你的联系人列表，甚至无法查看与你的电话号码关联的名字和头像。
- en: Signal invented a technology called *sealed sender* that uses cryptography to
    prevent anyone besides you and the recipient of your message from knowing whom
    you’re communicating with. Even if Signal secretly wanted to store your metadata
    (or if someone hacked Signal’s servers to monitor for metadata), they still wouldn’t
    have access to it.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Signal 发明了一种名为*密封发送者*的技术，利用加密技术防止除了你和消息接收者之外的任何人知道你在与谁通信。即使 Signal 秘密地想要存储你的元数据（或者有人黑客入侵了
    Signal 的服务器来监视元数据），它们仍然无法访问这些数据。
- en: Signal doesn’t know which phone numbers are part of which Signal groups, or
    any metadata about the group, such as its name or avatar.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Signal 并不知道哪些电话号码属于哪些 Signal 群组，或有关该群组的任何元数据，例如群组的名字或头像。
- en: Signal’s code is open source, which lets experts inspect it for flaws and backdoors,
    and its encryption protocol has been peer reviewed by cryptography experts.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Signal 的代码是开源的，这让专家们可以检查其中的缺陷和后门，且其加密协议已经得到加密专家的同行评审。
- en: Signal’s security protocols stand in stark contrast to those of other encrypted
    messaging apps. WhatsApp, for example, routinely shares metadata with law enforcement,
    like exactly which phone numbers a surveillance target communicates with and when
    the target has used them. WhatsApp can even share this data in real time, allowing
    it to be used as evidence against whistleblowers like Treasury Department employee
    Natalie Mayflower Sours Edwards, mentioned in [Chapter 1](chapter1.xhtml). When
    she was indicted in 2018 and accused of sharing a secret dataset to BuzzFeed journalist
    Jason Leopold, the evidence against her included real-time metadata from an encrypted
    messaging app. The metadata showed Edwards and Leopold exchanging hundreds of
    messages right as Leopold published multiple articles based on this dataset. Edwards
    and Leopold would have been better off if they had used Signal.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Signal 的安全协议与其他加密通讯应用的协议形成鲜明对比。例如，WhatsApp 经常与执法机关共享元数据，比如监控目标与哪些电话号码进行通讯，以及何时使用这些号码。WhatsApp
    甚至可以实时共享这些数据，用作证据对付像财政部员工 Natalie Mayflower Sours Edwards 这样的告密者，她在 [第1章](chapter1.xhtml)
    中被提到。当她在 2018 年被起诉并指控将一份秘密数据集分享给 BuzzFeed 记者 Jason Leopold 时，针对她的证据包括来自加密通讯应用的实时元数据。这些元数据显示
    Edwards 和 Leopold 在 Leopold 发布多篇基于该数据集的文章时交换了数百条消息。如果她们使用的是 Signal，就能避免这种情况。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*The web page* [https://<wbr>signal<wbr>.org<wbr>/bigbrother<wbr>/](https://signal.org/bigbrother/)
    *lists the handful of times that Signal has been ordered to share data with law
    enforcement and how they responded. In all cases, Signal either didn’t share any
    data (because, as the organization says, “It’s impossible to turn over data that
    we never had access to in the first place”) or shared only the date that the target
    Signal account was created and the date that it most recently connected to the
    service.*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*网页* [https://<wbr>signal<wbr>.org<wbr>/bigbrother<wbr>/](https://signal.org/bigbrother/)
    *列出了 Signal 被要求与执法机关共享数据的少数几次以及他们的回应。在所有情况下，Signal 要么未共享任何数据（因为该组织表示，“我们根本无法交出我们从未接触过的数据”），要么只共享了目标
    Signal 账户创建的日期和最近连接到服务的日期。*'
- en: For additional security, you can compare Signal *safety numbers* with another
    Signal user, allowing you to verify that the end-to-end encryption with that person
    is secure and isn’t being actively tampered with by the Signal service, your internet
    service provider, or anyone else. From a Signal conversation, you can tap on the
    name of the person you’re talking to at the top, then tap **View Safety Number**.
    This should show you your safety number, both as a number and as a QR code. If
    your safety number is the same as the other person’s, you can be sure that the
    end-to-end encryption is secure. If you’re physically in the same room, you can
    both use the safety number screen to scan each other’s QR codes to confirm. To
    confirm remotely, you can copy the safety number and paste it into a different
    messaging app (not Signal), then send it to the same person. If you confirm that
    your safety number matches, tap **Mark as Verified**. Once you’ve verified your
    safety number with a contact, Signal will make it clear that it’s verified and
    warn you if it ever changes—this could mean the encryption is under attack, but
    more likely it just means the person you’re talking to got a new phone, and you’ll
    have to verify them again.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高安全性，你可以与另一位 Signal 用户比对 *安全号码*，这样你可以验证与此人之间的端到端加密是否安全，且未被 Signal 服务、你的互联网服务提供商或其他任何人篡改。在
    Signal 聊天中，你可以点击与之对话的人的名字，然后点击 **查看安全号码**。这会显示你的安全号码，既有数字形式，也有二维码。如果你的安全号码与对方相同，你可以确认端到端加密是安全的。如果你们在同一个房间内，可以通过安全号码界面扫描对方的二维码以确认。如果是远程确认，你可以复制安全号码并粘贴到其他通讯应用中（不是
    Signal），然后发送给同一个人。如果你确认安全号码匹配，点击 **标记为已验证**。一旦你与联系人验证了安全号码，Signal 会明确标明该号码已验证，并且如果安全号码发生变化，会发出警告——这可能意味着加密受到攻击，但更有可能只是意味着你正在对话的人换了新手机，你需要重新验证。
- en: Once Signal messages are on your device, they’re only as safe as your phone
    itself. Leak investigators searching your phone or your source’s phone will have
    access to all the messages on each device. To protect against device searches,
    always use Signal’s disappearing messages feature, which automatically deletes
    messages a set amount of time after you view them, unless you have a good reason
    to retain messages for a specific conversation. You can choose to delete messages
    anywhere between 30 seconds and 4 weeks after viewing, or set a custom time. I
    typically set disappearing messages to 4 weeks, change it to an hour or so if
    I’m sending secret information like a password, and then change it back to 4 weeks.
    In your Signal privacy settings, I recommend choosing to make all new conversations
    start with disappearing messages. You should also take steps to lock down your
    phone itself, like using a strong random passcode so that no one but you can easily
    unlock your device.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Signal消息到达你的设备，它们的安全性就取决于你的手机本身。泄露调查员如果搜查你的手机或你源头的手机，将能访问每个设备上的所有消息。为了防止设备被搜索，始终使用Signal的消失消息功能，该功能会在你查看消息后自动删除消息，除非你有充分的理由保留某个特定对话的消息。你可以选择在查看消息后30秒到4周之间删除消息，或者设置自定义时间。我通常将消失消息设置为4周，如果我发送像密码这样的机密信息，会把它更改为一小时左右，然后再改回4周。在你的Signal隐私设置中，我建议选择让所有新对话默认启用消失消息功能。你还应该采取措施锁定你的手机，例如使用强随机密码，确保只有你能轻松解锁设备。
- en: Signal is not only very secure but also very easy to use. Any two people with
    the app installed can send each other encrypted text messages, share encrypted
    files, and make encrypted voice and video calls or group chats for multiple users.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Signal不仅非常安全，而且非常容易使用。任何两个人只要安装了这个应用，就可以互相发送加密的文本消息、分享加密文件，并进行加密语音通话和视频通话，或者进行多用户的群聊。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 2-2: Install and Practice
    Using Signal</samp>'
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 2-2：安装并练习使用Signal</samp>
- en: In this exercise, you’ll install Signal on your phone and computer and practice
    using it.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次练习中，你将安装Signal到手机和电脑，并练习使用它。
- en: 'Start with your phone: open the iPhone App Store or the Android Play Store
    and download the Signal Private Messenger app. After you open the app, you’ll
    need to verify your phone number and set a PIN (save this PIN in your password
    manager). Signal will also request some permissions. In my opinion, it’s perfectly
    safe to grant all of them. Signal uses the Contacts permission to discover which
    of your contacts also use the app, but in such a way that it can’t access your
    contact list itself. (If you grant access to your contacts, the app will notify
    you when one of them creates a Signal account.)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 从手机开始：打开iPhone的App Store或Android的Play Store，下载Signal私人消息应用。打开应用后，你需要验证你的手机号码并设置PIN码（请将此PIN码保存在密码管理器中）。Signal还会请求一些权限。在我看来，授予所有权限是完全安全的。Signal使用联系人权限来发现哪些联系人也在使用此应用，但它的方式是不能直接访问你的联系人列表的。（如果你授予了访问权限，当你的某个联系人创建Signal账户时，应用会通知你。）
- en: Next, download Signal on your computer from [*https://<wbr>signal<wbr>.org*](https://signal.org).
    After installing it, you’ll need to scan a QR code from your phone to set up your
    computer as a linked device. Keep in mind that your Signal messages will now be
    copied to both devices, so make sure to keep them both secure.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，从[*https://<wbr>signal<wbr>.org*](https://signal.org)下载Signal到你的电脑。安装后，你需要扫描手机上的二维码，将电脑设置为已链接设备。请记住，现在你的Signal消息将同时复制到两个设备上，因此确保这两个设备都保持安全。
- en: To practice sending encrypted messages, get some friends to install Signal too.
    Send them messages, play with disappearing messages, and try out encrypted voice
    calls and video calls. If you have enough friends on Signal, start a Signal group.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 为了练习发送加密消息，可以让一些朋友也安装Signal。发送消息给他们，玩一下消失消息功能，尝试加密语音通话和视频通话。如果你在Signal上有足够多的朋友，可以创建一个Signal群组。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Encrypting Messages with PGP</samp>
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">使用PGP加密消息</samp>
- en: In addition to communicating via secure messaging apps, you can also encrypt
    messages with PGP (“pretty good privacy”) encryption. This encryption method was
    first developed in 1991 to encrypt email. It has historically been very important
    in securely communicating with sources and other journalists; I used it extensively
    while reporting on the Snowden Archive. Compared to modern encrypted messaging
    apps like Signal, PGP is complicated and error-prone, so I recommend that you
    avoid it if you can and choose one of the better alternatives instead. However,
    you may find it useful in future investigations if one of your sources uses it.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 除了通过安全消息应用进行通信外，你还可以使用PGP（“非常好的隐私”）加密来加密消息。该加密方法最早于1991年开发，用于加密电子邮件。在与消息来源及其他记者进行安全通信时，PGP一直非常重要；我在报道斯诺登档案时广泛使用过它。与现代加密消息应用程序（如Signal）相比，PGP复杂且容易出错，因此我建议如果可以的话避免使用它，而选择一些更好的替代方案。不过，如果你的某个消息来源使用PGP，你可能会在未来的调查中发现它有用。
- en: 'PGP works like this: a user creates a file on their computer called a *PGP
    key*, which can be split into two parts, a *public key* and a *secret key*. If
    you have a copy of this user’s public key, you can use it to encrypt a message
    so that it can be decrypted only with that secret key. You can then email this
    scrambled message to the PGP user with the secret key. If anyone else gets access
    to that email, the message is scrambled and they can’t read it. When the person
    with the secret key checks it, though, they can decrypt it and read the original
    message.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: PGP的工作原理如下：用户在他们的计算机上创建一个名为*PGP密钥*的文件，该文件可以分为两部分，一个是*公钥*，另一个是*私钥*。如果你拥有该用户的公钥副本，你可以使用它加密消息，这样只有拥有该私钥的人才能解密该消息。然后你可以将这个加密的消息通过电子邮件发送给拥有私钥的PGP用户。如果其他人访问了该电子邮件，消息将被加密，他们无法阅读内容。然而，当拥有私钥的人查看这封邮件时，他们可以解密并阅读原始消息。
- en: People sometimes still send me PGP-encrypted email, and I use PGP to respond
    to them securely. You can find my PGP public key on my personal website, [*https://<wbr>micahflee<wbr>.com*](https://micahflee.com).
    I keep my PGP secret key on a USB device called a YubiKey, which looks kind of
    like a USB stick with a button on it. YubiKeys (and other security keys) are mainly
    used to lock down online accounts. Even if a hacker knows the username and password
    to my Google account, for example, they won’t be able to log in without first
    physically stealing my YubiKey, plugging it into their computer, and pressing
    its button while they try to log in. YubiKeys can also be used to securely store
    PGP secret keys.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 有时人们仍然会给我发送PGP加密的电子邮件，我也会使用PGP安全地回复他们。你可以在我的个人网站上找到我的PGP公钥，[*https://<wbr>micahflee<wbr>.com*](https://micahflee.com)。我将我的PGP私钥保存在一个名为YubiKey的USB设备中，它看起来像一个带按钮的USB闪存盘。YubiKey（和其他安全密钥）主要用于保护在线账户。即使黑客知道我的Google账户的用户名和密码，例如，他们也无法登录，除非先物理盗取我的YubiKey，将其插入他们的计算机，并在尝试登录时按下按钮。YubiKey也可以用来安全存储PGP私钥。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Staying Anonymous Online with Tor and
    OnionShare</samp>
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">使用Tor和OnionShare保持在线匿名</samp>
- en: Tor and OnionShare are both important tools for working with sources who want
    to send you data anonymously and for conducting investigations where you need
    to remain anonymous yourself.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Tor和OnionShare是与希望匿名发送数据的来源合作以及进行需要保持自己匿名的调查时的重要工具。
- en: Tor is a decentralized network of volunteer servers called *nodes.* It keeps
    you anonymous online by bouncing your internet connection through a series of
    these nodes. Tor Browser is a web browser that sends all web traffic through the
    Tor network. Using Tor Browser works much like using Chrome or Firefox. Let’s
    say you want to anonymously visit the Organized Crime and Corruption Reporting
    Project’s (OCCRP) website at [*https://<wbr>www<wbr>.occrp<wbr>.org*](https://www.occrp.org).
    You simply open Tor Browser (which you can download from [*https://<wbr>www<wbr>.torproject<wbr>.org*](https://www.torproject.org)),
    wait for it to connect to the Tor network, type **occrp.org** in the address bar,
    and hit ENTER, and the page will load.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Tor是一个由志愿者服务器组成的去中心化网络，称为*节点*。它通过将你的互联网连接通过一系列这些节点转发来保持你在线上的匿名性。Tor浏览器是一个将所有网页流量通过Tor网络发送的浏览器。使用Tor浏览器的方式类似于使用Chrome或Firefox。假设你想匿名访问“有组织犯罪与腐败报道项目”（OCCRP）的官方网站[*https://<wbr>www<wbr>.occrp<wbr>.org*](https://www.occrp.org)，你只需要打开Tor浏览器（你可以从[*https://<wbr>www<wbr>.torproject<wbr>.org*](https://www.torproject.org)下载），等待它连接到Tor网络，输入**occrp.org**在地址栏中，按下回车键，页面就会加载。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*I’ve been a volunteer in the Tor community for a long time, attending the
    nonprofit’s physical gatherings around the world, sometimes running Tor nodes
    to contribute to the network, and developing software related to Tor.*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*我长期以来一直是 Tor 社区的志愿者，参加该非营利组织在全球的线下活动，有时还会运行 Tor 节点为网络做出贡献，并开发与 Tor 相关的软件。*'
- en: Tor Browser operates more slowly than a normal browser, because it bounces your
    web traffic between three random Tor nodes around the world before sending it
    to the OCCRP website. No single node knows both your real IP address, which would
    reveal your location, and what website you’re visiting. This means you don’t need
    to trust the nodes to use them. Even if a Tor node is run by criminals or spies,
    they won’t be able to de-anonymize you, at least not without exploiting a vulnerability
    in the Tor network itself. When you close Tor Browser, everything about your browsing
    session gets deleted without leaving a trace on your local computer.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Tor 浏览器比普通浏览器更慢，因为它会将你的网络流量通过全球的三个随机 Tor 节点中转，然后再发送到 OCCRP 网站。没有任何一个节点知道你的真实
    IP 地址（会暴露你的位置）和你访问的网站。这意味着你不需要信任这些节点就能使用它们。即使一个 Tor 节点由罪犯或间谍运营，他们也无法揭示你的身份，至少在没有利用
    Tor 网络本身的漏洞之前是这样的。当你关闭 Tor 浏览器时，你的浏览会话的所有信息都会被删除，不会在本地计算机上留下痕迹。
- en: Since Tor allows users to be anonymous online, people routinely use it for hacking
    websites, creating accounts to spam or phish people, or engaging in similar activities.
    For this reason, plenty of websites (including Google) are often extremely suspicious
    of Tor traffic and make Tor users jump through additional hurdles like filling
    out CAPTCHAs or even blocking them altogether. Unfortunately, this is the price
    of online anonymity.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Tor 允许用户在线匿名，人们通常会用它进行黑客攻击网站、创建账户进行垃圾邮件或网络钓鱼等类似活动。因此，很多网站（包括 Google）通常对 Tor
    流量非常警惕，并要求 Tor 用户跳过额外的障碍，比如填写 CAPTCHA，甚至完全封锁它们。不幸的是，这就是在线匿名的代价。
- en: 'In addition to allowing internet users to remain anonymous, Tor can keep servers
    themselves anonymous. These servers are called Tor *onion services* (sometimes
    referred to as the *dark web*) and have domain names ending in *.onion*. You can
    load onion services only by using Tor. Like Tor Browser, onion services also pick
    three random Tor nodes to route their traffic through. When a user loads an onion
    site in Tor Browser, it actually requires six hops through the Tor network: three
    on the Tor Browser side and three on the onion service side.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 除了允许互联网用户保持匿名，Tor 还可以让服务器保持匿名。这些服务器被称为 Tor *洋葱服务*（有时也称为 *暗网*），其域名以 *.onion*
    结尾。你只能通过使用 Tor 来访问洋葱服务。像 Tor 浏览器一样，洋葱服务也会选择三个随机的 Tor 节点来中转其流量。当用户在 Tor 浏览器中加载洋葱网站时，实际上需要通过
    Tor 网络进行六次跳跃：三个在 Tor 浏览器端，三个在洋葱服务端。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*The* .onion *domain name is derived from a cryptographic fingerprint of the
    public key that belongs to the onion service. The Tor protocol ensures that no
    one else can use that same name without knowing that onion service’s secret key.*'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '*“.onion”* 域名来源于属于洋葱服务的公钥的加密指纹。Tor 协议确保没有其他人能在不了解该洋葱服务的密钥的情况下使用相同的名称。'
- en: OnionShare, which I first developed in 2014 and have been adding features to
    ever since, is software that makes it easy for anyone to run onion services, allowing
    them to anonymously and securely send and receive files. It runs a web server
    directly on your computer, makes that server accessible to others as an onion
    service, and shows you a *.onion* address to send to someone else. When you start
    an OnionShare service, you can choose between Share mode, which allows others
    to download specific files from your computer, or Receive mode, which allows others
    to upload files to your computer.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: OnionShare 是我在 2014 年首次开发的，并且从那时起一直在不断添加新功能的软件，它使任何人都能轻松运行洋葱服务，允许他们匿名且安全地发送和接收文件。它直接在你的计算机上运行一个
    web 服务器，并将该服务器作为洋葱服务提供给其他人，显示一个 *.onion* 地址供你发送给别人。当你启动 OnionShare 服务时，你可以选择分享模式，让他人从你的计算机上下载特定的文件，或者接收模式，让他人向你的计算机上传文件。
- en: OnionShare also supports other modes. With Chat mode, for instance, you can
    spin up an anonymous chatroom. It doesn’t have as many features as a Signal group,
    but it keeps you significantly more anonymous. With Website mode, you can quickly
    host a *static website*—a simple website made up of HTML files and resources like
    images and JavaScript, but without any databases or code running on the server—as
    an onion service. If someone loads that address in Tor Browser, their connection
    bounces through the Tor network until it reaches your computer, then loads the
    website hosted by OnionShare.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: OnionShare 还支持其他模式。例如，在聊天模式下，你可以快速建立一个匿名聊天室。虽然它没有 Signal 群组那么多功能，但它能让你保持更强的匿名性。在网站模式下，你可以快速托管一个
    *静态网站*——一个由 HTML 文件和图像、JavaScript 等资源构成的简单网站，但没有数据库或服务器上的运行代码，作为 onion 服务。如果有人在
    Tor 浏览器中加载该地址，他们的连接会通过 Tor 网络传输，直到到达你的计算机，然后加载由 OnionShare 托管的网站。
- en: '[Figure 2-1](#fig2-1) shows the OnionShare software configured as an anonymous
    dropbox, allowing my URL recipient (such as a source) to anonymously and securely
    upload files directly to my computer.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 2-1](#fig2-1) 显示了配置为匿名 Dropbox 的 OnionShare 软件，允许我的 URL 接收者（如源）匿名且安全地将文件直接上传到我的计算机。'
- en: '![This screenshot shows OnionShare with a Receive tab open. The server is started,
    and the OnionShare address is displayed.](Images/Figure2-1.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![该截图显示了打开接收标签的 OnionShare。服务器已启动，OnionShare 地址已显示。](Images/Figure2-1.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 2-1: OnionShare in Receive
    mode</samp>'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 2-1：OnionShare 接收模式</samp>
- en: For example, to use OnionShare to let a source send me data, I’d open OnionShare
    on my computer, connect to the Tor network, click **Receive Files**, and then
    click **Start Receive Mode**. The service would give me a URL like *http://<wbr>ic2kaoao3fspynexwxlajxhb3zwcwrjuf57ykfuq7tsrhzlveeamkrid<wbr>.onion<wbr>.*
    I would send that URL to my source and wait. My source would then open Tor Browser;
    load that URL, which would load a website hosted directly on my computer; and
    then upload their files. Because OnionShare uses Tor, I’d have no way of learning
    my source’s IP address, and my source would have no way of learning mine.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，使用 OnionShare 让源给我发送数据时，我会在计算机上打开 OnionShare，连接到 Tor 网络，点击 **接收文件**，然后点击
    **启动接收模式**。该服务会给我一个类似 *http://<wbr>ic2kaoao3fspynexwxlajxhb3zwcwrjuf57ykfuq7tsrhzlveeamkrid<wbr>.onion<wbr>*
    的 URL。我会把这个 URL 发送给我的源并等待。我的源会打开 Tor 浏览器，加载该 URL，这会加载一个直接托管在我计算机上的网站，然后上传他们的文件。因为
    OnionShare 使用了 Tor，我无法得知源的 IP 地址，而我的源也无法得知我的 IP 地址。
- en: '[Figure 2-2](#fig2-2) shows what that web page would look like for my source.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 2-2](#fig2-2) 显示了我的源所看到的网页样子。'
- en: '![This screenshot shows OnionShare with a Receive tab open. The server is started,
    and the OnionShare address is displayed.](Images/Figure2-2.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![该截图显示了打开接收标签的 OnionShare。服务器已启动，OnionShare 地址已显示。](Images/Figure2-2.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 2-2: Using Tor Browser
    to access the OnionShare Receive mode site shown in [Figure 2-1](#fig2-1)</samp>'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 2-2：使用 Tor 浏览器访问 [图 2-1](#fig2-1)
    中显示的 OnionShare 接收模式站点</samp>
- en: The URL I sent to my source starts with *http://<wbr>* and not *https://<wbr>*.
    HTTPS encrypts traffic between the web browser and the web server; normally, with
    just plain HTTP, anyone monitoring the network can spy on exactly what you’re
    doing, what files your uploading, and what passwords you’re submitting into forms.
    Onion services are an exception to this rule, though, since the connection between
    Tor Browser and an onion service is already end-to-end encrypted. It’s possible
    to add HTTPS to an onion service, but doing so would be redundant and unnecessary.
    Also notice that the domain name part of the URL in [Figure 2-2](#fig2-2) is 56
    random-looking letters and numbers followed by *.onion*. Unlike with normal domain
    names, you don’t get to choose onion service names. They all look like this.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我发送给我的源的 URL 以 *http://<wbr>* 开头，而不是 *https://<wbr>*。HTTPS 加密了网页浏览器和网络服务器之间的流量；通常情况下，只有使用普通
    HTTP，网络监控者就可以窥探你正在做什么，上传了什么文件，以及你在表单中提交了哪些密码。然而，onion 服务是这个规则的例外，因为 Tor 浏览器与 onion
    服务之间的连接已经是端到端加密的。虽然可以为 onion 服务添加 HTTPS，但这样做是多余且不必要的。还要注意，[图 2-2](#fig2-2) 中 URL
    的域名部分是由 56 个看似随机的字母和数字组成，后面跟着 *.onion*。与普通域名不同，你不能选择 onion 服务的名称，它们都像这样。
- en: OnionShare runs a web server directly on your computer. This means third-party
    companies don’t have access to any of the files that are shared in it, but also
    that you have to time things right. If I sent that OnionShare link and then closed
    my laptop so it went to sleep, my source wouldn’t be able to load the website
    until I woke my computer up again. OnionShare works best when you’re working with
    people in real time. However, because it uses the Tor network, it’s really slow*.*
    It might take many hours or even days to transfer gigabytes of data. To transfer
    especially large datasets, consider using a non-Tor method like those described
    later in this chapter.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: OnionShare 在您的计算机上直接运行一个 web 服务器。这意味着第三方公司无法访问共享的任何文件，但也意味着您必须把握时机。如果我发送了那个
    OnionShare 链接，然后关闭了笔记本电脑让它进入睡眠状态，那么我的源在我唤醒计算机之前无法加载该网站。OnionShare 在与人实时协作时效果最佳。然而，由于它使用的是
    Tor 网络，它的速度非常慢*。* 传输几GB的数据可能需要几个小时甚至几天。若要传输特别大的数据集，请考虑使用非 Tor 方法，稍后本章中将介绍此类方法。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-95
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*For more information, read the detailed documentation for OnionShare at* [https://docs.onionshare.org](https://docs.onionshare.org)*.*'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '*欲了解更多信息，请阅读 OnionShare 的详细文档，访问* [https://docs.onionshare.org](https://docs.onionshare.org)*。*'
- en: If you’re using OnionShare to send sensitive data, I recommend that you share
    OnionShare URLs only using encrypted messaging apps like Signal and avoid sending
    them over insecure communication channels like email or social media DMs. This
    will prevent anyone who has access to those insecure channels from loading the
    OnionShare URL first or modifying the OnionShare URL to trick your source into
    uploading documents to them, for example.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用 OnionShare 发送敏感数据，我建议您仅通过加密消息应用程序（如 Signal）共享 OnionShare URL，并避免通过不安全的通信渠道（如电子邮件或社交媒体私信）发送。这样可以防止那些能够访问不安全渠道的人先加载
    OnionShare URL 或修改该 URL，以诱使您的源上传文件给他们。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 2-3: Play with Tor and OnionShare</samp>'
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 2-3：玩转 Tor 和 OnionShare</samp>
- en: In this exercise, you’ll install Tor Browser and OnionShare on your computer
    and practice using them. Download OnionShare from [*https://<wbr>onionshare<wbr>.org*](https://onionshare.org)
    and Tor Browser from [*https://<wbr>www<wbr>.torproject<wbr>.org*](https://www.torproject.org),
    and follow the instructions for your operating system.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，您将安装 Tor 浏览器和 OnionShare，并进行实践操作。请从 [*https://<wbr>onionshare<wbr>.org*](https://onionshare.org)
    下载 OnionShare，并从 [*https://<wbr>www<wbr>.torproject<wbr>.org*](https://www.torproject.org)
    下载 Tor 浏览器，并根据您的操作系统跟随指示进行安装。
- en: Open Tor Browser, search for anything you like, and visit various websites to
    see how the online experience differs. The default Tor Browser search engine is
    DuckDuckGo, which works great over Tor. However, you’ll find that it’s frustrating
    to use Google, because it constantly forces you to prove you’re not a robot by
    filling out CAPTCHAs. Several websites have both *clearnet* versions (those accessible
    using normal web browsers) and *.onion* versions. If you’re using Tor Browser
    and visit a website that supports both, like [*https://<wbr>freedom<wbr>.press*](https://freedom.press),
    you’ll see the .onion available button in the top right of the address bar. Clicking
    it should bring you to the onion version of that site.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 Tor 浏览器，搜索任何您感兴趣的内容，并访问各种网站，看看在线体验有何不同。Tor 浏览器的默认搜索引擎是 DuckDuckGo，它在 Tor
    网络上运行良好。然而，您会发现使用 Google 是很令人沮丧的，因为它不断要求您填写验证码以证明自己不是机器人。许多网站同时有 *清网* 版本（可以用常规浏览器访问）和
    *.onion* 版本。如果您使用 Tor 浏览器访问一个支持两种版本的网站，例如 [*https://<wbr>freedom<wbr>.press*](https://freedom.press)，您会看到地址栏右上方有“.onion
    可用”按钮。点击该按钮应能将您带到该网站的 onion 版本。
- en: '[Figure 2-3](#fig2-3) shows the Freedom of the Press Foundation’s website in
    Tor Browser with the .onion available button.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 2-3](#fig2-3) 显示了在 Tor 浏览器中访问自由新闻基金会网站，并展示了“.onion 可用”按钮。'
- en: '![This screenshot shows https://freedom.press loaded in Tor Browser, with a
    “.onion available” button showing in the address bar.](Images/Figure2-3.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![这张截图显示了 https://freedom.press 在 Tor 浏览器中加载，并且地址栏中显示了“.onion 可用”按钮。](Images/Figure2-3.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 2-3: The Freedom of
    the Press Foundation home page</samp>'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 2-3：自由新闻基金会首页</samp>
- en: 'Next, try using OnionShare. Open a Share Files tab, browse for some files on
    your computer, and start the service. Then open Tor Browser, load the OnionShare
    URL, and download those files. Test out small files, large files, and different
    settings. Then try setting up an anonymous dropbox to receive files: open OnionShare,
    open a Receive Files tab, and start the service. In Tor Browser, load the OnionShare
    URL and upload files to your computer. Again, test out small files, large files,
    and different settings.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，试着使用OnionShare。打开“共享文件”标签，浏览电脑上的文件，并启动服务。然后打开Tor浏览器，加载OnionShare的URL，下载这些文件。测试一下小文件、大文件以及不同的设置。接着，尝试设置一个匿名的Dropbox来接收文件：打开OnionShare，打开“接收文件”标签，启动服务。在Tor浏览器中，加载OnionShare的URL，上传文件到你的电脑。同样，测试一下小文件、大文件和不同的设置。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Communicating with My Tea Party Patriots
    Source</samp>
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">与我的Tea Party Patriots来源的沟通</samp>
- en: 'This section describes a real-world example of how I gathered data from an
    anonymous source using several tools you’ve seen so far: Twitter DMs, a PGP-encrypted
    message, communicating via Signal, and receiving a dataset through OnionShare.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了我如何通过多个工具从匿名来源收集数据的实际例子，这些工具你们已经见过：Twitter私信、PGP加密消息、通过Signal进行沟通，以及通过OnionShare接收数据集。
- en: 'In the summer of 2021, a journalist sent me a DM on Twitter, passing along
    a note from someone else. The journalist had no idea what the note said, because
    it was PGP-encrypted. The note looked something like this:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 2021年夏天，一名记者通过Twitter给我发了私信，转发了另一位人士的留言。记者并不知道留言的内容，因为它是PGP加密的。留言内容大致是这样的：
- en: '[PRE0]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'I plugged in my YubiKey and used it to decrypt the PGP message. It simply said:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我插入了我的YubiKey并用它解密了PGP消息。消息简单地写道：
- en: interested in data?
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对数据感兴趣吗？
- en: ''
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'signal: *[redacted phone number]*'
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'signal: *[隐藏的电话号码]*'
- en: At the time, I didn’t publish my phone number directly on my social media bios
    or on my staff profile page on The Intercept’s website. If I had, this source
    could have just contacted me directly on Signal, which would have been much simpler.
    Nevertheless, using PGP ensured that all communication between us was end-to-end
    encrypted, and even though Twitter DMs were involved, Twitter didn’t have any
    communication metadata between my source and me.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 当时，我并没有在社交媒体的个人简介或《Intercept》网站上的员工页面直接公开我的电话号码。如果我有这么做，这个来源就可以直接通过Signal联系我，这样会更简单。然而，使用PGP确保了我们之间所有的通讯都是端到端加密的，尽管使用了Twitter私信，Twitter并未记录我和来源之间的任何通讯元数据。
- en: I opened Signal Desktop on my computer, typed in the phone number I’d found
    in the PGP-encrypted message, and turned on disappearing messages for the conversation.
    I said hello and that I was interested in data. At this point I had a secure communication
    channel with my new source.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我在电脑上打开了Signal Desktop，输入了在PGP加密消息中找到的电话号码，并为这次对话启用了消失消息功能。我打了个招呼，表示我对数据感兴趣。到这时，我与我的新来源建立了安全的通信渠道。
- en: The source told me that they had hacked the Tea Party Patriots, a major US conservative
    organization that bills itself as one of the largest grassroots groups on the
    right. They wanted to send me a dataset that included membership lists, donation
    history, and petition data and asked how they should send it. I sent them an OnionShare
    link to upload the dataset directly to my computer.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 消息来源告诉我，他们黑进了Tea Party Patriots（茶党爱国者组织），这是一家自称是美国最大保守派草根组织之一的团体。他们想要给我发送一份包含会员名单、捐款历史和请愿数据的数据集，并询问应该如何发送。我给他们发送了一个OnionShare链接，让他们将数据集直接上传到我的电脑。
- en: 'I later learned from this dataset that the Tea Party Patriots organization
    isn’t nearly as grassroots as it claims: three ultra-wealthy donors—two of them
    billionaires—provided the bulk of the group’s donations. I also learned that the
    group’s claim of being a network of “over 3 million patriots” was wildly exaggerated:
    only 144,000 members were marked “active” in the hacked database. (Read my analysis
    of this dataset at [*https://<wbr>theintercept<wbr>.com<wbr>/2021<wbr>/08<wbr>/05<wbr>/tea<wbr>-party<wbr>-patriots<wbr>-hacked<wbr>-billionaire<wbr>-donors*<wbr>/](https://theintercept.com/2021/08/05/tea-party-patriots-hacked-billionaire-donors/).)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 后来，我从这份数据集中了解到，Tea Party Patriots组织并不像它所宣称的那样是一个草根组织：三位极其富有的捐赠者——其中两位是亿万富翁——提供了该组织大部分的捐款。我还了解到，该组织声称自己是一个拥有“300多万爱国者”的网络，这一说法严重夸大：在被黑的数据库中，只有144,000名成员被标记为“活跃”。（阅读我对这份数据集的分析，链接在此：[
    *https://<wbr>theintercept<wbr>.com<wbr>/2021<wbr>/08<wbr>/05<wbr>/tea<wbr>-party<wbr>-patriots<wbr>-hacked<wbr>-billionaire<wbr>-donors*<wbr>/](https://theintercept.com/2021/08/05/tea-party-patriots-hacked-billionaire-donors/).)
- en: <samp class="SANS_Futura_Std_Bold_B_11">Other Options for Acquiring Datasets
    from Sources</samp>
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">获取数据集的其他选项</samp>
- en: In this section, you’ll learn a couple more ways to communicate with sources
    when the skills you’ve learned so far don’t fit your needs.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习几种当你已经掌握的技能不适用于当前需求时，如何与信息源沟通的方式。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Encrypted USB Drives</samp>
  id: totrans-119
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">加密的 USB 驱动器</samp>
- en: Some of your future sources may want to send you more data than is feasible
    to transfer over Tor. In that case, you can consider sending an encrypted USB
    drive through postal mail.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 你的某些未来信息源可能希望发送给你更多的数据，而这些数据量大到无法通过 Tor 传输。在这种情况下，你可以考虑通过邮寄加密的 USB 驱动器来发送数据。
- en: First, your source encrypts a USB hard drive or a small USB stick using a strong
    passphrase, via the technologies covered in [Chapter 1](chapter1.xhtml), and then
    copies the dataset to the drive. Then they physically mail the USB drive to you.
    To remain anonymous, they can write your address on the package or envelope but
    leave the return address blank (at least in the US), attach the right amount of
    postage, and drop it in a public mailbox. Using an encrypted messaging app like
    Signal, your source can send you the encryption passphrase. When you receive the
    drive in the mail, you can use the passphrase to unlock the drive and access the
    dataset.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你的信息源通过[第一章](chapter1.xhtml)中介绍的技术，使用强密码加密一个 USB 移动硬盘或小型 USB 闪存驱动器，然后将数据集复制到该硬盘。之后，他们将
    USB 硬盘通过邮寄的方式发送给你。为了保持匿名，他们可以在包裹或信封上写下你的地址，但将回邮地址留空（至少在美国是这样），贴上正确的邮资，并将包裹投入公共邮筒。通过像
    Signal 这样的加密消息应用，你的信息源可以将加密密码发送给你。当你收到包裹后，你可以使用密码解锁硬盘并访问数据集。
- en: If the drive gets intercepted in the mail, the data is encrypted and impossible
    to access without the passphrase. However, the postal service will know exactly
    which public mailbox it was mailed from, and if your source isn’t careful, they
    might leave handwriting, fingerprints, DNA, or other clues to their identity in
    the package.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果硬盘在邮寄过程中被拦截，数据已被加密，且没有密码是无法访问的。然而，邮政服务会知道包裹是从哪个公共邮筒寄出的，如果你的信息源不小心，可能会在包裹上留下手写痕迹、指纹、DNA
    或其他能揭示其身份的线索。
- en: Keep in mind that sending an encrypted drive costs money, since you need to
    buy a hard drive and pay for postage, and the package might take a long time to
    arrive, so this isn’t the best option for time-sensitive data.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，发送加密硬盘是需要花费一定费用的，因为你需要购买硬盘并支付邮费，且包裹可能需要较长时间才能到达，因此这并不是处理时间敏感数据的最佳选择。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Virtual Private Servers</samp>
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">虚拟专用服务器</samp>
- en: A *virtual private server (VPS)* is a virtual computer on the internet, hosted
    by a company like Amazon Web Services (AWS) or DigitalOcean and normally running
    the Linux operating system, that your source can use to share their data. You’ll
    learn the details of how to set up and work with a VPS in [Chapter 4](chapter4.xhtml),
    but here we’ll discuss when they might be appropriate for a given investigation.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '*虚拟专用服务器（VPS）* 是一种在互联网上的虚拟计算机，由像亚马逊 Web 服务（AWS）或 DigitalOcean 这样的公司托管，通常运行
    Linux 操作系统，你的信息源可以使用它来共享数据。你将在[第四章](chapter4.xhtml)中学习如何设置和使用 VPS，但在这里我们将讨论它们在某些调查中的适用情况。'
- en: 'The VPS option has a few downsides: it works only if your source has the necessary
    technical skills, it costs a small amount of money, and it’s easy for your source
    to make mistakes if they’re trying to remain anonymous. On the upside, a VPS allows
    your source to use extremely reliable tools to transfer large amounts of data.
    These tools also support resuming the transfer if it fails midway, and you can
    even use a VPS anonymously over Tor.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: VPS 选项有一些缺点：它仅在你的信息源具备必要的技术技能时有效，它需要支付少量费用，而且如果信息源尝试保持匿名，容易犯错。好的一面是，VPS 允许信息源使用极为可靠的工具来传输大量数据。这些工具还支持在传输中途失败时恢复传输，且你甚至可以通过
    Tor 匿名使用 VPS。
- en: It costs just a few dollars a month to rent a VPS—if you need to use it for
    only a day or two, it’s even cheaper—and you can specify how big its hard disk
    needs to be depending on how much data your source wants to send you. You can
    then enable your source to upload data to the server remotely using a technology
    called *SSH*, which stands for *Secure Shell*. Your source could encrypt the dataset
    before uploading it if they feel it’s sensitive.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 租用一个VPS每月只需几美元——如果你只需要使用它一两天，费用会更低——你可以根据来源需要发送的数据量指定硬盘的大小。然后，你可以启用源使用名为*SSH*的技术远程上传数据到服务器，*SSH*代表*安全外壳*。如果他们认为数据敏感，源可以在上传前对数据集进行加密。
- en: Throughout this chapter, you’ve learned ways individual journalists can receive
    data from their sources. In the next section, I’ll introduce additional tools
    and techniques appropriate for established newsrooms.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了个人记者如何接收来自其消息源的数据。在接下来的部分，我将介绍一些适用于成熟新闻机构的额外工具和技巧。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Whistleblower Submission Systems</samp>
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">举报人提交系统</samp>
- en: As mentioned earlier, when Chelsea Manning tried to contact the *Washington
    Post* and the *New York Times* to leak the War Logs to the public, neither paper
    was receptive or even really prepared to accept leaked datasets. Today that’s
    no longer the case. Dozens of major newsrooms now run their own whistleblower
    submission systems, making it simple to securely and anonymously submit leaked
    datasets or other tips.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前文所提到的，当切尔西·曼宁尝试联系*华盛顿邮报*和*纽约时报*以泄露战争日志时，两家报纸都没有接纳或甚至准备接受泄露的数据集。如今情况已不再如此。现在，许多主要新闻机构都有了自己的举报人提交系统，使得安全、匿名地提交泄露数据集或其他线索变得简单。
- en: 'Go to your favorite news site and see if you can find its tips page, which
    explains to potential sources and whistleblowers how to contact the newsroom securely.
    Here are a few examples:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 访问你最喜欢的新闻网站，看看是否能找到它的提示页面，解释潜在消息源和举报人如何安全地联系新闻机构。以下是一些示例：
- en: 'The Intercept: [*https://<wbr>theintercept<wbr>.com<wbr>/source<wbr>/*](https://theintercept.com/source/)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*拦截者*: [*https://<wbr>theintercept<wbr>.com<wbr>/source<wbr>/*](https://theintercept.com/source/)'
- en: '*Washington Post*: [*https://<wbr>www<wbr>.washingtonpost<wbr>.com<wbr>/anonymous<wbr>-news<wbr>-tips<wbr>/*](https://www.washingtonpost.com/anonymous-news-tips/)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*华盛顿邮报*: [*https://<wbr>www<wbr>.washingtonpost<wbr>.com<wbr>/anonymous<wbr>-news<wbr>-tips<wbr>/*](https://www.washingtonpost.com/anonymous-news-tips/)'
- en: '*New York Times*: [*https://<wbr>www<wbr>.nytimes<wbr>.com<wbr>/tips*](https://www.nytimes.com/tips)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*纽约时报*: [*https://<wbr>www<wbr>.nytimes<wbr>.com<wbr>/tips*](https://www.nytimes.com/tips)'
- en: 'ProPublica: [*https://<wbr>www<wbr>.propublica<wbr>.org<wbr>/tips<wbr>/*](https://www.propublica.org/tips/)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'ProPublica: [*https://<wbr>www<wbr>.propublica<wbr>.org<wbr>/tips<wbr>/*](https://www.propublica.org/tips/)'
- en: 'CNN: [*https://<wbr>www<wbr>.cnn<wbr>.com<wbr>/tips<wbr>/*](https://www.cnn.com/tips/)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CNN: [*https://<wbr>www<wbr>.cnn<wbr>.com<wbr>/tips<wbr>/*](https://www.cnn.com/tips/)'
- en: '*Guardian*: [*https://<wbr>www<wbr>.theguardian<wbr>.com<wbr>/securedrop*](https://www.theguardian.com/securedrop)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*卫报*: [*https://<wbr>www<wbr>.theguardian<wbr>.com<wbr>/securedrop*](https://www.theguardian.com/securedrop)'
- en: '*Globe and Mail*: [*https://<wbr>sec<wbr>.theglobeandmail<wbr>.com<wbr>/securedrop<wbr>/*](https://sec.theglobeandmail.com/securedrop/)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*环球邮报*: [*https://<wbr>sec<wbr>.theglobeandmail<wbr>.com<wbr>/securedrop<wbr>/*](https://sec.theglobeandmail.com/securedrop/)'
- en: The guidelines on these tips pages are all similar, instructing sources to securely
    contact the newsroom by either sending a message to a dedicated Signal phone number,
    physically mailing their documents using the postal service, or reaching out over
    the open source whistleblower submission software called *SecureDrop*.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这些提示页面上的指南大致相同，指导消息源通过以下方式安全地联系新闻机构：发送消息到专用的Signal电话号码，使用邮政服务邮寄文件，或者通过开放源代码的举报人提交软件*SecureDrop*联系。
- en: The late information activist Aaron Swartz, along with journalist Kevin Poulsen,
    developed a platform in 2013 called DeadDrop for sources to securely communicate
    with and send documents to journalists. After Swartz’s death, Poulsen handed the
    project over to the Freedom of the Press Foundation, which renamed it to SecureDrop.
    At the time, I was the chief technology officer for the Freedom of the Press Foundation
    and contributed a significant amount of code to the project.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 已故信息活动家阿伦·斯沃茨与记者凯文·鲍尔森于2013年开发了一个名为DeadDrop的平台，供消息源与记者安全地沟通并发送文件。在斯沃茨去世后，鲍尔森将该项目交给了新闻自由基金会，并将其更名为SecureDrop。当时，我是新闻自由基金会的首席技术官，并为该项目贡献了大量代码。
- en: Like OnionShare, SecureDrop turns computers into anonymous dropboxes (also powered
    by Tor onion services) to enable file sharing. However, it’s designed for professional
    newsrooms. It runs on a dedicated server that’s always online and available for
    sources to use, and it forces more secure and paranoid behavior than OnionShare
    does—for example, it’s designed so that you can open documents sent through SecureDrop
    only in an air-gapped environment.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 像OnionShare一样，SecureDrop将计算机变成匿名的投递箱（同样由Tor洋葱服务提供支持），以实现文件共享。然而，它是为专业新闻机构设计的。它运行在一个始终在线的专用服务器上，供消息来源使用，并且它要求比OnionShare更安全、更偏执的行为——例如，它的设计使得你只能在隔离的环境中打开通过SecureDrop发送的文件。
- en: SecureDrop’s increased security protects sources who are potentially risking
    their lives, but that security comes at a cost. The platform requires a significant
    amount of work to set up and maintain, including the ongoing daily work of checking
    it for new submissions. I spent years checking SecureDrop for The Intercept, and
    I know that it can be frustrating jumping through security hoops when the vast
    majority of submissions are nonsense or could have been sent in an email. But
    the effort is worth it if it protects just one genuine whistleblower.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: SecureDrop增强的安全性保护了那些可能冒着生命危险的消息来源，但这种安全性是有代价的。该平台需要大量的工作来设置和维护，包括每天检查新提交内容的持续工作。我曾花了多年时间为《Intercept》检查SecureDrop，我知道当大多数提交内容是废话或本可以通过电子邮件发送时，穿越安全障碍的过程是令人沮丧的。但如果它能保护一个真正的举报人，那么这份努力是值得的。
- en: If you work with a newsroom or an organization that wants to accept datasets
    from sources or whistleblowers, create a tips page on your website and look into
    SecureDrop. You can learn more about the SecureDrop project at [*https://<wbr>securedrop<wbr>.org*](https://securedrop.org)
    and read detailed documentation at [*https://<wbr>docs<wbr>.securedrop<wbr>.org*](https://docs.securedrop.org).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你与新闻机构或一个希望接受来自消息来源或举报人的数据集的组织合作，可以在你的网站上创建一个提示页面，并了解SecureDrop。你可以在[*https://<wbr>securedrop<wbr>.org*](https://securedrop.org)上了解更多关于SecureDrop项目的信息，并在[*https://<wbr>docs<wbr>.securedrop<wbr>.org*](https://docs.securedrop.org)上阅读详细文档。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Summary</samp>
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">摘要</samp>
- en: In this chapter, you learned about the demise of WikiLeaks and the genesis of
    DDoSecrets, and you downloaded a copy of the BlueLeaks dataset using BitTorrent.
    You’ve seen some common tools for securely communicating with sources, like Signal,
    Tor, and OnionShare. You’ve also learned about a few other techniques for securely
    and anonymously transferring large amounts of data, as well as about tips pages
    and SecureDrop.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了WikiLeaks的衰亡以及DDoSecrets的诞生，并通过BitTorrent下载了BlueLeaks数据集的副本。你看到了几种与消息来源安全沟通的常用工具，如Signal、Tor和OnionShare。你还学习了一些其他技术，用于安全且匿名地传输大量数据，以及关于提示页面和SecureDrop的信息。
- en: The next chapter marks the beginning of [Part II](part2.xhtml), where you’ll
    learn how to use the command line interface, a powerful text-based method of controlling
    your computer. This will prove essential for digging into datasets like BlueLeaks.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章标志着[第二部分](part2.xhtml)的开始，在那里你将学习如何使用命令行界面，这是一种强大的文本控制计算机的方法。这对于深入分析像BlueLeaks这样的数据集至关重要。
