- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: 11 AUTOMATICALLY ACCESSING ONLINE DATA
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11 自动访问在线数据
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: '![](../images/chapter.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/chapter.jpg)'
- en: So far, you’ve imported data into your projects from CSV files. Many online
    datasets allow you to export CSVs, but before you do so, you should look for packages
    to automate your data access. If you can eliminate the manual steps involved in
    fetching data, your analysis and reporting will be more accurate. You’ll also
    be able to efficiently update your report when the data changes.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经从 CSV 文件中将数据导入到项目中。许多在线数据集允许你导出 CSV 文件，但在此之前，你应该查找能够自动化数据访问的包。如果你能消除获取数据过程中手动的步骤，你的分析和报告将更加准确。同时，当数据发生变化时，你也能够高效地更新报告。
- en: R offers many ways to automate the process of accessing online data. In this
    chapter, I’ll discuss two such approaches. First, you will use the googlesheets4
    package to fetch data directly from Google Sheets. You’ll learn how to connect
    your R Markdown project to Google so you can automatically download data when
    a Google Sheet updates. Then, you’ll use the tidycensus package to access data
    from the US Census Bureau. You’ll work with two large census datasets, the Decennial
    Census and the American Community Survey, and practice visualizing them.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: R 提供了多种方法来自动化访问在线数据的过程。在本章中，我将讨论两种方法。首先，你将使用 googlesheets4 包直接从 Google Sheets
    中获取数据。你将学习如何将 R Markdown 项目连接到 Google，这样当 Google Sheet 更新时，你就可以自动下载数据。接下来，你将使用
    tidycensus 包访问美国人口普查局的数据。你将处理两个大型人口普查数据集——十年人口普查和美国社区调查，并进行可视化练习。
- en: Importing Data from Google Sheets with googlesheets4
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 googlesheets4 从 Google Sheets 导入数据
- en: By using the googlesheets4 package to access data directly from Google Sheets,
    you avoid having to manually download data, copy it into your project, and adjust
    your code so it imports that new data every time you want to update a report.
    This package lets you write code that automatically fetches new data directly
    from Google Sheets. Whenever you need to update your report, you can simply run
    your code to refresh the data. In addition, if you work with Google Forms, you
    can pipe your data into Google Sheets, completely automating the workflow from
    data collection to data import.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 googlesheets4 包直接访问 Google Sheets 中的数据，你无需手动下载数据、将其复制到项目中，并调整代码以便每次更新报告时导入新数据。这个包让你编写代码，自动从
    Google Sheets 获取新数据。每当你需要更新报告时，只需运行代码来刷新数据。此外，如果你使用 Google 表单，你可以将数据导入 Google
    Sheets，从而完全自动化从数据收集到数据导入的工作流程。
- en: Using the googlesheets4 package can help you manage complex datasets that update
    frequently. For example, in her role at the Primary Care Research Institute at
    the University of Buffalo, Meghan Harris used it for a research project about
    people affected by opioid use disorder. The data came from a variety of surveys,
    all of which fed into a jumble of Google Sheets. Using googlesheets4, Harris was
    able to collect all of her data in one place and use R to put it to use. Data
    that had once been largely unused because accessing it was so complicated could
    now inform research on opioid use disorder.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 googlesheets4 包可以帮助你管理频繁更新的复杂数据集。例如，在她位于布法罗大学初级护理研究所的工作中，Meghan Harris 使用该包进行了一项关于受阿片类药物使用障碍影响的人的研究项目。数据来自各种调查，所有调查的数据汇总在一堆
    Google Sheets 中。通过使用 googlesheets4，Harris 能够将所有数据集中到一个地方，并使用 R 对其进行处理。曾经由于访问复杂而基本未被使用的数据，现在可以为阿片类药物使用障碍的研究提供信息。
- en: This section demonstrates how the googlesheets4 package works using a fake dataset
    about video game preferences that Harris created to replace her opioid survey
    data (which, for obvious reasons, is confidential).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本节演示了如何使用 googlesheets4 包，通过一个关于视频游戏偏好的假数据集（Harris 用它替代了她的阿片类药物调查数据，后者由于显而易见的原因是保密的）来展示该包的工作原理。
- en: Connecting to Google
  id: totrans-10
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 连接到 Google
- en: To begin, install the googlesheets4 package by running install.packages("googlesheets4").
    Next, connect to your Google account by running the gs4_auth() function in the
    console. If you have more than one Google account, select the account that has
    access to the Google Sheet you want to work with.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，通过运行 install.packages("googlesheets4") 安装 googlesheets4 包。接着，通过在控制台运行 gs4_auth()
    函数连接到你的 Google 账户。如果你有多个 Google 账户，选择一个可以访问你要使用的 Google Sheet 的账户。
- en: Once you do so, a screen should appear. Check the box next to **See, Edit, Create,
    and Delete All Your Google Sheets Spreadsheets**. This will ensure that R can
    access data from your Google Sheets account. Click **Continue**, and you should
    see the message “Authentication complete. Please close this page and return to
    R.” The googlesheets4 package will now save your credentials so that you can use
    them in the future without having to reauthenticate.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成，屏幕应该会显示出来。在 **See, Edit, Create, and Delete All Your Google Sheets Spreadsheets**
    旁边勾选框，这样 R 就可以访问你的 Google Sheets 数据。点击 **Continue**，你应该会看到“认证完成。请关闭此页面并返回 R”的消息。googlesheets4
    包现在会保存你的认证信息，以便将来使用时无需重新认证。
- en: Reading Data from a Sheet
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 从表格中读取数据
- en: Now that you’ve connected R to your Google account, you can import the fake
    data that Harris created about video game preferences (access it at *[https://data.rfortherestofus.com/google-sheet](https://data.rfortherestofus.com/google-sheet)*).
    [Figure 11-1](chapter11.xhtml#fig11-1) shows what it looks like in Google Sheets.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经将 R 连接到你的 Google 账户，可以导入 Harris 创建的关于视频游戏偏好的虚拟数据（可以通过 *[https://data.rfortherestofus.com/google-sheet](https://data.rfortherestofus.com/google-sheet)*
    访问）。[图 11-1](chapter11.xhtml#fig11-1) 显示了它在 Google Sheets 中的样子。
- en: '![](../images/fig11-1.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/fig11-1.jpg)'
- en: 'Figure 11-1: The video game data in Google Sheets'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-1：Google Sheets 中的视频游戏数据
- en: 'The googlesheets4 package has a function called read_sheet() that allows you
    to pull in data directly from a Google Sheet. Import the data by passing the spreadsheet’s
    URL to the function like so:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: googlesheets4 包提供了一个名为 read_sheet() 的函数，可以直接从 Google Sheets 中提取数据。通过将电子表格的 URL
    传递给该函数来导入数据，如下所示：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Take a look at the survey_data_raw object to confirm that the data was imported.
    Using the glimpse() function from the dplyr package makes it easier to read:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 survey_data_raw 对象，确认数据已成功导入。使用 dplyr 包中的 glimpse() 函数可以更轻松地阅读：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The glimpse() function, which creates one output row per variable, shows that
    you’ve successfully imported the data directly from Google Sheets:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: glimpse() 函数为每个变量创建一行输出，显示你已经成功直接从 Google Sheets 导入了数据：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Once you have the data in R, you can use the same workflow you’ve been using
    to create reports with R Markdown.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦将数据导入到 R 中，你可以使用你一直在使用的相同工作流来创建 R Markdown 报告。
- en: Using the Data in R Markdown
  id: totrans-24
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在 R Markdown 中使用数据
- en: 'The following code is taken from an R Markdown report that Harris made to summarize
    the video games data. You can see the YAML, the setup code chunk, a code chunk
    that loads packages, and the code to import data from Google Sheets:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码摘自 Harris 为总结视频游戏数据所编写的 R Markdown 报告。你可以看到 YAML、设置代码块、加载包的代码块以及从 Google
    Sheets 导入数据的代码：
- en: '[PRE3]{r setup, include=FALSE}'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE3]{r setup, include=FALSE}'
- en: knitr::opts_chunk$set(echo = FALSE,
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: knitr::opts_chunk$set(echo = FALSE,
- en: warning = FALSE,
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: warning = FALSE,
- en: message = FALSE)
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: message = FALSE)
- en: '[PRE4]{r}'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE4]{r}'
- en: library(tidyverse)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: library(tidyverse)
- en: library(janitor)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: library(janitor)
- en: library(googlesheets4)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: library(googlesheets4)
- en: library(gt)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: library(gt)
- en: '[PRE5]{r}'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE5]{r}'
- en: Import data from Google Sheets
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Google Sheets 导入数据
- en: ❶ survey_data_raw <- read_sheet("https://docs.google.com/spreadsheets/d/
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: ❶ survey_data_raw <- read_sheet("https://docs.google.com/spreadsheets/d/
- en: 1AR0_RcFBg8wdiY4Cj-k8vRypp_txh27MyZuiRdqScog/edit?usp=sharing")
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 1AR0_RcFBg8wdiY4Cj-k8vRypp_txh27MyZuiRdqScog/edit?usp=sharing")
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This R Markdown document resembles those discussed in previous chapters, except
    for the way you import the data ❶. Because you’re bringing it in directly from
    Google Sheets, there’s no risk of, say, accidentally reading in the wrong CSV.
    Automating this step reduces the risk of error.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 R Markdown 文档与之前章节讨论的文档类似，不同之处在于你导入数据的方式 ❶。由于你是直接从 Google Sheets 导入数据，因此不会有例如错误地读取了错误的
    CSV 文件的风险。自动化这一步骤可以减少错误的风险。
- en: 'The next code chunk cleans the survey_data_raw object, saving the result as
    survey_data_clean:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的代码块清理了 survey_data_raw 对象，并将结果保存为 survey_data_clean：
- en: '[PRE7]{r}'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE7]{r}'
- en: Clean data
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 清理数据
- en: survey_data_clean <- survey_data_raw %>%
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: survey_data_clean <- survey_data_raw %>%
- en: clean_names() %>%
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: clean_names() %>%
- en: mutate(participant_id = as.character(row_number())) %>%
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: mutate(participant_id = as.character(row_number())) %>%
- en: rename(
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: rename(
- en: age = how_old_are_you,
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: age = how_old_are_you,
- en: like_games = do_you_like_to_play_video_games,
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: like_games = do_you_like_to_play_video_games,
- en: game_types = what_kind_of_games_do_you_like,
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: game_types = what_kind_of_games_do_you_like,
- en: favorite_game = whats_your_favorite_game
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: favorite_game = whats_your_favorite_game
- en: ) %>%
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: ) %>%
- en: relocate(participant_id, .before = age) %>%
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: relocate(participant_id, .before = age) %>%
- en: mutate(age = factor(age, levels = c("Under 18", "18-24", "25-34",
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: mutate(age = factor(age, levels = c("Under 18", "18-24", "25-34",
- en: '"35-44", "45-54", "55-64", "Over 65")))'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '"35-44", "45-54", "55-64", "65岁以上")))'
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here, the clean_names() function from the janitor package makes the variable
    names easier to work with. Defining a participant_id variable using the row_number()
    function then adds a consecutively increasing number to each row, and the as.character()
    function makes the number a character. Next, the code changes several variable
    names with the rename() function. The mutate() function then transforms the age
    variable into a data structure known as a *factor*, which ensures that age will
    show up in the right order in your chart. Finally, the relocate() function positions
    participant_id before the age variable.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，来自 janitor 包的 clean_names() 函数使得变量名称更易于处理。使用 row_number() 函数定义 participant_id
    变量，然后为每一行添加一个连续增加的编号，as.character() 函数将该编号转为字符。接下来，代码使用 rename() 函数更改几个变量名。mutate()
    函数将 age 变量转化为一种数据结构，称为 *factor*，这可以确保年龄在图表中按正确的顺序显示。最后，relocate() 函数将 participant_id
    放置在 age 变量之前。
- en: 'Now you can use the glimpse() function again to view your updated survey_data_clean
    data frame, which looks like this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以再次使用 glimpse() 函数查看更新后的 survey_data_clean 数据框，结果如下：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The rest of the report uses this data to highlight various statistics:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 剩下的报告使用这些数据来突出显示各种统计信息：
- en: '[PRE10]{r}'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE10]{r}'
- en: Calculate number of respondents
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算响应者数量
- en: number_of_respondents <- nrow(survey_data_clean) ❶
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: number_of_respondents <- nrow(survey_data_clean) ❶
- en: '[PRE11]{r}'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE11]{r}'
- en: survey_data_clean %>%
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: survey_data_clean %>%
- en: select(participant_id, age) %>%
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: select(participant_id, age) %>%
- en: gt() %>% ❷
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: gt() %>% ❷
- en: cols_label(
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: cols_label(
- en: participant_id = "Participant ID",
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: participant_id = "参与者 ID",
- en: age = "Age"
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: age = "年龄"
- en: ) %>%
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: ) %>%
- en: tab_style(
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: tab_style(
- en: style = cell_text(weight = "bold"),
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: style = cell_text(weight = "bold"),
- en: locations = cells_column_labels()
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: locations = cells_column_labels()
- en: ) %>%
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: ) %>%
- en: cols_align(
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: cols_align(
- en: align = "left",
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: align = "left",
- en: columns = everything()
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: columns = everything()
- en: ) %>%
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: ) %>%
- en: cols_width(
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: cols_width(
- en: participant_id ~ px(200),
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: participant_id ~ px(200),
- en: age ~ px(700)
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: age ~ px(700)
- en: )
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '[PRE12]{r}'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE12]{r}'
- en: survey_data_clean %>%
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: survey_data_clean %>%
- en: count(like_games) %>%
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: count(like_games) %>%
- en: ggplot(aes(
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: ggplot(aes(
- en: x = like_games, ❸
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: x = like_games, ❸
- en: y = n,
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: y = n,
- en: fill = like_games
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: fill = like_games
- en: )) +
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: )) +
- en: geom_col() +
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: geom_col() +
- en: scale_fill_manual(values = c(
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: scale_fill_manual(values = c(
- en: '"No" = "#6cabdd",'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"No" = "#6cabdd",'
- en: '"Yes" = "#ff7400"'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"Yes" = "#ff7400"'
- en: )) +
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: )) +
- en: labs(
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: labs(
- en: title = "How Many People Like Video Games?",
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: title = "有多少人喜欢电子游戏？",
- en: x = NULL,
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: x = NULL,
- en: y = "Number of Participants"
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: y = "参与者数量"
- en: ) +
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: ) +
- en: theme_minimal(base_size = 16) +
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: theme_minimal(base_size = 16) +
- en: theme(
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: theme(
- en: legend.position = "none",
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: legend.position = "none",
- en: panel.grid.minor = element_blank(),
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: panel.grid.minor = element_blank(),
- en: panel.grid.major.x = element_blank(),
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: panel.grid.major.x = element_blank(),
- en: axis.title.y = element_blank(),
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: axis.title.y = element_blank(),
- en: plot.title = element_text(
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: plot.title = element_text(
- en: face = "bold",
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: face = "bold",
- en: hjust = 0.5
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: hjust = 0.5
- en: )
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: )
- en: )
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '[PRE13]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: These sections calculate the number of survey respondents ❶, then put this value
    in the text using inline R code; create a table that breaks down the respondents
    by age group ❷; and generate a graph displaying how many respondents like video
    games ❸. [Figure 11-2](chapter11.xhtml#fig11-2) shows the resulting report.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这些部分计算了调查响应者的数量 ❶，然后将该值放入文本中，使用内联 R 代码；创建一个表格，按年龄组划分响应者 ❷；并生成一个图表，显示有多少响应者喜欢电子游戏
    ❸。 [图 11-2](chapter11.xhtml#fig11-2) 显示了生成的报告。
- en: '![](../images/fig11-2.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/fig11-2.jpg)'
- en: 'Figure 11-2: The rendered video game report'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-2：渲染后的电子游戏报告
- en: You can rerun the code at any point to fetch updated data. The survey had five
    responses today, but if you run it again tomorrow and it has additional responses,
    they will be included in the import. If you used Google Forms to run your survey
    and saved the results to a Google Sheet, you could produce this up-to-date report
    simply by clicking the Knit button in RStudio.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在任何时候重新运行代码以获取更新的数据。今天调查有五个回答，但如果明天再运行，新增的回答也会被包含在导入数据中。如果你使用 Google 表单进行调查并将结果保存到
    Google 表格中，只需点击 RStudio 中的 Knit 按钮，你就可以生成这个最新的报告。
- en: Importing Only Certain Columns
  id: totrans-118
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 仅导入特定列
- en: In the previous sections, you read the data of the entire Google Sheet, but
    you also have the option to import only a section of a sheet. For example, the
    survey data includes a timestamp column. This variable is added automatically
    whenever someone submits a Google Form that pipes data into a Google Sheet, but
    you don’t use it in your analysis, so you could get rid of it.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，你读取了整个 Google 表格的数据，但你也可以选择仅导入表格的某一部分。例如，调查数据包含一个时间戳列。每当有人提交通过 Google
    表单将数据导入 Google 表格时，这个变量会自动添加，但你在分析中不使用它，因此可以将其去掉。
- en: 'To do so, use the range argument in the read_sheet() function when importing
    the data like so:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，可以在导入数据时使用 read_sheet() 函数中的 range 参数，像这样：
- en: '[PRE14]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This argument lets you specify a range of data to import. It uses the same
    syntax you may have used to select columns in Google Sheets. In this example,
    range = "Sheet1!B:E" imports columns B through E (but not A, which contains the
    timestamp). Adding glimpse() and then running this code produces output without
    the timestamp variable:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这个参数让你指定一个数据范围进行导入。它使用与你可能在 Google 表格中选择列时相同的语法。在这个示例中，range = "Sheet1!B:E"
    导入 B 到 E 列（但不包括 A 列，因为它包含时间戳）。添加 glimpse() 然后运行这段代码会输出没有时间戳变量的结果：
- en: '[PRE15]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: There are a number of other useful functions in the googlesheets4 package. For
    example, if you ever need to write your output back to a Google Sheet, the write_sheet()
    function is there to help. To explore other functions in the package, check out
    its documentation website at *[https://googlesheets4.tidyverse.org/index.xhtml](https://googlesheets4.tidyverse.org/index.xhtml)*.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在 googlesheets4 包中，还有许多其他有用的功能。例如，如果你需要将输出写回 Google 表格，write_sheet() 函数可以帮助你。要探索包中的其他函数，可以访问其文档网站
    *[https://googlesheets4.tidyverse.org/index.xhtml](https://googlesheets4.tidyverse.org/index.xhtml)*。
- en: Now we’ll turn our attention to another R package that allows you to automatically
    fetch data, this time from the US Census Bureau.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将关注另一个 R 包，它可以让你自动从美国人口普查局获取数据。
- en: Accessing Census Data with tidycensus
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 tidycensus 访问人口普查数据
- en: If you’ve ever worked with data from the US Census Bureau, you know what a hassle
    it can be. Usually, the process involves visiting the Census Bureau website, searching
    for the data you need, downloading it, and then analyzing it in your tool of choice.
    This pointing and clicking gets very tedious after a while.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾经处理过来自美国人口普查局的数据，你就知道这有多麻烦。通常，这个过程包括访问人口普查局的网站，搜索所需的数据，下载它，然后在你选择的工具中进行分析。经过一段时间，这种点击操作会变得非常繁琐。
- en: Kyle Walker, a geographer at Texas Christian University, and Matt Herman (creator
    of the Westchester COVID-19 website discussed in [Chapter 9](chapter9.xhtml))
    developed the tidycensus package to automate the process of importing Census Bureau
    data into R. With tidycensus, you can write just a few lines of code to get data
    about, say, the median income in all counties in the United States.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 德克萨斯基督教大学的地理学家 Kyle Walker 和 Matt Herman（[第9章](chapter9.xhtml)中讨论的 Westchester
    COVID-19 网站的创建者）开发了 tidycensus 包，以自动化将人口普查局数据导入 R 的过程。使用 tidycensus，你只需要写几行代码，就能获取比如所有美国县的中位数收入数据。
- en: 'In this section, I’ll show you how the tidycensus package works using examples
    from two datasets to which it provides access: the Decennial Census, administered
    every 10 years, and the annual American Community Survey. I’ll also show you how
    to use the data from these two sources to perform additional analysis and make
    maps by accessing geospatial and demographic data simultaneously.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我将通过使用两个数据集的示例来展示 tidycensus 包的工作原理，这两个数据集是该包提供访问权限的：十年一次的人口普查数据和年度美国社区调查数据。我还将向你展示如何利用这两个数据源的数据进行额外分析，并通过同时访问地理空间和人口统计数据来制作地图。
- en: Connecting to the Census Bureau with an API Key
  id: totrans-130
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用 API 密钥连接到人口普查局
- en: Begin by installing tidycensus using install.packages("tidycensus"). To use
    tidycensus, you must get an application programming interface (API) key from the
    Census Bureau. *API keys* are like passwords that online services use to determine
    whether you’re authorized to access data.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 首先通过 install.packages("tidycensus") 安装 tidycensus。要使用 tidycensus，你必须从人口普查局获取一个应用程序编程接口（API）密钥。*API
    密钥*就像密码，在线服务通过它来判断你是否有权限访问数据。
- en: 'To obtain this key, which is free, go to *[https://api.census.gov/data/key_signup.xhtml](https://api.census.gov/data/key_signup.xhtml)*
    and enter your details. Once you receive the key by email, you need to put it
    in a place where tidycensus can find it. The census_api_key() function does this
    for you, so after loading the tidycensus package, run the function as follows,
    replacing 123456789 with your actual API key:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得这个免费的密钥，请访问 *[https://api.census.gov/data/key_signup.xhtml](https://api.census.gov/data/key_signup.xhtml)*
    并填写你的详细信息。一旦你通过电子邮件收到密钥，你需要将它放在 tidycensus 可以找到的位置。census_api_key() 函数会为你完成这个操作，因此在加载
    tidycensus 包之后，运行以下函数，并用你的实际 API 密钥替换 123456789：
- en: '[PRE16]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The install = TRUE argument saves your API key in your *.Renviron* file, which
    is designed for storing confidential information. The package will look for your
    API key there in the future so that you don’t have to reenter it every time you
    use the package.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: install = TRUE参数将你的API密钥保存在*.Renviron*文件中，该文件用于存储机密信息。以后包会在此文件中查找API密钥，这样你就不必每次使用包时都重新输入它。
- en: 'Now you can use tidycensus to access Census Bureau datasets. While the Decennial
    Census and the American Community Survey are the most common, [Chapter 2](chapter2.xhtml)
    of Kyle Walker’s book *Analyzing US Census Data: Methods, Maps, and Models in
    R* discusses others you can access.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以使用tidycensus访问人口普查局的数据集。虽然十年一度人口普查和美国社区调查是最常用的，[Kyle Walker的《分析美国人口普查数据：R中的方法、地图和模型》第二章](chapter2.xhtml)讨论了你可以访问的其他数据集。
- en: Working with Decennial Census Data
  id: totrans-136
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用十年一度的人口普查数据
- en: 'The tidycensus packages includes several functions dedicated to specific Census
    Bureau datasets, such as get_decennial() for Decennial Census data. To access
    data from the 2020 Decennial Census about the Asian population in each state,
    use the get_decennial() function with three arguments as follows:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: tidycensus包包含多个专门用于特定人口普查局数据集的函数，例如get_decennial()用于十年一度人口普查数据。要访问2020年关于每个州亚洲人口的数据，可以使用带有三个参数的get_decennial()函数，如下所示：
- en: '[PRE17]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Setting the geography argument to "state" tells get_decennial() to access data
    at the state level. In addition to the 50 states, it will return data for the
    District of Columbia and Puerto Rico. The variables argument specifies the variable
    or variables you want to access. Here, P1_006N is the variable name for the total
    Asian population. I’ll discuss how to identify other variables you may want to
    use in the next section. Finally, year specifies the year for which you want to
    access data—in this case, 2020.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 将地理参数设置为“state”会告诉get_decennial()访问州级别的数据。除了50个州，它还会返回哥伦比亚特区和波多黎各的数据。变量参数指定你想要访问的变量。在这里，P1_006N是亚洲总人口的变量名。我将在下一节中讨论如何识别你可能需要使用的其他变量。最后，year指定你想要访问数据的年份——在本例中是2020年。
- en: 'Running this code returns the following:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此代码将返回以下内容：
- en: '[PRE18]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The resulting data frame has four variables. GEOID is the geographic identifier
    assigned to the state by the Census Bureau. Each state has a geographic identifier,
    as do all counties, census tracts, and other geographies. NAME is the name of
    each state, and variable is the name of the variable you passed to the get_decennial()
    function. Finally, value is the numeric value for the state and variable in each
    row. In this case, it represents the total Asian population in each state.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 结果数据框包含四个变量。GEOID是人口普查局分配给各州的地理标识符。每个州都有一个地理标识符，所有县、普查区和其他地理区域也都有各自的标识符。NAME是每个州的名称，variable是你传递给get_decennial()函数的变量名称。最后，value是每一行中该州和变量的数值。在这种情况下，它表示每个州的亚洲总人口。
- en: Identifying Census Variable Values
  id: totrans-143
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 识别人口普查变量值
- en: You’ve just seen how to retrieve the total number of Asian residents of each
    state, but say you want to calculate that number instead as a percentage of all
    the state’s residents. To do that, first you need to retrieve the variable for
    the state’s total population.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚看到如何检索每个州的亚洲居民总数，但假设你想将这个数字计算为所有州居民的百分比。为此，首先你需要检索该州的总人口变量。
- en: 'The tidycensus package has a function called load_variables() that shows all
    of the variables from a Decennial Census. Run it with the year argument set to
    2020 and dataset set to pl as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: tidycensus包有一个名为load_variables()的函数，可以显示所有来自十年一度人口普查的变量。将year参数设置为2020，dataset设置为pl，运行如下：
- en: '[PRE19]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Running this code pulls data from so-called redistricting summary data files
    (which Public Law 94-171 requires the Census Bureau to produce every 10 years)
    and returns the name, label (description), and concept (category) of all available
    variables:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此代码将从所谓的重划选区汇总数据文件中提取数据（根据公共法案94-171，人口普查局每10年必须制作这些文件），并返回所有可用变量的名称、标签（描述）和概念（类别）：
- en: '[PRE20]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: By looking at this list, you can see that the variable P1_001N returns the total
    population.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看此列表，你可以看到变量P1_001N返回的是总人口。
- en: Using Multiple Census Variables
  id: totrans-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用多个人口普查变量
- en: 'Now that you know which variables you need, you can use the get_decennial()
    function again with two variables at once:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道了需要哪些变量，可以再次使用get_decennial()函数，一次获取两个变量：
- en: '[PRE21]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Adding arrange(NAME) after get_decennial() sorts the results by state name,
    allowing you to easily see that the output includes both variables for each state:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在`get_decennial()`后添加`arrange(NAME)`会按州名对结果进行排序，让你能轻松看到输出中包含每个州的这两个变量：
- en: '[PRE22]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'When you’re working with multiple census variables like this, you might have
    trouble remembering what names like P1_001N and P1_006N mean. Fortunately, you
    can adjust the code in the call to get_decennial() to give these variables more
    meaningful names using the following syntax:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 当你处理多个类似的人口普查变量时，可能会难以记住像P1_001N和P1_006N这样的名称的含义。幸运的是，你可以调整`get_decennial()`调用中的代码，通过以下语法为这些变量赋予更有意义的名称：
- en: '[PRE23]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Within the variables argument, this code specifies the new names for the variables,
    followed by the equal sign and the original variable names. The c() function allows
    you to rename multiple variables at one time.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在变量参数中，这段代码指定了变量的新名称，后面跟着等号和原始变量名称。`c()`函数允许你一次重命名多个变量。
- en: 'Now it’s much easier to see which variables you’re working with:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在更容易看到你正在处理的变量了：
- en: '[PRE24]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Instead of P1_001N and P1_006N, the variables appear as total_population and
    asian_population. Much better!
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 代替P1_001N和P1_006N，变量显示为total_population和asian_population。好多了！
- en: Analyzing Census Data
  id: totrans-161
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 分析人口普查数据
- en: 'Now you have the data you need to calculate the Asian population in each state
    as a percentage of the total. There are just a few functions to add to the code
    from the previous section:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经拥有了计算每个州亚洲人口占总人口百分比所需的数据。只需要在上一部分的代码中添加一些函数：
- en: '[PRE25]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The group_by(NAME) function creates one group for each state because you want
    to calculate the Asian population percentage in each state (not for the entire
    United States). Then mutate() calculates each percentage, taking the value in
    each row and dividing it by the total_population and asian_population rows for
    each state. The ungroup() function removes the state-level grouping, and filter()
    shows only the Asian population percentage.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`group_by(NAME)`函数为每个州创建一个分组，因为你想要计算每个州的亚洲人口百分比（而不是整个美国）。然后，`mutate()`函数计算每个百分比，将每行的值除以每个州的`total_population`和`asian_population`行。`ungroup()`函数移除州级分组，`filter()`函数仅显示亚洲人口百分比。'
- en: 'When you run this code, you should see both the total Asian population and
    the Asian population as a percentage of the total population in each state:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行这段代码时，你应该能看到每个州的总亚洲人口和亚洲人口占总人口的百分比：
- en: '[PRE26]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This is a reasonable way to calculate the Asian population as a percentage of
    the total population in each state—but it’s not the only way.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种合理的计算每个州亚洲人口占总人口百分比的方法——但并不是唯一的方法。
- en: Using a Summary Variable
  id: totrans-168
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用汇总变量
- en: 'Kyle Walker knew that calculating summaries like you’ve just done would be
    a common use case for tidycensus. To calculate, say, the Asian population as a
    percentage of the whole, you need to have a numerator (the Asian population) and
    denominator (the total population). So, to simplify things, Walker included the
    summary_var argument, which can be used within get_decennial() to import the total
    population as a separate variable. Instead of putting P1_001N (total population)
    in the variables argument and renaming it, you can assign it to the summary_var
    argument as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Kyle Walker知道，像你刚才做的那样计算汇总数据将是tidycensus的常见用例。比如，要计算亚洲人口占总人口的百分比，你需要有一个分子（亚洲人口）和一个分母（总人口）。为了简化操作，Walker在`get_decennial()`中加入了`summary_var`参数，可以用来导入总人口作为单独的变量。你可以像下面这样将P1_001N（总人口）分配给`summary_var`参数，而不是在变量参数中输入并重命名它：
- en: '[PRE27]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'This returns a nearly identical data frame to what you just got, except that
    the total population is now a separate variable, rather than additional rows for
    each state:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回一个几乎相同的数据框，只不过总人口现在是一个单独的变量，而不是每个州的额外行：
- en: '[PRE28]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'With the data in this new format, now you can calculate the Asian population
    as a percentage of the whole by dividing the value variable by the summary_value
    variable. Then you drop the summary_value variable because you no longer need
    it after doing this calculation:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种新格式的数据后，现在你可以通过将值变量除以summary_value变量来计算亚洲人口占总人口的百分比。然后，你可以删除summary_value变量，因为在完成此计算后你不再需要它：
- en: '[PRE29]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The resulting output is identical to the output of the previous section:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 结果输出与前一部分的输出完全相同：
- en: '[PRE30]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: How you choose to calculate summary statistics is up to you; tidycensus makes
    it easy to do either way.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 你选择如何计算汇总统计数据取决于你自己；tidycensus让你无论哪种方式都能轻松实现。
- en: Visualizing American Community Survey Data
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可视化美国社区调查数据
- en: 'Once you’ve accessed data using the tidycensus package, you can do whatever
    you want with it. In this section, you’ll practice analyzing and visualizing survey
    data using the American Community Survey. This survey, which is conducted every
    year, differs from the Decennial Census in two major ways: it is given to a sample
    of people rather than the entire population, and it includes a wider range of
    questions.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你使用tidycensus包访问了数据，你可以随意操作它。在这一部分，你将练习使用美国社区调查数据进行分析和可视化。该调查每年进行一次，与十年一次的人口普查相比，主要有两个区别：它是发放给一部分人群，而不是全体人口；并且它包含了更广泛的问题。
- en: 'Despite these differences, you can access data from the American Community
    Survey nearly identically to how you access Decennial Census data. Instead of
    get_decennial(), you use the get_acs() function, but the arguments you pass to
    it are the same:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有这些差异，你可以几乎以与访问十年一次人口普查数据相同的方式访问美国社区调查数据。你使用get_acs()函数代替get_decennial()，但传递给它的参数是相同的：
- en: '[PRE31]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'This code uses the B01002_001 variable to get median age data from 2020 for
    each state. Here’s what the output looks like:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码使用B01002_001变量从2020年获取每个州的中位年龄数据。以下是输出的样子：
- en: '[PRE32]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: You should notice two differences in the output from get_acs() compared to that
    from get_decennial(). First, instead of the value column, get_acs() produces a
    column called estimate. Second, it adds a column called moe, for the margin of
    error. These changes are the result of American Community Survey being given only
    to a sample of the population, since extrapolating values from that sample to
    produce an estimate for the population as a whole introduces a margin of error.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该注意到，get_acs()的输出与get_decennial()的输出有两个不同之处。首先，get_acs()生成了一个名为estimate的列，而不是value列。其次，它增加了一个名为moe的列，用于表示误差范围。这些变化是由于美国社区调查只发放给人群的一部分，因而从样本中推算值来生成总体估算会带来误差范围。
- en: In the state-level data, the margins of error are relatively low, but in smaller
    geographies, they tend to be higher. Cases in which your margins of error are
    high relative to your estimates indicate a greater level of uncertainty about
    how well the data represents the population as a whole, so you should interpret
    such results with caution.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在州级数据中，误差范围相对较小，但在较小的地理区域中，误差通常较大。当你的误差范围相对于估算值较大时，这表示数据对整体人口的代表性存在较大不确定性，因此你应谨慎解释此类结果。
- en: Making Charts
  id: totrans-186
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 制作图表
- en: 'To pipe your data on median age into ggplot to create a bar chart, add the
    following lines:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 要将中位年龄数据传递给ggplot并创建柱状图，请添加以下代码：
- en: '[PRE33]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: After importing the data with the get_acs() function, the ggplot() function
    pipes it directly into ggplot. States (which use the variable NAME) will go on
    the y-axis, and median age (estimate) will go on the x-axis. A simple geom_col()
    creates the bar chart shown in [Figure 11-3](chapter11.xhtml#fig11-3).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 使用get_acs()函数导入数据后，ggplot()函数会将数据直接传递给ggplot。州（使用变量NAME）将出现在y轴上，中位年龄（估算值）将出现在x轴上。一个简单的geom_col()创建了[图11-3](chapter11.xhtml#fig11-3)所示的柱状图。
- en: '![](../images/fig11-3.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/fig11-3.jpg)'
- en: 'Figure 11-3: A bar chart generated using data acquired with the get_asc() function'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-3：使用get_acs()函数获取数据生成的柱状图
- en: This chart is nothing special, but the fact that it takes just six lines of
    code to create most definitely is!
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图表没什么特别的，但它仅用六行代码就能创建，这一点无疑是非常特别的！
- en: Making Population Maps with the geometry Argument
  id: totrans-193
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用几何参数制作人口地图
- en: 'In addition to co-creating tidycensus, Kyle Walker created the tigris package
    for working with geospatial data. As a result, these packages are tightly integrated.
    Within the get_acs() function, you can set the geometry argument to TRUE to receive
    both demographic data from the Census Bureau and geospatial data from tigris:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 除了共同创建tidycensus外，Kyle Walker还创建了tigris包，用于处理地理空间数据。因此，这些包紧密集成。在get_acs()函数中，你可以将geometry参数设置为TRUE，来同时获取来自人口普查局的人口统计数据和来自tigris的地理空间数据：
- en: '[PRE34]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'In the resulting data, you can see that it has the metadata and geometry column
    of the simple features objects that you saw in [Chapter 4](chapter4.xhtml):'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在结果数据中，你可以看到它包含了你在[第4章](chapter4.xhtml)中看到的简单特征对象的元数据和几何列：
- en: '[PRE35]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The geometry type is MULTIPOLYGON, which you learned about in [Chapter 4](chapter4.xhtml).
    To pipe this data into ggplot to make a map, add the following code:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 几何类型是MULTIPOLYGON，你在[第4章](chapter4.xhtml)中学习过。要将这些数据传递到ggplot以制作地图，请添加以下代码：
- en: '[PRE36]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: After importing the data with get_acs() and piping it into the ggplot() function,
    this code sets the estimate variable to use for the fill aesthetic property; that
    is, the fill color of each state will vary depending on the median age of its
    residents. Then geom_sf() draws the map, and the scale_fill_viridis_c() function
    gives it a colorblind-friendly palette.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用get_acs()导入数据并将其传递到ggplot()函数后，这段代码设置了用于填充美学属性的estimate变量；也就是说，每个州的填充颜色将根据其居民的中位年龄有所变化。然后，geom_sf()绘制地图，scale_fill_viridis_c()函数则为地图提供了色盲友好的调色板。
- en: The resulting map, shown in [Figure 11-4](chapter11.xhtml#fig11-4), is less
    than ideal because the Aleutian Islands in Alaska cross the 180-degree line of
    longitude, or the International Date Line. As a result, most of Alaska appears
    on one side of the map and a small part appears on the other side. What’s more,
    both Hawaii and Puerto Rico are hard to see.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 结果地图，如[图11-4](chapter11.xhtml#fig11-4)所示，效果不尽如人意，因为阿拉斯加的阿留申群岛跨越了180度经线，也就是国际日期变更线。因此，大部分阿拉斯加位于地图的一侧，只有一小部分出现在另一侧。更糟糕的是，夏威夷和波多黎各很难看清。
- en: '![](../images/fig11-4.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/fig11-4.jpg)'
- en: 'Figure 11-4: A hard-to-read map showing median age by state'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-4：显示各州中位年龄的难以阅读的地图
- en: 'To fix these problems, load the tigris package, then use the shift_geometry()
    function to move Alaska, Hawaii, and Puerto Rico into places where they’ll be
    more easily visible:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这些问题，加载tigris包，然后使用shift_geometry()函数将阿拉斯加、夏威夷和波多黎各移动到更容易看见的位置：
- en: '[PRE37]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Setting the preserve_area argument to FALSE shrinks the giant state of Alaska
    and makes Hawaii and Puerto Rico larger. Although the state sizes in the map won’t
    be precise, the map will be easier to read, as you can see in [Figure 11-5](chapter11.xhtml#fig11-5).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 将preserve_area参数设置为FALSE可以缩小阿拉斯加州的面积，使夏威夷和波多黎各变得更大。尽管地图中州的大小不再精确，但地图会更易于阅读，正如[图11-5](chapter11.xhtml#fig11-5)所示。
- en: '![](../images/fig11-5.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/fig11-5.jpg)'
- en: 'Figure 11-5: An easier-to-read map tweaked using tigris functions'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-5：使用tigris函数调整后的更易读地图
- en: 'Now try making the same map for all 3,000 counties by changing the geography
    argument to "county". Other geographies include region, tract (for census tracts),
    place (for census-designated places, more commonly known as towns and cities),
    and congressional district. There are also many more arguments in both the get_decennial()
    and get_acs() functions; I’ve shown you only a few of the most common. If you
    want to learn more, Walker’s book *Analyzing US Census Data: Methods, Maps, and
    Models in R* is a great resource.'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，尝试将地理参数更改为“county”，制作涵盖所有3,000个县的相同地图。其他地理选项包括region、tract（人口普查区）、place（人口普查指定地点，更常见的是指城镇和城市）以及国会选区。在get_decennial()和get_acs()函数中，还有许多其他参数；我只展示了一些最常见的。如果你想了解更多，Walker的书籍*《分析美国人口普查数据：R中的方法、地图与模型》*是一本极好的资源。
- en: Summary
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter explored two packages that use APIs to access data directly from
    its source. The googlesheets4 package lets you import data from a Google Sheet.
    It’s particularly useful when you’re working with survey data, as it makes it
    easy to update your reports when new results come in. If you don’t work with Google
    Sheets, you could use similar packages to fetch data from Excel365 (Microsoft365R),
    Qualtrics (qualtRics), Survey Monkey (svmkrR), and other sources.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了两个使用API直接从数据源获取数据的包。googlesheets4包允许你从Google表格导入数据。当你处理调查数据时，它尤其有用，因为当新的结果到达时，可以轻松更新报告。如果你不使用Google表格，你还可以使用类似的包从Excel365（Microsoft365R）、Qualtrics（qualtRics）、Survey
    Monkey（svmkrR）等其他来源获取数据。
- en: If you work with US Census Bureau data, the tidycensus package is a huge time-saver.
    Rather than having to manually download data from the Census Bureau website, you
    can use tidycensus to write R code that accesses the data automatically, making
    it ready for analysis and reporting. Because of the package’s integration with
    tigris, you can also easily map this demographic data.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你处理美国人口普查局数据，tidycensus包将大大节省时间。你无需手动从人口普查局网站下载数据，可以通过tidycensus编写R代码自动访问数据，准备好进行分析和报告。由于该包与tigris的集成，你也可以轻松绘制这些人口统计数据的地图。
- en: If you’re looking for census data from other countries, there are also R packages
    to bring data from Canada (cancensus), Kenya (rKenyaCensus), Mexico (mxmaps and
    inegiR), Europe (eurostat), and other regions. Before hitting that download button
    in your data collection tool to get a CSV file, it’s worth looking for a package
    that can import that data directly into R.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在寻找其他国家的人口普查数据，也有一些R包可以获取来自加拿大（cancensus）、肯尼亚（rKenyaCensus）、墨西哥（mxmaps 和
    inegiR）、欧洲（eurostat）以及其他地区的数据。在点击数据收集工具中的下载按钮以获取CSV文件之前，值得寻找一个可以直接将数据导入R的包。
- en: Additional Resources
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他资源
- en: Isabella Velásquez and Curtis Kephart, “Automated Survey Reporting with googlesheets4,
    pins, and R Markdown,” Posit, June 15, 2022, *[https://posit.co/blog/automated-survey-reporting/](https://posit.co/blog/automated-survey-reporting/)*.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Isabella Velásquez 和 Curtis Kephart, “使用 googlesheets4、pins 和 R Markdown 自动化调查报告，”Posit，2022年6月15日，*[https://posit.co/blog/automated-survey-reporting/](https://posit.co/blog/automated-survey-reporting/)*。
- en: 'Kyle Walker, *Analyzing US Census Data: Methods, Maps, and Models in R* (Boca
    Raton, FL: CRC Press, 2023), *[https://walker-data.com/census-r/](https://walker-data.com/census-r/)*.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kyle Walker, *《分析美国人口普查数据：R中的方法、地图与模型》*（佛罗里达州博卡拉顿：CRC出版社，2023年），*[https://walker-data.com/census-r/](https://walker-data.com/census-r/)*。
