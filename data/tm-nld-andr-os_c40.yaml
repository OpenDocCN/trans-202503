- en: '40'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '40'
- en: The Run Up to 1.0
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 1.0版本的准备
- en: '![g40001](image_fi/502680c40/g40001.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![g40001](image_fi/502680c40/g40001.png)'
- en: Nearly a year passed between the initial launch of the SDK in November of 2007
    and the release of 1.0, which was launched with the G1 phone nearly a year later.
    So what was happening during that whole time?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从2007年11月SDK的初始发布到1.0版本发布之间，几乎过去了一年，1.0版本与G1手机几乎在一年后发布。那么在这段时间里究竟发生了什么呢？
- en: First of all, it wasn’t actually as long as you’d think.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，实际上这段时间并没有你想象的那么长。
- en: Some software products can ship quickly, depending on the situation. If you
    are simply updating some code on a web page, you can release it immediately. And
    if there’s a bug in that release, you can ship again as soon as you’ve fixed it.
    But if you are shipping a product that is not as easy to distribute to your users
    as simply updating a website, you’ll want to do some amount of testing and stabilization
    before releasing it. You don’t want to make your users go through some arduous
    update just to discover a horrible bug and make them update again. Now you’re
    looking at some number of weeks^([1](#c40-footnote-1)) at least. Shipping hardware,
    like the G1, in addition to the software it depends on, involves even more time.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 根据情况，有些软件产品可以很快发布。如果你只是更新网页上的一些代码，你可以立即发布。如果该版本中有一个bug，修复后可以立刻重新发布。但如果你发布的是一种不像简单更新网站那样容易分发给用户的产品，你就需要进行一定程度的测试和稳定性处理才能发布。你不想让用户经历一次繁琐的更新过程，却发现有一个严重的bug，并且还需要再次更新。这样至少要耗费几周时间^([1](#c40-footnote-1))。而像G1这样的硬件发布，除了其所依赖的软件，还涉及更多的时间。
- en: 'The Android SDK was just software, and the team could have kept updating it
    with bug fixes (as they did continuously during the beta period prior to 1.0)
    until they declared it “done.” But that release needed to work well on the G1,
    which involved different constraints entirely. Phones go through rigorous compliance
    testing by carriers, which meant that the team needed to be done far sooner than
    they would have for just another release of the SDK. Romain talked about it: “Pencils
    down was a month before the launch in stores. But before that was like three months
    of carrier testing.” So for G1 availability in mid-October, the team had to be
    effectively finished with platform development (apart from fixing critical bugs
    that came up during this final testing period) in June of 2008—only seven months
    after the initial SDK launch.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK仅仅是软件，团队本可以在发布前继续更新，修复bug（正如他们在1.0版本发布前的Beta阶段所做的那样），直到宣布“完成”。但这个版本需要在G1手机上运行良好，这涉及到完全不同的约束。手机需要经过运营商严格的合规性测试，这意味着团队必须比单纯发布一个新的SDK版本提前完成工作。Romain谈到过：“定稿时间是在商店发售前一个月。但在此之前是大约三个月的运营商测试。”因此，为了确保G1能够在10月中旬上市，团队必须在2008年6月（即SDK初始发布后仅七个月）基本完成平台开发工作（除了修复最终测试阶段出现的关键bug）。
- en: Many things needed to be fixed during those seven months, including smoothing
    out the rough edges of the public API, critical performance work, and bugs, bugs,
    bugs.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在这七个月里，许多问题需要解决，包括完善公共API的细节、进行关键性能优化以及修复各种bug。
- en: The Cost of Compatibility
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 兼容性的成本
- en: The public APIs needed to be polished before the release. The SDK was beta;
    developers were encouraged to write apps for it, but the APIs (method names, classes,
    and so on) were not final. Once 1.0 was launched, however, that was it; those
    APIs were set in stone and couldn’t change. Changing APIs between releases meant
    that applications using those APIs would mysteriously crash on user devices.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 发布前，公共API需要进行打磨。SDK处于Beta阶段，鼓励开发者为其编写应用，但API（方法名、类名等）并非最终版。然而，一旦1.0发布，API就固定下来了，无法更改。在发布版本之间更改API意味着使用这些API的应用可能会在用户设备上神秘崩溃。
- en: This compatibility dynamic is especially true on a platform like Android, where
    there is no way to force developers to update their apps, or to get users to install
    those updates. Suppose a developer wrote and uploaded an app to the Play Store
    10 years ago. Somewhere, someone is using that application happily. Then that
    user upgrades their phone to a newer release. If that newer release changes any
    of the APIs that that old application uses, it might not work correctly, or it
    might even crash, which is obviously not something that Google wants. So the old
    APIs stick around and are supported for way . . . too . . . long.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这种兼容性动态在像 Android 这样的平台上尤其明显，因为开发者无法强制要求他们更新应用程序，也无法强制用户安装这些更新。假设一位开发者在 10 年前编写并上传了一款应用到
    Play Store。某个地方，有人正在愉快地使用这个应用。然后该用户将手机升级到更新的版本。如果该更新版本改变了那个旧应用所使用的 API，它可能无法正常工作，甚至可能崩溃，显然这不是
    Google 想要的。所以，旧的 API 会一直保留并得到支持……太久……太久了。
- en: The trick, then, for developers on the Android team, is to be very sure about
    any new API, because the team will have to live with it forever. Of course, there
    will always be mistakes or things you would have done differently in hindsight.^([2](#c40-footnote-2))
    Ficus Kirkpatrick observed, “You can try to design something perfect. Then while
    you’re busy polishing it in the lab, somebody’s going to come out with something
    and make you irrelevant.”
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Android 团队开发者的诀窍是，对任何新的 API 都要非常谨慎，因为这个团队必须永远使用它。当然，总会有错误，或者事后你会想“如果当时做得不一样会怎样”。^([2](#c40-footnote-2))
    菲库斯·柯克帕特里克（Ficus Kirkpatrick）观察到：“你可以尝试设计完美的东西。然而，当你在实验室里忙着打磨它时，总会有人出来做出某些东西，让你显得不再重要。”
- en: The team worked to make the APIs something that they were happy with and willing
    to live with for, basically, ever. Some of the pre-1.0 changes, like method or
    class names, were minor. But some APIs were completely removed, because they just
    weren’t something that the platform wanted to support for all eternity.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 团队致力于让 API 达到他们满意的程度，并愿意让这些 API 长期存在。1.0 版本前的一些更改，如方法或类名，比较小。但是有些 API 被完全移除，因为它们并不是平台希望永远支持的内容。
- en: Romain Guy said, “A lot of the time during 2008 I spent cleaning up the APIs
    and removing as much as possible from the framework before we shipped.” For example,
    he removed PageTurner, a class that implemented a cool paper-tearing effect. It
    was originally written for an earlier version of the Calculator application to
    show a fun animation when clearing the display. But the design of Calculator had
    changed, and it no longer used that animation. It was such a specific kind of
    effect that it was too niche to live in the public API, so that class was deleted.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 罗曼·盖伊（Romain Guy）说：“在 2008 年的很大一部分时间里，我都在清理 API，并尽可能地从框架中移除不必要的内容，直到我们发布。”例如，他移除了
    PageTurner 类，这个类实现了一个酷炫的撕纸效果。它最初是为早期版本的计算器应用程序编写的，用来在清除显示时展示一个有趣的动画。但计算器的设计发生了变化，不再使用这个动画。由于这个效果过于具体，属于一个小众的效果，因此不适合保留在公共
    API 中，所以该类被删除了。
- en: '![](image_fi/502680c40/f40001.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502680c40/f40001.png)'
- en: The paper-tearing effect for the calculator app was cool, but not generally
    useful. It was removed from the platform APIs before 1.0.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 计算器应用的撕纸效果很酷，但并不是普遍实用的。因此，它在 1.0 版本前就被从平台 API 中移除了。
- en: 'Jeff Sharkey, who was an external developer at that time, commented on the
    API churn during this phase of the project: “Portions of the Android SDK were
    pretty turbulent through the various preview releases before the 1.0 release.
    UI components were being added, removed, and reskinned^([3](#c40-footnote-3))
    at every snapshot. Entire features were gutted.”'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当时作为外部开发者的杰夫·沙基（Jeff Sharkey）评论了项目在这一阶段的 API 波动：“在 1.0 发布之前的多个预览版本中，Android
    SDK 的部分内容经历了相当动荡的变化。UI 组件在每个快照中都在被添加、移除或重新设计^([3](#c40-footnote-3))。一些完整的功能被彻底砍掉了。”
- en: This is not to say that bad APIs didn’t sneak their way in and stick around
    past 1.0 (see the earlier footnote comment about “building future regret”). One
    example is ZoomButton, a utility class for interpreting a long-press as multiple
    click events, sent to another piece of logic that handled zooming. ZoomButton
    didn’t actually do any zooming itself. In fact, it didn’t really do anything except
    reinterpret one type of input (long-press) as another (multiple clicks). But unfortunately,
    it stuck around past 1.0 and only got deprecated^([4](#c40-footnote-4)) years
    later, in the Oreo release.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是说没有一些糟糕的API悄悄进入并在1.0之后继续存在（见前面的脚注评论关于“制造未来的遗憾”）。一个例子是ZoomButton，这是一个用于将长按解释为多个点击事件的工具类，然后将这些事件发送到处理缩放的其他逻辑。ZoomButton本身并没有进行任何缩放操作。实际上，它什么也没做，除了将一种输入类型（长按）重新解释为另一种（多个点击）。但不幸的是，它在1.0之后继续存在，直到多年后，在Oreo版本中才被弃用^([4](#c40-footnote-4))。
- en: Performance
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能
- en: Another critical area of work during this phase was performance. Even though
    hardware at that time had come a long way since earlier mobile device generations,
    making it possible for smartphones to exist, the CPUs were still incredibly limited.
    Also, everything that happens on a phone uses battery and shortens the time until
    the user needs to recharge their device. So it was important for the platform
    and application engineers to do everything possible to make things run faster,
    smoother, and more efficiently. For example, Romain Guy, along with others on
    the UI toolkit team, spent much of this time optimizing animations and drawing
    logic to avoid doing unnecessary work.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，另一个关键的工作领域是性能。尽管当时的硬件相比早期的移动设备已经有了很大的进步，足以支持智能手机的存在，但CPU仍然非常有限。此外，手机上的每一项操作都会消耗电池并缩短用户需要充电的时间。因此，平台和应用工程师们尽力让一切运行得更快、更流畅、更高效。例如，罗曼·盖伊和其他UI工具包团队的成员花了大量时间优化动画和绘图逻辑，以避免做不必要的工作。
- en: Bugs, Bugs, Bugs
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 错误，错误，错误
- en: The hardware for the G1 was finally starting to become available for wider internal
    use around the time of the SDK launch, so the team could finally start testing
    their code on real hardware. Once the devices were available in quantity, everyone
    could also dogfood the G1 as their daily phone, which generated many bugs that
    needed to be fixed before 1.0.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: G1的硬件终于在SDK发布时开始广泛供内部使用，团队也能开始在真实硬件上测试他们的代码。一旦设备可以大量获得，大家也能将G1作为日常使用的手机，这也产生了许多需要在1.0版本发布前修复的bug。
- en: Romain said, “What happened during that time? Tons of debugging.”
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 罗曼说：“那段时间发生了什么？大量的调试。”
- en: Easter Eggs
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 彩蛋
- en: One of the things that didn’t make it into 1.0 was an Easter egg^([5](#c40-footnote-5))
    listing the names of everyone who worked on the release, reminiscent of the classic
    Macintosh team signatures that decorated the inside of that computer case. Romain
    Guy implemented the feature, but it never shipped.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.0版本中没有实现的一项功能是一个彩蛋^([5](#c40-footnote-5))，列出了所有参与发布工作的人的名字，这让人想起经典的Macintosh团队签名，这些签名曾装饰在电脑机箱内部。罗曼·盖伊实现了这个功能，但它最终没有发布。
- en: “You can register an intent for what’s called a ‘secret code’ in the Dialer.
    When you dial like *#*#, a number, *#*#, it’s basically a system command. Sometimes
    your ISP might ask you to type something like that to ask you to do something.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: “你可以为所谓的‘秘密代码’在拨号器中注册一个意图。当你拨打像*#*#，一个号码，*#*#，它基本上是一个系统命令。有时你的互联网服务提供商可能会让你输入这样的内容，以要求你执行某些操作。”
- en: “Launcher registered one of those codes. If you entered it, launcher would be
    woken up and would find, in one of its icons I had hidden in the metadata, the
    list of the people on the team who had worked on Android 1.0\. It would bring
    up a UI to just scroll the list of names. The code to do that was written inside
    a comment, in the Java sources. So the code was kind of hidden.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: “启动器注册了其中一个代码。如果你输入了它，启动器会被唤醒，并且会在我隐藏在元数据中的一个图标里找到参与Android 1.0开发的团队成员的名单。它会弹出一个UI，滚动显示这些名字。实现这一功能的代码被写在Java源代码中的注释里。所以，这段代码是被隐藏起来的。”
- en: “We turned it into a feature. We started gathering even more people, including
    contractors. We added more and more. It was canned because someone was afraid
    that we would have forgotten about someone.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: “我们把它变成了一个功能。我们开始招募更多的人，包括承包商。我们加入了越来越多的功能。最终它被放弃了，因为有人担心我们会忘记某个人。”
- en: “So it was a cool little Easter egg that got productized to death.”
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: “所以它曾是一个有趣的小彩蛋，但最终被过度产品化了。”
- en: Recent releases of Android have Easter eggs, most of them implemented by Dan
    Sandler on the system UI team. This Android tradition started several releases
    after 1.0, maybe when the team had time to breathe and think about something non-critical.
    Or maybe just when someone with Dan’s level of art skills, humor, and coding speed
    could make it happen. Long-pressing on the build information in the system settings
    will bring up . . . something. Sometimes it’s just a pretty visual, sometimes
    it’s a simple game or application. But it’s never a list of people working on
    the product because that would be too complicated.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 最近发布的 Android 系统中有彩蛋，大多数是由系统 UI 团队的 Dan Sandler 实现的。这一 Android 传统开始于 1.0 发布之后的几个版本，也许是当时团队终于有时间喘口气，开始考虑一些非关键性的事情。或者也许只是因为像
    Dan 这样具有艺术技能、幽默感和编码速度的人可以做成这件事。长按系统设置中的版本信息会弹出……某些内容。有时候它只是一个漂亮的视觉效果，有时候是一个简单的游戏或应用程序。但它从来不是一份产品开发人员的名单，因为那样会太复杂。
- en: Apps
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序
- en: The team also spent some time in the run up to 1.0, especially toward the end
    when only critical bug fixes were allowed, writing applications. Mike Cleron said,
    “That’s where most of my app-writing career happened. Kicking the tires on the
    framework.”
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 团队在 1.0 版本发布前也花了一些时间，尤其是在版本接近完成时，当时只允许修复关键性的 bug，进行应用程序的编写。Mike Cleron 说：“这就是我大部分应用程序编写生涯的地方。在框架上进行调试。”
- en: Mike and Romain, both passionate landscape photographers, worked on photography
    applications. Writing real-world apps not only provides more functionality for
    users, it also helps platform developers understand the platform from an app developer’s
    point of view, which feeds into better APIs and functionality in future versions.
    And, of course, it also helps find bugs that can then be fixed.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Mike 和 Romain，都是充满激情的风光摄影师，他们致力于摄影应用程序的开发。编写真实世界中的应用程序不仅为用户提供了更多功能，也帮助平台开发人员从应用程序开发者的角度理解平台，从而推动未来版本中更好的
    API 和功能的开发。当然，它也有助于发现可以修复的 bug。
