- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: 13 WORKING WITH DIRECTORIES
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 13 使用目录
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: '![](../images/chapter.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/chapter.jpg)'
- en: Batch is an ideal tool for interrogating Windows directories. What files or
    types of files are in a directory? Are some directories filling up? Where’s a
    lost file? You can answer such questions and many more with some Batch code.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Batch 是一个理想的工具，用于查询 Windows 目录。目录中有哪些文件或文件类型？是否有某些目录快满了？丢失的文件在哪里？你可以通过一些 Batch
    代码回答这些问题，甚至更多。
- en: In this chapter, you’ll learn how to create directories, delete directories,
    and retrieve a plethora of information about existing directories. Before long,
    you’ll be able to quickly generate a report detailing the contents of a directory,
    including filenames, subdirectories, and all the contents of any subdirectories.
    The information can include the size, last modified date, and attributes of all
    files, or even just select files. Eventually, you’ll learn how to process these
    files and directories one by one in a bat file, but I’ll start by sharing how
    to retrieve this useful data. I’ll also explore how to easily determine the existence
    of a specific file or file mask.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何创建目录、删除目录，以及如何获取关于现有目录的大量信息。很快，你将能够快速生成一个报告，详细列出目录的内容，包括文件名、子目录以及任何子目录的所有内容。信息可以包括所有文件的大小、最后修改日期和属性，或者仅选择某些文件。最终，你将学习如何在
    bat 文件中逐一处理这些文件和目录，但我将从分享如何获取这些有用的数据开始。我还将探讨如何轻松确定特定文件或文件掩码是否存在。
- en: Finally, you’ll learn how to map local and network directories to drive letters.
    Nearly anyone who works on a Windows computer can alleviate some day-to-day drudgery
    and become more efficient with a few tips from this chapter coded into a simple
    bat file.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你将学习如何将本地和网络目录映射到驱动器字母。几乎所有使用 Windows 计算机的人都可以通过将本章的一些小技巧编入一个简单的 bat 文件，从而减轻一些日常的繁琐工作，提高工作效率。
- en: Directory Basics
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目录基础
- en: A *directory* is a mapped location on a computer’s disk drive that can house
    files and other directories or subdirectories. On a Windows computer, a directory
    is represented by a folder; in fact, the terms *directory* and *folder* are often
    used interchangeably. In Windows Explorer, you can create and delete subdirectories
    and files in a directory with just a few mouse clicks. You can do the same with
    a bat file, maybe more easily.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*目录* 是计算机磁盘驱动器上的一个映射位置，可以容纳文件和其他目录或子目录。在 Windows 计算机上，目录由文件夹表示；事实上，*目录* 和 *文件夹*
    这两个术语经常可以互换使用。在 Windows 资源管理器中，你可以通过几次鼠标点击在目录中创建和删除子目录及文件。使用 bat 文件，你也可以做到这一点，可能还更简单。'
- en: Creating Directories
  id: totrans-9
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建目录
- en: To create a directory, Batch uses the md and mkdir commands. Both stand for
    *make directory*, and they’re actually the same command (Batch synonyms).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个目录，Batch 使用 md 和 mkdir 命令。这两个命令都代表 *创建目录*，实际上它们是相同的命令（批处理同义词）。
- en: 'The md command accepts no options, and its only argument is the directory to
    be created:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: md 命令不接受任何选项，唯一的参数是要创建的目录：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This useful yet simple command accepts multiple directories to be created, but
    when you use a single command for each directory, the return code of each command
    clearly tells you which directories were and were not successfully created. The
    md command works with or without the trailing slash, but I recommend using it,
    for no other reason than its presence makes the argument look like a directory.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这个既有用又简单的命令可以接受多个目录进行创建，但当你为每个目录使用单个命令时，每个命令的返回代码清楚地告诉你哪些目录已成功创建，哪些没有。md 命令可以在有无斜杠的情况下工作，但我建议使用它，理由仅仅是它的存在让参数看起来像一个目录。
- en: Deleting Directories
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 删除目录
- en: 'The counterpart to the md command is the rd command, for *remove directory*,
    which deletes a directory and any files that might be in it. It also has a Batch
    synonym, rmdir, and it has only two options, both of which I always use: /Q invokes
    *quiet* mode, and /S deletes any *subdirectories* and their contents:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: md 命令的对等命令是 rd 命令，用于 *删除目录*，它会删除一个目录及其中的任何文件。它还有一个批处理同义词 rmdir，并且只有两个选项，我总是使用这两个选项：/Q
    启用 *安静* 模式，/S 删除任何 *子目录* 及其内容：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This command also accepts one-to-many directories as arguments, with or without
    a trailing slash. If there are no subdirectories, the command works with or without
    the /S option, but if there’s one or more subdirectories, nothing at all is deleted
    without the option. I haven’t yet been able to conceptualize what it means to
    delete a directory but not its subdirectories, so I always use the /S option.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令还接受一个到多个目录作为参数，带或不带尾部斜杠。如果没有子目录，该命令可以使用或不使用 /S 选项，但如果有一个或多个子目录，则没有任何东西会在没有选项的情况下被删除。我还无法概念化删除一个目录而不删除其子目录意味着什么，因此我总是使用
    /S 选项。
- en: Retrieving Directory Information
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检索目录信息
- en: Batch has two commands for retrieving detailed information about directories
    and the files they contain, one far more useful than the other. I’ll start with
    the indispensable one.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 批处理有两个命令用于检索关于目录及其包含文件的详细信息，其中一个比另一个更有用。我将从不可或缺的命令开始。
- en: The dir Command
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: dir 命令
- en: One immensely helpful tool is the dir command, which is short for *directory*.
    Many will use it at the command prompt to display information to the console.
    When used alone in a bat file, that information is simply dumped to stdout, which
    usually means it’s subsumed by everything else contained in stdout, so it isn’t
    all that useful. However, you’ll typically use the dir in one of two fashions.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一个极其有用的工具是 dir 命令，它是 *directory* 的缩写。许多人会在命令提示符下使用它来在控制台上显示信息。当在批处理文件中单独使用时，该信息只是简单地输出到标准输出流(stdout)，通常意味着它被
    stdout 中包含的所有其他内容所包含，因此并不是很有用。但是，通常您会以以下两种方式之一使用 dir。
- en: First, with what you learned in [Chapter 12](chapter12.xhtml), you can redirect
    the output of the command to a file to be read by a program, a human, or eventually
    a bat file. Second, and even more impressive, I’ll show how to feed the dir command
    into a for command, skipping the step of creating the file. That’ll come in [Part
    II](part2.xhtml), but before you use dir in a for command, you need to understand
    the complexities of the dir command itself.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，根据您在[第12章](chapter12.xhtml)中学到的知识，您可以将命令的输出重定向到文件中供程序、人类或最终批处理文件读取。其次，更令人印象深刻的是，我将展示如何将
    dir 命令输入到 for 命令中，跳过创建文件的步骤。这将在[第二部分](part2.xhtml)中讨论，但在您使用 dir 命令输入 for 命令之前，您需要了解
    dir 命令本身的复杂性。
- en: Without Options
  id: totrans-23
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 没有选项
- en: 'The simplest dir command accepts a single argument: a directory or folder.
    The double quotes are optional if the path has no embedded spaces:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的 dir 命令接受一个单一的参数：目录或文件夹。如果路径中没有嵌入空格，则双引号是可选的：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For the purpose of demonstration, assume that this directory holds electronic
    copies of some important personal documents and a couple of subdirectories with
    other important stuff. The result of the command might be the nicely formatted
    report written to stdout shown in [Listing 13-1](#Lis13-1).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示目的，假设该目录包含一些重要个人文档的电子副本和几个其他重要材料的子目录。命令的结果可能是向 stdout 显示的[列表 13-1](#Lis13-1)中显示的格式良好的报告。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Listing 13-1: Sample output of an optionless dir command'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 13-1：无选项 dir 命令的示例输出
- en: After three header lines, the first two <DIR> entries signify that this is a
    subdirectory and not a root folder associated with a drive letter; these two lines
    don’t appear for the dir C:\ command. More interesting, all of the files in this
    folder are clearly shown, each with its last modified date and time along with
    the file size. Subdirectories are also clearly delineated.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 经过三行标题后，前两个 <DIR> 条目表示这是一个子目录，而不是与驱动器号相关联的根文件夹；这两行在 dir C:\ 命令中不会出现。更有趣的是，此文件夹中的所有文件都清晰显示，每个文件都带有其最后修改的日期和时间以及文件大小。子目录也清晰地显示出来。
- en: Notice that the files and subdirectories are intermingled, sorted alphabetically
    by default, but as you’ll soon see, this command is extremely customizable with
    its options, giving you much control over this output.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，文件和子目录是交错显示的，默认按字母顺序排序，但正如您很快将看到的那样，该命令非常可定制，具有其选项，可以极大地控制输出。
- en: 'You can even list multiple directories in a single command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您甚至可以在单个命令中列出多个目录：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This command displays all the files and subdirectories under the first folder,
    followed by similar information for the second folders under another heading:
    Directory of C:\Batch.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令显示第一个文件夹下的所有文件和子目录，然后是另一个标题下的第二个文件夹的类似信息：C:\Batch 目录。
- en: Some Useful Options
  id: totrans-34
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 一些有用的选项
- en: The dir command has no shortage of useful options; a couple options even have
    options of their own. I’ll discuss the ones I’ve used often, but as always, find
    the full list in the help, dir /?.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: dir命令有很多有用的选项；其中有几个选项甚至还有自己的选项。我将讨论我经常使用的那些选项，但如常，完整的选项列表可以在帮助中找到，命令为dir /?
- en: 'The /O option controls the sort *order*, but it works a little differently
    from most options you’ve seen at this point. Additional characters define the
    sort order. For instance, /OG groups the directories before the files, and a dash
    reverses the sort order so that /O-G groups the files before the directories.
    (Painfully, G represents *group directories first*.) The option /OEN orders by
    *extension* and then by *name*, while /O-E-N reverses the order. Some may find
    it *odious*, but /ODS sorts by modified date and time followed by file size:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: /O选项控制排序*顺序*，但它的工作方式与到目前为止你所见的大多数选项略有不同。附加字符定义了排序顺序。例如，/OG将目录排在文件前面，而减号则反转排序顺序，/O-G将文件排在目录前面。（令人痛苦的是，G代表*先显示目录*。）/OEN选项按*扩展名*和*名称*排序，而/O-E-N则反转顺序。有些人可能觉得它*讨厌*，但是/ODS按修改日期和时间排序，然后按文件大小排序：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The *attributes* option, /A, limits what’s displayed. The /AH option lists only
    hidden files, while /A-H omits hidden files from the list; /AD shows only directories,
    while /A-D doesn’t display directories. There really should be an option for files
    only, but the no directories option accomplishes the task as only Batch can.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*属性*选项，/A，限制显示内容。/AH选项仅列出隐藏文件，而/A-H则从列表中省略隐藏文件；/AD仅显示目录，/A-D则不显示目录。实际上应该有一个仅针对文件的选项，但“无目录”选项能够完成任务，就像只有批处理能做到的一样。'
- en: By default, the file sizes are displayed with commas, which is great for readability
    (for humans), but if we want to do any arithmetic on these numbers, the /-C option
    removes the commas. Quite often, the coder wants to produce a simple list of filenames
    without any clutter. The /B option, which stands for *bare*, does the job nicely.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，文件大小以逗号分隔，方便阅读（对于人类来说），但如果我们想对这些数字进行任何算术操作，/ -C选项会去掉逗号。编码者经常希望生成一个没有任何杂乱的简单文件名列表。/B选项，即*裸*选项，能够很好地完成这个任务。
- en: 'Putting a few of these options together, the following command skips the directories
    (/A-D), orders by size from smallest to largest (/OS), and shows only the filenames
    sans their respective paths (/B):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些选项组合在一起，以下命令跳过目录（/A-D），按大小从小到大排序（/OS），并仅显示文件名而不显示其路径（/B）：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This command without any options produced the report in [Listing 13-1](#Lis13-1).
    With these options, the result is far more succinct, just a simple list of filenames:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这条没有任何选项的命令生成了[列表 13-1](#Lis13-1)中的报告。使用这些选项后，结果简洁得多，仅仅是一个简单的文件名列表：
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Notice from [Listing 13-1](#Lis13-1) that the passport is the smallest file
    and the birth certificate is the largest, thus showing that the files are still
    ordered by size even though their byte counts aren’t displayed. The succinct output
    might look like a downgrade; true, it isn’t as informative for humans, but in
    [Part II](part2.xhtml) this will be ideal data to feed into a for command that’ll
    process one file at a time.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 从[列表 13-1](#Lis13-1)中可以看到，护照是最小的文件，出生证明是最大的，这表明尽管没有显示字节数，文件仍然按大小排序。简洁的输出可能看起来像是一种降级；确实，它对人类不如之前那么有信息量，但在[第二部分](part2.xhtml)中，这将是理想的数据，可以输入到一个for命令中逐个处理文件。
- en: Another useful option is /S, which stands for *subdirectory*. It essentially
    runs a dir command on a directory, and then it runs it again on all of its subdirectories,
    returning a well-formatted report with subheadings for each. The dir C:\ /S command
    provides a report on every folder on your computer, but it won’t be quick, and
    the result will likely be longer than this book. When used in conjunction with
    /B, each bare filename is prepended with its path—which might seem like a contradiction
    but not after you consider that each file could be in any number of directories.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的选项是/S，代表*子目录*。它本质上是先对一个目录运行dir命令，然后对其所有子目录再次运行此命令，返回一个格式良好的报告，每个子目录都有小标题。dir
    C:\ /S命令提供了你计算机上每个文件夹的报告，但速度不快，结果可能比本书还长。当与/B选项一起使用时，每个纯文件名都会加上其路径——这可能看起来像是一个矛盾，但在考虑到每个文件可能位于多个目录中时，就能理解了。
- en: Default Set of Options
  id: totrans-46
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 默认选项集
- en: If you’re planning to run multiple dir commands, all with the same options,
    those options don’t need to be repeated for every command. Instead, you can load
    one or more options into the dircmd pseudo-environment variable. Once it’s set,
    all subsequent dir commands will use the options in the dircmd variable by default.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算运行多个 dir 命令，而且每个命令的选项都相同，那么你不需要为每个命令都重复这些选项。相反，你可以将一个或多个选项加载到 dircmd 伪环境变量中。一旦设置，所有后续的
    dir 命令将默认使用 dircmd 变量中的选项。
- en: 'For example, the following code executes both dir commands showing bare filenames
    (/B), no directories (/A-D), and sorted by extension (/OE):'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下代码执行两个 dir 命令，显示裸文件名 (/B)，不显示目录 (/A-D)，并按扩展名排序 (/OE)：
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can override one or more of the options in the dircmd variable for a particular
    dir command. Assume that the next dir command follows the previous code where
    dircmd was set:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为特定的 dir 命令覆盖 dircmd 变量中的一个或多个选项。假设接下来的 dir 命令遵循了前面的代码，其中 dircmd 已经设置：
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This still uses the options for the bare format of files only, but the sort
    order is reversed.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这仍然使用了仅适用于文件裸格式的选项，但排序顺序被反转了。
- en: At any point, you can turn this feature off by setting dircmd to null or nothing
    at all.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 任何时候，你都可以通过将 dircmd 设置为空或完全不设置来关闭此功能。
- en: The where Command
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: where 命令
- en: The where command is similar to the dir command; it searches one or more directories
    to find *where* a file exists. If you’re shrugging your shoulders as you read
    this asking, “Doesn’t the dir command do that and a whole lot more?” my answer
    would most definitely be in the affirmative. Most anything you can do with where,
    you can do with dir, only better.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: where 命令类似于 dir 命令；它搜索一个或多个目录来查找文件 *所在的位置*。如果你在读这段话时耸了耸肩，心想：“dir 命令不也能做这个，而且还能做更多吗？”那么我的回答肯定是肯定的。大多数你能用
    where 做的事情，dir 也能做，只是做得更好。
- en: However, the where command performs one task far more efficiently than the dir
    command ever could. With the /Q option, the where command returns an exit code
    indicating success or failure in lieu of a list of files found, making it easy
    to determine whether a particular file exists or whether at least one file matching
    a file mask is present. (The /Q option stands for *quiet* mode like some others
    you’ve seen, but quiet for this command means something slightly different. For
    the others, a prompt is suppressed, but here the output is suppressed.)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，where 命令在执行某些任务时，比 dir 命令更高效。使用 /Q 选项时，where 命令返回一个退出代码，表示成功或失败，而不是返回找到的文件列表，这使得判断某个文件是否存在或是否有至少一个与文件掩码匹配的文件变得更加容易。（/Q
    选项代表 *安静* 模式，像你见过的其他模式一样，但在此命令中，"安静"的含义稍有不同。对于其他命令，提示被抑制，但在这里，输出被抑制。）
- en: 'The following command looks for at least one file starting with the text FindMe,
    case-insensitive, in the folder *C:\Batch\* and sets errorlevel based on the result:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令会在文件夹 *C:\Batch\* 中查找至少一个以 FindMe 开头的文件，忽略大小写，并根据结果设置错误级别：
- en: '[PRE10]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The return code will be 0 if at least one file fits the mask, 1 if not, or 2
    if the syntax is incorrect.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果至少有一个文件符合掩码，返回代码将为 0；如果没有，则为 1；如果语法不正确，则为 2。
- en: 'If you look closely, there appears to be a problem with the path and file mask;
    there’s what looks to be an extraneous colon between the two. The dir command
    rightly accepts a path and filename (or mask) together as one argument. The where
    command treats them as separate arguments delimited by a colon. This does allow
    you to enter multiple semicolon-delimited paths with a single filename or mask,
    but that’s of little consolation. To make matters even more confusing, the colon
    is dropped in favor of a space when using the /R option—which stands for *recursive*,
    meaning that it also searches subdirectories:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仔细查看，会发现路径和文件掩码之间似乎有一个多余的冒号。dir 命令正确地将路径和文件名（或掩码）视为一个参数一起处理。而 where 命令将它们视为由冒号分隔的两个参数。这确实允许你用一个文件名或掩码输入多个由分号分隔的路径，但这并没有多少安慰。更令人困惑的是，当使用
    /R 选项时——表示 *递归*，即它还会搜索子目录——冒号会被空格替代：
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: I’m begrudgingly including this command. The syntax is just plain wrong, but
    it does have one worthwhile function. Think of it as an if exist command with
    a return code. Use it for this narrow task, but otherwise stick with the dir.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我勉强包括了这个命令。语法本身就是错误的，但它确实有一个值得使用的功能。可以将其视为带有返回代码的 if exist 命令。仅在执行这个特定任务时使用它，其他情况请继续使用
    dir。
- en: Mapping Drive Letters
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 映射驱动器字母
- en: Batch has two very useful commands for mapping drive letters. One maps local
    paths to drive letters, and the other maps network paths and shares to drive letters.
    If you’re a noncoder—first off, I’m giving you a slow clap, congrats on getting
    to the 13th chapter—but more to the point, if this sounds like something that
    only coders can use, that isn’t the case.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 批处理有两个非常有用的命令用于映射驱动器字母。一个是将本地路径映射到驱动器字母，另一个是将网络路径和共享映射到驱动器字母。如果您不是编程人员——首先，给您慢拍手，恭喜您已经阅读到第13章——但更重要的是，如果这听起来像是只有程序员才能使用的东西，那其实并不是这样的。
- en: Mapping paths is a great tool if you often work in various specific paths on
    your computer or network throughout the day. Navigating to them might take some
    time, especially if these paths are several folders deep. Another challenge, especially
    if you work from home, is that you probably won’t be able to see the network paths
    until you connect to a virtual private network (VPN). To make all of this easier,
    write a short bat file and run it each morning, perhaps after connecting to the
    network, and you can access these paths with ease throughout the day. After the
    mapping is done, access each path by clicking a drive letter in Windows Explorer.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 映射路径是一个很好的工具，特别是如果您在一天中经常在计算机或网络的多个特定路径下工作。导航到这些路径可能会花费一些时间，特别是当这些路径深层嵌套时。另一个挑战，尤其是如果您在家工作，可能是您在连接到虚拟私人网络（VPN）之前无法看到网络路径。为了简化这一切，编写一个简短的批处理文件，每天早上运行，可能是在连接到网络后，这样您就可以轻松访问这些路径了。映射完成后，通过点击
    Windows 资源管理器中的驱动器字母即可访问每个路径。
- en: The subst Command
  id: totrans-66
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`subst` 命令'
- en: 'The subst command maps a local directory, or any folder on your Windows computer,
    to a drive letter. The command name is short for *substitute* because after using
    it, you can substitute a drive letter for a directory. (No, it isn’t used for
    substringing.) The following command maps *Z:\* to the path shown, although it’ll
    fail if the path doesn’t exist or if the drive letter is already mapped to another
    path:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`subst` 命令将本地目录或您 Windows 计算机上的任何文件夹映射到驱动器字母。命令名称是 *substitute* 的缩写，因为使用它后，您可以用驱动器字母替代目录。（不，这不是用来做子字符串操作的。）以下命令将
    *Z:\* 映射到所示路径，尽管如果路径不存在或驱动器字母已映射到另一个路径，则会失败：'
- en: '[PRE12]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'After this command executes, you’ll find *Z:\* in Windows Explorer as an alias
    of the *C:\ParentFolder\ChildFolder\GrandchildFolder\* path. Now the bat file
    can access anything in that path by invoking only the drive letter. For example,
    after the previous command executes, the following command creates an empty file
    in the *GrandchildFolder\* directory, with an economy of typing:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此命令后，您将在 Windows 资源管理器中找到 *Z:\*，它作为 *C:\ParentFolder\ChildFolder\GrandchildFolder\*
    路径的别名。现在，批处理文件可以仅通过调用驱动器字母来访问该路径中的任何内容。例如，在执行前述命令后，以下命令将在 *GrandchildFolder\*
    目录中创建一个空文件，从而减少输入量：
- en: '[PRE13]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The subst command with neither arguments nor options displays all folders currently
    mapped by earlier subst commands. If a certain other folder had already been mapped
    prior to the earlier subst command, the succinct command
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`subst` 命令如果没有参数或选项，将显示所有当前通过之前的 `subst` 命令映射的文件夹。如果在之前的 `subst` 命令之前，已经有其他文件夹被映射，简洁命令将...'
- en: '[PRE14]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'might generate the following output:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会生成以下输出：
- en: '[PRE15]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The mapping of *Z:\* will now be in effect on the machine, even to other processes
    (bats and humans alike) until the machine is logged off or unless the following
    command is run to *delete* or disconnect the mapping via the /D option:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*Z:\* 的映射现在将在计算机上生效，甚至对于其他进程（无论是批处理还是人工操作），直到计算机注销或运行以下命令通过 /D 选项 *删除* 或断开该映射：'
- en: '[PRE16]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This command maps only local directories; it doesn’t map directories on other
    computers, but there’s another command for that.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令仅映射本地目录；它不会映射其他计算机上的目录，但还有一个其他命令可以完成这个任务。
- en: The net use Command
  id: totrans-78
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`net use` 命令'
- en: 'The net use command maps network directories and shares as the subst command
    maps local directories. The following command maps *Y:\* to a share on a remote
    server:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`net use` 命令将网络目录和共享映射为 `subst` 命令映射本地目录。以下命令将 *Y:\* 映射到远程服务器上的共享：'
- en: '[PRE17]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You can now use the drive letter *Y:\* to access this path on another machine,
    again by both bats and humans, until the mapping is deleted or the machine is
    shut down. Like the subst command, net use has an option to disconnect or delete
    the mapping, but it’s more verbose:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以使用驱动器字母 *Y:\* 来访问另一台计算机上的此路径，再次适用于批处理和人工操作，直到映射被删除或计算机关闭。与 `subst` 命令类似，`net
    use` 命令也有一个选项来断开或删除映射，但它更为冗长：
- en: '[PRE18]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The creators of the /D and /DELETE options were at least subconsciously honoring
    the famous quote, “a foolish consistency is the hobgoblin of little minds.” Ralph
    Waldo Emerson might disapprove, but in a nod to foolish consistency, I’ve capitalized
    the verbose option as I have the others because that’s my convention, but not
    without reservations. My primary driver behind this convention is to minimize
    capitalizations, but when an option, which is usually a single character, grows
    to six characters, it begs to be lowercase. Do what feels right to you.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: /D和/DELETE选项的创始人至少在潜意识里是在尊重那句著名的名言：“愚蠢的一致性是狭隘心智的鬼怪。”拉尔夫·沃尔多·爱默生可能会不赞同，但为了致敬这种愚蠢的一致性，我像对待其他选项一样将这个冗长的选项大写化，因为这是我的惯例，但并非没有保留。我的这一惯例背后的主要动机是尽量减少大写字母的使用，但当一个通常是单个字符的选项变为六个字符时，它自然应该使用小写字母。做你觉得对的事情。
- en: Much like the subst command, the command with no additional arguments, net use,
    produces the complete list of directories and drives mapped by earlier net use
    commands.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 与subst命令类似，net use命令如果没有附加参数，将会列出通过早期net use命令映射的所有目录和驱动器。
- en: NOTE
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: '*I need to head off some hate mail here. This is actually the net command with
    use being its first argument. The command has more than a dozen other first arguments—for
    instance, share creates a file share. But due to the popularity of use, coders
    commonly refer to the net use command. In fact, the help, net use /?, details
    information on it like any other command.*'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '*我需要先预防一些恶评。这实际上是net命令，其中use是它的第一个参数。该命令有十多个其他的第一个参数——例如，share用来创建文件共享。但是由于use的广泛使用，程序员通常称其为net
    use命令。事实上，help net use /?会像任何其他命令一样提供相关信息。*'
- en: Summary
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to create and delete directories. I detailed
    the all-important dir command, which you’ll see again before long, and the where
    command, which you’ll not see again in this book because of reasons stated earlier.
    You now can pull up an incredible amount of information on a directory and all
    of its contents, and in [Part II](part2.xhtml), I’ll demonstrate how to enumerate
    through this data so that you can perform a task on each file or directory. You
    also learned how to map local and network directories, a skill that’s incredibly
    useful for anyone, not just coders, who works often on a Windows computer.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你学习了如何创建和删除目录。我详细介绍了极为重要的dir命令，稍后你还会再见到它，还有where命令，你在本书中不会再见到它，因为之前提到的原因。现在，你可以获取关于目录及其所有内容的惊人信息，在[第二部分](part2.xhtml)中，我将演示如何遍历这些数据，以便你可以对每个文件或目录执行任务。你还学会了如何映射本地和网络目录，这对于任何人来说都是极其有用的技能，不仅仅是程序员，尤其是那些经常在Windows计算机上工作的用户。
- en: Changing gears, I’ll next delve into the concept of escaping. To some this might
    be the most confusing title in the book; what’s escaping, what’s being escaped,
    and what are we trying to escape? Those questions and more will be answered in
    the next chapter.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 转换话题，我接下来将深入探讨逃逸的概念。对某些人来说，这可能是本书中最让人困惑的标题；什么是逃逸，逃逸的是什麼，我们又在试图逃避什么？这些问题和更多的疑问将在下一章中解答。
