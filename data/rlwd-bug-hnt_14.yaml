- en: '**14'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**14'
- en: SUBDOMAIN TAKEOVER**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 子域接管**
- en: '![Image](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common.jpg)'
- en: A *subdomain takeover* vulnerability occurs when a malicious attacker is able
    to claim a subdomain from a legitimate site. Once the attacker controls the subdomain,
    they either serve their own content or intercept traffic.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*子域接管*漏洞发生在恶意攻击者能够从一个合法站点获取子域名时。一旦攻击者控制了该子域名，他们就可以提供自己的内容或拦截流量。'
- en: '**Understanding Domain Names**'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**理解域名**'
- en: 'To understand how a subdomain takeover vulnerability works, we’ll first need
    to look at how you register and use domain names. Domains are the URLs that access
    websites, and they’re mapped to IP addresses by Domain Name Servers (DNS). Domains
    are organized as a hierarchy, and each part is separated by a period. The final
    part of a domain—the rightmost part—is a *top-level domain*. Examples of top-level
    domains include *.com*, *.ca*, *.info*, and so on. The next level up in the domain
    hierarchy is the domain name that people or companies register. This part of the
    hierarchy accesses websites. For example, let’s say *<example>.com* is a registered
    domain with a *.com* top-level domain. The next step in the hierarchy is the focus
    of this chapter: *subdomains*. Subdomains comprise the leftmost part of URLs and
    can host separate websites on the same registered domain. For example, if Example
    Company had a customer-facing website but also needed a separate email website,
    it could have separate *www.<example>.com* and *webmail.<example>.com* subdomains.
    Each of these subdomains could serve its own site content.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解子域接管漏洞是如何工作的，我们首先需要了解域名的注册和使用方式。域名是访问网站的URL，它们通过域名系统（DNS）映射到IP地址。域名是以层级结构组织的，每一部分由一个句点分隔。域名的最后一部分——最右边的部分——是*顶级域名*。顶级域名的例子包括*.com*、*.ca*、*.info*等。域名层级中的上一级是人们或公司注册的域名。这个层级部分用于访问网站。例如，假设*<example>.com*是一个已注册的域名，且其顶级域名是*.com*。接下来的层级是本章的重点：*子域名*。子域名是URL中最左边的部分，可以在同一注册域名下承载独立的网站。例如，如果Example公司有一个面向客户的网站，但还需要一个单独的电子邮件网站，它可以拥有单独的*www.<example>.com*和*webmail.<example>.com*子域名。这些子域名每一个都可以提供自己的网站内容。
- en: Site owners can create subdomains using several methods, but the two most common
    methods are adding an A record or a CNAME record in a site’s DNS records. An *A
    record* maps a site name to one or more IP addresses. A *CNAME* should be a unique
    record that maps a site name to another site name. Only site administrators can
    create DNS records for a site (unless you find a vulnerability, of course).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 网站所有者可以使用多种方法创建子域名，但最常见的两种方法是向网站的DNS记录中添加A记录或CNAME记录。*A记录*将站点名称映射到一个或多个IP地址。*CNAME*应该是一个唯一的记录，将站点名称映射到另一个站点名称。只有站点管理员才能为站点创建DNS记录（当然，除非你发现了漏洞）。
- en: '**How Subdomain Takeovers Work**'
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**子域接管是如何工作的**'
- en: 'A subdomain takeover occurs when a user can control the IP addresses or URLs
    that an A record or a CNAME record points to. A common example of this vulnerability
    involves the website hosting platform Heroku. In a typical workflow, a site developer
    creates a new application and hosts it on Heroku. Then the developer creates a
    CNAME record for a subdomain of their main site and points that subdomain to Heroku.
    Here’s a hypothetical example where this situation can go wrong:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户可以控制A记录或CNAME记录指向的IP地址或URL时，就会发生子域接管。这个漏洞的常见示例涉及到网站托管平台Heroku。在一个典型的工作流程中，网站开发人员创建一个新应用并将其托管在Heroku上。然后，开发人员为其主站点的子域创建一个CNAME记录，并将该子域指向Heroku。以下是一个可能出现问题的假设示例：
- en: Example Company registers an account on the Heroku platform and doesn’t use
    SSL.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Example公司在Heroku平台上注册了一个账户，但没有使用SSL。
- en: Heroku assigns Example Company the subdomain *[unicorn457.herokuapp.com](http://unicorn457.herokuapp.com)*
    for its new application.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Heroku为Example公司分配了子域名*[unicorn457.herokuapp.com](http://unicorn457.herokuapp.com)*来托管其新应用。
- en: Example Company creates a CNAME record with its DNS provider pointing the subdomain
    *test.<example>.com* to *[unicorn457.herokuapp.com](http://unicorn457.herokuapp.com)*.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Example公司在其DNS提供商处创建了一个CNAME记录，将子域名*test.<example>.com*指向*[unicorn457.herokuapp.com](http://unicorn457.herokuapp.com)*。
- en: After a couple of months, Example Company decides to remove its *test.<example>.com*
    subdomain. It closes its Heroku account and deletes the site content from its
    servers. But it doesn’t delete the CNAME record.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几个月后，Example公司决定删除其*test.<example>.com*子域名。它关闭了Heroku账户并删除了服务器上的站点内容，但它没有删除CNAME记录。
- en: A malicious person notices the CNAME record pointing to an unregistered URL
    on Heroku and claims the domain *unicorn457.heroku.com*.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个恶意的人注意到 CNAME 记录指向 Heroku 上一个未注册的 URL，并声明域名 *unicorn457.heroku.com*。
- en: The attacker can now serve their own content from *test.<example>.com*, which
    appears to be a legitimate Example Company site because of the URL.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 攻击者现在可以从 *test.<example>.com* 提供他们自己的内容，由于 URL 的缘故，这看起来像是一个合法的 Example Company
    网站。
- en: As you can see, this vulnerability often occurs when a site doesn’t delete a
    CNAME (or an A record) pointing to an external site that an attacker can claim.
    Commonly used external services that have been associated with subdomain takeovers
    include Zendesk, Heroku, GitHub, Amazon S3, and SendGrid.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，这种漏洞通常发生在一个网站没有删除指向攻击者可以控制的外部网站的 CNAME（或 A 记录）时。与子域接管相关的常见外部服务包括 Zendesk、Heroku、GitHub、Amazon
    S3 和 SendGrid。
- en: 'The impact of a subdomain takeover depends on the configuration of the subdomain
    and parent domain. For example, in “Web Hacking Pro Tips #8” (*[https://www.youtube.com/watch?v=76TIDwaxtyk](https://www.youtube.com/watch?v=76TIDwaxtyk)*),
    Arne Swinnen describes how cookies can be scoped so browsers send stored cookies
    to only the appropriate domain. But a cookie can be scoped so browsers send cookies
    to all subdomains by specifying the subdomain only as a period, such as in the
    value *.<example>.com*. When a site has this configuration, browsers will send
    *<example>.com* cookies to any Example Company subdomain a user visits. If an
    attacker controls *test.<example>.com*, they could steal *<example>.com* cookies
    from targets who visit the malicious *test.<example>.com* subdomain.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '子域接管的影响取决于子域和父域的配置。例如，在“Web Hacking Pro Tips #8” (*[https://www.youtube.com/watch?v=76TIDwaxtyk](https://www.youtube.com/watch?v=76TIDwaxtyk)*)
    中，Arne Swinnen 描述了如何限定 cookies，使得浏览器只将存储的 cookies 发送到适当的域。但也可以通过仅将子域指定为一个点（如 *.<example>.com*）来限定
    cookie，使得浏览器将 cookies 发送到所有子域。当一个网站采用这种配置时，浏览器会将 *<example>.com* 的 cookies 发送到用户访问的任何
    Example Company 子域。如果攻击者控制了 *test.<example>.com*，他们可以从访问恶意的 *test.<example>.com*
    子域的目标那里窃取 *<example>.com* 的 cookies。'
- en: Alternatively, if the cookies aren’t scoped this way, a malicious attacker could
    still create a site on the subdomain that mimics the parent domain. If the attacker
    includes a login page on the subdomain, they could potentially phish users into
    submitting their credentials. Two common attacks are made possible by subdomain
    takeovers. But in the following examples, we’ll also look at other attacks, such
    as email intercepts.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，如果这些 cookies 没有这样被限定，恶意攻击者仍然可以在子域上创建一个模仿父域的网站。如果攻击者在子域上放置一个登录页面，他们可能会钓鱼用户提交其凭据。子域接管使得两种常见的攻击成为可能。但在以下示例中，我们还将探讨其他攻击方式，如电子邮件拦截。
- en: Finding subdomain takeover vulnerabilities involves looking up the DNS records
    for a site. A great way to do this is to use the KnockPy tool, which enumerates
    subdomains and searches for common subdomain takeover related error messages from
    services like S3\. KnockPy comes with a list of common subdomains to test, but
    you can also provide your own list of subdomains. The GitHub repository SecLists
    (*[https://github.com/danielmiessler/SecLists/](https://github.com/danielmiessler/SecLists/)*)
    also lists commonly found subdomains among its many other security-related lists.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 查找子域接管漏洞需要查阅网站的 DNS 记录。一个很好的方法是使用 KnockPy 工具，它列举子域并搜索来自像 S3 这样的服务的常见子域接管相关错误消息。KnockPy
    带有一份常见子域的测试列表，但你也可以提供自己的子域列表。GitHub 仓库 SecLists (*[https://github.com/danielmiessler/SecLists/](https://github.com/danielmiessler/SecLists/)*)
    也列出了在其众多与安全相关的列表中常见的子域。
- en: '**Ubiquiti Subdomain Takeover**'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Ubiquiti 子域接管**'
- en: '**Difficulty:** Low'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**难度：** 低'
- en: '**URL:** *http://assets.goubiquiti.com/*'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**URL：** *http://assets.goubiquiti.com/*'
- en: '**Source:** *[https://hackerone.com/reports/109699/](https://hackerone.com/reports/109699/)*'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**来源：** *[https://hackerone.com/reports/109699/](https://hackerone.com/reports/109699/)*'
- en: '**Date reported:** January 10, 2016'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**报告日期：** 2016年1月10日'
- en: '**Bounty paid:** $500'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**赏金支付：** $500'
- en: Amazon Simple Storage, or S3, is a file hosting service provided by Amazon Web
    Services (AWS). An account on S3 is a *bucket* that you can access using a special
    AWS URL, which begins with the bucket name. Amazon uses a global namespace for
    its bucket URLs, which means that once someone registers a bucket, no one else
    can register it. For example, if I registered the bucket *<example>*, it would
    have the URL *<example>.s3.amazonaws.com* and I would own it. Amazon also allows
    users to register any name they want as long as it hasn’t already been claimed,
    meaning an attacker can claim any unregistered S3 bucket.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Simple Storage（简称 S3）是由 Amazon Web Services（AWS）提供的文件托管服务。在 S3 上的账户是一个
    *桶*，你可以通过一个特殊的 AWS URL 访问它，该 URL 以桶名开头。Amazon 为其桶的 URL 使用全球命名空间，这意味着一旦有人注册了一个桶，其他人就无法再注册它。例如，如果我注册了桶
    *<example>*，它的 URL 将是 *<example>.s3.amazonaws.com*，并且我将拥有它。Amazon 还允许用户注册任何尚未被注册的名称，这意味着攻击者可以注册任何未被注册的
    S3 桶。
- en: In this report, Ubiquiti created a CNAME record for *assets.goubiquiti.com*
    and pointed it to the S3 bucket *uwn-images*. This bucket was accessible via the
    URL *uwn-images.s3.website.us-west-1.amazonaws.com*. Because Amazon has servers
    around the world, the URL includes information about the Amazon geographical region
    where the bucket is located. In this case, *us-west-1* is Northern California.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本报告中，Ubiquiti 创建了一个 CNAME 记录，将 *assets.goubiquiti.com* 指向 S3 桶 *uwn-images*。该桶可以通过
    URL *uwn-images.s3.website.us-west-1.amazonaws.com* 访问。由于 Amazon 在全球拥有服务器，URL
    中包含有关该桶所在的 Amazon 地理区域的信息。在本例中，*us-west-1* 是指北加利福尼亚。
- en: But Ubiquiti either hadn’t registered the bucket or had removed it from its
    AWS account without deleting the CNAME record. So, visiting *assets.goubiquiti.com*
    would still attempt to serve content from S3\. As a result, a hacker claimed the
    S3 bucket and reported the vulnerability to Ubiquiti.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 但是 Ubiquiti 要么没有注册该桶，要么已经将其从 AWS 账户中移除，但忘记删除 CNAME 记录。因此，访问 *assets.goubiquiti.com*
    仍会尝试从 S3 提供内容。结果，黑客声明了该 S3 桶，并向 Ubiquiti 报告了这个漏洞。
- en: '***Takeaways***'
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***要点***'
- en: Keep an eye out for DNS entries that point to third-party services like S3\.
    When you find such entries, confirm whether the company has properly configured
    that service. In addition to doing an initial check on a website’s DNS records,
    you can continually monitor entries and services using automated tools like KnockPy.
    It’s best to do so just in case a company removes a subdomain but forgets to update
    its DNS records.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意检查指向第三方服务如 S3 的 DNS 记录。当你发现此类记录时，确认该公司是否已正确配置该服务。除了对网站的 DNS 记录进行初步检查外，你还可以使用像
    KnockPy 这样的自动化工具持续监控记录和服务。最好这样做，以防公司删除了子域名但忘记更新其 DNS 记录。
- en: '**Scan.me Pointing to Zendesk**'
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Scan.me 指向 Zendesk**'
- en: '**Difficulty:** Low'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**难度：** 低'
- en: '**URL:** *http://support.scan.me/*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**URL：** *http://support.scan.me/*'
- en: '**Source:** *[https://hackerone.com/reports/114134/](https://hackerone.com/reports/114134/)*'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**来源：** *[https://hackerone.com/reports/114134/](https://hackerone.com/reports/114134/)*'
- en: '**Date reported:** February 2, 2016'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**报告日期：** 2016年2月2日'
- en: '**Bounty paid:** $1,000'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**赏金支付：** $1,000'
- en: The Zendesk platform offers customer support service on a website’s subdomain.
    For instance, if Example Company used Zendesk, its associated subdomain might
    be *support.<example>.com*.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Zendesk 平台在网站的子域名上提供客户支持服务。例如，如果 Example 公司使用 Zendesk，其相关的子域名可能是 *support.<example>.com*。
- en: Similar to the previous Ubiquiti example, owners of the site *scan.me* created
    a CNAME record pointing *support.scan.me* to *[scan.zendesk.com](http://scan.zendesk.com)*.
    Later, Snapchat acquired *scan.me*. Close to the time of acquisition, *support.scan.me*
    released the subdomain on Zendesk but forgot to delete the CNAME record. The hacker
    harry_mg found the subdomain, claimed *[scan.zendesk.com](http://scan.zendesk.com)*,
    and served his own content from Zendesk on it.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于之前的 Ubiquiti 示例，*scan.me* 网站的所有者创建了一个 CNAME 记录，将 *support.scan.me* 指向 *[scan.zendesk.com](http://scan.zendesk.com)*。后来，Snapchat
    收购了 *scan.me*。在收购时，*support.scan.me* 将子域名发布到 Zendesk，但忘记删除 CNAME 记录。黑客 harry_mg
    找到了这个子域名，声明了 *[scan.zendesk.com](http://scan.zendesk.com)*，并通过 Zendesk 在其上提供了自己的内容。
- en: '***Takeaways***'
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***要点***'
- en: Keep an eye out for company acquisitions that can change how a company provides
    services. As optimizations take place between the parent company and the acquisition,
    some subdomains might be deleted. Such changes could result in subdomain takeovers
    if companies don’t update DNS entries. Again, because subdomains can change at
    any time, it’s best to continually check records over time after a company announces
    an acquisition.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 关注公司收购情况，因为这可能会改变公司提供服务的方式。在母公司与收购公司之间进行优化时，一些子域可能会被删除。如果公司没有更新DNS记录，可能会导致子域接管。由于子域随时可能发生变化，最佳做法是在公司宣布收购后，持续检查记录。
- en: '**Shopify Windsor Subdomain Takeover**'
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Shopify Windsor子域接管**'
- en: '**Difficulty:** Low'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**难度：** 低'
- en: '**URL:** *http://windsor.shopify.com/*'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**网址：** *http://windsor.shopify.com/*'
- en: '**Source:** *[https://hackerone.com/reports/150374/](https://hackerone.com/reports/150374/)*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**来源：** *[https://hackerone.com/reports/150374/](https://hackerone.com/reports/150374/)*'
- en: '**Date reported:** July 10, 2016'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**报告日期：** 2016年7月10日'
- en: '**Bounty paid:** $500'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**赏金支付：**$500'
- en: Not all subdomain takeovers involve registering an account on a third-party
    service. In July 2016, the hacker zseano found that Shopify had created a CNAME
    for *windsor.shopify.com* that pointed to *aislingofwindsor.com*. He discovered
    this by searching for all Shopify subdomains on the site *[crt.sh](http://crt.sh)*,
    which tracks all SSL certificates registered by a site and the subdomains the
    certificates are associated with. This information is available because all SSL
    certificates must register with a certificate authority for browsers to confirm
    the certificate’s authenticity when you visit their sites. The site *[crt.sh](http://crt.sh)*
    tracks these registrations over time and makes the information available to visitors.
    Sites can also register wildcard certificates, which provide SSL protections to
    any subdomain of the site. On *[crt.sh](http://crt.sh)*, this is denoted by an
    asterisk in the place of the subdomain.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有子域接管都涉及在第三方服务上注册账户。2016年7月，黑客zseano发现Shopify为*windsor.shopify.com*创建了一个CNAME记录，指向*aislingofwindsor.com*。他通过在网站*[crt.sh](http://crt.sh)*上搜索所有Shopify的子域发现了这一点，*crt.sh*跟踪了所有由网站注册的SSL证书以及证书关联的子域。这些信息之所以能够公开，是因为所有SSL证书都必须向证书授权机构注册，以便浏览器在你访问网站时验证证书的真实性。*crt.sh*网站随时间跟踪这些注册，并将信息提供给访问者。网站还可以注册通配符证书，提供SSL保护给该网站的任何子域。在*[crt.sh](http://crt.sh)*上，这通过在子域位置放置一个星号表示。
- en: When a site registers a wildcard certificate, *[crt.sh](http://crt.sh)* can’t
    identify the subdomains where the certificate is used, but each certificate includes
    a unique hash value. Another site, *[censys.io](http://censys.io)*, tracks certificate
    hashes and the subdomains they’re used on by scanning the internet. Searching
    *[censys.io](http://censys.io)* for a wildcard certificate hash might allow you
    to identify new subdomains.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个网站注册通配符证书时，*crt.sh*(http://crt.sh)无法识别该证书使用的子域，但每个证书都包含一个唯一的哈希值。另一个网站*[censys.io](http://censys.io)*通过扫描互联网跟踪证书哈希值及其使用的子域。通过在*[censys.io](http://censys.io)*上搜索通配符证书哈希值，可能会帮助你识别新的子域。
- en: By browsing through the list of subdomains on *[crt.sh](http://crt.sh)* and
    visiting each, zseano noticed that *windsor.shopify.com* was returning a 404 page
    not found error. This meant Shopify was either serving no content from the subdomain
    or it no longer owned *aislingofwindsor.com*. Testing the latter, zseano visited
    a domain registration site, searched for *aislingofwindsor.com*, and found he
    could buy it for $10\. He did and reported the vulnerability to Shopify as a subdomain
    takeover.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 通过浏览*[crt.sh](http://crt.sh)*上的子域列表并访问每个子域，zseano注意到*windsor.shopify.com*返回了404页面未找到的错误。这意味着Shopify要么没有从该子域提供内容，要么它不再拥有*aislingofwindsor.com*。测试后者时，zseano访问了一个域名注册网站，搜索了*aislingofwindsor.com*，并发现可以以$10的价格购买该域名。他购买了该域名，并将这一漏洞报告给了Shopify，作为子域接管漏洞。
- en: '***Takeaways***'
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***要点总结***'
- en: Not all subdomains involve the use of third-party services. If you find a subdomain
    that is pointed to another domain and is returning a 404 page, check whether you
    can register that domain. The site *[crt.sh](http://crt.sh)* provides a great
    reference of SSL certificates registered by sites as an initial step to identifying
    subdomains. If wildcard certificates have been registered on *[crt.sh](http://crt.sh)*,
    search for the certificate hash on *[censys.io](http://censys.io)*.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有子域名都涉及使用第三方服务。如果你发现某个子域名指向另一个域名并返回404页面，请检查是否能够注册该域名。网站*[crt.sh](http://crt.sh)*提供了一个很好的参考，列出了通过网站注册的SSL证书，可以作为识别子域名的初步步骤。如果通配符证书已在*[crt.sh](http://crt.sh)*注册，可以在*[censys.io](http://censys.io)*上搜索证书哈希。
- en: '**Snapchat Fastly Takeover**'
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Snapchat 快速接管事件**'
- en: '**Difficulty:** Medium'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**难度：** 中等'
- en: '**URL:** *http://fastly.sc-cdn.net/takeover.html*'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**URL：** *http://fastly.sc-cdn.net/takeover.html*'
- en: '**Source:** *[https://hackerone.com/reports/154425/](https://hackerone.com/reports/154425/)*'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**来源：** *[https://hackerone.com/reports/154425/](https://hackerone.com/reports/154425/)*'
- en: '**Date reported:** July 27, 2016'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**报告日期：** 2016年7月27日'
- en: '**Bounty paid:** $3,000'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**悬赏金额：** $3,000'
- en: Fastly is a *content delivery network (CDN)*. A CDN stores copies of content
    on servers across the world so content can be delivered in a shorter time and
    distance for users requesting it.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Fastly是一个*内容分发网络（CDN）*。CDN将内容的副本存储在全球各地的服务器上，这样可以为请求内容的用户提供更短的传输时间和距离。
- en: 'On July 27, 2016, the hacker Ebrietas reported to Snapchat that it had a DNS
    misconfiguration on its domain *sc-cdn.net*. The URL *http://fastly.sc-cdn.net*
    had a CNAME record that pointed to a Fastly subdomain that Snapchat had not properly
    claimed. At the time, Fastly allowed users to register custom subdomains if users
    were encrypting their traffic with Transport Layer Security (TLS) and using the
    Fastly shared wildcard certificate to do so. Misconfiguring the custom subdomain
    resulted in an error message on the domain that read “Fastly error: unknown domain:
    *<misconfigured domain>*. Please check that this domain has been added to a service.”'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 2016年7月27日，黑客Ebrietas向Snapchat报告称，其域名*sc-cdn.net*存在DNS配置错误。URL *http://fastly.sc-cdn.net*
    有一个CNAME记录，指向一个Snapchat没有正确声明的Fastly子域名。当时，Fastly允许用户在加密其流量并使用Fastly共享的通配符证书时，注册自定义子域名。错误配置自定义子域名会导致该域名出现错误信息，显示“Fastly错误：未知域名：*<misconfigured
    domain>*。请检查此域名是否已添加到服务中。”
- en: Before reporting the bug, Ebrietas looked up the domain *sc-cdn.net* on *[censys.io](http://censys.io)*
    and confirmed Snapchat’s ownership of the domain by using the registration information
    on the domain’s SSL certificate. This is significant because the domain *sc-cdn.net*
    doesn’t explicitly include any identifying information about Snapchat the way
    *[snapchat.com](http://snapchat.com)* does. He also configured a server to receive
    traffic from the URL to confirm the domain was actually in use.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在报告该漏洞之前，Ebrietas在*[censys.io](http://censys.io)*上查找了域名*sc-cdn.net*，并通过该域名SSL证书的注册信息确认了Snapchat对该域名的所有权。这一点很重要，因为域名*sc-cdn.net*并没有像*[snapchat.com](http://snapchat.com)*那样明确包含Snapchat的任何标识信息。他还配置了一个服务器来接收来自该URL的流量，以确认该域名确实在使用中。
- en: When resolving the report, Snapchat confirmed that a very small subset of users
    were using an old version of their app, which made requests to this subdomain
    for unauthenticated content. The users’ configuration was later refreshed and
    pointed to another URL. In theory, an attacker could have served malicious files
    to users for that limited amount of time through the subdomain.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在解决报告时，Snapchat确认，只有极少数用户使用了旧版本的应用程序，这些用户会向该子域名请求未认证的内容。随后，这些用户的配置被更新，并指向了另一个URL。理论上，攻击者可能在该短暂时间内通过该子域名向用户提供恶意文件。
- en: '***Takeaways***'
  id: totrans-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***要点总结***'
- en: Be on the lookout for sites pointing to services that return error messages.
    When you find an error, confirm how those services are used by reading their documentation.
    Then check whether you can find misconfigurations that allow you to take over
    the subdomain. Additionally, always go the extra steps to confirm what you think
    are vulnerabilities. In this case, Ebrietas looked up the SSL certificate information
    to confirm that Snapchat owned the domain before reporting. Then he configured
    his server to receive requests, making sure Snapchat was using the domain.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 注意观察指向返回错误消息的服务的网站。当你发现错误时，通过阅读它们的文档确认这些服务是如何使用的。然后检查你是否能找到 misconfigurations（配置错误），从而能够接管子域名。此外，始终做额外的确认步骤，以验证你认为是漏洞的部分。在这种情况下，Ebrietas
    查找了 SSL 证书信息，确认 Snapchat 拥有该域名，然后报告。在此之后，他配置了自己的服务器来接收请求，确保 Snapchat 使用该域名。
- en: '**Legal Robot Takeover**'
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Legal Robot 接管**'
- en: '**Difficulty:** Medium'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**难度：** 中等'
- en: '**URL:** *https://api.legalrobot.com/*'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**网址：** *https://api.legalrobot.com/*'
- en: '**Source:** *[https://hackerone.com/reports/148770/](https://hackerone.com/reports/148770/)*'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**来源：** *[https://hackerone.com/reports/148770/](https://hackerone.com/reports/148770/)*'
- en: '**Date reported:** July 1, 2016'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**报告日期：** 2016年7月1日'
- en: '**Bounty paid:** $100'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**支付赏金：** $100'
- en: Even when sites configure their subdomains correctly on third-party services,
    those services may themselves be vulnerable to misconfigurations. This is what
    Frans Rosen found on July 1, 2016, when he submitted a report to Legal Robot.
    He notified the company that he had a DNS CNAME entry for *api.legalrobot.com*
    pointing to *[Modulus.io](http://Modulus.io)*, which he could take over.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 即使网站在第三方服务上正确配置了其子域名，这些服务本身也可能存在配置错误的漏洞。这正是 Frans Rosen 在 2016 年 7 月 1 日发现的，当时他向
    Legal Robot 提交了一份报告。他通知公司，他有一个指向 *[Modulus.io](http://Modulus.io)* 的 *api.legalrobot.com*
    的 DNS CNAME 记录，而他能够接管这个子域名。
- en: As you likely recognize by now, after seeing such an error page, a hacker’s
    next step should be to visit the service to claim the subdomain. But attempting
    to claim *api.legalrobot.com* resulted in an error because Legal Robot had already
    claimed it.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你现在可能已经意识到的，看到这样的错误页面后，黑客的下一步应该是访问该服务以声明子域名。但是，尝试声明 *api.legalrobot.com* 时发生了错误，因为
    Legal Robot 已经声明了该域名。
- en: Instead of walking away, Rosen tried to claim the wildcard subdomain for Legal
    Robot, **.legalrobot.com*, which was available. Modulus’s configuration allowed
    for wildcard subdomains to override more specific subdomains, which included *api.legalrobot.com*
    in this case. After claiming the wildcard domain, Rosen was able to host his own
    content at *api.legalrobot.com*, as shown in [Figure 14-1](ch14.xhtml#ch14fig01).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Rosen 没有放弃，而是尝试为 Legal Robot 声明通配符子域名 **.legalrobot.com**，该子域名可用。Modulus 的配置允许通配符子域名覆盖更具体的子域名，在这种情况下包括
    *api.legalrobot.com*。在声明了通配符域名之后，Rosen 能够在 *api.legalrobot.com* 上托管自己的内容，如[图 14-1](ch14.xhtml#ch14fig01)所示。
- en: '![image](../images/14fig01.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/14fig01.jpg)'
- en: '*Figure 14-1: HTML page source provided as a proof of concept for the subdomain
    takeover claimed by Frans Rosen*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 14-1：HTML 页面源代码，作为 Frans Rosen 声称的子域名接管的概念验证*'
- en: Note the content Rosen hosted in [Figure 14-1](ch14.xhtml#ch14fig01). Rather
    than publishing an embarrassing page stating the subdomain had been taken over,
    he used a nonintrusive text page with an HTML comment verifying that he was responsible
    for the content.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意 Rosen 在[图 14-1](ch14.xhtml#ch14fig01)中托管的内容。与发布一页尴尬的页面声明子域名已被接管不同，他使用了一页非侵入性的文本页面，并通过
    HTML 注释确认他对该内容负责。
- en: '***Takeaways***'
  id: totrans-75
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***要点***'
- en: When sites rely on third-party services to host a subdomain, they’re relying
    on the security of that service as well. In this case, Legal Robot thought it
    had properly claimed its subdomain on Modulus when in fact the service had a vulnerability
    that allowed wildcard subdomains to override all other subdomains. Also keep in
    mind that if you’re able to claim a subdomain, it’s best to use a nonintrusive
    proof of concept to avoid embarrassing the company you’re reporting to.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当网站依赖第三方服务来托管子域名时，他们也在依赖该服务的安全性。在这种情况下，Legal Robot 认为它已正确地在 Modulus 上声明了其子域名，但实际上该服务存在一个漏洞，允许通配符子域名覆盖所有其他子域名。还需要记住的是，如果你能够声明一个子域名，最好使用非侵入性的概念验证方式，以避免让你报告的公司感到尴尬。
- en: '**Uber SendGrid Mail Takeover**'
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Uber SendGrid 邮件接管**'
- en: '**Difficulty:** Medium'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**难度：** 中等'
- en: '**URL:** *https://em.uber.com/*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**网址：** *https://em.uber.com/*'
- en: '**Source:** *[https://hackerone.com/reports/156536/](https://hackerone.com/reports/156536/)*'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**来源：** *[https://hackerone.com/reports/156536/](https://hackerone.com/reports/156536/)*'
- en: '**Date reported:** August 4, 2016'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**报告日期：** 2016年8月4日'
- en: '**Bounty paid:** $10,000'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**支付赏金：** $10,000'
- en: SendGrid is a cloud-based email service. At the time of this writing, Uber was
    one of its customers. As the hacker Rojan Rijal was reviewing Uber’s DNS records,
    he noticed a CNAME record for *em.uber.com* pointing to SendGrid.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: SendGrid 是一项基于云的电子邮件服务。在撰写本文时，Uber 是其客户之一。当黑客 Rojan Rijal 审查 Uber 的 DNS 记录时，他注意到
    *em.uber.com* 的 CNAME 记录指向 SendGrid。
- en: Because Uber had a SendGrid CNAME, Rijal decided to poke around the service
    to confirm how Uber was configured. His first step was to confirm the services
    provided by SendGrid and whether it allowed for content hosting. It didn’t. Digging
    into the SendGrid documentation, Rijal came across a different option called white
    labeling. White labeling is a functionality that allows internet service providers
    to confirm that SendGrid has a domain’s permission to send an email on the domain’s
    behalf. This permission is granted by creating *mail exchanger (MX)*, records
    for a site that points to SendGrid. An MX record is a type of DNS record that
    specifies a mail server responsible for sending and receiving email on behalf
    of a domain. Recipient email servers and services query DNS servers for these
    records to verify an email’s authenticity and to prevent spam.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 Uber 有一个 SendGrid CNAME，Rijal 决定深入了解该服务，确认 Uber 是如何配置的。他的第一步是确认 SendGrid
    提供的服务以及是否允许内容托管。结果并不允许。深入查看 SendGrid 的文档后，Rijal 发现了一个名为白标（white labeling）的选项。白标是一种功能，允许互联网服务提供商确认
    SendGrid 已获得某个域名的许可，代表该域名发送电子邮件。这种许可是通过为指向 SendGrid 的站点创建 *邮件交换器 (MX)* 记录来授予的。MX
    记录是一种 DNS 记录，指定一个负责代表域名发送和接收电子邮件的邮件服务器。接收方邮件服务器和服务会查询 DNS 服务器获取这些记录，以验证邮件的真实性并防止垃圾邮件。
- en: 'The white labeling functionality caught Rijal’s eye because it involved trusting
    a third-party service provider to manage an Uber subdomain. When Rijal reviewed
    the DNS entries for *em.uber.com*, he confirmed that an MX record was pointing
    to *mx.sendgrid.net*. But only site owners can create DNS records (assuming there’s
    no other vulnerability to abuse), so Rijal couldn’t modify Uber’s MX records directly
    to takeover the subdomain. Instead, he turned to SendGrid’s documentation, which
    described another service called Inbound Parse Webhook. This service allows customers
    to parse attachments and contents of incoming emails, then send the attachments
    to a specified URL. To use the functionality, sites need to:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 白标功能引起了 Rijal 的注意，因为它涉及到信任一个第三方服务提供商来管理 Uber 的子域名。当 Rijal 审查 *em.uber.com* 的
    DNS 记录时，他确认一个 MX 记录指向 *mx.sendgrid.net*。但只有站点所有者才能创建 DNS 记录（假设没有其他漏洞可被利用），因此 Rijal
    无法直接修改 Uber 的 MX 记录来接管该子域名。于是，他转向了 SendGrid 的文档，其中描述了另一个名为 Inbound Parse Webhook
    的服务。该服务允许客户解析传入邮件的附件和内容，然后将附件发送到指定的 URL。要使用该功能，站点需要：
- en: Create an MX record of a domain/hostname or subdomain and point it to *mx.sendgrid.net*.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个域名/主机名或子域名的 MX 记录，并将其指向 *mx.sendgrid.net*。
- en: Associate the domain/hostname and a URL in the parse API settings page with
    the Inbound Parse Webhook.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将域名/主机名和解析 API 设置页面中的 URL 与 Inbound Parse Webhook 关联。
- en: Bingo. Rijal already confirmed that the MX record existed, but Uber hadn’t set
    up the second step. Uber hadn’t claimed the *em.uber.com* subdomain as an Inbound
    Parse Webhook. Rijal claimed the domain as his own and set up a server to receive
    the data sent by the SendGrid parse API. After confirming he could receive emails,
    he stopped intercepting them and reported the issue to Uber and SendGrid. As part
    of the fix, SendGrid confirmed that it had added an additional security check,
    requiring accounts to verify their domain before allowing an Inbound Parse Webhook.
    As a result, the security check should protect other sites from a similar exploit.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 成功了。Rijal 已经确认 MX 记录存在，但 Uber 没有完成第二步。Uber 没有将 *em.uber.com* 子域名注册为 Inbound
    Parse Webhook。Rijal 将该域名注册为自己的，并设置了一个服务器来接收 SendGrid 解析 API 发送的数据。在确认他可以接收到邮件后，他停止拦截这些邮件并将问题报告给了
    Uber 和 SendGrid。作为修复的一部分，SendGrid 确认它已增加了额外的安全检查，要求帐户在允许 Inbound Parse Webhook
    之前验证其域名。因此，这项安全检查应该能保护其他网站免受类似的漏洞利用。
- en: '***Takeaways***'
  id: totrans-89
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***总结***'
- en: This report demonstrates how valuable third-party documentation can be. By reading
    the developer documentation, learning what services SendGrid provides, and identifying
    how those services are configured, Rijal found a vulnerability in the third-party
    service that impacted Uber. It’s incredibly important to explore all functionality
    that third-party services offer when a target site is using their services. EdOverflow
    maintains a list of vulnerable services, which you can find at *[https://github.com/EdOverflow/can-i-take-over-xyz/](https://github.com/EdOverflow/can-i-take-over-xyz/)*.
    But even if his list identifies a service as protected, be sure to double check
    or look for alternative methods, like Rijal did.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 本报告展示了第三方文档的价值。通过阅读开发者文档，了解 SendGrid 提供的服务，并识别这些服务的配置方式，Rijal 找到了影响 Uber 的第三方服务漏洞。当目标网站使用第三方服务时，深入探索这些服务提供的所有功能至关重要。EdOverflow
    维护着一个脆弱服务的列表，你可以在 *[https://github.com/EdOverflow/can-i-take-over-xyz/](https://github.com/EdOverflow/can-i-take-over-xyz/)*
    找到这个列表。但即使他的列表标识某个服务为受保护的，也要确保再三检查，或像 Rijal 一样寻找替代方法。
- en: '**Summary**'
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: Subdomain takeovers can simply be caused by a site with an unclaimed DNS entry
    pointing to a third-party service. Examples in this chapter include Heroku, Fastly,
    S3, Zendesk, SendGrid, and unregistered domains, but other services are also vulnerable
    to this type of bug. You can find these vulnerabilities using tools like KnockPy,
    *[crt.sh](http://crt.sh)*, and *[censys.io](http://censys.io)* as well as other
    tools in [Appendix A](app01.xhtml#app01).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 子域名接管通常是由一个未被认领的 DNS 记录指向第三方服务导致的。本章中的例子包括 Heroku、Fastly、S3、Zendesk、SendGrid
    以及未注册的域名，但其他服务也可能受到此类漏洞的影响。你可以使用像 KnockPy、*[crt.sh](http://crt.sh)* 和 *[censys.io](http://censys.io)*
    这样的工具，以及 [附录 A](app01.xhtml#app01) 中的其他工具，来发现这些漏洞。
- en: Managing a takeover might require additional ingenuity, such as when Rosen claimed
    a wildcard domain and Rijal registered a custom webhook. When you’ve found a potential
    vulnerability, but the basic methods to exploit it don’t work, be sure to read
    the service documentation. Additionally, explore all functionality offered regardless
    of whether the target site is using it or not. When you do find a takeover, be
    sure to provide proof of the vulnerability, but do so in a respectful and unobtrusive
    way.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 管理接管可能需要额外的创意，比如当 Rosen 声明了一个通配符域名，而 Rijal 注册了一个自定义 webhook 时。当你发现一个潜在漏洞，但基本的利用方法不起作用时，一定要阅读服务文档。此外，不论目标网站是否正在使用某项功能，都要探索该服务提供的所有功能。当你确实找到一个接管漏洞时，确保提供漏洞的证据，但要以尊重和不打扰的方式进行。
