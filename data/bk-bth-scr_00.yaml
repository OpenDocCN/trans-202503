- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: INTRODUCTION
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: '![](../images/chapter.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/chapter.jpg)'
- en: A book about bat files? Why? Didn’t the Aztecs use Batch? Isn’t it the Betamax
    of scripting languages? You should be writing a book about a newer, sexier coding
    language instead of a Model T repair manual.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一本关于 bat 文件的书？为什么？难道阿兹特克人也用过 Batch 吗？它不是脚本语言中的 Betamax 吗？你应该写一本关于更新、更有吸引力的编程语言的书，而不是一本
    Model T 的维修手册。
- en: I wish that I could dismiss out of hand such protestations as simply the negativism
    of nattering nabobs, but this is a sentiment I feel compelled to address. Batch
    isn’t new, and the lack of some functionality is mystifying by today’s standards,
    but it’s still an immensely useful language that isn’t going away anytime soon,
    especially since it’s being packaged with the operating system installed on every
    Windows computer. While Batch is one scripting language among many, there are
    still many lines of Batch code being supported by large and small companies, and
    some tasks truly lend themselves to bat files more than any other language. And
    as for that lacking functionality—booleans, arrays, hash tables, stacks, even
    object-oriented design, and more—I’ll show you how to build it yourselves by the
    end of this book.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望我能直接忽略这种抗议，将其视为啰嗦小人的消极言论，但这是一个我感到必须回应的观点。Batch 语言并不新颖，按照今天的标准来看，它缺乏一些功能让人费解，但它依然是一个极为有用的语言，短期内不会消失，尤其是它已经与每台
    Windows 电脑上的操作系统捆绑在一起。虽然 Batch 只是众多脚本语言中的一种，但仍然有许多大型和小型公司在使用 Batch 代码，有些任务确实比任何其他语言更适合用
    bat 文件来完成。至于那些缺失的功能——布尔值、数组、哈希表、栈，甚至面向对象设计等等——在本书的结尾，我会教你如何自己构建这些功能。
- en: But the most immediate reason for me personally to write a book about Batch
    scripting is that after two decades of writing bat files for personal and professional
    use, I believe that I’ve gotten to a place where I’ve learned enough about the
    topic to share my experiences and insights with a larger community. For many moons,
    I coded at a company that ran large-scale processes on Windows servers, all of
    them driven by bat files. Others might have gone with a more modern scripting
    language, but a coder who preceded me had mastered the art of bat files to such
    an extent that an alternative to Batch was never seriously considered. I played
    the understudy role of Robin until his retirement, when I was unofficially elevated
    to Batman.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 但我个人写一本关于 Batch 脚本的书的最直接原因是，经过二十年的个人和职业用途的 bat 文件编写，我相信自己已经在这个领域学到了足够的知识，能够与更广泛的社区分享我的经验和见解。在很多年里，我在一家公司为
    Windows 服务器编写大规模处理程序，所有的程序都由 bat 文件驱动。其他人可能会选择更现代的脚本语言，但在我之前的那位程序员已经精通了 bat 文件的艺术，以至于没有人认真考虑过使用
    Batch 之外的替代方案。直到他退休，我才在非正式的情况下接替了他的工作，扮演起了罗宾的角色，直到后来我被正式晋升为蝙蝠侠。
- en: Writing Batch code is still an important skill for any coder and even noncoders,
    but much of the existing documentation is sparse, scattered, and sometimes inaccurate.
    More so than in other languages, a great deal of experience and experimentation
    is required to gain proficiency, and I have a unique perspective to share. That’s
    why I wrote this book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 编写 Batch 代码仍然是任何程序员甚至非程序员的重要技能，但现有的文档往往稀缺、分散，甚至有时不准确。与其他语言相比，掌握 Batch 语言需要大量的经验和实验，而我有一个独特的视角可以分享。这就是我写这本书的原因。
- en: This Book’s Audience
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书的读者群体
- en: This book is not for beginners, nor is it for experts; it’s for *both*. I actually
    hope to reach three groups of people. The first is coders who write, maintain,
    or otherwise work with bat files on a near daily basis. The second is all other
    coders who work on a Windows machine, and the third is noncoders who also work
    on a Windows computer.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书既不是为初学者写的，也不是为专家写的；它是为*两者*而写的。实际上，我希望能够接触到三个群体。第一个是那些几乎每天都在编写、维护或与 bat 文件打交道的程序员。第二个是所有在
    Windows 机器上工作的其他程序员，第三个是那些也在 Windows 电脑上工作的非程序员。
- en: The first group, those working closely with Batch, are on the list for obvious
    reasons. This book is the culmination of two decades of my intense and immersive
    work in Batch scripting. By the end of this book, you’ll have explored several
    complex concepts, such as creating commands, data structures, operators, and even
    a coding paradigm that weren’t envisioned by the language’s creators. I’ll work
    steadily up to that complexity, but I hope that in these pages you’ll find everything
    you need to master the language and the tools to further explore what little isn’t
    here.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类人群，那些与 Batch 密切合作的人，显然也在本书的读者范围内。这本书是我在 Batch 脚本领域二十年深入工作的结晶。到本书的最后，你将会探索到一些复杂的概念，比如创建命令、数据结构、运算符，甚至是语言的创造者未曾预见的编码范式。我将逐步讲解这些复杂的内容，但我希望在这些页面中，你能找到掌握这门语言以及进一步探索其未涉及部分所需的所有工具。
- en: If you’re in the second group, you likely don’t maintain thousands of lines
    of Batch code, but on a Windows computer you write code in other languages, and
    you should be at least moderately versed in Batch. This skill allows you to perform
    some common and repetitive tasks by running a simple (or maybe not so simple)
    bat file. Animating code written in other languages has its challenges, one of
    which is that your machine’s environment is different from the eventual production
    environment where the program will execute. To this end, I’ll show you how to
    mimic or simulate another computer’s environment with a few lines of Batch code.
    By the end of this book, I’m sure that you’ll find that a bat file is a solution
    for many issues.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你属于第二类人群，你可能不会维护成千上万行的 Batch 代码，但在 Windows 电脑上，你会用其他语言编写代码，并且你至少应该对 Batch
    有一定的了解。这项技能让你可以通过运行一个简单的（或者可能不太简单的）bat 文件，完成一些常见且重复的任务。用其他语言编写的代码在动画化时会面临一些挑战，其中之一就是你的机器环境与程序最终运行的生产环境不同。为此，我将向你展示如何用几行
    Batch 代码模拟或模拟另一个计算机的环境。到本书的最后，我相信你会发现，bat 文件是许多问题的解决方案。
- en: Even noncoders, the final group, can benefit from some Batch code to minimize
    repetitive tasks such as moving files, merging reports, or connecting to network
    drives to make Windows Explorer easier to use. Since coding isn’t in your job
    description, your employer is unlikely to load the infrastructure for other coding
    languages onto your computer so that you can perform relatively simple coding
    tasks, but everything you need to write and execute a bat file is already on your
    workstation. The skill set needed to write a bat file is the ability to create
    a text file, rename it, and type a few lines into it. And if you can double-click
    a file, you can run a bat file. That’s all you’ll need (other than this book).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是非程序员，最后这一类人，也能通过一些 Batch 代码来简化重复性任务，比如移动文件、合并报告或连接到网络驱动器，从而使 Windows 资源管理器更易使用。由于编程不在你的工作职责范围内，你的雇主不太可能为你的计算机安装其他编程语言的基础设施，来让你完成相对简单的编码任务，但你所需要的编写和执行
    bat 文件的工具已经在你的工作站上了。编写 bat 文件所需的技能就是能够创建文本文件、重命名文件，并向文件中输入几行内容。如果你能双击文件，你就能运行
    bat 文件。这就是你所需要的一切（除了这本书）。
- en: How to Read This Book
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何阅读本书
- en: Every author, regardless of the genre, envisions their readers sitting by a
    fire, sipping sherry (or for me a good barleywine, not too sweet), hanging on
    every word, reading, processing, and reading some more until the book is complete.
    Well ... this is a technical book, so a significant subset of my readers will
    be coders sitting in front of a computer trying to figure out why their damn bat
    file isn’t doing what they want it to do. I’ve been there and fully appreciate
    the dilemma, and to aid you, I’ve organized this book with headings, subheadings,
    a detailed table of contents, and an index. You can find the section and page
    that will answer your question, and you can jump right to it, but that isn’t the
    ideal way to read this or any book.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 每个作者，无论哪种类型的作品，都会设想读者坐在火旁，品着雪利酒（或者对我来说是一杯好的麦芽酒，不要太甜），全神贯注地读着每一个字，阅读、理解，再继续阅读，直到书本结束。嗯……这是一本技术书籍，所以我的读者中有相当一部分是程序员，他们坐在电脑前，试图弄明白为什么他们的
    bat 文件没有按预期运行。我曾经也经历过这种困境，深刻理解其中的难处，为了帮助你，我将这本书组织成了有标题、子标题、详细的目录和索引。你可以找到能解答问题的章节和页码，并直接跳到那一部分，但这并不是阅读这本书或任何一本书的理想方式。
- en: I’ve structured this book into short and concise chapters. Even if you’re trying
    to solve a particular problem, I recommend reading the pertinent chapter in its
    entirety, because each one is a bit like a lesson plan. (My day job is coding,
    but I am trained as a mathematician and have spent more than two decades teaching
    various math classes at Manchester Community College in Connecticut.)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我将本书结构设计为简短而简洁的章节。即使你只是想解决某个特定问题，我也建议你通读相关章节，因为每一章都像是一份课程计划。（我的日常工作是编码，但我受过数学训练，已经在康涅狄格州曼彻斯特社区学院教授了二十多年的数学课程。）
- en: A typical lesson starts with the basic concept, followed by some simple examples.
    Then I delve into the complexity of the topic, show uses for the concept, and
    even explain typical stumbling blocks to avoid. Not every lesson (or chapter)
    follows that arc, but many do. If you have a question about, say, how to copy
    a file, I recommend reading [Chapter 7](chapter7.xhtml) from beginning to end.
    Skipping to the middle of the chapter is analogous to coming into class 20 minutes
    late.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一堂典型的课程从基本概念开始，接着是一些简单的示例。然后我会深入探讨该主题的复杂性，展示该概念的应用，甚至解释常见的陷阱和避免的错误。并不是每一课（或每一章）都会遵循这个结构，但很多都会。如果你有关于如何复制文件的疑问，我建议你从头到尾阅读[第7章](chapter7.xhtml)。跳到章节中间就像是上课迟到
    20 分钟。
- en: I also recommend executing on your own some of the coding examples that I present.
    Most of the code snippets are quite short and easy to type in, and you can grab
    the longer ones from the online version of this book. Better yet, modify the code,
    explore the results, and make it your own.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我还建议你亲自执行一些我提供的编码示例。大部分代码片段都很短且容易输入，你可以从本书的在线版本中获取较长的代码。更好的做法是修改代码，探索其结果，并将其变成你自己的代码。
- en: How This Book Is Structured
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书结构
- en: 'Batch is unique in that one single command, the for command, predominates all
    others to a massive extent, and I’ve organized this book into three parts, centered
    around that all-important command. [Part I](part1.xhtml) is titled “The Essentials,”
    and it deals with the topics you’ll need leading up to the discussion of the for
    command. The first part includes these chapters:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Batch 的独特之处在于一个单一的命令——for 命令，远远超过其他命令，支配了整个 Batch 脚本语言。因此，我将本书分为三部分，围绕这个至关重要的命令进行组织。[第一部分](part1.xhtml)标题为“基础知识”，涵盖了你在学习
    for 命令之前需要掌握的相关内容。第一部分包括以下章节：
- en: '**[Chapter 1](chapter1.xhtml): Batch**    This chapter introduces you to the
    Batch scripting language as you build what may be your first-ever bat file. I
    include editing tips, and since Batch is an interpreted language, I discuss the
    role and importance of the interpreter.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第1章](chapter1.xhtml)：Batch**    本章将向你介绍 Batch 脚本语言，同时帮助你编写可能是你第一次编写的 bat
    文件。我还会提供一些编辑技巧，由于 Batch 是一种解释型语言，我还会讨论解释器的角色和重要性。'
- en: '**[Chapter 2](chapter2.xhtml): Variables and Values**    This chapter is about
    defining variables and interrogating their values either for display to the console
    or for any other use.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第2章](chapter2.xhtml)：变量与值**    本章讲解如何定义变量，并查询其值，无论是显示到控制台还是用于其他目的。'
- en: '**[Chapter 3](chapter3.xhtml): Scope and Delayed Expansion**    After you learn
    how to define where variables can be accessed in a bat file, I’ll introduce one
    of the most intriguing features of Batch, delayed expansion, which impacts how
    you resolve variables.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第3章](chapter3.xhtml)：作用域与延迟扩展**    在学习如何定义变量在 bat 文件中的访问范围后，我将介绍 Batch 中最有趣的特性之一——延迟扩展，它影响如何解析变量。'
- en: '**[Chapter 4](chapter4.xhtml): Conditional Execution**    The if...else construct
    is a basic feature of most languages, and Batch is no different. You’ll learn
    how to execute or not execute certain bits of code based on various conditional
    clauses.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第4章](chapter4.xhtml)：条件执行**    if...else 语句是大多数编程语言中的基本结构，Batch 也不例外。在本章中，你将学习如何根据不同的条件语句执行或跳过代码片段。'
- en: '**[Chapter 5](chapter5.xhtml): String and Boolean Data Types**    This chapter
    tackles the tasks of building and concatenating strings, extracting a substring
    from a larger string, and replacing certain text in a string. I also introduce
    the first of many tools not intrinsic to Batch that we’ll build, namely, booleans
    or variables that evaluate to either true or false.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第5章](chapter5.xhtml)：字符串与布尔数据类型**    本章讲解构建和连接字符串，提取更大字符串中的子字符串，以及在字符串中替换特定文本的任务。我还将介绍我们将要构建的许多非
    Batch 内建工具中的第一个——布尔值或评估为真或假的变量。'
- en: '**[Chapter 6](chapter6.xhtml): Integer and Float Data Types**    You’ll learn
    all the intricacies of adding, subtracting, multiplying, and dividing integers.
    This chapter also details modulo division as well as octal and hexadecimal arithmetic.
    I then delve into another data type not intrinsic to Batch: floating-point numbers.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第6章](chapter6.xhtml): 整数与浮点数据类型**    你将学习加法、减法、乘法和除法等整数操作的所有细节。本章还详细介绍了取余运算，以及八进制和十六进制的算术运算。然后我将深入探讨另一种在批处理语言中并非固有的数据类型：浮点数。'
- en: '**[Chapter 7](chapter7.xhtml): Working with Files**    This chapter handles
    many of the tasks concerning files, such as copying, moving, deleting, and renaming
    them, and even creating an empty file.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第7章](chapter7.xhtml): 与文件的操作**    本章处理与文件相关的许多任务，如复制、移动、删除、重命名文件，甚至创建一个空文件。'
- en: '**[Chapter 8](chapter8.xhtml): Executing Compiled Programs**    This chapter
    explores how to call a program with and without a defined path and, in particular,
    how the interpreter finds your program when you don’t provide a path.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第8章](chapter8.xhtml): 执行编译后的程序**    本章探讨了如何在有路径和没有路径的情况下调用程序，特别是当你没有提供路径时，解释器是如何找到你的程序的。'
- en: '**[Chapter 9](chapter9.xhtml): Labels and Nonsequential Execution**    This
    chapter introduces labels and the role they play in allowing you to direct the
    code’s execution to prior or later commands in a bat file, sometimes even initiating
    a loop.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第9章](chapter9.xhtml): 标签与非顺序执行**    本章介绍了标签以及它们在允许你将代码执行转向批处理文件中的前后命令中所起的作用，有时甚至会启动一个循环。'
- en: '**[Chapter 10](chapter10.xhtml): Calling Routines and Bat Files**    Expanding
    on the previous chapter, you’ll learn all that’s involved in creating callable
    routines within a bat file and how to invoke one bat file from another.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第10章](chapter10.xhtml): 调用例程和批处理文件**    在上一章的基础上，你将学习在批处理文件中创建可调用例程的所有内容，以及如何从另一个批处理文件中调用一个批处理文件。'
- en: '**[Chapter 11](chapter11.xhtml): Parameters and Arguments**    Invoking other
    code is often of little use if you can’t pass arguments to the called code and
    it can’t pass parameters back to you. This chapter delves into all the intricacies
    of the process, even unearthing the hidden parameter.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第11章](chapter11.xhtml): 参数与参数值**    如果你不能将参数传递给被调用的代码，或者被调用的代码不能将参数值返回给你，那么调用其他代码往往毫无意义。本章深入探讨了这一过程的所有细节，甚至揭示了隐藏的参数。'
- en: '**[Chapter 12](chapter12.xhtml): Outputs, Redirection, and Piping**    After
    differentiating between outputs created by the coder and the interpreter, I discuss
    how to redirect both to either the console or a file, which leads nicely to the
    technique of piping the output of one command into another and its uses.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第12章](chapter12.xhtml): 输出、重定向与管道**    在区分了程序员和解释器所产生的输出后，我讨论了如何将这两者重定向到控制台或文件，这自然引出了将一个命令的输出传递给另一个命令的管道技术及其应用。'
- en: '**[Chapter 13](chapter13.xhtml): Working with Directories**    This chapter
    details how to create and delete directories and how to retrieve a great deal
    of information about a directory and its contents. I also demonstrate techniques
    for mapping local and network directories to drive letters.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第13章](chapter13.xhtml): 与目录的操作**    本章详细介绍了如何创建和删除目录，以及如何检索有关目录及其内容的大量信息。我还演示了将本地和网络目录映射到驱动器字母的技术。'
- en: '**[Chapter 14](chapter14.xhtml): Escaping**    If you want to use a certain
    character in a string, you’ll run into issues if it’s a special character having
    some defined function in Batch. This chapter details the sometimes surprisingly
    involved solutions to that problem.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第14章](chapter14.xhtml): 转义**    如果你想在字符串中使用某个字符，而这个字符在批处理（Batch）中是一个具有特定功能的特殊字符，你会遇到问题。本章详细介绍了针对这一问题的解决方案，有时这些解决方案可能会出乎意料地复杂。'
- en: '**[Chapter 15](chapter15.xhtml): Interactive Batch**    In this chapter you’ll
    build a fully functional Batch user interface that accepts freeform text from
    the console and allows the user to select one item from a list, among other features.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第15章](chapter15.xhtml): 交互式批处理**    在本章中，你将构建一个功能完整的批处理用户界面，允许从控制台接受自由格式文本，并让用户从列表中选择一个项目，除此之外还有其他功能。'
- en: '**[Chapter 16](chapter16.xhtml): Code Blocks**    Code blocks are more than
    just blocks of code. This chapter explores how and why variables in a code block
    can possess two distinct values. I’ll even introduce the naked code block and
    explain its significance.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第16章](chapter16.xhtml): 代码块**    代码块不仅仅是代码的块。本章探讨了代码块中的变量为何以及如何能够拥有两个不同的值。我还将介绍裸代码块，并解释它的意义。'
- en: '[Part II](part2.xhtml) is simply titled “The for Command,” and as its name
    more than suggests, it explores the aforementioned for command, which opens up
    a large batch (pun intended) of functionality. You’ll find these topics:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二部分](part2.xhtml)的标题为“`for`命令”，正如其名称所暗示的，这部分内容深入探讨了前面提到的`for`命令，它为你提供了一大批（双关含义）功能。你将在这里找到以下内容：'
- en: '**[Chapter 17](chapter17.xhtml): Fundamentals of the for Command**    This
    chapter details the functionality of the for command without introducing any of
    its options, which is still highly impressive. It creates loops processing any
    number of input files or text strings, and with the use of modifiers, you’ll be
    able to determine almost everything about a file, other than its contents.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第十七章](chapter17.xhtml)：`for`命令的基础**    本章详细介绍了`for`命令的功能，未引入任何选项，但仍然非常强大。它可以创建处理任意数量输入文件或文本字符串的循环，并通过使用修饰符，你将能够确定关于文件的几乎所有信息，除了文件内容。'
- en: '**[Chapter 18](chapter18.xhtml): Directories, Recursion, and Iterative Loops**    This
    chapter explores some options of the for command that allow for even more functionality.
    With one option, the command enumerates through a list of directories instead
    of filenames. With another, you can recursively process through directories and
    subdirectories, for instance, searching a folder and all of its subfolders for
    a file fitting a mask. Another option turns the command into an iterative loop,
    incrementing or decrementing an index with every pass.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第十八章](chapter18.xhtml)：目录、递归和迭代循环**    本章探讨了`for`命令的一些选项，这些选项提供了更多的功能。使用其中一个选项，命令可以遍历一个目录列表，而不是文件名列表。使用另一个选项，你可以递归地处理目录和子目录，例如，在一个文件夹及其所有子文件夹中搜索符合特定模式的文件。还有一个选项将命令转换为一个迭代循环，每次执行时递增或递减索引。'
- en: '**[Chapter 19](chapter19.xhtml): Reading Files and Other Inputs**    One last
    option turbocharges the for command, allowing you to read files. This chapter
    spares no details about how to parse or reformat each record of a file as you
    read it. In addition to a traditional file, the command can also read and process
    ordinary text, either hardcoded or from a variable, and it can even take the output
    of another command and read it as if it were a file.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第十九章](chapter19.xhtml)：读取文件和其他输入**    最后一个选项为`for`命令提供了强大功能，允许你读取文件。本章详细介绍了如何在读取文件时解析或重新格式化每一条记录。除了传统的文件，命令还可以读取和处理普通文本，无论是硬编码的还是来自变量的，甚至可以将另一个命令的输出作为文件读取。'
- en: '**[Chapter 20](chapter20.xhtml): Advanced for Techniques**    This chapter
    delves into some impressive applications of the for command, such as embedding
    commands of another language (for example, PowerShell and Python) into your Batch
    script. I also discuss some techniques for working around limitations of the command.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第二十章](chapter20.xhtml)：`for`命令的高级技巧**    本章深入探讨了`for`命令的一些令人印象深刻的应用，例如将其他语言（例如
    PowerShell 和 Python）的命令嵌入到你的批处理脚本中。我还讨论了绕过命令限制的一些技巧。'
- en: '“Advanced Topics” is the title of [Part III](part3.xhtml), which discusses
    various and varied topics, particularly everything that I couldn’t address before
    having the for command in my toolkit. Here’s the breakdown:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: “高级主题”是[第三部分](part3.xhtml)的标题，讨论了各种各样的主题，特别是那些在我拥有`for`命令工具之前无法涉及的内容。以下是详细内容：
- en: '**[Chapter 21](chapter21.xhtml): Pseudo-Environment Variables**    This chapter
    details pseudo-environment variables, or special variables not always under your
    control. For instance, Batch has specific variables that hold the date, the time,
    and the return code of both Batch commands and called programs. I also explain
    how to safely set some of these variables and share the difference between bat
    and cmd files.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第二十一章](chapter21.xhtml)：伪环境变量**    本章详细介绍了伪环境变量，或称特殊变量，这些变量并不总是由你控制。例如，批处理有一些特定的变量，用来保存日期、时间以及批处理命令和被调用程序的返回代码。我还解释了如何安全地设置这些变量，并分享了批处理文件（.bat）和命令文件（.cmd）之间的区别。'
- en: '**[Chapter 22](chapter22.xhtml): Writing Reports**    This chapter explains
    how to format rudimentary text file reports with Batch, complete with header,
    detail, and trailer records.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第二十二章](chapter22.xhtml)：编写报告**    本章解释了如何使用批处理格式化基础的文本文件报告，包括标题、详细记录和结尾记录。'
- en: '**[Chapter 23](chapter23.xhtml): Recursion**    Some problems lend themselves
    nicely to the technique of recursion, which is the methodology where code invokes
    itself. This chapter demonstrates how to do this in Batch with detailed and interesting
    examples.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第23章](chapter23.xhtml)：递归**    一些问题非常适合使用递归技术，即代码调用自身的方法。本章通过详细且有趣的例子演示了如何在批处理语言中实现递归。'
- en: '**[Chapter 24](chapter24.xhtml): Text String Searches**    This chapter explores
    many permutations of text string searches. Search files, variables, or hardcoded
    text for one or more words or literal strings. You’ll even find a couple of examples
    that use regular expressions.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第24章](chapter24.xhtml)：文本字符串搜索**    本章探讨了多种文本字符串搜索的排列方式。搜索文件、变量或硬编码文本中的一个或多个单词或字面字符串。你还会找到一些使用正则表达式的例子。'
- en: '**[Chapter 25](chapter25.xhtml): Bat Files Building Bat Files**    This chapter
    details the intricacies involved in one bat file building a second fully functional
    bat file with dynamic and static code, while also contemplating what Archimedes
    would have done with Batch.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第25章](chapter25.xhtml)：批处理文件构建批处理文件**    本章详细介绍了一个批处理文件如何构建第二个完全功能的批处理文件，包括动态和静态代码，同时也思考了如果是阿基米德，他会如何使用批处理。'
- en: '**[Chapter 26](chapter26.xhtml): Automatic Restarts and Multithreading**    After
    discussing how to automatically restart a failed process, this chapter uses a
    bat-file-building bat file to automatically kill and restart a hung process. I
    also discuss executing multiple threads or concurrencies at once under the direction
    of a single bat file.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第26章](chapter26.xhtml)：自动重启与多线程**    在讨论如何自动重启失败的进程后，本章通过构建一个批处理文件来自动终止并重启一个挂起的进程。我还讨论了如何在单一批处理文件的控制下同时执行多个线程或并发任务。'
- en: '**[Chapter 27](chapter27.xhtml): and/or Operators**    It might sound like
    a basic topic, but Batch possesses neither the and nor the or operator. This chapter
    builds techniques that mimic these operators for various situations.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第27章](chapter27.xhtml)：与/或运算符**    这可能听起来像是一个基础话题，但批处理语言本身并没有与运算符或或运算符。本章构建了模拟这些运算符的技术，用于各种情况。'
- en: '**[Chapter 28](chapter28.xhtml): Compact Conditional Execution**    This chapter
    details a compact and funky construct that looks and acts a lot like the if...else
    construct. I discuss when best to use each after examining the subtle yet significant
    differences between the two.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第28章](chapter28.xhtml)：紧凑的条件执行**    本章详细介绍了一种紧凑且有趣的结构，它看起来和行为非常类似于if...else结构。我会在检查两者之间微妙但重要的差异后，讨论何时最好使用每种方式。'
- en: '**[Chapter 29](chapter29.xhtml): Arrays and Hash Tables**    These data structures
    aren’t intrinsic to Batch, but you’ll learn how to populate and retrieve data
    from both arrays and hash tables.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第29章](chapter29.xhtml)：数组和哈希表**    这些数据结构并非批处理的内建功能，但你将学习如何填充和从数组及哈希表中检索数据。'
- en: '**[Chapter 30](chapter30.xhtml): Odds and Ends**    This chapter covers a few
    disparate topics: file attributes, bit manipulation, querying the Windows Registry,
    and sorting the contents of a file.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第30章](chapter30.xhtml)：杂项**    本章涵盖了一些不同的主题：文件属性、位操作、查询Windows注册表以及排序文件内容。'
- en: '**[Chapter 31](chapter31.xhtml): Troubleshooting Tips and Testing Techniques**    I
    share many tips and techniques for developing and testing bat files that I’ve
    picked up over the years.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第31章](chapter31.xhtml)：故障排除技巧与测试技术**    我分享了多年来在开发和测试批处理文件中学到的许多技巧和方法。'
- en: '**[Chapter 32](chapter32.xhtml): Object-Oriented Design**    As crazy as it
    might sound, this chapter delivers the capstone of user-built bat file functionality.
    I explain the four pillars of object-oriented design before walking through a
    model that implements them as completely as possible. I hope that seasoned coders
    find this chapter informative and entertaining.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第32章](chapter32.xhtml)：面向对象设计**    尽管听起来有点疯狂，本章将呈现用户自定义批处理文件功能的顶峰。我将在讲解面向对象设计的四个支柱后，带领你通过一个尽可能全面实现这些原则的模型。我希望经验丰富的编码者会觉得本章既有信息性又有娱乐性。'
- en: '**[Chapter 33](chapter33.xhtml): Stacks, Queues, and Real-World Objects**    This
    chapter applies the just-learned principles of object-oriented design to build
    objects implementing the stack and queue data structures.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第33章](chapter33.xhtml)：堆栈、队列与现实世界中的对象**    本章应用刚学到的面向对象设计原则，构建实现堆栈和队列数据结构的对象。'
- en: For each chapter in the first and third parts, I set out to discuss a narrow
    topic or how to perform a specific task; I don’t set out to discuss a specific
    command, but I’ll often introduce one or more commands in a chapter. For each
    command, I’ll explain its function, show you its syntax, and detail its features
    that I find most useful.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一部分和第三部分的每一章中，我都设定了一个狭窄的主题或任务讨论；我不打算讨论某个特定命令，但通常会在章节中介绍一条或多条命令。对于每一条命令，我都会解释它的功能，展示它的语法，并详细介绍我认为最有用的特性。
- en: It’s my goal that if you’re a noncoder, you’ll find at least the first two parts
    readable and informative. Read much further and you might just become a coder.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我的目标是，如果你不是程序员，你至少能读懂前两部分并从中获得信息。读得更深入一点，你或许就能成为一名程序员。
- en: Other Resources
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他资源
- en: If you’re looking for comprehensive and straightforward explanations of individual
    Batch commands, go no further than *[https://<wbr>ss64<wbr>.com<wbr>/nt<wbr>/](https://ss64.com/nt/)*.
    It’s a great and well-organized resource, and I referenced it extensively while
    writing this book. This book isn’t a list of commands; it’s a discussion about
    how to solve problems with those commands. I usually present the options of a
    command that I find to be the most useful, but you’ll find the full list at this
    site.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在寻找单个批处理命令的全面且简明的解释，不妨去看看 *[https://<wbr>ss64<wbr>.com<wbr>/nt<wbr>/](https://ss64.com/nt/)*。这是一个很棒且组织良好的资源，在写这本书时我参考了它很多次。本书不是命令的列表，而是关于如何用这些命令解决问题的讨论。我通常会展示我认为最有用的命令选项，但你可以在这个网站上找到完整的命令列表。
- en: In the (hopefully) rare event that you can’t find a solution in these pages,
    the next best alternative is to tap into the online nerd community. Searching
    the web for your issue and “bat file” (in quotes) should produce several results.
    Of the many online forums, I’ve consistently found the best ideas and suggestions
    at *[https://<wbr>stackoverflow<wbr>.com](https://stackoverflow.com)*.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你（希望）遇到的情况很少能在这些页面上找到解决方案，那么下一个最好的选择是向在线的技术社区寻求帮助。用“bat file”加上你的问题在网络上搜索应该能得到一些结果。在众多的在线论坛中，我发现最好的创意和建议常常来自于
    *[https://<wbr>stackoverflow<wbr>.com](https://stackoverflow.com)*。
- en: Notes on Style
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 风格说明
- en: Most technical books and manuals are dry reads, and I’ve made every effort to
    buck that trend. First and foremost, I haven’t lost sight of the fact that my
    primary mission is to explain the technical material that I’m trying to impart.
    But, for instance, when discussing the sort command, I don’t want to sort the
    likes of Apples and Bananas; it’s much more fun to sort the captains of the starship
    *Enterprise* from *Star Trek*, or at least I think it is. I use a Mad Libs game
    when discussing parameters, passing different parts of speech as arguments. The
    chapter on interactive Batch shares bat (or maybe bad) jokes with the user.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数技术书籍和手册读起来都很枯燥，而我已尽最大努力打破这种趋势。首先，我没有忘记我的首要任务是解释我试图传授的技术内容。但举个例子，当讨论 `sort`
    命令时，我不想对像苹果和香蕉这样的东西进行排序；与其如此，不如把《星际迷航》中的 *Enterprise* 星舰的舰长们排序，或者至少我觉得这样更有趣。讨论参数时，我使用了一个Mad
    Libs游戏，通过不同的词性作为参数传递。关于交互式批处理的章节还与用户分享了些笑话。
- en: Not every chapter lends itself to entertaining examples or a humorous anecdote,
    but I’ve made every effort to avoid files containing Record 1 as the first record
    or a string of pipe-delimited fields defined as field 1| field 2|field 3.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 并非每一章都能举出有趣的例子或幽默的轶事，但我已经尽力避免让文件的第一条记录是“Record 1”或一串用管道符号分隔的字段（如field 1| field
    2| field 3）。
- en: Ideally, I hope to elicit an audible chuckle; I’d be thrilled with a smirk and
    a nod; and I’d even be happy with an eyeroll and a groan. Boring be damned. I
    live by the mantra “It’s better to be uniquely bad than average.” (I wish that
    I could take credit for this quote, but many years ago our guide on a tour of
    Benziger Winery in Sonoma County, California, used it to describe the winery’s
    philosophy.)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，我希望能引发一阵可听的笑声；如果能看到一抹微笑和点头，我也会很高兴；即便只是翻个白眼和叹气，我也能接受。无聊去死。我秉持着“与其平凡，不如独特地糟糕”这一座右铭。（我希望能为这句话归功于自己，但很多年前，在加利福尼亚州索诺玛县的本齐格酒庄旅游时，我们的导游用这句话来形容酒庄的哲学。）
- en: Batveats
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注意事项
- en: In my experience, Batch has many significant caveats in comparison to other
    languages. In the pages ahead, I’ll often follow seemingly definitive statements
    about syntax or usage with the word *except*. (For instance, “The ampersand character
    terminates a command, *except* when followed by a second ampersand or ...”) The
    English language is unique in that much of its syntax has caveats that just don’t
    exist in other languages—think “*i* before *e* except after *c*.” Maybe this makes
    Batch the quintessentially patriotic American language (or maybe British).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我的经验，Batch 相较于其他语言有许多显著的注意事项。在接下来的章节中，我常常会在一些看似明确的语法或用法陈述后加上*除了*这个词。（例如，“&符号用于终止命令，*除非*后面跟着第二个&符号或……”）英语独特之处在于，它的语法中有很多注意事项，这些在其他语言中根本不存在——想想看“*i*
    在 *e* 前面，*除了*在 *c* 后面。”也许这使得 Batch 成为典型的爱国美国编程语言（或者也可能是英国式的）。
- en: These *batch caveats* are so prevalent that I’ve taken to calling each one a
    *batveat* (pronounced bat-vē-ät, trademark pending). They can be very frustrating
    for unguided new users, but as these chapters unfold, I’ll point out the various
    batveats that have bitten me in the past so that you can ideally avoid the pain.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这些*Batch 注意事项*如此普遍，以至于我已开始称它们为 *batveat*（发音为 bat-vē-ät，商标待定）。这些注意事项对于没有指导的新用户来说可能非常令人沮丧，但随着章节的展开，我会指出那些曾经让我受困的
    batveat，希望你能避免这些痛苦。
- en: Woody Guthrie
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 伍迪·格思里
- en: The epigraph that I chose for this book is a relatively well-known quote from
    the legendary artist Woody Guthrie, but I was hesitant to use it for fear of how
    it might be interpreted. The intent of the quote isn’t egotistical, it’s aspirational.
    Woody traveled the United States espousing economic justice while also preaching
    about the evils of racism and sexism. He didn’t do this with dry, boring speeches,
    but with a guitar and perceptive lyrics that still resonate long after his early
    death.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我为这本书选择的引言来自传奇艺术家伍迪·格思里（Woody Guthrie）的一句相对著名的名言，但我曾犹豫是否使用它，因为担心它可能会被误解。引用的目的并非自负，而是富有理想的。伍迪曾穿越美国，提倡经济正义，同时也宣扬反对种族主义和性别歧视。他并非通过枯燥无味的演讲，而是通过吉他和敏锐的歌词来传播这些思想，这些歌词即使在他早逝之后，依然引起人们的共鸣。
- en: Woody Guthrie was trying to bend the arc of history in the direction of social
    justice, while I’m trying to make an esoteric programming language a little more
    attainable with prose that is informative, readable, and entertaining. It is my
    hope that I can contribute to the understanding of a complex topic, and I can
    only aspire to Woody’s sublime example.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 伍迪·格思里试图将历史的轨迹引向社会正义，而我则在尝试通过富有信息性、可读性和娱乐性的语言，使一个深奥的编程语言变得更易接近。我希望能够为理解一个复杂话题做出贡献，并且我只能以伍迪的崇高榜样为目标，努力追随。
- en: For the Love of Batch
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Batch 的爱
- en: Never, never invite more than one Batch coder to a party. One is fine. If we’re
    there without a compatriot, we’ll talk about sports, politics, books, movies,
    and travel like anyone else. But when you put at least two of us together anywhere,
    you’ll hear things like “I recently found a new way to code an or operator in
    the conditional clause of an if command. Would you like me to share it with you?”
    We will kill your party.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 永远，永远不要邀请超过一个 Batch 程序员参加派对。一个人就足够了。如果我们没有同行，我们会像其他人一样谈论体育、政治、书籍、电影和旅行。但一旦你把至少两个程序员聚在一起，你就会听到类似“我最近找到了一种在
    if 命令的条件语句中编码 or 操作符的新方法。你想让我分享给你吗？”我们会毁掉你的派对。
- en: The optimist will say that Batch is *esoteric*, while the pessimist will say
    it is *cryptic*. The truth is probably somewhere in between, and you’ll find both
    of these words often in this book. The syntax is distinct from most languages,
    and the lack of certain functionality makes for imaginative solutions to problems
    that would be uninteresting in other languages. The upshot is a couple of people
    sucking the oxygen out of your Super Bowl party with a discussion about different
    ways to construct a hash table.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 乐观主义者会说 Batch 是*深奥的*，而悲观主义者则会说它是*晦涩的*。事实可能介于两者之间，你会在本书中经常看到这两个词。它的语法与大多数编程语言不同，某些功能的缺失促使人们以富有创意的方式解决问题，这些问题在其他语言中可能显得无趣。结果就是，一些人在你的超级碗派对上讨论构造哈希表的不同方式，几乎让空气都变得稀薄。
- en: I find these puzzles invigorating, and that’s a major reason why I enjoy scripting
    in Batch, while others may find it a chore. Sometimes I really enjoy coding in
    a language that makes the implementation of a stack a significant accomplishment.
    To briefly demonstrate just one challenge, the character for the at symbol (@)
    can be a variable name, and extracting the second-to-last character from its value
    requires the syntax %@:~-2,1%. That might look more like a curse word in a comic
    strip than code, and admittedly it does look esoteric, maybe even cryptic, but
    please don’t put this book down out of fear; I promise that it will make perfect
    sense after just a few chapters.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得这些难题令人精神焕发，这也是我喜欢在 Batch 脚本中编程的主要原因，而其他人可能会觉得这是一项苦差事。有时候，我真的很享受用一种编程语言来编写栈实现，这本身就是一项了不起的成就。为了简单展示一个挑战，"@"符号本身可以作为变量名，而从其值中提取倒数第二个字符需要使用语法
    %@:~-2,1%。这看起来更像是漫画中的脏话，而不是代码，诚然，它确实显得有些深奥，甚至可能显得有些神秘，但请不要因为害怕就把这本书放下；我保证，只需几章，你就会完全理解。
- en: Being a Batch expert in a room full of coders only moderately versed in the
    discipline can feel like being a Sumerian priest—one out of a select group of
    people who can interpret a script and impart its meaning and wisdom to others.
    But I hold my position not due to a random birthright, and I do not guard the
    ability to decipher this cuneiform from others out of self-interest. With this
    book I hope to make high priests and priestesses out of all who want to learn
    this not-so-ancient script. In the pages to follow, I’ll be more than honest concerning
    issues and frustrations that I’ve found with the language, but I do love coding
    bat files, and by the time you’ve finished reading this book, I hope that I’ve
    made a convert out of you.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在一群对这门技术略懂一二的程序员中成为 Batch 专家，可能会让你感觉像是一个苏美尔祭司——你是那种能解读脚本并将其意义与智慧传授给他人的特权人群中的一员。但我之所以能占据这个位置，并不是因为某种偶然的天赋，也不是为了个人私利而守护解读这门楔形文字的能力。通过这本书，我希望能让所有想学习这门并不那么古老的脚本的人，都成为高阶祭司和祭司女。在接下来的章节中，我会诚实地谈论我在这门语言中的问题和挫折，但我真的很喜欢编写批处理文件，等你读完这本书后，我希望能把你变成一个信徒。
