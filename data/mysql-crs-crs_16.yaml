- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Creating Events
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 创建事件
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: In this chapter, you’ll create *events*. Also called scheduled events, these
    are database objects that fire based on a set schedule, executing the functionality
    you defined when creating them.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将创建*事件*。这些事件也称为调度事件，是根据设置的时间表触发的数据库对象，执行你在创建事件时定义的功能。
- en: Events can be scheduled to run once or at some interval, like daily, weekly,
    or yearly; for example, you might create an event to perform weekly payroll processing.
    You can use events to schedule long-running processing during off-hours, like
    updating a billing table based on orders that came in that day. Sometimes you
    schedule off-hour events because your functionality needs to happen at a particular
    time, like making changes to the database at 2 AM when Daylight Saving Time begins.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 事件可以安排为一次性触发或按某个间隔触发，如每天、每周或每年；例如，你可能会创建一个事件来执行每周的工资处理。你可以使用事件安排在非高峰时间进行长时间运行的处理，比如基于当天订单更新账单表。有时你会安排在非高峰时间执行事件，因为你的功能需要在特定时间发生，比如在夏令时开始的凌晨2点对数据库进行更改。
- en: The Event Scheduler
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件调度器
- en: 'MySQL has an *event scheduler* that manages the scheduling and execution of
    events. The event scheduler can be turned on or off, but should be on by default.
    To confirm that the scheduler is on, run the following command:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL有一个*事件调度器*，用于管理事件的调度和执行。事件调度器可以启用或禁用，但默认情况下应启用。要确认调度器是否启用，可以运行以下命令：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If your scheduler is on, the result should look as follows:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的调度器已启用，结果应如下所示：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If the `Value` displayed is `OFF`, you (or your database administrator) need
    to turn the scheduler on with this command:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果显示的`Value`是`OFF`，你（或数据库管理员）需要使用以下命令启用调度器：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If the `Value` returned is `DISABLED`, your MySQL server was started with the
    scheduler disabled. Sometimes this is done to temporarily stop the scheduler.
    You can still schedule events, but no events will fire until the scheduler is
    enabled again. If the event scheduler is disabled, it needs to be changed in a
    configuration file managed by your database administrator.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果返回的`Value`是`DISABLED`，说明你的 MySQL 服务器在启动时禁用了事件调度器。有时这样做是为了临时停止调度器。你仍然可以调度事件，但在调度器重新启用之前，事件不会被触发。如果事件调度器被禁用，必须通过数据库管理员管理的配置文件来进行更改。
- en: Creating Events with No End Date
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建没有结束日期的事件
- en: In [Listing 13-1](#listing13-1) you create an event that removes old rows from
    the `payable_audit` table in the `bank` database.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在[清单 13-1](#listing13-1)中，你创建了一个事件，该事件会从`payable_audit`表中移除旧行，`payable_audit`表位于`bank`数据库中。
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Listing 13-1: Creating a monthly event'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 清单 13-1：创建一个每月事件
- en: To create the event in the `bank` database, first you set your current database
    to `bank` with the `use` command. Then you drop the old version of this event
    (if one exists) in order to create a new one. Next you create the event, `e_cleanup_payable_audit`
    ❶, and set a schedule to run it once per month.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要在`bank`数据库中创建事件，首先使用`use`命令将当前数据库设置为`bank`。然后，删除该事件的旧版本（如果存在），以便创建新的事件。接下来，你创建事件`e_cleanup_payable_audit`
    ❶，并设置一个每月运行一次的调度。
- en: Every event begins with `on schedule`; for a one-time event, you’d follow this
    with the `at` keyword and the timestamp (the date and time) at which the event
    should fire. For a recurring event, `on schedule` should be followed by the word
    `every` and the interval at which it should fire. For example, `every 1 hour`,
    `every 2 week`, or `every 3 year`. (Intervals are expressed in the singular form,
    like `3 year` and not `3 year``s`.) In this case, you specify `every 1 month`
    ❷. You’ll also define the date and time when the recurring event `starts` and
    `ends`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 每个事件都以`on schedule`开始；对于一次性事件，后面跟上`at`关键字和事件触发的时间戳（日期和时间）。对于定期事件，`on schedule`后面应该跟上`every`一词以及触发的间隔。例如，`every
    1 hour`、`every 2 week`或`every 3 year`。（间隔以单数形式表示，如`3 year`，而不是`3 years`。）在这种情况下，你指定`every
    1 month` ❷。你还将定义定期事件的`start`和`end`时间。
- en: For your event, you define `starts` as `2024-01-01 10:00` ❸, meaning your event
    will start firing on 1/1/2024 at 10 AM and will fire every month at this time.
    You didn’t use the `ends` keyword, so this event will fire monthly—theoretically
    forever—until the event is dropped with the `drop event` command.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你的事件，你将`start`定义为`2024-01-01 10:00` ❸，这意味着事件将在2024年1月1日上午10点开始触发，并将在每月的这个时间触发。你没有使用`ends`关键字，因此该事件将每月触发——理论上是永久的——直到使用`drop
    event`命令删除该事件。
- en: Then, you define the event’s actions with the `do` command ❹, and add the SQL
    statements that perform the functionality in the event body. Your event body starts
    with `begin` and ends with `end`. Here, you delete rows in the `payable_audit`
    table that are more than one year old ❺. While you use only one statement here,
    it is possible to put multiple SQL statements in the event body.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用 `do` 命令 ❹ 定义事件的操作，并在事件体内添加执行功能的 SQL 语句。事件体以 `begin` 开始，以 `end` 结束。在这里，你删除
    `payable_audit` 表中超过一年的行 ❺。虽然这里只使用了一个语句，但也可以在事件体中放置多个 SQL 语句。
- en: The `show events` command displays a list of scheduled events in the current
    database, as in [Figure 13-1](#figure13-1).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`show events` 命令显示当前数据库中计划的事件列表，如[图 13-1](#figure13-1)所示。'
- en: '![](image_fi/503007c13/f13001.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503007c13/f13001.png)'
- en: 'Figure 13-1: The `show events` command as seen in MySQL Workbench'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13-1：MySQL Workbench 中显示的 `show events` 命令
- en: The user account that defined the event is listed as the Definer. This gives
    you an audit trail that tells you who scheduled which events.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 定义事件的用户账户被列为定义者。这为你提供了审计跟踪，告诉你是谁安排了哪些事件。
- en: To show only events for a particular database (even if you aren’t currently
    in that database), use the `show events in` `database` command. In this example,
    the command would be `show events in bank`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要仅显示特定数据库的事件（即使你当前不在该数据库中），可以使用 `show events in` `database` 命令。例如，在本例中，命令将是
    `show events in bank`。
- en: 'To get a list of all events in all databases, you can use the following query:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取所有数据库中的所有事件列表，可以使用以下查询：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: MySQL provides you with the `events` table in the `information_schema` database
    that you can query for this purpose.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 提供了 `information_schema` 数据库中的 `events` 表，你可以查询该表来实现此目的。
- en: Creating Events with an End Date
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建具有结束日期的事件
- en: 'For events that should run for a limited time, use the `ends` keyword. For
    example, you might want to create an event that runs at 1/1/2024 once an hour
    between 9 AM and 5 PM:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对于需要在有限时间内运行的事件，可以使用 `ends` 关键字。例如，你可能想要创建一个事件，每年1月1日从上午9点到下午5点，每小时运行一次：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To schedule an event that runs every 5 minutes for the next hour, you might
    enter the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要安排一个在接下来的1小时内每5分钟运行一次的事件，你可以输入以下内容：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You started your event immediately. It will fire every 5 minutes, and will stop
    firing one hour from now.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你立即启动了事件。它将每5分钟触发一次，并将在1小时后停止触发。
- en: 'Sometimes you need an event to fire just once at a particular date and time.
    For example, you may need to wait until after midnight to do some one-time account
    updates to your `bank` database so that interest rates are calculated first by
    another process. You could define an event like so:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候你需要一个事件在特定的日期和时间只触发一次。例如，你可能需要等到午夜过后，再进行一次性的账户更新，更新你的 `bank` 数据库，以便其他进程先计算利率。你可以这样定义一个事件：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Your `e_account_update` event is scheduled to run on 3/10/2024 at 1 minute past
    midnight.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 `e_account_update` 事件计划在2024年3月10日午夜过后1分钟执行。
- en: You might find it useful to schedule a one-time event when the clocks change
    to Daylight Saving Time. On 3/10/2024, for example, the clocks move forward one
    hour. On 11/6/2024, Daylight Saving Time ends and the clocks move back one hour.
    In many databases, data will need to change as a result.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当时钟切换到夏令时时，安排一次性事件可能会很有用。例如，在2024年3月10日，时钟将提前一小时。而在2024年11月6日，夏令时结束，时钟将回拨一小时。在许多数据库中，数据可能需要进行相应的更改。
- en: 'Schedule a one-time event for March 10, 2024, so that the database makes changes
    when Daylight Saving Time begins. On that date at 2 AM, your system clock will
    change to 3 AM. Schedule your event for 1 minute before the clocks change:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 安排一个一次性事件，在2024年3月10日，数据库在夏令时开始时进行更改。在当天2点，系统时钟将变为3点。将事件安排在时钟变化前1分钟：
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Rather than having to stay awake until 1:59 in the morning to change the clock,
    you can schedule an event to do it for you.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你不必熬夜到凌晨1:59才能更改时钟，你可以安排一个事件来为你执行这项操作。
- en: Checking for Errors
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查错误
- en: To check for errors after your event runs, query a table in the `performance_schema`
    database called `error_log`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在事件运行后检查错误，可以查询 `performance_schema` 数据库中的一个名为 `error_log` 的表。
- en: The `performance_schema` database is used to monitor the performance of MySQL.
    The `error_log` table houses diagnostic messages like errors, warnings, and notifications
    of the MySQL server starting or stopping.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`performance_schema` 数据库用于监控 MySQL 的性能。`error_log` 表存储诊断信息，如错误、警告和 MySQL 服务器启动或停止的通知。'
- en: 'For example, you can check all event errors by finding rows where the `data`
    column contains the text `Event Scheduler`:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以通过查找`data`列包含`Event Scheduler`文本的行来检查所有事件错误：
- en: '[PRE9]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This query finds all rows in the table that have the text `Event Scheduler`
    somewhere in the `data` column. Recall from Chapter 7 that the `like` operator
    allows you to check if a string matches some pattern. Here you’re using the `%`
    wildcard character to check that the `data` column contains a value that starts
    with any character(s), contains the text `Event Scheduler`, then ends with any
    character(s).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 此查询查找表中所有`data`列包含`Event Scheduler`文本的行。回顾第七章，`like`操作符可以检查字符串是否匹配某个模式。在这里，你使用`%`通配符来检查`data`列的值是否以任意字符开头，包含`Event
    Scheduler`文本，然后以任意字符结尾。
- en: 'To find errors for a particular event, search for the event name. Say the `e_account_update`
    event calls a procedure named `p_account_update()`, but that procedure doesn’t
    exist. You’ll find errors for the `e_account_update` event like so:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找特定事件的错误，可以搜索事件名称。假设`e_account_update`事件调用了名为`p_account_update()`的过程，但该过程并不存在。你可以像这样找到`e_account_update`事件的错误：
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The query returns a row that shows the `logged` column with the date and time
    when the event fired, and the `data` column shows an error message ([Figure 13-2](#figure13-2)).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 该查询返回一行，显示`logged`列，记录事件触发时的日期和时间，`data`列显示错误信息（[图 13-2](#figure13-2)）。
- en: '![](image_fi/503007c13/f13002.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503007c13/f13002.png)'
- en: 'Figure 13-2: Displaying event errors in MySQL Workbench'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13-2：在 MySQL Workbench 中显示事件错误
- en: The message tells you that the `e_account_update` event in the `bank` database
    failed because `p_account_update` does not exist.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 该消息告诉你，`bank`数据库中的`e_account_update`事件失败，因为`p_account_update`不存在。
- en: 'You can disable an event using the `alter` command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`alter`命令禁用事件：
- en: '[PRE11]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The event will not fire again until you re-enable it, like so:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 该事件不会再次触发，直到你重新启用它，如下所示：
- en: '[PRE12]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: When an event is no longer needed, you can drop it from the database using the
    `drop event` command.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当事件不再需要时，你可以使用`drop event`命令将其从数据库中删除。
- en: Summary
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you scheduled events to fire once and on a recurring basis.
    You learned how to check for errors in your event scheduler, and disable and drop
    events. The next chapter will focus on assorted tips and tricks that can make
    MySQL more productive and enjoyable.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你安排了事件在一次性和定期的基础上触发。你学习了如何检查事件调度器中的错误，禁用并删除事件。下一章将重点介绍一些技巧和窍门，帮助提升 MySQL
    的生产力和使用体验。
