- en: —25—
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: —25—
- en: Priority Queues for Lock Picking
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 锁匠开锁优先队列
- en: A small group of thugs was waiting outside the door to Frank’s office. They
    were trying to blend in, but Frank spotted them a block away. One sat on a bench,
    pretending to read a paper while his eyes darted around the street. Three others
    stood near the corner, arguing loudly about a recent sporting match. As he neared,
    Frank realized they were discussing completely different sports. One thug ranted
    about the officiating at the last royal polo match, another interjected with tips
    about an upcoming horse race, and the third seemed content with just saying the
    word “sports” at regular intervals.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一小群恶棍正等在Frank办公室门外。他们试图伪装自己，但Frank在一条街外就发现了他们。其中一个坐在长椅上，假装看报纸，但眼睛不停地扫视着街道。其他三个站在角落附近，大声争论着最近的一场体育比赛。Frank走近时，意识到他们讨论的竟是完全不同的体育项目。一个恶棍在抱怨上一次皇家马球比赛的裁判，另一个插话讨论即将到来的赛马比赛，第三个则只是时不时地说“体育”这两个字。
- en: Only the spy succeeded in being inconspicuous. She was waiting across the street,
    where she leaned casually against the wall. If he hadn’t chased her earlier, Frank
    might have completely overlooked her. She was good. Or, more accurately, the thugs
    were really bad.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 只有间谍成功地保持了低调。她正站在街对面，悠闲地靠在墙上。如果他之前没有追过她，Frank可能完全没有注意到她。她很厉害，或者更准确地说，恶棍们实在太差劲了。
- en: Without breaking stride, Frank turned and started down a side street. He couldn’t
    go back to the office, not with a contingent of Vinettee thugs waiting for him.
    After a moment’s thought, he settled on an old police safe house. It was close
    and hadn’t been used in years. If he was lucky, he might even remember the combination
    to the lock.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Frank没有停下脚步，他转身并走进了一条旁边的街道。他不能回办公室，那里有一队Vinettee的恶棍在等着他。经过片刻思考，他决定去一个旧的警察安全屋。那儿很近，而且已经很多年没人用了。如果他够幸运，或许还能记得锁的密码。
- en: '![image](../images/f0202-01.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0202-01.jpg)'
- en: Frank made it half a block before he heard the shouts and pounding footsteps
    behind him. The spy must have alerted the others.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Frank走了半个街区，听见身后传来喊声和急促的脚步声。间谍一定是已经通知了其他人。
- en: “Frank!” yelled one particularly beefy thug. “We just want to talk.”
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: “Frank！”一个特别壮硕的恶棍喊道。“我们只是想谈谈。”
- en: As if this claim weren’t far-fetched enough, the laughter from the rest of the
    thugs dispelled any doubt about their intentions. Frank broke into a run. The
    footsteps behind him followed suit.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 就在这个声明本就足够荒谬的时候，其他恶棍的笑声更是打消了任何怀疑，说明他们的意图不简单。Frank开始加速跑步，身后的脚步声紧随其后。
- en: Frank cut left sharply, heading into a narrow alley. He knew this part of town
    well and was sure he could lose his pursuers. He just had to buy himself enough
    time to get into the safe house. Getting in could take a while, unless he remembered
    the combination on the first try.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Frank猛地左转，进入了一条狭窄的小巷。他对这片城区很熟悉，确信自己能甩掉追兵。他只需要足够的时间进入安全屋。如果幸运的话，他可能一试就记得密码。
- en: Frank emerged from the alley onto Flag Street and pulled a quick U-turn, heading
    into the store on the corner. He pretended to peruse the racks of baby clothes
    while watching through the window. The rack of Tike’s Tunics provided an ideal
    vantage point.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Frank从小巷出来，走到旗街，迅速做了个U型转弯，进入了街角的商店。他假装在浏览婴儿衣物架子，同时通过窗户观察外面的情况。Tike’s Tunics的衣架提供了一个理想的观察位置。
- en: Within a minute, the thugs spilled out onto the street and stood around, looking
    confused. The spy followed and began shouting orders. She split the thugs into
    two groups and sent them down the street in both directions—one group on each
    side—while she waited at the mouth of the alley.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 一分钟之内，恶棍们涌到街上，站成一圈，看上去一脸困惑。间谍跟着出来，开始大声下达命令。她把恶棍们分成两组，分别朝街道两端走去——每边一组——然后她在小巷口等待。
- en: Frank didn’t waste any time. He hurried through the shop and exited through
    a back door that led into the alley. The spy stood only 10 feet away, her back
    to Frank. As quietly as he could, Frank retreated down the alley and made his
    way to the safe house. If he was lucky and the thugs didn’t think to ask the shopkeeper
    about him, he had bought some time.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Frank没有浪费时间。他迅速穿过商店，从一扇通向小巷的后门出去。间谍离他只有10英尺远，背对着他。Frank尽量悄悄地撤退，沿着小巷走向安全屋。如果他足够幸运，而且恶棍们没有想到去问店主有关他的事，那他就争取到了一些时间。
- en: At the safe house door, Frank fumbled with the combination lock. He spun the
    dial to 1, around to 1, and finally back around to 1 again. Admittedly, it was
    a simple code. The lock didn’t open.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在安全屋的门前，弗兰克摸索着组合锁。他先转到1，再转到1，然后最后再转回到1。说实话，这个密码很简单。锁却没有打开。
- en: Frank swore. Someone must have changed the combination since he’d last been
    here. He considered his options. He could try to find the combination, which might
    take him a long time, or he could find another place to hide. Unable to think
    of anywhere safe that didn’t take him past the thugs again, he turned back to
    the lock.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克咒骂了一声。肯定是有人在他上次来这里之后更改了组合密码。他考虑了自己的选择。他可以尝试找到密码，这可能会花很长时间，或者他可以找到另一个藏身之处。由于想不到任何不需要再次经过恶棍的安全地方，他又转向了锁。
- en: 'Since time was short, Frank needed to be efficient. The lock required three
    numbers, each 1–20, so he faced 8,000 possible combinations. He didn’t have time
    for a breadth-first search or a depth-first search. Instead he would have to rely
    on a limited best-first search and some liberal guessing; he would have to trust
    his gut. He withdrew his priority queue from his pocket, wiped it clean, and started
    jotting down combinations. With each combination, he added a priority—how likely
    he felt it would be. He started with some common police combinations:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 由于时间紧迫，弗兰克需要提高效率。锁需要三个数字，每个数字在1到20之间，因此他面临着8000种可能的组合。他没有时间进行广度优先搜索或深度优先搜索。相反，他不得不依赖有限的最佳优先搜索和一些大胆的猜测；他得相信自己的直觉。他从口袋里拿出优先队列，擦干净后开始写下组合。每写一个组合，他就加上一个优先级——他认为成功的可能性有多大。他从一些常见的警用组合开始：
- en: 1-2-3
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 1-2-3
- en: 1-1-2
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 1-1-2
- en: 1-3-5
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 1-3-5
- en: He gave each of those a priority of 10.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 他给这些组合都设置了优先级10。
- en: Then he moved on to other triples of the same number. If the code had once been
    1-1-1, why not use 2-2-2? The safe houses were used rarely enough that it paid
    to keep the combinations simple. He listed 19 untried triplets, giving them priorities
    of 5\. The priority queue now held 22 possibilities.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 接着他转向了其他相同数字的三位组合。如果密码曾经是1-1-1，为什么不试试2-2-2呢？安全屋使用得不够频繁，所以保持密码简单是值得的。他列出了19个未尝试的三位数字组合，给它们的优先级设为5。此时优先队列中总共有22种可能性。
- en: Then he quickly ran through the birthdays of the officers responsible for the
    safe houses. That added another 6 combinations, which he assigned priorities of
    8\. He added the birthdays of every other officer he could remember, dropping
    the priority to 2 for those.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然后他迅速回忆起负责安全屋的警官们的生日。这又增加了6个组合，他将它们的优先级设为8。他又想起了其他警官的生日，并将它们的优先级设为2。
- en: Finally he added the word *RUN* and assigned it a priority of 1\. He knew full
    well that if he reached that option, it was time to give up. He would have to
    find another place to hide.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，他添加了单词*RUN*，并将其优先级设为1。他深知，如果他到达了这个选项，那就意味着是时候放弃了。他得找一个新的藏身地方。
- en: The priority queue now held 32 options. The result was a long list of possible
    combinations to try. At the top was the highest-priority combination, 1-2-3\.
    Frank tried it, but nothing happened.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，优先队列中有32个选项。结果是，一长串可能的组合等待尝试。最上面的是优先级最高的组合1-2-3。弗兰克尝试了它，但什么也没发生。
- en: He swore and removed the combination from the priority queue. A new highest-priority
    combination popped to the top.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 他咒骂了一声，将组合从优先队列中移除。一个新的最高优先级组合浮现在队列顶部。
- en: Before he could try the next combination, a thought struck him. Maybe they used
    some variation of the old combination? He had known plenty of officers to use
    one combination for their locker and its reverse for their luggage. Could the
    officer in charge of the safe houses have done something similar here? Frank added
    3-2-1 to the bottom of his list with a priority of 9.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在他尝试下一个组合之前，一个念头突然闪过。他想到，或许他们使用了旧组合的某种变体？他知道有不少警官会把自己储物柜的组合密码和行李的密码反过来用。负责安全屋的警官是否也做了类似的事？弗兰克在列表底部加上了3-2-1，优先级设为9。
- en: Neither 1-1-2 or 1-3-5 worked, which exhausted all of the priority-10 combinations.
    Frank crossed them off and added their reversed combinations, 2-1-1 and 5-3-1,
    to the bottom of the list. Again he used priority 9, figuring that a reversed
    combination would be easy for people to remember.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 1-1-2 和 1-3-5 都没能打开锁，这也消耗了所有优先级为10的组合。弗兰克将它们划去，并将它们的反向组合2-1-1和5-3-1加到列表的底部。依旧使用优先级9，他认为反向组合对人们来说容易记住。
- en: 'He read the next-highest-priority combination, 3-2-1, from the top of the list.
    It was one of the reversed combinations he had recently added. That was the magic
    of priority queues: no matter what order you added the items, you always got the
    best entry next.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 他从列表顶部读取了下一个优先级最高的组合3-2-1。这是他最近添加的一个反向组合。这就是优先级队列的魔力：无论你按什么顺序添加项，下一次总是能得到最优的条目。
- en: The lock finally clicked open at 5-3-1, one of the priority-9 codes he’d added.
    Frank breathed a sigh of relief and glanced around. Still no sign of the Vinettees.
    He was safe for now.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 锁在5-3-1时终于“咔嚓”一声打开了，这是他添加的优先级为9的代码之一。弗兰克松了一口气，环顾四周。仍然没有看到Vinettees的踪影。现在他暂时是安全的。
- en: '**POLICE ALGORITHMS 101: DATA STRUCTURES AND SEARCH**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**警察算法 101：数据结构与搜索**'
- en: '***Excerpt from Professor Drecker’s Lecture***'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '***来自德雷克教授讲座的摘录***'
- en: As we’ve discussed in lectures throughout the semester, the data structures
    we use can impact both how an algorithm functions and how efficient it is. During
    the lectures on depth-first search and breadth-first search, we looked at how
    the difference between stacks and queues impacted the search order. The use of
    priority queues for best-first search is another great example of the impact of
    data structures.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在整个学期的讲座中讨论的那样，我们使用的数据结构不仅会影响算法的功能，还会影响其效率。在关于深度优先搜索和广度优先搜索的讲座中，我们探讨了栈和队列的差异如何影响搜索顺序。使用优先级队列进行最佳优先搜索是另一个很好的例子，展示了数据结构的影响。
- en: Conceptually, best-first search is similar to both breadth-first and depth-first
    search. At each step in the algorithm, we are choosing a single new state to explore.
    The key difference is how we order our exploration of new states. Using a priority
    queue allows us to efficiently pick *the most promising* next state. Best-first
    search and priority queues are perfect complements and make an extremely efficient
    data structure–algorithm combination.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从概念上看，最佳优先搜索与广度优先搜索和深度优先搜索相似。在算法的每一步，我们都选择一个新的状态进行探索。关键的区别在于我们如何排序这些新状态的探索顺序。使用优先级队列使得我们能够高效地选择*最有前景的*下一个状态。最佳优先搜索和优先级队列是完美的互补，形成了一个极其高效的数据结构与算法组合。
