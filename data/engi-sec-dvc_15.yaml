- en: '**12'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**12'
- en: SYSTEM MONITORING**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 系统监控**
- en: '![Image](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/common.jpg)'
- en: Monitoring often comes with a negative connotation because it suggests that
    data is collected for surveillance by something or somebody. However, many digital
    business models like predictive maintenance wouldn’t work without monitoring and
    subsequent data analytics. In the same way, the continuous protection of devices
    requires data logging and analysis to detect and trace back malicious activities.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 监控常常带有负面含义，因为它暗示数据是被某人或某物用于监视。然而，许多数字商业模式，如预测性维护，如果没有监控和随后的数据分析，将无法正常运作。同样，设备的持续保护也需要数据日志记录和分析，以便检测和追踪恶意活动。
- en: The creation of extensive logfiles in IT systems has been common for decades.
    However, when it comes to embedded systems, logs might not receive the attention
    they deserve. In the past, low storage capacities and missing internet connections
    were legitimate reasons for putting system monitoring in second place, but luckily,
    these days, those limitations have continued to decrease.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在IT系统中创建大量日志文件已经是几十年来的常见做法。然而，当谈到嵌入式系统时，日志可能没有得到应有的重视。在过去，存储容量低和缺乏互联网连接是将系统监控放在次要位置的合理理由，但幸运的是，如今这些限制已经逐渐减少。
- en: In this chapter, I explain the benefits of monitoring devices for security reasons.
    In addition, I discuss resource limitations on embedded systems and multiple aspects
    of logging processes and their management. To wrap everything up, the book’s final
    case study looks at available log data on an STM32MP157F device and how to analyze
    it.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将解释出于安全原因监控设备的好处。此外，我还将讨论嵌入式系统的资源限制，以及日志处理过程的多个方面及其管理。最后，本书的案例研究将探讨如何分析
    STM32MP157F 设备上的可用日志数据。
- en: '**Monitoring for the Right Reasons**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**出于正确的理由进行监控**'
- en: Many companies have been accused of being “data krakens” because they collect
    all the data they can lay their hands on, whether from web services, IT infrastructures,
    or end-user devices. For them, this collection leads to profitable business models,
    but this development obviously contradicts privacy efforts to protect humans from
    tracking, surveillance, and spying.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 许多公司被指控为“数据克拉肯”，因为它们收集所有能够获取的数据，无论是来自网络服务、IT基础设施，还是终端用户设备。对于这些公司而言，数据收集带来了盈利的商业模式，但这一发展显然与隐私保护的努力相冲突，隐私保护旨在防止人们被跟踪、监视和间谍行为。
- en: On the legal side, the European GDPR is an example of counteracting excessive
    data collection, but other legal requirements—such as UN Regulation 155 in the
    automotive sector, IEC 62443-4-2 for the industrial automation industry, and the
    Critical Infrastructure Protection (CIP) standard CIP-007-6 of the North American
    Electric Reliability Corporation (NERC)—explicitly require security monitoring
    of connected products, either by manufacturers or operators. In a nutshell, be
    aware that the two sides of the data collection and monitoring coin always have
    to be balanced carefully.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在法律方面，欧洲的GDPR就是一种反对过度数据收集的例子，但其他法律要求——例如汽车行业的联合国155号规定、工业自动化行业的IEC 62443-4-2标准，以及北美电力可靠性公司（NERC）发布的《关键基础设施保护标准》（CIP-007-6）——明确要求对连接产品进行安全监控，且这些监控要由制造商或运营商负责。简而言之，务必意识到数据收集和监控的两面性必须始终保持谨慎平衡。
- en: In some areas, monitoring has been common practice for a long time; for example,
    surveillance cameras and security staff keep an eye on the physical security threats
    of buildings and corporate sites. The banking sector has a long tradition of monitoring
    transactions and reacting to unusual activities. Last but not least, network traffic
    monitoring by firewalls and intrusion detection systems is part of every sane
    IT infrastructure. Collecting data and monitoring systems in the name of security
    is clearly often acceptable, but it always must stay within reasonable bounds.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些领域，监控已经是常见的做法；例如，监控摄像头和安保人员时刻关注着建筑物和公司场所的物理安全威胁。银行业在监控交易并对异常活动作出反应方面有着悠久的传统。最后但同样重要的是，防火墙和入侵检测系统对网络流量的监控是每个理智的IT基础设施的一部分。出于安全目的收集数据和监控系统显然是可以接受的，但必须始终保持在合理范围内。
- en: System monitoring has various advantages for device security. Log data can be
    especially useful in two cases. First, every attack on your device runs through
    multiple phases including reconnaissance, delivery, exploitation, installation,
    command and control, and actions on objectives. Each phase might leave traces
    in the device’s logfiles that enable you to detect the attack early, react accordingly,
    and thereby avert further damage. Second, log data can be an immensely valuable
    source during forensic processes after an incident happened. Imagine that your
    devices were attacked in the field, but you don’t have any data to reconstruct
    and understand what happened. Being blind in such a situation not only leaves
    you clueless but also can be a significant risk for your business.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 系统监控对设备安全有多方面的好处。日志数据在两个方面尤其有用。首先，对设备的每一次攻击都经历多个阶段，包括侦察、投递、利用、安装、指挥与控制、以及目标操作。每个阶段可能会在设备的日志文件中留下痕迹，从而使你能够早期检测到攻击，并作出相应反应，避免进一步损害。其次，日志数据在事件发生后的取证过程中可以是极为宝贵的资源。试想一下，你的设备在现场遭遇攻击，但没有任何数据来重建和理解发生了什么。处于这种情况中的盲目状态，不仅让你毫无头绪，还可能给你的业务带来重大风险。
- en: In general, device monitoring raises transparency throughout your device population
    in the field and gives you an overview of when, where, and how your products are
    used. In critical infrastructures, such monitoring might even be necessary to
    fulfill legal or certification requirements. Also, as mentioned in [Chapter 9](ch09.xhtml#ch09),
    knowing the state of firmware versions deployed on your devices in the field can
    be helpful in understanding the threat landscape of your customers.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，设备监控提高了你在现场设备群体中的透明度，并使你能够概览何时、何地以及如何使用你的产品。在关键基础设施中，这种监控甚至可能是履行法律或认证要求所必需的。此外，正如[第9章](ch09.xhtml#ch09)中提到的，了解你在现场设备上部署的固件版本的状态，有助于理解客户的威胁态势。
- en: Besides the pure security use cases, monitoring can even be a supporting tool
    for handling and analyzing customer complaints. Log data might, for example, prove
    that an end user performed manual configuration changes that led to unauthorized
    operation modes, which overstressed mechanical components and caused a machine
    to break.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 除了纯粹的安全使用案例外，监控甚至可以作为处理和分析客户投诉的辅助工具。例如，日志数据可能证明最终用户进行了手动配置更改，导致设备进入未经授权的操作模式，超负荷运行的机械部件最终导致机器故障。
- en: '**Monitoring the Right Things**'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**监控正确的内容**'
- en: Embedded systems running Linux, communicating with a variety of services, and
    interacting with sensors and actuators have reached a complexity that doesn’t
    allow for recording the whole device state at any given point in time. The only
    option is *selective monitoring* of system properties and events.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 运行Linux的嵌入式系统，与各种服务进行通信，并与传感器和执行器进行互动，已达到一种复杂性，使得在任何给定时间点记录整个设备状态变得不现实。唯一的选择是对系统属性和事件进行*选择性监控*。
- en: '**WARNING**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**警告**'
- en: '*Logging system data is a double-edged sword. It might be of great use to your
    service engineers during troubleshooting, but if your log contains usernames,
    passwords, and other sensitive data, attackers might very much appreciate the
    information free of charge.*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*日志系统数据是把双刃剑。它在故障排除过程中可能对服务工程师大有帮助，但如果日志中包含用户名、密码及其他敏感数据，攻击者可能会免费利用这些信息。*'
- en: '***User Interactions and Access Control***'
  id: totrans-17
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***用户互动与访问控制***'
- en: A good starting point is to monitor events that are related to user interaction
    and access control.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的起点是监控与用户互动和访问控制相关的事件。
- en: '**User Sessions**'
  id: totrans-19
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**用户会话**'
- en: If humans log in to a device, they don’t do it without intention, whether authorized
    or malicious. Knowing the user login history and being able to match it with real-world
    activities of a certain human might reveal that an account was misused. For example,
    the person corresponding to a virtual user could have been on vacation and therefore
    clearly not acting.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果人类登录到一个设备，他们的行为是有目的的，无论是授权的还是恶意的。了解用户的登录历史，并能将其与某个用户的实际活动相匹配，可能会揭示账户被滥用的情况。例如，与一个虚拟用户对应的人可能正在度假，因此显然不可能在进行操作。
- en: In addition, a high number of failed login attempts can indicate that a brute-force
    attack has been performed. Finally, the time and date information of user sessions
    might help in reconstructing an attack’s timeline.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，大量失败的登录尝试可能表明已经进行了暴力破解攻击。最后，用户会话的时间和日期信息可能有助于重建攻击的时间线。
- en: '**Access-Control Violations**'
  id: totrans-22
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**访问控制违规**'
- en: As described in [Chapter 11](ch11.xhtml#ch11), users and processes should be
    restricted to the minimum permissions necessary to fulfill their tasks. Besides
    the positive effect of access restrictions at runtime, those measures can also
    yield valuable information about which user or process *tried* to access a forbidden
    resource, which might help detect attacks in an early phase.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第11章](ch11.xhtml#ch11)所述，用户和进程应当被限制为完成任务所需的最低权限。除了运行时访问限制的积极效果之外，这些措施还可以提供关于哪个用户或进程*试图*访问禁止的资源的信息，这可能有助于在早期阶段发现攻击。
- en: '**Filesystem Activities**'
  id: totrans-24
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**文件系统活动**'
- en: Temporary files that appear suddenly and permanent changes to configuration
    or system files can indicate malicious activities. They could be initiated by
    processes running on the device, possibly because they’ve been compromised by
    exploitation of an unknown vulnerability. But a human user also could be the origin
    of manipulation, which could hint at an insider attack. Monitoring at least a
    subset of critical files and their events can be valuable in such cases.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 突然出现的临时文件以及对配置或系统文件的永久性更改，可能表明存在恶意活动。它们可能由设备上运行的进程启动，可能是因为这些进程被利用了未知漏洞。但也有可能是人为用户发起了操控，这可能暗示着内部攻击。在这种情况下，至少监控一些关键文件及其事件可能非常有价值。
- en: '**Removable Media**'
  id: totrans-26
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**可移动媒体**'
- en: Sometimes just plugging a USB thumb drive or a memory card into a device can
    trigger an attack. If your product offers such features, it absolutely makes sense
    to log information about when such media was plugged in or removed and maybe even
    which identifiers it had.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，只需将 USB 闪存盘或内存卡插入设备，就可能触发攻击。如果你的产品提供此类功能，记录何时插入或移除这些存储介质的信息，甚至是它们的标识符，完全是有意义的。
- en: '***Communication***'
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***通信***'
- en: Although monitoring all data running on all communication channels of a device
    is usually not possible because of the vast amount of data transmitted, certain
    metadata or specific sent or received information can provide valuable insights.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管由于传输数据量庞大，通常无法监控设备所有通信通道上的所有数据，但某些元数据或特定发送或接收的信息可以提供有价值的洞察。
- en: '**Network Communication**'
  id: totrans-30
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**网络通信**'
- en: Communication data received from external sources as well as data your device
    sends can yield hints of malicious activities. For example, a high amount of traffic
    from certain IP addresses might represent targeted DoS attacks. Nonstandard packets
    of communication protocols can represent adversaries testing your device’s reactions
    upon manipulated requests.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 从外部来源接收到的通信数据以及设备发送的数据，可能揭示恶意活动的线索。例如，来自某些 IP 地址的大量流量可能表示定向的 DoS 攻击。非标准的通信协议数据包可能代表攻击者在测试设备对被篡改请求的反应。
- en: New connections from your device to unknown locations and IP addresses or an
    unexpected, increased amount of outbound network traffic also might indicate that
    the device is already compromised.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从设备到未知位置和 IP 地址的新连接，或异常增加的外向网络流量，也可能表明设备已被攻破。
- en: '**Low-Level Communication**'
  id: totrans-33
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**低级通信**'
- en: In contrast to classic IT systems, an embedded system often has a variety of
    low-level interfaces like an I²C bus, serial connections, or general-purpose input/output
    (GPIO) pins. Their communication usually carries sensor or control data, which
    might again be a source for detecting unexpected behavior like forcing actuators
    into a dangerous operation mode.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统 IT 系统不同，嵌入式系统通常具有多种低级接口，如 I²C 总线、串行连接或通用输入输出（GPIO）引脚。它们的通信通常携带传感器或控制数据，这可能再次成为检测异常行为的来源，例如强迫执行器进入危险操作模式。
- en: Logging the state and communication data of these interfaces might not be a
    standard feature, but depending on their criticality, implementing it might be
    worth considering.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 记录这些接口的状态和通信数据可能不是标准功能，但根据它们的关键性，实施这一功能可能值得考虑。
- en: '***Application Behavior***'
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***应用行为***'
- en: In contrast to looking at security monitoring from a user or communication interface
    perspective, considering an application-centric approach might make sense.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 与从用户或通信接口角度查看安全监控不同，考虑采用以应用程序为中心的方法可能更有意义。
- en: '**Service Activities**'
  id: totrans-38
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**服务活动**'
- en: Some services provide interesting information about your device’s state, especially
    those with remote connections. For example, an SSH daemon that allows remote sessions
    may provide a history of login attempts with corresponding IP addresses and usernames.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一些服务提供有关设备状态的有趣信息，特别是那些具有远程连接的服务。例如，允许远程会话的SSH守护进程可能提供带有相应IP地址和用户名的登录尝试历史记录。
- en: A web server also is able to log the HTTP requests it receives, which can reveal
    adversarial activities on application layer communication.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Web服务器还能够记录它接收到的HTTP请求，这可能揭示应用层通信中的敌对活动。
- en: '**Custom Applications**'
  id: totrans-41
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**自定义应用程序**'
- en: Proprietary software components that are, for example, relevant for your business
    model might provide deep insight into the use of your device. Therefore, it should
    be quite natural to integrate monitoring facilities into important applications
    you develop on your own.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 专有软件组件，例如与你的商业模式相关的，可能提供设备使用的深刻洞察。因此，将监控设施集成到你自己开发的重要应用程序中应该是很自然的。
- en: '**Third-Party Applications**'
  id: totrans-43
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**第三方应用程序**'
- en: Whenever you allow users to install applications developed by third parties
    on your device, you face common threats originating from untrustworthy software
    components. Besides strict access management for those programs, continuous monitoring
    of their behavior is a reasonable measure.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你允许用户在设备上安装第三方开发的应用程序时，就面临着来自不可信软件组件的常见威胁。除了对这些程序进行严格的访问管理外，持续监控它们的行为也是一种合理的措施。
- en: '***System Behavior***'
  id: totrans-45
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***系统行为***'
- en: Last but not least, the overall “health status” of your device may reveal attacks
    or at least unexpected behavior you can analyze further.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，设备的整体“健康状态”可能揭示攻击或至少是你可以进一步分析的异常行为。
- en: '**System Utilization**'
  id: totrans-47
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**系统利用率**'
- en: Typical system utilization values, such as CPU load and memory consumption,
    are usually known by developers and maintenance staff. A device that shows unexpectedly
    high values can indicate additional software running on the device—for example,
    a crypto miner or backdoor service installed by attackers. But it might also just
    be a side effect of an attack targeting low-level or network interfaces.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员和维护人员通常了解典型的系统利用率值，如CPU负载和内存消耗。如果设备显示异常高的值，可能表明设备上运行了额外的软件，例如加密矿工或攻击者安装的后门服务。但它也可能只是针对低级或网络接口的攻击的副作用。
- en: '**Process and System Crashes**'
  id: totrans-49
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**进程和系统崩溃**'
- en: Do your device’s processes crash from time to time? I hope not, but maybe they
    do only in rare cases that you didn’t cover during testing. If single processes
    or even the whole system crashes multiple times, it might be due to an attacker
    probing your device for potential vulnerabilities. If it’s detected and analyzed
    early enough, you might be able to take action and prevent further damage.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你的设备进程是否偶尔崩溃？我希望不是，但也许它们只是偶尔在你测试时没有覆盖到的极少数情况下崩溃。如果单个进程甚至整个系统多次崩溃，可能是攻击者正在探测设备的潜在漏洞。如果能够尽早检测并分析出来，你可能能够采取措施，防止进一步的损害。
- en: '**Errors and Warnings**'
  id: totrans-51
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**错误和警告**'
- en: Although error messages and warnings can be part of perfectly normal device
    behavior, they can also be evidence that an adversary is tampering with a device’s
    services or configuration options during a reconnaissance phase.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管错误信息和警告可能是完全正常的设备行为的一部分，但它们也可能是敌对者在侦察阶段篡改设备服务或配置选项的证据。
- en: '***Risk-Based Monitoring***'
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***基于风险的监控***'
- en: Which monitoring measures are reasonable for your product should be decided
    on the basis of your device’s threat and risk analysis, as described in [Chapter
    1](ch01.xhtml#ch01). For example, if you discovered that high network loads are
    a risk for your device’s real-time operations, monitoring network communication
    and system utilization is a good idea. If your device allows for running third-party
    Docker containers, monitoring the activities of those potentially dangerous software
    bundles should be on your list. And if your device has a web interface for configuration
    purposes, logging web server events becomes a necessity.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 哪些监控措施对于你的产品是合理的，应该基于设备的威胁和风险分析来决定，如[第一章](ch01.xhtml#ch01)中所述。例如，如果你发现高网络负载是设备实时操作的风险，监控网络通信和系统利用率是个好主意。如果设备允许运行第三方Docker容器，那么监控这些潜在危险软件包的活动应该在你的监控清单上。如果设备有用于配置的Web接口，那么记录Web服务器事件就成为一种必要措施。
- en: '**NOTE**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Many more sources of valuable information might exist for security monitoring
    that are specific to your device. Find them and use them to secure your device.*'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*可能存在更多针对您设备的安全监控有价值的信息来源。找到它们并利用它们来保护您的设备。*'
- en: '**Designing a Monitoring Scheme**'
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**设计监控方案**'
- en: While system monitoring is not new for IT systems, implementing it efficiently
    is always a challenge—especially when it comes to logging events and processes
    on embedded systems. Depending on the capabilities of a specific product and the
    requirements for its use, a trade-off between on-device and server-based processing
    must be found.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然系统监控对于 IT 系统来说并不新鲜，但高效地实现它始终是一个挑战——尤其是在嵌入式系统上记录事件和过程时。根据特定产品的功能和使用要求，必须在设备端和基于服务器的处理之间找到一个折衷方案。
- en: '[Figure 12-1](ch12.xhtml#ch12fig01) shows a generic data-flow architecture
    of log data, starting with its collection, local storage, and eventual on-device
    analysis. While constrained devices will keep this part rather lean, stronger
    devices might aggregate more data and already perform on-device analysis to maximize
    potential insights.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 12-1](ch12.xhtml#ch12fig01) 显示了日志数据的通用数据流架构，从数据的收集、本地存储到最终的设备端分析。尽管受限的设备会将这一部分保持得较为简洁，但较强的设备可能会聚合更多数据并已在设备端进行分析，以最大化潜在的洞察。'
- en: '![Image](../images/12fig01.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/12fig01.jpg)'
- en: '*Figure 12-1: A generic logging architecture*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 12-1：通用日志架构*'
- en: Usually, networked devices transmit at least part of the collected information
    to a remote server, whether on the local network or on the internet. This not
    only allows for storing larger amounts of log data but also enables performance-intensive
    data analytics for single devices and across whole device populations. The latter
    especially leads to significantly increased quality of security monitoring.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，网络设备至少会将收集到的信息的一部分传输到远程服务器，无论是在本地网络上还是在互联网上。这不仅可以存储更多的日志数据，还可以进行对单个设备以及整个设备群体的性能密集型数据分析。尤其是后者，显著提高了安全监控的质量。
- en: '***Challenges for Embedded Systems***'
  id: totrans-63
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***嵌入式系统的挑战***'
- en: When it comes to (I)IoT scenarios with rather constrained devices and possibly
    pretty large populations, the specific design of the monitoring process faces
    several challenges.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到（I）IoT 场景中设备相对受限且可能存在相当大规模的人群时，监控过程的具体设计面临着几个挑战。
- en: '**Limited Resources**'
  id: totrans-65
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**有限资源**'
- en: Embedded systems can be limited in several dimensions, which leaves developers
    with the difficulty of determining the amount of resources to use for monitoring.
    Some devices are battery powered, and collection (let alone transmission) of log
    data would be a further burden on battery life. For products based on small microcontrollers,
    log data collection isn’t possible from a performance perspective because there’s
    simply no time left for such tasks. Some systems have limited storage space and
    store only small amounts of log data, while others don’t have the high-bandwidth
    network connection necessary for transferring monitoring data to central servers.
    Some devices have all these limitations.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式系统在多个维度上可能受到限制，这使得开发者在确定用于监控的资源量时面临困难。有些设备是电池供电的，收集（更不用说传输）日志数据会进一步增加电池的负担。对于基于小型微控制器的产品，出于性能考虑，日志数据的收集是不可能的，因为根本没有时间执行这些任务。有些系统的存储空间有限，只能存储少量的日志数据，而其他系统则没有将监控数据传输到中央服务器所需的高带宽网络连接。有些设备同时具备这些限制。
- en: For existing products, which are optimized to their single, dedicated task,
    it’s often difficult or nearly impossible to integrate security monitoring as
    an add-on. But that shouldn’t be an excuse to discard all monitoring features.
    If you identify the need for security monitoring early in the development life
    cycle, you have a chance to reserve resources for this absolutely relevant purpose.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于已经针对单一专用任务优化的现有产品而言，通常很难或几乎不可能将安全监控作为附加功能进行集成。但这不应成为放弃所有监控功能的借口。如果您能在开发生命周期的早期识别出安全监控的需求，您有机会为这一绝对相关的目的保留资源。
- en: '**Synchronized Time Sources**'
  id: totrans-68
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**同步时间源**'
- en: Correct timestamps are essential for correlating events within a device and
    with those of other devices and system components. For this purpose, time sources
    have to be synchronized, which can’t be taken for granted on embedded systems.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 正确的时间戳对于设备内部及与其他设备和系统组件之间的事件关联至关重要。为此，时间源必须进行同步，而在嵌入式系统中这一点不能理所当然。
- en: Support for synchronization protocols, like NTP, likely has to be enabled on
    purpose, and integrators who use your product as well as operators of these systems
    have to provide a suitable infrastructure, like master clocks and time servers
    within their networks.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 需要故意启用像 NTP 这样的同步协议支持，使用你产品的集成商以及这些系统的操作员必须提供适当的基础设施，如主时钟和网络中的时间服务器。
- en: '**Secure Communication**'
  id: totrans-71
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**安全通信**'
- en: Secure transmission of monitoring data from a device to a central collection
    server comes with several prerequisites. The device has to be able to authenticate
    the central server; otherwise, it could be tricked into sending valuable data
    to unauthorized parties.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 从设备到中央收集服务器的监控数据的安全传输需要满足多个前提条件。设备必须能够验证中央服务器的身份，否则可能会被欺骗，向未经授权的方发送重要数据。
- en: The server also has to be able to verify the identity of the device providing
    data, because fake devices could significantly disturb the monitoring process
    by sending manipulated data. In addition, the data transmission itself should
    be protected in all aspects of secure communication, as described in [Chapter
    7](ch07.xhtml#ch07).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器也必须能够验证提供数据的设备的身份，因为虚假设备可能会通过发送篡改数据严重干扰监控过程。此外，数据传输本身应该在所有安全通信方面得到保护，具体如[第7章](ch07.xhtml#ch07)所述。
- en: '**Integrity-Protected Local Storage**'
  id: totrans-74
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**完整性保护的本地存储**'
- en: If you decide to partly or even completely rely on device-side logging without
    external transmissions, you have to prepare for the question, “How do you actually
    guarantee that the log data wasn’t altered at some point?” This question might
    even be posed by legal entities or in a court of law, for example, if your device
    is part of a nation’s critical infrastructure.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定部分或完全依赖设备端日志而不进行外部传输，你必须准备好回答这样一个问题：“你如何保证日志数据在某个时候没有被篡改？”这个问题甚至可能会由法律实体或法庭提问，例如，如果你的设备是某个国家关键基础设施的一部分。
- en: System-integrity protection as described in [Chapter 8](ch08.xhtml#ch08) is
    a fundamental requirement for solid solutions regarding this challenge.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第8章](ch08.xhtml#ch08)所描述的系统完整性保护是解决这一挑战的根本要求。
- en: '**Confidentiality-Protected Local Storage**'
  id: totrans-77
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**保密保护的本地存储**'
- en: As mentioned in the previous section, log data might be useful not only for
    debugging your device but also for attackers during their reconnaissance phase.
    Therefore, you can definitely regard logfiles as assets that need confidentiality
    protection.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，日志数据不仅对调试设备有用，也可能对攻击者在其侦察阶段有用。因此，你可以把日志文件视为需要保密保护的资产。
- en: Measures like encrypted filesystems, as explained in [Chapter 5](ch05.xhtml#ch05),
    can be a solution. Another option is the implementation of a hybrid encryption
    scheme using the public key of a central log server to encrypt a random local
    symmetric key, which is, in turn, used to encrypt the locally generated log data.
    In that case, only the remote server in possession of the corresponding private
    key would be able to decrypt and analyze the log information.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第5章](ch05.xhtml#ch05)所解释的那样，像加密文件系统这样的措施可以作为一种解决方案。另一种选择是实施混合加密方案，使用中央日志服务器的公钥加密一个随机的本地对称密钥，该密钥用于加密本地生成的日志数据。在这种情况下，只有持有相应私钥的远程服务器才能解密和分析日志信息。
- en: '***Monitoring of the On-Device Logging Process***'
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***设备日志过程的监控***'
- en: Continuous security monitoring can play a central role in the detection of attacks,
    timely reactions to incidents, and comprehensive forensic analysis after a compromise,
    which means the involved on-device logging processes are expected to function
    properly. However, it would be naive to assume that monitoring processes are robust
    by nature and immune to all sorts of influences. It’s important to install measures
    that check whether the involved logging procedures are working correctly.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 持续的安全监控在检测攻击、及时响应事件以及在妥协后进行全面的取证分析中起着关键作用，这意味着涉及的设备日志过程必须正常运行。然而，假设监控过程天生稳健并能免疫所有影响是天真的。重要的是要安装措施，检查相关的日志过程是否正常工作。
- en: No matter whether the local log storage is only a few megabytes or some gigabytes,
    it is always finite. In some cases, it might be tempting to say that a certain
    memory can hold “more log events than a specific device could ever generate,”
    but keep in mind that logging behavior can change with future firmware versions,
    devices in industrial scenarios might operate for decades, and new features and
    content could significantly reduce storage capacities. Monitoring the log storage
    capacity is, therefore, a mandatory task. Also, you have to make a decision about
    how to react if storage space is exhausted, or even before that happens. For example,
    if possible, logs can be compressed and archived to a remote location, or the
    oldest events can be overwritten by new ones coming in.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 无论本地日志存储只有几兆字节还是几个千兆字节，它始终是有限的。在某些情况下，可能会诱使人说某个内存可以存储“比某个特定设备可能生成的更多的日志事件”，但请记住，日志行为可能会随着未来固件版本的更新而变化，工业场景中的设备可能会运行数十年，并且新特性和内容可能会显著减少存储容量。因此，监控日志存储容量是一个必须执行的任务。此外，您还必须决定如果存储空间耗尽，或者甚至在发生之前如何应对。例如，如果可能的话，可以将日志压缩并归档到远程位置，或者通过新产生的日志事件覆盖最旧的事件。
- en: In addition to local storage-capacity issues, remote connections used to transmit
    log data also could be affected. You can easily imagine how the bandwidth of such
    communication could decrease abruptly or completely disconnect. In such cases,
    it’s the device’s responsibility to decide whether collected data is temporarily
    stored at a local destination until the connection is reestablished and the remote
    location is able to catch up again, or if monitoring data should be discarded
    at least partially or even completely.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 除了本地存储容量问题外，用于传输日志数据的远程连接也可能会受到影响。您可以轻松想象，这种通信的带宽可能会突然下降，甚至完全断开连接。在这种情况下，设备需要决定是否将收集的数据临时存储在本地，直到重新建立连接并且远程位置能够跟上，或者是否至少部分或完全丢弃监控数据。
- en: Further, your logging applications could unpleasantly run into unknown bugs,
    or adversaries might attack your monitoring system on purpose. Both scenarios
    could result in crashes of critical system parts and leave you blind in terms
    of monitoring data. Even though your device can’t recover from all possible situations,
    automatically restarting monitoring services after crashes and locally logging
    events regarding the eventual loss of monitoring capabilities can be worthwhile.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您的日志应用程序可能会碰到未知的错误，或者对手可能故意攻击您的监控系统。这两种情况都可能导致关键系统部分崩溃，并让您在监控数据方面失去视线。即使您的设备不能从所有可能的情况中恢复，崩溃后自动重启监控服务并本地记录有关最终丧失监控能力的事件仍然是值得的。
- en: '***Central Log Analysis and Management***'
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***集中日志分析与管理***'
- en: In many use cases, having a central storage location for monitoring data as
    well as the analysis and correlation of information from the whole device population
    is of great value. Among other advantages, this approach allows you to react to
    security-related events in the field within a short time frame. If an attacker
    is messing with critical configuration or system files, you might want to know
    that as soon as possible. This approach also enables you to include a long history
    of device log data into current analyses, and once the data has been transmitted,
    on-device manipulation or destruction of log information would become obvious.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多使用案例中，拥有一个集中存储位置来监控数据，并对来自整个设备群体的信息进行分析和关联是非常有价值的。除其他优点外，这种方法使您能够在短时间内对现场的安全相关事件做出反应。如果攻击者正在篡改关键配置或系统文件，您可能希望尽快得知此事。这种方法还使您能够将设备日志数据的长期历史纳入当前分析中，并且一旦数据被传输，设备上对日志信息的篡改或破坏将变得显而易见。
- en: However, implementing the second row of the logging architecture shown in [Figure
    12-1](ch12.xhtml#ch12fig01) is all but simple. One challenge in (I)IoT scenarios
    can be the scalability of the central monitoring system and the availability of
    corresponding analysis capacities. Of course, this depends on the size of your
    device populations. While a few thousand products might be manageable, scalability
    gains center stage when monitoring a six-digit number of devices or even more.
    This requires not only a vast amount of central storage capacities but also people
    and algorithms that sift through all the data to identify unexpected device behavior,
    emerging malicious activities, or indicators of compromise (IoCs).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，实施[图12-1](ch12.xhtml#ch12fig01)中显示的日志架构第二行并非易事。在（I）IoT场景中，一个挑战可能是中央监控系统的可扩展性和相应分析能力的可用性。当然，这取决于你的设备群体的大小。虽然几千个产品可能是可管理的，但当监控六位数甚至更多设备时，可扩展性变得至关重要。这不仅需要大量的中央存储能力，还需要人员和算法来筛选所有数据，以识别意外的设备行为、出现的恶意活动或妥协指示符（IoC）。
- en: Systems used for this purpose are often known as *security information and event
    management (SIEM)* because they collect event data relevant for security monitoring
    and provide a means to find the proverbial needle in the haystack. Examples of
    such analysis platforms, open source or commercial, include the Elastic Stack,
    Graylog, and Splunk, just to name a few. While big data analytics and artificial
    intelligence can provide strong support for this task, in many cases, judgment
    and eventual manual investigation by a human expert is necessary.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 用于此目的的系统通常被称为*安全信息和事件管理（SIEM）*系统，因为它们收集与安全监控相关的事件数据，并提供一种手段来找到“干草堆中的针”。这类分析平台的示例包括Elastic
    Stack、Graylog和Splunk，仅举几例。虽然大数据分析和人工智能可以为此任务提供强有力的支持，但在许多情况下，判断和最终由人工专家进行手动调查是必需的。
- en: As explained in [Chapter 1](ch01.xhtml#ch01), every secure product life cycle
    has to establish some kind of incident- and vulnerability-response processes.
    Make sure that the teams operating the SIEM system have a strong connection to
    the product development and management teams, which will enable you to gain efficiency
    in your incident and vulnerability handling.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第1章](ch01.xhtml#ch01)所述，每个安全产品生命周期必须建立某种类型的事件和漏洞响应流程。确保操作SIEM系统的团队与产品开发和管理团队保持紧密联系，这将使你在事件和漏洞处理方面提高效率。
- en: With all the advantages of central monitoring systems and processes, don’t forget
    to critically assess which data you *really* need for your chosen monitoring approach.
    Piling up stacks of unnecessary data only makes your solution inefficient and
    could lead to conflicts with the European GDPR or similar laws, especially if
    your database contains personally identifiable information (PII).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管中央监控系统和流程具有诸多优点，但不要忘记批判性地评估你*真正*需要哪些数据来支持你选择的监控方法。堆积大量不必要的数据不仅会使你的解决方案低效，还可能与欧洲GDPR或类似的法律发生冲突，特别是当你的数据库包含个人身份信息（PII）时。
- en: '**NOTE**'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*If you’re not familiar with the legal restrictions of PII collection, thoroughly
    acquaint yourself with that topic. Even rather “technical” data like IP and MAC
    addresses might be traced back to natural persons and, therefore, require special
    treatment or should not be collected at all.*'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你不熟悉PII收集的法律限制，请深入了解这个话题。即便是类似IP和MAC地址这样的“技术”数据也可能追溯到自然人，因此需要特殊处理，或者根本不应收集。*'
- en: '**Case Study: Logging Events on an STM32MP157F Device**'
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**案例研究：在STM32MP157F设备上记录事件**'
- en: This case study presents typical tools and configurations to extract monitoring
    data from a Linux-based embedded system like an STM32MP157F-DK2 board.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 本案例研究展示了从像STM32MP157F-DK2板这样的基于Linux的嵌入式系统中提取监控数据的典型工具和配置。
- en: '***User-Session Monitoring with journald***'
  id: totrans-95
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用journald进行用户会话监控***'
- en: Linux systems that run `systemd`, like my STM32MP157F-DK2 firmware does, come
    with the `journald` tool, which collects valuable information about basic system
    processes.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`systemd`的Linux系统，比如我的STM32MP157F-DK2固件，带有`journald`工具，该工具收集有关基本系统进程的有价值信息。
- en: For example, [Listing 12-1](ch12.xhtml#ch12list01) shows a series of log entries
    extracted from `journalctl` by using `grep logind`.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，[列表 12-1](ch12.xhtml#ch12list01)展示了一系列通过`grep logind`从`journalctl`中提取的日志条目。
- en: '[PRE0]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Listing 12-1: Typical* journald *entries for user sessions*'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-1：用户会话的典型* journald *条目*'
- en: The logs clearly show that the root user had two sessions on April 28 and that
    the local service user `lservice` was logged in for around 13 minutes on May 14\.
    If this doesn’t correlate with an official inspection by a technician from your
    company, it might be an indication of unauthorized access.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 日志清晰地显示了root用户在4月28日有两次会话，以及本地服务用户`lservice`在5月14日登录了大约13分钟。如果这与公司技术人员的官方检查不符，可能意味着存在未授权访问。
- en: The `journald` daemon can run in several modes, two of which are *volatile*
    and *persistent*. While the first option stores journal data only until the system
    is rebooted, the second one makes `journald` store its log data under */var/log/
    journal* in a persistent way, which can be helpful for forensics. You can set
    the corresponding `Storage=persistent` option in its configuration file */etc/
    systemd/journald.conf*.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`journald`守护进程可以运行在多种模式下，其中两种模式是*易失性*和*持久性*。第一种模式仅在系统重启之前存储日志数据，而第二种模式则使`journald`将日志数据持久化存储在*/var/log/journal*中，这对于取证可能非常有帮助。你可以在其配置文件*/etc/systemd/journald.conf*中设置相应的`Storage=persistent`选项。'
- en: Further configuration parameters like `SystemMaxUse=` and `RuntimeMaxUse=` as
    well as `SystemKeepFree=` and `RuntimeKeepFree=` determine the limits of journal
    file sizes for on-disk and in-memory storage, respectively, so critical situations
    caused by too much memory consumption of logfiles can be avoided.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步的配置参数，如`SystemMaxUse=`和`RuntimeMaxUse=`，以及`SystemKeepFree=`和`RuntimeKeepFree=`，分别决定了磁盘和内存存储的日志文件大小限制，以避免因日志文件占用过多内存而引发的关键问题。
- en: '***Kernel Event Monitoring with auditd***'
  id: totrans-103
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用auditd进行内核事件监控***'
- en: The Linux kernel provides an audit framework that collects information about
    potentially security-relevant events happening within the kernel. It’s the same
    framework that’s used by MAC systems like SELinux or AppArmor to watch and restrict
    access to system resources, as described in [Chapter 11](ch11.xhtml#ch11).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核提供了一个审计框架，用于收集内核中可能涉及安全的事件信息。这个框架与MAC系统（如SELinux或AppArmor）使用的框架相同，后者用于监视和限制对系统资源的访问，如[第11章](ch11.xhtml#ch11)中所述。
- en: The `auditd` user-space tool builds upon this framework and enables the persistent
    storage of security events in a device’s nonvolatile memory.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`auditd`用户空间工具基于该框架构建，并使设备的非易失性内存中能够持久存储安全事件。'
- en: '**Installation**'
  id: totrans-106
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**安装**'
- en: If you successfully installed AppArmor or another popular MAC system on your
    device, the audit framework is probably already up and running. Otherwise, you
    can set `CONFIG_AUDIT=y` within your Linux kernel’s configuration to enable it.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经成功安装了AppArmor或其他流行的MAC系统，那么审计框架可能已经启用并在运行中。否则，你可以在Linux内核的配置文件中设置`CONFIG_AUDIT=y`来启用它。
- en: The `meta-oe` layer for Yocto contains the recipe to install the `auditd` tool
    from *meta-oe/recipes-security/audit*. It can be simply added to your image by
    setting `IMAGE_INSTALL += "auditd"`. After booting your system with the newly
    installed software, you should see that your system now contains the */var/ log/audit/audit.log*
    file, which is the default place to persistently store kernel audit data.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Yocto的`meta-oe`层包含了安装`auditd`工具的配方，来自*meta-oe/recipes-security/audit*。你可以通过设置`IMAGE_INSTALL
    += "auditd"`将其简单地添加到你的镜像中。在使用新安装的软件启动系统后，你应该能看到系统中包含了*/var/log/audit/audit.log*文件，这是默认的持久化存储内核审计数据的位置。
- en: '**Customization**'
  id: totrans-109
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**定制化**'
- en: The audit framework is a powerful tool with deep access to system processes,
    so it’s important to explicitly specify the kind of events you want to monitor.
    You can use `auditctl` to add watch rules to a running `auditd` service, as shown
    in [Listing 12-2](ch12.xhtml#ch12list02).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 审计框架是一个强大的工具，能够深入访问系统进程，因此，明确指定你要监控的事件类型非常重要。你可以使用`auditctl`向正在运行的`auditd`服务添加监视规则，如[清单12-2](ch12.xhtml#ch12list02)中所示。
- en: '[PRE1]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*Listing 12-2: Adding audit rules with* auditctl'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单12-2：使用* auditctl *添加审计规则*'
- en: The `-D` parameter removes all currently active rules. The second command in
    [Listing 12-2](ch12.xhtml#ch12list02) installs a rule that monitors the */etc/passwd*
    file (`-w /etc/ passwd`) for read (`r`) and write (`w`) access as well as file
    attribute changes (`a`). The `-k` option allows for adding an arbitrary key string
    that gives the rule a certain meaning and accelerates log searching at a later
    time.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`-D`参数会删除所有当前活动的规则。[清单12-2](ch12.xhtml#ch12list02)中的第二个命令安装了一个规则，用于监视*/etc/passwd*文件（`-w
    /etc/passwd`）的读取（`r`）和写入（`w`）访问以及文件属性更改（`a`）。`-k`选项允许添加一个任意的键字符串，为规则赋予特定意义，并加速后续日志的搜索。'
- en: However, the rules set by `auditctl` are available only until the system performs
    a reboot. To install watch rules persistently, you have to add them to the */etc/audit/audit.rules*
    file. As shown in [Listing 12-3](ch12.xhtml#ch12list03), the rules in this file
    are actually equal to the command line calls to `auditctl`, just without the tool
    name at the beginning.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，`auditctl`设置的规则仅在系统重启之前有效。为了持久性地安装监视规则，你必须将它们添加到*/etc/audit/audit.rules*文件中。如[清单12-3](ch12.xhtml#ch12list03)所示，该文件中的规则实际上等同于命令行中调用`auditctl`的内容，只是开头没有工具名称。
- en: '[PRE2]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '*Listing 12-3: An example of persistent audit rules*'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单12-3：持久性审计规则示例*'
- en: File-access monitoring can be useful in a variety of scenarios. For example,
    if you enable SSH access to your device based on the popular `dropbear` daemon,
    it might be reasonable to watch for changes of the corresponding configuration
    file, which—if manipulated—could potentially open a backdoor to your device. Further,
    access to */etc/passwd* and */etc/shadow* are common indicators for malicious
    activities. Advanced attackers might also target the audit system itself, which
    makes the files containing audit rules and the audit tools valid targets to watch.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 文件访问监视在多种场景下都非常有用。例如，如果你基于流行的`dropbear`守护进程启用了SSH访问设备，那么监视相应配置文件的变化是合理的，因为如果该文件被篡改，可能会为你的设备打开一个后门。此外，访问*/etc/passwd*和*/etc/shadow*通常是恶意活动的指示。高级攻击者也可能会攻击审计系统本身，这使得包含审计规则和审计工具的文件成为有效的监控目标。
- en: After enabling the rules, you can use the `ausearch` tool to filter audit data,
    as demonstrated in [Listing 12-4](ch12.xhtml#ch12list04) for the installed SSH
    configuration watch rules.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 启用规则后，你可以使用`ausearch`工具来过滤审计数据，正如[清单12-4](ch12.xhtml#ch12list04)中展示的，针对已安装的SSH配置监视规则。
- en: '[PRE3]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*Listing 12-4: Using* ausearch *to find suspicious activities*'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单12-4：使用* ausearch *查找可疑活动*'
- en: The first call to `ausearch` with the `ssh_config` key reports that a new rule
    with this key was added by the `auditctl` tool. Afterward, I just touched (didn’t
    even manipulate) the configuration file located at */etc/default/dropbear*. The
    second call to `ausearch` clearly states that the root user (`uid=0 gid=0`) used
    the `touch` tool to access the file */etc/default/dropbear* while being in the
    */home/ root* directory only 12 minutes after the new rule was loaded. This example
    shows the beneficial strengths of having monitoring data available for critical
    system files.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次调用`ausearch`并使用`ssh_config`关键字时，报告指出一个新的规则已通过`auditctl`工具添加。之后，我只是触碰（甚至没有操作）位于*/etc/default/dropbear*的配置文件。第二次调用`ausearch`清楚地表明，root用户（`uid=0
    gid=0`）使用`touch`工具访问了文件*/etc/default/dropbear*，而且只是在新规则加载后12分钟内，就在*/home/root*目录下。这一示例展示了对于关键系统文件拥有监控数据的好处。
- en: Besides watching file access, `auditd` is also able to intercept syscalls. However,
    since such rules directly affect performance, you should use them only if you
    consider them absolutely necessary.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 除了监视文件访问外，`auditd`还能够拦截系统调用。然而，由于此类规则直接影响性能，因此只有在认为绝对必要时，才应使用它们。
- en: '***Service and Application Event Logging***'
  id: totrans-123
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***服务和应用程序事件日志记录***'
- en: 'While `auditd` provides powerful services to monitor kernel behavior and to
    log accesses to system resources, it doesn’t capture an important part of your
    device: specific events generated by services and applications.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`auditd`提供了强大的服务来监视内核行为并记录对系统资源的访问，但它没有捕获你设备的重要部分：由服务和应用程序生成的特定事件。
- en: '**Logging Application Events with syslog**'
  id: totrans-125
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用syslog记录应用程序事件**'
- en: Within my STM32MP157F firmware, BusyBox implements a minimal version of `syslogd`
    that some applications use to store log information in the */var/log/messages*
    file. One example for such an application is the lightweight `dropbear` SSH daemon.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的STM32MP157F固件中，BusyBox实现了`syslogd`的一个最小版本，某些应用程序使用它将日志信息存储在*/var/log/messages*文件中。一个这样的应用程序示例是轻量级的`dropbear`
    SSH守护进程。
- en: '[Listing 12-5](ch12.xhtml#ch12list05) shows corresponding log messages after
    several SSH login attempts.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单12-5](ch12.xhtml#ch12list05)展示了多次SSH登录尝试后的对应日志信息。'
- en: '[PRE4]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '*Listing 12-5: SSH login attempts logged by* syslogd'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单12-5：通过* syslogd *记录的SSH登录尝试*'
- en: The log data first shows a `Bad PAM password attempt` ➊ for the user `rservice`,
    shortly followed by a successful `PAM password auth` ➋ for the same user. The
    established session is closed only 10 seconds later ➌. Further, three failed login
    attempts for the root user can be seen that finally make the SSH daemon quit the
    login process ➍. Such log data can be extremely useful for detecting brute-force
    attacks on SSH accounts or login attempts for unusual users and from unexpected
    IP addresses.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 日志数据首先显示了一个 `Bad PAM password attempt` ➊，是针对用户 `rservice` 的，紧接着是同一用户的成功 `PAM
    password auth` ➋。建立的会话仅在 10 秒后 ➌ 被关闭。此外，还可以看到对 root 用户的三次失败登录尝试，最终导致 SSH 守护进程退出登录过程
    ➍。这样的日志数据对于检测 SSH 账户的暴力破解攻击或来自不寻常用户和意外 IP 地址的登录尝试非常有用。
- en: '**Using Application-Specific Logfiles**'
  id: totrans-131
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用特定应用程序的日志文件**'
- en: Some applications do not rely on `syslogd`’s services by default, but rather
    create and manage their own logfiles. One example is the `apache2` web server
    running on my STM32MP157F-DK2 board. Its logfiles *access_log* and *error_log*
    can be found under */var/log/apache2/*. [Listing 12-6](ch12.xhtml#ch12list06)
    shows sample HTTP requests from the IP address 192.168.13.17.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 有些应用程序默认不依赖于 `syslogd` 的服务，而是创建和管理自己的日志文件。一个例子是运行在我的 STM32MP157F-DK2 板上的 `apache2`
    web 服务器。它的日志文件 *access_log* 和 *error_log* 可以在 */var/log/apache2/* 下找到。[Listing
    12-6](ch12.xhtml#ch12list06) 显示了来自 IP 地址 192.168.13.17 的示例 HTTP 请求。
- en: '[PRE5]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '*Listing 12-6: Sample access log entries from* apache2'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-6: 来自 apache2 的示例访问日志条目*'
- en: This information provides not only the history of successfully delivered web
    pages by the web server but also requests that might reveal adversarial activities
    typical for the reconnaissance phase. Here, an attacker checked the availability
    of the */admin/*, */config/*, and */cgi-bin/* subdirectories. Again, early detection
    can prevent later attacks and damages.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息不仅提供了 web 服务器成功交付的网页的历史记录，还揭示了可能暴露典型侦察阶段的敌对活动的请求。在这里，攻击者检查了 */admin/*、*/config/*
    和 */cgi-bin/* 子目录的可用性。再次强调，早期检测可以防止后续攻击和损害。
- en: '***Logging to a Remote Server***'
  id: totrans-136
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***日志记录到远程服务器***'
- en: All the previously mentioned tools operate locally on a device, which might
    be sufficient for device-specific forensic purposes whenever you have physical
    or remote access to it. However, as suggested earlier in this chapter, the central
    collection of log data can be beneficial in many ways. Although the setup of a
    central monitoring infrastructure goes beyond the device-centered focus of this
    book, I would like to point out that all the data collected by these tools can
    be transmitted to remote locations.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 所有前面提到的工具都在设备上本地运行，当你拥有设备的物理或远程访问权限时，这可能足以满足设备特定的取证需求。然而，正如本章前面所提到的，集中收集日志数据在许多方面是有益的。虽然建立中央监控基础设施超出了本书的设备中心化重点，但我想指出的是，所有这些工具收集的数据都可以传输到远程位置。
- en: For example, the `journald` daemon can be extended by a service called `systemd-journal-remote`
    for logging data to a remote server. The `audisp` tool and its `audisp-remote`
    plug-in can enable central log aggregation for data collected by the Linux audit
    framework and `auditd`. Alternatively, specific tools like `auditbeat` can be
    used to send audit data to an Elastic Stack, for example. Further, `rsyslog` and
    `syslog-ng` are modern `syslog` implementations that allow for logging to remote
    locations. Finally, some of these tools are even interoperable, which means that
    `journald`, for example, can be configured to forward log data to a `syslog` daemon,
    which in turn can take care of remote transmission.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`journald` 守护进程可以通过一个名为 `systemd-journal-remote` 的服务扩展，用于将数据记录到远程服务器。`audisp`
    工具及其 `audisp-remote` 插件可以实现通过 Linux 审计框架和 `auditd` 收集的数据的中央日志聚合。或者，可以使用像 `auditbeat`
    这样的特定工具将审计数据发送到 Elastic Stack。进一步地，`rsyslog` 和 `syslog-ng` 是现代的 `syslog` 实现，它们允许将日志记录到远程位置。最后，其中一些工具甚至是互操作的，这意味着例如
    `journald` 可以配置为将日志数据转发给一个 `syslog` 守护进程，后者可以负责远程传输。
- en: '**Summary**'
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: It’s simple to request that a device should aggregate and transmit system data
    and event information to a central server. However, when you start implementing
    such measures, you’ll encounter several obstacles to overcome, from legal issues
    to device constraints to the human resources necessary for continuously operating
    security-monitoring services.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 请求一个设备聚合并传输系统数据和事件信息到中央服务器是很简单的。然而，当你开始实施这些措施时，你会遇到多个障碍需要克服，从法律问题到设备限制，再到持续运营安全监控服务所需的人力资源。
- en: In this chapter, I discussed typical information that can be useful for security
    monitoring of embedded systems, from user sessions and their interactions to network
    traffic metadata to system crashes and error messages. Clearly, the more you want
    to monitor, the more on-device and server resources you need. A risk-based approach
    is absolutely reasonable to find a compromise between full device transparency
    and minimal resource usage for your specific product.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论了对嵌入式系统进行安全监控时可能有用的典型信息，从用户会话及其交互到网络流量元数据，再到系统崩溃和错误消息。显然，你想监控的内容越多，就需要更多的设备端和服务器资源。基于风险的方法完全合理，可以在全面的设备透明度和最小资源使用之间找到折衷，适用于你的具体产品。
- en: System monitoring is an essential layer within your defense-in-depth strategy
    because even if all the protection measures you implement fail, monitoring might
    enable you to detect ongoing attacks and anomalies. Monitoring can make the difference
    between getting away with a black eye and ruining your product’s and your company’s
    reputation.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 系统监控是防御深度策略中的一个重要层级，因为即使你实施的所有保护措施都失败，监控仍然可能帮助你检测到正在进行的攻击和异常。监控可以决定是只是受损而有些代价，还是完全毁掉你的产品和公司的声誉。
