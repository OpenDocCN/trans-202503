- en: '**3'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**3'
- en: THE LOGIC OF UNCERTAINTY**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 不确定性逻辑**
- en: '![Image](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common.jpg)'
- en: 'In [Chapter 2](ch02.xhtml#ch02), we discussed how probabilities are an extension
    of the true and false values in logic and are expressed as values between 1 and
    0\. The power of probability is in the ability to express an infinite range of
    possible values between these extremes. In this chapter, we’ll discuss how the
    rules of logic, based on these logical operators, also apply to probability. In
    traditional logic, there are three important operators:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.xhtml#ch02)中，我们讨论了概率是逻辑中真值和假值的扩展，并且它们表现为介于1和0之间的值。概率的强大之处在于它能够表达在这些极端之间的无限多种可能的值。在本章中，我们将讨论基于这些逻辑运算符的逻辑规则如何也适用于概率。在传统逻辑中，有三个重要的运算符：
- en: AND
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AND
- en: OR
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OR
- en: NOT
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NOT
- en: 'With these three simple operators we can reason about any argument in traditional
    logic. For example, consider this statement: *If it is raining AND I am going
    outside, I will need an umbrella*. This statement contains just one logical operator:
    AND. Because of this operator we know that if it’s true that it is raining, AND
    it is true that I am going outside, I’ll need an umbrella.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这三个简单的运算符，我们可以推理传统逻辑中的任何论点。例如，考虑以下陈述：*如果下雨并且我出门，我需要带伞*。这个陈述包含了一个逻辑运算符：AND。因为有了这个运算符，我们知道，如果下雨是真的，并且我出门也是真的，那么我就需要带伞。
- en: 'We can also phrase this statement in terms of our other operators: *If it is
    NOT raining OR if I am NOT going outside, I will NOT need an umbrella*. In this
    case we are using basic logical operators and facts to make a decision about when
    we do and don’t need an umbrella.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以用其他运算符来表达这个陈述：*如果没有下雨或者我没有出门，那么我就不需要带伞*。在这种情况下，我们使用基本的逻辑运算符和事实来做出决定，判断何时需要和不需要带伞。
- en: However, this type of logical reasoning works well only when our facts have
    absolute true or false values. This case is about deciding whether I need an umbrella
    *right now*, so we can know for certain if it’s currently raining and whether
    I’m going out, and therefore I can easily determine if I need an umbrella. Suppose
    instead we ask, “Will I need an umbrella tomorrow?” In this case our facts become
    uncertain, because the weather forecast gives me only a probability for rain tomorrow
    and I may be uncertain whether or not I need to go out.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种类型的逻辑推理只有在我们的事实具有绝对的真或假值时才有效。这个案例是关于决定我是否*现在*需要带伞，因此我们可以确定它是否正在下雨，是否我要出门，从而很容易判断是否需要伞。假设我们改为问：“我明天需要带伞吗？”在这种情况下，我们的事实变得不确定，因为天气预报只给出了明天下雨的概率，而我可能不确定是否需要外出。
- en: 'This chapter will explain how we can extend our three logical operators to
    work with probability, allowing us to reason about uncertain information the same
    way we can with facts in traditional logic. We’ve already seen how we can define
    NOT for probabilistic reasoning:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将解释我们如何扩展三个逻辑运算符以适应概率，使我们能够像在传统逻辑中推理事实一样推理不确定的信息。我们已经看到了如何为概率推理定义NOT：
- en: ¬*P*(*X*) = 1 – *P*(*X*)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ¬*P*(*X*) = 1 – *P*(*X*)
- en: In the rest of this chapter we’ll see how we can use the two remaining operators,
    AND and OR, to combine probabilities and give us more accurate and useful data.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的其余部分，我们将看到如何使用剩下的两个运算符——AND和OR，来结合概率，从而提供更准确和有用的数据。
- en: '**Combining Probabilities with AND**'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**将概率与AND结合**'
- en: 'In statistics we use AND to talk about the probability of combined events.
    For example, the probability of:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在统计学中，我们使用AND来谈论事件组合的概率。例如，概率为：
- en: Rolling a 6 AND flipping a heads
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 掷骰子得到6并且投掷硬币得到正面
- en: It raining AND you forgetting your umbrella
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它正在下雨并且你忘记了带伞
- en: Winning the lottery AND getting struck by lightning
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中头奖并且被闪电击中
- en: To understand how we can define AND for probability, we’ll start with a simple
    example involving a coin and a six-sided die.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解如何为概率定义AND，我们将从一个简单的例子开始，涉及到硬币和六面骰子。
- en: '***Solving a Combination of Two Probabilities***'
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***求解两个概率的组合***'
- en: 'Suppose we want to know the probability of getting a heads in a coin flip AND
    rolling a 6 on a die. We know that the probability of *each* of these events individually
    is:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想知道投掷硬币得到正面并且掷骰子得到6的概率。我们知道，每个事件单独发生的概率分别是：
- en: '![Image](../images/f0022-01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0022-01.jpg)'
- en: 'Now we want to know the probability of *both* of these things occurring, written
    as:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想知道这两件事同时发生的概率，写成如下形式：
- en: '*P*(heads, six) = ?'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(正面，六点) = ?'
- en: 'We can calculate this the same way we did in [Chapter 2](ch02.xhtml#ch02):
    we count the outcomes we care about and divide that by the total outcomes.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以像在[第二章](ch02.xhtml#ch02)中一样计算：我们数出我们关心的结果，并将其除以总结果数。
- en: For this example, let’s imagine these events happening in sequence. When we
    flip the coin we have two possible outcomes, heads and tails, as depicted in [Figure
    3-1](ch03.xhtml#ch03fig01).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个例子，假设这些事件是依次发生的。当我们投币时，我们有两个可能的结果，正面和反面，如[图 3-1](ch03.xhtml#ch03fig01)所示。
- en: '![Image](../images/03fig01.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/03fig01.jpg)'
- en: '*Figure 3-1: Visualizing the two possible outcomes from a coin toss as distinct
    paths*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3-1：将投币的两种可能结果可视化为不同路径*'
- en: Now, for each possible coin flip there are six possible results for the roll
    of our die, as depicted in [Figure 3-2](ch03.xhtml#ch03fig02).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，对于每一个可能的投币结果，我们有六种可能的掷骰子结果，如[图 3-2](ch03.xhtml#ch03fig02)所示。
- en: '![Image](../images/03fig02.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/03fig02.jpg)'
- en: '*Figure 3-2: Visualizing the possible outcomes from a coin toss and the roll
    of a die*'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3-2：将投币和掷骰子的可能结果可视化*'
- en: 'Using this visualization, we can just count our possible solutions. There are
    12 possible outcomes of flipping a coin and rolling a die, and we care about only
    one of these outcomes, so:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个可视化方法，我们可以直接数出可能的解答。投币和掷骰子一共可能有12种结果，而我们只关心其中的一种结果，所以：
- en: '![Image](../images/f0024-01.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0024-01.jpg)'
- en: Now we have a solution for this particular problem. However, what we really
    want is a general rule that will help us calculate this for any number of probability
    combinations. Let’s see how to expand our solution.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们为这个特定问题找到了一个解决方案。然而，我们真正想要的是一个通用规则，能够帮助我们计算任意数量的概率组合。让我们看看如何扩展我们的解决方案。
- en: '***Applying the Product Rule of Probability***'
  id: totrans-34
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***应用概率的乘法规则***'
- en: 'We’ll use the same problem for this example: what is the probability of flipping
    a heads and rolling a 6? First we need to figure out the probability of flipping
    a heads. Looking at our branching paths, we can figure out how many paths split
    off given the probabilities. We care only about the paths that include heads.
    Because the probability of heads is 1/2, we eliminate half of our possibilities.
    Then, if we look only at the remaining branch of possibilities for the heads,
    we can see that there is only a 1/6 chance of getting the result we want: rolling
    a 6 on a six-sided die. In [Figure 3-3](ch03.xhtml#ch03fig03) we can visualize
    this reasoning and see that there is only one outcome we care about.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用相同的问题进行这个例子：投币正面朝上并掷出6点的概率是多少？首先，我们需要找出投币正面朝上的概率。通过观察我们的分支路径，我们可以计算出在给定概率下有多少条路径分裂开来。我们只关心那些包含正面的路径。因为正面朝上的概率是1/2，所以我们将一半的可能性排除掉。然后，如果我们只看剩下的正面路径，我们可以看到要获得我们想要的结果：在六面骰子上掷出6点的概率是1/6。在[图
    3-3](ch03.xhtml#ch03fig03)中，我们可以将这个推理过程可视化，并看到只有一个我们关心的结果。
- en: '![Image](../images/03fig03.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/03fig03.jpg)'
- en: '*Figure 3-3: Visualizing the probability of both getting a heads and rolling
    a 6*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3-3：可视化正面朝上和掷出6点的概率*'
- en: 'If we multiply these two probabilities, we can see that:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将这两个概率相乘，我们可以看到：
- en: '![Image](../images/f0025-01.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0025-01.jpg)'
- en: 'This is exactly the answer we had before, but rather than counting all possible
    events, we counted only the probabilities of the events we care about by following
    along the branches. This is easy enough to do visually for such a simple problem,
    but the real value of showing you this is that it illustrates a general rule for
    combining probabilities with AND:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这正是我们之前得到的答案，但我们并没有计算所有可能的事件，而是只计算了我们关心的事件的概率，通过沿着分支进行计算。对于这样一个简单的问题，通过视觉呈现是相当容易的，但展示这个过程的真正价值在于它阐明了一个关于将概率与“且”（AND）结合的通用规则：
- en: '*P*(*A*,*B*) = *P*(*A*) × *P*(*B*)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(*A*,*B*) = *P*(*A*) × *P*(*B*)'
- en: Because we are multiplying our results, also called taking the *product* of
    these results, we refer to this as the *product rule* of probability.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们在相乘结果，也叫做取这些结果的*乘积*，我们称之为概率的*乘积规则*。
- en: 'This rule can then be expanded to include more probabilities. If we think of
    *P*(*A*,*B*) as a single probability, we can combine it with a third probability,
    *P*(*C*), by repeating this process:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个规则可以扩展以包括更多的概率。如果我们将*P*(*A*,*B*)看作是一个单一的概率，我们可以通过重复这个过程，将其与第三个概率*P*(*C*)结合起来：
- en: '*P*(*P*(*A*,*B*),*C*) = *P*(*A*,*B*) × *P*(*C*) = *P*(*A*) × *P*(*B*) × *P*(*C*)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(*P*(*A*,*B*),*C*) = *P*(*A*,*B*) × *P*(*C*) = *P*(*A*) × *P*(*B*) × *P*(*C*)'
- en: So we can use our product rule to combine an unlimited number of events to get
    our final probability.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们可以使用乘积法则将无限多的事件组合起来，以得到最终的概率。
- en: '***Example: Calculating the Probability of Being Late***'
  id: totrans-46
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***示例：计算迟到的概率***'
- en: 'Let’s look at an example of using the product rule for a slightly more complex
    problem than rolling dice or flipping coins. Suppose you promised to meet a friend
    for coffee at 4:30 on the other side of town, and you plan to take public transportation.
    It’s currently 3:30\. Thankfully the station you’re at has both a train and bus
    that can take you where you need to go:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个使用乘积法则的例子，这比掷骰子或抛硬币稍微复杂一些。假设你答应和朋友在城对面4:30见面喝咖啡，并打算乘坐公共交通工具。现在是3:30。幸运的是，你所在的车站既有火车也有公交车可以带你去目的地：
- en: The next bus comes at 3:45 and takes 45 minutes to get you to the coffee shop.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下一班公交车将在3:45到达，并需要45分钟才能带你到咖啡店。
- en: The next train comes at 3:50, and will get you within a 10-minute walk in 30
    minutes.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下一班火车将在3:50到达，30分钟后会把你送到离目的地步行10分钟的地方。
- en: Both the train and the bus will get you there at 4:30 exactly. Because you’re
    cutting it so close, any delay will make you late. The good news is that, since
    the bus arrives before the train, if the bus is late and the train is not you’ll
    still be on time. If the bus is on time and the train is late, you’ll also be
    fine. The only situation that will make you late is if both the bus and the train
    are late to arrive. How can you figure out the probability of being late?
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 火车和公交车都会在4:30准时到达。因为时间很紧张，任何延误都会导致你迟到。好消息是，由于公交车比火车早到，如果公交车晚点而火车准时，你仍然可以按时到达。如果公交车准时而火车晚点，你也能按时到达。唯一会导致你迟到的情况是火车和公交车都晚点到达。你如何计算迟到的概率呢？
- en: First, you need to establish the probability of both the train being late and
    the bus being late. Let’s assume the local transit authority publishes these numbers
    (later in the book, you’ll learn how to estimate this from data).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要确定火车晚点和公交车晚点的概率。假设当地的公共交通部门发布了这些数据（在本书后面，你将学会如何从数据中估算这些概率）。
- en: '*P*(Late[train]) = 0.15'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(迟到[火车]) = 0.15'
- en: '*P*(Late[bus]) = 0.2'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(迟到[公交车]) = 0.2'
- en: 'The published data tells us that 15 percent of the time the train is late,
    and 20 percent of the time the bus is late. Since you’ll be late only if *both*
    the bus and the train are late, we can use the product rule to solve this problem:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 已发布的数据告诉我们，火车15%的时间会迟到，公交车20%的时间会迟到。由于你只有在*火车和公交车都迟到*的情况下才会迟到，因此我们可以使用乘积法则来解决这个问题：
- en: '*P*(Late) = *P*(Late[train]) × *P*(Late[bus]) = 0.15 × 0.2 = 0.03'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(迟到) = *P*(迟到[火车]) × *P*(迟到[公交车]) = 0.15 × 0.2 = 0.03'
- en: Even though there’s a pretty reasonable chance that either the bus or the train
    will be late, the probability that they will both be late is significantly less,
    at only 0.03\. We can also say there is a 3 percent chance that both will be late.
    With this calculation done, you can be a little less stressed about being late.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管公交车或火车迟到的概率相当合理，但它们都迟到的概率要低得多，仅为0.03。我们也可以说，两者都迟到的概率为3%。通过这个计算，你可以稍微放松一点，不必那么担心迟到。
- en: '**Combining Probabilities with OR**'
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**用OR组合概率**'
- en: 'The other essential rule of logic is combining probabilities with OR, some
    examples of which include:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑中另一个重要的规则是用OR组合概率，以下是一些例子：
- en: Catching the flu OR getting a cold
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 感冒 或 得流感
- en: Flipping a heads on a coin OR rolling a 6 on a die
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 抛硬币正面朝上 或 投骰子得到6点
- en: Getting a flat tire OR running out of gas
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 爆胎 或 没油
- en: The probability of one event OR another event occurring is slightly more complicated
    because the events can either be mutually exclusive or not mutually exclusive.
    Events are *mutually exclusive* if one event happening implies the other possible
    events cannot happen. For example, the possible outcomes of rolling a die are
    mutually exclusive because a single roll cannot yield both a 1 and a 6\. However,
    say a baseball game will be cancelled if it is either raining or the coach is
    sick; these events are *not* mutually exclusive because it is perfectly possible
    that the coach is sick and it rains.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一个事件或另一个事件发生的概率稍微复杂一些，因为事件可以是互斥的，也可以不是互斥的。如果一个事件发生意味着其他事件不能发生，那么这些事件就是*互斥的*。例如，掷骰子的结果是互斥的，因为一次掷骰子不能同时得到1和6。但是，假设一场棒球比赛如果下雨或教练生病就会取消；这些事件*不是*互斥的，因为完全有可能教练生病并且下雨。
- en: '***Calculating OR for Mutually Exclusive Events***'
  id: totrans-63
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***计算互斥事件的OR概率***'
- en: 'The process of combining two events with OR feels logically intuitive. If you’re
    asked, “What is the probability of getting heads or tails on a coin toss?” you
    would say, “1.” We know that:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 结合两个事件使用“或”的过程在逻辑上是直观的。如果有人问你：“掷硬币得到正面或反面的概率是多少？”你会回答：“1。”我们知道：
- en: '![Image](../images/f0026-01.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0026-01.jpg)'
- en: Intuitively, we might just add the probability of these events together. We
    know this works because heads and tails are the only possible outcomes, and the
    probability of all possible outcomes must equal 1\. If the probabilities of all
    possible events did not equal 1, then we would have some outcome that was missing.
    So how do we know that there would need to be a missing outcome if the sum was
    less than 1?
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 直观地，我们可能会将这些事件的概率相加。我们知道这样做是有效的，因为正面和反面是唯一的可能结果，而所有可能结果的概率必须加起来等于1。如果所有可能事件的概率加起来不等于1，那么就会有缺失的结果。那么我们如何知道如果总和小于1，必定会有缺失的结果呢？
- en: 'Suppose we know that the probability of heads is *P*(heads) = 1/2, but someone
    claimed that the probability of tails was *P*(tails) = 1/3\. We also know from
    before that the probability of not getting heads must be:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们知道正面概率是*P*(正面) = 1/2，但有人声称反面的概率是*P*(反面) = 1/3。我们还知道，从之前的内容来看，不出现正面的概率必须是：
- en: '![Image](../images/f0027-01.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0027-01.jpg)'
- en: Since the probability of not getting heads is 1/2 and the claimed probability
    for tails is only 1/3, either there is a missing event or our probability for
    tails is incorrect.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 由于不出现正面的概率是1/2，而声称反面概率只有1/3，要么缺少了某个事件，要么我们对于反面的概率计算是错误的。
- en: 'From this we can see that, as long as events are mutually exclusive, we can
    simply add up all of the probabilities of each possible event to get the probability
    of either event happening to calculate the probability of one event OR the other.
    Another example of this is rolling a die. We know that the probability of rolling
    a 1 is 1/6, and the same is true for rolling a 2:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里我们可以看出，只要事件是互斥的，我们可以将每个可能事件的概率相加，从而得到任一事件发生的概率，即计算一个事件**或**另一个事件的概率。另一个例子是掷骰子。我们知道掷出1的概率是1/6，掷出2的概率也是1/6：
- en: '![Image](../images/f0027-02.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0027-02.jpg)'
- en: 'So we can perform the same operation, adding the two probabilities, and see
    that the combined probability of rolling either a 1 OR a 2 is 2/6, or 1/3:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们可以执行相同的操作，将两个概率相加，并看到掷出1或2的综合概率是2/6，或者说1/3：
- en: '![Image](../images/f0027-03.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0027-03.jpg)'
- en: Again, this makes intuitive sense.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这再次是合乎直觉的。
- en: 'This addition rule applies only to combinations of *mutually exclusive* outcomes.
    In probabilistic terms, mutually exclusive means that:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这个加法规则仅适用于*互斥*事件的组合。从概率学的角度来看，互斥意味着：
- en: '*P*(*A*) AND *P*(*B*) = 0'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(*A*) 和 *P*(*B*) = 0'
- en: 'That is, the probability of getting both *A* AND *B* together is 0\. We see
    that this holds for our examples:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，正面和反面同时发生的概率是0。我们看到这个例子适用：
- en: It is impossible to flip one coin and get both heads and tails.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不可能一次投掷一枚硬币既得到正面又得到反面。
- en: It is impossible to roll both a 1 and a 2 on a single roll of a die.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在一次掷骰子中，不可能同时掷出1和2。
- en: To really understand combining probabilities with OR, we need to look at the
    case where events are *not* mutually exclusive.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要真正理解如何结合“或”运算的概率，我们需要看看事件*不是*互斥的情况。
- en: '***Using the Sum Rule for Non–Mutually Exclusive Events***'
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用非互斥事件的加法规则***'
- en: Again using the example of rolling a die and flipping a coin, let’s look at
    the probability of either flipping heads OR rolling a 6\. Many newcomers to probability
    may naively assume that adding probabilities will work in this case as well. Given
    that we know that *P*(heads) = 1/2 and *P*(six) = 1/6, it might initially seem
    plausible that the probability of either of these events is simply 4/6\. It becomes
    obvious that this doesn’t work, however, when we consider the possibility of either
    flipping a heads or rolling a number less than 6\. Because *P*(less than six)
    = 5/6, adding these probabilities together gives us 8/6, which is greater than
    1! Since this violates the rule that probabilities must be between 0 and 1, we
    must have made a mistake.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 继续使用掷骰子和抛硬币的例子，我们来看掷出正面或掷出6的概率。许多概率初学者可能天真地认为在这种情况下加法规则也适用。既然我们知道*P*(正面) = 1/2
    和 *P*(六) = 1/6，一开始似乎很合理地认为这两事件发生的概率就是4/6。然而，当我们考虑到掷出正面或掷出小于6的数字时，情况就变得明显不对了。因为*P*(小于六)
    = 5/6，将这些概率加在一起得到8/6，显然大于1！由于概率必须介于0和1之间，这就违反了概率的基本规则，所以我们肯定在某处犯了错误。
- en: The trouble is that flipping a heads and rolling a 6 are not mutually exclusive.
    As we know from earlier in the chapter, *P*(heads, six) = 1/12\. Because the probability
    of both events happening at the same time is not 0, we know they are, by definition,
    not mutually exclusive.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于掷出正面和掷出6并不是互斥事件。正如我们在本章早些时候所知道的，*P*(正面, 六) = 1/12。因为这两事件同时发生的概率不为0，所以它们根据定义不是互斥事件。
- en: 'The reason that adding our probabilities doesn’t work for non–mutually exclusive
    events is that doing so doubles the counting of events where both things happen.
    As an example of overcounting, let’s look at all of the outcomes of our combined
    coin toss and die roll that contain heads:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 对于非互斥事件来说，概率加法不起作用的原因是，这样做会重复计算那些两者同时发生的事件。作为重复计算的一个例子，我们来看所有包含正面的掷硬币和掷骰子的结果：
- en: Heads — 1
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 正面 — 1
- en: Heads — 2
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 正面 — 2
- en: Heads — 3
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 正面 — 3
- en: Heads — 4
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 正面 — 4
- en: Heads — 5
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 正面 — 5
- en: Heads — 6
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 正面 — 6
- en: 'These outcomes represent 6 out of the 12 possible outcomes, which we expect
    since *P*(heads) = 1/2\. Now let’s look at all outcomes that include rolling a
    6:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果代表了12种可能结果中的6种，这是我们所预期的，因为*P*(正面) = 1/2。现在让我们看看所有包含掷出6的结果：
- en: Heads — 6
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 正面 — 6
- en: Tails — 6
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 反面 — 6
- en: These outcomes represent the 2 out of 12 possible outcomes that will result
    in us rolling a 6, which again we expect because *P*(six) = 1/6\. Since there
    are six outcomes that satisfy the condition of flipping a heads and two that satisfy
    the condition of rolling a 6, we might be tempted to say that there are eight
    outcomes that represent getting either heads or rolling a 6\. However, we would
    be double-counting because *Heads — 6* appears in both lists. There are, in fact,
    only 7 out of 12 unique outcomes. If we naively add *P*(heads) and *P*(six), we
    end up overcounting.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果代表了12种可能结果中的2种，将导致我们掷出6，这也是我们所预期的，因为*P*(六) = 1/6。由于有六种结果满足抛出正面的条件，且有两种满足掷出6的条件，我们可能会认为有八种结果代表得到正面或掷出6。然而，我们会重复计算，因为*正面
    — 6*出现在两个列表中。实际上，只有12种结果中有7种是唯一的。如果我们天真地将*P*(正面)和*P*(六)相加，就会导致重复计算。
- en: 'To correct our probabilities, we must add up all of our probabilities and then
    subtract the probability of both events occurring. This leads us to the rule for
    combining non–mutually exclusive probabilities with OR, known as the *sum rule*
    of probability:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 为了纠正我们的概率计算，我们必须将所有概率加起来，然后减去两事件同时发生的概率。这就引出了我们用“或”结合非互斥事件概率的规则，称为概率的*和法则*：
- en: '*P*(*A*) OR *P*(*B*) = *P*(*A*) + *P*(*B*) – *P*(*A*,*B*)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(*A*) 或 *P*(*B*) = *P*(*A*) + *P*(*B*) – *P*(*A*,*B*)'
- en: 'We add the probability of each event happening and then subtract the probability
    of both events happening, to ensure we are not counting these probabilities twice
    since they are a part of both *P*(*A*) and *P*(*B*). So, using our die roll and
    coin toss example, the probability of rolling a number less than 6 or flipping
    a heads is:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将每个事件发生的概率相加，然后减去两事件同时发生的概率，以确保我们不会重复计算这些概率，因为它们同时属于*P*(*A*)和*P*(*B*)。因此，使用我们的掷骰子和抛硬币例子，掷出小于6的数字或抛出正面的概率是：
- en: '![Image](../images/f0029-01.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/f0029-01.jpg)'
- en: Let’s take a look at a final OR example to really cement this idea.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个最终的“或”例子，来真正理解这个概念。
- en: '***Example: Calculating the Probability of Getting a Hefty Fine***'
  id: totrans-100
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***例子：计算收到重罚的概率***'
- en: Imagine a new scenario. You were just pulled over for speeding while on a road
    trip. You realize you haven’t been pulled over in a while and may have forgotten
    to put either your new registration or your new insurance card in the glove box.
    If either one of these is missing, you’ll get a more expensive ticket. Before
    you open the glove box, how can you assign a probability that you’ll have forgotten
    one or the other of your cards and you’ll get the higher ticket?
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下一个新的情境。你在公路旅行时因为超速被拦下。你意识到自己已经有一段时间没有被拦下了，可能忘记把新注册证或新保险卡放进手套箱。如果这两样东西中有任何一件丢失，你将会收到更贵的罚单。在你打开手套箱之前，你如何给自己赋予一个概率，表示你可能忘记了其中一张卡，并因此收到更高的罚单？
- en: 'You’re pretty confident that you put your registration in the car, so you assign
    a 0.7 probability to your registration being in the car. However, you’re also
    pretty sure that you left your insurance card on the counter at home, so you assign
    only a 0.2 chance that your new insurance card is in the car. So we know that:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 你对自己把注册证放进车里很有信心，所以你给注册证在车里的概率赋值为0.7。然而，你也相当确定自己把保险卡留在了家里的柜台上，所以你认为新保险卡在车里的几率只有0.2。因此，我们知道：
- en: '*P*(registration) = 0.7'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(registration) = 0.7'
- en: '*P*(insurance) = 0.2'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(insurance) = 0.2'
- en: 'However, these values are the probabilities that you *do* have these things
    in the glove box. You’re worried about whether either one is *missing*. To get
    the probabilities of missing items, we simply use negation:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这些值是你*确实*把这些东西放进手套箱里的概率。你担心的是它们是否*丢失*。为了计算物品丢失的概率，我们只需要使用否定：
- en: '*P*(Missing[reg]) = 1 – *P*(registration) = 0.3'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(Missing[reg]) = 1 – *P*(registration) = 0.3'
- en: '*P*(Missing[ins]) = 1 – *P*(insurance) = 0.8'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(Missing[ins]) = 1 – *P*(insurance) = 0.8'
- en: 'If we try using our addition method, instead of the complete sum rule, to get
    the combined probability, we see that we have a probability greater than 1:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们试图使用加法法则，而不是完整的加法规则来计算联合概率，我们会看到我们的概率大于1：
- en: '*P*(Missing[reg]) + *P*(Missing[ins]) = 1.1'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(Missing[reg]) + *P*(Missing[ins]) = 1.1'
- en: 'This is because these events are non–mutually exclusive: it’s entirely possible
    that you have forgotten both cards. Therefore, using this method we’re double-counting.
    That means we need to figure out the probability that you’re missing both cards
    so we can subtract it. We can do this with the product rule:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为这些事件是非互斥的：完全有可能你两张卡都忘了。因此，使用这种方法我们会重复计算。也就是说，我们需要找出两张卡都丢失的概率，这样我们才能减去它。我们可以使用乘积法则来做到这一点：
- en: '*P*(Missing[reg], Missing[ins]) = 0.24'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(Missing[reg], Missing[ins]) = 0.24'
- en: 'Now we can use the sum rule to determine the probability that either one of
    these cards is missing, just as we worked out the probability of a flipping a
    heads or rolling a 6:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用加法法则来确定其中一张卡丢失的概率，就像我们计算掷硬币正面朝上或掷骰子得到6点的概率一样：
- en: '*P*(Missing) = *P*(Missing[reg]) + *P*(Missing[ins]) – *P*(Missing[reg], Missing[ins])
    = 0.86'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(Missing) = *P*(Missing[reg]) + *P*(Missing[ins]) – *P*(Missing[reg], Missing[ins])
    = 0.86'
- en: With an 0.86 probability that one of these important pieces of paper is missing
    from your glove box, you should make sure to be extra nice when you greet the
    officer!
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在手套箱中有0.86的概率丢失某一重要文件，你应该在迎接警察时表现得格外友好！
- en: '**Wrapping Up**'
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: In this chapter you developed a complete logic of uncertainty by adding rules
    for combining probabilities with AND and OR. Let’s review the logical rules we
    have covered so far.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你通过添加“与”运算和“或”运算结合概率的规则，开发出了一个完整的不确定性逻辑。让我们回顾一下到目前为止我们所覆盖的逻辑规则。
- en: 'In [Chapter 2](ch02.xhtml#ch02), you learned that probabilities are measured
    on a scale of 0 to 1, 0 being *false* (definitely not going to happen), and 1
    being *true* (definitely going to happen). The next important logical rule involves
    combining two probabilities with AND. We do this using the product rule, which
    simply states that to get the probability of two events occurring together, *P*(*A*)
    and *P*(*B*), we just multiply them together:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.xhtml#ch02)中，你学到概率是按0到1的尺度来衡量的，0表示*假*（肯定不会发生），而1表示*真*（肯定会发生）。接下来的重要逻辑规则涉及将两个概率通过“与”运算结合起来。我们使用乘积法则，它简单地指出，要计算两个事件同时发生的概率
    *P*(*A*) 和 *P*(*B*)，只需要将它们相乘：
- en: '*P*(*A*,*B*) = *P*(*A*) × *P*(*B*)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(*A*,*B*) = *P*(*A*) × *P*(*B*)'
- en: 'The final rule involves combining probabilities with OR using the sum rule.
    The tricky part of the sum rule is that if we add non–mutually exclusive probabilities,
    we’ll end up overcounting for the case where they both occur, so we have to subtract
    the probability of both events occurring together. The sum rule uses the product
    rule to solve this (remember, for mutually exclusive events, *P*(*A*, *B*) = 0):'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的规则涉及通过求和规则来合并概率。求和规则的难点在于，如果我们加上了非互斥的概率，就会对同时发生的情况进行重复计算，因此必须减去两者同时发生的概率。求和规则通过乘积规则来解决这个问题（记住，对于互斥事件，*P*(*A*,
    *B*) = 0）：
- en: '*P*(*A* OR *B*) = *P*(*A*) + *P*(*B*) – *P*(*A*,*B*)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(*A* OR *B*) = *P*(*A*) + *P*(*B*) – *P*(*A*,*B*)'
- en: These rules, along with those covered in [Chapter 2](ch02.xhtml#ch02), allow
    us to express a very large range of problems. We’ll be using these as the foundation
    for our probabilistic reasoning throughout the rest of the book.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这些规则，以及[第2章](ch02.xhtml#ch02)中涉及的规则，使我们能够表达广泛的概率问题。在本书的剩余部分，我们将以这些规则为基础进行概率推理。
- en: '**Exercises**'
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**练习**'
- en: Try answering the following questions to make sure you understand the rules
    of logic as they apply to probability. The solutions can be found at *[https://nostarch.com/learnbayes/](https://nostarch.com/learnbayes/)*.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试回答以下问题，确保你理解概率逻辑规则的应用。解答可以在 *[https://nostarch.com/learnbayes/](https://nostarch.com/learnbayes/)*
    找到。
- en: What is the probability of rolling a 20 three times in a row on a 20-sided die?
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一次20面骰的投掷中，连续三次掷到20的概率是多少？
- en: The weather report says there’s a 10 percent chance of rain tomorrow, and you
    forget your umbrella half the time you go out. What is the probability that you’ll
    be caught in the rain without an umbrella tomorrow?
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 天气预报说明天有10%的降雨几率，而你出门时有一半的机会忘带雨伞。那么你明天在没有带伞的情况下遇到雨的概率是多少？
- en: Raw eggs have a 1/20,000 probability of having salmonella. If you eat two raw
    eggs, what is the probability you ate a raw egg with salmonella?
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生鸡蛋有1/20,000的概率含有沙门氏菌。如果你吃了两个生鸡蛋，吃到含有沙门氏菌的生鸡蛋的概率是多少？
- en: What is the probability of either flipping two heads in two coin tosses or rolling
    three 6s in three six-sided dice rolls?
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在两次投掷硬币时翻到两个正面，或者在三次六面骰掷骰时掷到三个6的概率是多少？
