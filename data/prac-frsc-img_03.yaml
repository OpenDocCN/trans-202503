- en: '**2**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**2**'
- en: '**LINUX AS A FORENSIC ACQUISITION PLATFORM**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**LINUX 作为法医采集平台**'
- en: '![image](../images/common-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common-01.jpg)'
- en: This chapter describes Linux as a platform for performing digital forensic acquisition
    and discusses its various advantages and drawbacks. I also examine the acceptance
    of Linux and open source software within the digital forensics community, and
    the final section provides an overview of the relevant Linux fundamentals you’ll
    need to understand subsequent sections of this book.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章描述了Linux作为执行数字法医采集的平台，并讨论了其各种优缺点。我还将探讨Linux和开源软件在数字法医界的接受度，最后一节将概述你需要理解的Linux基础知识，以便理解本书后续章节的内容。
- en: The examples shown in this book primarily use Ubuntu Linux Server version 16.04
    LTS (supported until April 2021) with the Bourne Again shell (Bash), version 4.3.*x*.
    The examples should also work on other Linux distributions and other OSes, such
    as OS X or Windows, as long as you use the same or newer tool versions and adjust
    the device names. Throughout this book, the words *command line*, *shell*, and
    *Bash* are used interchangeably.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中展示的示例主要使用的是Ubuntu Linux Server 16.04 LTS版本（支持至2021年4月），搭载的是Bourne Again Shell（Bash）版本4.3.*x*。这些示例也应该适用于其他Linux发行版以及其他操作系统，如OS
    X或Windows，只要你使用相同或更新版本的工具，并调整设备名称。本书中，*命令行*、*Shell* 和 *Bash* 这几个词会互换使用。
- en: '**Linux and OSS in a Forensic Context**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Linux 和开源软件在法医领域的应用**'
- en: The growing popularity of *open source software (OSS)* like Linux has made it
    important as a platform for performing digital forensics. Many researchers have
    discussed the advantages of using OSS for satisfying the Daubert guidelines for
    evidential reliability.^([1](footnote.xhtml#fn10)) Brian Carrier, author of Sleuth
    Kit, explored the legal arguments for using open source forensic tools and suggested
    that parts of forensic software (but not necessarily all) should be made open
    source.^([2](footnote.xhtml#fn11))
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 像Linux这样的*开源软件（OSS）*的日益普及使其成为执行数字取证的重要平台。许多研究人员已经讨论了使用开源软件来满足Daubert标准对证据可靠性的要求。^([1](footnote.xhtml#fn10))
    Sleuth Kit的作者Brian Carrier探讨了使用开源法医工具的法律论点，并建议部分法医软件（但不一定是全部）应该开源。^([2](footnote.xhtml#fn11))
- en: The primary advantage of using OSS in a forensic context is transparency. Unlike
    proprietary commercial software, the source code can be reviewed and openly validated.
    In addition, academic researchers can study it and build on the work of others
    in the community. Open source forensic software applications have become the tools
    and building blocks of forensic science research. There are also disadvantages
    to using OSS and situations where its use doesn’t make sense. In particular, the
    openness of the open source community may in some cases conflict with the confidential
    nature of ongoing forensic investigations. Both the advantages and disadvantages
    of Linux and OSS are discussed in the following sections.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在法医学领域使用开源软件（OSS）的主要优势是透明性。与专有的商业软件不同，源代码可以被审查并公开验证。此外，学术研究人员可以研究它，并在社区中他人的工作基础上进行构建。开源法医学软件应用已经成为法医学研究的工具和基础构件。使用开源软件也有其缺点，以及一些情况下它的使用没有意义。特别是，开源社区的开放性在某些情况下可能与正在进行的法医调查的保密性相冲突。以下章节将讨论Linux和开源软件的优缺点。
- en: '***Advantages of Linux and OSS in Forensics Labs***'
  id: totrans-8
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Linux 和开源软件在法医学实验室中的优势***'
- en: The public availability of OSS means it is accessible to everyone. It is not
    restricted to those who have purchased licenses or signed nondisclosure agreements.
    OSS is freely available for download, use, examination, and modification by anyone
    interested, and no licensing fees or usage costs are involved.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 开源软件（OSS）的公开可用性意味着它对每个人都可访问。它不局限于那些购买了许可证或签署了保密协议的人。开源软件可以被任何有兴趣的人自由下载、使用、检查和修改，且不涉及任何许可费用或使用成本。
- en: Having access to the source code allows you to customize and facilitate integration
    with other software, hardware, and processes in a forensic lab. This source-level
    access increases the possibilities for automating and scripting workloads. Automation
    reduces the amount of human interaction needed, which limits the risk of human
    error and frees up these human resources so they can be used elsewhere.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 访问源代码使你能够自定义并促进与其他软件、硬件和法医学实验室流程的集成。这种源代码级的访问增加了自动化和脚本化工作负载的可能性。自动化减少了所需的人类互动，从而降低了人为错误的风险，并释放了这些人力资源，使其可以用于其他地方。
- en: Automation is essential in labs with high volumes of casework to foster optimization
    and process streamlining. Because you can freely modify the source code, OSS can
    be customized to meet the requirements of a particular forensic lab. Command line
    software especially allows you to link multiple tasks and jobs in pipelines with
    shell scripts to complete an end-to-end process.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在案件工作量大的实验室中，自动化至关重要，有助于优化和简化流程。因为可以自由修改源代码，开源软件可以根据特定法医实验室的要求进行定制。特别是命令行软件可以让你通过Shell脚本将多个任务和工作链接在一起，完成端到端的流程。
- en: Support for OSS has several advantages. The ad hoc community support can be
    excellent, and mailing lists and chat forums can answer calls for help within
    minutes. In some cases, quick implementation of patches, bug fixes, and feature
    requests can occur.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 开源软件的支持有几个优势。即兴的社区支持可能非常优秀，邮件列表和聊天论坛可以在几分钟内回答求助请求。在某些情况下，补丁、错误修复和功能请求可以迅速实现。
- en: Linux and OSS are ideal for an academic forensic lab setting, because they use
    open, published standards rather than closed or proprietary standards. OSS development
    communities work *with* competing groups instead of against them. Learning from
    others, copying code and ideas from others (with due attribution), and building
    on the work of others are encouraged and are the basis for learning and gaining
    knowledge.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Linux和开源软件非常适合学术法医实验室环境，因为它们使用开放的、已发布的标准，而不是封闭或专有的标准。开源软件开发社区与竞争性团体是*合作*而非对抗的。学习他人、复制他人的代码和想法（并给予适当的归属），以及在他人工作的基础上构建是被鼓励的，也是学习和获取知识的基础。
- en: The vendor independence that OSS offers prevents vendor product lock-in and
    fosters interoperability and compatibility between technologies and organizations.
    This makes it easier to change the software over time, because individual components
    can be swapped out with new or alternative technologies without affecting the
    systems and processes as a whole.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 开源软件（OSS）提供的供应商独立性避免了供应商产品锁定，并促进了技术和组织之间的互操作性和兼容性。这使得软件随着时间的推移更易于更换，因为可以用新的或替代的技术替换单个组件，而不会影响整体系统和流程。
- en: '***Disadvantages of Linux and OSS in Forensics Labs***'
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Linux和开源软件在法医实验室中的缺点***'
- en: The disadvantages of Linux and OSS provide arguments in support of closed proprietary
    software. Commercial tool implementations often provide benefits and advantages
    in this area.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Linux和开源软件的缺点为支持封闭专有软件提供了论据。商业工具的实现通常在这一领域提供了好处和优势。
- en: The open source community support model is not guaranteed to be reliable, accurate,
    or trustworthy. The quality of the answers provided by the community can vary
    greatly; some answers are excellent, whereas others might be wrong or even dangerous.
    Often no formal support organization exists to help. In situations in which 24/7
    support must be guaranteed, commercial providers have an advantage.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 开源社区支持模型不能保证可靠、准确或可信。社区提供的答案质量差异很大；有些答案非常好，而有些可能是错误的，甚至是危险的。通常不存在正式的支持组织来提供帮助。在需要保证24/7支持的情况下，商业提供商具有优势。
- en: Support in the open source world is as transparent as the software, visible
    for all to see. However, in a forensic lab setting, casework and investigations
    may be sensitive or confidential. Reaching out to the public for support could
    reveal or compromise details of an ongoing investigation. Therefore, information
    security and privacy are issues in the open source support model.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 开源世界中的支持与软件一样透明，所有人都可以看到。然而，在法医实验室环境中，案件和调查可能是敏感的或保密的。向公众寻求支持可能会暴露或妥协正在进行中的调查的细节。因此，信息安全和隐私在开源支持模型中是一个问题。
- en: Interoperability with proprietary technology poses difficulties with open source
    interfaces and APIs. Proprietary technologies that are not public are often reverse
    engineered, not licensed. Reverse engineering efforts are often incomplete, are
    at risk of incorrectly implementing a particular technology, and may take a long
    time to implement.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 与专有技术的互操作性给开源接口和API带来困难。未公开的专有技术通常会被反向工程，而不是授权。反向工程工作通常不完整，存在错误实现某一技术的风险，并且可能需要很长时间来完成。
- en: Free OSS is often a volunteer development effort, and software may be in a perpetual
    state of development. Some projects may be abandoned or die from neglect. Other
    projects may experience *forks* in the code where some developers decide to copy
    an existing code base and take it in a different direction from the original developers.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 免费开源软件（Free OSS）通常是志愿者开发的项目，软件可能处于持续开发的状态。一些项目可能被放弃或因疏忽而死亡。其他项目可能会经历代码的*分叉*，即一些开发者决定复制现有代码库并将其朝着与原开发者不同的方向发展。
- en: Free OSS can be rough around the edges. It may be buggy or difficult to learn
    or use. It may be poorly documented (the source code might be the only documentation).
    Unlike with commercial software, usually no training is provided with the software
    product. It takes time and effort to learn Unix/Linux; in particular, the command
    line is not as intuitive as an all-GUI environment. Many experience a learning
    curve when they first enter the free, open source world, not just for the software
    but also for the general attitude and mind-set of the surrounding community.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 免费开源软件可能存在一些粗糙之处。它可能存在漏洞，或者难以学习和使用。它的文档可能很差（源代码可能是唯一的文档）。与商业软件不同，通常不会提供培训来辅导使用该软件产品。学习
    Unix/Linux 需要时间和精力，特别是命令行不像全图形界面那样直观。许多人在刚进入自由开源的世界时，会遇到一个学习曲线问题，这不仅是软件的学习曲线，还有周围社区的整体态度和思维方式。
- en: Commercial software vendors in the forensics community provide a certain degree
    of defensibility and guarantees for the proper functioning of their software.
    Some forensic companies have even offered to testify in court to defend the results
    provided by their software products. In the free, open source community, no one
    is accountable or will take responsibility for the software produced. It is provided
    “as is” and “use at your own risk.”
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在法医社区中，商业软件供应商提供了一定程度的可防御性和保证，确保其软件能够正常运行。一些法医公司甚至提供法庭作证服务，以辩护其软件产品提供的结果。而在自由开源社区中，没有人对生产的软件负责，也没有人会为其承担责任。它是“按原样提供”的，“使用风险自负”。
- en: Clearly, OSS is not appropriate for every situation, and that is not implied
    in this book. In many of the examples throughout, OSS is more useful for educational
    purposes and to show how things work than it is a viable alternative to professional
    commercial forensic software.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，开源软件并不适用于所有情况，这一点在本书中并未暗示。在许多示例中，开源软件更多是用于教育目的，展示事物的运作方式，而不是作为专业商业法医软件的可行替代方案。
- en: '**Linux Kernel and Storage Devices**'
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Linux 内核与存储设备**'
- en: Traditional Unix systems, from which Linux inherits its philosophy, were designed
    in a way that everything on them is a file. Each file is designated as a specific
    type, which includes regular files and directories, block devices, character devices,
    named pipes, hard links, and soft/symbolic links (similar to LNK files in Windows).
    On the examiner workstation, files of interest to forensic investigators are the
    block device files of attached subject disks that potentially contain forensic
    evidence. This section describes Linux devices—in particular, block devices for
    storage media.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的 Unix 系统（Linux继承了其哲学）是以一种“万物皆文件”的方式设计的。每个文件都有一个特定的类型，包括常规文件、目录、块设备、字符设备、命名管道、硬链接和软/符号链接（类似于
    Windows 中的 LNK 文件）。在检查工作站上，法医调查人员关心的文件是附加的受试磁盘的块设备文件，这些磁盘可能包含法医证据。本节将描述 Linux
    设备，特别是存储介质的块设备。
- en: '***Kernel Device Detection***'
  id: totrans-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***内核设备检测***'
- en: Unix and Linux systems have a special directory called */dev*, which stores
    special files that correspond to devices understood by the kernel. Original Unix
    and Linux systems required manual creation of device files in the */dev* directory
    (using the `mknod` command) or had scripts (`MAKEDEV`) to create devices on boot
    or when required. With the arrival of plug-and-play hardware, a more dynamic approach
    was needed, and `devfs` was created to automatically detect new hardware and create
    device files. The requirement to interact better with userspace scripts and programs
    led to the development of `udev`, which replaced `devfs`. Today, `udev` has been
    merged into `systemd` and runs a daemon called `systemd-udevd`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Unix 和 Linux 系统有一个特殊的目录，叫做*/dev*，用于存储与内核理解的设备相对应的特殊文件。最初的 Unix 和 Linux 系统需要手动在*/dev*目录下创建设备文件（使用`mknod`命令），或者使用脚本（`MAKEDEV`）在启动时或需要时创建设备。随着即插即用硬件的出现，需要一种更动态的方法，于是`devfs`应运而生，能够自动检测新硬件并创建设备文件。为了更好地与用户空间的脚本和程序交互，`udev`应运而生，取代了`devfs`。今天，`udev`已经并入`systemd`，并运行一个名为`systemd-udevd`的守护进程。
- en: When a new device is attached to (or removed from) a host, an interrupt notifies
    the kernel of a hardware change. The kernel informs the `udev` system, which creates
    appropriate devices with proper permissions, executes setup (or removal) scripts
    and programs, and sends messages to other daemons (via `dbus`, for example).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当新设备连接到（或从）主机时，硬件中断会通知内核硬件发生了变化。内核通知`udev`系统，`udev`会创建具有适当权限的设备，执行设置（或移除）脚本和程序，并向其他守护进程发送消息（例如通过`dbus`）。
- en: 'To observe `udev` in action, use the `udevadm` tool in monitor mode:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要观察`udev`的工作情况，可以使用`udevadm`工具的监视模式：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here a disk has been plugged into a USB port, and `udev` has managed the setup
    of all the appropriate device files and links.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这里一块硬盘已经插入到USB端口，`udev`管理了所有相关设备文件和链接的设置。
- en: 'The `udevadm` command can also be used to determine a list of the associated
    files and paths for attached devices. For example:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`udevadm`命令也可以用来列出已连接设备的相关文件和路径。例如：'
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Understanding the Linux device tree is important when you’re performing forensic
    acquisition and analysis activities. Knowing which devices are part of a local
    investigator’s machine, which devices are the suspect drives, which device is
    the write blocker, and so on is crucial when you’re running forensic commands
    and collecting information from a device.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 理解Linux设备树在进行取证采集和分析时非常重要。了解哪些设备是本地调查员的计算机设备，哪些设备是嫌疑人的硬盘，哪个设备是写保护器等等，对于执行取证命令并从设备收集信息至关重要。
- en: '***Storage Devices in /dev***'
  id: totrans-35
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***/dev中的存储设备***'
- en: 'Attached drives will appear as block devices in the */dev* directory when they’re
    detected by the kernel. Raw disk device files have a specific naming convention:
    *sd** for SCSI and SATA, *hd** for IDE, *md** for RAID arrays, *nvme*n** for NVME
    drives, and other names for less common or proprietary disk device drivers.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当硬盘被内核检测到时，它们会作为块设备出现在*/dev*目录下。原始磁盘设备文件有特定的命名约定：*sd*用于SCSI和SATA，*hd*用于IDE，*md*用于RAID阵列，*nvme*n*用于NVME驱动，其他名称则用于较少见或专有的磁盘设备驱动程序。
- en: Individual partitions discovered by the kernel are represented by numbered raw
    devices (for example, *hda1*, *hda2*, *sda1*, *sda2*, and so forth). Partition
    block devices represent entire partitions as a contiguous sequence of disk sectors.
    A partition typically contains a filesystem, which can be mounted by the kernel
    and made available to users as a normal part of the directory tree. Most forensic
    tools can (and should) examine raw devices and partition devices without having
    to mount the filesystem.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 内核发现的各个分区通过编号的原始设备表示（例如，*hda1*，*hda2*，*sda1*，*sda2*，等等）。分区块设备表示整个分区作为一系列连续的磁盘扇区。一个分区通常包含一个文件系统，内核可以挂载它，并将其作为目录树的正常部分提供给用户。大多数取证工具可以（并且应该）在不挂载文件系统的情况下检查原始设备和分区设备。
- en: '***Other Special Devices***'
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***其他特殊设备***'
- en: Several other devices are useful to know for the examples in this book. The
    bit bucket, */dev/null*, discards any data written to it. A steady stream of zeros
    is provided when accessing */dev/zero*. The random number generator, */dev/random*,
    provides a stream of random data when accessed. Tape drives typically start with
    */dev/st*, and you can access other external media via */dev/cdrom* or */dev/dvd*
    (these are often symbolic links to */dev/sr**). In some cases, devices are accessed
    through the generic SCSI device driver interface */dev/sg**.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的几个其他设备也很有用。位桶*/dev/null*会丢弃写入其中的任何数据。访问*/dev/zero*时，会提供一连串的零值。随机数生成器*/dev/random*在访问时提供一串随机数据。磁带驱动器通常以*/dev/st*开头，你可以通过*/dev/cdrom*或*/dev/dvd*（这些通常是指向*/dev/sr*的符号链接）访问其他外部存储设备。在某些情况下，设备通过通用的SCSI设备驱动程序接口*/dev/sg*进行访问。
- en: Other special pseudo devices include */dev/loop** and */dev/mapper/** devices.
    These devices are discussed in more detail throughout the book.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 其他特殊的伪设备包括*/dev/loop*和*/dev/mapper/*设备。这些设备将在本书中详细讨论。
- en: '**Linux Kernel and Filesystems**'
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Linux内核与文件系统**'
- en: Filesystems organize storage into a hierarchical structure of directories (folders)
    and files. They provide a layer of abstraction above the block devices.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 文件系统将存储组织成目录（文件夹）和文件的层次结构。它们在块设备之上提供了一层抽象。
- en: '***Kernel Filesystem Support***'
  id: totrans-43
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***内核文件系统支持***'
- en: The Linux kernel supports a large number of filesystems (for a list, see *[https://en.wikipedia.org/wiki/Category:Linux_kernel-supported_file_systems](https://en.wikipedia.org/wiki/Category:Linux_kernel-supported_file_systems)*),
    which can be useful when performing some forensics tasks. However, file-system
    support is not necessary when performing forensic acquisition, because the imaging
    process is operating on the block device below the filesystem and partition scheme.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核支持大量的文件系统（详细列表见 *[https://en.wikipedia.org/wiki/Category:Linux_kernel-supported_file_systems](https://en.wikipedia.org/wiki/Category:Linux_kernel-supported_file_systems)*），在进行一些取证任务时非常有用。然而，在执行取证获取时，文件系统的支持并不是必需的，因为成像过程是作用于文件系统和分区方案下的块设备。
- en: To provide a consistent interface for different types of filesystems, the Linux
    kernel implements a Virtual File System (VFS) abstraction layer. This allows mounting
    of regular storage media filesystems (EXT*, NTFS, FAT, and so on), network-based
    filesystems (nfs, sambafs/smbfs, and so on), userspace filesystems based on FUSE,^([3](footnote.xhtml#fn12))
    stackable filesystems (encryptfs, unionfs, and so on), and other special pseudo
    filesystems (sysfs, proc, and so on).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供一致的接口以支持不同类型的文件系统，Linux内核实现了一个虚拟文件系统（VFS）抽象层。这允许挂载常规存储介质文件系统（EXT*、NTFS、FAT等）、基于网络的文件系统（nfs、sambafs/smbfs等）、基于FUSE的用户空间文件系统、可堆叠文件系统（encryptfs、unionfs等）以及其他特殊伪文件系统（sysfs、proc等）。
- en: The Linux Storage Stack Diagram, shown in [Figure 2-1](ch02.xhtml#ch2fig1),
    helps you understand the relationship among filesystems, devices, device drivers,
    and hardware devices within the Linux kernel.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图2-1](ch02.xhtml#ch2fig1)所示，Linux存储栈图有助于你理解Linux内核中文件系统、设备、设备驱动程序和硬件设备之间的关系。
- en: '![image](../images/f02-01.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f02-01.jpg)'
- en: '*Figure 2-1: The Linux Storage Stack Diagram ([https://www.thomas-krenn.com/en/wiki/Linux_Storage_Stack_Diagram](https://www.thomas-krenn.com/en/wiki/Linux_Storage_Stack_Diagram),
    used under CC Attribution-ShareAlike 3.0 Unported)*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2-1：Linux存储栈图（[https://www.thomas-krenn.com/en/wiki/Linux_Storage_Stack_Diagram](https://www.thomas-krenn.com/en/wiki/Linux_Storage_Stack_Diagram)，根据CC署名-相同方式共享3.0未加版使用）*'
- en: '***Mounting Filesystems in Linux***'
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***在Linux中挂载文件系统***'
- en: An often-misunderstood concept is the difference between an attached disk device
    and a mounted disk device. A device does not need to be mounted to acquire it
    or even to access it with forensic analysis tools. Forensic tools that operate
    directly on block devices will have access to attached disks without mounting
    them through the OS.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常被误解的概念是附加磁盘设备与挂载磁盘设备之间的区别。设备不需要挂载就可以进行获取，甚至可以使用取证分析工具访问它。直接操作块设备的取证工具将能够在不通过操作系统挂载的情况下访问附加的磁盘。
- en: 'Filesystems that reside on disk devices in Unix and Linux require explicit
    mounting before being accessible as a regular directory structure. *Mounting*
    a filesystem simply means it is made available to use with standard file access
    tools (file managers, applications, and so on), similar to drive letters in the
    DOS/Windows world. Linux doesn’t use drive letters; mounted disks become part
    of the local filesystem and are attached to any chosen part of the filesystem
    tree. This is called the filesystem’s *mount point*. For example, the following
    command mounts a USB stick on an investigator system using (*/mnt*) as the mount
    point:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在Unix和Linux的磁盘设备上的文件系统需要显式挂载，才能作为常规目录结构访问。*挂载*文件系统意味着它可以通过标准文件访问工具（文件管理器、应用程序等）进行使用，类似于DOS/Windows中的驱动器字母。Linux不使用驱动器字母；挂载的磁盘成为本地文件系统的一部分，并附加到文件系统树的任何选定部分。这被称为文件系统的*挂载点*。例如，以下命令使用（*/mnt*）作为挂载点将USB闪存驱动器挂载到调查人员系统上：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To physically remove a mounted disk in Linux, unmount the filesystem first
    to prevent corruption of the filesystem. You can use the `umount` command (that
    is `umount`, not `unmount`) with either the device name or the mount point. These
    two commands perform the same action to unmount a disk filesystem:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Linux中物理移除挂载的磁盘，首先卸载文件系统以防止文件系统损坏。你可以使用`umount`命令（是`umount`，不是`unmount`）配合设备名称或挂载点。这两个命令执行相同的操作来卸载磁盘文件系统：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: After the filesystem is unmounted, the raw disk is still visible to the kernel
    and accessible by block device tools, even though the filesystem is not mounted.
    An unmounted disk is safe to physically detach from an investigator’s acquisition
    system.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 文件系统卸载后，原始磁盘仍然对内核可见，并且可以通过块设备工具访问，即使文件系统没有挂载。未挂载的磁盘可以安全地从调查人员的获取系统中物理分离。
- en: Don’t attach or mount suspect drives without a write blocker. There is a high
    risk of modifying, damaging, and destroying digital evidence. Modern OSes will
    update the last-accessed timestamps as the files and directories are accessed.
    Any userspace daemons (search indexers, thumbnail generators, and so on) might
    write to the disk and overwrite evidence, filesystems might attempt repairs, journaling
    filesystems might write out journal data, and other human accidents might occur.
    You can mount a filesystem while using a write blocker, and it will be accessible
    in the same way as a regular filesystem but in a read-only state, ensuring digital
    evidence is protected.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 不要在没有写保护器的情况下连接或挂载可疑驱动器。这样做存在修改、损坏和销毁数字证据的高风险。现代操作系统会在访问文件和目录时更新最后访问的时间戳。任何用户空间的守护进程（搜索索引器、缩略图生成器等）可能会写入磁盘并覆盖证据，文件系统可能会尝试修复，日志文件系统可能会写出日志数据，其他人为事故也可能发生。在使用写保护器时，你可以挂载文件系统，它将像常规文件系统一样可访问，但处于只读状态，从而确保数字证据得到保护。
- en: '***Accessing Filesystems with Forensic Tools***'
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用取证工具访问文件系统***'
- en: When you’re using forensic tools, such as Sleuth Kit, dcfldd, foremost, and
    others, you can access the filesystem (without mounting) by using the correct
    block device representing the partition where the filesystem resides. In most
    cases, this will be a numbered device, such as */dev/sda1*, */dev/sda2*, or */dev/sdb1*,
    and so on, as detected by the Linux kernel.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用取证工具，例如 Sleuth Kit、dcfldd、foremost 等时，可以通过使用正确的块设备来访问文件系统（无需挂载），该块设备代表文件系统所在的分区。在大多数情况下，这将是一个带编号的设备，如
    */dev/sda1*、*/dev/sda2* 或 */dev/sdb1* 等，由 Linux 内核检测到。
- en: 'In cases where the Linux kernel does not detect the filesystem, you may need
    to explicitly specify it. A filesystem will not be correctly detected for any
    of the following reasons:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Linux 内核未能检测到文件系统，你可能需要显式指定它。以下原因可能导致文件系统无法正确检测：
- en: • The filesystem is not supported by the host system (missing kernel module
    or unsupported filesystem).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: • 主机系统不支持该文件系统（缺少内核模块或不支持的文件系统）。
- en: • The partition table is corrupted or missing.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: • 分区表损坏或丢失。
- en: • The partition has been deleted.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: • 分区已被删除。
- en: • The filesystem offset on the disk is unknown.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: • 磁盘上的文件系统偏移量未知。
- en: • The filesystem needs to be made accessible (unlock device, decrypt partition,
    and so on).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: • 需要使文件系统可访问（解锁设备、解密分区等）。
- en: In later sections of the book, I’ll explain techniques that use loop devices
    to access partitions and filesystems that are not automatically detected by the
    Linux kernel or various forensic tools.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的后续章节中，我将解释使用循环设备访问未被 Linux 内核或各种取证工具自动检测到的分区和文件系统的技巧。
- en: '**Linux Distributions and Shells**'
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Linux 发行版和 Shell**'
- en: When you’re creating an investigator workstation to perform digital forensic
    acquisition or analysis work, it’s useful to understand the basic construction
    or composition of a Linux system.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当你创建一个调查工作站来执行数字取证获取或分析工作时，理解 Linux 系统的基本构造或组成是很有帮助的。
- en: '***Linux Distributions***'
  id: totrans-68
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Linux 发行版***'
- en: The term *Linux* technically refers only to the *kernel*, which is the actual
    OS.^([4](footnote.xhtml#fn13)) The graphical interface, tools and utilities, and
    even the command line shell are not Linux but parts of a Linux *distribution*.
    A distribution is a functional package that typically contains the Linux kernel,
    installers and package managers (usually unique to the distribution), and various
    additional programs and utilities (including standard applications, such as Office
    suites, web browsers, or email/chat clients). There is only one official Linux
    kernel, but there are many Linux distributions—for example, Red Hat, SUSE, Arch,
    and Debian, among others. There are also many derivative distributions. For example,
    Ubuntu is a derivative based on Debian, CentOS is based on Red Hat, and Manjaro
    is based on Arch. For a comprehensive list of distributions (and other non-Linux,
    open source OSes), visit *[http://distrowatch.com/](http://distrowatch.com/)*.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*Linux* 这一术语从技术上讲仅指 *内核*，即实际的操作系统。^[4](footnote.xhtml#fn13)  图形界面、工具和实用程序，甚至命令行
    Shell 都不是 Linux，而是 Linux *发行版* 的一部分。发行版是一个功能包，通常包含 Linux 内核、安装程序和软件包管理器（通常是特定于该发行版的），以及各种附加程序和实用工具（包括标准应用程序，如办公套件、网页浏览器或电子邮件/聊天客户端）。只有一个官方的
    Linux 内核，但有许多 Linux 发行版——例如，Red Hat、SUSE、Arch 和 Debian 等。还有许多衍生发行版。例如，Ubuntu 是基于
    Debian 的衍生版，CentOS 基于 Red Hat，Manjaro 基于 Arch。要查看发行版的完整列表（以及其他非 Linux 的开源操作系统），请访问
    *[http://distrowatch.com/](http://distrowatch.com/)*。'
- en: Multiple components make up the graphic interface of various Linux distributions
    and are useful to understand. The X11 window system is a display server that interacts
    with the graphics hardware and provides an interface to the X11 graphics primitives
    (Wayland is a newer alternative to X11). A window manager controls movement, resizing,
    placement, and other windows management on a system. Some examples of window managers
    include Compiz, Mutter, and OpenBox, and you can use them without a desktop environment.
    Desktop environments provide the look and feel of a distribution and operate on
    top of the window manager. Examples of popular desktops are Gnome, KDE, Xfce,
    and Mate. The graphics environment you choose for your forensic investigator’s
    workstation can be based on your personal preference; it doesn’t have any impact
    on the evidence you collect or analyze. The examples shown in this book were performed
    on a system without a GUI (Ubuntu Server version).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 组成各种 Linux 发行版图形界面的多个组件是很有用的理解对象。X11 窗口系统是一个显示服务器，它与图形硬件交互并提供 X11 图形原语的接口（Wayland
    是 X11 的一个较新的替代方案）。窗口管理器控制系统上窗口的移动、大小调整、位置等管理工作。常见的窗口管理器包括 Compiz、Mutter 和 OpenBox，且可以在没有桌面环境的情况下使用它们。桌面环境提供了发行版的外观和感觉，并且运行在窗口管理器之上。流行的桌面环境有
    Gnome、KDE、Xfce 和 Mate。你为法证调查员工作站选择的图形环境可以基于个人偏好，它不会影响你收集或分析的证据。本书中的示例是在没有图形用户界面的系统（Ubuntu
    Server 版本）上进行的。
- en: '***The Shell***'
  id: totrans-71
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Shell***'
- en: The shell is a command prompt that humans and/or machines use to submit commands
    to instruct and control an OS. The shell starts or stops programs, installs software,
    shuts down a system, and performs other work. Arguably, the command shell offers
    more powerful features and possibilities than graphical environments.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Shell 是一个命令提示符，供人类和/或机器用来提交命令以指令和控制操作系统。Shell 启动或停止程序、安装软件、关闭系统并执行其他任务。可以说，命令行
    Shell 提供的功能和可能性比图形环境更为强大。
- en: The examples in this book use the command line environment. Some GUI equivalents
    or GUI frontends to the command line tools may exist, but they are not covered
    in this book.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的示例使用的是命令行环境。可能存在一些命令行工具的图形界面替代品或图形前端，但这些内容本书中没有涉及。
- en: The most common shell in use today, and the default in most Linux distributions,
    is Bash. The examples in this book use Bash but may also work on other shells
    (zsh, csh, and so on).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 当前最常用的 Shell 是 Bash，它是大多数 Linux 发行版的默认 Shell。本书中的示例使用的是 Bash，但也可能适用于其他 Shell（如
    zsh、csh 等）。
- en: '***Command Execution***'
  id: totrans-75
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***命令执行***'
- en: The shell is simply another program that runs on a system. Human users interface
    with it in the form of typed commands, and machines interface with it in the form
    of executed shell scripts.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Shell 只是系统上运行的另一个程序。人类用户通过输入命令与其交互，机器则通过执行 Shell 脚本与其交互。
- en: When human users enter commands, they usually type them into the prompt and
    then press ENTER or RETURN. There may or may not be any output, depending on the
    program run and the configuration of the shell.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户输入命令时，他们通常将其键入提示符，然后按下 ENTER 或 RETURN。根据程序的运行和 shell 的配置，可能会有输出，也可能没有输出。
- en: '***Piping and Redirection***'
  id: totrans-78
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***管道与重定向***'
- en: A useful feature of the Unix/Linux command line is the ability to pass streams
    of data to programs and files using piping and redirection. This is somewhat similar
    to drag-and-drop and copy/paste in graphical environments, but with much more
    flexibility.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Unix/Linux 命令行的一个有用功能是能够通过管道和重定向将数据流传递给程序和文件。这与图形环境中的拖放和复制/粘贴有些相似，但具有更大的灵活性。
- en: A program can receive data from the output of other programs or from files on
    the filesystem. A program can also output data to the input of another program
    or send it to a file on the filesystem.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 程序可以从其他程序的输出或文件系统上的文件接收数据。程序也可以将数据输出到另一个程序的输入或发送到文件系统中的文件。
- en: 'The following examples illustrate *tool.sh* redirecting output into *file.txt*,
    receiving input from *file.txt*, and piping output from *tool.sh* to the input
    of *othertool.sh*:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例演示了 *tool.sh* 将输出重定向到 *file.txt*，从 *file.txt* 接收输入，并将 *tool.sh* 的输出通过管道传输到
    *othertool.sh* 的输入：
- en: '[PRE4]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This piping and redirection mechanism is not limited to single commands or
    files and can be chained in a sequence with multiple programs:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这种管道和重定向机制不仅限于单个命令或文件，可以通过多个程序按顺序链接起来：
- en: '[PRE5]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Pipelines and redirection are used extensively throughout this book. They allow
    you to complete multiple tasks using a single line of commands, and they facilitate
    scripting and automation, eliminating the need for human interaction. The examples
    in this book use piping and redirection to acquire images of storage media, move
    data between forensic programs, and save evidential information of interest in
    files.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中广泛使用了管道和重定向。它们使你可以通过一行命令完成多个任务，并促进了脚本编写和自动化，消除了对人工交互的需求。本书中的示例使用管道和重定向来获取存储介质的镜像，在取证程序之间移动数据，并将相关的证据保存到文件中。
- en: '**Closing Thoughts**'
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**结束语**'
- en: In this chapter, I discussed the use of Linux as a viable platform to perform
    forensic acquisition tasks and covered both its advantages and disadvantages.
    I provided a review of Linux distributions and how the Linux kernel works. I showed
    the concept of devices and filesystems and the use of shells, piping, and redirection
    from the perspective of the forensic examiner. You now have the Linux knowledge
    needed to understand the examples in the rest of the book.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我讨论了将 Linux 作为一个可行的平台来执行取证采集任务，并覆盖了其优缺点。我回顾了 Linux 发行版以及 Linux 内核的工作原理。我展示了设备和文件系统的概念，以及从取证审查员的角度来看使用
    shell、管道和重定向。现在你已经具备了理解本书其余部分示例所需的 Linux 知识。
