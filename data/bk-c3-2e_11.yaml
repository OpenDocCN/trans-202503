- en: '**11**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**11**'
- en: '**GRADIENTS**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**渐变**'
- en: '![Image](graphics/common-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/common-01.jpg)'
- en: In this chapter, the last of the quartet about decorative properties, I cover
    CSS gradients. A *gradient* in this context is the gradual transition between
    two or more colors—a design standard for many years and one that you might think
    would be fairly simple to translate into CSS, but which has a long and tortured
    history on the Web.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，作为关于装饰属性四部曲的最后一章，我将介绍CSS渐变。在这个上下文中，*渐变*是指两种或更多颜色之间的逐渐过渡——这是多年来的设计标准，虽然你可能认为它在CSS中实现会比较简单，但它在Web上的历史却长且曲折。
- en: CSS gradients were first introduced in WebKit in 2008 and made their way into
    Safari 4\. The syntax they used, however, was completely different from the one
    you’ll see in the rest of this chapter and was deemed too complex by other browser
    vendors. Various other proposals were put forward (and even implemented) throughout
    the following years, until a final syntax was agreed on at the end of 2011\. This
    final syntax was rapidly adopted by all browsers, and it’s the one I’ll cover
    in this chapter. (Read “[Browser Support and Legacy Syntaxes](ch15.html#ch15leve1sec205)”
    on [page 131](ch11.html#page_131) to learn how to support older versions in legacy
    browsers.)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: CSS渐变首次在2008年由WebKit引入，并出现在Safari 4中。然而，它们使用的语法与本章其余部分展示的完全不同，并且被其他浏览器供应商认为过于复杂。接下来几年中提出了多种其他建议（并且甚至得到了实现），直到2011年底最终达成了一种语法。这种最终的语法被所有浏览器迅速采纳，并且就是我将在本章中介绍的语法。（请阅读
    “[浏览器支持与遗留语法](ch15.html#ch15leve1sec205)” 在 [第131页](ch11.html#page_131)了解如何在遗留浏览器中支持旧版本。）
- en: '**WARNING** *Graphical effects like gradients can be quite computationally
    taxing and will slow the rendering and performance of pages, especially in mobile
    browsers. That’s not to say you should avoid them, just that you should always
    evaluate performance against appearance when building your sites.*'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**警告** *图形效果如渐变可能会对计算资源产生较大负担，尤其在移动浏览器中，会降低页面的渲染速度和性能。这并不是说你应该避免使用渐变，而是要在构建网站时，始终在性能和外观之间进行权衡。*'
- en: '**Linear Gradients**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**线性渐变**'
- en: A *linear gradient* is one that gradually transitions between colors over the
    length of a straight line connecting two points. At its simplest, a linear gradient
    changes proportionally between two colors along the full length of the line.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*线性渐变*是指在连接两点的直线的长度上，颜色逐渐过渡的渐变。在最简单的情况下，线性渐变在整条线的长度上按比例地从两种颜色之间过渡。'
- en: 'I’ll begin by showing the shortest possible syntax for a linear gradient, which
    is defined using the `linear-gradient()` value function on the `background-image`
    property:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我将从展示线性渐变的最简语法开始，线性渐变通过在`background-image`属性中使用`linear-gradient()`值函数来定义：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[Figure 11-1](ch11.html#ch11fig1) shows the result.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-1](ch11.html#ch11fig1)显示了结果。'
- en: '![Image](graphics/f11-01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-01.jpg)'
- en: '*Figure 11-1: A simple top-bottom, two-color linear gradient*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-1：一个简单的上下两色线性渐变*'
- en: 'Each color that you want the gradient to pass through is known as a *color-stop*
    and is passed into the function in a comma-separated list of arguments. As you
    can see here, gradients require at least two color-stops: a start and an end.
    In this example, the gradient begins black and ends white, passing gradually through
    all the intermediate shades between the two values.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 每个你希望渐变经过的颜色被称为*color-stop*，并以逗号分隔的参数列表形式传递给函数。如你所见，渐变至少需要两个color-stop：一个开始色和一个结束色。在这个例子中，渐变从黑色开始，到白色结束，逐渐经过两个值之间的所有中间色调。
- en: '***Setting Gradient Direction***'
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***设置渐变方向***'
- en: 'The axis between the first and last color-stops is known as the *gradient line*.
    In the previous example, the gradient line begins at the top of the box and moves
    to the bottom, vertically. This is the default direction. To set a different gradient
    line, specify a target side or corner of the box by passing a new argument into
    the function before the list of color-stops. The argument is a string of keywords,
    beginning with `to` and followed by one or two direction keywords. For example,
    to define a black-to-white gradient running bottom to top, you use this value:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个和最后一个color-stop之间的轴线被称为*渐变线*。在前面的例子中，渐变线从盒子的顶部开始，垂直向下延伸。这是默认的方向。要设置不同的渐变线，可以在颜色停止列表之前，通过传递一个新的参数来指定盒子的目标边或角。这个参数是一个包含关键词的字符串，关键词以`to`开头，后跟一个或两个方向关键词。例如，要定义一个从下到上的黑白渐变，可以使用以下值：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To change the same gradient to run diagonally from the top-left corner to the
    bottom-right one, you use two directional keywords:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要将相同的渐变改为从左上角到右下角对角线的方向，你需要使用两个方向关键词：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For finer control over the direction of the gradient line, you can use an angle
    argument instead of the directional keywords. Angles can be declared using various
    units—in this chapter, I’ll stick with degrees (`deg`) because they’re the most
    commonly understood, but see “Angle Units” on [page 124](ch11.html#page_124) for
    more about alternative units.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 若要更精细地控制渐变线的方向，可以使用角度参数代替方向关键词。角度可以使用多种单位进行声明——在本章中，我将坚持使用度数（`deg`），因为它是最常见的单位，但有关其他单位的更多信息，请参见[第
    124 页](ch11.html#page_124)的“角度单位”部分。
- en: 'The angle value sets the angle of the gradient line: `0deg` (or `360deg`) goes
    from bottom to top, `45deg` from bottom left to top right, `90deg` from left to
    right, and so on. Negative values make the gradient go counterclockwise: -`45deg`
    is the same as `315deg`, -`315deg` is the same as `45deg`, and so on. You get
    the idea.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 角度值设置渐变线的角度：`0deg`（或`360deg`）从下到上，`45deg`从左下到右上，`90deg`从左到右，依此类推。负值使渐变逆时针方向：`-45deg`与`315deg`相同，`-315deg`与`45deg`相同，依此类推。你明白了。
- en: 'For example, to create the same top-left to bottom-right gradient as in the
    previous code example, but using an angle value, you would use this code:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要创建与前一个代码示例中相同的从左上到右下的渐变，但使用角度值，你可以使用以下代码：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The next code snippet shows three examples of the effects of different direction
    values: the first from right to left, the second from bottom left to top right,
    and the last an angle of 120 degrees (roughly, but not quite, top left to bottom
    right).'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个代码片段展示了三个不同方向值的效果示例：第一个从右到左，第二个从左下到右上，最后一个是120度的角度（大致，虽然不完全是，从左上到右下）。
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[Figure 11-2](ch11.html#ch11fig2) shows the results.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-2](ch11.html#ch11fig2)展示了结果。'
- en: '![Image](graphics/f11-02.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-02.jpg)'
- en: '*Figure 11-2: Three different direction values: left to right, bottom left
    to top right, and 120 degrees*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-2：三个不同的方向值：从左到右，从左下到右上，以及120度*'
- en: '***Adding Extra Color-Stop Values***'
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***添加额外的颜色停止值***'
- en: 'So far I’ve used a simple gradient with only two color-stops, but you can use
    more. (Because this book is printed in black and white, I’m limited by the palette
    that I can choose!) Each color you add is declared by simply adding a new color-stop
    in the comma-separated list, as in this example where I add a third black color-stop:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我使用的是一个简单的渐变，只有两个颜色停止值，但你可以使用更多的颜色停止值。（因为本书是黑白印刷的，所以我只能选择有限的色板！）每个添加的颜色都通过在逗号分隔的列表中添加一个新的颜色停止值来声明，正如这个示例中，我添加了第三个黑色停止值：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**ANGLE UNITS**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**角度单位**'
- en: A variety of angle units, used to represent angular measurement, are defined
    in the CSS3 Values and Units Module (*[http://www.w3.org/TR/css3-values/#angle/](http://www.w3.org/TR/css3-values/#angle/)*).
    The unit that most of us learn in school is degrees (`deg`), where a full circle
    has 360 degrees, and this is the unit I use throughout this chapter. Of the alternatives,
    one is gradians (`grad`), which are measured on a scale where a full turn around
    a circle is equal to 400 gradians. Another, radians (`rad`), is based on π (pi),
    where a full circle is 2π radians, or approximately 6.2832rad. Still another unit
    is the `turn`, where one full circle is equal to 1 turn, although as of this writing
    only Firefox and Internet Explorer 9+ support this.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一种用于表示角度测量的角度单位在 CSS3 值和单位模块中定义（*[http://www.w3.org/TR/css3-values/#angle/](http://www.w3.org/TR/css3-values/#angle/)*）。我们大多数人在学校学到的单位是度数（`deg`），其中一整圈有
    360 度，这也是我在本章中使用的单位。其他单位之一是梯度（`grad`），其测量范围是以圆周一圈为 400 梯度为标准。另一个是弧度（`rad`），其基于
    π（pi），一整圈是 2π 弧度，约为 6.2832rad。还有一个单位是`turn`，表示一整圈等于 1 圈，尽管截至本文写作时，只有 Firefox 和
    Internet Explorer 9+ 支持此单位。
- en: '[Table 11-1](ch11.html#ch11table1) shows some equivalent values of the different
    angle units.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 11-1](ch11.html#ch11table1)显示了不同角度单位的一些等效值。'
- en: '**Table 11-1:** Equivalent Angle Values'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 11-1：** 角度值的等效单位'
- en: '| **Degrees** | **Gradians** | **Radians** | **Turns** |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| **度数** | **梯度** | **弧度** | **圈数** |'
- en: '| 60 | 66.66667 | 1.04720 | 0.16667 |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 60 | 66.66667 | 1.04720 | 0.16667 |'
- en: '| 90 | 100 | 1.5708 | 0.25 |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 90 | 100 | 1.5708 | 0.25 |'
- en: '| 240 | 266.66667 | 4.18879 | 0.66667 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 240 | 266.66667 | 4.18879 | 0.66667 |'
- en: As you can see, degrees tend to provide the cleanest and most familiar values,
    so unless you’re doing something very mathematically specific, like calculus,
    you’ll usually use degrees.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，度数通常提供最简洁且最熟悉的值，因此，除非你在进行某些非常特定的数学计算，如微积分，否则通常会使用度数。
- en: The color-stops are processed in the order listed, so this example creates a
    gradient that goes from black to white then back to black. [Figure 11-3](ch11.html#ch11fig3)
    shows the result.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色停顿点会按照列出的顺序处理，因此这个示例创建了一个从黑色到白色再回到黑色的渐变。[图 11-3](ch11.html#ch11fig3)展示了结果。
- en: '![Image](graphics/f11-03.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-03.jpg)'
- en: '*Figure 11-3: A gradient with three color-stops*'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-3：一个包含三个颜色停顿点的渐变*'
- en: 'Color-stops are evenly distributed along the length of the gradient, so, in
    this case, the white color-stop is exactly halfway between the two blacks, at
    the middle point of the gradient. You can alter this distribution by adding a
    length or percentage value after each color-stop to shift the point along the
    gradient line where a color-stop is positioned. For example, this code positions
    the white color-stop at 75 percent of the length of the gradient line:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色停顿点沿渐变的长度均匀分布，因此，在这种情况下，白色的颜色停顿点正好位于两个黑色停顿点之间，即渐变的中间位置。你可以通过在每个颜色停顿点后添加长度或百分比值，来调整颜色停顿点在渐变线上的位置。例如，以下代码将白色颜色停顿点放置在渐变线的
    75% 位置：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[Figure 11-4](ch11.html#ch11fig4) shows the result. Compare it to [Figure 11-3](ch11.html#ch11fig3)
    where no position is defined, and you’ll see that the white color-stop has moved
    further along the gradient line toward the bottom of the element.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-4](ch11.html#ch11fig4)展示了结果。与[图 11-3](ch11.html#ch11fig3)中未定义位置的情况相比，你会看到白色的颜色停顿点已经沿渐变线向元素底部进一步移动。'
- en: '![Image](graphics/f11-04.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-04.jpg)'
- en: '*Figure 11-4: The second color-stop occurs three-quarters (or 75 percent) of
    the way down the length of the gradient.*'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-4：第二个颜色停顿点出现在渐变长度的四分之三（或 75%）处。*'
- en: You’re not limited to using only percentage values on color-stops; length values
    are also permitted. This next snippet shows three ways to use length and percentage
    values, with the result shown in [Figure 11-5](ch11.html#ch11fig5). I’ll walk
    through each after the code.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你不仅可以在颜色停顿点上使用百分比值，也可以使用长度值。接下来的代码片段展示了三种使用长度和百分比值的方法，结果见[图 11-5](ch11.html#ch11fig5)。我将在代码之后逐一讲解。
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Image](graphics/f11-05.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-05.jpg)'
- en: '*Figure 11-5: Using different position values in the color-stops*'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-5：在颜色停顿点中使用不同的定位值*'
- en: In ➊, the final color-stop argument has a position of 75 percent so the color-stop
    begins there and continues as a solid color until the end. In ➋, the first color-stop
    has the position value, so a solid block of the inherited color (black) is displayed
    until the 50 percent mark of the gradient line, at which point the gradient begins
    to transition to the final color-stop value.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在➊中，最后一个颜色停顿点的参数位置为75%，因此该颜色停顿点从该位置开始，并继续以纯色直到结束。在➋中，第一个颜色停顿点具有位置值，因此继承的颜色（黑色）会显示为一个固态块，直到渐变线的50%位置，届时渐变将过渡到最终的颜色停顿点值。
- en: Finally, ➌ has three color-stops. The second begins at 50 percent, so the first
    and second color-stops transition up to that point. The final color-stop is placed
    just one pixel farther along the gradient line, so there is a sudden shift to
    that color (with no transition) and the color continues to the end.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，➌包含三个颜色停顿点。第二个颜色停顿点从50%位置开始，因此第一个和第二个颜色停顿点会过渡到该位置。最后的颜色停顿点则仅比前一个停顿点沿渐变线多出一个像素，因此该颜色会突然切换（没有过渡），并继续到达渐变的终点。
- en: '***Repeating Linear Gradients***'
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***重复线性渐变***'
- en: 'Rather than create only a single gradient from one side of an element to another,
    you can repeat the same gradient until the element is filled using the `repeating-linear-gradient()`
    function. This function accepts the same fundamental set of values as `linear-gradient`
    except that a length or percentage value is required for the final color-stop.
    Here’s an example:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 与其仅创建一个从元素一侧到另一侧的渐变，你还可以使用`repeating-linear-gradient()`函数，重复相同的渐变，直到填满整个元素。该函数接受与`linear-gradient`相同的基本值集，不同之处在于，最后一个颜色停顿点需要指定一个长度或百分比值。下面是一个示例：
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This final color-stop value sets the point at which the gradient should end
    and then start repeating. This code creates a top-bottom gradient (the default)
    between white and black that covers 25 percent of the height of the box, meaning
    it repeats four times, as shown in [Figure 11-6](ch11.html#ch11fig6).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的颜色停靠点值设置了渐变结束的点，并从该点开始重复。此代码创建了一个上下渐变（默认）在白色和黑色之间，覆盖了框体高度的25%，意味着它重复了四次，如[图11-6](ch11.html#ch11fig6)所示。
- en: '![Image](graphics/f11-06.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-06.jpg)'
- en: '*Figure 11-6: A white-to-black repeating gradient*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-6：从白到黑的重复渐变*'
- en: The next code examples use different values; [Figure 11-7](ch11.html#ch11fig7)
    shows the result, and I’ll explain each, in turn, after you’ve had a chance to
    look at the code.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的代码示例使用了不同的值；[图11-7](ch11.html#ch11fig7)展示了结果，我会在你查看完代码后逐一解释每个。
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Image](graphics/f11-07.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-07.jpg)'
- en: '*Figure 11-7: Different repeating linear gradients*'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-7：不同的重复线性渐变*'
- en: • The first example (➊) uses three color-stops and sets the direction so the
    gradient goes from right to left. The gradient covers 25 percent of the element,
    so the black-white-black pattern is repeated four times.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: • 第一个示例（➊）使用了三个颜色停靠点并设置了方向，使渐变从右向左。渐变覆盖了元素的25%，因此黑白黑的模式重复了四次。
- en: • The second example (➋) uses an angle value of `45deg` so the gradient is diagonal
    and uses pixel units for the color-stops. Again the gradients are black-white-black,
    but they’re distributed unequally so the black-white covers 2px, whereas the white-black
    covers 8px.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: • 第二个示例（➋）使用了`45deg`的角度值，使渐变呈对角线方向，并且颜色停靠点使用了像素单位。同样，渐变为黑白黑，但它们的不均匀分布使得黑白部分覆盖2px，而白黑部分覆盖8px。
- en: '• The last example (➌) uses four color-stops: black-black over 2px and then
    white-white over 2px. The low length values prevent a gradual change between the
    two colors, creating the hard diagonal lines you see here.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: • 最后的示例（➌）使用了四个颜色停靠点：黑色-黑色覆盖2px，然后白色-白色覆盖2px。较小的长度值阻止了两种颜色之间的渐变过渡，形成了你在这里看到的硬直线。
- en: '**Radial Gradients**'
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**径向渐变**'
- en: 'A *radial gradient* is a gradual transition between colors that moves out from
    a central point in all directions. At its simplest, a radial gradient gradually
    changes between two colors in a circular or elliptical shape. Radial gradients
    are defined with the `radial-gradient()` value function, and, as with linear gradients,
    the simplest way to create one is to pass two color values in as arguments:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '*径向渐变*是颜色之间的渐变过渡，它从中心点向所有方向扩展。最简单的径向渐变在圆形或椭圆形状中逐渐改变两种颜色。径向渐变通过`radial-gradient()`值函数来定义，和线性渐变一样，创建径向渐变的最简单方法是将两个颜色值作为参数传递：'
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This results in a simple, two-color, white-black gradient in an ellipse that
    extends to the farthest corner of its parent element, as shown in [Figure 11-8](ch11.html#ch11fig8).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个简单的双色白黑渐变，呈椭圆形，延伸至其父元素的最远角落，如[图11-8](ch11.html#ch11fig8)所示。
- en: '![Image](graphics/f11-08.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-08.jpg)'
- en: '*Figure 11-8: A simple two-color radial gradient*'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-8：一个简单的双色径向渐变*'
- en: '***Using Radial Gradients***'
  id: totrans-73
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用径向渐变***'
- en: 'You can set the shape of a radial gradient by adding a keyword before the color-stops.
    The default is `ellipse`, but you can use the alternative `circle` like this:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在颜色停靠点前添加一个关键字来设置径向渐变的形状。默认值是`ellipse`，但你可以像这样使用替代的`circle`：
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The result shown in [Figure 11-9](ch11.html#ch11fig9) is more circular than
    [Figure 11-8](ch11.html#ch11fig8), although lacking a clearly defined edge. (You’ll
    learn how to set the extent of a radial gradient shortly.)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图11-9](ch11.html#ch11fig9)所示的结果比[图11-8](ch11.html#ch11fig8)更接近圆形，尽管缺乏清晰定义的边缘。（你将很快学到如何设置径向渐变的范围。）
- en: '![Image](graphics/f11-09.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-09.jpg)'
- en: '*Figure 11-9: A circular radial gradient*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-9：一个圆形的径向渐变*'
- en: 'The default center of a radial gradient (from which the gradient radiates)
    is at the center of the element it’s applied to. You can change this point by
    adding a position argument to the `radial-gradient()` function. The values used
    to set this position are exactly the same as those used in `background-position`—that
    is, a length, percentage, or keywords. You add the position after the shape keyword
    (`circle`, in the example shown here), preceded by the word `at`. The position
    is set to the center-right of the element:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 放射性渐变的默认中心（渐变的辐射起点）位于应用该渐变的元素的中心。你可以通过向 `radial-gradient()` 函数添加位置参数来改变这个点。用于设置该位置的值与
    `background-position` 中使用的完全相同——即长度、百分比或关键字。位置参数加在形状关键字（这里示例中是 `circle`）后面，前面加上
    `at` 关键字。位置设置为元素的右中心：
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can also set the *extent* of a gradient—that is, the point where the gradient
    ends—using a length or position value or one of four extent keywords. The extent
    argument is placed immediately after the shape keyword. For example, this code
    creates a circular gradient, the extent of which is 50px, meaning it finishes
    50px from the center point:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以设置渐变的*范围*——即渐变结束的点——使用长度或位置值，或者四个范围关键字之一。范围参数紧跟在形状关键字后面。例如，这段代码创建了一个圆形渐变，范围为
    50px，意味着它在距中心点 50px 处结束：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The four possible keywords that you can use when setting the extent are `closest-corner`,
    `closest-side`, `farthest-corner` (the default), and `farthest-side`. The next
    listing illustrates the differences among the keywords, with the result of each
    line shown in [Figure 11-10](ch11.html#ch11fig10). I’ll discuss each rule in turn.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 设置范围时可以使用的四个关键字是 `closest-corner`、`closest-side`、`farthest-corner`（默认）和 `farthest-side`。下一个示例展示了这些关键字之间的差异，每一行的结果都显示在[图
    11-10](ch11.html#ch11fig10)中。我将依次讨论每条规则。
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Image](graphics/f11-10.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-10.jpg)'
- en: '*Figure 11-10: Comparing extent keywords for radial gradients*'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-10：比较放射性渐变的范围关键字*'
- en: All four gradients produce the same circular shape. In examples ➊ and ➋, both
    gradients have the same center position and color-stops, but the extent of ➊ is
    set by the `closest-corner` keyword, making the extent of the gradient be the
    closest corner (the bottom left), whereas the extent of ➋ is the closest side
    (left, set with `closest-side`), so this second circle is much smaller than the
    previous one.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 所有四个渐变都产生相同的圆形效果。在示例 ➊ 和 ➋ 中，两个渐变具有相同的中心位置和颜色停止值，但 ➊ 的范围通过 `closest-corner`
    关键字设置，使渐变的范围是最靠近的角落（左下角），而 ➋ 的范围是最靠近的边（左边，通过 `closest-side` 设置），因此第二个圆要比第一个小得多。
- en: The gradients in examples ➌ and ➍ have the same center position (the bottom-left
    corner of the element) and each has four color-stop values (alternating black-white).
    The extent of example ➌ is the farthest corner (top-right, set with `farthest-corner`),
    whereas example ➍ has an extent of the farthest side (the right, and you’ve probably
    guessed by now that it’s set with `farthest-side`). Although subtle, you should
    be able to see that the extent of ➍ is more limited than that of ➌.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 ➌ 和 ➍ 中的渐变具有相同的中心位置（元素的左下角），每个都有四个颜色停止值（交替的黑白）。示例 ➌ 的范围是最远的角落（右上角，通过 `farthest-corner`
    设置），而示例 ➍ 的范围是最远的边（右边，你现在可能已经猜到，它是通过 `farthest-side` 设置的）。虽然差别微妙，但你应该能看出，➍ 的范围比
    ➌ 更为有限。
- en: '***Using Multiple Color-Stop Values***'
  id: totrans-89
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用多个颜色停止值***'
- en: As with their linear counterparts, radial gradients can accept multiple color-stop
    values and length or percentage values for positioning control. Any such qualifiers
    are entered in a comma-separated list. The four examples in the following listing
    demonstrate some interesting variations. [Figure 11-11](ch11.html#ch11fig11) shows
    the results of each line.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 与线性渐变一样，放射性渐变也可以接受多个颜色停止值以及用于定位控制的长度或百分比值。这些限定符以逗号分隔的列表形式输入。以下示例中的四个示例展示了一些有趣的变化。[图
    11-11](ch11.html#ch11fig11)展示了每一行的结果。
- en: '[PRE15]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Image](graphics/f11-11.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-11.jpg)'
- en: '*Figure 11-11: Different color-stop values for radial gradients*'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-11：不同颜色停止值的放射性渐变*'
- en: In example ➊, I’ve created a gradient with three color-stops (black-white-black)
    that radiates from the center of the box to its farthest side. The example at
    ➋ is similar, except that the color-stop begins at 25 percent along the length
    of the radius.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例 ➊ 中，我创建了一个包含三个颜色停止值（黑白黑）的渐变，它从盒子的中心辐射到最远的边。示例 ➋ 与之相似，不同之处在于颜色停止值从半径长度的 25%
    处开始。
- en: In example ➌, the gradient begins at the left side of the box and ends at the
    right side, with color-stops at 25 and 75 percent of the length. The example at
    ➍ uses five colors, but by specifying both the first and second color-stops to
    use the same color I’ve created the solid-white circle in the center.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ➌ 示例中，渐变从框的左侧开始，到右侧结束，颜色停靠点分别位于长度的 25% 和 75%。在 ➍ 示例中使用了五种颜色，但通过将第一个和第二个颜色停靠点设置为相同颜色，我在中心创建了一个实心白色圆圈。
- en: '***Repeating Radial Gradients***'
  id: totrans-96
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***重复径向渐变***'
- en: Just as the `linear-gradient()` function has `repeating-linear-gradient()`,
    a `repeating-radial-gradient()` can be used to repeat the supplied arguments until
    the limit specified in the final color-stop is reached. For example, the following
    code creates a circular gradient that repeats black-white every 20 percent until
    its extent is reached. The result is displayed in [Figure 11-12](ch11.html#ch11fig12).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 就像 `linear-gradient()` 函数有 `repeating-linear-gradient()` 一样，`repeating-radial-gradient()`
    可以用于重复给定的参数，直到最终颜色停靠点所指定的限制为止。例如，以下代码创建了一个圆形渐变，每 20% 重复一次黑色-白色，直到达到其范围。结果显示在[图
    11-12](ch11.html#ch11fig12)中。
- en: '[PRE16]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Image](graphics/f11-12.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-12.jpg)'
- en: '*Figure 11-12: A repeating radial gradient*'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-12：一个重复的径向渐变*'
- en: For some further demonstrations of what you can do with repeating radial gradients,
    see the next block of code. The result is shown in [Figure 11-13](ch11.html#ch11fig13).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多关于如何使用重复径向渐变的示范，请查看下一段代码。结果显示在[图 11-13](ch11.html#ch11fig13)中。
- en: '[PRE17]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Image](graphics/f11-13.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f11-13.jpg)'
- en: '*Figure 11-13: Patterns created with repeating radial gradients*'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-13：使用重复径向渐变创建的图案*'
- en: The example at ➊ radiates from the top-right corner and passes through three
    color-stops over 15 percent of the box width, with the limit set by the `farthest-corner`
    keyword. In example ➋, I set the center of the gradient to the left side of the
    box and the limit to the farthest corner, using a white-white (solid) gradient
    for 10px and then a white-black gradient for 5px. Finally, with example ➌, I seem
    to have created a work of art! A white-black-white gradient repeats over a very
    low radius of 2px, creating the interference pattern you see here.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: ➊ 示例从右上角发散，并通过 15% 宽度的三个颜色停靠点，限制由 `farthest-corner` 关键字设定。在 ➋ 示例中，我将渐变的中心设置为框的左侧，限制设定为最远角，使用白色-白色（实心）渐变
    10px，然后使用白色-黑色渐变 5px。最后，在 ➌ 示例中，我似乎创造了一件艺术作品！白色-黑色-白色渐变在 2px 的非常小半径上重复，形成了你看到的干涉图案。
- en: '**BROWSER SUPPORT AND LEGACY SYNTAXES**'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**浏览器支持与旧语法**'
- en: Although gradients have a checkered history, the good news is that the final
    syntax is well implemented by web browsers. Chrome, Firefox, IE10+, Safari 7+
    (including Mobile), and Android 4.4+ support all of the properties without a vendor
    prefix.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管渐变历史曲折，但好消息是最终语法已经被各大浏览器很好地实现。Chrome、Firefox、IE10+、Safari 7+（包括移动版）和 Android
    4.4+ 都不需要厂商前缀，支持所有相关属性。
- en: Older versions of WebKit (included in Safari 5 to 6.1 and Android 4.0 to 4.3)
    support a transitional syntax for linear gradients, in which the gradient direction
    is defined by where it comes *from* instead of where it goes *to.* This rule uses
    the `-webkit-` prefix. The following listing compares the old, transitional rule
    with the final one; the output from both is the same.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: WebKit 的旧版本（包括 Safari 5 到 6.1 和 Android 4.0 到 4.3）支持线性渐变的过渡语法，其中渐变的方向由其*起始*位置定义，而不是*结束*位置。此规则使用
    `-webkit-` 前缀。以下列表对比了旧的过渡语法与最终语法；两者的输出结果相同。
- en: '[PRE18]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If you need to support still older versions of WebKit (Android 3.0 and iOS
    4.3 and earlier), you’ll meet the original syntax, which was rejected by other
    browser vendors for being too complex. In this original syntax, both linear and
    radial gradients are defined with the `gradient()` value function, with differing
    arguments. This listing shows the simplest linear and radial gradient possible
    with this old syntax:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要支持更早版本的 WebKit（Android 3.0 和 iOS 4.3 及更早版本），你将遇到原始语法，该语法因过于复杂而被其他浏览器厂商拒绝。在这个原始语法中，线性和径向渐变都使用
    `gradient()` 值函数定义，并且参数不同。以下列表展示了使用这种旧语法可能的最简单的线性和径向渐变：
- en: '[PRE19]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Honestly, it would take too long to explain what’s going on here, especially
    for the radial syntax. My best advice is to not even consider using this original
    syntax and instead to provide a graceful fallback to a solid background color
    or an image instead. You’ll save yourself a lot of heartache that way.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，解释这里发生的事情需要花费很长时间，尤其是对于径向渐变的语法。我的最佳建议是，根本不考虑使用这种原始语法，而是为元素提供一个优雅的后备方案，比如使用单一的背景色或图片。这样你能避免很多麻烦。
- en: '**Multiple Gradients**'
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**多个渐变**'
- en: Because gradients are applied with the `background-image` property, you can
    use CSS3’s multiple background values’ syntax (see [Chapter 8](ch08.html#ch08))
    to apply multiple gradients to an element using comma-separated values. This next
    listing shows two examples. The first uses linear gradients; the second uses radial
    gradients. [Figure 11-14](ch11.html#ch11fig14) shows the results of each example.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 由于渐变是通过`background-image`属性应用的，你可以使用CSS3的多重背景值语法（参见[第8章](ch08.html#ch08)）来使用逗号分隔的值为元素应用多个渐变。接下来的示例展示了两个例子，第一个使用线性渐变，第二个使用径向渐变。[图11-14](ch11.html#ch11fig14)展示了每个例子的结果。
- en: '[PRE20]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![Image](graphics/f11-14.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f11-14.jpg)'
- en: '*Figure 11-14: Multiple gradient background values*'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-14：多个渐变背景值*'
- en: 'The example at left shows two linear gradients applied to an element: from
    top left to bottom right, and from top right to bottom left. The final color-stop
    has a value of `transparent` to allow the second gradient to show through below
    it. (Remember, if you don’t set transparency, the gradient will fill the rest
    of the box and hide the layer below it.) The example at right shows three radial
    gradients, each of which extends to the closest side, with the center of each
    at a different point. As with the first example, the last color-stop has a value
    of `transparent` to allow the layers below to show through.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧的示例展示了两个线性渐变应用于一个元素：从左上角到右下角，以及从右上角到左下角。最后的颜色停靠点的值为`transparent`，以便第二个渐变能穿透并显示在其下方。（记住，如果不设置透明度，渐变会填充整个框并遮住下面的层。）右侧的示例展示了三个径向渐变，每个渐变都延伸到最近的边，且每个渐变的中心位于不同的位置。与第一个示例一样，最后的颜色停靠点的值为`transparent`，以便让下面的层显示出来。
- en: '**Summary**'
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: For all the historical problems with CSS gradients, the final syntax is quite
    elegant and capable of delivering a wide array of beautiful background effects.
    For a taste of what’s possible, see Lea Verou’s CSS3 Patterns Gallery at *[http://lea.verou.me/css3patterns/](http://lea.verou.me/css3patterns/)*
    for some effects that really push the envelope—although keep in mind my warning
    at the beginning of the chapter about performance, as some of these examples can
    be quite taxing on your mobile browser.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管CSS渐变有很多历史问题，但最终的语法相当优雅，能够提供一系列美丽的背景效果。想要了解更多可能性，请访问Lea Verou的CSS3 Patterns
    Gallery，网址是* [http://lea.verou.me/css3patterns/](http://lea.verou.me/css3patterns/)*，这里展示了一些真正突破极限的效果——不过，请记住本章开始时关于性能的警告，因为这些示例可能会对你的移动浏览器造成较大负担。
- en: Also, as I write this, plans are afoot to extend the possibilities with a new
    gradient type, `conic`, which offers the possibility of even more exciting effects.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在我写这段文字时，计划正在进行中，旨在通过一种新的渐变类型`conic`扩展可能性，这将带来更加令人兴奋的效果。
- en: 'Now that we’ve finished this short run of chapters that look at ways to decorate
    page elements, we’ll move on in the next chapters to cover a whole new field of
    expertise: transforming and animating page elements.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了这一小段讲解页面元素装饰的章节，接下来的章节将进入一个全新的领域：页面元素的转换与动画。
- en: '**Gradients: Browser Support**'
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**渐变：浏览器支持**'
- en: '|  | **Chrome** | **Firefox** | **Safari** | **IE** |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '|  | **Chrome** | **Firefox** | **Safari** | **IE** |'
- en: '| Linear gradients | Yes | Yes | Yes | IE10 |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| 线性渐变 | 是 | 是 | 是 | IE10 |'
- en: '| Repeating linear gradients | Yes | Yes | Yes | IE10 |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| 重复线性渐变 | 是 | 是 | 是 | IE10 |'
- en: '| Radial gradients | Yes | Yes | Yes | IE10 |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 径向渐变 | 是 | 是 | 是 | IE10 |'
- en: '| Repeating radial gradients | Yes | Yes | Yes | IE10 |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| 重复径向渐变 | 是 | 是 | 是 | IE10 |'
