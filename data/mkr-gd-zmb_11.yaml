- en: '**11**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**11**'
- en: '**HAPTIC COMMUNICATION**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**触觉通信**'
- en: '![image](graphics/f0001-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f0001-01.jpg)'
- en: If you’re out on a supply run, then you’ll definitely want this silent communication
    device, which uses trembling buzzer motors and radio modules to send two-way messages.
    With this final project, you can communicate without attracting unwanted attention.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在外出采购，那么你肯定需要这种静音通信设备，它利用颤动蜂鸣器电机和无线电模块发送双向信息。通过这个最终项目，你可以在不引起不必要注意的情况下进行通信。
- en: '**PROJECT 20: SILENT HAPTIC COMMUNICATION WITH ARDUINO**'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**项目20：使用Arduino进行静音触觉通信**'
- en: The problem with walkie-talkies is that, as the name suggests, they require
    talking. Zombies have very acute hearing for human speech and will easily home
    in on any desperate request for backup that you shriek into a walkie-talkie. This
    is where a silent two-way haptic communication device comes into its own (see
    [Figure 11-1](ch11.html#ch11fig1)).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对讲机的问题在于，正如其名称所示，它们需要说话。僵尸对人类的语言非常敏感，任何你对着对讲机尖叫求援的声音都会很容易被它们察觉。此时，静音的双向触觉通信设备便发挥了它的作用（见[图11-1](ch11.html#ch11fig1)）。
- en: '![image](graphics/f11-01.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f11-01.jpg)'
- en: 'Figure 11-1: “When the sign said ‘press for attention,’ this wasn’t what I
    thought it meant!”'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-1：“当标志上写着‘按下以引起注意’时，这不是我认为的意思！”
- en: '*Haptic* is just a fancy way of saying “relating to touch,” and instead of
    making noise, the devices you’ll build in this project will vibrate like a cell
    phone. You will make a pair of these haptic devices, one of which is shown in
    [Figure 11-2](ch11.html#ch11fig2).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*触觉* 只是一个复杂的说法，意思是“与触摸相关”，而不是发出噪音，你在这个项目中制作的设备将像手机一样震动。你将制作一对这些触觉设备，其中一个如[图11-2](ch11.html#ch11fig2)所示。'
- en: Each device has a push-button switch and a small buzzer motor of the sort you
    find in cell phones. When you press the button on one handset, it causes the buzzer
    on the other handset to vibrate, and vice versa. The whole thing is powered by
    a 9V battery.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 每个设备都有一个按键开关和一个小型蜂鸣器电机，类似于你在手机中看到的那种。当你按下一个手持设备上的按钮时，它会使另一个手持设备上的蜂鸣器震动，反之亦然。整个装置由一个9V电池供电。
- en: 'Then when you are out and about, you can get in touch with your partner using
    a set of prearranged signals: one short buzz means, “I’m OK”; one long buzz means.
    “Come quickly, I’m about to be eaten!” In your free time (which has probably increased
    now that your old school or office is full of zombies), you could even memorize
    the Morse code you used in “[Project 19: Arduino Morse Code Beacon](ch10.html#ch00lev1sec196)”
    on [page 196](ch10.html#page_196) and send more detailed messages.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，当你外出时，可以使用一套预先安排好的信号与伙伴联系：一个短暂的嗡嗡声表示“我没事”；一个长时间的嗡嗡声表示“快来，我快被吃掉了！”在你的空闲时间（可能由于你之前的学校或办公室现在满是僵尸，你的空闲时间增加了），你甚至可以背诵你在“[项目19：Arduino摩尔斯电码信标](ch10.html#ch00lev1sec196)”中使用的摩尔斯电码，并发送更详细的信息，那个项目在[第196页](ch10.html#page_196)。
- en: '![image](graphics/f11-02.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f11-02.jpg)'
- en: 'Figure 11-2: A haptic communicator'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-2：一对触觉通信器
- en: '**WHAT YOU WILL NEED**'
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**你将需要的材料**'
- en: 'To make this pair of haptic communicators, you’ll need the following parts:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要制作这对触觉通信器，你需要以下零件：
- en: '| **ITEMS** | **NOTES** | **SOURCE** |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| **物品** | **备注** | **来源** |'
- en: '| --- | --- | --- |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| ![image](graphics/square.jpg) Arduinos | 2 x Arduino Uno R3 | Adafruit, Fry’s
    (7224833), SparkFun |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) Arduino | 2 x Arduino Uno R3 | Adafruit, Fry’s
    (7224833), SparkFun |'
- en: '| ![image](graphics/square.jpg) Protoshields | 2 x Arduino Protoshield PCB
    | eBay (Arduino code: A000077) |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) Protoshields | 2 x Arduino Protoshield PCB
    | eBay (Arduino code: A000077) |'
- en: '| ![image](graphics/square.jpg) Header pins | Header pins 64 way in total (for
    2 handsets) | Adafruit (392), eBay |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 排针 | 64针排针（用于2个手持设备） | Adafruit (392), eBay
    |'
- en: '| ![image](graphics/square.jpg) 9V battery leads | 2 x Arduino 9V battery leads
    | Adafruit (80), eBay |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 9V 电池引线 | 2 x Arduino 9V 电池引线 | Adafruit (80),
    eBay |'
- en: '| ![image](graphics/square.jpg) 9V batteries | 2 x PP3 batteries | Hardware
    store |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 9V 电池 | 2 x PP3 电池 | 五金店 |'
- en: '| ![image](graphics/square.jpg) R1 | 2 x 1 kΩ resistor | Mouser (293-1k-RC)
    |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) R1 | 2 x 1 kΩ 电阻 | Mouser (293-1k-RC) |'
- en: '| ![image](graphics/square.jpg) Transistors | 2 x 2N3904 NPN bipolar transistor
    | Adafruit (756) |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 晶体管 | 2 x 2N3904 NPN 双极晶体管 | Adafruit (756)
    |'
- en: '| ![image](graphics/square.jpg) Vibration motors | 2 x 5V or 3V vibration motor
    | eBay |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 振动电机 | 2 x 5V 或 3V 振动电机 | eBay |'
- en: '| ![image](graphics/square.jpg) Tactile switch | 2 x tactile push switch |
    Adafruit (504) |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 触觉开关 | 2 x 触觉按键开关 | Adafruit (504) |'
- en: '| ![image](graphics/square.jpg) RF modules | 2 x NRF24 RF modules | eBay |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) RF 模块 | 2 x NRF24 RF 模块 | eBay |'
- en: '| ![image](graphics/square.jpg) Assorted hookup wire | Stranded wire |  |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 各种连接线 | 绞线 |  |'
- en: '| ![image](graphics/square.jpg) Wire | Insulated solid-core wire for making
    PCB connections |  |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| ![image](graphics/square.jpg) 电线 | 用于制作 PCB 连接的绝缘实心线 |  |'
- en: You might also want to enclose your communicators in plastic boxes to protect
    them from the elements. If you choose to do so, then you will need to find something
    big enough to contain the Arduino, protoshield, and battery. It will also need
    a hole so that you can press the button and add an on/off switch.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你也许还想将你的通信器放入塑料盒中，以保护它们免受外界环境的影响。如果你决定这么做，你需要找到一个足够大的盒子来容纳 Arduino、Protoshield
    和电池。它还需要一个孔，以便你可以按下按钮并添加开关。
- en: Electronically, this is probably the most complicated project so far. You might
    struggle to find all the parts after a zombie apocalypse, as some, like the vibration
    motors and the RF modules, are best bought off eBay or Amazon. So make this project
    now, before the postal service un-dies. Vibration motors can also be scavenged
    from cellphones.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 从电子学角度来看，这是迄今为止最复杂的项目。你可能很难在僵尸末日后找到所有的零件，因为一些部件，如振动马达和 RF 模块，最好从 eBay 或 Amazon
    上购买。所以现在就做这个项目吧，趁邮递服务还没有停运。振动马达也可以从手机中拆解得到。
- en: '**CONSTRUCTION**'
  id: totrans-31
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**构建**'
- en: These instructions will tell you how to make one haptic module, and [Figure
    11-3](ch11.html#ch11fig3) shows the schematic for one communicator. Of course,
    to communicate with someone else, you will need to make two devices.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将告诉你如何制作一个触觉模块，[图 11-3](ch11.html#ch11fig3) 显示了一个通信器的电路图。当然，如果你想与别人通信，你需要制作两个设备。
- en: '![image](graphics/f11-03.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f11-03.jpg)'
- en: 'Figure 11-3: The schematic for one haptic communicator'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-3：一个触觉通信器的电路图
- en: Pin 2 of the Arduino will be set up as a digital input with internal pullup
    resistor enabled, connected to the push button S1\. When the button is pressed,
    the Arduino will control the NRF24 radio module to send a message to the other
    handset, activating its vibration motor.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino 的 2 引脚将设置为数字输入，并启用内部上拉电阻，连接到按键 S1。当按下按钮时，Arduino 将控制 NRF24 无线电模块向另一个手持设备发送消息，激活其振动马达。
- en: The vibration motor is controlled from pin D5 of the Arduino. We use a transistor
    (T1) because the motor uses more current than the Arduino output can cope with
    by itself, and the 5V supply is used because the 3V supply cannot provide enough
    current. Pin D5 is controlled as an analog output to manage the level of vibration
    with the software, keeping the device as quiet as possible; this also prevents
    the motor from burning out, as most vibration motors are 3V rather than the 5V
    the Arduino usually uses.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 该振动马达由 Arduino 的 D5 引脚控制。我们使用一个晶体管（T1），因为该马达消耗的电流超过 Arduino 输出能够承受的范围，并且使用 5V
    电源是因为 3V 电源无法提供足够的电流。D5 引脚被设置为模拟输出，以便通过软件调节振动的强度，尽可能保持设备安静；这还可以防止马达烧坏，因为大多数振动马达是
    3V 的，而 Arduino 通常使用的是 5V。
- en: Note that strictly speaking, the motor should be accompanied by a diode to protect
    the Arduino from current spikes from the motor, but a little testing with one
    of these tiny motors showed that a very minimal amount of noise was added to the
    Arduino supply rails. So for the sake of keeping things simple the normal diode
    was omitted.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，严格来说，马达应当配有二极管，以保护 Arduino 免受来自马达的电流冲击，但通过对这些小型马达进行简单测试，发现对 Arduino 电源轨的干扰非常微小。因此，为了简化操作，通常的二极管被省略了。
- en: This project uses a protoshield rather than the screwshields used in most of
    the projects in this book. A protoshield is like a screwshield but without its
    screw terminals and hence is a bit cheaper and smaller.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目使用 Protoshield，而不是本书中大多数项目使用的螺丝板。Protoshield 类似于螺丝板，但没有螺丝端子，因此更加便宜和小巧。
- en: '**STEP 1: ASSEMBLE THE PROTOSHIELD**'
  id: totrans-39
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤 1：组装 Protoshield**'
- en: Protoshields sometimes come with a full set of extra components, such as reset
    switches and header pins, but for this project you don’t want glowing power LEDs
    that might attract unwanted attention. Therefore, it’s better (and cheaper) to
    buy the bare Protoshield PCB and some headers.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Protoshield 有时会附带一整套额外的组件，如复位开关和排针，但在这个项目中，你不希望有会吸引不必要注意的发光电源 LED。因此，最好（也更便宜）购买裸露的
    Protoshield PCB 和一些排针。
- en: Solder the header pins to the outermost rows of holes on each side of the PCB.
    A good way to keep the header pins straight is to put them into an Arduino and
    then put the Protoshield PCB on top of the headers. When all the pins are attached,
    the protoshield should look something like [Figure 11-4](ch11.html#ch11fig4).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 将排针焊接到 PCB 两侧最外侧的孔上。保持排针笔直的一个好方法是将它们插入 Arduino 中，然后将 Protoshield PCB 放在排针上。所有引脚都连接好后，Protoshield
    应该类似于[图 11-4](ch11.html#ch11fig4)的样子。
- en: '![image](graphics/f11-04.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f11-04.jpg)'
- en: 'Figure 11-4: A protoshield with header pins attached'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-4：附有排针的 Protoshield
- en: '**STEP 2: FIX THE COMPONENTS IN POSITION**'
  id: totrans-44
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤 2：固定组件位置**'
- en: Use [Figure 11-5](ch11.html#ch11fig5) as a reference for the location of the
    components. All the connections to the NRF24 module are to the 2×4 header on the
    right of the module’s PCB. Don’t solder the vibration motor just yet; it will
    need to be glued in place first as the leads are a bit delicate.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 参考[图 11-5](ch11.html#ch11fig5)来定位组件的位置。所有与 NRF24 模块的连接都位于模块 PCB 右侧的 2×4 排针上。暂时不要焊接振动电机；首先需要将其粘贴到位，因为引脚比较脆弱。
- en: '![image](graphics/f11-05.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f11-05.jpg)'
- en: 'Figure 11-5: The protoshield layout, where R1 is the resistor, S1 is the switch,
    T1 is the transistor, and the dark rectangle at the top left is the NRF24'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-5：Protoshield 布局，R1 是电阻，S1 是开关，T1 是晶体管，左上角的黑色矩形是 NRF24
- en: Apart from the two wires coming from the motor, the dark lines going to various
    solder pads in [Figure 11-5](ch11.html#ch11fig5) represent connections you’ll
    make on the underside of the board. The header pins of the NRF24 module fit through
    the holes in the protoshield, so place that now and solder it to the pads beneath.
    Do not clip the excess pin lengths off but instead gently splay them out after
    soldering; this will make it easier to connect them up later. Note that one pin
    on the NRF24 module is not used.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 除了来自电动机的两根线外，[图 11-5](ch11.html#ch11fig5)中指向不同焊盘的黑色线路表示你将在电路板底部进行的连接。NRF24 模块的引脚穿过原型板的孔，因此现在可以将其放置好并焊接到下方的焊盘上。不要剪掉多余的引脚长度，而是焊接后轻轻将其展开；这将有助于稍后连接它们。请注意，NRF24
    模块上有一个引脚未使用。
- en: The transistor has one curved side. It is important that this goes onto the
    protoshield the right way around, with the curved side pointing left toward the
    NRF24 (use [Figure 11-4](ch11.html#ch11fig4) as a guide). Leave about 1/3 inches
    (about 7.5 mm) of the transistor lead on the top side of the screwshield and fold
    it down ([Figure 11-5](ch11.html#ch11fig5)) to solder.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 晶体管的一侧是弯曲的。确保晶体管按正确的方向放置在 Protoshield 上，弯曲的一侧朝左指向 NRF24（参考[图 11-4](ch11.html#ch11fig4)）。在螺丝盾的顶部留大约
    1/3 英寸（约 7.5 毫米）晶体管引脚，然后将其弯曲下去（参见[图 11-5](ch11.html#ch11fig5)）进行焊接。
- en: The switch has contacts that are on a rectangular grid, four holes long one
    way and three holes the other. Make sure the switch goes the right way around
    ([Figure 11-4](ch11.html#ch11fig4)) so that it is longer vertically.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 开关有一个矩形的接触网格，长的方向是四个孔，短的方向是三个孔。确保开关正确放置（参见[图 11-4](ch11.html#ch11fig4)），使其在竖直方向上较长。
- en: Do not clip off any wires yet, as these can be used to link up the components
    on the underside of the board. When all the components have been fixed in place,
    the board should look something like [Figure 11-6](ch11.html#ch11fig6).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 目前不要剪掉任何线，因为这些线可以用于连接电路板底部的各个组件。当所有组件都固定好后，电路板应类似于[图 11-6](ch11.html#ch11fig6)的样子。
- en: '![image](graphics/f11-06.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f11-06.jpg)'
- en: 'Figure 11-6: The components attached to the protoshield'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-6：附加到 Protoshield 的组件
- en: '**STEP 3: WIRE THE UNDERSIDE OF THE BOARD**'
  id: totrans-54
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤 3：连接电路板的底部**'
- en: This step is the fiddliest, so take care with it. All the components need to
    be connected on the underside of the board ([Figure 11-5](ch11.html#ch11fig5)).
    Of course, when the board is flipped over, everything is reversed. In [Figure
    11-7](ch11.html#ch11fig7), I’ve transposed [Figure 11-5](ch11.html#ch11fig5) to
    show the underside of the board for you to work from.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步是最繁琐的，所以要小心操作。所有组件需要连接到电路板底部（[图 11-5](ch11.html#ch11fig5)）。当然，当电路板翻转过来时，一切都会反转。在[图
    11-7](ch11.html#ch11fig7)中，我将[图 11-5](ch11.html#ch11fig5)进行了转置，展示了电路板底部的布局，供你参考。
- en: '![image](graphics/f11-07.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f11-07.jpg)'
- en: 'Figure 11-7: Wiring diagram from the underside of the protoshield'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-7：从 Protoshield 底部的接线图
- en: '[Figure 11-7](ch11.html#ch11fig7) marks the positions of the components so
    that you can orient yourself, but remember that this is the underside of the board,
    so the components are actually on the other side of the protoshield.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[图11-7](ch11.html#ch11fig7)标出了组件的位置，帮助你定位，但请记住这是板子的底面，组件实际上位于原型板的另一侧。'
- en: Many of the connecting wires cross over each other, so use insulated solid-core
    wire. When everything is connected, the underside of the board should look like
    [Figure 11-8](ch11.html#ch11fig8).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 许多连接线交叉在一起，因此请使用绝缘的实心电线。所有连接完成后，板子的底部应如[图11-8](ch11.html#ch11fig8)所示。
- en: '![image](graphics/f11-08.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f11-08.jpg)'
- en: 'Figure 11-8: The underside of the protoshield'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-8：原型板的底面
- en: Double-check everything very carefully to make sure there are no accidental
    solder connections and that every wire makes the correct connection.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细检查所有连接，确保没有意外的焊接接点，并确保每条电线连接正确。
- en: '**STEP 4: ATTACH THE VIBRATION MOTOR**'
  id: totrans-63
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤4：连接振动马达**'
- en: Glue the motor to the *top* of the protoshield, being careful not to get glue
    on the rotating bit at the front of the motor. The leads are quite fine, so it’s
    better to solder them to the top of the board rather than through a hole. [Figure
    11-9](ch11.html#ch11fig9) shows the motor glued in place and the leads soldered
    to the protoshield.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 将马达粘贴到原型板的*顶部*，小心不要把胶水弄到马达前端的旋转部分。引线非常细，因此最好将它们焊接到板子顶部，而不是穿过孔。 [图11-9](ch11.html#ch11fig9)显示了已粘贴到位的马达，以及焊接到原型板上的引线。
- en: '![image](graphics/f11-09.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/f11-09.jpg)'
- en: 'Figure 11-9: Attaching the vibration motor'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-9：连接振动马达
- en: '**STEP 5: REPEAT FOR THE OTHER HANDSET**'
  id: totrans-67
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤5：为另一个手持设备重复操作**'
- en: Having built one handset, do the whole lot again for its partner.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 构建好一个手持设备后，再为它的伙伴做一次相同的操作。
- en: '**STEP 6: PLACING IT INTO AN ENCLOSURE**'
  id: totrans-69
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**步骤6：将其放入外壳中**'
- en: You may want to scavenge for some small plastic boxes to contain the handsets.
    Alternatively, you might prefer to go postapocalypse chic and just tape the battery
    to the Arduino and protoshield, leaving the battery clip accessible as a rudimentary
    switch.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想要寻找一些小塑料盒来容纳手持设备。或者，你也可以选择后末日风格，直接将电池用胶带固定在Arduino和原型板上，让电池夹可作为一个简易的开关使用。
- en: '**SOFTWARE**'
  id: totrans-71
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**软件**'
- en: All the source code for this book is available from *[http://www.nostarch.com/zombies/](http://www.nostarch.com/zombies/)*.
    See [Appendix C](app03.html#app03) for instructions on installing the Arduino
    sketch for this project, which is called *Project_20_Haptic_Communicator*.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的所有源代码可以从*[http://www.nostarch.com/zombies/](http://www.nostarch.com/zombies/)*下载。有关如何安装此项目的Arduino草图的说明，请参阅[附录C](app03.html#app03)，该草图名为*Project_20_Haptic_Communicator*。
- en: This project uses a community-maintained Arduino library called *Mirf*. This
    library provides an easy-to-use wrapper around the Serial Peripheral Interface
    (SPI) serial interface to the NRF24 radio module, allowing the Arduino to communicate
    with the module. The Mirf library must be downloaded from the Internet, which
    is another good reason to make this project before the outbreak spreads too far.
    Download the ZIP file for the library from *[http://playground.arduino.cc/InterfacingWithHardware/Nrf24L01](http://playground.arduino.cc/InterfacingWithHardware/Nrf24L01)*.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目使用一个社区维护的Arduino库，名为*Mirf*。该库为NRF24无线电模块提供了一个易于使用的包装，封装了串行外设接口（SPI）接口，使Arduino能够与该模块进行通信。Mirf库必须从互联网下载，这也是在疫情蔓延之前进行此项目的另一个好理由。从*[http://playground.arduino.cc/InterfacingWithHardware/Nrf24L01](http://playground.arduino.cc/InterfacingWithHardware/Nrf24L01)*下载该库的ZIP文件。
- en: Extract the ZIP file and copy the whole *Mirf* folder into *My Documents\Arduino\Libraries*
    if you’re using Windows or *Documents/Arduino/libraries* if you’re using a Mac
    or Linux. Note that if the *libraries* folder doesn’t exist within the Arduino
    directory, you’ll need to create it before copying.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 解压ZIP文件，并将整个*Mirf*文件夹复制到*My Documents\Arduino\Libraries*目录（如果你使用的是Windows）或*Documents/Arduino/libraries*目录（如果你使用的是Mac或Linux）。请注意，如果Arduino目录中没有*libraries*文件夹，你需要先创建它再进行复制。
- en: 'The Arduino IDE won’t recognize the new library until you restart it, so after
    copying the *library* folder, save anything you’re working on, quit the IDE, and
    restart. Next, open the sketch file for this project and upload it to both Arduinos,
    one after the other. The sketch starts by importing three libraries:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino IDE在重启之前不会识别新的库，因此，在复制*library*文件夹后，保存当前工作，退出IDE并重启。然后，打开此项目的草图文件，并依次上传到两个Arduino。该草图开始时会导入三个库：
- en: '[PRE0]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The SPI library is part of the Arduino IDE distribution and simplifies communication
    with devices using SPI. The MirfHardwareSpiDriver library is also used in the
    sketch.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: SPI库是Arduino IDE的一部分，用于简化与使用SPI的设备的通信。MirfHardwareSpiDriver库也在该草图中使用。
- en: 'Next, three constants are defined:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，定义了三个常量：
- en: '[PRE1]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The range of wireless communication can be extended by sending the “button pressed”
    message several times, so that at the edge of the range, only one of the messages
    has to get through. The constant `numberOfSends` defines how many times each message
    should be sent. This is followed by pin definitions for the buzzer and switch
    pins.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 无线通信的范围可以通过多次发送“按钮按下”消息来扩展，这样在信号范围的边缘，只有一条消息需要传递成功。常量`numberOfSends`定义了每条消息应发送的次数。接下来是蜂鸣器和开关引脚的定义。
- en: 'The next constant (`buzzerVolume`) specifies the `analogWrite` value for the
    vibration motor:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个常量（`buzzerVolume`）指定了振动电动机的`analogWrite`值：
- en: '[PRE2]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If you are using a 3V motor, it is important that the `analogWrite` value does
    not exceed 153; a value of 153 will deliver power equivalent to a 3V supply to
    the motor, and more power would overload it. Reducing this value will make your
    buzzer quieter. The `buzzMinDuration` constant specifies the minimum duration
    for a buzz in milliseconds. This is important because too short a buzz may not
    be noticed.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是3V电动机，重要的是`analogWrite`的值不要超过153；值为153时，会给电动机提供相当于3V电源的电力，超过这个值会使电动机过载。减少该值将使蜂鸣器声音变得更轻。常量`buzzMinDuration`指定蜂鸣器的最短持续时间（毫秒）。这是很重要的，因为持续时间过短可能导致蜂鸣声无法被察觉。
- en: 'The global `byte data` array contains a 4-byte message to be sent whenever
    the button is pressed:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 全局`byte data`数组包含一个4字节的消息，每当按钮被按下时都会发送：
- en: '[PRE3]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The first three values in this array are chosen as being unique for the pair
    of haptic communicators. When a message is received, they are checked to see whether
    they match. This ensures that the communicator has received a real message and
    not just noise. It also means that you could set up a second pair of devices using
    different values, and the new pair would not interfere with this pair. Depending
    on the group dynamics in your band of survivors, you might want to communicate
    with one person in some situations (“Come save me!”) and another person in other
    situations (“If you show up now, I bet the zombie will eat your brains and not
    mine”).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 数组中的前三个值被选择为该对触觉通信设备的唯一标识。当收到消息时，会检查这些值是否匹配。这确保了通信设备接收到的是有效消息，而不是噪声。它还意味着你可以设置一对不同值的设备，新的设备对不会干扰这对设备。根据你在幸存者小队中的分工，你可能在某些情况下希望与某人沟通（“快来救我！”），而在另一些情况下与另一个人沟通（“如果你现在出现，我敢打赌僵尸会吃掉你的脑子，而不是我的”）。
- en: The fourth byte is not used in this project, but it’s there in case you would
    like the button-press messages to send a parameter. You could, for example, add
    a second button to the communicator for emergencies that sends a different value
    in this byte, which could then be read at the receiving end.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 第四个字节在本项目中未使用，但它存在，以防你希望按钮按下消息发送一个参数。例如，你可以为紧急情况向通信设备添加第二个按钮，该按钮发送一个不同的值，该值可以在接收端读取。
- en: 'Next is the `setup` function:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是`setup`函数：
- en: '[PRE4]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This function starts by making sure the buzzer is off at `analogWrite`. Then
    it sets the mode of the `switchPin` to an input with the internal pull-up resistor
    enabled (see “[Stabilizing Digital Inputs with Pull-up Resistors](app03.html#ch00lev1sec247)”
    on [page 252](app03.html#page_252) for more information on pull-up resistors).
    The radio module is then initialized and put into listen mode, waiting to receive
    a message.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数首先通过`analogWrite`确保蜂鸣器关闭。然后将`switchPin`的模式设置为输入，并启用内部上拉电阻（有关上拉电阻的更多信息，请参见[《使用上拉电阻稳定数字输入》](app03.html#ch00lev1sec247)，该内容位于[第252页](app03.html#page_252)）。接着初始化无线电模块并将其置于监听模式，等待接收消息。
- en: 'Next comes the `loop` function:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是`loop`函数：
- en: '[PRE5]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This starts with an `if` statement that first checks whether the module is itself
    sending a message. It then checks whether there is data ready to be read, and
    it reads the message over the radio. Once the message is read, the function `checkForBuzz`
    is called to check that the message is legitimate before buzzing the vibration
    motor.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数首先通过`if`语句检查模块本身是否正在发送消息。然后检查是否有数据准备好被读取，并通过无线电读取消息。一旦消息被读取，调用`checkForBuzz`函数来检查消息是否合法，确保蜂鸣器正确响起。
- en: The `loop` function finally checks for a button press on this end and responds
    to a button press by calling the `sendBuzz` function.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`loop`函数最终会检查这端是否有按钮按下，并通过调用`sendBuzz`函数来响应按钮按下。'
- en: 'Now, let’s look at the other functions defined in this sketch, starting with
    `listenMode` and `sendMode`:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一下这个草图中定义的其他功能，从`listenMode`和`sendMode`开始：
- en: '[PRE6]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `listenMode` function puts the radio module into listening mode by setting
    its receive address to `"serv1"`. The `sendMode` function puts the radio module
    into sending mode by setting its receive address to `"clie1"`. We call both the
    `listenMode` function and the `sendMode` function inside `sendBuzz`, which gets
    called in the `loop` function’s last `if` statement.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`listenMode`功能通过将接收地址设置为`"serv1"`，将无线电模块置于监听模式。`sendMode`功能通过将接收地址设置为`"clie1"`，将无线电模块置于发送模式。我们在`sendBuzz`中调用了`listenMode`功能和`sendMode`功能，而`sendBuzz`会在`loop`函数的最后一个`if`语句中被调用。'
- en: 'Finally, we have the `checkForBuzz` function:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们有`checkForBuzz`函数：
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This function checks the first 3 bytes of the message sent from the other module,
    and if they match, it turns on the vibration motor for the duration specified
    in milliseconds by `buzzMinDuration`.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能检查从另一个模块发送过来的消息的前三个字节，如果匹配，它会根据`buzzMinDuration`指定的毫秒数打开震动马达。
- en: '**USING THE HAPTIC COMMUNICATOR**'
  id: totrans-101
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**使用触觉通讯器**'
- en: This project is a lot of fun to use. I’m pretty sure casinos are wise to this
    kind of contraption, though, so to avoid trouble, don’t use it to cheat at the
    gaming tables. Money will have little use after the apocalypse in any case.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目非常有趣。虽然我确信赌场已经察觉到这种装置，但为了避免麻烦，不要用它在赌桌上作弊。无论如何，末日后金钱几乎没什么用处。
- en: 'If you’re prepared to learn Morse code, the handsets can be used with Morse,
    although they are a little slow. Alternatively, you could come up with a simplified
    vocabulary along the following lines:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你准备学习莫尔斯电码，话筒可以与莫尔斯电码一起使用，尽管它们有点慢。或者，你可以制定一个简化的词汇表，像下面这样：
- en: '• **One short buzz**: All is well'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: • **一次短鸣**：一切正常
- en: '• **One long buzz**: Zombies sighted'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: • **一次长鸣**：发现僵尸
- en: '• **Three long buzzes**: Zombies close'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: • **三次长鸣**：僵尸靠近
- en: '• **Three short buzzes**: Run!!'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: • **三次短鸣**：快跑！！
- en: This is the final project in the book, and I hope you have had fun as you’ve
    equipped yourself for the apocalypse. Whether you’re building these projects in
    anticipation of the coming zombie hordes or you’re already in hiding, I also hope
    they help you to survive!
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这是书中的最终项目，我希望在为末日做准备的过程中你感到愉快。不论你是为了迎接即将到来的僵尸潮而构建这些项目，还是已经藏身其中，我也希望这些项目能帮助你生存下去！
