- en: INTRODUCTION
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: '![Image](../images/common01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common01.jpg)'
- en: In this book we explore using Racket (a language descended from the Scheme family
    of programming languages—which in turn descended from Lisp) and DrRacket, a graphical
    environment that allows us to make the most of all the features of Racket. One
    of the attractive features of this ecosystem is that it’s equipped with a plethora
    of libraries that cover a wide range of disciplines. The developers describe Racket
    as a system that has “batteries included.” This makes it an ideal platform for
    the interactive investigation of various topics in computer science and mathematics.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将探讨如何使用 Racket（一种源自 Scheme 家族的编程语言——而 Scheme 又源自 Lisp）以及 DrRacket，这是一种图形化环境，能够让我们充分利用
    Racket 的所有功能。该生态系统的一个吸引人的特点是，它配备了大量涵盖各种学科的库。开发者将 Racket 描述为一个“内置电池”的系统，这使它成为互动探索计算机科学和数学中各种主题的理想平台。
- en: Given Racket’s Lisp pedigree, we would be remiss to omit functional programming,
    so we will definitely explore it in this text. Racket is no one-trick pony though,
    so we will also explore imperative, object oriented, and logic programming along
    the way. Also on the computer science front, we will look at various abstract
    computing machines, data structures, and a number of search algorithms as related
    to solving some problems in recreational mathematics. We will finish the book
    by building our own calculator, which will entail lexical analysis using regular
    expressions, defining the grammar using extended Backus–Naur form (EBNF), and
    building a recursive descent parser.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于 Racket 的 Lisp 血统，我们如果忽略函数式编程就有失公允，因此本书肯定会探讨这一领域。然而，Racket 绝非单一技巧的语言，因此我们也会在此过程中探讨命令式编程、面向对象编程以及逻辑编程。此外，在计算机科学方面，我们还将研究各种抽象计算机、数据结构，以及与解决一些休闲数学问题相关的搜索算法。最后，我们将通过构建自己的计算器来结束本书，其中包括使用正则表达式进行词法分析，使用扩展巴科斯–诺尔范式（EBNF）定义语法，以及构建递归下降解析器。
- en: '***Racket***'
  id: totrans-4
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Racket***'
- en: 'Racket features extensive and well-written documentation, which includes *Quick:
    An Introduction to Racket with Pictures*, the introductory *Racket Guide*, and
    the thorough *Racket Reference*. Various other toolkits and environments also
    have separate documentation. Within DrRacket these items can be accessed through
    the Help menu.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 'Racket 拥有广泛且编写良好的文档，其中包括 *Quick: Racket 入门图解*、入门书籍 *Racket Guide* 和详尽的 *Racket
    Reference*。其他各种工具包和环境也有单独的文档。在 DrRacket 中，这些文档可以通过帮助菜单访问。'
- en: 'Racket is available for a wide variety of platforms: Windows, Linux, macOS,
    and Unix. It can be downloaded from the Racket website via the link [*https://download.racket-lang.org/*](https://download.racket-lang.org/).
    Once downloaded, installation simply entails running the downloaded executable
    on Windows, *.dmg* file on macOS, or shell script on Linux. At the time of writing,
    the current version is 7.8\. Examples in the book will run on any version 7.0
    or later. They will likely run on earlier versions as well, but since the current
    version is freely available there is really no need to do so. When the DrRacket
    environment is first launched, the user will be prompted to select a Racket language
    variant. The examples in this book all use the first option in the pop-up dialog
    box (that is, the one that says “The Racket Language”).'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Racket 支持多种平台：Windows、Linux、macOS 和 Unix。可以通过链接[*https://download.racket-lang.org/*](https://download.racket-lang.org/)从
    Racket 网站下载。下载后，安装过程很简单，只需在 Windows 上运行下载的可执行文件，在 macOS 上运行 *.dmg* 文件，或在 Linux
    上运行 shell 脚本。写作时，当前版本为 7.8。书中的示例可以在任何版本 7.0 或更高版本上运行，也可能在早期版本上运行，但由于当前版本可以免费下载，因此其实没必要使用旧版。当第一次启动
    DrRacket 环境时，用户将被提示选择一个 Racket 语言变体。本书中的示例使用弹出对话框中的第一个选项（即标有“Racket 语言”的选项）。
- en: The DrRacket window provides a definitions pane (top pane in [Figure 1](ch00.xhtml#ch00fig1))
    where variables and functions are defined and an interactions pane (bottom pane
    in [Figure 1](ch00.xhtml#ch00fig1)) where Racket code can be interactively executed.
    Within these panes, help is a single keypress away. Just click on any built-in
    function name and press F1.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: DrRacket 窗口提供了一个定义窗格（[图 1](ch00.xhtml#ch00fig1) 中的顶部窗格），用于定义变量和函数，以及一个交互窗格（[图
    1](ch00.xhtml#ch00fig1) 中的底部窗格），可以在其中交互式地执行 Racket 代码。在这些窗格内，帮助只需按下一个按键即可。只需点击任何内置函数名称并按下
    F1 键。
- en: The definitions window contains all the features one expects from a robust interactive
    development environment (IDE) such as syntax highlighting, variable renaming,
    and an integrated debugger.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 定义窗口包含了一个强大互动开发环境（IDE）所期望的所有功能，如语法高亮、变量重命名和集成调试器。
- en: Racket enthusiasts are affectionately known as *Racketeers* (catchy, eh?). Once
    you’ve had an opportunity to explore this wonderful environment, don’t be surprised
    if you become a Racketeer yourself.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Racket 爱好者亲切地被称为 *Racketeers*（听起来很有意思吧？）。一旦你有机会探索这个奇妙的环境，别惊讶自己会成为一个 Racketeer。
- en: '![Image](../images/00fig01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/00fig01.jpg)'
- en: '*Figure 1: DrRacket IDE*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1：DrRacket IDE*'
- en: '***Conventions Used in This Book***'
  id: totrans-12
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***本书使用的约定***'
- en: DrRacket supports a number of programming and learning languages. In this book
    we focus exclusively on the default Racket language. Thus, unless otherwise stated,
    all definition files should begin with the line
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: DrRacket 支持多种编程和学习语言。在本书中，我们仅关注默认的 Racket 语言。因此，除非另有说明，所有定义文件应以以下行开始：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Code entered in the definitions section will be shown in a framed box as above.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义部分输入的代码将以框架框起来，如上所示。
- en: Expressions entered in the interactive pane will be shown prefixed with a right
    angle bracket `>` as shown below. The angle bracket is DrRacket’s input prompt.
    Outputs will be shown without the angle bracket. To easily differentiate inputs
    and outputs, inputs will be shown in bold in this book (but they are not bold
    in the IDE).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在交互面板中输入的表达式将以右尖括号 `>` 为前缀显示，如下所示。尖括号是 DrRacket 的输入提示符。输出将不带尖括号。为了方便区分输入和输出，书中将以粗体显示输入内容（但在
    IDE 中输入不会以粗体显示）。
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We occasionally make use of some special symbols that DrRacket supports, such
    as the Greek alphabet (for example, we may use *θ* as an identifier for an angle).
    These symbols are listed in Appendix B. The method used to enter these symbols
    is also given there. If you’re typing the examples in by hand and don’t want to
    use the special symbols, simply substitute a name of your choosing: for example
    use `alpha` instead of *α*.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们偶尔会使用 DrRacket 支持的一些特殊符号，如希腊字母（例如，我们可能会使用 *θ* 作为角度的标识符）。这些符号列在附录 B 中。输入这些符号的方法也在那里给出。如果你手动输入示例而不想使用这些特殊符号，只需替换为你自己选择的名称：例如使用
    `alpha` 代替 *α*。
- en: An example of a program listing entered in the definitions window is shown below.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义窗口中输入的程序列表示例如下所示。
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We’ll use Wingdings symbols such as ➊ to highlight interesting portions of the
    code.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Wingdings 符号，如 ➊，来突出显示代码中的有趣部分。
- en: '***Who This Book Is For***'
  id: totrans-22
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***本书适合谁阅读***'
- en: While no prior knowledge of Racket, Lisp, or Scheme is required, it wouldn’t
    hurt to have some basic programming knowledge, but this is certainly not required.
    The mathematical prerequisites will vary. Some topics may be a bit challenging,
    but nothing more than high school algebra and trigonometry is assumed. A theorem
    or two may surface, but the treatment will be informal.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不需要具备 Racket、Lisp 或 Scheme 的先前知识，但拥有一些基本的编程知识会更好，不过这并非必须。数学先决条件会有所不同。某些主题可能会有点挑战性，但假设的数学背景仅限于高中代数和三角学。可能会涉及一两个定理，但处理方式是非正式的。
- en: '***About This Book***'
  id: totrans-24
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***关于本书***'
- en: If you’re already familiar with the Racket language, feel free to skip (or perhaps
    just skim) the first couple of chapters as these just provide an introduction
    to the language. These early chapters are by no means a comprehensive encyclopedia
    of Racket functionality. The ambitious reader should consult the excellent Racket
    Documentation for fuller details. Here is a brief description of each chapter’s
    content.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经熟悉 Racket 语言，可以跳过（或者只是略读）前几章，因为这些章节仅提供了语言的介绍。这些早期的章节绝不是 Racket 功能的全面百科全书。雄心勃勃的读者应查阅优秀的
    Racket 文档以获取更详细的信息。以下是每一章内容的简要描述。
- en: '**[Chapter 1: Racket Basics](ch01.xhtml)** Gives the novice Racket user a grounding
    in some of the basic Racket concepts that will be needed to progress through the
    rest of the book.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第1章：Racket 基础](ch01.xhtml)** 给初学者提供了学习 Racket 的基本概念，这些概念将帮助你顺利阅读本书的其他章节。'
- en: '**[Chapter 2: Arithmetic and Other Numerical Paraphernalia](ch02.xhtml)** Describes
    Racket’s extensive set of numeric data types: integers, true rational numbers,
    and complex numbers (to name a few). This chapter will make the reader adept at
    using these entities in Racket.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第2章：算术与其他数值工具](ch02.xhtml)** 描述了 Racket 广泛的数值数据类型：整数、真有理数和复数（仅举几例）。这一章将使读者熟练掌握在
    Racket 中使用这些实体。'
- en: '**[Chapter 3: Function Fundamentals](ch03.xhtml)** Introduces Racket’s multi-paradigm
    programming capability. This chapter introduces the reader to both functional
    and imperative programming. The final section will look at a few fun programming
    applications.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第3章：函数基础](ch03.xhtml)** 介绍了Racket的多范式编程能力。本章将向读者介绍函数式编程和命令式编程。最后一部分将介绍一些有趣的编程应用。'
- en: '**[Chapter 4: Plotting, Drawing, and a Bit of Set Theory](ch04.xhtml)** Introduces
    interactive graphics. Most IDEs are textual only; DrRacket has extensive capability
    for generating graphical output in an interactive environment. This chapter will
    show you how it’s done.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第4章：绘图、绘制和一点集合论](ch04.xhtml)** 介绍了交互式图形。大多数IDE仅支持文本；DrRacket在交互式环境中生成图形输出的能力非常强。本章将向你展示如何实现这一点。'
- en: '**[Chapter 5: GUI: Getting Users Interested](ch05.xhtml)** Shows how to construct
    mini graphics applications that run in their own window.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第5章：GUI：让用户感兴趣](ch05.xhtml)** 展示了如何构建运行在独立窗口中的迷你图形应用程序。'
- en: '**[Chapter 6: Data](ch06.xhtml)** Explores various ways of handling data in
    Racket. It will discuss how to read and write data to and from files on your computer.
    It will also discuss ways to analyze data using statistics and data visualization.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第6章：数据](ch06.xhtml)** 探讨了在Racket中处理数据的各种方法。本章将讨论如何从计算机中的文件读取和写入数据，还将讨论如何使用统计和数据可视化来分析数据。'
- en: '**[Chapter 7: Searching for Answers](ch07.xhtml)** Examines a number of powerful
    search algorithms. These algorithms will be used to solve various problems and
    puzzles in recreational mathematics.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第7章：寻找答案](ch07.xhtml)** 探讨了多种强大的搜索算法。这些算法将用于解决娱乐数学中的各种问题和谜题。'
- en: '**[Chapter 8: Logic Programming](ch08.xhtml)** Takes a look at another powerful
    programming paradigm. Here we explore using Racket’s Prolog-like logic programming
    library: Racklog.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第8章：逻辑编程](ch08.xhtml)** 探讨了另一种强大的编程范式。在这里，我们将使用Racket的类Prolog风格的逻辑编程库：Racklog。'
- en: '**[Chapter 9: Computing Machines](ch09.xhtml)** Takes a quick look at various
    abstract computing machines. These simple mechanisms are a gateway into some fairly
    deep concepts in computer science.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第9章：计算机机器](ch09.xhtml)** 简要回顾了各种抽象计算机机器。这些简单的机制是进入计算机科学一些深刻概念的门户。'
- en: '**[Chapter 10: TRAC: The Racket Algebraic Calculator](ch10.xhtml)** Leverages
    skills developed in the previous chapters to build a stand-alone interactive command
    line calculator.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第10章：TRAC：Racket代数计算器](ch10.xhtml)** 利用前几章中开发的技能，构建一个独立的交互式命令行计算器。'
