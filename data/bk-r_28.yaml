- en: '**23**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**23**'
- en: '**ADVANCED PLOT CUSTOMIZATION**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级绘图自定义**'
- en: '![image](../images/common-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common-01.jpg)'
- en: Many users are first drawn to R because of its impressive graphical flexibility
    and the ease with which you can control and tailor the resulting visuals. In this
    chapter, you’ll take a closer look at the base R graphics device, and at how you
    can fine-tune the plots you’re already familiar with, to get the most use out
    of your visualizations. In the chapters that follow, you’ll then expand your repertoire
    in both `ggplot2` and traditional R graphics.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 许多用户最初被R吸引，是因为它令人印象深刻的图形灵活性以及可以轻松控制和定制结果视觉效果的能力。在本章中，你将更详细地了解基础R图形设备，以及如何微调你已经熟悉的图形，以最大化地利用你的可视化效果。在接下来的章节中，你将进一步扩展你在`ggplot2`和传统R图形中的技巧。
- en: Much of this chapter will assume you’re familiar with the content of [Chapters
    7](ch07.xhtml#ch07) and [14](ch14.xhtml#ch14). In general, I’ll also assume you’re
    using the standard base R application (for example, *R.app* on a Mac or *Rgui.exe*
    in Windows—see [Appendix A](app01.xhtml#app01)), since the behavior and availability
    of some of the commands can vary if you’re working with R in a different context.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的大部分内容假设你已经熟悉[第7章](ch07.xhtml#ch07)和[第14章](ch14.xhtml#ch14)的内容。一般来说，我还会假设你使用的是标准的基础R应用程序（例如，在Mac上是*R.app*，在Windows上是*Rgui.exe*—参见[附录A](app01.xhtml#app01)），因为在不同环境中工作时，一些命令的行为和可用性可能会有所不同。
- en: 'Depending on your operating system, the default software drivers used to render
    graphical displays on your computer screen are also different. In the standard
    *R.app* application on a Mac, for example, you’ll notice that producing a live
    plot will open a window with a banner title that looks something like *Quartz
    2 [*]*—the default graphics device driver for OS X is the Quartz window system.
    On a Windows machine, you’ll see *R Graphics: Device 2 (ACTIVE)*. The numbering
    of any graphics devices always starts at 2; Device 1 is referred to as the *null
    device*, meaning there’s nothing active currently.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '根据你的操作系统，用于在计算机屏幕上渲染图形显示的软件驱动程序也不同。例如，在Mac上的标准*R.app*应用程序中，你会注意到生成实时图形时会打开一个窗口，窗口的标题可能类似于*Quartz
    2 [*]*——OS X的默认图形设备驱动程序是Quartz窗口系统。在Windows机器上，你会看到*R Graphics: Device 2 (ACTIVE)*。任何图形设备的编号总是从2开始；设备1被称为*空设备*，意味着当前没有任何设备处于活动状态。'
- en: '**NOTE**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*For a list of devices your R session has available, enter* `?Devices` *at
    the prompt. You’ll note that the list includes commands such as* `png` *and* `pdf`*,
    which are the so-called silent graphics devices that enable direct-to-file plotting,
    as detailed in [Chapter 8](ch08.xhtml#ch08). You can use a different device for
    any given plot if you want, though the default is almost always appropriate if
    you’re plotting directly to your screen.*'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*要查看你当前R会话可用的设备列表，请在提示符下输入* `?Devices` *。你会注意到列表中包括了像* `png` *和* `pdf`*这样的命令，这些是所谓的静默图形设备，它们启用了直接文件绘图，详细内容请参见[第8章](ch08.xhtml#ch08)。如果你希望为某个绘图使用不同的设备，可以这样做，尽管默认设备通常最为合适，特别是当你直接在屏幕上绘图时。*'
- en: '**23.1 Handling the Graphics Device**'
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**23.1 处理图形设备**'
- en: So far, your plotting has dealt with one image at a time. It’s possible to have
    multiple graphics devices open, but only one will be deemed active at any given
    time (the banner titles highlight the currently active device with the *[*]* or
    the *(ACTIVE)*). This is useful when you’re working on several plots at once or
    want to view or alter one plot without closing any others.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你的绘图操作都是一次处理一张图像。虽然可以同时打开多个图形设备，但在任何给定的时刻，只有一个设备会被认为是活动的（横幅标题会用*[*]*或*(ACTIVE)*来高亮当前活动的设备）。当你同时处理多个图形，或者希望查看或修改某一张图而不关闭其他图形时，这非常有用。
- en: '***23.1.1 Manually Opening a New Device***'
  id: totrans-10
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.1.1 手动打开新设备***'
- en: The typical base R commands you’ve met already (such as `plot`, `hist`, `boxplot`,
    and so on) will automatically open a device for plotting and draw the desired
    plot, if nothing is currently open. You can also open new device windows using
    `dev.new`; this newest window will immediately become active, and any subsequent
    plotting commands will affect that particular device.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经接触过的典型基础R命令（如`plot`、`hist`、`boxplot`等）会自动打开一个绘图设备并绘制所需的图形，如果当前没有打开设备。你也可以使用`dev.new`来打开新的设备窗口；这个新窗口将立即变为活动设备，之后的所有绘图命令将作用于该设备。
- en: 'As an example, first close any open graphics windows and then enter the following
    at the R prompt:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，首先关闭所有已打开的图形窗口，然后在R提示符下输入以下内容：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will generate a plot of the spatial locations of the occurrences of the
    1000 seismic events in the ready-to-use `quakes` data frame. If the only device
    currently available is Device 1, the null device, any plotting command that refreshes
    a plotting window and produces a new image (such as `plot` here or more specialized
    commands such as `hist` or `boxplot`) will automatically open a new instance of
    the default graphics device before actually plotting the data. On my machine,
    I see *Quartz 2 [*]* open and display the plot of the spatial coordinates.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成一个关于 1000 个地震事件发生位置的图，数据来自准备好的 `quakes` 数据框。如果当前唯一可用的设备是设备 1，即空设备，那么任何刷新绘图窗口并生成新图像的绘图命令（例如这里的
    `plot`，或者更专业的命令如 `hist` 或 `boxplot`）都会在实际绘图之前自动打开一个默认图形设备的新实例。在我的机器上，我看到 *Quartz
    2 [*]* 被打开并显示空间坐标的图像。
- en: 'Now, let’s say you’d also like to see a histogram of the number of stations
    that detected each event. Execute the following to open a new plotting window:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设你还想查看每个事件被多少个站点检测到的直方图。执行以下命令以打开一个新的绘图窗口：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This new window will be numbered 3 (it usually sits itself on top of the previously
    open window, so you may want to move it to one side with your mouse). Importantly,
    you’ll see that this becomes the active device: on a Mac the *[*]* is now on the
    Device 3 banner; in Windows, Device 3 will say *(ACTIVE)*, and Device 2 will now
    say *(inactive)*.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这个新窗口将被编号为 3（通常它会出现在之前打开的窗口上方，所以你可能需要用鼠标将它移到一边）。重要的是，你会看到这个窗口成为了活动设备：在 Mac 上，*[*]*现在位于设备
    3 的横幅上；在 Windows 上，设备 3 会显示 *(ACTIVE)*，而设备 2 则会显示 *(inactive)*。
- en: 'At this point, you can enter the usual command to bring up the desired histogram
    in Device 3:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，你可以输入常规命令以在设备 3 中显示所需的直方图：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If you hadn’t used `dev.new`, the histogram would’ve just overwritten the plot
    of the spatial locations in Device 2.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有使用 `dev.new`，直方图将直接覆盖设备 2 上的空间位置图。
- en: '***23.1.2 Switching Between Devices***'
  id: totrans-21
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.1.2 在设备间切换***'
- en: To change something in Device 2 without closing Device 3, use `dev.set` followed
    by the device number you want to make active. The following code activates Device
    2 and replots the locations of the seismic events so that the size of each point
    is proportional to the number of stations that detected the event. It also tidies
    up the axis labels.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果想在不关闭设备 3 的情况下修改设备 2，使用 `dev.set` 后跟你希望激活的设备编号。以下代码激活设备 2，并重新绘制地震事件的位置，使得每个点的大小与检测到该事件的站点数量成比例。它还会整理坐标轴标签。
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Using `dev.set` always confirms the newly active device by printing to the console;
    the specific text will vary according to your operating system and type of device.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `dev.set` 总是通过打印到控制台来确认新激活的设备；具体文本会根据你的操作系统和设备类型有所不同。
- en: Switching back to Device 3, as a final tweak, add a vertical line marking off
    the mean number of detecting stations.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 切换回设备 3，作为最终调整，添加一个垂直线来标示检测站点的平均数。
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[Figure 23-1](ch23.xhtml#ch23fig1) shows the two graphics devices after making
    these modifications.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 23-1](ch23.xhtml#ch23fig1)显示了在进行这些修改后的两个图形设备。'
- en: '![image](../images/f23-01.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-01.jpg)'
- en: '*Figure 23-1: My two visible graphics devices, Device 2 (left) and Device 3
    (right), showing the final results of producing and manipulating two plots of
    the* `quakes` *data*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-1：我的两个可见图形设备，设备 2（左）和设备 3（右），显示生成和操作两个* `quakes` *数据图的最终结果*'
- en: '***23.1.3 Closing a Device***'
  id: totrans-30
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.1.3 关闭设备***'
- en: 'To close a graphics device, either click the *X* with your mouse as you would
    to close any window or use the `dev.off` function (you originally saw this command
    in [Chapter 8](ch08.xhtml#ch08) when closing a direct-to-file device). Calling
    `dev.off()` with no arguments simply closes the currently active device. Otherwise,
    you can specify the device number just as when using `dev.set`. To close the plot
    of the spatial locations, leaving the histogram as the active device, call `dev.off`
    with an argument of 2:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要关闭图形设备，可以像关闭任何窗口一样，点击鼠标上的 *X*，或者使用 `dev.off` 函数（你最初在 [第 8 章](ch08.xhtml#ch08)
    中看到过这个命令，用于关闭直接输出到文件的设备）。不带参数调用 `dev.off()` 会简单地关闭当前活动设备。否则，你可以像使用 `dev.set` 一样指定设备编号。要关闭空间位置图，保持直方图为活动设备，可以调用
    `dev.off`，并传入 2 作为参数：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then repeat the call without an argument to close the remaining device:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然后重复调用不带参数的命令以关闭剩余的设备：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Similar to `dev.set`, the printed output tells you what the newly active device
    is after you close one. When you close the last available actionable device, you’re
    returned to the null device.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于`dev.set`，打印输出会告诉你在关闭一个设备后，哪个设备变为当前活动设备。当你关闭最后一个可用的可操作设备时，你会返回到空设备。
- en: '***23.1.4 Multiple Plots in One Device***'
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.1.4 单个设备中的多个图形***'
- en: You can also control the number of individual plots in any one device. There
    are a few ways to do this; I’ll describe the two easiest ways here.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以控制任何设备中图形的数量。有几种方法可以做到这一点；我将在这里描述两种最简单的方法。
- en: '**Setting the mfrow Parameter**'
  id: totrans-38
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**设置mfrow参数**'
- en: Recall the `par` function is used to control various graphical parameters of
    traditional R plots. The `mfrow` argument instructs a new (or the currently active)
    device to “invisibly” divide itself into a grid of the specified dimensions, with
    each cell holding one plot. You pass the `mfrow` option a numeric integer vector
    of length 2 in the order of `c(rows`,columns); as you might guess, its default
    is `c(1,1)`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，`par`函数用于控制传统R图形的各种图形参数。`mfrow`参数指示一个新的（或当前活动的）设备“隐形”地将其自己划分为指定尺寸的网格，每个单元格包含一个图形。你传递给`mfrow`选项的是一个长度为2的数值整数向量，形式为`c(行数,列数)`；如你所猜测的那样，它的默认值是`c(1,1)`。
- en: In your R session, make sure there are no plotting windows open. Now, say you
    want the two plots of the `quakes` data side by side in the same device. You would
    set `mfrow` as a 1 × 2 grid with the vector `c(1,2)`—one row of plots and two
    columns.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的R会话中，确保没有打开任何绘图窗口。现在，假设你希望将`quakes`数据的两个图形并排显示在同一设备中。你可以将`mfrow`设置为一个1 ×
    2的网格，向量为`c(1,2)`——一行图形和两列图形。
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The first line uses the optional arguments `width` and `height` to preset the
    dimensions of the new device, in inches, so it is twice as wide as it is high.
    [Figure 23-2](ch23.xhtml#ch23fig2) shows exactly how the images are displayed,
    with the creation of a new plot filling the available cells as governed by the
    value of `mfrow`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行使用可选参数`width`和`height`来预设新设备的尺寸（单位为英寸），使其宽度是高度的两倍。[图23-2](ch23.xhtml#ch23fig2)显示了图像的显示方式，新图形的创建会根据`mfrow`的值填充可用的单元格。
- en: '![image](../images/f23-02.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-02.jpg)'
- en: '*Figure 23-2: Using* `mfrow` *in* `par` *to generate a grid of plots in a single
    graphics device, showing the two plots of the* `quakes` *data*'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*图23-2：使用* `mfrow` *在* `par` *中生成一个单一图形设备中的图形网格，显示`quakes`数据的两个图形*'
- en: If you close any graphics devices and rerun this code without the lead-in call
    to `dev.new`, executing `par(mfrow=c(1,2))` will automatically open a graphics
    device of the default square size of 7 × 7 inches. The two plots will still appear
    side by side but will be squashed. You can manually resize the device with your
    mouse to something more appropriate to the set value of `mfrow`, and then when
    you replot, the visualizations and their axes will be clearer. You’ll find you
    use this trial-and-error approach quite often to produce multiple plots in a single
    device, especially if you don’t want to be concerned with explicitly calling `dev.new`
    and setting `width` and `height`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你关闭了任何图形设备，并且在没有调用`dev.new`的前提下重新运行这段代码，执行`par(mfrow=c(1,2))`将自动打开一个默认大小为7
    × 7英寸的图形设备。两个图形仍然会并排显示，但会被压缩。你可以手动使用鼠标调整设备大小，使其适应`mfrow`设置的值，然后当你重新绘制图形时，图形及其坐标轴会更清晰。你会发现，你会经常使用这种反复试验的方法来在一个设备中生成多个图形，尤其是在你不想显式调用`dev.new`以及设置`width`和`height`时。
- en: Note that any use of `par` in this way will affect *only* the currently active
    device. Subsequent calls to `dev.new` will open new devices with, for example,
    `mfrow` set back to be the default “one plot only” with `c(1,1)`. In other words,
    if you want to tailor the options of any new graphics device (including the direct-to-file
    devices), you need to set the required values of `par` after opening the device
    but before executing any plotting commands.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，任何这样使用`par`的操作将*仅*影响当前活动的设备。随后的`dev.new`调用会打开新的设备，举例来说，`mfrow`会被重置为默认的“仅一个图形”设置`c(1,1)`。换句话说，如果你想定制任何新图形设备（包括直接输出到文件的设备）的选项，你需要在打开设备之后、执行任何绘图命令之前设置所需的`par`值。
- en: '**Defining a Particular Layout**'
  id: totrans-47
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**定义特定的布局**'
- en: You can refine the arrangements of plots in a single device using the `layout`
    function, which offers more ways to individualize the panels into which the plots
    will be drawn.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`layout`函数来细化单个设备中图形的排列方式，它提供了更多的方法来个性化图形将要绘制的面板。
- en: Return to the student survey data in `survey` in the `MASS` package. Suppose
    you want an array of three statistical plots—a scatterplot of height on writing
    handspan, side-by-side boxplots of height split by smoking status, and a barplot
    of the frequencies of exercise of the students. If you want the plots arranged
    in a square device (as opposed to a single row or column of three plots), using
    only `mfrow` in `par` may not work best. You could set a square grid with `par(mfrow=c(2,2))`,
    but you’d end up with a blank space for the cell with no image assigned to it.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到`MASS`包中的学生调查数据`survey`。假设你想要展示三个统计图表——一个展示身高与写字手部跨度的散点图，一个展示按吸烟状态分组的身高箱线图，以及一个展示学生锻炼频率的条形图。如果你想将图表排列成一个方形设备（而不是三个图表的单行或单列），仅使用`mfrow`在`par`中可能无法达到最佳效果。你可以设置一个方形网格，使用`par(mfrow=c(2,2))`，但你会发现某个单元格会留下空白，因为没有图像分配给它。
- en: 'When you use `layout`, you provide the dimensions in a matrix `mat` as the
    first argument; these govern an invisible rectangular grid, just like controlling
    the `mfrow` option. The difference now is that you can use numeric integer entries
    in `mat` to tell `layout` which plot number will go where. Examine the following
    object:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`layout`时，你需要将矩阵`mat`作为第一个参数传入，这些参数控制一个看不见的矩形网格，就像控制`mfrow`选项一样。不同之处在于，你现在可以在`mat`中使用整数数字条目来告诉`layout`，哪个绘图编号将放置在哪里。请查看以下对象：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The dimensions of this matrix create a 2 × 2 grid of plotting cells, but the
    values inside `lay.mat` tell R that you want plot 1 to take the upper-left cell,
    plot 2 to take the upper-right cell, and plot 3 to stretch itself over the two
    bottom cells.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 该矩阵的维度创建了一个2 × 2的绘图单元格网格，但`lay.mat`中的值告诉R，你希望图1占据左上单元格，图2占据右上单元格，图3则扩展到两个底部单元格。
- en: Calling `layout` as follows will either silently initialize the active device
    based on `lay.mat` or open a new one (if the null device is the only device currently
    available) and initialize it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 按如下方式调用`layout`，将根据`lay.mat`静默初始化活动设备，或者在当前唯一可用的空设备的情况下打开一个新的设备并初始化它。
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: If you’re ever unsure of the result of your specification, you can use the `layout.show`
    function to see how plots will be placed. The following line produces the image
    on the left of [Figure 23-3](ch23.xhtml#ch23fig3).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对指定结果不确定，可以使用`layout.show`函数查看绘图如何布局。以下代码生成的图像位于[图23-3](ch23.xhtml#ch23fig3)的左侧。
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Then, once you’ve loaded the `MASS` package by calling `library("MASS")` so
    you can access `survey`, run the following lines to place the plots in the order
    the plotting commands are executed, matched to the integers in `lay.mat`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在你通过调用`library("MASS")`加载了`MASS`包以访问`survey`数据后，运行以下代码行，将图形按照绘图命令执行的顺序排列，并与`lay.mat`中的整数匹配。
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note that if you’ve already closed down the plot arising from `layout.show`,
    then you’ll need to reinitialize a new device with the same call to `layout` for
    these three plots to display as intended. The result should look like the right
    of [Figure 23-3](ch23.xhtml#ch23fig3).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果你已经关闭了由`layout.show`产生的图形，那么你需要重新初始化一个新设备，并使用相同的`layout`调用，这样这三个图形才能按照预期显示。结果应该类似于[图23-3](ch23.xhtml#ch23fig3)的右侧。
- en: '![image](../images/f23-03.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-03.jpg)'
- en: '*Figure 23-3: Left: Using* `layout.show` *to visualize the planned plotting
    layout and order. Right: Demonstrating three plots of the* `survey` *data arranged
    according to* `lay.mat` *through* `layout`.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*图23-3：左侧：使用*`layout.show`*可视化计划的绘图布局和顺序。右侧：展示三个根据*`lay.mat`*通过*`layout`*排列的*`survey`*数据的绘图。*'
- en: Probably the biggest benefit of `layout` is its ability to relax the rigidity
    of plotting cells when compared to using the `mfrow par` option, as you’ve just
    seen. Additional arguments to `layout`, namely, `widths` and `heights`, even allow
    you to preset the relative widths and heights of the cells as structured in the
    `mat` argument. See the documentation in `?layout` for details; you’ll find some
    other examples of its flexibility at the bottom of the file.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`layout`的最大好处之一是它能相较于使用`mfrow par`选项时，放松绘图单元格的固定性，正如你刚刚看到的那样。`layout`的其他参数，特别是`widths`和`heights`，甚至允许你预设`mat`参数中结构化的单元格的相对宽度和高度。有关详细信息，请参见`?layout`中的文档；你还可以在文件底部找到一些其灵活性的其他示例。'
- en: '**NOTE**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*An unfortunate consequence of the two methods discussed here is the inability
    to edit a previous plot once you’ve finished it and moved on to the next. There
    is a* `split.screen` *function, which does allow you to set up several “screens”
    in a single device and switch between them. However, this method requires a lot
    of extra coding and in general doesn’t behave well with regard to plotting regions
    and margins (see the next section) in R. Many users (myself included) prefer to
    remain with* `layout`*, even if it means going through a bit of trial and error.*'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*这里讨论的两种方法的一个不幸后果是，一旦完成了一个图形并进入下一个，就无法编辑之前的图形。有一个`split.screen`函数，允许你在一个设备中设置多个“屏幕”并在它们之间切换。然而，这种方法需要大量的额外编码，并且通常在绘图区域和边距（参见下一节）方面表现不佳。许多用户（包括我自己）更倾向于使用`layout`，即使这意味着需要通过一些试验和错误。*'
- en: '**23.2 Plotting Regions and Margins**'
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**23.2 绘图区域和边距**'
- en: Although the main concern when plotting is of course the data set or model being
    visualized, it’s additionally important to ensure the plot is annotated clearly
    and accurately to facilitate correct interpretation. To help do this, you need
    to know how to manipulate and draw in all visible areas of a given device, not
    just the area where your data lie.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管绘图时主要关注的数据集或模型是被可视化的对象，但同样重要的是确保图形的注释清晰准确，以便正确解读。为此，你需要知道如何操作和绘制给定设备上所有可见区域，而不仅仅是数据所在的区域。
- en: For any single plot created using base R graphics, there are three regions that
    make up the image.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何使用基本R图形创建的单个图形，图像由三个区域组成。
- en: • The *plot region* is all you’ve dealt with so far. This is where your actual
    plot appears and where you’ll usually be drawing your points, lines, text, and
    so on. The plot region uses the *user coordinate system*, which reflects the value
    and scale of the horizontal and vertical axes.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '*绘图区域*是你迄今为止处理的所有区域。这是你的实际图形出现的地方，也是你通常绘制点、线、文本等的地方。绘图区域使用*用户坐标系统*，它反映了水平和垂直坐标轴的值和刻度。'
- en: • The *figure region* is the area that contains the space for your axes, their
    labels, and any titles. These spaces are also referred to as the *figure margins*.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*图形区域*是包含坐标轴、坐标轴标签和标题空间的区域。这些空间也称为*图形边距*。'
- en: • The *outer region*, also referred to as the *outer margins*, is additional
    space around the figure region that is not included by default but can be specified
    if it’s needed.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '*外部区域*，也称为*外部边距*，是围绕图形区域的额外空间，默认情况下不包括在内，但如果需要，可以进行指定。'
- en: 'You can explicitly measure and set margin space in a few different ways. One
    typical way is in terms of *lines*—specifically, the number of lines of text that
    can fit on top of one another parallel to each edge. You specify these as vectors
    of length 4 in a particular order; each of the four elements corresponds to one
    of the four sides: `c(bottom`, left, top, right). The graphical parameters `oma`
    (outer margin) and `mar` (figure margin) are used to control these amounts; like
    `mfrow`, they are initialized through a call to `par` before you begin to draw
    any new plot.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过几种不同的方式明确测量和设置边距空间。一种典型的方式是使用*行数*—具体来说，是能在每个边缘上并排显示的文本行数。你需要按照特定的顺序指定这些行数，作为一个长度为4的向量；四个元素分别对应四个边：`c(底部，左侧，顶部，右侧)`。图形参数`oma`（外部边距）和`mar`（图形边距）用于控制这些数量；像`mfrow`一样，它们通过调用`par`进行初始化，在你开始绘制任何新图形之前。
- en: '***23.2.1 Default Spacing***'
  id: totrans-72
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.2.1 默认间距***'
- en: You can find your default figure margin settings with a call to `par` in R.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在R中调用`par`来找到默认的图形边距设置。
- en: '[PRE12]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You can see here that `oma=c(0, 0, 0, 0)`—there is no outer margin set by default.
    The default figure margin space is `mar=c(5.1, 4.1, 4.1, 2.1)`—in other words,
    5.1 lines of text on the bottom, 4.1 on the left and top, and 2.1 on the right.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到这里`oma=c(0, 0, 0, 0)`—默认情况下没有设置外部边距。默认的图形边距空间是`mar=c(5.1, 4.1, 4.1, 2.1)`—换句话说，底部有5.1行文本，左侧和顶部各有4.1行，右侧有2.1行。
- en: 'To illustrate these regions, consider the image on the left of [Figure 23-4](ch23.xhtml#ch23fig4),
    created in a fresh graphics device with the following:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这些区域，考虑[图23-4](ch23.xhtml#ch23fig4)左侧的图像，它是在一个新的图形设备中创建的，使用了以下代码：
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![image](../images/f23-04.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-04.jpg)'
- en: '*Figure 23-4: Illustrating graphical device regions as treated by traditional
    (base) R graphics; solid-line boxes show the plot region, dashed-line boxes show
    the figure region, and a dotted-line box shows the outer region area. Left: Default
    settings. Right: User specification, through* `par`*, of the outer and figure
    margin areas in “lines of text” via* `oma` *and* `mar`*, respectively.*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-4：展示传统（基本）R 图形设备区域的示例；实线框显示图表区域，虚线框显示图形区域，点线框显示外部区域。左：默认设置。右：用户通过* `par`*
    指定的外部和图形边距区域，分别通过* `oma` *和* `mar` *指定“文本行数”。*'
- en: If you use the `box` function with the optional argument `which` set to `"figure"`,
    it shows you the figure region (the additional specification of `lty=2` draws
    dashed lines).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 `box` 函数，并将可选参数 `which` 设置为 `"figure"`，它会显示图形区域（另外指定 `lty=2` 会绘制虚线）。
- en: If you’re looking at this plot in your onscreen graphics device, you should
    note the dashed lines snug up against the window edges. Examining the default
    values in `mar`, you can see, relatively speaking, that they correctly correspond
    to the spacing on the four sides of the plot region (given with the default solid
    box). The widest figure margin, parallel to the bottom of the plot region, is
    5.1 lines; the narrowest figure margin, parallel to the right of the plot region,
    is 2.1 lines.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在屏幕上的图形设备中查看这个图表，你会注意到虚线紧贴着窗口的边缘。查看 `mar` 的默认值，你可以看到，相对来说，它们正确地对应图表区域四个边的间距（由默认的实线框给出）。与图表区域底部平行的最宽图形边距为
    5.1 行；与图表区域右侧平行的最窄图形边距为 2.1 行。
- en: '***23.2.2 Custom Spacing***'
  id: totrans-82
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.2.2 自定义间距***'
- en: Let’s produce the same plot but with tailored outer margins so that the bottom,
    left, top, and right areas are one, four, three, and two lines, respectively,
    and the figure margins are four, five, six, and seven lines. The result of the
    following code is given on the right of [Figure 23-4](ch23.xhtml#ch23fig4).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们生成相同的图表，但使用定制的外部边距，使得底部、左侧、顶部和右侧区域分别为 1、4、3 和 2 行，而图形边距则分别为 4、5、6 和 7 行。以下代码的结果如
    [图 23-4](ch23.xhtml#ch23fig4) 右侧所示。
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Notice that the irregular margins have squashed the plot region in the default
    square device to accommodate the defined spacing around the edges. If you set
    graphical parameters that squash the plot region into nonexistence, R will throw
    an error stating `figure margins too large`.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，不规则的边距已将图表区域在默认的方形设备中压缩，以适应定义的边缘间距。如果你设置的图形参数将图表区域压缩到不存在，R 会抛出错误，提示 `figure
    margins too large`。
- en: 'Since you’d usually manipulate margin space to accommodate particular annotations
    of the plot, let’s look at the `mtext` function, used specifically to produce
    text in the figure or outer margins. By default, the argument `outer` is `FALSE`,
    meaning the text will be written in the figure margin. Setting `outer=TRUE` positions
    the text in the outer region. If you’ve kept the most recent plot open, the following
    lines provide the additional margin annotation visible on the right of [Figure
    23-4](ch23.xhtml#ch23fig4):'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你通常需要调整边距空间以适应图表的特定注释，下面我们来看看 `mtext` 函数，它专门用于在图形或外部边距中生成文本。默认情况下，参数 `outer`
    为 `FALSE`，意味着文本将写入图形边距。设置 `outer=TRUE` 则将文本定位到外部区域。如果你保持最新的图表打开，下面的几行代码将提供右侧显示的额外边距注释，见
    [图 23-4](ch23.xhtml#ch23fig4)：
- en: '[PRE15]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Here, you provide the text you want written in a character string as the first
    argument, and the argument line instructs how many lines of space away from the
    inside border the text should appear. There’s also an optional argument `side`
    in `mtext`, which dictates where the text appears. It defaults to `3`, setting
    the text at the top, but you can set `side=1` to place the text on the bottom,
    use `side=2` to set it on the left, and use `side=4` to set it on the right. Look
    to `?mtext` for details on even more arguments available for the margin text.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你将你想要写入的文本作为第一个参数传递，而参数 `line` 指示文本距离内部边框的行数。`mtext` 中还有一个可选参数 `side`，它决定文本出现的位置。默认值为
    `3`，将文本设置在顶部，但你可以设置 `side=1` 将文本放置在底部，使用 `side=2` 将其设置在左侧，使用 `side=4` 将其设置在右侧。详细信息可以查看
    `?mtext`，了解更多可用于边距文本的参数。
- en: You might also like to investigate the ready-to-use function `title`, which
    is a specialized implementation of `mtext` often used if figure margin annotation
    for the four axes of a plot (beyond the basic capabilities of specifying things
    such as `main`, `xlab`, or `ylab`) is the primary concern.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可能想要研究现成的`title`函数，它是`mtext`的专门实现，通常用于当图形的四个轴的边缘注释（超出指定`main`、`xlab`或`ylab`等基本功能）是主要关注点时。
- en: '***23.2.3 Clipping***'
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.2.3 裁剪***'
- en: Controlling *clipping* allows you to draw in or add elements to the margin regions
    with reference to the user coordinates of the plot itself. For example, you might
    want to place a legend outside the plotting area, or you might want to draw an
    arrow that extends beyond the plot region to embellish a particular observation.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 控制*裁剪*可以让你在参考图形自身的用户坐标时，在或向边缘区域绘制或添加元素。例如，你可能希望将图例放置在绘图区域外，或者你可能希望绘制一个箭头，延伸到绘图区域之外，以强调某个特定的观察点。
- en: The graphical parameter `xpd` controls clipping in base R graphics. By default,
    `xpd` is set to `FALSE`, so all drawing is clipped to the available plot region
    only (with the exception of special margin-addition functions such as `mtext`).
    Setting `xpd` to `TRUE` allows you to draw things outside the formally defined
    plot region into the figure margins but not into any outer margins. Setting `xpd`
    to `NA` will permit drawing in all three areas—plot region, figure margins, and
    the outer margins.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图形参数`xpd`控制基本R图形中的裁剪。默认情况下，`xpd`设置为`FALSE`，因此所有绘图仅限于可用的绘图区域（特殊的边缘添加函数，如`mtext`除外）。将`xpd`设置为`TRUE`，允许你在正式定义的绘图区域外绘制内容到图形边缘，但不能进入任何外部边缘。将`xpd`设置为`NA`，则允许在所有三个区域中绘制——绘图区域、图形边缘和外部边缘。
- en: 'For example, take a look at the images in [Figure 23-5](ch23.xhtml#ch23fig5),
    showing side-by-side boxplots of mileage split by number of cylinders, created
    with the following code:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，查看[图 23-5](ch23.xhtml#ch23fig5)中的图像，展示了按气缸数量划分的里程的并排箱线图，使用以下代码创建：
- en: '[PRE16]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The particular result of this code is the top-left image in [Figure 23-5](ch23.xhtml#ch23fig5).
    I’ve defined the device region itself with particular figure and outer margins
    for the purpose of illustration. The plotting of the horizontal axis is suppressed
    with `xaxt="n"` in the call to `boxplot`; calls to `box` add the boundaries of
    the figure and outer margins (dashed and dotted lines, respectively). Lastly,
    calls to `arrows` and `text` point to and annotate each boxplot; the label for
    V4 cars extends into the outer margin, the label for V6 cars extends into the
    figure region, and the label for V8 cars remains contained within the plot region.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码的具体结果是[图 23-5](ch23.xhtml#ch23fig5)中的左上图。我已为说明目的定义了设备区域本身，并为图形和外部边缘设置了特定的边距。通过在`boxplot`调用中使用`xaxt="n"`来抑制绘制水平轴；调用`box`函数添加图形和外部边缘的边界（分别为虚线和点线）。最后，调用`arrows`和`text`分别指向并注释每个箱线图；V4车型的标签延伸到外部边距，V6车型的标签延伸到图形区域，而V8车型的标签保持在绘图区域内。
- en: Note that the graphical parameter `xpd` is specified only in the two “add-to-current-plot”
    functions `arrows` and `text`, explicitly set as the default `FALSE`. This means
    all plotting is restricted to the plot region.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，图形参数`xpd`仅在两个“添加到当前绘图”函数`arrows`和`text`中指定，并显式设置为默认值`FALSE`。这意味着所有绘图都仅限于绘图区域。
- en: If you run the code chunk again but now set `xpd=TRUE` in the calls to `arrows`
    and `text`, you’ll get the image in the top right of [Figure 23-5](ch23.xhtml#ch23fig5).
    This allows the label for the V6 car to be printed in the margin, instead of being
    chopped off. Finally, rerunning the code with `xpd=NA` produces the lower plot
    in [Figure 23-5](ch23.xhtml#ch23fig5), where all drawing outside the plot region
    is permitted.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你再次运行代码块，但现在在`arrows`和`text`的调用中将`xpd=TRUE`，你将得到[图 23-5](ch23.xhtml#ch23fig5)右上角的图像。这允许V6车型的标签在边缘打印，而不是被截断。最后，重新运行代码并将`xpd=NA`，将生成[图
    23-5](ch23.xhtml#ch23fig5)中的下方图形，允许所有绘制内容超出绘图区域。
- en: This effect is usually desirable when you need to annotate the main plot somehow,
    especially when there isn’t enough space in the plot region to squeeze in any
    additions. Plots that I’ve created in earlier chapters, such as the bottom image
    of [Figure 16-6](ch16.xhtml#ch16fig6) on [page 349](ch16.xhtml#page_349) (where
    the legend sits outside the main plot) and [Figure 17-3](ch17.xhtml#ch17fig3)
    on [page 380](ch17.xhtml#page_380) (where I annotated the critical values), were
    created specifying `xpd=TRUE` in the relevant functions (`legend`, `text`, `segments`,
    and `arrows`).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当你需要以某种方式注释主图时，这种效果通常是需要的，尤其是在图形区域没有足够空间添加内容时。我在前面章节创建的图形，例如 [图 16-6](ch16.xhtml#ch16fig6)
    （图例位于主图之外，位于 [第 349 页](ch16.xhtml#page_349)）和 [图 17-3](ch17.xhtml#ch17fig3) （注释了关键值，位于
    [第 380 页](ch17.xhtml#page_380)），都是通过在相关函数（`legend`、`text`、`segments` 和 `arrows`）中指定
    `xpd=TRUE` 来创建的。
- en: As demonstrated, you’d typically set `xpd` in the specific commands (in other
    words, on a line-by-line basis), so only the results of that particular command
    will be produced with the given clipping rule. This offers a bit more control
    over what is and isn’t visible outside the plot region. You can, however, set
    `xpd` alongside `oma` and `mar` in the initial call to `par` to make the value
    of `xpd` “universal” to that device.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如所示，通常你会在特定命令中设置 `xpd`（换句话说，是逐行设置），这样只有该特定命令的结果会按照给定的裁剪规则生成。这提供了更多控制，决定哪些内容能否显示在图形区域之外。不过，你也可以在初始调用
    `par` 时，将 `xpd` 与 `oma` 和 `mar` 一起设置，使得 `xpd` 的值在该设备上“通用”。
- en: '![image](../images/f23-05.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-05.jpg)'
- en: '*Figure 23-5: Illustrating the behavior of setting* `xpd=FALSE` *(top left,
    default),* `xpd=TRUE` *(top right), and* `xpd=NA` *(bottom) in relevant plotting
    commands to enable drawing in figure and outer margins with respect to the user
    coordinates of the plot region*'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-5：展示设置* `xpd=FALSE` *(左上角，默认)，* `xpd=TRUE` *(右上角)，以及* `xpd=NA` *(底部)在相关绘图命令中启用根据用户坐标在图形区域内及外部边距绘制的行为*'
- en: '**23.3 Point-and-Click Coordinate Interaction**'
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**23.3 点选坐标交互**'
- en: Your dealings with the graphics device don’t need to be solely command based.
    Under typical circumstances, R can read mouse clicks you make inside the device.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 与图形设备的交互不一定仅限于命令方式。在典型情况下，R 可以读取你在设备内的鼠标点击。
- en: '***23.3.1 Retrieving Coordinates Silently***'
  id: totrans-104
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.3.1 静默检索坐标***'
- en: The `locator` command allows you to find and return user coordinates. To see
    how it works, first execute a call to `plot(1,1)` to bring up a simple plot with
    a single point in the middle. To use `locator`, you simply execute the function
    (with no arguments for default behavior), which will “hang” the console, without
    returning you to the prompt. Then, on an active graphics device, your mouse cursor
    will change to a + symbol (you may need to first click your device once to bring
    it to the foreground of your computer desktop). With your cursor as the +, you
    can perform a series of (left) mouse clicks inside the device, and R will silently
    record the precise user coordinates. To stop this, simply right-click to terminate
    the command (other options to stop are system dependent and are mentioned in the
    help file `?locator`), and once you do, the coordinates you identified in the
    device are returned as a list with components `$x` and `$y`. These are printed
    to the console screen unless you specifically assign the call to `locator` to
    an R object.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`locator` 命令允许你查找并返回用户坐标。要查看其工作原理，首先执行 `plot(1,1)` 来显示一个简单的图形，其中中央有一个点。要使用
    `locator`，你只需执行该函数（默认行为下不传递任何参数），这会“挂起”控制台，直到返回提示符。然后，在一个活动的图形设备上，你的鼠标光标会变成一个+符号（你可能需要先点击一次设备，将其带到桌面前台）。在光标为+时，你可以在设备内执行一系列（左键）鼠标点击，R
    会静默记录精确的用户坐标。要停止此操作，只需右键点击终止命令（其他停止方法取决于系统，并在帮助文件 `?locator` 中提及），一旦停止，设备中识别的坐标将作为包含
    `$x` 和 `$y` 组件的列表返回。这些坐标会打印到控制台，除非你特别将 `locator` 的调用结果赋值给 R 对象。'
- en: 'On my machine, I silently identified four points at arbitrary locations around
    the plotted point at (1,1), from top left clockwise around to the bottom left.
    The following is the output printed to my console:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的机器上，我在绘制点 (1,1) 周围的任意位置静默标识了四个点，顺时针从左上角到左下角。以下是打印到控制台的输出：
- en: '[PRE17]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This silent use of `locator` is useful if you need to, for example, identify
    approximate user coordinates in the plot region where you need to place future
    annotations.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`locator` 的这种静默使用在你需要例如确定图形区域中大致的用户坐标，以便在未来放置注释时非常有用。'
- en: '***23.3.2 Visualizing Selected Coordinates***'
  id: totrans-109
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.3.2 可视化选定的坐标***'
- en: 'You can also use `locator` to plot the points you select as either individual
    points or as lines. Running the following code produces [Figure 23-6](ch23.xhtml#ch23fig6):'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用`locator`将所选的点绘制为单独的点或线。运行以下代码会生成[图 23-6](ch23.xhtml#ch23fig6)：
- en: '[PRE18]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Drawing using `locator` requires you to specify the plot `type`, as covered
    in [Chapter 7](ch07.xhtml#ch07). Selecting `type="o"` (as opposed to the silent
    default, `type="n"`) is what produces the overplotted points and lines in [Figure
    23-6](ch23.xhtml#ch23fig6). For just points, use `type="p"`; for just lines, use
    `type="l"`. The graphical parameters controlling other relevant features, such
    as point/line type and color, can also be used, as you’ve seen in conventionally
    produced plots in [Chapter 7](ch07.xhtml#ch07). I also used `xpd=TRUE`, shown
    earlier, to allow the `locator` points and/or lines to protrude into the figure
    region margins. The call to `locator` is directly assigned to a new object `Rtist`,
    illustrating how you can use the clicked coordinates later if needed.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`locator`进行绘图时，你需要指定绘图的`type`，详见[第 7 章](ch07.xhtml#ch07)。选择`type="o"`（与默认的静默值`type="n"`不同）会在[图
    23-6](ch23.xhtml#ch23fig6)中生成重叠的点和线。仅绘制点时使用`type="p"`；仅绘制线时使用`type="l"`。控制其他相关特征的图形参数，如点/线类型和颜色，也可以使用，正如你在[第
    7 章](ch07.xhtml#ch07)中看到的常规绘图中所示。我还使用了`xpd=TRUE`，如前所示，这允许`locator`的点和/或线超出图形区域的边界。对`locator`的调用被直接赋值给一个新的对象`Rtist`，这演示了如果需要，你可以稍后使用点击的坐标。
- en: '![image](../images/f23-06.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-06.jpg)'
- en: '*Figure 23-6: Using* `locator` *to draw an arbitrary sequence of overplotted
    points and lines*'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-6：使用* `locator` *绘制任意顺序的重叠点和线*'
- en: '***23.3.3 Ad Hoc Annotation***'
  id: totrans-115
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.3.3 临时注释***'
- en: The `locator` function also allows you to place ad hoc annotations, such as
    legends, on your plot—remember, since `locator` returns valid R user coordinates,
    these results can directly form the positional argument of most standard annotation
    functions.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`locator`函数还允许你在绘图中放置临时注释，如图例——记住，由于`locator`返回的是有效的R用户坐标，这些结果可以直接作为大多数标准注释函数的位置信息。'
- en: Return to the student survey data in the `MASS` package, first loading the package
    by calling `library("MASS")`. The following call produces the scatter-plot used
    to illustrate a multiple linear model of mean student height as a function of
    handspan and sex in [Section 21.3.3](ch21.xhtml#ch21lev2sec195).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到`MASS`包中的学生调查数据，首先通过调用`library("MASS")`来加载该包。以下代码会生成用来说明多个线性模型的散点图，模型将平均学生身高作为手掌宽度和性别的函数，详见[第
    21.3.3 节](ch21.xhtml#ch21lev2sec195)。
- en: '[PRE19]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'For the plot in [Section 21.3.3](ch21.xhtml#ch21lev2sec195) ([Figure 21-1](ch21.xhtml#ch21fig1)
    on [page 495](ch21.xhtml#page_495)), I simply used the string `"topleft"` to position
    the legend. This time, call the following:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[第 21.3.3 节](ch21.xhtml#ch21lev2sec195)中的绘图（[图 21-1](ch21.xhtml#ch21fig1)见[第
    495 页](ch21.xhtml#page_495)），我只是用字符串`"topleft"`来定位图例。这时，调用以下代码：
- en: '[PRE20]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: An optional argument to `locator`, `n`, takes a positive integer for an upper
    limit on how many points you want to select; it defaults to `512`. If you specify
    `n=1`, `locator` will automatically terminate after you left-click once in the
    device, so you don’t need to manually exit the function with a right-click.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '`locator`的一个可选参数`n`接受一个正整数，用于设定你希望选择的最大点数；默认值为`512`。如果你指定`n=1`，`locator`将在你在设备上左键单击一次后自动终止，因此你不需要通过右键单击手动退出函数。'
- en: When the code is executed, the + cursor will appear on the graphics device,
    and you simply need to click once for the desired location of the legend. I chose
    to click the blank space above the cloud of points, producing the image in [Figure
    23-7](ch23.xhtml#ch23fig7).
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 当代码执行时，+光标将出现在图形设备上，你只需要点击一次来选择图例的位置。我选择在点云的上方空白处点击，生成了[图 23-7](ch23.xhtml#ch23fig7)中的图像。
- en: '![image](../images/f23-07.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-07.jpg)'
- en: '*Figure 23-7: Ad hoc placement of a legend on a scatterplot of the* `survey`
    *data*'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-7：在散点图中临时放置图例，数据来自* `survey` *数据集*'
- en: '**Exercise 23.1**'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.1**'
- en: In [Section 20.5.4](ch20.xhtml#ch20lev2sec188) ([page 478](ch20.xhtml#page_478)),
    I gave you code showing a simple linear model fitted with a categorical predictor
    being treated as continuous (the `mtcars` data with `mpg` as the response and
    `cyl` as the explanatory variable). Reproduce the side-by-side boxplots and the
    scatterplot (with fitted line) from [Figure 20-6](ch20.xhtml#ch20fig6), but this
    time, use `mfrow` to present the two plots as a vertical column in one device.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[第20.5.4节](ch20.xhtml#ch20lev2sec188)（[第478页](ch20.xhtml#page_478)）中，我给出了一个简单的线性模型代码，展示了将类别预测变量当作连续变量拟合的情况（`mtcars`数据集，`mpg`为响应变量，`cyl`为解释变量）。请复现[图20-6](ch20.xhtml#ch20fig6)中的并排箱型图和散点图（带拟合线），但这次使用`mfrow`将这两张图以垂直列的形式在一个设备上呈现。
- en: 'Create the appropriate layout matrices to reproduce the following three plots
    (as they appear in a square device):'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建适当的布局矩阵，以复现以下三个图（它们在一个方形设备中呈现）：
- en: '![image](../images/f0589-01a.jpg)'
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_IMG
  zh: '![image](../images/f0589-01a.jpg)'
- en: '![image](../images/f0589-02a.jpg)'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_IMG
  zh: '![image](../images/f0589-02a.jpg)'
- en: '![image](../images/f0589-03a.jpg)'
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_IMG
  zh: '![image](../images/f0589-03a.jpg)'
- en: 'By opening a new device of dimension 9 × 4.5 inches, set the following layout:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过打开一个尺寸为9 × 4.5英寸的新设备，设置以下布局：
- en: '![image](../images/f0589-02.jpg)'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0589-02.jpg)'
- en: 'Then, produce the following combined set of plots exactly:'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，精确地生成以下组合图表：
- en: '![image](../images/f0590-01.jpg)'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0590-01.jpg)'
- en: 'To achieve this, note the following:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了实现这一点，请注意以下事项：
- en: – After you open the device and setting the layout, the plot margins should
    be reset to four lines, four lines, two lines, and one line of space on the bottom,
    left, top, and right, respectively.
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – 打开设备并设置布局后，图表的边距应重置为底部、左侧、顶部和右侧分别为四行、四行、两行和一行的空间。
- en: – After each plot, add a gray box corresponding to the figure region to achieve
    the visible partitions.
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – 在每个图表之后，添加一个对应于图形区域的灰色框，以实现可见的分区。
- en: – Plots 1 and 4 are the same as the two plots shown in [Figures 23-1](ch23.xhtml#ch23fig1)
    and [23-2](ch23.xhtml#ch23fig2).
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – 图表1和图表4与[图23-1](ch23.xhtml#ch23fig1)和[图23-2](ch23.xhtml#ch23fig2)中显示的两张图相同。
- en: – Plots 2 and 3 are scatterplots showing the number of detecting stations on
    the *y*-axis, with magnitude and depth on the *x*-axis, respectively.
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – 图表2和图表3是散点图，分别显示了检测站的数量（*y*轴），以及震级和深度（*x*轴）。
- en: – Do not place main titles on any plots, and ensure the axis titles are neat
    (that is, compared to their defaults).
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – 不要在任何图表上放置主标题，确保坐标轴标题整洁（即，与默认设置相比）。
- en: 'Write a little R function named `interactive.arrow`. The purpose of this function
    is to superimpose an arrow upon any base R plot using two clicks of your mouse.
    The details are as follows:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个小的R函数，命名为`interactive.arrow`。该函数的目的是通过鼠标点击两次，在任何基础R图形上叠加一个箭头。具体细节如下：
- en: – The crux of your function will be the use of `locator` to read exactly two
    mouse clicks. You may assume a suitable active graphics device is already open
    whenever the function is called. The first click should mean the beginning of
    the arrow, and the second click should mean the tip of the arrow (where it’s pointing
    to).
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – 你函数的关键是使用`locator`来读取恰好两次鼠标点击。你可以假设每次调用该函数时，合适的活动图形设备已经打开。第一次点击应表示箭头的起点，第二次点击应表示箭头的箭头尖端（即它指向的位置）。
- en: – In the function, the coordinates returned by `locator` should be passed to
    `arrows` to do the actual drawing.
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – 在函数中，`locator`返回的坐标应传递给`arrows`，以进行实际绘图。
- en: – The function should take an ellipsis as its first argument, intended to hold
    additional arguments to be passed directly to `arrows`.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – 该函数应该将省略号作为第一个参数，用于传递直接给`arrows`的附加参数。
- en: – The function should take an optional logical argument `label`, which defaults
    to `NA` but should be intended to have an optional character string. If `label`
    is not `NA`, then `locator` should be invoked once more (separately, after drawing
    the arrow) to select exactly one coordinate. That point will be passed to `text`
    so that the user can additionally place the character string given to `label`
    as an annotation (intended to be for the interactively placed arrow). The call
    to `text` should consistently allow completely relaxed clipping (in other words,
    any text added in this fashion will still be visible in the figure region and
    outer margins, if there are any).
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: – 该函数应接受一个可选的逻辑参数`label`，其默认值为`NA`，但应打算传入一个可选的字符字符串。如果`label`不是`NA`，那么在绘制箭头后，`locator`应该再次被调用（单独调用）来选择一个精确的坐标。该点将传递给`text`，以便用户可以将传入`label`的字符字符串作为注释（预计是用于交互式放置的箭头）。对`text`的调用应该始终允许完全放松裁剪（换句话说，以这种方式添加的任何文本仍然会在图形区域和外部边距中可见，如果有的话）。
- en: 'Take another look at the rightmost plot of [Figure 14-6](ch14.xhtml#ch14fig6)
    on [page 298](ch14.xhtml#page_298), a stand-alone boxplot of the magnitude data
    from the `quakes` data frame. Arrows and labels were superimposed externally pointing
    out the various statistics summarized by a boxplot. Create the same boxplot and
    use `interactive.arrow` to annotate the same features to your own satisfaction
    (you’ll likely have to use the ellipsis to relax the clipping associated with
    each arrow). My result is given here:'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 再看一眼[第14-6图](ch14.xhtml#ch14fig6)中最右侧的绘图，[第298页](ch14.xhtml#page_298)的 `quakes`
    数据框中的震幅数据的独立箱线图。箭头和标签被外部叠加，指向箱线图总结的各种统计信息。创建相同的箱线图，并使用`interactive.arrow`来标注相同的特征，直到你满意为止（你可能需要使用省略号来放松每个箭头的裁剪）。我的结果如下所示：
- en: '![image](../images/f0591-01.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0591-01.jpg)'
- en: '**23.4 Customizing Traditional R Plots**'
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**23.4 自定义传统的 R 绘图**'
- en: Now that you’re familiar with the way R places and handles plots in the graphics
    device, it’s time to focus on common features of plots. So far, you’ve largely
    left the default settings in place.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经熟悉了 R 在图形设备中放置和处理图形的方式，是时候关注图形的常见特征了。到目前为止，你大多数情况下都保持了默认设置。
- en: '***23.4.1 Graphical Parameters for Style and Suppression***'
  id: totrans-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.4.1 用于样式和抑制的图形参数***'
- en: If you want finer control over an R plot, you’ll typically want to begin with
    a “clean slate.” To do this, you need to be aware of the default settings of certain
    graphical parameters when calling a plotting function and of how to suppress things
    such as boxes and axes. This is where you’ll start.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想对 R 绘图进行更精细的控制，通常你需要从一个“干净的画布”开始。为此，你需要了解在调用绘图函数时某些图形参数的默认设置，以及如何抑制诸如框线和坐标轴等元素。这就是你开始的地方。
- en: 'For an example image, let’s plot MPG against horsepower (from the ready-to-use
    `mtcars` data set) and set each plotted point to be sized proportionally to the
    weight of each car. For convenience, create the following objects:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 作为示例图像，让我们将 MPG 与马力（来自现成的`mtcars`数据集）进行绘制，并将每个绘制点的大小设置为与每辆车的重量成比例。为了方便起见，创建以下对象：
- en: '[PRE21]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The last object is the car weight vector scaled by its sample mean. This creates
    a vector where cars less than the average weight have a value < 1 and cars more
    than the average weight have a value > 1, making it ideal for the `cex` parameter
    to scale the size of the plotted points accordingly (refer to [Chapter 7](ch07.xhtml#ch07)).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个对象是按样本均值缩放的汽车重量向量。这会创建一个向量，其中小于平均重量的汽车值小于1，大于平均重量的汽车值大于1，使得它非常适合用于`cex`参数来相应地缩放绘制点的大小（参见[第7章](ch07.xhtml#ch07)）。
- en: Let’s start by focusing on some more graphical parameters usually used in the
    first instance of a call to `plot`, paving the way for using the `box` and `axis`
    commands. Executing the following line gives you the default appearance of the
    plot and its box, axes, and labeling; this is shown as the leftmost image in [Figure
    23-8](ch23.xhtml#ch23fig8).
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先关注一些通常在首次调用`plot`时使用的图形参数，为使用`box`和`axis`命令铺平道路。执行以下代码将给出绘图的默认外观以及它的框线、坐标轴和标签；这在[第23-8图](ch23.xhtml#ch23fig8)中的最左侧图像中显示。
- en: '[PRE22]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: There are two axis “styles,” controlled by the graphical parameters `xaxs` and
    `yaxs`. Their sole purpose is to decide whether to impose the small amount of
    additional horizontal and vertical buffer space that’s present at the ends of
    each axis to prevent points being chopped off at the end of the plotting region.
    The default, `xaxs="r"` and `yaxis="r"`, is to include that space. The alternative,
    setting one or both of these to `"i"`, instructs the plot region to be *strictly*
    defined by the upper and lower limits of the data (or by those optionally supplied
    to `xlim` and/or `ylim`), that is, with *no* additional padding space.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种坐标轴“样式”，由图形参数`xaxs`和`yaxs`控制。它们的唯一目的是决定是否在每个坐标轴的末端加上少量的水平和垂直缓冲空间，以防止数据点被截断。默认设置`xaxs="r"`和`yaxs="r"`会包括这些空间。另一种选择是将其中一个或两个设置为`"i"`，指示绘图区域*严格*由数据的上下限（或由`xlim`和/或`ylim`可选提供的限值）定义，也就是*没有*额外的填充空间。
- en: For example, the following line produces the middle plot in [Figure 23-8](ch23.xhtml#ch23fig8).
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，下面这行代码会生成图[23-8](ch23.xhtml#ch23fig8)中的中间图。
- en: '[PRE23]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This plot is almost the same as the default, but note now that there’s no padding
    space at the end of the axes; the most extreme data points sit right on the axes.
    Generally, the default axis style `"r"` is fine, but on occasions where you need
    finer control over the axes’ scales and the corresponding plot region, that additional
    buffer space can be problematic. On those occasions, you’ll often see `xlim`/`ylim`
    being used in conjunction with `xaxs="i"`/`yaxs="i"`.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图与默认设置几乎相同，但请注意，现在坐标轴的末端没有填充空间；最极端的数据点正好位于坐标轴上。通常情况下，默认的坐标轴样式`"r"`是可以的，但在需要对坐标轴的刻度和相应的绘图区域进行更精细控制的情况下，额外的缓冲空间可能会带来问题。在这些情况下，你通常会看到`xlim`/`ylim`与`xaxs="i"`/`yaxs="i"`一起使用。
- en: '![image](../images/f23-08.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-08.jpg)'
- en: '*Figure 23-8: Plotting MPG against horsepower for the* `mtcars` *data; point
    size proportional to car weight, using a call to* `plot` *only. Left: Default
    appearance. Middle: Setting* `xaxs="i"` *and* `yaxs="i"` *to prevent the buffer
    spacing on the limits of the axes. Right: Using* `xaxt`, `yaxt`, `xlab`, `ylab`*,
    and* `bty` *to suppress all box, axis, and label drawing (alternatively achieved
    by setting* `axes=FALSE` *and* `ann=FALSE`*).*'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '*图23-8：绘制`mtcars`数据集中的马力与英里每加仑的关系；点的大小与汽车重量成比例，仅使用`plot`进行绘制。左：默认外观。中：设置`xaxs="i"`和`yaxs="i"`，以防止坐标轴末端的缓冲空间。右：使用`xaxt`、`yaxt`、`xlab`、`ylab`和`bty`来抑制所有框架、坐标轴和标签的绘制（也可以通过设置`axes=FALSE`和`ann=FALSE`来实现）。*'
- en: If you want total control over the specific appearance of any boxes, axes, and
    their labels, you’ll want to start a plot with none of these and add them as per
    your design. The rightmost plot in [Figure 23-8](ch23.xhtml#ch23fig8) is the result
    of suppressing the default drawing of these by a call to either
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望完全控制任何框架、坐标轴及其标签的具体外观，你可以从不添加这些元素的绘图开始，然后根据设计逐步添加。图[23-8](ch23.xhtml#ch23fig8)中的最右侧图即是通过调用来抑制这些默认绘制的结果。
- en: '[PRE24]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: or
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 或者
- en: '[PRE25]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: You can achieve this either by setting the parameters `xaxt`, `yaxt`, and `bty`
    to `"n"` and setting the default axis labels `xlab` and `ylab` to the empty string
    `""`, or by simply setting both `axes` and `ann` to `FALSE` (the former suppressing
    all axes and the box, the latter suppressing any annotation). Although the first
    way might seem overcomplicated, it affords you greater flexibility in suppressing
    each aspect of a given plot (as opposed to the “total” suppression enforced by
    the second approach).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过将参数`xaxt`、`yaxt`和`bty`设置为`"n"`，并将默认的坐标轴标签`xlab`和`ylab`设置为空字符串`""`，或者简单地将`axes`和`ann`都设置为`FALSE`来实现这一点（前者抑制所有坐标轴和框架，后者抑制所有注释）。尽管第一种方式看起来可能有些复杂，但它能提供更大的灵活性，允许你逐个抑制给定绘图的每个方面（与第二种方法通过“完全”抑制来实现不同）。
- en: '***23.4.2 Customizing Boxes***'
  id: totrans-168
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.4.2 自定义框架***'
- en: When you’re starting with a suppressed-box or suppressed-axis plot, to add a
    box specific to the current plot region in the active graphics device, you use
    `box` and specify its type with `bty`. For example, if you start with a plot like
    the one on the right of [Figure 23-8](ch23.xhtml#ch23fig8) (just run the most
    recent line of code to get this), then additionally calling the following line
    provides you with the image given on the left of [Figure 23-9](ch23.xhtml#ch23fig9).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 当你从一个抑制框或抑制坐标轴的图开始时，要在当前活动图形设备的图形区域中添加特定的框，你可以使用`box`并通过`bty`指定其类型。例如，如果你从像[图
    23-8](ch23.xhtml#ch23fig8)右侧那样的图开始（只需运行最新一行代码即可得到此图），那么再调用以下代码将会给你呈现[图 23-9](ch23.xhtml#ch23fig9)左侧的图像。
- en: '[PRE26]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The `bty` argument is supplied a single character: `"o"` (default), `"l"`,
    `"7"`, `"c"`, `"u"`, `"]"`, or `"n"`. The help file entry for `bty` in `?par`
    tells you that based on one of these values, the resulting box boundaries will
    follow the appearance of the corresponding uppercase letter, with the exception
    of `"n"` (which, as you saw a moment ago, will suppress the box).'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`bty`参数接受一个单一字符值：`"o"`（默认值）、`"l"`、`"7"`、`"c"`、`"u"`、`"]"`或`"n"`。在`?par`的帮助文件中，`bty`的条目告诉你，基于这些值之一，结果框的边界将遵循相应大写字母的外观，`"n"`除外（正如你刚才看到的，它将抑制框的显示）。'
- en: '![image](../images/f23-09.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-09.jpg)'
- en: '*Figure 23-9: Various box configurations added to the* `mtcars` *scatterplot*'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-9: 向`mtcars`散点图添加的各种框配置*'
- en: 'You can use other relevant parameters that you’ve met already, such as `lty`,
    `lwd`, and `col`, to further control the appearance of a box. Replot the data
    as on the right of [Figure 23-8](ch23.xhtml#ch23fig8) and then call the following
    to produce the image in the middle of [Figure 23-9](ch23.xhtml#ch23fig9):'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用之前学过的其他相关参数，如`lty`、`lwd`和`col`，进一步控制框的外观。重新绘制数据，如[图 23-8](ch23.xhtml#ch23fig8)右侧所示，然后调用以下代码可以生成[图
    23-9](ch23.xhtml#ch23fig9)中间的图像：
- en: '[PRE27]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The final example on the right of [Figure 23-9](ch23.xhtml#ch23fig9) is created
    with this line:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 23-9](ch23.xhtml#ch23fig9)右侧的最终示例是通过以下代码创建的：'
- en: '[PRE28]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '***23.4.3 Customizing Axes***'
  id: totrans-178
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.4.3 自定义坐标轴***'
- en: 'Once you have the box the way you want it, you can focus on the axes. The `axis`
    function allows you to control the addition and appearance of an axis on any of
    the four sides of the plot region in greater detail. The first argument it takes
    is `side`, provided with a single integer: `1` (bottom), `2` (left), `3` (top),
    or `4` (right). These numbers are consistent with the positions of the relevant
    margin-spacing values when you’re setting graphical parameter vectors like `mar`.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你将框调整到你想要的样子，你就可以专注于坐标轴了。`axis`函数允许你更详细地控制在图形区域的四个边上添加和显示坐标轴。它的第一个参数是`side`，并接受一个单一的整数：`1`（底部）、`2`（左侧）、`3`（顶部）或`4`（右侧）。这些数字与设置图形参数向量（如`mar`）时相关的边距间隔值的位置一致。
- en: The first thing you might want to change on an axis is where the tick marks
    are drawn. By default, R uses the built-in function `pretty` to find a “neat”
    sequence of values for the scale of each axis, but you can set your own by passing
    the `at` argument to `axis`. The following lines create the plot on the left of
    [Figure 23-10](ch23.xhtml#ch23fig10).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想要在坐标轴上首先改变的是刻度标记的位置。默认情况下，R使用内置函数`pretty`来找到每个坐标轴尺度的“整洁”值序列，但你也可以通过传递`at`参数到`axis`来设置自己的刻度标记。以下代码生成了[图
    23-10](ch23.xhtml#ch23fig10)左侧的图。
- en: '[PRE29]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: First, an evenly spaced sequence of 10 values spanning the range of `hp` is
    stored as `hpseq`. The initial call to `plot` suppresses the *x*-axis, the box,
    and any default axis labels; however, the *y*-axis is permitted to appear as per
    its default. Then `axis` is instructed to draw the *x*-axis (`side=1`), with tick
    marks at `hpseq`. To provide a comparison to that, an axis is also drawn along
    the top (`side=3`), but this time the tick marks are drawn at `hpseq` after it’s
    rounded to the nearest integer.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，存储了一个均匀分布的10个值的序列，这些值跨越了`hp`的范围，并命名为`hpseq`。初始的`plot`调用抑制了*x*轴、框架和任何默认的轴标签；然而，*y*轴仍然按默认方式显示。接着，`axis`被指示在*x*轴上绘制（`side=1`），并在`hpseq`的位置绘制刻度标记。为了与之对比，还会在顶部（`side=3`）绘制一个坐标轴，但这次刻度标记是根据`hpseq`四舍五入到最接近的整数后绘制的。
- en: '![image](../images/f23-10.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-10.jpg)'
- en: '*Figure 23-10: Customizing axes of the* `mtcars` *scatterplot*'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-10: 自定义`mtcars`散点图的坐标轴*'
- en: As you can see on the left of the figure, the custom *x*-axis I’ve created on
    the bottom shows 10 tick marks at the sequence of values supplied to `at`. R may
    suppress some of the labels so they don’t overlap one another, which is what has
    occurred here. Since these “decimal” values mightn’t be aesthetically pleasing,
    the axis that’s been drawn along the top has tick marks drawn at the nearest integers
    of `hpseq`, achieved using `round` in the final call to `axis` shown earlier.
    Although, strictly speaking, this now means that the tick marks are no longer
    exactly evenly spaced, the rounded values mean shorter default axis labels that
    can all be displayed in the current device.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如图左侧所示，我在底部创建的自定义 *x* 轴显示了 `at` 提供的值序列中的 10 个刻度标记。R 可能会抑制一些标签，以避免它们相互重叠，这就是此处发生的情况。由于这些“十进制”值可能不太符合美观，沿顶部绘制的坐标轴则在
    `hpseq` 的最接近整数位置绘制了刻度标记，这是通过在前面显示的最终 `axis` 调用中的 `round` 函数实现的。严格来说，这意味着刻度标记不再完全均匀分布，但通过四舍五入，默认的坐标轴标签更短，可以在当前设备中完全显示。
- en: You can see from these difficulties that tick mark locations are generally best
    left to R, unless you have specific axis values that you know you want marked
    out—you’ll see an example of this in [Section 23.6](ch23.xhtml#ch23lev1sec81).
    For now, let’s look at some other tweaks you can make to your axes. In particular,
    the `tcl` (length of the ticks), `las` (orientation of the labels), and `mgp`
    (axis spacing) parameters are arguably among those more frequently used. The following
    code creates the plot on the right of [Figure 23-10](ch23.xhtml#ch23fig10).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些困难中可以看出，刻度标记的位置通常最好交给 R 来处理，除非你有特定的坐标值并且明确知道要标记出来——你将在[第 23.6 节](ch23.xhtml#ch23lev1sec81)看到这个例子的展示。现在，让我们看一下你可以对坐标轴进行的一些其他调整。特别是，`tcl`（刻度线的长度）、`las`（标签的方向）和
    `mgp`（坐标轴的间距）这几个参数无疑是最常用的。以下代码创建了[图 23-10](ch23.xhtml#ch23fig10)右侧的图表。
- en: '[PRE30]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: After a new sequence—`hpseq2`—is defined as all integers that lie within the
    recorded range of the data and are evenly spaced by 25 units, the plot is initialized.
    The box and axes are suppressed, but the default variable titles (`mpg` and `hp`)
    along the axes remain.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个新的序列—`hpseq2`—它包含所有落在数据记录范围内且相隔 25 个单位的整数后，图表被初始化。盒子和坐标轴被隐藏，但默认的变量标题（`mpg`
    和 `hp`）仍然沿着坐标轴显示。
- en: Now, an L-shaped box and the *y*-axis (`side=2`) are added. In the latter, the
    `tcl` parameter governs the length of each tick mark in “parallel lines of text”
    (recall this is a standard unit measurement for margin spacing in an R plot);
    it defaults to `-0.5`. When the value is negative, it draws the tick marks away
    from the plot region; when it’s positive, the tick marks are drawn inward. For
    this `side=2` axis, `tcl=-2`, meaning that the ticks will point outward from the
    plot but be four times the length they usually are (two whole lines of text as
    opposed to half a line).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，添加了一个 L 形的框和 *y* 轴（`side=2`）。在后者中，`tcl` 参数控制每个刻度线在“平行文本行”中的长度（请回想，这是 R 图表中边距间隔的标准单位测量）；它的默认值是
    `-0.5`。当值为负时，它会将刻度线绘制到图表区域外；当值为正时，刻度线则会绘制到图表内部。对于这个 `side=2` 轴，`tcl=-2`，意味着刻度线会从图表外侧指向，但长度是通常的四倍（相当于两整行文本，而不是半行文本）。
- en: The `las` parameter controls the way the labels for each tick mark are oriented;
    setting it to `1` instructs R to produce all tick labels *horizontally*, regardless
    of axis side. The default, `las=0`, writes all labels *parallel* to the corresponding
    axis; the alternative `las=2` means labels are always *perpendicular* to the corresponding
    axes; and using `las=3` orients all labels to be read *vertically*, regardless
    of axis.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '`las` 参数控制每个刻度标签的方向；将其设置为 `1` 指示 R 将所有刻度标签 *水平* 显示，无论坐标轴在哪一侧。默认值 `las=0` 会将所有标签
    *与相应的坐标轴平行*；另一种选择 `las=2` 表示标签总是 *垂直* 显示，且与坐标轴垂直；使用 `las=3` 则会将所有标签设置为 *垂直* 显示，无论坐标轴位置如何。'
- en: 'Next up, the `mgp` parameter controls three further aspects of axis spacing
    and, as such, is supplied a vector of length 3 as per the following definition:
    `c(axis title`,axis labels,axis line). Once more, these arguments are expressed
    in “lines of text.” The default value of `mgp` is `c(3,1,0)`—meaning that in every
    axis you’ve seen so far, the title has sat three lines of text away from the plot
    region, the tick mark labels one line of text away, and the axis line itself zero
    lines of text away from the plot region (so it’s flush with any drawn plot region
    box). When used in `axis`, only the second and third elements of `mpg` are relevant.
    In the vertical axis in the plot on the right of [Figure 23-10](ch23.xhtml#ch23fig10),
    the only alteration from the default was to set the second element (spacing of
    the axis labels) to `2.5`—pushing the axis labels out to the left, further away
    from the plot region. The tick marks themselves are considerably lengthened by
    `tcl`, so this is required to avoid the axis tick mark labels going through those
    ticks. Try replotting the image and that axis, but without specifying `mgp`, and
    you’ll see that unappealing result.'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，`mgp` 参数控制轴间距的三个方面，因此它被提供一个长度为 3 的向量，定义如下：`c(轴标题, 轴标签, 轴线)`。这些参数仍然以“文本行”表示。`mgp`
    的默认值为 `c(3,1,0)`——这意味着，在你看到的每个轴中，标题距离绘图区域有三行文本，刻度标签距离绘图区域一行文本，而轴线本身距离绘图区域没有文本行（即它与任何绘制的绘图区域框对齐）。当在
    `axis` 中使用时，只有 `mgp` 的第二个和第三个元素是相关的。在 [图 23-10](ch23.xhtml#ch23fig10) 右侧的绘图中，垂直轴唯一的变化是将第二个元素（轴标签的间距）设置为
    `2.5`——将轴标签推向左侧，远离绘图区域。刻度标记本身由于 `tcl` 被显著延长，因此需要进行此调整，以避免轴刻度标签穿过这些刻度。尝试重新绘制图像和该轴，但不指定
    `mgp`，你将看到不太理想的效果。
- en: Moving to the addition of the *x*-axis (`side=1`), you can see tick marks at
    `hpseq2` being placed via `at`. This time, a positive value has been supplied
    to `tcl`, instructing the axis to have *inward*-facing tick marks of 1.5 lines
    of text in length. In `mpg`, note that the third element of the vector is now
    set to `1`, meaning you want the axis line itself to sit one line of text away
    from the plot region. Looking at the right of [Figure 23-10](ch23.xhtml#ch23fig10),
    you can see that the entire axis has been moved downward, away from the plot region.
    To account for this in terms of the spacing of the tick mark labeling, the second
    element of `mgp` has been increased a little from its default, to be `1.5`.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 移动到 *x* 轴（`side=1`），你可以看到 `hpseq2` 上的刻度标记通过 `at` 被放置。这一次，向 `tcl` 提供了一个正值，指示轴线具有
    *向内* 的刻度标记，长度为 1.5 行文本。在 `mpg` 中，注意向量的第三个元素现在设置为 `1`，意味着你希望轴线本身距离绘图区域一行文本的距离。看向
    [图 23-10](ch23.xhtml#ch23fig10) 的右侧，你可以看到整个轴线已被向下移动，远离绘图区域。为了适应这种刻度标记标签的间距，`mgp`
    的第二个元素已稍微增大，从默认值调整为 `1.5`。
- en: '**23.5 Specialized Text and Label Notation**'
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**23.5 专门的文本和标签表示法**'
- en: Now you’ll investigate some immediately accessible tools for controlling fonts
    and displaying special notation, such as Greek symbols and mathematical expressions.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将探讨一些可以立即使用的工具，用于控制字体和显示特殊符号，如希腊字母和数学表达式。
- en: '***23.5.1 Font***'
  id: totrans-195
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.5.1 字体***'
- en: 'The displayed font is controlled by two graphical parameters: `family` for
    the specific font family and `font`, an integer selector for controlling bold
    and italic typeface.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 显示字体由两个图形参数控制：`family`（特定字体系列）和 `font`（控制粗体和斜体的整数选择器）。
- en: Available fonts depend on both your operating system and the graphics device
    you’re using. That said, there are three generic families—`"sans"` (the default),
    `"serif"`, and `"mono"`—that are always available. These are paired with the four
    possible values of `font`—`1` (normal text, default), `2` (bold), `3` (italic),
    and `4` (bold and italic). You can set these two graphical parameters universally
    for a device using `par`, but like the use of `xpd`, it’s just as common (if not
    more so) to set `family` and `font` in the relevant annotation functions.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 可用字体取决于你的操作系统和你使用的图形设备。不过，有三种通用字体系列——`"sans"`（默认字体）、`"serif"` 和 `"mono"`——是始终可用的。这些字体系列可以与
    `font` 的四个可能值配合使用——`1`（正常文本，默认）、`2`（粗体）、`3`（斜体）和 `4`（粗体和斜体）。你可以通过 `par` 为设备统一设置这两个图形参数，但像使用
    `xpd` 一样，在相关的注释函数中设置 `family` 和 `font` 同样常见（如果不是更常见的话）。
- en: '[Figure 23-11](ch23.xhtml#ch23fig11) shows you some variants alongside the
    corresponding values of `family` and `font`. To create it, start with an empty
    plot region with preset *x*- and *y*-limits, created with the following:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 23-11](ch23.xhtml#ch23fig11)展示了几种变体，并显示了相应的`family`和`font`值。要创建它，从一个带有预设*x*和*y*坐标范围的空白图区域开始，使用以下代码：'
- en: '[PRE31]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Then, the image with six possible variants is completed by executing the following
    lines:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过执行以下几行代码，完成了六种可能的变体图像：
- en: '[PRE32]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Here, `text` is used to place the content at predetermined coordinates, and
    `mtext` is used to add to the top figure margin.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`text`用于在预定的坐标处放置内容，`mtext`则用于将内容添加到顶部图形的边距中。
- en: '![image](../images/f23-11.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-11.jpg)'
- en: '*Figure 23-11: Displaying font styles through use of the* `family` *and* `font`
    *graphical parameters*'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-11：通过使用* `family` *和* `font` *图形参数显示字体样式*'
- en: '***23.5.2 Greek Symbols***'
  id: totrans-205
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.5.2 希腊字母***'
- en: For statistically or mathematically technical plots, annotation may occasionally
    require Greek symbols or mathematical markup. You can display these using the
    `expression` function, which, among other things, is capable of invoking the `plotmath`
    mode of R ([Murrell and Ihaka, 2000](ref.xhtml#ref50); [Murrell, 2011](ref.xhtml#ref49)).
    Use of `expression` returns a special object that has a class of the same name
    and can subsequently be passed to any argument in a plotting function that requires
    the character string to be displayed.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 对于统计或数学技术绘图，注释有时需要使用希腊字母或数学标记。你可以使用`expression`函数来显示这些内容，它除了其他功能外，还能调用R的`plotmath`模式（[Murrell和Ihaka，2000](ref.xhtml#ref50);
    [Murrell，2011](ref.xhtml#ref49)）。使用`expression`返回一个特殊的对象，其类名相同，随后可以将该对象传递给任何需要字符字符串的绘图函数的参数。
- en: 'Focusing for the moment on Greek symbols, consider [Figure 23-12](ch23.xhtml#ch23fig12),
    which is produced with the following code:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 目前我们集中讨论希腊字母，请参见[图 23-12](ch23.xhtml#ch23fig12)，它是通过以下代码生成的：
- en: '[PRE33]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '![image](../images/f23-12.jpg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-12.jpg)'
- en: '*Figure 23-12: Displaying Greek symbols using* `expression`'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-12：使用* `expression` *显示希腊字母*'
- en: If you just want a single special character by itself, then something like `expression(alpha)`
    is all you need to produce *β* in the plot, as in the first call to `text` shown
    in the code chunk. Note that the specification of the special characters is done
    *without* quotes around the name of the desired symbol. More commonly, however,
    you’ll want a character to appear alongside other components, such as regular
    text or in an equation. For that, you need to use `paste` inside the call to `expression`,
    separating the components with commas. These are shown in the remaining three
    calls to `text`.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只想单独显示一个特殊字符，那么像`expression(alpha)`这样的写法就足够了，它会在图中显示*β*，如代码片段中的第一次调用`text`所示。请注意，特殊字符的指定是*没有*引号的，直接使用所需符号的名称。然而，更常见的情况是你希望字符与其他组件一起出现，比如常规文本或在公式中。为此，你需要在`expression`的调用中使用`paste`，用逗号分隔各个组件。它们在后面三次调用`text`中得以体现。
- en: You can use `cex` to control size, though use of `family` and `font` affects
    only quoted regular text, not symbols, as the final call to `text` demonstrates.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`cex`来控制大小，尽管`family`和`font`的使用仅影响普通文本（引用的文本），而不影响符号，正如最后一次调用`text`所示。
- en: The `title` function, which allows you to add axis and main titles, is then
    used to add the title “Gr*ɛɛ*k” by supplying the corresponding `expression` to
    `main`. I use `cex.main=2` in the same call to double its size (the slightly different
    tag `cex.main` is required there to distinguish between the size of the main title
    and any axis titles, controlled via `cex.lab`).
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用`title`函数，它允许你添加轴标题和主标题，通过提供相应的`expression`给`main`来添加标题“Gr*ɛɛ*k”。在同一次调用中，我使用了`cex.main=2`来将其大小加倍（稍有不同的标签`cex.main`在这里是必需的，用来区分主标题的大小与轴标题的大小，后者由`cex.lab`控制）。
- en: '***23.5.3 Mathematical Expressions***'
  id: totrans-214
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***23.5.3 数学表达式***'
- en: 'Formatting entire mathematical expressions to appear in R plots is a bit more
    complicated and is reminiscent of using markup languages like LAT[E]X. Because
    of this, I won’t give a full exposition of the syntax required here, but I’ll
    provide some examples of the kinds of things that are possible, as shown in [Figure
    23-13](ch23.xhtml#ch23fig13). To create the image, I first defined four expression
    objects as follows:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 格式化整个数学表达式以在R绘图中显示稍微复杂一些，且让人联想到使用LAT[E]X等标记语言。由于这个原因，我在这里不会详细介绍所需的语法，但我会提供一些可能的示例，如[图
    23-13](ch23.xhtml#ch23fig13)所示。为了创建该图像，我首先定义了四个表达式对象，如下所示：
- en: '[PRE34]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'And then I used them in the following code:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我在以下代码中使用了它们：
- en: '[PRE35]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '![image](../images/f23-13.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-13.jpg)'
- en: '*Figure 23-13: Some examples of typesetting mathematical expressions in R plots*'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '*图23-13：在R绘图中排版数学表达式的一些示例*'
- en: 'All Greek and mathematical markup is contained within a call to `expression`.
    It’s necessary to use `paste` if you require separate components (separated by
    commas), some of which may or may not be regular text (in other words, in quotes)
    to produce the final result. Here are some key notes:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的希腊字母和数学标记都包含在对`expression`的调用中。如果需要分离的组件（由逗号分隔），其中一些可能是常规文本（即需要用引号包围的内容），则必须使用`paste`来生成最终结果。以下是一些关键的注意事项：
- en: • Superscripts are given by `^` and subscripts by `[ ]`; for example, `c^2`
    provides c² in `expr1`, and the `a[1]^2` component provides ![image](../images/f0601-01a.jpg).
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: • 上标由`^`表示，下标由`[ ]`表示；例如，`c^2`在`expr1`中提供c²，而`a[1]^2`组件提供如图所示的内容：![image](../images/f0601-01a.jpg).
- en: • You can group components with parentheses `( )`, which are visible (for example,
    the `(1-pi)^(n-x[i])` component of `expr2`), or with braces `{ }`, which aren’t
    (for example, the `pi^{x[i]}` component).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: • 你可以使用圆括号`( )`将组件分组，这些圆括号是可见的（例如，`expr2`中的`(1-pi)^(n-x[i])`组件），或者使用大括号`{ }`，这些大括号不可见（例如，`pi^{x[i]}`组件）。
- en: • Italicized alphabetic variables are drawn with `italic()`; for example, `italic(n)`
    produces *n* in `expr3`.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: • 斜体字母变量使用`italic()`绘制；例如，`italic(n)`在`expr3`中产生*n*。
- en: '• Constructs for common arithmetic operators already exist, such as `sum( ,
    , )` and `frac( , )`; for example, in `expr3`, calling `sum(italic(x)[italic(i)],italic(i)==1,italic(n))`
    produces a result that looks like this:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: • 常见的算术操作符构造已经存在，如`sum( , , )`和`frac( , )`；例如，在`expr3`中，调用`sum(italic(x)[italic(i)],italic(i)==1,italic(n))`会生成一个看起来像这样的结果：
- en: '![image](../images/f0601-01.jpg)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0601-01.jpg)'
- en: 'and `frac(italic(x)[1]+...+italic(x)[italic(n)],italic(n))` produces an expression
    like this:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 而`frac(italic(x)[1]+...+italic(x)[italic(n)],italic(n))`则生成如下表达式：
- en: '![image](../images/f0601-02.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0601-02.jpg)'
- en: • There are additional markup tools for proper formatting of expressions, such
    as combining regular text in quotes directly next to mathematical markup and creating
    spaces between components without needing to insert quotes. The need for these
    depends where the markup contents are exactly (in other words, as a stand-alone
    component of the call to `paste` or as a component of an operator tool like `frac`).
    See, for example, the `")"==frac( , )` part of `expr4`, and the space-separation
    of the two components `x^{alpha-1}~(1-x)^{beta-1}` with a `~` (these sit on the
    numerator of the fraction).
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: • 还有其他标记工具用于正确格式化表达式，例如将引号中的常规文本与数学标记直接结合，并在组件之间创建空格而无需插入引号。这些需求取决于标记内容的位置（换句话说，作为`paste`调用的独立组件，或者作为操作符工具如`frac`的组件）。例如，查看`expr4`中的`")"==frac(
    , )`部分，以及通过`~`符号在`x^{alpha-1}~(1-x)^{beta-1}`之间分隔空格（这些位于分数的分子部分）。
- en: There’s an extensive amount of functionality built in to R for this type of
    string formatting in graphical displays that I haven’t covered here. If you’re
    interested in seeing more, see the help file accessed by entering `?plotmath`
    at the prompt as a first step. There’s also an extremely useful demonstration,
    which you can view in R by entering `demo(plotmath)`, that shows off much of what’s
    possible, alongside the relevant syntax for `expression`.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: R中内置了大量的功能来进行此类字符串格式化，以便在图形显示中使用，这里没有涉及。如果你有兴趣查看更多内容，可以通过在提示符下输入`?plotmath`来访问帮助文件作为第一步。另外，R中还有一个非常有用的演示，你可以通过输入`demo(plotmath)`来查看，它展示了许多可能的功能，以及`expression`的相关语法。
- en: '**23.6 A Fully Annotated Scatterplot**'
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**23.6 完整注释的散点图**'
- en: To provide a final example that covers most of the concepts you’ve considered
    so far, let’s create a detailed plot of the MPG by horsepower data that was used
    in [Sections 23.4.1](ch23.xhtml#ch23lev2sec232) to [23.4.3](ch23.xhtml#ch23lev2sec234).
    The images in [Figure 23-14](ch23.xhtml#ch23fig14) show the final result as the
    largest plot on the bottom, with three smaller interim plots to illustrate the
    various stages of production appearing along the top.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供一个包含你迄今为止所考虑的大部分概念的最终示例，让我们创建一个详细的MPG与马力数据的散点图，该数据在[23.4.1节](ch23.xhtml#ch23lev2sec232)到[23.4.3节](ch23.xhtml#ch23lev2sec234)中使用。
    [图23-14](ch23.xhtml#ch23fig14)中的图像展示了最终结果，底部是最大的图，而顶部是三个较小的中间图，展示了不同制作阶段。
- en: '![image](../images/f23-14.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-14.jpg)'
- en: '*Figure 23-14: A detailed version of the* `mtcars` *scatterplot of MPG by horsepower,
    with point size proportional to weight*'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '*图23-14：一个详细的*`mtcars`*散点图，展示了MPG与马力的关系，点的大小与重量成比例*'
- en: 'First, ensure you have the objects `mpg`, `hp`, `wtcex`, and `hpseq2` (defined
    in [Sections 23.4.1](ch23.xhtml#ch23lev2sec232) and [23.4.3](ch23.xhtml#ch23lev2sec234))
    ready in your workspace, since you’ll use them to ease the length of the code.
    Here they are again:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，确保你的工作空间中有`mpg`、`hp`、`wtcex`和`hpseq2`对象（在[第23.4.1节](ch23.xhtml#ch23lev2sec232)和[第23.4.3节](ch23.xhtml#ch23lev2sec234)中定义），因为你将使用它们来简化代码长度。这里它们再次列出：
- en: '[PRE36]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The plot, with a slightly wider right margin than default and a U-shaped box,
    is started with the following code:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图形，具有稍微宽一点的右边距和U形框，通过以下代码开始：
- en: '[PRE37]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: This provides the top-left image of [Figure 23-14](ch23.xhtml#ch23fig14). I’ve
    used `dev.new` to explicitly open a new graphics device on my machine, which defaults
    to 7 × 7 inches. You can use `width` and `height` arguments supplied to `dev.new`
    to alter this on your machine if you want.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 这提供了[图23-14](ch23.xhtml#ch23fig14)的左上角图像。我使用了`dev.new`在我的计算机上显式打开了一个新的图形设备，默认大小为7
    × 7英寸。如果你想，可以使用`dev.new`提供的`width`和`height`参数来改变设备的大小。
- en: 'Now add some axes:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 现在添加一些坐标轴：
- en: '[PRE38]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: These two lines add the left vertical axis for MPG; the tick marks are lengthened
    a little using `tcl`, their labels are made horizontal through `las`, and a `"mono"`
    font is requested. For the horizontal axis (horsepower), longer outward tick marks
    are drawn at the values in `hpseq2`, but their labels are suppressed by setting
    `labels=FALSE`. You’ll populate those in a moment.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这两行代码为MPG添加了左侧垂直坐标轴；通过`tcl`稍微延长了刻度线，使用`las`将刻度标签设置为水平，并请求使用`"mono"`字体。对于水平坐标轴（马力），在`hpseq2`中的值处绘制了更长的外部刻度线，但通过设置`labels=FALSE`将其标签隐藏。稍后你将填充这些标签。
- en: 'Rather than using MPG as a measure of fuel efficiency, many countries use “liters
    per one hundred kilometers” (L/100km). So, for their benefit, let’s say you want
    to provide a second vertical axis on the right of the plot that provides L/100km.
    To do this, you need the conversion formula. Based on a US gallon, an approximate
    conversion between the two is given by the following:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 很多国家并不使用MPG作为燃油效率的度量，而是使用“每百公里的升数”（L/100km）。因此，为了方便他们，假设你希望在图表的右侧提供第二个垂直坐标轴，标明L/100km。为此，你需要转换公式。基于美国加仑，以下是两者之间的近似转换：
- en: '![image](../images/f0603-01.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0603-01.jpg)'
- en: It turns out that this function is *involutory*. That is, to convert from MPG
    back to L/100km, simply swap those two variables in the equation.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 结果表明这个函数是*自反的*。也就是说，从MPG转换回L/100km，只需在公式中交换这两个变量。
- en: A little experimentation with the conversion formula, based on the limits of
    the observed MPG data, has given me a sensible collection of L/100km values at
    which to mark the right axis.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 根据观察到的MPG数据的范围，我对转换公式进行了一些实验，得到了一个合理的L/100km值集合，用来标记右侧坐标轴。
- en: '[PRE39]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Note that these are in decreasing order for convenience, since you can see
    that once you convert these to MPG, the results are increasing:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这些坐标轴是按降序排列的，为了方便起见，因为一旦你将这些值转换为MPG，结果将是递增的：
- en: '[PRE40]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: This makes sense—a smaller number for L/100km means a more fuel-efficient car.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 这是有道理的——L/100km的数字越小，意味着汽车的燃油效率越高。
- en: Why do you need the MPG version of these numbers? Well, remember that the plot
    itself is on the scale of MPG, so to instruct R to mark off the appropriate tick
    marks on the right side, you need the L/100km values in MPG “coordinates.”
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么需要这些数字的MPG版本呢？嗯，记住，图形本身是基于MPG刻度的，因此为了指示R在右侧标出适当的刻度线，你需要MPG“坐标系”中的L/100km值。
- en: With that done, one final call to `axis` leaves you with the top-middle plot
    in [Figure 23-14](ch23.xhtml#ch23fig14).
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些后，再次调用`axis`，你就得到了[图23-14](ch23.xhtml#ch23fig14)的顶部中间图像。
- en: '[PRE41]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Of particular note here is that you’ve used `at` to specify the tick marks on
    the MPG scale, at the values in `MPG.L100`, but since they correspond to the L/100km
    sequence in `L100`, it’s the latter vector that you supply to `labels` to actually
    label said tick marks.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这里特别值得注意的是，你使用了`at`来指定MPG刻度上的刻度线位置，位置在`MPG.L100`的值处，但由于它们对应于`L100`中的L/100km序列，因此你实际提供给`labels`的是后者向量，以便正确标记这些刻度线。
- en: Next, it’s time to annotate the axes with some titles and provide the labels
    for the tick marks on the horizontal axis. Before doing that, construct an `expression`
    for the MPG-to-L/100km conversion to clarify the right vertical axis.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，是时候为坐标轴添加一些标题，并为水平坐标轴上的刻度线提供标签了。在此之前，构建一个`expression`用于MPG到L/100km的转换，以便澄清右侧垂直坐标轴。
- en: '[PRE42]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: In `express.L100`, the `%~~%` provides an “approximately equal to” sign (≈),
    and `%*%` provides an explicit multiplication symbol (×).
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在`express.L100`中，`%~~%`表示“约等于”符号（≈），而`%*%`表示显式的乘法符号（×）。
- en: Then, by running the following lines, you get the top-right image in [Figure
    23-14](ch23.xhtml#ch23fig14).
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行以下代码行，你就可以在[图23-14](ch23.xhtml#ch23fig14)中看到右上方的图像。
- en: '[PRE43]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The first line provides a main title and *x*- and *y*-axis titles in a `"serif"`
    style. Then `mtext` places a `"serif"` version of the arithmetic expression just
    created in an appropriate position `line=3` on the right axis (`side=4`). The
    third line places the `"mono"`-style tick mark labels in `hpseq2` along the *x*-axis
    at the appropriate user coordinates in the same vector, with a vertical position
    of `7.5`, after a little trial and error. Since you’re using `text` to draw in
    the figure margin, you must set `xpd` to `TRUE`. Special to `text` is the optional
    `srt` graphical parameter, which allows you to rotate the labels. Here, they’ve
    been rotated `45` degrees.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行提供了主标题以及`x`和`y`轴的标题，采用了`"serif"`样式。接着，`mtext`将刚刚创建的算术表达式的`"serif"`版本放置在右轴的适当位置（`side=4`），`line=3`。第三行将`"mono"`样式的刻度标签放置在`hpseq2`上，沿着`x`轴按适当的用户坐标和竖直位置`7.5`放置（经过一些反复试验）。由于你使用`text`在图形边距中绘制文本，你必须将`xpd`设置为`TRUE`。`text`特有的可选图形参数`srt`允许你旋转标签，在这里它们被旋转了`45`度。
- en: You’re now ready to put the final touches on the plot. So far, the scaled sizes
    of the points according to car weight have been ignored. It’d be helpful to provide
    at least minimal information about that and other features that can aid in interpretation
    of the relationship (especially since there are two vertical axes), like an overlaid
    grid.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经准备好对图表进行最后的修饰了。到目前为止，点的大小按照汽车重量的比例被忽略了。提供至少一些关于这一点以及其他有助于解释关系的特征（尤其是考虑到有两个垂直坐标轴）的信息会很有帮助，比如叠加的网格。
- en: Superimposition of a grid on such a plot is straightforward.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在这样的图表上叠加网格非常简单。
- en: '[PRE44]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: You can specify the number of cells along the horizontal and vertical axes using
    the optional arguments `nx` and `ny`, respectively; if not, R will draw the grid
    lines at what would be the default *x*- and *y*-axis tick marks (as I’ve let it
    do here). Other aesthetics can be altered in the usual way, using arguments such
    as `col` (color) and `lty` (line type).
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用可选参数`nx`和`ny`分别指定水平和垂直坐标轴的单元格数；如果不指定，R会在默认的*x*-和*y*-轴刻度位置绘制网格线（正如我在这里所做的）。其他美学效果可以按照常规方法通过`col`（颜色）和`lty`（线型）等参数进行修改。
- en: The fun part is now trying to work out how to reference the sizes of the plotted
    points by the weights of the cars. There are a number of ways you might achieve
    this. For this last example, I’ll manhandle the `legend` function in an effort
    to produce the graphic. The following three lines provide the end result.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的部分是现在尝试通过汽车的重量来计算绘制点的大小。你可以通过多种方式实现这一点。在这个最后的示例中，我将直接操作`legend`函数，以便生成图形。以下三行代码提供了最终结果。
- en: '[PRE45]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: The legend is placed at user coordinates (250,30), and three points of the default
    `pch` type `1` are included—one large, one standard, and one small—using `pt.cex`
    set to `1.5`, `1`, and `0.5`, respectively. Instead of writing text labels for
    each of these three points by using the `legend` argument, I simply assign them
    to be empty strings made up of 10 spaces. What this does is widen the box around
    the legend, creating a space for what will instead accompany the three points—a
    small-headed arrow pointing upward and the word *Weight*. Finding suitable user
    coordinates for the arrow to fit inside the artificially empty legend box took
    a little trial and error, and I place the “Weight” text by invoking the interactive
    `locator` function as you saw used in [Section 23.3](ch23.xhtml#ch23lev1sec78).
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 图例被放置在用户坐标（250,30）处，包含三个默认`pch`类型为`1`的点——一个大点，一个标准点，一个小点——使用`pt.cex`分别设置为`1.5`、`1`和`0.5`。我并没有通过`legend`参数为这三个点写标签，而是将它们设置为空字符串，由10个空格组成。这样做的结果是扩大了图例周围的框，腾出空间给三个点添加的内容——一个朝上的小箭头和单词*Weight*。找到合适的用户坐标以便箭头能够适应人为创建的空白图例框需要一些反复试验，最后通过调用交互式`locator`函数（正如你在[第23.3节](ch23.xhtml#ch23lev1sec78)中看到的）来放置“Weight”文字。
- en: Playing with R functionality to produce intricate plots like this is an excellent
    way to start learning how to handle the traditional graphical abilities of the
    language. It’s not uncommon to use trial and error and little cheats to reach
    an end result, though of course that kind of thing comes at the expense of the
    robustness of your code. For example, resizing the graphics device even moderately
    and attempting to reproduce the `mtcars` scatterplot shown earlier will likely
    result in a displeasing misalignment of the arrow in the legend. If you want to
    learn more, the authoritative reference on graphics in R is arguably Murrell ([2011](ref.xhtml#ref49)),
    which is a good text to consult once you’re familiar with the fundamentals discussed
    here and want a comprehensive guide on all things visual in R.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 R 功能制作这种复杂的图形是学习如何处理语言的传统图形功能的一个很好的起点。通过反复试验和一些小技巧来达成最终结果并不罕见，尽管当然，这种方式会影响代码的健壮性。例如，即使适度地调整图形设备的大小，并尝试重新绘制前面展示的
    `mtcars` 散点图，可能会导致图例中箭头的不对齐。如果你想了解更多内容，关于 R 图形的权威参考书是 Murrell ([2011](ref.xhtml#ref49))，这是一本很好的教材，适合在你掌握了此处讨论的基础知识后，深入了解
    R 中所有与图形相关的内容。
- en: '**Exercise 23.2**'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.2**'
- en: 'For the following tasks, you’ll work with the diamond-pricing data as analyzed
    by Chu ([2001](ref.xhtml#ref13)). You’ll need an Internet connection for this.
    Read the data in and name the columns as you’ve done previously with the following:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下任务，你将使用 Chu ([2001](ref.xhtml#ref13)) 分析的钻石定价数据。你需要有互联网连接来完成此操作。读取数据并像之前一样命名列：
- en: R> dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: R> dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
- en: R> diamonds <- read.table(dia.url)
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: R> diamonds <- read.table(dia.url)
- en: R> names(diamonds) <- c("Carat","Color","Clarity","Cert","Price")
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: R> names(diamonds) <- c("克拉","颜色","清晰度","证书","价格")
- en: 'Open a new graphics device of 6 × 6 inches. Initialize the margin spacing to
    be zero, four, two, and zero lines on the bottom, left, top, and right of the
    plot region, respectively. Then, complete the following:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的图形设备，大小为 6 × 6 英寸。将图形区域的边距设置为底部、左侧、顶部和右侧分别为零行、四行、二行和零行。然后，完成以下操作：
- en: Produce side-by-side boxplots of the diamond prices in Singapore dollars (SGD$)
    split by certification. Suppress all axes and the surrounding box—note that the
    `boxplot` command requires you to set `frame=FALSE` for suppressing the box (as
    opposed to `bty="n"` in `plot`). Use the same command to provide an appropriate
    title.
  id: totrans-275
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成并排的箱线图，展示以认证分类的钻石价格（单位：新加坡元 SGD$）。隐藏所有坐标轴和周围的框架—请注意，`boxplot` 命令需要设置 `frame=FALSE`
    来隐藏框架（而不是 `plot` 中的 `bty="n"`）。使用相同的命令为图形添加合适的标题。
- en: Next, insert a vertical axis. The axis should have tick marks ranging from SGD$0
    to SGD$18000, progressing in steps of SGD$2000\. However, the axis should be clipped
    to the plotting region. The axis tick marks should point inward and be one line
    in length. The axis labels should sit only half a line away from the axis and
    should be horizontally readable.
  id: totrans-276
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，插入一个垂直轴。该轴的刻度范围从 SGD$0 到 SGD$18000，步长为 SGD$2000。然而，轴应当被裁剪到绘图区域内。刻度线应指向轴内，并且长度为一行。轴标签应距离轴线半行，并且应水平显示。
- en: Finally, use `locator` in conjunction with `text` to add an appropriate title
    sitting at the top of the *y*-axis; note that clipping will need to be relaxed.
    Use the same approach to add text, sitting inside each boxplot, denoting the corresponding
    certification (GIA, HRD, or IGI).
  id: totrans-277
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用 `locator` 和 `text` 结合来添加一个合适的标题，位于 *y* 轴的顶部；请注意，裁剪需要被放宽。使用相同的方法向每个箱线图内添加文本，表示相应的认证（如
    GIA、HRD 或 IGI）。
- en: 'My version of the plot looks like this:'
  id: totrans-278
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我的绘图版本如下所示：
- en: '![image](../images/f0606-01.jpg)'
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0606-01.jpg)'
- en: Now, open a new graphics device of 8 × 7 inches. Set the figure margins to be
    two, five, three, and five lines on the bottom, left, top, and right, respectively.
    Also allow one line of outer margin space on each side other than the bottom,
    which should get two lines of outer margin.
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开一个新的图形设备，大小为 8 × 7 英寸。将图形的边距设置为底部、左侧、顶部和右侧分别为两行、五行、三行和五行。还要在底部以外的每一侧留出一行外边距空间，而底部则应有两行外边距。
- en: Produce a scatterplot of diamond price on the vertical axis and carat weight
    on the horizontal axis. Use the colors red, green, and blue to distinguish the
    points according to certification. Suppress all axes, boxes, labels, and titles
    in the initial plot, but then add a U-shaped box.
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制一个散点图，将钻石价格放在纵轴上，克拉重量放在横轴上。使用红色、绿色和蓝色根据认证区分点。初始图中抑制所有轴线、框框、标签和标题，但随后添加一个 U
    形框。
- en: Add the horizontal axis. Use `axis` to place tick marks at an evenly spaced
    sequence of carat values between 0.2 and 1.1, in steps of 0.1\. Use a bold, italic,
    sans-style font for the labels and adjust the labels to be only half a line from
    the axis. Then add smaller, outward-facing tick marks between the existing ones.
    To do this, make a second call to the `axis` function and place the ticks at a
    sequence of values from 0.15 to 1.05 at steps of 0.1\. Set these secondary tick
    marks to have a length of one-quarter of a line and suppress the axis labels.
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加横轴。使用`axis`在0.2到1.1之间的克拉值上，以0.1为步长，均匀地放置刻度标记。为标签使用粗体、斜体、无衬线字体，并将标签调整为离轴线仅半行的距离。然后，在现有的刻度标记之间添加更小的、朝外的刻度标记。为此，第二次调用`axis`函数，将刻度放置在0.15到1.05之间的值上，步长为0.1。将这些次级刻度标记的长度设置为四分之一行，并抑制轴标签。
- en: Add the vertical axes. On the left, ticks should appear at SGD$1000–17000\.
    Labels should be horizontally readable and in the same font style as the horizontal
    axis. On the right, axis ticks should be made in the equivalent of US dollars
    (USD$) at the sequence USD$1000–11000 in steps of USD$1000 and should be labeled
    as such. To do this, use the conversion USD$ = 1.37 × SGD$. Label orientation
    and font should match the other axes.
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加纵轴。左侧的刻度应出现在SGD$1000到17000之间。标签应水平可读，并与横轴使用相同的字体风格。右侧的轴刻度应以美元（USD$）为单位，范围是USD$1000到11000，步长为USD$1000，并应标注为USD$。为此，使用转换公式
    USD$ = 1.37 × SGD$。标签方向和字体应与其他轴匹配。
- en: Fit a linear model of price on a quadratic polynomial of carat weight for the
    data. Provide a prediction of the model for a sequence of carat values spanning
    the range of the observed values; include estimation of a 95 percent prediction
    interval. Use this information to superimpose a gray solid line for the fitted
    values and gray dashed lines for the prediction interval upon the scatterplot.
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对数据的克拉重量进行二次多项式的线性模型拟合。为一系列克拉值提供该模型的预测，跨越观测值的范围；包括95%的预测区间估计。利用这些信息在散点图上叠加灰色实线表示拟合值，并用灰色虚线表示预测区间。
- en: Set up expression objects for labeling the approximate US dollar conversion
    and the regression equation. Name the conversion `expr1`; it should look something
    like USD$ ≈ 1.37 × SGD$. The regression equation should look similar to Price
    = *β[0]* + *β*[1]Carat + *β*[2]Carat²; name it `expr2`.
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置表达式对象，用于标注大约的美元转换和回归方程。将转换命名为`expr1`，它应类似于 USD$ ≈ 1.37 × SGD$。回归方程应类似于 Price
    = *β[0]* + *β*[1]Carat + *β*[2]Carat²；将其命名为`expr2`。
- en: Use `mtext` to add an appropriate main title and titles for all three individual
    axes. You may need to experiment a little with line depth for each one, as well
    as whether to write in the outer margin or the figure margin, depending on your
    own spacing preference. The rightmost axis title should make use of `expr1`.
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`mtext`添加适当的主标题以及三个单独坐标轴的标题。你可能需要稍微调整每个标题的行深度，以及是否在外边距或图形边距中书写，具体取决于你的间距偏好。最右边的轴标题应使用`expr1`。
- en: Either via trial and error to find appropriate coordinates or by using the `interactive.arrow`
    function from [Exercise 23.1](ch23.xhtml#ch23exc1), place an arrow pointing to
    the fitted polynomial regression line and label it with `expr2`.
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以通过试错找到合适的坐标，或者使用[第23.1节练习](ch23.xhtml#ch23exc1)中的`interactive.arrow`函数，放置一个指向拟合多项式回归线的箭头，并用`expr2`进行标注。
- en: Finally, use a call to `locator` to place a legend in any appropriate location,
    referencing the color of the points according to the appropriate certification.
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用`locator`调用将图例放置在任何合适的位置，参考根据认证标识的点的颜色。
- en: 'My version of the plot looks like this:'
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我的图表看起来是这样的：
- en: '![image](../images/f0608-01.jpg)'
  id: totrans-290
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0608-01.jpg)'
- en: '**Important Code in This Chapter**'
  id: totrans-291
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**本章节的重要代码**'
- en: '| **Function/operator** | **Brief description** | **First occurrence** |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| **功能/操作符** | **简要描述** | **首次出现** |'
- en: '| --- | --- | --- |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `dev.new` | Open new graphics device | [Section 23.1.1](ch23.xhtml#ch23lev2sec222),
    [p. 576](ch23.xhtml#page_576) |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
  zh: '| `dev.new` | 打开新的图形设备 | [第23.1.1节](ch23.xhtml#ch23lev2sec222), [第576页](ch23.xhtml#page_576)
    |'
- en: '| `dev.set` | Change active device | [Section 23.1.2](ch23.xhtml#ch23lev2sec223),
    [p. 577](ch23.xhtml#page_577) |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| `dev.set` | 更改活动设备 | [第23.1.2节](ch23.xhtml#ch23lev2sec223), [第577页](ch23.xhtml#page_577)
    |'
- en: '| `dev.off` | Close device | [Section 23.1.3](ch23.xhtml#ch23lev2sec224), [p.
    578](ch23.xhtml#page_578) |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| `dev.off` | 关闭设备 | [第23.1.3节](ch23.xhtml#ch23lev2sec224), [第578页](ch23.xhtml#page_578)
    |'
- en: '| `par` | Set graphical parameters | [Section 23.1.4](ch23.xhtml#ch23lev2sec225),
    [p. 579](ch23.xhtml#page_579) |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| `par` | 设置图形参数 | [第23.1.4节](ch23.xhtml#ch23lev2sec225), [第579页](ch23.xhtml#page_579)
    |'
- en: '| `layout` | Open new graphics device | [Section 23.1.4](ch23.xhtml#ch23lev2sec225),
    [p. 580](ch23.xhtml#page_580) |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| `layout` | 打开新的图形设备 | [第23.1.4节](ch23.xhtml#ch23lev2sec225), [第580页](ch23.xhtml#page_580)
    |'
- en: '| `box` | Add box to plot | [Section 23.2.1](ch23.xhtml#ch23lev2sec226), [p.
    583](ch23.xhtml#page_583) |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| `box` | 向图表添加框 | [第23.2.1节](ch23.xhtml#ch23lev2sec226), [第583页](ch23.xhtml#page_583)
    |'
- en: '| `mtext` | Write text in margins | [Section 23.2.2](ch23.xhtml#ch23lev2sec227),
    [p. 584](ch23.xhtml#page_584) |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| `mtext` | 在边距中写文本 | [第23.2.2节](ch23.xhtml#ch23lev2sec227), [第584页](ch23.xhtml#page_584)
    |'
- en: '| `locator` | Interactive coordinates | [Section 23.3.1](ch23.xhtml#ch23lev2sec229),
    [p. 587](ch23.xhtml#page_587) |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| `locator` | 交互式坐标定位 | [第23.3.1节](ch23.xhtml#ch23lev2sec229), [第587页](ch23.xhtml#page_587)
    |'
- en: '| `axis` | Add axis to plot | [Section 23.4.3](ch23.xhtml#ch23lev2sec234),
    [p. 594](ch23.xhtml#page_594) |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| `axis` | 向图表添加坐标轴 | [第23.4.3节](ch23.xhtml#ch23lev2sec234), [第594页](ch23.xhtml#page_594)
    |'
- en: '| `expression` | Render Greek/math in plot | [Section 23.5.2](ch23.xhtml#ch23lev2sec236),
    [p. 598](ch23.xhtml#page_598) |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| `expression` | 在图表中渲染希腊字母/数学表达式 | [第23.5.2节](ch23.xhtml#ch23lev2sec236),
    [第598页](ch23.xhtml#page_598) |'
- en: '| `title` | Add main/axis titles | [Section 23.5.2](ch23.xhtml#ch23lev2sec236),
    [p. 598](ch23.xhtml#page_598) |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| `title` | 添加主标题/坐标轴标题 | [第23.5.2节](ch23.xhtml#ch23lev2sec236), [第598页](ch23.xhtml#page_598)
    |'
- en: '| `italic` | Italicize text | [Section 23.5.3](ch23.xhtml#ch23lev2sec237),
    [p. 600](ch23.xhtml#page_600) |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '| `italic` | 文字斜体化 | [第23.5.3节](ch23.xhtml#ch23lev2sec237), [第600页](ch23.xhtml#page_600)
    |'
- en: '| `grid` | Add grid to plot | [Section 23.6](ch23.xhtml#ch23lev1sec81), [p.
    605](ch23.xhtml#page_605) |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '| `grid` | 向图表添加网格 | [第23.6节](ch23.xhtml#ch23lev1sec81), [第605页](ch23.xhtml#page_605)
    |'
