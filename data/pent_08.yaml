- en: Chapter 5. Information Gathering
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第五章 信息收集
- en: In this chapter we begin the information-gathering phase of penetration testing.
    The goal of this phase is to learn as much about our clients as we can. Does the
    CEO reveal way too much on Twitter? Is the system administrator writing to archived
    listservs, asking about how to secure a Drupal install? What software are their
    web servers running? Are the Internet-facing systems listening on more ports than
    they should? Or, if this is an internal penetration test, what is the IP address
    of the domain controller?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将开始渗透测试的信息收集阶段。这个阶段的目标是尽可能多地了解我们的客户。首席执行官是否在推特上泄露了太多信息？系统管理员是否在归档的邮件列表中询问如何保护
    Drupal 安装？他们的网页服务器运行的是什么软件？面向互联网的系统是否监听了超过应有的端口？或者，如果这是一次内部渗透测试，域控制器的 IP 地址是什么？
- en: We’ll also start to interact with our target systems, learning as much as we
    can about them without actively attacking them. We’ll use the knowledge gained
    in this phase to move on to the threat-modeling phase where we think like attackers
    and develop plans of attack based on the information we’ve gathered. Based on
    the information we uncover, we’ll actively search for and verify vulnerabilities
    using vulnerability-scanning techniques, which are covered in the next chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将开始与目标系统进行互动，在不主动攻击的情况下尽可能多地了解它们。我们将在这一阶段获得的知识基础上，进入威胁建模阶段，在该阶段我们像攻击者一样思考，并根据收集到的信息制定攻击计划。基于我们所揭示的信息，我们将主动寻找并验证漏洞，使用漏洞扫描技术，这将在下一章中介绍。
- en: Open Source Intelligence Gathering
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开源情报收集
- en: We can learn a good deal about our client’s organization and infrastructure
    before we send a single packet their way, but information gathering can still
    be a bit of a moving target. It isn’t feasible to study the online life of every
    employee, and given a large amount of gathered information, it can be difficult
    to discern important data from noise. If the CEO tweets frequently about a favorite
    sports team, that team’s name may be the basis for her webmail password, but it
    could just as easily be entirely irrelevant. Other times it will be easier to
    pick up on something crucial. For instance, if your client has online job postings
    for a system administrator who is an expert in certain software, chances are those
    platforms are deployed in the client’s infrastructure.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在发送任何数据包之前，我们可以了解客户的组织和基础设施的很多信息，但信息收集仍然有点像一个动态的目标。研究每个员工的在线活动是不可行的，而且在收集到大量信息后，很难从杂音中辨别出重要数据。如果首席执行官在推特上频繁发布关于某个喜爱运动队的信息，那么该队的名称可能是她的网页邮件密码的依据，但也可能完全无关紧要。其他时候，发现一些关键的信息会更容易。例如，如果客户发布了寻找熟悉某些软件的系统管理员的职位招聘信息，那么这些平台很可能已经在客户的基础设施中部署。
- en: As opposed to intelligence gained from covert sources such as dumpster diving,
    dumping website databases, and social engineering, *open source intelligence*
    (or *OSINT*) is gathered from legal sources like public records and social media.
    The success of a pentest often depends on the results of the information-gathering
    phase, so in this section, we will look at a few tools to obtain interesting information
    from these public sources.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 与从垃圾捡拾、数据库泄露和社会工程等隐秘来源获得的情报不同，*开源情报*（或 *OSINT*）是从合法来源，如公共记录和社交媒体中收集的。渗透测试的成功往往依赖于信息收集阶段的结果，因此在这一部分，我们将探讨一些工具，以从这些公共来源获取有价值的信息。
- en: Netcraft
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Netcraft
- en: Sometimes the information that web servers and web-hosting companies gather
    and make publicly available can tell you a lot about a website. For instance,
    a company called Netcraft logs the uptime and makes queries about the underlying
    software. (This information is made publicly available at *[http://www.netcraft.com/](http://www.netcraft.com/)*.)
    Netcraft also provides other services, and their antiphishing offerings are of
    particular interest to information security.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，网页服务器和网页托管公司收集并公开的信息可以揭示很多关于一个网站的细节。例如，一家公司叫做 Netcraft，它记录网站的正常运行时间并查询其底层软件。（这些信息公开可查，地址为
    *[http://www.netcraft.com/](http://www.netcraft.com/)*。）Netcraft 还提供其他服务，其中他们的反钓鱼服务特别引起信息安全领域的关注。
- en: For example, [Figure 5-1](ch05.xhtml#netcraftapostrophes_results_for_bulbsecu
    "Figure 5-1. Netcraft’s results for bulbsecurity.com") shows the result when we
    query *[http://www.netcraft.com/](http://www.netcraft.com/)* for *[http://www.bulbsecurity.com](http://www.bulbsecurity.com)*.
    As you can see, *bulbsecurity.com* was first seen in March 2012\. It was registered
    through GoDaddy, has an IP address of 50.63.212.1, and is running Linux with an
    Apache web server.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，[图 5-1](ch05.xhtml#netcraftapostrophes_results_for_bulbsecu "图 5-1. Netcraft
    对 bulbsecurity.com 的结果") 显示了我们查询 *[http://www.netcraft.com/](http://www.netcraft.com/)*
    和 *[http://www.bulbsecurity.com](http://www.bulbsecurity.com)* 时的结果。如你所见，*bulbsecurity.com*
    最早出现在 2012 年 3 月。它通过 GoDaddy 注册，IP 地址为 50.63.212.1，运行的是 Linux 操作系统，并且使用 Apache
    Web 服务器。
- en: Armed with this information, when pentesting *bulbsecurity.com*, we could start
    by ruling out vulnerabilities that affect only Microsoft IIS servers. Or, if we
    wanted to try social engineering to get credentials to the website, we could write
    an email that appears to be from GoDaddy, asking the administrator to log in and
    check some security settings.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有这些信息后，当我们对 *bulbsecurity.com* 进行渗透测试时，可以从排除只影响 Microsoft IIS 服务器的漏洞开始。或者，如果我们想尝试社交工程学来获取网站的凭据，我们可以写一封看似来自
    GoDaddy 的邮件，要求管理员登录并检查一些安全设置。
- en: '![Netcraft’s results for bulbsecurity.com](httpatomoreillycomsourcenostarchimages2030306.png.jpg)Figure 5-1. Netcraft’s
    results for bulbsecurity.com'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![Netcraft 对 bulbsecurity.com 的结果](httpatomoreillycomsourcenostarchimages2030306.png.jpg)图
    5-1. Netcraft 对 bulbsecurity.com 的结果'
- en: Whois Lookups
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Whois 查找
- en: All domain registrars keep records of the domains they host. These records contain
    information about the owner, including contact information. For example, if we
    run the Whois command line tool on our Kali machine to query for information about
    *bulbsecurity.com*, as shown in [Example 5-1](ch05.xhtml#whois_information_for_bulbsecuritydotcom
    "Example 5-1. Whois information for bulbsecurity.com"), we see that I used private
    registration, so we won’t learn much.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 所有域名注册商都会保留他们托管的域名记录。这些记录包含关于所有者的信息，包括联系信息。例如，如果我们在 Kali 机器上运行 Whois 命令行工具查询
    *bulbsecurity.com* 的信息，如 [示例 5-1](ch05.xhtml#whois_information_for_bulbsecuritydotcom
    "示例 5-1. bulbsecurity.com 的 Whois 信息") 所示，我们看到我使用了私密注册，所以我们不会学到太多信息。
- en: Example 5-1. Whois information for bulbsecurity.com
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 5-1. bulbsecurity.com 的 Whois 信息
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This site has private registration, so both the registrant ❶ and technical contact
    ❷ are domains by proxy. Domains by proxy offer private registration, hiding your
    personal details in the Whois information for the domains you own. However, we
    do see the domain servers ❸ for *bulbsecurity.com*.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 该网站有私密注册，因此注册人 ❶ 和技术联系人 ❷ 都是代理域名。代理域名提供私密注册，隐藏你拥有的域名的个人信息。不过，我们确实可以看到 *bulbsecurity.com*
    的域名服务器 ❸。
- en: Running Whois queries against other domains will show more interesting results.
    For example, if you do a Whois lookup on *georgiaweidman.com*, you might get an
    interesting blast from the past, including my college phone number.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对其他域名进行 Whois 查询会显示更多有趣的结果。例如，如果你对 *georgiaweidman.com* 进行 Whois 查找，你可能会看到一些有趣的过去信息，包括我大学时的电话号码。
- en: DNS Reconnaissance
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DNS 勘察
- en: We can also use Domain Name System (DNS) servers to learn more about a domain.
    DNS servers translate the human-readable URL *[www.bulbsecurity.com](http://www.bulbsecurity.com)*
    into an IP address.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用域名系统（DNS）服务器来了解更多关于一个域名的信息。DNS 服务器将人类可读的 URL *[www.bulbsecurity.com](http://www.bulbsecurity.com)*
    转换为 IP 地址。
- en: Nslookup
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Nslookup
- en: For example, we could use a command line tool such as Nslookup, as shown in
    [Example 5-2](ch05.xhtml#nslookup_information_for_wwwdotbulbsecur "Example 5-2. Nslookup
    information for www.bulbsecurity.com").
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以使用如 [示例 5-2](ch05.xhtml#nslookup_information_for_wwwdotbulbsecur "示例
    5-2. www.bulbsecurity.com 的 Nslookup 信息") 所示的命令行工具，如 Nslookup。
- en: Example 5-2. Nslookup information for www.bulbsecurity.com
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 5-2. www.bulbsecurity.com 的 Nslookup 信息
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Nslookup returned the IP address of *[www.bulbsecurity.com](http://www.bulbsecurity.com)*,
    as you can see at ❶.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Nslookup 返回了 *[www.bulbsecurity.com](http://www.bulbsecurity.com)* 的 IP 地址，如
    ❶ 所示。
- en: We can also tell Nslookup to find the mail servers for the same website by looking
    for MX records (DNS speak for email), as shown in [Example 5-3](ch05.xhtml#nslookup_information_for_bulbsecuritydot
    "Example 5-3. Nslookup information for bulbsecurity.com’s mail servers").
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过查找 MX 记录（DNS 中表示电子邮件的术语），告诉 Nslookup 查找同一网站的邮件服务器，如 [示例 5-3](ch05.xhtml#nslookup_information_for_bulbsecuritydot
    "示例 5-3. bulbsecurity.com 的邮件服务器的 Nslookup 信息") 所示。
- en: Example 5-3. Nslookup information for bulbsecurity.com’s mail servers
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 5-3. bulbsecurity.com 的邮件服务器的 Nslookup 信息
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Nslookup says *bulbsecurity.com* is using Google Mail for its email servers,
    which is correct because I use Google Apps.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Nslookup显示*bulbsecurity.com*正在使用Google Mail作为其电子邮件服务器，这是正确的，因为我使用的是Google Apps。
- en: Host
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Host
- en: Another utility for DNS queries is Host. We can ask Host for the name-servers
    for a domain with the command `host -t ns` *`domain`*. A good example for domain
    queries is *zoneedit.com*, a domain set up to demonstrate zone transfer vulnerabilities,
    as shown here.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个用于DNS查询的工具是Host。我们可以使用`host -t ns` *`domain`*命令询问Host该域名的名称服务器。一个很好的域名查询示例是*zoneedit.com*，这是一个演示区域传输漏洞的域名，如下所示。
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This output shows us all the DNS servers for *zoneedit.com*. Naturally, because
    I mentioned that this domain was set up to demonstrate zone transfers, that’s
    what we are going to do next.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出展示了所有*zoneedit.com*的DNS服务器。自然地，由于我提到这个域名是用来演示区域传输的，所以接下来我们要做的就是进行区域传输。
- en: Zone Transfers
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 区域传输
- en: DNS zone transfers allow name servers to replicate all the entries about a domain.
    When setting up DNS servers, you typically have a primary name server and a backup
    server. What better way to populate all the entries in the secondary DNS server
    than to query the primary server for all of its entries?
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: DNS区域传输允许名称服务器复制一个域的所有条目。在设置DNS服务器时，通常会有一个主名称服务器和一个备份服务器。最好的方法就是通过查询主服务器的所有条目，将所有条目填充到备份DNS服务器中。
- en: Unfortunately, many system administrators set up DNS zone transfers insecurely,
    so that anyone can transfer the DNS records for a domain. *zoneedit.com* is an
    example of such a domain, and we can use the `host` command to download all of
    its DNS records. Use the `-l` option to specify the domain to transfer, and choose
    one of the name servers from the previous command, as shown in [Example 5-4](ch05.xhtml#zone_transfer_of_zoneeditdotcom
    "Example 5-4. Zone transfer of zoneedit.com").
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，许多系统管理员没有安全地设置DNS区域传输，使得任何人都可以转移域的DNS记录。*zoneedit.com*就是这样一个例子，我们可以使用`host`命令下载它的所有DNS记录。使用`-l`选项来指定要传输的域，并从之前的命令中选择一个名称服务器，如[示例
    5-4](ch05.xhtml#zone_transfer_of_zoneeditdotcom "示例 5-4. *zoneedit.com*的区域传输")所示。
- en: Example 5-4. Zone transfer of zoneedit.com
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 5-4. *zoneedit.com*的区域传输
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: There are pages and pages of DNS entries for *zoneedit.com*, which gives us
    a good idea of where to start in looking for vulnerabilities for our pentest.
    For example, *mail2.zoneedit.com* is probably a mail server, so we should look
    for potentially vulnerable software running on typical email ports such as 25
    (Simple Mail Transfer Protocol) and 110 (POP3). If we can find a webmail server,
    any usernames we find may lead us in the right direction so that we can guess
    passwords and gain access to sensitive company emails.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*zoneedit.com*的DNS条目有很多，这为我们在寻找渗透测试中的漏洞时提供了一个很好的起点。例如，*mail2.zoneedit.com*可能是一个邮件服务器，因此我们应该寻找可能在典型电子邮件端口上运行的易受攻击的软件，例如25端口（简单邮件传输协议）和110端口（POP3）。如果我们能找到一个Web邮件服务器，任何找到的用户名都可能帮助我们朝正确的方向前进，从而猜测密码并访问公司敏感的电子邮件。'
- en: Searching for Email Addresses
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 搜索电子邮件地址
- en: External penetration tests often find fewer services exposed than internal ones
    do. A good security practice is to expose only those services that must be accessed
    remotely, like web servers, mail servers, VPN servers, and maybe SSH or FTP, and
    only those services that are mission critical. Services like these are common
    attack surfaces, and unless employees use two-factor authentication, accessing
    company webmail can be simple if an attacker can guess valid credentials.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 外部渗透测试通常发现暴露的服务比内部渗透测试要少。一个好的安全做法是只暴露那些必须远程访问的服务，比如Web服务器、邮件服务器、VPN服务器，可能还有SSH或FTP，并且只暴露那些对任务至关重要的服务。像这样的服务是常见的攻击面，除非员工使用双因素认证，否则如果攻击者能猜测有效的凭据，访问公司Web邮件可能非常简单。
- en: One excellent way to find usernames is by looking for email addresses on the
    Internet. You might be surprised to find corporate email addresses publicly listed
    on parent-teacher association contact info, sports team rosters, and, of course,
    social media.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 查找用户名的一个好方法是通过在互联网上寻找电子邮件地址。你可能会惊讶地发现，一些公司电子邮件地址公开列在家长-教师协会的联系信息、体育团队名单上，当然，还有社交媒体。
- en: You can use a Python tool called theHarvester to quickly scour thousands of
    search engine results for possible email addresses. theHarvester can automate
    searching Google, Bing, PGP, LinkedIn, and others for email addresses. For example,
    in [Example 5-5](ch05.xhtml#running_theharvester_against_bulbsecurit "Example 5-5. Running
    theHarvester against bulbsecurity.com"), we’ll look at the first 500 results in
    all search engines for *bulbsecurity.com*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用一个名为 theHarvester 的 Python 工具，快速扫描数千条搜索引擎结果，寻找可能的电子邮件地址。theHarvester 可以自动化搜索
    Google、Bing、PGP、LinkedIn 等平台上的电子邮件地址。例如，在[示例 5-5](ch05.xhtml#running_theharvester_against_bulbsecurit
    "示例 5-5. 使用 theHarvester 扫描 bulbsecurity.com")中，我们将查看所有搜索引擎中的前 500 条结果，关于 *bulbsecurity.com*。
- en: Example 5-5. Running theHarvester against bulbsecurity.com
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 5-5. 使用 theHarvester 扫描 bulbsecurity.com
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: There’s not too much to be found for *bulbsecurity.com*, but theHarvester does
    find my email address, *georgia@bulbsecurity.com*, and the website, *[www.bulbsecurity.com](http://www.bulbsecurity.com)*,
    as well as other websites I share virtual hosting with. You may find more results
    if you run theHarvester against your organization.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 *bulbsecurity.com*，没有找到太多信息，但 theHarvester 确实找到了我的电子邮件地址 *georgia@bulbsecurity.com*，以及网站
    *[www.bulbsecurity.com](http://www.bulbsecurity.com)*，还有我与之共享虚拟主机的其他网站。如果你对你的组织进行扫描，可能会找到更多结果。
- en: Maltego
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Maltego
- en: Paterva’s Maltego is a data-mining tool designed to visualize open source intelligence
    gathering. Maltego has both a commercial and a free community edition. The free
    Kali Linux version, which we’ll use in this book, limits the results it returns,
    but we can still use it to gather a good deal of interesting information very
    quickly. (The paid version offers more results and functionality. To use Maltego
    on your pentests, you will need a paid license.)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Paterva 的 Maltego 是一款数据挖掘工具，旨在可视化开源情报收集。Maltego 有商业版和免费社区版。我们在本书中使用的免费 Kali
    Linux 版本返回的结果有所限制，但我们仍然可以非常快速地收集大量有趣的信息。（付费版提供更多结果和功能。要在渗透测试中使用 Maltego，你需要购买付费许可证。）
- en: Note
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Feel free to use Maltego to study other Internet footprints, including your
    own, your company’s, your high school arch nemesis’s, and so on. Maltego uses
    information publicly available on the Internet, so it is perfectly legal to do
    reconnaissance on any entity.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 随时可以使用 Maltego 来研究其他互联网足迹，包括你自己的、你公司的、你高中时的死敌的等等。Maltego 使用公开可用的互联网信息，因此对任何实体进行侦察都是完全合法的。
- en: To run Maltego, enter **`maltego`** at the command line. The Maltego GUI should
    launch. You will be prompted to create a free account at the Paterva website and
    log in. Once logged in, choose **Open a blank graph and let me play around**,
    and then click **Finish**, as shown in [Figure 5-2](ch05.xhtml#opening_a_new_maltego_graph
    "Figure 5-2. Opening a new Maltego graph").
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行 Maltego，请在命令行中输入 **`maltego`**。Maltego 的图形界面应该会启动。你将被提示在 Paterva 网站上创建一个免费账户并登录。一旦登录，选择
    **打开一个空白图表并让我玩一下**，然后点击 **完成**，如[图 5-2](ch05.xhtml#opening_a_new_maltego_graph
    "图 5-2. 打开一个新的 Maltego 图表")所示。
- en: '![Opening a new Maltego graph](httpatomoreillycomsourcenostarchimages2030308.png.jpg)Figure 5-2. Opening
    a new Maltego graph'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '![打开一个新的 Maltego 图表](httpatomoreillycomsourcenostarchimages2030308.png.jpg)图
    5-2. 打开一个新的 Maltego 图表'
- en: Now select the **Palette** option from the left-hand border. As you can see,
    we can gather information about all sorts of entities.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在从左侧边栏选择 **调色板** 选项。如你所见，我们可以收集各种实体的信息。
- en: Let’s start with the *bulbsecurity.com* domain, as shown in [Figure 5-3](ch05.xhtml#adding_an_entity_to_the_graph
    "Figure 5-3. Adding an entity to the graph"). Expand the Infrastructure option
    from the Palette (on the left of the Maltego window) and drag a Domain entity
    from the Palette onto the new graph. By default, the domain is *paterva.com*.
    To change it to *bulbsecurity.com*, either double-click the text or change the
    text field at the right side of the screen.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从 *bulbsecurity.com* 域名开始，如[图 5-3](ch05.xhtml#adding_an_entity_to_the_graph
    "图 5-3. 将实体添加到图表")所示。从调色板（位于 Maltego 窗口的左侧）中展开“基础设施”选项，并将一个“域名”实体从调色板拖动到新的图表中。默认情况下，域名是
    *paterva.com*。要将其更改为 *bulbsecurity.com*，可以双击文本或更改屏幕右侧的文本字段。
- en: '![Adding an entity to the graph](httpatomoreillycomsourcenostarchimages2030310.png.jpg)Figure 5-3. Adding
    an entity to the graph'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![将实体添加到图表](httpatomoreillycomsourcenostarchimages2030310.png.jpg)图 5-3. 将实体添加到图表'
- en: Once the domain is set, you can run transforms (Maltego-speak for queries) on
    it, instructing Maltego to search for interesting information. Let’s start with
    a couple of simple transforms, which you can view by right-clicking the domain
    icon and choosing **Run Transform**, as shown in [Figure 5-4](ch05.xhtml#maltego_transforms
    "Figure 5-4. Maltego transforms").
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置好域名，你可以在其上运行转换（Maltego中用于查询的术语），指示Maltego搜索有趣的信息。让我们从几个简单的转换开始，你可以通过右键点击域名图标并选择**运行转换**来查看这些转换，如[图5-4](ch05.xhtml#maltego_transforms
    "图5-4. Maltego 转换")所示。
- en: In the figure, we can see all the transforms available for a domain entity.
    As you work with different entities, different transform options will be available.
    Let’s find the MX records for the *bulbsecurity.com* domain and, thus, where the
    mail servers are. Under **All Transforms**, choose the **To DNS Name – MX (mail
    server)** transform.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在图中，我们可以看到所有可用于域名实体的转换。随着你使用不同的实体，转换选项也会不同。让我们查找*bulbsecurity.com*域名的MX记录，从而找出邮件服务器的位置。在**所有转换**下，选择**到DNS名称
    – MX（邮件服务器）**转换。
- en: As expected from our previous research, Maltego returns Google Mail servers,
    indicating that *bulbsecurity.com* uses Google Apps for email. We can run the
    simple **To Website [Quick lookup]** transform to get the website address of *bulbsecurity.com*.
    See [Figure 5-5](ch05.xhtml#transform_results "Figure 5-5. Transform results")
    for the results from both this and the previous transform.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前研究的预期，Maltego返回了Google Mail服务器，表明*bulbsecurity.com*使用Google Apps作为邮件服务。我们可以运行简单的**到网站
    [快速查找]**转换，获取*bulbsecurity.com*的官网地址。有关这一转换以及之前转换的结果，请参见[图5-5](ch05.xhtml#transform_results
    "图5-5. 转换结果")。
- en: '![Maltego transforms](httpatomoreillycomsourcenostarchimages2030312.png.jpg)Figure 5-4. Maltego
    transforms![Transform results](httpatomoreillycomsourcenostarchimages2030314.png.jpg)Figure 5-5. Transform
    results'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![Maltego转换](httpatomoreillycomsourcenostarchimages2030312.png.jpg)图5-4. Maltego转换![转换结果](httpatomoreillycomsourcenostarchimages2030314.png.jpg)图5-5.
    转换结果'
- en: Maltego correctly finds *[www.bulbsecurity.com](http://www.bulbsecurity.com)*.
    Attacking the Google Mail servers will likely be out of the scope of any pentest,
    but more infor-mation on the *[www.bulbsecurity.com](http://www.bulbsecurity.com)*
    website would certainly be useful. We can run transforms on any entity on the
    graph, so select the website *[www.bulbsecurity.com](http://www.bulbsecurity.com)*
    to gather data on it. For instance, we can run the transform **ToServerTechnologiesWebsite**
    to see what software *[www.bulbsecurity.com](http://www.bulbsecurity.com)* is
    running, as shown in [Figure 5-6](ch05.xhtml#wwwdotbulbsecuritydotcom_software
    "Figure 5-6. www.bulbsecurity.com software").
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Maltego正确地找到了*[www.bulbsecurity.com](http://www.bulbsecurity.com)*。攻击Google
    Mail服务器可能超出了任何渗透测试的范围，但更多关于* [www.bulbsecurity.com](http://www.bulbsecurity.com)*网站的信息无疑会很有用。我们可以对图表上的任何实体运行转换，所以选择网站*[www.bulbsecurity.com](http://www.bulbsecurity.com)*来收集有关它的数据。例如，我们可以运行**到服务器技术网站**转换，查看*[www.bulbsecurity.com](http://www.bulbsecurity.com)*正在运行什么软件，如[图5-6](ch05.xhtml#wwwdotbulbsecuritydotcom_software
    "图5-6. www.bulbsecurity.com 软件")所示。
- en: '![www.bulbsecurity.com software](httpatomoreillycomsourcenostarchimages2030316.png.jpg)Figure 5-6. [www.bulbsecurity.com](http://www.bulbsecurity.com)
    software'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![www.bulbsecurity.com软件](httpatomoreillycomsourcenostarchimages2030316.png.jpg)图5-6.
    [www.bulbsecurity.com](http://www.bulbsecurity.com) 软件'
- en: Maltego finds that *[www.bulbsecurity.com](http://www.bulbsecurity.com)* is
    an Apache web server with PHP, Flash, and so on, along with a WordPress install.
    WordPress, a commonly used blogging platform, has a long history of security issues
    (like a lot of software). We’ll look at exploiting website vulnerabilities in
    [Chapter 14](ch14.xhtml "Chapter 14. Web Application Testing"). (Let’s hope I
    am keeping my WordPress blog up to date, or else I might wake up to find my site
    defaced one day. How embarrassing!)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Maltego发现*[www.bulbsecurity.com](http://www.bulbsecurity.com)*是一个Apache web服务器，运行PHP、Flash等，同时安装了WordPress。WordPress作为一个常用的博客平台，有着一长串的安全问题（就像许多软件一样）。我们将在[第14章](ch14.xhtml
    "第14章. Web应用测试")中探讨如何利用网站漏洞。（希望我一直在保持我的WordPress博客更新，否则我可能某天醒来会发现我的网站被篡改了。真是太尴尬了！）
- en: You can find additional information and tutorials about Maltego at *[http://www.paterva.com/](http://www.paterva.com/)*.
    Spend some time using Maltego transforms to find interesting information about
    your organization. In skilled hands, Maltego can turn hours of reconnaissance
    work into minutes with the same quality results.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 *[http://www.paterva.com/](http://www.paterva.com/)* 上找到更多关于 Maltego 的信息和教程。花点时间使用
    Maltego 的变换功能，查找有关你组织的有趣信息。在熟练的操作下，Maltego 能够将几小时的侦察工作缩短到几分钟，而且结果的质量不打折。
- en: Port Scanning
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 端口扫描
- en: 'When you start a pentest, the potential scope is practically limitless. The
    client could be running any number of programs with security issues: They could
    have misconfiguration issues in their infrastructure that could lead to compromise;
    weak or default passwords could give up the keys to the kingdom on otherwise secure
    systems; and so on. Pentests often narrow your scope to a particular IP range
    and nothing more, and you won’t help your client by developing a working exploit
    for the latest and greatest server-side vulnerability if they don’t use the vulnerable
    software. We need to find out which systems are active and which software we can
    talk to.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始渗透测试时，潜在的测试范围几乎是无限的。客户可能运行着多种存在安全问题的程序：他们的基础设施可能存在配置错误，导致系统可能被攻破；弱密码或默认密码可能会将安全的系统轻松攻陷；等等。渗透测试通常会将测试范围缩小到特定的
    IP 范围，仅此而已。如果客户没有使用易受攻击的软件，那么你通过开发针对最新最强大服务器端漏洞的有效利用工具并不会帮助他们。我们需要了解哪些系统是活跃的，以及我们可以与哪些软件进行交互。
- en: Manual Port Scanning
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 手动端口扫描
- en: For example, in the previous chapter we saw that exploiting the MS08-067 vulnerability
    can be an easy win for attackers and pentesters alike. To use this exploit, we
    need to find a Windows 2000, XP, or 2003 box with an SMB server that is missing
    the MS08-067 Microsoft patch available on the network. We can get a good idea
    about the network-based attack surface by mapping the network range and querying
    systems for listening ports.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在上一章中，我们看到利用 MS08-067 漏洞对攻击者和渗透测试人员来说都是一次轻松的胜利。为了利用这个漏洞，我们需要找到一台运行 Windows
    2000、XP 或 2003 的机器，且该机器的 SMB 服务器缺少 MS08-067 补丁，并且该机器在网络上可访问。通过映射网络范围并查询系统的监听端口，我们可以对网络攻击面有一个很好的了解。
- en: We can do this manually by connecting to ports with a tool such as telnet or
    Netcat and recording the results. Let’s use Netcat to connect to the Windows XP
    machine on port 25, the default port for the Simple Mail Transfer Protocol (SMTP).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过手动连接端口来实现这一点，使用像 telnet 或 Netcat 这样的工具并记录结果。我们来用 Netcat 连接到 Windows XP
    机器上的端口 25，这是简单邮件传输协议（SMTP）的默认端口。
- en: '[PRE6]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As it turns out, the Windows XP box is running an SMTP server on port 25 ❶.
    After we connected, the SMTP server announced itself as `SLMail -version 5.5.0.4433`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 结果发现，这台 Windows XP 机器在端口 25 ❶ 上运行着一个 SMTP 服务器。我们连接后，SMTP 服务器自我介绍为 `SLMail -version
    5.5.0.4433`。
- en: Now, keep in mind that admins can change banners like this to say anything,
    even sending attackers and pentesters on a wild goose chase, studying vulnerabilities
    for a product that is not deployed. In most cases, however, versions in software
    banners will be fairly accurate, and just connecting to the port and viewing the
    banner provides a starting point for our pentesting research. Searching the Web
    for information about `SLMail version 5.5.0.4433` may yield some interesting results.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，请记住，管理员可以更改这种横幅信息，让其显示任何内容，甚至将攻击者和渗透测试人员引导到一场无意义的追逐中，研究一个未部署的产品的漏洞。然而，在大多数情况下，软件横幅中的版本号通常是相对准确的，直接连接到端口并查看横幅信息为我们的渗透测试研究提供了一个起点。通过网络搜索
    `SLMail version 5.5.0.4433` 可能会得到一些有趣的结果。
- en: On the other hand, connecting to every possible TCP and UDP port on just one
    machine and noting the results can be time consuming. Luckily, computers are excellent
    at repetitive tasks like this, and we can use port-scanning tools such as Nmap
    to find listening ports for us.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，连接到单台计算机上的每一个可能的 TCP 和 UDP 端口并记录结果可能会非常耗时。幸运的是，计算机在执行这种重复性任务时表现出色，我们可以使用端口扫描工具，如
    Nmap，来帮我们找到监听端口。
- en: Note
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Everything we have done so far in this chapter is completely legal. But once
    we start actively querying systems, we are moving into murky legal territory.
    Attempting to break into computers without permission is, of course, illegal in
    many countries. Though stealthy scan traffic may go unnoticed, you should practice
    the skills we study in the rest of this chapter (and the rest of this book) only
    on your target virtual machines or other systems you own or have written permission
    to test (known in the trade as a get-out-of-jail-free card).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们在本章中所做的一切都是完全合法的。但一旦我们开始主动查询系统，就进入了法律灰色地带。未经许可尝试闯入计算机在许多国家是非法的。尽管隐蔽的扫描流量可能不会引起注意，但你应该只在你的目标虚拟机或其他你拥有或已获得书面许可进行测试的系统上练习本章（以及本书其余部分）所学习的技能（业内称为“免死金牌”）。
- en: Port Scanning with Nmap
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Nmap进行端口扫描
- en: Nmap is an industry standard for port scanning. Entire books have been written
    just about using Nmap, and the manual page may seem a bit daunting. We will cover
    the basics of port scanning here and come back to the tool in later chapters.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap是行业标准的端口扫描工具。仅关于使用Nmap就有整本书籍，手册页面可能看起来有些令人生畏。我们将在这里介绍端口扫描的基础知识，并在后续章节中再次回到该工具。
- en: Firewalls with intrusion-detection and prevention systems have made great strides
    in detecting and blocking scan traffic, so you might run an Nmap scan and receive
    no results at all. Though you could be hired to perform an external pentest against
    a network range with no live hosts, it’s more likely that you’re being blocked
    by a firewall. On the other hand, your Nmap results might instead say that every
    host is alive, and will be listening on every port if your scan is detected.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 配备入侵检测和防御系统的防火墙在检测和阻止扫描流量方面取得了显著进展，因此你可能会运行Nmap扫描，却没有得到任何结果。尽管你可能被聘请对没有活动主机的网络范围执行外部渗透测试，但更有可能是你的扫描被防火墙阻挡了。另一方面，如果你的Nmap结果显示每个主机都处于活动状态，并且如果扫描被检测到，所有端口都会处于监听状态。
- en: A SYN Scan
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: SYN扫描
- en: 'Let’s start by running a SYN scan against our target machines. A *SYN scan*
    is a TCP scan that does not finish the TCP handshake. A TCP connection starts
    with a three-way handshake: SYN ▸ SYN-ACK ▸ ACK, as shown in [Figure 5-7](ch05.xhtml#tcp_three-way_handshake
    "Figure 5-7. TCP three-way handshake").'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始对目标机器执行SYN扫描。*SYN扫描*是一种TCP扫描，它不会完成TCP握手。TCP连接从三次握手开始：SYN ▸ SYN-ACK ▸ ACK，如[图5-7](ch05.xhtml#tcp_three-way_handshake
    "图5-7. TCP三次握手")所示。
- en: '![TCP three-way handshake](httpatomoreillycomsourcenostarchimages2030318.png.jpg)Figure 5-7. TCP
    three-way handshake'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '![TCP三次握手](httpatomoreillycomsourcenostarchimages2030318.png.jpg)图5-7. TCP三次握手'
- en: In a SYN scan, Nmap sends the SYN and waits for the SYN-ACK if the port is open
    but never sends the ACK to complete the connection. If the SYN packet receives
    no SYN-ACK response, the port is not available; either it’s closed or the connection
    is being filtered. This way, Nmap finds out if a port is open without ever fully
    connecting to the target machine. The syntax for a SYN scan is the `-sS` flag.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在SYN扫描中，Nmap发送SYN包并等待SYN-ACK响应，如果端口开放，但永远不会发送ACK以完成连接。如果SYN包没有收到SYN-ACK响应，则该端口不可用；它要么是关闭的，要么是连接被过滤了。通过这种方式，Nmap可以在不完全连接到目标机器的情况下判断端口是否开放。SYN扫描的语法是`-sS`标志。
- en: 'Next, as you can see in [Example 5-6](ch05.xhtml#running_an_nmap_syn_scan "Example 5-6. Running
    an Nmap SYN scan"), we specify the IP address(s) or range to scan. Finally, we
    use the `-o` option to output our Nmap results to a file. The `-oA` option tells
    Nmap to log our results in all formats: *.nmap*, *.gnmap* (greppable Nmap), and
    XML. Nmap format, like the output that Nmap prints to the screen in [Example 5-6](ch05.xhtml#running_an_nmap_syn_scan
    "Example 5-6. Running an Nmap SYN scan"), is nicely formatted and easy to read.
    Greppable Nmap (as the name implies) is formatted to be used with the `grep` utility
    to search for specific information. XML format is a standard used to import Nmap
    results into other tools. [Example 5-6](ch05.xhtml#running_an_nmap_syn_scan "Example 5-6. Running
    an Nmap SYN scan") shows the results of the SYN scan.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，正如你在[示例5-6](ch05.xhtml#running_an_nmap_syn_scan "示例5-6. 运行Nmap SYN扫描")中看到的，我们指定要扫描的IP地址或地址范围。最后，我们使用`-o`选项将Nmap结果输出到文件。`-oA`选项告诉Nmap以所有格式记录结果：*.nmap*、*.gnmap*（可用grep搜索的Nmap格式）和XML格式。Nmap格式类似于[示例5-6](ch05.xhtml#running_an_nmap_syn_scan
    "示例5-6. 运行Nmap SYN扫描")中Nmap输出到屏幕的结果，格式清晰且易于阅读。Greppable Nmap（顾名思义）格式化为可以与`grep`工具一起使用，以便查找特定信息。XML格式是用于将Nmap结果导入其他工具的标准格式。[示例5-6](ch05.xhtml#running_an_nmap_syn_scan
    "示例5-6. 运行Nmap SYN扫描")展示了SYN扫描的结果。
- en: Note
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It is always a good idea to take good notes of everything we do on our pentest.
    Tools such as Dradis are designed specifically to track pentest data, but as long
    as you have notes of everything you did when you get to the reporting phase, you
    will be okay. I personally am more of a pen-and-paper user, or at best, a creating-a-long-Word-document-with-all-of-my-results
    type. The methods used for tracking results vary from pentester to pentester.
    Outputting your Nmap results to files is a good way to make sure you have a record
    of your scan. Also, you can use the Linux command script to record everything
    printed to your terminal—another good way to keep track of everything you have
    done.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 记录下我们在渗透测试过程中做的每一件事总是一个好主意。像 Dradis 这样的工具是专门用来跟踪渗透测试数据的，但只要你在报告阶段有记录下所有的操作，你就没问题了。我个人更倾向于使用笔和纸，或者至多是在
    Word 文档中创建一份长长的结果记录。用于跟踪结果的方法因渗透测试人员而异。将 Nmap 的扫描结果输出到文件是一种确保你有扫描记录的好方法。另外，你可以使用
    Linux 命令 `script` 来记录终端输出的一切——这也是一种很好的方式来追踪你所做的所有操作。
- en: Example 5-6. Running an Nmap SYN scan
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 5-6. 运行 Nmap SYN 扫描
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you can see, Nmap returns a handful of ports on the Windows XP and Linux
    boxes. We will see as we move through the next few chapters that nearly all of
    these ports contain vulnerabilities. Hopefully, that won’t be the case on your
    pentests, but in an attempt to introduce you to many types of vulnerabilities
    you will encounter in the field, our pentesting lab has been condensed into these
    three machines.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，Nmap 在 Windows XP 和 Linux 机器上返回了一些端口。随着我们在接下来的章节中深入了解，你会发现几乎所有这些端口都包含漏洞。希望在你的渗透测试中不会出现这种情况，但为了让你了解在实际工作中可能遇到的各种漏洞，我们的渗透测试实验室已浓缩为这三台机器。
- en: That said, just because a port is open does not mean that vulnerabilities are
    present. Rather it leaves us with the possibility that vulnerable software might
    be running on these ports. Our Windows 7 machine is listening only on port 80
    ❶, the traditional port for HTTP web servers, and port 139 for remote procedure
    call. There may be exploitable software listening on ports that are not allowed
    through the Windows firewall, and there may be vulnerable software running locally
    on the machine, but at the moment we can’t attempt to exploit anything directly
    over the network except the web server.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，端口开放并不意味着存在漏洞。它只是让我们有可能在这些端口上运行着易受攻击的软件。我们的 Windows 7 机器仅在端口 80 ❶（HTTP
    网络服务器的传统端口）和端口 139（远程过程调用端口）上监听。可能有可利用的软件监听那些没有通过 Windows 防火墙的端口，也可能有易受攻击的软件在本地运行，但目前我们不能直接在网络上尝试利用任何东西，除了
    Web 服务器。
- en: This basic Nmap scan has already helped us focus our pentesting efforts. Both
    the Windows XP and Linux targets are running FTP servers ❷, web servers ❸, and
    SMB servers ❹. The Windows XP machine is also running a mail server that has opened
    several ports ❺ and a MySQL server ❻.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这个基础的 Nmap 扫描已经帮助我们集中渗透测试的精力。Windows XP 和 Linux 目标都在运行 FTP 服务器 ❷、Web 服务器 ❸ 和
    SMB 服务器 ❹。Windows XP 机器还运行着一个邮件服务器，打开了几个端口 ❺，并且有一个 MySQL 服务器 ❻。
- en: A Version Scan
  id: totrans-88
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 版本扫描
- en: Our SYN scan was stealthy, but it didn’t tell us much about the software that
    is actually running on the listening ports. Compared to the detailed version information
    we got by connecting to port 25 with Netcat, the SYN scan’s results are a bit
    lackluster. We can use a full TCP scan (`nmap -sT`) or go a step further and use
    Nmap’s version scan (`nmap -sV`) to get more data. With the version scan shown
    in [Example 5-7](ch05.xhtml#running_an_nmap_version_scan "Example 5-7. Running
    an Nmap version scan"), Nmap completes the connection and then attempts to determine
    what software is running and, if possible, the version, using techniques such
    as banner grabbing.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 SYN 扫描很隐蔽，但它并没有告诉我们监听端口上实际运行的软件是什么。与通过 Netcat 连接到端口 25 获取的详细版本信息相比，SYN 扫描的结果显得有些平淡。我们可以使用完整的
    TCP 扫描（`nmap -sT`）或进一步使用 Nmap 的版本扫描（`nmap -sV`）来获取更多数据。在[示例 5-7](ch05.xhtml#running_an_nmap_version_scan
    "示例 5-7. 运行 Nmap 版本扫描")中展示的版本扫描，Nmap 完成连接后会尝试确定运行的软件是什么，并且如果可能的话，获取版本信息，采用的技术包括横幅抓取等。
- en: Example 5-7. Running an Nmap version scan
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 5-7. 运行 Nmap 版本扫描
- en: '[PRE8]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This time we gained much more information about our Windows XP and Linux targets.
    For example, we knew there was an FTP server on the Linux box, but now we have
    reasonable assurance that the FTP server is Very Secure FTP version 2.3.4 ❶. We’ll
    use this output to search for potential vulnerabilities in the next chapter. As
    for our Windows 7 system, we found out only that it’s running Microsoft IIS 7.5,
    a fairly up-to-date version. It’s possible to install IIS 8 on Windows 7, but
    it’s not officially supported. The version itself would not raise any red flags
    to me. We will find that the application installed on this IIS server is the real
    issue in [Chapter 14](ch14.xhtml "Chapter 14. Web Application Testing").
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，我们获得了更多关于 Windows XP 和 Linux 目标的信息。例如，我们知道 Linux 机器上有一个 FTP 服务器，但现在我们有了合理的证据，证明该
    FTP 服务器是非常安全的 FTP 版本 2.3.4❶。我们将在下一章中使用此输出搜索潜在的漏洞。至于我们的 Windows 7 系统，我们只发现它正在运行
    Microsoft IIS 7.5，这是一个相当更新的版本。尽管在 Windows 7 上可以安装 IIS 8，但它并不被官方支持。该版本本身不会引起我的任何警觉。我们将在[第
    14 章](ch14.xhtml "第 14 章. Web 应用测试")中发现，安装在此 IIS 服务器上的应用程序才是实际的问题。
- en: Note
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Keep in mind that Nmap may report the wrong version in some cases (for instance,
    if the software has been updated, but the welcome banner is not edited as part
    of the patch), but at the very least, its version scan gave us a good place to
    begin further research.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在某些情况下，Nmap 可能会报告错误的版本（例如，如果软件已经更新，但欢迎横幅没有作为补丁的一部分进行编辑），但至少它的版本扫描为我们提供了一个很好的起点，进一步的研究可以从这里开始。
- en: UDP Scans
  id: totrans-95
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: UDP 扫描
- en: Both Nmap’s SYN and version scans are TCP scans that do not query UDP ports.
    Because UDP is connectionless, the scanning logic is a bit different. In a UDP
    scan (`-sU`), Nmap sends a UDP packet to a port. Depending on the port, the packet
    sent is protocol specific. If it receives a response, the port is considered open.
    If the port is closed, Nmap will receive an ICMP Port Unreachable message. If
    Nmap receives no response whatsoever, then either the port is open and the program
    listening does not respond to Nmap’s query, or the traffic is being filtered.
    Thus, Nmap is not always able to distinguish between an open UDP port and one
    that is filtered by a firewall. See [Example 5-8](ch05.xhtml#running_a_udp_scan
    "Example 5-8. Running a UDP scan") for a UDP scan example.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap 的 SYN 扫描和版本扫描都是 TCP 扫描，无法查询 UDP 端口。由于 UDP 是无连接的，扫描逻辑有所不同。在 UDP 扫描（`-sU`）中，Nmap
    向端口发送一个 UDP 数据包。根据端口的不同，发送的数据包是协议特定的。如果收到响应，则该端口被视为开放。如果端口关闭，Nmap 将收到 ICMP 端口不可达消息。如果
    Nmap 完全没有收到响应，则可能是端口开放，但正在监听的程序未响应 Nmap 的查询，或者流量被过滤。因此，Nmap 并不总是能够区分开放的 UDP 端口和被防火墙过滤的端口。请参见[示例
    5-8](ch05.xhtml#running_a_udp_scan "示例 5-8. 执行 UDP 扫描")，了解 UDP 扫描的示例。
- en: Example 5-8. Running a UDP scan
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 5-8. 执行 UDP 扫描
- en: '[PRE9]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: For example, on the Windows XP system, the TFTP port (UDP 69) may be open or
    filtered ❶. On the Linux target, Nmap was able to glean that the Network File
    System port is listening ❷. Because only two TCP ports responded on the Windows
    7 box, it’s fair to assume that a firewall is in place, in this case the built-in
    Windows firewall. Likewise, the Windows firewall is filtering all traffic except
    to one UDP port. (If the Windows firewall were not in place, our UDP scan might
    give us more information.)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在 Windows XP 系统上，TFTP 端口（UDP 69）可能是开放的或被过滤的❶。在 Linux 目标上，Nmap 能够发现网络文件系统端口正在监听❷。由于只有两个
    TCP 端口在 Windows 7 计算机上响应，因此可以合理推测存在防火墙，在这种情况下是内置的 Windows 防火墙。同样，Windows 防火墙过滤了除了一个
    UDP 端口以外的所有流量。（如果没有 Windows 防火墙，我们的 UDP 扫描可能会提供更多的信息。）
- en: Scanning a Specific Port
  id: totrans-100
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 扫描特定端口
- en: By default, Nmap scans only the 1,000 ports it considers the most “interesting,”
    not the 65,535 possible TCP or UDP ports. The default Nmap scan will catch common
    running services, but in some cases it will miss a listening port or two. To scan
    specific ports, use the `-p` flag with Nmap. For example, to scan port 3232 on
    the Windows XP target, see [Example 5-9](ch05.xhtml#running_an_nmap_scan_on_a_specific_port
    "Example 5-9. Running an Nmap scan on a specific port").
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Nmap 只扫描它认为最“有趣”的 1,000 个端口，而不是 65,535 个可能的 TCP 或 UDP 端口。默认的 Nmap 扫描会捕获常见的运行服务，但在某些情况下，它可能会遗漏一个或两个监听端口。要扫描特定端口，可以使用
    `-p` 标志与 Nmap 一起使用。例如，要扫描 Windows XP 目标上的 3232 端口，请参见[示例 5-9](ch05.xhtml#running_an_nmap_scan_on_a_specific_port
    "示例 5-9. 执行针对特定端口的 Nmap 扫描")。
- en: Example 5-9. Running an Nmap scan on a specific port
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 5-9. 执行针对特定端口的 Nmap 扫描
- en: '[PRE10]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Sure enough, when we tell Nmap to scan 3232, it returns `open`, which shows
    that this port is worth checking out, in addition to the default Nmap scanned
    ports. However, if we try to probe the port a bit more aggressively with a version
    scan (see [Example 5-10](ch05.xhtml#running_a_version_scan_against_a_specifi "Example 5-10. Running
    a version scan against a specific port")), the service listening on the port crashes,
    as shown in [Figure 5-8](ch05.xhtml#zervit_server_crashes_when_scanned_by_nm "Figure 5-8. The
    Zervit server crashes when scanned by Nmap.").
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 确实，当我们告诉 Nmap 扫描 3232 端口时，它返回了`open`，这表明除了默认的 Nmap 扫描端口外，这个端口值得进一步检查。然而，如果我们尝试通过版本扫描更具攻击性地探测该端口（参见[示例
    5-10](ch05.xhtml#running_a_version_scan_against_a_specifi "示例 5-10. 针对特定端口进行版本扫描")），监听该端口的服务会崩溃，如[图
    5-8](ch05.xhtml#zervit_server_crashes_when_scanned_by_nm "图 5-8. Zervit 服务器在 Nmap
    扫描时崩溃")所示。
- en: Note
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A good rule of thumb is to specify ports 1 through 65535 on your pentests, just
    to make sure there’s nothing listening on those other “uninteresting” ports.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的经验法则是在进行渗透测试时指定端口 1 到 65535，确保这些“无趣”端口上没有监听的服务。
- en: Example 5-10. Running a version scan against a specific port
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 5-10. 针对特定端口进行版本扫描
- en: '[PRE11]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![The Zervit server crashes when scanned by Nmap.](httpatomoreillycomsourcenostarchimages2030320.png.jpg)Figure 5-8. The
    Zervit server crashes when scanned by Nmap.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '![Zervit 服务器在 Nmap 扫描时崩溃。](httpatomoreillycomsourcenostarchimages2030320.png.jpg)图
    5-8. Zervit 服务器在 Nmap 扫描时崩溃。'
- en: In the process of crashing the listening service, Nmap can’t figure out what
    software is running as noted at ❶, but it does manage to get a fingerprint of
    the service. Based on the HTML tags in the fingerprint at ❷, this service appears
    to be a web server. According to the `Server:` field, it is something called Zervit
    0.4 ❸.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在崩溃监听服务的过程中，Nmap 无法弄清楚正在运行的是什么软件，如❶所示，但它确实成功获得了该服务的指纹。根据指纹中的 HTML 标签，❷ 这个服务似乎是一个
    Web 服务器。根据 `Server:` 字段，它是一个名为 Zervit 0.4 的服务 ❸。
- en: At this point, we have crashed the service, and we may never see it again on
    our pentest, so any potential vulnerabilities may be a moot point. Of course,
    in our lab we can just switch over to our Windows XP target and restart the Zervit
    server.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们已经让服务崩溃，可能再也无法在我们的渗透测试中看到它，因此任何潜在的漏洞都可能变得无关紧要。当然，在我们的实验室中，我们可以切换到 Windows
    XP 目标并重新启动 Zervit 服务器。
- en: Note
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Though hopefully you won’t make any services crash on your pentests, there is
    always a possibility that you will run into a particularly sensitive service that
    was not coded to accept anything other than expected input, such that even seemingly
    benign traffic like an Nmap scan causes it to crash. SCADA systems are particularly
    notorious for this sort of behavior. You always want to explain this to your client.
    When working with computers, there are no guarantees.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然希望你在渗透测试中不会让任何服务崩溃，但总是有可能碰到一个特别敏感的服务，它的编程并没有接受除了预期输入以外的任何输入，因此即使是像 Nmap 扫描这样的看似无害的流量也会导致它崩溃。SCADA
    系统尤其以这种行为而著称。你总是需要向客户解释这一点。在处理计算机时，没有任何保证。
- en: We’ll return to the Nmap tool in the next chapter when we use the Nmap Scripting
    Engine (NSE) to learn detailed vulnerability information about our target systems
    before beginning exploitation.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一章回到 Nmap 工具，当时我们将使用 Nmap 脚本引擎（NSE）来了解目标系统的详细漏洞信息，准备开始漏洞利用。
- en: Summary
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter we’ve managed to cover a lot of ground very quickly just by
    using publicly available sources and port scanners. We used tools such as theHarvester
    and Maltego to scour the Internet for information such as email addresses and
    websites. We used the Nmap port scanner to find out which ports are listening
    on our target virtual machines. Based on the output we’ve discovered, we can now
    do some research on known vulnerabilities as we start to think like attackers
    and actively seek exploitable vulnerabilities in the systems. In the next chapter,
    we’ll cover the vulnerability analysis phase of penetration testing.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们通过使用公开可用的资源和端口扫描工具迅速覆盖了大量内容。我们使用了 theHarvester 和 Maltego 等工具在互联网上查找信息，如电子邮件地址和网站。我们使用
    Nmap 端口扫描工具找出了在目标虚拟机上监听的端口。根据我们发现的输出，我们现在可以研究已知的漏洞，开始像攻击者一样思考，并积极寻找系统中的可利用漏洞。在下一章中，我们将介绍渗透测试中的漏洞分析阶段。
