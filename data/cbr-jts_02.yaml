- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Guarding with Special Care
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 特别守卫
- en: Even castles with strong fortifications should be guarded, paying particular
    attention to the recessed corners.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是拥有强大防御工事的城堡，也应当加以守卫，特别要注意凹陷的角落。
- en: What shinobi should keep in mind when stealing into a castle or camp are the
    naturally fortified and difficult directions, the woods, and blind spots.
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 忍者在潜入城堡或营地时应牢记自然防御严密且难以突破的方向、树林和盲点。
- en: ''
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '—Yoshimori Hyakushu #10'
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '—吉盛百首 #10'
- en: Shinobi were historically proficient infiltrators. The ancient scrolls describe
    how to quickly identify and brutally exploit weak spots in an enemy’s fortifications.
    The scrolls also stress that shinobi should use higher-order thinking to creatively
    apply their knowledge when building their own defenses. *Bansenshūkai* advises
    commanders tasked with defending a camp or castle to identify, inspect, and guard
    with special care the areas where shinobi are most likely to attempt entry, such
    as the recessed corners of a castle’s stone walls, rubbish disposal areas, water
    pipes, and nearby woods or bushes.^([1](b01.xhtml#endnote-28))
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 忍者在历史上是非常熟练的渗透者。古代卷轴描述了如何迅速识别并残酷地利用敌人防御工事中的薄弱点。卷轴还强调，忍者应当运用更高层次的思维，在建设自己的防御时创造性地应用他们的知识。*万川集海*建议负责守卫营地或城堡的指挥官要特别注意识别、检查并严密守护那些忍者最有可能尝试突破的区域，例如城堡石墙的凹陷角落、垃圾处理区、水管、以及附近的树林或灌木丛。^([1](b01.xhtml#endnote-28))
- en: Understanding Attack Vectors
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解攻击向量
- en: Consider the castle’s wall an *attack surface* and weak points in the castle’s
    wall (for example, the water pipe or poorly placed stones in the wall that provide
    footholds) *attack vectors*. The term *attack surface* refers to all the software,
    networks, and systems that the adversary has the opportunity to attack. Any point
    within the attack surface can be an attack vector, or the means an attacker uses
    to gain access. In cybersecurity, it’s always advisable to reduce your attack
    surface. That said, while reducing the castle footprint would shrink the attack
    surface that needs to be defended, it wouldn’t mitigate the amount of damage the
    adversary could inflict or prevent any given attack vector from being exploited.
    Nonetheless, attack surface reduction can make guarding the target easier.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 将城堡的墙壁视为*攻击面*，而城堡墙壁中的薄弱点（例如，水管或墙中不合理摆放的石块，这些石块提供了攻击者的立足点）则为*攻击向量*。*攻击面*指的是敌方有机会攻击的所有软件、网络和系统。攻击面中的任何一点都可能成为攻击向量，或者说攻击者用来获取访问权限的手段。在网络安全中，通常建议缩小攻击面。也就是说，虽然缩小城堡的面积可以减少需要防守的攻击面，但它并不能减轻敌人可能造成的损害，也无法防止任何给定的攻击向量被利用。尽管如此，减少攻击面还是能让守卫目标变得更容易。
- en: '*Bansenshūkai*’s volume on hidden infiltration includes a list of well-intentioned
    defensive techniques, weapons, and modes of thought that can actually expose a
    camp to risk. It implores commanders to consider how everything in their environment
    could be used against them. For example, the scroll instructs infiltrators to
    look for *shinobi-gaeshi*, spikes set up around an enemy’s encampment to deter
    would-be attackers.^([2](b01.xhtml#endnote-29)) Because defenders placed these
    spikes in locations they considered vulnerable, the spikes’ presence told enemy
    shinobi where the defenses were inadequate; defenders were essentially broadcasting
    their insecurities. Shinobi knew they could remove these spikes—doing so was relatively
    easy, as they were almost always attached as an afterthought—and gain passage
    through the weakest spot in the target’s perimeter.^([3](b01.xhtml#endnote-30))'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*万川集海*关于隐秘渗透的卷册列出了一些本意良好的防御技巧、武器和思维模式，这些实际上可能让营地暴露于风险之中。它敦促指挥官考虑他们环境中的一切是否可能被敌人用来对付自己。例如，卷轴指示渗透者寻找*忍者返*，即敌人围绕营地设置的刺来阻止潜在攻击者。^([2](b01.xhtml#endnote-29))
    由于防守者将这些刺放置在他们认为脆弱的地方，因此这些刺的存在告诉敌方忍者防御薄弱之处；防守者实际上是在公开自己的脆弱。忍者知道他们可以移除这些刺——这通常很容易做到，因为这些刺几乎总是作为事后补充放置的——并通过目标周围最薄弱的地方突破防线。^([3](b01.xhtml#endnote-30))'
- en: A succinct example of such security that is “bolted on” as an afterthought is
    found in Microsoft Windows’ PowerShell. The multitude of security features added
    on top of the .NET framework with each new version of PowerShell do not address
    the product’s core flaws and, in fact, have allowed threat actors to create an
    armory of tools and weapons that can be used to infiltrate systems that support
    PowerShell. This is an excellent case study for any security researcher wishing
    to examine *shinobi-gaeshi* more closely.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的“事后加固”安全例子可以在微软Windows的PowerShell中找到。每个新版本的PowerShell在.NET框架之上增加的众多安全功能并没有解决该产品的核心缺陷，事实上，它们使得威胁行为者能够创建一整套工具和武器，用以渗透支持PowerShell的系统。这是任何希望更深入研究*忍返*的安全研究人员的一个极好案例。
- en: The ancient castles still standing in Japan are not typically adorned with spikes,
    but they do tend to have water pipes that are too small for a human to climb through,
    perimeters cleared of vegetation, and no recessed corners in the outer walls—all
    of which suggest that emperors, taking their cues from shinobi, made efforts over
    time to eliminate these vulnerabilities. However, while it is ideal to eliminate
    weaknesses so they do not require guarding, it is not always possible.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 日本仍然屹立的古老城堡通常不会装饰尖刺，但它们确实往往有太小的水管，使人无法通过，周围的植被被清除，外墙也没有凹陷的角落——所有这些都表明，皇帝们从忍者那里获得灵感，随着时间的推移，采取了措施消除这些弱点。然而，虽然消除弱点是理想的，因为这样就不需要看守，但这并非总是可能的。
- en: In this chapter, we’ll discuss the concept of guarding and its proposed place
    within the five functions of cybersecurity. We will then discuss how to identify
    the vulnerable areas that may require guarding with threat modeling.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论守卫的概念及其在网络安全五大职能中的拟议位置。然后，我们将讨论如何通过威胁建模识别可能需要守卫的脆弱区域。
- en: The Concept of Guarding
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 守卫的概念
- en: '*Guarding* is the act of exercising protective control over assets by observing
    the environment, detecting threats, and taking preventative action. For example,
    the lord of a castle identifies a fairly large water drainage pipe in the castle
    wall as a weak point. The lord retains the pipe, which performs an important function
    in allowing water to exit, but requires a guard to stand nearby, preventing attackers
    from using the pipe as a means of access.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*守卫*是通过观察环境、发现威胁并采取预防措施来对资产进行保护控制的行为。例如，城堡的领主发现城堡墙上的一个相当大的排水管是一个弱点。领主保留了这个管道，因为它在允许水排出方面发挥着重要作用，但要求有卫兵站在附近，防止攻击者利用这个管道作为进入手段。'
- en: In general, organizations tend to keep cybersecurity staff in the dark about
    weak systems, network blind spots, or vulnerable attack vectors that should be
    guarded with special care. Some organizations assume it’s entirely the cybersecurity
    staff’s responsibility to discover security flaws in the network. Many stakeholders
    have not identified these attack vectors in the first place, or if no commercial
    solution exists or no commonly accepted countermeasure can be applied easily,
    they simply ignore the weaknesses and hope they will not be exploited.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，组织倾向于让网络安全人员对弱系统、网络盲点或需要特别小心守卫的脆弱攻击向量一无所知。一些组织认为发现网络安全缺陷完全是网络安全人员的责任。许多利益相关者根本没有首先识别出这些攻击向量，或者如果没有现成的商业解决方案，或者没有广泛接受的防范措施能够轻松应用，他们就简单忽视这些弱点，希望它们不会被利用。
- en: In some instances, management directs security personnel *not* to perform basic
    logging, scanning, or patching of legacy systems for fear that touching them will
    disrupt business operations. In more political organizations, it’s common for
    a threat to not be recognized as a valid concern unless it’s identified through
    a formal documentation process. Imagine seeing that a castle is missing its west
    wall, reporting this obvious vulnerability to the king, and having the king dismiss
    your concerns because his guards have not mentioned it in their official reports.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，管理层指示安保人员*不要*进行基本的日志记录、扫描或对遗留系统进行修补，因为担心触碰这些系统会干扰业务运营。在更具政治性的组织中，除非通过正式的文档过程确认，否则常常不会将威胁视为有效的关注点。试想一下，如果发现一座城堡缺少西墙，你将这一明显的漏洞报告给国王，但国王却因卫兵在官方报告中没有提到此事而忽视你的担忧。
- en: Guarding Within a Cybersecurity Framework
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在网络安全框架中的守卫
- en: 'The *National Institute of Standards and Technology (NIST) Cybersecurity Framework*^([4](b01.xhtml#endnote-31))
    seeks to prevent these common missteps and improve organizations’ resilience to
    cyber threats through five core cybersecurity functions: identify, protect, detect,
    respond, and recover. These functions help identify vulnerabilities in networks
    and systems by using common information security tools and processes.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*美国国家标准与技术研究院（NIST）网络安全框架*^([4](b01.xhtml#endnote-31))旨在防止这些常见错误，并通过五个核心的网络安全功能来提高组织对网络威胁的抵御能力：识别、保护、检测、响应和恢复。这些功能通过使用常见的信息安全工具和流程，帮助识别网络和系统中的漏洞。'
- en: For instance, most organizations begin the process of identifying weaknesses
    by conducting vulnerability or application scans of systems on their network—this
    is the *identify* function. Effective and reliable, these scans identify obvious
    security issues such as unpatched software, active accounts with blank passwords,
    default factory credentials, unparameterized input, and SSH ports open to the
    internet. Next comes the *protect* function. Upon discovery of an unsecured system,
    the scanner documents the problem, and then security staff fixes or mitigates
    the vulnerability with patches; configuration changes; or long-term architectural,
    security system, or software implementations.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，大多数组织通过对其网络中的系统进行漏洞扫描或应用扫描来开始识别弱点——这就是*识别*功能。有效且可靠的扫描可以识别出明显的安全问题，如未打补丁的软件、具有空白密码的活跃账户、默认的工厂凭据、未加参数化的输入，以及对互联网开放的SSH端口。接下来是*保护*功能。在发现一个不安全的系统后，扫描工具记录问题，然后安全人员通过修补、配置更改或长期的架构、安全系统或软件实施来修复或缓解漏洞。
- en: 'If the security staff is unable to protect a system that has been identified
    as an attack vector, I believe they should *guard* it through human controls.
    However, a guard function is missing from the NIST framework. Instead, we move
    straight to the *detect* function: the security staff attempts to detect an adversary
    by monitoring and investigating anomalous events. Once the security staff detects
    infiltration, only then do they execute the *respond* function by containing the
    threat, neutralizing the threat, and reporting it.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安全人员无法保护已识别为攻击通道的系统，我认为他们应该通过人工控制来*守卫*该系统。然而，NIST框架中缺少守卫功能。相反，我们直接进入*检测*功能：安全人员通过监控和调查异常事件来试图发现对手。一旦安全人员发现渗透，他们才会执行*响应*功能，通过遏制威胁、消除威胁并报告来进行应对。
- en: 'Last is the *recovery* function: restoring the systems and data to operational
    status, as well as improving their ability to resist future attacks.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 最后是*恢复*功能：将系统和数据恢复到可操作状态，并提高它们抵御未来攻击的能力。
- en: While essential to a robust security profile, these safeguards are prevention-,
    protection-, or response-based functions. The cybersecurity industry rarely applies
    the concept of guarding—using human controls and protection—to information systems,
    because it’s not feasible for a human defender to manually inspect and approve
    every email, web page, file, or packet that leaves or enters the environment in
    the way that a gate guard could watch people or packages entering a building.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管对强大的安全配置至关重要，这些保障措施仍然是预防性、保护性或响应性的功能。网络安全行业很少将“守卫”概念应用于信息系统，因为让人工防御者手动检查和批准每一封邮件、网页、文件或数据包的进出，就像门卫监控人或包裹进入大楼一样，是不切实际的。
- en: For example, computers with 1GB network connections can process more than 100,000
    packets per second, far more than any human could inspect. Instead of using human
    guards, defenders either rely heavily on automated security controls or simply
    accept/ignore risk as part of doing business. Guarding can still be feasible within
    a modern digital network, however, if guards are inserted only into areas that
    need special care and attention, such as the most likely attack vectors. This
    is why threat modeling to identify these areas in your organization will be useful.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，拥有1GB网络连接的计算机每秒可以处理超过100,000个数据包，这远远超过任何人类能够检查的数量。与其依赖人工监视，防御者通常会大量依赖自动化的安全控制，或者干脆接受/忽视风险作为业务的一部分。然而，在现代数字网络中，防守仍然是可行的，前提是防守仅仅被应用于那些需要特别关注和小心的区域，比如最可能的攻击通道。这就是为什么进行威胁建模以识别这些区域对你的组织会非常有帮助的原因。
- en: Threat Modeling
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 威胁建模
- en: The closest thing to guarding in cybersecurity is *threat hunting*, which involves
    vigorously seeking out indicators of infiltration in logs, forensic data, and
    other observable evidence. Few organizations perform threat hunting, and even
    in those that do, a hunter’s job is to detect, not guard.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 网络安全中最接近守卫的行动是*威胁狩猎*，即积极地在日志、取证数据和其他可观察的证据中寻找潜在的入侵迹象。很少有组织进行威胁狩猎，即使在进行的组织中，猎人的工作也是发现，而不是守卫。
- en: Nonetheless, it’s important that cyber defenders go beyond the conventional
    framework, continually imagining new ways in which networks and information systems
    could be attacked, and implement the necessary defenses. To this end, defenders
    can use threat modeling to implement information flow controls and design safeguards
    against threats rather than simply react to them.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，网络防御者必须超越传统框架，持续地设想网络和信息系统可能遭受的攻击方式，并实施必要的防御措施。为此，防御者可以使用威胁建模来实施信息流控制，并设计防护措施以应对威胁，而不仅仅是对其做出反应。
- en: Typically performed only by cyber-mature organizations, threat modeling involves
    documenting a *data flow diagram (DFD)*, which describes the flow of data and
    processes inside systems. DFDs are typically documented as a type of flowchart,
    but can be roughly represented by a detailed network map. A DFD can be used as
    a tool for structured analysis of your attack surface that allows you to think
    of attack scenarios within the parameters of the documented information systems.
    It doesn’t require vulnerability scanning, proving of the attack scenario by red
    teams, or validation from a compliance framework, and organizations don’t need
    to wait for a security incident to prove a threat model before acting to guard
    against the vulnerability.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 威胁建模通常只有在网络安全成熟的组织中进行，它涉及到记录一个*数据流图（DFD）*，该图描述了系统内部数据和过程的流动。数据流图通常以流程图的形式记录，但也可以通过详细的网络图来粗略表示。数据流图可以作为对攻击面进行结构化分析的工具，帮助你在已记录的信息系统参数内思考攻击场景。它不需要漏洞扫描、红队验证攻击场景，或合规框架的验证，组织也不必等到发生安全事件后才证明威胁模型，从而采取措施防范漏洞。
- en: Understanding the modern cyber equivalents to “recessed corners of a castle’s
    stone walls, rubbish disposal areas, water pipes, and nearby woods or bushes”
    of your environment could help you identify attack vectors that may need guarding
    with special care.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 了解现代网络安全中类似于“城堡石墙的凹角、垃圾处理区、水管以及附近的树林或灌木丛”的环境，可以帮助你识别可能需要特别防护的攻击路径。
- en: 'Consider this example: as part of their nightly duties, a security guard pulls
    on every doorknob in an office to make sure the doors are locked. If they find
    an unlocked door, they lock it, secure the keys, and file a security incident
    ticket.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，作为他们夜间职责的一部分，保安会拉动办公室每个门把手，以确保门是锁着的。如果发现某扇门未锁，他们会将门锁上，确保钥匙安全，并提交一份安全事件工单。
- en: It is later determined that a security incident occurred because door keys were
    copied or stolen, so the organization adds a second-level authenticator control
    (such as a keypad or badge reader) to the doors, changes the locks, and issues
    new keys. These new preventive security controls satisfy compliance auditors,
    and the ticket reporting the unsecured doors is closed. The chief information
    security officer (CISO) even hires a red team to perform a narrow-scope physical
    penetration test of the new door-locking mechanisms, and the team confirms that
    they were denied access because of the enhanced security measures.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 后来发现，安全事件发生是因为门钥匙被复制或盗窃，因此该组织在门上增加了第二级认证控制（例如数字键盘或徽章读取器），更换了锁芯，并发放了新钥匙。这些新的预防性安全控制措施满足了合规审计员的要求，未锁门的报告工单也已关闭。首席信息安全官（CISO）甚至雇佣了红队，对新的门锁机制进行了小范围的物理渗透测试，红队确认由于增强的安全措施，他们未能获得访问权限。
- en: However, once we conduct threat-modeling exercises, we identify that it’s possible
    to push moveable ceiling tiles out of the way and climb over the office wall,
    bypassing the new security measures altogether. To counteract this, we could add
    controls, such as security cameras or motion detectors in the ceiling crawl space,
    or we could install solid, tunnel-resistant ceilings and floors. Guards could
    even be hired and trained to look for evidence of disturbed ceiling tiles, ceiling
    particulate on the floor, or footprints on the walls. Guarding against this threat
    would require that guards be posted inside the room or stationed within the ceiling
    crawl space, armed with the authority and tools to protect the room from intruders.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，一旦我们进行威胁建模练习，就会发现有可能将可移动的天花板瓷砖推开，然后翻越办公室墙壁，完全绕过新的安全措施。为了解决这个问题，我们可以增加控制措施，比如在天花板爬行空间安装安全摄像头或运动探测器，或者安装坚固的、防隧道化的天花板和地板。甚至可以雇佣并培训守卫，寻找被扰动的天花板瓷砖、地板上的天花板颗粒或墙上的脚印。针对这一威胁的防范需要守卫在房间内驻守，或者站在天花板爬行空间内，拥有保护房间免受入侵者侵害的权力和工具。
- en: The feasibility of implementing such countermeasures is low—you might be laughed
    out of your manager’s office for even suggesting them. It’s easy to see why organizations
    are more likely to accept or ignore certain threats than attempt to repel them,
    and this is likely why the NIST Cybersecurity Framework doesn’t include a guard
    function. If thoughtfully informed by detailed threat modeling and carefully implemented
    in a creative and deliberate manner, however, this guard-centric mode of thinking
    can bolster the security of information systems and networks.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 实施这些对策的可行性较低——你可能连提出这一建议都可能被经理嘲笑。很容易理解为什么组织更倾向于接受或忽视某些威胁，而不是尝试抵御它们，这也可能是为什么NIST网络安全框架没有包括守卫功能。然而，如果通过详细的威胁建模进行深思熟虑，并以创造性和谨慎的方式加以实施，这种以守卫为中心的思维方式可以加强信息系统和网络的安全性。
- en: An example of a scenario suitable for the implementation of the guard function
    is in *jump boxes*. Jump boxes are systems that span two or more network boundaries,
    allowing administrators to log in remotely to the jump box from one network and
    “jump” to another network to gain access to it. The conventional cybersecurity
    framework advises hardening jump box systems by patching all known vulnerabilities,
    restricting access with various firewall rules, and monitoring audit logs for
    anomalous events such as unauthorized access. However, such technical controls
    are often attacked or bypassed. A guard, on the other hand, could physically disconnect
    the internal network cable from the other network and connect it directly only
    after verifying with the administrator that they have approval to execute remote
    commands against these systems. The guard could also actively monitor actions
    on the machine in real time and forcibly terminate the session anytime they observe
    malicious or unauthorized actions. Implementing the guard function in this way
    might mean hiring a human guard to sit in the data center to protect both physical
    and remote access to these sensitive systems.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一个适合实现守卫功能的场景示例是在*跳跃盒子*中。跳跃盒子是跨越两个或多个网络边界的系统，允许管理员从一个网络远程登录到跳跃盒子，并“跳跃”到另一个网络以访问它。传统的网络安全框架建议通过修补所有已知漏洞、使用各种防火墙规则限制访问、并监控审计日志中异常事件（如未授权访问）来强化跳跃盒子系统。然而，这些技术控制措施常常受到攻击或被绕过。另一方面，守卫可以物理断开内部网络电缆与其他网络的连接，并在与管理员确认他们获得批准后，直接连接该网络以执行远程命令。守卫还可以实时监控机器上的操作，并在观察到恶意或未授权行为时随时强制终止会话。以这种方式实现守卫功能可能意味着雇佣一个人类守卫坐在数据中心，保护这些敏感系统的物理访问和远程访问。
- en: Using Threat Modeling to Find Potential Attack Vectors
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用威胁建模来发现潜在的攻击路径
- en: The basic steps for identifying attack vectors are to follow the guidelines
    for threat modeling, starting with creating a DFD. Once potential attack vectors
    are identified from the DFD, the shinobi scrolls recommend inspecting them to
    determine what technical security controls can be implemented to protect them.
    Then, as a last resort, use guards to defend these areas as well. You can use
    the network map you made in the previous chapter to help create the DFD or use
    it as a rough substitute.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 识别攻击向量的基本步骤是遵循威胁建模的指导方针，从创建DFD开始。一旦从DFD中识别出潜在的攻击向量，忍者卷轴建议检查这些向量，确定可以实施哪些技术安全控制来保护它们。然后，作为最后的手段，使用防护措施来保护这些区域。你可以使用前一章创建的网络地图来帮助创建DFD，或者将其作为粗略的替代方案。
- en: '*Model your information systems.* Create an accurate DFD with the help of your
    organization’s network, security, development, business, and other IT system owners
    and experts. It does not need to use Unified Modeling Language (UML) or other
    advanced concepts—it simply needs to accurately represent your systems and the
    information within them. Note that large, complex systems can easily take a team
    more than six months to diagram.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*建模你的信息系统。* 与组织的网络、安全、开发、业务和其他IT系统的负责人和专家合作，创建一个准确的数据流图（DFD）。它不需要使用统一建模语言（UML）或其他高级概念——它只需要准确表示你的系统及其中的信息。请注意，大型复杂系统可能需要一个团队超过六个月的时间来绘制图表。'
- en: '*STRIDE and guard.* STRIDE is a threat-modeling methodology developed by Microsoft^([5](b01.xhtml#endnote-32))
    to describe what could go wrong in an information system. The acronym comes from
    the ways in which an attacker could violate six properties of the system:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*STRIDE与防护。* STRIDE是微软开发的威胁建模方法论，用于描述信息系统中可能出现的问题。该缩写来自攻击者可能违反系统的六个属性：'
- en: '| **S**poofing Identity | = | Authentication |'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **S**身份伪造 | = | 身份验证 |'
- en: '| **T**ampering with Data | = | Integrity |'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **T**篡改数据 | = | 完整性 |'
- en: '| **R**epudiation/Deniability | = | Nonrepudiation |'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **R**否认/可否认性 | = | 不可否认性 |'
- en: '| **I**nformation Disclosure | = | Confidentiality |'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **I**信息泄露 | = | 保密性 |'
- en: '| **D**enial of Service | = | Availability |'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **D**服务拒绝 | = | 可用性 |'
- en: '| **E**levation of Privilege | = | Authorization |'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **E**权限提升 | = | 授权 |'
- en: To use STRIDE, you will review your DFD and, at every point where there is data
    input, data processing, data output, or other data flows/rules, hypothesize how
    an adversary may threaten it. For example, if a system requires a thumbprint to
    verify a user’s identity before allowing access to the system, you might consider
    how they could spoof the thumbprint to impersonate a different user. Similarly,
    you could think about ways they could tamper with the fingerprint database to
    insert their print, or you could explore a scenario in which the attacker causes
    the fingerprint scanner to go down, allowing unauthorized access through a weaker
    authentication process.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用STRIDE时，你将回顾你的数据流图（DFD），在每一个数据输入、数据处理、数据输出或其他数据流/规则的点上，假设对手可能如何威胁这些环节。例如，如果系统需要通过指纹验证用户身份才允许访问，你可能会考虑对手如何伪造指纹来冒充其他用户。同样，你可以思考他们如何篡改指纹数据库，将自己的指纹插入其中，或者探索攻击者使指纹扫描器瘫痪，从而通过更弱的身份验证过程获得未授权访问的场景。
- en: After learning this framework, you can use it to challenge any imagined threat
    models that do not accurately represent your systems or scenarios that do not
    describe how a plausible threat impacts a specific component, surface, or vector.
    This may require inviting technical subject matter experts to threat-modeling
    sessions.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在学习了这个框架之后，你可以利用它挑战任何不准确描述你系统的假想威胁模型，或是没有描述可行威胁如何影响特定组件、表面或通道的场景。这可能需要邀请技术领域的专家参加威胁建模会议。
- en: 'Suppose, for example, that an organizational threat-modeling session produces
    the following scenario: “The threat of malware compromises the integrity of internal
    databases.”'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设，例如，一个组织的威胁建模会议产生了以下场景：“恶意软件威胁破坏了内部数据库的完整性。”
- en: 'This threat is not properly modeled. Among other pieces of critical information,
    the scenario does not describe how malware could be delivered and installed. Nor
    does it describe how the malware would compromise the integrity of the database:
    does it encrypt, delete, or corrupt data? It does not describe which vectors allow
    the threat to impact the system, and it doesn’t consider the information flow
    and controls currently in place or provide realistic countermeasures. If, for
    example, we determined that the most plausible way to infect an internal business
    database with malware would be through a malicious USB drive, then security may
    need to draft policies detailing how staff must use USB drives or install cameras
    to monitor access to USB ports. The organization might decide to grant security
    the ability to turn USBs on or off, dictate which drives can interface with USBs,
    control the information flow and direction of USB ports, inspect the files on
    USB drives before granting access to the requestor, control access with hardware
    or software locks, or even hot-glue the USB ports shut. Such measures, resulting
    from thorough threat modeling, allow security personnel to guard against specific
    threats with special care, rather than having to accept the risk or being limited
    to protect and detect functions.'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该威胁没有得到正确建模。除其他关键信息外，场景没有描述恶意软件是如何被传输和安装的。也没有描述恶意软件如何破坏数据库的完整性：它是加密、删除还是损坏数据？它没有描述哪些攻击途径允许威胁影响系统，也没有考虑当前的信息流和控制措施，也没有提供现实的对策。例如，如果我们确定最可能的方式是通过恶意USB驱动器感染内部业务数据库，那么安全部门可能需要制定政策，详细说明员工如何使用USB驱动器，或者安装摄像头以监控USB端口的访问。组织可能会决定授予安全部门启用或禁用USB设备的权限，指定哪些驱动器可以与USB接口连接，控制USB端口的信息流动和方向，要求在授权访问请求者之前检查USB驱动器上的文件，通过硬件或软件锁控制访问，甚至将USB端口用热熔胶封闭。通过彻底的威胁建模得出的这些措施，能让安全人员针对特定威胁进行特别的防范，而不是仅仅接受风险或局限于保护和检测功能。
- en: '*Do not advertise bolted-on security.* Threat modeling is an iterative, infinite
    process of evaluating new threats and developing protective countermeasures. In
    your haste to protect your systems, avoid the use of *shinobi-gaeshi* security
    controls—defensive efforts that may backfire by drawing attention to your vulnerable
    areas. Often because of time, resource, or operational restrictions, you may have
    taken only half measures that a motivated, sophisticated threat actor can defeat.
    For example, hot glue in a USB port can be removed with isopropyl alcohol. Where
    possible, assess the viability of a pure security-first defense approach.'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*不要宣传附加的安全措施*。威胁建模是一个迭代的、无限的过程，旨在评估新威胁并制定防护对策。在你急于保护系统的过程中，避免使用*忍者返击*式的安全控制——这些防御措施可能适得其反，引起攻击者对你系统漏洞的关注。由于时间、资源或操作限制，你可能只采取了半途而废的措施，这些措施可能会被有动机的、技术高超的威胁行为者轻易突破。例如，USB端口上的热熔胶可以通过异丙醇去除。在可能的情况下，评估一种以安全为先的防御方法的可行性。'
- en: In the USB threat example, the USB interacts with the hardware abstraction layer
    (HAL) that sits below the OS kernel. It cannot be fully protected or mitigated
    with software and policy controls, as those exist above the kernel and can be
    bypassed. Therefore, a more complete solution might be to implement a motherboard
    and chassis configuration in which USB ports do not even exist. In contrast, hot
    glue in the USB port advertises to motivated threat actors that you have not properly
    addressed the security of USBs, and it will likely be a successful attack vector
    for them should they be able to pull it free—just as the shinobi pulled out the
    spikes bolted onto pipes and walls in ancient times.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在USB威胁的示例中，USB与操作系统内核下方的硬件抽象层（HAL）进行交互。它无法通过软件和政策控制完全保护或缓解，因为这些控制措施存在于内核之上，并且可能被绕过。因此，更完整的解决方案可能是实施一种主板和机箱配置，使得USB端口根本不存在。相比之下，USB端口上的热熔胶会向有动机的威胁行为者展示你没有正确处理USB的安全问题，如果他们能把胶粘取下，这将很可能成为他们成功攻击的途径——就像古代忍者拔出钉在管道和墙壁上的尖刺一样。
- en: Recommended Security Controls and Mitigations
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推荐的安全控制和缓解措施
- en: Where relevant, each recommendation is presented with an applicable security
    control from the NIST 800-53 standard, and it should be evaluated through the
    lens of guarding with special care.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在相关情况下，每个建议都将附带一个适用的来自NIST 800-53标准的安全控制，并应通过特殊防护的角度进行评估。
- en: 'Review the results of auditors, red team assessments, vulnerability scans,
    and incident reports to find vulnerabilities in your environment that cannot be
    easily patched or mitigated with controls (that is, those that require special
    guarding). [CA-2: Security Assessments; CA-8: Penetration Testing; IR-6: Incident
    Reporting | (2) Vulnerabilities Related to Incidents; RA-5: Vulnerability Scanning]'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '审查审计员、红队评估、漏洞扫描和事件报告的结果，以找出在环境中无法轻易修补或通过控制措施缓解的漏洞（即那些需要特殊防护的漏洞）。[CA-2: 安全评估；CA-8:
    渗透测试；IR-6: 事件报告 | (2) 与事件相关的漏洞；RA-5: 漏洞扫描]'
- en: 'Perform threat modeling of your environment to identify vulnerabilities. Then
    determine which ones can be designed out of your environment. Explore the concept
    of guarding security functions and apply those controls to threats that cannot
    be easily purged. [SA-8: Security Engineering Principles; SA-14: Criticality Analysis;
    SA-15: Development Process, Standards, and Tools | (4) Threat Modeling/Vulnerability
    Analysis; SA-17: Developer Security Architecture and Design]'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '对你的环境进行威胁建模，以识别漏洞。然后确定哪些漏洞可以通过设计将其从环境中消除。探索防护安全功能的概念，并将这些控制措施应用于那些无法轻易消除的威胁。[SA-8:
    安全工程原则；SA-14: 关键性分析；SA-15: 开发过程、标准和工具 | (4) 威胁建模/漏洞分析；SA-17: 开发人员安全架构和设计]'
- en: 'To deter, protect against, and ensure rapid response to threats, hire real-time
    security personnel as guards and integrate them into vulnerable areas of business
    operations. [IR-10: Integrated Information Security Analysis Team]'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '为了威慑、保护并确保对威胁的快速响应，雇佣实时安全人员作为防护员，并将其整合到业务运营的易受攻击区域中。[IR-10: 集成信息安全分析团队]'
- en: Debrief
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 汇报
- en: This chapter has helped you think about the places in a network environment
    that an adversary is likely to target for infiltration. You have also been introduced
    to the concept of guarding with direct human interaction between information systems
    and processes. You may have utilized your network map from the previous chapter
    or created your own data flow diagram (DFD) as a representation of your environment
    to identify likely attack vectors and potential STRIDE threats that could be mitigated
    with guards.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 本章帮助你思考网络环境中对手可能会针对的渗透目标。你还了解了通过信息系统和流程之间的直接人工互动进行防护的概念。你可能已经利用了上一章的网络图，或者创建了自己的数据流图（DFD）来表示你的环境，以识别可能的攻击向量和可以通过防护措施缓解的潜在STRIDE威胁。
- en: In the next chapter, we’ll explore a “xenophobic” security concept used by the
    ancient ninja that may hinder adversaries from finding any common ground or footholds
    in your environment to even start their attack vector process.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将探讨古代忍者使用的“排外”安全概念，这可能会阻止对手在你的环境中找到任何共同点或立足点，甚至无法开始其攻击向量过程。
