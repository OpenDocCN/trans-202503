- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Network Tapping
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 网络监听
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: Today, nearly all devices are connected to a network. This allows them to communicate
    with other devices locally, such as when connecting to printers, and over the
    internet, such as when visiting a website or using an online application. Although
    these connections provide a lot of utility, they also allow black hats to find
    those devices. By exploiting the way networks run, attackers can see your traffic,
    pretend to be a legitimate device, or even determine how traffic moves on the
    network.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，几乎所有设备都连接到了网络。这使得它们可以在本地进行通信，比如连接打印机，或者通过互联网进行通信，比如访问网站或使用在线应用程序。尽管这些连接提供了很多便利，但它们也让黑帽黑客能够找到这些设备。通过利用网络的运行方式，攻击者可以看到你的流量，冒充合法设备，甚至确定流量在网络中的流动方式。
- en: In this chapter, you’ll learn more about how we create wired computer networks,
    as well as some details about the devices that make up a network. You’ll learn
    how adversaries steal traffic on these networks and gain access to network devices.
    You’ll also learn how to defend against network attacks using firewalls and intrusion
    detection systems (IDSs). We’ll conclude this chapter by configuring your device’s
    firewall.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习更多关于如何创建有线计算机网络的内容，以及组成网络的设备的一些细节。你将了解对手是如何窃取这些网络上的流量并获取网络设备访问权限的。你还将学习如何使用防火墙和入侵检测系统（IDSs）来防御网络攻击。我们将在本章的最后配置你设备的防火墙。
- en: This chapter focuses on wired networks only. In Chapter 8, we’ll talk about
    wireless networks, which have their own set of challenges. Even if you use a wireless
    network, your traffic will almost certainly flow through a wired network eventually.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章只关注有线网络。在第八章中，我们将讨论无线网络，这些网络有自己的一套挑战。即使你使用无线网络，你的流量最终几乎肯定会通过有线网络。
- en: The Basics of Network Design
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络设计基础
- en: Networks allow two or more devices to communicate with each other, either wirelessly
    or using cables. You can imagine the link between devices as somewhat similar
    to the power lines connected to your home. The lines, some of them attached to
    poles, connect the power station to your house. The power station most likely
    is connected to another station, which is connected to another one, until it reaches
    the place where the power is being generated, such as a dam. In the same way,
    your computer is connected to other devices in a chain until it reaches another
    device on the other side of the network.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 网络允许两个或更多设备进行通信，无论是无线还是使用电缆。你可以把设备之间的连接想象成有点类似于连接到你家里的电力线。这些电线，其中一些附着在电杆上，将电力站与房屋连接起来。电力站很可能与另一个电站相连，而那个电站又与另一个相连，直到到达产生电力的地方，比如水坝。同样地，你的计算机通过一条链路与其他设备连接，直到到达网络另一端的另一个设备。
- en: Networks are made up of more than just cables. They also include devices, such
    as routers and switches, that help move traffic and navigate the connections.
    Routers provide the main connections between two different networks. In Chapter
    2, we discussed the difference between public and private networks. A router is
    the device that directs traffic between these two types of networks. A switch
    works within a network, directing traffic between the devices connected to it.
    Together, these two devices transport your traffic from one point to another.
    [Figure 6-1](#figure6-1) shows an example of a typical rack of routers and switches
    that a large enterprise network might use. Smaller networks, like a small business
    or home network, might have one switch or use a switch/router combo.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 网络不仅仅由电缆组成。它们还包括一些设备，例如路由器和交换机，它们帮助移动流量并导航连接。路由器提供两个不同网络之间的主要连接。在第二章中，我们讨论了公有网络和私有网络之间的区别。路由器是将流量导向这两种网络之间的设备。交换机在网络内部工作，指引流量在连接到它的设备之间流动。这两种设备共同将你的流量从一个点传输到另一个点。[图
    6-1](#figure6-1)展示了一个大型企业网络可能使用的典型路由器和交换机机架的例子。较小的网络，如小型企业或家庭网络，可能只有一个交换机，或者使用交换机/路由器组合设备。
- en: '![f06001](image_fi/501287c06/f06001.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![f06001](image_fi/501287c06/f06001.png)'
- en: 'Figure 6-1: A typical network rack setup (image altered from the original created
    by Adrian Sampson under the Attribution 2.0 Generic [CC BY 2.0] license, [https://creativecommons.org/licenses/by/2.0/](https://creativecommons.org/licenses/by/2.0/))'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-1：典型的网络机架设置（图片已修改，原图由Adrian Sampson根据[CC BY 2.0](https://creativecommons.org/licenses/by/2.0/)许可证创建）
- en: Let’s look at the traffic flow and connections when you’re accessing a website.
    When you send a request to visit a website, you use the HTTP protocol. The protocol
    helps categorize the data, so devices understand how to interpret it. Most protocols
    are also given a *port number*, a special number assigned to the protocol so network
    devices recognize what type of data is being sent and how they should handle it.
    For HTTP, the port number is 80, or 443 if the data is encrypted. When a switch
    or router sees port number 80, it recognizes the packet as HTTP traffic and automatically
    knows how to process it without having to look at all the data inside the packet.
    This makes it quicker to send the packet on to its destination.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下当你访问一个网站时，流量的流动和连接。当你发送请求访问一个网站时，你使用的是 HTTP 协议。该协议帮助对数据进行分类，使得设备可以理解如何解析它。大多数协议还会分配一个*端口号*，这是分配给协议的特殊数字，以便网络设备识别正在发送的数据类型以及它们应该如何处理这些数据。对于
    HTTP，端口号是 80，如果数据是加密的，则是 443。当交换机或路由器看到端口号 80 时，它会识别数据包为 HTTP 流量，并自动知道如何处理它，而不需要查看数据包内部的所有数据。这样就能更快地将数据包发送到目标。
- en: Using HTTP, you send out a request from your computer in the form of a *packet*.
    That packet includes the website request, the port number (80), your IP address,
    and the IP address of the website you’re visiting. This request is sent to a switch.
    The switch looks at the request and determines whether the destination is on the
    current network. Most likely it’s not, so the switch passes the packet to the
    router that connects your house to the internet. As mentioned in Chapter 2, this
    router is known as the default gateway.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 HTTP 时，你从计算机发送一个以*数据包*形式的请求。该数据包包括网站请求、端口号（80）、你的 IP 地址以及你访问的网站的 IP 地址。这个请求会发送到交换机。交换机查看请求并判断目标是否在当前网络上。很可能不在，所以交换机会将数据包传递给连接你家与互联网的路由器。如第二章所述，这个路由器被称为默认网关。
- en: Once the router receives the packet from the switch, it checks its list of all
    the other networks connected to it. There are many types of networks, but the
    most common are the *local area network* *(LAN**)* and *wide area network* *(WAN**)*.
    A LAN is a small network that connects devices in the same physical area. Examples
    of LANs include office buildings, homes, and even airplanes. WANs connect devices
    across a wide geographical area. The internet is made up of many, many WANs, all
    linked into one giant network. The router examines the destination IP address
    of the packet it receives from the switch and determines whether the address is
    on any of the LANs or WANs it’s connected to. If the router doesn’t know where
    that destination IP address is located, it usually has a default network where
    it sends traffic.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦路由器从交换机接收到数据包，它会检查连接到它的所有其他网络的列表。有许多类型的网络，但最常见的有*局域网*（*LAN*）和*广域网*（*WAN*）。局域网是一个小型网络，连接同一物理区域内的设备。局域网的例子包括办公楼、家庭甚至飞机。广域网连接跨越大范围地理区域的设备。互联网由许多广域网组成，所有这些广域网都连接成一个巨大的网络。路由器检查它从交换机接收到的数据包的目标
    IP 地址，并确定该地址是否位于它连接的任何局域网或广域网中。如果路由器不知道该目标 IP 地址位于何处，通常会将流量发送到一个默认网络。
- en: 'Regardless, the router passes traffic to another router, which follows the
    same process. This chain continues until the packet finally reaches a router that
    is connected to the LAN where the destination device is located. The router then
    sends the packet to the switch on the LAN, which finds the destination device.
    There can be more than one switch on a LAN, even hundreds of them on large networks,
    like those maintained by Google or Amazon. Switches pass traffic between them
    much like routers do, except they use the MAC address instead of just the IP address.
    Once the destination device receives the packet, it reads the data inside, such
    as the website request, and responds. The entire process just described then happens
    again in reverse: the original source of the request now becomes the destination
    of the response.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，路由器将流量传递给另一个路由器，后者按照相同的过程进行处理。这个链条会一直延续，直到数据包最终到达一个连接到目标设备所在局域网（LAN）的路由器。然后，路由器将数据包发送到局域网中的交换机，交换机找到目标设备。在局域网中可以有多个交换机，甚至在大型网络中有数百个交换机，比如
    Google 或 Amazon 维护的网络。交换机之间像路由器一样传递流量，不过它们使用 MAC 地址而不仅仅是 IP 地址。一旦目标设备接收到数据包，它会读取数据包中的信息，比如网站请求，并做出响应。刚才描述的整个过程会反向进行：最初的请求源现在变成了响应的目标。
- en: This is the basis of network communication. But it can get more complicated.
    Other devices read network traffic, too, and might even modify it before sending
    it on. For example, a special type of server, called a *proxy server*, takes a
    packet from one network connection and passes it to another connection. Often,
    the proxy server modifies the original packet in some way, such as by changing
    the destination IP address from a public address to a private address. Another
    type of proxy reads website requests and determines whether they conform to what
    an organization has determined to be appropriate to view at work before sending
    them out to the internet to be fulfilled. Still other devices, such as firewalls
    and IDSs, interrupt traffic; we’ll discuss these devices later in the chapter.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这是网络通信的基础。但它可能变得更加复杂。其他设备也会读取网络流量，甚至可能在发送之前对其进行修改。例如，一种特殊类型的服务器，叫做*代理服务器*，从一个网络连接获取数据包并将其传递到另一个连接。代理服务器通常会以某种方式修改原始数据包，例如，将目标IP地址从公有地址更改为私有地址。另一种类型的代理会读取网站请求，并判断它们是否符合组织确定的在工作时适合浏览的内容，然后再将它们发送到互联网以供处理。还有其他设备，如防火墙和入侵检测系统（IDS），会中断流量；我们将在本章后面讨论这些设备。
- en: Attacking Your Network
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 攻击你的网络
- en: Black hats use a variety of techniques to attack your network, depending on
    their goals. Network attacks often focus on gaining access to the network to see
    traffic or steal data. This means they must connect into the network between the
    packets your system sends and the destination of those packets so they can see
    the data being sent. Adversaries also often attack the network directly. These
    attacks usually revolve around trying to find ways to shut down network usage
    so the victim can’t use their network the way they normally would.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客根据他们的目标使用各种技术来攻击你的网络。网络攻击通常专注于获取对网络的访问权限，以查看流量或窃取数据。这意味着他们必须在你的系统发送的数据包和数据包的目的地之间连接到网络，这样他们才能看到正在发送的数据。对手还经常直接攻击网络。这些攻击通常围绕着试图找到关闭网络使用的方法，以使受害者无法像往常一样使用他们的网络。
- en: Either way, the black hat’s primary goal is to understand the network in the
    first place. Adversaries use many reconnaissance techniques to learn about their
    victims before they start their attacks. One common method they use is to do a
    *port scan*, which involves sending requests to every possible port on an IP address
    and then observing how the device at that address responds. Based on these responses,
    the attacker can determine a lot of information about the system. For example,
    if an IP address responds when the black hat scans ports 80 and 443, the attacker
    knows those ports are open and that the server is likely running web services
    of some sort. An adversary can use that information to attack the server directly
    or to trick other systems into thinking they’re a friendly system. Port scans
    provide attackers with valuable information, making it much easier for them to
    craft different network attacks.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，黑客的主要目标首先是了解网络。对手使用多种侦察技术在开始攻击之前了解他们的受害者。一个常见的方法是进行*端口扫描*，即向一个IP地址的所有可能端口发送请求，然后观察该地址上的设备如何响应。根据这些响应，攻击者可以获得大量关于系统的信息。例如，如果一个IP地址在黑客扫描端口80和443时做出响应，攻击者就知道这些端口是开放的，而且服务器可能正在运行某种Web服务。对手可以利用这些信息直接攻击服务器，或者欺骗其他系统认为它们是一个友好的系统。端口扫描为攻击者提供了宝贵的信息，使得他们可以更轻松地制定不同的网络攻击。
- en: How Black Hats See Your Traffic
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 黑客如何查看你的流量
- en: Packets provide attackers all sorts of details, including what devices they
    pass through, where a device is located, and what protocols a device is using,
    not to mention the data held within the packet. When an adversary (or anyone for
    that matter) intercepts traffic as it moves through the network, it’s called *sniffing*.
    Like a hound dog on a trail, adversaries pick up bits and pieces of the traffic
    that travels through the network and reconstruct what they need from it.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包为攻击者提供了各种详细信息，包括它们经过的设备、设备的位置以及设备使用的协议，更不用说数据包中包含的数据。当对手（或任何人）拦截流经网络的流量时，这叫做*嗅探*。就像猎犬跟踪一条线索一样，对手会获取经过网络的流量的碎片，并从中重建他们需要的信息。
- en: On wired networks, sniffing can be difficult for attackers to accomplish, because
    networks are designed to send traffic to the intended recipient only. This means
    that the attacker must figure out a way to circumvent that design to make the
    traffic come to them. You’ll see how they do this on wireless networks in Chapter
    8. On wired networks, black hats can do this in a few different ways.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在有线网络中，嗅探对攻击者来说可能是一个挑战，因为网络设计是将流量只发送到预定的接收方。这意味着攻击者必须想办法绕过这个设计，让流量直接发送到他们那里。在第8章中，你将看到攻击者如何在无线网络上做到这一点。在有线网络中，黑客可以通过几种不同的方法来实现这一点。
- en: One method is by adding their hardware to the network. If you can connect your
    own physical device, the device can scan and copy that traffic as it passes through
    the network. So how does an attacker sneak a router or switch onto a network without
    anyone noticing? Although it would be difficult to do that, adversaries often
    use a much smaller device called a *network tap*, which is designed specifically
    for this purpose. [Figure 6-2](#figure6-2) shows an example of a network tap.
    The tap connects to the infrastructure already in place on a network and copies
    traffic that passes through it.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是将自己的硬件添加到网络中。如果你能够连接自己的物理设备，设备就可以扫描并复制通过网络的流量。那么攻击者如何偷偷地将路由器或交换机接入网络，而不被察觉呢？虽然做到这一点很困难，但对手通常会使用一个更小的设备，叫做*网络监控器*，它专门为此目的设计。[图6-2](#figure6-2)展示了一个网络监控器的例子。监控器连接到网络中已经存在的基础设施，并复制通过它的流量。
- en: '![f06002](image_fi/501287c06/f06002.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![f06002](image_fi/501287c06/f06002.png)'
- en: 'Figure 6-2: A network tap (image altered from the original created by Andrew
    Fresh under the Attribution 2.0 Generic [CC BY 2.0] license, [https://creativecommons.org/licenses/by/2.0/](https://creativecommons.org/licenses/by/2.0/))'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图6-2：网络监控器（图像经过修改，原图由Andrew Fresh根据[CC BY 2.0](https://creativecommons.org/licenses/by/2.0/)许可创建）
- en: An adversary can also use a technique called *IP spoofing* in which they copy
    the IP address of a legitimate device on the network and imitate that device.
    Any traffic that was supposed to go to the device with the copied IP will go to
    the black hat as well. IP spoofing can trick you into connecting to a device,
    like a printer, that is actually an attacker.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对手还可以使用一种叫做*IP伪装*的技术，伪装成网络上合法设备的IP地址并模仿该设备。任何原本应该发送到被伪装IP地址的设备的流量也会发送到黑客那里。IP伪装可以让你误连接到一个设备，比如一台打印机，实际上这个设备是攻击者控制的。
- en: A third method is to change where the traffic is being sent by altering the
    network settings. For example, by changing the default gateway on a device, a
    black hat can decide where traffic leaving the network goes. This allows them
    to direct traffic to a device they control so they can capture it.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 第三种方法是通过更改网络设置来改变流量的去向。例如，通过更改设备的默认网关，黑客可以决定网络流量的去向。这使他们能够将流量引导到他们控制的设备上，从而捕获流量。
- en: Or an adversary could turn on *port mirroring* at a switch. Switches have numbered
    physical ports, or sockets you plug cables into. Typically, a switch has between
    24 and 48 ports. Port mirroring tells the switch to copy all the traffic passing
    into or out of one port to another port. For example, if an adversary can turn
    on port mirroring at a switch, they can tell the switch to copy all the traffic
    coming in on port 1 to, say, port 22, where they’ve plugged in a device to capture
    it. Changing traffic settings usually requires a high level of access to accomplish,
    especially without network administrators noticing.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，攻击者可以在交换机上启用*端口镜像*功能。交换机有编号的物理端口，或者说是你插入电缆的插槽。通常，交换机有24到48个端口。端口镜像功能指示交换机将通过一个端口进出所有的流量复制到另一个端口。例如，如果攻击者能够在交换机上启用端口镜像，他们可以告诉交换机将进入端口1的所有流量复制到端口22，然后他们可以将设备插入到端口22来捕获流量。更改流量设置通常需要较高的访问权限，尤其是在网络管理员没有注意到的情况下。
- en: Another method an attacker can use is physically tapping the wire that traffic
    is passing through. How this is done depends on the type of wire used. For example,
    early networks often used a cable known as *coax*. It consisted of two copper
    lines wrapped in thick insulation. A special type of network tap called a *vampire
    tap* could pierce the insulation to physically connect two metal prongs (the *teeth*
    of the device) with the two copper wires, allowing the tap to record any traffic
    that traveled across. [Figure 6-3](#figure6-3) shows an example of a vampire tap.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者还可以使用另一种方法，通过物理方式接触传输流量的电缆。这种操作的方式取决于所使用电缆的类型。例如，早期网络常常使用一种被称为*同轴电缆*的电缆。它由两根铜线组成，外面包裹着厚厚的绝缘层。一种特殊的网络接入方式被称为*吸血鬼接入*，它能够穿透绝缘层，将两个金属尖端（即设备的*牙齿*）与两根铜线连接，从而允许接入记录任何经过的流量。[图6-3](#figure6-3)展示了吸血鬼接入的示例。
- en: '![f06003](image_fi/501287c06/f06003.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![f06003](image_fi/501287c06/f06003.png)'
- en: 'Figure 6-3: Example of a vampire tap (image modified from the original covered
    by the Attribution-ShareAlike 2.5 Generic [CC BY-SA 2.5] license, [https://creativecommons.org/licenses/by-sa/2.5/](https://creativecommons.org/licenses/by-sa/2.5/))'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图6-3：吸血鬼接入示例（图像已修改，原图受[创作共用-共享 2.5 Generic](https://creativecommons.org/licenses/by-sa/2.5/)许可保护）
- en: Tapping fiber cables, which use pulses of light through glass tubes wrapped
    in insulation to send traffic, requires bending the cable and putting an unlit
    strain of fiber along the bend. When light goes through the bend, the unlit strand
    can grab some of the light, capturing the traffic.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 链接光纤电缆，它通过玻璃管中包裹的绝缘层利用光脉冲发送流量，需要弯曲电缆并将一个不带光的光纤放置在弯曲处。当光线经过弯曲时，不带光的光纤可以抓住一部分光，从而捕获流量。
- en: The problem with these physical methods of traffic capture is that nearly all
    of them cause a loss in the signal along the cable. For example, bending the fiber
    cable increases the latency to the point that anyone monitoring the network would
    immediately realize something was wrong.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这些物理方式捕获流量的问题在于几乎所有方法都会导致电缆信号的损失。例如，弯曲光纤电缆会增加延迟，导致任何监控网络的人都能立刻察觉到异常。
- en: Man-in-the-Middle Attacks
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 中间人攻击
- en: Although using physical taps and changing network settings allow a black hat
    to see traffic in the network, making these techniques work requires a lot of
    setup. They’re also difficult to hide, especially when they target larger businesses
    with dedicated IT staff who search for these types of attacks. Instead, adversaries
    can use a *man-in-the-middle* attack, which provides the same ability to read
    traffic without requiring physical access to the network.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管使用物理接入和更改网络设置可以让黑帽子看到网络中的流量，但要使这些技术生效需要大量的设置工作。它们也很难隐藏，尤其是当目标是拥有专职 IT 员工、负责寻找此类攻击的大型企业时。相反，攻击者可以使用*中间人攻击*，这种攻击能够在不需要物理访问网络的情况下实现相同的流量读取能力。
- en: In man-in-the-middle attacks, attackers place themselves in the traffic flow
    between their victim and the destination they’re trying to reach. Instead of your
    traffic going directly to where you intended to send it—a web server, for example—it
    first goes to the attacker. The adversary can then read it, modify it, and pass
    it on to the destination. This allows attackers to capture your data and manipulate
    it for their own purposes. The worst part of these attacks is that they can be
    exceedingly difficult for the victim to detect. To the victim, everything looks
    like it’s running correctly, albeit likely slower than normal. [Figure 6-4](#figure6-4)
    provides an example of a basic man-in-the-middle attack.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在中间人攻击中，攻击者将自己置于受害者和他们试图到达的目标之间的流量流中。攻击者并没有让你的流量直接发送到你原本打算发送的地方——例如一个网络服务器——而是先发送到攻击者那里。然后，攻击者可以读取、修改流量并将其转发给目标。这使得攻击者能够捕获你的数据并为自己目的操控它们。最糟糕的是，这些攻击通常极难被受害者发现。对受害者而言，一切看起来都在正常运行，尽管速度可能比平常慢。[图6-4](#figure6-4)提供了一个基本的中间人攻击示例。
- en: '![f06004](image_fi/501287c06/f06004.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![f06004](image_fi/501287c06/f06004.png)'
- en: 'Figure 6-4: An example of a man-in-the-middle attack'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图6-4：中间人攻击示例
- en: In this scenario, the black hat sends you a phishing email with what appears
    to be a legitimate link from your bank 1. When you click the link in the email,
    it takes you to the adversary’s fake web server, where they’ve created a page
    that looks like your bank’s website. You then enter your credentials on that website
    2. The adversary receives the traffic you send the website and modifies it so
    it appears to be coming from the attacker’s computer rather than yours. The attacker
    then sends it to the legitimate bank site 3 and gains access to your account 4.
    The attacker then sends you a 404 Not Found error, so you won’t realize what happened
    5.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，黑客向你发送了一封网络钓鱼邮件，邮件中的链接看起来像是来自你银行的合法链接 1。当你点击邮件中的链接时，它会把你带到对方的伪造 web 服务器，他们在该服务器上创建了一个看起来像你银行网站的页面。然后，你在该网站上输入了你的凭据
    2。对方接收到你发送到该网站的流量，并进行修改，使其看起来像是来自攻击者的计算机，而不是你的。接着，攻击者将其发送到合法的银行网站 3，并成功访问了你的账户
    4。攻击者随后向你发送了一个404未找到错误，确保你没有意识到发生了什么 5。
- en: Man-in-the-middle attacks can be executed using a variety of methods. In addition
    to the attack just described, adversaries could also create a proxy server and
    then trick the victim into connecting to the proxy. Recall that a proxy handles
    requests on behalf of another device, so by having the victim connect to the malicious
    one, the black hat can capture any traffic the victim sends to the internet. Another
    method of establishing man-in-the-middle sessions is changing where a victim gets
    their DNS information. If the adversary can trick the victim or load malware onto
    a system that changes the default DNS IP address, they can force the device to
    send all DNS queries to the malicious attacker’s server rather than the legitimate
    DNS server. The malicious server can then respond with any IP address it wants,
    effectively allowing the adversary to decide where the victim’s device sends web
    traffic.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 中间人攻击可以通过多种方式执行。除了刚刚描述的攻击方式，攻击者还可以创建一个代理服务器，然后诱使受害者连接到该代理。请记住，代理服务器代表另一台设备处理请求，因此通过让受害者连接到恶意代理，黑客可以捕获受害者发送到互联网的任何流量。建立中间人会话的另一种方法是更改受害者获取
    DNS 信息的位置。如果攻击者能欺骗受害者或在系统上加载恶意软件，改变默认的 DNS IP 地址，他们就能迫使设备将所有 DNS 查询发送到恶意攻击者的服务器，而不是合法的
    DNS 服务器。恶意服务器随后可以用任何它想要的 IP 地址进行响应，从而有效地让攻击者决定受害者设备发送网页流量的去向。
- en: Attackers can also use devices on the network to create a man-in-the-middle
    attack. If the black hat is able to access a device, they can change the settings
    to redirect traffic. IoT devices are especially susceptible to this type of attack.
    IoT devices are nontraditional devices connected to the internet, usually to provide
    some sort of enhanced feature. They include refrigerators, televisions, smart
    home assistants, and security cameras. These devices often have poor security,
    so attackers can easily take control of them. An attacker can sometimes update
    an IoT device’s *firmware* (the code that runs the device’s hardware) to include
    new code that allows them to capture traffic on the network. Because this method
    doesn’t typically impact the device’s function, it can be challenging to detect.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者还可以使用网络上的设备发起中间人攻击。如果黑客能够访问某个设备，他们可以更改设置以重定向流量。物联网（IoT）设备尤其容易受到这种攻击。物联网设备是连接到互联网的非传统设备，通常提供某种增强功能。它们包括冰箱、电视、智能家居助手和安防摄像头。这些设备的安全性通常较差，因此攻击者很容易控制它们。攻击者有时可以更新物联网设备的*固件*（运行设备硬件的代码），以便包含新代码，从而允许他们捕获网络上的流量。由于这种方法通常不会影响设备的功能，因此很难被察觉。
- en: Denial of Service
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 拒绝服务
- en: Capturing traffic isn’t an adversary’s only option to attack a network. Black
    hats can also shut down the network entirely so no traffic flows out of it. This
    type of attack is called *denial of service* *(DoS**)*. The basic premise behind
    a DoS attack is to stop the network from running its normal operations. For example,
    an attacker might send so much traffic to a single web server that no one else
    can access the server and the web pages it hosts.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获流量并不是攻击者攻击网络的唯一选项。黑客还可以完全关闭网络，使其无法传输任何流量。这种类型的攻击被称为*拒绝服务* *(DoS)*。DoS 攻击的基本原理是阻止网络正常运行。例如，攻击者可能会向单个
    web 服务器发送大量流量，以至于其他任何人都无法访问该服务器及其托管的网页。
- en: There are many different ways to cause a DoS attack. As just mentioned, one
    way is to overwhelm a server with traffic so the system crashes. Ping packets,
    which were discussed in Chapter 2, are a great way to do this as well, because
    an adversary can change their sizes and send them in quick succession. In a *ping
    flood attack**,* an adversary’s device sends so many pings per second that the
    target device is unable to communicate on the network. Ping packets can fill up
    the system’s memory to slow down the system. Ping floods are easy to execute,
    because they just require a system capable of sending pings and more bandwidth
    than the target system. [Figure 6-5](#figure6-5) shows a diagram of a ping flood
    attack.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 造成 DoS 攻击的方式有很多种。正如前面提到的，一种方法是通过大量流量压垮服务器，使系统崩溃。ping 数据包（在第 2 章讨论过）也是一种很好的方式，因为攻击者可以改变其大小并快速连续发送它们。在
    *ping 洪水攻击* 中，攻击者的设备每秒发送大量的 ping 请求，使目标设备无法与网络通信。ping 数据包可以填满系统的内存，从而导致系统变慢。ping
    洪水攻击很容易执行，因为它只需要一个能够发送 ping 的系统和比目标系统更多的带宽。[图 6-5](#figure6-5) 展示了 ping 洪水攻击的示意图。
- en: '![f06005](image_fi/501287c06/f06005.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![f06005](image_fi/501287c06/f06005.png)'
- en: 'Figure 6-5: A ping flood attack'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-5：ping 洪水攻击
- en: Another form of DoS attack exploits bugs in code to cause a DoS state. An example
    is known as the *ping of death*. Ping packets usually have a maximum size of 65,535
    bits (a bit is the most basic unit of measurement for the size of data on a computer),
    but it’s possible to create a ping packet larger than that limit. If a black hat
    can send a larger ping packet to a device, it can cause the system receiving the
    ping to lock up and shut down.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种 DoS 攻击形式是利用代码中的漏洞来造成 DoS 状态。一个例子就是 *死亡 ping*。ping 数据包通常最大为 65,535 位（位是计算机中数据大小的最基本度量单位），但可以创建超出此限制的
    ping 数据包。如果黑客发送一个超大 ping 数据包给设备，它可以使接收该 ping 的系统崩溃并关闭。
- en: Ping flood and ping of death attacks are well known and much less common today
    than they used to be, as most of the vulnerabilities have long since been fixed.
    However, they’re excellent examples of how to exploit conditions in code or network
    design to cause a DoS attack, and many modern DoS attacks use similar methods.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: ping 洪水攻击和死亡 ping 攻击现在已不如过去常见，因为大多数漏洞已经被修复。然而，它们仍然是如何利用代码或网络设计中的条件来造成 DoS 攻击的经典例子，许多现代
    DoS 攻击仍使用类似的方法。
- en: Distributed Denial of Service
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分布式拒绝服务
- en: A DoS attack occurs when one device attacks a single target, as in the ping
    of death attack. In a *distributed denial-of-service*(*DDoS*) attack, the attacker
    leverages multiple systems to attack a single target. By using more than one attacking
    system, the adversary can amplify the effect of the attack.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: DoS 攻击是指一个设备攻击一个单一目标，类似于死亡 ping 攻击。在 *分布式拒绝服务*（*DDoS*）攻击中，攻击者利用多个系统来攻击单一目标。通过使用多个攻击系统，攻击者能够放大攻击的效果。
- en: In the *Smurf attack*, an outdated example of a DDoS attack, the adversary began
    by spoofing their target’s IP address. [Figure 6-6](#figure6-6) shows a diagram
    of a Smurf attack.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *Smurf 攻击* 中，这是一个过时的 DDoS 攻击实例，攻击者首先伪造了目标的 IP 地址。[图 6-6](#figure6-6) 展示了 Smurf
    攻击的示意图。
- en: '![f06006](image_fi/501287c06/f06006.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![f06006](image_fi/501287c06/f06006.png)'
- en: 'Figure 6-6: An illustration of a Smurf attack'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-6：Smurf 攻击的示意图
- en: After spoofing the IP address, the attacker sent a ping to a broadcast address
    on a large network 1. *Broadcast addresses*automatically send traffic to every
    other device on the network 2. The ping went out to all the devices on the network
    individually. They then responded to the target’s IP address 3. The target was
    overwhelmed with responses 4, and it crashed.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在伪造 IP 地址后，攻击者向一个大网络的广播地址发送了 ping。*广播地址*会自动将流量发送到网络上的每一个设备。ping 请求发送到网络上的所有设备，它们随后向目标的
    IP 地址做出回应。目标被大量响应淹没，最终崩溃。
- en: A more modern example of a DDoS attack is the *DNS amplification attack* ([Figure
    6-7](#figure6-7)).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 更现代的 DDoS 攻击例子是 *DNS 放大攻击*（[图 6-7](#figure6-7)）。
- en: '![f06007](image_fi/501287c06/f06007.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![f06007](image_fi/501287c06/f06007.png)'
- en: 'Figure 6-7: A diagram of a DNS amplification attack'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-7：DNS 放大攻击的示意图
- en: Similar to the Smurf attack, the DNS amplification attack uses basic DNS requests
    to overwhelm a victim’s connection to the internet. The black hat crafts DNS query
    requests that spoof the victim’s IP address 1. These queries also include large
    response parameters, meaning they’ll accept the largest possible size of a response
    to a single query. The adversary then sends a constant stream of these queries
    to publicly available DNS servers 2. Although the queries are relatively small,
    the responses are large. The DNS servers send these large responses to the victim’s
    IP address 3, causing a DoS state. Attackers used this type of attack in 2016
    against the security website Krebs on Security, causing one of the largest DDoS
    attacks seen up to that point.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 与Smurf攻击类似，DNS放大攻击使用基本的DNS请求来淹没受害者的互联网连接。黑客制造伪造受害者IP地址的DNS查询请求1。这些查询还包含了大响应参数，意味着它们将接受单个查询的最大响应大小。接着，攻击者向公共可用的DNS服务器持续发送这些查询2。尽管查询本身相对较小，但响应非常大。DNS服务器将这些大响应发送到受害者的IP地址3，从而造成DoS状态。攻击者在2016年使用这种类型的攻击攻击了安全网站Krebs
    on Security，造成了迄今为止最大的一次DDoS攻击。
- en: One way adversaries attempt DDoS attacks is by creating a *botnet*. A bot, in
    this context, is a system that the black hat has compromised so it accepts commands
    from an attacker-controlled server. Compromising a device in this way usually
    requires installing malware or malicious firmware. Attackers can turn hundreds
    of thousands, sometimes millions, of devices into bots that can all receive commands
    at the same time. This botnet can send simultaneous requests to a server to produce
    a powerful DDoS attack. One of the larger botnets recorded, the Mirai botnet,
    is believed to have infected 600,000 IoT devices at its peak. Each of those devices
    could be used to send out pings, DNS queries, or other types of DoS attacks without
    the attacker having to directly attack their target. This makes botnets highly
    effective tools for shutting down a victim’s system.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对手尝试进行DDoS攻击的一种方式是通过创建*僵尸网络*。在这种情况下，僵尸是指黑客已经控制的系统，使其能够接受来自攻击者控制的服务器的指令。通过这种方式攻击设备通常需要安装恶意软件或恶意固件。攻击者可以将成千上万，甚至数百万的设备转变为僵尸，这些设备可以同时接收指令。这个僵尸网络可以向服务器发送同时的请求，从而发起强大的DDoS攻击。据记录，其中一个较大的僵尸网络——Mirai僵尸网络，曾在其高峰期感染了60万个物联网设备。每个被感染的设备都可以用来发送ping、DNS查询或其他类型的DoS攻击，而攻击者无需直接攻击目标。这使得僵尸网络成为非常有效的工具，用于关闭受害者的系统。
- en: Defense Against Network Attacks
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络攻击防御
- en: Defending against network attacks requires a keen understanding of how your
    network is laid out and what resources are attached to it. It’s much easier for
    a black hat to exploit an unorganized network, because IT administrators will
    have a harder time ensuring the right settings and security controls are in place
    if they’re not sure how traffic is flowing through the network. This is especially
    true for large networks that might have thousands, or even tens of thousands,
    of systems.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 防御网络攻击需要深入理解你的网络布局以及与之连接的资源。如果网络不规范，黑客更容易利用它，因为IT管理员在无法清楚了解流量如何在网络中流动的情况下，将更难确保正确的设置和安全控制措施到位。这对于拥有成千上万，甚至数万台系统的大型网络尤其如此。
- en: One way to solve this problem is to organize your network into zones and base
    your security around each zone rather than each system. When a system is added
    to a zone, you’ll know that it needs to have a certain set of security controls
    in place to follow the zone’s requirements. A common type of network zone used
    when systems are accessible from the outside is called the *demilitarized zone*
    *(DMZ**)*. The DMZ sits between the internal private network and the external
    public network. It’s sort of a hybrid of the two. Typically, the administrator
    places systems that allow people to connect from the outside in the DMZ. For example,
    if you’re hosting a website on a server, you’d put the server in the DMZ. The
    DMZ usually has strict controls to ensure that traffic is monitored as it flows
    in and out, so no attacks or exploits can breach it. [Figure 6-8](#figure6-8)
    shows a diagram of a DMZ.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题的一种方法是将网络组织成多个区域，并基于每个区域而不是每个系统来构建安全性。当一个系统被添加到某个区域时，你会知道它需要具备一套特定的安全控制措施，以符合该区域的要求。当系统需要从外部访问时，一种常见的网络区域被称为*非军事区*（*DMZ*）。DMZ
    处于内部私有网络与外部公共网络之间，实际上是两者的混合。通常，管理员会将允许外部连接的系统放在 DMZ 中。例如，如果你在服务器上托管一个网站，你会将该服务器放在
    DMZ 中。DMZ 通常有严格的控制措施，以确保进出流量受到监控，从而防止攻击或漏洞突破。 [图 6-8](#figure6-8) 显示了 DMZ 的示意图。
- en: You can break up a network into as many zones as necessary to maintain security
    controls. For example, you might have an external network zone, a DMZ, and an
    internal zone that includes subzones for your database and HR systems. The only
    drawback to using numerous zones is managing and updating all the levels of controls
    for each one. Sometimes, your systems might also seem to fit into multiple zones,
    so you’ll have to consider carefully where to place them.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将一个网络划分为多个区域，以维护安全控制。例如，你可能会有一个外部网络区域，一个 DMZ 区域，以及一个包括数据库和人力资源系统子区域的内部区域。使用多个区域的唯一缺点是管理和更新每个区域的所有安全控制。有时，你的系统可能还会适合多个区域，因此你需要仔细考虑将它们放在哪个区域。
- en: Once you’ve established your network zones, you can add controls.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你建立了网络区域，你就可以添加控制措施。
- en: '![f06008](image_fi/501287c06/f06008.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![f06008](image_fi/501287c06/f06008.png)'
- en: 'Figure 6-8: Example placement of a DMZ on a network'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-8：网络中 DMZ 的示意图
- en: Firewalls
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 防火墙
- en: 'One of the most fundamental controls for a network is a firewall. At a basic
    level, a firewall regulates traffic in one of two ways: it either *allows* traffic
    to pass through and continue on to its destination or *denies* traffic and blocks
    it from moving on. This decision is made by matching the traffic to a set of rules
    to determine how it should be treated.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 网络中最基本的控制之一就是防火墙。从基本层面来说，防火墙通过两种方式来调节流量：它要么*允许*流量通过并继续到达目的地，要么*拒绝*流量并阻止其继续前行。这个决策是通过将流量与一组规则进行匹配来决定如何处理流量的。
- en: Many types of firewalls are available. They can be either software-basedor hardware-based.
    *Software firewalls* are computer programs; typically they’re used on devices
    running other software, such as a server running a website or a desktop computer.
    Software firewalls are one of the last lines of a system’s defense. Usually, they
    have fewer features than a hardware firewall but are still necessary to help regulate
    which applications on a system are allowed to send traffic on the network. *Hardware
    firewalls* are physical devices used to view and regulate traffic that flows into
    the network. In general, hardware firewalls are more robust than software firewalls.
    Depending on the model, they offer many security features and the ability to make
    additional choices other than just allowing or denying the traffic.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种类型的防火墙可供选择，它们可以是基于软件的或基于硬件的。*软件防火墙*是计算机程序，通常用于运行其他软件的设备上，如运行网站的服务器或桌面计算机。软件防火墙是系统防御的最后一道防线。通常，它们的功能比硬件防火墙少，但仍然是必要的，帮助控制哪些系统应用程序可以在网络上发送流量。*硬件防火墙*是用于查看和调节流入网络的流量的物理设备。一般而言，硬件防火墙比软件防火墙更强大。根据不同的型号，它们提供许多安全功能，并能够做出更多选择，而不仅仅是允许或拒绝流量。
- en: Packet-Filtering Firewalls
  id: totrans-69
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 包括包过滤防火墙
- en: Software firewalls use a *packet-filtering* method. They look at packets as
    they come into a system and determine whether or not to allow that traffic, based
    on a set of rules. As discussed earlier, packets contain information about the
    data that is being sent, including the destination and source IP addresses, and
    the port number they’re arriving on. Packet-filtering rules are usually based
    on the source IP address and the port number being used. [Table 6-1](#table6-1)
    shows examples of firewall rules.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 软件防火墙使用*数据包过滤*方法。它们在数据包进入系统时查看数据包，并根据一组规则决定是否允许该流量。如前所述，数据包包含有关发送数据的信息，包括目标和源
    IP 地址以及到达的端口号。数据包过滤规则通常基于源 IP 地址和使用的端口号。[表 6-1](#table6-1)显示了防火墙规则的示例。
- en: 'Table 6-1: Example Firewall Rules'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6-1：示例防火墙规则
- en: '| **Rule number** | **Allow/deny** | **Protocol** | **Destination IP** | **Source
    IP** | **Port number** |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| **规则编号** | **允许/拒绝** | **协议** | **目标 IP** | **源 IP** | **端口号** |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| 1 | Allow | Any | 192.168.15.1 | Any | 80 |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 允许 | 任意 | 192.168.15.1 | 任意 | 80 |'
- en: '| 2 | Allow | Any | 192.168.15.1 | 192.168.15.2 | 23 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 允许 | 任意 | 192.168.15.1 | 192.168.15.2 | 23 |'
- en: '| 3 | Deny | Any | 192.168.15.1 | Any | 23 |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 拒绝 | 任意 | 192.168.15.1 | 任意 | 23 |'
- en: '| 4 | Deny | Any | Any | Any | Any |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 拒绝 | 任意 | 任意 | 任意 | 任意 |'
- en: Each row represents a rule in the firewall. In the Protocol column, *Any* means
    it doesn’t matter what type of network protocol is used. Sometimes you’ll see
    the wildcard symbol (*) used in place of Any, but it means the same thing.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 每一行表示防火墙中的一条规则。在协议列中，*任意*表示不管使用何种网络协议。有时，你会看到通配符符号（*）代替任意，但它们的意思是一样的。
- en: Notice that the second and third rules use the same port number. However, one
    rule allows a specific source IP, whereas the other denies any source IP. It’s
    important to note that when a firewall reads its rules, it goes through them one
    by one until it finds a matching rule. If the rules aren’t in the proper order,
    it can cause problems with how traffic is managed. For example, if you reversed
    rules 3 and 2, the rule denying traffic on port 23 from any source IP would be
    placed before the rule allowing traffic from a specific source IP; so when traffic
    came in from the IP address 192.168.15.2, the firewall would deny it, because
    that IP address matches the source IP of Any. For this reason, it’s essential
    to place rules that allow traffic, especially those that list specific IP addresses,
    before rules that deny it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，第二条和第三条规则使用相同的端口号。然而，一条规则允许特定的源 IP，而另一条则拒绝任何源 IP。需要注意的是，当防火墙读取其规则时，它会逐条检查，直到找到匹配的规则。如果规则顺序不正确，可能会导致流量管理出现问题。例如，如果你将第
    3 条和第 2 条规则调换，拒绝来自任何源 IP 的端口 23 流量的规则会被放在允许来自特定源 IP 流量的规则之前；因此，当来自 IP 地址 192.168.15.2
    的流量进入时，防火墙会拒绝它，因为该 IP 地址与任意源 IP 匹配。出于这个原因，至关重要的是将允许流量的规则，特别是列出特定 IP 地址的规则，放在拒绝规则之前。
- en: The fourth rule ensures that if no other rule applies to the traffic, it’s denied.
    We call this an *explicit deny*. Many modern firewalls include a “deny all” rule
    by default without you having to add it to the list of rules; this is known as
    an *implicit deny*.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 第四条规则确保，如果没有其他规则适用于流量，则该流量将被拒绝。我们称之为*显式拒绝*。许多现代防火墙默认会包含一条“拒绝所有”规则，而无需你将其添加到规则列表中；这被称为*隐式拒绝*。
- en: Stateful Inspection Firewalls
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 有状态检测防火墙
- en: Another popular form of firewall is the *stateful inspection* *firewall,* which
    is typically only used to regulate traffic coming into a network. Like a packet-filtering
    firewall, a stateful inspection firewall has rules that determine how to manage
    traffic based on factors like IP addresses and port numbers. In addition, the
    stateful inspection firewall considers the conditions to determine how to apply
    the rules.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种常见的防火墙形式是*有状态检测* *防火墙*，它通常仅用于管理进入网络的流量。与数据包过滤防火墙类似，有状态检测防火墙有规则，基于 IP 地址和端口号等因素来管理流量。此外，有状态检测防火墙还会考虑条件来决定如何应用规则。
- en: In other words, when traffic comes through the stateful inspection firewall,
    the outside device makes a connection to the firewall. This differs from a packet-filtering
    firewall, which views the traffic as it passes through other devices. The firewall
    learns how the connection was made and certain parameters about it—for example,
    if it uses encryption. It also determines whether the traffic should be allowed
    or denied. If the traffic is allowed, the firewall monitors the traffic as it
    moves to see whether the state of the connection changes. This allows the firewall
    to track packets by certain details, such as source and destination IP address.
    When packets from the same location come in at a later time, the firewall can
    use those details to determine whether that traffic is allowed without having
    to completely reexamine it.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，当流量通过有状态检测防火墙时，外部设备会与防火墙建立连接。这与包过滤防火墙不同，包过滤防火墙会在流量经过其他设备时进行查看。防火墙会学习连接是如何建立的，以及一些关于连接的参数——例如，是否使用了加密。它还会决定是否允许或拒绝该流量。如果流量被允许，防火墙会监控流量的变化，观察连接的状态是否发生变化。这使得防火墙能够通过某些细节（例如源和目的IP地址）跟踪数据包。当来自相同位置的包在稍后时间到达时，防火墙可以利用这些细节来判断该流量是否被允许，而无需完全重新检查它。
- en: Application Firewalls
  id: totrans-84
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 应用程序防火墙
- en: Application firewalls offer protection designed for specific types of applications,
    such as web servers or databases. These firewalls include special security controls
    that help defend against attacks targeting the applications they are protecting.
    The application firewall can also inspect traffic at a much deeper level, allowing
    it to see more information than even a stateful inspection firewall.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序防火墙提供的是专为特定类型的应用程序设计的保护，例如 web 服务器或数据库。这些防火墙包含特殊的安全控制，帮助防御针对它们所保护应用程序的攻击。应用程序防火墙还可以在更深层次上检查流量，使其能够看到比有状态检测防火墙更多的信息。
- en: For example, if you’re using a *web application firewall* *(WAF**)* to protect
    a web server, it will inspect all the HTTP requests sent to that web server. A
    WAF can see attempts to send malware, vulnerabilities being exploited, or even
    deviations from the typical web server setup. Application firewalls also have
    more options regarding how to handle traffic. For instance, some can send the
    traffic to a new IP address to be analyzed. Many application firewalls are bundled
    together with other security appliances, such as intrusion detection systems (discussed
    in the next section).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你使用 *Web 应用程序防火墙* *(WAF)* 来保护 web 服务器，它将检查所有发送到该 web 服务器的 HTTP 请求。WAF 可以看到发送恶意软件的尝试、被利用的漏洞，甚至是与典型的
    web 服务器设置的偏差。应用程序防火墙在处理流量时也有更多的选择。例如，有些可以将流量发送到一个新的 IP 地址进行分析。许多应用程序防火墙与其他安全设备一起捆绑在一起，例如入侵检测系统（将在下一节讨论）。
- en: The main drawback to an application firewall is that it can be very slow and
    resource-intensive. Scanning a packet deeply and analyzing the data for violations
    takes a lot more time than simply checking the IP address and port number, the
    way a packet-filtering firewall does. It also requires a lot more memory and processing
    power, which means systems that run application firewalls are more expensive than
    systems that run packet-filtering firewalls. Higher levels of security controls
    require this trade-off. It’s also important to know that application firewalls
    are specific to their designated application; you can’t put a WAF in front of
    a database server and expect the same level of security performance.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序防火墙的主要缺点是它可能非常慢且资源消耗大。深入扫描数据包并分析数据以查找违规行为，比简单地检查IP地址和端口号（像包过滤防火墙那样）花费的时间要长得多。它还需要更多的内存和处理能力，这意味着运行应用程序防火墙的系统比运行包过滤防火墙的系统更昂贵。更高等级的安全控制需要这种权衡。还需要知道，应用程序防火墙是针对指定的应用程序的；你不能将
    WAF 放在数据库服务器前面，并期望获得相同级别的安全性能。
- en: Firewalls can’t read encrypted traffic, because the traffic is, well, encrypted.
    However, when traffic is encrypted on the network, the packet header, which contains
    the IP address and the port number, is often unencrypted. This means stateful
    inspection firewalls and packet-filtering firewalls work normally, whereas application
    firewalls would need to decrypt the data in the packet to examine it before they
    can decide to allow it or not.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙无法读取加密流量，因为流量是加密的。然而，当网络中的流量被加密时，包含IP地址和端口号的数据包头通常是未加密的。这意味着有状态检查防火墙和数据包过滤防火墙可以正常工作，而应用防火墙则需要解密数据包中的数据才能进行检查，然后再决定是否允许该流量。
- en: Intrusion Detection Systems
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入侵检测系统
- en: Although firewalls are necessary to prevent many unwanted connections, they’re
    not always efficient at detecting attacks or finding malicious traffic hiding
    inside legitimate traffic. Because the firewall follows the rules as written,
    it might sometimes allow traffic from a black hat if that traffic matches an allow
    rule. To catch these attacks, you should add an IDS to your network.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然防火墙对于防止许多不必要的连接是必要的，但它们并不总是高效地检测攻击或发现隐藏在合法流量中的恶意流量。由于防火墙是按照规则执行的，它有时可能会允许来自黑帽的流量，如果该流量符合允许规则。为了捕捉这些攻击，你应该在网络中添加IDS。
- en: IDSs are designed to detect attacks happening on the network or system, and
    they provide alerts to security personnel. An IDS can detect attacks that might
    be difficult for other security controls to handle. For example, they can detect
    a ping of death or Smurf attack, whereas a firewall might accept that traffic
    if it has a rule that allows ping traffic. Like firewalls, an IDS can be software-
    or hardware-based and can monitor a single system or a portion of a network. An
    IDS is often used in critical areas of the network, such as at the entrance to
    the DMZ or the internal private network.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: IDS旨在检测网络或系统上发生的攻击，并向安全人员提供警报。IDS能够检测一些其他安全控制可能无法处理的攻击。例如，它们能够检测死亡回显（ping of
    death）或Smurf攻击，而防火墙如果有允许ping流量的规则，可能会接受这种流量。与防火墙一样，IDS可以是软件或硬件基础的，可以监控单个系统或网络的一部分。IDS通常用于网络的关键区域，如DMZ的入口或内部私有网络。
- en: 'To detect attacks, an IDS uses two different methods: signatures and heuristics.
    *Signatures*are similar to firewall rules but might include additional behavioral
    elements, such as the time that traffic comes in or what type of connection it’s
    trying to make. The main characteristic of signatures is that they’re rigid. Once
    you write the signature, the IDS will only look for traffic that exactly matches
    that signature. For example, if you write a signature that looks for specific
    requests to sparklekitten.net and a request comes in for sparklekitten.us, the
    signature won’t detect that request. Signatures can also detect known malware.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检测攻击，IDS使用两种不同的方法：签名和启发式。*签名*类似于防火墙规则，但可能包含额外的行为元素，例如流量进入的时间或它试图建立的连接类型。签名的主要特点是它们是固定的。一旦编写签名，IDS将仅寻找与该签名完全匹配的流量。例如，如果你写了一个查找对sparklekitten.net的特定请求的签名，而一个请求访问的是sparklekitten.us，签名将不会检测到该请求。签名还可以检测已知的恶意软件。
- en: A heuristics-based IDS monitors the system or network it’s on to learn what
    a normal baseline level of traffic looks like. A security professional then sets
    the heuristic system to alert them whenever certain conditions change on the network.
    For example, if the number of connections to a web server normally hovers around
    1,000 a minute, the security person might set a threshold of 10,000 a minute to
    set off an alert because this increase in traffic could indicate that either a
    hot sale or a potential DoS attack is occurring. Heuristic systems are very efficient
    at detecting new attacks, because they don’t have to rely on a signature to determine
    that an event is malicious. Experts must analyze malware to create malware signatures,
    so if the malware is brand new, it’s likely that a signature system won’t detect
    it. But heuristic systems also require constant fine-tuning to ensure they have
    a correct baseline of normal traffic. An alert shouldn’t go off whenever the system
    makes 10,000 connections a minute if your server does so on an average day.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 基于启发式的 IDS 监视其所在的系统或网络，以了解正常流量基线的情况。然后，安全专业人员将启发式系统设置为在网络上某些条件发生变化时发出警报。例如，如果连接到
    Web 服务器的数量通常每分钟保持在 1,000 次左右，安全人员可能会设置一个每分钟 10,000 次的阈值，以触发警报，因为这个流量增加可能表示正在进行热销活动或潜在的
    DoS 攻击。启发式系统在检测新攻击方面非常有效，因为它们不必依赖签名来判断事件是否恶意。专家必须分析恶意软件以创建恶意软件签名，因此，如果恶意软件是全新的，签名系统可能无法检测到它。但启发式系统也需要不断的微调，以确保它们拥有正确的正常流量基线。如果系统在正常情况下每分钟生成
    10,000 次连接时不应触发警报。
- en: Intrusion Prevention Systems
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入侵防御系统
- en: Typically, an IDS is a passive system. It can send alerts but doesn’t stop the
    malicious traffic. Similar to application firewalls, it can take IDSs a long time
    to examine data and make sure it doesn’t match a signature or heuristic characteristic.
    To improve their speed, many IDSs copy the traffic and analyze it after it has
    passed through the system. But this means the traffic has already reached its
    destination by the time it’s detected as malicious.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，IDS 是一种被动系统。它可以发送警报，但不会阻止恶意流量。与应用程序防火墙类似，IDS 可能需要很长时间来检查数据并确保它与签名或启发式特征不匹配。为了提高速度，许多
    IDS 会复制流量，并在其通过系统后进行分析。但这意味着流量在被检测为恶意之前，已经到达了目的地。
- en: Obviously, this can be a major security issue, especially for malware that might
    infect the system before a security person can react to stop it. To help prevent
    this type of problem, security researchers created devices called *intrusion prevention
    systems* *(IPSs**)*. An IPS works similarly to an IDS in that it uses signatures
    or heuristics to detect malicious traffic. But instead of being passive, the device
    actively interacts with the traffic before it moves on to its destination to prevent
    it from harming its target.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，这可能是一个重大安全问题，尤其是对于可能在安全人员来不及反应之前就感染系统的恶意软件。为了解决这个问题，安全研究人员创建了名为 *入侵防御系统*
    *(IPS)* 的设备。IPS 的工作原理与 IDS 类似，使用签名或启发式方法来检测恶意流量。但与被动的 IDS 不同，IPS 在流量到达目的地之前，会主动与之互动，以防止其对目标造成危害。
- en: Depending on the model, an IPS has several ways of handling malicious traffic.
    One method is to just block the traffic entirely. The IPS might do this directly,
    or it might change a firewall rule to block the traffic. The IPS can also send
    the traffic to a special security system where the security team can analyze it
    to learn an attacker’s technique. An IPS can also remove or quarantine malware
    before passing on the clean traffic. In addition to these proactive measures,
    IPSs send alerts, just like IDSs.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 根据不同的模型，IPS 处理恶意流量的方式有几种。一种方法是完全阻止这些流量。IPS 可能直接执行此操作，或者可能会更改防火墙规则来阻止流量。IPS 还可以将流量发送到一个专门的安全系统，安全团队可以分析这些流量，以了解攻击者的技术。IPS
    还可以在传递干净流量之前移除或隔离恶意软件。除了这些主动措施外，IPS 还会发送警报，类似于 IDS。
- en: Much like application firewalls, the main drawback to an IPS is that it is much
    slower and requires more resources than an IDS. This makes an IPS more expensive
    than an IDS. Therefore, you typically see IPSs used only in critical locations,
    like the entrance to the DMZ, whereas an IDS might be on every server inside the
    DMZ, as shown in [Figure 6-9](#figure6-9).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 就像应用程序防火墙一样，IPS 的主要缺点是它比 IDS 更慢，并且需要更多的资源。这使得 IPS 比 IDS 更昂贵。因此，通常只会在关键位置使用 IPS，例如
    DMZ 的入口，而 IDS 可能会在 DMZ 内的每台服务器上，如 [图 6-9](#figure6-9) 所示。
- en: '![f06009](image_fi/501287c06/f06009.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![f06009](image_fi/501287c06/f06009.png)'
- en: 'Figure 6-9: Example placement of IDSs and IPSs on a network'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-9：IDS 和 IPS 在网络中的示例位置
- en: IPSs and IDSs are often bundled into all-in-one appliances, which combine several
    different services into one system. These appliances can include a slew of security
    devices, including firewalls, email filters, proxy servers, and more.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: IPS（入侵防御系统）和 IDS（入侵检测系统）通常被捆绑成一体机设备，将几种不同的服务结合成一个系统。这些设备可能包括多种安全设备，如防火墙、电子邮件过滤器、代理服务器等。
- en: 'Exercise: Setting Up Your Firewall'
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习：设置您的防火墙
- en: Both Windows and macOS include built-in firewalls that you can use to block
    traffic to specific applications coming into your system. Although both have a
    set of default rules that provide a good amount of security, you can also add,
    remove, or modify these rules. Customizing the rules can help you keep your device
    even more secure, especially when adding new applications to which you don’t want
    to allow external connections. In this exercise, you’ll configure your firewall,
    adding an inbound rule to secure a new application you’ve just installed.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 和 macOS 都包含内置防火墙，您可以用它们来阻止特定应用程序的流量进入您的系统。虽然两者都有一组默认规则，能够提供足够的安全性，但您也可以添加、删除或修改这些规则。自定义规则可以帮助您进一步提高设备的安全性，特别是在添加不希望允许外部连接的新应用程序时。在本练习中，您将配置防火墙，添加一个入站规则以保护您刚刚安装的新应用程序。
- en: Windows
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows
- en: To access the Windows firewall, enter **firewall** in the search bar at the
    bottom-left corner of the screen. The Windows Defender Firewall with Advanced
    Security app will appear. Click this app to open a window that displays general
    firewall information and settings. On the left side, click **Advanced Settings**
    to open the window shown in [Figure 6-10](#figure6-10) (you must have an administrator
    account to do this).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问 Windows 防火墙，请在屏幕左下角的搜索栏中输入**firewall**。Windows Defender 防火墙高级安全应用程序将出现。点击该应用程序，打开一个显示常规防火墙信息和设置的窗口。在左侧，点击**高级设置**，打开[图
    6-10](#figure6-10)中显示的窗口（您必须拥有管理员账户才能执行此操作）。
- en: '![f06010](image_fi/501287c06/f06010.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![f06010](image_fi/501287c06/f06010.png)'
- en: 'Figure 6-10: Windows Defender Firewall advanced settings'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-10：Windows Defender 防火墙高级设置
- en: The left-hand menu shows the kinds of rules you can set. You should see submenus
    for inbound and outbound rules, as well as a few other options. When you click
    one of these menu items, the options for it will display in the middle box and
    the actions you can perform will appear on the far right.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧菜单显示了您可以设置的规则类型。您应该可以看到入站和出站规则的子菜单，以及其他一些选项。当您点击其中一个菜单项时，相应的选项将显示在中间框中，您可以执行的操作将在最右侧出现。
- en: For now, you should see the firewall profiles in the main box. In Windows Defender
    Firewall, profiles can change the firewall’s behavior depending on what type of
    network the system is connected to. This is very helpful for devices like laptops
    that might switch between different networks often. The *domain* profile is for
    devices that are remotely managed, such as in a company. The *private* profile
    is for private networks, like your home, and the *public* profile is for public
    networks, like a wireless network in a café. The options for each profile are
    the same by default, but you can change them. Just be careful when making any
    modifications, because the changes affect the entire system, not just specific
    applications.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您应该能在主框中看到防火墙配置文件。在 Windows Defender 防火墙中，配置文件可以根据系统连接的网络类型来更改防火墙的行为。这对于像笔记本电脑这样的设备非常有用，因为它们可能频繁切换不同的网络。*域*配置文件适用于远程管理的设备，例如公司中的设备。*私有*配置文件适用于私有网络，如您的家庭网络，*公共*配置文件适用于公共网络，如咖啡馆中的无线网络。每个配置文件的默认选项相同，但您可以进行更改。只是在进行任何修改时要小心，因为这些更改会影响整个系统，而不仅仅是特定的应用程序。
- en: Now that you’ve looked over the profiles, let’s add a new rule. Choose an application
    to which you want to apply a new rule. Having an application in mind helps you
    set the rule’s parameters. The main factors to consider are what port numbers
    the application uses and what type of traffic should be allowed to connect to
    that application. For example, if you’re installing a new game, you’ll need to
    open the port numbers that game uses. You’ll also need to check whether there
    are any particular protocols or types of traffic that must connect to the game
    for it to work. For most applications, you can find this information in the user
    manual or the website’s help section.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经查看了配置文件，让我们添加一个新规则。选择一个您想要应用新规则的应用程序。考虑好应用程序有助于您设置规则的参数。需要考虑的主要因素是应用程序使用的端口号以及允许哪些类型的流量连接到该应用程序。例如，如果您正在安装一款新游戏，您需要打开该游戏使用的端口号。您还需要检查是否有任何特定的协议或流量类型必须连接到游戏才能正常运行。对于大多数应用程序，您可以在用户手册或网站的帮助部分找到这些信息。
- en: With an application in mind, you need to select the menu in which to add the
    rule. For this exercise, let’s add it to Inbound Rules. Inbound rules apply to
    traffic that is coming into your system, whereas outbound traffic is data you
    send out from your computer. Click **Inbound Rules** on the left to bring up the
    current list of rules for inbound traffic. [Figure 6-11](#figure6-11) provides
    a selection of those rules as an example.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑应用程序时，您需要选择要添加规则的菜单。对于本练习，让我们将规则添加到**入站规则**。入站规则适用于进入您系统的流量，而出站流量是您从计算机发送出去的数据。点击左侧的**入站规则**，以显示当前的入站流量规则列表。[图
    6-11](#figure6-11)提供了这些规则的一个示例。
- en: '![f06011](image_fi/501287c06/f06011.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![f06011](image_fi/501287c06/f06011.png)'
- en: 'Figure 6-11: List of inbound rules'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-11：入站规则列表
- en: This window is laid out a bit differently from [Table 6-1](#table6-1) in the
    section on packet-filtering firewalls earlier in the chapter, but you can see
    that the same elements are present. A green check mark icon indicates that the
    rule is allowing traffic; rules without icons are currently disabled. To the right
    is the name of the rule and the *group* it belongs to, which categorizes the rule
    based on which protocols or applications it relies on. For example, in [Figure
    6-11](#figure6-11), you can see several rules that deal with some of the Desktop’s
    core networking functions, and thus are aptly placed in the Core Networking group.
    The next column is the profile that the rule applies to. As you can see, some
    rules are active only in certain profiles. Subsequent columns deal with what the
    rule does, including the action (allow/deny), the application it applies to, the
    IP addresses it applies to, and the type of protocol it applies to.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这个窗口的布局与本章早些时候关于数据包过滤防火墙的[表 6-1](#table6-1)稍有不同，但您可以看到相同的元素仍然存在。一个绿色的勾选标志表示该规则允许流量；没有标志的规则当前是禁用的。右侧是规则的名称和它所属的*组别*，该组别根据规则所依赖的协议或应用程序对规则进行分类。例如，在[图
    6-11](#figure6-11)中，您可以看到几个规则处理桌面核心网络功能，因此它们被恰当地放置在核心网络组中。下一列是规则应用的配置文件。如您所见，一些规则仅在特定配置文件中处于活动状态。随后的列显示了规则的作用，包括操作（允许/拒绝）、规则适用的应用程序、规则适用的IP地址以及规则适用的协议类型。
- en: The protocols usually relate to the type of connection used, such as TCP. If
    your application doesn’t use a specific protocol, it’s safe to use Any here. The
    next column, not shown in the figure, relates to the port numbers the rule applies
    to. Recall that port numbers can tell a system about the type of traffic being
    sent. Most applications use common port numbers, such as port 80 for web traffic.
    Others might use ports that are unique to that application; for example, the game
    *Doom* uses the port number 666 for its multiplayer mode. When installing a new
    application, you might need to add a rule to allow it to use a new port number.
    Let’s do that now!
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 协议通常与使用的连接类型相关，例如 TCP。如果您的应用程序不使用特定协议，选择"Any"是安全的。下一个列（图中未显示）与规则适用的端口号相关。回想一下，端口号可以告诉系统发送的流量类型。大多数应用程序使用常见的端口号，例如端口
    80 用于网页流量。其他应用程序可能会使用独特的端口号；例如，游戏*Doom*在其多人模式下使用端口号666。当安装新应用程序时，您可能需要添加一条规则来允许它使用一个新端口号。现在我们就来做这个！
- en: On the right side of the Inbound Rules window, click **New Rule**. This should
    bring up a wizard to help you set up the rule ([Figure 6-12](#figure6-12)). The
    first options you see are for the Rule Type. Program is used to make rules for
    a specific application. You could also use Port, which is for rules that affect
    specific port numbers; Predefined is used for connections to one of the groups
    created by default, such as Core Networking, and Custom creates a rule with your
    own parameters in place instead of limiting you to either port number or application.
    Select **Custom** to see the available options.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在“入站规则”窗口的右侧，点击**新建规则**。这将弹出一个向导，帮助你设置规则（[图 6-12](#figure6-12)）。你看到的第一个选项是规则类型。程序用于为特定应用程序创建规则。你也可以选择端口，用于影响特定端口号的规则；预定义用于连接默认创建的某个组，如核心网络，而自定义则允许你设置自己的参数，而不仅仅局限于端口号或应用程序。选择**自定义**以查看可用选项。
- en: '![f06012](image_fi/501287c06/f06012.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![f06012](image_fi/501287c06/f06012.png)'
- en: 'Figure 6-12: Rule Type options'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-12：规则类型选项
- en: Specify whether you’re creating a rule for all programs or for only a specific
    application. To do that, select **This Program Path:**, click **Browse**, then
    find where you saved the program on your system and select it from the menu. In
    [Figure 6-13](#figure6-13), I used a fake program name as an example. Feel free
    to do the same, or keep the All Programs option selected. Then click **Next**.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 指定你是为所有程序创建规则，还是仅为特定应用程序创建规则。为此，选择**此程序路径**，点击**浏览**，然后找到你在系统中保存的程序并从菜单中选择它。在[图
    6-13](#figure6-13)中，我使用了一个虚拟程序名作为示例。你也可以这样做，或者继续选择“所有程序”选项。然后点击**下一步**。
- en: '![f06013](image_fi/501287c06/f06013.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![f06013](image_fi/501287c06/f06013.png)'
- en: 'Figure 6-13: Example of program selection'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-13：程序选择示例
- en: Now list which ports and protocols you need for your rule. If you’re making
    a rule for an application, you should be able to find out which ports and protocols
    it uses from its company’s website or support materials. In this example, I used
    port 80 and the protocol TCP to represent a web service. [Figure 6-14](#figure6-14)
    shows the options filled in.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在列出你的规则所需的端口和协议。如果你为某个应用程序创建规则，你应该能够从该应用程序的官方网站或支持材料中找到它使用的端口和协议。在这个示例中，我使用了端口80和协议TCP来表示Web服务。[图
    6-14](#figure6-14)显示了已填写的选项。
- en: '![f06014](image_fi/501287c06/f06014.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![f06014](image_fi/501287c06/f06014.png)'
- en: 'Figure 6-14: Example of port number selection'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-14：端口号选择示例
- en: Click **Next** to specify the IP addresses the rule applies to in the Scope
    step. Unless you’re trying to communicate with a specific device, for example
    a printer, it’s generally best to leave a broad scope of addresses accessible
    so you don’t have to constantly add new ones. This is also a good time to rethink
    the rule and make sure you’re comfortable with allowing all sources of traffic
    in or out.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**下一步**，在“范围”步骤中指定规则适用的IP地址。除非你打算与特定设备通信，例如打印机，否则最好保持广泛的地址范围可访问，以免你不断添加新的地址。这也是重新考虑规则并确保你愿意允许所有来源的流量进出的时候。
- en: 'Click **Next** to go to the Action step and decide on the action you’ll take.
    You have three options: allow, allow if secure, and block. The allow if secure
    option lets a connection through only if it’s using a well-known security protocol
    that includes encryption (we’ll discuss some of those protocols in Chapter 9).
    In this exercise, I made the rule block the connection, as shown in [Figure 6-15](#figure6-15).
    This means any traffic on port 80 trying to access the specified application will
    be blocked, effectively isolating it from web traffic.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**下一步**进入“操作”步骤，决定你要采取的操作。你有三种选择：允许、如果安全则允许和阻止。“如果安全则允许”选项仅在连接使用了包含加密的知名安全协议时才允许连接（我们将在第9章讨论一些这些协议）。在此练习中，我设置规则为阻止连接，如[图
    6-15](#figure6-15)所示。这意味着任何尝试访问指定应用程序的端口80上的流量将被阻止，从而有效地将其与Web流量隔离。
- en: After selecting the action, click **Next** to choose your rule’s profile. Generally,
    you should select all three profiles so the rule works no matter what type of
    network you’re on. That said, you might choose a specific profile type to give
    your computer a different level of security. For example, you might block a connection
    to a public network that you’d normally allow on a private network.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 选择动作后，点击**下一步**以选择规则的配置文件。通常，你应该选择所有三种配置文件，以便无论你处于哪种类型的网络中，规则都能起作用。不过，你也可以选择一个特定的配置文件类型，以为你的计算机提供不同级别的安全性。例如，你可能会阻止与公共网络的连接，而这种连接通常会在私人网络中允许。
- en: '![f06015](image_fi/501287c06/f06015.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![f06015](image_fi/501287c06/f06015.png)'
- en: 'Figure 6-15: Setting the connection type'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图6-15：设置连接类型
- en: Finally, click **Next** to name the rule. Then click **Finish**. You should
    see your new rule at the top of the list in the Inbound Rules window, as shown
    in [Figure 6-16](#figure6-16).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，点击**下一步**来命名规则。然后点击**完成**。你应该能在“入站规则”窗口的顶部看到你新建的规则，如[图6-16](#figure6-16)所示。
- en: '![f06016](image_fi/501287c06/f06016.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![f06016](image_fi/501287c06/f06016.png)'
- en: 'Figure 6-16: The final rule in place'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图6-16：最终规则生效
- en: Now that you’ve added a new rule, you can easily create more rules to fit your
    network’s needs while also keeping your device more secure. Remember that when
    you no longer need a rule, you can disable it rather than deleting it in case
    you need it in the future.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经添加了一个新规则，你可以轻松地创建更多规则，以满足网络需求，同时保持设备的安全。记住，当你不再需要某个规则时，你可以禁用它，而不是删除它，以防将来可能还需要它。
- en: macOS
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: macOS
- en: macOS includes a built-in firewall that you can activate. Although its options
    aren’t as robust as Windows Defender Firewall’s, it still provides great protection
    once it’s set up correctly. To find the firewall, click the Apple symbol in the
    top-left corner of your screen, and then click **System Preferences**. Click **Security
    & Privacy**, and then click **Firewall** in the top menu bar. [Figure 6-17](#figure6-17)
    shows the resulting dialog. If the firewall is turned off, you’ll need administrator
    privileges to turn it on. Click the lock at the bottom of the dialog to change
    the firewall settings. Click **Turn On Firewall**, and then click **Firewall Options**.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: macOS包含一个内置的防火墙，你可以激活它。虽然它的选项没有Windows Defender防火墙那么强大，但一旦正确设置，它仍然提供了很好的保护。要找到防火墙，点击屏幕左上角的苹果标志，然后点击**系统偏好设置**。点击**安全性与隐私**，然后点击顶部菜单栏中的**防火墙**。[图6-17](#figure6-17)显示了结果对话框。如果防火墙被关闭，你需要管理员权限才能打开它。点击对话框底部的锁图标来更改防火墙设置。点击**开启防火墙**，然后点击**防火墙选项**。
- en: In the options dialog ([Figure 6-18](#figure6-18)), you have a few choices.
    You can block all incoming connections to the system. Although this will increase
    your security, your applications won’t work properly if they can’t accept incoming
    connections. You can also add applications and specify whether they should accept
    or deny incoming connections. In [Figure 6-18](#figure6-18), Adobe Photoshop is
    set to allow all connections.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在选项对话框中（[图6-18](#figure6-18)），你有几种选择。你可以阻止所有进入系统的连接。虽然这会增加你的安全性，但如果应用程序无法接受传入连接，它们将无法正常工作。你还可以添加应用程序，并指定它们是否应接受或拒绝传入连接。在[图6-18](#figure6-18)中，Adobe
    Photoshop 被设置为允许所有连接。
- en: '![f06017](image_fi/501287c06/f06017.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![f06017](image_fi/501287c06/f06017.png)'
- en: 'Figure 6-17: macOS firewall settings'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图6-17：macOS防火墙设置
- en: '![f06018](image_fi/501287c06/f06018.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![f06018](image_fi/501287c06/f06018.png)'
- en: 'Figure 6-18: macOS Firewall options'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图6-18：macOS防火墙选项
- en: The next option allows built-in software to accept incoming connections automatically.
    This means that any Apple product installed on the system will accept incoming
    connections by default. Apple has many processes in place that test its software
    for vulnerabilities, but you should be aware that there remains a chance that
    a black hat could exploit this firewall condition to gain access to an application.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个选项允许内置软件自动接受传入连接。这意味着系统上安装的任何苹果产品默认都会接受传入连接。苹果有许多过程来测试其软件的漏洞，但你应该注意，仍然存在黑客可能利用这种防火墙条件来访问应用程序的风险。
- en: The next option is similar but applies to downloaded signed software. *Signed
    software* is from a verified legitimate source. The last option, *stealth mode*,
    prevents your device from sending an answer when it receives certain kinds of
    traffic, such as a ping packet. This can be helpful for blocking an attacker from
    learning information about your device, including whether or not it’s actually
    on the network.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个选项类似，但适用于下载的签名软件。*签名软件*来自经过验证的合法来源。最后一个选项，*隐身模式*，防止设备在接收到某些类型的流量（例如ping包）时做出回应。这可以帮助阻止攻击者获取有关设备的信息，包括它是否真的在线。
- en: Unfortunately, macOS doesn’t offer as many options as Windows Defender Firewall
    in the GUI; you can add applications to your firewall list, but you can’t create
    custom rules with port numbers using the options in System Preferences. There’s
    also a firewall called *pf* that runs as part of the operating system; however,
    to access it, you’ll need to access the configuration file *pf.conf* in the *etc*
    folder. You can find a manual for it by entering the `man` command, `man pf.conf`,
    in a Terminal window, which brings up help documents built into the system.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，macOS的图形界面（GUI）没有像Windows Defender防火墙那样提供很多选项；你可以将应用程序添加到防火墙列表中，但不能使用系统偏好设置中的选项创建带有端口号的自定义规则。还有一个叫做*pf*的防火墙，它是操作系统的一部分；不过，要访问它，你需要进入*etc*文件夹中的配置文件*pf.conf*。你可以通过在终端窗口输入`man`命令，`man
    pf.conf`，来查找其手册，这会显示内置的帮助文档。
- en: I highly suggest you read the manual thoroughly before making any changes to
    the firewall. Unfortunately, the specifics of configuring *pf* are outside the
    scope of this book.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在对防火墙进行任何更改之前，我强烈建议你彻底阅读手册。不幸的是，配置*pf*的具体细节超出了本书的范围。
- en: Now that you understand how to make rules for Windows and macOS, you can fine-tune
    your firewall to secure your system while you work. The important detail to remember
    is that creating a well-tuned firewall takes time and some trial and error. It’s
    also not a feature you can just set once and not think about again. Reviewing
    firewall rules to make sure all your applications are protected is essential to
    ensure you maintain your system’s security.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了如何为Windows和macOS创建规则，你可以微调你的防火墙，在工作时保护你的系统。需要记住的重要细节是，创建一个调优良好的防火墙需要时间和一些反复尝试。这也不是一个你可以设置一次就不再考虑的功能。定期审查防火墙规则，确保所有应用程序都受到保护，对于维持系统安全至关重要。
- en: Conclusion
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: After reading this chapter, you now know that prevention is critical to protect
    your network’s security. Your security efforts should primarily focus on preventing
    an attack from occurring rather than trying to stop it once it begins. By setting
    up a firewall with the correct rules, you can thwart many low- and mid-level attacks
    just by stopping the traffic from entering your network. For high-level attacks,
    using an application firewall or an IDS or IPS can help detect an attack before
    it has a chance to reach its destination or unleash its payload. These systems
    can provide security experts with the crucial time they need to react before a
    black hat gains access.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读完这一章后，你现在知道预防对于保护网络安全至关重要。你的安全工作应该主要集中在防止攻击发生，而不是在攻击发生后再去阻止它。通过设置具有正确规则的防火墙，你可以通过阻止流量进入网络来挫败许多低级和中级攻击。对于高级攻击，使用应用程序防火墙或IDS/IPS可以在攻击到达目的地或释放负载之前帮助检测攻击。这些系统可以为安全专家提供必要的时间，以便在黑帽黑客获得访问权限之前做出反应。
