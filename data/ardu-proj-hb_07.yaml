- en: '**PART 6**'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**第6部分**'
- en: '![image](../images/common-01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common-01.jpg)'
- en: '**SECURITY**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全性**'
- en: 'PROJECT 18: INTRUDER SENSOR'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目18：入侵者传感器
- en: '**IN THIS PROJECT, WE’LL USE AN ULTRASONIC SENSOR TO DETECT AN INTRUDER.**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**在这个项目中，我们将使用超声波传感器来检测入侵者。**'
- en: '![image](../images/f0156-01.jpg)![image](../images/f0157-01.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0156-01.jpg)![image](../images/f0157-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需部件**'
- en: • Arduino board
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: • Arduino开发板
- en: • Breadboard
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: • 面包板
- en: • Jumper wires
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: • 跳线
- en: • Four-pin HC-SR04 ultrasonic sensor
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: • 四引脚HC-SR04超声波传感器
- en: • Servomotor
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: • 伺服电机
- en: • Red LED
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: • 红色LED
- en: • Green LED
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: • 绿色LED
- en: • 2 220-ohm resistors
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: • 2个220欧姆电阻
- en: We’ll connect the intruder sensor to a servo and some LEDs so that when someone
    comes within a certain distance, a green LED turns off, a red LED turns on, and
    the servomotor moves (see [Figure 18-1](ch18.xhtml#ch18fig1)).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将入侵者传感器与伺服电机和一些LED灯连接，这样当有人接近一定距离时，绿色LED会熄灭，红色LED会亮起，伺服电机也会移动（见[图18-1](ch18.xhtml#ch18fig1)）。
- en: '**FIGURE 18-1:**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**图18-1：**'
- en: The LEDs alert you to an intruder.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这些LED灯会提醒你有入侵者。
- en: '![image](../images/f18-01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f18-01.jpg)'
- en: '**HOW IT WORKS**'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: 'This project is versatile and can be used and adapted in various ways. Because
    the ultrasonic sensor can define distance, you could, for example, use it to define
    an area and trigger an alarm when that perimeter is breached. The sensor works
    similarly to a radar: it sends out an ultrasonic signal, or *ping*. When this
    signal hits an object, it bounces back like an echo, and the time between the
    ping and the echo is used to calculate distance. The Arduino can use this calculation
    to trigger an event, depending on the value received.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目非常灵活，可以以多种方式使用和改造。由于超声波传感器能够测量距离，你可以用它来定义一个区域，并在越过这个范围时触发警报。例如，它的工作原理类似于雷达：它发出一个超声波信号，或称为*ping*。当这个信号遇到物体时，会像回声一样反弹回来，ping和回声之间的时间可以用来计算距离。Arduino可以根据这个计算触发某些事件。
- en: In this project, when the sensor detects an intruder within a predefined vicinity,
    the red LED will light and the servo arm will move. You can adapt this project
    to trigger a different event when the intruder is detected, like pressing a security
    system button or locking a door. For a friendlier scenario, you could set the
    distance really close so that when you wave your hand in front of the sensor,
    the servo presses a button to release a treat, like candy.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，当传感器检测到有入侵者接近预设范围时，红色LED会亮起，伺服电机臂将开始移动。你可以根据需要修改这个项目，使其在检测到入侵者时触发不同的事件，比如按下安全系统按钮或锁门。为了实现更友好的场景，你可以将距离设得非常近，这样当你在传感器前挥动手时，伺服电机会按下按钮释放糖果等奖励。
- en: '**NOTE**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*To use the same ultrasonic sensor shown in these figures, see “[Retailer List](app01.xhtml#app01lev1sec02)”
    on [page 240](app01.xhtml#page_240) or search online for* HC-SR04 ultrasonic module.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*要使用这些图中展示的相同超声波传感器，请参见“[零售商列表](app01.xhtml#app01lev1sec02)”中的[第240页](app01.xhtml#page_240)，或在线搜索*
    HC-SR04超声波模块。'
- en: '**THE BUILD**'
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建**'
- en: Insert the ultrasonic sensor into the breadboard. The sensor we’re using in
    this project has four pins, as shown in [Figure 18-2](ch18.xhtml#ch18fig2). Connect
    the sensor’s GND to the Arduino GND rail, VCC to Arduino +5V, Trig to Arduino
    pin 12, and Echo to Arduino pin 13.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将超声波传感器插入面包板中。我们在这个项目中使用的传感器有四个引脚，如[图18-2](ch18.xhtml#ch18fig2)所示。将传感器的GND连接到Arduino的GND轨道，VCC连接到Arduino的+5V轨道，Trig连接到Arduino的12号引脚，Echo连接到Arduino的13号引脚。
- en: '| **ULTRASONIC SENSOR** | **ARDUINO** |'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **超声波传感器** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| GND | GND |'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | GND |'
- en: '| VCC | +5V |'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| VCC | +5V |'
- en: '| Trig | Pin 12 |'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Trig | 12号引脚 |'
- en: '| Echo | Pin 13 |'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Echo | 13号引脚 |'
- en: '**FIGURE 18-2:**'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图18-2：**'
- en: The HC-SR04 ultrasonic sensor
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: HC-SR04超声波传感器
- en: '![image](../images/f18-02.jpg)'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f18-02.jpg)'
- en: Connect the servo’s brown (ground) wire to the Arduino GND rail, its red (power)
    wire to the Arduino +5V rail, and its yellow signal (control) wire to Arduino
    pin 9.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将伺服电机的棕色（接地）线连接到Arduino的GND轨道，红色（电源）线连接到Arduino的+5V轨道，黄色信号（控制）线连接到Arduino的9号引脚。
- en: '| **SERVO** | **ARDUINO** |'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **伺服电机** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Red wire | +5V |'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红色线 | +5V |'
- en: '| Brown wire | GND |'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 棕色线 | GND |'
- en: '| Yellow wire | Pin 9 |'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黄色线 | 9号引脚 |'
- en: Insert the red and green LEDs into the breadboard with the shorter, negative
    legs in the Arduino GND rail. Add a 220-ohm resistor to each of the positive legs,
    and connect the red LED to Arduino pin 2 and the green LED to pin 3 via the resistors.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将红色和绿色LED插入面包板，短的负极引脚接入Arduino的GND轨道。为每个正极引脚加上220欧姆的电阻，并将红色LED连接到Arduino的2号引脚，绿色LED连接到3号引脚，通过电阻连接。
- en: '| **LEDS** | **ARDUINO** |'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **LED灯** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Negative legs | GND |'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 负极引脚 | GND |'
- en: '| Positive leg (red) | Pin 2 via 220-ohm resistor |'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 正极（红色） | 通过 220 欧姆电阻连接到引脚 2 |'
- en: '| Positive leg (green) | Pin 3 via 220-ohm resistor |'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 正极（绿色） | 通过 220 欧姆电阻连接到引脚 3 |'
- en: Connect the power rails on the breadboard to Arduino +5V and GND. The final
    configuration is shown in [Figure 18-3](ch18.xhtml#ch18fig3).
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将面包板上的电源轨连接到 Arduino 的 +5V 和 GND。最终配置如 [图 18-3](ch18.xhtml#ch18fig3) 所示。
- en: '**FIGURE 18-3:**'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 18-3：**'
- en: The complete intruder sensor project
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完整的入侵传感器项目
- en: '![image](../images/f18-03.jpg)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f18-03.jpg)'
- en: Check that your setup matches that of [Figure 18-4](ch18.xhtml#ch18fig4) and
    then upload the code in “[The Sketch](ch18.xhtml#ch18lev1sec03)” on [page 161](ch18.xhtml#page_161).
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查你的设置是否与 [图 18-4](ch18.xhtml#ch18fig4) 一致，然后上传 “[草图](ch18.xhtml#ch18lev1sec03)”
    中的代码，代码位于 [第 161 页](ch18.xhtml#page_161)。
- en: '**FIGURE 18-4:**'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 18-4：**'
- en: The circuit diagram for the intruder sensor
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 入侵传感器的电路图
- en: '![image](../images/f18-04.jpg)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f18-04.jpg)'
- en: '**THE SKETCH**'
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**草图**'
- en: 'When an object is within the trigger distance, the red LED will light and the
    servo will move 45 degrees. You can change the distance of the sensor field in
    the following line of the sketch:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当物体进入触发距离时，红色 LED 会亮起，伺服电机会转动 45 度。你可以在草图的以下行中改变传感器的探测距离：
- en: '[PRE0]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this example, if something is sensed within a distance of 15 centimeters,
    the next block of code will run.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，如果在 15 厘米内探测到物体，下一段代码将被执行。
- en: The Trig pin on the sensor is connected to Arduino pin 12 and emits an ultrasonic
    signal or ping. When the signal reaches an object, it bounces back to the module,
    and this echo is sent to Arduino pin 13\. The time difference between the two
    signals gives us our distance reading. If the distance is more than our set minimum,
    the green LED stays on; if not, the red LED lights and the servo moves.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器上的 Trig 引脚连接到 Arduino 引脚 12，发出超声波信号或 Ping。当信号到达物体时，会反弹回模块，这个回波会发送到 Arduino
    引脚 13。两个信号之间的时间差给我们提供了距离读数。如果距离超过我们设定的最小值，绿色 LED 会保持亮起；如果不超过，红色 LED 会亮起，伺服电机会移动。
- en: '[PRE1]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'PROJECT 19: LASER TRIP WIRE ALARM'
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目 19：激光触发报警器
- en: '**IN THIS PROJECT, YOU’LL CREATE A SIMPLE LASER TRIP WIRE ALARM.**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**在这个项目中，你将制作一个简单的激光触发报警器。**'
- en: '![image](../images/f0163-01.jpg)![image](../images/f0164-01.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0163-01.jpg)![image](../images/f0164-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需组件**'
- en: • Arduino board
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: • Arduino 主板
- en: • Breadboard
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: • 面包板
- en: • Jumper wires
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: • 跳线
- en: • Photoresistor
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: • 光敏电阻
- en: • Piezo buzzer
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: • 压电蜂鸣器
- en: • Green LED
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: • 绿色 LED
- en: • 10k-ohm resistor
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: • 10k 欧姆电阻
- en: • Laser pen
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: • 激光笔
- en: You’ve probably seen a movie where a valuable item is protected by a grid of
    laser beams. The beams look cool and seem pretty high-tech, but the principles
    behind them are actually very simple.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能见过这样的电影场景：一个珍贵的物品被激光束网格保护着。这些激光束看起来很酷，似乎很高科技，但它们背后的原理其实非常简单。
- en: '**HOW IT WORKS**'
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: When the laser pen shines on the photoresistor, the green LED will light up
    to signify that the circuit is ready. When the laser beam is broken, the LED turns
    off and the buzzer sounds.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当激光笔照射到光敏电阻上时，绿色 LED 会亮起，表示电路准备就绪。当激光束被打破时，LED 熄灭，蜂鸣器发出声音。
- en: As we know from [Projects 13](ch13.xhtml#ch13) and [18](ch18.xhtml#ch18), photoresistors
    produce variable resistance depending on the amount of light falling on their
    sensor. When the photoresistor does not detect light from the laser, it will drop
    its resistance and trigger the Arduino to send voltage to the pin controlling
    the buzzer.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在 [项目 13](ch13.xhtml#ch13) 和 [18](ch18.xhtml#ch18) 中所知，光敏电阻根据照射到其传感器上的光线强度产生可变电阻。当光敏电阻没有检测到激光光线时，它会降低电阻并触发
    Arduino 向控制蜂鸣器的引脚发送电压。
- en: Laser beams that are visible in daylight or even in the dark are very powerful
    and can be extremely dangerous. In this project we’ll use a low-powered laser
    pen instead (see [Figure 19-1](ch19.xhtml#ch19fig1)).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在白天或甚至在黑暗中可见的激光束非常强大，可能非常危险。在这个项目中，我们将使用一支低功率的激光笔代替（见 [图 19-1](ch19.xhtml#ch19fig1)）。
- en: '**FIGURE 19-1:**'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 19-1：**'
- en: Laser pens can still be dangerous and should never be directed toward anybody’s
    eyes!
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 激光笔仍然可能是危险的，绝对不应该将其对准任何人的眼睛！
- en: '![image](../images/f19-01.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f19-01.jpg)'
- en: '**THE BUILD**'
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建过程**'
- en: Insert your photoresistor into the breadboard. Connect one leg to the +5V rail
    using a jumper wire. Connect a 10k-ohm resistor to the other leg, and connect
    the other side of this resistor to Arduino A0 and GND on the breadboard.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光敏电阻插入面包板。将一端连接到 +5V 电源轨，另一端连接到 10k 欧姆电阻，电阻的另一端连接到 Arduino 的 A0 和 GND 引脚。
- en: '| **PHOTORESISTOR** | **ARDUINO** |'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **光敏电阻** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Leg 1 | +5V |'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 1 | +5V |'
- en: '| Leg 2 | A0 via 10k-ohm resistor and GND |'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 2 | A0 通过 10kΩ 电阻和 GND |'
- en: Connect the red (positive) wire of the piezo buzzer directly to Arduino pin
    11 on the Arduino and the black (GND) wire to GND on the breadboard.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将蜂鸣器的红色（正极）线直接连接到 Arduino 的 11 引脚，黑色（GND）线连接到面包板的 GND。
- en: '| **PIEZO** | **ARDUINO** |'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **蜂鸣器** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Black wire | GND |'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黑线 | GND |'
- en: '| Red wire | Pin 11 |'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红线 | 引脚 11 |'
- en: Insert the green LED’s long leg into Arduino pin 13 and the short leg into GND.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将绿LED的长腿插入 Arduino 的 13 引脚，短腿插入 GND。
- en: Connect the power rails to the breadboard.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将电源轨连接到面包板。
- en: Before you upload the code, you need to check the photo-resistor’s value in
    ambient light. Run the following small program with the photoresistor set up as
    instructed.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上传代码之前，你需要检查光敏电阻在环境光下的值。按照说明设置光敏电阻后，运行以下小程序。
- en: '[PRE2]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Open the Serial Monitor in the Arduino IDE. It will show the value being read
    from the light resistor—in [Figure 19-2](ch19.xhtml#ch19fig2), it’s 964—in normal
    lighting conditions. Take note of your number, which will be different depending
    on your lighting conditions.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Arduino IDE 中的串行监视器。它将显示从光敏电阻读取的值——在[图 19-2](ch19.xhtml#ch19fig2)中，它为 964——在正常光照条件下。记录下这个数字，它会根据你的光照条件有所不同。
- en: '**FIGURE 19-2:**'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 19-2：**'
- en: Reading values from the photoresistor
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从光敏电阻读取数值
- en: '![image](../images/f19-02.jpg)'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f19-02.jpg)'
- en: Now shine the laser on the resistor’s cell, and also note this number; my reading
    is 620\. This might seem counterintuitive, as you would expect more light to provide
    a higher number, but the figure is actually translating the resistance—more light,
    less resistance. Your values will differ from those shown here, so make sure to
    record your two readings.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在将激光照射到电阻的光敏元件上，并记录下这个数值；我的读数是 620。这可能看起来有些反直觉，因为你会预期更多的光照会提供更高的数值，但这个数值实际上是在转换电阻——更多的光，电阻更小。你的数值可能与这里展示的不同，所以务必记录下你得到的两个读数。
- en: Check that your setup matches that of [Figure 19-3](ch19.xhtml#ch19fig3) and
    then upload the code in “[The Sketch](ch19.xhtml#ch19lev1sec03)” on [page 168](ch19.xhtml#page_168).
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查你的设置是否与[图 19-3](ch19.xhtml#ch19fig3)相匹配，然后上传[第 168 页](ch19.xhtml#page_168)中“[草图](ch19.xhtml#ch19lev1sec03)”中的代码。
- en: '**FIGURE 19-3:**'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 19-3：**'
- en: The circuit diagram for the laser trip wire alarm
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 激光触发报警器的电路图
- en: '![image](../images/f19-03.jpg)'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f19-03.jpg)'
- en: '**THE SKETCH**'
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**草图**'
- en: 'The sketch first sets Arduino pin 11 as an `OUTPUT` for the piezo buzzer and
    pin 13 as an `OUTPUT` for the LED. The photoresistor is connected to Arduino pin
    A0\. If the analog reading from A0 is more than 850 (meaning that there is less
    light and the laser beam has been broken), the buzzer will be set to `HIGH` and
    turn on and the LED will turn off. Remember to change the resistance value depending
    on your calibration on this line:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 草图首先将 Arduino 引脚 11 设置为蜂鸣器的 `输出`，将引脚 13 设置为 LED 的 `输出`。光敏电阻连接到 Arduino 的 A0
    引脚。如果 A0 的模拟读取值超过 850（意味着光线较少且激光束被打破），蜂鸣器将被设置为 `高`，并开启，LED 将关闭。记得根据你的校准调整此行中的电阻值：
- en: '[PRE3]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As noted earlier, when the laser is shining on the resistor it reads about 620,
    so in the sketch I’ve set the buzzer to sound only if the value is more than 850\.
    This value is between our laser value and our nonlaser value, so we know the laser
    beam to the resistor has been broken if the value reaches 850.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，当激光照射到电阻时，读数约为 620，因此在代码中，我设置蜂鸣器只有在数值超过 850 时才会发出声音。这个数值介于激光值和非激光值之间，因此当数值达到
    850 时，我们就知道激光束已经被打破。
- en: '[PRE4]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'PROJECT 20: SENTRY GUN'
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目 20：自动瞄准枪
- en: '**A SENTRY GUN IS AN UNMANNED WEAPON CAPABLE OF AUTONOMOUSLY SENSING AND FIRING
    UPON ENEMY TARGETS USING ULTRASONIC DETECTION. IN THIS PROJECT, WE’LL CREATE A
    MINIATURE VERSION OF THIS GUN.**'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**自动瞄准枪是一种无人武器，能够通过超声波检测自主感知并对敌方目标进行射击。在本项目中，我们将制作这种枪的微型版本。**'
- en: '![image](../images/f0170-01.jpg)![image](../images/f0171-01.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0170-01.jpg)![image](../images/f0171-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需组件**'
- en: • Arduino board
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: • Arduino 板
- en: • Mini breadboard
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: • 小型面包板
- en: • Jumper wires
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: • 跳线
- en: • Male-to-male jumper wires
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: • 公对公跳线
- en: • Four-pin HC-SR04 ultrasonic sensor
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: • 四针 HC-SR04 超声波传感器
- en: • WLToys RC V959 missile launcher
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: • WLToys RC V959 导弹发射器
- en: • Tower Pro SG90 9g servomotor
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: • Tower Pro SG90 9g 伺服电机
- en: '**LIBRARIES REQUIRED**'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需库**'
- en: • Servo
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: • 伺服电机
- en: • NewPing
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: • NewPing
- en: '**HOW IT WORKS**'
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: We’ll attach the toy missile launcher and the ultrasonic sensor to a servo arm
    (see [Figure 20-1](ch20.xhtml#ch20fig1)) so that the servo sweeps the gun and
    sensor back and forth across 180 degrees, giving the ultrasonic sensor a wide
    range of detection. When an enemy is detected, the Arduino triggers the sentry
    gun and discharges the missiles. For more on the ultrasonic sensor, see [Project
    18](ch18.xhtml#ch18).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将玩具导弹发射器和超声波传感器安装到舵机臂上（见[图 20-1](ch20.xhtml#ch20fig1)），这样舵机可以将枪和传感器在 180 度范围内来回扫动，使超声波传感器具有更广泛的探测范围。当检测到敌人时，Arduino
    会触发警戒枪并发射导弹。有关超声波传感器的更多信息，请参见[第 18 项项目](ch18.xhtml#ch18)。
- en: '**FIGURE 20-1:**'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 20-1：**'
- en: Attaching the toy gun and ultrasonic sensor to the servo arm gives them a wide
    range of detection and motion.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 将玩具枪和超声波传感器安装到舵机臂上，使它们具有更广泛的探测和运动范围。
- en: '![image](../images/f20-01.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f20-01.jpg)'
- en: The key component for this project is the WLToys RC V959 missile launcher, also
    known as the Walkera Part RC V959-19 missile bullet launcher, intended for radio-controlled
    helicopters ([Figure 20-2](ch20.xhtml#ch20fig2)).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目的关键组件是 WLToys RC V959 导弹发射器，也被称为 Walkera 部件 RC V959-19 导弹发射器，设计用于遥控直升机（见[图
    20-2](ch20.xhtml#ch20fig2)）。
- en: '**FIGURE 20-2:**'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 20-2：**'
- en: The Walkera Part RC V959-19 missile bullet launcher
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Walkera 部件 RC V959-19 导弹发射器
- en: '![image](../images/f20-02.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f20-02.jpg)'
- en: This cool part is really cheap (around $6 –10) and is widely available online.
    Inside this launcher is a mini servo that revolves to set off the missiles. The
    wires that control this servo are white (GND) and yellow (+5V). You’ll also find
    black and red wires, which are for a single shot, but we’ll use only yellow and
    white for a continuous Gatling gun effect.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这个酷炫的部件非常便宜（大约 6 到 10 美元），并且在网上非常容易购买。这个发射器内部有一个小型舵机，通过旋转来发射导弹。控制这个舵机的电线是白色（GND）和黄色（+5V）。你还会看到黑色和红色电线，它们是用于单次发射的，但我们将只使用黄色和白色线，以实现持续的加特林枪效果。
- en: '**THE BUILD**'
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建过程**'
- en: First we’ll prepare the toy missile launcher. Carefully remove the four wires
    from the small plastic socket; they should come out fairly easily. You can use
    a male-to-male jumper wire to push down on the plastic clip to help.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先我们准备好玩具导弹发射器。小心地将四根线从小塑料插座中拔出，它们应该会很容易地出来。你可以使用公对公跳线，按下塑料夹来帮助拔出。
- en: The core of the wire is stranded and quite flimsy, so strip the end of the yellow
    and white wires and solder them to separate solid-core wires that can be inserted
    into the Arduino, as shown in [Figure 20-3](ch20.xhtml#ch20fig3). Trim the black
    and red wires or tape them out of the way.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 电线的核心是绞合的，非常脆弱，因此需要剥掉黄色和白色电线的末端，并将它们焊接到可以插入 Arduino 的独立实心线中，如[图 20-3](ch20.xhtml#ch20fig3)所示。修剪黑色和红色电线，或者将它们用胶带固定在一旁。
- en: '**FIGURE 20-3:**'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 20-3：**'
- en: Stripping and soldering the missile launcher wires
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 剥皮并焊接导弹发射器电线
- en: '![image](../images/f20-03.jpg)'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f20-03.jpg)'
- en: Glue the servo motor’s arm to the base of the missile launcher, as shown in
    [Figure 20-4](ch20.xhtml#ch20fig4).
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将舵机电机的臂部粘贴到导弹发射器的底座上，如[图 20-4](ch20.xhtml#ch20fig4)所示。
- en: '**FIGURE 20-4:**'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 20-4：**'
- en: Gluing the servo motor’s arm
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 粘贴舵机电机的臂部
- en: '![image](../images/f20-04.jpg)'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f20-04.jpg)'
- en: Attach the ultrasonic sensor to the top of the launcher, as shown in [Figure
    20-5](ch20.xhtml#ch20fig5). You can use a hot-glue gun for a solid connection
    or just tape it for now if you might want to alter it later.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将超声波传感器粘贴到发射器的顶部，如[图 20-5](ch20.xhtml#ch20fig5)所示。你可以使用热熔胶枪来确保连接牢固，或者如果之后可能需要修改，可以暂时用胶带粘贴。
- en: '**FIGURE 20-5:**'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 20-5：**'
- en: Attaching the ultrasonic sensor
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 安装超声波传感器
- en: '![image](../images/f20-05.jpg)'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f20-05.jpg)'
- en: 'Use the jumper wires to connect the ultrasonic sensor to the Arduino: connect
    Trig directly to Arduino pin 13, and Echo directly to Arduino pin 12\. We will
    use a mini breadboard to assist with multiple power connections to Arduino +5V
    and GND.'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用跳线将超声波传感器连接到 Arduino：将 Trig 直接连接到 Arduino 引脚 13，将 Echo 直接连接到 Arduino 引脚 12。我们将使用迷你面包板来辅助多个电源连接到
    Arduino +5V 和 GND。
- en: '| **ULTRASONIC SENSOR** | **ARDUINO** |'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **超声波传感器** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| VCC | +5V |'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| VCC | +5V |'
- en: '| Trig | Pin 13 |'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Trig | 引脚 13 |'
- en: '| Echo | Pin 12 |'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Echo | 引脚 12 |'
- en: '| GND | GND |'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | GND |'
- en: Connect the servomotor’s brown wire to Arduino GND and the red wire to +5V via
    the mini breadboard, and the yellow/white wire directly to Arduino pin 9.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将舵机的棕色线连接到 Arduino GND，红色线通过迷你面包板连接到 +5V，黄色/白色线直接连接到 Arduino 引脚 9。
- en: '| **SERVO** | **ARDUINO** |'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **舵机** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Brown wire | GND |'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 棕色线 | GND |'
- en: '| Red wire | +5V |'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红色线 | +5V |'
- en: '| Yellow wire | Pin 9 |'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黄色线 | 引脚 9 |'
- en: Connect the launcher’s white wire to the GND rail of the mini breadboard, and
    the yellow wire directly to Arduino pin 3.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将发射器的白色电线连接到迷你面包板的GND轨道，黄色电线直接连接到Arduino的3号引脚。
- en: '| **LAUNCHER** | **ARDUINO** |'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **发射器** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| White wire | GND |'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 白色电线 | GND |'
- en: '| Yellow wire | Pin 3 |'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黄色电线 | 3号引脚 |'
- en: Your sentry gun should look like [Figure 20-6](ch20.xhtml#ch20fig6). Insert
    the missiles into the launcher.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的岗哨枪应当如[图 20-6](ch20.xhtml#ch20fig6)所示。将导弹插入发射器。
- en: '**FIGURE 20-6:**'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 20-6：**'
- en: Your sentry gun is ready to fire!
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你的岗哨枪已经准备好发射了！
- en: '![image](../images/f20-06.jpg)'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f20-06.jpg)'
- en: Confirm that your completed setup matches that of [Figure 20-7](ch20.xhtml#ch20fig7).
    Upload the code in “[The Sketch](ch20.xhtml#ch20lev1sec03)” on [page 176](ch20.xhtml#page_176).
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认你的完成设置与[图 20-7](ch20.xhtml#ch20fig7)一致。在[第176页](ch20.xhtml#page_176)上传"[草图](ch20.xhtml#ch20lev1sec03)"中的代码。
- en: '**FIGURE 20-7:**'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 20-7：**'
- en: The circuit diagram for the sentry gun
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 岗哨枪的电路图
- en: '![image](../images/f20-07.jpg)'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f20-07.jpg)'
- en: '**THE SKETCH**'
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**草图**'
- en: The sketch first calls the NewPing and Servo libraries to access the functions
    you’ll need to control the servomotor and ultrasonic sensor, respectively. (Make
    sure the NewPing library is downloaded from *[http://nostarch.com/arduinohandbook/](http://nostarch.com/arduinohandbook/)*
    and saved in your Arduino folder.) The servomotor sweeps back one way and then
    forth the other, moving the ultrasonic sensor 180 degrees. The sensor sends out
    an ultrasonic signal, or *ping*, and when this ping reaches an object, it echoes
    back to give a time value. The Arduino converts this value into the distance between
    the sensor and the object. When the distance to the object is fewer than 15 centimeters,
    the servo stops and power is sent to the launcher to fire the bullets at the object.
    You can change this trigger distance (given in centimeters) at ➊.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 草图首先调用了NewPing和Servo库，以访问控制伺服电机和超声波传感器所需的功能。（确保从*[http://nostarch.com/arduinohandbook/](http://nostarch.com/arduinohandbook/)*下载并将NewPing库保存在你的Arduino文件夹中。）伺服电机会先向一个方向旋转，再向另一个方向旋转，移动超声波传感器180度。传感器发出超声波信号或*ping*，当这个ping信号遇到物体时，它会反射回来，并给出一个时间值。Arduino将这个时间值转换为传感器与物体之间的距离。当距离小于15厘米时，伺服电机会停止，并向发射器发送电力，向物体发射子弹。你可以在➊处更改这个触发距离（单位为厘米）。
- en: '[PRE5]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'PROJECT 21: MOTION SENSOR ALARM'
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目 21：运动传感器报警
- en: '**IN THIS PROJECT, WE’LL BUILD A MOTION-SENSING ALARM USING A PASSIVE INFRARED
    (PIR) SENSOR.**'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**在本项目中，我们将使用一个被动红外（PIR）传感器来构建一个运动传感报警。**'
- en: '![image](../images/f0178-01.jpg)![image](../images/f0179-01.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0178-01.jpg)![image](../images/f0179-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需零件**'
- en: • Arduino board
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: • Arduino板
- en: • Breadboard
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: • 面包板
- en: • HC SR501 PIR sensor
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: • HC SR501 PIR传感器
- en: • LED
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: • LED
- en: • Piezo buzzer
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: • 压电蜂鸣器
- en: You can use this alarm to trigger a variety of outputs, such as lights, motors,
    or even a “welcome home” message when you approach your front door.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用这个报警器触发各种输出，例如灯光、电机，甚至当你靠近前门时播放“欢迎回家”的信息。
- en: '**HOW IT WORKS**'
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: This project is based on the HC SR501 PIR sensor, which is widely available
    online for a few dollars. We’re going to set it up so that when someone passes
    in front of the PIR sensor, the LED will light up and the piezo buzzer will sound
    (see [Figure 21-1](ch21.xhtml#ch21fig1)), but you can adapt it for various other
    output.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目基于HC SR501 PIR传感器，它在网上可以以几美元的价格轻松购买。我们将设置它，当有人走过PIR传感器前时，LED会亮起，压电蜂鸣器会发出声音（见[图
    21-1](ch21.xhtml#ch21fig1)），但你也可以根据需要将其改编为其他输出方式。
- en: '**FIGURE 21-1:**'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 21-1：**'
- en: Any piezo buzzer will work for this project, but remember that most have polarity,
    so the red wire must be connected to +5V and the black wire to GND.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 任何压电蜂鸣器都可以用于这个项目，但记得大多数蜂鸣器有极性，因此红色电线必须连接到+5V，黑色电线连接到GND。
- en: '![image](../images/f21-01.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f21-01.jpg)'
- en: Other similar PIR sensors will work with this code, but it’s important to check
    the pin layout of your sensor on the data sheet, as this can vary. All sensors
    should have +5V, GND, and output pins. On this model, the pins are not clearly
    marked, but if you simply remove the outer lens (it’s clipped in place and can
    be unclipped easily), you can identify the pins underneath, as shown in [Figure
    21-2](ch21.xhtml#ch21fig2).
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 其他类似的PIR传感器也能与此代码一起使用，但重要的是要检查传感器的数据表中的引脚布局，因为这可能会有所不同。所有传感器应有+5V、GND和输出引脚。在此型号上，引脚没有明确标记，但如果你简单地取下外层镜头（它是卡在位置上的，可以很容易地解开），你可以看到下面的引脚，如[图
    21-2](ch21.xhtml#ch21fig2)所示。
- en: '**FIGURE 21-2:**'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 21-2：**'
- en: A PIR sensor with the lens removed
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 移除镜头的PIR传感器
- en: '![image](../images/f21-02.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f21-02.jpg)'
- en: The two orange potentiometers on the sensor indicate that there are two adjustable
    settings. With the sensor upright, as shown in [Figure 21-3](ch21.xhtml#ch21fig3),
    the left potentiometer controls how long the output is set to `HIGH` when something
    is detected, and can be set between 5 and 200 seconds. When we attach an LED to
    the output, the LED will be lit for between 5 and 200 seconds depending on the
    setting. The right potentiometer adjusts the detection range from 0 to 7 meters.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器上的两个橙色电位器表示有两个可调节的设置。当传感器直立时，如[图 21-3](ch21.xhtml#ch21fig3)所示，左侧电位器控制当检测到物体时输出信号为
    `HIGH` 的持续时间，设置范围是 5 到 200 秒。当我们将 LED 连接到输出时，LED 将根据设置的时间亮起 5 到 200 秒。右侧电位器调整检测范围，从
    0 到 7 米。
- en: '**FIGURE 21-3:**'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 21-3：**'
- en: PIR sensor potentiometers. The left controls how long the output is set to `HIGH`
    (5–200 seconds), while the right controls the range (0–7 meters).
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: PIR 传感器的电位器。左侧控制输出为 `HIGH` 的持续时间（5-200 秒），右侧控制检测范围（0-7 米）。
- en: '![image](../images/f21-03.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f21-03.jpg)'
- en: The sensor works by detecting infrared radiation, which is emitted from objects
    that generate heat. Crystalline material within the sensor detects the infrared
    radiation, and when it detects a set level, it triggers the output signal of the
    sensor. The Arduino reads this output as voltage, so we can use this as a simple
    switch to turn something on—in this instance, an LED.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器通过检测红外辐射来工作，这些辐射来自产生热量的物体。传感器内部的晶体材料检测到红外辐射，当它检测到设定的阈值时，会触发传感器的输出信号。Arduino
    读取此输出为电压，因此我们可以将其用作简单的开关来开启某个设备——在本项目中是一个 LED。
- en: We are setting up the sensor so that an alarm sounds when the sensor is triggered,
    but there are other ways that you can customize the project. For example, you
    could scare your friends by attaching a servo and setting it up to release a rubber
    band when they walk by.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在设置传感器，以便当传感器被触发时发出警报，但你可以通过其他方式自定义项目。例如，你可以通过连接一个舵机并设置它在朋友经过时释放一个橡皮筋来吓唬他们。
- en: '**THE BUILD**'
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建过程**'
- en: Connect the PIR sensor’s +5V and GND wires to the +5V and GND rails on the breadboard,
    and connect these rails to the Arduino. Connect the PIR sensor’s output wire to
    Arduino pin 2\. (See [Figure 21-4](ch21.xhtml#ch21fig4).)
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 PIR 传感器的 +5V 和 GND 电线连接到面包板上的 +5V 和 GND 导轨，并将这些导轨连接到 Arduino。将 PIR 传感器的输出电线连接到
    Arduino 引脚 2。（请参见[图 21-4](ch21.xhtml#ch21fig4)。）
- en: '| **PIR SENSOR** | **ARDUINO** |'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **PIR 传感器** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| +5V | +5V |'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| +5V | +5V |'
- en: '| GND | GND |'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | GND |'
- en: '| Output | Pin 2 |'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 输出 | 引脚 2 |'
- en: '**FIGURE 21-4:**'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 21-4：**'
- en: PIR sensor connected to wires
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PIR 传感器连接到电线
- en: '![image](../images/f21-04.jpg)'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f21-04.jpg)'
- en: Insert an LED into the breadboard and connect the long, positive leg to Arduino
    pin 13, and the short, negative leg to GND. You don’t need a resistor for the
    LED in this project.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 LED 插入面包板，并将长的正极腿连接到 Arduino 引脚 13，短的负极腿连接到 GND。此项目中不需要为 LED 添加电阻。
- en: '| **LED** | **ARDUINO** |'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **LED** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Positive leg | Pin 13 |'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 正极腿 | 引脚 13 |'
- en: '| Negative leg | GND |'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 负极 | GND |'
- en: Connect the piezo buzzer by attaching the red wire to Arduino pin 10 and the
    black wire to GND.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将红色电线连接到 Arduino 引脚 10，黑色电线连接到 GND，连接蜂鸣器。
- en: '| **PIEZO** | **ARDUINO** |'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **蜂鸣器** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Red wire | Pin 10 |'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红色电线 | 引脚 10 |'
- en: '| Black wire | GND |'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黑色电线 | GND |'
- en: Confirm that your setup matches the circuit diagram in [Figure 21-5](ch21.xhtml#ch21fig5),
    and then upload the code in “[The Sketch](ch21.xhtml#ch21lev1sec03)” on [page
    183](ch21.xhtml#page_183).
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你的设置与[图 21-5](ch21.xhtml#ch21fig5)中的电路图一致，然后上传 “[草图](ch21.xhtml#ch21lev1sec03)”
    中的代码，页面可以参考[第183页](ch21.xhtml#page_183)。
- en: '**FIGURE 21-5:**'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 21-5：**'
- en: The circuit diagram for the motion sensor alarm
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运动传感器报警的电路图
- en: '![image](../images/f21-05.jpg)'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f21-05.jpg)'
- en: '**THE SKETCH**'
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**草图**'
- en: The sketch works by setting Arduino pin 13 as output for the LED, pin 2 as input
    for the PIR sensor, and pin 10 as output for the piezo buzzer. When the PIR sensor
    is triggered, a `HIGH` signal is sent to the Arduino, which will in turn light
    the LED and play a tone on the piezo buzzer.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 草图通过将 Arduino 引脚 13 设置为 LED 输出、引脚 2 设置为 PIR 传感器输入、引脚 10 设置为蜂鸣器输出来工作。当 PIR 传感器被触发时，将发送一个
    `HIGH` 信号到 Arduino，进而点亮 LED 并通过蜂鸣器发出声音。
- en: '[PRE6]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'PROJECT 22: KEYPAD ENTRY SYSTEM'
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目 22：键盘输入系统
- en: '**IT’S TIME TO INTRODUCE A KEYPAD TO YOUR ARDUINO BY BUILDING A KEYPAD ENTRY
    SYSTEM.**'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '**现在是通过构建键盘输入系统将键盘引入你的 Arduino 的时候了。**'
- en: '![image](../images/f0185-01.jpg)![image](../images/f0186-01.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0185-01.jpg)![image](../images/f0186-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需零件**'
- en: • Arduino board
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: • Arduino 板
- en: • Breadboard
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: • 面包板
- en: • Jumper wires
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: • 跳线
- en: • Tower Pro SG90 9g servomotor
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: • Tower Pro SG90 9g 伺服电机
- en: • Green LED
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: • 绿色 LED
- en: • Red LED
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: • 红色 LED
- en: • 4×4 membrane keypad
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: • 4×4 膜式键盘
- en: • 2 220-ohm resistors
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: • 2 个 220 欧姆电阻
- en: '**LIBRARIES REQUIRED**'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需库**'
- en: • Keypad
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: • 键盘
- en: • Servo
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: • 伺服电机
- en: • Password
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: • 密码
- en: This project uses a 4×4 membrane keypad with a ribbon of eight wires running
    from the bottom, connected to a servo that sweeps to open a lock.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目使用一个 4×4 膜式键盘，底部有一条八根线的带状线，连接到一个伺服电机，用于转动解锁。
- en: '**HOW IT WORKS**'
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: A keypad is basically a series of buttons that output a number or character
    depending on which button is pressed. With the keypad face up, the wires are numbered
    1–8 from left to right. The first four wires correspond to the rows, and the latter
    four to the columns.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 键盘本质上是一系列按钮，根据按下的按钮输出数字或字符。将键盘面朝上时，线缆从左到右编号为 1–8。前四根线对应行，后四根线对应列。
- en: You’ll need to download the library for the keypad from the *[http://nostarch.com/arduinohandbook/](http://nostarch.com/arduinohandbook/)*
    and save it in your IDE’s Arduino libraries folder.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要从 *[http://nostarch.com/arduinohandbook/](http://nostarch.com/arduinohandbook/)*
    下载键盘库，并将其保存到您的 IDE 的 Arduino 库文件夹中。
- en: We’ll connect this keypad to a servo and some LEDs to create a lock system like
    the secret knock lock in [Project 9](ch09.xhtml#ch09). To use the lock, enter
    your code and press the asterisk (*) to confirm. If the code matches the password
    defined in the sketch, the green LED will flash and the servo will move 90 degrees.
    If the code is incorrect, the red LED will flash. Use the hash key (#) to reset
    between code inputs. You could swap this servo for a more substantial one capable
    of unlocking a heavier deadbolt on a door, or locking and unlocking a box from
    the inside with the keypad and LEDs mounted externally.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这个键盘连接到伺服电机和一些 LED，创建一个像 [项目 9](ch09.xhtml#ch09) 中的秘密敲击锁系统。使用此锁时，输入您的代码并按下星号（*）确认。如果代码与草图中定义的密码匹配，绿色
    LED 将闪烁，伺服电机将移动 90 度。如果代码不正确，红色 LED 将闪烁。使用井号（#）键在输入代码之间重置。您可以将此伺服电机替换为更强大的伺服电机，用于解锁门上的较重死锁，或使用安装在外部的键盘和
    LED 来解锁和锁定盒子内部。
- en: '**TESTING THE KEYPAD**'
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**测试键盘**'
- en: 'First we’ll test the keypad with the following code:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用以下代码测试键盘：
- en: '[PRE7]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Upload this code and then open the Serial Monitor in your IDE ([Figure 22-1](ch22.xhtml#ch22fig1)).
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 上传此代码，然后在您的 IDE 中打开串口监视器（[图 22-1](ch22.xhtml#ch22fig1)）。
- en: '**FIGURE 22-1:**'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 22-1：**'
- en: Testing the keypad
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 测试键盘
- en: '![image](../images/f22-01.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f22-01.jpg)'
- en: With the keypad face up, connect the wires in sequence from left to right to
    Arduino digital pins 9–2\. Once you have uploaded the code, press a few keys.
    As each key is pressed, the corresponding character should appear on a separate
    line in the Arduino IDE’s serial console.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 将键盘面朝上时，从左到右按顺序将线缆连接到 Arduino 数字引脚 9–2。当您上传完代码后，按几个键。每次按下键时，相应的字符应该出现在 Arduino
    IDE 的串口控制台中的单独一行上。
- en: '**THE BUILD**'
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建过程**'
- en: Connect the pins of the keypad directly to the Arduino pins as follows. The
    keypad pins are numbered as shown in [Figure 22-2](ch22.xhtml#ch22fig2).
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照下图 [图 22-2](ch22.xhtml#ch22fig2) 中所示，直接将键盘引脚连接到 Arduino 引脚。
- en: '| **KEYPAD** | **ARDUINO** |'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **键盘** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Pin 1 | Pin 9 |'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 1 | 引脚 9 |'
- en: '| Pin 2 | Pin 8 |'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 2 | 引脚 8 |'
- en: '| Pin 3 | Pin 7 |'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 3 | 引脚 7 |'
- en: '| Pin 4 | Pin 6 |'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 4 | 引脚 6 |'
- en: '| Pin 5 | Pin 5 |'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 5 | 引脚 5 |'
- en: '| Pin 6 | Pin 4 |'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 6 | 引脚 4 |'
- en: '| Pin 7 | Pin 3 |'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 7 | 引脚 3 |'
- en: '| Pin 8 | Pin 2 |'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 8 | 引脚 2 |'
- en: '**FIGURE 22-2:**'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 22-2：**'
- en: Keypad pins 1–8
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 键盘引脚 1-8
- en: '![image](../images/f22-02.jpg)'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f22-02.jpg)'
- en: Place a green LED and a red LED into the breadboard with the shorter, negative
    legs connected to the Arduino GND rail. Add a 220-ohm resistor to each longer,
    positive leg. Connect the resistor that’s attached to the green LED to Arduino
    pin 11, and the resistor that’s attached to the red LED to Arduino pin 12.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将绿色 LED 和红色 LED 插入面包板，较短的负极腿连接到 Arduino GND 导轨。将 220 欧姆电阻连接到每个较长的正极腿。将连接到绿色
    LED 的电阻连接到 Arduino 引脚 11，将连接到红色 LED 的电阻连接到 Arduino 引脚 12。
- en: '| **LEDS** | **ARDUINO** |'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **LED 灯** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Positive legs | Pins 11 and 12 via 220-ohm resistors |'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 正极腿 | 通过 220 欧姆电阻连接到引脚 11 和 12 |'
- en: '| Negative legs | GND |'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 负极腿 | GND |'
- en: Now attach the servo (see [Figure 22-3](ch22.xhtml#ch22fig3)). Connect the brown
    wire to the GND rail, the red wire to the +5V rail, and the yellow/white wire
    directly to pin 13 on the Arduino.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在连接伺服电机（见 [图 22-3](ch22.xhtml#ch22fig3)）。将棕色线连接到 GND 排，红色线连接到 +5V 排，黄色/白色线直接连接到
    Arduino 的 13 号引脚。
- en: '| **SERVO** | **ARDUINO** |'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **伺服电机** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Brown wire | GND |'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 棕色线 | GND |'
- en: '| Red wire | +5V |'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红色线 | +5V |'
- en: '| Yellow wire | Pin 13 |'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黄色线 | 引脚 13 |'
- en: '**FIGURE 22-3:**'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 22-3：**'
- en: Attaching the servo
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 连接伺服电机
- en: '![image](../images/f22-03.jpg)'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f22-03.jpg)'
- en: Make sure your setup matches that of [Figure 22-4](ch22.xhtml#ch22fig4), and
    upload the code in “[The Sketch](ch22.xhtml#ch22lev1sec04)” on [page 192](ch22.xhtml#page_192).
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你的设置与 [图 22-4](ch22.xhtml#ch22fig4) 中的设置一致，并上传 “[草图](ch22.xhtml#ch22lev1sec04)”
    中的代码，位于 [第 192 页](ch22.xhtml#page_192)。
- en: '**FIGURE 22-4:**'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 22-4：**'
- en: Circuit diagram for the keypad entry system
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 键盘输入系统的电路图
- en: '![image](../images/f22-04.jpg)'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f22-04.jpg)'
- en: '**THE SKETCH**'
  id: totrans-291
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**草图**'
- en: 'First, the sketch calls on the Keypad, Servo, and Password libraries. The Servo
    library is included in the IDE, but you’ll have to download the Keypad and Password
    libraries (*[http://nostarch.com/arduinohandbook/](http://nostarch.com/arduinohandbook/)*).
    We then set the eight pins that will determine the input from the keypad, and
    set Arduino pins 11 and 12 to control the LEDs and pin 13 to control the servomotor.
    The Arduino waits for your code input from the keypad and for you to confirm your
    input with *. Once you’ve pressed the asterisk key, the sketch will check the
    entry against the password in the code. If the entry doesn’t match the password,
    the red LED will be set to `HIGH` and light; if the entry *does* match the password,
    the green LED will be set to `HIGH` and light, and the servomotor will turn. Pressing
    # will reset the sketch so it’s ready for another entry.'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '首先，草图调用了 Keypad、Servo 和 Password 库。Servo 库已经包含在 IDE 中，但你需要下载 Keypad 和 Password
    库（*[http://nostarch.com/arduinohandbook/](http://nostarch.com/arduinohandbook/)*）。然后，我们设置了八个引脚，用于从键盘获取输入，并将
    Arduino 的引脚 11 和 12 设置为控制 LED，13 号引脚控制伺服电机。Arduino 等待你通过键盘输入代码，并在按下 * 确认输入后，草图会检查输入是否与代码中的密码匹配。如果输入不匹配密码，红色
    LED 将被设置为 `HIGH` 并亮起；如果输入 *匹配* 密码，绿色 LED 将被设置为 `HIGH` 并亮起，伺服电机将开始转动。按下 # 将重置草图，准备接受另一个输入。'
- en: To alter the password, change the number in quotation marks in the following
    line.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改密码，请修改以下行中的引号内的数字。
- en: '[PRE8]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The default password in the sketch is 2468.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 草图中的默认密码是 2468。
- en: '[PRE9]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'PROJECT 23: WIRELESS ID CARD ENTRY SYSTEM'
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目 23：无线 ID 卡门禁系统
- en: '**IN THIS PROJECT, WE’LL USE A RADIO FREQUENCY IDENTIFICATION (RFID) READER
    TO BUILD A WIRELESS ID CARD ENTRY SYSTEM.**'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '**在这个项目中，我们将使用射频识别（RFID）读取器来构建一个无线 ID 卡门禁系统。**'
- en: '![image](../images/f0194-01.jpg)![image](../images/f0195-01.jpg)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0194-01.jpg)![image](../images/f0195-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需组件**'
- en: • Arduino board
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: • Arduino 主板
- en: • Breadboard
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: • 面包板
- en: • Jumper wires
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: • 跳线
- en: • Mifare RFID-RC522 module
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: • Mifare RFID-RC522 模块
- en: • Tower Pro SG90 9g servomotor
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: • Tower Pro SG90 9g 伺服电机
- en: • Piezo buzzer
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: • 声音蜂鸣器
- en: • Red LED
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: • 红色 LED
- en: • Green LED
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: • 绿色 LED
- en: • 2 220-ohm resistors
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: • 2 个 220 欧姆电阻
- en: '**LIBRARIES REQUIRED**'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需库**'
- en: • RFID
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: • RFID
- en: • SPI
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: • SPI
- en: • Wire
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: • 电线
- en: • Servo
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: • 伺服电机
- en: • Pitches
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: • 引脚
- en: '**HOW IT WORKS**'
  id: totrans-316
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: An RFID reader uses wireless technology to identify a card, tag, or key fob
    without contact. The reader will respond when the card is placed near it. First,
    we need the reader to read the unique number of our RFID card, and then we’ll
    add a servo that will move depending on whether the RFID reader recognizes the
    card. We could use this ID system for something like a door or box lock, as with
    the secret knock code lock in [Project 9](ch09.xhtml#ch09).
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: RFID 读取器使用无线技术在没有接触的情况下识别卡片、标签或钥匙扣。当卡片靠近读取器时，读取器会响应。首先，我们需要读取器读取我们 RFID 卡的唯一编号，然后添加一个伺服电机，根据
    RFID 读取器是否识别该卡来控制伺服电机的动作。我们可以将这个 ID 系统用于门锁或盒子锁之类的场景，就像在 [项目 9](ch09.xhtml#ch09)
    中的秘密敲门代码锁一样。
- en: You may have seen a sticker like the one in [Figure 23-1](ch23.xhtml#ch23fig1)
    on an item you have purchased. These stickers use RFID to allow the store to track
    items for security purposes. If you pass through the RFID field at the exit without
    paying, the stickers will set off the alarm. RFID readers and cards are also often
    used as identification to allow access into restricted areas, like top-secret
    labs or gated communities.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能在购买的物品上看到过类似[图 23-1](ch23.xhtml#ch23fig1)的贴纸。这些贴纸使用 RFID 技术，让商店能够跟踪物品以防盗。如果你在未支付的情况下通过
    RFID 区域，贴纸会触发警报。RFID 读卡器和卡片也常用于身份验证，允许进入受限制区域，如绝密实验室或封闭小区。
- en: '**FIGURE 23-1:**'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 23-1：**'
- en: An RFID sticker
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 一张 RFID 贴纸
- en: '![image](../images/f23-01.jpg)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-01.jpg)'
- en: 'There are two types of RFID: passive and active. Each RFID system uses a radio
    frequency to exchange a signal between the reader and the tag or card. This signal
    contains the tag or card’s unique code, and if the RFID reader recognizes that
    code, it reacts appropriately—for example, by allowing the item to pass through
    the detectors in a store or by unlocking a door.'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: RFID 有两种类型：被动和主动。每个 RFID 系统使用无线频率在读卡器和标签或卡片之间交换信号。这个信号包含了标签或卡片的唯一代码，如果 RFID
    读卡器识别到这个代码，它会做出相应的反应——例如，允许物品通过商店的探测器或解锁门锁。
- en: 'In a passive system, when the two are passed close to each other, the reader’s
    radio signal powers the circuit in the tag or card just enough for them to exchange
    data. Active systems have a powered reader and a powered tag and can read tags
    accurately from much farther away. Active systems are very expensive and used
    for more sophisticated applications, so we’ll be using a passive RFID system:
    the Mifare RFID-RC522 reader, which comes with a blank card and key fob, like
    those shown in [Figure 23-2](ch23.xhtml#ch23fig2). The reader operates at 13.56
    MHz, which means it can identify the card or fob, each of which is powered by
    the reader, only if it is less than a few inches away. It’s important to keep
    this in mind when positioning your reader.'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 在被动系统中，当两个设备靠得很近时，读卡器的无线信号为标签或卡片中的电路提供足够的电力，使它们能够交换数据。主动系统则有供电的读卡器和供电的标签，能够从更远的距离准确读取标签。主动系统价格昂贵，通常用于更复杂的应用，因此我们将使用被动
    RFID 系统：Mifare RFID-RC522 读卡器，该读卡器附带一张空白卡和一个钥匙扣，如[图 23-2](ch23.xhtml#ch23fig2)所示。该读卡器工作在
    13.56 MHz 的频率下，这意味着它只能在距离卡片或钥匙扣几英寸以内时识别它们，因为这些设备都是由读卡器提供电力的。定位读卡器时，记住这一点非常重要。
- en: '**FIGURE 23-2:**'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 23-2：**'
- en: RFID reader with card and key fob
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 配有卡片和钥匙扣的 RFID 读卡器
- en: '![image](../images/f23-02.jpg)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-02.jpg)'
- en: We’ll create an RFID-controlled servo. When you pass your card in front of the
    RFID reader, it reads the card. If the module recognizes the card and the card
    has access rights, the green LED lights up, a tune plays, and the servomotor moves
    180 degrees. If the module does not recognize the card, the red LED lights up,
    a different tune plays, and the servo does not move.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个 RFID 控制的舵机。当你将卡片放在 RFID 读卡器前时，它会读取卡片。如果模块识别到卡片并且卡片有访问权限，绿色 LED 灯会亮起，播放一段音调，舵机会旋转
    180 度。如果模块未能识别卡片，红色 LED 灯会亮起，播放另一段音调，舵机不会转动。
- en: '[Table 23-1](ch23.xhtml#ch23tab1) describes the various functions of the RFID
    reader.'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 23-1](ch23.xhtml#ch23tab1) 描述了 RFID 读卡器的各种功能。'
- en: '**TABLE 23-1:**'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 23-1：**'
- en: Functions of the RFID reader pins
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: RFID 读卡器引脚功能
- en: '| **RFID** | **DETAIL** | **NOTES** |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| **RFID** | **详细信息** | **备注** |'
- en: '| --- | --- | --- |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 3.3V | 3.3 volts | The module can use only this amount of voltage. |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| 3.3V | 3.3 伏特 | 模块仅能使用此电压。 |'
- en: '| RST | Reset | Will clear the module to initial state. |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| RST | 重置 | 会将模块清除到初始状态。 |'
- en: '| GND | Ground | Connects to the Arduino GND pin. |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| GND | 地 | 连接到 Arduino 的 GND 引脚。 |'
- en: '| IRQ | Interrupt Request | Not used in this project. |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| IRQ | 中断请求 | 在本项目中未使用。 |'
- en: '| MISO | Master In Slave Out | Sometimes referred to as “data in.” |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| MISO | 主设备输入从设备输出 | 有时被称为“数据输入”。 |'
- en: '| MOSI | Master Out Slave In | Sometimes referred to as “data out.” |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| MOSI | 主设备输出从设备输入 | 有时被称为“数据输出”。 |'
- en: '| SCK | Serial Clock | Output from master. This creates a pulse that synchronizes
    data, usually set by the master. |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| SCK | 串行时钟 | 从主设备输出。这会产生一个脉冲，通常由主设备设置，用于同步数据。 |'
- en: '| SDA/SS | Serial Data/Slave Select | Modules will have either SDA or SS, although
    they are the same. This is how the Arduino and module share data and communicate.
    |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| SDA/SS | 串行数据/从设备选择 | 模块将使用 SDA 或 SS，尽管它们是相同的。这是 Arduino 和模块之间共享数据并进行通信的方式。
    |'
- en: '| Pin 16 | VCC | Positive power. |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 16 | VCC | 正电源。 |'
- en: '**THE BUILD**'
  id: totrans-342
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建过程**'
- en: You may need to set up the module by soldering the header pins to it first.
    Snap off a strip of eight header pins. Solder one header pin to each point. Make
    sure to hold the solder iron in place for only a few seconds so you don’t damage
    the circuits. See the “[Quick Soldering Guide](ch00.xhtml#ch00lev1sec07)” on [page
    18](ch00.xhtml#page_18) for a primer on soldering.
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能需要先通过焊接插头引脚来设置模块。取下一个八个插头引脚的条形物。将每个插头引脚焊接到每个焊点上。确保焊接时保持焊枪只停留几秒钟，以免损坏电路。有关焊接的入门指南，请参阅[“快速焊接指南”](ch00.xhtml#ch00lev1sec07)，该指南位于[第18页](ch00.xhtml#page_18)。
- en: Place your RFID module into a breadboard as shown in [Figure 23-3](ch23.xhtml#ch23fig3),
    and then connect the RFID pins to the Arduino pins as indicated in the following
    table. Remember to connect the RFID board to 3.3V power on the Arduino (not +5V),
    or you will damage the module.
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的RFID模块放入面包板中，如[图23-3](ch23.xhtml#ch23fig3)所示，然后将RFID引脚连接到下表所示的Arduino引脚。记得将RFID板连接到Arduino的3.3V电源（不是+5V），否则会损坏模块。
- en: '**FIGURE 23-3:**'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图23-3：**'
- en: Placing the RFID module into the breadboard
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将RFID模块放入面包板
- en: '![image](../images/f23-03.jpg)'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f23-03.jpg)'
- en: '| **RFID** | **ARDUINO** |'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **RFID** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 3.3V | 3.3V |'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 3.3V | 3.3V |'
- en: '| RST | Pin 5 |'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| RST | 引脚5 |'
- en: '| GND | GND |'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | GND |'
- en: '| IRQ | Not used |'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| IRQ | 未使用 |'
- en: '| MISO | Pin 12 |'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| MISO | 引脚12 |'
- en: '| MOSI | Pin 11 |'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| MOSI | 引脚11 |'
- en: '| SCK | Pin 13 |'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| SCK | 引脚13 |'
- en: '| SDA | Pin 10 |'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| SDA | 引脚10 |'
- en: Now we need to check that the RFID module is working. Download the RFID library
    from *[http://www.nostarch.com/arduinohandbook/](http://www.nostarch.com/arduinohandbook/)*
    and save it in your *libraries* directory (see “[Libraries](ch00.xhtml#ch00lev2sec07)”
    on [page 7](ch00.xhtml#page_7) for details on downloading libraries). Upload the
    following test sketch for the RFID reader. Keep the USB cable from your PC connected
    to the Arduino.
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要检查RFID模块是否正常工作。从*[http://www.nostarch.com/arduinohandbook/](http://www.nostarch.com/arduinohandbook/)*下载RFID库，并将其保存到你的*libraries*目录（有关下载库的详细信息，请参见[“库”](ch00.xhtml#ch00lev2sec07)，位于[第7页](ch00.xhtml#page_7)）。上传以下RFID读卡器测试代码。确保将PC的USB线连接到Arduino。
- en: '[PRE10]'
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Open the Arduino Serial Monitor in your IDE.
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的Arduino IDE中的串口监视器。
- en: Pass either your card or key fob in front of the RFID module. The unique number
    should appear on the Serial Monitor, as shown in [Figure 23-4](ch23.xhtml#ch23fig4).
    Write down this number, because you’ll need it later. In this case, my card number
    is 4D 55 AD D3 66.
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的卡片或钥匙扣放在RFID模块前面。唯一的编号应出现在串口监视器中，如[图23-4](ch23.xhtml#ch23fig4)所示。记下这个编号，因为你稍后会用到它。在这个例子中，我的卡号是4D
    55 AD D3 66。
- en: '**FIGURE 23-4:**'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图23-4：**'
- en: The RFID number represented in hexadecimal on the screen
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 屏幕上以十六进制表示的RFID编号
- en: '![image](../images/f23-04.jpg)'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f23-04.jpg)'
- en: Insert the two LEDs into the breadboard, with the shorter, negative wires connected
    to the GND rail. Connect the longer, positive wire on the red LED to Arduino pin
    3 via a 220-ohm resistor. Connect the positive leg of the green LED to pin 2 via
    another 220-ohm resistor.
  id: totrans-365
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将两个LED插入面包板，较短的负极线连接到GND轨道。将红色LED的较长正极线通过220欧姆电阻连接到Arduino引脚3。将绿色LED的正极引脚通过另一个220欧姆电阻连接到引脚2。
- en: '| **LEDS** | **ARDUINO** |'
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **LEDS** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Negative legs | GND |'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 负极引脚 | GND |'
- en: '| Positive leg (red) | Pin 3 via 220-ohm resistor |'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 正极（红色） | 引脚3通过220欧姆电阻 |'
- en: '| Positive leg (green) | Pin 2 via 220-ohm resistor |'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 正极引脚（绿色） | 引脚2通过220欧姆电阻 |'
- en: Connect the servo to the Arduino by attaching the red wire to +5V, the brown
    (or black) wire to GND, and the yellow wire to Arduino pin 9.
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将红线连接到+5V，棕色（或黑色）线连接到GND，黄色线连接到Arduino引脚9，来连接伺服电机到Arduino。
- en: '| **SERVO** | **ARDUINO** |'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **SERVO** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Red wire | +5V |'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红线 | +5V |'
- en: '| Black wire | GND |'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黑线 | GND |'
- en: '| Yellow wire | Pin 9 |'
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黄色电线 | 引脚9 |'
- en: Connect the piezo buzzer to the Arduino by attaching the red wire to Arduino
    pin 8 and the black wire to GND. Your build should now look something like [Figure
    23-5](ch23.xhtml#ch23fig5).
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将红线连接到Arduino的引脚8，将黑线连接到GND，来连接蜂鸣器到Arduino。你的电路现在应该像[图23-5](ch23.xhtml#ch23fig5)那样。
- en: '| **PIEZO** | **ARDUINO** |'
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **PIEZO** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Red wire | Pin 8 |'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红线 | 引脚8 |'
- en: '| Black wire | GND |'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黑线 | GND |'
- en: '**FIGURE 23-5:**'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图23-5：**'
- en: Completed RFID project
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成的RFID项目
- en: '![image](../images/f23-05.jpg)'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f23-05.jpg)'
- en: Open the project code in your Arduino IDE and change the following line to match
    the hex number you found for your card or key fob in step 5 using the RFID reader.
    Leave the `0x` as it appears, but fill in the rest with your number.
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Arduino IDE中的项目代码，并修改以下一行，使其与第5步中使用RFID读取器找到的卡片或钥匙扣的十六进制号码匹配。保持`0x`不变，但将其余部分填入你的号码。
- en: '[PRE11]'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Confirm that your setup matches the circuit diagram in [Figure 23-6](ch23.xhtml#ch23fig6),
    and then upload the code from “[The Sketch](ch23.xhtml#ch23lev1sec03)” on [page
    203](ch23.xhtml#page_203) to your Arduino.
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认你的设置与[图23-6](ch23.xhtml#ch23fig6)中的电路图匹配，然后将[第203页](ch23.xhtml#page_203)中的“[草图](ch23.xhtml#ch23lev1sec03)”代码上传到你的Arduino。
- en: '**FIGURE 23-6:**'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图23-6：**'
- en: Circuit diagram for the wireless ID card entry system
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无线ID卡门禁系统的电路图
- en: '![image](../images/f23-06.jpg)'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](../images/f23-06.jpg)'
- en: '**THE SKETCH**'
  id: totrans-391
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**草图**'
- en: The sketch begins by calling on the SPI, RFID, Servo, Pitches, and Wire libraries
    to control communication between the Arduino, RFID module, and servo. Two melodies
    are defined, one for a positive reading on your card and the other for a negative
    reading. The green LED is set to Arduino pin 2, the red LED to pin 3, the piezo
    buzzer to pin 8, and the servo to pin 9.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 草图首先调用SPI、RFID、Servo、Pitches和Wire库，以控制Arduino、RFID模块和舵机之间的通信。定义了两种旋律，一种是卡片读取正确时的旋律，另一种是读取错误时的旋律。绿色LED连接到Arduino的引脚2，红色LED连接到引脚3，压电蜂鸣器连接到引脚8，舵机连接到引脚9。
- en: 'The following line is where you add your card’s hex value:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 以下这一行是你添加卡片十六进制值的地方：
- en: '[PRE12]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Pass your card in front of the reader. If the hex code on the card matches that
    in your sketch, the green LED lights up, a tune plays, and the servo moves. The
    reader rejects all other cards unless you add their number to the code at ➊. If
    a card is rejected, the red LED lights up and a different tune plays, but the
    servo does not move.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 将卡片放在读卡器前。如果卡片上的十六进制代码与草图中的代码匹配，绿色LED灯会亮起，播放一段旋律，舵机会移动。读卡器会拒绝所有其他卡片，除非你将它们的号码添加到➊处的代码中。如果卡片被拒绝，红色LED灯亮起并播放另一段旋律，但舵机不会移动。
- en: '[PRE13]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
