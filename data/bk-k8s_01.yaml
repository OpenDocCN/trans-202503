- en: '**PART I**'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**第一部分**'
- en: '**MAKING AND USING CONTAINERS**'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**创建和使用容器**'
- en: Containers are essential to modern application architecture. They simplify packaging,
    deploying, and scaling application components. They enable building reliable and
    resilient applications that handle failure gracefully. However, containers can
    also be confusing. They look like completely different systems, with separate
    hostnames, networking, and storage, but they do not have many of the features
    of a separate system, such as a separate console or system services. To understand
    how containers look like separate systems without really being separate, let’s
    explore containers, container engines, and Linux kernel features.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 容器是现代应用架构中至关重要的组成部分。它们简化了应用组件的打包、部署和扩展。容器使得构建可靠和具有韧性的应用成为可能，可以优雅地处理故障。然而，容器也可能令人困惑。它们看起来像完全不同的系统，具有独立的主机名、网络和存储，但它们并没有很多独立系统的特性，比如独立的控制台或系统服务。为了理解容器如何看起来像独立系统但实际上并非独立，我们来探讨一下容器、容器引擎以及
    Linux 内核特性。
