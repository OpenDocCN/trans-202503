- en: '7'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '7'
- en: Starfield Light Effect Box by Adam Wolf
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 星域灯效盒，由 Adam Wolf 设计
- en: In this project, you’ll make a decorative display box with a starfield light
    effect.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将制作一个带有星域灯效的装饰性显示盒。
- en: '![image](../images/f0133-01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0133-01.jpg)'
- en: 'The starfield effect is one of the earliest computer effects demos: stars are
    rendered on a screen and blurred to make it look like you’re flying through them.
    Stars far away move slowly, and those close to you zoom by. Many people know of
    this effect from the Windows 3.1 screensaver, but it’s been around since at least
    the late ’70s. In this project, we’ll create a starfield demo using a 32 × 32
    LED matrix, with a SmartMatrix SD Shield to act as intermediate hardware between
    the microcontroller and the LEDs. This shield microcontroller handles most of
    the complexity involved in driving all those LEDs.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 星域效果是最早的计算机效果演示之一：星星在屏幕上呈现并被模糊，使得看起来就像在星际中飞行。远离你的星星移动缓慢，靠近你的星星则快速飞过。许多人认识这个效果是通过
    Windows 3.1 的屏幕保护程序，但它至少自 70 年代末就已存在。在这个项目中，我们将使用 32 × 32 LED 矩阵和 SmartMatrix
    SD Shield 创建一个星域演示，SmartMatrix SD Shield 作为微控制器与 LED 之间的中介硬件。这款 Shield 微控制器处理了驱动所有
    LED 所需的复杂工作。
- en: 'I’ve mounted the matrix in a shadow box with a black diffuser. I call it a
    Bowman Box, after Dave Bowman from *2001: A Space Odyssey*.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我将矩阵安装在带有黑色扩散器的影像盒中。我将其称为 Bowman 盒子，灵感来自于 *2001太空漫游* 中的 Dave Bowman。
- en: '**GET THE PARTS**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**获取零件**'
- en: I’ve done my best to make the code and explanation for this project easy to
    adapt to any LED matrix, but you’ll find this project easiest if you use the SmartMatrix
    SD Shield and a SmartMatrix SD Shield–compatible LED matrix.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经尽力将此项目的代码和说明做得易于适配任何 LED 矩阵，但如果你使用 SmartMatrix SD Shield 和与其兼容的 SmartMatrix
    SD Shield LED 矩阵，项目会更加简单。
- en: '**Components**'
  id: totrans-8
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**组件**'
- en: '**NOTE**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*If you change the project to have more of the LEDs on at once, you’ll have
    to either find a switch rated for more current or plug the power supply into the
    board directly.*'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你修改项目，使得更多的 LED 同时点亮，你需要找到一个额定电流更高的开关，或者直接将电源连接到板子上。*'
- en: 32 × 32 RGB LED matrix (Adafruit P/N 1484 or SparkFun P/N 12584; must be compatible
    with the SmartMatrix SD Shield that plugs directly into a Hub75 connector)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 32 × 32 RGB LED 矩阵（Adafruit P/N 1484 或 SparkFun P/N 12584；必须与直接插入 Hub75 连接器的
    SmartMatrix SD Shield 兼容）
- en: 5 V 4A+ wall power adapter (Adafruit P/N 1466; must have the standard 2.1 mm
    center-positive connector)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 5 V 4A+ 壁式电源适配器（Adafruit P/N 1466；必须具备标准的 2.1 毫米中心正极连接器）
- en: SmartMatrix SD Shield (available from the manufacturer or Adafruit P/N 1902;
    v3 is the latest version as of this writing)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SmartMatrix SD Shield（可从制造商或 Adafruit P/N 1902 购买；v3 是截至本文写作时的最新版本）
- en: Teensy 3.1 or 3.2 (Adafruit P/N 2756; this is a small, inexpensive, and really
    powerful microcontroller board)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Teensy 3.1 或 3.2（Adafruit P/N 2756；这是一款小巧、廉价且功能强大的微控制器开发板）
- en: MicroUSB cable
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MicroUSB 电缆
- en: Inline power switch with 2.1 mm connectors (Adafruit P/N 1125 or SparkFun P/N
    11705)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有 2.1 毫米连接器的内联电源开关（Adafruit P/N 1125 或 SparkFun P/N 11705）
- en: Shadow box (8 × 8 inches)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 影像盒（8 × 8 英寸）
- en: Diffuser (a piece of translucent material that can help diffuse the light, filling
    in the gap between LEDs; I used a piece of thin black felt, but you could use
    tissue paper, plastic, or even something smeared on the glass)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩散器（一种能够扩散光线的半透明材料，填补 LED 之间的空隙；我使用的是一块薄黑色毡布，但你也可以使用纸巾、塑料，甚至是涂抹在玻璃上的东西）
- en: (Optional) Cardboard (to get everything to fit snugly in the shadow box)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （可选）纸板（用于将所有组件紧凑地安装在影像盒中）
- en: '**Tools**'
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**工具**'
- en: Soldering iron and solder
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 烙铁和焊料
- en: Diagonal cutters
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 斜口钳
- en: Wire strippers
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 剥线钳
- en: Small screwdriver
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 小螺丝刀
- en: Scissors
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 剪刀
- en: Handsaw, drill, or file
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锯子、钻机或锉刀
- en: Black marker
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 黑色马克笔
- en: '**BUILD IT**'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建它**'
- en: First, you’ll assemble the SmartMatrix SD Shield according to the manufacturer’s
    instructions and connect it to the LED matrix. You’ll then need to sandwich the
    diffuser between the LED display and the shadow box glass. After checking that
    everything fits nicely into the shadow box, you’ll take the box’s back off again,
    cut a small notch for the power cord, upload the program, and reassemble everything.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，按照制造商的说明组装 SmartMatrix SD Shield，并将其连接到 LED 矩阵。接着，你需要将扩散器夹在 LED 显示屏和影像盒的玻璃之间。检查一切是否都能恰好装入影像盒后，再取下盒子背面，剪一个小缺口以便电源线通过，上传程序并重新组装一切。
- en: '**NOTE**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*If you need instructions on soldering, see the appendix.*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你需要焊接说明，请参阅附录。*'
- en: '**Assemble the SmartMatrix SD Shield.** Go to the manufacturer’s site at *[http://docs.pixelmatix.com/](http://docs.pixelmatix.com/)*
    and navigate to the SmartMatrix Shield section. Find the SmartMatrix SD v3 section,
    and click **Kit Assembly** in the menu on the left. This should take you to your
    shield’s assembly instructions. Read and carefully follow the manufacturer’s instructions—this
    requires a lot of soldering—and then double-check your work.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**组装 SmartMatrix SD Shield。** 访问制造商网站 *[http://docs.pixelmatix.com/](http://docs.pixelmatix.com/)*
    并导航到 SmartMatrix Shield 部分。找到 SmartMatrix SD v3 部分，然后在左侧菜单中点击 **Kit Assembly**。这应该会带你到
    Shield 的组装说明。阅读并仔细遵循制造商的说明——这需要大量的焊接——然后仔细检查你的工作。'
- en: With your shield finished, plug it into the LED panel, in the input connector,
    as shown in [Figure 7-1](ch07.xhtml#ch07fig1).
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你的 Shield 完成后，将其插入 LED 面板的输入连接器中，如 [图 7-1](ch07.xhtml#ch07fig1) 所示。
- en: '![image](../images/f0136-01.jpg)'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0136-01.jpg)'
- en: '**FIGURE 7-1:** An assembled SmartMatrix SD Shield plugged into an LED display'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 7-1：** 组装好的 SmartMatrix SD Shield 插入 LED 显示屏'
- en: The Smart Matrix SD Shield uses a Teensy 3.1 or 3.2 microcontroller board. We’ll
    program the Teensy in Arduino, which works on Windows, macOS, and Linux.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Smart Matrix SD Shield 使用 Teensy 3.1 或 3.2 微控制器板。我们将在 Arduino 中编程 Teensy，Arduino
    支持 Windows、macOS 和 Linux 系统。
- en: '**Set up the Teensy.** Download the latest version of the Arduino IDE from
    *[https://www.arduino.cc/](https://www.arduino.cc/)*, install Teensyduino from
    *[https://www.pjrc.com/teensy/teensyduino.html](https://www.pjrc.com/teensy/teensyduino.html)*,
    and then install the SmartMatrix3 library from the IDE’s Library Manager. Connect
    the Teensy to your computer with a microUSB cable and connect the display to power.
    Go to **Tools** ▸ **Board** and choose **Teensy 3.2/3.1**.'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置 Teensy。** 从 *[https://www.arduino.cc/](https://www.arduino.cc/)* 下载最新版本的
    Arduino IDE，从 *[https://www.pjrc.com/teensy/teensyduino.html](https://www.pjrc.com/teensy/teensyduino.html)*
    安装 Teensyduino，然后通过 IDE 的库管理器安装 SmartMatrix3 库。使用 microUSB 电缆将 Teensy 连接到计算机，并将显示器连接到电源。进入
    **工具** ▸ **板** 并选择 **Teensy 3.2/3.1**。'
- en: '**Test the Teensy.** Load the *FeatureDemo* example by going to **File** ▸
    **Examples** ▸ **SmartMatrix3** ▸ **FeatureDemo**. Upload the sketch to the Teensy,
    and you should see the Teensyduino Uploader appear and send the sketch to the
    Teensy. If you’ve never used a Teensy before, you may notice that it looks different
    from the standard Arduino IDE, but the Teensy part all happens automatically so
    you don’t need to do anything extra.'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**测试 Teensy。** 通过进入 **文件** ▸ **示例** ▸ **SmartMatrix3** ▸ **FeatureDemo** 来加载
    *FeatureDemo* 示例。将代码上传到 Teensy，Teensyduino Uploader 应该会出现并将代码发送到 Teensy。如果你以前从未使用过
    Teensy，可能会发现它看起来不同于标准的 Arduino IDE，但 Teensy 部分会自动完成，因此你无需额外操作。'
- en: If you have everything working, you should see a demo play out on the Teensy
    that goes through all the different features of the SmartMatrix3 library. You’ll
    see different colors, moving shapes, and scrolling text. This indicates that the
    computer, the LED panel, the SmartMatrix SD Shield, and the Teensy are all working.
    Now let’s finish the enclosure.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果一切正常，你应该会看到一个演示在 Teensy 上播放，展示 SmartMatrix3 库的各种功能。你会看到不同的颜色、移动的形状和滚动的文本。这表明计算机、LED
    面板、SmartMatrix SD Shield 和 Teensy 都在正常工作。现在让我们完成外壳部分。
- en: '**Cut the diffuser.** Take the back off the shadow box and measure the inner
    dimensions. Use scissors to cut your diffuser material, as shown in [Figure 7-2](ch07.xhtml#ch07fig2).
    You can match the inner dimensions of your shadow box exactly, or you can cut
    them slightly bigger so you can glue the edges to the sides of the box.'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**切割扩散器。** 拆下影像盒的背面并测量内部尺寸。用剪刀裁剪扩散器材料，如 [图 7-2](ch07.xhtml#ch07fig2) 所示。你可以精确匹配影像盒的内部尺寸，或者稍微切大一些，这样你可以将边缘粘贴到盒子的侧面。'
- en: '![image](../images/f0137-01.jpg)'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0137-01.jpg)'
- en: '**FIGURE 7-2:** Cutting the diffuser'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 7-2：** 切割扩散器'
- en: If you’re a little off, it’s probably okay! The rest of the inside of the box
    will be black, so any gaps won’t be noticeable.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果尺寸稍微偏差一点，可能也没关系！盒子内部的其余部分是黑色的，所以任何缝隙都不会太显眼。
- en: '**Test-fit the display into the shadow box.** Clean any smudges off the glass
    of the shadow box and then, with the glass side of the box facing down on a table,
    place the diffuser in the box and against the glass. Then place the display, LEDs
    down, on the diffuser. Screw the little magnetic screws into the corners of the
    LED panel, if you have them. Check to make sure that the back of the shadow box
    still fits on, as shown in [Figure 7-3](ch07.xhtml#ch07fig3).'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将显示器试装到影箱内。** 清理影箱玻璃上的污渍，然后将影箱的玻璃面朝下放在桌子上，接着将扩散器放入影箱并贴合玻璃。接着将显示器（LED面朝下）放在扩散器上。如果你有小磁螺丝，将它们拧到LED面板的四个角落。检查一下影箱的背面是否仍然能装上，如[图
    7-3](ch07.xhtml#ch07fig3)所示。'
- en: If the fit is too tight, try removing any black velvety material on the back
    of the shadow box or taking the magnetic screws off the LED panel frame. If the
    fit is too loose, you can use some cardboard as a shim to keep everything in place.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果装配过紧，试着去除影箱背面任何黑色的天鹅绒材料，或者取下LED面板框架上的磁螺丝。如果装配过松，你可以使用一些纸板作为垫片，确保一切都固定好。
- en: '![image](../images/f0138-01.jpg)'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0138-01.jpg)'
- en: '**FIGURE 7-3:** Testing how everything fits in the shadow box'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 7-3：** 测试一切是否适配在影箱内'
- en: '**Cut a notch in the back of the shadow box.** Remove the back of the shadow
    box again. Plug the 2.1 mm inline switch power plug into the DC power connector
    of the SmartMatrix SD Shield. The cable should just reach outside of the box.
    Cut a small notch, about 3/4 inch deep by 1/4 inch wide, in the back of the shadow
    box to feed the power cord through, as shown in [Figure 7-4](ch07.xhtml#ch07fig4).
    I suggest you cut the notch in the middle of an edge or at a corner. You can make
    this notch with many different tools, like a handsaw, a drill, a file, or even
    needle-nose pliers.'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在影箱的背面切一个缺口。** 再次取下影箱的背面。将2.1毫米的直插开关电源插头插入SmartMatrix SD Shield的DC电源连接器中。电缆应该恰好能伸出箱外。按照[图
    7-4](ch07.xhtml#ch07fig4)的示意，在影箱背面切一个小缺口，深约3/4英寸，宽约1/4英寸，用来穿过电源线。我建议你在一个边缘的中间或角落切这个缺口。你可以使用许多工具来完成这个切割，比如手锯、电钻、锉刀，甚至是尖嘴钳。'
- en: '![image](../images/f0138-02.jpg)'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0138-02.jpg)'
- en: '**FIGURE 7-4:** The back of the shadow box with the notch cut out for the power
    cord'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 7-4：** 带有切割缺口以便电源线通过的影箱背面'
- en: If your shadow box has a velvety backing, you’ll need to cut a slit in that,
    too, and be sure it aligns with the notch you cut in the back. Finally, touch
    up any scuff marks with a black marker.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你的影箱背面有天鹅绒衬里，你也需要在背面切一个缝隙，并确保它与背面切割的缺口对齐。最后，用黑色马克笔修复任何擦伤的痕迹。
- en: '**Assemble it.** Now reattach the back of your shadow box. Everything should
    be nice and snug. If not, use some cardboard as shims and spacers. Any minor cosmetic
    issues will be easy to ignore once you get the stars zooming past. On that note,
    take the back off again so we can access the Teensy for programming!'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**组装它。** 现在重新安装影箱的背面。一切应该都很合适。如果不合适，可以用一些纸板作为垫片和隔板。安装完后，任何小的外观问题都可以忽略，尤其是当星星飞速掠过时。说到这，还是把背面再取下来，这样我们就可以访问Teensy进行编程了！'
- en: If you’d like to go directly to the next step, skip ahead to “[Code It](ch07.xhtml#lev97)”
    on [page 140](ch07.xhtml#page_140). If you’re curious about how the starfield
    effect works, read on.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想直接跳到下一步骤，可以跳到[第140页](ch07.xhtml#page_140)的“[编码它](ch07.xhtml#lev97)”部分。如果你对星空效果的原理感到好奇，继续往下读。
- en: '**GENERATING THE STARFIELD EFFECT**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**生成星空效果**'
- en: We need to create the effect of zooming through a bunch of stars. The stars
    that are close should be brighter and move faster than the stars that are far
    away. All of the stars should move radially out from the center.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建一个穿越一群星星的效果。近距离的星星应该更亮并且移动得比远距离的星星更快。所有的星星都应该从中心向外径向移动。
- en: To make the starfield effect in software, we’ll create a list of stars and randomly
    distribute them as points in 3D space with a coordinate system. We’ll represent
    each point as three coordinate values, like (*x*, *y*, *z*), where *x* represents
    the horizontal axis, *y* represents the vertical axis, and *z* represents depth.
    You can imagine *z* as the distance from you—the higher the *z* value, the farther
    away the point will appear. Our *eye*, the default point in the 3D space, is at
    the origin, or (0, 0, 0).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在软件中实现星空效果，我们将创建一个星星的列表，并将它们随机分布在一个三维空间的坐标系统中。我们将用三个坐标值来表示每个点，比如 (*x*, *y*,
    *z*)，其中 *x* 代表水平轴，*y* 代表垂直轴，*z* 代表深度。你可以把 *z* 看作是你与点的距离——*z* 值越高，点看起来就越远。我们的*眼睛*，即三维空间中的默认点，位于原点
    (0, 0, 0)。
- en: Once we’ve completed our list of randomly placed stars, we have to overcome
    the problem of drawing a point in 3D space on a 2D display. Imagine drawing a
    region of space as a four-sided pyramid with the top and bottom cut off. This
    is called a *view frustum* and is illustrated here.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们完成了随机放置的星星列表，我们就得克服在2D显示器上绘制3D空间中的点的问题。想象一下把空间区域画成一个四面体，上面和下面被切掉了。这就是所谓的*视锥体*，如图所示。
- en: '![image](../images/f0139-01.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0139-01.jpg)'
- en: The yellow square represents our display, with one LED per unit in *x* and *y*.
    This means that a point at (0, 0, 0) is in the middle of the display, a point
    at (–8, –8, 0) is in the middle of the lower-left corner, and a point at (8, 8,
    0) is in the middle of the top-right corner of the LED panel.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 黄色的方块代表我们的显示屏，每个单位在*x*和*y*上都有一个LED。这意味着坐标为(0, 0, 0)的点位于显示器的中间，坐标为(–8, –8, 0)的点位于左下角的中间，坐标为(8,
    8, 0)的点位于LED面板的右上角中间。
- en: We also need to account for the *z* distance. A point at (8, 8, 100) shouldn’t
    be drawn in the middle of the top-right corner of our LED panel. It should be
    closer to the middle of the display than the point (8, 8, 0), because it is farther
    away from the camera. In other words, the x- and y-coordinates need to move closer
    to the eye as the z-coordinate gets bigger.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要考虑*z*距离。坐标为(8, 8, 100)的点不应该绘制在LED面板右上角的中间。它应该比坐标(8, 8, 0)更靠近显示器的中间，因为它离相机更远。换句话说，随着z坐标变大，x和y坐标需要向眼睛移动。
- en: To translate from 3D coordinates to our 2D coordinates, we divide each of the
    x- and y-coordinates by *z*. Try thinking about the 2D coordinates as percentages
    of the total frame size at that particular depth (or *z*). Dividing the x- and
    y-coordinates by *z* gets us a 45-degree angle on our frustum edges, so that for
    every step in *z*, we can see an additional step in *x* and *y*. We can experiment
    with different factors, like dividing by double *z*, or dividing by half of *z*,
    and that changes the slope of the edges of our view frustum.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将3D坐标转换为2D坐标，我们将每个x和y坐标除以*z*。可以把2D坐标看作是在特定深度（或*z*）下总框架大小的百分比。将x和y坐标除以*z*，我们得到的是视锥体边缘的45度角，这样对于每一步的*z*，我们就可以看到在*x*和*y*上的额外一步。我们可以尝试不同的因子，比如将其除以2倍的*z*，或者将其除以*z*的一半，这会改变视锥体边缘的坡度。
- en: 'In my Bowman Box, stars at any distance are drawn by a single LED, but the
    brightness of the LED is relative to the distance: the stars that are the farthest
    away from us are at the minimum brightness, and the stars that are at the front
    of the frustum in the very center are at the maximum brightness. To make it simpler
    in the program, we scale based only on the z-value.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的Bowman Box中，任何距离的星星都是由一个LED绘制的，但LED的亮度与距离成正比：距离我们最远的星星亮度最小，位于圆锥体最前面中心的星星亮度最大。为了简化程序，我们仅根据z值进行缩放。
- en: Phew! The programming is much shorter than the explanation! Now that we know
    how to draw the stars on our display, we need to move! We want to fly through
    the stars, but instead of moving the eye forward in *z*, we’re going to move all
    the stars toward the eye in *z*. It makes the programming easier. Once a star
    advances past our eye, we certainly can’t see it anymore, so we’ll recreate it
    back at the maximum distance away from us.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀！编程比解释短得多！现在我们知道如何在显示器上绘制星星，我们需要移动！我们想要穿越星星，但不是让眼睛在*z*轴上向前移动，而是让所有星星在*z*轴上朝着眼睛移动。这样做让编程更简单。一旦星星超过了我们的视线，我们当然看不见它了，所以我们会在距离我们最远的地方重新创建它。
- en: '**CODE IT**'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**编程它**'
- en: If you want to skip past all the explanation of the code and how it works, you
    can simply download the code at *[https://nostarch.com/LEDHandbook/](https://nostarch.com/LEDHandbook/)*
    and upload it to your project. The full code is shown in [Listing 7-1](ch07.xhtml#ch07list1).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想跳过所有关于代码和它如何工作的解释，你可以直接下载代码到*[https://nostarch.com/LEDHandbook/](https://nostarch.com/LEDHandbook/)*并将其上传到你的项目中。完整的代码可以在[清单
    7-1](ch07.xhtml#ch07list1)中查看。
- en: '**LISTING 7-1:** The starfield effect code'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单 7-1：** 星域效果代码'
- en: '[PRE0]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As you’re reading this sketch, there are a few things to notice. Arduino sketches
    run the `setup()` function first, and then repeatedly run the `loop()` function.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读这个草图时，有几件事需要注意。Arduino草图首先运行`setup()`函数，然后反复运行`loop()`函数。
- en: The blocks of code at ➊ and ➏ are taken directly from the SmartMatrix examples
    that come with the IDE, and are used to set up the SmartMatrix library.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ➊和➏处的代码块直接来自与IDE一起提供的SmartMatrix示例，用于设置SmartMatrix库。
- en: We’ve used a *struct*, which is a grouping of variables to store some of the
    information in our sketch. Structs can make it easier to see the intent of your
    code by grouping related information together. We make a bunch of star structs
    at the beginning of the program. When a star has advanced behind our eye or outside
    our viewing range, we randomize that star’s coordinates and then set it far away
    from us so we can encounter it again ➋. This lets us reuse the structs rather
    than needing an infinite quantity.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了一个*结构体*（struct），它是一个变量的集合，用来存储我们草图中的一些信息。结构体可以通过将相关信息分组，使代码的意图更加清晰。我们在程序开始时创建了一堆星星结构体。当一颗星星移动到我们视野之外或被我们超越时，我们随机化那颗星星的坐标，并将其设置得远离我们，以便我们能够再次遇到它➋。这样我们就能重用这些结构体，而不需要无限量的星星。
- en: We want the origin of the stars to be in the middle of the display, but the
    SmartMatrix library sets the origin at the bottom-left corner, so next we adjust
    for that when we display the stars ➌.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望星星的原点位于显示屏的中央，但SmartMatrix库将原点设置在左下角，因此在显示星星时，我们需要调整这一点➌。
- en: We also need a random-number generator to place the stars in random positions.
    The Arduino doesn’t have a real random-number generator, so we initialize the
    system by reading a disconnected pin at ➍ to get different pseudorandom numbers
    each time. Reading a disconnected pin is not a very good “random seed,” so if
    you run it multiple times you may see it start up the same way. There are ways
    to make this more random, but we’ve kept it simple for clarity.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要一个随机数生成器来将星星放置在随机的位置。Arduino本身没有真正的随机数生成器，因此我们通过在➍读取一个未连接的引脚来初始化系统，以便每次获得不同的伪随机数。读取未连接的引脚并不是一个很好的“随机种子”，因此如果你多次运行，可能会看到它以相同的方式启动。有一些方法可以使其更加随机，但我们为了清晰性保持了简单。
- en: Because normally new stars show up only at the back, when we first initialize
    the position of the stars, we scatter them throughout the z-axis ➎.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 因为通常新星只会出现在背景中，所以我们在初始化星星的位置时，将它们散布在整个z轴上➎。
- en: Make sure you’ve connected the power supply to the power switch, and then turn
    the switch on. Upload the code to your Teensy, make sure everything uploaded properly,
    and reattach the back on your shadow box.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你已经将电源连接到电源开关上，然后打开开关。将代码上传到你的Teensy，确保一切上传正确，然后重新将背面装回你的影像盒。
- en: '**SUMMARY**'
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: Congratulations! You should now have a beautiful LED matrix mounted in a nice
    box. You can improve and expand this project in many ways. But remember that in
    our project, the majority of the LEDs are off at any time. If you change the project
    and turn a lot more LEDs on at the same time, you’ll need to be careful with power.
    The inline switch is not rated to carry enough current to light the whole screen
    on full brightness, but you can remove it and plug the power supply into the board
    directly.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你现在应该有了一个漂亮的LED矩阵，装在一个精致的盒子里。你可以以多种方式改进和扩展这个项目。但请记住，在我们的项目中，大多数LED在任何时刻都是关闭的。如果你改变项目，同时开启更多的LED，你需要注意电源问题。内联开关的额定电流不足以支撑整个屏幕的全亮度，但你可以移除它，并将电源直接插入板子。
- en: As a further upgrade, I’ve considered adding an accelerometer so I can steer
    by moving the frame, changing the angle and the speed as I fly through the stars.
    I might even add colored stars—not bright rainbow ones, but slightly red and slightly
    blue stars, to represent planets and nebulas. The sky’s the limit! Try a few things
    out and see which effect suits you best.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 作为进一步的升级，我考虑添加一个加速度计，这样我就可以通过移动框架来操控，改变飞行时的角度和速度。我甚至可能添加彩色星星——不是明亮的彩虹色星星，而是稍微带点红色和蓝色的星星，用来代表行星和星云。天空才是极限！尝试一些不同的方式，看看哪种效果最适合你。
