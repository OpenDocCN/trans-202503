- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4  '
- en: Healthy Stalking
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 健康的跟踪
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)  '
- en: 'Our bouncing servers are silently humming in a datacenter somewhere in Europe.
    Our attacking infrastructure is eagerly awaiting our first order. Before we unleash
    the plethora of attack tools that routinely flood the InfoSec Twitter timeline,
    let’s take a couple of minutes to understand how our target, political consulting
    firm Gretsch Politico, actually works. What is their business model? Which products
    and services do they provide? This kind of information will give us a direction
    to go in and help us narrow down our attack targets. Drawing tangible goals may
    very well be our first challenge. Their main website (www.gretschpolitico.com)
    does not exactly help: it is a boiling, bubbling soup of fuzzy marketing keywords
    that only make sense to the initiated. We’ll start, then, with benign public-facing
    information.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '我们的弹跳服务器正安静地在欧洲某个数据中心低声嗡嗡作响。我们的攻击基础设施正急切等待着我们的第一个命令。在我们释放那些通常充斥着信息安全Twitter时间线的攻击工具之前，花几分钟时间了解我们的目标——政治咨询公司Gretsch
    Politico——到底是如何运作的。它们的商业模式是什么？提供哪些产品和服务？这些信息将为我们指明方向，帮助我们缩小攻击目标的范围。设定切实可行的目标很可能是我们面临的第一个挑战。他们的主网站（www.gretschpolitico.com）并没有提供太多帮助：它是一个沸腾的、模糊的营销关键词的汤，只有内部人士才能理解。于是，我们将从无害的、面向公众的信息开始。  '
- en: Understanding Gretsch Politico
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '理解Gretsch Politico  '
- en: In an effort to better understand this company, let’s dig up every PowerPoint
    deck and PDF presentation that bears a reference to “Gretsch Politico” (GP). SlideShare
    ([https://www.slideshare.net/](https://www.slideshare.net/)) proves to be an invaluable
    ally in this quest. Many people simply forget to delete their presentations after
    a talk, or default them to “public access,” giving us a plethora of information
    to begin our quest for understanding (see [Figure 4-1](#figure4-1)).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '为了更好地理解这家公司，让我们挖掘所有提到“Gretsch Politico”（GP）的PowerPoint文件和PDF演示文稿。SlideShare
    ([https://www.slideshare.net/](https://www.slideshare.net/))证明在这项任务中是一个无价的盟友。许多人在演讲后忘记删除他们的演示文稿，或者将其设置为“公开访问”，为我们提供了大量的信息来开始我们的理解之旅（见[图4-1](#figure4-1)）。  '
- en: '![f04001](image_fi/501263c04/f04001.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![f04001](image_fi/501263c04/f04001.png)  '
- en: 'Figure 4-1: Some Gretsch Politico slides'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '图4-1：一些Gretsch Politico的幻灯片  '
- en: 'SlideShare is but one example of services hosting documents, so we next scour
    the web looking for resources uploaded to the most popular sharing platforms:
    Scribd, Google Drive, DocumentCloud, you name it. The following search terms will
    narrow down your results in most search engines:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 'SlideShare只是托管文档的一个例子，接下来我们将在网上搜索资源，寻找上传到最流行分享平台的文档：Scribd、Google Drive、DocumentCloud等等。以下搜索词能帮助你在大多数搜索引擎中缩小搜索结果范围：  '
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Google may be your default search engine, but you may find you achieve better
    results in others, like Yandex, Baidu, Bing, and so on, since Google tends to
    observe copyright infringement laws and moderates its search output.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 'Google可能是你的默认搜索引擎，但你可能会发现，使用其他搜索引擎，如Yandex、百度、Bing等，能获得更好的结果，因为Google倾向于遵守版权侵权法并对其搜索输出进行审核。  '
- en: Another great source of information about a company’s business is metasearch
    engines. Websites like Yippy and Biznar aggregate information from a variety of
    general and specialized search engines, giving a nice overview of the company’s
    recent activity.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '另一个关于公司业务的重要信息来源是元搜索引擎。像Yippy和Biznar这样的网站聚合了来自各种通用和专业搜索引擎的信息，提供了公司最近活动的概览。  '
- en: From my initial search, many interesting documents pop out, from campaign fund
    reports mentioning GP to marketing pitches for campaign directors. Manually skimming
    through this data makes it clear that GP’s core service is building voter profiles
    based on multiple data inputs. These voter profiles are then studied and fed into
    an algorithm that decides which pitch is most suitable to lock in a voter.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '从我的初步搜索来看，很多有趣的文档浮现出来，从提到GP的竞选基金报告到针对竞选主管的营销推介。手动浏览这些数据清楚地表明，GP的核心服务是基于多个数据输入建立选民档案。这些选民档案然后会被研究，并输入到一个算法中，决定哪种推介最适合锁定选民。  '
- en: Finding Hidden Relationships
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '寻找隐藏的关系  '
- en: 'GP’s algorithms mash the data, that much is clear, but where does the data
    come from? To understand GP, we need to understand its closest partners. Whatever
    company or medium is delivering all this data must be working closely with GP.
    Multiple documents hint at the existence of at least two main channels:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 'GP的算法将数据混合，这一点很清楚，但数据来自哪里呢？要理解GP，我们需要了解它最紧密的合作伙伴。无论是哪个公司或平台提供了这些数据，必定与GP有着紧密的合作。多个文档暗示至少存在两个主要渠道：  '
- en: Data brokers or data management platforms Companies that sell data gathered
    from telecom companies, credit card issuers, online stores, local businesses,
    and many more sources.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据经纪人或数据管理平台：这些公司销售从电信公司、信用卡发卡机构、在线商店、本地企业等多个来源收集的数据。
- en: Research studies and surveys It seems that GP reaches out to the population
    somehow to send out questionnaires and collect opinions.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 研究调查和问卷：似乎GP以某种方式联系到公众，发送问卷并收集意见。
- en: Although GP’s main website barely mentions advertising as a way to reach the
    public, PDF documents abound with references to a particular advertising platform
    with tremendous reach, both on social and traditional media websites. There’s
    no straight link to this advertising platform, but thanks to these selfsame social
    media websites they are so fond of, we dig out the retweet shown in [Figure 4-2](#figure4-2)
    from Jenny, VP of marketing at GP according to her Twitter profile.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管GP的主网站几乎没有提到广告作为接触公众的一种方式，但PDF文档中充斥着对某一特定广告平台的引用，该平台在社交媒体和传统媒体网站上都具有巨大的覆盖面。虽然没有直接的链接指向这个广告平台，但得益于这些社交媒体网站，它们深受GP喜爱，我们通过GP市场副总裁Jenny的Twitter资料挖掘出[图4-2](#figure4-2)中显示的转发。
- en: '![f04002](image_fi/501263c04/f04002.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![f04002](image_fi/501263c04/f04002.png)'
- en: 'Figure 4-2: A revealing GP retweet'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-2：一条揭示性的GP转发
- en: 'The link in the tweet innocuously points to an online advertising agency: MXR
    Ads. They deliver ads on all kinds of websites, charge per thousand impressions
    (CPM), and go quietly about their business of increasing the internet’s load time.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这条推文中的链接无意中指向了一个在线广告代理机构：MXR Ads。他们在各种网站上投放广告，按千次展示（CPM）收费，悄悄地忙于增加互联网加载时间的工作。
- en: Short of this excited tweet by Jenny of GP, there is not a single visible link
    between the two companies; there’s barely even a backlink on Google. So what’s
    the connection? We quickly solve this mystery by consulting the legal records
    of the two companies on [https://opencorporates.com/](https://opencorporates.com/),
    a database of companies worldwide and an excellent resource for digging out old
    company filings, shareholder lists, related entities, and so on. It turns out
    that MXR Ads and Gretsch Politico share most of the same directors and officers—hell,
    they even shared the same address a couple of years back.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 除了GP的Jenny发出的这条激动的推文外，几乎没有看到两家公司之间的任何可见链接；甚至在Google上也几乎找不到反向链接。那么，是什么联系呢？我们通过查阅两家公司的法律记录，快速解开了这个谜团。我们访问了[https://opencorporates.com/](https://opencorporates.com/)，这是一个全球公司数据库，是挖掘公司旧档案、股东名单、关联实体等的极好资源。结果发现，MXR
    Ads和Gretsch Politico共享大部分相同的董事和高管——事实上，他们几年前甚至共享了相同的地址。
- en: This kind of intertwined connection can be very profitable for both companies.
    MXR Ads gathers raw data about people’s engagement with a type of product or brand.
    They know, for example, that the person bearing the cookie 83bdfd57a5e likes guns
    and hunting. They transfer this raw data to Gretsch Politico, who analyze it and
    group it into a data segment of similar profiles labeled “people who like guns.”
    GP can then design creatives and videos to convince the population labeled “people
    who like guns” that their right to gun ownership is threatened unless they vote
    for the right candidate. GP’s client, who is running for office in some capacity,
    is pleased and starts dreaming about champagne bubble baths at the Capitol, while
    GP pushes these ads on every media platform with a functioning website. Of course,
    MXR Ads receives its share of creatives to distribute on its network as well,
    thus completing the self-feeding ouroboros of profit and desperation. Chilling.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这种错综复杂的联系对于两家公司来说可以非常有利。MXR Ads收集有关人们与某类产品或品牌互动的原始数据。例如，他们知道，拥有cookie 83bdfd57a的人喜欢枪支和狩猎。他们将这些原始数据传输给Gretsch
    Politico，后者分析这些数据并将其归类为一个类似的个人资料数据段，标注为“喜欢枪支的人”。然后，GP可以设计创意和视频，向被标记为“喜欢枪支的人”的群体宣传，告诉他们，除非投票给正确的候选人，否则他们的持枪权将受到威胁。GP的客户，某个竞选公职的候选人，感到高兴并开始梦想在国会大厦里泡香槟泡泡浴，而GP则在每个有功能网站的媒体平台上投放这些广告。当然，MXR
    Ads也会收到分发创意广告的任务，从而完成了这个自我循环的利润与绝望的蛇形结构。令人毛骨悚然。
- en: From this close connection we can reasonably suspect that pwning either MXR
    Ads or GP could prove fatal to *both* companies. Their sharing of data implies
    some link or connection that we can exploit to bounce from one to the other. Our
    potential attack surface just expanded.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从这种紧密的联系中，我们可以合理地怀疑，攻破MXR Ads或GP中的任何一个都可能对*两*家公司造成致命打击。他们的数据共享暗示着某种可以利用的联系或连接，我们可以从一个跳到另一个。我们的潜在攻击面刚刚扩展。
- en: 'Now that we have a first, though very speculative, knowledge of the company’s
    modus operandi, we can set out to answer some interesting questions:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对公司的运作方式有了初步的了解，虽然这种了解还很不完全，但我们可以开始尝试回答一些有趣的问题：
- en: How precise are these data segments? Are they casting a large net targeting,
    say, all 18- to 50-year-olds, or can they drill down to a person’s most intimate
    habits?
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些数据片段有多精准？它们是在广泛地定位，比如说 18 到 50 岁的所有人群，还是能深入到个人最私密的习惯？
- en: Who are GP’s clients? Not the pretty ponies they advertise on their slides,
    like health organizations trying to spread vaccines, but the ugly toads they bury
    in their databases.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GP 的客户是谁？不是他们在幻灯片上宣传的漂亮小马，比如那些试图推广疫苗的健康组织，而是他们在数据库中隐藏的丑陋蛤蟆。
- en: And finally, what do these creatives and ads look like? It might seem like a
    trivial question, but since they’re supposedly customized to each target population,
    it is hard to have any level of transparency and accountability.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，这些创意和广告到底是什么样的？这可能看起来是一个微不足道的问题，但由于它们显然是针对每个目标群体定制的，因此很难实现任何形式的透明度和问责制。
- en: In the next few chapters we’ll attempt to answer these questions. The agenda
    is pretty ambitious, so I hope you are as excited as I am to dive into this strange
    world of data harvesting and deceit.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几章中，我们将尝试回答这些问题。议程相当雄心勃勃，所以我希望你和我一样兴奋，能一起深入探讨这个数据收集与欺诈的奇异世界。
- en: Scouring GitHub
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 搜索 GitHub
- en: A recurrent leitmotif in almost every presentation of Gretsch Politico and MXR
    Ads’ methodology is their investment in research and design and their proprietary
    machine learning algorithms. Such technology-oriented companies will likely have
    some source code published in public repositories for various purposes, such as
    minor contributions to the open source world used as bait to fish for talent,
    partial documentation of some API, code samples, and so on. We might just find
    some material that contains an overlooked password or sensitive link to their
    management platform. Fingers crossed!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在几乎每次展示 Gretsch Politico 和 MXR Ads 方法论时，一个反复出现的主题是他们在研究和设计方面的投入，以及他们独有的机器学习算法。像这样的技术导向公司，可能会在公共代码库中发布一些源代码，目的是为了各种用途，比如作为引诱人才的诱饵，向开源世界做出小贡献，部分的
    API 文档，代码示例等等。我们或许能找到一些包含被忽视的密码或敏感链接到他们管理平台的材料。希望好运！
- en: Searching public repositories on GitHub is rather easy; you don’t even need
    to register for a free account. Simply proceed to look for keywords like “Gretsch
    Politico” and “MXR Ads.” [Figure 4-3](#figure4-3) shows the results when we search
    for MXR Ads’ repository.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GitHub 上搜索公共仓库相当简单；你甚至不需要注册一个免费账户。只需查找像“Gretsch Politico”和“MXR Ads”这样的关键词。[图
    4-3](#figure4-3)展示了我们搜索 MXR Ads 仓库时的结果。
- en: '![f04003](image_fi/501263c04/f04003.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![f04003](image_fi/501263c04/f04003.png)'
- en: 'Figure 4-3: The MXR Ads GitHub repository'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-3：MXR Ads GitHub 仓库
- en: A single company with 159 public repositories? That seems like a lot. After
    a cursory inspection, it’s clear only half a dozen of these repos actually belong
    to either MXR Ads or one of their employees. The rest are simply forks (copied
    repositories) that happen to mention MXR Ads—for instance, in ad-blocking lists.
    These forked repositories provide little to no value, so we’ll focus on those
    half a dozen original repos. Luckily, GitHub offers some patterns to weed out
    unwanted output. Using the two search prefixes `org:` and `repo:`, we can limit
    the scope of the results to the handful of accounts and repositories we decide
    are relevant.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一家公司竟然有 159 个公共仓库？这看起来很多。经过初步检查，明显只有其中少数几个仓库真正属于 MXR Ads 或其员工。剩下的只是一些提到 MXR
    Ads 的分支（复制的仓库），例如在广告屏蔽列表中。这些分支仓库几乎没有什么价值，所以我们将重点关注这几个原创仓库。幸运的是，GitHub 提供了一些模式来过滤不需要的结果。通过使用
    `org:` 和 `repo:` 这两个搜索前缀，我们可以将结果限制在我们认为相关的少数几个账户和仓库内。
- en: We start looking for hardcoded secrets, like SQL passwords, AWS access keys,
    Google Cloud private keys, API tokens, and test accounts on the company’s advertising
    platform. Basically, we want anything that might grant us our first beloved access.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们开始寻找硬编码的秘密，比如 SQL 密码、AWS 访问密钥、Google Cloud 私钥、API 令牌和公司广告平台上的测试账户。基本上，我们想要找到任何可能授予我们首次珍贵访问权限的东西。
- en: 'We enter these queries in the GitHub search and see what we get:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将这些查询输入 GitHub 搜索，看看能找到什么：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The annoying limitation of GitHub’s search API is that it filters out special
    characters. When we search for “aws_secret_access_key,” GitHub will return any
    piece of code matching any of the four individual words (aws, secret, access,
    or key). This is probably the only time I sincerely miss regular expressions.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 搜索 API 的一个烦人限制是，它会过滤掉特殊字符。当我们搜索“aws_secret_access_key”时，GitHub 只会返回与这四个单词（aws、secret、access
    或 key）中的任意一个匹配的代码。这大概是我唯一一次真心怀念正则表达式的时候。
- en: Keep in mind that this phase of the recon is not only about blindly grabbing
    dangling passwords; it’s also about discovering URL and API endpoints, and acquainting
    ourselves with the technological preferences of the two companies. Every team
    has some dogma about which framework to use and which language to work with. This
    information might later help us adjust our payloads.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这一阶段的侦察不仅仅是盲目抓取悬挂的密码；它还涉及到发现 URL 和 API 端点，并了解两家公司的技术偏好。每个团队都有一些信条，决定使用哪个框架和哪种语言。稍后的时候，这些信息可能帮助我们调整我们的
    payload。
- en: Unfortunately, preliminary GitHub search queries did not return anything worthy,
    so we bring out the big guns and bypass GitHub limitations altogether. Since we’re
    only targeting a handful of repositories, we’ll download the entire repositories
    to disk to unleash the full wrath of good ol’ grep!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，初步的 GitHub 搜索查询没有找到任何有价值的结果，所以我们决定使出大招，完全绕过 GitHub 的限制。由于我们只针对少数几个仓库，我们将整个仓库下载到本地磁盘，以便释放出
    grep 的全部威力！
- en: We’ll start with the interesting list of hundreds of regular expression (regex)
    patterns defined in `shhgit`, a tool specifically designed to look for secrets
    in GitHub, from regular passwords to API tokens ([https://github.com/eth0izzle/shhgit/](https://github.com/eth0izzle/shhgit/)).
    The tool itself is also very useful for defenders, as it flags sensitive data
    pushed to GitHub by listening for webhook events—a *webhook* is a call to a URL
    following a given event. In this case, GitHub sends a POST request to a predefined
    web page every time a regex matches a string in the code submitted.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从 `shhgit` 中定义的几百个正则表达式（regex）模式开始，这个工具专门用于在 GitHub 中寻找秘密信息，从普通密码到 API 令牌（[https://github.com/eth0izzle/shhgit/](https://github.com/eth0izzle/shhgit/)）。这个工具对于防守者也非常有用，因为它会监听
    GitHub 的 webhook 事件，标记被推送到 GitHub 的敏感数据——*webhook* 是一种根据特定事件调用 URL 的方式。在这种情况下，每当正则表达式匹配代码中的字符串时，GitHub
    会发送一个 POST 请求到预定义的网页。
- en: 'We rework the list of patterns, which you can find at [https://www.hacklikeapornstar.com/secret_regex_patterns.txt](https://www.hacklikeapornstar.com/secret_regex_patterns.txt),
    to make it grep-friendly. Then we download all the repos:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们重新整理了正则表达式模式列表，你可以在 [https://www.hacklikeapornstar.com/secret_regex_patterns.txt](https://www.hacklikeapornstar.com/secret_regex_patterns.txt)
    找到该列表，并将其调整为适合 grep 使用的格式。然后，我们下载所有的仓库：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'And start the search party:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 然后开始搜索任务：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This quick-and-dirty command will search through each file in the downloaded
    repositories. However, since we are dealing with Git repositories, `egrep` will
    omit previous versions of the code that are compressed and hidden away in Git’s
    internal filesystem structure (the *.git* folder). These old file versions are
    of course the most valuable assets! Think about all the credentials pushed by
    mistake or hardcoded in the early phases of a project. The famous line “It’s just
    a temporary fix” has never been more fatal than in a versioned repository.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这个快速且简便的命令将搜索下载仓库中的每一个文件。然而，由于我们处理的是 Git 仓库，`egrep` 会忽略代码的早期版本，这些版本被压缩并隐藏在 Git
    的内部文件系统结构中（*.git* 文件夹）。这些旧版本文件当然是最有价值的资产！想想看，所有因疏忽推送的凭证或硬编码在项目早期阶段的代码。那句著名的“这只是一个临时修复”在有版本控制的仓库中再也没有比这更致命了。
- en: 'The `git` command provides the necessary tools we’ll use to walk down the commit
    memory lane: `git rev-list`, `git log`, `git revert`, and the most relevant to
    us, `git grep`. Unlike the regular `grep`, `git grep` expects a commit ID, which
    we provide using `git` `rev-list`. Chaining the two commands using `xargs` (extended
    arguments), we can retrieve all the commit IDs (all changes ever made to the repo)
    and search each one for interesting patterns using `git grep`:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`git` 命令提供了我们用来回顾提交历史的必要工具：`git rev-list`、`git log`、`git revert`，以及对我们最有用的
    `git grep`。与常规的 `grep` 不同，`git grep` 需要一个提交 ID，我们通过 `git rev-list` 提供这个 ID。将这两个命令使用
    `xargs`（扩展参数）串联，我们可以获取所有提交 ID（仓库中的所有修改记录），并使用 `git grep` 搜索每个提交中的有趣模式：'
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We could also have automated this search using a bash loop or completely relied
    on a tool like Gitleaks ([https://github.com/zricethezav/gitleaks/](https://github.com/zricethezav/gitleaks/))
    or truffleHog ([https://github.com/dxa4481/truffleHog/](https://github.com/dxa4481/truffleHog/))
    that takes care of sifting through all the commit files.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用 bash 循环自动化此搜索，或者完全依赖像 Gitleaks（[https://github.com/zricethezav/gitleaks/](https://github.com/zricethezav/gitleaks/)）或
    truffleHog（[https://github.com/dxa4481/truffleHog/](https://github.com/dxa4481/truffleHog/)）这样的工具来处理筛选所有提交文件的工作。
- en: 'After a couple of hours of twisting that public source code in every fashion
    possible, one thing becomes clear: there seems to be no hardcoded credentials
    anywhere. Not even a fake dummy test or test account to boost our enthusiasm.
    Either MXR Ads and GP are good at concealment or we are just not that lucky. No
    matter, we’ll move on!'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在几个小时内以各种方式扭曲公共源代码后，有一点变得清晰：似乎哪里都没有硬编码的凭证。甚至没有一个假冒的测试账户来提升我们的热情。要么 MXR Ads 和
    GP 擅长隐藏，要么我们只是运气不佳。无论如何，我们继续前进！
- en: 'One feature of GitHub that most people tend to overlook is the ability to share
    snippets of code on [https://gist.github.co](https://gist.github.co), a service
    also provided by [https://pastebin.com/](https://pastebin.com/)*.* These two websites,
    and others such as [https://codepen.io/](https://codepen.io/), often contain pieces
    of code, database extracts, buckets, configuration files, and anything that developers
    want to exchange in a hurry. We’ll scrape some results from these sites using
    some search engine commands:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 的一个功能是大多数人容易忽视的，它允许在[https://gist.github.co](https://gist.github.co)上分享代码片段，这项服务也由[https://pastebin.com/](https://pastebin.com/)提供。
    这两个网站以及其他类似[https://codepen.io/](https://codepen.io/)的网站，通常包含代码片段、数据库提取、桶、配置文件以及开发者希望快速交换的任何内容。我们将使用一些搜索引擎命令从这些站点抓取一些结果：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: One search yields the result shown in [Figure 4-4](#figure4-4).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一个搜索结果显示了[图4-4](#figure4-4)所示的内容。
- en: '![f04004](image_fi/501263c04/f04004.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![f04004](image_fi/501263c04/f04004.png)'
- en: 'Figure 4-4: A snippet of an MXR Ads logfile'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-4：MXR Ads 日志文件片段
- en: 'This seems to be an extract of a logfile just hanging in a public Gist, available
    for everyone to see. Isn’t that just lovely? Sadly, no critical information is
    immediately available, but we do get these unique URLs:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这似乎是一个日志文件的提取，直接挂在公共 Gist 上，任何人都可以看到。是不是很有趣？可惜，暂时没有任何关键信息可用，但我们获得了这些独特的 URL：
- en: format-true-v1.qa.euw1.mxrads.com
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: format-true-v1.qa.euw1.mxrads.com
- en: dash-v3-beta.gretschpolitico.com
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dash-v3-beta.gretschpolitico.com
- en: www.surveysandstats.com/9df6c8db758b35fa0f1d73\. . .
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: www.surveysandstats.com/9df6c8db758b35fa0f1d73\. . .
- en: We test these in a browser. The first link times out, and the second one redirects
    to a Google authentication page (see [Figure 4-5](#figure4-5)).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在浏览器中测试这些链接。第一个链接超时，第二个链接重定向到谷歌认证页面（参见[图4-5](#figure4-5)）。
- en: '![f04005](image_fi/501263c04/f04005.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![f04005](image_fi/501263c04/f04005.png)'
- en: 'Figure 4-5: Gretsch Politico sign-in link found in the logfile snippet'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-5：在日志文件片段中找到的 Gretsch Politico 登录链接
- en: Gretsch Politico evidently subscribes to Google Workspace (formerly G Suite)
    apps to manage its corporate emails and likely its user directory and internal
    documents. We’ll keep that in mind for later when we start scavenging for data.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Gretsch Politico 显然订阅了 Google Workspace（前 G Suite）应用来管理其企业邮件，并可能管理其用户目录和内部文档。我们会在稍后开始寻找数据时记住这一点。
- en: The third URL, pointing to [Figure 4-6](#figure4-6), is promising.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个 URL，指向[图4-6](#figure4-6)，看起来很有希望。
- en: '![f04006](image_fi/501263c04/f04006.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![f04006](image_fi/501263c04/f04006.png)'
- en: 'Figure 4-6: Link to an MXR Ad survey found in the logfile snippet'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-6：在日志文件片段中找到的 MXR Ad 调查链接
- en: This must be one of these surveys MXR Ads uses to gather seemingly harmless
    information about people. Attempting to pwn MXR Ads or Gretsch Politico through
    one of their pernicious forms is quite tempting, but we are still in the midst
    of our reconnaissance work, so let’s just note this for a later attempt.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这一定是 MXR Ads 用来收集看似无害信息的调查之一。尝试通过他们的有害表单攻破 MXR Ads 或 Gretsch Politico 很有诱惑力，但我们仍然处于侦察阶段，所以我们只将其记录下来，稍后再尝试。
- en: Pulling Web Domains
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 拉取网站域名
- en: Passive reconnaissance has not yielded us many entry points so far. I believe
    it’s time we seriously start digging up all the domains and subdomains related
    to MXR Ads and Gretsch Politico. I’m sure we can find so much more than the three
    measly websites in a forgotten Gist paste. Hopefully we’ll land on a forlorn website
    with a sneaky vulnerability welcoming us inside.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，主动侦察并未为我们提供太多入口点。我认为是时候认真开始挖掘所有与MXR Ads和Gretsch Politico相关的域名和子域名了。我相信我们可以找到比那个被遗忘的Gist粘贴中的三个微不足道的网站更多的东西。希望我们能够发现一个孤独的站点，里面藏着一个狡猾的漏洞，欢迎我们进入。
- en: We’ll begin our search by first checking certificate logs for subdomains.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过首先检查证书日志中的子域名来开始搜索。
- en: From Certificates
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 来自证书
- en: Censys ([https://censys.io/](https://censys.io/)) is a tool that routinely scans
    certificate logs to ingest all newly issued TLS certificates, and it’s number
    one on any pentester’s domain discovery tool list. Upon their issuance by a certificate
    authority, certificates are pushed to a central repository called a *certificate
    log*. This repository keeps a binary tree of all certificates, where each node
    is the hash of its child nodes, thus guaranteeing the integrity of the entire
    chain. It’s roughly the same principle followed by the Bitcoin blockchain. In
    theory, all issued TLS certificates should be publicly published to detect domain
    spoofing, typo-squatting, homograph attacks, and other mischievous ways to deceive
    and redirect users.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Censys ([https://censys.io/](https://censys.io/)) 是一个常规扫描证书日志的工具，用于采集所有新颁发的TLS证书，并且它是任何渗透测试人员域名发现工具列表中的第一名。证书一旦由证书授权机构颁发，就会被推送到一个名为*证书日志*的中央仓库。该仓库保留所有证书的二叉树结构，每个节点是其子节点的哈希值，从而保证整个链条的完整性。这个原理与比特币区块链大致相同。理论上，所有颁发的TLS证书应当公开发布，以便检测域名欺骗、拼写域名抢注、同形字攻击等恶意方式来欺骗和重定向用户。
- en: We can search these certificate logs to eke out any new registrations matching
    certain criteria, like “mxr ads.” The ugly side of this beautiful canvas is that
    all domains and subdomain names are openly accessible online. Secret applications
    with little security hiding behind obscure domains are therefore easily exposed.
    Tools like Censys and *crt.sh* explore these certificate logs and help speed up
    subdomain enumeration by at least an order of magnitude—a cruel reminder that
    even the sweetest grapes can hide the most bitter seeds. In [Figure 4-7](#figure4-7)
    we use Censys to search for subdomains of gretschpolitico.com.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以搜索这些证书日志，以筛选出符合特定标准的新注册项，例如“mxr ads”。这个美丽画布的丑陋一面在于，所有的域名和子域名名称都是公开可访问的。那些安全性差、藏匿在模糊域名背后的秘密应用因此很容易被暴露。像Censys和*crt.sh*这样的工具探索这些证书日志，并帮助加速子域名枚举，至少能提高一个数量级——这也是一个残酷的提醒，甚至是最甜美的葡萄也能藏着最苦涩的种子。在[图
    4-7](#figure4-7)中，我们使用Censys搜索gretschpolitico.com的子域名。
- en: '![f04007](image_fi/501263c04/f04007.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![f04007](image_fi/501263c04/f04007.png)'
- en: 'Figure 4-7: Looking for subdomains with Censys'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-7：使用Censys查找子域名
- en: 'So much for transparency. It seems that GP did not bother registering subdomain
    certificates and has instead opted for a *wildcard certificate*: a generic certificate
    that matches any subdomain. One certificate to rule them all. Whether this is
    a brilliant security move or pure laziness, the fact is, we’re no further than
    the top domain. We try other top-level domains in Censys—gretschpolitico.io, mxrads.tech,
    mxrads.com, gretschpolitico.news, and so forth—but come up equally empty-handed.
    Our list of domains grew by a whopping big fat zero . . . but do not despair!
    We have other tricks up our collective sleeves.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 透明化就是这样了。看起来GP并没有费心注册子域名证书，而是选择了*通配符证书*：一种适用于任何子域名的通用证书。一个证书来管理所有的子域名。不管这是一个聪明的安全举措，还是纯粹的懒惰，事实是，我们离顶级域名也没有多远。我们在Censys中尝试其他顶级域名——gretschpolitico.io、mxrads.tech、mxrads.com、gretschpolitico.news等——但是同样一无所获。我们的域名列表增长了一个零……但不要绝望！我们还有其他妙招可以使出。
- en: By Harvesting the Internet
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过收集互联网信息
- en: 'If certificates are not the way to gather subdomains, then maybe the internet
    can lend us a helping hand. Sublist3r is a great and easy-to-use tool that harvests
    subdomains from various sources: search engines, PassiveDNS, even VirusTotal.
    First, we fetch the tool from the official repository and install requirements:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果证书不是收集子域名的有效途径，那么也许互联网可以为我们提供帮助。Sublist3r是一个非常好用的工具，可以从各种来源收集子域名：搜索引擎、PassiveDNS，甚至是VirusTotal。首先，我们从官方仓库获取该工具并安装所需的依赖：
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Then we proceed to search for subdomains, as shown in [Listing 4-1](#listing4-1).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们继续搜索子域名，如[清单 4-1](#listing4-1)所示。
- en: '[PRE7]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Listing 4-1: Enumerating domains with sublist3r'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 列表4-1：使用sublist3r枚举域名
- en: We’ve found 12 subdomains, so that’s encouraging. I bet we’d have even more
    luck with mxrads.com. They are, after all, a media company. However, it can get
    boring to use the same tools and methods repeatedly. For the mrxads.com domain,
    let’s use a different tool to perform a classic brute-force attack using well-known
    subdomain keywords like staging.mxrads.com, help.mxrads.com, dev.mxrads.com, and
    so on. There are a few tools we can choose from for the job.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们找到了12个子域名，这令人鼓舞。我敢打赌，如果是mxrads.com，结果会更好。毕竟，他们是一个媒体公司。然而，反复使用相同的工具和方法可能会让人感到厌烦。对于mrxads.com域名，我们不妨使用另一种工具，通过经典的暴力破解方式，尝试一些常见的子域名关键词，如staging.mxrads.com、help.mxrads.com、dev.mxrads.com等。我们可以选择几种工具来完成这个任务。
- en: Amass ([https://github.com/OWASP/Amass/](https://github.com/OWASP/Amass/)) from
    the Open Web Application Security Project (OWASP) is written in Golang and cleverly
    uses goroutines to parallelize the load of DNS queries. Whereas most other Python
    tools rely on the system’s DNS resolver to retrieve domains by calling functions
    like `socket.gethostname`, Amass crafts DNS queries from scratch and sends them
    to various DNS servers, thus avoiding the bottleneck caused by using the same
    local resolver. However, Amass is bloated with so many other colorful features,
    like visualizations and 3D graphs, that it may feel like wielding a 10-pound hammer
    to scratch an itch on your back. Tempting, but there are lighter alternatives.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 来自开放Web应用程序安全项目（OWASP）的Amass（[https://github.com/OWASP/Amass/](https://github.com/OWASP/Amass/)）是用Golang编写的，巧妙地使用goroutines并行处理DNS查询负载。而其他大多数Python工具依赖系统的DNS解析器，通过调用诸如`socket.gethostname`等函数来获取域名，Amass则从零开始构造DNS查询，并将其发送到不同的DNS服务器，从而避免了使用同一本地解析器所带来的瓶颈。然而，Amass功能庞大，包含许多其他花哨的功能，如可视化和3D图表，因此可能会让人觉得像用一个10磅重的锤子去抓背上的痒。很诱人，但也有更轻便的替代工具。
- en: 'A less mediatized yet very powerful tool that I highly recommend is Fernmelder([https://github.com/stealth/fernmelder/](https://github.com/stealth/fernmelder/)).
    It’s written in C, is barely a few hundred lines of code, and is probably the
    most efficient DNS bruteforcer I have tried lately. Fernmelder takes two inputs:
    a list of candidate DNS names and the IPs of DNS resolvers to use. This is what
    we’ll use.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我强烈推荐一个不那么被媒体报道，但却非常强大的工具——Fernmelder（[https://github.com/stealth/fernmelder/](https://github.com/stealth/fernmelder/)）。它用C语言编写，代码量只有几百行，可能是我最近尝试过的最有效的DNS暴力破解工具。Fernmelder需要两个输入：一个候选DNS名称列表和要使用的DNS解析器的IP地址。这就是我们将要使用的工具。
- en: First, we create our list of possible DNS names using some `awk` magic applied
    to a public subdomain wordlist, as shown in [Listing 4-2](#listing4-2). Daniel
    Miessler’s SecLists is a good start, for instance:[https://github.com/danielmiessler/SecLists/](https://github.com/danielmiessler/SecLists/)*.*
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们使用一些`awk`魔法对公共子域名词典进行处理，创建一个可能的DNS名称列表，如[列表4-2](#listing4-2)所示。比如，Daniel
    Miessler的SecLists是一个不错的起点：[https://github.com/danielmiessler/SecLists/](https://github.com/danielmiessler/SecLists/)*.*
- en: '[PRE8]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Listing 4-2: Creating a list of potential MXR Ads subdomains'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 列表4-2：创建潜在MXR广告子域名的列表
- en: This gives us a few thousand potential subdomain candidates to try. As for the
    second input, you can borrow the DNS resolvers found at the Fernmelder repo, as
    shown in [Listing 4-3](#listing4-3).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这给了我们几千个潜在的子域名候选。至于第二个输入，你可以借用Fernmelder仓库中找到的DNS解析器，正如[列表4-3](#listing4-3)所示。
- en: '[PRE9]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Listing 4-3: Resolving our subdomain candidates to see which are real'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 列表4-3：解析我们的子域名候选，查看哪些是真实的
- en: Be careful adding new resolvers, as some servers tend to play dirty and will
    return a default IP when resolving a nonexistent domain rather than the standard
    `NXDOMAIN` reply. The `-A` option at the end of the command hides any unsuccessful
    domain resolution attempts.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加新的解析器时要小心，因为一些服务器可能会作弊，在解析一个不存在的域名时返回默认的IP地址，而不是标准的`NXDOMAIN`回应。命令末尾的`-A`选项会隐藏任何解析失败的域名。
- en: 'Results from [Listing 4-3](#listing4-3) start pouring in impressively fast.
    Of the thousand subdomains we tried resolving, a few dozen responded with valid
    IP addresses:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表4-3](#listing4-3)中的结果开始以惊人的速度涌现。在我们尝试解析的千个子域名中，几十个返回了有效的IP地址：'
- en: '[PRE10]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Watching these IP addresses roll by on the screen is mesmerizing. Each entry
    is a door waiting to be subtly engineered or forcefully raided to grant us access.
    This is why this reconnaissance phase is so important: it affords us the luxury
    of choice, with over 100 domains belonging to both organizations!'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 看着这些IP地址在屏幕上滚动，令人着迷。每一项记录都是一扇门，等待被巧妙地构造或强行入侵，以便让我们获得访问权限。这就是为什么这一步的侦察阶段如此重要：它为我们提供了选择的余地，有超过100个域名属于这两个组织！
- en: Discovering the Web Infrastructure Used
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发现使用的网络基础设施
- en: 'The traditional approach to examining these sites would be to run WHOIS queries
    on these newly found domains, from which we can figure out the IP segment belonging
    to the company. With that we can scan for open ports in that range using Nmap
    or Masscan, hoping to land on an unauthenticated database or poorly protected
    Windows box. We try WHOIS queries on a few subdomains:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 检查这些站点的传统方法是对这些新发现的域名进行WHOIS查询，从中我们可以找出属于该公司的IP段。然后，我们可以使用Nmap或Masscan扫描该范围内的开放端口，希望能发现一个未经认证的数据库或保护不当的Windows机器。我们尝试对几个子域名进行WHOIS查询：
- en: '[PRE11]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: However, looking carefully at this list of IP addresses, we quickly realize
    that they have nothing to do with Gretsch Politico or MXR Ads. It turns out that
    most of the subdomains we collected are running on AWS infrastructure. This is
    an important conclusion. Most internet resources on AWS, like load balancers,
    content distribution networks, S3 buckets, and so on, regularly rotate their IP
    addresses.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，仔细观察这份IP地址列表，我们很快意识到它们与Gretsch Politico或MXR Ads无关。事实证明，我们收集的大多数子域名都在AWS基础设施上运行。这是一个重要的结论。大多数AWS上的互联网资源，如负载均衡器、内容分发网络、S3桶等，都会定期轮换它们的IP地址。
- en: That means that if we feed this list of IPs to Nmap and the port scan drags
    on longer than a couple of hours, the addresses will have already been assigned
    to another customer and the results will no longer be relevant. Of course, companies
    can always attach a fixed IP to a server and directly expose their application,
    but that’s like intentionally dropping an iron ball right on your little toe.
    Nobody is that masochistic.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，如果我们将这份IP列表传递给Nmap，并且端口扫描持续超过几个小时，那么这些地址将已经分配给另一个客户，结果将不再相关。当然，公司可以始终将固定IP地址附加到服务器并直接暴露其应用程序，但那就像故意把一颗铁球掉在脚趾上。没有人会这么自虐的。
- en: Over the last decade, we hackers have gotten into the habit of only scanning
    IP addresses and skipping DNS resolution in order to gain a few seconds, but when
    dealing with a cloud provider, this could prove fatal. Instead, we should scan
    domain names; that way, the name resolution will be performed closer to the actual
    scan to guarantee its integrity.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的十年中，我们黑客已经养成了只扫描IP地址并跳过DNS解析以节省几秒钟的习惯，但在处理云服务提供商时，这可能是致命的。相反，我们应该扫描域名；这样，域名解析会更接近实际扫描，以保证其完整性。
- en: 'That’s what we will do next. We launch a fast Nmap scan on all the domain names
    we’ve gathered so far to look for open ports:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们接下来要做的。我们对到目前为止收集的所有域名进行快速的Nmap扫描，查找开放端口：
- en: '[PRE12]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: We focus on the most common ports using `-F`, grab the component’s version using
    `-sV`, and save the results in XML, RAW, and text formats with `-oA`. This scan
    may take a few minutes, so while waiting for it to finish, we’ll turn our attention
    to the actual content of the hundreds of domains and websites we found belonging
    to MXR Ads and Gretsch Politico.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`-F`选项专注于最常见的端口，使用`-sV`获取组件的版本，并通过`-oA`将结果保存为XML、RAW和文本格式。此扫描可能需要几分钟的时间，因此在等待扫描完成时，我们将把注意力转向我们找到的属于MXR
    Ads和Gretsch Politico的数百个域名和网站的实际内容。
- en: Resources
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: 'Find an example of leaked credentials by searching for a bug report of a researcher
    finding API tokens in a Starbucks-owned repo: [https://hackerone.com/reports/716292/](https://hackerone.com/reports/716292/).'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过搜索研究人员在Starbucks拥有的代码库中发现API令牌的漏洞报告，找到泄露凭据的示例：[https://hackerone.com/reports/716292/](https://hackerone.com/reports/716292/)。
- en: Search for Juri Strumpflohner’s tutorial at [https://juristr.com/](https://juristr.com/)
    if you’re not familiar with Git’s internals.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你不熟悉Git的内部工作，可以去[https://juristr.com/](https://juristr.com/)查找Juri Strumpflohner的教程。
