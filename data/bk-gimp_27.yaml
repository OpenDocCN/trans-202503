- en: Chapter 20. Image Formats
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 20 章. 图像格式
- en: GIMP can manage more than 40 file formats for representing images. It can read
    35 input formats and generate 39 output formats. Moreover, it accepts these formats
    in a compressed form, using either the Gzip or Bzip2 compression techniques.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: GIMP 可以管理超过 40 种用于表示图像的文件格式。它可以读取 35 种输入格式并生成 39 种输出格式。此外，它支持以压缩形式接受这些格式，使用
    Gzip 或 Bzip2 压缩技术。
- en: If we covered all these formats in detail, this chapter would be enormous. Instead,
    we cover only the formats that are popular with, or at least useful to, many GIMP
    users. We also discuss the general principles that govern the various image formats.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们详细讲解所有这些格式，本章将非常庞大。相反，我们只讨论对许多 GIMP 用户来说流行的，或者至少有用的格式。我们还讨论了支配各种图像格式的基本原理。
- en: 20.1 An Overview of File Formats
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 20.1 文件格式概述
- en: 'An image on a computer screen is comprised of a matrix of pixels. This holds
    true on all current displays: cathode-ray tube, plasma, liquid crystals, and others.
    This is also true for laser and inkjet printers. Even the eye breaks down images
    into an array of rods and cones, as described in [Appendix A](apa.html "Appendix A. Vision
    and Image Representation").'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机屏幕上的图像由一个像素矩阵组成。这在所有当前的显示设备上都是适用的：阴极射线管、等离子、液晶显示器等。这对激光和喷墨打印机也适用。甚至眼睛也将图像分解为一系列的视杆和视锥，正如[附录
    A](apa.html "附录 A. 视觉与图像表示")中所描述的那样。
- en: The *file format* is how a file is stored in memory and is independent of how
    an image was captured and how it will eventually be viewed. So the representation
    of an image as a file, whether stored on disk or downloaded online, is not necessarily
    a representation of the final matrix of pixels. And because pixel density varies
    widely among mobile phone displays, computer monitors, cheap inkjet printers,
    and professional laser printers, any representation needs to be converted from
    the internal representation to the external one. Images that you produce must
    also be converted—be it from a phone’s camera, a scanner, or a professional digital
    camera.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*文件格式*是指文件在内存中的存储方式，独立于图像的捕捉方式和最终的显示方式。因此，无论图像是存储在磁盘上还是在线下载，它作为文件的表现不一定等同于最终的像素矩阵。而且由于像素密度在手机显示屏、计算机显示器、低成本喷墨打印机和专业激光打印机之间差异很大，任何表现都需要从内部表示转换为外部表示。你制作的图像也必须进行转换——无论是从手机摄像头、扫描仪还是专业数码相机。'
- en: Raster and Vector Formats
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 光栅和矢量格式
- en: 'Image formats can be divided into two main families: raster and vector.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图像格式可以分为两大类：光栅格式和矢量格式。
- en: In the *raster formats*, an image is stored as a representation of the pixels
    it contains. A *bitmap* image, which can represent black and white only (no gray
    levels), contains 1 bit per pixel, whereas a *pixmap* image, which can represent
    gray levels and colors, contains several bits per pixel.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*光栅格式*中，图像作为其包含的像素的表示存储。*位图*图像只能表示黑白（没有灰度级别），每个像素包含 1 位，而*像素图*图像可以表示灰度级别和颜色，每个像素包含多个位。
- en: In the *vector formats*, an image is stored as a geometric description of its
    contents.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*矢量格式*中，图像以几何描述的方式存储其内容。
- en: Each format has its advantages and drawbacks. An image file in vector format
    is generally much smaller than a file in raster format, and a vector image will
    be displayed at any size with the same sharpness because the pixels are computed
    each time the zoom factor changes. [Figure 20-1](ch20s01.html#icon "Figure 20-1. An
    icon") shows a 48 × 48 icon generated as a vector graphic image. The file is 63KB
    in the SVG format (which is a textual format in the XML convention). It is 1.3KB
    in JPEG because the image is very small.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 每种格式都有其优缺点。矢量格式的图像文件通常比光栅格式的文件要小得多，并且矢量图像可以在任何尺寸下显示，保持相同的清晰度，因为每次缩放因子变化时，像素都会重新计算。[图
    20-1](ch20s01.html#icon "图 20-1. 一个图标")展示了一个以矢量图形格式生成的 48 × 48 图标。该文件在 SVG 格式下为
    63KB（它是 XML 约定中的文本格式）。由于图像非常小，在 JPEG 格式下它只有 1.3KB。
- en: '![An icon](httpatomoreillycomsourcenostarchimages1457288.png.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![一个图标](httpatomoreillycomsourcenostarchimages1457288.png.jpg)'
- en: Figure 20-1. An icon
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-1. 一个图标
- en: '![The icon enlarged as a vector image](httpatomoreillycomsourcenostarchimages1457290.png.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![将图标放大为矢量图像](httpatomoreillycomsourcenostarchimages1457290.png.jpg)'
- en: Figure 20-2. The icon enlarged as a vector image
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-2. 将图标放大为矢量图像
- en: '![The icon enlarged as a raster image](httpatomoreillycomsourcenostarchimages1457292.png.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![将图标放大为光栅图像](httpatomoreillycomsourcenostarchimages1457292.png.jpg)'
- en: Figure 20-3. The icon enlarged as a raster image
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-3. 将图标放大为光栅图像
- en: '[Figure 20-2](ch20s01.html#icon_enlarged_as_a_vector_image "Figure 20-2. The
    icon enlarged as a vector image") shows the same icon enlarged to 480 × 480 as
    a vector graphic image at 300 dpi. The SVG file is the same size as before, but
    the JPEG file is now 30KB. [Figure 20-3](ch20s01.html#icon_enlarged_as_a_raster_image
    "Figure 20-3. The icon enlarged as a raster image") shows the same icon enlarged
    as a raster graphic image. The JPEG file is 19KB, but the image is badly pixelated.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 20-2](ch20s01.html#icon_enlarged_as_a_vector_image "图 20-2. 图标放大为矢量图像")显示了相同的图标，放大到480
    × 480，作为300 dpi的矢量图像。SVG文件与之前的大小相同，但JPEG文件现在是30KB。[图 20-3](ch20s01.html#icon_enlarged_as_a_raster_image
    "图 20-3. 图标放大为栅格图像")显示了相同的图标，放大为栅格图像。JPEG文件是19KB，但图像严重像素化。'
- en: '![A typical vector graphic image](httpatomoreillycomsourcenostarchimages1457294.png.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![一幅典型的矢量图像](httpatomoreillycomsourcenostarchimages1457294.png.jpg)'
- en: Figure 20-4. A typical vector graphic image
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-4. 一幅典型的矢量图像
- en: Although vector graphics clearly have advantages, their main drawback is they
    cannot represent complicated images like photographs accurately. For example,
    describing the relief and shading of a human face with mathematical formulas is
    not feasible. [Figure 20-4](ch20s01.html#typical_vector_graphic_image "Figure 20-4. A
    typical vector graphic image") is a typical example of a portrait done in vector
    graphics. Although tools are available for converting an image from a raster format
    to a vector image, the results tend to be poor.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管矢量图形显然有其优势，但它们的主要缺点是无法准确表示像照片这样的复杂图像。例如，用数学公式描述人脸的立体感和阴影是不切实际的。[图 20-4](ch20s01.html#typical_vector_graphic_image
    "图 20-4. 一幅典型的矢量图像")就是一幅用矢量图形制作的人物画像的典型例子。虽然有工具可以将图像从栅格格式转换为矢量图像，但转换结果往往不理想。
- en: GIMP works on the raster representation of images, so it works well for photographs
    and illustrations. A pixmap cannot be zoomed in indefinitely, however, so when
    working with a raster image, work with as large a definition as possible. You
    can always reduce the size before sending the file to somebody or posting it online.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: GIMP处理图像的栅格表示，因此它适合用于照片和插图。然而，位图无法无限放大，因此在处理栅格图像时，尽量使用尽可能高的分辨率。你可以在发送文件给他人或在线发布之前随时缩小尺寸。
- en: Lossless and Lossy Compression
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无损压缩与有损压缩
- en: Raster images are generally large, and they keep getting larger as digital cameras
    improve. The data size of a single pixel also increases when the number of colors
    that can be represented increases. And the number of pixels increases with the
    size and resolution of the image. A digital camera can now create images as large
    as 10 (or even 12) million pixels, which generally means at least 30MB if the
    number of colors in each channel is 256.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 栅格图像通常很大，随着数码相机的进步，它们的尺寸不断增大。单个像素的数据大小也会随着能够表示的颜色数量的增加而增加。图像的像素数量随着图像的大小和分辨率的提升而增多。现在，数码相机能够拍摄达到1000万（甚至1200万）像素的图像，这通常意味着每个颜色通道有256种颜色时，图像的文件大小至少为30MB。
- en: A 30MB file is rather large, even for current hard disks, especially if you
    store a lot of photos. This file size is also large for most memory cards and
    would be difficult to send via email or to post online. One solution is to compress
    the file to decrease its size. A number of algorithms are available for compressing
    files, especially image files. These algorithms can be either lossless or lossy.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 30MB的文件相当大，即使是对于当前的硬盘来说，尤其是如果你存储很多照片时。对于大多数存储卡来说，这个文件大小也很大，发送电子邮件或在线发布时也会很困难。一种解决方案是压缩文件，以减小其大小。有许多算法可用于压缩文件，特别是图像文件。这些算法可以是无损的，也可以是有损的。
- en: '![A photo of a rose with decreasing image quality](httpatomoreillycomsourcenostarchimages1457296.png.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![一张玫瑰花的照片，图像质量逐渐下降](httpatomoreillycomsourcenostarchimages1457296.png.jpg)'
- en: Figure 20-5. A photo of a rose with decreasing image quality
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-5. 一张玫瑰花的照片，图像质量逐渐下降
- en: A *lossless* compression algorithm rebuilds the original data without losing
    any information. The image quality remains stable, but sometimes the original
    image is transformed in a lossy way. If the image isn’t transformed first, then
    applying lossless compression won’t reduce the file size by very much.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*无损*压缩算法能够在不丢失任何信息的情况下重建原始数据。图像质量保持稳定，但有时原始图像会以有损的方式进行转换。如果图像没有首先进行转换，那么应用无损压缩不会大幅减少文件大小。'
- en: A *lossy* compression algorithm results in some loss of information, but the
    differences may be invisible to the human eye. Generally, lossy compression reduces
    the file size considerably, but you cannot rebuild the original image exactly
    as it was, and if you apply lossy compression more than once, the deterioration
    is cumulative. Eventually, you can see the difference.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*有损*压缩算法会导致一些信息损失，但这些差异可能对肉眼不可见。通常，有损压缩会显著减少文件大小，但你无法完全重建原始图像，如果多次应用有损压缩，损失会是累积的。最终，你会看到差异。'
- en: If you want maximum image quality and don’t care about size, use only lossless
    compression. If you can accept some loss in image quality in exchange for significant
    size reduction, choose a lossy algorithm.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要最大图像质量且不在乎文件大小，可以仅使用无损压缩。如果你能接受一定的图像质量损失来换取显著的文件大小减小，可以选择有损算法。
- en: '![Sizes and quality factors of the images shown in](httpatomoreillycomsourcenostarchimages1457298.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![所示图像的大小和质量因子](httpatomoreillycomsourcenostarchimages1457298.png)'
- en: Figure 20-6. Sizes and quality factors of the images shown in [Figure 20-5](ch20s01.html#photo_of_a_rose_with_decreasing_image_qu
    "Figure 20-5. A photo of a rose with decreasing image quality")
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-6. 所示图像的大小和质量因子，如[图 20-5](ch20s01.html#photo_of_a_rose_with_decreasing_image_qu
    "图 20-5. 质量逐渐降低的玫瑰照片")所示
- en: '![The initial photo of the rose (left); the same image after saving and reloading
    several times (right)](httpatomoreillycomsourcenostarchimages1457300.png.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![玫瑰的初始照片（左）；多次保存和重新加载后的相同图像（右）](httpatomoreillycomsourcenostarchimages1457300.png.jpg)'
- en: Figure 20-7. The initial photo of the rose (left); the same image after saving
    and reloading several times (right)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-7. 玫瑰的初始照片（左）；多次保存和重新加载后的相同图像（右）
- en: '[Figure 20-5](ch20s01.html#photo_of_a_rose_with_decreasing_image_qu "Figure 20-5. A
    photo of a rose with decreasing image quality") shows the same image nine times.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 20-5](ch20s01.html#photo_of_a_rose_with_decreasing_image_qu "图 20-5. 质量逐渐降低的玫瑰照片")显示了相同的图像九次。'
- en: Each time the image’s quality factor and size decrease, as shown in [Figure 20-6](ch20s01.html#sizes_and_quality_factors_of_the_images
    "Figure 20-6. Sizes and quality factors of the images shown in Figure 20-5").
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 每次图像的质量因子和大小减少，如[图 20-6](ch20s01.html#sizes_and_quality_factors_of_the_images
    "图 20-6. 所示图像的大小和质量因子")所示。
- en: You cannot see any obvious loss of quality down to factor 60\. When the factor
    is 10 or less, however, the loss is very apparent.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你不会看到明显的质量损失，直到质量因子降到 60 以下。然而，当质量因子降到 10 或更低时，损失会非常明显。
- en: Another problem with lossy compression is that defects accumulate if you save
    the image several times. [Figure 20-7](ch20s01.html#initial_photo_of_the_rose_left_parenthes
    "Figure 20-7. The initial photo of the rose (left); the same image after saving
    and reloading several times (right)") (left) shows an enlarged section of the
    rose photo, and [Figure 20-7](ch20s01.html#initial_photo_of_the_rose_left_parenthes
    "Figure 20-7. The initial photo of the rose (left); the same image after saving
    and reloading several times (right)") (right) shows the same photo after we saved
    and reloaded it several times with a low quality factor (less than 60). The compression
    artifacts are clearly visible on the edge of the middle petal.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 有损压缩的另一个问题是，如果多次保存图像，缺陷会逐渐积累。[图 20-7](ch20s01.html#initial_photo_of_the_rose_left_parenthes
    "图 20-7. 玫瑰的初始照片（左）；多次保存和重新加载后的相同图像（右）")（左）展示了玫瑰照片的放大部分，[图 20-7](ch20s01.html#initial_photo_of_the_rose_left_parenthes
    "图 20-7. 玫瑰的初始照片（左）；多次保存和重新加载后的相同图像（右）")（右）展示了经过多次保存和重新加载后（使用较低质量因子，小于 60）相同的照片。压缩伪影在中间花瓣的边缘清晰可见。
- en: Layout Engines and Browsers
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布局引擎与浏览器
- en: These days many people view images through browsers like Firefox or Internet
    Explorer. Unfortunately, not all image formats are supported by all browsers.
    In fact, the three common formats discussed in the next section are the only ones
    that are displayed by all existing browsers, and sometimes even those formats
    don’t work perfectly.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，许多人通过浏览器（如 Firefox 或 Internet Explorer）查看图像。不幸的是，并非所有浏览器都支持所有图像格式。事实上，下一节讨论的三种常见格式是所有现有浏览器都能显示的唯一格式，有时即使是这些格式也不能完美显示。
- en: 'Many different browsers exist, and some browsers vary depending on your operating
    system. Browsers use *layout engines* to display images on the screen. Fewer than
    10 layout engines are available, and only a handful are widely used. Different
    browsers using the same layout engine handle images in the same way. The following
    table lists popular layout engines and the browsers that use them:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 存在许多不同的浏览器，并且根据操作系统的不同，某些浏览器有所不同。浏览器使用*布局引擎*在屏幕上显示图像。目前有不到 10 个布局引擎可供使用，其中只有少数是广泛使用的。使用相同布局引擎的不同浏览器处理图像的方式相同。下表列出了流行的布局引擎及其使用的浏览器：
- en: '| Layout Engine | Browsers |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 布局引擎 | 浏览器 |'
- en: '| --- | --- |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Gecko | all Mozilla software: Firefox, Galeon, Seamonkey, etc. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| Gecko | 所有 Mozilla 软件：Firefox, Galeon, Seamonkey 等 |'
- en: '| KHTML | Konqueror |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| KHTML | Konqueror |'
- en: '| Presto | Opera |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| Presto | Opera |'
- en: '| Trident | Internet Explorer 4 to 9 |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| Trident | Internet Explorer 4 至 9 |'
- en: '| Webkit | Safari, Epiphany, Google Chrome |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| Webkit | Safari, Epiphany, Google Chrome |'
- en: Because many people still use Internet Explorer, many people use Trident. No
    layout engine is perfect, but unfortunately Trident is one of the worst. Its main
    problem, with regard to image display, is that it does not handle PNG format very
    well. Other free software browsers handle PNG images much better.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 由于仍有许多人使用 Internet Explorer，因此有许多人使用 Trident。没有哪个布局引擎是完美的，但不幸的是，Trident 是最差的之一。就图像显示而言，它的主要问题是无法很好地处理
    PNG 格式。其他免费软件浏览器处理 PNG 图像的效果要好得多。
- en: 20.2 JPEG, GIF, and PNG
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 20.2 JPEG, GIF 和 PNG
- en: In this section, we discuss the common formats that all layout engines handle
    (though not always well) and which are generally the most useful.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们讨论所有布局引擎处理的常见格式（尽管并不总是处理得很好）以及通常最有用的格式。
- en: JPEG
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JPEG
- en: Surprisingly, JPEG is not the name of the format, which is called JFIF, but
    of the working group that defined it—the Joint Photographic Experts Group. This
    committee defined what became an ISO standard in 1994\. The format they designed
    is the usual output format of most, if not all, digital cameras. JFIF stands for
    *JPEG File Interchange Format*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 令人惊讶的是，JPEG 不是格式的名称，格式被称为 JFIF，而是定义该格式的工作组——联合图像专家组（Joint Photographic Experts
    Group）的名字。这个委员会定义了成为 1994 年 ISO 标准的格式。他们设计的格式是大多数数字相机的常用输出格式，如果不是全部的话。JFIF 代表*JPEG
    文件交换格式*。
- en: JPEG uses a lossy compression algorithm, which means that some information is
    lost, but the file size is decreased substantially while maintaining a fairly
    high image quality. JPEG is the format of choice for photographs and digital illustrations
    because it can present complex images as files that are small enough to send by
    email or to post on the Web.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: JPEG 使用有损压缩算法，这意味着一些信息会丢失，但文件大小大幅减少，同时保持相当高的图像质量。JPEG 是拍摄照片和数字插图时的首选格式，因为它能够将复杂的图像转换为足够小的文件，以便通过电子邮件发送或在网页上发布。
- en: As shown in [Figure 20-7](ch20s01.html#initial_photo_of_the_rose_left_parenthes
    "Figure 20-7. The initial photo of the rose (left); the same image after saving
    and reloading several times (right)"), exporting a JPEG over and over is not a
    good idea because the quality loss accumulates. Each time you load a picture you
    start with the last state, which suffered some loss of quality when you last exported
    it. Always work on the image as an XCF in GIMP, and export it from the XCF to
    store it as a JPEG. This issue is one of the reasons why, since version 2.8, GIMP
    only exports an image as JPEG and doesn’t consider the image to be saved until
    you have saved it as an XCF file.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如 [图 20-7](ch20s01.html#initial_photo_of_the_rose_left_parenthes "图 20-7. 玫瑰的初始照片（左）；保存并重新加载几次后的同一图像（右）")
    所示，反复导出 JPEG 并不是一个好主意，因为质量损失会逐渐积累。每次加载图片时，您都是从上次导出时所处的状态开始，而该状态已经在导出时丧失了一些质量。始终在
    GIMP 中以 XCF 格式编辑图像，并将其从 XCF 导出以保存为 JPEG。这个问题是自 2.8 版本以来，GIMP 仅将图像导出为 JPEG，并且在您将图像保存为
    XCF 文件之前，不会将其视为已保存的原因之一。
- en: The JPEG format is not well suited to images containing line drawings, text,
    or a sharp contrast between adjacent pixels. A lossless compression algorithm
    is needed in such a case, because it means that only some pixels from the initial
    image are saved and the missing pixels are interpolated when the image is loaded.
    If pixels along a sharp border in a line drawing are not saved, the interpolation
    assigns them an average value based on the surrounding pixels, which smooths the
    border and can make the image look blurry.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: JPEG 格式不适合包含线条图、文本或相邻像素之间有明显对比度的图像。在这种情况下，需要使用无损压缩算法，因为这意味着只有初始图像中的某些像素被保存，缺失的像素会在加载图像时进行插值。如果线条图中的尖锐边界处的像素没有保存，插值会根据周围像素赋予它们一个平均值，从而使边界变得平滑，可能导致图像看起来模糊。
- en: '![Sharp contrast with a lossy compression algorithm](httpatomoreillycomsourcenostarchimages1457302.png.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![与有损压缩算法的鲜明对比](httpatomoreillycomsourcenostarchimages1457302.png.jpg)'
- en: Figure 20-8. Sharp contrast with a lossy compression algorithm
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-8. 与有损压缩算法的鲜明对比
- en: '![Sharp contrast with a lossless compression algorithm](httpatomoreillycomsourcenostarchimages1457304.png.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![与无损压缩算法的鲜明对比](httpatomoreillycomsourcenostarchimages1457304.png.jpg)'
- en: Figure 20-9. Sharp contrast with a lossless compression algorithm
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-9. 与无损压缩算法的鲜明对比
- en: '[Figure 20-8](ch20s02.html#sharp_contrast_with_a_lossy_compression "Figure 20-8. Sharp
    contrast with a lossy compression algorithm") and [Figure 20-9](ch20s02.html#sharp_contrast_with_a_lossless_compressi
    "Figure 20-9. Sharp contrast with a lossless compression algorithm") show the
    difference between a lossy and lossless compression algorithm used on an image
    with high contrast. In the first figure, the character contours are blurred by
    the lossy compression algorithm, whereas in the second figure, they remain sharp,
    thanks to the lossless compression algorithm.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 20-8](ch20s02.html#sharp_contrast_with_a_lossy_compression "图 20-8. 与有损压缩算法的鲜明对比")
    和 [图 20-9](ch20s02.html#sharp_contrast_with_a_lossless_compressi "图 20-9. 与无损压缩算法的鲜明对比")
    显示了在高对比度图像上使用有损和无损压缩算法的区别。在第一幅图中，字符轮廓被有损压缩算法模糊了，而在第二幅图中，由于使用了无损压缩算法，轮廓保持清晰。'
- en: Another weakness of the JPEG format is that it cannot handle transparency. Although
    generally fine for photos, if you want to display a non-rectangular graphic on
    a web page, for example, and it’s a JPEG, you have to fill the background with
    a color or pattern.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: JPEG 格式的另一个缺点是它无法处理透明度。虽然对于照片通常没有问题，但如果你想在网页上显示一个非矩形的图形（例如），而且它是 JPEG 格式，你必须用颜色或图案填充背景。
- en: A JPEG file can contain an ICC color profile, which defines the color space
    used (see [Chapter 12](ch12.html "Chapter 12. Color")). If this is the case, when
    you load the file, GIMP asks whether you want to use the embedded profile. Generally,
    you should answer yes. Many simpler image applications simply ignore the profile.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: JPEG 文件可以包含 ICC 颜色配置文件，用于定义所使用的颜色空间（参见 [第 12 章](ch12.html "第 12 章. 颜色")）。如果是这种情况，当你加载该文件时，GIMP
    会询问是否使用嵌入的配置文件。通常，你应该选择“是”。许多简单的图像应用程序会忽略该配置文件。
- en: Exporting to JPEG
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导出为 JPEG
- en: When you export an image to JPEG (`.jpeg` or `.jpg`), GIMP opens a dialog, which
    in its simplest form only allows you to set the compression quality [0 to 100].
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将图像导出为 JPEG（`.jpeg` 或 `.jpg`）格式时，GIMP 会打开一个对话框，在最简单的形式下，它只允许你设置压缩质量 [0 到 100]。
- en: The QUALITY slider determines how much the image quality will be degraded to
    decrease the file size. Images at values greater than 85 generally look the same,
    and the loss in quality is practically indiscernible at such values. The degradation
    usually becomes apparent only if the value is less than 50\. Check SHOW PREVIEW
    IN IMAGE WINDOW to see the effect of the current setting before exporting the
    image.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: QUALITY 滑块决定了为了减小文件大小而需要降低的图像质量。质量值大于 85 的图像通常看起来差不多，质量损失在这些值下几乎无法察觉。通常只有当值小于
    50 时，图像的退化才会变得明显。在导出图像之前，勾选“在图像窗口中显示预览”（SHOW PREVIEW IN IMAGE WINDOW）来查看当前设置的效果。
- en: 'If you click ADVANCED OPTIONS, you’ll see the extended dialog shown in [Figure 20-10](ch20s02.html#export_image_as_jpeg_dialog-id00198
    "Figure 20-10. The Export Image as JPEG dialog"). Here are the most useful ADVANCED
    OPTIONS:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击“高级选项”（ADVANCED OPTIONS），你将看到扩展的对话框，显示在 [图 20-10](ch20s02.html#export_image_as_jpeg_dialog-id00198
    "图 20-10. 导出图像为 JPEG 的对话框") 中。这里是最有用的“高级选项”：
- en: 'PROGRESSIVE: The file loads progressively in a web page. First, a crude version
    appears, and then the image becomes more and more refined. This setting is useful
    for large files that inevitably take time to load, but it increases the file size
    slightly.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渐进式：文件在网页中逐步加载。首先会显示一个粗略版本，随后图像会越来越精细。此设置对于加载时间较长的大文件非常有用，但它会稍微增加文件大小。
- en: 'SAVE EXIF DATA: The EXIF data, which is generally added to the file by digital
    cameras, contains information about a photo, including the date and time the photo
    was taken, the camera brand and model, and the camera settings used.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存EXIF数据：EXIF数据通常由数码相机添加到文件中，包含有关照片的信息，包括照片拍摄的日期和时间、相机品牌与型号以及使用的相机设置。
- en: 'SAVE THUMBNAIL: This option saves a thumb-nail of the image in the file.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存缩略图：此选项将图像的缩略图保存到文件中。
- en: 'USE QUALITY SETTINGS FROM ORIGINAL IMAGE: These settings determine how the
    compression algorithm works. The original image may have an unusual set of values;
    in this case, checking this box guarantees that if you make minor changes to the
    image, the result will have the same quality as the original.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用原始图像的质量设置：这些设置决定了压缩算法的工作方式。原始图像可能有一组不寻常的值；在这种情况下，勾选此框可确保如果对图像进行微小修改，结果将与原始图像保持相同的质量。
- en: 'SMOOTHING: This slider smooths imperfections created by a high level of compression.
    Smoothing also blurs the image.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平滑：此滑块平滑由于高压缩比而产生的不完美之处。平滑还会模糊图像。
- en: 'The other ADVANCED OPTIONS are useful only under very specific circumstances,
    so just ignore them unless you know that you need to change them. Note that the
    COMMENT field, which adds text to the file, will not be visible in the image itself,
    but you can see it in GIMP with **Image: Image > Image Properties**, on the third
    tab. The COMMENT field can be handy for adding a copyright notice, for example.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 其他高级选项仅在非常特定的情况下才有用，因此除非你知道需要更改它们，否则可以忽略它们。请注意，注释字段（用于向文件中添加文本）不会在图像本身中显示，但你可以在GIMP中通过**图像：图像
    > 图像属性**的第三个标签页查看它。注释字段可以方便地用于添加版权声明等信息。
- en: In addition to transparency, JPEG cannot save multiple layers. Although it has
    some popular applications, JPEG can’t store nearly as much information as XCF,
    which is another reason why it’s always better to save files as XCF and export
    them as JPEG rather than storing them only as JPEG.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 除了透明度，JPEG无法保存多个图层。尽管它有一些流行的应用，但JPEG无法存储与XCF一样多的信息，这也是为什么将文件保存为XCF并导出为JPEG总比仅以JPEG存储文件要更好的另一个原因。
- en: GIF
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GIF
- en: The Graphics Interchange Format (GIF) has a long and tumultuous history. Although
    this format has many major drawbacks, it remains popular partly because it’s the
    simplest format for building small animations ([Chapter 18](ch18.html "Chapter 18. Animation
    Tools")) and because people are familiar with it.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图形交换格式（GIF）有着悠久而波澜壮阔的历史。尽管这种格式有许多主要的缺点，但它依然广受欢迎，部分原因是它是制作小型动画的最简单格式（[第18章](ch18.html
    "第18章. 动画工具")），以及人们对它较为熟悉。
- en: This format was defined in 1987 by CompuServe, now a subsidiary of AOL. At that
    time, the compression of images was considered much more important than the number
    of colors, which was limited by most existing display screens. For this reason,
    the GIF format, with its efficient compression algorithm and limited palette,
    was widely used in the first browsers and graphic tools.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 该格式由CompuServe（现在是AOL的子公司）于1987年定义。当时，图像压缩被认为比颜色数量更为重要，因为大多数现有显示屏限制了颜色数量。因此，GIF格式凭借其高效的压缩算法和有限的调色板，在最早的浏览器和图形工具中得到了广泛应用。
- en: '![The Export Image as JPEG dialog](httpatomoreillycomsourcenostarchimages1457306.png.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![将图像导出为JPEG对话框](httpatomoreillycomsourcenostarchimages1457306.png.jpg)'
- en: Figure 20-10. The Export Image as JPEG dialog
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-10. 将图像导出为JPEG对话框
- en: The compression algorithm used by GIF is known as LZW. It was designed in the
    late 1970s by Jacob Ziv and Abraham Lempel and improved in 1983 by Terry Welch.
    Welch immediately filed an application for a US patent on his algorithm and extended
    this patent later to various other countries.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: GIF使用的压缩算法被称为LZW。它是在1970年代末由Jacob Ziv和Abraham Lempel设计的，1983年由Terry Welch改进。Welch立即为他的算法申请了美国专利，并后来将该专利扩展到其他国家。
- en: When the GIF format was published, the authors were not aware of the patent,
    and it was only in 1993 that the current patent owner, Unisys, tried to exercise
    rights to the algorithm. They tried to get royalties when the format was used,
    at least in commercial products. This triggered much indignation in the Internet
    world and was one of the main reasons for the development of the PNG format (see
    [PNG](ch20s02.html#png-id00199 "PNG")). The patent expired in 2003 in the US and
    one year later in other countries, so you can now use the format freely, but its
    reputation hasn’t fully recovered.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当GIF格式发布时，作者并未意识到专利问题，直到1993年，当前的专利持有者Unisys才尝试行使对该算法的权利。他们试图在格式被使用时收取版权费，至少在商业产品中是这样。这引起了互联网界的广泛愤慨，也成为PNG格式发展的主要原因之一（见[PNG](ch20s02.html#png-id00199
    "PNG")）。该专利在2003年在美国到期，一年后在其他国家也到期，因此现在你可以自由使用该格式，但它的声誉尚未完全恢复。
- en: 'The GIF format was actually pretty good when it was developed, but today PNG
    is superior in all respects but one: animation. Internet Explorer’s poor support
    of PNG remains a major obstacle to the full adoption of this format, however.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: GIF格式在发布时实际上相当不错，但今天PNG在各个方面都优于它，除了一个方面：动画。然而，Internet Explorer对PNG的支持不佳，仍然是这一格式广泛采用的主要障碍。
- en: 'GIF’s main characteristic is that the image must be in *indexed mode*. An indexed
    image is encoded using a color table, as we explained in [Chapter 12](ch12.html
    "Chapter 12. Color"). The pixels are represented as indexes in the table, and
    the size of each pixel depends on the size of the table: A table with 4 colors
    requires 2 bits, a table with 64 colors requires 6 bits, and a table with 256
    colors requires 8 bits (1 byte), the maximum for GIF.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: GIF的主要特点是图像必须处于*索引模式*。索引图像使用颜色表进行编码，正如我们在[第12章](ch12.html "第12章. 颜色")中解释的那样。像素通过颜色表中的索引来表示，每个像素的大小取决于表的大小：一个包含4种颜色的表需要2位，一个包含64种颜色的表需要6位，一个包含256种颜色的表需要8位（1字节），这是GIF的最大值。
- en: Indexed mode saves space because a pixel needs at most 1 byte instead of 3 (with
    8-bit depth RGB encoding). But even more space is saved by the increased probability
    that neighboring pixels are the same. Instead of storing the value of every pixel
    separately, a compression algorithm can store the shape and size of a contiguous
    area with identical pixels and the pixel value for the area.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 索引模式节省空间，因为每个像素最多只需1个字节，而不是3个字节（使用8位深度的RGB编码）。但通过增加相邻像素相同的概率，可以节省更多的空间。压缩算法可以不存储每个像素的值，而是存储一个区域的形状和大小，这个区域内的所有像素值都是相同的，并且存储该区域的像素值。
- en: '![The rose in indexed with 32 colors](httpatomoreillycomsourcenostarchimages1457308.png.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![这朵玫瑰使用32种颜色进行了索引](httpatomoreillycomsourcenostarchimages1457308.png.jpg)'
- en: Figure 20-11. The rose in [Figure 20-7](ch20s01.html#initial_photo_of_the_rose_left_parenthes
    "Figure 20-7. The initial photo of the rose (left); the same image after saving
    and reloading several times (right)") indexed with 32 colors
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图20-11. [图20-7](ch20s01.html#initial_photo_of_the_rose_left_parenthes "图20-7.
    玫瑰的初始照片（左）；多次保存和重新加载后的同一图像（右）")中的玫瑰使用32种颜色进行了索引
- en: The LZW compression algorithm doesn’t quite work that way, but the compression
    rate is still better if neighboring pixels have the same value. LZW doesn’t work
    if there are more possible values for pixels than pixels in the image, which is
    often the case with RGB encoding. With 8-bit RGB, you have 2^(24) possible pixel
    values (more than 16 million), but a 4000 × 4000 pixel image is unusually large.
    GIF also doesn’t work well for photos, as the probability that neighboring pixels
    have the same value is low.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: LZW压缩算法并不像那样工作，但如果相邻像素值相同，压缩率仍然会更好。如果像素的可能值比图像中的像素还要多，LZW就无法工作，这在RGB编码中经常出现。对于8位RGB，你有2^(24)种可能的像素值（超过1600万），但是一个4000
    × 4000的像素图像异常巨大。GIF对于照片的表现也不佳，因为相邻像素值相同的概率较低。
- en: The LZW algorithm works best when the image contains large areas of the same
    color, which means the GIF format is best suited for simple graphics, line drawings,
    and cartoons. A smooth change in hue or value is not easy to represent because
    the palette does not have enough colors. A technique known as *dithering* can
    smooth transitions to a degree. When dithering is applied, two different colors
    are used in neighboring pixels, and because the pixels are so small, the eye blends
    the two colors together. Dithering can lead to a loss of detail, and the result
    doesn’t always look very good. Another consequence is that neighboring pixels
    are no longer identical, so the LZW algorithm can’t compress the image as effectively.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: LZW算法在图像包含大片相同颜色区域时效果最佳，这意味着GIF格式最适合用于简单的图形、线条绘图和卡通图像。由于调色板中的颜色不够，平滑的色调或亮度变化很难呈现。被称为*抖动*的技术可以在一定程度上平滑过渡。当应用抖动时，两个不同的颜色会在相邻像素中使用，因为像素非常小，眼睛会将这两种颜色混合在一起。抖动可能导致细节丢失，结果不一定看起来很好。另一个后果是相邻像素不再完全相同，因此LZW算法无法有效压缩图像。
- en: '[Figure 20-11](ch20s02.html#rose_in_figure_20dot7_indexed_with_32_co "Figure 20-11. The
    rose in Figure 20-7 indexed with 32 colors") shows the effect of indexing on the
    rose from [Figure 20-7](ch20s01.html#initial_photo_of_the_rose_left_parenthes
    "Figure 20-7. The initial photo of the rose (left); the same image after saving
    and reloading several times (right)"). The image was indexed with 32 colors, and
    the colors look blocky.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 20-11](ch20s02.html#rose_in_figure_20dot7_indexed_with_32_co "图 20-11. 图
    20-7中32色索引的玫瑰")展示了在[图 20-7](ch20s01.html#initial_photo_of_the_rose_left_parenthes
    "图 20-7. 玫瑰的初始照片（左）；同一图像经过多次保存和重新加载后的样子（右）")中，玫瑰的索引效果。图像使用32种颜色进行了索引，颜色看起来块状。'
- en: '![A color gradient](httpatomoreillycomsourcenostarchimages1457310.png.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![颜色渐变](httpatomoreillycomsourcenostarchimages1457310.png.jpg)'
- en: Figure 20-12. A color gradient
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-12. 颜色渐变
- en: '![The color gradient indexed and dithered](httpatomoreillycomsourcenostarchimages1457312.png.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![索引和抖动的颜色渐变](httpatomoreillycomsourcenostarchimages1457312.png.jpg)'
- en: Figure 20-13. The color gradient indexed and dithered
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-13. 颜色渐变的索引和抖动
- en: '[Figure 20-12](ch20s02.html#color_gradient "Figure 20-12. A color gradient")
    shows a simple image built with the Blend tool and the `Full saturation spectrum
    CW` gradient. [Figure 20-13](ch20s02.html#color_gradient_indexed_and_dithered
    "Figure 20-13. The color gradient indexed and dithered") shows the same image
    after we indexed it using 256 different colors. Even though we used the maximum
    number of colors, the image didn’t look right, so we added dithering to smooth
    the transitions. But it still doesn’t look right.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 20-12](ch20s02.html#color_gradient "图 20-12. 颜色渐变")展示了一个使用Blend工具和`全饱和光谱
    CW`渐变构建的简单图像。[图 20-13](ch20s02.html#color_gradient_indexed_and_dithered "图 20-13.
    颜色渐变的索引和抖动")展示了在我们使用256种不同颜色进行索引后的同一图像。尽管我们使用了最大数量的颜色，但图像看起来不对，所以我们添加了抖动来平滑过渡。然而，它仍然看起来不对。'
- en: Among the 256 different colors available in GIF, one can be used for transparency.
    When the image is displayed on the Web, a transparent pixel lets the background
    show through. Although transparency isn’t possible with a JPEG, GIF doesn’t allow
    for progressive transparency.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在GIF格式支持的256种颜色中，其中一种可以用作透明色。当图像在网页上显示时，透明像素可以让背景透过。虽然JPEG格式不支持透明，但GIF也不支持渐进透明。
- en: Exporting to GIF
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导出为GIF
- en: When you export an image to the GIF format (`.gif`), GIMP opens the dialog shown
    in [Figure 20-14](ch20s02.html#export_image_as_gif_dialog "Figure 20-14. The Export
    Image as GIF dialog").
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将图像导出为GIF格式（`.gif`）时，GIMP会打开[图 20-14](ch20s02.html#export_image_as_gif_dialog
    "图 20-14. 导出为GIF图像对话框")所示的对话框。
- en: If you’re saving a still image, this dialog allows you only to add a comment
    and check the INTERLACE box. Interlace builds an image that displays progressively,
    which may be useful for a large image coming over a slow Internet connection.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你保存的是静态图像，该对话框仅允许你添加评论并勾选“交错”框。交错构建的图像会逐渐显示，这对于通过慢速互联网连接传输的大图像可能会有帮助。
- en: If the image has more than one layer, the option to save it as an animation
    is available. Checking AS ANIMATION expands the dialog, and you can set the animation
    parameters explained in [Output Formats](ch18s01.html#output_formats "Output Formats").
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果图像有多个图层，可以选择将其保存为动画。勾选“作为动画”将展开对话框，并且你可以设置[输出格式](ch18s01.html#output_formats
    "输出格式")中解释的动画参数。
- en: If the image is in RGB mode when you export it as a GIF, it is automatically
    converted to indexed mode using a default colormap.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果图像处于RGB模式，在你将其导出为GIF时，它会自动转换为索引模式，并使用默认的颜色映射。
- en: '![The Export Image as GIF dialog](httpatomoreillycomsourcenostarchimages1457314.png.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![导出图像为GIF对话框](httpatomoreillycomsourcenostarchimages1457314.png.jpg)'
- en: Figure 20-14. The Export Image as GIF dialog
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图20-14. 导出图像为GIF对话框
- en: 'Converting it to indexed mode (**Image: Image > Mode > Indexed**) first is
    safer; this way you can choose the colormap and whether to use dithering.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 首先将其转换为索引模式（**图像：图像 > 模式 > 索引**）是更安全的做法；这样你可以选择颜色映射并决定是否使用抖动。
- en: PNG
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PNG
- en: The Portable Network Graphics (PNG) format was first defined as a free replacement
    for GIF at the peak of the battle over the patented LZW compression algorithm
    used with GIF. PNG uses a lossless, patent-free compression algorithm and is also
    designed to avoid most of GIF’s drawbacks, including the restriction to indexed
    representation.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 便携式网络图形（PNG）格式最初在GIF的专利LZW压缩算法争夺战中被定义为一种免费的替代格式。PNG使用无损、无专利的压缩算法，并且设计上避免了GIF的大多数缺点，包括限制为索引表示。
- en: 'The PNG format became an ISO standard in 2003 and was revised a year later.
    Although PNG is clearly superior to GIF, it hasn’t completely replaced it for
    two reasons: its lack of support for animation and Microsoft’s unwillingness to
    implement it correctly in Internet Explorer. Later versions of Internet Explorer
    (7 and above) handle PNG better, however, and IE 9 seems faultless, so we have
    hope.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: PNG格式在2003年成为ISO标准，并在一年后进行了修订。尽管PNG明显优于GIF，但由于两个原因，它并未完全取代GIF：它不支持动画以及微软在Internet
    Explorer中不愿正确实现它。然而，Internet Explorer的后续版本（7及以上）对PNG的支持有所改善，IE 9似乎完美无缺，因此我们依然充满希望。
- en: PNG supports RGB, grayscale, and indexed images, but it doesn’t support other
    color spaces like CMYK. It also supports progressive transparency as an additional
    channel when the image is in RGB or grayscale mode or by adding Alpha values to
    palette entries in indexed mode.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: PNG支持RGB、灰度和索引图像，但不支持CMYK等其他色彩空间。它还支持渐进透明度，可以在图像处于RGB或灰度模式时通过附加通道来实现，或者通过向索引模式中的调色板条目添加Alpha值来实现。
- en: '![Some text in a PNG image](httpatomoreillycomsourcenostarchimages1457316.png.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![PNG图像中的一些文字](httpatomoreillycomsourcenostarchimages1457316.png.jpg)'
- en: Figure 20-15. Some text in a PNG image
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图20-15. PNG图像中的一些文字
- en: '![The same text in a JPEG image](httpatomoreillycomsourcenostarchimages1457318.png.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![JPEG图像中的相同文字](httpatomoreillycomsourcenostarchimages1457318.png.jpg)'
- en: Figure 20-16. The same text in a JPEG image
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图20-16. JPEG图像中的相同文字
- en: Because PNG uses lossless compression, it produces larger files than JPEG, but
    the format is clearly superior to JPEG in the case of a photograph on which text
    is printed. The lossy algorithm used for JPEG blurs the outline of the characters,
    as [Figure 20-15](ch20s02.html#some_text_in_a_png_image "Figure 20-15. Some text
    in a PNG image") and [Figure 20-16](ch20s02.html#same_text_in_a_jpeg_image "Figure 20-16. The
    same text in a JPEG image") show. The lossy compression used by JPEG does result
    in smaller files, however, and image quality is just as good for a photo as long
    as you select a quality factor greater than 50.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 由于PNG使用无损压缩，它生成的文件比JPEG大，但在文本打印在照片上的情况下，PNG格式明显优于JPEG。JPEG使用的有损算法会模糊字符的轮廓，如[图20-15](ch20s02.html#some_text_in_a_png_image
    "图20-15. PNG图像中的一些文字")和[图20-16](ch20s02.html#same_text_in_a_jpeg_image "图20-16.
    JPEG图像中的相同文字")所示。然而，JPEG使用的有损压缩确实能生成更小的文件，并且只要选择一个大于50的质量因子，照片的图像质量也同样优秀。
- en: Compared to GIF, PNG actually generates smaller files if the conditions are
    the same (that is, if the image is in indexed mode). If you export an RGB image
    as a PNG, it stays in RGB mode and, therefore, takes up more space because it
    contains more colors. If you first convert the image to indexed mode and then
    export it to both GIF and PNG, the PNG file is about half the size of the GIF
    file.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 与GIF相比，如果条件相同（即图像处于索引模式），PNG实际上会生成更小的文件。如果你将RGB图像导出为PNG，它将保持RGB模式，因此占用更多空间，因为它包含更多的颜色。如果你先将图像转换为索引模式，然后将其分别导出为GIF和PNG，那么PNG文件的大小大约是GIF文件的一半。
- en: The PNG format works well for all kinds of images—except animations. (But for
    photos without text, JPEG is preferable because the file size is smaller.) When
    storing simple illustrations like cartoons that have only a few colors, do not
    forget to convert the image to indexed mode before exporting it. Because the compression
    algorithm is lossless, you can repeatedly export an image as PNG without the cumulative
    deterioration seen with JPEG.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: PNG 格式适用于所有类型的图像——除动画外。（但对于没有文字的照片，JPEG 更合适，因为文件大小较小。）在存储简单插图（如只有少量颜色的卡通）时，记得在导出之前将图像转换为索引模式。由于压缩算法是无损的，你可以反复将图像导出为
    PNG，而不会出现 JPEG 中常见的累积退化问题。
- en: Exporting to PNG
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导出为 PNG
- en: 'When you export an image as a PNG (`.png`), the dialog in [Figure 20-17](ch20s02.html#export_image_as_png_dialog
    "Figure 20-17. The Export Image as PNG dialog") opens. Here are the most useful
    entries in the dialog:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将图像导出为 PNG（`.png`）时，[图 20-17](ch20s02.html#export_image_as_png_dialog "图 20-17.
    导出图像为 PNG 的对话框")中的对话框会打开。以下是对话框中最有用的条目：
- en: 'INTERLACING: This option creates an image that loads progressively.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交错：此选项创建一个逐步加载的图像。
- en: 'SAVE BACKGROUND COLOR: This option is for obsolete browsers that can’t handle
    progressive transparency. Using this option, you can choose the color that is
    displayed in place of the transparent pixels. Unfortunately, Internet Explorer
    does not recognize these settings.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存背景颜色：此选项用于不支持渐进透明度的过时浏览器。使用此选项，你可以选择在透明像素处显示的颜色。不幸的是，Internet Explorer 无法识别这些设置。
- en: 'SAVE RESOLUTION: This option is useful only if the program that opens the image
    can read the saved resolution.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存分辨率：此选项仅在打开图像的程序能够读取保存的分辨率时才有用。
- en: 'SAVE CREATION TIME: This option stores the time and date when the image was
    last saved.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存创建时间：此选项保存图像最后一次保存的时间和日期。
- en: 'SAVE COMMENT: Any comments added via **Image: Image > Image Properties** on
    the COMMENT tab are saved.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存评论：通过**图像：图像 > 图像属性**在评论选项卡中添加的任何评论都会被保存。
- en: 'SAVE COLOR VALUES FROM TRANSPARENT PIXELS: Fully transparent pixels may still
    have a color value, which will appear if the transparency is decreased or removed
    later.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存透明像素的颜色值：完全透明的像素可能仍然具有颜色值，若后来减少或移除透明度，这些颜色值将会显示出来。
- en: '![The Export Image as PNG dialog](httpatomoreillycomsourcenostarchimages1457320.png.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![导出图像为 PNG 的对话框](httpatomoreillycomsourcenostarchimages1457320.png.jpg)'
- en: Figure 20-17. The Export Image as PNG dialog
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-17. 导出图像为 PNG 的对话框
- en: 20.3 GIMP’s Native Formats
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 20.3 GIMP 的原生格式
- en: In GIMP, a work in progress often includes multiple layers, transparency, and
    an active selection. It might also have layer masks, channels containing saved
    selections, and paths. It probably also includes undo history. Anything you can
    do in GIMP can be represented by the *native format*, XCF. A native format is
    a file structure designed specifically for a piece of software.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GIMP 中，正在进行的工作通常包含多个图层、透明度和一个活动选择。它还可能包含图层蒙版、包含已保存选择的通道和路径。它可能还包括撤销历史。你在 GIMP
    中所做的任何操作都可以通过*原生格式*XCF来表示。原生格式是专为某个软件设计的文件结构。
- en: GIMP also has tools for defining new brushes, patterns, palettes, and gradients.
    Each of those also has a native format in GIMP. You can download custom brushes,
    patterns, palettes, and gradients from the Web or even create your own and post
    them for other users to download. We show you how in [Chapter 22](ch22.html "Chapter 22. Customizing
    GIMP").
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: GIMP 还提供定义新画笔、图案、调色板和渐变的工具。每一种工具也都有一个在 GIMP 中的原生格式。你可以从网上下载自定义画笔、图案、调色板和渐变，甚至可以创建自己的并发布供其他用户下载。[第
    22 章](ch22.html "第 22 章. 定制 GIMP")将向你展示如何操作。
- en: XCF
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XCF
- en: XCF is GIMP’s most important native format. When you save an image in XCF, you’re
    saving all its components, layers, layer groups, masks, channels, paths, guides,
    and so on. The only thing that isn’t saved is the undo history, which would increase
    the file size significantly.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: XCF 是 GIMP 最重要的原生格式。当你以 XCF 格式保存图像时，你保存了所有的组件、图层、图层组、蒙版、通道、路径、辅助线等。唯一未保存的是撤销历史，因为这会显著增加文件大小。
- en: XCF is the only format that is guaranteed to store all the information in an
    image that you’re working on in GIMP, and it’s the best format for a work in progress.
    If you want to store a file in another format, but you want to make additional
    changes at some point, always save a copy of your work as XCF.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: XCF 是唯一能够保证存储你在 GIMP 中正在处理的图像所有信息的格式，它是进行中工作的最佳格式。如果你想将文件保存为其他格式，但希望以后做进一步修改，始终保存一份
    XCF 格式的副本。
- en: 'Because XCF stores so much information, an XCF file can be rather large, but
    GIMP allows you to compress it using one of two lossless external compression
    algorithms: the one used by Gzip and the one used by Bzip2\. Bzip2 yields better
    results than Gzip but only by 30% or 40% at most. Bzip2 is also much slower. GIMP
    can load and save files compressed using these algorithms without first having
    to unpack the files. The compression is indicated by a second extension, which
    is either `.gz` or `.bz2`. On a GNU/Linux operating system, the suffix does not
    determinate the file format, which is specified by the file’s first few bytes,
    but it can be helpful for users.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 由于XCF存储了大量信息，XCF文件可能会相当大，但GIMP允许你使用两种无损外部压缩算法之一来压缩它：Gzip使用的算法和Bzip2使用的算法。Bzip2的效果比Gzip好，但最多只能提高30%或40%。Bzip2也要慢得多。GIMP可以加载和保存使用这些算法压缩的文件，而无需先解压文件。压缩由第二个扩展名指示，它可以是`.gz`或`.bz2`。在GNU/Linux操作系统上，后缀并不确定文件格式，文件格式由文件的前几个字节指定，但对用户来说可能有所帮助。
- en: Although XCF can be read by several other applications, including ImageMagick,
    Krita, and Inkscape, it’s not intended as a universal format.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管XCF可以被包括ImageMagick、Krita和Inkscape在内的其他几个应用程序读取，但它并不是一个通用格式。
- en: 'When you save an image with **Image: File > Save As** or ![](httpatomoreillycomsourcenostarchimages1453852.png.jpg),
    GIMP automatically assumes the file format is XCF and adds the corresponding extension
    to the filename. For all other output formats, you must export the image with
    **Image: File > Export As** or ![](httpatomoreillycomsourcenostarchimages1453856.png.jpg).
    The export commands cannot generate XCF. If an image is modified and then exported,
    GIMP does not consider the image saved and opens a warning window if you try to
    close it.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用**图像：文件 > 另存为**或![](httpatomoreillycomsourcenostarchimages1453852.png.jpg)保存图像时，GIMP会自动假定文件格式为XCF，并将相应的扩展名添加到文件名中。对于所有其他输出格式，你必须使用**图像：文件
    > 另存为**或![](httpatomoreillycomsourcenostarchimages1453856.png.jpg)导出图像。导出命令无法生成XCF。如果图像被修改然后导出，GIMP不会认为图像已保存，并在你尝试关闭时打开警告窗口。
- en: Other Native Formats
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他本机格式
- en: 'In addition to images, whose natural format is XCF, four other objects have
    their own native formats in GIMP. These are brushes, patterns, gradients, and
    palettes. Each of these objects has a specialized dockable dialog: The Brushes
    dialog, the Patterns dialog, and the Gradients dialog are present, by default,
    in the multi-dialog window; and the Palettes dialog can be opened via **Image:
    Windows > Dockable dialogs** or from the dialog menu, which you open by clicking
    the small triangle found at the top of all dockable dialogs.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 除了图片外，其自然格式为XCF，GIMP中还有四种其他对象具有自己的本机格式。这些是画笔、图案、渐变和调色板。每个对象都有一个专门的可停靠对话框：画笔对话框、图案对话框和渐变对话框默认情况下出现在多对话框窗口中；而调色板对话框可以通过**图像：窗口
    > 可停靠对话框**或从对话框菜单中打开，你可以通过点击所有可停靠对话框顶部找到的小三角形来打开对话框菜单。
- en: 'These objects are stored on the computer in special folders, which you can
    define using **Image: Edit > Preferences** in the Folders entry. Each category
    has a systemwide folder, where objects are stored when installing or updating
    GIMP, and a personal folder, where you can store objects you create.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这些对象存储在计算机上的特殊文件夹中，你可以在Folders条目中使用**图像：编辑 > 首选项**来定义这些文件夹。每个类别都有一个系统范围的文件夹，在安装或更新GIMP时存储对象，以及一个个人文件夹，你可以在其中存储你创建的对象。
- en: 'You can create, edit, or delete a brush, pattern, and palette by using the
    buttons at the bottom of the corresponding dialog. These let you do the following:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过使用相应对话框底部的按钮来创建、编辑或删除画笔、图案和调色板。这些按钮让你可以做以下事情：
- en: Edit the current object. Editing works only if the object is in the personal
    folder. Otherwise, you can only look at the characteristics of the object.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑当前对象。只有当对象在个人文件夹中时，编辑才有效。否则，你只能查看对象的特性。
- en: Create a new object.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个新对象。
- en: Duplicate the current object.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制当前对象。
- en: Delete the current object (if it’s in your personal folder).
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除当前对象（如果它在你的个人文件夹中）。
- en: Refresh the object list in the dialog.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 刷新对话框中的对象列表。
- en: You can also access these options via the dialog menu or by right-clicking a
    brush, palette, or pattern. Patterns are not built using a specific tool, so the
    Patterns dialog only contains buttons for deleting, refreshing, and opening the
    current pattern as an image.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过对话框菜单或右键单击画笔、调色板或图案来访问这些选项。图案不是使用特定工具构建的，因此图案对话框只包含用于删除、刷新和将当前图案打开为图像的按钮。
- en: Building and saving new brushes, patterns, dialogs, and palettes is described
    in [Chapter 22](ch22.html "Chapter 22. Customizing GIMP").
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 构建和保存新的画笔、图案、对话框和调色板的过程可以在[第22章](ch22.html "第22章. 自定义GIMP")中找到描述。
- en: 20.4 Other Useful Formats
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 20.4 其他有用的格式
- en: In this section, we cover the image formats that, although useful to know when
    using GIMP, are less frequently used.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍的图像格式，在使用GIMP时虽然有用，但使用频率较低。
- en: PostScript and PDF
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PostScript和PDF
- en: PostScript is not exactly an image format; rather it is a programming language,
    designed in 1982 for document page description. Early laser printers, and even
    many current ones, use PostScript to describe pages being printed. These printers
    contain an interpreter for the language, and executing this interpreter tells
    the printer where to put dots on the page.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: PostScript并不是一种图像格式；它实际上是一种编程语言，设计于1982年，用于文档页面描述。早期的激光打印机，甚至许多现在的打印机，都使用PostScript来描述正在打印的页面。这些打印机包含该语言的解释器，执行该解释器指示打印机如何在页面上放置点。
- en: PostScript is a proprietary language that belongs to Adobe, but its description
    is public. The Ghostscript interpreter is free software under GPL that lets you
    print PostScript files on printers that don’t use PostScript (for instance, on
    most inkjet printers).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: PostScript是一种专有语言，属于Adobe公司，但其描述是公开的。Ghostscript解释器是一个免费软件，遵循GPL协议，可以让你在不使用PostScript的打印机上打印PostScript文件（例如，大多数喷墨打印机）。
- en: PostScript is a vector graphics language. It rasterizes the image at the last
    moment when the printer definition is received from the printer. The character
    fonts can be defined in vector geometry and zoomed in or out without pixelation.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: PostScript是一种矢量图形语言。它会在接收到打印机定义后，在最后一刻将图像光栅化。字符字体可以通过矢量几何定义，并且可以放大或缩小而不会出现像素化。
- en: When you export an image as PostScript (`.ps`), GIMP opens the dialog shown
    in [Figure 20-18](ch20s04.html#export_image_as_postscript_dialog "Figure 20-18. The
    Export Image as PostScript dialog"). The dimensions of the image are predefined
    in millimeters or inches. You can change them, but if you do, you freeze the printer
    definition attached to the image. Leaving the conversion from image to PostScript
    to whatever application you use to add it to a document is best.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将图像导出为PostScript（`.ps`）时，GIMP会打开如[图 20-18](ch20s04.html#export_image_as_postscript_dialog
    "图 20-18. 导出为PostScript图像对话框")所示的对话框。图像的尺寸以毫米或英寸为单位预设。你可以更改它们，但如果这样做，你会固定附加到图像上的打印机定义。最好将图像到PostScript的转换留给你用于将其添加到文档的应用程序。
- en: Encapsulated PostScript (EPS) is PostScript with additional information on the
    box that encapsulates the image. This information tells the application importing
    the file the image’s exact dimensions and generally works more smoothly than regular
    PostScript when inserting an image into a document.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 封装PostScript（EPS）是带有额外信息的PostScript，该信息位于封装图像的框中。这些信息告诉导入文件的应用程序图像的精确尺寸，并且在将图像插入文档时，通常比普通PostScript更加顺畅。
- en: GIMP can also import a PostScript file using the dialog in [Figure 20-19](ch20s04.html#import_from_postscript_dialog
    "Figure 20-19. The Import from PostScript dialog"). The resolution you choose
    is very important. The image is immediately rasterized when you import it, and
    the vector information in the input file is lost.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: GIMP也可以使用[图 20-19](ch20s04.html#import_from_postscript_dialog "图 20-19. 从PostScript导入对话框")中的对话框导入PostScript文件。你选择的分辨率非常重要。导入时，图像会立即被光栅化，输入文件中的矢量信息会丢失。
- en: The Portable Document Format, generally known as PDF, is a simplified version
    of PostScript. PDF also belongs to Adobe but was accepted as an ISO standard in
    2008\. PDF is slowly replacing PostScript and offers several advantages. GIMP
    is able to import and export PDF files.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 可移植文档格式，通常称为PDF，是PostScript的简化版。PDF同样属于Adobe公司，但在2008年被接受为ISO标准。PDF正在慢慢取代PostScript，并提供了多个优势。GIMP能够导入和导出PDF文件。
- en: '![The Export Image as PostScript dialog](httpatomoreillycomsourcenostarchimages1457322.png.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![导出为PostScript图像对话框](httpatomoreillycomsourcenostarchimages1457322.png.jpg)'
- en: Figure 20-18. The Export Image as PostScript dialog
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-18. 导出为PostScript图像对话框
- en: '![The Import from PostScript dialog](httpatomoreillycomsourcenostarchimages1457324.png.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![从PostScript导入对话框](httpatomoreillycomsourcenostarchimages1457324.png.jpg)'
- en: Figure 20-19. The Import from PostScript dialog
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-19. 从PostScript导入对话框
- en: When you import a PDF file into GIMP, it opens the dialog shown in [Figure 20-20](ch20s04.html#import_from_pdf_dialog
    "Figure 20-20. The Import from PDF dialog"). You can select the input file’s resolution,
    the pages to import, and whether to import them as layers of a single image or
    as multiple images.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将 PDF 文件导入 GIMP 时，它会打开 [图 20-20](ch20s04.html#import_from_pdf_dialog "图 20-20.
    从 PDF 导入对话框")中显示的对话框。你可以选择输入文件的分辨率、要导入的页面，并决定是将它们作为单个图像的图层导入，还是作为多个图像导入。
- en: When you export an image to PDF, GIMP opens the dialog shown in [Figure 20-21](ch20s04.html#export_image_as_pdf_dialog
    "Figure 20-21. The Export Image as PDF dialog"). You can choose options for decreasing
    the size of the generated PDF file.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将图像导出为 PDF 时，GIMP 会打开 [图 20-21](ch20s04.html#export_image_as_pdf_dialog "图
    20-21. 将图像导出为 PDF 对话框")中显示的对话框。你可以选择减少生成的 PDF 文件大小的选项。
- en: '![The Import from PDF dialog](httpatomoreillycomsourcenostarchimages1457326.png.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![从 PDF 导入对话框](httpatomoreillycomsourcenostarchimages1457326.png.jpg)'
- en: Figure 20-20. The Import from PDF dialog
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-20. 从 PDF 导入对话框
- en: TIFF
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TIFF
- en: The Tagged Image File Format, also known as TIFF, is not an international standard.
    It also belongs to Adobe, was defined in the mid-1980s, and has not been updated
    since 1992.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 标记图像文件格式，也称为 TIFF，并不是国际标准。它也属于 Adobe，于1980年代中期定义，自1992年以来没有更新。
- en: TIFF is a complicated and flexible format that can use several different compression
    algorithms—lossy or lossless. It can also use different numbers of bits per color,
    different color spaces, and more. But most applications can’t handle all the TIFF
    features, which means you may lose information when transferring images from one
    application to another.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: TIFF 是一种复杂且灵活的格式，可以使用多种不同的压缩算法——有损或无损。它还可以使用不同的每颜色位数、不同的色彩空间等。但是，大多数应用程序无法处理所有
    TIFF 特性，这意味着在从一个应用程序向另一个应用程序传输图像时，可能会丢失一些信息。
- en: The TIFF format is the format of choice in scientific imaging and is widely
    accepted in the printing business, however.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，TIFF 格式是科学影像领域的首选格式，并在印刷行业得到广泛接受。
- en: '![The Export Image as PDF dialog](httpatomoreillycomsourcenostarchimages1457328.png.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![将图像导出为 PDF 对话框](httpatomoreillycomsourcenostarchimages1457328.png.jpg)'
- en: Figure 20-21. The Export Image as PDF dialog
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-21. 将图像导出为 PDF 对话框
- en: '![The Export Image as TIFF dialog](httpatomoreillycomsourcenostarchimages1457330.png.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![将图像导出为 TIFF 对话框](httpatomoreillycomsourcenostarchimages1457330.png.jpg)'
- en: Figure 20-22. The Export Image as TIFF dialog
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20-22. 将图像导出为 TIFF 对话框
- en: When you export an image in TIFF format (`.tiff`), GIMP opens the dialog shown
    in [Figure 20-22](ch20s04.html#export_image_as_tiff_dialog "Figure 20-22. The
    Export Image as TIFF dialog"). The radio buttons let you choose the compression
    algorithm. LZW, Pack Bits, and Deflate are lossless; JPEG is lossy. The two CCITT
    compression algorithms work only with black and white images (without gray levels).
    If the image contains paths, they are saved too.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将图像导出为 TIFF 格式（`.tiff`）时，GIMP 会打开 [图 20-22](ch20s04.html#export_image_as_tiff_dialog
    "图 20-22. 将图像导出为 TIFF 对话框")中显示的对话框。单选按钮允许你选择压缩算法。LZW、Pack Bits 和 Deflate 是无损的；JPEG
    是有损的。两种 CCITT 压缩算法仅适用于黑白图像（没有灰度）。如果图像包含路径，它们也会被保存。
- en: Netpbm Formats
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Netpbm 格式
- en: 'Netpbm is a public domain, portable collection of programs for converting from
    one graphic format to another. These programs handle a large set of graphic formats
    and define four new ones that are supported by GIMP:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: Netpbm 是一个公共领域的可移植程序集，用于将一种图形格式转换为另一种格式。这些程序可以处理一大批图形格式，并定义了 GIMP 支持的四种新格式：
- en: Portable Bit Map (PBM) is for bitmaps (black and white images).
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可移植位图（PBM）适用于位图（黑白图像）。
- en: Portable Gray Map (PGM) is for grayscale images.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可移植灰度图（PGM）适用于灰度图像。
- en: Portable Pixmap (PPM) is for color pixmaps.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可移植像素图（PPM）适用于彩色像素图。
- en: PNM refers to these three formats together.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PNM 一词指的是这三种格式的总和。
- en: 'Netpbm offers an additional format called PAM, but GIMP doesn’t support it.
    All these formats use a textual representation, which results in very large files.
    For example, the rose in [Figure 20-5](ch20s01.html#photo_of_a_rose_with_decreasing_image_qu
    "Figure 20-5. A photo of a rose with decreasing image quality") has the following
    sizes (the TIFF was saved with Deflate compression):'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: Netpbm 提供了一种名为 PAM 的附加格式，但 GIMP 不支持它。所有这些格式都使用文本表示方式，导致文件非常大。例如，[图 20-5](ch20s01.html#photo_of_a_rose_with_decreasing_image_qu
    "图 20-5. 一张玫瑰的照片，图像质量逐渐下降")中的玫瑰有以下大小（TIFF 文件是使用 Deflate 压缩保存的）：
- en: '| Format | Size (KB) |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| 格式 | 大小（KB） |'
- en: '| --- | --- |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| GIF | 109 |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| GIF | 109 |'
- en: '| JPEG | 26 |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| JPEG | 26 |'
- en: '| TIFF | 300 |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| TIFF | 300 |'
- en: '| PPM | 3600 |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| PPM | 3600 |'
- en: Despite their size, these formats are handy because you can convert them to
    or from almost any existing image format.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它们的体积较大，但这些格式非常方便，因为你可以将它们转换为几乎所有现有的图像格式，或者从这些格式转换出来。
- en: SVG
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SVG
- en: Scalable Vector Graphics (SVG) is the format of choice for vector graphics.
    It is an open standard defined by the World Wide Web Consortium that relies on
    the textual nature of XML. More and more application programs accept this format
    in their input files, including GIMP.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 可缩放矢量图形（SVG）是矢量图形的首选格式。它是一个由万维网联盟（W3C）定义的开放标准，依赖于 XML 的文本性质。越来越多的应用程序在其输入文件中接受这种格式，包括
    GIMP。
- en: SVG is the native format for some vector graphics programs like Inkscape (free
    software). Others, like Adobe Illustrator, CorelDRAW, Blender, or Xara Xtreme
    (the last two are free software), can import and export SVG files. Note that Adobe
    Photoshop does not offer SVG support.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: SVG 是一些矢量图形程序（如 Inkscape（免费软件））的原生格式。其他程序，如 Adobe Illustrator、CorelDRAW、Blender
    或 Xara Xtreme（后两者为免费软件），也可以导入和导出 SVG 文件。请注意，Adobe Photoshop 不支持 SVG。
- en: Most browsers can display SVG images. The only exception is Internet Explorer,
    but plug-ins are available that allow Internet Explorer to display SVG.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数浏览器都可以显示 SVG 图像。唯一的例外是 Internet Explorer，但有插件可以让 Internet Explorer 显示 SVG。
- en: GIMP can import SVG images like the one shown in [Figure 20-2](ch20s01.html#icon_enlarged_as_a_vector_image
    "Figure 20-2. The icon enlarged as a vector image"), but exporting a raster image
    to SVG is not possible, and the result probably wouldn’t look very good anyway.
    But a GIMP path can be exported to SVG.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: GIMP 可以导入像[图 20-2](ch20s01.html#icon_enlarged_as_a_vector_image "图 20-2. 放大为矢量图的图标")中所示的
    SVG 图像，但将栅格图像导出为 SVG 是不可能的，而且结果可能也不会很好看。不过，GIMP 路径可以导出为 SVG。
- en: Additional Formats Supported by GIMP
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GIMP 支持的其他格式
- en: GIMP can import Photoshop image files, which is useful for people who want to
    abandon proprietary software in favor of free software.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: GIMP 可以导入 Photoshop 图像文件，这对于那些希望放弃专有软件而转向免费软件的人来说非常有用。
- en: The BMP format is a very simple Microsoft format that lacks compression. The
    image in [Figure 20-5](ch20s01.html#photo_of_a_rose_with_decreasing_image_qu "Figure 20-5. A
    photo of a rose with decreasing image quality") takes up 1100KB when saved in
    BMP. This format is notably used for icons in the Microsoft Windows system as
    well as in OS/2\. GIMP can import and export BMP files. When exporting, you can
    choose the number of bits of the color space and the representation of the Alpha
    channel, if one exists.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: BMP 格式是一个非常简单的微软格式，缺乏压缩功能。在[图 20-5](ch20s01.html#photo_of_a_rose_with_decreasing_image_qu
    "图 20-5. 一张玫瑰照片，图像质量逐渐下降")中保存为 BMP 时，图像占用 1100KB。该格式主要用于 Microsoft Windows 系统中的图标以及
    OS/2。GIMP 可以导入和导出 BMP 文件。导出时，你可以选择颜色空间的位数以及 Alpha 通道的表示形式（如果存在的话）。
- en: The X window system (the windowing system on all Unix-like operating systems)
    uses the XPM and XBM graphic formats for icons and such. The first one is for
    pixmaps and the second one for bitmaps. Both are fully textual, so they aren’t
    suitable for large images. The image shown in [Figure 20-5](ch20s01.html#photo_of_a_rose_with_decreasing_image_qu
    "Figure 20-5. A photo of a rose with decreasing image quality") occupies 2400KB
    when exported to XPM.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: X 窗口系统（所有类 Unix 操作系统中的窗口系统）使用 XPM 和 XBM 图形格式作为图标等。第一个是用于像素图的，第二个是用于位图的。两者都是完全文本格式，因此不适用于大图像。导出为
    XPM 时，[图 20-5](ch20s01.html#photo_of_a_rose_with_decreasing_image_qu "图 20-5.
    一张玫瑰照片，图像质量逐渐下降")的图像占用 2400KB。
- en: An image format popular among professional photographers is *raw format*. We
    discuss this format in more detail in [Choosing a Format](ch19s03.html#choosing_a_format
    "Choosing a Format") and [Handling Raw Photographs](ch19s03.html#handling_raw_photographs
    "Handling Raw Photographs").
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 专业摄影师常用的一种图像格式是 *raw 格式*。我们在[选择格式](ch19s03.html#choosing_a_format "选择格式")和[处理原始照片](ch19s03.html#handling_raw_photographs
    "处理原始照片")中将更详细地讨论这种格式。
