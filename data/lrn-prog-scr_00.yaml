- en: Chapter 1. Getting Started
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第1章。入门
- en: 'Have you ever wanted to create your own computer game, animated story, tutorial,
    or science simulation? *Scratch* is a graphical programming language that makes
    it easy to create those applications and more. In this introductory chapter, you
    will:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否曾经想过自己制作一款电脑游戏、动画故事、教程或科学模拟？*Scratch*是一种图形化编程语言，它让创建这些应用变得轻松而有趣。在本章节中，你将：
- en: Explore Scratch’s programming environment
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索Scratch的编程环境
- en: Learn about different types of command blocks
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解不同类型的命令块
- en: Create your first game in Scratch
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Scratch中创建你的第一个游戏
- en: When you make a Scratch application, you can save it on your computer or upload
    it to the Scratch website, where others can comment on it and remix it into new
    projects.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当你制作一个Scratch应用时，你可以将它保存在电脑上或上传到Scratch网站，其他人可以对它进行评论，并将它改编成新的项目。
- en: Excited? Then let’s get started!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 激动了吗？那么让我们开始吧！
- en: What Is Scratch?
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是Scratch？
- en: A computer program is just a set of instructions that tell a computer what to
    do. You write these instructions using a *programming language*, and that’s where
    Scratch comes in.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机程序就是一组指令，用来告诉计算机该做什么。你通过*编程语言*来编写这些指令，这就是Scratch的作用。
- en: 'Most programming languages are *text based*, which means you have to give the
    computer commands in what looks like a cryptic form of English. For example, to
    display “Hello!” on the screen, you might write:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数编程语言是*基于文本*的，这意味着你需要用看起来像是隐晦的英语命令来给计算机下指令。例如，要在屏幕上显示“Hello！”，你可能会写：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Learning these languages and understanding their syntax rules can be challenging
    for beginners. Scratch, on the other hand, is a *visual* programming language.
    It was developed in the Massachusetts Institute of Technology (MIT) Media Lab
    to make programming easier and more fun to learn.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 学习这些语言并理解它们的语法规则对于初学者来说可能具有挑战性。另一方面，Scratch是一种*视觉*编程语言。它是由麻省理工学院（MIT）媒体实验室开发的，目的是让编程变得更加容易和有趣。
- en: In Scratch, you won’t type any complicated commands. Instead, you’ll connect
    graphical blocks together to create programs. Confused? Look at the simple program
    in [Figure 1-1](ch01.html#when_you_run_this_scratch_blockcomma_the "Figure 1-1. When
    you run this Scratch block, the cat says “Hello!” in a speech bubble."), and I’ll
    explain.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在Scratch中，你不需要输入任何复杂的命令。相反，你将连接图形块来创建程序。感到困惑吗？看一下[图 1-1](ch01.html#when_you_run_this_scratch_blockcomma_the
    "图 1-1. 当你运行这个Scratch块时，猫会在对话框中说“Hello！”")中的简单程序，我会为你解释。
- en: '![When you run this Scratch block, the cat says “Hello!” in a speech bubble.](httpatomoreillycomsourcenostarchimages2134257.png.jpg)Figure 1-1. When
    you run this Scratch block, the cat says “Hello!” in a speech bubble.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '![当你运行这个Scratch块时，猫会在对话框中说“Hello！”](httpatomoreillycomsourcenostarchimages2134257.png.jpg)图
    1-1。当你运行这个Scratch块时，猫会在对话框中说“Hello！”。'
- en: The cat that you see in [Figure 1-1](ch01.html#when_you_run_this_scratch_blockcomma_the
    "Figure 1-1. When you run this Scratch block, the cat says “Hello!” in a speech
    bubble.") is called a *sprite*. Sprites understand and obey sets of instructions
    that you give them. The purple block on the left tells the cat to display “Hello!”
    in a speech bubble. Many of the applications you’ll create in this book will contain
    multiple sprites, and you’ll use blocks to make sprites move, turn, say things,
    play music, do math, and so on.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 1-1](ch01.html#when_you_run_this_scratch_blockcomma_the "图 1-1. 当你运行这个Scratch块时，猫会在对话框中说“Hello！”")中看到的那只猫被称为*精灵*。精灵会理解并服从你给它们的指令。左侧的紫色块告诉猫在对话框中显示“Hello！”。在本书中，你将创建许多包含多个精灵的应用，并通过命令块让精灵移动、旋转、说话、播放音乐、做数学运算等等。
- en: You can program in Scratch by snapping those color-coded blocks together as
    you would puzzle pieces or LEGO bricks. The stacks of blocks that you create are
    called *scripts*. For example, [Figure 1-2](ch01.html#using_a_script_to_change_the_cat_spritea
    "Figure 1-2. Using a script to change the Cat sprite’s color") shows a script
    that changes a sprite’s color four times.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过将那些颜色编码的块像拼图块或乐高积木一样拼接在一起，在Scratch中进行编程。你创建的这些块堆叠称为*脚本*。例如，[图 1-2](ch01.html#using_a_script_to_change_the_cat_spritea
    "图 1-2. 使用脚本改变猫精灵的颜色")展示了一个改变精灵颜色四次的脚本。
- en: '![Using a script to change the Cat sprite’s color](httpatomoreillycomsourcenostarchimages2134259.png.jpg)Figure 1-2. Using
    a script to change the *Cat* sprite’s color'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '![使用脚本改变猫精灵的颜色](httpatomoreillycomsourcenostarchimages2134259.png.jpg)图 1-2。使用脚本改变*猫*精灵的颜色'
- en: This script waits for one second between color changes, and the four cats you
    see here show the sprite’s new color after each change.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本在每次颜色变化之间等待一秒钟，屏幕上看到的四只猫展示了每次变化后精灵的新颜色。
- en: Try It Out 1-1
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 试一试 1-1
- en: 'Though we haven’t discussed the blocks in [Figure 1-2](ch01.html#using_a_script_to_change_the_cat_spritea
    "Figure 1-2. Using a script to change the Cat sprite’s color") yet, read them,
    look at their shapes, and try to figure out the steps the script took to make
    the cat teal. (Hint: The first purple block returns the cat to its original color.)
    What do you think would happen if we removed the **wait** block from the script?'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们还没有讨论[图1-2](ch01.html#using_a_script_to_change_the_cat_spritea "图1-2. 使用脚本改变猫的颜色")中的积木，但请阅读它们，观察它们的形状，并尝试弄清楚这个脚本是如何让猫变成青色的。（提示：第一个紫色积木会将猫恢复到原来的颜色。）如果我们从脚本中移除**等待**积木，你认为会发生什么？
- en: This book covers Scratch 2, which was released in May 2013\. This version allows
    you to create projects directly in your web browser so you don’t have to install
    any software on your computer, and we’ll rely on Scratch’s web interface for the
    material in this book.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本书涵盖了2013年5月发布的Scratch 2版本。这个版本允许你直接在网页浏览器中创建项目，因此你无需在计算机上安装任何软件，我们将依赖Scratch的网页界面来讲解本书的内容。
- en: Now, that you know a little about this language, it’s time to kick off our programming
    journey and learn how to use it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，既然你对这种编程语言有所了解，是时候开始我们的编程之旅，并学习如何使用它了。
- en: Scratch Programming Environment
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Scratch编程环境
- en: To start Scratch, go to the Scratch website (*[http://scratch.mit.edu/](http://scratch.mit.edu/)*)
    and click the *TRY IT OUT* link. This should take you to Scratch’s project editor
    interface, shown in [Figure 1-3](ch01.html#scratch_user_interfacecomma_where_youapo
    "Figure 1-3. The Scratch user interface, where you’ll build your programs").
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动Scratch，访问Scratch网站 (*[http://scratch.mit.edu/](http://scratch.mit.edu/)*),
    然后点击*TRY IT OUT*链接。这将把你带到Scratch的项目编辑器界面，如[图1-3](ch01.html#scratch_user_interfacecomma_where_youapo
    "图1-3. Scratch用户界面，你将在此构建程序")所示。
- en: '![The Scratch user interface, where you’ll build your programs](httpatomoreillycomsourcenostarchimages2134261.png.jpg)Figure 1-3. The
    Scratch user interface, where you’ll build your programs'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '![Scratch用户界面，你将在此构建程序](httpatomoreillycomsourcenostarchimages2134261.png.jpg)图1-3.
    Scratch用户界面，你将在此构建程序'
- en: 'You should see a single window with at least the following three panes: the
    Stage (top left), the Sprite List (bottom left), and the Scripts tab (right),
    which contains the Blocks tab and the Scripts Area. The right pane also contains
    two additional tabs, Costumes and Sounds, which will be discussed later in this
    section. If you’re logged into an account on the Scratch website, you should also
    see the Backpack (bottom right), which has buttons that let you share your project
    and use sprites and scripts from existing projects.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到一个单一的窗口，其中至少包含以下三个面板：舞台（左上），精灵列表（左下），以及脚本标签页（右侧），该标签页包含积木标签页和脚本区域。右侧面板还包含两个额外的标签页，分别是服装和声音，稍后将在本节中讨论。如果你已登录Scratch网站的账户，你还应该看到背包（右下角），它有一些按钮，让你可以分享项目，并使用已有项目中的精灵和脚本。
- en: Let’s take a quick look at the three main panes.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们快速看一下三个主要面板。
- en: The Stage
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 舞台
- en: The *Stage* is where your sprites move, draw, and interact. The Stage is 480
    steps wide and 360 steps tall, as illustrated in [Figure 1-4](ch01.html#stage_is_like_a_coordinate_plane_with_po
    "Figure 1-4. The Stage is like a coordinate plane with point (0,0) in the center.").
    The center of the Stage has an *x*-coordinate of 0 and a *y*-coordinate of 0.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*舞台*是你的角色（精灵）移动、绘图和交互的地方。舞台宽度为480步，高度为360步，如[图1-4](ch01.html#stage_is_like_a_coordinate_plane_with_po
    "图1-4. 舞台像一个坐标平面，中心点为(0,0)")所示。舞台的中心点* x *坐标为0，* y *坐标也为0。'
- en: '![The Stage is like a coordinate plane with point (0,0) in the center.](httpatomoreillycomsourcenostarchimages2134263.png.jpg)Figure 1-4. The
    Stage is like a coordinate plane with point (0,0) in the center.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![舞台像一个坐标平面，中心点为(0,0)](httpatomoreillycomsourcenostarchimages2134263.png.jpg)图1-4.
    舞台像一个坐标平面，中心点为(0,0)。'
- en: You can find the (*x*,*y*) coordinates of any point on the Stage by moving the
    mouse cursor to that point and watching the numbers in the Mouse (*x*,*y*) Display
    Area, located directly below the Stage.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过将鼠标光标移到舞台上的任何点，观察鼠标(*x*, *y*)显示区域中的数字，来找到该点的(*x*,*y*)坐标，该区域位于舞台正下方。
- en: The small bar located above the Stage has several controls. The Presentation
    mode icon ① hides all scripts and programming tools and makes the Stage area take
    up almost your entire monitor. The edit box ② shows the name of the current project.
    The green flag ③ and stop ④ icons let you start and end your program.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 位于舞台上方的小工具栏有多个控件。演示模式图标 ① 隐藏所有脚本和编程工具，使舞台区域几乎占据整个显示器。编辑框 ② 显示当前项目的名称。绿色旗帜 ③
    和停止 ④ 图标让你开始和结束程序。
- en: Try It Out 1-2
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试 1-2
- en: Move the mouse around the Stage and watch the Mouse Display Area. What happens
    when you move the mouse outside the Stage area? Now, switch to Presentation mode
    and watch how the screen changes. Click the ![](httpatomoreillycomsourcenostarchimages2134265.png.jpg)
    icon in the top left of the screen or press ESC on your keyboard to exit Presentation
    mode.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 移动鼠标到舞台周围并观察鼠标显示区域。当你将鼠标移出舞台区域时会发生什么？现在，切换到演示模式并观察屏幕如何变化。点击屏幕左上角的 ![](httpatomoreillycomsourcenostarchimages2134265.png.jpg)
    图标，或按下键盘上的 ESC 键退出演示模式。
- en: Sprite List
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 精灵列表
- en: The Sprite List displays names and thumbnails for all the sprites in your project.
    New projects begin with a white Stage and a single cat-costumed sprite, as illustrated
    in [Figure 1-5](ch01.html#sprite_list_for_a_new_project "Figure 1-5. The Sprite
    List for a new project").
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 精灵列表显示项目中所有精灵的名称和缩略图。新项目开始时会有一个白色的舞台和一个穿着猫服的精灵，如 [图1-5](ch01.html#sprite_list_for_a_new_project
    "图1-5. 新项目的精灵列表") 所示。
- en: '![The Sprite List for a new project](httpatomoreillycomsourcenostarchimages2134267.png.jpg)Figure 1-5. The
    Sprite List for a new project'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![新项目的精灵列表](httpatomoreillycomsourcenostarchimages2134267.png.jpg)图1-5. 新项目的精灵列表'
- en: 'The buttons above the Sprite List let you add new sprites to your project from
    one of four places: Scratch’s sprite library ①, the built-in Paint Editor ② (where
    you can draw your own costume), a camera connected to your computer ③, or your
    computer ④.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 精灵列表上方的按钮让你从四个地方将新精灵添加到项目中：Scratch 的精灵库 ①，内置的绘图编辑器 ②（你可以在这里绘制自己的服装），连接到你计算机的摄像头
    ③，或你的计算机 ④。
- en: Try It Out 1-3
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试 1-3
- en: Add new sprites to your project using some of the buttons located above the
    Sprite List. Rearrange the sprites in the Sprite List by dragging their corresponding
    thumbnails.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用位于精灵列表上方的一些按钮将新精灵添加到项目中。通过拖动相应的缩略图来重新排列精灵列表中的精灵。
- en: Each sprite in your project has its own scripts, costumes, and sounds. You can
    select any sprite to see its belongings. Either (1) click the sprite’s thumbnail
    in the Sprite List or (2) double-click the sprite itself on the Stage. The currently
    selected sprite thumbnail is always highlighted and outlined with a blue border.
    When you select a sprite, you can access its scripts, costumes, and sounds by
    clicking one of the three tabs located above the Scripts Area. We’ll look at the
    contents of these tabs later. For now, right-click (or CTRL-click if you’re using
    a Mac) the `Cat` sprite’s thumbnail to see the popup menu shown in [Figure 1-6](ch01.html#right-clicking_a_spriteapostrophes_thumb
    "Figure 1-6. Right-clicking a sprite’s thumbnail shows this handy menu.").
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 项目中的每个精灵都有自己的脚本、服装和声音。你可以选择任何精灵来查看其属性。你可以通过 (1) 点击精灵列表中的缩略图，或 (2) 双击舞台上的精灵本身来选择精灵。当前选中的精灵缩略图会被高亮显示，并且用蓝色边框框住。当你选择一个精灵时，你可以通过点击脚本区域上方的三个标签之一来访问其脚本、服装和声音。我们稍后会查看这些标签的内容。目前，右键点击
    (或在 Mac 上按住 CTRL 键点击) `Cat` 精灵的缩略图，查看弹出的菜单，如 [图1-6](ch01.html#right-clicking_a_spriteapostrophes_thumb
    "图1-6. 右键点击精灵缩略图会显示这个方便的菜单。") 所示。
- en: The duplicate option ① copies the sprite and gives the copy a different name.
    You can remove a sprite from your project with delete ②, and you can export a
    sprite to a *.sprite2* file on your computer using the save to local file option
    ③. (To import an exported sprite into another project, just click the Upload sprite
    from file button shown in [Figure 1-5](ch01.html#sprite_list_for_a_new_project
    "Figure 1-5. The Sprite List for a new project").) The hide/show option ④ allows
    you to change whether a sprite on the Stage is visible or not.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 复制选项 ① 会复制精灵并为副本指定一个不同的名称。你可以使用删除 ② 删除项目中的精灵，也可以使用保存到本地文件选项 ③ 将精灵导出为 *.sprite2*
    文件到你的计算机。（要将导出的精灵导入到另一个项目中，只需点击 [图1-5](ch01.html#sprite_list_for_a_new_project
    "图1-5. 新项目的精灵列表") 中显示的“从文件上传精灵”按钮。）隐藏/显示选项 ④ 允许你更改舞台上精灵是否可见。
- en: '![Right-clicking a sprite’s thumbnail shows this handy menu.](httpatomoreillycomsourcenostarchimages2134269.png.jpg)Figure 1-6. Right-clicking
    a sprite’s thumbnail shows this handy menu.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '![右键点击角色的缩略图显示此快捷菜单。](httpatomoreillycomsourcenostarchimages2134269.png.jpg)图1-6.
    右键点击角色的缩略图显示此快捷菜单。'
- en: Along with thumbnails for your sprites, the Sprite List also shows a thumbnail
    of the Stage to the left (see [Figure 1-6](ch01.html#right-clicking_a_spriteapostrophes_thumb
    "Figure 1-6. Right-clicking a sprite’s thumbnail shows this handy menu.")). The
    Stage has its own set of scripts, images, and sounds. The background image you
    see on the Stage is called a *backdrop*. When you start a new project, the Stage
    defaults to a plain, white backdrop, but you can add new backdrop images with
    any of the four buttons below the Stage’s thumbnail. Click on the Stage icon in
    the Sprite List to view and edit its associated scripts, backdrops, and sounds.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的角色缩略图旁边，角色列表还显示舞台的缩略图（参见[图1-6](ch01.html#right-clicking_a_spriteapostrophes_thumb
    "图1-6. 右键点击角色的缩略图显示此快捷菜单")）。舞台有自己的脚本、图像和声音。你在舞台上看到的背景图像叫做*背景*。当你开始一个新项目时，舞台的背景默认为简单的白色背景，但你可以通过舞台缩略图下方的四个按钮添加新的背景图像。点击角色列表中的舞台图标可以查看并编辑其相关的脚本、背景和声音。
- en: Blocks Tab
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 积木标签
- en: 'Blocks in Scratch are divided into 10 categories (palettes): *Motion*, *Looks*,
    *Sound*, *Pen*, *Data*, *Events*, *Control*, *Sensing*, *Operators*, and *More
    Blocks*. Blocks are color coded to help you find related blocks easily. Scratch
    2 has more than 100 blocks, though some blocks only appear under certain conditions.
    For example, blocks in the *Data* palette (discussed in [Chapter 5](ch05.html
    "Chapter 5. Variables") and [Chapter 9](ch09.html "Chapter 9. Lists")) appear
    only after a variable or a list is created. Let’s look at the various components
    of the Blocks tab in [Figure 1-7](ch01.html#enlarged_view_of_the_blocks_tab "Figure 1-7. An
    enlarged view of the Blocks tab").'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch中的积木分为10个类别（调色板）：*运动*、*外观*、*声音*、*画笔*、*数据*、*事件*、*控制*、*感知*、*运算符*和*更多积木*。为了帮助你轻松找到相关的积木，积木通过颜色编码。Scratch
    2有超过100个积木，尽管有些积木仅在特定条件下出现。例如，*数据*调色板中的积木（在[第5章](ch05.html "第5章. 变量")和[第9章](ch09.html
    "第9章. 列表")中讨论）只有在创建了变量或列表之后才会出现。让我们查看[图1-7](ch01.html#enlarged_view_of_the_blocks_tab
    "图1-7. 积木标签的放大视图")中的积木标签的各个组成部分。
- en: '![An enlarged view of the Blocks tab](httpatomoreillycomsourcenostarchimages2134271.png.jpg)Figure 1-7. An
    enlarged view of the Blocks tab'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![积木标签的放大视图](httpatomoreillycomsourcenostarchimages2134271.png.jpg)图1-7. 积木标签的放大视图'
- en: Try clicking a block to see what it does. If you click **move 10 steps** on
    the *Motion* palette, for example, the sprite will move 10 steps on the Stage.
    Click it again, and the sprite moves another 10 steps. Click the **say Hello!
    for 2 secs** block (in the *Looks* palette) to make the sprite display “Hello!”
    in a speech bubble for two seconds. You can also access the help screen of a block
    by selecting *Block help* (the question mark icon) from the toolbar and clicking
    the block you’re confused about.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 试着点击一个积木，看看它会做什么。例如，如果你点击*运动*调色板中的**移动10步**，角色将在舞台上移动10步。再点击一次，角色再移动10步。点击**说“Hello!”2秒**积木（在*外观*调色板中），让角色在气泡框中显示“Hello!”持续两秒。你还可以通过从工具栏中选择*积木帮助*（问号图标）并点击你不理解的积木来访问该积木的帮助界面。
- en: Some blocks require one or more inputs (also called *arguments*) that tell the
    block what to do. The number 10 in the **move 10 steps** block is an example of
    an argument. Look at [Figure 1-8](ch01.html#changing_the_inputs_of_different_types_o
    "Figure 1-8. Changing the inputs of different types of blocks") to see the different
    ways blocks let you change their inputs.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 有些积木需要一个或多个输入（也叫做*参数*），这些输入告诉积木应该做什么。比如，**移动10步**积木中的数字10就是一个参数。查看[图1-8](ch01.html#changing_the_inputs_of_different_types_o
    "图1-8. 更改不同类型积木的输入")，了解积木如何让你改变它们的输入。
- en: '![Changing the inputs of different types of blocks](httpatomoreillycomsourcenostarchimages2134273.png.jpg)Figure 1-8. Changing
    the inputs of different types of blocks'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![更改不同类型积木的输入](httpatomoreillycomsourcenostarchimages2134273.png.jpg)图1-8.
    更改不同类型积木的输入'
- en: You can change the number of steps in **move 10 steps** by clicking the white
    area where you see the 10 and entering a new number ①, perhaps 30 as you see in
    [Figure 1-8](ch01.html#changing_the_inputs_of_different_types_o "Figure 1-8. Changing
    the inputs of different types of blocks"). Some blocks, like **point in direction
    90**, also have pull-down menus for their inputs ②. You can click the down arrow
    to see a list of available options and select one. This particular command has
    a white editable area, so you could also just type a value inside the white box.
    Other blocks, like **point towards** ③, will force you to choose a value from
    the drop-down menu.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过点击**move 10 steps**中的白色区域（看到数字10的地方）并输入一个新的数字①来更改步数，可能是30，就像你在[图 1-8](ch01.html#changing_the_inputs_of_different_types_o
    "图 1-8. 更改不同类型积木的输入")中看到的那样。一些积木，如**point in direction 90**，也有下拉菜单供你选择其输入②。你可以点击向下箭头查看可用选项列表并选择一个。这个特定命令有一个白色可编辑区域，所以你也可以直接在白色框内输入一个值。其他积木，如**point
    towards**③，会强制你从下拉菜单中选择一个值。
- en: Try It Out 1-4
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 练习 1-4
- en: Go to the *Looks* palette, change the values of block inputs, and click the
    blocks to see what they do. For example, experiment with the **set color effect
    to** block. Try numbers like 10, 20, 30, and so on until the cat returns to its
    original color. Try the options in the drop-down menu with different numbers.
    You can click the **clear graphic effects** block (also in the *Looks* palette)
    to remove your changes.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 进入*外观*面板，改变积木输入的值，然后点击积木看看它们的作用。例如，尝试**set color effect to**积木。试试数字10、20、30等等，直到猫恢复原本的颜色。使用下拉菜单中的选项并尝试不同的数字。你可以点击**clear
    graphic effects**积木（也在*外观*面板中）来清除你所做的更改。
- en: Scripts Area
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 脚本区域
- en: To make a sprite do interesting things, you need to program it by dragging blocks
    from the Blocks tab to the Scripts Area and snapping them together. When you drag
    a block around the Scripts Area, a white highlight indicates where you can drop
    that block to form a valid connection with another block ([Figure 1-9](ch01.html#drag_blocks_into_the_scripts_area_and_sn
    "Figure 1-9. Drag blocks into the Scripts Area and snap them together to create
    scripts.")). Scratch blocks only snap together in certain ways, eliminating the
    typing errors that tend to occur when people use text-based programming languages.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要让一个精灵做有趣的事情，你需要通过从“积木”标签页拖动积木到“脚本区域”并将它们拼接在一起进行编程。当你在“脚本区域”内拖动积木时，白色高亮会指示你可以将该积木放置的位置，以便与另一个积木形成有效连接（[图 1-9](ch01.html#drag_blocks_into_the_scripts_area_and_sn
    "图 1-9. 将积木拖入脚本区域并将它们拼接在一起创建脚本。")）。Scratch 积木只有在某些特定的方式下才能拼接在一起，这样避免了使用基于文本的编程语言时常见的输入错误。
- en: '![Drag blocks into the Scripts Area and snap them together to create scripts.](httpatomoreillycomsourcenostarchimages2134275.png.jpg)Figure 1-9. Drag
    blocks into the Scripts Area and snap them together to create scripts.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![将积木拖入脚本区域并将它们拼接在一起创建脚本。](httpatomoreillycomsourcenostarchimages2134275.png.jpg)图 1-9.
    将积木拖入脚本区域并将它们拼接在一起创建脚本。'
- en: You don’t need to complete scripts to run them, which means that you can test
    your script as you build it. Clicking anywhere on a script, complete or partial,
    runs the entire script, from top to bottom.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要完成脚本就能运行它，这意味着你可以在构建脚本时测试它。点击脚本中的任何地方，无论是完整的还是部分的，都会运行整个脚本，从上到下。
- en: Try It Out 1-5
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 练习 1-5
- en: Start a new Scratch project and create the script below for the `Cat` sprite.
    (The **forever** block is in the *Control* palette, and the other blocks are in
    the *Motion* palette.)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 启动一个新的 Scratch 项目，并为`Cat`精灵创建以下脚本。（**forever**积木在*控制*面板中，其他积木则在*运动*面板中。）
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages2134277.png.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![无标题的图像](httpatomoreillycomsourcenostarchimages2134277.png.jpg)'
- en: You’ll learn about most of these blocks in [Chapter 2](ch02.html "Chapter 2. Motion
    and Drawing"). For now, click your new script to run it. (Scratch should highlight
    the running script with a glowing yellow border, as shown in the right side of
    the image.) You can even change a block’s inputs and add new blocks to a script
    while it runs! For example, change the number in the **move** block and watch
    how the cat’s motion changes. Click the script one more time to stop it.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在[第 2 章](ch02.html "第 2 章. 运动与绘图")中了解这些积木的大部分。现在，点击你的新脚本运行它。（Scratch 应该会用一个发光的黄色边框高亮显示正在运行的脚本，正如图像右侧所示。）你甚至可以在脚本运行时更改积木的输入并添加新的积木！例如，更改**move**积木中的数字，看看猫的运动如何变化。再点击一次脚本来停止它。
- en: You can also easily disassemble a stack of blocks and test each individually.
    This will be an invaluable strategy when you’re trying to understand long scripts.
    To move an entire stack of blocks, grab the top block of the stack. To detach
    a block in the middle of a stack and all the blocks below it, grab it and drag
    it. Go ahead and try this out.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以轻松地拆解一堆积木并分别测试每个积木。当你尝试理解长脚本时，这将是一个非常宝贵的策略。要移动整堆积木，抓住堆顶的积木。要从堆中间分离出一个积木以及它下面的所有积木，抓住它并拖动。试试看吧。
- en: This feature also allows you to build your project one piece at a time. You
    can connect small chunks of blocks, test them to make sure they work as intended,
    and then combine them into larger scripts.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能还允许你逐步构建项目。你可以连接一小块积木，测试它们是否按预期工作，然后将它们组合成更大的脚本。
- en: You can even copy a stack of blocks from one sprite to another. Just drag the
    stack from the Scripts Area of the source sprite to the thumbnail of the destination
    sprite in the Sprite List.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你甚至可以将一堆积木从一个精灵复制到另一个精灵。只需将堆积木从源精灵的脚本区拖动到目标精灵的缩略图上。
- en: Try It Out 1-6
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试一下 1-6
- en: Add another sprite to your project. Drag the script from the `Cat` sprite and
    drop it over the thumbnail of the new sprite. Your mouse arrow must be on top
    of the new sprite’s thumbnail for the drop to succeed. Check the Scripts tab of
    the new sprite to make sure that it has an identical copy of the script.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 向你的项目中添加另一个精灵。将`Cat`精灵的脚本从脚本区拖动并放到新精灵的缩略图上。你的鼠标箭头必须停留在新精灵的缩略图上，才能成功放置。检查新精灵的脚本标签，确保它有一个与原脚本完全相同的副本。
- en: Costumes Tab
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 服装标签
- en: You can change what a sprite looks like by changing its costume, which is just
    an image. The Costumes tab contains everything you need to organize your sprite’s
    costumes; you could think of it like a clothes closet. The closet can have many
    costumes, but a sprite can wear only one at a time.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过更换精灵的服装来改变它的外观，而服装本质上只是一个图像。服装标签包含了你组织精灵服装所需的一切；你可以把它当作一个衣柜。衣柜里可以有许多服装，但精灵一次只能穿一个。
- en: 'Let’s try changing the `Cat` sprite’s costume now. Click the thumbnail of the
    `Cat` sprite and select the Costumes tab. As illustrated in [Figure 1-10](ch01.html#you_can_organize_all_the_costumes_for_a
    "Figure 1-10. You can organize all the costumes for a sprite from the Costumes
    tab."), the `Cat` has two costumes: `costume1` and `costume2`. The highlighted
    costume (`costume1` in this case) represents the sprite’s current costume.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们试试更换`Cat`精灵的服装。点击`Cat`精灵的缩略图并选择服装标签。如[图 1-10](ch01.html#you_can_organize_all_the_costumes_for_a
    "图 1-10。你可以通过服装标签组织精灵的所有服装。")所示，`Cat`有两个服装：`costume1`和`costume2`。高亮显示的服装（此例中为`costume1`）表示精灵当前的服装。
- en: '![You can organize all the costumes for a sprite from the Costumes tab.](httpatomoreillycomsourcenostarchimages2134279.png.jpg)Figure 1-10. You
    can organize all the costumes for a sprite from the Costumes tab.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '![你可以通过服装标签组织精灵的所有服装。](httpatomoreillycomsourcenostarchimages2134279.png.jpg)图
    1-10。你可以通过服装标签组织精灵的所有服装。'
- en: 'If you right-click on a costume’s thumbnail, you’ll see a pop-up menu with
    three options: (1) duplicate, (2) delete, and (3) save to local file. The first
    option adds a new costume with an image identical to that of the costume you duplicated.
    The delete option deletes the selected costume. The last option allows you to
    save the costume to a file. You can import that costume and use it in a different
    project using the Upload costume from file button (the third button in [Figure 1-10](ch01.html#you_can_organize_all_the_costumes_for_a
    "Figure 1-10. You can organize all the costumes for a sprite from the Costumes
    tab.")). Go ahead and try these options out.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你右键点击一个服装的缩略图，你会看到一个弹出菜单，包含三个选项：（1）复制，（2）删除，以及（3）保存到本地文件。第一个选项会添加一个与您复制的服装图像完全相同的新服装。删除选项会删除选中的服装。最后一个选项允许你将服装保存到文件中。你可以通过“从文件上传服装”按钮将该服装导入并在其他项目中使用（这是[图
    1-10](ch01.html#you_can_organize_all_the_costumes_for_a "图 1-10。你可以通过服装标签组织精灵的所有服装。")中的第三个按钮）。试试看这些选项吧。
- en: Try It Out 1-7
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试一下 1-7
- en: Click the first button above the cat’s image in [Figure 1-10](ch01.html#you_can_organize_all_the_costumes_for_a
    "Figure 1-10. You can organize all the costumes for a sprite from the Costumes
    tab.") to choose a new costume from Scratch’s library. Then select any image you
    like from the window that appears. Apply some of the tips in [Figure 1-10](ch01.html#you_can_organize_all_the_costumes_for_a
    "Figure 1-10. You can organize all the costumes for a sprite from the Costumes
    tab.") to become more familiar with the costume options.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 点击[图1-10](ch01.html#you_can_organize_all_the_costumes_for_a "图1-10。你可以从服装标签中组织所有精灵的服装。")中猫咪图片上方的第一个按钮，从Scratch的库中选择一个新服装。然后从出现的窗口中选择你喜欢的任何图片。应用[图1-10](ch01.html#you_can_organize_all_the_costumes_for_a
    "图1-10。你可以从服装标签中组织所有精灵的服装。")中的一些提示，来更熟悉服装选项。
- en: Sounds Tab
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 声音标签
- en: Sprites can also play sounds, which liven up your programs. You can, for example,
    give a sprite different sounds to use when it’s happy or sad. If your game contains
    a sprite that looks like a missile, you could make the missile generate different
    sounds when it hits or misses a target.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 精灵也可以播放声音，这能为你的程序增添生气。例如，你可以为一个精灵设置不同的声音，当它高兴或伤心时播放。如果你的游戏中有一个像导弹一样的精灵，当它击中或未击中目标时，可以让导弹播放不同的声音。
- en: The buttons in the Sounds tab will help you organize the different sounds your
    sprites can play. As shown in [Figure 1-11](ch01.html#sounds_tab_allows_you_to_organize_the_so
    "Figure 1-11. The Sounds tab allows you to organize the sounds of a sprite."),
    Scratch even provides a tool you can use to edit sound files. I won’t discuss
    the details of this tool in this book, but I encourage you to experiment with
    it on your own.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 声音标签中的按钮将帮助你组织精灵可以播放的不同声音。如[图1-11](ch01.html#sounds_tab_allows_you_to_organize_the_so
    "图1-11。声音标签可以让你组织精灵的声音。")所示，Scratch甚至提供了一个工具，可以用来编辑声音文件。我在本书中不会讨论这个工具的细节，但我鼓励你自己尝试使用它。
- en: '![The Sounds tab allows you to organize the sounds of a sprite.](httpatomoreillycomsourcenostarchimages2134281.png.jpg)Figure 1-11. The
    Sounds tab allows you to organize the sounds of a sprite.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![声音标签可以让你组织精灵的声音。](https://atomoreillycomsourcenostarchimages2134281.png.jpg)图1-11。声音标签可以让你组织精灵的声音。'
- en: Most of the time, you’ll need only the three buttons at the top of the Sounds
    tab. They allow you to choose a sound from Scratch’s sound library ①, record a
    new sound ② (if you have a microphone), or import an existing sound file from
    your computer ③. Scratch can read only MP3 and WAV sound files.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，你只需要使用声音标签顶部的三个按钮。它们允许你从Scratch的声音库中选择一个声音①，录制一个新声音②（如果你有麦克风的话），或者从你的计算机中导入一个现有的声音文件③。Scratch只支持MP3和WAV格式的声音文件。
- en: Try It Out 1-8
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 试试看 1-8
- en: Select the Sounds tab and click the **Choose sound from library** button. Listen
    to the various sounds that are available in Scratch to get some ideas for your
    future projects.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 选择声音标签并点击**从库中选择声音**按钮。试听Scratch中提供的各种声音，以便为你未来的项目获得一些灵感。
- en: Backdrops Tab
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 背景标签
- en: When you select the thumbnail of the Stage in the Sprite List, the name of the
    middle tab changes from *Costumes* to *Backdrops*. Use this tab to organize the
    Stage’s background images, which you can change with your scripts. For example,
    if you’re creating a game, you might show one backdrop with instructions to begin
    and then switch to another when the user starts the game. The Backdrops tab is
    identical to the Costumes tab.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在精灵列表中选择舞台的缩略图时，中间标签的名称将从*服装*更改为*背景*。使用这个标签可以组织舞台的背景图片，你可以通过脚本来更改这些背景。例如，如果你正在创建一个游戏，你可能会在游戏开始时显示一个带有说明的背景，然后在用户开始游戏时切换到另一个背景。背景标签与服装标签是一样的。
- en: Try It Out 1-9
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 试试看 1-9
- en: Click the **Choose backdrop from library** button below the thumbnail of the
    Stage in the Sprite List. Select the xy-grid backdrop from the window that appears
    and click OK. Scratch will add the xy-grid to your project and make it the default
    backdrop. (The xy-grid shows a 2-D Cartesian plane, which is useful when you’re
    working with the Motion command blocks.) Repeat these steps and select any other
    backdrop that you like.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 点击精灵列表中舞台缩略图下方的**从库中选择背景**按钮。从出现的窗口中选择xy网格背景，然后点击确定。Scratch将把xy网格添加到你的项目中，并设为默认背景。（xy网格显示的是一个二维的笛卡尔平面，当你使用运动命令块时非常有用。）重复这些步骤，选择你喜欢的其他背景。
- en: Sprite Info
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 精灵信息
- en: You can view the sprite info area by clicking the small ![](httpatomoreillycomsourcenostarchimages2134283.png)
    icon at the top-left edge of a sprite’s thumbnail, as illustrated in [Figure 1-12](ch01.html#sprite_info_area
    "Figure 1-12. Sprite info area"). This area shows the sprite’s name, its current
    (*x*,*y*) position and direction, its rotation style and visibility state, and
    whether it can be dragged in Presentation mode. Let’s briefly talk about each
    of these options.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过点击精灵缩略图左上角的小 ![](httpatomoreillycomsourcenostarchimages2134283.png) 图标来查看精灵信息区域，如[图1-12](ch01.html#sprite_info_area
    "图1-12. 精灵信息区域")所示。这个区域显示了精灵的名称、当前的 (*x*, *y*) 位置和方向、旋转样式和可见状态，以及它是否可以在演示模式下被拖动。让我们简要了解一下这些选项。
- en: '![Sprite info area](httpatomoreillycomsourcenostarchimages2134285.png.jpg)Figure 1-12. Sprite
    info area'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![精灵信息区域](httpatomoreillycomsourcenostarchimages2134285.png.jpg)图1-12. 精灵信息区域'
- en: The edit box ① at the top of this area allows you to change the sprite’s name.
    You’ll use this box many times in this book.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 该区域顶部的编辑框①允许你更改精灵的名称。你将在本书中多次使用这个框。
- en: The *x* and *y* values ② show the sprite’s current position on the Stage. Drag
    the sprite onto the Stage and watch what happens to these numbers.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '*x* 和 *y* 值②显示精灵在舞台上的当前位置。将精灵拖到舞台上，观察这些数字发生了什么变化。'
- en: The sprite’s direction ③ indicates which direction the sprite will move in response
    to a movement block. Drag the blue line emanating from the center of the circle
    icon to rotate the sprite.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 精灵的方向③表示精灵在接收到移动块时将朝哪个方向移动。拖动从圆形图标中心发出的蓝色线条来旋转精灵。
- en: The three rotation-style buttons ④ (named Rotate, Left-right flip, and No rotate)
    control how the costume appears as the sprite changes its direction. To understand
    the effect of these buttons, create the script shown in [Figure 1-13](ch01.html#script_for_demonstrating_rotation_styles
    "Figure 1-13. Script for demonstrating rotation styles") and then click each of
    these buttons while the script is running. You can find the **wait** block in
    the *Control* palette.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 三个旋转样式按钮④（分别命名为旋转、左右翻转和不旋转）控制精灵在改变方向时服装的显示方式。为了理解这些按钮的效果，请创建[图1-13](ch01.html#script_for_demonstrating_rotation_styles
    "图1-13. 用于演示旋转样式的脚本")中所示的脚本，然后在脚本运行时点击每个按钮。你可以在*控制*调色板中找到**等待**块。
- en: The Can drag in player checkbox ⑤ indicates whether or not the sprite can be
    dragged (using the mouse) in Presentation mode. Switch to Presentation mode with
    this box checked/ unchecked and try to drag the sprite across the Stage to understand
    the effect of this checkbox.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: “在播放器中可拖动”复选框⑤表示精灵是否可以在演示模式下被拖动（使用鼠标）。切换到演示模式并勾选/取消勾选此框，尝试将精灵拖动到舞台上，了解这个复选框的效果。
- en: '![Script for demonstrating rotation styles](httpatomoreillycomsourcenostarchimages2134287.png.jpg)Figure 1-13. Script
    for demonstrating rotation styles'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![用于演示旋转样式的脚本](httpatomoreillycomsourcenostarchimages2134287.png.jpg)图1-13.
    用于演示旋转样式的脚本'
- en: The Show checkbox ⑥ allows you to show/hide the sprite at program design time.
    Try it out and see what happens. You’ll see several examples of hidden sprites
    that do useful work behind the scenes in many examples throughout this book.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: “显示”复选框⑥允许你在程序设计时显示/隐藏精灵。试试看，观察会发生什么。你将在本书的许多例子中看到一些隐藏的精灵，它们在幕后做着有用的工作。
- en: Toolbar
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工具栏
- en: Let’s take a quick look at Scratch’s toolbar in [Figure 1-14](ch01.html#scratchapostrophes_toolbar
    "Figure 1-14. Scratch’s toolbar"), starting with some of the buttons. (The toolbar
    will look slightly different if you are signed in, as covered in Appendix A.)
    Use the Duplicate and Delete buttons to copy and remove sprites, costumes, sounds,
    blocks, or scripts. The Grow button makes sprites bigger, while the Shrink button
    makes them smaller. Just click the button you want to use and then click on a
    sprite (or a script) to apply that action. To return to the arrow cursor, click
    on any blank area of the screen. You can use the Language menu to change the language
    of the user interface.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速看一下[图1-14](ch01.html#scratchapostrophes_toolbar "图1-14. Scratch的工具栏")中Scratch的工具栏，首先介绍一些按钮。（如果你已登录，工具栏会略有不同，具体内容请见附录A。）使用“复制”和“删除”按钮来复制和移除精灵、服装、声音、积木或脚本。“放大”按钮可以让精灵变大，而“缩小”按钮则可以让它们变小。只需点击你想使用的按钮，然后点击精灵（或脚本）来应用该操作。要返回到箭头光标，点击屏幕上的任何空白区域。你可以使用语言菜单来更改界面的语言。
- en: '![Scratch’s toolbar](httpatomoreillycomsourcenostarchimages2134289.png.jpg)Figure 1-14. Scratch’s
    toolbar'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '![Scratch的工具栏](httpatomoreillycomsourcenostarchimages2134289.png.jpg)图1-14.
    Scratch的工具栏'
- en: From the File menu, you can create new projects, upload (open) an existing project
    from your computer, download (save) the current project to your computer, or revert
    (undo) all your changes to the current project. Scratch 2 projects have an *.sb2*
    file extension to distinguish them from projects created in the previous version
    of Scratch (*.sb*).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件菜单中，你可以创建新的项目，上传（打开）计算机中的现有项目，下载（保存）当前项目到计算机，或者还原（撤销）当前项目的所有更改。Scratch 2
    项目的文件扩展名为 *.sb2*，以便与在 Scratch 先前版本中创建的项目（*.sb*）区分开来。
- en: In the Edit menu, Undelete will bring back the last block, script, sprite, costume,
    or sound you deleted. The Small stage layout option shrinks the Stage and gives
    the Scripts Area more room. Selecting Turbo mode increases the speed of some blocks.
    For example, executing a **move** block 1,000 times may take about 70 seconds
    in normal mode and about 0.2 seconds in Turbo mode.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑菜单中，“撤销删除”会恢复你最后删除的块、脚本、精灵、服装或音效。小舞台布局选项会缩小舞台，并为脚本区域提供更多空间。选择“加速模式”可以提高某些块的执行速度。例如，在普通模式下执行
    **move** 块 1,000 次可能需要大约 70 秒，而在加速模式下只需大约 0.2 秒。
- en: Now that you’ve seen the essentials of the Scratch toolbar, we’ll talk briefly
    about Scratch’s built-in Paint Editor.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了 Scratch 工具栏的基本功能，我们将简要介绍一下 Scratch 内置的画图编辑器。
- en: Paint Editor
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 画图编辑器
- en: You can use the Paint Editor ([Figure 1-15](ch01.html#scratchapostrophes_paint_editor
    "Figure 1-15. Scratch’s Paint Editor")) to create or edit costumes and backdrops.
    (Of course, you’re free to use your favorite image-editing program, too.) If you
    want to learn more about Scratch’s Paint Editor, check out *ScratchPaintEditor.pdf*
    (located in the online resources, which can be downloaded from *[http://nostarch.com/learnscratch/](http://nostarch.com/learnscratch/)*).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用画图编辑器（[图 1-15](ch01.html#scratchapostrophes_paint_editor "图 1-15. Scratch
    的画图编辑器")）来创建或编辑服装和背景。（当然，你也可以自由使用你喜欢的图像编辑程序。）如果你想了解更多关于 Scratch 画图编辑器的信息，可以查看
    *ScratchPaintEditor.pdf*（位于在线资源中，可以从 *[http://nostarch.com/learnscratch/](http://nostarch.com/learnscratch/)*
    下载）。
- en: '![Scratch’s Paint Editor](httpatomoreillycomsourcenostarchimages2134291.png.jpg)Figure 1-15. Scratch’s
    Paint Editor'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '![Scratch 的画图编辑器](httpatomoreillycomsourcenostarchimages2134291.png.jpg)图 1-15.
    Scratch 的画图编辑器'
- en: 'For now, there are two important features you’ll need to know about: setting
    the center of an image and setting the transparent color. I’ll explain these features
    in the following sections.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，你需要了解的两个重要功能是：设置图像的中心和设置透明颜色。我将在接下来的章节中解释这些功能。
- en: Setting the Center of an Image
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置图像的中心
- en: When you command a sprite to turn (left or right), it will turn with respect
    to a reference point—the center of its costume. The Set costume center button
    (in the upper-right corner of the Paint Editor) allows you to choose that center.
    When you click this button, you’ll see crosshairs on the drawing area, as shown
    in [Figure 1-16](ch01.html#changing_a_costumeapostrophes_center_aft "Figure 1-16. Changing
    a costume’s center after clicking the Set costume center button"). The center
    point is determined by the intersection of these two axes, so to shift a costume’s
    center, just drag them to a new position. To hide the axes, click the same button
    again.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当你指令一个精灵转动（左转或右转）时，它会围绕参考点——即其服装的中心——进行旋转。点击画图编辑器右上角的“设置服装中心”按钮可以让你选择该中心。点击此按钮后，你将在绘图区域看到十字准线，如图
    [1-16](ch01.html#changing_a_costumeapostrophes_center_aft "图 1-16. 点击“设置服装中心”按钮后更改服装中心")
    所示。中心点由这两条轴的交点决定，因此，要移动服装的中心，只需将它们拖动到新的位置。要隐藏这些轴线，再次点击相同的按钮。
- en: '![Changing a costume’s center after clicking the Set costume center button](httpatomoreillycomsourcenostarchimages2134293.png.jpg)Figure 1-16. Changing
    a costume’s center after clicking the Set costume center buttonTry It Out 1-10'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '![点击“设置服装中心”按钮后更改服装中心](httpatomoreillycomsourcenostarchimages2134293.png.jpg)图
    1-16. 点击“设置服装中心”按钮后更改服装中心，试一试 1-10'
- en: '*RotationCenter.sb2*'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '*RotationCenter.sb2*'
- en: Open *RotationCenter.sb2* and run it. This application contains a single sprite
    with the costume and script shown below. The costume center is set in the middle
    of the square. Run the script and notice the pattern. Then edit the costume to
    set its center in the middle of the circle and run the script again to see how
    the picture changes.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 *RotationCenter.sb2* 并运行它。该应用包含一个精灵，其服装和脚本如下所示。服装中心设定在正方形的中心。运行脚本并注意其模式。然后编辑服装，将其中心设定在圆形的中心，再次运行脚本，看看图像如何变化。
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages2134295.png.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![没有标题的图像](httpatomoreillycomsourcenostarchimages2134295.png.jpg)'
- en: Setting Transparent Color
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置透明颜色
- en: When two images overlap, the top image will cover some part of the bottom image.
    Similarly, sprites cover parts of the Stage. If you want to see what the Stage
    looks like behind an image, you need to use the Paint Editor to make at least
    part of that image *transparent*, as the penguin on the right is in [Figure 1-17](ch01.html#you_can_make_any_part_of_an_image_transp
    "Figure 1-17. You can make any part of an image transparent by filling it with
    the “transparent” color.").
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当两幅图像重叠时，顶部的图像会覆盖底部图像的一部分。同样，精灵会覆盖舞台的一部分。如果你想看到图像背后的舞台样子，你需要使用绘图编辑器将图像的至少一部分设为*透明*，就像右侧的企鹅图像所示，见[图1-17](ch01.html#you_can_make_any_part_of_an_image_transp
    "图1-17。你可以通过用“透明”颜色填充图像的某部分，使其变得透明。")。
- en: In the *Color* palette, just click the square with a diagonal red line and paint
    with that “transparent” color to make something invisible. You can think of this
    icon as a “No Color” sign, similar to a “No Smoking” sign with a red bar across
    a cigarette.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在*颜色*调色板中，点击带有对角红线的方块，用“透明”颜色涂抹以使某部分变得不可见。你可以将此图标视为“无颜色”标志，类似于“禁止吸烟”标志上有一条红线穿过香烟。
- en: '![You can make any part of an image transparent by filling it with the “transparent”
    color.](httpatomoreillycomsourcenostarchimages2134297.png.jpg)Figure 1-17. You
    can make any part of an image transparent by filling it with the “transparent”
    color.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '![你可以通过用“透明”颜色填充图像的某部分，使其变得透明。](httpatomoreillycomsourcenostarchimages2134297.png.jpg)图1-17。你可以通过用“透明”颜色填充图像的某部分，使其变得透明。'
- en: 'Now that you know your way around the Scratch interface, we’ll put that knowledge
    to good use and make something fun. Roll up your sleeves and get ready: We’re
    making a game!'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经熟悉了 Scratch 界面，我们将好好利用这些知识，制作一些有趣的东西。卷起袖子，准备好：我们要做一个游戏了！
- en: Your First Scratch Game
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的第一个 Scratch 游戏
- en: '*Pong.sb2*'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '*Pong.sb2*'
- en: '*Pong_NoCode.sb2*'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '*Pong_NoCode.sb2*'
- en: In this section, you’ll create a single-player game in which players will move
    a paddle to keep a bouncing tennis ball from hitting the floor, based on the classic
    arcade game Pong. The user interface for our game is illustrated in [Figure 1-18](ch01.html#our_game_screen
    "Figure 1-18. Our game screen").
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，你将创建一个单人游戏，玩家需要移动挡板，以防止弹跳的网球撞击地面，灵感来自经典的街机游戏 Pong。我们的游戏界面如[图1-18](ch01.html#our_game_screen
    "图1-18。我们的游戏界面")所示。
- en: '![Our game screen](httpatomoreillycomsourcenostarchimages2134299.png.jpg)Figure 1-18. Our
    game screen'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![我们的游戏界面](httpatomoreillycomsourcenostarchimages2134299.png.jpg)图1-18。我们的游戏界面'
- en: As shown in the figure, the ball starts at the top of the Stage and moves down
    at some random angle, bouncing off the edges of the Stage. The player moves the
    paddle horizontally (using the mouse) to send the ball back up. If the ball touches
    the bottom of the Stage, it’s game over.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，球从舞台顶部开始，以某个随机角度向下移动，并在舞台边缘弹跳。玩家水平移动挡板（使用鼠标）将球送回上方。如果球触及舞台底部，则游戏结束。
- en: We’ll build this game one step at a time, but first we need to open a fresh
    project. Select **File**▸**New** to start a new Scratch project. Then delete the
    `Cat` sprite by right-clicking it and selecting **delete** from the pop-up menu.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将一步步构建这个游戏，但首先我们需要打开一个新的项目。选择**文件**▸**新建**以开始一个新的 Scratch 项目。然后通过右键点击 `Cat`
    精灵并选择弹出菜单中的**删除**来删除该精灵。
- en: 'Step 1: Prepare the Backdrop'
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第一步：准备背景
- en: To detect when the ball misses the paddle, we’ll mark the bottom of the Stage
    with a certain color and use the **touching color ?** block (from the *Sensing*
    palette) to tell us when the ball touches that color. Our current backdrop is
    white, so we can just draw a thin, colored rectangle at the bottom, as shown in
    [Figure 1-19](ch01.html#steps_for_drawing_a_rectangle_at_the_bot "Figure 1-19. The
    steps for drawing a rectangle at the bottom of the backdrop image").
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检测球是否错过了挡板，我们将在舞台底部标记某种颜色，并使用**接触颜色？**积木（来自*传感*调色板）来判断球是否触碰到该颜色。我们当前的背景是白色，所以我们只需要在底部绘制一个细长的彩色矩形，如[图1-19](ch01.html#steps_for_drawing_a_rectangle_at_the_bot
    "图1-19。绘制背景图像底部矩形的步骤")所示。
- en: '![The steps for drawing a rectangle at the bottom of the backdrop image](httpatomoreillycomsourcenostarchimages2134301.png.jpg)Figure 1-19. The
    steps for drawing a rectangle at the bottom of the backdrop image'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![绘制背景图像底部矩形的步骤](httpatomoreillycomsourcenostarchimages2134301.png.jpg)图1-19。绘制背景图像底部矩形的步骤'
- en: Click the thumbnail of the Stage to select it and then go to the Backdrops tab.
    Follow the steps in [Figure 1-19](ch01.html#steps_for_drawing_a_rectangle_at_the_bot
    "Figure 1-19. The steps for drawing a rectangle at the bottom of the backdrop
    image") to draw a thin rectangle at the bottom of the Stage’s backdrop.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 点击舞台缩略图选择它，然后转到背景标签页。按照[图 1-19](ch01.html#steps_for_drawing_a_rectangle_at_the_bot
    "图 1-19. 在背景图底部绘制矩形的步骤")中的步骤，在舞台背景的底部绘制一个细长的矩形。
- en: 'Step 2: Add the Paddle and Ball'
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 2 步：添加挡板和球
- en: Click the **Paint new sprite** button above the Sprite List to add the `Paddle`
    sprite to your project. Since the paddle is just a thin, short rectangle, repeat
    what you did in Step 1 to draw a paddle like the one in [Figure 1-18](ch01.html#our_game_screen
    "Figure 1-18. Our game screen"). Color the paddle any way you want and set the
    center approximately in the middle of the rectangle.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 点击精灵列表上方的**绘制新精灵**按钮，将`Paddle`精灵添加到你的项目中。由于挡板只是一个细长的短矩形，重复步骤 1 中的操作，绘制一个像[图
    1-18](ch01.html#our_game_screen "图 1-18. 我们的游戏屏幕")中的挡板。随意给挡板上色，并将其中心大致设置在矩形的中间。
- en: Next, name the sprite something that explains what it is; I called it `Paddle`.
    Also, click the paddle image on the Stage and move it so that its *y*-coordinate
    is about –120.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将精灵命名为能够解释它是什么的名称；我叫它`Paddle`。同时，点击舞台上的挡板图像并移动它，使其*y*坐标大约为-120。
- en: Our game has a paddle now, but we still need a ball to bounce around, so click
    **Choose sprite from library** above the Sprite List to import one. In the dialog
    that appears, click the **Things** category and select the **Tennis Ball** image
    to add that sprite to your project. Rename the sprite as `Ball`.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的游戏现在有了一个挡板，但我们还需要一个球来弹跳，所以点击**从库中选择精灵**，从精灵列表上方导入一个。在弹出的对话框中，点击**物品**类别，选择**网球**图像，将该精灵添加到项目中。将精灵重命名为`Ball`。
- en: Before you start working on scripts for the game, select **File** ▸ **Download
    to your computer** to save what you’ve done so far to your computer. In the dialog
    that appears, select the folder where you want to save your work, name the file
    *Pong.sb2*, and click **Save**. If you are currently signed in, you can also save
    your work on the *cloud* (that is, on a Scratch server). Whether you decide to
    save your files locally (on your computer) or on the cloud, make sure to save
    your work often.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始为游戏编写脚本之前，选择**文件** ▸ **下载到你的电脑**，将目前为止的工作保存到电脑上。在弹出的对话框中，选择你想要保存工作的文件夹，命名文件为*Pong.sb2*，然后点击**保存**。如果你当前已登录，还可以将工作保存到*云端*（即，Scratch
    服务器上）。无论你选择将文件保存在本地（电脑上）还是云端，都要记得经常保存工作。
- en: With the `Paddle` and `Ball` sprites, the Stage should look similar to [Figure 1-18](ch01.html#our_game_screen
    "Figure 1-18. Our game screen"). If you encounter any difficulties at this time,
    you can open the file *Pong_NoCode.sb2*, which contains everything we just created.
    You’ll add the scripts to run the game next, but don’t worry too much about the
    details of the blocks. We’ll explore all of them later in the book, so for now,
    let’s focus on learning to put a complete project together.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，拥有`Paddle`和`Ball`精灵后，舞台应类似于[图 1-18](ch01.html#our_game_screen "图 1-18. 我们的游戏屏幕")。如果此时遇到任何困难，你可以打开文件*Pong_NoCode.sb2*，它包含了我们刚才创建的所有内容。接下来你将为游戏添加脚本，但不用太担心区块的细节。我们稍后会在书中深入探讨这些区块，所以现在让我们专注于学习如何将一个完整的项目组合在一起。
- en: 'Step 3: Start the Game and Get Your Sprites Moving'
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 3 步：开始游戏并让你的精灵动起来
- en: As the designer for this game, you’ll decide how players can start a new round.
    For example, the game could begin when you press a key, click a sprite on the
    Stage, or even clap or wave your hands (if you have a webcam). The green flag
    icon (located above the Stage) is another popular option, which we’ll use here.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 作为这个游戏的设计师，你将决定玩家如何开始新的一局游戏。例如，游戏可以在按下某个键、点击舞台上的一个精灵，或者甚至拍手或挥手（如果你有摄像头）时开始。绿色旗帜图标（位于舞台上方）是另一个流行的选择，我们将在这里使用它。
- en: The idea is simple. Any scripts that start with the **when green flag clicked**
    trigger block start running when you press that button. The flag turns bright
    green and stays that way until the scripts finish. To see this in action, create
    the script shown in [Figure 1-20](ch01.html#script_for_the_paddle_sprite "Figure 1-20. The
    script for the Paddle sprite") for the `Paddle` sprite.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法很简单。任何以**当点击绿旗时**触发的脚本都会在你按下该按钮时开始运行。旗帜变为亮绿色，并保持这样，直到脚本完成。要看到这一过程，请为`Paddle`精灵创建[图
    1-20](ch01.html#script_for_the_paddle_sprite "图 1-20. 挡板精灵的脚本")中显示的脚本。
- en: '![The script for the Paddle sprite](httpatomoreillycomsourcenostarchimages2134303.png.jpg)Figure 1-20. The
    script for the *`Paddle`* sprite'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '![挡板精灵的脚本](httpatomoreillycomsourcenostarchimages2134303.png.jpg)图 1-20. *`Paddle`*
    精灵的脚本'
- en: 'When the green flag is clicked ①, the **go to x: y:** block ② sets the paddle’s
    vertical position to –120, just in case you previously moved it with the mouse.
    The paddle should hover just above the pink rectangle at the bottom of the Stage,
    so if your rectangle is thicker, change its position number to something that
    works for your design.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '当点击绿色旗帜时①，**go to x: y:**块②将挡板的垂直位置设置为–120，以防你之前用鼠标移动过它。挡板应该悬浮在舞台底部粉色矩形的上方，如果你的矩形较厚，可以调整其位置数字，使其适应你的设计。'
- en: The script then uses a **forever** block ③ to constantly check the mouse position.
    We’ll move the paddle back and forth by matching the paddle’s *x*-position to
    that of the mouse ④. Run the script (by clicking the green flag icon) and try
    moving your mouse horizontally; the paddle should follow. Click the stop icon
    next to the green flag to stop the script.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本接着使用**forever**块③来不断检查鼠标位置。我们将通过将挡板的* x *位置与鼠标位置匹配，来使挡板来回移动④。运行脚本（点击绿色旗帜图标），然后尝试水平移动鼠标；挡板应该会跟随鼠标移动。点击绿色旗帜旁边的停止图标来停止脚本。
- en: The script for the `Ball` sprite is a little longer than the previous one, so
    I’ll break it down into simple chunks. The ball should start moving when we click
    the green flag, so first, add the script in [Figure 1-21](ch01.html#first_part_of_the_ball_sprite_script
    "Figure 1-21. The first part of the Ball sprite script") to the `Ball` sprite.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '`Ball`精灵的脚本比之前的长一些，因此我将其分解成简单的部分。当点击绿色旗帜时，球应该开始移动，所以首先，将[图 1-21](ch01.html#first_part_of_the_ball_sprite_script
    "图 1-21. `Ball`精灵脚本的第一部分")中的脚本添加到`Ball`精灵中。'
- en: '![The first part of the Ball sprite script](httpatomoreillycomsourcenostarchimages2134305.png.jpg)Figure 1-21. The
    first part of the *`Ball`* sprite script'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '![`Ball`精灵脚本的第一部分](httpatomoreillycomsourcenostarchimages2134305.png.jpg)图
    1-21. *`Ball`* 精灵脚本的第一部分'
- en: First, we move the ball to the top of the stage ① and make it point down at
    a random angle using the **pick random** block ② (from the *Operators* palette).
    The script then uses a **forever** block ③ to move the ball ④ across the Stage
    and bounce ⑤ off the edges. Click the green flag to test what you’ve written so
    far. The ball should move in a zigzag pattern, and the paddle should still follow
    your mouse.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将球移到舞台顶部①，并使用**pick random**块②（来自*Operators*调色板）让它朝一个随机角度指向下方。然后，脚本使用**forever**块③来使球④在舞台上移动，并从边缘反弹⑤。点击绿色旗帜测试到目前为止写的部分。球应该呈之字形移动，挡板应该仍然跟随你的鼠标。
- en: Try It Out 1-11
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 试试看 1-11
- en: Replace the 12 inside the **move** block with different values, run the script,
    and watch what happens. This should give you an idea of how to make the game easier
    or harder to play. Click the stop icon when you’re done.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 将**move**块中的12替换为不同的值，运行脚本并观察发生了什么。这应该能让你了解如何让游戏变得更容易或更难。完成后，点击停止图标。
- en: Now, it’s time to add the fun part—the blocks that make the ball bounce off
    the paddle. We can modify the **forever** block we just created so the ball travels
    upward when it hits the paddle, as shown in [Figure 1-22](ch01.html#adding_code_to_kick_the_ball_up
    "Figure 1-22. Adding code to kick the ball up").
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是添加有趣部分的时候了——让球从挡板反弹的块。我们可以修改刚刚创建的**forever**块，使得球在击中挡板后朝上移动，如[图 1-22](ch01.html#adding_code_to_kick_the_ball_up
    "图 1-22. 添加代码以将球踢起")所示。
- en: '![Adding code to kick the ball up](httpatomoreillycomsourcenostarchimages2134307.png.jpg)Figure 1-22. Adding
    code to kick the ball up'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '![添加代码以将球踢起](httpatomoreillycomsourcenostarchimages2134307.png.jpg)图 1-22.
    添加代码以将球踢起'
- en: When the ball and paddle touch, we command the ball to point in a random direction
    between –30 and 30\. When the **forever** block goes for the next round, it will
    execute the **move** block, which will now cause the ball to go up. Click the
    green flag again to test this part of the game. Click the stop icon when you are
    sure the ball is bouncing off of the paddle as it’s supposed to.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 当球和挡板碰撞时，我们指示球朝一个–30到30之间的随机方向移动。当**forever**块进入下一轮时，它将执行**move**块，这样就会使球向上移动。再次点击绿色旗帜测试游戏的这一部分。当你确认球按照预期从挡板反弹时，点击停止图标。
- en: The only piece we’re missing now is some code to stop the game when the ball
    touches the bottom of the Stage. Add the script shown in [Figure 1-23](ch01.html#blocks_for_ending_the_game
    "Figure 1-23. The blocks for ending the game") to the `Ball` sprite, either right
    before or after the **if** block in [Figure 1-22](ch01.html#adding_code_to_kick_the_ball_up
    "Figure 1-22. Adding code to kick the ball up"). You’ll find the **touching color
    ?** block in the *Sensing* palette and the **stop** block in the *Control* palette.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在唯一缺少的部分是一些代码，用于在小球触碰到舞台底部时停止游戏。将[图1-23](ch01.html#blocks_for_ending_the_game
    "图1-23. 结束游戏的代码块")中显示的脚本添加到`Ball`角色中，位置可以在[图1-22](ch01.html#adding_code_to_kick_the_ball_up
    "图1-22. 添加使小球向上弹的代码")的**if**代码块前面或后面。你会在*感应*面板中找到**touching color ?**代码块，并在*控制*面板中找到**stop**代码块。
- en: '![The blocks for ending the game](httpatomoreillycomsourcenostarchimages2134309.png.jpg)Figure 1-23. The
    blocks for ending the game'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '![结束游戏的代码块](httpatomoreillycomsourcenostarchimages2134309.png.jpg)图1-23. 结束游戏的代码块'
- en: 'When you click the mouse over the colored square inside the **touching color?**
    block, the cursor will change to a hand cursor. When you move that cursor and
    click over the light pink rectangle at the bottom of the Stage, the colored square
    inside the block should match the rectangle’s color. The **stop all** block does
    exactly what its name says: It stops all running scripts in all sprites, and the
    `Paddle` and the `Ball` sprites are no exception.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在**touching color?**代码块内点击彩色方块时，光标会变成手型光标。将光标移动并点击舞台底部的浅粉色矩形时，代码块内的彩色方块应该与矩形的颜色匹配。**stop
    all**代码块正如其名称所示：它会停止所有角色中运行的脚本，`Paddle`和`Ball`角色也不例外。
- en: This basic pong game is now fully functional. Click the green flag and play
    it a couple of times to test it out. After seeing that you can create a whole
    game with such a small amount of code, I hope you agree with me that Scratch is
    amazing!
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这个基本的乒乓球游戏现在已经完全功能化了。点击绿色旗帜并测试几次游戏，看看你能用这么少的代码创建一个完整的游戏。我希望你能和我一样认为Scratch真的很棒！
- en: 'Step 4: Spice It Up with Sound'
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第四步：用声音增加趣味
- en: Of course, games are more fun when they have sound, so let’s add one final touch
    to play a noise every time we hit the ball.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，游戏有声音会更有趣，因此让我们再添加最后一个触动，每当击中小球时播放一个声音。
- en: Double-click the ball on the Stage to select it and then select the Sounds tab.
    Click the **Choose sound from library** button to add a sound to the `Ball` sprite.
    In the dialog that appears, select the **Effects** category, choose the **pop**
    sound, and click **OK** to add it to the Sounds tab. After that, go back to the
    Scripts tab and insert a **play sound** block (from the *Sound* palette), as shown
    in [Figure 1-24](ch01.html#playing_a_sound_when_the_ball_touches_th "Figure 1-24. Playing
    a sound when the ball touches the paddle").
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 双击舞台上的小球以选择它，然后选择“声音”选项卡。点击**从库中选择声音**按钮，为`Ball`角色添加一个声音。在弹出的对话框中，选择**效果**类别，选择**pop**声音，点击**确定**将其添加到声音选项卡。之后，回到脚本选项卡，并插入一个**播放声音**代码块（来自*声音*面板），如[图1-24](ch01.html#playing_a_sound_when_the_ball_touches_th
    "图1-24. 当小球触碰到挡板时播放声音")所示。
- en: '![Playing a sound when the ball touches the paddle](httpatomoreillycomsourcenostarchimages2134311.png.jpg)Figure 1-24. Playing
    a sound when the ball touches the paddle'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '![当小球触碰到挡板时播放声音](httpatomoreillycomsourcenostarchimages2134311.png.jpg)图1-24.
    当小球触碰到挡板时播放声音'
- en: Test the game once more, and this time, you should hear a short “pop” every
    time the ball touches the paddle.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 再次测试游戏，这一次，每当小球触碰到挡板时，你应该能听到一个短促的“啪”的声音。
- en: Congratulations! Your game is now complete (unless, of course, you want to add
    more features to it), and you just wrote your first Scratch program. If you’d
    like to experiment some more, try duplicating the `Ball` sprite to have two (or
    more) balls in your game and see how that changes the way you play!
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你的游戏现在已经完成（当然，如果你想添加更多功能，还是可以继续改进的），你刚刚编写了你的第一个Scratch程序。如果你想继续实验，可以尝试复制`Ball`角色，让游戏中有两个（或更多）小球，看看这会如何改变游戏玩法！
- en: In the next section, I’ll introduce the different types of blocks available
    in Scratch. As you continue through this book, you’ll really dig into how those
    blocks work, but for now, we’ll just go over them briefly.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我将介绍Scratch中可用的不同类型的代码块。随着你继续阅读本书，你将深入了解这些代码块的工作原理，但现在我们只简要介绍一下它们。
- en: 'Scratch Blocks: An Overview'
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Scratch代码块：概述
- en: In this section, you’ll learn about the different blocks available in Scratch,
    their names, and their intended usage. The goal is to define some of the terms
    that you’ll read in the next chapters. You can come back to this section as you
    progress if you need to refresh your memory.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将了解Scratch中不同积木的名称及其预期用途。目标是定义你将在接下来几章中阅读的一些术语。如果需要刷新记忆，你可以在进度过程中随时返回本节。
- en: 'As shown in [Figure 1-25](ch01.html#four_types_of_blocks_available_in_scratc
    "Figure 1-25. The four types of blocks available in Scratch"), Scratch has four
    kinds of blocks: command blocks, function blocks, trigger blocks, and control
    blocks. *Command blocks* and *control blocks* (also called *stack* blocks) have
    bumps on the bottom and/or notches on the top. You can snap these blocks together
    into stacks. *Trigger blocks*, also called *hats*, have rounded tops because they
    are placed at the top of a stack. Trigger blocks connect events to scripts. They
    wait for an event—such as a key press or mouse click—and run the blocks underneath
    them when that event happens. For example, all scripts that start with the **when
    green flag clicked** block will run when the user clicks the green flag icon.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图1-25](ch01.html#four_types_of_blocks_available_in_scratc "图1-25. Scratch中的四种类型的积木")所示，Scratch有四种类型的积木：命令积木、功能积木、触发积木和控制积木。*命令积木*和*控制积木*（也叫*堆叠*积木）底部有凸起或顶部有凹口。你可以将这些积木拼接在一起，形成堆叠。*触发积木*，也叫*帽子*，顶部是圆形的，因为它们位于堆叠的顶部。触发积木将事件与脚本连接。当某个事件（如按下键或点击鼠标）发生时，它们会运行下方的积木。例如，所有以**点击绿色旗帜时**积木开始的脚本都会在用户点击绿色旗帜图标时运行。
- en: '![The four types of blocks available in Scratch](httpatomoreillycomsourcenostarchimages2134313.png.jpg)Figure 1-25. The
    four types of blocks available in Scratch'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '![Scratch中的四种类型的积木](httpatomoreillycomsourcenostarchimages2134313.png.jpg)图1-25.
    Scratch中的四种类型的积木'
- en: '*Function blocks* (also called *reporters*) don’t have notches or bumps. They
    can’t form a layer of a script alone; instead, they’re used as inputs to other
    blocks. The shapes of these blocks indicate the type of data they return. For
    example, blocks with rounded ends report numbers or strings, whereas blocks with
    pointed ends report whether something is true or false. This is illustrated in
    [Figure 1-26](ch01.html#shape_of_a_function_block_indicates_the "Figure 1-26. The
    shape of a function block indicates the type of data it returns.").'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '*功能积木*（也叫*报告者*）没有底部的凸起或顶部的凹口。它们不能单独构成脚本的一层；相反，它们作为输入提供给其他积木。这些积木的形状表示它们返回的数据类型。例如，带有圆形末端的积木报告数字或字符串，而带有尖形末端的积木则报告某事是否为真或假。如[图1-26](ch01.html#shape_of_a_function_block_indicates_the
    "图1-26. 功能积木的形状表示它返回的数据类型")所示。'
- en: '![The shape of a function block indicates the type of data it returns.](httpatomoreillycomsourcenostarchimages2134315.png.jpg)Figure 1-26. The
    shape of a function block indicates the type of data it returns.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![功能积木的形状表示它返回的数据类型](httpatomoreillycomsourcenostarchimages2134315.png.jpg)图1-26.
    功能积木的形状表示它返回的数据类型'
- en: Some function blocks have a checkbox next to them. If you check the box, a *monitor*
    appears on the Stage to display the current value of the reporter. Select a sprite
    and check the box on the **x position** block (in the *Motion* palette). Then
    drag the sprite around the Stage and watch that monitor. It should change as you
    move the sprite back and forth.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 一些功能积木旁边有一个复选框。如果你勾选该框，舞台上会出现一个*监视器*，显示当前报告者的值。选择一个精灵并勾选**x 位置**积木（在*运动*面板中）。然后将精灵拖动到舞台上，观察那个监视器。当你来回移动精灵时，监视器的值应该会发生变化。
- en: Arithmetic Operators and Functions
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 算术运算符和函数
- en: Now, let’s take a quick look at the arithmetic operators and functions supported
    in Scratch. If you’ve lost your calculator, then your worries are over! You could
    make your own calculator in Scratch with the blocks from the *Operators* palette,
    which you’ll explore in this section.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们快速了解Scratch支持的算术运算符和函数。如果你丢了计算器，那就不必担心了！你可以使用*运算符*面板中的积木在Scratch中制作一个自己的计算器，本节将带你探索这些积木。
- en: Arithmetic Operators
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 算术运算符
- en: Scratch supports the four basic arithmetic operations of addition (**+**), subtraction
    (**-**), multiplication (*****), and division (**/**). The blocks used to perform
    these operations, called *operators*, are shown in [Figure 1-27](ch01.html#arithmetic_operators_in_scratch
    "Figure 1-27. Arithmetic operators in Scratch"). Since these blocks produce a
    number, you can use them as inputs to any block that accepts numbers, as demonstrated
    in this figure.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch 支持四种基本的算术运算：加法（**+**）、减法（**-**）、乘法（*****）和除法（**/**）。用于执行这些运算的块，称为 *运算符*，如
    [图 1-27](ch01.html#arithmetic_operators_in_scratch "图 1-27. Scratch 中的算术运算符")
    所示。由于这些块生成一个数字，你可以将它们作为输入传递给任何接受数字的块，如图中所示。
- en: '![Arithmetic operators in Scratch](httpatomoreillycomsourcenostarchimages2134317.png.jpg)Figure 1-27. Arithmetic
    operators in Scratch'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '![Scratch 中的算术运算符](httpatomoreillycomsourcenostarchimages2134317.png.jpg) 图
    1-27. Scratch 中的算术运算符'
- en: Scratch also supports the modulus (**mod**) operator, which returns the remainder
    of the division of two numbers. For example, **10 mod 3** returns 1 because the
    remainder of dividing 10 by 3 is 1\. A common use of the modulus operator is to
    test the divisibility of one *integer* (whole number) by another (smaller) integer.
    A modulus of 0 indicates that the larger number is divisible by the smaller number.
    Does this give you an idea for checking whether a number is even or odd?
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch 还支持取模（**mod**）运算符，该运算符返回两个数字相除的余数。例如，**10 mod 3** 返回 1，因为 10 除以 3 的余数是
    1。取模运算符的常见用途是测试一个 *整数*（整数）是否能被另一个（较小的）整数整除。取模为 0 表示较大的数字能被较小的数字整除。这个概念是否能帮助你理解如何判断一个数字是偶数还是奇数？
- en: Another useful operator supported by Scratch is the **round** operator, which
    rounds decimal numbers to the nearest whole number. For example, **round(3.1)**
    = 3, **round(3.5)** = 4, and **round(3.6)** = 4.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch 还支持另一个有用的运算符 **round**，它将小数数字四舍五入到最接近的整数。例如，**round(3.1)** = 3，**round(3.5)**
    = 4，**round(3.6)** = 4。
- en: Random Numbers
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 随机数
- en: As you program more often, you’ll probably need to generate random numbers at
    some point, especially if you create games and simulations. Scratch provides the
    **pick random** block specifically for this purpose.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你编程经验的增加，你可能会需要在某些时候生成随机数，尤其是在创建游戏和模拟时。Scratch 提供了专门用于此目的的 **pick random**
    块。
- en: This block outputs a random number each time you use it. Its two editable white
    boxes allow you to enter a range for that number, and Scratch will only choose
    values between the two limits (inclusive). [Table 1-1](ch01.html#examples_of_using_the_pick_random_block
    "Table 1-1. Examples of Using the Pick Random Block") shows some examples of using
    this block.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 每次使用该块时，它都会输出一个随机数。它的两个可编辑的白色框允许你输入该数字的范围，Scratch 只会选择两个限制之间的值（包括两个端点）。[表 1-1](ch01.html#examples_of_using_the_pick_random_block
    "表 1-1. 使用 pick random 块的示例") 显示了使用该块的一些示例。
- en: Table 1-1. Examples of Using the Pick Random Block
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1-1. 使用 pick random 块的示例
- en: '| Example | Possible Outcome |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| 示例 | 可能的结果 |'
- en: '| --- | --- |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| ![image with no caption](httpatomoreillycomsourcenostarchimages2134319.png.jpg)
    | {0, 1} |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| ![无标题的图片](httpatomoreillycomsourcenostarchimages2134319.png.jpg) | {0, 1}
    |'
- en: '| ![image with no caption](httpatomoreillycomsourcenostarchimages2134321.png.jpg)
    | {0, 1, 2, 3, ..., 10} |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| ![无标题的图片](httpatomoreillycomsourcenostarchimages2134321.png.jpg) | {0, 1,
    2, 3, ..., 10} |'
- en: '| ![image with no caption](httpatomoreillycomsourcenostarchimages2134323.png.jpg)
    | {–2, –1, 0, 1, 2} |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| ![无标题的图片](httpatomoreillycomsourcenostarchimages2134323.png.jpg) | {–2, –1,
    0, 1, 2} |'
- en: '| ![image with no caption](httpatomoreillycomsourcenostarchimages2134325.png.jpg)
    | {0, 10, 20, 30, ..., 100} |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| ![无标题的图片](httpatomoreillycomsourcenostarchimages2134325.png.jpg) | {0, 10,
    20, 30, ..., 100} |'
- en: '| ![image with no caption](httpatomoreillycomsourcenostarchimages2134327.png.jpg)
    | {0, 0 .1, 0 .15, 0 .267, 0 .3894, ..., 1 .0} |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| ![无标题的图片](httpatomoreillycomsourcenostarchimages2134327.png.jpg) | {0, 0.1,
    0.15, 0.267, 0.3894, ..., 1.0} |'
- en: '| ![image with no caption](httpatomoreillycomsourcenostarchimages2134329.png.jpg)
    | {0, 0 .01, 0 .12, 0 .34, 0 .58, ..., 1 .0} |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| ![无标题的图片](httpatomoreillycomsourcenostarchimages2134329.png.jpg) | {0, 0.01,
    0.12, 0.34, 0.58, ..., 1.0} |'
- en: Note
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*The outputs of* **pick random 0 to 1** *and* **pick random 0 to 1.0** *are
    different. The first case will give you either a 1 or a 0, but the second gives
    a decimal value between 0 and 1\. If any input to the* **pick random** *block
    contains a decimal point, the output will also be a decimal value.*'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '*“pick random 0 到 1”* **和** *“pick random 0 到 1.0”* *的输出是不同的。第一个情况会给你 1 或 0，而第二个则会给你一个介于
    0 和 1 之间的小数。如果* **pick random** *块的任何输入包含小数点，输出也将是一个小数值。*'
- en: Mathematical Functions
  id: totrans-185
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数学函数
- en: Scratch also supports a large number of mathematical functions. The **sqrt of**
    block groups together 14 math functions that can be selected from the drop-down
    menu, including square root, trigonometric, logarithmic, and exponential functions.
    Refer to *MathematicalFunctions.pdf* for an extensive coverage of these functions.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch还支持大量的数学函数。**sqrt of** 块将14个数学函数组合在一起，可以从下拉菜单中选择，包括平方根、三角函数、对数函数和指数函数。有关这些函数的详细介绍，请参考*MathematicalFunctions.pdf*。
- en: Summary
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter provided a high-level overview of Scratch and its programming environment.
    You learned about the various elements of the user interface and even created
    a game! We also explored Scratch’s mathematical operators and functions.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了Scratch及其编程环境的高层次概述。你了解了用户界面的各种元素，甚至创建了一个游戏！我们还探讨了Scratch的数学运算符和函数。
- en: At this point, you’ve seen the most basic information you need to create some
    powerful scripts in Scratch, but that’s only one step on the road to writing awesome
    programs. In the chapters that follow, you’ll dig deeper into how you can use
    Scratch to develop your programming skills.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经掌握了创建强大Scratch脚本所需的最基本信息，但这仅仅是编写精彩程序的第一步。在接下来的章节中，你将深入挖掘如何使用Scratch来提升你的编程技能。
- en: Problems
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: '| **Q:** | 1\. Write down the result of each block in the script below. Is
    there a pattern in these products?![image with no caption](httpatomoreillycomsourcenostarchimages2134331.png.jpg)
    |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| **问:** | 1\. 写下下面脚本中每个块的结果。这些乘积中有规律吗？！![没有标题的图片](httpatomoreillycomsourcenostarchimages2134331.png.jpg)
    |'
- en: '| **Q:** | 2\. Is there a pattern in the products 9 × 9, 99 × 99, 999 × 999,
    ..., etc.? Use the **say** command to find the result of these products and check
    your answer. |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| **问:** | 2\. 在乘积9 × 9，99 × 99，999 × 999等中有规律吗？使用**say**命令找出这些乘积的结果并检查你的答案。
    |'
- en: '| **Q:** | 3\. Complete the following table by writing the value of each expression.'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '| **问:** | 3\. 完成下表，写出每个表达式的值。'
- en: '&#124; Expression &#124; Value &#124;'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 表达式 &#124; 值 &#124;'
- en: '&#124; --- &#124; --- &#124;'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; --- &#124; --- &#124;'
- en: '&#124; 3 + (2 × 5) &#124;   &#124;'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 3 + (2 × 5) &#124;   &#124;'
- en: '&#124; (10 / 2) – 3 &#124;   &#124;'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; (10 / 2) – 3 &#124;   &#124;'
- en: '&#124; 7 + (8 × 2) – 4 &#124;   &#124;'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 7 + (8 × 2) – 4 &#124;   &#124;'
- en: '&#124; (2 + 3) × 4 &#124;   &#124;'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; (2 + 3) × 4 &#124;   &#124;'
- en: '&#124; 5 + (2 × (7 – 4)) &#124;   &#124;'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 5 + (2 × (7 – 4)) &#124;   &#124;'
- en: '&#124; (11 – 5) × (2 + 1) / 2 &#124;   &#124;'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; (11 – 5) × (2 + 1) / 2 &#124;   &#124;'
- en: '&#124; 5 × (5 + 4) – 2 × (1 + 3) &#124;   &#124;'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 5 × (5 + 4) – 2 × (1 + 3) &#124;   &#124;'
- en: '&#124; (6 + 12) mod 4 &#124;   &#124;'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; (6 + 12) mod 4 &#124;   &#124;'
- en: '&#124; 3 × (13 mod 3 ) &#124;   &#124;'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 3 × (13 mod 3 ) &#124;   &#124;'
- en: '&#124; 5 + (17 mod 5) – 3 &#124;   &#124;'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 5 + (17 mod 5) – 3 &#124;   &#124;'
- en: Now, use the **say** command and the appropriate operator blocks to check your
    answers. |
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用**say**命令和适当的运算符块来检查你的答案。 |
- en: '| **Q:** | 4\. Evaluate the following Scratch expressions using a pencil and
    paper. Let *x* = 2 and *y* = 4.'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '| **问:** | 4\. 使用铅笔和纸评估以下Scratch表达式。令*x* = 2，*y* = 4。'
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages2134333.png.jpg)'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_IMG
  zh: '![没有标题的图片](httpatomoreillycomsourcenostarchimages2134333.png.jpg)'
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages2134335.png.jpg)'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_IMG
  zh: '![没有标题的图片](httpatomoreillycomsourcenostarchimages2134335.png.jpg)'
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages2134337.png.jpg)'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_IMG
  zh: '![没有标题的图片](httpatomoreillycomsourcenostarchimages2134337.png.jpg)'
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages2134339.png.jpg)'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_IMG
  zh: '![没有标题的图片](httpatomoreillycomsourcenostarchimages2134339.png.jpg)'
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages2134341.png.jpg)'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_IMG
  zh: '![没有标题的图片](httpatomoreillycomsourcenostarchimages2134341.png.jpg)'
- en: '|'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **Q:** | 5\. Use the **say** command and the appropriate blocks from the
    *Operators* palette to calculate the following:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '| **问:** | 5\. 使用**say**命令和*Operators*面板中的适当块来计算以下内容：'
- en: The square root of 32
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 32的平方根
- en: The sine of 30°
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 30°的正弦值
- en: The cosine of 60°
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 60°的余弦值
- en: The result of rounding 99.459
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将99.459四舍五入的结果
- en: '|'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **Q:** | 6\. Create a function block that calculates the average of the following
    three numbers: 90, 95, and 98\. Display the result using the **say** block. |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| **问:** | 6\. 创建一个函数块，计算以下三个数字的平均值：90、95和98。使用**say**块显示结果。 |'
- en: '| **Q:** | 7\. Create a function block that converts 60°F to Celsius. (Hint:
    *C* = (5/9) × (*F* – 32).) |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| **问:** | 7\. 创建一个函数块，将60°F转换为摄氏度。（提示：*C* = (5/9) × (*F* – 32)。） |'
- en: '| **Q:** | 8\. Create a function block that calculates the area of a trapezoid
    with a height of 4/6 foot and bases of lengths 5/9 foot and 22/9 foot. (Hint:
    *A* = 0.5 × (*b*[1] + *b*[2]) × *h*, where *h* is the height and *b*[1] and *b*[2]
    are the lengths of the two bases.) |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| **问：** | 8\. 创建一个函数模块，计算一个梯形的面积，梯形的高度为4/6英尺，底边长度分别为5/9英尺和22/9英尺。（提示：*A* =
    0.5 × (*b*[1] + *b*[2]) × *h*，其中*h*为高度，*b*[1]和*b*[2]为两条底边的长度。）|'
- en: '| **Q:** | 9\. Create a function block that calculates the force needed to
    accelerate a 2,000 kg car 3 m/s². (Hint: *Force* = *mass* × *acceleration*.) |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| **问：** | 9\. 创建一个函数模块，计算加速一个质量为2000千克的汽车到3米/秒²所需的力。（提示：*力* = *质量* × *加速度*。）|'
- en: '| **Q:** | 10\. The cost of electricity is $0.06 per kilowatt-hour. Create
    a function block that calculates the cost of using a 1,500-watt air conditioner
    for 2 hours. (Hint: *Energy* = *power* × *time*.) |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| **问：** | 10\. 电力费用为每千瓦时0.06美元。创建一个函数模块，计算使用一个1500瓦空调运作2小时的费用。（提示：*能量* = *功率*
    × *时间*。）|'
- en: '| **Q:** | 11\. With a simple mathematical trick, you can use the **round**
    operator to round a number to a specific decimal place. For example, you can round
    the number 5.3567 to the nearest tenth (that is, the first position to the right
    of the decimal point) using these three steps:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '| **问：** | 11\. 使用一个简单的数学技巧，你可以使用**round**运算符将数字四舍五入到特定的小数位。例如，你可以通过以下三步将数字5.3567四舍五入到最接近的十分位（即小数点右侧的第一位）：'
- en: '&#124; a. &#124; 5.3567 × 10 = 53.567 &#124; (Multiply the number by 10.) &#124;'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; a. &#124; 5.3567 × 10 = 53.567 &#124; （将数字乘以10。）&#124;'
- en: '&#124; b. &#124; round(53.567) = 54 &#124; (Round the answer from step a.)
    &#124;'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; b. &#124; round(53.567) = 54 &#124; （将步骤a的结果四舍五入。）&#124;'
- en: '&#124; c. &#124; 54/10 = 5.4 &#124; (Divide the answer from step b by 10.)
    &#124;'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; c. &#124; 54/10 = 5.4 &#124; （将步骤b的结果除以10。）&#124;'
- en: What changes would you need to make to the above steps to round to the nearest
    hundredth (i.e., the second position to the right of the decimal point)? Create
    a function block that rounds 5.3567 to the nearest tenth (or hundredth) and display
    its output using the **say** block. |
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要对上述步骤做出哪些修改，才能将结果四舍五入到最接近的百分位（即小数点右侧第二位）？创建一个函数模块，将5.3567四舍五入到最接近的十分位（或百分位），并使用**say**模块显示其输出。|
