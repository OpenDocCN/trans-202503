- en: '**15'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**15**'
- en: Building your First Website**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 创建你的第一个网站
- en: In this project you’ll build a simple website with headings, paragraphs, images,
    links, and buttons. You’ll use HTML to create the page and CSS to style it how
    you want. The skills you’ll learn here can be used to build any website you’d
    like.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将构建一个简单的网站，包含标题、段落、图片、链接和按钮。你将使用HTML来创建页面，并使用CSS来根据你的需求对其进行样式设计。你在这里学到的技能可以用来构建任何你想要的网站。
- en: '![image](../images/f0181-01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0181-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需组件**'
- en: Raspberry Pi
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派
- en: '**SETTING UP THE PROJECT FILES**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**设置项目文件**'
- en: For this project you won’t need any circuitry; everything is done in your Raspberry
    Pi desktop computer. You’ll use the Text Editor program to create HTML and CSS
    files. To access the Text Editor, from the desktop’s main menu go to **Accessories**
    ▸ **Text Editor**.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，你不需要任何电路；一切都在你的树莓派桌面计算机上完成。你将使用文本编辑器程序创建HTML和CSS文件。要访问文本编辑器，从桌面的主菜单中选择
    **附件** ▸ **文本编辑器**。
- en: This project requires several files, so we suggest you create a folder specifically
    for this project. Create a new folder inside your *Projects* directory called
    *Web_Applications*, and then create a project folder called *Project_15*.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目需要多个文件，因此建议你为此项目创建一个专门的文件夹。在你的 *Projects* 目录中创建一个名为 *Web_Applications* 的新文件夹，然后创建一个名为
    *Project_15* 的项目文件夹。
- en: After opening the Text Editor, create two blank files with CTRL-N; you’ll have
    to do this once for each file. Then save those files within the *Project_15* folder,
    and name them *index.html* and *style.css* as shown in [Figure 15-1](ch15.xhtml#ch15fig1).
    You can download the scripts a*t [https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 打开文本编辑器后，使用 CTRL-N 创建两个空白文件；你需要为每个文件执行此操作一次。然后，将这些文件保存在 *Project_15* 文件夹中，并命名为
    *index.html* 和 *style.css*，如[图 15-1](ch15.xhtml#ch15fig1)所示。你可以从 *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*
    下载脚本。
- en: '![image](../images/f0182-01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0182-01.jpg)'
- en: '**FIGURE 15-1:** Creating the HTML and CSS files'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 15-1：** 创建HTML和CSS文件'
- en: '**SETTING UP AN HTML WEB PAGE**'
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**设置HTML网页**'
- en: '*HTML*, short for *HyperText Markup Language*, is the predominant markup language
    used to create web pages. Web browsers were designed to read HTML *tags*, which
    tell the browser how to display content on the page. Let’s take a look at how
    tags work.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*HTML*，即*超文本标记语言*，是用于创建网页的主要标记语言。网页浏览器设计用于读取HTML *标签*，这些标签告诉浏览器如何在页面上显示内容。让我们来看一下标签是如何工作的。'
- en: '**Setting Up the Basic Content**'
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**设置基本内容**'
- en: The following snippet shows the basic structure of an HTML document. Open your
    *index.html* file using the Text Editor and enter the content from [Listing 15-1](ch15.xhtml#ch15list1).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段展示了HTML文档的基本结构。使用文本编辑器打开你的 *index.html* 文件，并输入[清单 15-1](ch15.xhtml#ch15list1)中的内容。
- en: '**LISTING 15-1:** The basic structure of an HTML web page'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单 15-1：** HTML网页的基本结构'
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This document is simply a list of HTML tags, denoted by the enclosing `< >`
    symbols. The first line of any HTML document is always `<!DOCTYPE html>`. This
    tells the web browser this document is an HTML file.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 该文档只是一个HTML标签的列表，用 `< >` 符号括起来。任何HTML文档的第一行总是 `<!DOCTYPE html>`。这告诉网页浏览器该文档是一个HTML文件。
- en: The remaining structure needs to be sandwiched between the tags `<html>` ➊ and
    `</html>`, the former indicating the beginning of a web page and the latter indicating
    the end of the page. Note that the closing tag must have a `/` after the `<` symbol;
    this is true of all HTML closing tags. Not all HTML tags need a closing tag, however,
    as you’ll see later.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 剩余的结构需要夹在 `<html>` ➊ 和 `</html>` 标签之间，前者表示网页的开始，后者表示网页的结束。注意，关闭标签必须在 `<` 符号后加上
    `/`；这一规则适用于所有HTML的关闭标签。然而，并非所有HTML标签都需要关闭标签，如你稍后将看到的那样。
- en: 'HTML documents have two main parts: the head and the body. The *head*, which
    goes within the tags `<head>` ➋ and `</head>`, is where you insert data about
    the HTML document that is not directly visible on the page but that adds functionality
    to the web page, like the title that shows up in the browser tab, scripts, styles,
    and more. The *body*, which falls within the tags `<body>` ➌ and `</body>`, includes
    the content of the page, such as headings, text, images, tables, and so on.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: HTML文档有两个主要部分：头部和主体。*头部*位于 `<head>` ➋ 和 `</head>` 标签之间，这是你插入关于HTML文档的非直接显示在页面上的数据的地方，比如显示在浏览器标签中的标题、脚本、样式等等。*主体*则位于
    `<body>` ➌ 和 `</body>` 标签之间，包含页面的内容，例如标题、文本、图片、表格等等。
- en: '**Adding the Title, Headings, and Paragraphs**'
  id: totrans-21
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**添加标题、标题和段落**'
- en: To see how your web page looks, go to the taskbar menu and open Chromium, and
    then drag the *index.html* file into the Chromium web browser. At the moment,
    you should see only a blank page, because you haven’t added anything to the HTML
    file yet. In this section, you’ll add the title, headings, and paragraphs.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看网页的效果，打开任务栏菜单并启动Chromium浏览器，然后将*index.html*文件拖入Chromium浏览器。此时，你应该只看到一个空白页面，因为你还没有向HTML文件中添加任何内容。在这一节中，你将添加标题、标题和段落。
- en: '**Using Title Tags**'
  id: totrans-23
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用标题标签**'
- en: 'The title goes between the `<title>` and `</title>` tags, which should go within
    the `<head>` and `</head>` tags. Add a title to your file, as shown here:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 标题位于`<title>`和`</title>`标签之间，这些标签应该放在`<head>`和`</head>`标签之间。为你的文件添加一个标题，如下所示：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**NOTE**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Instead of dragging the file into the browser again, you can simply refresh
    the web page after saving the HTML; the changes are updated immediately.*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*与其再次将文件拖入浏览器，不如在保存HTML后直接刷新网页；更改会立即更新。*'
- en: If you save *index.html* and again drag the file into your browser, don’t be
    surprised to still see a blank page. The title shows in the web browser tab, not
    on the page itself. We titled our web page “Max – The Dog,” but you can title
    your page whatever you’d like.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你保存了*index.html*并再次将文件拖入浏览器，不要惊讶于仍然看到空白页面。标题显示在网页浏览器的标签上，而不是页面本身。我们将网页命名为“Max
    – The Dog”，但你可以根据需要为网页命名。
- en: '**Using Heading Tags**'
  id: totrans-29
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用标题标签**'
- en: 'You can use headings to structure the text on the web page. Heading tags begin
    with an `h` followed by a number that indicates the heading level. For example,
    `<h1>` and `</h1>` are the tags for heading 1, or the top level; `<h2>` and `</h2>`
    are for heading 2, and so on until heading 6, which is the bottom level of heading.
    Heading tags should go between the `<body>` and `</body>` tags. Make a couple
    of headings and place them in the body of your file now:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用标题来构建网页上的文本。标题标签以`h`开头，后面跟着一个表示标题层级的数字。例如，`<h1>`和`</h1>`是一级标题的标签；`<h2>`和`</h2>`是二级标题的标签，以此类推，直到六级标题，它是标题的最低层级。标题标签应该放在`<body>`和`</body>`标签之间。现在创建几个标题并将它们放入文件的主体中：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We’ve added two headings to our page: “MAX – THE DOG” at the top level and
    “About Max” at a level below that. Now it’s time to put some text under those
    headings.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已向页面添加了两个标题：“MAX – THE DOG”作为顶级标题，以及“About Max”作为次级标题。现在是时候在这些标题下添加一些文字了。
- en: '**Using Paragraph Tags**'
  id: totrans-33
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用段落标签**'
- en: 'You should put most of your readable content in paragraphs. Every paragraph
    needs to go between the `<p>` and `</p>` tags. Add a paragraph or two to your
    file, as shown here:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该将大部分可读内容放在段落中。每个段落都需要放在`<p>`和`</p>`标签之间。向你的文件中添加一两个段落，如下所示：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You now have your very own web page! Feel free to add as many paragraphs and
    headings as you’d like.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有了自己的网页！随意添加更多段落和标题。
- en: '**Seeing Your Web Page**'
  id: totrans-37
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**查看你的网页**'
- en: Save your *index.html* document and refresh the web page. [Figure 15-2](ch15.xhtml#ch15fig2)
    shows how Max’s web page looks at the moment.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 保存你的*index.html*文档并刷新网页。[图15-2](ch15.xhtml#ch15fig2)显示了Max的网页此时的样子。
- en: '![image](../images/f0184-01.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0184-01.jpg)'
- en: '**FIGURE 15-2:** A simple HTML page'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-2：** 一个简单的HTML页面'
- en: As you can see, HTML doesn’t do much besides adding raw text to your page; it’s
    mainly a series of paragraphs and doesn’t look pretty at all. You’re going to
    use CSS in a later section to style details and make your page look attractive.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，HTML除了将原始文本添加到页面中外并没有做太多，它主要是一些段落，看起来并不漂亮。你将在后面的部分使用CSS来为页面细节添加样式，使页面更加美观。
- en: '**Adding Links, Images, and Buttons**'
  id: totrans-42
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**添加链接、图片和按钮**'
- en: Any self-respecting website should contain way more than just text. We’ll show
    you how to add images, buttons, more pages, and links to other pages too.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 任何自尊的网页都不应该仅仅包含文字。我们将向你展示如何添加图片、按钮、更多页面以及指向其他页面的链接。
- en: '**Including Hyperlinks**'
  id: totrans-44
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**包含超链接**'
- en: 'To add a hyperlink to another page on the internet, add the `<a>` tag anywhere
    between the `<body>` and `</body>` tags. For example, you can insert a hyperlink
    to the Inspector Rex Wikipedia page like this:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要为另一个页面添加超链接，您可以在`<body>`和`</body>`标签之间的任何位置添加`<a>`标签。例如，您可以像这样插入指向《侦探犬雷克斯》维基百科页面的超链接：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `a` stands for *anchor* and the text that goes between these tags is called
    *anchor text*, which is `Inspector Rex` in this case. Inside the `<a>` tag, we’ve
    included the `href` attribute, which specifies where the link should go. The anchor
    text is what the page’s visitors see on the page; when they click that text, the
    Inspector Rex Wikipedia web page opens.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`a`代表*锚点*，这两个标签之间的文本被称为*锚文本*，在这种情况下是`Inspector Rex`。在`<a>`标签内，我们包含了`href`属性，它指定了链接应该指向的位置。锚文本是页面访问者在页面上看到的内容；当他们点击该文本时，Inspector
    Rex的维基百科页面会打开。'
- en: 'Most websites have multiple pages you can navigate through. That navigation
    between pages is also done using hyperlinks. For example, if you want to insert
    a new page—say, a photo gallery for Max—you would link to it like this:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数网站都有多个页面可以进行导航。页面之间的导航也是通过超链接完成的。例如，如果你想插入一个新页面——比如Max的照片画廊——你可以像这样链接到它：
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: On its own, this link won’t take you anywhere because the page it’s pointing
    to doesn’t yet exist. You have to create the *gallery.html* file and save it in
    the same folder as your *index.html* file. You won’t create another page in this
    project, but now you know how to do it.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 单独使用这个链接不会将你带到任何地方，因为它指向的页面尚未存在。你需要创建*gallery.html*文件并将其保存在与*index.html*文件相同的文件夹中。你在这个项目中不会创建另一个页面，但现在你知道如何操作了。
- en: '**Including Images**'
  id: totrans-51
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**包含图像**'
- en: 'Images make any website more appealing. To insert an image, you use the `<img>`
    tag, which doesn’t have a closing tag because you list the image you want shown
    within the angle brackets, `<>`. The file for the image you want to include has
    to be saved in the website’s folder—in this case, *Project_15*—to make it onto
    the web page. To insert an image called *max.jpg*, you use the following:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图像使任何网站更加吸引人。要插入图像，你需要使用`<img>`标签，该标签没有闭合标签，因为你在尖括号`<>`中列出你希望显示的图像。你要插入的图像文件必须保存在网站的文件夹中——在这种情况下是*Project_15*——才能显示在网页上。要插入名为*max.jpg*的图像，你可以使用以下代码：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `src` indicates the location of the image file. Because we have the image
    stored in the website’s folder, we can just use the image filename. Replace `max.jpg`
    in the code with your own image filename. You can also use a hyperlink to an image
    by replacing `max.jpg` with the hyperlink.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`src`表示图像文件的位置。由于我们将图像存储在网站的文件夹中，我们可以直接使用图像文件名。在代码中将`max.jpg`替换为你自己的图像文件名。你也可以通过将`max.jpg`替换为超链接来使用指向图像的超链接。'
- en: 'You can resize your image either by editing the image file manually or by using
    the `height` attribute within the `<img>` tag. For example, to resize the image
    to 350 pixels in height, you use:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过手动编辑图像文件或在`<img>`标签中使用`height`属性来调整图像的大小。例如，要将图像的高度调整为350像素，可以使用：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The width adjusts automatically according to the height. You could also change
    the width with the `width` attribute and the height would readjust automatically.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 宽度会根据高度自动调整。你也可以使用`width`属性来更改宽度，而高度则会自动重新调整。
- en: The `<img>` tag must be inside a `<p>` or a `<div>` tag—you can use a `<div>`
    tag to create a section inside your body content (see this in [Listing 15-2](ch15.xhtml#ch15list2)).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`<img>`标签必须放在`<p>`或`<div>`标签内——你可以使用`<div>`标签在页面内容内创建一个部分（请参见[清单15-2](ch15.xhtml#ch15list2)中的示例）。'
- en: '**Including Buttons**'
  id: totrans-59
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**包含按钮**'
- en: 'To include a button on your page, insert the label you want for your button
    between the `<button>` and `</button>` tags. We want to insert a button that leads
    to a funny police dog chase video, so we use:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要在页面上包含按钮，将你想要的按钮标签插入到`<button>`和`</button>`标签之间。我们想插入一个按钮，指向一个有趣的警犬追逐视频，所以我们使用：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To make the button clickable so it redirects you to the video page, insert
    the button tags between the `<a>` hyperlink tags to the video in question:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使按钮可点击并将你重定向到视频页面，将按钮标签插入到指向该视频的`<a>`超链接标签之间：
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Viewing Max’s HTML File**'
  id: totrans-64
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**查看Max的HTML文件**'
- en: We’ve added an image, a link, and a button to Max’s web page. The code in [Listing
    15-2](ch15.xhtml#ch15list2) shows how the HTML document looks at the moment.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在Max的网页上添加了一个图像、一个链接和一个按钮。[清单15-2](ch15.xhtml#ch15list2)中的代码显示了此时HTML文档的样子。
- en: '**LISTING 15-2:** The HTML document for Max’s web page with a link, an image,
    and a button'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单15-2：** Max网页的HTML文档，包含一个链接、一个图像和一个按钮'
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Note that we’ve added three new tags:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们添加了三个新的标签：
- en: '`<header>` ➊ and `</header>` ➍ contain introductory content. Inside these tags
    is the first-level heading.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<header>` ➊ 和 `</header>` ➍ 包含介绍性内容。这些标签内是一级标题。'
- en: '`<div class="title">` ➋ and `</div>` ➌ define a division or section. The `class`
    attribute called `title` indicates that an HTML element is a member of a particular
    class—in this case, the `title` class, but you can give it any name you want.
    Using the `class` attribute is useful because it allows you to define the same
    style in CSS for multiple elements that belong to the same class.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div class="title">` ➋ 和 `</div>` ➌ 定义了一个分区或部分。`class`属性叫做`title`，表示HTML元素是某个特定类的成员——在这种情况下，是`title`类，但你可以为它起任何名字。使用`class`属性很有用，因为它允许你为属于同一类的多个元素在CSS中定义相同的样式。'
- en: '`<main>` ➎ and `</main>` ➏ specify the main content of a document. This is
    where you should place content that is unique to the document—that is, content
    that isn’t repeated in the website. A single HTML document shouldn’t have more
    than one `<main>` element.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<main>` ➎ 和 `</main>` ➏ 指定了文档的主要内容。这是你应该放置特定于文档的内容的地方——也就是说，内容不会在网站的其他地方重复。一个HTML文档中不应有多个`<main>`元素。'
- en: We structured the HTML content this way because it makes it easier to use CSS
    later to format the page. [Figure 15-3](ch15.xhtml#ch15fig3) shows how the web
    page looks with the HTML file in [Listing 15-2](ch15.xhtml#ch15list2).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将HTML内容结构化成这样，是因为这样以后使用CSS来格式化页面会更容易。[图 15-3](ch15.xhtml#ch15fig3)展示了HTML文件在[列表
    15-2](ch15.xhtml#ch15list2)中的网页效果。
- en: '![image](../images/f0188-01.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0188-01.jpg)'
- en: '**FIGURE 15-3:** Max’s web page with a link, an image, and a button'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 15-3：** Max的网页，包含一个链接、一张图片和一个按钮'
- en: '**STYLING YOUR PAGE WITH CSS**'
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**用CSS为页面添加样式**'
- en: Now you’ll add *CSS*, or *Cascading Style Sheets*, a style sheet language used
    to describe how the elements in a web page will look when rendered. You can add
    CSS either directly to the HTML file or in a separate file that you reference
    in the HTML file. In this project, you’ll create a separate file for the CSS document;
    this way, it’ll be easier to read both the CSS and HTML files and understand what
    they do.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你将添加*CSS*（层叠样式表），这是一种用于描述网页元素渲染时显示样式的语言。你可以将CSS直接添加到HTML文件中，或者在一个单独的文件中定义CSS，并在HTML文件中引用它。在本项目中，你将为CSS文档创建一个单独的文件；这样，更容易同时阅读CSS和HTML文件并理解它们的作用。
- en: '**Embedding a Style Sheet**'
  id: totrans-77
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**嵌入样式表**'
- en: 'Before getting to the CSS document itself, you need to embed the style sheet
    in the *index.html* file so that the HTML knows to reference an external CSS file.
    To do this, add the following line between the `<head>` and `</head>` tags:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入CSS文档之前，你需要将样式表嵌入到*index.html*文件中，以便HTML知道要引用外部CSS文件。为此，请在`<head>`和`</head>`标签之间添加以下行：
- en: '[PRE11]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This `<link>` tag tells the HTML file that you’re using an external style sheet
    to format how the page looks. The `rel` attribute specifies the nature of the
    external file, in this case that it is a style sheet—the CSS file—that will be
    used to alter the appearance of the page. The `type` attribute is set to `"text/css"`
    to indicate that you’re using a CSS file for the styles. The `href` attribute
    indicates the file location; again, since the file is in the website’s folder,
    you just need to reference the filename.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这个`<link>`标签告诉HTML文件你正在使用外部样式表来格式化页面的显示方式。`rel`属性指定外部文件的性质，在这种情况下，它是一个样式表——CSS文件——将用于改变页面的外观。`type`属性被设置为`"text/css"`，表示你使用的是CSS文件来定义样式。`href`属性指示文件的位置；由于文件在网站的文件夹中，因此你只需要引用文件名。
- en: After you’ve added the link to refer to the style sheet, your header should
    look like [Listing 15-3](ch15.xhtml#ch15list3).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加了引用样式表的链接后，你的头部应当类似于[列表 15-3](ch15.xhtml#ch15list3)中的样子。
- en: '**LISTING 15-3:** Linking to a CSS style sheet in your HTML document'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**列表 15-3：** 在HTML文档中链接到CSS样式表'
- en: '[PRE12]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: With this extra tag, the style sheet is connected to the HTML document. Creating
    a separate style sheet is useful because you can embed the same style sheet in
    several web pages with just one line.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个额外的标签，样式表与HTML文档连接起来。创建单独的样式表是有用的，因为你可以通过一行代码将同一个样式表嵌入到多个网页中。
- en: '**Styling Your HTML Content**'
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**为你的HTML内容添加样式**'
- en: 'To style your HTML content, CSS uses *selectors* that define which elements
    a set of CSS rules applies to. They have *properties*, which in turn have *values*.
    The code will look like this:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要为HTML内容添加样式，CSS使用*选择器*来定义一组CSS规则适用的元素。它们具有*属性*，而属性又有*值*。代码将如下所示：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The set of rules that defines the style for a certain selector should go between
    curly brackets, `{}`. You attribute a value to a property with a colon (`:`),
    and every value should end with a semicolon (`;`). Each selector can have, and
    normally does have, more than one property.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 定义特定选择器样式的一组规则应该放在大括号`{}`之间。你通过冒号（`:`）为属性分配值，每个值后面应该以分号（`；`）结束。每个选择器可以有，并且通常会有，多个属性。
- en: '**Styling the Header**'
  id: totrans-89
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**样式化头部**'
- en: If you’ve been following the instructions, you should have a *style.css* file
    inside the *Project_15* folder along with your *index.html* file. Open your *style.css*
    file and edit the header by entering the content in [Listing 15-4](ch15.xhtml#ch15list4).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你按照指示操作，你应该在*Project_15*文件夹中有一个*style.css*文件，并且有一个*index.html*文件。打开*style.css*文件，并通过输入[列表
    15-4](ch15.xhtml#ch15list4)中的内容来编辑头部。
- en: '**LISTING 15-4:** Styling the header with CSS'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**列表 15-4：** 使用CSS样式化头部'
- en: '[PRE14]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: In this listing, `header` is the selector, which means that the style rules
    you’re going to describe between curly brackets will apply to the header section
    of your web page. Remember that the header section is what goes between the `<header>`
    and `</header>` tags and includes the introductory content. Here we insert a background
    image—a beautiful photo of Max. For that, we use the `background` property, whose
    value is `url(background.jpg)` ➊; inside the `url()` you write the path directory
    for the image. Replace `background.jpg` with the name of the image you want to
    use as the background. Since you’re going to save the image file in the same folder
    as the HTML and CSS files, you reference only the image filename.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个列表中，`header`是选择器，这意味着你在大括号之间描述的样式规则将应用于网页的头部部分。记住，头部部分是位于`<header>`和`</header>`标签之间的内容，包括介绍性内容。在这里，我们插入了一张背景图片—Max的美丽照片。为此，我们使用`background`属性，其值为`url(background.jpg)`➊；在`url()`内，你写出图像的路径目录。将`background.jpg`替换为你希望用作背景的图像名称。由于你将图像文件保存在与HTML和CSS文件相同的文件夹中，因此只需引用图像文件名。
- en: Assign the `cover` value to the `background-size` property ➋. This says that
    the background image should fill the entire header section.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 将`cover`值分配给`background-size`属性➋。这表示背景图片应填充整个头部区域。
- en: The `height` property has a value of `70vh` ➌, which specifies the height of
    the header. You can use one of several units for the height, but we are using
    `vh` (viewport height), which is relative to 1 percent of the height of the viewport
    and ensures the header elements can fit into the viewport. This instruction means
    the header fills 70 percent of the web browser’s window regardless of its size.
    Experiment with other percentage values and see how your page looks.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`height`属性的值为`70vh`➌，指定了头部的高度。你可以使用多种单位来指定高度，但我们使用的是`vh`（视口高度），它相对于视口高度的1%的大小，确保头部元素可以适应视口。此指令意味着无论浏览器窗口的大小如何，头部将填充网页窗口的70%。你可以尝试其他百分比值，看看页面的效果。'
- en: Save the CSS file and refresh the browser tab that contains the HTML document
    in order to see how your newly styled web page looks.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 保存CSS文件，并刷新包含HTML文档的浏览器标签，以查看你新样式化的网页效果。
- en: '**Styling the title Class**'
  id: totrans-97
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**样式化`title`类**'
- en: Now you’ll edit the `title` class, which includes any content that goes between
    the `<div class="title">` and `</div>` tags. These tags are between the `<header>`
    and `</header>` tags, which means that the `header` is an *ancestor* of the `title`
    class. Add the snippet in [Listing 15-5](ch15.xhtml#ch15list5) to your CSS file.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你将编辑`title`类，它包括位于`<div class="title">`和`</div>`标签之间的任何内容。这些标签位于`<header>`和`</header>`标签之间，这意味着`header`是`title`类的*祖先*。将[列表
    15-5](ch15.xhtml#ch15list5)中的代码片段添加到你的CSS文件中。
- en: '**LISTING 15-5:** Styling the `title` class'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**列表 15-5：** 样式化`title`类'
- en: '[PRE15]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: To select elements with a specific class, use a period (`.`) followed by the
    class name, like `.title`. We’ll walk you through each element.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择具有特定类的元素，使用一个点（`.`）后跟类名，如`.title`。我们将逐步引导你完成每个元素。
- en: '**Adjusting Positions**'
  id: totrans-102
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**调整位置**'
- en: You can position elements using the `top`, `bottom`, `left`, and `right` properties,
    but first you need to set the `position` property ➊.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`top`、`bottom`、`left`和`right`属性来定位元素，但首先需要设置`position`属性➊。
- en: The way the elements are positioned on the page works differently depending
    on whether the `position` value is set to `static`, `relative`, `fixed`, or `absolute`.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 元素在页面上的定位方式会有所不同，具体取决于`position`值是否设置为`static`、`relative`、`fixed`或`absolute`。
- en: '**THE POSITION PROPERTY**'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**POSITION属性**'
- en: 'The `position` property can have the following values:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`position`属性可以具有以下值：'
- en: static
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 静态
- en: An element with the `static` value is positioned according to the normal flow
    of the page and is not affected by the `top`, `bottom`, `left`, and `right` properties.
    By default, HTML elements are `static`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一个具有`static`值的元素是根据页面的正常流进行定位的，不受`top`、`bottom`、`left`和`right`属性的影响。默认情况下，HTML元素是`static`。
- en: relative
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 相对定位
- en: An element with the `relative` value is positioned relative to its default position
    using the `top`, `bottom`, `left`, and `right` properties.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一个具有`relative`值的元素是相对于其默认位置进行定位的，使用`top`、`bottom`、`left`和`right`属性。
- en: fixed
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 固定
- en: An element with the `fixed` value remains in the same position even when the
    page is scrolled. To position the elements on the viewport, use the `top`, `bottom`,
    `left`, and `right` properties.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一个具有`fixed`值的元素即使在页面滚动时也保持在相同位置。要在视口中定位元素，可以使用`top`、`bottom`、`left`和`right`属性。
- en: absolute
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 绝对定位
- en: An element with the `absolute` value is positioned relative to its nearest ancestor.
    To adjust the position, use the `top`, `bottom`, `left`, and `right` properties.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一个具有`absolute`值的元素是相对于其最近的祖先元素进行定位的。要调整位置，可以使用`top`、`bottom`、`left`和`right`属性。
- en: In this case, we are using the `absolute` value. This means each element is
    positioned relative to its nearest ancestor, in this case the header section.
    Take a look at [Figure 15-4](ch15.xhtml#ch15fig4) to understand how the `title`
    class elements are positioned in relation to the header.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们使用的是`absolute`值。这意味着每个元素是相对于其最近的祖先元素进行定位的，在此情况下是头部部分。查看[图15-4](ch15.xhtml#ch15fig4)以理解`title`类元素如何相对于头部进行定位。
- en: '![image](../images/f0191-01.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0191-01.jpg)'
- en: '**FIGURE 15-4:** Positioning the `title` class elements inside the header section'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**图15-4：** 在头部部分定位`title`类元素'
- en: The `top` ➋ and `left` ➌ properties specify where each element is positioned
    in relation to its ancestor, given as a percentage, which represents how far across
    the page it appears, with `0%` being the far left and top edge of its ancestor.
    The `50%` values for `top` and `left` move the top-left corner of the `title`
    class section to the middle of its ancestor. This means the top-left corner of
    the `title` class section, rather than its center point, will be positioned at
    the center of the header section; take a look at [Figure 15-4](ch15.xhtml#ch15fig4)
    (A). You can adjust this with the `transform` property.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`top` ➋和`left` ➌属性指定每个元素相对于其祖先元素的位置，以百分比表示，表示元素在页面上出现的水平位置，`0%`表示祖先元素的最左边和顶部边缘。`top`和`left`的`50%`值将`title`类部分的左上角移动到祖先元素的中心。这意味着`title`类部分的左上角，而不是它的中心点，将被定位到头部部分的中心；请查看[图15-4](ch15.xhtml#ch15fig4)（A）。你可以使用`transform`属性进行调整。'
- en: The `transform` property ➍, with the `translate(–50%, –40%)` values, shifts
    the position of the element. The `–``50%` value moves the `title` class element
    50 percent to the left in relation to its size, which will center it horizontally
    inside the header section—take a look at [Figure 15-4](ch15.xhtml#ch15fig4) (B).
    We also apply `–``40%` to the vertical position, to move it 40 percent up from
    the bottom (see [Figure 15-4](ch15.xhtml#ch15fig4) (C)). Try this with different
    values and see how it changes. The `–``50%` and `–``40%` work just fine for Max’s
    page, but you may want to move the text to a different position depending on your
    background image.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`transform`属性 ➍，配合`translate(–50%, –40%)`值，移动元素的位置。`–50%`值将`title`类元素在水平方向上移动其大小的50%，使其水平居中在头部部分—请查看[图15-4](ch15.xhtml#ch15fig4)（B）。我们还将`–40%`应用于垂直位置，使其从底部向上移动40%（见[图15-4](ch15.xhtml#ch15fig4)（C））。试试不同的值，看看它是如何变化的。`–50%`和`–40%`对于Max的页面效果很好，但根据你的背景图片，你可能需要将文本移动到不同的位置。'
- en: '**Setting Text Color and Alignment**'
  id: totrans-120
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**设置文本颜色和对齐**'
- en: The `color` ➎ and `text-align` ➏ properties define text color and text alignment,
    respectively. You can set colors with their name—HTML recognizes basic color names—or
    by using a hexadecimal or RGB color code. We’re using hexadecimal. You can google
    *hexadecimal color picker* for a hexadecimal reference to a specific color. The
    `text-align` property takes several values like `left`, `right`, `center`, and
    `justify`, to align text to the left or right or center or justify it, respectively.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '`color` ➎ 和 `text-align` ➏ 属性分别定义文本颜色和文本对齐方式。你可以通过名称设置颜色——HTML 支持基本的颜色名称——或者使用十六进制或
    RGB 颜色代码。我们使用的是十六进制。你可以在网上搜索 *十六进制颜色选择器* 来参考特定颜色的十六进制值。`text-align` 属性可以取多个值，如
    `left`、`right`、`center` 和 `justify`，分别用来将文本对齐到左侧、右侧、居中或两端对齐。'
- en: '**Styling the Headings, Paragraphs, and Links**'
  id: totrans-122
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**样式化标题、段落和链接**'
- en: '[Listing 15-6](ch15.xhtml#ch15list6) styles the headings, paragraphs, and links.
    Add these styles to your CSS document.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 15-6](ch15.xhtml#ch15list6) 样式化标题、段落和链接。将这些样式添加到你的 CSS 文件中。'
- en: '**LISTING 15-6:** Styling headings, paragraphs, and hyperlinks'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**列表 15-6：** 样式化标题、段落和超链接'
- en: '[PRE16]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: To define the text size, use the `font-size` property ➊. There are several units
    to define the font size, but we’re going to use the `rem` unit. *Rem* is the computed
    value of `font-size` on the root element—we use one font size as a reference across
    the page. This means all font sizes are relative to each other, reducing issues
    arising from older font size units, which would cause irregularities when viewing
    the page on devices with different screen sizes.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 要定义文本大小，使用 `font-size` 属性 ➊。定义字体大小有多种单位，但我们将使用 `rem` 单位。*Rem* 是根元素的 `font-size`
    计算值——我们使用一个字体大小作为页面上的参考。这意味着所有字体大小都是相对的，从而减少了使用旧字体大小单位时出现的设备屏幕大小不同而导致的不规则问题。
- en: When used in the `font-size` property of the root element, the rem units refer
    to the property’s initial value. So 1 rem is equal to the font size of the HTML
    element—that is, 16 pixels by default in most browsers.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当在根元素的 `font-size` 属性中使用时，rem 单位表示该属性的初始值。因此，1 rem 等于 HTML 元素的字体大小——在大多数浏览器中默认是
    16 像素。
- en: In [Listing 15-6](ch15.xhtml#ch15list6), we define `4`, `2.5`, and `1.3` rem
    font size for the heading 1, heading 2, and paragraphs, respectively, to make
    each heading level subsequently smaller than the one above, with the lowest level
    slightly larger than the default text.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [列表 15-6](ch15.xhtml#ch15list6) 中，我们为标题 1、标题 2 和段落分别定义了 `4`、`2.5` 和 `1.3`
    rem 的字体大小，以使每个标题级别逐渐比上一级小，最低级别略大于默认文本。
- en: The `main` section formats the main content of your page ➋. We’re setting the
    maximum width of content to `500px`. Defining the width of an element prevents
    the element from stretching to the boundaries of its container; in this case,
    it prevents the text from spreading horizontally on the web browser window. Then,
    we set the margins with `auto` to center the element horizontally.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`main` 部分格式化页面的主要内容 ➋。我们将内容的最大宽度设置为 `500px`。定义元素的宽度可以防止元素拉伸到容器的边界；在这种情况下，它可以防止文本在网页浏览器窗口中水平扩展。然后，我们使用
    `auto` 设置外边距，以便水平居中元素。'
- en: Hyperlinks are underlined by default. Set `text-``decoration` to `none` ➌ to
    remove the underline.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 超链接默认是带下划线的。将 `text-decoration` 设置为 `none` ➌ 可以去除下划线。
- en: '**Styling the Button**'
  id: totrans-131
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**样式化按钮**'
- en: To style the button, copy the styles in [Listing 15-7](ch15.xhtml#ch15list7)
    to your *style.css* document file.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 要样式化按钮，请将 [列表 15-7](ch15.xhtml#ch15list7) 中的样式复制到你的 *style.css* 文件中。
- en: '**LISTING 15-7:** Styling the button'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**列表 15-7：** 样式化按钮'
- en: '[PRE17]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Setting `display` to `block` ensures the button is displayed as a block element,
    like a paragraph; so, for example, the button will not be on the same line as
    a text element. We use the `padding` property to add space around content. We
    define a padding of `10px` for the top and bottom margins of the button and `20px`
    for the right and left margins—this sets how much space surrounds the button’s
    content. Notice that here we’re using the hexadecimal color code for setting the
    color of the button text and the button background color. The other button properties
    are self-explanatory. Play with these properties to style the button to your liking.
    You can also search for *button properties CSS* on the web for more properties
    and values.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 将`display`设置为`block`可以确保按钮作为块级元素显示，就像段落一样；例如，按钮不会与文本元素在同一行上。我们使用`padding`属性在内容周围添加空间。我们为按钮的上下边距定义了`10px`的填充，为左右边距定义了`20px`的填充——这设置了按钮内容周围的空白区域。请注意，这里我们使用的是十六进制颜色代码来设置按钮文本和按钮背景颜色。其他按钮属性不言自明。可以通过调整这些属性，按自己的喜好样式化按钮。你还可以在网上搜索*button
    properties CSS*，了解更多属性和值。
- en: Save your *style.css* file and refresh your browser to see the changes you’ve
    made. You should now have a simple web page similar to the one shown at the beginning
    of this project.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 保存你的*style.css*文件并刷新浏览器，查看你所做的更改。现在，你应该已经有了一个简单的网页，类似于本项目开始时展示的页面。
- en: '**TAKING IT FURTHER**'
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**进一步拓展**'
- en: 'This project was just a quick introduction on how to build a simple web page
    with HTML and CSS. There are endless ways in which you can edit and improve it.
    We encourage you to play around with all the options introduced here. For inspiration,
    you could:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目只是一个如何使用HTML和CSS构建简单网页的快速介绍。你可以以无穷无尽的方式编辑和改进它。我们鼓励你尝试这里介绍的所有选项。如果需要灵感，你可以：
- en: Add multiple pages to your main page with hyperlinks to each other.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用超链接将多个页面添加到主页面并相互连接。
- en: Create a web page that showcases one of your Raspberry Pi projects.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个网页，展示你的某个Raspberry Pi项目。
- en: Search the web for more CSS properties and values and edit the way your page
    looks.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在网上搜索更多CSS属性和值，并编辑页面的显示效果。
