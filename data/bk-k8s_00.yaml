- en: INTRODUCTION
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: '![image](../images/common01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: Containers and Kubernetes together are changing the way that applications are
    architected, developed, and deployed. Containers ensure that software runs reliably
    no matter where it’s deployed, and Kubernetes lets you manage all of your containers
    from a single control plane.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 容器和 Kubernetes 一起正在改变应用程序的架构、开发和部署方式。容器确保软件在任何部署地点都能可靠运行，而 Kubernetes 让你可以从单一控制平面管理所有容器。
- en: This book is designed to help you take full advantage of these essential new
    technologies, using hands-on examples not only to try out the major features but
    also to explore how each feature works. In this way, beyond simply being ready
    to deploy an application to Kubernetes, you’ll gain the skills to architect applications
    to be performant and reliable in a Kubernetes cluster, and to quickly diagnose
    problems when they arise.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在帮助你充分利用这些重要的新技术，采用实践示例，不仅尝试主要功能，还探索每个功能的工作原理。通过这种方式，除了能够准备好将应用程序部署到 Kubernetes
    外，你还将获得设计高效且可靠的 Kubernetes 集群中应用程序架构的技能，并能够在问题出现时快速诊断。
- en: The Approach
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法论
- en: The biggest advantage of a Kubernetes cluster is that it hides the work of running
    containers across multiple hosts behind an abstraction layer. A Kubernetes cluster
    is a “black box” that runs what we tell it to run, with automatic scaling, failover,
    and upgrades to new versions of our application.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 集群的最大优势在于，它通过抽象层隐藏了在多个主机上运行容器的工作。Kubernetes 集群是一个“黑盒”，我们告诉它运行什么，它就运行什么，具备自动扩展、故障切换和应用程序的新版本升级等功能。
- en: Even though this abstraction makes it easier to deploy and manage applications,
    it also makes it difficult to understand what a cluster is doing. For this reason,
    this book presents each feature of container runtimes and Kubernetes clusters
    from a “debugging” perspective. Every good debugging session starts by treating
    the application as a black box and observing its behavior, but it doesn’t end
    there. Skilled problem solvers know how to open the black box, diving below the
    current abstraction layer to see how the program runs, how data is stored, and
    how traffic flows across the network. Skilled architects use this deep knowledge
    of a system to avoid performance and reliability issues. This book provides the
    detailed understanding of containers and Kubernetes that only comes from exploring
    not only what these technologies do but also how they work.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这种抽象使得部署和管理应用程序变得更加容易，但它也使得理解集群正在做什么变得困难。因此，本书从“调试”视角呈现每个容器运行时和 Kubernetes
    集群的功能。每一次好的调试会话都从将应用程序当作黑盒并观察其行为开始，但它不会仅止步于此。经验丰富的问题解决者知道如何打开黑盒，深入当前的抽象层以下，查看程序是如何运行的，数据是如何存储的，以及流量是如何在网络中流动的。熟练的架构师利用对系统的深刻理解，避免性能和可靠性问题。本书提供了对容器和
    Kubernetes 的详细理解，这种理解来源于不仅探索这些技术做了什么，还要了解它们是如何工作的。
- en: In [Part I](part01.xhtml#part01), we’ll begin by running a container, but then
    we’ll dive into the container runtime to understand what a container is and how
    we can simulate a container using normal operating system commands. In [Part II](part02.xhtml#part02),
    we’ll install a Kubernetes cluster and deploy containers to it. We’ll also see
    how the cluster works, including how it interacts with the container runtime and
    how packets flow from container to container across the host network. The purpose
    is not to duplicate the reference documentation to show every option offered by
    every feature but to demonstrate how each feature is implemented so that all that
    documentation will make sense and be useful.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第一部分](part01.xhtml#part01)中，我们将从运行一个容器开始，然后深入容器运行时，理解什么是容器以及如何使用普通操作系统命令模拟容器。在[第二部分](part02.xhtml#part02)中，我们将安装一个
    Kubernetes 集群并将容器部署到集群中。我们还将看到集群如何工作，包括它如何与容器运行时交互，以及数据包如何在主机网络中从一个容器流向另一个容器。本书的目的是不是为了重复参考文档，列出每个功能提供的所有选项，而是演示每个功能如何实现，从而使得所有文档内容都能理解且有用。
- en: A Kubernetes cluster is complicated, so this book includes extensive hands-on
    examples, with enough automation to allow you to explore each chapter independently.
    This automation, which is available at *[https://github.com/book-of-kubernetes/examples](https://github.com/book-of-kubernetes/examples)*,
    is published under a permissive open source license, so you can explore, experiment,
    and use it in your own projects.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 集群非常复杂，因此本书包含了大量的实践示例，并提供了足够的自动化工具，使你能够独立探索每一章。这些自动化工具可以在 *[https://github.com/book-of-kubernetes/examples](https://github.com/book-of-kubernetes/examples)*
    上找到，并以宽松的开源许可证发布，因此你可以在自己的项目中进行探索、实验和使用。
- en: Running Examples
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行示例
- en: In many of this book’s example exercises, you’ll be combining multiple hosts
    together to make a cluster, or working with low-level features of the Linux kernel.
    For this reason, and to help you feel more comfortable with experimentation, you’ll
    be running examples entirely on temporary virtual machines. That way, if you make
    a mistake, you can quickly delete the virtual machine and start over.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的许多示例练习中，你将把多个主机组合在一起以构建一个集群，或者操作 Linux 内核的低级功能。基于这个原因，并且为了帮助你在实验过程中感到更舒适，你将完全在临时虚拟机上运行示例。这样，如果你犯了错误，可以迅速删除虚拟机并重新开始。
- en: The example repository for this book is available at *[https://github.com/book-of-kubernetes/examples](https://github.com/book-of-kubernetes/examples)*.
    All of the instructions for setting up to run examples are provided in a *README.md*
    file within the *setup* folder of the example repository.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的示例代码库可以在 *[https://github.com/book-of-kubernetes/examples](https://github.com/book-of-kubernetes/examples)*
    上找到。所有设置示例运行的说明都在示例代码库的 *setup* 文件夹中的 *README.md* 文件里。
- en: What You Will Need
  id: totrans-12
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 你需要的东西
- en: Even though you’ll be working in virtual machines, you’ll need a control machine
    to start from that can run Windows, macOS, or Linux. It can even be a Chromebook
    that supports Linux. If you are running Windows, you’ll need to use the Windows
    Subsystem for Linux (WSL) in order to get Ansible working. See the *README.md*
    in the *setup* folder for instructions.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你在虚拟机中工作，你仍然需要一台控制机器作为起始点，可以运行 Windows、macOS 或 Linux。它甚至可以是一台支持 Linux 的 Chromebook。如果你使用
    Windows，你需要使用 Windows Subsystem for Linux (WSL) 来使 Ansible 正常工作。有关详细说明，请参见 *setup*
    文件夹中的 *README.md* 文件。
- en: Run in the Cloud or Local
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在云端或本地运行
- en: To make these examples as accessible as possible, I’ve provided automation to
    run them either using Vagrant or Amazon Web Services (AWS). If you have access
    to a Windows, macOS, or Linux computer with at least eight cores and 8GB of memory,
    try installing VirtualBox and Vagrant and work with local virtual machines. If
    not, you can set yourself up to work with AWS.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了尽可能让这些示例易于访问，我提供了自动化工具，可以通过 Vagrant 或 Amazon Web Services (AWS) 运行它们。如果你有一台至少具有八核和
    8GB 内存的 Windows、macOS 或 Linux 计算机，可以尝试安装 VirtualBox 和 Vagrant，并使用本地虚拟机。如果没有，你可以设置自己在
    AWS 上工作。
- en: We use Ansible to perform AWS setup and automate some of the tedious steps.
    Each chapter includes a separate Ansible playbook that makes use of common roles
    and collections. This means that you can work examples from chapter to chapter,
    starting with a fresh installation each time. In some cases, I’ve also provided
    an “extra” provisioning playbook that you can optionally use to skip some of the
    detailed installation steps and get straight to the learning. See the *README.md*
    in each chapter’s directory for more information.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 Ansible 来执行 AWS 设置并自动化一些繁琐的步骤。每个章节都包含一个单独的 Ansible 剧本，利用了常见的角色和集合。这意味着你可以逐章工作，每次从全新安装开始。在某些情况下，我还提供了一个“额外的”配置剧本，你可以选择性使用它跳过一些详细的安装步骤，直接进入学习内容。有关更多信息，请参阅每个章节目录中的
    *README.md* 文件。
- en: Terminal Windows
  id: totrans-17
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 终端窗口
- en: 'After you’ve used Ansible to provision your virtual machines, you’ll need to
    get at least one terminal window connected to run commands. The *README.md* file
    in each chapter will tell you how to do that. Before running any examples, you’ll
    first need to become the root user, as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在你使用 Ansible 配置好虚拟机后，你需要至少一个终端窗口来运行命令。每个章节中的 *README.md* 文件会告诉你如何做到这一点。在运行任何示例之前，你首先需要成为
    root 用户，如下所示：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will give you a root shell and set up your environment and home directory
    to match.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为你提供一个 root shell，并设置你的环境和主目录以匹配。
- en: '**RUNNING AS ROOT**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**以 ROOT 用户身份运行**'
- en: If you’ve worked with Linux before, you probably have a healthy aversion to
    working as root on a regular basis, so it might surprise you that all of the examples
    in this book are run as the root user. This is a big advantage of using temporary
    virtual machines and containers; when we act as the root user, we are doing so
    in a temporary, confined space that can’t reach out and affect anything else.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你以前使用过 Linux，可能会对以 root 用户身份频繁工作感到不安，因此你可能会感到惊讶，本书中的所有示例都是以 root 用户身份运行的。这是使用临时虚拟机和容器的一大优势；当我们以
    root 用户身份操作时，我们是在一个临时的、受限的空间内进行的，这个空间无法影响到其他任何东西。
- en: As you move from learning about containers and Kubernetes to running applications
    in production, you’ll be applying security controls to your cluster that will
    limit administrative access and will ensure that containers cannot break out of
    their isolated environment. This often includes configuring your containers so
    that they run as a non-root user.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当你从学习容器和 Kubernetes 转向在生产环境中运行应用时，你将会为集群应用安全控制措施，这些措施将限制管理员访问权限，并确保容器无法突破其隔离环境。这通常包括配置容器使其以非
    root 用户身份运行。
- en: In some examples, you’ll need to open multiple terminal windows in order to
    leave one process running while you inspect it from another terminal. How you
    do that is up to you; most terminal applications support multiple tabs or multiple
    windows. If you need a way to open multiple terminals within a single tab, try
    exploring a terminal multiplexer application. All of the temporary virtual machines
    used in the examples come with both `screen` and `tmux` installed and ready to
    use.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些示例中，你可能需要打开多个终端窗口，以便在检查一个进程时保持另一个进程在运行。如何操作取决于你；大多数终端应用都支持多个标签页或多个窗口。如果你需要一种在单个标签页中打开多个终端的方法，可以尝试使用终端复用器应用。所有示例中使用的临时虚拟机都预装了
    `screen` 和 `tmux`，可以随时使用。
