- en: '![](Images/chapterart.png)'
  id: totrans-0
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/chapterart.png)'
- en: '6'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Mail Sorting
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 邮件分类
- en: '![Alphabet-I](Images/Alphabet-I.png)n the last few chapters, you’ve been training
    a computer to recognize images. There are lots of useful jobs that computers can
    help us do if they know how to see. One such job, *optical character recognition*
    ***(OCR)*, is when a computer is able to recognize a picture of a letter or number
    after it has seen lots of examples of that character.**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '![Alphabet-I](Images/Alphabet-I.png)在过去几章中，您一直在训练计算机识别图像。如果计算机知道如何看，便有许多有用的工作可以帮助我们完成。一个这样的工作是*光学字符识别*
    ***(OCR)*，即计算机在看到大量该字符的例子后，能够识别字母或数字的图片。**'
- en: '**A computer trained to do OCR can read the printed words in newspapers and
    books.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**一台经过训练的计算机可以读取报纸和书籍中的印刷文字。**'
- en: When combined with a text-to-speech system that can read the recognized words
    out loud, OCR is used to help visually impaired people read text that they might
    not be able to see for themselves.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当与文本转语音系统结合时，可以大声朗读识别出的文字，OCR可帮助视力障碍者阅读他们可能无法自己看到的文本。
- en: Historians, librarians, and archivists use OCR to study historical books and
    printed documents. ML makes it possible to search through publications going back
    hundreds of years, because OCR can recognize the words.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 历史学家、图书馆员和档案管理员使用OCR来研究历史书籍和印刷文献。机器学习使得通过几百年前的出版物进行搜索成为可能，因为OCR可以识别单词。
- en: On our roads, OCR systems recognize letters and numbers on license plates. *Automatic
    number plate recognition* *(ANPR)* is used to keep traffic flowing by enabling
    fast and efficient tolls and to improve road safety by recognizing when a car
    is driving too fast as it passes a checkpoint.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的道路上，OCR系统识别车牌上的字母和数字。*自动车牌识别* *(ANPR)* 用于通过实现快速高效的收费系统来保持交通流畅，并通过识别车辆通过检查点时的速度来提高道路安全性。
- en: Businesses use OCR to help process forms and documents. If you fill in a form
    or write a check, an ML system will often use OCR to automatically recognize what
    you’ve written.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 商业用OCR帮助处理表格和文档。如果您填写表格或写支票，机器学习系统通常会使用OCR自动识别您写的内容。
- en: If you’ve traveled abroad, you may have used translation apps. You can point
    a smartphone at a sign or menu in a foreign language and have the phone translate
    that into your own language. OCR is used to recognize the words and letters in
    the picture.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您曾经出国旅行，您可能使用过翻译应用。您可以将智能手机对准外语的标牌或菜单，手机会将其翻译成您自己的语言。OCR用于识别图片中的单词和字母。
- en: One common use of OCR is to help sort mail, which is what we’ll do in this chapter.
    You’ll train a computer to recognize handwriting and see how OCR can be used to
    quickly sort letters. You’ll create a mail sorting office in Scratch that can
    automatically sort letters by recognizing the postcode written on the envelope
    (see [Figure 6-1](#figure6-1)).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: OCR的一个常见应用是帮助分类邮件，这也是我们在本章中要做的事情。您将训练一台计算机识别手写内容，并看看OCR如何快速地对信件进行分类。您将在Scratch中创建一个邮件分类办公室，可以通过识别信封上写的邮政编码来自动分类信件（参见[图6-1](#figure6-1)）。
- en: Let’s get started!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: '![f06001](Images/f06001.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![f06001](Images/f06001.png)'
- en: '[Figure 6-1:](#figureanchor6-1) Sorting letters by recognizing the postcode'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[图6-1:](#figureanchor6-1) 通过识别邮政编码来排序信件'
- en: Build Your Project
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建您的项目
- en: First, choose three big cities that you want your sorting office to be able
    to recognize letters for.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，选择您希望排序办公室能够识别信件的三个大城市。
- en: 'For my screenshots, I chose three cities in the UK: Edinburgh, Oxford, and
    Southampton.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我的截图，我选择了英国的三个城市：爱丁堡、牛津和南安普敦。
- en: Next, you need to choose some codes that can be used to identify those cities.
    In the UK, where I live, these are called *postcodes*. (In the United States,
    they’re known as ZIP codes.) To make this project quicker, I used the first couple
    of letters of each postcode.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要选择一些可以用来识别这些城市的代码。在我所在的英国，这些被称为*邮政编码*。（在美国，它们被称为ZIP码。）为了加快这个项目的进度，我使用了每个邮政编码的前几个字母。
- en: 'For my project, I used:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我的项目，我使用了：
- en: EH as the postcode for Edinburgh addresses
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EH作为爱丁堡地址的邮政编码
- en: OX as the postcode for Oxford addresses
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OX作为牛津地址的邮政编码
- en: SO as the postcode for Southampton addresses
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SO作为南安普敦地址的邮政编码
- en: If you’re in the United States, instead of the ZIP code, you can use the postal
    abbreviation for the state where your cities are located. For example, you could
    use TX to represent Dallas addresses, or MA to represent Boston addresses.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在美国，您可以使用州的邮政缩写来代替邮政编码。例如，您可以使用TX代表达拉斯的地址，或MA代表波士顿的地址。
- en: Choose *three* cities with *three different short codes* to represent them.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 选择*三个*城市，并为它们选择*三个不同的短编码*来代表它们。
- en: Train Your Model
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练你的模型
- en: To train the computer to recognize the postcodes you’ve chosen, you’ll draw
    examples of those codes and use them to train an ML model.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了训练计算机识别你选择的邮政编码，你需要绘制这些编码的示例，并用它们来训练机器学习模型。
- en: Create a new ML project, name it `Sorting office`, and set it to learn to recognize
    images.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的机器学习项目，命名为`Sorting office`，并设置它学习识别图像。
- en: Click **Train**, as shown in [Figure 6-2](#figure6-2).![f06002](Images/f06002.png)
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**训练**，如[图6-2](#figure6-2)所示。![f06002](Images/f06002.png)
- en: '[Figure 6-2:](#figureanchor6-2) Train is the first phase of an ML project.'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-2:](#figureanchor6-2) 训练是机器学习项目的第一阶段。'
- en: Click **Add new label**, as shown in [Figure 6-3](#figure6-3). Then enter the
    name of your first city.![f06003](Images/f06003.png)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加新标签**，如[图6-3](#figure6-3)所示。然后输入你第一个城市的名称。![f06003](Images/f06003.png)
- en: '[Figure 6-3:](#figureanchor6-3) Click **Add new label** to create training
    buckets for your cities.'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-3:](#figureanchor6-3) 点击**添加新标签**来为你的城市创建训练桶。'
- en: Click **draw** at the bottom of your city training bucket, as shown in [Figure
    6-4](#figure6-4).
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击你城市训练桶底部的**绘图**，如[图6-4](#figure6-4)所示。
- en: In the window that opens, draw in the box to write the code you want to train
    the computer to recognize for this city.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在弹出的窗口中，在框内绘制你想要训练计算机识别的编码。
- en: When you’ve finished writing, click **Add**.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成绘制后，点击**添加**。
- en: '![f06004](Images/f06004.png)'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f06004](Images/f06004.png)'
- en: '[Figure 6-4:](#figureanchor6-4) Click **draw** to add new examples.'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-4:](#figureanchor6-4) 点击**绘图**来添加新示例。'
- en: Repeat step 4 until you have at least 10 examples of the handwritten code for
    your first city, as shown in [Figure 6-5](#figure6-5).![f06005](Images/f06005.png)
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复第4步，直到你为第一个城市绘制了至少10个手写编码示例，如[图6-5](#figure6-5)所示。![f06005](Images/f06005.png)
- en: '[Figure 6-5:](#figureanchor6-5) Training examples for recognizing the postcode
    for Edinburgh'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-5:](#figureanchor6-5) 识别爱丁堡邮政编码的训练示例'
- en: Repeat steps 3 through 5 for the next two cities, until you have at least 10
    examples of each city’s postcode, as shown in [Figure 6-6](#figure6-6).![f06006](Images/f06006.png)
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对接下来的两个城市重复步骤3到5，直到每个城市的邮政编码都有至少10个示例，如[图6-6](#figure6-6)所示。![f06006](Images/f06006.png)
- en: '[Figure 6-6:](#figureanchor6-6) Training examples for postcodes for all three
    cities'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-6:](#figureanchor6-6) 三个城市的邮政编码训练示例'
- en: Click **Back to project** in the top-left corner of the screen.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕左上角的**返回项目**。
- en: Click **Learn & Test**, as shown in [Figure 6-7](#figure6-7).![f06007](Images/f06007.png)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**学习与测试**，如[图6-7](#figure6-7)所示。![f06007](Images/f06007.png)
- en: '[Figure 6-7:](#figureanchor6-7) Learn & Test is the second phase of an ML project.'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-7:](#figureanchor6-7) 学习与测试是机器学习项目的第二阶段。'
- en: Click **Train new machine learning model**, as shown in [Figure 6-8](#figure6-8).
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**训练新机器学习模型**，如[图6-8](#figure6-8)所示。
- en: The computer will use the examples that you’ve written to learn how to recognize
    the codes for different cities. As all your examples have been drawn with the
    same “pen” and in the same color, the computer will probably work best at recognizing
    codes written like that.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 计算机将使用你绘制的示例学习如何识别不同城市的编码。由于你所有的示例都是用相同的“笔”并且用相同的颜色绘制的，计算机可能最擅长识别这样写的编码。
- en: The training process may take a few minutes.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 训练过程可能需要几分钟。
- en: '![f06008](Images/f06008.png)'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f06008](Images/f06008.png)'
- en: '[Figure 6-8:](#figureanchor6-8) Train a new ML model to recognize postcodes.'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-8:](#figureanchor6-8) 训练一个新的机器学习模型来识别邮政编码。'
- en: It’s time to test your ML model! In previous projects, you’ve done this by going
    directly to Scratch and seeing how well the computer recognizes and sorts photos
    you’ve downloaded from the internet or taken with a webcam. This time, we’ll test
    our model here first and make sure we’re happy with it before going on to Scratch.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是测试你的机器学习模型的时候了！在之前的项目中，你是通过直接进入Scratch，看看计算机如何识别并整理你从互联网下载或用网络摄像头拍摄的照片来进行测试的。这一次，我们将在这里先测试我们的模型，确保它符合我们的要求，然后再去Scratch。
- en: Test your ML model by clicking **Test by drawing**, as shown in [Figure 6-9](#figure6-9).
    Try writing codes for your cities and see how good the computer is at recognizing
    what you write.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过点击**通过绘图测试**来测试你的机器学习模型，如[图6-9](#figure6-9)所示。尝试为你的城市写编码，看看计算机识别你写的内容的准确度如何。
- en: '![f06009](Images/f06009.png)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f06009](Images/f06009.png)'
- en: '[Figure 6-9:](#figureanchor6-9) Testing is an important part of ML projects.'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-9:](#figureanchor6-9) 测试是机器学习项目中的重要环节。'
- en: If you don’t see the Test by drawing button, your ML model hasn’t finished training
    yet. You may need to wait for another minute or two.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你没有看到“通过绘图测试”按钮，说明你的机器学习模型尚未完成训练。你可能需要再等一分钟或两分钟。
- en: If you’re not happy with how well your ML model recognizes the postcodes, you
    can go back to the Train phase and add more examples. In general, the more training
    examples you use, the better your ML model will perform. Remember to click **Train
    new machine learning model** again to update your ML model with the new examples.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你对你的机器学习模型识别邮政编码的效果不满意，可以返回训练阶段并添加更多示例。通常，你使用的训练示例越多，机器学习模型的表现就会越好。记得再次点击**训练新机器学习模型**，以便用新的示例更新你的机器学习模型。
- en: Prepare Your Project
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准备你的项目
- en: Now you’ll test your ML model further by creating a virtual mail sorting office
    in Scratch that uses your OCR system to sort envelopes.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你将通过在Scratch中创建一个虚拟的邮件分拣办公室，进一步测试你的机器学习模型，该分拣办公室使用你的OCR系统来分拣信封。
- en: Click **Back to project** in the top-left corner of the screen.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕左上角的**返回项目**。
- en: Click **Make**, as shown in [Figure 6-10](#figure6-10).![f06010](Images/f06010.png)
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**制作**，如[图6-10](#figure6-10)所示。![f06010](Images/f06010.png)
- en: '[Figure 6-10:](#figureanchor6-10) Make is the third phase of an ML project.'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-10：](#figureanchor6-10)制作是机器学习项目的第三阶段。'
- en: Click **Scratch 3**, and then click **Open in Scratch 3** to open a new window
    with Scratch. You should see a new section in the Toolbox, as shown in [Figure
    6-11](#figure6-11), containing blocks from your Sorting Office project.![f06011](Images/f06011.png)
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Scratch 3**，然后点击**在Scratch 3中打开**以在新窗口中打开Scratch。你应该能在工具箱中看到一个新部分，如[图6-11](#figure6-11)所示，其中包含来自你的排序办公室项目的积木。![f06011](Images/f06011.png)
- en: '[Figure 6-11:](#figureanchor6-11) Scratch 3 with your ML model blocks'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-11：](#figureanchor6-11)带有你的机器学习模型积木的Scratch 3'
- en: In the top of the Scratch window, click **Project templates**, as shown in [Figure
    6-12](#figure6-12).
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Scratch窗口顶部，点击**项目模板**，如[图6-12](#figure6-12)所示。
- en: This lets you access sample projects and starter code to help save you time.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这让你可以访问示例项目和启动代码，帮助你节省时间。
- en: '![f06012](Images/f06012.png)'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f06012](Images/f06012.png)'
- en: '[Figure 6-12:](#figureanchor6-12) Click **Project templates** in the top menu.'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-12：](#figureanchor6-12)点击顶部菜单中的**项目模板**。'
- en: Click the **Sorting Office** template, as shown in [Figure 6-13](#figure6-13).![f06013](Images/f06013.png)
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**排序办公室**模板，如[图6-13](#figure6-13)所示。![f06013](Images/f06013.png)
- en: '[Figure 6-13:](#figureanchor6-13) The Sorting Office project template'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-13：](#figureanchor6-13)排序办公室项目模板'
- en: Click the **Stage** backdrop, as shown in [Figure 6-14](#figure6-14).![f06014](Images/f06014.png)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**舞台**背景，如[图6-14](#figure6-14)所示。![f06014](Images/f06014.png)
- en: '[Figure 6-14:](#figureanchor6-14) Click the **Stage** backdrop for the Sorting
    Office project.'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-14：](#figureanchor6-14)点击**舞台**背景，进入排序办公室项目。'
- en: Click the **Backdrops** tab, as shown in [Figure 6-15](#figure6-15).
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**背景**标签，如[图6-15](#figure6-15)所示。
- en: Use the Text tool to edit the labels on the mail sacks. Edit all three sacks
    so that their labels match the names of the cities you chose. If you can’t fit
    the city’s whole name, you can just use the postcode.![f06015](Images/f06015.png)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用文本工具编辑邮件袋上的标签。编辑所有三个袋子，使它们的标签与所选城市的名称匹配。如果城市的完整名称无法容纳，你可以只使用邮政编码。![f06015](Images/f06015.png)
- en: '[Figure 6-15:](#figureanchor6-15) Edit the sack labels to match the cities
    you chose.'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-15：](#figureanchor6-15)编辑邮件袋的标签，使它们与你选择的城市相匹配。'
- en: Click the **postcode** sprite and then click the **Costumes** tab, as shown
    in [Figure 6-16](#figure6-16).![f06016](Images/f06016.png)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**邮政编码**精灵，然后点击**服装**标签，如[图6-16](#figure6-16)所示。![f06016](Images/f06016.png)
- en: '[Figure 6-16:](#figureanchor6-16) You’ll find the postcode sprite in the sprites
    list.'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-16：](#figureanchor6-16)你将在精灵列表中找到邮政编码精灵。'
- en: Use the Paintbrush tool to write the letters for one of your cities onto the
    canvas.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用画笔工具在画布上写下其中一个城市的字母。
- en: You’ll get the best results if you match the line style to the training examples
    that you wrote before, so set **Fill** to black and the line width to about **20**,
    as shown in [Figure 6-17](#figure6-17).
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你将线条风格与之前写的训练示例匹配，效果会更好，因此请将**填充**设置为黑色，并将线条宽度设置为大约**20**，如[图6-17](#figure6-17)所示。
- en: '![f06017](Images/f06017.png)'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f06017](Images/f06017.png)'
- en: '[Figure 6-17:](#figureanchor6-17) Set the paint tools to match your training
    examples.'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-17：](#figureanchor6-17)设置画笔工具以匹配你的训练示例。'
- en: When you’ve finished, click the **Paint** button in the *bottom-left* corner
    to add a new costume, as shown in [Figure 6-18](#figure6-18).![f06018](Images/f06018.png)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，点击左下角的**绘画**按钮，添加一个新服装，如[图6-18](#figure6-18)所示。![f06018](Images/f06018.png)
- en: '[Figure 6-18:](#figureanchor6-18) Click the **Paint** button to add new costumes
    to the postcode sprite.'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-18:](#figureanchor6-18) 点击**绘画**按钮，向邮政代码精灵添加新服装。'
- en: Repeat steps 10 and 11 until you have several costumes in the postcode sprite.
    Draw each city’s code multiple times, as shown in [Figure 6-19](#figure6-19).
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复步骤10和11，直到你在邮政代码精灵中有多个服装。像[图6-19](#figure6-19)所示那样多次绘制每个城市的代码。
- en: Don’t worry if you make a mistake while drawing—just click the blue undo arrow
    next to the costume name.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在绘制时犯了错误，不用担心——只需点击服装名称旁边的蓝色撤销箭头。
- en: '![f06019](Images/f06019.png)'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f06019](Images/f06019.png)'
- en: '[Figure 6-19:](#figureanchor6-19) Draw several test costumes in the postcode
    sprite.'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-19:](#figureanchor6-19) 在邮政代码精灵中绘制多个测试服装。'
- en: Click the **Code** tab and find the `when Green Flag clicked` script, as shown
    in [Figure 6-20](#figure6-20).
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码**选项卡并找到`when Green Flag clicked`脚本，如[图6-20](#figure6-20)所示。
- en: You might need to scroll around to find this script. It should be in the top
    left of the Code Area.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可能需要滚动一下才能找到这个脚本。它应该位于代码区域的左上角。
- en: '![f06020](Images/f06020.png)'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f06020](Images/f06020.png)'
- en: '[Figure 6-20:](#figureanchor6-20) Find the `when Green Flag clicked` script
    in the postcode sprite.'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-20:](#figureanchor6-20) 在邮政代码精灵中找到`when Green Flag clicked`脚本。'
- en: Drag the blocks with the names of your cities into the `when Green Flag clicked`
    script, as shown in [Figure 6-21](#figure6-21).
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将包含城市名称的积木拖入`when Green Flag clicked`脚本中，如[图6-21](#figure6-21)所示。
- en: There’s more than one `when Green Flag clicked` script in the Code Area, so
    scroll around until you find the one that looks like the script in [Figure 6-21](#figure6-21).
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在代码区域中有不止一个`when Green Flag clicked`脚本，因此请滚动查找看起来像[图6-21](#figure6-21)中脚本的那个。
- en: It’s important that you match the order with the names that you wrote on the
    mail sacks on the backdrop. The left sack is `destination1`. The middle sack is
    `destination2`. The right sack is `destination3`.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要的是，你要确保与背景中邮袋上的名称匹配顺序。左边的袋子是`destination1`，中间的袋子是`destination2`，右边的袋子是`destination3`。
- en: '![f06021](Images/f06021.png)'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f06021](Images/f06021.png)'
- en: '[Figure 6-21:](#figureanchor6-21) Identify the names of your cities for the
    project.'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-21:](#figureanchor6-21) 确定你项目中城市的名称。'
- en: Find the `recognise postcode` script in the Code Area. It should be immediately
    beneath the `when Green Flag clicked` script from the previous step, still on
    the **postcode** sprite.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码区域中找到`recognise postcode`脚本，它应该紧接在前一步的`when Green Flag clicked`脚本下方，仍然在**邮政代码**精灵上。
- en: Drag the `recognise image (label)` block into the `recognise postcode` script,
    and then drag the `costume image` block into the `recognise image (label)` block,
    as shown in [Figure 6-22](#figure6-22).![f06022](Images/f06022.png)
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`recognise image (label)`积木拖入`recognise postcode`脚本中，然后将`costume image`积木拖入`recognise
    image (label)`积木中，如[图6-22](#figure6-22)所示。![f06022](Images/f06022.png)
- en: '[Figure 6-22:](#figureanchor6-22) Script for recognizing the postcode on an
    envelope'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图6-22:](#figureanchor6-22) 用于识别信封上邮政编码的脚本'
- en: Test Your Project
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试你的项目
- en: It’s time to try sorting some letters!
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候尝试排序一些信件了！
- en: Click the Green Flag icon to watch your ML model at work.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 点击绿旗图标，观看你的机器学习模型运行。
- en: The conveyor belt at the top of the screen will begin running, and the letters
    with the postcodes you’ve written will start to scroll by, as shown in [Figure
    6-23](#figure6-23).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕顶部的传送带将开始运行，你写下的邮政编码信件将开始滚动，像[图6-23](#figure6-23)所示。
- en: '![f06023](Images/f06023.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![f06023](Images/f06023.png)'
- en: '[Figure 6-23:](#figureanchor6-23) A test envelope on the conveyor belt'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[图6-23:](#figureanchor6-23) 传送带上的测试信封'
- en: The envelope will zoom in while your ML model tries to recognize what you’ve
    written.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当信封在机器学习模型试图识别你写的内容时，它会放大。
- en: Once it has classified your picture, the script will send the envelope to the
    corresponding mail sack, as shown in [Figure 6-24](#figure6-24).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦它识别了你的图片，脚本将把信封发送到相应的邮袋，像[图6-24](#figure6-24)所示。
- en: '![f06024](Images/f06024.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![f06024](Images/f06024.png)'
- en: '[Figure 6-24:](#figureanchor6-24) Test results for recognizing a postcode'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[图6-24:](#figureanchor6-24) 识别邮政编码的测试结果'
- en: Review and Improve Your Project
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回顾并改进你的项目
- en: You’ve trained an ML model to recognize handwriting on an envelope, and you’ve
    created a project in Scratch that uses OCR to automatically sort letters!
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经训练了一个机器学习模型来识别信封上的手写文字，并且你在 Scratch 中创建了一个使用 OCR 自动排序信件的项目！
- en: How could you improve your project?
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 你能如何改进你的项目？
- en: Try getting someone else to test your project. Can it recognize their handwriting?
    If the model makes a lot of mistakes with their handwriting, ask them to add some
    examples to your training buckets in the Train phase. (Make sure that you train
    a new ML model in the Learn & Test phase so that the computer can learn from both
    of your examples.)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试让别人来测试你的项目。它能识别他们的手写字吗？如果模型在识别他们的手写字时出现很多错误，请让他们在训练阶段向你的训练数据桶中添加一些示例。（确保在学习与测试阶段重新训练一个新的机器学习模型，这样计算机才能从你们两个的示例中学习。）
- en: The wider the variety of examples you use to train the computer, the better
    the ML model should be at recognizing different handwriting styles.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你用来训练计算机的示例种类越多，机器学习模型在识别不同手写风格时的效果就越好。
- en: What else could you do to improve your project?
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以做些什么来改进你的项目？
- en: What You Learned
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你学到了什么
- en: Sorting mail is a common use of *optical character recognition***. Large sorting
    offices around the world use OCR systems to recognize and sort letters in a fraction
    of a second. Your project just recognized a postcode, but real-world multiline
    optical character readers can recognize several lines of an address. The basic
    idea is very similar, and it helps make large-scale mail sorting efficient and
    practical.**
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 排序邮件是*光学字符识别*的一个常见应用。全球各地的大型邮件处理中心使用 OCR 系统在瞬间识别和排序信件。你的项目刚刚识别了一个邮政编码，但现实中的多行光学字符识别仪器可以识别多行地址。基本原理非常相似，它有助于大规模邮件排序的高效性和实用性。
- en: '**All of your projects so far have used images, but computers can be trained
    to recognize many different types of data. In the next chapter, you’ll train an
    ML model to recognize text!****'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**到目前为止，你的所有项目都使用了图像，但计算机也可以训练来识别许多不同类型的数据。在下一章，你将训练一个机器学习模型来识别文本！**'
