- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: 'Every day of their working lives, DevOps engineers immerse themselves in cloud-based
    trends and technologies. Meanwhile, everyone else in engineering is expected to
    be familiar with DevOps and keep pace with how it is evolving. The reason is simple:
    DevOps is an integral part of software development. However, you probably don’t
    have time to both do your day job and keep tabs on the ever-changing landscape
    of DevOps—and luckily, you don’t have to. Just gain an understanding of the foundational
    concepts, terms, and tactics of DevOps, and you’ll go far.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 每天，DevOps 工程师都沉浸在基于云的趋势和技术中。与此同时，工程领域的其他人也被期望熟悉 DevOps，并跟上它的发展步伐。原因很简单：DevOps
    是软件开发不可或缺的一部分。然而，你可能没有时间既做本职工作，又跟上 DevOps 不断变化的局面——幸运的是，你不需要这样做。只需了解 DevOps 的基础概念、术语和策略，你就能走得更远。
- en: On the other hand, when it comes time to deliver code, you can’t just put your
    head in the sand and hope someone else will deal with it. Writing configuration
    files, enforcing observability, and setting up continuous integration/continuous
    delivery (CI/CD) pipelines have become the norm in software development. You therefore
    need to be well versed in code and infrastructure.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，当需要交付代码时，你不能只是把头埋在沙子里，希望别人来处理。编写配置文件、强制实施可观测性、设置持续集成/持续交付（CI/CD）管道已经成为软件开发中的常态。因此，你需要精通代码和基础设施。
- en: 'If you’re a software engineer, developer, or systems administrator, this book
    will teach you the concepts, commands, and techniques that will give you a solid
    foundation in DevOps, reliability, and modern application stacks. But be aware
    that this is an introduction to DevOps, not a definitive guide. I’ve chosen to
    keep the knowledge fire hose turned down low, and I’ll focus on the following
    foundational concepts:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是软件工程师、开发人员或系统管理员，本书将教你 DevOps、可靠性和现代应用堆栈的概念、命令和技术，为你打下坚实的基础。但请注意，这只是 DevOps
    的介绍，而非权威指南。我选择将知识的火 hose 轻轻开着，专注于以下几个基础概念：
- en: Infrastructure as code
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基础设施即代码
- en: Configuration management
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置管理
- en: Security
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安全
- en: Containerization and orchestration
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 容器化与编排
- en: Delivery
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交付
- en: Monitoring and alerting
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 监控与告警
- en: Troubleshooting
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 故障排除
- en: Plenty of other great books will take you on a deep dive into the concepts and
    culture of DevOps. I encourage you to read them and learn more. But if you just
    want to get started with the basics, *DevOps for the Desperate* has you covered.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他优秀的书籍可以深入探讨 DevOps 的概念和文化。我鼓励你去阅读它们，了解更多。但如果你只想从基础开始，《*DevOps for the
    Desperate*》这本书就能满足你的需求。
- en: What Is the Current State of DevOps?
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps 的现状如何？
- en: Over the past few years, different trends have emerged in DevOps. There is a
    heavy focus on microservices, container orchestration (Kubernetes), automated
    code delivery (CI/CD), and observability (detailed logging, tracing, monitoring,
    and alerting). These topics aren’t new to the DevOps community, but they’re gaining
    more attention because everyone has swallowed the red pill and gone down the cloud-and-containerization
    rabbit hole.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几年里，DevOps 中出现了不同的趋势。重点放在微服务、容器编排（Kubernetes）、自动化代码交付（CI/CD）和可观测性（详细的日志记录、追踪、监控和告警）上。这些话题对
    DevOps 社区来说并不陌生，但由于大家都已经“吃下红药丸”，进入了云计算和容器化的世界，这些话题正在获得更多关注。
- en: Automating and testing the “code to customer” experience is still one of the
    most important parts of DevOps, and it will continue to be as late adopters play
    catch-up. As engineering ecosystems mature, more and more DevOps work is occurring
    higher up the tech stack. In other words, DevOps engineers are heavily relying
    on tools and processes so software engineers can self-serve shipping code. Because
    of this, sharing DevOps practices and techniques with feature teams is paramount
    to delivering standardized and predictable software.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化和测试“代码到客户”的体验仍然是 DevOps 中最重要的部分之一，并且随着后期采用者的追赶，这一趋势将持续下去。随着工程生态系统的成熟，越来越多的
    DevOps 工作正在向技术栈的更高层次发展。换句话说，DevOps 工程师越来越依赖工具和流程，以便软件工程师能够自助地交付代码。因此，与功能团队共享 DevOps
    实践和技术对交付标准化和可预测的软件至关重要。
- en: A few more emerging trends are worth a brief mention here. The first is security.
    DevSecOps is becoming an essential part of the build process rather than a post-release
    afterthought. Another trend is the use of machine learning for data-driven decisions
    like alerting. Machine learning insights can be extremely useful in heuristics
    and will play a larger role going forward.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个新兴趋势值得简要提及。第一个是安全性。DevSecOps正在成为构建过程中的一个必要部分，而不是发布后的附加思考。另一个趋势是利用机器学习进行数据驱动的决策，例如警报。机器学习的洞察力在启发式方面非常有用，并将在未来发挥更大的作用。
- en: Who Should Read This Book?
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谁应该阅读本书？
- en: This book is aimed at helping software engineers feel at home and thrive in
    a modern application stack. As such, it provides just the right amount of introductory
    information about DevOps tasks. This is not to say it has nothing to offer established
    DevOps engineers. On the contrary, it provides plenty of useful information about
    containerization, monitoring, and troubleshooting. If you are a DevOps engineer
    or software engineer in a small shop, you can even use this book to help you create
    your whole application stack, from local development to production.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在帮助软件工程师在现代应用栈中感到得心应手并茁壮成长。因此，它提供了关于DevOps任务的适量入门信息。这并不是说它对已成型的DevOps工程师毫无帮助。恰恰相反，它提供了许多关于容器化、监控和故障排除的有用信息。如果您是DevOps工程师或小型企业的软件工程师，您甚至可以使用本书帮助您创建整个应用栈，从本地开发到生产。
- en: So, if you’re a software developer looking for knowledge about DevOps, this
    book is for you. If you’re interested in becoming more of a generalist, this book
    is for you. And if I’ve paid you money to read this book—well, this book is definitely
    for you.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果您是一个软件开发人员，想了解有关DevOps的知识，本书适合您。如果您有兴趣成为一名通才，本书适合您。如果我付钱给您读这本书——嗯，那么这本书绝对适合您。
- en: How This Book Is Organized
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书的组织结构
- en: 'This book is divided into three parts, as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本书分为三个部分，如下所示：
- en: 'Part I: Infrastructure as Code, Configuration Management, Security, and Administration'
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第一部分：基础设施即代码、配置管理、安全性和管理
- en: Part I introduces the concepts of infrastructure as code (IaC) and configuration
    management (CM), which are essential for building systems with a repeatable, versioned,
    and predictable state. We’ll also explore host-based and user-based security.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分介绍了基础设施即代码（IaC）和配置管理（CM）的概念，这对于构建具有可重复、版本化和可预测状态的系统至关重要。我们还将探索基于主机和基于用户的安全性。
- en: 'Chapter 1: Setting Up a Virtual Machine This chapter discusses the concepts
    of IaC and CM. It then introduces two technologies, Vagrant and Ansible, that
    you’ll use to create and provision an Ubuntu VM.'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第1章：设置虚拟机 本章讨论了IaC和CM的概念。接着介绍了两种技术，Vagrant和Ansible，您将使用它们来创建和配置Ubuntu虚拟机。
- en: 'Chapter 2: Using Ansible to Manage Passwords, Users, and Groups This chapter
    looks at how to use CM for user and group creation to restrict file and directory
    access. It also explains how to use CM to enforce complex passwords.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第2章：使用Ansible管理密码、用户和组 本章探讨了如何使用CM进行用户和组创建，以限制文件和目录的访问权限。还解释了如何使用CM强制执行复杂密码。
- en: 'Chapter 3: Using Ansible to Configure SSH This chapter shows you how to set
    up public key and two-factor authentication over SSH, thus making it harder for
    unauthorized users to gain access to your host and sensitive data.'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第3章：使用Ansible配置SSH 本章展示了如何设置公钥和双因素身份验证，从而使未经授权的用户更难访问您的主机和敏感数据。
- en: 'Chapter 4: Controlling User Commands with sudo This chapter shows you how to
    create a security policy that delegates command access for a specific user and
    group. Controlling the command access that users and groups have on a host can
    help you avoid unnecessary exposure to attackers. At a minimum, it prevents you
    from having a poorly configured OS.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第4章：使用sudo控制用户命令 本章向您展示了如何创建一个安全策略，委派特定用户和组的命令访问权限。控制用户和组在主机上的命令访问权限可以帮助您避免不必要的暴露给攻击者。至少，它可以防止您拥有配置不当的操作系统。
- en: 'Chapter 5: Automating and Testing a Host-Based Firewall This chapter describes
    how to create and test a minimal firewall that will block all unwanted access
    while permitting approved traffic. By limiting port exposure, you can reduce the
    vulnerabilities your host and application may encounter from the outside.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第5章：自动化和测试基于主机的防火墙 本章描述了如何创建和测试一个最小的防火墙，它将阻止所有不需要的访问，同时允许批准的流量。通过限制端口暴露，您可以减少主机和应用程序可能遭遇的外部漏洞。
- en: 'Part II: Containerization and Deploying Modern Applications'
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第二部分：容器化和部署现代应用
- en: Part II introduces the concepts of containerization, orchestration, and delivery.
    It also explores some of the components that make up a modern stack.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 第二部分介绍了容器化、编排和交付的概念。它还探讨了一些构成现代栈的组件。
- en: 'Chapter 6: Containerizing an Application with Docker This chapter introduces
    containers and containerization, and it shows how to create a sample containerized
    application. Having a basic understanding of containers and how to use them for
    local development and production is key to your ability to work with any modern
    application stack.'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第六章：使用 Docker 容器化应用 本章介绍了容器和容器化，并展示了如何创建一个示例容器化应用。理解容器及如何将其用于本地开发和生产环境是你能与任何现代应用栈协作的关键。
- en: 'Chapter 7: Orchestrating with Kubernetes This chapter introduces container
    orchestration and explores how to use technologies like Kubernetes and minikube
    to deploy an application on a local cluster. It also serves as an example of how
    to set up a local development environment.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第七章：使用 Kubernetes 进行编排 本章介绍了容器编排，并探讨了如何使用 Kubernetes 和 minikube 等技术在本地集群上部署应用。它还展示了如何设置本地开发环境的示例。
- en: 'Chapter 8: Deploying Code This chapter discusses the concept of continuous
    integration and continuous deployment (CI/CD). It also explores some core technologies,
    like Skaffold, that allow you to create a pipeline on a local Kubernetes cluster.
    After building an effective CI/CD pipeline, you’ll have a good understanding of
    how to build, test, and deploy software.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第八章：部署代码 本章讨论了持续集成和持续部署（CI/CD）的概念。它还探讨了一些核心技术，如 Skaffold，帮助你在本地 Kubernetes 集群上创建管道。构建有效的
    CI/CD 管道后，你将能够很好地理解如何构建、测试和部署软件。
- en: 'Part III: Observability and Troubleshooting'
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第三部分：可观测性与故障排除
- en: Finally, Part III introduces the concepts of monitoring, alerting, and troubleshooting.
    It looks at metric collection and visualization for applications and hosts. It
    also discusses some common host and application issues, as well as tools you can
    use to diagnose them.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，第三部分介绍了监控、告警和故障排除的概念。它讨论了应用和主机的度量收集与可视化，还讨论了一些常见的主机和应用问题，以及你可以使用的工具来诊断它们。
- en: 'Chapter 9: Observability This chapter introduces the concept of a monitoring
    and alerting stack, and it explores the technologies (Prometheus, Alertmanager,
    and Grafana) that make up this stack. You’ll learn how to detect a system’s state
    and alert on it when things are out of scope.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第九章：可观测性 本章介绍了监控和告警堆栈的概念，并探讨了构成该堆栈的技术（Prometheus、Alertmanager 和 Grafana）。你将学习如何检测系统状态，并在出现问题时进行告警。
- en: 'Chapter 10: Troubleshooting Hosts The last chapter discusses common issues
    and errors on a host and some tools you can use to troubleshoot them. Being able
    to analyze issues on a host will help you in times of crisis and help you understand
    performance issues in your own code and applications.'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第十章：故障排除主机 最后一章讨论了主机上常见的问题和错误，以及你可以使用的一些工具来排查它们。能够分析主机上的问题将帮助你在危机时刻找到解决方案，并帮助你理解自己代码和应用中的性能问题。
- en: What You’ll Need
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你需要的工具
- en: 'In order to explore the DevOps concepts in this book, you’ll install some tooling
    and the free VirtualBox virtualization technology for x86 hardware that allows
    you to run other operating systems on your local host. Unfortunately, some of
    the tools needed for these tasks won’t work natively on some OSes and CPUs, such
    as Windows and Apple Silicon. Using Linux or an Intel-based Mac as the host machine
    is the most straightforward option. The following list summarizes what you can
    expect for each OS:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 为了探索本书中的 DevOps 概念，你将安装一些工具以及适用于 x86 硬件的免费虚拟化技术 VirtualBox，这样你就可以在本地主机上运行其他操作系统。不幸的是，某些操作系统和
    CPU（如 Windows 和 Apple Silicon）上，某些所需工具无法原生运行。使用 Linux 或基于 Intel 的 Mac 作为主机是最直接的选择。以下是针对每种操作系统的概述：
- en: '**Linux**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**Linux**'
- en: If you’re on a Linux host, all the examples and sample applications will work
    out of the box. Since you’ll be installing VirtualBox, you’ll want to be running
    a desktop version of Linux rather than a headless server.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是 Linux 主机，所有示例和示范应用都可以直接使用。由于你将安装 VirtualBox，你需要运行一个桌面版的 Linux，而不是无头服务器。
- en: '**Intel-based Mac**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**基于 Intel 的 Mac**'
- en: If you’re running an Intel-based Mac, as with Linux, all the examples and sample
    applications will work without any modifications. Use the Brew package manager
    ([https://brew.sh](https://brew.sh)) to install software.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是基于 Intel 的 Mac，像在 Linux 上一样，所有的示例和应用程序都无需任何修改即可运行。使用 Brew 包管理器 ([https://brew.sh](https://brew.sh))
    安装软件。
- en: '**Windows**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**Windows**'
- en: If you’re on a Windows host, installing all the tools and applications in this
    book can be a challenge. For example, you’ll use Ansible to explore configuration
    management, but there’s no easy way to install Ansible on Windows. As a workaround,
    you can use an Ubuntu VM as your starting point. I recommend creating the VM with
    Hyper-V, since it’s native to Windows. You’ll need Windows 10 or 11 Pro to use
    Hyper-V. See the Ubuntu Wiki ([https://wiki.ubuntu.com/Hyper-V](https://wiki.ubuntu.com/Hyper-V))
    for instructions on creating an Ubuntu VM on Hyper-V.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是 Windows 主机，在本书中安装所有工具和应用程序可能会遇到一些挑战。例如，你将使用 Ansible 来探索配置管理，但在 Windows
    上没有简单的方法安装 Ansible。作为解决方法，你可以使用 Ubuntu 虚拟机作为起点。我建议使用 Hyper-V 创建虚拟机，因为它是 Windows
    的原生功能。你需要 Windows 10 或 11 专业版才能使用 Hyper-V。有关如何在 Hyper-V 上创建 Ubuntu 虚拟机的说明，请参阅
    Ubuntu Wiki ([https://wiki.ubuntu.com/Hyper-V](https://wiki.ubuntu.com/Hyper-V))。
- en: 'You’ll also need to enable nested virtualization since you’ll be installing
    VirtualBox inside the Hyper-V Ubuntu VM. To enable this feature, enter the following
    command in an administrative PowerShell terminal:'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还需要启用嵌套虚拟化，因为你将在 Hyper-V 的 Ubuntu 虚拟机内安装 VirtualBox。要启用此功能，请在管理员 PowerShell
    终端中输入以下命令：
- en: '[PRE0]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You’ll need to run this command when the Ubuntu VM is stopped, or it will fail.
    Replace `VMName` with the name of the Ubuntu VM you just created.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当 Ubuntu 虚拟机停止时，你需要运行此命令，否则它会失败。将 `VMName` 替换为你刚刚创建的 Ubuntu 虚拟机的名称。
- en: After your VM is up and running, you’ll install VirtualBox using the Ubuntu
    version listed at [https://www.virtualbox.org/wiki/Linux_Downloads](https://www.virtualbox.org/wiki/Linux_Downloads).
    After completing that installation, you’ll be able to perform the book’s examples
    from within the newly created VM.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在你的虚拟机启动并运行后，你需要使用 [https://www.virtualbox.org/wiki/Linux_Downloads](https://www.virtualbox.org/wiki/Linux_Downloads)
    上列出的 Ubuntu 版本安装 VirtualBox。完成安装后，你就可以在新创建的虚拟机内运行本书的示例。
- en: For older versions of Windows, you can use VirtualBox (yes, VirtualBox within
    VirtualBox) or VMware ([https://www.vmware.com/products/workstation-player.html](https://www.vmware.com/products/workstation-player.html))
    to create the Ubuntu VM. Instructions for these options are beyond the scope of
    this book.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于旧版本的 Windows，你可以使用 VirtualBox（是的，VirtualBox 在 VirtualBox 内）或 VMware ([https://www.vmware.com/products/workstation-player.html](https://www.vmware.com/products/workstation-player.html))
    来创建 Ubuntu 虚拟机。这些选项的具体说明超出了本书的范围。
- en: '**Apple Silicon**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**苹果硅**'
- en: If you’re using an Apple Silicon computer as your host machine, VirtualBox is
    not an option. Apple Silicon’s CPU is based off the ARM architecture, and VirtualBox
    works only on x86\. Instead, you’ll need to use a virtualization technology like
    Parallels ([https://parallels.com](https://parallels.com)), VMware Fusion ([https://vmware.com](https://vmware.com)),
    or Qemu ([https://www.qemu.org](https://www.qemu.org)) to create an ARM-based
    virtual machine. The first two options are paid software and may provide a better
    user experience. Qemu is free and open source, and it requires some extra configuration
    steps. Visit the companion GitHub repository ([https://github.com/bradleyd/devops_for_the_desperate/tree/main/apple-silicon/](https://github.com/bradleyd/devops_for_the_desperate/tree/main/apple-silicon/))
    for detailed instructions on how to set up a suitable lab to follow along on your
    Apple Silicon Mac.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是苹果硅计算机作为主机，VirtualBox 不是一个可行的选项。苹果硅的 CPU 基于 ARM 架构，而 VirtualBox 仅支持 x86。相反，你需要使用像
    Parallels ([https://parallels.com](https://parallels.com))、VMware Fusion ([https://vmware.com](https://vmware.com))
    或 Qemu ([https://www.qemu.org](https://www.qemu.org)) 这样的虚拟化技术来创建一个基于 ARM 的虚拟机。前两种选择是付费软件，可能提供更好的用户体验。Qemu
    是免费的开源软件，且需要一些额外的配置步骤。访问配套的 GitHub 仓库 ([https://github.com/bradleyd/devops_for_the_desperate/tree/main/apple-silicon/](https://github.com/bradleyd/devops_for_the_desperate/tree/main/apple-silicon/))
    获取有关如何在你的苹果硅 Mac 上设置合适实验环境的详细说明。
- en: To get the best experience, your host should have a minimum of 8GB of memory
    and at least 20GB of free disk space available; your mileage might vary if you
    have less. This book also makes some basic assumptions about your comfort level
    with Linux and the command line. You should be familiar with Bash and feel at
    home editing files.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得最佳体验，主机应至少有 8GB 内存和 20GB 可用磁盘空间；如果你内存或磁盘空间较少，体验可能会有所不同。本书还假设你对 Linux 和命令行有基本的了解。你应该熟悉
    Bash 并能够自如地编辑文件。
- en: Downloading and Installing VirtualBox
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下载和安装 VirtualBox
- en: Download the installer from [https://www.virtualbox.org/wiki/Downloads/](https://www.virtualbox.org/wiki/Downloads/).
    Choose the latest version and the correct download for your specific operating
    system. As mentioned previously, Windows users using Hyper-V will install VirtualBox
    for Ubuntu Linux. For Intel-based Macs, click the OS hosts link and download the
    installer. For Linux, you guessed it—click the Linux distributions link to find
    the download for your distribution. The VirtualBox website has excellent instructions
    for the different OSes at [https://www.virtualbox.org/manual/](https://www.virtualbox.org/manual/).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 从 [https://www.virtualbox.org/wiki/Downloads/](https://www.virtualbox.org/wiki/Downloads/)
    下载安装程序。选择最新版本并下载适合你操作系统的版本。如前所述，Windows 用户如果使用 Hyper-V，将安装适用于 Ubuntu Linux 的 VirtualBox。对于
    Intel 架构的 Mac，请点击 OS 主机链接并下载安装程序。对于 Linux，你猜对了——点击 Linux 发行版链接以找到适合你发行版的下载。VirtualBox
    网站提供了针对不同操作系统的详细安装说明，地址为 [https://www.virtualbox.org/manual/](https://www.virtualbox.org/manual/)。
- en: Launch VirtualBox from where you installed it to verify that it works. If everything
    is okay, you should be greeted with a start screen (see Figure 1).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从你安装 VirtualBox 的位置启动它，以验证是否正常运行。如果一切正常，你应该会看到一个启动屏幕（见图1）。
- en: '![Screenshot showing the blank starting screen of Oracle VM VirtualBox Manager
    with icons at the top for tools, add, import, properties, try, and help](image_fi/502482f06/f00001.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![截图显示了 Oracle VM VirtualBox 管理器的空白启动屏幕，顶部有工具、添加、导入、属性、尝试和帮助等图标](image_fi/502482f06/f00001.png)'
- en: 'Figure 1: VirtualBox start screen on macOS (it will look different depending
    on your host OS)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：macOS 上的 VirtualBox 启动屏幕（根据你的主机操作系统，它的外观会有所不同）
- en: If you decide to use your OS’s package manager to install VirtualBox, make sure
    you’ve got the latest version, as older versions might show differences from the
    examples in this book.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定使用操作系统的包管理器来安装 VirtualBox，请确保你安装的是最新版本，因为旧版本可能与本书中的示例有所不同。
- en: Companion Repository
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配套仓库
- en: As this is a book for the desperate, I have taken the liberty of creating IaC
    files, Kubernetes manifests, an example application, and other things that will
    help you follow along throughout. I have put all the examples and source code
    in a Git repository located at [https://github.com/bradleyd/devops_for_the_desperate.git](https://github.com/bradleyd/devops_for_the_desperate.git).
    To follow along with the chapters and examples, you’ll need to clone the book’s
    repository. Your OS should have Git installed by default, but if it does not,
    visit [https://git-scm.com/downloads](https://git-scm.com/downloads) for information
    on how to download and install Git for your specific OS.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一本面向绝望者的书，我擅自创建了 IaC 文件、Kubernetes 清单、示例应用程序以及其他一些有助于你跟随书中内容的资源。我已经将所有示例和源代码放入
    Git 仓库，地址是 [https://github.com/bradleyd/devops_for_the_desperate.git](https://github.com/bradleyd/devops_for_the_desperate.git)。为了跟随章节和示例，你需要克隆本书的仓库。你的操作系统默认应该已安装
    Git，但如果没有，可以访问 [https://git-scm.com/downloads](https://git-scm.com/downloads)，获取如何为你的操作系统下载和安装
    Git 的信息。
- en: 'From your terminal, enter the following command to clone the companion repository:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中输入以下命令以克隆配套仓库：
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Feel free to clone this repository to anywhere you like. I have added some information
    in the *README* file as well if you need any additional guidance. We’ll revisit
    this repository throughout this book.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 随意将该仓库克隆到你喜欢的任何位置。如果你需要更多帮助，我在 *README* 文件中也添加了一些信息。我们将在本书的过程中多次访问这个仓库。
- en: Editor
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编辑器
- en: Throughout this book, you’ll need to edit and view files to complete tasks.
    For example, in some of the Ansible files, I’ve either left portions commented
    out that you’ll need to uncomment, or you’ll need to fill in some missing information.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，你需要编辑和查看文件以完成任务。例如，在一些 Ansible 文件中，我已经将部分内容注释掉，你需要取消注释，或者你需要填写一些缺失的信息。
- en: I recommend using any editor you are comfortable with. You won’t need any special
    plug-in or dependency to follow along in this book. However, if you look hard
    enough, I am sure you can find syntax plug-ins to help with editing the different
    types of files, like Ansible and Vagrant manifests. I use Vim as my editor, but
    feel free to substitute your favorite.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议使用你熟悉的任何编辑器。你无需任何特殊插件或依赖来跟随本书的内容。然而，如果你仔细寻找，我相信你一定能找到语法插件来帮助编辑不同类型的文件，比如
    Ansible 和 Vagrant 清单文件。我使用 Vim 作为编辑器，但你可以随意替换成你喜欢的编辑器。
- en: And now, with all the background out of the way, you are ready to get started!
    In Chapter 1, we’ll dive into setting up a local virtual machine.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，所有背景知识都已介绍完毕，你已经准备好开始了！在第一章，我们将深入探讨如何设置本地虚拟机。
