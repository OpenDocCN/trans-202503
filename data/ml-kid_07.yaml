- en: '![](Images/chapterart.png)'
  id: totrans-0
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/chapterart.png)'
- en: '9'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '9'
- en: Finding an Object in a Picture
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在图片中找到物体
- en: '![Alphabet-I](Images/Alphabet-I.png)n earlier chapters, you learned that you
    can train an ML system so that if you give it a picture, it can recognize the
    object in that picture. That’s useful when the whole picture is of something that
    you’re interested in, as it was when you made the Rock, Paper, Scissors game in
    Chapter 4. For that game, your hand filled the photo. But sometimes we want the
    computer to learn to find something that’s only a small part of a much bigger
    picture. In this chapter, you’ll see how to break up a complex job into separate
    simpler parts and then use ML for each part.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '![Alphabet-I](Images/Alphabet-I.png)在前几章中，你学到了如何训练一个机器学习系统，让它能够识别图片中的物体。这在整张图片都是你感兴趣的东西时非常有用，就像你在第4章制作石头、剪刀、布游戏时那样。在那个游戏中，你的手占据了整张照片的画面。但有时我们希望计算机学会找到图片中只有一小部分的物体。在这一章中，你将看到如何将一个复杂的任务拆分成几个更简单的部分，然后分别使用机器学习来处理每一部分。'
- en: For example, imagine that you want to use ML to find where the tree is in [Figure
    9-1](#figure9-1).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设你想使用机器学习来找出树在[图9-1](#figure9-1)中的位置。
- en: '![f09001](Images/f09001.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![f09001](Images/f09001.png)'
- en: '[Figure 9-1:](#figureanchor9-1) Where is the tree?'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-1:](#figureanchor9-1) 树在哪里？'
- en: The basic idea is that you train an ML model to recognize pictures of trees,
    in the same way that you trained it to recognize pictures of certain animals in
    Chapter 3. Then, you chop up this new photo into smaller pieces and use that ML
    model to check which piece looks like a picture of a tree.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 基本的想法是，你训练一个机器学习模型来识别树的图片，就像你在第3章中训练它来识别某些动物的图片一样。然后，你将这张新照片拆分成更小的部分，并使用该机器学习模型检查每一部分，看看哪一部分看起来像是一张树的照片。
- en: For example, the top-left piece of [Figure 9-1](#figure9-1) is shown in [Figure
    9-2](#figure9-2). The ML model wouldn’t recognize this picture as a tree, so we
    can say that the tree isn’t in the top left of the picture.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，图9-1的左上角部分在[图9-2](#figure9-2)中有所显示。机器学习模型不会将这张图片识别为树，所以我们可以说树并不在图片的左上角。
- en: '![f09002](Images/f09002.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![f09002](Images/f09002.png)'
- en: '[Figure 9-2:](#figureanchor9-2) Top left of [Figure 9-1](#figure9-1)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-2:](#figureanchor9-2) [图9-1](#figure9-1)的左上角'
- en: Or, we could try the bottom-right piece shown in [Figure 9-3](#figure9-3). The
    ML model wouldn’t recognize this picture as a tree either, so we can say that
    the tree isn’t in the bottom right of the picture.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以尝试[图9-3](#figure9-3)中显示的右下部分。机器学习模型也不会将这张图片识别为树，所以我们可以说树并不在图片的右下角。
- en: '![f09003](Images/f09003.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![f09003](Images/f09003.png)'
- en: '[Figure 9-3:](#figureanchor9-3) Bottom right of [Figure 9-1](#figure9-1)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-3:](#figureanchor9-3) [图9-1](#figure9-1)的右下角'
- en: We keep going until we try testing a picture like [Figure 9-4](#figure9-4).
    When we get a piece that the ML model has high confidence looks like a picture
    of a tree, we know that we’ve found the location of the tree.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们继续进行，直到尝试测试类似[图9-4](#figure9-4)的图片。当我们得到一个机器学习模型高可信度认为是树的图片部分时，我们就知道已经找到了树的位置。
- en: '![f09004](Images/f09004.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![f09004](Images/f09004.png)'
- en: '[Figure 9-4:](#figureanchor9-4) Bottom left of [Figure 9-1](#figure9-1)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-4:](#figureanchor9-4) [图9-1](#figure9-1)的左下角'
- en: A good way to think of it is that you’re breaking the picture up into tiles
    and testing each tile separately. In this chapter, you’ll see for yourself how
    this method works as you train an ML model to find where something is in randomly
    generated scenes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的思考方式是，你将图片拆分成多个小块，并单独测试每一块。在这一章中，你将亲自体验这种方法是如何工作的，同时训练一个机器学习模型来找到随机生成场景中物体的位置。
- en: Build Your Project
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建你的项目
- en: For this chapter, we’ll use a Scratch project that chooses a random backdrop
    and then randomly distributes a dozen sprites around the Stage. One of the sprites
    is a duck. The aim of this project is to find the duck only by looking at the
    Stage, without cheating by using the coordinates of the sprite (see [Figure 9-5](#figure9-5)).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将使用一个Scratch项目，它会选择一个随机背景，然后将十几个精灵随机分布在舞台上。其中一个精灵是一只鸭子。这个项目的目标是仅通过查看舞台来找到那只鸭子，而不是通过使用精灵的坐标来作弊（见[图9-5](#figure9-5)）。
- en: '![f09005](Images/f09005.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![f09005](Images/f09005.png)'
- en: '[Figure 9-5:](#figureanchor9-5) The objective of this project is to find the
    duck.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-5:](#figureanchor9-5) 这个项目的目标是找到那只鸭子。'
- en: Train Your Model
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练你的模型
- en: Create a new ML project, name it `Find the duck`, and set it to learn to recognize
    images.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的机器学习项目，命名为`找到鸭子`，并设置它学习识别图片。
- en: Click **Train**, as shown in [Figure 9-6](#figure9-6).![f09006](Images/f09006.png)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**训练**，如[图9-6](#figure9-6)所示。![f09006](Images/f09006.png)
- en: '[Figure 9-6:](#figureanchor9-6) Train is the first phase of an ML project.'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-6：](#figureanchor9-6) 训练是机器学习项目的第一阶段。'
- en: Click **Add new label**, as shown in [Figure 9-7](#figure9-7). Then enter `Duck`.![f09007](Images/f09007.png)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加新标签**，如[图9-7](#figure9-7)所示。然后输入`Duck`。![f09007](Images/f09007.png)
- en: '[Figure 9-7:](#figureanchor9-7) Create a training bucket for examples of duck
    pictures.'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-7：](#figureanchor9-7) 创建一个用于存储鸭子图片示例的训练桶。'
- en: Click **Add new label** again and name this bucket `Not the Duck`, as shown
    in [Figure 9-8](#figure9-8). (The underscores will be added automatically.)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次点击**添加新标签**，并将此桶命名为`Not the Duck`，如[图9-8](#figure9-8)所示。（下划线会自动添加。）
- en: This bucket will be used to store *negative training examples*, which are examples
    of things that *aren’t* what you want the computer to learn to recognize.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个桶将用于存储*负训练示例*，即那些*不是*你希望计算机学习识别的内容。
- en: '![f09008](Images/f09008.png)'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f09008](Images/f09008.png)'
- en: '[Figure 9-8:](#figureanchor9-8) Create a training bucket for examples of pictures
    not of the duck.'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-8：](#figureanchor9-8) 创建一个用于存储非鸭子图片示例的训练桶。'
- en: Click **Back to project** in the top-left corner of the screen.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕左上角的**返回项目**。
- en: Click **Make**.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**制作**。
- en: Click **Scratch 3**, as shown in [Figure 9-9](#figure9-9).![f09009](Images/f09009.png)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Scratch 3**，如[图9-9](#figure9-9)所示。![f09009](Images/f09009.png)
- en: '[Figure 9-9:](#figureanchor9-9) Click **Scratch 3**.'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-9：](#figureanchor9-9) 点击**Scratch 3**。'
- en: You’ll see a warning that you don’t have an ML model yet. That’s fine, as you’ll
    be using Scratch to collect the training examples.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你会看到一个警告，提示你还没有机器学习模型。没关系，因为你将使用Scratch来收集训练示例。
- en: Click **straight into Scratch**, as shown in [Figure 9-10](#figure9-10).![f09010](Images/f09010.png)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**直接进入Scratch**，如[图9-10](#figure9-10)所示。![f09010](Images/f09010.png)
- en: '[Figure 9-10:](#figureanchor9-10) Open Scratch without an ML model by clicking
    **straight into Scratch**.'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-10：](#figureanchor9-10) 点击**直接进入Scratch**打开没有机器学习模型的Scratch。'
- en: Click **Project templates** in the top menu. Then click **Find the duck** in
    the list of templates displayed.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部菜单中点击**项目模板**。然后点击显示的模板列表中的**查找鸭子**。
- en: The project has 12 sprites arranged on the Stage into a 3×4 grid of tiles. The
    sprites are hidden when you first load the template, but they’re named as shown
    in [Figure 9-11](#figure9-11).
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该项目有12个精灵，排列在舞台上形成3×4的图块网格。当你首次加载模板时，精灵是隐藏的，但它们的名称如[图9-11](#figure9-11)所示。
- en: '![f09011](Images/f09011.png)'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f09011](Images/f09011.png)'
- en: '[Figure 9-11:](#figureanchor9-11) The sprites in the Find the duck template.'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-11：](#figureanchor9-11) 查找“查找鸭子”模板中的精灵。'
- en: Click the **0,0** sprite in the sprites list at the bottom right. At the top
    left of the Code Area, under the yellow TRAINING comment, find the `store training
    data example of the duck` and the `store training data example of NOT the duck`
    blocks, as shown in [Figure 9-12](#figure9-12).![f09012](Images/f09012.png)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右下角精灵列表中的**0,0**精灵。在代码区的左上角，在黄色的TRAINING注释下，找到`store training data example
    of the duck`和`store training data example of NOT the duck`块，如[图9-12](#figure9-12)所示。![f09012](Images/f09012.png)
- en: '[Figure 9-12:](#figureanchor9-12) Find the script blocks for the **0,0** sprite.'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-12：](#figureanchor9-12) 查找**0,0**精灵的脚本块。'
- en: Click the **Find the duck** group in the Toolbox on the left, and add an `add
    training data` block to both of the scripts. Then, from the **Images** group,
    drag a `backdrop image` block into both `add training data` blocks, as shown in
    [Figure 9-13](#figure9-13).
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧工具箱中的**查找鸭子**组，然后在两个脚本中都添加一个`add training data`块。接着，从**图像**组中，将一个`backdrop
    image`块拖到两个`add training data`块中，如[图9-13](#figure9-13)所示。
- en: Set the first script to add the backdrop to the Duck training bucket, and the
    second script to add the backdrop to the Not the Duck training bucket.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将第一个脚本设置为将背景添加到“鸭子”训练桶，第二个脚本设置为将背景添加到“非鸭子”训练桶。
- en: '![f09013](Images/f09013.png)'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f09013](Images/f09013.png)'
- en: '[Figure 9-13:](#figureanchor9-13) Add training examples to the two training
    buckets.'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-13：](#figureanchor9-13) 向两个训练桶添加训练示例。'
- en: Repeat step 11 for all 12 sprites (see [Figure 9-14](#figure9-14)). Once you’ve
    done that, any of the tiles you click can be used to add an example to your training
    data.![f09014](Images/f09014.png)
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对所有12个精灵重复第11步（参见[图9-14](#figure9-14)）。完成后，点击任何一个图块都可以将示例添加到你的训练数据中。![f09014](Images/f09014.png)
- en: '[Figure 9-14:](#figureanchor9-14) Add the script blocks to all 12 sprites.'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-14：](#figureanchor9-14) 将脚本块添加到所有12个精灵。'
- en: It’s time to collect your training examples! Click the Green Flag to start.
    When the project asks if you want to Train or Test, click **Train**.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是收集训练示例的时间了！点击绿旗开始。当项目询问你是否想要训练或测试时，点击**训练**。
- en: Click **OK** when you’re asked to click the duck, and then click the tile with
    the duck in it. The tile you click will be added to your Duck training bucket,
    as shown in [Figure 9-15](#figure9-15).
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当系统询问你是否点击鸭子时，点击**确定**，然后点击包含鸭子的瓷砖。你点击的瓷砖将被添加到你的鸭子训练桶中，如[图9-15](#figure9-15)所示。
- en: Click **OK** when you’re asked to click a tile that doesn’t have the duck in
    it. Make sure to click a tile that doesn’t show *any* part of the duck.![f09015](Images/f09015.png)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当系统询问你是否点击一个没有鸭子的瓷砖时，点击**确定**。确保点击一个没有显示*任何*鸭子部分的瓷砖。![f09015](Images/f09015.png)
- en: '[Figure 9-15:](#figureanchor9-15) Adding an example of the duck to the training
    data'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-15:](#figureanchor9-15) 将鸭子的示例添加到训练数据中'
- en: On the Machine Learning for Kids site, click **Back to project** and then click
    **Train** to make sure that everything is working. You should see both of the
    tiles you clicked, as shown in [Figure 9-16](#figure9-16). Check that they’re
    in the correct buckets.![f09016](Images/f09016.png)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“Machine Learning for Kids”网站上，点击**返回项目**，然后点击**训练**，确保一切正常工作。你应该能看到你点击的两个瓷砖，如[图9-16](#figure9-16)所示。检查它们是否在正确的桶中。![f09016](Images/f09016.png)
- en: '[Figure 9-16:](#figureanchor9-16) Training examples should show up in the correct
    buckets back in the Train phase.'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-16:](#figureanchor9-16) 训练示例应该出现在训练阶段的正确桶中。'
- en: Repeat steps 13 through 15 in Scratch until you’ve got 10 examples in each bucket,
    as shown in [Figure 9-17](#figure9-17).
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Scratch中重复步骤13到15，直到每个桶中有10个示例，如[图9-17](#figure9-17)所示。
- en: 'Here are two tips for your **Not the Duck** training examples:'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里有两个关于**不是鸭子**训练示例的小贴士：
- en: Make sure you don’t click the same character every time for your **Not the Duck**
    bucket. You don’t want that to become a training set for recognizing the parrot,
    for example. The best way to make a good **Not the Duck** training set is to click
    an even mix of the other characters.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保每次为你的**不是鸭子**桶点击的角色都不相同。你不希望它成为识别鹦鹉等的训练集。制作一个好的**不是鸭子**训练集的最佳方法是点击其他角色的均匀混合。
- en: Second, try to include some tiles with no characters at all. You want the computer
    to learn that empty tiles are also *not the duck*.![f09017](Images/f09017.png)
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二，尽量包含一些没有任何字符的瓷砖。你希望计算机学习到空瓷砖也是*不是鸭子*。![f09017](Images/f09017.png)
- en: '[Figure 9-17:](#figureanchor9-17) *Training data for finding the duck*'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-17:](#figureanchor9-17) *用于寻找鸭子的训练数据*'
- en: Click **Back to project** and then **Learn & Test**. Click **Train new machine
    learning model**, as shown in [Figure 9-18](#figure9-18).
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**返回项目**，然后点击**学习与测试**。点击**训练新的机器学习模型**，如[图9-18](#figure9-18)所示。
- en: Wait for the model to finish training. This might take a few minutes.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 等待模型完成训练，这可能需要几分钟时间。
- en: '![f09018](Images/f09018.png)'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f09018](Images/f09018.png)'
- en: '[Figure 9-18:](#figureanchor9-18) Train an ML model using the examples that
    you collected.'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-18:](#figureanchor9-18) 使用你收集的示例训练一个ML模型。'
- en: Prepare Your Project
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准备你的项目
- en: Next, you need to modify your Scratch project to finish the test scripts.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要修改你的Scratch项目来完成测试脚本。
- en: Click the **0,0** sprite in the sprites list at the bottom right and find the
    `when I receive test-0,0` script in the Code Area. It’s to the right of the scripts
    you worked on before, as shown in [Figure 9-19](#figure9-19).![f09019](Images/f09019.png)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右下角角色列表中的**0,0**角色，在代码区域找到`当我收到test-0,0`脚本。它位于你之前编辑过的脚本右侧，如[图9-19](#figure9-19)所示。![f09019](Images/f09019.png)
- en: '[Figure 9-19:](#figureanchor9-19) Find the test script in the **0,0** sprite.'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-19:](#figureanchor9-19) 在**0,0**角色中找到测试脚本。'
- en: In the `when I receive test-0,0` script, drag in a `recognise image (label)`
    block from the **Find the duck** group and update it as shown in [Figure 9-20](#figure9-20).
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`当我收到test-0,0`脚本中，从**找鸭子**组中拖入一个`识别图像（标签）`块，并按照[图9-20](#figure9-20)所示进行更新。
- en: This script will use your ML model to test whether the bottom-left tile contains
    the duck and display the message “Is the duck here?” if it does.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个脚本将使用你的ML模型来测试左下角的瓷砖是否包含鸭子，如果是，它将显示“这里有鸭子吗？”的信息。
- en: '![f09020](Images/f09020.png)'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f09020](Images/f09020.png)'
- en: '[Figure 9-20:](#figureanchor9-20) Update the test script to use your ML model.'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-20:](#figureanchor9-20) 更新测试脚本以使用你的ML模型。'
- en: Repeat step 2 for all 12 sprites (see [Figure 9-21](#figure9-21)). Once you’ve
    done this, your ML model can check all of the tiles to look for the duck.![f09021](Images/f09021.png)
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对所有12个精灵重复步骤2（见[图9-21](#figure9-21)）。一旦完成，你的机器学习模型就能检查所有瓷砖，找出鸭子所在的位置。![f09021](Images/f09021.png)
- en: '[Figure 9-21:](#figureanchor9-21) Add the test blocks to all 12 sprites.'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-21:](#figureanchor9-21) 将测试块添加到所有12个精灵上。'
- en: Test Your Project
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试你的项目
- en: It’s time to test your ML model!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候测试你的机器学习模型了！
- en: Click the Green Flag and then click **Test** in the Scratch project on the Stage.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击绿色旗帜，然后点击舞台上的**测试**，以测试Scratch项目。
- en: Your project will use your ML model to test every tile and highlight any it
    recognizes as the duck, as shown in [Figure 9-22](#figure9-22).
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你的项目将使用机器学习模型来测试每个瓷砖，并突出显示它识别为鸭子的任何瓷砖，如[图9-22](#figure9-22)所示。
- en: '![f09022](Images/f09022.png)'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f09022](Images/f09022.png)'
- en: '[Figure 9-22:](#figureanchor9-22) Testing your ML model'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-22:](#figureanchor9-22) 测试你的机器学习模型'
- en: Try it a few times and see how often your model gets it right. Finding a small
    image inside of a large scene is a complex job, so with only 10 training examples,
    it will probably make a few mistakes.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试几次，看看你的模型多经常正确识别。找到大场景中的小图像是一个复杂的任务，所以仅用10个训练样本，模型可能会犯一些错误。
- en: Add another 10 training examples to each bucket by clicking the Green Flag and
    clicking **Train** as you did earlier. You can check your new training examples
    back in the Train phase, as shown in [Figure 9-23](#figure9-23).
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击绿色旗帜并点击**训练**，如之前所做，向每个桶中再添加10个训练样本。你可以在训练阶段查看新的训练样本，如[图9-23](#figure9-23)所示。
- en: Click **Back to project** and then **Learn & Test** to train a new ML model
    with your larger set of training examples.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击**返回项目**，然后点击**学习与测试**，用更大的训练样本集来训练一个新的机器学习模型。
- en: '![f09023](Images/f09023.png)'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f09023](Images/f09023.png)'
- en: '[Figure 9-23:](#figureanchor9-23) Try training a new ML model using 20 examples
    of each group.'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图9-23:](#figureanchor9-23) 尝试使用每组20个样本训练新的机器学习模型。'
- en: Test again as you did before. Is your new ML model better at finding the duck?
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 像之前那样重新测试。你的新机器学习模型是否更擅长找到鸭子？
- en: Review and Improve Your Project
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审查并改进你的项目
- en: How can you describe how well the ML model is doing?
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你怎么描述机器学习模型的表现如何？
- en: 'In Chapter 8, you learned that you can keep a count of the number of times
    the computer gets things right and wrong:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在第8章中，你学到了如何记录计算机正确与错误的次数：
- en: True positive  Tiles the computer thought included the duck, and did
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真阳性    计算机认为包含鸭子的瓷砖，且确实包含
- en: False positive  Tiles the computer thought included the duck, but didn’t
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假阳性    计算机认为包含鸭子的瓷砖，实际并不包含
- en: True negative  Tiles the computer thought didn’t include the duck, and didn’t
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真阴性    计算机认为不包含鸭子的瓷砖，且确实不包含
- en: False negative  Tiles the computer thought didn’t include the duck, but did
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假阴性    计算机认为不包含鸭子的瓷砖，实际却包含
- en: You can use this count to draw up a confusion matrix and calculate the accuracy,
    recall, and precision of your ML model.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用这个计数来绘制混淆矩阵，并计算机器学习模型的准确率、召回率和精度。
- en: For example, look at the test image in [Figure 9-24](#figure9-24).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，查看[图9-24](#figure9-24)中的测试图像。
- en: '![f09024](Images/f09024.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![f09024](Images/f09024.png)'
- en: '[Figure 9-24:](#figureanchor9-24) A test image with the two bottom-right tiles
    recognized as a match'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-24:](#figureanchor9-24) 测试图像，右下角的两个瓷砖被识别为匹配'
- en: 'The duck was present in the four tiles in the bottom right of the board. Two
    of them were recognized by my ML model. Two were missed. So, my confusion matrix
    looks like this:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 鸭子出现在棋盘右下角的四个瓷砖中。我的机器学习模型识别出了其中两个，另外两个则漏掉了。所以，我的混淆矩阵看起来是这样的：
- en: '| **True positives** 2 | **False positives** 0 |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| **真阳性** 2 | **假阳性** 0 |'
- en: '| **False negatives** 2 | **True negatives** 8 |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| **假阴性** 2 | **真阴性** 8 |'
- en: 'This confusion matrix gives me:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这个混淆矩阵给出了：
- en: 'Precision: 100%'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 精度：100%
- en: (Every time my ML model thought it saw a duck, there was a duck there.)
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （每次我的机器学习模型认为看到了鸭子时，那里确实有一只鸭子。）
- en: 'Recall: 50%'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 召回率：50%
- en: (My ML model found half of the tiles that contained a duck.)
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （我的机器学习模型找到了包含鸭子的瓷砖的一半。）
- en: 'Accuracy: 83%'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准确率：83%
- en: (My ML model gave 10 correct answers out of 12 total answers.)
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （我的机器学习模型给出了12个答案中的10个正确答案。）
- en: You need a larger sample size, including several different backgrounds, to really
    trust these numbers.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个更大的样本量，包括不同的背景，才能真正信任这些数字。
- en: 'I ran this test five times, and my overall results were as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我进行了五次测试，整体结果如下：
- en: '| **True positives** 9 | **False positives** 0 |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| **真阳性** 9 | **假阳性** 0 |'
- en: '| **False negatives** 6 | **True negatives** 45 |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| **假阴性** 6 | **真阴性** 45 |'
- en: 'Precision: 100%'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 精确度：100%
- en: 'Recall: 60%'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 召回率：60%
- en: 'Accuracy: 90%'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准确率：90%
- en: These numbers give us a more meaningful way of describing the performance of
    the ML model.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数字为我们提供了一种更有意义的方式来描述机器学习模型的表现。
- en: My model, which was trained with only a small number of examples, seems to be
    very precise (when it recognizes a duck, it is always correct). However, it misses
    things sometimes.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我的模型只使用了少量示例进行训练，似乎非常精确（当它识别出一只鸭子时，总是正确的）。然而，它有时会遗漏一些内容。
- en: We describe a precise model that sometimes misses things as *favoring precision
    over recall*. This is a good approach for projects where it is important not to
    falsely recognize things.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们描述了一个有时会遗漏内容的精确模型，称其为*偏向精确而非召回*。这种方法适用于那些不能错误识别事物的项目。
- en: For projects where it is more important to not miss anything, and where it is
    okay to make the occasional mistake, you would aim to train ML models in a way
    that *favors recall over precision* instead.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些更重要的是不遗漏任何东西，并且偶尔犯错也无妨的项目，你应该训练机器学习模型，使其*偏向召回而非精确*。
- en: How is your project performing?
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 你的项目表现如何？
- en: Real-World Applications for Complex Image Recognition Systems
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复杂图像识别系统的实际应用
- en: You might have trained an image recognition ML model like this before. Have
    you ever been asked by a website to prove that you’re a human by clicking pictures
    of street signs as in [Figure 9-25](#figure9-25)? Or bicycles? Or taxis?
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能以前训练过类似的图像识别机器学习模型。你有没有曾被网站要求通过点击街道标志图像来证明你是人类，如[图9-25](#figure9-25)所示？或者是自行车？或者出租车？
- en: '![f09025](Images/f09025.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![f09025](Images/f09025.png)'
- en: '[Figure 9-25:](#figureanchor9-25) Helping to train an ML model'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-25：](#figureanchor9-25) 帮助训练机器学习模型'
- en: Hopefully you can see how this kind of image recognition application, known
    as a *CAPTCHA**, would be a great way to collect a large number of training examples
    for an image recognition system that can find different things on the street.
    Do you think this would be useful in the development of self-driving cars?*
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你能理解这种图像识别应用程序，即*验证码*，将是收集大量训练样本的绝佳方式，以便训练一个能够在街道上识别不同物体的图像识别系统。你认为这对自动驾驶汽车的开发有帮助吗？
- en: '*The basic idea here is described in the chapter’s introduction. If we want
    to find something small in a larger picture, we chop the picture up into smaller
    tiles and test each tile individually with an ML model trained to recognize pictures
    of that object.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '*这里的基本思想在章节的介绍部分有描述。如果我们想在更大的图像中找到某个小物体，我们就将图像分割成更小的图块，并使用训练好的机器学习模型分别测试每个图块，以识别该物体。'
- en: You probably have a feel for the sorts of challenges of this technique from
    training it yourself. For example, one of the biggest problems is deciding what
    size tiles to use. Remember the example of finding the tree in [Figure 9-1](#figure9-1)?
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经对这种技术的挑战有了一些了解，尤其是亲自训练过它之后。例如，最大的挑战之一就是决定使用什么尺寸的图块。记得在[图9-1](#figure9-1)中寻找树木的例子吗？
- en: If you make your tiles too small, you might only ever see a small section of
    the object you’re trying to find and never recognize it. For example, your ML
    model might not recognize [Figure 9-26](#figure9-26) as a tree.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将图块做得太小，你可能永远只能看到你想找的物体的一小部分，而无法识别出它。例如，你的机器学习模型可能无法将[图9-26](#figure9-26)识别为树木。
- en: '![f09026](Images/f09026.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![f09026](Images/f09026.png)'
- en: '[Figure 9-26:](#figureanchor9-26) A tile that includes only part of the tree'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-26：](#figureanchor9-26) 只包含树木一部分的图块'
- en: On the other hand, if you make your tiles too big, as in [Figure 9-27](#figure9-27),
    you still have the problem of there being too much in the picture that *isn’t*
    the tree, which will challenge an ML model trained to recognize pictures of trees.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果你将图块做得太大，如[图9-27](#figure9-27)所示，你仍然会遇到图中有过多的非树木部分，这会挑战训练识别树木图像的机器学习模型。
- en: '![f09027](Images/f09027.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![f09027](Images/f09027.png)'
- en: '[Figure 9-27:](#figureanchor9-27) A tile that is too large to focus on the
    tree'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-27：](#figureanchor9-27) 一个过大，无法聚焦于树木的图块'
- en: If you know the likely size of the object you’re looking for in the picture,
    you can make a sensible estimate for the right tile size to use. Some systems
    even ask users to specify the tile size to use.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你知道你在图像中寻找的物体的可能尺寸，你可以合理地估算使用什么尺寸的图块。有些系统甚至会要求用户指定图块的尺寸。
- en: If neither of these solutions is an option, you can try a wide variety of tile
    sizes and use the result that gives your model the highest confidence, as shown
    in [Figure 9-28](#figure9-28).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这两种解决方案都不可行，你可以尝试多种瓦片大小，并使用能让模型获得最高信心的结果，如[图9-28](#figure9-28)所示。
- en: Even if you get the grid size right, the object you’re looking for won’t always
    fit neatly in the middle of a tile (as you probably noticed with the duck).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你获得了正确的网格大小，你寻找的物体也不一定会完美地出现在瓦片的中心（就像你可能在鸭子示例中注意到的那样）。
- en: '![f09028](Images/f09028.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![f09028](Images/f09028.png)'
- en: '[Figure 9-28:](#figureanchor9-28) Try a variety of tile sizes if you have no
    way to know the best size.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-28：](#figureanchor9-28) 如果你无法知道最佳大小，尝试各种瓦片大小。'
- en: To improve your chance of finding a tile with the object you want in the middle,
    you also need to try different starting positions.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高在瓦片中心找到你想要的物体的机会，你还需要尝试不同的起始位置。
- en: Systems that use a combination of these techniques can be very effective. For
    example, in 2015, during a state of emergency caused by a drought in California,
    an ML model was used to find lawns, swimming pools, and other features that affect
    water usage.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些技术组合的系统可以非常有效。例如，在2015年，由于加利福尼亚州的干旱导致的紧急状态中，一个机器学习模型被用来寻找影响水使用的草坪、游泳池和其他特征。
- en: Cutting the satellite images for the whole state into tiles, just as you’ve
    done in your project, meant each tile could be individually classified. The main
    difference was that the California ML model was trained to recognize not just
    one thing, but several different things, that impact water usage. (You saw in
    Chapter 3 how you can train an ML model to recognize pictures of different objects.)
    Combining image recognition with a map meant California officials could quickly
    understand the impact of water usage across the state.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 将整个州的卫星图像切割成瓦片，就像你在项目中做的那样，这意味着每个瓦片都可以单独分类。主要的不同之处在于，加利福尼亚的机器学习（ML）模型不仅仅是识别一种物体，而是识别多种不同的事物，这些事物影响着水的使用。（你在第3章中看到了如何训练机器学习模型来识别不同物体的图片。）将图像识别与地图结合意味着加利福尼亚的官员可以快速了解全州水资源使用的影响。
- en: California is a huge state, and to manually perform such a census or survey
    would have taken a long time. ML was a fast and efficient way to come up with
    a useful estimate, and in times of emergency, speed and efficiency are very important.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 加利福尼亚是一个庞大的州，手动进行这样的普查或调查需要很长时间。机器学习是一种快速且高效的方式来得出有用的估计，而在紧急情况下，速度和效率是非常重要的。
- en: ML image recognition techniques are also regularly used in businesses. For example,
    drones can take high-resolution photos while flying over buildings, roofs, bridges,
    solar panels, pipes, and much more. These photos are then chopped into tiles and
    tested by an ML model trained to recognize signs of damage or poor maintenance
    and repair. Automated image recognition systems based on the same principles as
    this chapter’s project are used in a variety of fields, such as civil engineering
    (for inspecting bridges and buildings), agriculture (for recognizing healthy or
    diseased plants and crops), or even public safety (such as in Australia, where
    ML is used in lifesaver drones that can recognize sharks from the air).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习图像识别技术也经常在商业中使用。例如，无人机可以在飞越建筑物、屋顶、桥梁、太阳能板、管道等时拍摄高分辨率的照片。这些照片随后被切割成瓦片，并由一个经过训练的机器学习模型进行测试，用来识别损坏或维护不良的迹象。基于与本章项目相同原理的自动图像识别系统被应用于多个领域，如土木工程（用于检查桥梁和建筑物）、农业（用于识别健康或生病的植物和作物），甚至公共安全（例如在澳大利亚，机器学习被用于救生无人机，可以从空中识别鲨鱼）。
- en: What You Learned
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你学到了什么
- en: In this chapter, you trained an ML model to recognize objects that are part
    of a larger scene. This is the most complicated project you’ve done so far, but
    hopefully you now have a good understanding of how complex image recognition systems
    are built. You learned some of the challenges of training such systems, like knowing
    how to break up the complex task into simpler tasks (such as by choosing the correct
    tile size), and you got some tips for solving them. You also saw some real-world
    applications for these kinds of complex ML systems and examples of the fields
    where they’re used.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你训练了一个机器学习模型来识别作为更大场景一部分的物体。这是你迄今为止做过的最复杂的项目，但希望你现在对如何构建复杂的图像识别系统有了很好的理解。你学到了一些训练此类系统的挑战，比如知道如何将复杂的任务拆分为更简单的任务（例如选择正确的瓦片大小），并且你获得了一些解决这些问题的技巧。你还看到了这些复杂机器学习系统的一些实际应用，以及它们使用的领域实例。
- en: 'In the next chapter, we’ll look at another common use of ML: smart assistants.*'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将探讨机器学习的另一个常见应用：智能助手*。
