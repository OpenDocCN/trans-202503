- en: INTRODUCTION
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: The Arduino is a small, inexpensive computer that can be programmed to control
    endless creations limited only by your imagination. As you’ll soon see, the Arduino
    can be used to make a whole host of projects, like a ghost detector, joystick-controlled
    laser, electronic die, laser trip wire alarm, motion sensor alarm, keypad entry
    system, and many others. All of these projects are easy to build and have one
    thing in common—they use the power of the Arduino.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino是一款小型、廉价的计算机，可以通过编程控制无数的创作，唯一的限制就是你的想象力。正如你很快会看到的，Arduino可以用于制作各种项目，比如鬼魂探测器、摇杆控制的激光器、电子骰子、激光触发警报器、运动传感器警报器、密码键盘系统等等。这些项目都很容易制作，而且有一个共同点——它们都使用了Arduino的强大功能。
- en: In the early 1980s, I picked up a great Penguin paperback titled something like
    *Gadgets and Gizmos*, hidden away in a local bookstore. The projects were simple
    ones like making a working lighthouse using flashlight bulbs and building a revolving
    display table using an old clock. The ideas in that book sparked my imagination,
    and I’ve been creating ever since.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在1980年代初，我在一家本地书店发现了一本很棒的企鹅出版的平装书，书名大概是*小玩意和小工具*。书中的项目很简单，比如用手电筒灯泡制作一个工作中的灯塔，或者用旧钟表做一个旋转展示台。那本书里的创意激发了我的想象力，从那时起我就一直在进行创作。
- en: My curiosity led me to take apart various electrical items to experiment with
    and find out how they worked. I usually struggled to put them back together but
    amassed a good selection of components to tinker with. (This is a great way of
    gathering lots of parts, by the way.)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我的好奇心促使我拆解各种电器产品进行实验，看看它们是如何工作的。我通常很难把它们重新组装起来，但也积累了许多可以进行实验的零部件。（顺便说一句，这是收集零件的一个好方法。）
- en: I remember wiring together a string of small flashlight bulbs to make floodlights
    for my Subbuteo table-top soccer game and creating a loudspeaker system to blast
    out music at the halftime break in a game. I even managed to extract some LEDs
    from a Star Wars toy, only to burn them out because I didn’t understand what a
    resistor was at the time. I used small motors, buzzers, and solar cells to create
    burglar alarms and super whizzy cars, and I burned out a few motors too!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我记得曾经将一串小型手电筒灯泡连接起来，为我的Subbuteo桌面足球游戏制作聚光灯，还创建了一个扬声器系统，在比赛的中场休息时播放音乐。我甚至设法从一款《星球大战》玩具中取出了几个LED灯，但因为当时不理解什么是电阻器，结果把它们烧坏了。我使用小马达、蜂鸣器和太阳能电池制作入侵警报器和超快速小车，也烧坏了几个马达！
- en: At roughly the same time (1983), Sinclair Research in the United Kingdom launched
    the ZX Spectrum 48k microcomputer, introducing home computing to the UK mass market.
    (The United States had its Commodore 64.) While intended as a serious computer,
    the ZX Spectrum inadvertently lent itself more to gaming due to its inclusion
    of the simple programming language BASIC. As a result, software houses sprouted
    in bedrooms across the country as people rushed to build games for the ZX.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 大约在同一时期（1983年），英国的Sinclair Research推出了ZX Spectrum 48k微型计算机，将家庭计算机引入了英国大众市场。（美国有它的Commodore
    64。）尽管ZX Spectrum本来是作为一台严肃的计算机推出的，但由于它包含了简单的编程语言BASIC，它意外地更适合用于游戏。因此，软件公司如雨后春笋般在全国各地的卧室里涌现，人们争相为ZX
    Spectrum开发游戏。
- en: This sparked my interest in programming, but at the time I couldn’t combine
    my two passions. Physical computing, where software and hardware react to the
    physical world, was around in the ’80s but confined to the realm of very high-end
    computing and robotics, way out of reach of most households. Now, some 30 years
    later, with the introduction of the Arduino, I find myself tinkering again with
    electronics, but this time I can use programming to bring the projects to life.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这激发了我对编程的兴趣，但那时我无法将我的两个爱好结合起来。物理计算，软件和硬件与物理世界互动的领域，早在80年代就存在，但它局限于非常高端的计算和机器人技术，大多数家庭无法接触到。如今，30多年过去了，随着Arduino的问世，我再次沉迷于电子技术，但这次我可以通过编程让我的项目栩栩如生。
- en: '**THE ARDUINO REVOLUTION**'
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Arduino革命**'
- en: In simple terms, the Arduino is a small computer that can be programmed to connect
    and control various electronic parts. The Arduino has a number of pins that can
    be set as either *input*, which means they can receive data from items such as
    switches, buttons, and sensors, or *output*, which means they send data to control
    items such as motors, lights, and buzzers. This type of programmable development
    board is better known as a *microcontroller*.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，Arduino 是一台可以编程的小型计算机，用来连接和控制各种电子元件。Arduino 有多个引脚，可以设置为 *输入*，意味着它们可以接收来自开关、按钮和传感器等物品的数据，或者设置为
    *输出*，意味着它们会发送数据来控制马达、灯光和蜂鸣器等设备。这种可编程开发板更常被称为 *微控制器*。
- en: The Arduino project began in Ivrea, Italy, in 2005 with the goal of creating
    a device to control student-built interactive design projects that would be less
    expensive than other prototyping systems available at the time. Founders Massimo
    Banzi and David Cuartielles named the project after a local bar called Arduino
    (an Italian masculine first name meaning “strong friend”).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino 项目始于 2005 年的意大利伊夫雷亚，目的是创建一种比当时其他原型系统更便宜的设备，用来控制学生构建的互动设计项目。创始人 Massimo
    Banzi 和 David Cuartielles 将项目命名为 Arduino，灵感来自一个当地的酒吧（该名字来源于意大利男性名字，意为“强大的朋友”）。
- en: 'The Arduino board is composed of two main elements: the hardware, or microcontroller,
    which is the brain of the board, and the software that you’ll use to send your
    program to the brain. The software, called the Arduino *integrated development
    environment (IDE)*, is available free for download.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino 主板由两个主要元素组成：硬件或微控制器，它是主板的大脑，以及你用来将程序发送到大脑的软件。这个软件叫做 Arduino *集成开发环境（IDE）*，可以免费下载安装。
- en: The IDE is a simple interface that runs on a computer running Windows, OS X,
    or Linux. You use the IDE to create a *sketch* (an Arduino program) that you then
    upload to the Arduino board using a PC and USB cable. The sketch tells the hardware
    what to do. I’ll go into both the hardware and software in more detail in the
    next couple of chapters.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: IDE 是一个简单的界面，适用于运行 Windows、OS X 或 Linux 的计算机。你使用 IDE 创建一个 *草图*（Arduino 程序），然后通过
    PC 和 USB 电缆将其上传到 Arduino 主板。草图告诉硬件该做什么。在接下来的几章中，我会更详细地讲解硬件和软件。
- en: The Arduino can be powered by batteries, USB, or an external power supply. Once
    the Arduino is programmed, it can be disconnected from your computer and will
    run independently using a power supply or batteries.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino 可以通过电池、USB 或外部电源供电。一旦 Arduino 被编程，它可以从计算机断开连接，并通过电源或电池独立运行。
- en: '**ABOUT THIS BOOK**'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**关于本书**'
- en: What was it that encouraged me to write this book? The Internet is bursting
    with tutorials, videos, and articles covering the Arduino and potential projects,
    but many lack detailed visuals or the code required to build these projects. Like
    the *Gizmos and Gadgets* book that inspired me many years ago, this book is intended
    to help you build simple projects that will inspire you to create your own contraptions
    using the skills and techniques that you’ll learn.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 是什么促使我写这本书？互联网上充满了关于 Arduino 和潜在项目的教程、视频和文章，但许多内容缺乏详细的视觉效果或构建这些项目所需的代码。就像多年前激励我的
    *《小玩意与小工具》* 一书一样，本书旨在帮助你构建简单的项目，激发你使用所学的技能和技巧创造自己的装置。
- en: In this book you’ll concentrate on creating your project on a breadboard. This
    is the best way to learn about how circuits work, because the connections are
    not permanent; if you make a mistake, you can just unplug the wire or component
    and try again. Each project has step-by-step instructions for connecting the main
    components, along with photographs to help you with layout. Tables are used in
    most projects for quick reference.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将重点介绍如何在面包板上创建你的项目。这是了解电路工作原理的最佳方法，因为连接并不是永久性的；如果你犯了错误，只需拔掉电线或元件并重新尝试。每个项目都有逐步的连接主组件的说明，并附有帮助你布线的照片。大多数项目都使用表格作为快速参考。
- en: The projects will have a circuit diagram to show the connections clearly, like
    that in [Figure 1](intro.xhtml#intfig01). These have been created with the Fritzing
    program (*[http://www.fritzing.org/](http://www.fritzing.org/)*), a free, open
    source program for creating visual schematics of your projects.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 项目将提供电路图，以清晰地显示连接方式，如 [图 1](intro.xhtml#intfig01) 所示。这些电路图是通过 Fritzing 程序（*
    [http://www.fritzing.org/](http://www.fritzing.org/)*）创建的，这是一个免费的开源程序，用于创建项目的可视化原理图。
- en: '**FIGURE 1:**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 1：**'
- en: Example of a Fritzing diagram
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Fritzing 图示示例
- en: '![image](../images/f00-00.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f00-00.jpg)'
- en: Each project also has the code required to program your Arduino, so you don’t
    need to worry about learning to program before you begin. The early projects provide
    simple explanations of what’s happening in the code, to help you understand the
    process of programming enough to make your own modifications if you want to. If
    you don’t want to type all the code, you can download the programs from *[http://www.nostarch.com/arduinohandbook/](http://www.nostarch.com/arduinohandbook/)*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每个项目都包含了编程 Arduino 所需的代码，因此你在开始之前不需要担心学习编程。早期的项目会简单地解释代码中的内容，帮助你理解编程过程，并让你在需要时能够自行修改代码。如果你不想手动输入所有的代码，可以从
    *[http://www.nostarch.com/arduinohandbook/](http://www.nostarch.com/arduinohandbook/)*
    下载程序。
- en: The projects in this book begin with the basics and progress steadily to more
    complex designs. That said, this book won’t go deeply into electronics theory
    or programming, but I will give you a good starting point. I’ve written this book
    to teach you how to create your own gadgets. By giving you the technical know-how,
    I allow you to focus on the creative design element. The idea is that learning
    the function of circuits can open up your imagination to ways of using those circuits
    practically.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的项目从基础开始，逐步进展到更复杂的设计。也就是说，本书不会深入讲解电子理论或编程，但我会给你一个良好的起点。我写这本书是为了教你如何创造自己的小工具。通过提供必要的技术知识，我让你可以专注于创意设计部分。我们的理念是，学习电路的功能能够激发你的想象力，帮助你在实际应用中使用这些电路。
- en: This book gives practical information so you can, for example, reference the
    pin connections and replicate them when needed in a different project. You can
    also combine projects to make more complicated and interesting gadgets.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书提供了实用的信息，你可以参考引脚连接，并在需要时在不同的项目中复用它们。你还可以将项目结合起来，制作更复杂和有趣的小工具。
- en: A lot of Arduino books focus on the programming element, and that’s great for
    a certain kind of learning, but I think there is a place for plug-and-play electronics.
    By following the steps in the projects, you will learn as you go.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 许多 Arduino 书籍侧重于编程元素，这对某种学习方式来说是很好的，但我认为也有即插即用电子设备的学习空间。通过跟随这些项目中的步骤，你将边做边学。
- en: '**ORGANIZATION OF THIS BOOK**'
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**本书结构**'
- en: 'The book progresses from simple to more complex projects as follows to help
    you build your skills and learn about components:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的内容按以下顺序从简单到复杂的项目进展，帮助你提升技能并了解各个元件：
- en: '[**Part I: LEDs**](part01.xhtml#part01) You’ll start by learning how to control
    simple LEDs with buttons and variable resistors, and then combine components to
    build disco strobe lights, plant monitors to tell you when your plant needs watering,
    and even a ghost detector.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[**第一部分：LED**](part01.xhtml#part01) 你将从学习如何使用按钮和可变电阻控制简单的 LED 开始，然后将不同的组件组合起来，制作迪斯科闪光灯、植物监测器来告诉你何时给植物浇水，甚至是一个幽灵探测器。'
- en: '[**Part II: Sound**](part02.xhtml#part02) In this part, you’ll learn about
    the piezo buzzer, a very useful device that emits and can also detect sound. You’ll
    make music with the Arduino Melody, create a simple and fun memory game, and set
    up a secret code lock system that detects the volume of a knock.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[**第二部分：声音**](part02.xhtml#part02) 在这一部分，你将了解压电蜂鸣器，这是一种非常实用的设备，既可以发出声音，也可以检测声音。你将使用
    Arduino Melody 制作音乐，创建一个简单有趣的记忆游戏，并设置一个可以检测敲击音量的密码锁系统。'
- en: '[**Part III: Servos**](part03.xhtml#part03) These projects all use the servomotor,
    a small motor with an arm that can be used for a whole host of purposes. You’ll
    build a joystick-controlled laser and decode a remote control so you can move
    your servo with buttons on the remote.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[**第三部分：伺服电机**](part03.xhtml#part03) 这些项目都使用伺服电机，这是一种带有机械臂的小型电机，可以用于各种用途。你将构建一个摇杆控制的激光器，并解码遥控器，以便用遥控器上的按钮来控制伺服电机。'
- en: '[**Part IV: LCDs**](part04.xhtml#part04) The LCD screen is useful in lots of
    projects for displaying messages and results. In this part, you’ll learn how to
    set up an LCD screen, build a weather station to report conditions, and set up
    two games: a fortune teller and a reaction timer game.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[**第四部分：LCD显示器**](part04.xhtml#part04) LCD 屏幕在许多项目中都非常有用，可以显示信息和结果。在这一部分，你将学习如何设置
    LCD 屏幕，建立一个天气站来报告天气情况，并设置两个游戏：占卜游戏和反应计时游戏。'
- en: '[**Part V: Numeric Counters**](part05.xhtml#part05) You’ll use LED number displays
    in this part to build an electronic die and a rocket launcher countdown system
    that sets off a fuse.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[**第五部分：数字计数器**](part05.xhtml#part05) 在这一部分，你将使用 LED 数字显示器，制作一个电子骰子和一个火箭发射倒计时系统，点燃引信。'
- en: '[**Part VI: Security**](part06.xhtml#part06) These more complex projects will
    show you how to protect your space with trip wires and intruder trackers, motion
    sensors that trigger alarms or sentry missiles, and security systems that use
    keypads and card readers to keep unauthorized persons out.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[**第六部分：安全**](part06.xhtml#part06) 这些更复杂的项目将向你展示如何通过安装触发线和入侵者追踪器、触发警报或哨兵导弹的运动传感器，以及使用键盘和卡片读取器的安全系统来保护你的空间，防止未经授权的人进入。'
- en: '[**Part VII: Advanced**](part07.xhtml#part07) In this final part, you’ll combine
    the Arduino with a matrix of lights to create the Rainbow Light Show. Then you’ll
    round off your skills by building your own Arduino to use in future projects.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[**第七部分：进阶**](part07.xhtml#part07) 在最后这一部分，你将把Arduino与一个灯光矩阵结合，创造出彩虹灯光秀。接着，你将通过构建属于你自己的Arduino，为未来的项目打下基础。'
- en: These projects don’t have to be built in order, so if you see something you
    like and feel confident enough to take it on, you can skip to it. I recommend
    you try out some of the earlier projects first, though, as you’ll find information
    there that’s useful for more complicated builds.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这些项目不必按顺序构建，因此如果你看到自己喜欢的内容，并且有足够的信心去尝试，你可以直接跳到那个部分。不过，我还是建议你先尝试一些早期的项目，因为你会在其中找到对更复杂项目有用的信息。
- en: I’ve written the book that I was looking for but couldn’t find when I started
    out with the Arduino. I hope that you’ll enjoy reading and working through this
    book as much as I’ve enjoyed writing it.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我写下了这本我在刚开始使用Arduino时所寻找但找不到的书籍。我希望你在阅读和动手做这些项目时能像我写书一样享受其中的乐趣。
