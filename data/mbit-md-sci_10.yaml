- en: '![Image](../images/common1.jpg)'
  id: totrans-0
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common1.jpg)'
- en: '**10**'
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**10**'
- en: '**RADIO ACTIVITY**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**无线电活动**'
- en: The Mad Scientist has made a friend. After hitting it off at a Mad Science Conference,
    the two decided they wanted to keep talking—through micro:bit, of course. The
    micro:bit has a built-in radio transmitter and receiver, together known as a *transceiver*,
    that can communicate with Bluetooth devices. We saw this in action in the roving
    robot project in [Chapter 6](ch06.xhtml#ch06).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 疯狂科学家交到了一个朋友。在一次疯狂科学大会上聊得很投机后，他们决定通过 micro:bit 继续交流，当然了，得用 micro:bit 来传递消息。micro:bit
    内建了一个无线电发射器和接收器，统称为 *收发器*，可以与蓝牙设备通信。我们在 [第六章](ch06.xhtml#ch06)的流动机器人项目中见过它的应用。
- en: This radio transceiver can also be used to talk to other micro:bits using a
    simple message-sending and receiving protocol specific to the micro:bit. In this
    chapter, we’ll look at micro:bit-to-micro:bit communication, so you’ll need either
    two of your own micro:bits or a friend with a micro:bit.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这个无线电收发器还可以用来与其他 micro:bit 通过特定的简单消息发送和接收协议进行通信。在本章中，我们将探讨 micro:bit 之间的通信，因此你需要有两块
    micro:bit 或者一个拥有 micro:bit 的朋友。
- en: '![Image](../images/f0226-01.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0226-01.jpg)'
- en: '**EXPERIMENT 12: FINDING THE RADIO RANGE**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**实验 12：寻找无线电范围**'
- en: '![Image](../images/common2.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common2.jpg)'
- en: '*Difficulty: Easy*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*难度：简单*'
- en: The Mad Scientist and a friend want to know how far apart they can be before
    their micro:bit communicators stop working.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 疯狂科学家和他的朋友想知道，他们之间可以相隔多远，直到 micro:bit 通信器停止工作。
- en: '**What You’ll Need**'
  id: totrans-10
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**所需材料**'
- en: You’ll need a pair of micro:bits, each equipped with a battery pack. You’ll
    also need a friend to talk to and a field or other open space where you can move
    away from each other.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要一对 micro:bit，每个都配有电池包。你还需要一个朋友来交流，以及一个开放的场地或其他你们可以互相走开的地方。
- en: '**Construction**'
  id: totrans-12
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**构建**'
- en: 'Go to *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*
    and click the link for **Experiment 12: Radio Range**. Copy the hex file onto
    both micro:bits. ([Chapter 1](ch01.xhtml#ch01) explains the full process of getting
    programs onto your micro:bit if you get stuck). If you want to run the MicroPython
    version of this experiment, that file is *Experiment_12.py*.'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*
    并点击 **实验 12：无线电范围** 的链接。将 hex 文件复制到两块 micro:bit 上。如果你遇到困难，[第一章](ch01.xhtml#ch01)会详细解释如何将程序上传到
    micro:bit。如果你想运行此实验的 MicroPython 版本，那个文件是 *Experiment_12.py*。
- en: Equip both micro:bits with battery power—you’re probably used to doing this
    by now.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给两块 micro:bit 都装上电池——你现在应该已经习惯了。
- en: Before you venture outdoors, test that both micro:bits are ready to go by pressing
    button **A** on one of the devices. An up arrow should appear on that micro:bit,
    and a check mark should appear on the other micro:bit. Repeat this test by pressing
    button **A** on the other micro:bit ([Figure 10-1](ch10.xhtml#ch10fig1)).
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在你们外出之前，按下其中一个设备上的 **A** 按钮，检查两块 micro:bit 是否都已准备好。一个上箭头应该出现在那个 micro:bit 上，另一个
    micro:bit 上应该出现一个勾号。通过按下另一个 micro:bit 上的 **A** 按钮重复此测试（[图 10-1](ch10.xhtml#ch10fig1)）。
- en: '![Image](../images/10fig01.jpg)'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/10fig01.jpg)'
- en: '*Figure 10-1: Testing the micro:bits*'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 10-1：测试 micro:bit*'
- en: Go to a place where you and your friend have plenty of room to move away from
    each other. Stand about a yard (or meter) apart, facing one another. You should
    have one micro:bit and your friend the other.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找一个你和你的朋友有足够空间互相移动的地方。相距大约一米（或一码）站立，面对面。你应该持有一块 micro:bit，而你的朋友持有另一块。
- en: Now either you or your friend presses button **A** on their micro:bit to transmit
    the signal. Then wave to let the other person know the signal was sent (in case
    they don’t receive it). When their device picks up the signal, they should wave
    back. Assuming the signal was successfully transmitted, take a few steps away
    from each other and repeat the test.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你或你的朋友按下 **A** 按钮在 micro:bit 上发送信号。然后挥手示意对方信号已发送（以防他们没有收到）。当他们的设备接收到信号时，他们应该挥手回应。假设信号已成功发送，彼此相隔几步并重复测试。
- en: At some point, the message won’t be received! The sender should press the button
    and wave one more time. If the message still isn’t received, you both know to
    move one step closer.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 到某个时刻，消息将无法接收！发送方应再次按下按钮并挥手。如果消息仍然没有收到，你们都知道应该更近一步。
- en: Once you’ve determined the radio’s range, the sender uses a prearranged signal
    to tell the receiver to walk toward them, counting the number of steps that they
    take.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你确定了无线电的范围，发送方通过预先安排的信号告知接收方向他们走去，并计算他们走了多少步。
- en: 'Measure the length of a step taken by the receiver and multiply that by the
    number of steps they took. The resulting value is the line-of-sight range of the
    micro:bit’s radio. Tip: To get a reasonably accurate stride length, have the person
    walk five steps, use a long tape measure to measure the total distance traveled,
    and divide that distance by 5.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测量接收者每步的步长，并将其乘以他们走的步数。得出的值就是micro:bit无线电的视距范围。提示：为了获得较为准确的步长，可以让人走五步，使用一条长的卷尺测量总的行走距离，并将这个距离除以5。
- en: The Mad Scientist tested the range of two micro:bits and found it to be 192
    strides. Five strides covered 12 feet (3.65 meters), meaning that each stride
    was 2.4 feet. The range was therefore 192 × 2.4 or approximately 460 feet (140
    meters).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 疯狂科学家测试了两台micro:bit的范围，发现其范围为192步。五步覆盖了12英尺（3.65米），这意味着每步是2.4英尺。因此，范围为192 ×
    2.4，约为460英尺（140米）。
- en: A range of over 1,100 feet (350 meters) has been reported by others carrying
    out this experiment. Note that the range will be considerably less if either your
    body or your friend’s is between the micro:bits.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 有人做过这个实验并报告了超过1,100英尺（350米）的范围。请注意，如果你的身体或你朋友的身体位于两个micro:bit之间，范围将大大减少。
- en: '**Code**'
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**代码**'
- en: The code for the range test is fairly simple, whether you use Blocks or MicroPython.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是使用积木还是MicroPython，范围测试的代码都相对简单。
- en: '**Blocks Code**'
  id: totrans-27
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**积木代码**'
- en: Here is the Blocks code for the project.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这是该项目的积木代码。
- en: '![Image](../images/f0229-01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0229-01.jpg)'
- en: You can control the amount of power used by the radio. The `on start` block
    uses the `radio set transmit power` block to set the power to 7 (maximum)—more
    power means greater range. The `set radio group` block assigns a group for the
    radio to use. In this case, we use group 1, which means all the micro:bits set
    to radio group 1 will receive the transmissions. So, if you plan to carry out
    this experiment with multiple pairs of micro:bits at the same time, then each
    pair of experimenters should pick a different number between 0 and 255 and set
    the radio group to that number. This way, the different pairs won’t interfere
    with each other.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以控制无线电使用的功率。`on start`积木使用`radio set transmit power`积木将功率设置为7（最大值）——更高的功率意味着更大的范围。`set
    radio group`积木为无线电设置一个组。在这种情况下，我们使用组1，这意味着所有设置为无线电组1的micro:bit都会接收传输。因此，如果你计划同时用多对micro:bit进行这个实验，那么每一对实验者应选择一个0到255之间的不同数字，并将无线电组设置为该数字。这样，不同的实验对就不会互相干扰。
- en: We use the `on button A pressed` block with the `radio send` block to transmit
    a simple message of `test`. This will flash the `North` arrow icon to show that
    the message has been sent.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`on button A pressed`积木与`radio send`积木来传输一个简单的`test`消息。这将闪烁`North`箭头图标，表示消息已经发送。
- en: We handle incoming messages with an `on received block`, specifying the name
    of the variable into which any incoming message should be put. In this case, whenever
    the micro:bit’s radio receives a message, it puts the message into the variable
    `receivedString`. If this message is `test`, then the check mark icon is displayed
    for a moment on the screen.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过`on received block`处理传入的消息，并指定一个变量名来存放任何传入的消息。在这个例子中，每当micro:bit的无线电接收到消息时，它会将消息放入变量`receivedString`中。如果这个消息是`test`，那么屏幕上会短暂显示一个勾选图标。
- en: '**MicroPython Code**'
  id: totrans-33
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**MicroPython代码**'
- en: Here is the MicroPython version of the code. Note that the way messages are
    sent in MicroPython is slightly different from how they’re sent in the Blocks
    code, so the pair of micro:bits used in this experiment should both be programmed
    either in Blocks or in MicroPython.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这是MicroPython版本的代码。请注意，MicroPython中消息的发送方式与积木代码中的方式略有不同，因此用于此实验的两台micro:bit应该都使用积木或MicroPython编程。
- en: from microbit import *
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: from microbit import *
- en: import radio
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: import radio
- en: radio.on()
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: radio.on()
- en: radio.config(power=7, group=1)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: radio.config(power=7, group=1)
- en: 'while True:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 'while True:'
- en: 'if button_a.was_pressed():'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 'if button_a.was_pressed():'
- en: radio.send("test")
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: radio.send("test")
- en: display.show(Image.ARROW_N)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: display.show(Image.ARROW_N)
- en: sleep(1000)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: sleep(1000)
- en: display.clear()
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: display.clear()
- en: message = radio.receive()
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: message = radio.receive()
- en: 'if message == ''test'':'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 'if message == ''test'':'
- en: display.show(Image.YES)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: display.show(Image.YES)
- en: sleep(1000)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: sleep(1000)
- en: display.clear()
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: display.clear()
- en: To set the radio’s power and radio group in MicroPython, we need to use the
    `radio.config` method. This method also allows you to control a number of other
    options. You can read about these at *[https://bbcmicrobitmicropython.readthedocs.io/en/latest/radio.html](https://bbcmicrobitmicropython.readthedocs.io/en/latest/radio.html)*.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 MicroPython 中设置无线电的功率和无线电组，我们需要使用 `radio.config` 方法。这个方法还允许你控制其他一些选项。你可以在
    *[https://bbcmicrobitmicropython.readthedocs.io/en/latest/radio.html](https://bbcmicrobitmicropython.readthedocs.io/en/latest/radio.html)*
    上阅读相关信息。
- en: The Blocks version of the code is contained entirely in handlers. In MicroPython,
    we don’t have handlers, so we have to continually check for a button press or
    incoming message. We do this by having a set of `if` statements in a `while True`
    loop that is always running.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的 Blocks 版本完全包含在处理程序中。在 MicroPython 中，我们没有处理程序，因此我们必须不断检查按钮是否按下或是否有消息到达。我们通过在一个始终运行的
    `while True` 循环中使用一组 `if` 语句来实现这一点。
- en: First, we check whether button A has been pressed since the previous check.
    If it has been, we send the message `test` and show the North arrow.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们检查自上次检查以来按钮 A 是否被按下。如果按下了，我们发送 `test` 消息并显示北箭头。
- en: To check whether we’ve received a message, we repeatedly call `message.receive`.
    When the radio receives messages, it puts them in a queue. If there is no message
    waiting, then `message.receive` returns `None`. However, if there is one or more
    messages, then `message.receive` returns the oldest message and removes that message
    from the queue.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检查我们是否接收到消息，我们不断调用 `message.receive`。当无线电接收到消息时，它会将消息放入队列。如果没有消息在等待，那么 `message.receive`
    会返回 `None`。但是，如果有一个或多个消息，`message.receive` 会返回最旧的消息并将其从队列中移除。
- en: We only care whether the message is `test`, so we check this condition. If the
    message is `test`, we have the micro:bit display the YES icon for a second.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只关心消息是否为`test`，所以我们检查这个条件。如果消息是`test`，我们让 micro:bit 显示“YES”图标一秒钟。
- en: '**How It Works: Radio Signals**'
  id: totrans-55
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**工作原理：无线电信号**'
- en: When outdoors, the *range* of the micro:bits’ radios is likely to be much greater
    than when you’re indoors, where walls between the micro:bits will impede the signal.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在户外，micro:bit 的无线电范围可能远大于室内，因为墙壁会阻碍信号的传播。
- en: The system of sending messages between devices is called *packet radio* because
    small packets of data are being sent. In this project’s code, these are text commands.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 设备之间发送消息的系统被称为 *数据包无线电*，因为发送的是小的数据包。在这个项目的代码中，这些数据包是文本命令。
- en: '**PROJECT: WIRELESS DOORBELL**'
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**项目：无线门铃**'
- en: '![Image](../images/common3.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common3.jpg)'
- en: '*Difficulty: Medium*'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '*难度：中等*'
- en: Distracted by experiments and insubordinate underlings, the Mad Scientist often
    misses packages when they’re delivered. To remedy this, they’ve decided to build
    a speaker in the lab that plays when the doorbell is rung.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 被实验分散注意力，并且下属不听话的疯科学家经常错过快递的到达。为了解决这个问题，他们决定在实验室里建立一个扬声器，在门铃响起时播放声音。
- en: 'We’ll build on the doorbell project from way back in [Chapter 2](ch02.xhtml#ch02).
    In this version of the project, we’ll use two micro:bits: one connected to a speaker,
    responsible for playing a tune, and a second one that acts as the doorbell button
    ([Figure 10-2](ch10.xhtml#ch10fig2)). When one of the buttons on the second micro:bit
    is pressed, it sends a radio message to the sound-making micro:bit, telling it
    to play a tune. Because the micro:bit radios have a pretty good range, your sound-playing
    micro:bit can be some distance from your door and, thus, closer to you.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[第二章](ch02.xhtml#ch02)中构建的门铃项目基础上进行扩展。在这个版本的项目中，我们将使用两个 micro:bit：一个连接到扬声器，负责播放曲调，另一个作为门铃按钮（见[图10-2](ch10.xhtml#ch10fig2)）。当第二个
    micro:bit 上的一个按钮被按下时，它会向发声的 micro:bit 发送无线消息，告诉它播放曲调。由于 micro:bit 的无线电信号范围相当好，播放声音的
    micro:bit 可以离门有一段距离，因此可以放得更靠近你。
- en: '![Image](../images/10fig02.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/10fig02.jpg)'
- en: '*Figure 10-2: The wireless doorbell project*'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*图10-2：无线门铃项目*'
- en: '**What You’ll Need**'
  id: totrans-65
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**所需材料**'
- en: 'For this project, you’ll need the following items:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，你需要以下材料：
- en: '**2 × Micro:bit** One that acts as a doorbell button and another that plays
    a tune'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**2 × Micro:bit** 一个作为门铃按钮，另一个播放曲调'
- en: '**3 × Alligator clip cables** To connect the micro:bit to the speaker'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**3 × 蝰蛇夹电缆** 用于将 micro:bit 连接到扬声器'
- en: '**2 × USB power adapters or 3V battery packs with power switch** To power the
    micro:bits'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**2 × USB 电源适配器或带电源开关的 3V 电池组** 用于为 micro:bit 提供电力'
- en: '**Speaker** To play the doorbell tune, I recommend the Monk Makes Speaker for
    micro:bit.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**扬声器** 为了播放门铃曲调，我推荐使用 Monk Makes Speaker for micro:bit。'
- en: '**Blu-Tak adhesive putty or self-adhesive pads** To attach one of the micro:bits
    to the door frame'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**Blu-Tak 粘土或自粘垫片** 用来将其中一个 micro:bit 安装到门框上'
- en: '**Construction**'
  id: totrans-72
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**构建**'
- en: Go to *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*
    and click the link for **Wireless Doorbell**. Copy the hex file onto both micro:bits.
    [Chapter 1](ch01.xhtml#ch01) explains the full process of getting programs onto
    your micro:bit if you need a refresher. If you want to run the MicroPython version
    of this experiment, that file is *ch_10_Wireless_Doorbell.py*.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*
    并点击 **无线门铃** 的链接。将 hex 文件复制到两个 micro:bit 上。如果你需要复习如何将程序上传到 micro:bit，[第 1 章](ch01.xhtml#ch01)
    解释了整个过程。如果你想运行该实验的 MicroPython 版本，文件是 *ch_10_Wireless_Doorbell.py*。
- en: Connect a speaker to one of the micro:bits. You can use the speaker you used
    in the musical doorbell project from [Chapter 2](ch02.xhtml#ch02) (see the instructions
    for this project if you get stuck).
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将扬声器连接到其中一个 micro:bit。你可以使用在 [第 2 章](ch02.xhtml#ch02) 中音乐门铃项目中使用的扬声器（如果遇到困难，可以查看该项目的说明）。
- en: Test the speaker by pressing button **A** on the doorbell micro:bit. The micro:bit
    attached to the speaker should immediately start playing the tune “The Entertainer.”
    When it’s finished, try pressing button **B**, and the “Funeral March” should
    play.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按下门铃 micro:bit 上的 **A** 按钮来测试扬声器。连接扬声器的 micro:bit 应立即开始播放曲调 “The Entertainer”。当它播放完毕后，尝试按下
    **B** 按钮，应该会播放 “Funeral March”。
- en: Use the Blu-Tak adhesive putty or pads to attach the speakerless micro:bit to
    the outside of your door.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Blu-Tak 粘土或垫片将没有扬声器的 micro:bit 安装到门外。
- en: '**Code**'
  id: totrans-77
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**代码**'
- en: Both versions of the code rely on sending a message over the radio of either
    *db1* or *db2*, depending on which button is pressed. The receiving micro:bit
    then plays one of two tunes, depending on which message it receives.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 两个版本的代码都依赖于通过无线电发送 `db1` 或 `db2` 消息，具体取决于按下哪个按钮。接收的 micro:bit 根据接收到的消息播放其中一首曲调。
- en: As with Experiment 12, you cannot mix and match the MicroPython and Blocks versions
    of the code, so decide to use one or the other.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 与实验 12 类似，你不能混用 MicroPython 和 Blocks 版本的代码，因此请选择使用其中一个版本。
- en: '**Blocks Code**'
  id: totrans-80
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**Blocks 代码**'
- en: Here is the Blocks code for the project.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这是该项目的 Blocks 代码。
- en: '![Image](../images/f0234-01.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0234-01.jpg)'
- en: You’ll notice that the code here is similar to that in Experiment 12\. If Button
    A is pressed, then the string `db1` (doorbell 1) is sent and a north arrow displayed
    to indicate that the message has been sent. The handler for when button B is pressed
    sends the message `db2`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到这里的代码与实验 12 中的代码类似。如果按下 A 按钮，则发送字符串 `db1`（门铃 1），并显示一个北箭头，表示消息已经发送。当按下 B
    按钮时，处理程序会发送消息 `db2`。
- en: The receiving code checks whether the received message is `db1` or `db2` and
    plays the appropriate tune.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 接收代码检查接收到的消息是 `db1` 还是 `db2`，并播放相应的曲调。
- en: '**MicroPython Code**'
  id: totrans-85
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**MicroPython 代码**'
- en: 'Here is MicroPython version of the code:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 MicroPython 版本的代码：
- en: from microbit import *
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: from microbit import *
- en: import radio, music
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: import radio, music
- en: radio.on()
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: radio.on()
- en: radio.config(power=7, group=1)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: radio.config(power=7, group=1)
- en: 'def send_message(message):'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 'def send_message(message):'
- en: radio.send(message)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: radio.send(message)
- en: display.show(Image.ARROW_N)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: display.show(Image.ARROW_N)
- en: sleep(1000)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: sleep(1000)
- en: display.clear()
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: display.clear()
- en: 'while True:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 'while True:'
- en: 'if button_a.was_pressed():'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 'if button_a.was_pressed():'
- en: send_message("db1")
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: send_message("db1")
- en: 'if button_b.was_pressed():'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 'if button_b.was_pressed():'
- en: send_message("db2")
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: send_message("db2")
- en: message = radio.receive()
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: message = radio.receive()
- en: 'if message == ''db1'':'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 'if message == ''db1'':'
- en: music.play(music.ENTERTAINER)
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: music.play(music.ENTERTAINER)
- en: 'elif message == ''db2'':'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 'elif message == ''db2'':'
- en: music.play(music.FUNERAL)
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: music.play(music.FUNERAL)
- en: In this version of the code, we’ve defined the function `send_message`, which
    sends a message using the radio and displays the north arrow for a second.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在该版本的代码中，我们定义了函数 `send_message`，它通过无线电发送消息并显示北箭头一秒钟。
- en: As with the code in Experiment 12, we use a `while True` loop to continuously
    check for button presses and received messages.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 与实验 12 中的代码一样，我们使用 `while True` 循环持续检查按钮按下情况和接收到的消息。
- en: '**Things to Try**'
  id: totrans-108
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**尝试的事项**'
- en: Try swapping in different tunes. Or you might try changing the code so that
    when `db1` or `db2` is received, the tune is played more than once. Then the Mad
    Scientist will be more likely to hear it!
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试更换不同的曲调。或者你也可以尝试修改代码，使得在接收到 `db1` 或 `db2` 时，曲调播放多次。这样疯狂科学家更有可能听到它！
- en: '**How It Works: Sending and Receiving**'
  id: totrans-110
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**工作原理：发送与接收**'
- en: You might be wondering why we use the same code for both the sender and the
    receiver. If we press button A on the micro:bit with a speaker attached, shouldn’t
    it receive its own message and play a tune? It turns out that while the micro:bit’s
    radio is busy transmitting, it cannot receive anything. Also, having just one
    program avoids confusion about which program goes on which micro:bit.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，为什么我们对发送器和接收器使用相同的代码。如果我们按下带有扬声器的micro:bit上的A按钮，难道它不应该接收自己的消息并播放一首曲子吗？事实证明，当micro:bit的无线电在忙于传输时，它无法接收任何信息。此外，使用一个程序可以避免混淆哪个程序应放在哪个micro:bit上。
- en: '**PROJECT: MICRO:BIT-CONTROLLED ROVER**'
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**项目：Micro:bit控制的漫游车**'
- en: '![Image](../images/common3.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common3.jpg)'
- en: '*Difficulty: Hard*'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '*难度：难*'
- en: No secret lab would be complete without a robot that can give instructions.
    Back in [Chapter 6](ch06.xhtml#ch06), we made a robot rover that could be controlled
    over Bluetooth using your phone. This project uses the same basic rover, but instead
    of controlling the rover with your phone and Bluetooth, you’ll use a second micro:bit
    and the micro:bit’s own way of communicating wirelessly. You’ll steer the rover
    by tilting the controlling micro:bit left, right, forward, or backward. [Figure
    10-3](ch10.xhtml#ch10fig3) shows the project, and you can see it in action at
    *[https://youtu.be/Qqr0fknoPQ4/](https://youtu.be/Qqr0fknoPQ4/)*.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 没有一个可以提供指令的机器人，任何秘密实验室都不完整。在[第6章](ch06.xhtml#ch06)中，我们制作了一个可以通过蓝牙用手机控制的机器人漫游车。这个项目使用了相同的基本漫游车，但不是通过手机和蓝牙来控制漫游车，而是使用第二个micro:bit和micro:bit自身的无线通信方式。你将通过倾斜控制的micro:bit来操控漫游车，向左、向右、前进或后退。[图10-3](ch10.xhtml#ch10fig3)展示了这个项目，你可以在*
    [https://youtu.be/Qqr0fknoPQ4/](https://youtu.be/Qqr0fknoPQ4/)* 上看到它的实际演示。
- en: '![Image](../images/10fig03.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/10fig03.jpg)'
- en: '*Figure 10-3: A micro:bit-controlled rover*'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**图10-3：一个micro:bit控制的漫游车**'
- en: '**What You’ll Need**'
  id: totrans-118
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**所需物品**'
- en: 'For this project, you’ll need the following items:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，你将需要以下物品：
- en: '**2 × Micro:bit**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**2 × Micro:bit**'
- en: '**Kitronik Motor Driver Board for micro:bit (V2)** To control the forward and
    backward motors'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**Kitronik Motor Driver Board for micro:bit (V2)** 用于控制前进和后退的电机'
- en: '**Low-cost robot chassis kit** Includes two gear motors and a 4 × AA battery
    box'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**低成本机器人底盘套件** 包括两个齿轮电机和一个4 × AA电池盒'
- en: '**4 × AA batteries**'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**4 × AA电池**'
- en: '**AAA battery pack for micro:bit** To power the micro:bit being used as the
    remote control'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**micro:bit的AAA电池包** 为作为遥控器的micro:bit供电'
- en: '**Screwdrivers** Suitable for both the nuts and bolts on the chassis and the
    screw terminals on the motor controller board'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**螺丝刀** 适用于底盘上的螺母和螺栓以及电机控制板上的螺丝端子'
- en: '**Soldering equipment** To attach wires to the gearmotors'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**焊接工具** 用于将导线连接到齿轮电机上'
- en: '**Blu-Tack adhesive putty** To attach the motor control board and micro:bit
    to the chassis'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**Blu-Tack粘土** 用于将电机控制板和micro:bit固定到底盘上'
- en: '![Image](../images/f0237-01.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0237-01.jpg)'
- en: '**Construction**'
  id: totrans-129
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**构建**'
- en: Use the rover you built in [Chapter 6](ch06.xhtml#ch06) or, if you haven’t built
    the rover yet, go back and follow construction steps 1 to 4 from that project.
    We’ll be using different software, however, so once the chassis is built, follow
    the instructions here. Don’t fit the batteries yet, or your rover might accidentally
    drive itself off your table!
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 使用你在[第6章](ch06.xhtml#ch06)中制作的漫游车，或者如果你还没有制作漫游车，可以回到该项目并按照步骤1到4进行制作。不过我们将使用不同的软件，因此一旦底盘完成，按照这里的说明操作。不要安装电池，否则你的漫游车可能会不小心自己驶出桌子！
- en: First, we’ll install the program for the rover part of the project. Go to *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*
    and click the link for **Rover**. Copy the hex file onto the micro:bit attached
    to the rover chassis. Head back to [Chapter 1](ch01.xhtml#ch01) if you need more
    detailed instructions on how to get programs onto your micro:bit.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将为项目中的漫游车部分安装程序。访问*[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*并点击**Rover**的链接。将hex文件复制到连接到漫游车底盘的micro:bit上。如果需要更详细的说明如何将程序上传到micro:bit，请回到[第1章](ch01.xhtml#ch01)。
- en: Now install the program for the micro:bit being used as the remote control.
    Go to the Github page, click the link for **Rover Controller**, click **Download**,
    and copy the hex file onto the micro:bit.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在安装用于作为遥控器的micro:bit的程序。访问Github页面，点击**Rover Controller**的链接，点击**下载**，然后将hex文件复制到micro:bit上。
- en: Before you let your robot loose in the lab, it’s worth testing out your project
    without the wheels touching the ground. You may need to swap over some of the
    motor wires so the rover follows the commands you send it correctly. Insert the
    batteries and then flip the rover on its back so you can see what the wheels are
    doing, without any danger of its driving away.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在让你的机器人在实验室中自由活动之前，最好先测试一下你的项目，不让轮子接触地面。你可能需要交换一些电动机电线，这样探测车就能正确地按照你发送的命令行驶。插入电池后，将探测车翻转过来，这样你就能看到轮子在做什么，而不必担心它会自行移动。
- en: Tip the controlling micro:bit to the left, and you should see the same left
    arrow appear on the displays of both micro:bits. At the same time, both wheels
    should turn in the same direction. As you look from above, the right wheel should
    be turning faster than the left. If one of the wheels is turning in the wrong
    direction, swap over the red and black wires at the motor controller screw terminal
    for that motor.
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将控制微型计算机（micro:bit）向左倾斜，你应该会看到两个 micro:bit 显示屏上都出现相同的左箭头。与此同时，两个轮子应该朝相同的方向转动。当你从上方观察时，右轮应该转得比左轮快。如果其中一个轮子转向错误，可以交换该电动机的红色和黑色电线。
- en: Try driving the rover around. Remember that if the vehicle gets stuck, you can
    stop it by putting the controller micro:bit into a horizontal position.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试驱动探测车四处行驶。记住，如果车辆卡住，你可以通过将控制器 micro:bit 置于水平位置来停止它。
- en: '**Code**'
  id: totrans-136
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**代码**'
- en: The software uses two programs, one for the controller and another for the rover
    micro:bit. You can only use Blocks code for this project
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 软件使用两个程序，一个用于控制器，另一个用于探测车 micro:bit。这个项目只能使用 Blocks 代码。
- en: '**Controller Code**'
  id: totrans-138
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**控制器代码**'
- en: Here is the code for the remote controller micro:bit.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这是遥控器 micro:bit 的代码。
- en: '![Image](../images/f0239-01.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0239-01.jpg)'
- en: You’ll notice that in the `on start` block, we use a `radio set group` block.
    This block makes the micro:bit listen only to messages from other micro:bits in
    the same group—here group 1\. This prevents your micro:bit from picking up stray
    messages from other scientists in the area who might be using the same radio group
    and behaving unpredictably as a result. If you want to add other micro:bit pairs,
    change the number in the `radio set group` block to a different value for each
    micro:bit pair. Then each rover will be paired to a single controller. You can
    pick any number between 0 and 255.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到在 `on start` 块中，我们使用了一个 `radio set group` 块。这个块让 micro:bit 仅监听来自同一组（这里是组
    1）中其他 micro:bit 的消息。这可以防止你的 micro:bit 接收到来自同一区域其他科学家（可能也在使用相同的无线电组）发来的杂散消息，从而导致不可预测的行为。如果你想添加其他的
    micro:bit 配对，可以将 `radio set group` 块中的数字更改为不同的值，然后每对 micro:bit 将配对到一个控制器。你可以选择介于
    0 和 255 之间的任意数字。
- en: 'The rest of the program consists of `on gesture` blocks that handle the possible
    movement commands for the rover. For example, below the `on start` block, you
    have the `on tilt left` block, which transmits the string `L` and displays an
    `East` arrow when the micro:bit is tilted. Here’s the full list of commands that
    can be sent:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 程序的其余部分由 `on gesture` 块组成，这些块处理探测车可能的运动命令。例如，在 `on start` 块下方，你有一个 `on tilt
    left` 块，当微型计算机倾斜时，它会传输字符串 `L` 并显示一个 `东` 向箭头。以下是可以发送的命令的完整列表：
- en: '`S` Stop'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`S` 停止'
- en: '`L` Left'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '`L` 左转'
- en: '`R` Right'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`R` 右转'
- en: '`B` Backward'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`B` 后退'
- en: '`F` Forward'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`F` 前进'
- en: '**Rover Code**'
  id: totrans-148
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**探测车代码**'
- en: Here is the receiving code for these commands.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这是接收这些命令的代码。
- en: '![Image](../images/f0240-01.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0240-01.jpg)'
- en: Similar to the controller code, we have an `on start` block that sets the radio
    group to 1\. Remember that if you decide to change the radio group code, you have
    to do it on both micro:bits!
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 与控制器代码类似，我们有一个 `on start` 块，它将无线电组设置为 1。记住，如果你决定更改无线电组代码，必须在两个 micro:bit 上都进行更改！
- en: The rest of the code is contained in an `on radio received` block. Inside the
    block is a series of `if` statements that test the incoming command letter and
    perform the action that letter signals. If the `L` command is received, for example,
    a left arrow is shown, and then motor 1 is set to go forward at 50 percent and
    motor 2 to go forward at 100 percent (full speed). This will make motor 2 (the
    right motor) go faster than the left motor, making the rover turn in an arc toward
    the left.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 其余的代码包含在 `on radio received` 块中。这个块内部有一系列 `if` 语句，用来检测接收到的命令字母，并执行该字母表示的动作。例如，如果接收到
    `L` 命令，会显示左箭头，然后将电动机 1 设置为 50% 前进，电动机 2 设置为 100% 前进（全速）。这将使电动机 2（右电动机）比左电动机转得更快，从而使探测车向左弯曲行驶。
- en: '**Things to Try**'
  id: totrans-153
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**尝试的事项**'
- en: Try adding extra commands to the pair of programs. You’re getting a bit short
    on gestures to use, but you could add a `D` (for *dance*) command that tells the
    rover to do a little sequence of moves when the controller micro:bit is shaken.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试为这对程序添加额外的命令。你现在的手势种类有些不足，但你可以添加一个`D`（表示*dance*）命令，指示探测器在控制器micro:bit被摇动时执行一小段动作序列。
- en: You could also add a `C` (for *circle*) command that instructs the rover to
    spin on the spot by setting one motor forward at full speed and the other in reverse
    at full speed. This could be triggered by pressing button A or B.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以添加一个`C`（表示*circle*）命令，指示探测器原地旋转，通过让一个电机全速向前，另一个电机全速反向。这个命令可以通过按下A或B按钮触发。
- en: '**How It Works: Motor Driver Blocks**'
  id: totrans-156
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**工作原理：电机驱动模块**'
- en: 'You may have noticed a new category of blocks that appeared in your Blocks
    code when you opened the code for the rover: *Motor Driver blocks*. These blocks
    were created by Kitronik, the makers of the motor controller used in the project.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，当你打开探测器的代码时，Blocks代码中出现了一个新类别的模块：*电机驱动模块*。这些模块是由Kitronik公司创建的，该公司提供了项目中使用的电机控制器。
- en: If you’re starting a new project and want to use these blocks, you first need
    to add them to your project. To do this, click **Extensions** at the bottom of
    the list of block categories. This will open a dialog that looks something like
    [Figure 10-4](ch10.xhtml#ch10fig4). If the package isn’t listed after you search
    for it, refresh the browser page and try searching again.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在启动一个新项目并希望使用这些模块，首先需要将它们添加到项目中。为此，点击块类别列表底部的**扩展**。这将打开一个对话框，类似于[图10-4](ch10.xhtml#ch10fig4)所示。如果在搜索后没有列出该软件包，请刷新浏览器页面并再次尝试搜索。
- en: '![Image](../images/10fig04.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/10fig04.jpg)'
- en: '*Figure 10-4: Managing extensions in the Blocks editor*'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '*图10-4：在Blocks编辑器中管理扩展*'
- en: 'In the field at the top labeled *Search or enter project URL . . .* enter the
    following: *[https://github.com/KitronikLtd/pxt-kitronik-motor-driver/](https://github.com/KitronikLtd/pxt-kitronik-motor-driver/)*.
    To make sure you get the URL right, enter it into another browser tab first. When
    you’ve found the page, copy and paste the URL from your browser’s address bar
    to the field.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在顶部标有*搜索或输入项目URL...*的字段中输入以下内容：*[https://github.com/KitronikLtd/pxt-kitronik-motor-driver/](https://github.com/KitronikLtd/pxt-kitronik-motor-driver/)*。为了确保你输入的网址正确，首先在另一个浏览器标签页中输入它。当你找到页面后，将浏览器地址栏中的URL复制并粘贴到字段中。
- en: Once you’ve entered the URL, you should see *kitronik-motor-driver*, as shown
    in [Figure 10-5](ch10.xhtml#ch10fig5). Click it, and you’ll find that your Blocks
    editor now has a new category containing the motor control blocks that you can
    drag into your code.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦输入了URL，你应该会看到*kitronik-motor-driver*，如[图10-5](ch10.xhtml#ch10fig5)所示。点击它，你会发现你的Blocks编辑器现在有了一个新类别，包含了你可以拖入代码中的电机控制模块。
- en: '![Image](../images/10fig05.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/10fig05.jpg)'
- en: '*Figure 10-5: Managing extensions in the Blocks editor*'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '*图10-5：在Blocks编辑器中管理扩展*'
- en: Once the package has been added to your project, it will be stored in the project
    forever. You won’t need to install it again, unless you start a new project and
    want to use the package there. Because the package is stored in the project, you
    can easily share the project with someone else, with no need for them to install
    the package.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦将该软件包添加到你的项目中，它将永久存储在项目中。除非你启动一个新项目并希望在其中使用该软件包，否则你无需再次安装它。因为软件包存储在项目中，你可以轻松地与他人共享该项目，无需对方安装软件包。
- en: '**SUMMARY**'
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: In this chapter, you tested the range of the micro:bit’s built-in radio, built
    a better doorbell, and made a remote-controlled rover. With its good range, the
    radio lets micro:bits communicate with each other easily, and it lends itself
    to all sorts of communication projects.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你测试了micro:bit内建无线电的范围，制作了一个更好的门铃，并制作了一个遥控探测器。凭借其良好的范围，无线电使得micro:bit之间的通信变得容易，它非常适合各种通信项目。
- en: This is the final chapter in this book. The [appendix](app01.xhtml) that follows
    will give you some information about the parts you need to build the projects
    in this book and where you might obtain them.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书的最后一章。随后的[附录](app01.xhtml)将为你提供一些关于构建本书项目所需零件的信息，以及你可以从哪里获得它们。
- en: The micro:bit community is a vibrant and active one. You’ll find lots of interesting
    projects to make and experiments to carry out involving your micro:bit. Take a
    look at *[https://microbit.org/ideas/](https://microbit.org/ideas/)* if you want
    some inspiration for what you, as a Mad Scientist, might do next with your micro:bit.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: micro:bit社区是一个充满活力和活跃的社区。你会发现许多有趣的项目可以制作，实验可以进行，涉及到你的micro:bit。如果你想要一些灵感，看看
    *[https://microbit.org/ideas/](https://microbit.org/ideas/)*，作为一个疯狂科学家，你或许会从中获得下一个项目的灵感。
