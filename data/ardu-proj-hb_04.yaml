- en: '**PART 3**'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**第三部分**'
- en: '![image](../images/common-01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common-01.jpg)'
- en: '**SERVOS**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**舵机**'
- en: 'PROJECT 10: JOYSTICK-CONTROLLED LASER'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目 10：操纵杆控制激光
- en: '**IN THIS PROJECT WE CREATE A JOYSTICK-CONTROLLED LASER BY CONNECTING TWO SERVOS
    TO A JOYSTICK AND USING THIS SETUP AS A PAN-AND-TILT CONTROLLER FOR A LASER POINTER.**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**在本项目中，我们通过将两个舵机连接到操纵杆，并使用这个设置作为激光指示器的平移和俯仰控制器，来创建一个操纵杆控制的激光。**'
- en: '![image](../images/f0086-01.jpg)![image](../images/f0087-01.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0086-01.jpg)![image](../images/f0087-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需零件**'
- en: • Arduino
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: • Arduino
- en: • Breadboard
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: • 面包板
- en: • Jumper wires
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: • 跳线
- en: • 2 Tower Pro SG90 9g servomotors
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: • 2个Tower Pro SG90 9g舵机
- en: • Analog five-pin, two-axis joystick module
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: • 模拟五针、双轴操纵杆模块
- en: • Pan-and-tilt housing module
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: • 平移和俯仰支架模块
- en: '**LIBRARIES REQUIRED**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需库**'
- en: • Servo
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: • 舵机
- en: '**HOW IT WORKS**'
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: 'Servos are small motors that can precisely angle their arms to positions between
    0 and 180 degrees. In this project we’ll place the servos into a tilt-and-pan
    mount. The tilt-and-pan mount is a worthy investment, as it makes it much easier
    to attach the laser to the servo. Here we’re controlling a laser, but you could
    easily replace the laser with a webcam or another small device. We use two servos:
    one for left and right movement, and the other for up and down movement. As you
    might remember, servomotors have three wires, shown in [Figure 10-1](ch10.xhtml#ch10fig1):
    positive power (red), negative power or ground (black or brown), and signal (typically
    yellow, orange, or white).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 舵机是小型电动机，可以精确地将其臂旋转到0到180度之间的位置。在本项目中，我们将舵机安装在一个倾斜和旋转支架中。倾斜和旋转支架是一个值得投资的模块，因为它使得将激光器安装到舵机上变得更加容易。在这里，我们控制的是激光器，但你也可以轻松地用一个网络摄像头或其他小型设备替代激光器。我们使用两个舵机：一个用于左右移动，另一个用于上下移动。正如你可能记得的，舵机有三根线，如图[10-1](ch10.xhtml#ch10fig1)所示：正电源线（红色）、负电源线或地线（黑色或棕色）和信号线（通常为黄色、橙色或白色）。
- en: '**FIGURE 10-1:**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 10-1：**'
- en: Servos have three wires.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 舵机有三根线。
- en: '![image](../images/f10-01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f10-01.jpg)'
- en: Before we begin building, you need to know a little about how a joystick works.
    The joystick shown in [Figure 10-2](ch10.xhtml#ch10fig2) is basically two potentiometers
    and a button that allow us to measure the movement of the stick in two dimensions.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始构建之前，你需要了解一下操纵杆是如何工作的。图[10-2](ch10.xhtml#ch10fig2)中显示的操纵杆基本上由两个电位器和一个按钮组成，这些元件可以让我们在二维空间中测量摇杆的运动。
- en: '**FIGURE 10-2:**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 10-2：**'
- en: This joystick has two potentiometers and a button for measuring movement.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这个操纵杆有两个电位器和一个按钮，用于测量运动。
- en: '![image](../images/f10-02.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f10-02.jpg)'
- en: Potentiometers are variable resistors and act as sensors that provide us with
    a voltage that varies depending on the rotation of the device around its shaft.
    So as you move the joystick around its center, its resistance—and therefore its
    output—varies. The outputs from the potentiometers are analog, so they can have
    a value only between 0 and 1,023 when read by the analog pin of the Arduino. This
    number sends a pulse to the Arduino, which in turn tells the servos how far to
    move. (See [Project 2](ch02.xhtml#ch02) for more on potentiometers.)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 电位器是可变电阻器，作为传感器根据设备围绕其轴的旋转来提供一个变化的电压。所以，当你移动操纵杆时，它的电阻值—也就是输出值—会发生变化。电位器的输出是模拟信号，因此在Arduino的模拟引脚读取时，它的值只能在0到1,023之间。这一数值会发送一个脉冲给Arduino，Arduino再控制舵机移动的距离。（有关电位器的更多内容，请参见[项目2](ch02.xhtml#ch02)）。
- en: 'A joystick typically has five pins: VRx (the x-axis signal), VRy (the y-axis
    signal), SW (a pushbutton we won’t be using in this project), and GND and +5V
    for power.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一个操纵杆通常有五根引脚：VRx（x轴信号），VRy（y轴信号），SW（一个我们在本项目中不会使用的按钮），以及GND和+5V用于电源。
- en: When the x-axis of the joystick is moved to the left or right, the corresponding
    servo will move in that direction; when the y-axis of the joystick is moved up
    or down, the other servo will move up or down.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当操纵杆的x轴向左或向右移动时，相应的舵机会朝那个方向移动；当操纵杆的y轴向上或向下移动时，另一个舵机会向上或向下移动。
- en: '**THE BUILD**'
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建**'
- en: Connect both servos’ red wires to the + 5V rail, and their brown wires to GND
    on the breadboard.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将两个舵机的红色线连接到+5V轨道，将它们的棕色线连接到面包板的GND。
- en: Connect one of the servo’s yellow signal wires directly to Arduino pin 9, and
    the other servo’s signal wire directly to Arduino pin 10, as shown in the circuit
    diagram in [Figure 10-4](ch10.xhtml#ch10fig4).
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其中一个舵机的黄色信号线直接连接到Arduino的9号引脚，另一个舵机的信号线直接连接到Arduino的10号引脚，如图[10-4](ch10.xhtml#ch10fig4)所示的电路图所示。
- en: '| **SERVOS** | **ARDUINO** |'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **舵机** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Red wires | +5V |'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红色线 | +5V |'
- en: '| Brown wires | GND |'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 棕色线 | GND |'
- en: '| Yellow wire 1 | Pin 9 |'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黄色线 1 | 引脚 9 |'
- en: '| Yellow wire 2 | Pin 10 |'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黄色线 2 | 引脚 10 |'
- en: Connect the GND from the joystick module to the Arduino GND rail, and +5V to
    the Arduino +5V rail. Connect the VRx pin directly to Arduino A0, and the VRy
    pin directly to Arduino A1\. Again, the SW switch connection is not used in this
    project.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将操纵杆模块的 GND 连接到 Arduino 的 GND 轨道，将 +5V 连接到 Arduino 的 +5V 轨道。将 VRx 引脚直接连接到 Arduino
    A0，将 VRy 引脚直接连接到 Arduino A1。再次强调，SW 开关连接在此项目中没有使用。
- en: '| **JOYSTICK** | **ARDUINO** |'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **操纵杆** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| +5V | +5V |'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| +5V | +5V |'
- en: '| GND | GND |'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | GND |'
- en: '| VRx | A0 |'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| VRx | A0 |'
- en: '| VRy | A1 |'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| VRy | A1 |'
- en: '| SW | Not used |'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| SW | 未使用 |'
- en: Connect the breadboard rails to Arduino GND and +5V, and then check that your
    setup matches that of [Figure 10-3](ch10.xhtml#ch10fig3).
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将面包板的轨道连接到 Arduino GND 和 +5V，然后检查你的设置是否与 [图 10-3](ch10.xhtml#ch10fig3) 一致。
- en: '**FIGURE 10-3:**'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 10-3：**'
- en: The circuit diagram for the joystick-controlled laser. Note that the joystick
    in this diagram is a different brand than the one used in the project, but the
    connections are the same, so the instructions in the project will work fine.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该电路图展示了操纵杆控制激光器的电路。注意，这个电路图中的操纵杆品牌与项目中使用的不同，但连接方式相同，因此项目中的说明是有效的。
- en: '![image](../images/f10-03.jpg)'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f10-03.jpg)'
- en: '**MOUNTING THE LASER**'
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**激光器安装**'
- en: For this project, I’ve attached the servos to a pan-and-tilt housing module;
    you should be able to find this housing or a similar one for a relatively reasonable
    price on eBay by searching for “Arduino pan-and-tilt servo kit.” You may have
    to assemble it yourself, but this is simple to do with the included instructions.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，我将舵机安装到云台模块中；你应该能在 eBay 上通过搜索“Arduino 云台舵机套件”找到这个模块或类似的模块，价格相对合理。你可能需要自己组装，但按照附带的说明很容易完成。
- en: Attach a laser diode to the top of the module; I recommend using a glue gun
    for a permanent fixture, but you can use tape if you want something more temporary.
    Now you can control the laser using the joystick. The servos will clip into the
    tilt-and-pan module as shown in [Figure 10-5](ch10.xhtml#ch10fig5).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 将激光二极管安装在模块的顶部；我建议使用热熔胶枪进行永久固定，但如果需要临时固定，可以使用胶带。现在你可以通过操控操纵杆来控制激光器。舵机会夹入云台模块，如
    [图 10-5](ch10.xhtml#ch10fig5) 所示。
- en: '**FIGURE 10-4:**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 10-4：**'
- en: Clipping the servos into the pan-and-tilt module
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 将舵机夹入云台模块
- en: '![image](../images/f10-04.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f10-04.jpg)'
- en: Moving the joystick left and right will move the x-axis servo, and moving the
    joystick up and down will move the y-axis servo. The complete assembly is shown
    in Figure 10-6.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 移动操纵杆向左和向右将控制 x 轴舵机，移动操纵杆向上和向下将控制 y 轴舵机。完整的组装如图 10-6 所示。
- en: '**FIGURE 10-5:**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 10-5：**'
- en: The complete assembly
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的组装
- en: '![image](../images/f10-05.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f10-05.jpg)'
- en: '**THE SKETCH**'
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**草图**'
- en: The sketch first calls on the Servo library and then defines the two servos
    as `tilt` and `pan`. The joystick x-axis is attached to Arduino pin A0 and the
    y-axis to Arduino A1, and these are our `INPUT`. The x- and y-axes are then set
    as variables for movement. The `tilt` servo is attached to Arduino pin 9 and `pan`
    is attached to Arduino pin 10, and these are our `OUTPUT`. The Arduino then reads
    the `INPUT` from the joystick and changes this voltage to `OUTPUT`, moving the
    servos according to which direction is chosen.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 草图首先调用 Servo 库，然后将两个舵机定义为 `tilt` 和 `pan`。操纵杆的 x 轴连接到 Arduino 引脚 A0，y 轴连接到 Arduino
    A1，这些是我们的 `输入`。然后将 x 轴和 y 轴设置为用于运动的变量。`tilt` 舵机连接到 Arduino 引脚 9，`pan` 舵机连接到 Arduino
    引脚 10，这些是我们的 `输出`。Arduino 然后读取来自操纵杆的 `输入`，并将该电压转换为 `输出`，根据选择的方向来移动舵机。
- en: '[PRE0]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'PROJECT 11: REMOTE CONTROL SERVO'
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目 11：遥控舵机
- en: '**IN THIS PROJECT, WE’LL USE THE ARDUINO TO EXAMINE AND DECODE SIGNALS FROM
    A REMOTE CONTROL, AND THEN USE THESE CODES TO CONTROL A SERVO.**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**在这个项目中，我们将使用 Arduino 检查和解码遥控器的信号，然后使用这些代码来控制舵机。**'
- en: '![image](../images/f0093-01.jpg)![image](../images/f0094-01.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0093-01.jpg)![image](../images/f0094-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需部件**'
- en: • Arduino board
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: • Arduino 板
- en: • Breadboard
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: • 面包板
- en: • Jumper wires
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: • 跳线
- en: • 38 kHz IR receiver
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: • 38 kHz 红外接收器
- en: • Remote control
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: • 遥控器
- en: • 2 Tower Pro SG90 9g servomotors
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: • 2 个 Tower Pro SG90 9g 舵机
- en: • Pan-and-tilt housing module
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: • 云台模块
- en: '**LIBRARIES REQUIRED**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需库**'
- en: • Servo
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: • 舵机
- en: • IRremote
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: • IRremote
- en: '**HOW IT WORKS**'
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: 'First we’ll decode the remote control using an IR receiver. An IR receiver
    has three pins: OUT, GND, and VCC (shown left to right in [Figure 11-1](ch11.xhtml#ch11fig1)).
    Check the data sheet for the receiver you bought to make sure it matches this
    pin layout. In rare cases you might find that your receiver’s pin layout differs,
    but you should still be able to use the pinout to wire it up.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用红外接收器解码遥控器。红外接收器有三个针脚：OUT、GND 和 VCC（如 [图11-1](ch11.xhtml#ch11fig1) 所示，从左到右）。检查你购买的接收器的数据表，确保它与这个针脚布局匹配。在极少数情况下，你可能会发现接收器的针脚布局不同，但你仍然可以使用针脚图来接线。
- en: '**FIGURE 11-1:**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**图11-1：**'
- en: IR receiver—from left to right, the pins are OUT, GND, and VCC
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 红外接收器——从左到右，针脚依次为 OUT、GND 和 VCC
- en: '![image](../images/f11-01.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f11-01.jpg)'
- en: You will also need a remote control. You can use any kind of remote, including
    a TV remote, but it is best to use an old one that you no longer need. When you
    press a button on the remote, it sends out a digital value that is picked up by
    the receiver. This value is different for each button. We’ll decode the values
    for each button with the Arduino and then assign them to Arduino pins in the sketch
    to control the output—in this case, a servo.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要一个遥控器。你可以使用任何类型的遥控器，包括电视遥控器，但最好使用一个你不再需要的旧遥控器。当你按下遥控器上的按钮时，它会发送一个数字值，该值会被接收器接收。每个按钮的值都是不同的。我们将使用
    Arduino 解码每个按钮的值，然后在草图中将它们分配给 Arduino 引脚来控制输出——在这种情况下是伺服电机。
- en: By personalizing the sketch with the values you decode, you can connect certain
    buttons to certain instructions and use your remote to control the servos. If
    you already built the pan-and-tilt housing model from [Project 10](ch10.xhtml#ch10),
    you can reuse that here. Otherwise, flip to [Project 10](ch10.xhtml#ch10) for
    instructions on setting it up.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 通过根据解码的值个性化草图，你可以将特定的按钮与特定的指令连接，并使用遥控器控制伺服电机。如果你已经按照 [项目10](ch10.xhtml#ch10)
    构建了倾斜和旋转机架模型，你可以在此复用它。否则，翻到 [项目10](ch10.xhtml#ch10)，查看设置说明。
- en: 'We’ll assign a button to the directional movement of the servos in the tilt-and-pan
    housing, so in total four buttons will control all movement: left and right for
    the x-axis servo, and up and down for the y-axis servo. Short button presses will
    move the servos in small increments, and extended presses will move the servo
    continuously until the maximum or minimum value is reached.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为倾斜和旋转机架中的伺服电机的方向移动分配一个按钮，因此总共四个按钮将控制所有的运动：左右控制 x 轴伺服电机，上下控制 y 轴伺服电机。短按按钮将使伺服电机以小增量移动，而长按将使伺服电机持续移动，直到达到最大或最小值。
- en: '**THE SETUP**'
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**硬件设置**'
- en: Download the IRremote library from *[http://www.nostarch.com/arduinohandbook/](http://www.nostarch.com/arduinohandbook/)*
    and add it to your libraries folder, as shown in “[Libraries](ch00.xhtml#ch00lev2sec07)”
    on [page 7](ch00.xhtml#page_7).
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从*[http://www.nostarch.com/arduinohandbook/](http://www.nostarch.com/arduinohandbook/)*下载
    IRremote 库，并将其添加到你的库文件夹中，具体操作请参见 “[Libraries](ch00.xhtml#ch00lev2sec07)” 和 [第7页](ch00.xhtml#page_7)。
- en: Insert the IR receiver into a breadboard. Connect the OUT pin on the receiver
    to Arduino pin 11, GND to Arduino GND, and VCC to Arduino +5V. Again, with some
    versions of the 38 kHz receiver, the pin order may differ from what’s shown here,
    so check the data sheet corresponding to your component.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将红外接收器插入面包板。将接收器的 OUT 针脚连接到 Arduino 的引脚 11，GND 连接到 Arduino 的 GND，VCC 连接到 Arduino
    的 +5V。同样，对于某些版本的 38 kHz 接收器，针脚顺序可能与这里显示的不同，因此请检查与你的组件相对应的数据表。
- en: '| **IR RECEIVER** | **ARDUINO** |'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **IR RECEIVER** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| OUT | Pin 11 |'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| OUT | 引脚 11 |'
- en: '| GND | GND |'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | GND |'
- en: '| VCC | +5V |'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| VCC | +5V |'
- en: Now upload and run the following code.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在上传并运行以下代码。
- en: '[PRE1]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The sketch first calls on the IRremote library, which reads from the IR receiver
    and sends the corresponding data to the Arduino. The IR receiver is assigned to
    pin 11 on the Arduino, and the sketch begins communicating with the Arduino IDE
    so that when a button is pressed the input is displayed in the Serial Monitor
    in real time. The sketch continues in a loop, looking for button presses, and
    shows the corresponding value to the IDE.
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 草图首先调用 IRremote 库，该库从红外接收器读取数据并将相应的数据发送到 Arduino。红外接收器被分配到 Arduino 的引脚 11，草图开始与
    Arduino IDE 通信，这样当按下按钮时，输入值会实时显示在串口监视器中。草图将持续运行，查找按钮按压，并将相应的值显示给 IDE。
- en: Open the Serial Monitor in your IDE.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 IDE 中的串口监视器。
- en: Point your remote toward the receiver and try pressing different buttons. They
    will appear in the Serial Monitor decoded into letters and numbers in a format
    known as hexadecimal (HEX), as shown in [Figure 11-2](ch11.xhtml#ch11fig2). Try
    short, sharp presses to get the best results. If you press a button for too long,
    the Serial Monitor will show *F*s for as long as you hold the button.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将遥控器对准接收器，并尝试按下不同的按钮。它们将在串口监视器中以十六进制（HEX）格式解码为字母和数字，如[图11-2](ch11.xhtml#ch11fig2)所示。尝试快速而短促的按压以获得最佳效果。如果按住按钮时间过长，串口监视器将显示*F*，直到你松开按钮为止。
- en: '**FIGURE 11-2:**'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图11-2：**'
- en: When a button on the remote is pressed, the HEX code for that button is displayed
    in the Arduino IDE Serial Monitor.
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当遥控器上的按钮被按下时，该按钮的HEX代码将在Arduino IDE的串口监视器中显示。
- en: '![image](../images/f11-02.jpg)'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f11-02.jpg)'
- en: Write down the numbers that appear and the buttons they correspond to. You will
    need these numbers later.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记下显示的数字及其对应的按钮。你以后需要这些数字。
- en: Now that we’ve decoded the button signals from the remote control, we can use
    them to control two servos.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经解码了遥控器按钮的信号，可以用它们来控制两个舵机。
- en: '**THE BUILD**'
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**搭建**'
- en: Using your breadboard setup from step 2 on [page 96](ch11.xhtml#page_96), with
    the receiver already connected, attach your servos to the Arduino by connecting
    the brown wire on each to GND, and the red wire to +5V. Then, connect the yellow
    control wire for the first servo to Arduino pin 10, and the yellow control wire
    for the second servo to Arduino pin 9.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你在[第96页](ch11.xhtml#page_96)第2步的面包板设置，接收器已连接，连接舵机到Arduino。将每个舵机的棕色线连接到GND，红色线连接到+5V。然后，将第一个舵机的黄色控制线连接到Arduino的引脚10，将第二个舵机的黄色控制线连接到Arduino的引脚9。
- en: '| **SERVOS** | **ARDUINO** |'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **舵机** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Red wires | +5V |'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红色线 | +5V |'
- en: '| Brown wires | GND |'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 棕色线 | GND |'
- en: '| Yellow wire (servo 1) | Pin 10 |'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黄色线（舵机1） | 引脚10 |'
- en: '| Yellow wire (servo 2) | Pin 9 |'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黄色线（舵机2） | 引脚9 |'
- en: Remember to attach power to your breadboard.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记得给面包板连接电源。
- en: Check that your setup matches the circuit diagram in [Figure 11-3](ch11.xhtml#ch11fig3),
    and then upload the code in “[The Sketch](ch11.xhtml#ch11lev1sec04)” on [page
    99](ch11.xhtml#page_99).
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查你的设置是否与[图11-3](ch11.xhtml#ch11fig3)中的电路图相符，然后上传在[草图](ch11.xhtml#ch11lev1sec04)第99页的代码。
- en: '**FIGURE 11-3:**'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图11-3：**'
- en: The circuit diagram for the remote control servo
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 遥控器舵机的电路图
- en: '![image](../images/f11-03.jpg)'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f11-03.jpg)'
- en: '**THE SKETCH**'
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**草图**'
- en: 'Make sure you use the values that you decoded in step 3 of “[The Setup](ch11.xhtml#ch11lev1sec02)”
    on [page 96](ch11.xhtml#page_96) in place of the values included here when completing
    the sketch. When you’re changing the value in the sketch to match your own codes,
    keep the 0x and add your HEX code after it. For example, for the first button
    I decoded, the HEX code is FFA05F, which looks like this in the sketch:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在完成草图时使用在“[设置](ch11.xhtml#ch11lev1sec02)”第3步中解码的值，而不是这里提供的值。更改草图中的值以匹配你自己的代码时，保持0x前缀，并在其后添加你的HEX代码。例如，对于我解码的第一个按钮，HEX代码是FFA05F，草图中的显示如下：
- en: '[PRE2]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this project we’re controlling servos, but you could adapt the code slightly
    to remotely control anything that needs to be set to `HIGH`, such as an LED or
    piezo buzzer.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们控制的是舵机，但你可以稍微修改代码来远程控制任何需要设置为`HIGH`的设备，例如LED或压电蜂鸣器。
- en: The sketch calls on the IRremote library to read from the receiver and the Servo
    library to move the motors. The first two buttons are assigned to the x-axis servo
    to move the angle to a maximum of 70 degrees for left pan or 160 degrees for right.
    The third and fourth buttons are assigned to the y-axis servo to control the up
    and down tilt movement.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 草图调用了IRremote库来读取接收器，调用了Servo库来驱动舵机。前两个按钮被分配给x轴舵机，控制角度最大可调为70度（向左转）或160度（向右转）。第三和第四个按钮被分配给y轴舵机，控制上下倾斜运动。
- en: 'If you want to adapt this to other output, change the code:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想将此项目适配为其他输出，只需稍作修改代码：
- en: '[PRE3]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'to:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 到：
- en: '[PRE4]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Enter the sketch as follows:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 按如下方式输入草图：
- en: '[PRE5]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
