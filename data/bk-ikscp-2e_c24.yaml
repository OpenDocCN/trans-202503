- en: '24'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '24'
- en: 'Tutorial: Technical Drawing'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 教程：技术图纸
- en: You can use Inkscape to create technical drawings, too. Inkscape is not a CAD
    (computer-aided design) application, but it works very well for moderately complex
    technical drawings. If you already know how to use Inkscape, using it for this
    kind of work is a logical choice. As an example, let’s draw an isometric image
    of an engine part’s cross-section ([Figure 24-13](#fig24-13)).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 Inkscape 来创建技术图纸。Inkscape 并不是一个 CAD（计算机辅助设计）应用程序，但它非常适合制作中等复杂度的技术图纸。如果你已经知道如何使用
    Inkscape，那么使用它进行这种类型的工作是一个合乎逻辑的选择。举个例子，让我们画出一个发动机部件的等角剖面图（[图 24-13](#fig24-13)）。
- en: The key to creating technical drawings in Inkscape is the use of grids ([7.2](c07.xhtml#section7.2)),
    snapping ([7.3](c07.xhtml#section7.3)), transforming by numbers ([6.6](c06.xhtml#section6.6)),
    and shapes, especially rectangles ([11.2](c11.xhtml#section11.2)). Those features
    allow you to create a 3D view of a complex piece quickly and precisely, without
    ever having to approximate or adjust anything by hand. Every object, handle, and
    node just snaps into its exact place. Once you get the hang of it, producing such
    drawings will be almost addictively easy.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Inkscape 中创建技术图纸的关键在于使用网格（[7.2](c07.xhtml#section7.2)）、对齐（[7.3](c07.xhtml#section7.3)）、数字变换（[6.6](c06.xhtml#section6.6)）和形状，尤其是矩形（[11.2](c11.xhtml#section11.2)）。这些功能使你能够快速且精确地创建复杂部件的
    3D 视图，而不必手动进行任何近似或调整。每个对象、控件和节点都会精准地对齐到其确切位置。一旦你掌握了这些技巧，制作这类图纸将变得几乎令人上瘾地容易。
- en: 24.1 Setting Up the Grid
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 24.1 设置网格
- en: An *isometric* image is one where all three coordinate axes are separated by
    equal angles (60 degrees) and have the same scale. For example, in an isometric
    cube, all visible edges have the same length.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*等角投影*图像是所有三个坐标轴之间的角度相等（60度）且比例相同的图像。例如，在等角立方体中，所有可见的边长都相同。'
- en: To start a grid to create the engine part drawing, open the **Document Properties**
    dialog ([7.2.1](c07.xhtml#section7.2.1)), choose the **Grids** tab, and create
    the default axonometric grid with both X and Z angles set to 30 degrees (measured
    from the horizontal), as shown in [Figure 24-1](#fig24-1). You may want to set
    the Spacing Y (the grid being isometric, it applies all three axes) to the minimum
    measurable distance in your drawing. For example, if all dimensions in your drawing
    are in millimeters and precise to the first fractional digit, set the grid spacing
    to 0.1 mm so you never have to place anything in between grid lines.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始设置网格绘制发动机部件图纸，打开**文档属性**对话框（[7.2.1](c07.xhtml#section7.2.1)），选择**网格**标签，并创建默认的轴测网格，设置
    X 和 Z 角度都为 30 度（相对于水平面），如 [图 24-1](#fig24-1) 所示。你可能需要将 Y 轴间距（因为网格是等角的，所以它适用于所有三个坐标轴）设置为图纸中可度量的最小距离。例如，如果你的图纸所有尺寸都是毫米且精确到小数点后一位，设置网格间距为
    0.1 毫米，这样你就不需要将任何东西放置在网格线之间。
- en: '![](tuts/t06-01.svg.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-01.svg.png)'
- en: 'Figure 24-1: Setting up the isometric grid'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-1：设置等角网格
- en: You can also change the major (darker) grid lines’ spacing; by default, they
    appear every five regular lines. When you zoom out, the regular grid lines disappear
    first.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以更改主网格线（较深的网格线）的间距；默认情况下，它们每五条常规网格线出现一次。当你缩小时，常规网格线会先消失。
- en: 24.2 Making the Box
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 24.2 制作箱体
- en: Let's create the object’s bottom box. With the grid (and, by default, snapping
    to grid) on, use the Rectangle tool to draw a rectangle—any rectangle. Notice
    that the corners of the rectangle snap to the grid line intersections (pay attention
    to the snap indicator and tips, [7.3.2](c07.xhtml#section7.3.2)), but the rectangle
    is not isometric.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建对象的底部框。开启网格（并默认启用对齐网格），使用矩形工具绘制一个矩形——任何矩形。注意，矩形的角会对齐到网格线的交点（留意对齐指示器和提示，[7.3.2](c07.xhtml#section7.3.2)），但矩形并非等角投影。
- en: To skew it into the isometric projections, open the **Transform** dialog (Shift-Ctrl-M,
    [6.7](c06.xhtml#section6.7)), and on the **Skew** tab, specify 60 degrees for
    **Horizontal** skew and 30 degrees for**Vertical** skew. After you click **Apply**,
    the rectangle transforms to fit the grid; note that the rectangle’s resize handles
    now also move in the isometric projection ([11.2.1](c11.xhtml#section11.2.1)).
    Now, all you need to do is snap them to the corresponding grid intersections,
    as [Figure 24-2](#fig24-2) demonstrates.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要将其倾斜成等角投影，打开**变换**对话框（Shift-Ctrl-M，[6.7](c06.xhtml#section6.7)），在**倾斜**标签下，分别设置**水平**倾斜角度为
    60 度，**垂直**倾斜角度为 30 度。点击**应用**后，矩形会变换以适应网格；请注意，矩形的调整控件现在也会在等角投影中移动（[11.2.1](c11.xhtml#section11.2.1)）。现在，你只需将它们对齐到相应的网格交点，如
    [图 24-2](#fig24-2) 所示。
- en: '![](tuts/t06-02.svg.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-02.svg.png)'
- en: 'Figure 24-2: Creating, skewing, and snapping the top of the box'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-2：创建、倾斜并对齐盒子的顶部
- en: The box’s other two sides are even easier to create. For the front side, you
    need only 30 degrees of Vertical skew, with Horizontal skew set at 0\. The left
    side of the box is simply the front side duplicated (Ctrl-D) and flipped (H).
    After skewing and flipping, snapping the corners of all three rectangles to form
    a precise, solid, gapless 6×8×2 box is super easy. The X and Z units need to be
    an even number, so that the two grid lines intersect in the center of the top
    side ([Figure 24-3](#fig24-3)).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 盒子的另外两个侧面更容易创建。对于前面，你只需30度的垂直倾斜，水平倾斜设为 0。盒子的左侧只是前面的一份复制（Ctrl-D）并翻转（H）。经过倾斜和翻转后，将三个矩形的角点对齐，形成一个精确、实心、无缝的
    6×8×2 的盒子，非常简单。X 和 Z 单位需要是偶数，以便两个网格线交点位于顶部的中心位置（[图 24-3](#fig24-3)）。
- en: '![](tuts/t06-03.svg.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-03.svg.png)'
- en: 'Figure 24-3: Creating the front and left sides of the box'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-3：创建盒子的前面和左侧
- en: Now that you have one box, you can quickly build up complex architectures by
    duplicating its sides and re-snapping the corners to new positions. However, this
    is not what we are going to do; the next step is rounding the box’s corners.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了一个盒子，可以通过复制它的侧面并重新对齐角点到新位置，快速构建复杂的结构。然而，我们不打算这么做；下一步是将盒子的角落圆滑化。
- en: 24.3 Rounding Corners
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 24.3 圆角
- en: To round a rectangle’s corners ([11.2.2](c11.xhtml#section11.2.2)), grab the
    circular handle on a corner and drag it along the side. In the double-skewed top
    side of the box, rounding works as expected; the rectangle becomes rounded in
    its plane with appropriate projective distortion. While Ctrl-dragging one of the
    rounding handles, snap it to the nearest intersection so that the rounding radius
    is equal to one grid unit. Then, on the front and left sides, move the sizing
    handles to make them narrower by one grid unit on each side ([Figure 24-4](#fig24-4)).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要圆滑矩形的角落（[11.2.2](c11.xhtml#section11.2.2)），抓住一个角上的圆形手柄并沿侧边拖动。在盒子的双倾斜顶部，圆角按预期工作；矩形在其平面内变得圆滑，并具有适当的投影畸变。在按住
    Ctrl 拖动其中一个圆角手柄时，将其对齐到最近的交点，以使圆角半径等于一个网格单位。然后，在前面和左侧，将大小调整手柄移动，使每一侧都变窄一个网格单位（[图
    24-4](#fig24-4)）。
- en: '![](tuts/t06-04.svg.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-04.svg.png)'
- en: 'Figure 24-4: Rounding the corners on top of the box'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-4：圆滑盒子顶部角落
- en: To fill the gaps in the box’s corners, create a vertical cylinder and put copies
    (or clones) in all three of the box’s visible corners. You’ll also reuse it for
    the top cylinder of the engine part.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了填补盒子角落的空隙，创建一个垂直的圆柱体，并将副本（或克隆）放置在盒子所有三个可见角落。你还将它用于引擎部件的顶部圆柱体。
- en: To make a cylinder, start with an ellipse, but you don't even need the Ellipse
    tool to make it. Instead, just duplicate the box’s top side and resize it to an
    isometric square of 2×2 grid units. Since resizing preserves the rounded corners,
    each with the radius of one unit, this produces a perfectly isometric ellipse
    ([Figure 24-5](#fig24-5)).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要制作一个圆柱体，从椭圆开始，但你甚至不需要椭圆工具来绘制它。相反，只需复制盒子的顶部，并将其调整为一个 2×2 网格单位的等距方块。由于调整大小会保留圆角，每个角的半径为
    1 个单位，因此这将生成一个完美的等距椭圆（[图 24-5](#fig24-5)）。
- en: '![](tuts/t06-05.svg.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-05.svg.png)'
- en: 'Figure 24-5: Creating an ellipse out of a rectangle'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-5：从矩形创建椭圆
- en: To create a cylinder, you could duplicate this ellipse, move it down, and draw
    a flat non-isometric rectangle between them. Although workable, this method isn’t
    “clean,” because the ellipses’ extremities have no grid lines to which to snap
    the rectangle’s left and right edges. Such an approach requires turning off snapping
    and using manual tweaking with its inevitable speed/precision tradeoff. Let's
    try another method.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个圆柱体，你可以复制这个椭圆，将其向下移动，并在它们之间绘制一个平的非等距矩形。虽然可行，但这种方法并不“简洁”，因为椭圆的极端没有网格线来对齐矩形的左右边缘。采用这种方法需要关闭对齐，并使用手动微调，这样会不可避免地牺牲速度和精度。让我们尝试另一种方法。
- en: 'Convert a copy of this ellipse-like rectangle to path (Shift-Ctrl-C) and switch
    to the Node tool (F2). You will see what looks like four nodes on the path—but
    in fact there are eight: each visible node is actually two nodes, contributed
    by the two rounding arcs that meet there. To fix this, drag-select around each
    of these duplicate nodes in turn (the status bar should say *2 of 8 nodes selected*)
    and click the **Join selected nodes** button on the Node tool''s controls bar.
    Do this four times, so you end up with a path of four nodes.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 将这个类似椭圆的矩形复制一份并转换为路径（Shift-Ctrl-C），然后切换到节点工具（F2）。你会看到路径上看起来有四个节点——但实际上有八个：每个可见节点实际上是两个节点，由相遇的两个圆角所贡献。为了修复这个问题，逐个框选这些重复的节点（状态栏应显示*选中了
    2 个节点，共 8 个节点*），并点击节点工具控制条上的**连接选中的节点**按钮。这样做四次，你将得到一个由四个节点构成的路径。
- en: However, the ellipse’s left and right extremities don’t have nodes where you’ll
    need them. Select all nodes (Ctrl-A) and insert new nodes between each of the
    two selected nodes by pressing Insert ([12.5.3](c12.xhtml#section12.5.3)), as
    shown in [Figure 24-6](#fig24-6).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，椭圆的左右极端处并没有你需要的节点。选择所有节点（Ctrl-A），然后通过按下插入键（[12.5.3](c12.xhtml#section12.5.3)）在每两个选中的节点之间插入新节点，如[图
    24-6](#fig24-6)所示。
- en: '![](tuts/t06-06.svg.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-06.svg.png)'
- en: 'Figure 24-6: Adding nodes at the ellipse’s extremities'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-6：在椭圆的极端处添加节点
- en: Now, select only the two nodes at the horizontal extremities (marked *left*
    and *right* in [Figure 24-6](#fig24-6)) and duplicate them (Shift-D). Add the
    three nodes in the bottom half of the ellipse to the selection by dragging around
    them with Shift. Grab the node that is tangent to the grid line (marked *tangent*)
    and Ctrl-drag it and the rest of the selected nodes downward until it all snaps
    at a level two units lower, creating the ideally precise cylinder outline. After
    that, all you need to do is add a copy of the original ellipse back into its place
    on top, and draw a horizontal gradient ([Figure 24-7](#fig24-7)).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，只选择水平极端的两个节点（在[图 24-6](#fig24-6)中标记为*左*和*右*），并复制它们（Shift-D）。通过按住Shift键拖动，选择椭圆下半部分的三个节点。抓住与网格线相切的节点（标记为*tangent*），并按住Ctrl拖动它和其余选中的节点向下，直到它们都对齐在比原位置低两个单位的水平面，形成精确的圆柱轮廓。完成后，只需将原始椭圆的副本放回其顶部位置，并绘制一个水平渐变（[图
    24-7](#fig24-7)）。
- en: '![](tuts/t06-07.svg.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-07.svg.png)'
- en: 'Figure 24-7: Pulling out, shading, and capping a cylinder'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-7：拉伸、着色并封顶圆柱
- en: Group the cylinder, create three copies of it, and move each one to fill a gap
    in the rounded box. The cylinders will fit snugly into their places. To make the
    box look solid, just sort out the z-order and match the colors, as shown in [Figure 24-8](#fig24-8).
    Use the Dropper tool ([8.8](c08.xhtml#section8.8)) to copy colors from the flat
    sides to the gradient stops on the cylinders (or vice versa).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 将圆柱分组，创建三个副本，并将每个副本移到圆角盒子的空隙中。这些圆柱将恰好贴合到它们的位置。为了使盒子看起来更加立体，只需整理z轴顺序并匹配颜色，如[图
    24-8](#fig24-8)所示。使用滴管工具（[8.8](c08.xhtml#section8.8)）从平面侧面复制颜色到圆柱上的渐变停靠点（或反之）。
- en: '![](tuts/t06-08.svg.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-08.svg.png)'
- en: 'Figure 24-8: The box is ready.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-8：盒子准备好。
- en: 24.4 Making the Top Cylinder
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 24.4 制作顶部圆柱
- en: To create the top cylinder, make another copy of the corner cylinder and scale
    it up twice by pressing Ctrl->, then snap it into place on top of the center of
    the box.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建顶部圆柱，复制一个角落圆柱，并通过按Ctrl->将其缩放两倍，然后将其对准并放置在盒子中心的顶部。
- en: Duplicate the top ellipse and scale it down to 50 percent in place (Ctrl-<).
    Now, you don't even need to move it; it's already precisely where it must be to
    imitate the hole in the top cylinder. All you need to do is make it *look* like
    a hole by adding a horizontal linear gradient in the opposite direction of the
    cylinder. While you're at it, make three more copies of the hole, snap each one
    into the base box’s corners, and scale down by pressing Ctrl-< again. These will
    be the holes for the bolts to fasten the detail in place, as shown in [Figure 24-9](#fig24-9).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 复制顶部椭圆并将其缩小至原来的 50%（Ctrl-<）。现在，你甚至不需要移动它；它已经精确地位于顶部圆柱孔的位置。你需要做的就是通过添加一个水平线性渐变来让它*看起来*像是一个孔，方向与圆柱相反。在此过程中，再复制三个孔，将每个孔对齐到基础盒子的四个角落，并再次按Ctrl-<缩小。它们将成为用于固定细节的螺栓孔，如[图
    24-9](#fig24-9)所示。
- en: '![](tuts/t06-09.svg.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-09.svg.png)'
- en: 'Figure 24-9: Adding the top cylinder and the holes'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-9：添加顶部圆柱和孔洞
- en: 24.5 Making the Cutout
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 24.5 制作切口
- en: A full isometric view of the object is now ready. To demonstrate some additional
    techniques, let's create a cutout of the object showing two perpendicular cross-sections.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，物体的完整等距视图已经完成。为了展示一些附加技术，接下来我们创建一个物体的切口，展示两个垂直的截面。
- en: Since everything you’ve done so far is snapped to the grid, adding the cutout
    shape is very easy. Switch to the Pen tool ([14.1.1](c14.xhtml#section14.1.1))
    and click near the correct grid intersections to create a closed path for the
    left side of the cross section. Then, while pressing Shift, create a second subpath
    of the same path, clicking through the right side’s corners ([Figure 24-10](#fig24-10)).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你目前所做的所有操作都已对齐网格，因此添加切口形状非常容易。切换到钢笔工具 ([14.1.1](c14.xhtml#section14.1.1))，然后点击接近正确的网格交点，创建交叉截面的左侧封闭路径。接着，按住
    Shift 键，在同一路径上创建第二个子路径，点击右侧的角落 ([图 24-10](#fig24-10))。
- en: '![](tuts/t06-10.svg.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-10.svg.png)'
- en: 'Figure 24-10: Adding the cutout shape'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-10：添加切口形状
- en: Cutouts in technical designs are often filled with a pattern symbolizing the
    object’s material. Plain stripes are used for metals, and you can use one of the
    preset patterns to indicate that an object is metallic. Open the **Fill and Stroke**
    dialog ([8.2](c08.xhtml#section8.2)), click the **Pattern** button on the **Fill**
    tab, and choose the **Stripes 1:8** pattern. The problem with this pattern is
    that it shows black stripes on a transparent background, and you need black stripes
    on a white background. Just duplicate the shape, paint it white, and move the
    white copy under the striped one in the z-order ([Figure 24-11](#fig24-11)).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术设计中，切口通常会填充一个象征物体材质的图案。金属使用的是条纹图案，你可以选择一个预设的图案来表示物体是金属的。打开 **填充与描边** 对话框
    ([8.2](c08.xhtml#section8.2))，点击 **填充** 标签上的 **图案** 按钮，选择 **条纹 1:8** 图案。这个图案的问题在于它在透明背景上显示黑色条纹，而你需要的是在白色背景上的黑色条纹。只需要复制该形状，将它涂成白色，并将白色副本移到带条纹形状的下方（z轴顺序）[如图
    24-11](#fig24-11)所示。
- en: '![](tuts/t06-11.svg.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-11.svg.png)'
- en: 'Figure 24-11: Painting the stripes'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-11：绘制条纹
- en: Now you need to remove the parts of the object in front of the cutout. Select
    and delete the frontmost rounded cylinder. Using the rectangle resize handles,
    contract the the box’s right and left sides to snap them to the cutout’s edges.
    As for the rest of the objects—the top side of the box and the top ellipse of
    the cylinder—you’ll actually need to *cut* them.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你需要删除切口前面的物体部分。选择并删除最前面的圆柱体。使用矩形缩放手柄，将盒子的左右两侧收缩，使其对齐到切口的边缘。至于其余物体——盒子的顶部和圆柱体的顶部椭圆——你实际上需要*切割*它们。
- en: Again using the Pen tool, snap-draw a triangle covering the area you want to
    cut out. Subtract this triangle from the shape by selecting both and pressing
    Ctrl-–, [12.2](c12.xhtml#section12.2)), as shown in [Figure 24-12](#fig24-12).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用钢笔工具，按网格绘制一个覆盖你想要切除区域的三角形。通过选择这两个形状并按下 Ctrl-–，将这个三角形从形状中减去，如 [图 24-12](#fig24-12)
    所示。
- en: '![](tuts/t06-12.svg.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-12.svg.png)'
- en: 'Figure 24-12: Cutting out unnecessary pieces'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-12：切割不必要的部分
- en: Now, create the inside of the hole visible through the cutout. Duplicate the
    cylinder shape, scale it down (Ctrl-<), and step it down in the z-order so it's
    under the cutout shape and the hole ellipse. This will be the hole’s inner surface.
    Using the Node tool, select and pull down that shape’s bottom nodes. Then, duplicate
    the hole ellipse, move it down to the level of the bottom edge, and subtract it
    from the inner surface shape.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，创建切口中可见的孔的内部。复制圆柱形状，缩小它（Ctrl-<），并将其在 z 轴顺序中下降，使它位于切口形状和孔椭圆形状下方。这将成为孔的内表面。使用节点工具，选择并向下拉动该形状的底部节点。接着，复制孔的椭圆，将其向下移动至底边的水平位置，并从内表面形状中减去它。
- en: Finally, you need to paint the inner surface. Select the ellipse at the top
    of the hole and copy it to the clipboard (Ctrl-C). Then, select the inner surface
    path and paste the style to it (Shift-Ctrl-V). This will paint the inverted horizontal
    gradient of the top ellipse on the entire inner surface of the hole, as shown
    in [Figure 24-13](#fig24-13).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你需要绘制内表面。选择孔顶部的椭圆并将其复制到剪贴板（Ctrl-C）。然后，选择内表面路径，并将样式粘贴到它上面（Shift-Ctrl-V）。这将把顶部椭圆的反向水平渐变绘制到孔的整个内表面，如
    [图 24-13](#fig24-13) 所示。
- en: '![](tuts/t06-13.svg.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](tuts/t06-13.svg.png)'
- en: 'Figure 24-13: Creating the hole’s inner surface'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24-13：创建孔的内表面
