- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Inkscape and the World
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Inkscape 与世界
- en: Maybe this is your first encounter with vector graphics. Maybe you have used
    vector graphics before and are now curious to see what else it can do for you.
    Or maybe you are considering Inkscape after you've tried other vector editing
    applications and want to know what sets it apart. Whatever the case, you may find
    some background information enlightening. What is SVG? What is Inkscape? Where
    does it come from and where is it headed? And what can you use it for? What is
    Inkscape's place in the world of computer graphics? This introductory chapter
    gives up-to-date answers to these questions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 也许这是你第一次接触矢量图形。也许你之前使用过矢量图形，现在好奇它还能为你做些什么。或者你在尝试过其他矢量编辑应用后，考虑使用 Inkscape，想了解它与其他软件的区别。不论是哪种情况，你可能会发现一些背景信息很有启发性。什么是
    SVG？什么是 Inkscape？它来自哪里，未来将走向何方？你可以用它做什么？Inkscape 在计算机图形学的世界中处于什么位置？本章将为这些问题提供最新的答案。
- en: 1.1 What Vector Graphics Is and Why It Matters
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.1 什么是矢量图形，为什么它重要
- en: Inkscape is a *vector graphics editor*. What does that mean?
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Inkscape 是一个*矢量图形编辑器*。这意味着什么？
- en: Most of the images stored and processed on computers today are represented as
    *rasters*, also called *bitmaps*. A raster image is a primitive representation—just
    a lattice of small rectangular areas called *pixels*. For each pixel, the only
    information stored is its color and, sometimes, its transparency.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 目前大多数存储和处理的图像都是*栅格*图像，也叫*位图*。栅格图像是一种原始的表示方式——只是一个由小矩形区域构成的网格，这些小区域叫做*像素*。对于每个像素，存储的信息只有其颜色，有时还包括其透明度。
- en: For example, if you have a bitmap image with a black circle on white background
    ([Figure 1-1](#fig1-1), left), there is in fact *no* black circle as such stored
    in the image. It's only when*you* view the image that you may (or may not) get
    the idea of a black circle. All the computer knows about the image is that some
    of its pixels are black and some are white (and a few are an in-between gray).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你有一张位图图像，里面有一个黑色圆形，背景是白色（参见[图 1-1](#fig1-1)，左），实际上图像中并没有*黑色圆形*这样的元素。只有当*你*查看图像时，你才会（或者不会）认为它是一个黑色圆形。计算机对图像的了解仅限于它的一些像素是黑色的，有些是白色的（有的可能是介于黑白之间的灰色）。
- en: '![](01/circle.svg.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](01/circle.svg.png)'
- en: 'Figure 1-1: A circle as a bitmap or raster (left) and vector (right)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-1：位图或栅格形式的圆形（左）与矢量形式的圆形（右）
- en: As a result, there is little the computer can do with such an image without
    human guidance. It can change all the white pixels to blue, but it cannot readily
    move the circle because it does not *see* it as a separate object. Such a task
    may be difficult even for humans, as anyone who has used GIMP or Photoshop would
    attest; you'll have to use some fickle and unreliable tools to "select" the circle—and
    this is especially hard to do if, for example, the edge of the circle is *anti-aliased*
    (that is, some pixels on the edge have intermediate values between black and white)
    as in [Figure 1-1](#fig1-1).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，计算机对于这种图像可以做的事情非常有限，除非有人工指导。它可以将所有白色像素变成蓝色，但不能轻易地移动圆形，因为它并没有*看到*它是一个独立的对象。即使对于人类来说，这个任务也可能很困难，任何使用过
    GIMP 或 Photoshop 的人都会证明这一点；你将不得不使用一些不可靠的工具来“选择”圆形——如果圆形的边缘是*抗锯齿*的（即，圆形边缘的一些像素是黑色和白色之间的中间值），这种操作尤其困难，如[图
    1-1](#fig1-1)所示。
- en: All of this is different with *vector graphics* ([Figure 1-1](#fig1-1), right).
    In a vector format, the actual circle is stored, along with its properties, as
    an *object*. This means it is separate from any other objects, so you can do whatever
    you please with it. With such an image, your computer can do many smart things
    automatically—for example, it can delete all circles, paint all red objects with
    green, or scale all black circles to twice their size.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些与*矢量图形*不同（参见[图 1-1](#fig1-1)，右）。在矢量格式中，实际的圆形及其属性作为*对象*存储。这意味着它与其他任何对象都是分开的，因此你可以随意处理它。使用这样的图像时，你的计算机可以自动做许多智能操作——例如，它可以删除所有圆形，给所有红色对象涂上绿色，或者将所有黑色圆形的大小缩放到原来的两倍。
- en: No more frustrating pixel selections—just pick any object, any time, and edit
    it as needed. This is how Inkscape works—and this is its main point of difference
    from raster editors such as Photoshop.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 不再烦恼像素选择——随时选择任何对象，并按需编辑。这就是 Inkscape 的工作方式，也是它与像 Photoshop 这样的栅格编辑器的主要区别。
- en: 'Let''s look at the most prominent advantages of the vector approach:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下矢量方法的最显著优点：
- en: Vector images are scalable.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 矢量图像是可缩放的。
- en: '*Scalability* means you can view or export your drawing at any resolution,
    and you''ll never see any jaggedness, pixelation, or unwanted blurring. Everything
    remains perfectly crisp regardless of size. This is often cited as the main advantage
    of vector graphics; in my view, other advantages are no less important.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*可扩展性*意味着你可以在任何分辨率下查看或导出你的绘图，永远不会看到任何锯齿状、像素化或不必要的模糊。无论大小，所有内容都保持完美清晰。这通常被认为是向量图形的主要优势；在我看来，其他优势同样重要。'
- en: Vector images are editable at any time.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 向量图像可以随时编辑。
- en: No matter how complex your drawing, you can always pick any object in it and
    edit away. Think of it like a Photoshop file in which every single brush stroke
    is placed on a layer of its own—automatically. Furthermore, in a raster editor,
    you are supposed to eventually "flatten" your image, so that all separate layers
    are merged. By contrast, there's no need—indeed no possibility—to flatten a vector
    drawing (except by exporting it to a raster).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你的绘图多么复杂，你都可以随时选择其中的任何对象进行编辑。可以将其想象成一个 Photoshop 文件，其中每一笔画都自动被放置在自己独立的图层上。此外，在位图编辑器中，你最终需要“合并”图像，将所有独立的图层合并起来。相反，向量绘图没有必要——事实上也不可能——将其“合并”（除非导出为位图格式）。
- en: Vector images are easy to create and read.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 向量图像易于创建和阅读。
- en: Vector objects conform much closer to human visual perception. When we look
    at a scene, we tend to mentally separate it into objects—just as is done in a
    vector drawing. This makes vector graphics a very natural medium to work in. Also,
    since many vector formats (including SVG) are text-based, it is easy to *write*
    a simple vector drawing manually (even without a graphic editor of any kind) or
    to program a script to generate or modify such a drawing.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 向量对象更符合人类视觉感知。当我们看一个场景时，我们倾向于将其在脑海中分割成不同的对象——这正是向量图绘制的方式。这使得向量图形成为一个非常自然的工作媒介。而且，由于许多向量格式（包括
    SVG）是基于文本的，因此很容易*手动编写*一个简单的向量图（即使没有任何图形编辑器）或编写脚本来生成或修改这样的图形。
- en: Vector images are laconic.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 向量图像简洁明了。
- en: Since you don't have to store information about every pixel, a vector image
    usually takes much fewer bytes to store and transmit than the corresponding raster
    image. As a nice side effect of this, Inkscape has an unlimited undo history,
    simply because each undo step takes much less memory as a vector than it would
    as a raster.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 由于不需要存储关于每个像素的信息，向量图像通常比对应的位图图像占用更少的字节进行存储和传输。一个很好的副作用是，Inkscape 具有无限的撤销历史，因为每个撤销步骤作为向量时占用的内存远少于作为位图时的内存。
- en: Vector images are infinite.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 向量图像是无限的。
- en: 'A raster always has a fixed size in pixels—for example, 468 by 60 pixels. In
    an uncompressed bitmap, doubling the dimensions will quadruple the size of the
    file because the extra pixels need to be stored even if they are empty. Not so
    with vector images. A vector image is virtually *boundless*, and expanding it
    by moving an object an inch or a mile away costs nothing in terms of file size
    or computer memory. Similarly, a vector document is virtually infinite in terms
    of *depth*: you can zoom in as close as you want and create any number of microscopic-sized
    objects in any given space. (In reality, of course, both canvas size and zoom
    level are limited, but these limits are way beyond those of a raster editor.)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 位图总是具有固定的像素大小——例如，468 x 60 像素。在未压缩的位图中，双倍增加尺寸会使文件大小增加四倍，因为即使额外的像素为空，它们也需要存储。向量图像则不同。向量图像几乎是*无边界的*，通过将对象移动一英寸或一英里来扩展它，在文件大小或计算机内存方面不会产生任何成本。类似地，向量文档在*深度*方面几乎是无限的：你可以随意放大，创建任何数量的微观尺寸对象在任何给定的空间中。（当然，实际上，画布大小和缩放级别是有限制的，但这些限制远远超出了位图编辑器的范围。）
- en: Vector images can be animated.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 向量图像可以进行动画处理。
- en: Since, in a vector drawing, objects are stored separately, it's easy to animate
    them by moving or transforming them, changing their colors, and so on. Naturally,
    some vector formats, such as SVG or Flash, have animation capabilities built in.
    Inkscape does not yet support animated SVG, but this may change in a future release.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在向量绘图中，物体是分开存储的，所以可以通过移动或变换它们，改变它们的颜色等等来进行动画处理。自然，一些向量格式，如 SVG 或 Flash，内置了动画功能。Inkscape
    目前尚不支持动画 SVG，但在未来版本中可能会有所更改。
- en: Vector images can be interactive.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 向量图像可以是互动的。
- en: Not only can you animate objects, you can also make them interactive. A drawing
    can change its objects' properties in response to user actions—which enables complex
    user interfaces with buttons, links, drag-and-drop, and so on. Again, Inkscape's
    current capabilities in this area are limited, but you can manually edit an SVG
    file created in Inkscape, adding interactivity, which can then be played in an
    SVG viewer.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你不仅可以动画化对象，还可以让它们具有交互性。一个绘图可以根据用户的操作改变其对象的属性——这使得复杂的用户界面成为可能，比如按钮、链接、拖放等。当然，Inkscape在这一领域目前的功能有限，但你可以手动编辑在Inkscape中创建的SVG文件，添加交互性，然后可以在SVG查看器中播放。
- en: Vector objects are reusable.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 矢量对象是可重用的。
- en: It's easy to pick an object from one drawing, transform or restyle it without
    any loss of quality, and then insert it into another drawing.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个绘图中选取一个对象，变换或重新设计它而不会失去任何质量，然后再将它插入到另一个绘图中，这是非常容易的。
- en: If you are into digital music, you may better understand the vector/raster distinction
    if you think of vector graphics as similar to a MIDI sound file and raster graphics
    to a WAV sound recording. Programmers might think of vector as the "source code"
    of an image and raster as its "compiled binaries."
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢数字音乐，你可能会通过将矢量图形类比为MIDI声音文件，将光栅图形类比为WAV声音录制，来更好地理解矢量/光栅的区别。程序员可能会认为，矢量是图像的“源代码”，而光栅是其“编译后的二进制文件”。
- en: 'Of course, it can''t be all roses and no thorns. Here are the two main disadvantages
    of vector graphics compared to rasters:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，事情不可能总是没有缺点。以下是矢量图形相较于光栅图的两个主要缺点：
- en: Formats are fundamentally limited.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 格式本质上是有限的。
- en: A vector image format (of which there are many, just as there are many different
    raster formats) always limits you to a certain repertoire of objects and their
    properties. New versions of formats invent and introduce new capabilities, but
    that only highlights the fact that perfection is unattainable. Vector formats
    are forever "under construction."
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一种矢量图像格式（就像有许多不同的光栅格式一样）总是将你限制在一定范围内的对象及其属性。格式的新版本发明并引入新的功能，但这只是突显了完美是无法达到的这一事实。矢量格式永远处于“建设中”。
- en: Many images are difficult or even impossible to reproduce exactly in vector
    form. For example, images that require complex textures, such as human skin, hair,
    or wood, are inherently vector-unfriendly. The world of vectors has traditionally
    been made up of precise shapes, flat colors, and smooth gradients; if what you
    want is naturalistic texture of noise, scratches, or dirt, you will have a hard
    time rendering that in a typical vector editor.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 许多图像很难，甚至不可能在矢量形式中精确复制。例如，需要复杂纹理的图像，如人类皮肤、头发或木材，本质上对矢量不友好。矢量世界传统上由精确的形状、平坦的颜色和光滑的渐变组成；如果你想要的是自然纹理，比如噪声、刮痕或污垢，那么在典型的矢量编辑器中渲染这些将会非常困难。
- en: Still, with SVG's transparency, gradients, and filters, you can create amazingly
    photorealistic vector images in Inkscape (see [Figure 1 in the color insert](c15b.xhtml#ill-fig1)).
    Also, being a higher-level abstraction, any vector drawing may include raster
    images as a special kind of object. That is, you can always insert a photo into
    an Inkscape drawing and combine it with any vector objects.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管SVG的透明度、渐变和滤镜功能使得你可以在Inkscape中创建令人惊叹的逼真矢量图像（参见[插图1中的图](c15b.xhtml#ill-fig1)）。此外，作为一种更高层次的抽象，任何矢量绘图都可以将光栅图像作为一种特殊类型的对象。这意味着，你总是可以将一张照片插入到Inkscape绘图中，并将其与任何矢量对象结合。
- en: Vector format conversions are unreliable.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 矢量格式转换是不可靠的。
- en: For the same reason, it is never trivial to convert an image from one vector
    format into another. The repertoires of object types and capabilities of the formats
    always differ, sometimes in nonobvious ways; different versions of formats muddy
    the picture even more. For example, SVG supports blurring objects ([17.1](c17.xhtml#section17.1))
    while PDF does not; on the other hand, PDF supports gradient meshes ([1.5.5](#section1.5.5)),
    a feature presently missing in SVG (even though Inkscape supports it on an experimental
    basis, [10.7](c10.xhtml#section10.7)). This makes any kind of vector conversion
    an iffy business. In the best scenario, objects that the target format cannot
    represent directly will be approximated—for example, for exporting SVG to PDF,
    blurred objects may be replaced with embedded rasters. In the worst scenario,
    format conversion will simply produce a more or less broken image.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 出于同样的原因，将图像从一种矢量格式转换为另一种格式从来都不是简单的事情。这些格式的对象类型和功能集总是有所不同，有时差异并不显而易见；格式的不同版本让问题变得更加复杂。例如，SVG支持模糊效果（[17.1](c17.xhtml#section17.1)），而PDF不支持；另一方面，PDF支持渐变网格（[1.5.5](#section1.5.5)），这是SVG目前所没有的特性（尽管Inkscape在实验性基础上支持它，[10.7](c10.xhtml#section10.7)）。这使得任何形式的矢量转换都变得不那么确定。在最理想的情况下，目标格式无法直接表示的对象将被近似表示——例如，将SVG导出为PDF时，模糊对象可能会被嵌入的光栅图像替代。在最坏的情况下，格式转换会直接生成一个或多或少破损的图像。
- en: This is one of the reasons Inkscape's vector format, SVG, is so important. It
    is an acknowledged international standard with rich and well-defined capabilities,
    which therefore can serve as the lingua franca of vector graphics (although Adobe's
    PDF is still much more common in this role). We will discuss SVG in more detail
    later in this chapter.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Inkscape的矢量格式SVG如此重要的原因之一。它是一个公认的国际标准，具有丰富且定义明确的功能，因此可以作为矢量图形的共同语言（尽管Adobe的PDF在这一角色中仍然更为常见）。我们将在本章稍后详细讨论SVG。
- en: So what is actually stored in a vector drawing? Apart from the embedded raster
    objects just mentioned, the most common vector object type is a path. A *path*
    is just a sequence of commands like "draw a straight line to such-and-such point"
    and "draw a smooth curve through such-and-such points." There may be any number
    of such commands in a sequence, which means a path can approximate any geometric
    or real-world shape with any desired accuracy. A path can have*fill* (paint in
    the area enclosed by the path) and *stroke* (paint along the path itself), as
    well as many other properties that define how the path looks ([Figure 1-2](#fig1-2)).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，矢量图形中到底存储了什么呢？除了刚刚提到的嵌入的光栅对象外，最常见的矢量对象类型是路径。*路径*只是一个命令序列，例如“画一条直线到某个点”和“画一条平滑的曲线通过若干个点”。这样的命令序列可以有任意多条，这意味着路径可以以任意精度近似任何几何形状或现实世界中的形状。路径可以具有*填充*（在路径所围成的区域内填充颜色）和*描边*（在路径本身上描绘颜色），以及定义路径外观的许多其他属性（[图1-2](#fig1-2)）。
- en: '![](01/path.svg.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](01/path.svg.png)'
- en: 'Figure 1-2: A path object can represent any shape.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图1-2：一个路径对象可以表示任何形状。
- en: There are several other object types (such as text objects, clones, and groups)
    and many other object properties (such as font size, visibility, and blur). Many
    properties can apply to all kinds of objects, while others are specific to particular
    object types. A drawing is just a collection of objects of various types; you
    can place these objects wherever you need them, including on top of each other,
    and you can make them partially or fully transparent so that whatever is underneath
    shows through. [Figure 1 in the color insert](c15b.xhtml#ill-fig1) shows an example
    of a complex Inkscape drawing that makes heavy use of transparency, gradients,
    and blur to achieve realism (load it from Inkscape's examples folder if you want
    to examine it in its full glory).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他几种对象类型（如文本对象、克隆和组）以及许多其他对象属性（如字体大小、可见性和模糊效果）。许多属性可以应用于所有类型的对象，而其他一些则特定于某些对象类型。一个图形只是各种类型对象的集合；你可以将这些对象放置在你需要的位置，甚至可以将它们放在彼此之上，并且可以使它们部分或完全透明，以便下面的内容能够透过显示。[彩色插图中的图1](c15b.xhtml#ill-fig1)展示了一个复杂的Inkscape图形示例，该图形大量使用了透明度、渐变和模糊效果来实现逼真感（如果你想全面查看它，可以从Inkscape的示例文件夹中加载）。
- en: 1.2 What Can You Do with Inkscape?
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.2 你能用Inkscape做什么？
- en: A lot.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 很多。
- en: Schemes, charts, diagrams. Plans and drafts. Scientific illustrations and data
    graphs. Icons, symbols, logos, and emblems. Heraldry, flags, road signs. Comics,
    cartoons, anime characters, page layouts. Maps of lands—real or imaginary. Typography
    of all kinds. Banners, leaflets, posters. Web graphics. (Ads, too.) Book covers,
    holiday cards, headings, and vignettes. Kids' scribbles and stunning photorealistic
    art. Fantasy art, fan art, games art, and simply art of all flavors and varieties.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 方案、图表、示意图。计划和草图。科学插图和数据图表。图标、符号、标志和徽章。纹章、旗帜、交通标志。漫画、卡通、动漫角色、页面布局。土地地图——无论是现实的还是虚构的。各种类型的排版。横幅、传单、海报。网页图形。（广告也是。）书籍封面、贺卡、标题和小插图。儿童涂鸦和惊人的照片现实主义艺术。幻想艺术、粉丝艺术、游戏艺术，以及各种风格和类型的艺术。
- en: One of the goals of this book is to demonstrate that vector editing tools are
    applicable to a much wider range of tasks than is usually acknowledged. In fact,
    instead of trying to list all of the uses for which Inkscape is suitable, it's
    easier to describe situations where it is *not* a good choice. Let's try to lay
    out the borders of the Inkscape universe.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目标之一是展示矢量编辑工具在许多任务中的应用范围远超通常所认为的。事实上，与其试图列出所有Inkscape适用的用途，不如描述它*不*适合的情况。让我们试着勾画出Inkscape的应用边界。
- en: 'Many tasks with photos or any other *preexisting raster graphics*, such as
    color correction, retouching, and format or size conversions, are better done
    in raster editors such as GIMP or Photoshop. Of all the limitations of vector
    images, this one is the most obvious because it separates the two commonly contrasted
    kinds of graphic tools: vector and raster. Note that some raster-related tasks—such
    as adding callouts or marks, drawing shapes over a bitmap background, masking
    ([18.3](c18.xhtml#section18.3)), or even simple retouching ([18.4](c18.xhtml#section18.4))—can
    still be done quite naturally in Inkscape.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多与照片或其他*现有的光栅图形*相关的任务，例如颜色校正、修饰、格式或大小转换，最好在光栅编辑器中完成，如GIMP或Photoshop。在矢量图像的所有局限性中，这一点是最明显的，因为它区分了两种常见的对比图形工具：矢量图和光栅图。需要注意的是，一些与光栅相关的任务——例如添加标注或标记、在位图背景上绘制形状、遮罩([18.3](c18.xhtml#section18.3))，甚至简单的修饰([18.4](c18.xhtml#section18.4))——仍然可以在Inkscape中很自然地完成。
- en: Drawing with *natural-media tools*—those emulating oils, pastels, watercolors,
    and so on—is best done in specialized raster tools, such as Krita, Corel Painter,
    MyPaint, or ArtRage. More generally, this applies to any art where the *texture*
    of the colored surface is what matters most. Still, if you care more about shape
    and color than texture, or if your art looks good with just flat color, gradients,
    and blurs, Inkscape is one of the best tools for "simply drawing" ([Chapter 14](c14.xhtml#ch14)).
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用*自然媒介工具*进行绘画——那些模拟油画、粉彩、水彩等的工具——最好在专门的光栅工具中完成，如Krita、Corel Painter、MyPaint或ArtRage。更一般而言，这适用于任何艺术形式，其中*颜色表面纹理*是最重要的。尽管如此，如果你更注重形状和颜色，而不是纹理，或者你的艺术看起来只需要平面颜色、渐变和模糊，Inkscape是“简单绘画”([第14章](c14.xhtml#ch14))的最佳工具之一。
- en: Producing *text-rich multipage documents*, especially with complex features
    such as footnotes, indexes, or a table of contents, is naturally the domain of
    page layout software (such as Scribus or Adobe InDesign) or batch formatters (such
    as TEX or Apache FOP). Inkscape, however, works very well for graphics-rich single-page
    documents, such as posters or leaflets. You can even use it for some multipage
    designs by storing each page in a separate document or layer (it does not yet
    support multiple pages within one document). Also, Inkscape lacks support for
    CMYK color separations or spot colors, which limits its usefulness for print work.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成*文字丰富的多页文档*，尤其是带有复杂功能的文档，如脚注、索引或目录，通常属于页面布局软件的范畴（如Scribus或Adobe InDesign）或批量格式化工具（如TEX或Apache
    FOP）。然而，Inkscape在图形丰富的单页文档中表现得非常好，例如海报或传单。你甚至可以通过将每一页存储为单独的文档或图层来使用它进行一些多页设计（它尚不支持在一个文档内有多个页面）。此外，Inkscape不支持CMYK颜色分离或专色，这限制了它在印刷工作中的实用性。
- en: While Inkscape's 3D Box tool ([11.3](c11.xhtml#section11.3)) can be used for
    simple*three-dimensional drafts and scenes*, it is a more of a tool for a traditional
    2D artist whose drawings depict 3D objects, not a 3D artist creating 3D worlds.
    In other words, if you need a one-off drawing of a simple 3D scene, you can use
    Inkscape to get a nice-looking and geometrically correct result. If, however,
    you want several renditions of the same scene from different angles or a 3D animation,
    use some real 3D software instead (Blender, Maya, or SketchUp, to name just a
    few).
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虽然Inkscape的3D Box工具（[11.3](c11.xhtml#section11.3)）可以用于简单的*三维草图和场景*，但它更适合传统2D艺术家使用，帮助他们描绘3D对象，而不是为创建3D世界的3D艺术家设计的工具。换句话说，如果你只需要一幅简单的3D场景图，Inkscape能够帮你获得一个外观精美且几何上正确的结果。然而，如果你需要从不同角度呈现同一场景，或是制作3D动画，还是使用真正的3D软件（如Blender、Maya或SketchUp等）更为合适。
- en: You can do some simple *CAD* (Computer-Aided Design; this term usually applies
    to engineering drawings) work in Inkscape. Inkscape provides ways to draw and
    transform objects precisely, as well as a plethora of snapping, alignment, and
    distribution features. However, Inkscape does not support features like parametric
    modeling, nor does it yet have any libraries of CAD elements (such as screws or
    tubes) that are essential to professional CAD work. While you may try to borrow
    such elements elsewhere, in most cases it is still better to use a specialized
    tool, such as QCAD or AutoCAD.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在Inkscape中做一些简单的*CAD*（计算机辅助设计；这个术语通常适用于工程图纸）工作。Inkscape提供了精确绘制和变换对象的方式，以及大量的对齐、分布和吸附功能。然而，Inkscape不支持像参数化建模这样的功能，也没有CAD元素库（如螺丝或管道），这些都是专业CAD工作所必需的。虽然你可以尝试从其他地方借用这些元素，但在大多数情况下，使用专业工具（如QCAD或AutoCAD）仍然是更好的选择。
- en: Inkscape has a dedicated Connector tool that you can use to draw pretty complex
    *diagrams and flowcharts* with automatically routed connectors. This tool is rather
    limited, however; if you need to create many standardized diagrams, look into
    specialized tools, such as Visio or Dia.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Inkscape有一个专用的连接器工具，可以用来绘制相当复杂的*图表和流程图*，并自动路由连接器。然而，这个工具有一定的局限性；如果你需要创建许多标准化的图表，可以考虑使用专业工具，如Visio或Dia。
- en: Some people have successfully used Inkscape for *presentations*. With its ease
    of manipulating objects and many eye-candy effects, Inkscape is indeed an attractive
    choice when you need to concoct a presentation. You can create and reuse a page
    template with headers and placeholder text ([3.2](c03.xhtml#section3.2)). Inkscape
    even includes a stand-alone SVG viewer (Inkview) with fullscreen mode and spacebar
    key for the "show next" command, which is typically all you need to show a presentation
    whose pages are saved as separate SVG documents. Office presentation applications,
    such as PowerPoint or OpenOffice.org Impress, still have their advantages, although
    these programs tend to feel clumsy once you get used to Inkscape's graphic power.
    Some people use Inkscape for drawing the graphics and a presentation application
    for adding text and creating the actual presentation. There are also helpful add-ons,
    such as InkSlides (converts a multilayer SVG into multipage PDF) or JessyInk (converts
    a multilayer SVG into a scripted presentation that you can view in Firefox or
    another SVG-capable browser).
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些人成功地使用Inkscape进行*演示文稿*。凭借其便捷的对象操作和众多的视觉效果，Inkscape在你需要制作演示文稿时确实是一个有吸引力的选择。你可以创建并重复使用带有标题和占位符文本的页面模板（[3.2](c03.xhtml#section3.2)）。Inkscape甚至包括一个独立的SVG查看器（Inkview），支持全屏模式和空格键进行“下一页”命令，这通常是展示保存为独立SVG文档的演示文稿所需要的全部功能。虽然PowerPoint或OpenOffice.org
    Impress等办公演示应用程序仍然有其优势，但一旦你习惯了Inkscape的图形功能，这些程序会显得比较笨拙。有些人使用Inkscape绘制图形，再用演示文稿应用程序添加文本和制作实际演示文稿。还有一些有用的插件，如InkSlides（将多层SVG转换为多页PDF）或JessyInk（将多层SVG转换为可在Firefox或其他支持SVG的浏览器中查看的脚本演示文稿）。
- en: Inkscape's path effects ([13.3](c13.xhtml#section13.3)) and extensions ([Chapter 19](c19.xhtml#ch19))
    can render a lot of interesting graphic artifacts, such as Lindenmeyer systems,
    random trees, spirograph curves, or barcodes. New extensions are easy to program,
    too. However, if what you need is some complex *algorithmic art*, such as fractals,
    use specialized software and import the result into Inkscape.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Inkscape的路径效果（[13.3](c13.xhtml#section13.3)）和扩展（[第19章](c19.xhtml#ch19)）可以生成许多有趣的图形效果，如林登迈尔系统、随机树、螺旋曲线或条形码。新扩展也很容易编程。然而，如果你需要的是一些复杂的*算法艺术*，例如分形图形，建议使用专业软件，并将结果导入Inkscape中。
- en: Inkscape does not yet support SVG *animation* and won't run *scripts* in an
    SVG document (though you can still view and edit a document's scripts in Inkscape).
    So while you can use it for drawing animation frames, characters, and UI mockups,
    you will need a different application to combine these elements into a working
    animation or interactive application.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Inkscape 目前尚不支持 SVG *动画*，也无法在 SVG 文档中运行*脚本*（尽管你仍然可以在 Inkscape 中查看和编辑文档的脚本）。因此，虽然你可以用它绘制动画帧、角色和
    UI 原型，但你仍需要其他应用程序将这些元素组合成一个可工作的动画或互动应用程序。
- en: Admittedly fuzzy (and still changing), these are the current frontiers of the
    vector graphics land. Everything *within* these boundaries is the rightful domain
    of a modern vector editor such as Inkscape. Note that only some of these limits
    are inherent in vector graphics as such; others are just current limitations of
    Inkscape that may be overcome in future versions.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这些领域目前虽然还存在模糊不清（并且仍在变化），但它们是矢量图形领域的前沿。一切*在*这些边界内的内容，都是现代矢量编辑器如 Inkscape 的合法领域。需要注意的是，这些限制中的一部分本身就是矢量图形所固有的；而其他一些则只是当前
    Inkscape 的局限，可能在未来版本中得到克服。
- en: Curiously, a lot of people roam the outskirts of the graphics land but are oblivious
    to the vector heartland. As a result, they often frustrate themselves trying to
    use their favorite specialized tool for the wrong generic task. Examples include
    Microsoft Office users struggling with PowerPoint whenever they need to make any
    kind of picture or layout, or novices complaining in forums about how difficult
    it is to draw simple geometric shapes in GIMP. These are typical cases of vector
    blindness; do not fall prey to this disease!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，很多人徘徊在图形领域的外围，却对矢量的核心领域视而不见。因此，他们常常为使用自己喜爱的专业工具来完成错误的通用任务而感到沮丧。比如，Microsoft
    Office 用户每当需要制作任何类型的图片或布局时都会在 PowerPoint 中挣扎，或者新手在论坛中抱怨在 GIMP 中绘制简单几何形状是多么困难。这些都是矢量盲目的典型例子；不要成为这种疾病的牺牲品！
- en: The vector land is also the place where a lot of project roadmaps begin. No
    matter what kind of project I am starting and what software I will end up using,
    my first step is usually to open Inkscape and start making quick drafts. Only
    when I run into some of the limitations listed above might I move on to more specialized
    applications to complete my project. More and more often, I find that I don't
    really need to leave Inkscape to finish what I started. Inkscape's universe keeps
    expanding.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 矢量领域也是许多项目路线图的起点。无论我开始的是哪种项目，以及最终会使用什么软件，我的第一步通常是打开 Inkscape 并开始快速草拟。只有当我遇到上面提到的某些限制时，才会转向更专业的应用程序来完成我的项目。越来越多的时候，我发现自己实际上不需要离开
    Inkscape 就能完成我开始的工作。Inkscape 的世界不断扩展。
- en: 1.3 Sources of Inkscape Art
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.3 Inkscape 艺术来源
- en: A tool is dead without a community of users, and a community of users is nonexistent
    without a body of work they can study and reuse. Inkscape wouldn't be quite as
    fun to use if you always had to start a project from an empty page—or if you had
    no one to share your work with.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 没有用户社区，工具就是死的，而没有他们可以研究和重用的作品，用户社区也就不存在。如果每次都得从空白页面开始项目，或者根本没有人可以分享你的作品，Inkscape
    使用起来就不会那么有趣了。
- en: The two main reasons to seek SVG art are *learning* and*reusing*. Reusing is
    simple; this is what the whole idea of "clipart" is about. Instead of drawing
    everything from scratch, you take elements created by someone else and combine
    them with your own work (if the license for those elements permits that, of course).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找 SVG 艺术的两个主要原因是*学习*和*重用*。重用很简单；这正是“剪贴画”这一概念的核心所在。你不必从头开始绘制所有内容，而是将其他人创作的元素与自己的作品结合起来（当然前提是这些元素的许可允许这么做）。
- en: When reusing others' art, source format is not too important so long as Inkscape
    can read it ([Appendix B](b02.xhtml#chB)). You can use not only SVG, but PDF and
    AI files as the source of vector images for your designs. PostScript and EPS (Encapsulated
    PostScript) are supported to a lesser extent; you can also import CDR (CorelDRAW)
    files.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在重用他人艺术作品时，只要 Inkscape 能读取源格式，格式本身并不是太重要（[附录 B](b02.xhtml#chB)）。你不仅可以使用 SVG，还可以使用
    PDF 和 AI 文件作为你设计中的矢量图像来源。PostScript 和 EPS（封装 PostScript）支持较少；你还可以导入 CDR（CorelDRAW）文件。
- en: Also, nothing prevents you from importing a bitmap file into Inkscape and either
    using it as is in your design, or taking advantage of Inkscape's versatile bitmap
    tracer ([18.5.2](c18.xhtml#section18.5.2)) to convert it to vector paths.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，任何东西都不会阻止你将位图文件导入 Inkscape，并将其用于设计中，或者利用 Inkscape 多功能的位图追踪器（[18.5.2](c18.xhtml#section18.5.2)）将其转换为矢量路径。
- en: Even if you don't need clipart, learning is always a good reason to download
    the SVG source of an image you find interesting. Unlike a bitmap, a vector image
    contains a lot of information about the way it was created, and in Inkscape you
    can examine that information in detail. The correspondence between visible areas
    and objects, the types of these objects, their properties, grouping and layer
    structures—all of these aspects are very instructive when you're studying Inkscape
    or SVG techniques.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你不需要剪贴画，学习也是下载你觉得有趣的SVG源文件的一个好理由。与位图不同，矢量图像包含了很多关于它如何创建的信息，而在Inkscape中你可以详细查看这些信息。可见区域与对象之间的对应关系、这些对象的类型、它们的属性、分组和层级结构——这些方面在你学习Inkscape或SVG技术时非常具有指导意义。
- en: Inkscape's files are easy to find online, compared to most other vector tools.
    It shouldn't be surprising given that its native format, SVG, is human-readable
    and naturally web-friendly (it is directly supported by most recent browsers).
    Moreover, as open source software, Inkscape promotes a culture of sharing that
    extends to content as well. There is plenty of SVG on the web already (for example,
    search [https://images.google.com/](https://images.google.com/) for *filetype:svg
    face*)—much more than, say, AI or CDR (but still a far cry from PDF).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 与大多数其他矢量工具相比，Inkscape的文件在网上更容易找到。这并不令人惊讶，因为它的原生格式SVG是人类可读的，并且天然适合网页使用（大多数现代浏览器直接支持它）。此外，作为开源软件，Inkscape推广共享文化，这种文化也延伸到内容方面。网上已经有大量的SVG素材（例如，可以在[https://images.google.com/](https://images.google.com/)上搜索*filetype:svg
    face*)——比起AI或CDR，SVG的数量要多得多（但仍然远远少于PDF）。
- en: 'Apart from searching the web for SVG content, you might try the following resources:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在网上搜索SVG内容，你还可以尝试以下资源：
- en: '[FreeSVG.org](http://FreeSVG.org) and [http://www.openclipart.org/](http://www.openclipart.org/)
    are community sites with a lot of public domain clipart in SVG format.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[FreeSVG.org](http://FreeSVG.org)和[http://www.openclipart.org/](http://www.openclipart.org/)是两个社区网站，提供大量公共领域的SVG格式剪贴画。'
- en: Wikimedia Commons ([http://commons.wikimedia.org/](http://commons.wikimedia.org/))
    contains thousands of SVG images of all sorts, most of them created in Inkscape.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wikimedia Commons（[http://commons.wikimedia.org/](http://commons.wikimedia.org/)）包含了成千上万种各种各样的SVG图像，其中大多数是用Inkscape创建的。
- en: The official Inkscape Forum ([https://inkscape.org/forums/](https://inkscape.org/forums/))
    is where Inkscape users help each other as well as share and discuss their creations.
    There are also Inkscape groups on DeviantArt, Flickr, Reddit, and other social
    media sites.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方Inkscape论坛（[https://inkscape.org/forums/](https://inkscape.org/forums/)）是Inkscape用户互相帮助、分享和讨论创作的地方。DeviantArt、Flickr、Reddit和其他社交媒体上也有Inkscape的相关小组。
- en: Finally, you're not limited to SVG—Inkscape is a general-purpose vector editor.
    Just search for "vector clipart" online and you will find tons of it, both free
    and commercial; most clipart will come in EPS, AI, or PDF formats, which Inkscape
    can use just fine.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，你并不局限于SVG——Inkscape是一个通用的矢量编辑器。只需在线搜索“矢量剪贴画”，你就能找到大量的免费和商业资源；大多数剪贴画将以EPS、AI或PDF格式提供，而Inkscape可以很好地使用这些格式。
- en: 1.4 A Brief History of SVG
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.4 SVG的简短历史
- en: Inkscape uses SVG as the format for saving its vector files. What is SVG?
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Inkscape使用SVG作为保存矢量文件的格式。什么是SVG？
- en: The SVG (Scalable Vector Graphics) standard was born at the height of the XML
    revolution in the late 1990s. In those days, when the lure of simple yet infinitely
    expressive XML was fresh, people wanted to create XML vocabularies for *everything*;
    vector graphics was a natural candidate. In 1998, a working group was formed at
    W3C, the international consortium that is behind the most commonly used web standards
    such as HTML, CSS, and XML. The first fruit of their labors, SVG 1.0, appeared
    in 2001; the most recent official version is 1.1, published in 2003.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: SVG（可缩放矢量图形）标准诞生于1990年代末XML革命的高峰时期。在那个时候，当简单而无限表达力的XML吸引了人们时，大家希望为*一切*创建XML词汇；矢量图形自然成为一个候选项。1998年，W3C成立了一个工作组，W3C是负责HTML、CSS、XML等最常用网页标准的国际联盟。它们的第一次成果——SVG
    1.0——于2001年发布；最新的官方版本是1.1，发布于2003年。
- en: From that point on, however, the progress of SVG slowed down. It took many years
    for proper SVG support to appear in all the major browsers and graphics applications.
    Version 1.2, long under development, was eventually dropped in favor of 2.0; as
    of this writing, SVG 2.0 still has the status of a draft standard. On the other
    hand, SVG has outlived most of its proprietary competitors (such as Adobe's Flash
    or Microsoft's XAML and Silverlight), has been firmly established as the default
    vector format on the internet, and has made inroads into the traditional design
    and publishing. At the end of the day, being open does count for something!
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，从那时起，SVG 的发展进展放缓。直到多年后，所有主要浏览器和图形应用程序才开始支持 SVG。经过长期开发的 1.2 版本最终被放弃，转而支持 2.0；截至本文撰写时，SVG
    2.0 仍处于草案标准阶段。另一方面，SVG 已经超过了大多数专有竞争者（如 Adobe 的 Flash 或 Microsoft 的 XAML 和 Silverlight），并且已经稳固地成为互联网的默认矢量格式，并开始进入传统设计和出版领域。归根结底，开放性确实具有一定的价值！
- en: Stemming from the long and often convoluted history of vector formats, SVG tried
    hard to do things the right way from the beginning. Inspired by PostScript and
    PDF ([1.5.1.1](#section1.5.1.1)), it was designed to be free from their limitations.
    SVG natively supports transparency, gradients, Unicode for text, and many other
    conveniences that are taken for granted in the 21st century. It also adds unique
    filter effects ([Chapter 17](c17.xhtml#ch17)), which are basically raster operations
    (such as blur) that can be applied to objects without losing vector editability
    and resolution independence.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 源自矢量格式的漫长而复杂的历史，SVG 从一开始就努力做到正确的方式。受 PostScript 和 PDF 启发（[1.5.1.1](#section1.5.1.1)），它的设计旨在摆脱这些格式的限制。SVG
    原生支持透明度、渐变、文本的 Unicode 编码以及许多其他在 21 世纪被视为理所当然的便利功能。它还添加了独特的滤镜效果（[第17章](c17.xhtml#ch17)），这些效果本质上是栅格操作（如模糊），可以应用于对象而不失去矢量可编辑性和分辨率独立性。
- en: Like the once-ubiquitous Flash, SVG also includes quite comprehensive animation
    features. Version 2.0, still under development, adds more goodies, such as autowrapped
    (flowed) text, vector effects, WOFF fonts, and more.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 就像曾经无处不在的 Flash 一样，SVG 也包含了相当全面的动画功能。仍在开发中的 2.0 版本添加了更多新功能，如自动换行（流式文本）、矢量效果、WOFF
    字体等。
- en: All modern browsers support SVG to some (usually sufficient) extent. This means
    that you can load almost any of your Inkscape SVG files into a browser the same
    way you would load a JPG or HTML file, and the browser will display it exactly
    as it looked in Inkscape.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 所有现代浏览器都在某种程度上（通常是足够的程度）支持 SVG。这意味着你可以像加载 JPG 或 HTML 文件一样将几乎任何 Inkscape SVG
    文件加载到浏览器中，浏览器会准确显示它在 Inkscape 中的样子。
- en: SVG is a large and complex standard, and most existing software has only limited
    support of it. Inkscape is no exception. Most notably, it cannot do SVG animation
    or scripting. Some smaller SVG features are also missing; for example, references
    to resources (such as gradients or symbols) work only within the same document.
    It is a stated goal of the Inkscape project to eventually support all of SVG.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: SVG 是一个庞大而复杂的标准，大多数现有软件仅提供有限的支持，Inkscape 也不例外。最显著的是，它无法进行 SVG 动画或脚本编写。还有一些较小的
    SVG 特性也缺失；例如，对资源的引用（如渐变或符号）仅在同一文档内有效。Inkscape 项目的目标之一是最终支持所有 SVG 特性。
- en: 'When you save an Inkscape document, you have a choice of two SVG formats: *Plain
    SVG* and *Inkscape SVG*. Plain SVG is just that: pure SVG 1.1 code and nothing
    else. Inkscape SVG, however, adds quite a number of elements and attributes in
    Inkscape''s private namespace.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 当你保存一个 Inkscape 文档时，你可以选择两种 SVG 格式：*纯 SVG* 和 *Inkscape SVG*。纯 SVG 就是纯粹的 SVG
    1.1 代码，仅此而已。然而，Inkscape SVG 会在 Inkscape 的私有命名空间中添加相当多的元素和属性。
- en: Don't be afraid of Inkscape SVG! It is perfectly valid and standard-compliant
    SVG; the goal of these additional elements and attributes is just to provide Inkscape-specific
    metadata*about* the SVG objects, not to add some incompatible objects of Inkscape's
    own. Inkscape extensions may affect how objects*behave* when you edit them in
    Inkscape, but they never affect how the document is *rendered*. (See [15.2.2](c15.xhtml#section15.2.2)
    for a legacy exception, however.) Therefore, Inkscape SVG and Plain SVG versions
    of the same file will look exactly the same in any compliant SVG renderer. The
    only reason to use Plain SVG may be to reduce the file size or produce a document
    more suitable for manual editing by an SVG expert.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 不必害怕 Inkscape 的 SVG！它是完全有效且符合标准的 SVG；这些额外的元素和属性的目的是提供 Inkscape 特有的关于 SVG 对象的元数据*关于*这些
    SVG 对象，而不是添加一些 Inkscape 自有的不兼容对象。Inkscape 扩展可能会影响你在 Inkscape 中编辑对象时它们的*行为*，但从不影响文档的*渲染*。不过，参考[15.2.2](c15.xhtml#section15.2.2)中的遗留例外。因此，Inkscape
    SVG 和普通 SVG 版本的同一文件在任何兼容的 SVG 渲染器中看起来完全一样。使用普通 SVG 的唯一理由可能是为了减少文件大小或生成更适合 SVG
    专家手动编辑的文档。
- en: Inkscape can also save files as *compressed SVG* (both Plain and Inkscape varieties).
    Compressed files have the extension *.svgz*; unlike SVG, they are not human-readable
    but take much less space on disk. Most programs will read SVGZ files just as easily
    as they read SVG.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Inkscape 还可以将文件保存为*压缩 SVG*（包括普通的和 Inkscape 版本）。压缩文件的扩展名为 *.svgz*；与 SVG 不同，它们不可读，但占用的磁盘空间要小得多。大多数程序都会像读取
    SVG 文件一样轻松读取 SVGZ 文件。
- en: 1.5 Inkscape and Its Competition
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.5 Inkscape 与它的竞争者
- en: 'Of course, Inkscape is far from being the only game in town. There have existed
    and still exist dozens of vector editors: commercial and open source, for different
    platforms, generic and specialized, alive and dead. A few of them deserve to be
    mentioned here.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，Inkscape 远不是唯一的选择。曾经和现在仍然存在着数十款矢量编辑器：有商业的，也有开源的，有针对不同平台的，有通用的，也有专业化的，活跃的和已停止开发的。有一些是值得在这里提到的。
- en: At the time of the first edition of this book (2009), all of Inkscape's serious
    competitors were commercial (and often quite costly) desktop applications for
    Windows and Mac. Now, there's significant new competition from online editors,
    partially or completely free ([1.5.4](#section1.5.4)); like almost everything
    else in our lives recently, vector editing has gone online and into the cloud.
    (Moreover, newer arrivals in this space tend to not emphasize being *vector* editors,
    even though that's what they are; they are "just" graphics and design tools.)
    Still, Inkscape's raw power, extensive ecosystem, zero cost, and cross-platform
    availability continue to give it a significant competitive advantage.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的第一版（2009年）时，Inkscape 所面临的所有严重竞争者都是商业性的（且通常价格不菲）桌面应用程序，适用于 Windows 和 Mac。现在，在线编辑器带来了重要的新竞争，其中一些是部分或完全免费的（[1.5.4](#section1.5.4)）；像我们生活中的几乎所有其他事情一样，矢量编辑也已经进入了在线和云端。（此外，这些新加入的工具通常并不强调它们是*矢量*编辑器，尽管它们本质上就是；它们只是“普通”的图形和设计工具。）然而，Inkscape
    强大的原始功能、广泛的生态系统、零成本以及跨平台的可用性，依然使它保持着显著的竞争优势。
- en: 1.5.1 Adobe Illustrator
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.5.1 Adobe Illustrator
- en: Adobe Illustrator takes the indisputable first place in this list. Old but continuously
    developed, it is an immensely powerful and feature-packed application that is
    usually considered the leader in the field and a de facto standard in vector graphics.
    Even if you don't use Illustrator, you are likely to run across mentions of its
    features and versions, comparisons of other programs to it, and of course AI-created
    vector files in various formats (including SVG).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Adobe Illustrator 在这个列表中毫无疑问占据了第一的位置。虽然它已有些年头，但一直在不断发展，是一款功能强大、特性丰富的应用程序，通常被认为是该领域的领军者，也是矢量图形的事实标准。即使你不使用
    Illustrator，你也很可能会遇到它的功能和版本介绍，其他程序与它的对比，当然，还有以 AI 创建的各种格式的矢量文件（包括 SVG）。
- en: No doubt much of Illustrator's clout is channeled from its more famous cousin,
    Adobe Photoshop. Positioned as parts of the same creative suite, Photoshop and
    Illustrator share many UI traits and are optimized for working together. However,
    compared to Photoshop, Illustrator's position in its field is fortunately much
    less of a monopoly. Even without Inkscape, it still has very serious competition,
    although AI's prominence has been steadily growing.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问，Illustrator 的影响力很大程度上来源于它那位更为知名的“表亲”——Adobe Photoshop。作为同一创意套件的一部分，Photoshop
    和 Illustrator 共享许多用户界面特征，并且经过优化，能够更好地协同工作。然而，与 Photoshop 相比，Illustrator 在其领域的地位幸运地并非垄断性。即使没有
    Inkscape，它依然面临着非常强劲的竞争，尽管 AI 的影响力稳步增长。
- en: Dating from the late 1980s, Illustrator has had a long and winding history.
    It wasn't always the dominant player in vector graphics. Many of its features
    were pioneered in competing packages and, sometimes only after many years, reimplemented
    in AI. By now, however, it's so big—and growing bigger with every version, especially
    if you consider the rest of Adobe's Creative Suite as well as a whole industry
    of third-party AI plug-ins—that any generalizations are risky. Illustrator is
    a lot of things to a lot of people.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Illustrator 起源于1980年代末，拥有悠久而曲折的历史。它并非一直都是矢量图形领域的主导者。许多功能最初是在竞争软件中开创的，有些甚至是在多年后才被重新实现到
    AI 中。然而，如今它已经变得如此庞大——每个版本都在不断增长，尤其是当你考虑到 Adobe 的其他 Creative Suite 以及整个第三方 AI 插件行业时——因此任何概括都充满风险。对很多人来说，Illustrator
    是多种多样的。
- en: 'Still, I think I can risk one such generalization: whatever its capabilities,
    few people will claim Illustrator''s UI as a paragon of usability. Critics (admittedly
    mostly users of competing packages) cite a cluttered interface dominated by a
    swarm of floating dialogs, too many tools with too narrow functions, limited on-canvas
    editability of objects'' properties, and scarcity of context information. Competing
    editors also often claim a speed edge over AI.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 但我认为我可以冒险做出这样的概括：无论其功能如何，很少有人会称赞 Illustrator 的用户界面是可用性的典范。批评者（显然大多是竞争软件的用户）指出，界面杂乱无章，浮动对话框成群，工具过多且功能过于狭窄，无法在画布上直接编辑对象属性，以及缺乏上下文信息。竞争编辑器也常声称在速度上超过
    AI。
- en: 1.5.1.1 Adobe's Vector Formats
  id: totrans-89
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 1.5.1.1 Adobe 的矢量格式
- en: Vector formats associated with Illustrator, and with Adobe in general, play
    a crucial role in the modern digital world. Even if you're not planning to use
    anything but SVG with Inkscape, it is useful to have an idea of what PostScript
    and PDF are, how they are related, and what they are capable of.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Illustrator 以及 Adobe 相关的矢量格式在现代数字世界中发挥着至关重要的作用。即使你不打算在 Inkscape 中使用除 SVG 外的任何格式，了解
    PostScript 和 PDF 的概念、它们之间的关系以及它们的功能也是非常有用的。
- en: 'Adobe''s first claim to fame, back in 1984, was creating the grandfather of
    all vector graphic formats: *PostScript*. Designed as a standard for sending data
    to printers, it was ready just in time to play a major role in the "desktop publishing
    revolution" of the 1980s, driven by accessible personal computers and laser printers.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Adobe 在1984年的第一个重要成就，就是创造了所有矢量图形格式的祖先：*PostScript*。PostScript 被设计为一种发送数据到打印机的标准，它恰好在1980年代，由于个人电脑和激光打印机的普及，参与了“桌面出版革命”的关键时刻。
- en: PostScript was (and is) quite unusual in that it is a complete*programming language*
    and not just a data format. A PostScript file is actually a program that a printer
    or computer must run in order to get an image. For example, it may contain an
    instruction to print a text line, such as "I must not disrupt the class," and
    a loop that will repeat this line a hundred times. Unfortunately, this also means
    that, due to an error in the program or someone's malicious intent, a PostScript
    program might run indefinitely, tying up the system's resources.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: PostScript 是一种相当不寻常的格式，因为它不仅仅是一个数据格式，而是一个完整的*编程语言*。PostScript 文件实际上是一个程序，打印机或计算机必须运行它才能获得图像。例如，它可能包含一条指令来打印一行文本，例如
    "I must not disrupt the class"，并且有一个循环会重复打印这一行一百次。不幸的是，这也意味着由于程序中的错误或某人的恶意意图，PostScript
    程序可能会无限运行，耗尽系统资源。
- en: On the positive side, PostScript's interpreter used little memory and could
    therefore be embedded in the hardware of the day. As a result, it became popular
    with printer makers and soon was the de facto standard for sending files to print.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 从积极的一面来看，PostScript 的解释器占用的内存很少，因此可以嵌入到当时的硬件中。因此，它很快在打印机制造商中流行开来，并成为发送文件进行打印的事实标准。
- en: 'It was also used as the base for the native file format of the first versions
    of Adobe Illustrator, which appeared about that time. Even though the AI file
    format changed in many ways with every version of the application, for a long
    time its foundation remained the same: an AI file was simply PostScript that followed
    certain conventions and used PS function libraries from Adobe.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 它还被用作第一版 Adobe Illustrator 原生文件格式的基础，该版本大约在那个时候问世。尽管随着每个版本的发布，AI 文件格式发生了许多变化，但长时间内其基础始终保持不变：AI
    文件只是遵循某些约定并使用 Adobe 的 PS 函数库的 PostScript 文件。
- en: Unfortunately for the users of Illustrator, PostScript's priorities as a highly
    optimized printer language were not easy to balance with its goal of becoming
    a general vector graphics medium. For example, Level 2 of PostScript (1991) added
    device-independent CMYK color, but it wasn't until Level 3 (1997) that such a
    basic thing as gradients became directly possible. (Until PS 3, applications wishing
    to create a gradient in PostScript had to "fake" it by overlaying many narrow
    strips of gradually changing color.) Even the latest version of PostScript hasn't
    evolved enough to support transparency natively.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Illustrator 用户来说，不幸的是，PostScript 作为一个高度优化的打印机语言的优先级，与其成为通用矢量图形媒介的目标并不容易平衡。例如，PostScript
    的 Level 2（1991 年）增加了设备无关的 CMYK 颜色，但直到 Level 3（1997 年），基本的渐变才得以直接实现。（直到 PS 3，想要在
    PostScript 中创建渐变的应用程序必须通过叠加许多狭窄的逐渐变化的色条来“伪造”渐变。）即使是最新版本的 PostScript，也没有足够的演进来原生支持透明度。
- en: This is undoubtedly one of the reasons why early versions of Illustrator were
    so slow to gain the new features that users demanded (and that competing vector
    editors were already providing). To this day, Illustrator's UI bears marks of
    being built upon the PostScript feature set, with everything else treated as an
    afterthought.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这无疑是早期版本的 Illustrator 很难快速获得用户需求的新特性（而竞争对手的矢量编辑器已经提供这些特性）原因之一。直到今天，Illustrator
    的用户界面仍然保留着基于 PostScript 功能集构建的痕迹，其他所有功能似乎都是事后添加的。
- en: However, the biggest issue with PostScript is not its feature limitations. Over
    time, its being a programming language proved to be much more of a burden. What
    was once (in the late 1980s) a clever hack now felt increasingly cumbersome and
    dangerous. Since any PostScript file is a program, you simply cannot tell what
    exactly this file will display except by *running* that program. This means you
    need a complete PostScript interpreter in order to do even the simplest processing
    of a PostScript file; you can't even directly combine two PostScript files into
    a single document with predictable results.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，PostScript 最大的问题并非其功能限制。随着时间的推移，作为编程语言的特点变得愈加沉重。曾经（在 1980 年代末）是一种巧妙的黑客技术，现在却越来越显得繁琐且危险。由于任何
    PostScript 文件都是一个程序，你根本无法知道该文件究竟会显示什么，除非 *运行* 这个程序。这意味着你需要一个完整的 PostScript 解释器才能进行最简单的
    PostScript 文件处理；你甚至无法直接将两个 PostScript 文件合并为一个文档并获得可预测的结果。
- en: Adobe tried to rectify this by imposing various limitations on PostScript files.
    One such limitation was the *Encapsulated PostScript (EPS)* format. An EPS file
    is simply a one-page PostScript document that can be reliably inserted into other
    documents. However, this was obviously not enough.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Adobe 试图通过对 PostScript 文件施加各种限制来纠正这一问题。其中一个限制就是 *封装 PostScript (EPS)* 格式。EPS
    文件只是一个可以可靠地插入到其他文档中的单页 PostScript 文档。然而，显然这还远远不够。
- en: So in 1993, Adobe took a more drastic step. It introduced*Portable Document
    Format (PDF)* which, although based on PostScript, drops the idea of being a programming
    language. At first, PDF was just simplified PS rewritten in a declarative fashion
    with added compression and some top-level document management features. Later,
    Adobe went on to develop PDF well past what was ever available in PostScript;
    for example, transparency was added in PDF version 1.4 (2001).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在 1993 年，Adobe 采取了更为激烈的措施。它推出了 *便携文档格式 (PDF)*，尽管基于 PostScript，但抛弃了作为编程语言的概念。最初，PDF
    只是简化的 PS，以声明式的方式重写，并增加了压缩和一些顶层的文档管理功能。后来，Adobe 将 PDF 发展得远远超出了 PostScript 所能提供的功能；例如，PDF
    版本 1.4（2001 年）中就加入了透明度功能。
- en: Although PDF's stated goal was internet document exchange, it grew in popularity
    and eventually gained a foothold in print and design as well. The fact that PDF
    is an open format, standardized by ISO and free for implementation by anyone,
    also helped. By now, PDF has largely replaced PostScript in most commercial applications,
    including print.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 PDF 的既定目标是互联网文档交换，但它的普及度逐渐提高，最终在印刷和设计领域也占据了一席之地。PDF 是开放格式、由 ISO 标准化且任何人都可以实施的事实也帮助了它的传播。到现在为止，PDF
    已在大多数商业应用中取代了 PostScript，包括印刷领域。
- en: More important for our discussion, with version 9.0 (2000), Adobe Illustrator
    switched its native AI file format to one based on PDF instead of on PostScript.
    This means that any AI file saved in a modern version of Adobe Illustrator is
    in fact PDF and can be viewed and imported by any software that supports PDF.
    Inkscape's AI importer is actually the same as its PDF importer.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 对我们讨论更为重要的是，从 9.0 版（2000 年）开始，Adobe Illustrator 将其原生的 AI 文件格式从基于 PostScript
    转为基于 PDF 的格式。这意味着任何在现代版本的 Adobe Illustrator 中保存的 AI 文件，实际上都是 PDF 格式，可以被任何支持 PDF
    的软件查看和导入。Inkscape 的 AI 导入器实际上与其 PDF 导入器是一样的。
- en: In summary, at this point in time it really makes no sense to use PostScript
    or EPS if you can use PDF instead. Inkscape can import PS and EPS, but only by
    converting them into PDF first, which requires the free cross-platform Ghostscript
    package ([B.4](b02.xhtml#sectionB.4)) to be installed on your system. Exporting
    from Inkscape to PDF gives better results than exporting to PostScript.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，在目前的情况下，如果可以使用 PDF，使用 PostScript 或 EPS 就没有意义了。Inkscape 可以导入 PS 和 EPS 文件，但需要先将它们转换为
    PDF，这要求你的系统中安装免费的跨平台软件包 Ghostscript ([B.4](b02.xhtml#sectionB.4))。从 Inkscape 导出
    PDF 格式的结果比导出 PostScript 格式的效果更好。
- en: 1.5.2 CorelDRAW
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.5.2 CorelDRAW
- en: One of Illustrator's biggest rivals is CorelDRAW. Like Illustrator, it is a
    large, full-featured application and is part of a suite of graphic applications.
    Here, however, the similarities end.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Illustrator 的最大竞争对手之一是 CorelDRAW。像 Illustrator 一样，它是一个大型的、功能齐全的应用程序，并且是一个图形应用套件的一部分。然而，它们的相似之处到此为止。
- en: CorelDRAW has always positioned itself as a vector editor "for the rest of us."
    Priced lower than Illustrator or Freehand (the main contender of Illustrator back
    in early 1990s, now bought out by Adobe and discontinued), CorelDRAW has emphasized
    ease of use and, during the 1990s, greatly expanded the audience of vector editing
    tools. In some countries and communities, it was, and still is, more popular than
    Illustrator.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: CorelDRAW 一直以来将自己定位为“为我们这些普通人”设计的矢量编辑器。它的价格低于 Illustrator 或 Freehand（早期 1990
    年代 Illustrator 的主要竞争者，现已被 Adobe 收购并停产），CorelDRAW 强调易用性，并且在 1990 年代大大拓展了矢量编辑工具的用户群体。在一些国家和社区中，它曾经比
    Illustrator 更受欢迎，直到现在依然如此。
- en: CorelDRAW pioneered some valuable UI concepts that were passed down to a number
    of other applications, including Inkscape. For example, the single Selector tool
    that can do all kinds of selections and transformations (click to select, move
    and scale, then click again so you can rotate and skew) first appeared in CorelDRAW;
    Illustrator and Freehand have separate "select," "scale," and "rotate" tools instead.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: CorelDRAW 首创了一些有价值的 UI 概念，这些概念被传承到许多其他应用程序中，包括 Inkscape。例如，首次出现在 CorelDRAW 中的单一选择工具，可以进行各种选择和变换（点击选择、移动和缩放，再点击一次可以进行旋转和倾斜）；而
    Illustrator 和 Freehand 则分别有“选择”、“缩放”和“旋转”工具。
- en: It has also introduced the notion of shapes (such as rectangles or ellipses)
    as separate object types, with the path editing tool acting differently on the
    shapes than on plain paths. For a long time, Illustrator had no concept of shapes;
    it had a tool to *draw* rectangles, but any new rectangle became just a rectangular
    path, with no rectangle-specific properties to edit.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 它还引入了将形状（如矩形或椭圆）作为独立对象类型的概念，路径编辑工具在这些形状上的表现不同于在普通路径上的表现。长期以来，Illustrator 没有形状的概念；它有一个工具来*绘制*矩形，但任何新绘制的矩形都会变成一个矩形路径，没有矩形特定的可编辑属性。
- en: 1.5.3 Xara
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.5.3 Xara
- en: Xara (its current iteration is called Xara Designer Pro) has always been a minor
    contender in the race of vector editors, but it is historically important. It
    was the first vector editor to have complete onscreen anti-aliasing, on-canvas
    editing of gradients with convenient handles, convenient transparency support,
    and a context-sensitive panel with controls relevant to the current tool. On top
    of that, Xara has always been impressively fast, which was especially important
    with the hardware of the 1990s and 2000s.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Xara（其当前版本名为 Xara Designer Pro）一直是矢量编辑器竞争中的一个小角色，但它具有重要的历史意义。它是第一个具有完整屏幕抗锯齿、画布上的渐变编辑与方便的控制手柄、便捷的透明度支持、以及根据当前工具提供上下文相关控制面板的矢量编辑器。此外，Xara
    一直以来都非常快速，这在 1990 年代和 2000 年代的硬件环境中尤其重要。
- en: In general, Xara had followed the CorelDRAW UI paradigm but greatly improved
    on it. For a long time, Xara maintained a sizeable and very loyal user base. It's
    no wonder Inkscape has borrowed a lot of ideas and approaches from Xara. Gradually,
    however, Xara's novelty faded while its competitors caught up; by the mid-2000s,
    Xara was perceived by most people as a "nice little app"—very solid and usable,
    but somewhat passé.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 总体来说，Xara遵循了CorelDRAW的UI范式，但在此基础上进行了很大的改进。长期以来，Xara维持着一个相当庞大且非常忠实的用户群体。难怪Inkscape借鉴了Xara的许多想法和方法。然而，随着时间的推移，Xara的创新逐渐消退，而其竞争对手则逐步迎头赶上；到2000年代中期，大多数人认为Xara只是一个“不错的小应用”——非常稳固和易用，但稍显过时。
- en: In 2005, Xara Ltd. released as open source—and ported to Linux—a version of
    its vector graphic editor, called Xara LX. One of the reasons for the move was
    the rapid progress of Inkscape—although much younger than Xara, Inkscape already
    had some unique features. On the other hand, Inkscape developers had always acknowledged
    Xara, with its consistent interface design and excellent usability, as one if
    its role models. Apparently, Xara wanted to tap into the open source talent pool
    to revitalize its product.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 2005年，Xara有限公司将其矢量图形编辑器发布为开源并移植到Linux，名为Xara LX。这样做的原因之一是Inkscape的快速发展——尽管Inkscape比Xara年轻，但它已经拥有一些独特的功能。另一方面，Inkscape的开发者一直将Xara视为其榜样，Xara凭借一致的界面设计和出色的可用性成为了Inkscape的模范。显然，Xara希望借助开源人才来振兴其产品。
- en: However, after the initial spurt of activity, Xara LX failed to attract significant
    attention from open source developers, largely because Xara Ltd. refused to open-source
    one crucial part of the code—the renderer. Now at version 0.7, Xara LX remains
    usable, but its development has stalled.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在最初的一段时间后，Xara LX未能吸引到开源开发者的重大关注，主要是因为Xara有限公司拒绝开源其一项关键代码——渲染器。现在，Xara LX已经到了0.7版本，仍然可以使用，但其开发已经停滞。
- en: 1.5.4 Online Editors [1.1]
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.5.4 在线编辑器 [1.1]
- en: 'One distinct class of vector editors that has matured since the first edition
    of this book is online vector editors—those that work in your browser and require
    no software installation on your computer. Such online tools are naturally limited
    in performance and features, compared to desktop applications. At the same time,
    many users don''t even need that much power: all they need a quick draft, sketch,
    or mock-up with, say, a photo plus some text lines and simple shapes. For such
    users, the convenience of an online editor is attractive.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一类自本书第一版以来已经成熟的矢量编辑器是在线矢量编辑器——这些编辑器在你的浏览器中运行，不需要在计算机上安装任何软件。这类在线工具自然在性能和功能上受限，相比桌面应用程序有所欠缺。与此同时，许多用户甚至不需要那么强大的功能：他们只需要一个快速的草图、草案或模型，比如一张照片加上一些文字和简单的形状。对于这些用户来说，在线编辑器的便利性非常有吸引力。
- en: This is the case especially when such an online editor belongs to a company
    providing print or other design services. Whenever you want your customers to
    submit their designs, giving them even a primitive online editor is much better
    than forcing them to work in a complex piece of software that most would have
    little need for otherwise (even if that software is free, as is Inkscape). Users
    who feel limited by the online editor will still be able to use their complex
    offline designs by uploading them as bitmaps.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 尤其是在这种在线编辑器属于提供打印或其他设计服务的公司时，情况尤为如此。每当你希望客户提交他们的设计时，给他们提供一个即便是原始的在线编辑器也比强迫他们使用一款复杂的软件要好得多——大多数情况下，他们对这种软件几乎没有需求（即便这个软件是免费的，比如Inkscape）。那些觉得在线编辑器功能受限的用户，仍然可以通过将复杂的离线设计上传为位图来使用它们。
- en: One of the most capable online editors is Canva. It does provide print services,
    but you can also download your Canva-made design as a bitmap or PDF (but not SVG)
    file and do with it what you please. Canva's attraction is not so much in its
    editor (though it's adequate) as in its online community and the wealth of fonts,
    graphics, and reusable templates that it provides. Another good online editor
    (with SVG export) is Gravit; both it and Canva provide a basic version of their
    online editors for free but charge for advanced versions with additional features.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 最具能力的在线编辑器之一是Canva。它确实提供打印服务，但你也可以将你在Canva上制作的设计下载为位图或PDF文件（但不能是SVG文件），然后随意使用。Canva的吸引力不在于其编辑器本身（虽然它足够用），而在于其在线社区以及它提供的丰富字体、图形和可重用模板。另一个不错的在线编辑器（支持SVG导出）是Gravit；它和Canva一样，都提供免费的基础版在线编辑器，但对具有附加功能的高级版收费。
- en: On the open source side of things, a number of projects provide an embeddable
    vector editor library that you can add to your site. Two notable projects are
    SVG-Edit and Fabric.js, both of which support SVG natively. Using such a library
    requires serious JavaScript programming skills, but the payoff of having a decent
    editor for simple graphics right on your own website may be well worth the trouble.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在开源方面，一些项目提供了可嵌入的矢量编辑器库，你可以将其添加到你的网站上。两个著名的项目是SVG-Edit和Fabric.js，它们都原生支持SVG。使用这样的库需要扎实的JavaScript编程技能，但在自己的网站上拥有一个不错的简单图形编辑器，可能值得为此付出的努力。
- en: 1.5.5 . . . and Inkscape
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.5.5 . . . 和 Inkscape
- en: Compared to its commercial competition, Inkscape still scores low in several
    respects, such as rendering performance and support of advanced print technologies.
    On the other hand, Inkscape has some innovative editing features that are pretty
    much unique in its field, such as the clone tiler ([16.6](c16.xhtml#section16.6)),
    3D Box tool ([11.3](c11.xhtml#section11.3)), path effects ([Chapter 12](c12.xhtml#ch12)),
    and parts of the Tweak tool ([8.9](c08.xhtml#section8.9)).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 与商业竞争对手相比，Inkscape在几个方面仍然得分较低，如渲染性能和对先进打印技术的支持。另一方面，Inkscape拥有一些在其领域几乎独一无二的创新编辑功能，例如克隆拼接器（[16.6](c16.xhtml#section16.6)）、3D立方体工具（[11.3](c11.xhtml#section11.3)）、路径效果（[第12章](c12.xhtml#ch12)）以及Tweak工具的部分功能（[8.9](c08.xhtml#section8.9)）。
- en: 'The most obvious reason why some features are not yet implemented in Inkscape
    is that they are missing in SVG. For example, Inkscape implements SVG''s linear
    and elliptic gradients ([10.1](c10.xhtml#section10.1)) and even gradient meshes
    ([10.7](c10.xhtml#section10.7))—but it lacks other gradient types, such as conical
    supported by Xara. The same applies to multiple-page documents: this capability
    is simply not provided for in the SVG standard at this time (though you can, to
    some extent, emulate pages via layers).'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Inkscape中某些功能尚未实现的最明显原因是它们在SVG中缺失。例如，Inkscape实现了SVG的线性和椭圆渐变（[10.1](c10.xhtml#section10.1)），甚至还有渐变网格（[10.7](c10.xhtml#section10.7)）——但它缺少其他类型的渐变，例如Xara支持的圆锥渐变。多页文档也是如此：目前SVG标准中并未提供此功能（虽然你可以通过图层在某种程度上模拟页面）。
- en: On the other hand, SVG's limitations only matter for what kinds of objects or
    properties Inkscape can have. In its ways of manipulating these objects and combining
    them into higher-level objects, Inkscape is entirely free to innovate—and it has
    made good use of this freedom.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，SVG的限制仅影响Inkscape能够处理的对象或属性类型。在处理这些对象以及将它们组合成更高级别对象的方式上，Inkscape完全可以自由创新——并且它很好地利用了这种自由。
- en: In interface and usability, Inkscape is often acknowledged to be easy to learn
    and work with. Inkscape's UI is comparable, and in fact quites similar, to that
    of Xara. Some things are done more conveniently in one of these programs than
    the other, but both feature an unobtrusive, streamlined interface with a lot of
    easily accessible power.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在界面和可用性方面，Inkscape通常被认为容易学习和使用。Inkscape的用户界面与Xara相当，实际上非常相似。有些功能在这两个程序中做得更加便捷，但这两个程序都拥有一个不干扰、简洁的界面，并提供了很多易于访问的强大功能。
- en: As a true open source application, Inkscape is coded mostly by geeks, and geeks'
    interests and priorities tend to differ from those of commercial developers. For
    one thing, geeks hate dumbed-down interfaces and enjoy powerful controls and unlimited
    tweaking. They especially appreciate rich keyboard control, and Inkscape has an
    unprecedented number of keyboard shortcuts covering most of its modes, tools,
    commands, and features ([3.4](c03.xhtml#section3.4)).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个真正的开源应用，Inkscape的代码大多由极客编写，而极客的兴趣和优先事项通常与商业开发者不同。首先，极客讨厌简化的界面，喜欢强大的控制和无限的调整。他们尤其欣赏丰富的键盘控制，而Inkscape拥有前所未有的键盘快捷键，涵盖了大部分模式、工具、命令和功能（[3.4](c03.xhtml#section3.4)）。
- en: Not any less important than features or usability are an application's stability
    and speed. Inkscape's released versions may crash or freeze occasionally (save
    often!), but generally its stability is not a concern for most users. Speed used
    to be a major complaint in older versions of the program—but recently, with a
    multithreaded renderer, Inkscape's display speed has improved drastically.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 与功能或可用性同样重要的是应用程序的稳定性和速度。Inkscape的发布版本偶尔可能会崩溃或冻结（请经常保存！），但通常情况下，其稳定性对大多数用户来说不是问题。速度曾经是旧版本程序的主要抱怨——但最近，随着多线程渲染器的引入，Inkscape的显示速度已经大大提高。
- en: 1.6 The Life of an Open Source Application
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.6 开源应用的生命周期
- en: As you can see from this discussion of Inkscape's competition, it is rather
    unusual for a serious vector editor to be an open source application. What helped
    Inkscape succeed where other open source attempts (and there were many) failed?
    Let's take a brief look at Inkscape's history.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 从关于 Inkscape 竞争的讨论中可以看出，对于一个严肃的矢量编辑器来说，成为一个开源应用是相当不寻常的。是什么让 Inkscape 在其他开源尝试（且失败的尝试众多）中脱颖而出呢？让我们简要回顾一下
    Inkscape 的历史。
- en: The story of Inkscape begins almost simultaneously with that of SVG, though
    that first chunk of code wasn't yet called Inkscape. It was called *Gill* and
    was the creation of a single person, Raph Levien, who in early 1999 hacked away
    at a simple viewer and editor for the new vector format, then under discussion
    by the W3C. It was a typical one-man project, and it suffered the fate of many
    one-man projects—its author soon lost interest in it.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Inkscape 的故事几乎与 SVG 的故事几乎同时开始，尽管那时的第一段代码还没有被称为 Inkscape。它叫做*Gill*，是由一个人，Raph
    Levien，在 1999 年初为 W3C 讨论中的新矢量格式开发的一个简单查看器和编辑器。这是一个典型的单人项目，最终也命运多舛——它的作者很快就失去了兴趣。
- en: 'But the Gill code was open, and another person picked up the development. Lauris
    Kaplinski renamed the project to *Sodipodi* and set a much more ambitious goal
    for it: to develop a real vector editor with most of the bells and whistles of
    this genre, with the UI largely modeled on CorelDRAW but also influenced by GIMP,
    a well-known open source bitmap editor.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，Gill 代码是开源的，另一位开发者接手了这个项目的开发。Lauris Kaplinski 将项目重命名为*Sodipodi*，并为其设定了一个更为雄心勃勃的目标：开发一个真正的矢量编辑器，具备这个类别的大部分功能，用户界面主要模仿
    CorelDRAW，但也受到了知名开源位图编辑器 GIMP 的影响。
- en: The first releases of Sodipodi were done by Lauris alone and attracted little
    attention. By 2002, however, more and more people were discovering Sodipodi, and
    patches from other developers started flowing in. Yet Lauris remained the sole
    maintainer of the application; he decided which patches would go in and when the
    releases would be made. Few people other than him had commit rights to the project's
    code repository.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Sodipodi 的第一次发布是 Lauris 单独完成的，吸引的关注不多。然而到了 2002 年，越来越多的人开始发现 Sodipodi，其他开发者的补丁也开始涌入。然而
    Lauris 依然是唯一的维护者；他决定哪些补丁会被采纳，以及何时发布新版本。除了他之外，很少有人有权限提交项目代码。
- en: Lauris did a great amount of work on Sodipodi; to this day, a sizeable portion
    of Inkscape's code bears his copyright. However, with time, his autocratic way
    of managing the project was becoming more and more of an obstacle. Patches being
    ignored for a long time and disagreements erupting over the development direction
    weren't healthy.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Lauris 在 Sodipodi 上做了大量工作；直到今天，Inkscape 的大量代码仍然保留着他的版权。然而，随着时间的推移，他独裁的项目管理方式逐渐成为障碍。长时间忽视补丁以及在开发方向上发生的分歧，带来了不健康的局面。
- en: 'In October 2003, things came to a head. A group of dissatisfied developers,
    after failing to reach an agreement with Lauris, declared a fork. They took the
    latest Sodipodi codebase, added their patches, and coined a cool name for the
    new project: Inkscape. (If you''re wondering why it''s legal to take someone''s
    copyrighted code and start changing and renaming it, read the copy of the General
    Public License (the file *COPYING*) that comes with your copy of Inkscape.) For
    a short while, Inkscape and Sodipodi were being developed in parallel, but the
    parent project soon entered hibernation, unable to keep up with its energetic
    offspring.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 2003 年 10 月，事情达到了一个转折点。一群不满的开发者，在与 Lauris 无法达成共识后，宣布了一个分支。他们拿到了最新的 Sodipodi
    代码库，添加了他们的补丁，并为这个新项目取了个酷名字：Inkscape。（如果你在想为什么可以合法地拿别人的版权代码进行修改和重命名，阅读你手中 Inkscape
    副本中的通用公共许可证（文件 *COPYING*）即可。）短暂的一段时间内，Inkscape 和 Sodipodi 是并行开发的，但母项目很快就进入了休眠状态，无法跟上其充满活力的后继者。
- en: In contrast with Sodipodi, the Inkscape project is very open. No single person
    has the supreme say on how things are to be done. To be granted full developer
    rights, including the right to commit directly to the code repository, you need
    to submit just two successful patches. Especially in Inkscape's early days, very
    little discussion was taking place at all; if someone took active interest in
    some aspect of the program, others just assumed that that person knew what he
    or she was doing and didn't interfere.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Sodipodi 相比，Inkscape 项目非常开放。没有一个人拥有决定事物做法的至高无上的权利。要获得完全的开发者权限，包括直接提交代码到代码库的权限，你只需要提交两个成功的补丁。尤其是在
    Inkscape 的早期，几乎没有进行任何讨论；如果某人对程序的某个方面表现出积极兴趣，其他人通常会认为那个人知道自己在做什么，并不会干涉。
- en: Over time, a number of guiding principles have emerged, and now it is not uncommon
    to see a contribution rejected if it contradicts the developers' idea of how things
    should work. However, there's still no top authority figure; everything is being
    decided by discussion and consensus. This means that anyone who's passionate enough
    to persuade others *and* can code efficiently still has a good chance of influencing
    the overall direction of the project.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，许多指导原则逐渐浮现，现在如果某个贡献与开发者对事物运作方式的看法相悖，它被拒绝的情况并不罕见。然而，仍然没有一个顶级的权威人物；一切都由讨论和共识决定。这意味着任何对说服他人充满热情且能高效编程的人，仍然有很大的机会影响项目的整体方向。
- en: 'Among the guiding principles of the project there''s a simple rule: *listen
    to the users.* This sounds commonplace, but it is surprising how few software
    projects, be they commercial or open source, actually follow this. In Inkscape,
    it really helps that many of the developers are themselves active users of the
    program. Also, in its early days, Inkscape had to win over Sodipodi''s users in
    order to survive at all—but the tradition of taking user feedback seriously has
    continued after Sodipodi stopped being a competitor (it''s not like Inkscape suffers
    a shortage of other competitors, though).'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目的指导原则中，有一个简单的规则：*倾听用户的声音*。这听起来是常识，但令人惊讶的是，许多软件项目，无论是商业项目还是开源项目，实际上都没有遵循这一点。在
    Inkscape 中，这一点尤其有帮助，因为许多开发者本身就是该程序的活跃用户。此外，在早期，Inkscape 必须争取 Sodipodi 的用户支持才能生存下来——但在
    Sodipodi 停止成为竞争对手之后，重视用户反馈的传统仍然得以延续（尽管 Inkscape 并不缺乏其他竞争对手）。
- en: Another rule of the project is *patch first, discuss later.* That is, if you
    have an idea and can code, don't try to talk others into implementing it; do it
    yourself and let others test it live in the program. If it's any good, your fellow
    developers will help you make it perfect. (If it's not, you'll just have to back
    it out.)
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 项目的另一个规则是 *先补丁，后讨论*。也就是说，如果你有一个想法并且能编写代码，别试图说服别人来实现它；自己动手做，看看其他人在程序中实际使用后给出的反馈。如果效果不错，其他开发者会帮你把它完善。（如果不好，你只需撤回即可。）
- en: One consequence of the "patch first" rule is the policy that development builds
    must always be workable; any regressions are noted and fixed as early as possible.
    A community of enthusiastic users downloads the most up-to-date code daily and
    tests it, long before an official release is even on the horizon. Developers encourage
    this constant testing and facilitate it by providing new compiled binaries for
    all major platforms every day. The result has been steady growth of the project—which
    is now widely acknowledged as one of the most important open source projects and
    a strong competitor in its software domain.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '"先补丁"规则的一个结果是开发版本必须始终可用；任何回退都要尽早发现并修复。一群热心的用户每天都会下载最新的代码并进行测试，远在正式版本发布之前。开发者鼓励这种持续的测试，并通过每天为所有主要平台提供新的编译二进制文件来便利这一过程。结果是项目稳步增长——如今它被广泛认为是最重要的开源项目之一，并且在其软件领域中是一个强有力的竞争者。'
