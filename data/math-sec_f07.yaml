- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: Welcome to *Math for Security*, a book that is, by my estimation, unlike any
    other security book I’ve ever read. It isn’t intended to introduce you to security
    topics like access control or encryption, nor is it going to help you prepare
    for the next certification exam. It will, however, strengthen your ability to
    examine the world around you and investigate security-relevant questions. The
    contents of the book sit at a crossroads between theoretical research, experimentation,
    and practical application. My goal is to introduce you to key mathematical fields
    through practical research topics. I find the easiest way to understand a complex
    theoretical principle is to see it in action.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到*安全中的数学*，这是一本据我估计，和我读过的任何其他安全书籍都不同的书。它并不是用来介绍诸如访问控制或加密等安全话题，也不打算帮助你准备下一个认证考试。然而，它将增强你检查周围世界并研究安全相关问题的能力。这本书的内容位于理论研究、实验和实践应用的交汇点上。我的目标是通过实际研究主题向你介绍关键的数学领域。我发现理解复杂理论原理最简单的方式，就是看到它在实际中的应用。
- en: I am not a mathematician by any stretch of the imagination. I am a security
    practitioner who loves reading theoretical research papers and has found, over
    the years, that there are not many resources for translating this theoretical
    research into a testable system, otherwise known as a *proof of concept*. I decided
    to write the book I wish I had when I started down this path. As you read it,
    you’ll become familiar with the tools and procedures necessary to translate mathematical
    theory into security-relevant applications. You’ll learn to accurately assess
    and communicate the limitations of your tools and procedures by examining the
    inevitable assumptions we must make when dealing with data in the wild. Most of
    all, though, I hope you’ll learn to see mathematical theory in a new, totally
    practical light.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我并不是一个数学家，完全不敢妄称。我是一名安全实践者，热爱阅读理论研究论文，并且在多年的实践中发现，实际上很少有资源能够将这些理论研究转化为可测试的系统，也就是所谓的*概念验证*。我决定写一本当初我开始这条道路时希望拥有的书。在阅读这本书时，你将熟悉将数学理论转化为与安全相关的应用所需的工具和流程。通过审视在处理“野生”数据时不可避免的假设，你将学会如何准确评估和沟通工具和流程的局限性。最重要的是，我希望你能学会以一种全新、完全实用的视角来看待数学理论。
- en: Who Should Read This Book?
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谁应该阅读这本书？
- en: Often, when I begin a discussion about applied mathematics in security, people
    say something along the lines of “but I don’t work on encryption,” which tells
    me many security practitioners misunderstand the role math plays in their day-to-day
    activities. The truth is, applied mathematics is at the heart of every modern
    security automation tool, not just cryptographic tools. My hope is that anyone
    with an interest in security and some Python programming experience will find
    something fun and informative in these projects. If you know enough Python to
    install and import packages, read and write files, and manage basic networking
    tasks, you should be set. You don’t need a deep understanding of math to follow
    along, since we’ll break down the formulas as we use them. If the title of the
    book caught your attention, chances are you’re one of the people who should read
    this book!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当我开始讨论安全中的应用数学时，常常会听到类似“但我不做加密”的话，这让我意识到许多安全从业者误解了数学在他们日常活动中的作用。事实上，应用数学是每个现代安全自动化工具的核心，不仅仅是加密工具。我希望任何对安全感兴趣并且有一定Python编程经验的人，都能从这些项目中找到有趣和有益的信息。如果你知道足够的Python来安装和导入包、读写文件以及管理基本的网络任务，那么你应该没问题。你不需要对数学有深刻的理解，因为我们会在使用公式时逐步解析它们。如果书名引起了你的注意，那么很可能你就是应该阅读这本书的人！
- en: What’s in This Book?
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这本书包含了什么？
- en: 'I’ve organized the material into three parts. Part I: Environment and Conventions
    (Chapters [1](c01.xhtml) and [2](c02.xhtml)) will help you set up a Python environment
    for coding and introduce some basic notation concepts. Part II: Graph Theory and
    Computational Geometry (Chapters [3](c03.xhtml)–[10](c10.xhtml)) introduces the
    two main branches of math we’ll be discussing. Finally, Part III: The Art Gallery
    Problem (Chapters [11](c11.xhtml)–[13](c13.xhtml)) covers a larger project built
    to answer the classic art gallery problem, which will require both branches of
    math for our solution. Each chapter concludes with a “Summary” section that will
    cover other potential applications, background readings, and complementary math
    topics to help you continue on your own. Here’s a brief overview of what to expect
    in each chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我将材料分为三部分。第一部分：环境和约定（第[1](c01.xhtml)章和第[2](c02.xhtml)章）将帮助您为编程设置Python环境，并介绍一些基本的符号概念。第二部分：图论和计算几何（第[3](c03.xhtml)章至第[10](c10.xhtml)章）介绍了我们将要讨论的数学的两个主要分支。最后，第三部分：艺术画廊问题（第[11](c11.xhtml)章至第[13](c13.xhtml)章）涵盖了一个大型项目，旨在解决经典的艺术画廊问题，该问题需要两个数学分支的知识来解答。每章的最后都有一个“总结”部分，介绍其他可能的应用、背景阅读材料和补充的数学主题，帮助您继续独立学习。以下是每章内容的简要概述：
- en: 'Chapter 1: Setting Up the Environment We’ll start by getting your environment
    set up using Anaconda or pip, depending on your preference and level of familiarity
    with Python. We’ll discuss the importance of isolating development environments
    and cover how to access the Jupyter Notebooks included in the supplemental materials.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章：设置环境 我们将从使用Anaconda或pip开始设置您的开发环境，具体选择取决于您的偏好以及对Python的熟悉程度。我们将讨论隔离开发环境的重要性，并介绍如何访问附加材料中包含的Jupyter笔记本。
- en: 'Chapter 2: Programming and Math Conventions Here we’ll cover the special programming
    syntax and math notation you’ll need to follow along with the examples. We’ll
    cover Python’s list and dictionary comprehensions as well as the `zip` and `unpack`
    functions. Then we’ll dive into the math side of things with a refresher on Boolean
    algebra and set notation; we’ll also look at the many different symbols that populate
    the math world.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章：编程和数学约定 在这一章中，我们将介绍您需要遵循的特殊编程语法和数学符号，以便跟随示例学习。我们将介绍Python的列表和字典推导式，以及`zip`和`unpack`函数。然后，我们将从布尔代数和集合符号的复习开始，深入探讨数学方面的内容；我们还将研究数学世界中使用的各种符号。
- en: 'Chapter 3: Securing Networks with Graph Theory This chapter will introduce
    the concepts around building and analyzing graphs using the NetworkX Python library.
    We’ll discuss some of the basic types of graphs you’re likely to encounter, as
    well as how to analyze some key statistics that will help you better understand
    the structure of your graphs.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章：利用图论保护网络 本章将介绍使用NetworkX Python库构建和分析图的概念。我们将讨论您可能遇到的一些基本类型的图，并分析一些关键统计数据，这些数据将帮助您更好地理解图的结构。
- en: 'Chapter 4: Building a Network Traffic Analysis Tool In this project, we’ll
    build a graph to represent the communications across a computer network using
    the NetworkX and Scapy libraries. We’ll then apply our understanding of graphs
    to uncover some interesting facts about computers on the network. We’ll conclude
    with a proof-of-concept project in which you’ll capture network packets and use
    them to create a graph of your own.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章：构建网络流量分析工具 在本项目中，我们将使用NetworkX和Scapy库构建一个图表，表示计算机网络中的通信。然后，我们将应用图的知识，揭示网络中计算机的一些有趣事实。最后，我们将通过一个概念验证项目，捕获网络数据包并使用它们创建您自己的图表。
- en: 'Chapter 5: Identifying Threats with Social Network Analysis This project focuses
    on analyzing people networks instead of computer networks. We’ll build a graph
    using data simulating a social network like Mastodon. We’ll discuss one of the
    ways connections form in social networks and dive into some practical research
    questions to identify interesting people. We’ll conclude with a proof-of-concept
    project that will get you started collecting your own data for analyzing Mastodon
    timelines.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章：利用社交网络分析识别威胁 本项目的重点是分析人际网络，而不是计算机网络。我们将使用模拟社交网络（如Mastodon）数据构建一个图表。我们将讨论社交网络中连接形成的方式之一，并深入探讨一些实际的研究问题，以识别有趣的人物。最后，我们将通过一个概念验证项目，帮助您开始收集自己的数据，分析Mastodon时间线。
- en: 'Chapter 6: Analyzing Social Networks to Prevent Security Incidents We continue
    our analysis of the social network from [Chapter 5](c05.xhtml) by looking at what
    might happen in the future. We’ll use randomness and probability to create a simulation
    of how messages might move through the network, who is likely to respond to whom,
    and on what topics. Finally, we’ll cover our proof of concept, a two-player adversarial
    game to decide the fate of our social network.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章：分析社交网络以防止安全事件 我们通过查看未来可能发生的情况，继续分析[第5章](c05.xhtml)中的社交网络。我们将使用随机性和概率创建一个模拟，预测消息如何在网络中传播，谁可能回应谁，以及讨论哪些话题。最后，我们将介绍我们的概念验证，一个双人对抗游戏，用以决定我们社交网络的命运。
- en: 'Chapter 7: Using Geometry to Improve Security Practices In this chapter we
    switch to our second branch of math, computational geometry. We’ll discuss how
    to represent different shapes using the Shapely library and common operations
    you’ll encounter when working with shape data. The chapter will also introduce
    some physical security concepts, like resource planning and location, as we discuss
    representing our plans using geometry.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章：利用几何学改进安全实践 在本章中，我们转向数学的第二个分支——计算几何学。我们将讨论如何使用Shapely库表示不同的形状，以及在处理形状数据时你将遇到的常见操作。本章还将介绍一些物理安全概念，如资源规划和位置，讨论如何使用几何学表示我们的计划。
- en: 'Chapter 8: Tracking People in Physical Space with Digital Information We continue
    our exploration of computational geometry by discussing its application in locating
    devices in the physical world. We’ll cover the structure of network data and how
    to connect to the OpenCell API to gather geographic information about networks.
    We’ll also discuss the ethics around device tracking. Our proof-of-concept project
    for this chapter will take in a sample set of tower data, solve for the overlapping
    coverage area, and return it as a bounded search area.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章：利用数字信息跟踪物理空间中的人物 我们通过讨论计算几何学在定位物理世界中设备的应用，继续探索该领域。我们将介绍网络数据的结构，以及如何连接到OpenCell
    API，收集关于网络的地理信息。我们还将讨论设备跟踪的伦理问题。本章的概念验证项目将输入一组塔数据，解决重叠的覆盖区域，并将其返回为一个有界的搜索区域。
- en: 'Chapter 9: Computational Geometry for Safety Resource Distribution In this
    chapter, we cover how to use Voronoi diagrams when doing resource analysis. We’ll
    discuss the current distribution of fire stations around Portland, Oregon, and
    explore where a new station could have the most impact. We’ll cover how to get
    the shape data for larger areas using the OpenStreetMap API. For the proof of
    concept, we’ll create an application capable of programmatically recommending
    the location for a new fire station based on the current stations’ responsibilities.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章：计算几何学在安全资源分配中的应用 本章我们将讨论在进行资源分析时如何使用Voronoi图。我们将探讨俄勒冈州波特兰市消防站的当前分布情况，并分析新站点可以在哪个位置产生最大的影响。我们将介绍如何使用OpenStreetMap
    API获取更大区域的形状数据。在概念验证中，我们将创建一个应用程序，能够根据当前消防站的责任，程序化地推荐新消防站的选址。
- en: 'Chapter 10: Computational Geometry for Facial Recognition In the final project
    for computational geometry, we’ll examine its application in facial recognition
    research. We’ll cover what makes good images, how to process image data, different
    ways to measure interesting facial features with shapes, and how to find the key
    features for the best outcome. In this special two-part proof of concept, we’ll
    develop a system to address both aspects of modern data science projects: model
    training and model application. We’ll produce a system capable of processing an
    image set, train a facial classifier, and ultimately apply our method to three
    faces to see if we can properly identify them using only computational geometry.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章：面部识别中的计算几何学 在计算几何的最终项目中，我们将研究其在面部识别研究中的应用。我们将讨论什么样的图像才是好的，如何处理图像数据，如何通过形状来测量有趣的面部特征，以及如何找到最佳结果的关键特征。在这个特殊的两部分概念验证中，我们将开发一个系统，解决现代数据科学项目的两个方面：模型训练和模型应用。我们将制作一个能够处理图像集、训练面部分类器的系统，并最终将我们的方法应用于三张面孔，看看我们是否能仅通过计算几何正确识别它们。
- en: 'Chapter 11: Distributing Security Resources to Guard a Space This chapter begins
    our exploration of the art gallery problem and the requirements of a larger project.
    We’ll cover the theory and existing research that underpins our solution. Then
    we’ll discuss how we can combine graph theory and computational geometry to improve
    upon the basics for a more realistic answer. The code in this chapter will serve
    as the base for the rest of the project and covers generating the actual solution
    we’re interested in.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第 11 章：分发安全资源以保护空间 本章开始探讨艺术画廊问题以及一个更大项目的需求。我们将介绍支撑我们解决方案的理论和现有研究。接着，我们将讨论如何结合图论和计算几何学来改进基础方法，以提供更为实际的答案。本章中的代码将作为项目其余部分的基础，并涵盖生成我们感兴趣的实际解决方案。
- en: 'Chapter 12: The Minimum Viable Product Approach to Security Software Development
    Here we’ll expand our project from [Chapter 11](c11.xhtml) beyond a simple proof
    of concept by adding more advanced features that will improve the user experience.
    We’ll discuss speeding up our application with parallel programming. We’ll touch
    on using PyGame to handle graphics and user interactions. Finally, we’ll go over
    the example application that comes with the book and explore how you can use it
    as a starting point for your own art gallery problem solver.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第 12 章：最小可行产品方法在安全软件开发中的应用 在这里，我们将把第 [11 章](c11.xhtml) 中的项目从一个简单的概念验证扩展到更高级的功能，以改善用户体验。我们将讨论如何通过并行编程加速我们的应用程序。我们将简要介绍如何使用
    PyGame 处理图形和用户交互。最后，我们将回顾本书附带的示例应用程序，并探索如何将其作为你自己艺术画廊问题解决方案的起点。
- en: 'Chapter 13: Delivering Python Applications We’ll conclude our art gallery problem
    project with a discussion of modern software delivery methods. This is a large
    topic, so I’ve picked a few that I think everyone should be familiar with, from
    packaging your application as a library to delivering it as a cloud service. We’ll
    discuss some of the pros and cons of each option as well as its impact on your
    ability to monetize your application.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第 13 章：交付 Python 应用程序 我们将在艺术画廊问题项目的最后，讨论现代软件交付方法。这是一个庞大的话题，因此我挑选了一些我认为每个人都应该熟悉的内容，从将你的应用程序打包为库到将其作为云服务交付。我们将讨论每种选项的优缺点以及它对你实现应用程序盈利能力的影响。
- en: Why Python?
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么选择 Python？
- en: Python checks all the boxes for what we’ll be covering in this book. The Python
    language has a long history of success in the security community and there’s already
    a plethora of tools and books that use it. Operational flexibility has been cited
    as one of the primary reasons for Python’s heavy adoption in the security community.
    Python performs well across a wide variety of platforms, from tiny single-board
    computers (like Raspberry Pi) to massive computing clusters and just about everything
    in between. With Python, you’ll be able to integrate your ideas with a lot of
    existing work.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Python 满足了我们在本书中将要讨论的所有要求。Python 语言在安全社区有着悠久的成功历史，并且已经有大量使用它的工具和书籍。操作灵活性被认为是
    Python 在安全社区广泛应用的主要原因之一。Python 在各种平台上表现良好，从微型单板计算机（如树莓派）到庞大的计算集群，以及所有介于两者之间的平台。使用
    Python，你可以将自己的想法与大量现有的工作进行整合。
- en: Python also has strong ties to the applied mathematics communities. In today’s
    computer-centric world, applied mathematics is usually expressed using one or
    more high-level programming languages. Of all modern programming languages, Python
    has emerged as a leader in mathematical and scientific programming because it’s
    easy to learn but almost unlimited in its expressive power. Python 3 is a natural
    choice for the exploratory research we’ll be doing because it has many libraries
    and features that will help us implement the various algorithms required to perform
    in-depth analysis.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Python 还与应用数学界有着紧密的联系。在当今这个以计算机为中心的世界中，应用数学通常通过一种或多种高级编程语言来表达。在所有现代编程语言中，Python
    因其易学性和几乎无限的表达能力，已成为数学和科学编程的领导者。Python 3 是我们进行探索性研究的自然选择，因为它有许多库和功能，可以帮助我们实现执行深入分析所需的各种算法。
- en: That isn’t to say that Python doesn’t have its shortcomings. Python is an interpreted
    language, which means a program (called the *interpreter*) sits between the code
    you write and the system executing that code. The interpreter’s job is to translate
    your instructions into commands the underlying system understands.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是说 Python 没有它的不足之处。Python 是一种解释型语言，这意味着一个程序（称为*解释器*）位于你编写的代码和执行该代码的系统之间。解释器的任务是将你的指令翻译成底层系统能理解的命令。
- en: Having the interpreter between what you write and what your system receives
    introduces a few problems. First, the additional layer between the instruction
    and the execution adds processing time and memory overhead. Second, the interpreter
    is itself a single application running in a process on a core of your machine.
    Your code is then executed inside the context of the interpreter’s process, which
    means your entire application is restricted to the tiny fraction of the system
    that the OS allocates to a process, even if you have an octocore beast with enough
    RAM to store the congressional library. There are programming tricks you can employ
    to sidestep limitations (such as distributed processing, which we’ll discuss in
    [Chapter 12](c12.xhtml)), but ultimately Python will never be as fast and free
    as a compiled language like C. The dirty truth is that a lot of the computationally
    heavy functions in data science libraries like scikit-learn and NumPy are wrappers
    for compiled C programs under the hood.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 代码和系统之间有一个解释器，这就引入了一些问题。首先，指令和执行之间的额外层会增加处理时间和内存开销。其次，解释器本身是一个运行在你机器核心上的进程中的单一应用程序。然后，你的代码会在解释器进程的上下文中执行，这意味着你的整个应用程序受到操作系统分配给进程的极小系统资源的限制，即使你拥有一台配备足够内存的八核处理器，也无法突破这一限制。你可以采用一些编程技巧来规避这些限制（比如分布式处理，我们将在[第十二章](c12.xhtml)中讨论），但最终，Python
    永远不会像 C 这样的编译语言那样快速和灵活。残酷的事实是，像 scikit-learn 和 NumPy 这样的数据科学库中，很多计算密集型函数都是在幕后调用编译后的
    C 程序的包装器。
- en: Shortcomings aside, Python is nevertheless the best choice for our goals. I’ll
    introduce some common idioms in [Chapter 2](c02.xhtml) that we’ll use throughout
    the rest of the book, and I’ll explain the code as necessary in the following
    chapters.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管存在一些不足，Python 仍然是我们目标实现的最佳选择。我将在[第二章](c02.xhtml)中介绍一些常见的惯用法，这些惯用法将在本书的其余部分中使用，并在接下来的章节中根据需要解释代码。
- en: Information Accessibility
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 信息可访问性
- en: Throughout the book, I’ll do my best to represent the data included in figures
    in multiple distinct ways, such as numbers and symbols combined with color gradients.
    I chose to add the shape or number representation along with the color to help
    convey the point more clearly, since the images in the printed text are grayscale.
    The choice to use another indicator along with colors is also one of accessibility.
    Having to write for a book using only grayscale images has helped me realize how
    much information we try to convey with color and how unfair that is to people
    who cannot distinguish a large range of colors. Whenever we create a data visualization,
    we should strive to give people a number of ways to distinguish the key points,
    and not over-rely on pretty color gradients to do the talking for us. If you have
    accessibility needs or concerns for the information presented here, please contact
    me on the book’s GitHub ([https://github.com/dreilly369/AppliedMathForSecurityBook](https://github.com/dreilly369/AppliedMathForSecurityBook)),
    and I’ll do my best to provide a solution.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我将尽力以多种不同的方式呈现图表中的数据，例如将数字和符号与颜色渐变结合使用。我选择将形状或数字表示与颜色一起添加，是为了更清楚地传达要点，因为印刷版中的图像是灰度的。使用颜色之外的其他指示符也是为了考虑可访问性。不得不在一本书中仅使用灰度图像帮助我意识到，我们用颜色传达了多少信息，而这对那些无法区分大量颜色的人是不公平的。每当我们创建数据可视化时，我们应该努力提供多种方式让人们区分关键点，而不是过度依赖漂亮的颜色渐变来代替我们的表达。如果你在理解这些信息时有可访问性方面的需求或疑虑，请通过本书的
    GitHub 页面([https://github.com/dreilly369/AppliedMathForSecurityBook](https://github.com/dreilly369/AppliedMathForSecurityBook))与我联系，我会尽力提供解决方案。
- en: Online Resources
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在线资源
- en: The supplemental materials and accompanying Jupyter Notebooks for this book
    are available at [https://github.com/dreilly369/AppliedMathForSecurityBook](https://github.com/dreilly369/AppliedMathForSecurityBook).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的补充材料和随书提供的 Jupyter Notebooks 可以在[https://github.com/dreilly369/AppliedMathForSecurityBook](https://github.com/dreilly369/AppliedMathForSecurityBook)获取。
