- en: Foreword
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Imagine if sending money to a friend required more than opening an app and making
    a few clicks. Or if monitoring your daily steps, exercise data, and nutrition
    information meant checking three separate applications. Or if comparing airfares
    involved manually visiting each airline’s website.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果给朋友汇款不仅仅是打开一个应用并点击几下。或者，如果监控你的日常步数、锻炼数据和营养信息意味着要查看三个独立的应用程序。又或者，如果比较机票价格需要手动访问每家航空公司的官网。
- en: 'Of course, it’s not hard to imagine this world: we lived in it not too long
    ago. But APIs have changed all that. They are the glue that has enabled collaboration
    across companies and transformed how enterprises build and run applications. Indeed,
    APIs have become so pervasive that an Akamai report from October 2018 found that
    API calls accounted for an astounding 83 percent of all web traffic.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，想象这个世界并不难：我们曾经生活在其中。然而，API 改变了这一切。它们是促进公司间合作的纽带，彻底改变了企业构建和运行应用程序的方式。事实上，API
    已经变得无处不在，2018 年 10 月的 Akamai 报告显示，API 调用占据了所有网页流量的惊人 83%。
- en: 'But as with most things on the internet, if there’s something good, cybercriminals
    will take notice. To these criminals, APIs are highly fertile and profitable ground,
    and for good reason. These services offer two highly desirable traits: (1) rich
    sources of sensitive information and (2) frequent security gaps.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 但与互联网中的大多数事情一样，只要有好的东西，网络犯罪分子就会注意到它。对于这些犯罪分子来说，API 是一个极为肥沃且有利可图的领域，原因很简单。这些服务提供了两大非常吸引人的特点：（1）丰富的敏感信息来源，和（2）频繁的安全漏洞。
- en: Consider the role APIs play in a typical application architecture. When you
    check your bank balance on a mobile app, an API behind the scenes requests that
    information and sends it to the app. Likewise, when you apply for a loan, an API
    allows the bank to request your credit history. APIs sit in a critical position
    between users and the sensitive systems on the backend. If a cybercriminal can
    compromise the API layer, they could get direct access to highly valuable information.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一下 API 在典型应用架构中的角色。当你在移动应用上查看银行余额时，后台的 API 会请求该信息并将其发送到应用程序。同样，当你申请贷款时，API
    使银行能够请求你的信用历史记录。API 位于用户和后台敏感系统之间的关键位置。如果网络犯罪分子能够攻破 API 层，他们就能直接访问到极其有价值的信息。
- en: While APIs have reached an unprecedented level of adoption, their security continues
    to lag. I recently spoke with the chief information security officer of a 100-year-old
    energy company and was surprised to learn they use APIs throughout the organization.
    But, he quickly pointed out, “whenever we look under the hood, we find they are
    often over-permissioned.”
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 API 已经达到了前所未有的应用程度，但它们的安全性依然滞后。我最近与一家拥有 100 年历史的能源公司首席信息安全官交谈时，惊讶地得知他们在整个组织中都使用
    API。但他很快指出：“每当我们深入检查时，都会发现它们常常拥有过多的权限。”
- en: This isn’t very surprising. Developers live under constant pressure to fix bugs,
    push new releases to consumers, and add functionality to their services. Rather
    than scheduling releases every few months, they must cycle through nightly builds
    and daily commits. There literally isn’t enough time to consider the security
    implications of every change they make, and so undiscovered vulnerabilities weasel
    their way into products.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不让人感到意外。开发者们在修复漏洞、发布新版本、向用户添加新功能的压力下生存。他们不能像以前那样每几个月发布一次版本，而是必须在每晚构建和每日提交中循环进行。实际上，他们根本没有足够的时间去考虑每次更改的安全影响，因此未被发现的漏洞悄悄地渗透到产品中。
- en: Unfortunately, lax API security practices too often result in unexpected outcomes.
    Take the US Postal Service (USPS). The agency published an API called Informed
    Visibility that allowed organizations and users to track packages. Appropriately,
    the API required users to validate their identity and authenticate in order to
    access any information via the API. However, once authenticated, a user could
    look up the account information of any other user, exposing the information of
    60 million users.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，宽松的 API 安全实践往往会导致意想不到的后果。以美国邮政服务（USPS）为例，该机构发布了一个名为 Informed Visibility
    的 API，允许组织和用户追踪包裹。恰当地说，API 要求用户验证身份并进行身份认证才能通过 API 访问任何信息。然而，一旦认证通过，用户就可以查看任何其他用户的账户信息，从而泄露了
    6000 万用户的信息。
- en: Peloton, the fitness company, also powers its apps (and even its equipment)
    with APIs. But because one of its APIs required no authentication to issue a call
    and get responses from the Peloton server, it allowed the requester to look up
    the account information of any other Peloton device (of which there are four million)
    and access potentially sensitive user information. Even US president Joe Biden,
    a well-known Peloton user, had his information exposed by this unsecured endpoint.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 健身公司 Peloton 也通过 API 为其应用程序（甚至是设备）提供支持。但是，由于其中一个 API 在发出请求并从 Peloton 服务器获取响应时不需要身份验证，它允许请求者查看任何其他
    Peloton 设备（共有四百万台）的帐户信息，并访问潜在的敏感用户信息。即使是美国总统乔·拜登，一个著名的 Peloton 用户，他的信息也通过这个不安全的端点被泄露了。
- en: 'Here’s a third example: the electronic payment firm Venmo relies on APIs to
    power its applications and connect to financial institutions. One of its APIs
    served a marketing function by showing recent, anonymized transactions. While
    user interfaces took care of stripping out any sensitive information, the API
    would return all transaction details when called directly. Malicious users harvested
    some 200 million transactions via this API.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是第三个例子：电子支付公司 Venmo 依赖于 API 来驱动其应用程序并与金融机构连接。它的一个 API 执行了一个营销功能，展示了最近的匿名交易。虽然用户界面负责去除任何敏感信息，但该
    API 在被直接调用时会返回所有交易详情。恶意用户通过这个 API 获取了大约 2 亿笔交易。
- en: Incidents like these have become so commonplace that the analyst firm Gartner
    has predicted that API breaches will become the “most frequent attack vector”
    by 2022, and IBM has reported that two-thirds of cloud breaches are the result
    of API misconfigurations. The breaches also highlight the need for new approaches
    to securing APIs. The application security solutions of the past focus only on
    the most common attack types and vulnerabilities. For example, automated scanners
    search the Common Vulnerabilities and Exposures (CVE) database for flaws in IT
    systems, and web application firewalls monitor traffic in real time to block malicious
    requests containing known flaws. These tools are well suited to detecting traditional
    threats, but they fail to address the core security challenges faced by APIs.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 像这样的事件已变得非常普遍，分析公司 Gartner 预测，到 2022 年，API 漏洞将成为“最频繁的攻击途径”，而 IBM 报告称，三分之二的云漏洞是由于
    API 配置错误引起的。这些漏洞也突显了为 API 安全提供新方法的必要性。过去的应用安全解决方案仅关注最常见的攻击类型和漏洞。例如，自动化扫描工具会搜索公共漏洞和暴露（CVE）数据库中的
    IT 系统缺陷，Web 应用防火墙实时监控流量，阻止包含已知漏洞的恶意请求。这些工具非常适合检测传统威胁，但它们无法解决 API 面临的核心安全挑战。
- en: The problem is that API vulnerabilities are not common. Not only do they vary
    highly from one API to another, but they also tend to differ from those found
    in traditional applications. The breach at USPS wasn’t a security misconfiguration;
    it was a business logic flaw. That is, the application logic contained an unintended
    loophole that permitted an authenticated, valid user to access data belonging
    to another user. This type of flaw, known as broken object level authorization,
    is the result of application logic that fails to control what an authorized user
    is able to access.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于，API 漏洞并不常见。它们不仅在不同的 API 之间差异很大，而且通常与传统应用程序中的漏洞有所不同。美国邮政服务（USPS）发生的漏洞并不是安全配置错误，而是一个业务逻辑漏洞。也就是说，应用逻辑包含了一个意外的漏洞，允许经过身份验证的有效用户访问其他用户的数据。这种类型的漏洞被称为破坏性对象级授权，是因为应用逻辑未能控制授权用户可以访问的内容。
- en: Put more succinctly, these unique API logic flaws are effectively zero-day vulnerabilities,
    each of which belongs only to a specific API. Because of the scope of these threats,
    a book like this one is crucial to educating penetration testers and bug bounty
    hunters interested in keeping APIs secure. Additionally, as security shifts “left”
    to the engineering and development processes, API security is no longer strictly
    the domain of companies’ information security departments. This book can be a
    guide to any modern engineering team that conducts security testing alongside
    functional and unit testing.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，这些独特的 API 逻辑漏洞实际上是零日漏洞，每一个漏洞都只属于特定的 API。由于这些威胁的范围，像这样的书籍对于教育渗透测试员和有兴趣保持
    API 安全的漏洞赏金猎人来说至关重要。此外，随着安全性逐渐向“左”转移到工程和开发过程中，API 安全性不再仅仅是公司信息安全部门的领域。这本书可以成为任何现代工程团队的指南，帮助他们在进行功能和单元测试的同时进行安全测试。
- en: When done properly, API security testing programs are continuous and comprehensive.
    Tests conducted once or twice a year won’t keep up with the pace of new releases.
    Instead, testing should become part of the development cycle, such that every
    release gets vetted before moving to production, and cover the API’s entire footprint.
    Finding API vulnerabilities takes new skills, new tools, and new approaches. The
    world needs *Hacking APIs* now more than ever.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当API安全测试项目得当执行时，它们是持续的、全面的。每年进行一次或两次的测试无法跟上新版本发布的步伐。相反，测试应当成为开发周期的一部分，以确保每个版本在上线前都经过验证，并覆盖API的整个范围。发现API漏洞需要新的技能、新的工具和新的方法。现在，世界比以往任何时候都更需要*黑客攻击API*。
- en: Dan Barahona
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 丹·巴拉霍纳
- en: Chief Strategy Officer, APIsec.ai Inc.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: APIsec.ai公司首席战略官
- en: San Francisco, CA
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 美国加利福尼亚州旧金山
