- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Final Cut
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 最终剪辑
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: Recapping our achievements so far, we have managed to retrieve political ads
    running on MXR Ads servers, complete with budget data, creatives, and the real
    organizations behind them. Also, we downloaded profiling data of hundreds of millions
    of individuals harvested by GP, with each profile reading like a personal diary
    that could be used to incriminate, blackmail, or subdue even the most powerful
    people. What more could we want?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾我们到目前为止的成就，我们已经成功检索到在 MXR 广告服务器上投放的政治广告，包括预算数据、创意和背后的真实组织。此外，我们还下载了 GP 收集的数亿个个人资料数据，每份资料都像个人日记，可以用来诽谤、勒索或压制即便是最有权势的人。我们还能要求什么更多的东西呢？
- en: 'Well, there is one thing missing from this list of awards: company emails.
    Hacking emails is just such a classic that I could not close this book without
    talking about it.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这份奖项列表里少了一样东西：公司邮箱。黑客攻击邮件是如此经典，我无法不在这本书中提及它。
- en: When we acquire domain admin credentials in a Windows Active Directory, unlimited
    access to emails naturally follows. The infrastructure and the corporate directory
    are bound together in the Windows environment.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在 Windows Active Directory 中获得域管理员凭证时，邮箱的无限访问权限自然也会随之而来。基础设施和公司目录在 Windows
    环境中是紧密绑定的。
- en: Things are different with AWS. It never intended to conquer the corporate IT
    market. That venue is already crowded with the likes of Active Directory and Google
    Workspace (formerly G Suite).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 则不同。它从未打算征服企业 IT 市场。这个市场已经被像 Active Directory 和 Google Workspace（前身为 G Suite）等产品占据。
- en: Most tech companies that exclusively rely on AWS or Google Cloud Platform (GCP)
    to build and host their business products will turn to Google Workspace for their
    corporate directory. You can hate Google all you want, but Gmail is still the
    most comprehensive email platform. (For managing emails, that is. The blow to
    privacy may not be worth it, but that’s another debate.)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数完全依赖 AWS 或 Google Cloud Platform（GCP）来构建和托管其商业产品的科技公司，将会转向 Google Workspace
    作为它们的企业目录。你可以讨厌 Google，但 Gmail 仍然是最全面的电子邮件平台。（至少在管理邮件方面是如此。隐私方面的代价或许不值得，但那是另一个话题。）
- en: 'Oftentimes this leads to two separate IT teams: one in charge of the infrastructure
    delivering the core technical product and another handling the corporate side
    of IT (emails, printers, workstations, help desk, and so on).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 通常这会导致两个独立的 IT 团队：一个负责交付核心技术产品的基础设施，另一个处理公司 IT 方面的事务（如电子邮件、打印机、工作站、帮助台等）。
- en: A quick lookup of the DNS Mail Exchange (MX) records reveals that GP is indeed
    using corporate Gmail, and therefore probably other tools in Google Workspace,
    like Drive, Contacts, Hangouts, and the rest (see [Listing 13-1](#listing13-1)).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 快速查看 DNS 邮件交换（MX）记录可以发现，GP 确实在使用企业版 Gmail，因此可能还在使用 Google Workspace 中的其他工具，比如
    Drive、Contacts、Hangouts 等（见 [Listing 13-1](#listing13-1)）。
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Listing 13-1: Lookup of MX records confirming that GP is indeed using Google
    Workspace'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Listing 13-1：查找 MX 记录，确认 GP 确实在使用 Google Workspace
- en: There is not much in the way of literature or scripts for exploiting and abusing
    Google Workspace, so let’s give it a go ourselves.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在利用和滥用 Google Workspace 方面，文献或脚本并不多，因此让我们自己动手试试。
- en: Hacking Google Workspace
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 破解 Google Workspace
- en: 'We are admin of GP’s AWS account and have unlimited access to all of its production
    resources, including the servers, users, GitHub account, and so on. Two strategies
    immediately come to mind for jumping over to the Google Workspace environment:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们是 GP 的 AWS 账户管理员，拥有对其所有生产资源的无限访问权限，包括服务器、用户、GitHub 账户等。我们有两个策略可以立即切换到 Google
    Workspace 环境：
- en: Find a corporate intranet application and replace the home page with a fake
    Google authentication page that steals credentials before redirecting users to
    the real app.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到一个公司内网应用，将主页替换为一个假的 Google 身份验证页面，窃取凭证后再将用户重定向到真实应用。
- en: Scour the codebase for applications that might interact with the Google Workspace
    environment and steal their credentials to establish a first foothold.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在代码库中寻找可能与 Google Workspace 环境交互的应用，并窃取它们的凭证来建立第一个立足点。
- en: The first option is a guaranteed winner, provided we do a good job of mimicking
    that Google authentication page. It’s also much riskier since it involves user
    interaction. Then again, we already have what we came for, so the heavens could
    fall down for all we care. This is just a bonus.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个选项是一个保证获胜的方法，只要我们能很好地模拟那个 Google 身份验证页面。这种方法风险更大，因为它涉及到用户交互。话说回来，我们已经得到了我们需要的东西，所以即便天塌下来，我们也不在乎。这只是个额外的收获。
- en: The second option, on the other hand, is way stealthier, but it assumes that
    the IT department shares some ties with the rest of the infrastructure that we
    can leverage, like a Lambda function, an IAM role, an S3 bucket, a user—basically
    a needle in a scattered haystack . . . or is it?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，第二个选项要隐蔽得多，但它假设IT部门与我们可以利用的一些基础设施有某种联系，比如Lambda函数、IAM角色、S3桶、用户——基本上是大海捞针……还是说不是？
- en: 'Come to think of it, there is actually something that has a high probability
    of being shared between the IT department and the infrastructure team: the GitHub
    account. Surely they did not register two accounts just to please the two tech
    teams, did they?'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在想想，实际上有一些东西很有可能在IT部门和基础设施团队之间共享：GitHub账户。肯定他们不是为了取悦这两个技术团队而注册了两个账户吧？
- en: 'Let’s load the GitHub token we retrieved from Jenkins and look for references
    to Google Workspace, Gmail, Google Drive, and so on. We write a brief Python script
    to load repository names:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们加载从Jenkins获取的GitHub令牌，寻找与Google Workspace、Gmail、Google Drive等相关的引用。我们编写了一个简短的Python脚本来加载仓库名称：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'A clear indication of cross-pollination 1. We clone the source code of it-gsuite-apps
    and . . . what do you know?! It’s a list of applications and services used to
    automate many Google Workspace admin actions, like user provisioning, organizational
    unit (OU) assignments, terminating accounts, and so on:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是跨领域合作的明显迹象 1。我们克隆了it-gsuite-apps的源代码，结果……你猜怎么着？！这是一个用于自动化许多Google Workspace管理员操作的应用程序和服务的列表，如用户配置、组织单元（OU）分配、账户终止等：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: These are exactly the types of actions we need to use to achieve control over
    Google Workspace! Of course, this sensitive repo is not visible to regular users,
    but I guess impersonating Jenkins has its perks.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这些正是我们需要用来控制Google Workspace的操作！当然，这个敏感的仓库对普通用户是不可见的，但我猜模拟Jenkins也有它的好处。
- en: We start dreaming about pulling the CEO’s emails and exposing this fraudulent
    business, but we quickly realize that this repo does not contain a single cleartext
    password.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们开始梦想拉取CEO的电子邮件并揭露这个欺诈业务，但很快意识到，这个仓库中没有一个明文密码。
- en: While AWS relies on access keys to authenticate users and roles, Google opted
    for the OAuth2 protocol, which requires explicit user interaction. Essentially,
    a web browser will open up, authenticate the user, and produce a validation code
    that must be pasted back into the command line to generate a temporary private
    key to call Google Workspace APIs.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然AWS依赖访问密钥来验证用户和角色，但Google选择了OAuth2协议，需要明确的用户交互。本质上，浏览器会打开，验证用户身份，然后生成一个验证代码，该代码必须粘贴回命令行，以生成临时私钥来调用Google
    Workspace API。
- en: 'Machines cannot follow this authentication flow, so Google also provides service
    accounts that can authenticate using private keys. Yet, when looking at the source
    code, we do not find the slightest hint of private keys:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 机器无法遵循这种认证流程，因此Google还提供了服务账户，可以使用私钥进行身份验证。然而，在查看源代码时，我们并没有发现任何关于私钥的线索：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: So, we dive into the code of it-gsuite-apps to understand how the app acquires
    its Google Workspace privileges and stumble upon the lines shown in [Listing 13-2](#listing13-2).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们深入研究了it-gsuite-apps的代码，以了解该应用如何获取Google Workspace权限，并发现了[列表13-2](#listing13-2)中的代码行。
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Listing 13-2: A code excerpt that loads a service token from AWS Secrets Manager'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 列表13-2：从AWS Secrets Manager加载服务令牌的代码片段
- en: 'Now it makes sense. The secret is not hardcoded in the app but retrieved dynamically
    through Secrets Manager, an AWS service for centralizing and storing secrets.
    We don’t have the secret’s name, but lucky for us, we have full admin privileges,
    so we can easily search for it:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一切都明了。秘密并没有硬编码在应用中，而是通过AWS的Secrets Manager动态获取的，Secrets Manager是一个用于集中存储秘密的服务。我们不知道秘密的名称，但幸运的是，我们拥有完整的管理员权限，所以我们可以轻松搜索：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Unfortunately, no amount of grepping reveals anything remotely related to Google
    Workspace. We manually inspect every entry just in case, but the hard reality
    quietly dawns on us: the IT department must be using another AWS account. That’s
    the only rational explanation.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，无论我们怎么grep，都没有找到任何与Google Workspace相关的内容。我们手动检查了每一条记录，以防万一，但残酷的现实悄然降临：IT部门一定在使用另一个AWS账户。这是唯一合理的解释。
- en: No need to panic, though. Hopping over to the IT AWS account will not require
    the same stunt we pulled when jumping from MXR Ads to GP. Those two companies
    are different (though intertwined) legal entities. They have completely separate
    AWS accounts. The IT department, however, is part of GP just as much as the regular
    tech team. It’s the same entity that pays the bills in the end.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，别慌张。跳转到 IT AWS 账户不需要像从 MXR Ads 跳转到 GP 时那样复杂的操作。那两家公司是不同（尽管相互关联）的法律实体，它们拥有完全独立的
    AWS 账户。然而，IT 部门与常规技术团队一样，属于 GP。最终付账的实体是同一个。
- en: 'The most probable configuration is that GP created an AWS organization, an
    entity that can house multiple AWS accounts: an account for the tech team, another
    for the IT department, another for testing, and so on. In such a configuration,
    one of the AWS accounts is promoted to the “master” status. This special account
    can be used to attach new accounts to the organization and apply global policies
    limiting the available set of services in each account.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最可能的配置是，GP 创建了一个 AWS 组织，一个可以容纳多个 AWS 账户的实体：一个是技术团队的账户，另一个是 IT 部门的账户，还有一个是测试用的账户，等等。在这种配置下，其中一个
    AWS 账户被提升为“主账户”状态。这个特殊账户可以用来将新账户附加到组织中，并应用全局策略，限制每个账户中可用的服务集。
- en: The master account is usually devoid of any infrastructure and should—in an
    ideal world—delegate management tasks like log aggregation, billing reports, and
    such to other accounts. We can easily confirm our hypothesis by calling the `list-accounts`
    AWS API using our all-powerful rundeck role (see [Listing 13-3](#listing13-3)).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 主账户通常不包含任何基础设施，应该——在理想的情况下——将日志聚合、账单报告等管理任务委托给其他账户。我们可以通过调用 `list-accounts`
    AWS API，使用我们功能强大的 rundeck 角色（见[清单 13-3](#listing13-3)），轻松确认我们的假设。
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Listing 13-3: Listing the AWS accounts'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 清单 13-3：列出 AWS 账户
- en: Looking good. We can see the admin account, as expected 1.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来不错。我们可以看到管理员账户，正如预期的那样 1。
- en: 'When creating a member account, AWS automatically provisions a default role
    called *OrganizationAccountAccessRole*. This role’s default trust policy allows
    impersonation from any user of the management account capable of issuing the Security
    Token Service (STS) `assume-role` API call. Let’s see if we can get its credentials:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建成员账户时，AWS 会自动分配一个名为 *OrganizationAccountAccessRole* 的默认角色。这个角色的默认信任策略允许任何管理账户的用户假扮该角色，并能够调用安全令牌服务（STS）`assume-role`
    API。让我们看看是否能获取到它的凭证：
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Darn it, we were so close! If even Rundeck is not authorized to impersonate
    the OrganizationAccountAccessRole, it means that either the role was deleted or
    its trust policy has been restricted to a select few. If only there were a central
    system that logged every API request on AWS so we could look up these privileged
    users . . . hello, CloudTrail!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 真是太可惜了，我们差一点就成功了！如果连 Rundeck 都没有被授权假扮 OrganizationAccountAccessRole，那么要么该角色已经被删除，要么它的信任策略已被限制为仅限少数用户。如果有一个中央系统可以记录所有
    AWS 上的 API 请求，那我们就可以查找这些特权用户了……你好，CloudTrail！
- en: Abusing CloudTrail
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 滥用 CloudTrail
- en: Every time a user or role assumes a role, that query is logged on CloudTrail
    and, in the case of GP, pushed to CloudWatch and S3\. We can leverage this ever-watchful
    system to single out those users and roles allowed to hop over to the IT account.
    CloudTrail’s API does not provide many filtering capabilities, so we will instead
    use CloudWatch’s powerful `filter-log-events` command.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 每当用户或角色扮演某个角色时，该查询会在 CloudTrail 中记录，并且在 GP 的情况下，会被推送到 CloudWatch 和 S3。我们可以利用这个随时监控的系统来筛选出那些被允许跳转到
    IT 账户的用户和角色。CloudTrail 的 API 并没有提供很多过滤功能，所以我们将使用 CloudWatch 强大的 `filter-log-events`
    命令。
- en: 'First, we get the name of the log group that aggregates CloudTrail logs:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们获取聚合 CloudTrail 日志的日志组名称：
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Then, as shown in [Listing 13-4](#listing13-4), it’s simply a matter of searching
    for occurrences of the IT account identifier 345673068670, which we got from [Listing
    13-3](#listing13-3).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，如[清单 13-4](#listing13-4)所示，这只是一个查找 IT 账户标识符 345673068670 出现位置的简单问题，我们从[清单
    13-3](#listing13-3)中得到了这个标识符。
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Listing 13-4: CloudTrail event showing *elis.skyler* impersonating a role inside
    the IT account'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 清单 13-4：CloudTrail 事件显示 *elis.skyler* 在 IT 账户内假扮角色
- en: 'Looks like *elis.skyler* 1 impersonated the OrganizationAccountAccessRole a
    few hours ago. Time to grace this account with an additional access key that we
    can use to assume the foreign role ourselves. Of course, we are going to temporarily
    blind CloudTrail for this maneuver, but I will omit the code since you are familiar
    with that technique already from Chapter 11:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来*elis.skyler* 1几小时前假扮了OrganizationAccountAccessRole。是时候为这个账户添加一个额外的访问密钥，让我们可以自己假扮该角色了。当然，在这个操作过程中，我们将暂时关闭CloudTrail，但我会省略代码，因为你已经在第11章了解了这种技术：
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Using these new credentials, we request temporary AWS keys belonging to the
    OrganizationAccountAccessRole:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些新的凭据，我们请求属于OrganizationAccountAccessRole的临时AWS密钥：
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'That was not so hard after all. Okay, let’s use these access credentials to
    look up the AWS Secrets Manager in this new account:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 其实并没有那么难。好了，让我们使用这些访问凭据在这个新账户中查找AWS Secrets Manager：
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Brilliant. We fetch the secret’s content and decode it to retrieve the JSON
    file used to authenticate Google service accounts (see [Listing 13-5](#listing13-5)).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了。我们获取密钥内容并解码，以检索用于验证Google服务账户的JSON文件（参见[列表13-5](#listing13-5)）。
- en: '[PRE13]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Listing 13-5: Retrieving the GCP service account key'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 列表13-5：获取GCP服务账户密钥
- en: The service account is named *userprovisionning@gp-gsuite-262115.iam.gserviceaccount.com*
    and is attached to the Google Cloud project gp-gsuite-262115\. Not Google Workspace,
    mind you. Google Cloud. Since Google Workspace does not handle service tokens,
    anyone wanting to automate their Google Workspace administration must create a
    service token on Google Cloud and then assign scopes and permissions to that account
    on Google Workspace. It can’t get any messier than that!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 服务账户名为*userprovisionning@gp-gsuite-262115.iam.gserviceaccount.com*，并附加到Google
    Cloud项目gp-gsuite-262115上。请注意，这不是Google Workspace，而是Google Cloud。由于Google Workspace不处理服务令牌，任何希望自动化Google
    Workspace管理的人都必须在Google Cloud上创建服务令牌，然后在Google Workspace中为该账户分配作用域和权限。事情已经够复杂了！
- en: We already know that this service token has the necessary permissions to create
    a user, so let’s help ourselves to a super admin account on Google Workspace.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经知道该服务令牌拥有创建用户所需的权限，那么让我们来为自己创建一个Google Workspace的超级管理员账户吧。
- en: Creating a Google Workspace Super Admin Account
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个Google Workspace超级管理员账户
- en: You can find the full Python code in the book’s GitHub repository as *create_user.py*,
    so I’ll just highlight the key points.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在本书的GitHub仓库中找到完整的Python代码，文件名为*create_user.py*，我将在这里仅突出关键点。
- en: 'First, we need to declare the scope of the actions our account will perform
    on Google Workspace. Since we will create a new account, we need the scope *admin.directory.user*.
    We follow this bit with the location of the service token file and the email we
    will impersonate to carry out our actions:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要声明我们的账户在Google Workspace上执行操作的范围。由于我们将创建一个新账户，我们需要使用*admin.directory.user*作用域。接下来，我们提供服务令牌文件的位置以及我们将假扮的用户的电子邮件，以执行我们的操作：
- en: '[PRE14]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: In Google’s security model, a service account cannot directly act on user accounts;
    it needs first to impersonate a real user using *domain-wide delegation* privileges,
    configured on the service account’s properties. Actions are then carried over
    with the privileges of the impersonated user, so we’d better find a super admin
    to impersonate.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在Google的安全模型中，服务账户不能直接操作用户账户；它需要首先通过*域范围委托*权限来假扮一个真实用户，这些权限是在服务账户的属性中配置的。然后，操作会以假扮的用户权限执行，因此我们最好找一个超级管理员来假扮。
- en: 'No problem. We try putting in the email of the owner of the AWS GP IT account
    we found in [Listing 13-3](#listing13-3) when enumerating existing AWS accounts:
    *admin-it@gretschpolitico.com*.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 没问题。我们尝试输入在[列表13-3](#listing13-3)中枚举现有AWS账户时找到的AWS GP IT账户所有者的电子邮件：*admin-it@gretschpolitico.com*。
- en: 'Next comes boilerplate Python code to build the Google Workspace client and
    impersonate the IT admin:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是构建Google Workspace客户端并假扮IT管理员的标准Python代码：
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We build a dictionary with our desired user attributes (name, password, and
    so on), then execute the query:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们构建一个包含所需用户属性（如姓名、密码等）的字典，然后执行查询：
- en: '[PRE16]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The final step is to make our user super admin over the entire organization:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是使我们的用户成为整个组织的超级管理员：
- en: '[PRE17]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now we just run the file:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们只需运行文件：
- en: '[PRE18]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: No errors. Did it really work? We open our browser and head to the Google Workspace
    Admin console, [https://admin.google.com/](https://admin.google.com/), as shown
    in [Figure 13-1](#figure13-1).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 没有错误。真的成功了吗？我们打开浏览器，访问Google Workspace管理员控制台，[https://admin.google.com/](https://admin.google.com/)，如[图13-1](#figure13-1)所示。
- en: '![f13001](image_fi/501263c13/f13001.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![f13001](image_fi/501263c13/f13001.png)'
- en: 'Figure 13-1: Access to our newly created Google Workspace account'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图13-1：访问我们新创建的Google Workspace账户
- en: 'It bloody did! We have just achieved admin access to GP’s corporate directory.
    Nothing is beyond reach now: Gmails, Google Drive, you name it.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 它真行！我们刚刚成功获得了GP公司目录的管理员权限。现在没有什么是无法触及的了：Gmail、Google Drive，随便说。
- en: Sneaking a Peek
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 偷窥一眼
- en: 'To keep a low profile, we will avoid using the export features and data migration
    utilities of Google Workspace. Google automatically alerts other admins when anyone
    triggers these tasks. We will exclusively interact with Google Workspace the way
    we have so far: through API calls. We just need to upgrade the scope of the user-provisioning
    service account we grabbed from Secrets Manager to include Gmail and Google Drive
    access.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持低调，我们将避免使用Google Workspace的导出功能和数据迁移工具。Google会在任何人触发这些任务时自动提醒其他管理员。我们将继续像之前那样仅通过API调用与Google
    Workspace进行交互。我们只需要升级从Secrets Manager中获取的用户供应服务账户的范围，加入Gmail和Google Drive访问权限。
- en: 'In the Google Workspace Admin console, we navigate to the **Security**▶**Advanced
    Settings**▶**Manage API Access** panel and enter the following two scopes in the
    **One or More API Scores** field, shown in [Figure 13-2](#figure13-2):'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在Google Workspace管理员控制台中，我们导航到**安全性**▶**高级设置**▶**管理API访问**面板，并在**一个或多个API范围**字段中输入以下两个范围，如[图13-2](#figure13-2)所示：
- en: '**https://www.googleapis.com/auth/drive**'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**https://www.googleapis.com/auth/drive**'
- en: '**https://www.googleapis.com/auth/gmail.readonly**'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**https://www.googleapis.com/auth/gmail.readonly**'
- en: In the **Client Name** field, we write the service account’s name, **userprovisionning@gp-gsuite-262115.iam.gserviceaccount.com**,
    which gets converted to a unique ID.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在**客户端名称**字段中，我们输入服务账户的名称**userprovisionning@gp-gsuite-262115.iam.gserviceaccount.com**，它会被转换为一个唯一的ID。
- en: '![f13002](image_fi/501263c13/f13002.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![f13002](image_fi/501263c13/f13002.png)'
- en: 'Figure 13-2: Google Workspace admin panel to update API scopes'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图13-2：Google Workspace管理员面板更新API范围
- en: Contrary to the usual intuitive panels that Google is famous for, this admin
    panel is particularly dreadful. You cannot just append scopes, because they will
    overwrite old ones. You need to enter all the scopes assigned to a service account
    (old and new ones).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 与Google以往著名的直观面板不同，这个管理员面板特别糟糕。你不能只是附加范围，因为它们会覆盖旧的范围。你需要输入分配给服务账户的所有范围（包括旧的和新的）。
- en: 'We create a new *gmail.py* Python script with the same boilerplate code previously
    used to create a user, except for a few alterations:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个新的*gmail.py* Python脚本，使用之前创建用户时的相同模板代码，只是做了一些更改：
- en: '[PRE19]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: We update the scope to include Gmail 1 and then call the `users().messages()`
    API 2 to retrieve the CEO’s emails, whose name we gleefully take from LinkedIn.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们更新了范围，包含了Gmail 1，然后调用`users().messages()` API 2来检索CEO的电子邮件，CEO的名字我们愉快地从LinkedIn上获取。
- en: 'Then it’s just a matter of looping through the messages, extracting the subject,
    sender, receiver, and email body. Check out the full code at [https://github.com/HackLikeAPornstar/GreschPolitico](https://github.com/HackLikeAPornstar/GreschPolitico).
    We run the full Python script and rifle through the emails at our leisure:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，只需遍历邮件，提取主题、发件人、收件人和邮件正文。查看完整代码：[https://github.com/HackLikeAPornstar/GreschPolitico](https://github.com/HackLikeAPornstar/GreschPolitico)。我们运行完整的Python脚本，悠闲地浏览邮件：
- en: '[PRE20]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Gretsch Politico in all its glory, ladies and gentlemen! Time to dig out the
    dirt.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 尊敬的各位，欢迎欣赏Gretsch Politico的全貌！是时候揭开它的秘密了。
- en: Closing Thoughts
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结束语
- en: Wow, we made it to the end. That was an intense journey filled with many esoteric
    technologies and new paradigms. The generalization of cloud computing may be one
    of the most disrupting events of the last decade. And while many tech companies
    and startups are already fully embracing the cloud, I feel that the security community
    is still lagging behind.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 哇，我们终于到了最后。这是一段充满许多深奥技术和新范式的紧张旅程。云计算的普及可能是过去十年里最具颠覆性的事件之一。尽管许多科技公司和初创企业已经完全拥抱云计算，我觉得安全社区仍然滞后。
- en: Every post I read about lateral movement, C2 communication, and so forth exclusively
    covers Active Directory—as if it’s the only possible configuration and as if the
    most valuable data is necessarily stored on a Windows share or SQL server. That
    certainly is not true for banks and airlines (mainframes, anyone?). In fact, as
    we saw just in this scenario, more and more tech companies are moving away from
    Windows environments.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我阅读的每一篇关于横向渗透、C2通信等的文章，几乎都只涉及Active Directory——仿佛这是唯一可能的配置，仿佛最有价值的数据一定存储在Windows共享或SQL服务器上。这显然对于银行和航空公司（谁需要主机系统？）并不成立。事实上，正如我们在这个场景中看到的，越来越多的科技公司正在远离Windows环境。
- en: Maybe it’s a bias introduced by consulting companies only working with old firms
    that are still neck-deep in Active Directory. Maybe it’s the number of Windows
    CVEs (Common Vulnerabilities and Exposures) that flood the market. Probably a
    little bit of both.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 也许这是由只与老旧企业合作的咨询公司所引入的偏见，这些企业依然深陷于Active Directory。也许是市场上Windows CVE（常见漏洞和暴露）数量的影响。可能是两者的结合。
- en: 'In any case, I hope that the numerous examples in this book helped drive at
    least one message home: security is about thoroughly understanding a piece of
    technology, asking questions, and deconstructing the whole thing until it makes
    sense. The deeper you dig, the easier it is to toy with it afterward.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我希望本书中的众多示例至少传递了一个信息：安全是关于彻底理解一项技术，提出问题，并将其解构，直到它变得有意义。你挖得越深，之后玩弄它就越容易。
- en: We wrote significant custom code to sneak past detection services or to simply
    circumvent tedious network restrictions. Download the codebase, play with it,
    try it out on a free tier AWS account, and extend it to new horizons. That’s the
    only proven road to success.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们编写了大量定制代码，以绕过检测服务或简单地规避繁琐的网络限制。下载代码库，玩一玩，试试它在免费的AWS账户上，扩展到新的领域。这是通向成功的唯一可靠道路。
- en: Happy hacking!
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你黑客愉快！
- en: Resources
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: Matthew Toussain’s interesting article about Google Workspace (formerly G Suite)
    hacking at [https://www.blackhillsinfosec.com/](https://www.blackhillsinfosec.com/).
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matthew Toussain关于Google Workspace（前身为G Suite）黑客攻击的有趣文章：[https://www.blackhillsinfosec.com/](https://www.blackhillsinfosec.com/)。
- en: 'Google’s guide to using OAuth2 to access its APIs: [http://bit.ly/2RAzYEx](http://bit.ly/2RAzYEx).'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google使用OAuth2访问其API的指南：[http://bit.ly/2RAzYEx](http://bit.ly/2RAzYEx)。
- en: 'The Google Workspace User Accounts guide: [https://developers.google.com/admin-sdk/directory/v1/guides/manage-users/](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users/).'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Workspace用户账户指南：[https://developers.google.com/admin-sdk/directory/v1/guides/manage-users/](https://developers.google.com/admin-sdk/directory/v1/guides/manage-users/)。
- en: 'Instructions for performing Google Workspace domain-wide delegation: [https://developers.google.com/admin-sdk/directory/v1/guides/delegation/](https://developers.google.com/admin-sdk/directory/v1/guides/delegation/).'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行Google Workspace域级委托的说明：[https://developers.google.com/admin-sdk/directory/v1/guides/delegation/](https://developers.google.com/admin-sdk/directory/v1/guides/delegation/)。
- en: 'More on Google service accounts: [https://cloud.google.com/compute/docs/access/service-accounts/](https://cloud.google.com/compute/docs/access/service-accounts/).'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于Google服务账户的信息：[https://cloud.google.com/compute/docs/access/service-accounts/](https://cloud.google.com/compute/docs/access/service-accounts/)。
- en: 'More on AWS organizations and delegated admin members: [https://amzn.to/3766cAL](https://amzn.to/3766cAL).'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于AWS组织和委托管理员成员的信息：[https://amzn.to/3766cAL](https://amzn.to/3766cAL)。
