- en: '[5](nsp-enoka501485-0007.xhtml#rch05)'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[5](nsp-enoka501485-0007.xhtml#rch05)'
- en: Creating a Virtual Private Network
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建虚拟私人网络
- en: '![Chapter opening icon](images/nsp-enoka501485-ct.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![章节开头图标](images/nsp-enoka501485-ct.jpg)'
- en: A *virtual private network (VPN)* is a means of providing privacy and security
    for communications over the public internet. If you don’t want a malicious third
    party to intercept your Google search traffic as it traverses the internet from
    your local laptop to Google’s servers, you should use a VPN to encrypt the traffic
    between the two endpoints. If you frequently transfer sensitive files or data,
    such as personally identifiable information or banking information, it’s wise
    to protect this information using encryption.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*虚拟私人网络（VPN）*是一种通过公共互联网提供通信隐私和安全性的手段。如果你不希望恶意第三方在你的谷歌搜索流量从本地笔记本电脑传输到谷歌服务器的过程中进行拦截，你应该使用VPN来加密两端之间的流量。如果你经常传输敏感文件或数据，如个人身份信息或银行信息，最好使用加密来保护这些信息。'
- en: The other primary function of a VPN is to extend a private network, such as
    those in homes and offices, from one geographic location to another. A VPN creates
    a tunnel over the internet from one network to a second network. This means that
    if a user usually based in Australia is traveling in Europe, they could connect
    to their home network from Europe as if they were physically located in Australia.
    Conversely, if a user located in Australia wants to *appear* as if they’re physically
    located in Europe, they can place the VPN endpoint in Europe, usually via some
    third-party service.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: VPN的另一个主要功能是将私人网络（例如家庭和办公室中的网络）从一个地理位置扩展到另一个地理位置。VPN在互联网上创建一个隧道，将一个网络与第二个网络连接。这意味着，如果一个通常位于澳大利亚的用户正在欧洲旅行，他们可以像在澳大利亚一样从欧洲连接到他们的家庭网络。相反，如果一个位于澳大利亚的用户希望*看起来*像是位于欧洲，他们可以将VPN端点设置在欧洲，通常通过某个第三方服务。
- en: This chapter outlines a method for creating a private VPN whose *exit node*
    (that is, the place where the VPN tunnel ends) is located somewhere outside of
    your local network, in a different geographic location somewhere in the world,
    to make your actual physical location private. We’ll discuss how to achieve this
    with OpenVPN or Wireguard.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章概述了一种创建私人VPN的方法，其中的*出口节点*（即VPN隧道结束的地方）位于你的本地网络之外，地理位置上位于世界某个地方，从而使你的实际物理位置保持隐私。我们将讨论如何使用OpenVPN或Wireguard实现这一目标。
- en: '[Drawbacks of Third-Party VPNs and Remote Access Services](nsp-enoka501485-0007.xhtml#rah0701)'
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[第三方VPN和远程访问服务的缺点](nsp-enoka501485-0007.xhtml#rah0701)'
- en: Although you could subscribe to a VPN service like NordVPN or ExpressVPN, operating
    your own VPN is beneficial because you control everything about it, including
    connection and traffic logging levels, as well as the cost of the service. Also,
    whereas third-party services provide some benefits, such as the possibility of
    using multiple exit nodes in different locations, they usually don’t offer the
    ability to connect into your own network remotely. One last challenge of using
    third-party VPN services is that they usually set a limit to the number of devices
    you can connect at a time. A privately managed VPN has no such limitation.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你可以订阅像NordVPN或ExpressVPN这样的VPN服务，运营自己的VPN更有利，因为你可以控制其中的一切，包括连接和流量记录的级别，以及服务的成本。此外，虽然第三方服务提供了一些好处，例如使用位于不同位置的多个出口节点的可能性，但它们通常不提供连接到你自己网络的远程访问功能。使用第三方VPN服务的最后一个挑战是，它们通常限制你可以同时连接的设备数量。私人管理的VPN没有这样的限制。
- en: Recently, there’s been a boom in the number of applications designed to allow
    remote access to endpoints from the wider internet. This includes software and
    vendors such as Teamviewer and AnyDesk. Although these solutions are convenient
    and have a low barrier to entry, they increase the attack surface of your private
    network by opening up remote access from your computer to the internet, something
    you should rarely do, if ever. There have also been several well-known compromises
    of these solutions, indicating that they are vulnerable to attack. A VPN provides
    a much more secure solution.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，许多应用程序涌现出来，旨在允许从更广泛的互联网远程访问端点。这些包括Teamviewer和AnyDesk等软件和供应商。尽管这些解决方案方便且入门门槛较低，但它们通过为你的计算机打开远程访问到互联网，增加了你的私人网络的攻击面，而这种行为应尽量避免，甚至从不做过。此外，已经发生了几起这些解决方案被攻破的著名事件，表明它们易受攻击。VPN提供了一个更加安全的解决方案。
- en: '[OpenVPN](nsp-enoka501485-0007.xhtml#rah0702)'
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[OpenVPN](nsp-enoka501485-0007.xhtml#rah0702)'
- en: '*OpenVPN* is one of the most common VPN solutions available. Because of its
    age and ubiquity, you can be confident in its security when compared to newer
    solutions, which have been less rigorously tested for bugs and vulnerabilities.
    OpenVPN comes built-in to a variety of networking hardware, which is beneficial
    because in a lot of cases your router can act as your VPN endpoint inside of your
    network (that is, the VPN server). This means your router can also act as a VPN
    client, connecting to a VPN server in the cloud, and then everything connected
    to the router on your internal network can send and receive traffic via your VPN
    tunnel. Encrypting your internet traffic in this way provides much greater privacy
    than using the internet without a VPN. Ideally, though, you’ll want more control
    over the VPN exit node than this allows; most routers use either a cut-down version
    of Linux or a proprietary operating system, so you’ll learn how to create a VPN
    server using Ubuntu for greater flexibility.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*OpenVPN*是最常见的VPN解决方案之一。由于其历史悠久且普及，您可以确信它在安全性方面优于较新的解决方案，因为后者在漏洞和安全缺陷的测试上不够严格。OpenVPN已内置于多种网络硬件中，这一点非常有利，因为在很多情况下，您的路由器可以作为您网络内部的VPN端点（即VPN服务器）。这意味着您的路由器也可以充当VPN客户端，连接到云中的VPN服务器，然后您内部网络上连接到路由器的所有设备都可以通过VPN隧道发送和接收流量。以这种方式加密您的互联网流量，比不使用VPN直接上网提供了更大的隐私保护。然而，理想情况下，您希望对VPN出口节点有更多控制，因为大多数路由器使用的是简化版的Linux或专有操作系统，因此您将学习如何使用Ubuntu创建一个VPN服务器，以获得更大的灵活性。'
- en: '[EasyRSA](nsp-enoka501485-0007.xhtml#rah0703)'
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[EasyRSA](nsp-enoka501485-0007.xhtml#rah0703)'
- en: EasyRSA is a command-line utility for creating and managing certificate authorities.
    To encrypt and protect traffic, OpenVPN requires a *certificate authority (CA)*
    to issue certificates. *Digital certificates* are used to enable trust between
    different parties, usually networks and computers. *Public key infrastructure
    (PKI)* is responsible for the distribution, authentication, and revocation of
    public key certificates, which are used to verify ownership of digital certificates.
    These certificates contain the public key that an entity uses as part of a public/private
    key pair to encrypt data, which can then be decrypted only by the public key owner
    with the matching private key. This method secures most communication on the internet
    today.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: EasyRSA是一个命令行工具，用于创建和管理证书授权机构。为了加密和保护流量，OpenVPN需要一个*证书授权机构（CA）*来颁发证书。*数字证书*用于建立不同方之间的信任，通常是网络和计算机之间的信任。*公钥基础设施（PKI）*负责公钥证书的分发、认证和撤销，这些证书用于验证数字证书的所有权。这些证书包含一个实体用作公私钥对一部分的公钥，用于加密数据，只有拥有匹配私钥的公钥所有者才能解密。这种方法保护了今天互联网上的大多数通信。
- en: 'The CA you create will generate, sign, verify, and revoke (if necessary) all
    the certificates required to encrypt and secure communications between the VPN
    server and VPN clients. Technically, you can install both OpenVPN and the CA on
    the same server, but doing so is less secure than installing them on separate
    servers. Any adversary who gains access to the server would have access to the
    certificates and private keys used by the server, as well as the ability to generate
    new certificates. Therefore, you’ll need two Ubuntu servers: one to act as the
    OpenVPN server and one to serve as the certificate server. You’ll use the certificate
    server to sign requests generated on the OpenVPN server for both the VPN server
    and any client devices connecting to the VPN, whether they’re laptops, workstations,
    mobile devices, or any other type of device.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您创建的CA将生成、签名、验证并撤销（如有必要）所有用于加密和保护VPN服务器与VPN客户端之间通信的证书。从技术上讲，您可以将OpenVPN和CA安装在同一台服务器上，但这样做比将它们安装在不同的服务器上更不安全。任何能够访问该服务器的对手都能获取服务器使用的证书和私钥，并且有能力生成新的证书。因此，您需要两台Ubuntu服务器：一台作为OpenVPN服务器，另一台作为证书服务器。您将使用证书服务器来签署在OpenVPN服务器上生成的请求，这些请求既包括VPN服务器的请求，也包括任何连接到VPN的客户端设备的请求，无论它们是笔记本电脑、工作站、移动设备还是其他类型的设备。
- en: '[Wireguard](nsp-enoka501485-0007.xhtml#rah0704)'
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[Wireguard](nsp-enoka501485-0007.xhtml#rah0704)'
- en: '*Wireguard*, a relatively new alternative to OpenVPN, is simple and incredibly
    fast by comparison. The drawback of being newer is that although Wireguard is
    open source, it’s had less time to be tested for bugs and vulnerabilities. However,
    it has gathered a sizable following in the security community and a good reputation
    for being reliable and secure.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*Wireguard*，作为OpenVPN的一个相对较新的替代品，比起OpenVPN来说，它非常简单且速度极快。它较新的缺点是，尽管Wireguard是开源的，但由于开发时间较短，尚未经过充分的漏洞和错误测试。然而，它已经在安全社区中积累了相当大的用户群，并且因其可靠性和安全性而享有良好的声誉。'
- en: Note If you plan to connect to your private network remotely, keep in mind that
    you’ll need a static IP address on your home or office internet connection, as
    well as some port forwarding on your border router. Most internet service providers
    supply static IP addresses upon request, usually for a nominal fee.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：如果你计划远程连接到你的私有网络，请记住，你需要在家里或办公室的互联网连接上拥有一个静态IP地址，并在边界路由器上进行一些端口转发。大多数互联网服务提供商可以按需提供静态IP地址，通常需要支付少量费用。
- en: '[#19: Creating a VPN with OpenVPN](nsp-enoka501485-0007.xhtml#rhd0701)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[#19：使用OpenVPN创建VPN](nsp-enoka501485-0007.xhtml#rhd0701)'
- en: In this first project, you’ll start by creating an OpenVPN server and a certificate
    authority to secure communication via the VPN. Next, you’ll generate the relevant
    certificates, create the OpenVPN configuration files, configure the host firewall,
    and start the VPN. Finally, you’ll configure each of the VPN clients that will
    use this VPN to send and receive traffic, and you’ll connect to and test the VPN
    connection.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个第一个项目中，你将从创建一个OpenVPN服务器和一个证书授权机构开始，以通过VPN保护通信。接下来，你将生成相关证书，创建OpenVPN配置文件，配置主机防火墙，并启动VPN。最后，你将配置每个将使用此VPN进行数据传输的VPN客户端，并连接和测试VPN连接。
- en: The entire process of spinning up an OpenVPN server in the cloud and connecting
    a client to it should take no longer than a couple of hours. Adding subsequent
    clients should take up to 30 minutes per endpoint. You’ll need to enable and configure
    a firewall on your server as part of creating your VPN. Ubuntu’s built-in firewall,
    the *Uncomplicated Firewall (UFW)*, is designed to reduce the complexity of firewall
    configuration. It’s much simpler than solutions like iptables (covered in [Chapter
    3](nsp-enoka501485-0012.xhtml#ch03)). We’ll introduce you to UFW and its use in
    this project as an alternative host firewall solution. Alternatively, you can
    apply what you learned in [Chapter 3](nsp-enoka501485-0012.xhtml#ch03) and implement
    the same rules described for UFW in an iptables deployment. Even if you have a
    perimeter firewall in place like pfSense, be sure to enable either the host-based
    firewall offered by Ubuntu or iptables, as laid out in [Chapter 3](nsp-enoka501485-0012.xhtml#ch03),
    to provide an additional layer of protection at the host level. Implementing a
    host-based firewall also allows more granular configuration of the servers’ network
    connections.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在云端启动OpenVPN服务器并连接客户端的整个过程应该不会超过几个小时。为每个后续客户端添加连接大约需要每个端点30分钟。作为创建VPN的一部分，你需要启用并配置服务器上的防火墙。Ubuntu内置的防火墙，*简单防火墙（UFW）*，旨在简化防火墙配置的复杂性。它比像iptables（在[第3章](nsp-enoka501485-0012.xhtml#ch03)中讲解的）这样的解决方案要简单得多。在这个项目中，我们将介绍UFW及其用法，作为一种替代的主机防火墙解决方案。或者，你也可以应用在[第3章](nsp-enoka501485-0012.xhtml#ch03)中学到的知识，并在iptables部署中实现与UFW相同的规则。即使你已经部署了像pfSense这样的外围防火墙，仍然要确保启用Ubuntu提供的主机防火墙或iptables，按照[第3章](nsp-enoka501485-0012.xhtml#ch03)中的内容，提供额外的主机级保护。实施主机防火墙还可以更精细地配置服务器的网络连接。
- en: Once you enable the firewall, you’ll have to adjust the settings of the Ubuntu
    installation so that OpenVPN traffic is capable of traversing that firewall. (I’ll
    cover how to do this later in the project.)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦启用防火墙，你需要调整Ubuntu安装的设置，以便OpenVPN流量能够穿越该防火墙。（我将在项目的后面部分讲解如何操作。）
- en: Securing internet traffic originating inside your network will require a VPN
    exit node elsewhere, as well as a certificate server, so follow [Project 3](nsp-enoka501485-0010.xhtml#hd0303)
    in [Chapter 1](nsp-enoka501485-0010.xhtml#ch01) to create two base Ubuntu servers
    in the cloud, using the cloud service provider of your choice.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保护来源于你网络内部的互联网流量，你将需要在其他地方配置一个VPN出口节点，以及一个证书服务器，因此请参照[项目3](nsp-enoka501485-0010.xhtml#hd0303)和[第1章](nsp-enoka501485-0010.xhtml#ch01)，在云端创建两台基础的Ubuntu服务器，选择你偏好的云服务提供商。
- en: 'Once your Ubuntu servers are up and running, log in to the server you plan
    to use as your OpenVPN server (as opposed to the certificate authority) via SSH
    as a standard, non-root user:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的 Ubuntu 服务器启动并运行，作为标准的非 root 用户，通过 SSH 登录到你打算用作 OpenVPN 服务器（而不是证书颁发机构）的服务器：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once logged in to the OpenVPN server, at the bash terminal, use `apt` to install
    OpenVPN:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到 OpenVPN 服务器后，在 bash 终端中使用 `apt` 安装 OpenVPN：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You also need to install EasyRSA on both the OpenVPN server and the certificate
    server. Install the latest version using `apt` as well:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要在 OpenVPN 服务器和证书服务器上安装 EasyRSA。也通过 `apt` 安装最新版本：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Make sure to install this on both Ubuntu servers. EasyRSA will be installed
    to the */usr/share/easy-rsa/* directory by default.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在两个 Ubuntu 服务器上都安装此软件。默认情况下，EasyRSA 将被安装到 */usr/share/easy-rsa/* 目录下。
- en: '[Set Up the Certificate Authority](nsp-enoka501485-0007.xhtml#rbh0701)'
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[设置证书颁发机构](nsp-enoka501485-0007.xhtml#rbh0701)'
- en: Next, you must configure and build the certificate server to act as a CA. The
    easiest way to do this is to make a copy of the template that EasyRSA provides
    and then modify its configuration to suit your needs. You can then initialize
    the PKI, build the CA, and generate its public certificate and private key.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你必须配置并构建证书服务器，使其充当 CA。最简单的方法是复制 EasyRSA 提供的模板，然后修改其配置以适应你的需求。之后，你可以初始化 PKI，构建
    CA，并生成其公钥证书和私钥。
- en: 'Navigate to the *easy-rsa* folder on the certificate server and then create
    a copy of the *vars.example* file. Call it *vars*:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在证书服务器上导航到 *easy-rsa* 文件夹，然后创建 *vars.example* 文件的副本，命名为 *vars*：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Keep in mind that most of the time when a command in bash runs successfully,
    there will be no output to the screen, and you’ll be returned to the prompt.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，大多数情况下，当 bash 中的命令成功运行时，屏幕上不会有输出，你将返回到提示符。
- en: 'Open the resulting *vars* file in a text editor:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开生成的 *vars* 文件：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the file, find the *organizational fields* that contain information about
    the organization for which the certificates will be generated by this server;
    for example:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件中，找到包含证书将由此服务器生成的组织信息的 *组织字段*；例如：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Each of these lines in the file is a comment by default, so they won’t be read
    or interpreted when the file is run; they’ll be ignored or suppressed. Remove
    the hash (`#`) at the beginning of each line to ensure they’re read when this
    file is invoked. Alter the values in quotations on the right to match your organization
    or personal network. The values can be anything you choose, but they can’t be
    blank. Here’s an example:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 文件中的每一行默认都是注释，因此在文件运行时不会被读取或解释；它们将被忽略或抑制。删除每行开头的哈希符号（`#`），确保在调用此文件时它们能被读取。根据你的组织或个人网络，修改右侧引号中的值。这些值可以是任何你选择的内容，但不能为空。以下是一个示例：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Save and close the file. Execute the `easyrsa` script within the *easy-rsa*
    folder (which should still be your current working directory) to initialize the
    PKI and then build the CA with the same `easyrsa` script, which will generate
    both the CA public certificate (*ca.crt*) and the private key (*ca.key*):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并关闭文件。在 *easy-rsa* 文件夹（它应该仍然是你当前的工作目录）内执行 `easyrsa` 脚本，初始化 PKI，然后使用相同的 `easyrsa`
    脚本构建 CA，这将生成 CA 的公钥证书 (*ca.crt*) 和私钥 (*ca.key*)：
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: When prompted for the server’s Common Name, you can enter any string of characters
    you’d like, but it’s often easier to use the hostname of the server or press enter
    to accept the default Common Name. The output will contain the path to your PKI
    directory and *ca.crt* file; the *ca.key* file will be inside the *private* folder
    in the same location. The `nopass` option keeps you from being prompted for a
    password every time the CA is queried during this process.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统提示输入服务器的通用名称时，你可以输入任何字符串，但通常使用服务器的主机名更方便，或者按回车接受默认的通用名称。输出将包含指向你的 PKI 目录和
    *ca.crt* 文件的路径；*ca.key* 文件将位于同一位置的 *private* 文件夹内。`nopass` 选项可以避免每次查询 CA 时都需要输入密码。
- en: That concludes the configuration of the CA server for now. The next set of configuration
    steps takes place on the OpenVPN server.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，CA 服务器的配置已完成。下一组配置步骤将在 OpenVPN 服务器上进行。
- en: '[Create the OpenVPN Server Certificate and Key](nsp-enoka501485-0007.xhtml#rbh0702)'
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[创建 OpenVPN 服务器证书和密钥](nsp-enoka501485-0007.xhtml#rbh0702)'
- en: Each client you plan to connect to the VPN needs its own public certificate
    and private key. These files allow the certificate server, the VPN server, and
    any other clients on the VPN to authenticate the client and enable communication
    between all devices within the VPN. The VPN server also needs its own certificate
    and key for the same reasons. This part of the project describes how to sign a
    certificate and generate a key for the OpenVPN server. You’ll follow a similar
    process for connecting clients to the OpenVPN server.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 每个你计划连接到 VPN 的客户端都需要自己的公钥证书和私钥文件。这些文件允许证书服务器、VPN 服务器以及 VPN 上的任何其他客户端对客户端进行认证，并允许所有设备之间进行通信。VPN
    服务器也需要自己的证书和密钥，原因相同。本部分内容描述了如何为 OpenVPN 服务器签署证书并生成密钥。连接客户端到 OpenVPN 服务器的过程将类似。
- en: 'On the OpenVPN server, navigate to the *easy-rsa* folder, and initialize the
    PKI for this server in the same way as before:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OpenVPN 服务器上，导航到*easy-rsa*文件夹，并按照之前的方式初始化该服务器的 PKI：
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Just as every client connected to the VPN requires a certificate and key, the
    OpenVPN server itself needs a certificate signed by the CA. To this end, generate
    a certificate request from the OpenVPN server:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 就像每个连接到 VPN 的客户端需要一个证书和密钥一样，OpenVPN 服务器本身也需要一个由 CA 签署的证书。为此，首先从 OpenVPN 服务器生成一个证书请求：
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When prompted, press enter to accept the default Common Name for the VPN server,
    `server`, or give it a custom name. The output indicates that an RSA private key
    is generated and shows where the script stored the resulting server key and certificate
    request.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统提示时，按回车键接受 VPN 服务器的默认公用名称 `server`，或者提供自定义名称。输出显示已生成一个 RSA 私钥，并指示脚本将生成的服务器密钥和证书请求存储的位置。
- en: 'Copy the generated *server.key* file to the OpenVPN configuration directory
    on the VPN server:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 将生成的*server.key*文件复制到 VPN 服务器的 OpenVPN 配置目录：
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Copy the *server.req* file to your certificate server using `rsync`, replacing
    the user and CA-ip placeholders with the relevant username and IP address for
    your certificate server:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`rsync`将*server.req*文件复制到证书服务器，替换其中的用户和 CA-ip 占位符，使用你证书服务器的相关用户名和 IP 地址：
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Next, enter the following commands to log in to your certificate server and
    then import and sign the VPN certificate request generated earlier, enabling the
    VPN communications to be encrypted and secured:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，输入以下命令以登录到你的证书服务器，然后导入并签署之前生成的 VPN 证书请求，从而使 VPN 通信加密并确保安全：
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The first `easyrsa import-req` command imports the request. The second argument
    is the Common Name you created for your VPN server earlier ❶. To sign the request,
    pass `easyrsa sign-req` the argument `server` ❷ to specify the request type and
    then the Common Name again. (Later, when signing client requests, you’ll use the
    same command with `client` as the argument.)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个`easyrsa import-req`命令用于导入请求。第二个参数是你之前为 VPN 服务器创建的公用名称 ❶。要签署请求，传递`easyrsa
    sign-req`命令时需要传入参数`server` ❷来指定请求类型，然后再次输入公用名称。（稍后，当签署客户端请求时，你将使用相同的命令，参数改为`client`。）
- en: 'When asked to confirm whether the details are correct, double-check to ensure
    the Common Name is set as expected and then type `yes` and press enter to complete
    the import and signing process. You’ll need to copy the resulting *server.crt*
    certificate file belonging to the OpenVPN server (along with the CA certificate)
    back to the OpenVPN server from the CA server so that each can authenticate the
    other:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统询问是否确认详情无误时，仔细检查以确保公用名称已按预期设置，然后键入`yes`并按回车键完成导入和签署过程。你需要将生成的*server.crt*证书文件（连同
    CA 证书）从 CA 服务器复制回 OpenVPN 服务器，以便彼此验证：
- en: '[PRE13]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'On the OpenVPN server, move the relevant files to the */etc/openvpn/* directory:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OpenVPN 服务器上，将相关文件移动到*/etc/openvpn/*目录：
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Next, you’ll need a Diffie-Hellman key to exchange keys between devices. A *Diffie-Hellman
    key exchange* is a way to communicate public and private key information between
    two parties over a public communication channel securely. Without this capability,
    it wouldn’t be possible to create secure encrypted channels over a public network
    like the internet.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要一个 Diffie-Hellman 密钥用于设备间的密钥交换。*Diffie-Hellman 密钥交换*是一种通过公共通信通道安全地传递公钥和私钥信息的方式。如果没有此功能，就无法在像互联网这样的公共网络上创建安全的加密通道。
- en: You’ll also need an *HMAC signature* to make the process more secure. An HMAC
    signature, used in HMAC authentication and with a secret key, is a method of verifying
    the integrity of a message or payload. Using an HMAC signature in this process
    will maintain the key exchange’s integrity and allow you to verify the keys’ authenticity.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要一个*HMAC签名*来使过程更加安全。HMAC签名用于HMAC认证并配合秘密密钥，是一种验证消息或有效载荷完整性的方法。在这个过程中使用HMAC签名将保持密钥交换的完整性，并允许您验证密钥的真实性。
- en: 'On your VPN server, navigate to your *easy-rsa* directory and generate a shared
    secret key using the `easyrsa` script created earlier:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的VPN服务器上，导航到您的*easy-rsa*目录，并使用之前创建的`easyrsa`脚本生成共享密钥：
- en: '[PRE15]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The `gen-dh` argument ❶ creates the Diffie-Hellman key, which may take a long
    time and generate a lot of output. The `openvpn --gen-key secret` ❷ command quickly
    generates the HMAC signature, and you’ll see no output if it’s successful. These
    processes create the */usr/share/easy-rsa/ta.key* and */usr/share/easy-rsa/pki/dh.pem*
    files. Copy each of them to the OpenVPN configuration directory, */etc/openvpn/*,
    on your OpenVPN server:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`gen-dh`参数❶创建Diffie-Hellman密钥，这可能需要很长时间并产生大量输出。`openvpn --gen-key secret`❷命令快速生成HMAC签名，如果成功，您将不会看到任何输出。这些过程会创建*/usr/share/easy-rsa/ta.key*和*/usr/share/easy-rsa/pki/dh.pem*文件。将它们复制到OpenVPN配置目录*/etc/openvpn/*下：'
- en: '[PRE16]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: At this point, you’ve created all the required certificates and keys for the
    servers.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您已经创建了服务器所需的所有证书和密钥。
- en: Create a Client Certificate
  id: totrans-69
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建客户端证书
- en: 'Next, you’ll need to create client certificates and keys to allow clients to
    connect to the VPN, which are the same as the server certificates but relate to
    each individual client device. The most efficient way to do this is to create
    the necessary files on the server, rather than on the client, which prevents you
    from having to transfer files between devices unnecessarily. On the OpenVPN server,
    create a safe location for the files:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要创建客户端证书和密钥，以便客户端能够连接到VPN，这些证书与服务器证书相同，但与每个单独的客户端设备相关。最有效的方法是在服务器上创建所需的文件，而不是在客户端上创建，这样可以避免不必要的设备间文件传输。在OpenVPN服务器上，为文件创建一个安全位置：
- en: '[PRE17]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Navigate to the *easy-rsa* directory, generate a new certificate request for
    the client, copy the key to the directory you just created, and securely copy the
    request file to your CA server as shown here:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到*easy-rsa*目录，为客户端生成新的证书请求，将密钥复制到您刚才创建的目录，并将请求文件安全地复制到您的CA服务器，如下所示：
- en: '[PRE18]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You’ll be asked for a passphrase for the request; enter one and be sure to save
    it for later reference. You’ll also be asked for a Common Name for your VPN client.
    This name will need to be different for each client that you provide access to
    the VPN, so consider using the client hostname (`myclient` in this example; change
    `myclient` ❶ to the client name of your choice).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 系统会要求您为请求输入密码短语；请输入并确保将其保存以供以后参考。系统还会要求您为VPN客户端输入公共名称。这个名称需要对每个提供VPN访问的客户端不同，因此考虑使用客户端的主机名（例如`myclient`；将`myclient`❶更改为您选择的客户端名称）。
- en: 'On your certificate server, navigate to the *easy-rsa* directory:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的证书服务器上，导航到*easy-rsa*目录：
- en: '[PRE19]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Import the request using the client’s Common Name (`myclient` in this example)
    and then sign it using the `client` directive, rather than the `server` directive
    you used earlier:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用客户端的公共名称（例如`myclient`）导入请求，然后使用`client`指令签署，而不是您之前使用的`server`指令：
- en: '[PRE20]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Confirm that the Common Name is correct and then type `yes` and press enter
    to complete the command.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 确认公共名称是否正确，然后输入`yes`并按回车键完成命令。
- en: 'Finally, securely copy the newly generated certificate back to your OpenVPN
    server:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，将新生成的证书安全地复制回OpenVPN服务器：
- en: $ `sudo rsync -ruhP /usr/share/easy-rsa/pki/issued/myclient.crt` `user@vpn_ip``:/tmp/`
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: $ `sudo rsync -ruhP /usr/share/easy-rsa/pki/issued/myclient.crt` `user@vpn_ip``:/tmp/`
- en: 'For the VPN to function correctly, the *ta.key* and *ca.crt* files you created
    earlier, as well as the *myclient.crt* file, need to be in the client configuration
    directory on the OpenVPN server. On your VPN server, copy those files to the */etc/openvpn/client-configs/keys/*
    directory:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保VPN正常工作，您之前创建的*ta.key*和*ca.crt*文件，以及*myclient.crt*文件，需位于OpenVPN服务器上的客户端配置目录中。在您的VPN服务器上，将这些文件复制到*/etc/openvpn/client-configs/keys/*目录：
- en: '[PRE21]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: And with that, you’ve created the necessary files to connect a client to the
    OpenVPN server. You can repeat this process as many times as necessary. Just be
    sure to change the client name from `myclient` to something else each time you
    generate files for a new client.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 至此，您已创建了连接客户端到 OpenVPN 服务器所需的文件。您可以根据需要多次重复此过程。只需确保每次为新客户端生成文件时，都会将客户端名称从 `myclient`
    更改为其他名称。
- en: '[Configure OpenVPN](nsp-enoka501485-0007.xhtml#rbh0703)'
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[配置 OpenVPN](nsp-enoka501485-0007.xhtml#rbh0703)'
- en: Now that the certificate server is set up, you can configure the OpenVPN server.
    To do so, you’ll copy a template OpenVPN configuration and modify it to suit your
    needs.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 证书服务器设置完成后，您可以配置 OpenVPN 服务器。为此，您将复制一个模板 OpenVPN 配置并根据需要进行修改。
- en: 'On your OpenVPN server, copy the configuration template to the OpenVPN configuration
    directory:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OpenVPN 服务器上，将配置模板复制到 OpenVPN 配置目录：
- en: $ `sudo cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf /etc/openvpn/`
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: $ `sudo cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf /etc/openvpn/`
- en: 'Open the resulting *server.conf* file in a text editor (this example uses nano):'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 使用文本编辑器打开生成的 *server.conf* 文件（本示例使用 nano）：
- en: '[PRE22]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: As with any configuration file, open it and familiarize yourself with its contents.
    You might notice that these configuration files use both `#` and `;` to mark lines
    as comments.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 与任何配置文件一样，打开它并熟悉其内容。您可能会注意到，这些配置文件使用 `#` 和 `;` 来标记注释行。
- en: 'Once you feel comfortable with the options available, you might decide to alter
    the port or protocol your VPN uses. Find the lines that start with `port` or `proto`,
    and notice a semicolon is used to comment out the inactive lines:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您对可用选项感到熟悉，您可能会决定更改 VPN 使用的端口或协议。找到以 `port` 或 `proto` 开头的行，注意分号用于注释掉未激活的行：
- en: '[PRE23]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'OpenVPN can run over either UDP or TCP, but it uses UDP by default, and the
    default port is 1194\. However, you can tell it to run over any port you like,
    but if you make changes, you’ll need to make those same changes in any commands
    or files that follow. Also, make sure that the certificates and keys mentioned
    in this file match your configurations from earlier sections of the chapter:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: OpenVPN 可以通过 UDP 或 TCP 运行，但默认使用 UDP，且默认端口为 1194\。不过，您可以让它运行在任何您喜欢的端口上，但如果您做了更改，您需要在后续的命令或文件中也做相应的更改。另外，确保文件中提到的证书和密钥与您在前面的章节中配置的一致：
- en: '[PRE24]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'When you reach the Diffie-Hellman section, ensure that the file matches the
    one you created earlier; the configuration file lists *dh2048.pem* by default,
    which will need to be changed to *dh.pem*:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 当您到达 Diffie-Hellman 部分时，确保文件与您之前创建的文件匹配；配置文件默认列出 *dh2048.pem*，但您需要将其更改为 *dh.pem*：
- en: '[PRE25]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'In addition, the `redirect-gateway` and `dhcp-option` DNS directives should
    not be commented out, so remove the semicolons at the beginning of those lines:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`redirect-gateway` 和 `dhcp-option` DNS 指令不应被注释掉，因此请删除这些行开头的分号：
- en: '[PRE26]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: These directives ensure that all traffic will traverse the VPN and not the unsecured
    internet. You can leave DNS with the default settings, or you can set it to any
    DNS servers you desire, such as Quad9 (*9.9.9.9*), Google (*8.8.8.8*), or your
    Pi-Hole DNS server if you have one configured as described in [Chapter 7](nsp-enoka501485-0016.xhtml#ch07).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这些指令确保所有流量都会通过 VPN 而不是不安全的互联网。您可以保留 DNS 的默认设置，或者设置为您希望使用的任何 DNS 服务器，如 Quad9
    (*9.9.9.9*)、Google (*8.8.8.8*)，或者如果您有配置的 Pi-Hole DNS 服务器，可以设置为其地址，正如在 [第 7 章](nsp-enoka501485-0016.xhtml#ch07)
    中描述的那样。
- en: 'Next, check that the `tls-auth` directive is set to `0` and not commented out
    with a semicolon and that the `cipher` is set to `AES-256-CBC`. Then, immediately
    after the `cipher` directive, add an `auth` directive:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，检查 `tls-auth` 指令是否设置为 `0`，并确保没有用分号注释掉，同时确认 `cipher` 设置为 `AES-256-CBC`。然后，在
    `cipher` 指令后立即添加一个 `auth` 指令：
- en: '[PRE27]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The `tls-auth` directive ensures that the HMAC signature you configured earlier
    will indeed be used to secure the VPN. Several settings are available for the
    cipher, and AES-256 is a reasonable choice as the encryption offered is good and
    well supported. The `SHA256` indicates the algorithm used for the HMAC message
    digest, meaning the hash calculated will be an SHA256 hash, which is considered
    secure and less prone to hash collisions than some other hashing algorithms.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`tls-auth` 指令确保您之前配置的 HMAC 签名确实会被用于保护 VPN。此处提供了多种加密算法可供选择，AES-256 是一个合理的选择，因为它的加密效果良好且被广泛支持。`SHA256`
    表示用于 HMAC 消息摘要的算法，这意味着计算出的哈希值将是一个 SHA256 哈希，被认为是安全的，并且比其他一些哈希算法更不容易发生哈希冲突。'
- en: 'To make the VPN more secure, remove the semicolons from the `user` and `group`
    directives, which makes the VPN service run with fewer privileges and ideally
    mitigates the risk of privilege escalation attacks:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使VPN更安全，移除`user`和`group`指令中的分号，这样VPN服务将以较少的权限运行，并理想地减轻权限提升攻击的风险：
- en: '[PRE28]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: After making these changes, save and close the configuration file.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些更改后，保存并关闭配置文件。
- en: 'The OpenVPN configuration is complete, but you’ll need to make some changes
    to the server’s network settings. First, you must configure IP forwarding or the
    VPN won’t do anything with the traffic received:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: OpenVPN配置已经完成，但你需要对服务器的网络设置进行一些更改。首先，你必须配置IP转发，否则VPN不会处理接收到的流量：
- en: '[PRE29]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Reload `sysctl` to make the change take effect, as follows.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 重新加载`sysctl`以使更改生效，如下所示。
- en: '[PRE30]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The command may output the lines modified in the *sysctl.conf* file.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令可能会输出在*sysctl.conf*文件中修改的行。
- en: Configure the Firewall
  id: totrans-112
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置防火墙
- en: 'The first step in this process is to find your VPN server’s public network
    interface; your server may have multiple network interfaces, and selecting the
    wrong interface for the following commands would result in a VPN that is unable
    to route traffic to the internet correctly:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程的第一步是找到你VPN服务器的公共网络接口；你的服务器可能有多个网络接口，选择错误的接口会导致VPN无法正确地将流量路由到互联网：
- en: '[PRE31]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: In this output, the network interface is called `ens3`, but yours might be different.
    The *default route* shown by `ip route` will be the public network interface of
    your host. You’ll need this to configure your firewall correctly.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个输出中，网络接口被称为`ens3`，但你的接口可能会不同。`ip route`显示的*默认路由*将是你主机的公共网络接口。你需要这个信息来正确配置防火墙。
- en: 'In most firewalls, the order in which you set your rules is the most important
    consideration. In UFW, rules are evaluated from rule files in the following order:
    first *before.rules*, then *user.rules*, and finally *after.rules*. The firewall
    must correctly identify and push through the VPN traffic, so rules are needed
    at the top of the firewall configuration. To do this in UFW, open the *before.rules*
    file in a text editor:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数防火墙中，你设置规则的顺序是最重要的考虑因素。在UFW中，规则是按照以下顺序从规则文件中评估的：首先是*before.rules*，然后是*user.rules*，最后是*after.rules*。防火墙必须正确识别并通过VPN流量，因此规则需要放在防火墙配置的顶部。要在UFW中做到这一点，打开*before.rules*文件进行编辑：
- en: '[PRE32]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Then add these lines at the top of the file to allow OpenVPN client traffic
    via the public network interface you identified in the previous commands:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在文件顶部添加这些行，以允许通过你在前述命令中识别的公共网络接口传递OpenVPN客户端流量：
- en: '[PRE33]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The network *10.8.0.0/24* indicates the addresses that clients connecting to
    your VPN will be assigned. These addresses should be different from the addresses
    used in your network. If you use *192.168.1.x* addresses in your network, do not
    use *192.168.1.x* addresses for your VPN network addressing. As long as your network
    uses addresses other than *10.8.0.x*, the previous configuration is safe to use.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 网络*10.8.0.0/24*表示连接到你VPN的客户端将被分配的地址。这些地址应该与网络中使用的地址不同。如果你的网络使用*192.168.1.x*地址，就不要在VPN网络中使用*192.168.1.x*地址。只要你的网络使用的地址不是*10.8.0.x*，先前的配置就是安全的。
- en: 'Save and close the file. UFW also needs to accept, rather than drop, forwarded
    packets. You can allow this by changing the UFW configuration file:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并关闭文件。UFW还需要接受转发的数据包，而不是丢弃它们。你可以通过修改UFW配置文件来允许这一点：
- en: '[PRE34]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Finally, the firewall needs to allow the port and protocol used for the VPN
    to send and receive traffic, as well as SSH for server administration. Enter the
    following command to allow the correct port and protocol based on the configurations
    you set in *etc/openvpn/server.conf*:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，防火墙需要允许VPN使用的端口和协议发送和接收流量，以及用于服务器管理的SSH。根据你在*etc/openvpn/server.conf*中设置的配置，输入以下命令以允许正确的端口和协议：
- en: '[PRE35]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Next, allow OpenSSH:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，允许OpenSSH：
- en: '[PRE36]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Restart the firewall for the changes to take effect permanently:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 重启防火墙以使更改永久生效：
- en: '[PRE37]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Your SSH connection might be interrupted as the firewall restarts, and you may
    need to log in again.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在防火墙重启时，你的SSH连接可能会中断，你可能需要重新登录。
- en: Start the VPN
  id: totrans-130
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 启动VPN
- en: 'At this point, you’re ready to start the VPN. Do so using `systemctl`, the
    utility used to control services in Ubuntu, passing it your server’s Common Name:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 到此，你准备好启动VPN了。使用`systemctl`来启动VPN，这是一个用于控制Ubuntu服务的工具，传递你的服务器的公共名称：
- en: '[PRE38]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Check the VPN’s status:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 检查VPN的状态：
- en: '[PRE39]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: If it’s working properly, the output should say `active (running)`.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果正常工作，输出应该显示`active (running)`。
- en: 'Press Q to return to the terminal and then make the VPN start whenever the
    server boots:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 按Q返回终端，然后设置VPN在服务器启动时自动启动：
- en: '[PRE40]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Your VPN should now be up and running and ready for client connections.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 你的VPN现在应该已经启动并运行，并准备好接收客户端连接。
- en: Configure a VPN Client
  id: totrans-139
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置VPN客户端
- en: Clients must have *.ovpn* files configured to connect to the VPN server and
    send and receive traffic across the secure tunnel. Creating these configurations
    can be tedious if you have several clients to connect, so we’ll use an easily
    repeatable procedure to do it for us. We’ll generate configuration files on the
    OpenVPN server and then transfer those configuration files to the relevant clients.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端必须配置*.ovpn*文件才能连接到VPN服务器，并通过安全隧道发送和接收流量。如果你有多个客户端需要连接，创建这些配置文件可能会很繁琐，因此我们将使用一个容易重复的程序来为我们完成这项工作。我们将在OpenVPN服务器上生成配置文件，然后将这些配置文件传输到相关客户端。
- en: 'On your OpenVPN server, create a safe location for the client configuration
    files (such as */etc/openvpn/client-configs/files/*), copy another template provided
    by OpenVPN, and open the resulting *base.conf* file in a text editor:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的OpenVPN服务器上，为客户端配置文件创建一个安全的位置（如*/etc/openvpn/client-configs/files/*），复制OpenVPN提供的另一个模板，并用文本编辑器打开生成的*base.conf*文件：
- en: '[PRE41]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Familiarize yourself with the file’s contents. If you made changes to the port
    or protocol in previous steps, make the same changes in this file.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 熟悉文件内容。如果你在前面的步骤中更改了端口或协议，请在此文件中进行相同的更改。
- en: '[PRE42]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Also, uncomment the `user` and `group` directives:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，取消注释`user`和`group`指令：
- en: '[PRE43]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Comment out the SSL/TLS parameters:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 注释掉SSL/TLS参数：
- en: '[PRE44]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Comment out the `tls-auth` directive:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 注释掉`tls-auth`指令：
- en: '[PRE45]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Set the `cipher` and `auth` directives to the values found in the other configuration
    files:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 将`cipher`和`auth`指令设置为在其他配置文件中找到的值：
- en: '[PRE46]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Finally, add the following line to the end of the file:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在文件末尾添加以下内容：
- en: '[PRE47]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The `key-direction` directive indicates to the client which device in the client-server
    pair will provide the key and therefore the encryption for the VPN tunnel. This
    can be set to either `0` or `1`, but this configuration should be set to `1`,
    as this should provide better overall security by forcing different keys to be
    used for client-server and server-client communication. Save and close the file.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`key-direction`指令指示客户端在客户端-服务器对中哪一方将提供密钥，因此为VPN隧道提供加密。该值可以设置为`0`或`1`，但此配置应设置为`1`，因为这将通过强制客户端-服务器和服务器-客户端通信使用不同的密钥来提供更好的整体安全性。保存并关闭文件。'
- en: 'You can easily create client configurations by writing and executing a script
    to pull all of these elements together. Create an *.sh* file in which to put your
    script, make it executable, and then open it with a text editor (nano in this
    example):'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过编写并执行脚本来轻松创建客户端配置，将所有这些元素整合在一起。创建一个*.sh*文件来放置你的脚本，赋予它可执行权限，然后用文本编辑器打开它（此例中使用nano）：
- en: '[PRE48]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Copy the script in [Listing 5-1](nsp-enoka501485-0014.xhtml#lis0501) into the
    file.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 将[列表5-1](nsp-enoka501485-0014.xhtml#lis0501)中的脚本复制到文件中。
- en: '[PRE49]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Listing 5-1: A script for generating client configuration (*.ovpn*) file'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 列表5-1：用于生成客户端配置（*.ovpn*）文件的脚本
- en: Save and close the file. The first line tells bash that what follows in this
    file is a script. The next three lines are variables, which you can modify if
    your key directory, output directory, or base config files and folders are different
    from the examples in this chapter.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并关闭文件。第一行告诉bash，后续内容是脚本。接下来的三行是变量，如果你的密钥目录、输出目录或基础配置文件和文件夹与本章中的示例不同，可以在此处修改。
- en: Execute the script from within the *client-configs* directory as shown in [Listing
    5-2](nsp-enoka501485-0014.xhtml#lis0502), with a client name as the only parameter.
    The client name should match one in the certificate and key files you created
    in earlier steps. To generate configuration files for further clients, be sure
    to generate their certificates and keys, and then use those files to create the
    relevant *.ovpn* file for that client with the script in [Listing 5-1](nsp-enoka501485-0014.xhtml#lis0501).
    Don’t forget this entails creating a certificate request, transferring it to your
    certificate server for signing, and then transferring it back to your VPN server,
    in the *client-configs* directory.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 按照[列表 5-2](nsp-enoka501485-0014.xhtml#lis0502)中所示，在*client-configs*目录中执行脚本，客户端名称作为唯一参数。客户端名称应与之前步骤中创建的证书和密钥文件中的名称匹配。要为其他客户端生成配置文件，请确保生成它们的证书和密钥，然后使用这些文件通过[列表
    5-1](nsp-enoka501485-0014.xhtml#lis0501)中的脚本为该客户端创建相应的*.ovpn*文件。别忘了，这涉及到创建证书请求、将其传输到证书服务器签名，然后将其传输回VPN服务器，放置在*client-configs*目录中。
- en: '[Listing 5-2](nsp-enoka501485-0014.xhtml#lis0502) shows a run of the script
    for the `myclient` client, and a command to list the resulting file.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 5-2](nsp-enoka501485-0014.xhtml#lis0502)展示了对`myclient`客户端执行脚本，并列出了生成文件的命令。'
- en: '[PRE50]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Listing 5-2: Executing the script from [Listing 5-1](nsp-enoka501485-0014.xhtml#lis0501)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 5-2：执行来自[列表 5-1](nsp-enoka501485-0014.xhtml#lis0501)的脚本
- en: Once the *.ovpn* file is created for this client, download the file to your
    local machine via rsync and then import it into the OpenVPN client for that device.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦为该客户端创建了*.ovpn*文件，通过rsync将文件下载到本地计算机，然后将其导入到该设备的OpenVPN客户端中。
- en: '[PRE51]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'OpenVPN has client applications for most operating systems, including Windows,
    Linux, macOS, iOS, and Android. You can find these on the OpenVPN website: [https://openvpn.net/community-downloads/](https://openvpn.net/community-downloads/).'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: OpenVPN为大多数操作系统提供客户端应用程序，包括Windows、Linux、macOS、iOS和Android。你可以在OpenVPN官网找到这些应用：[https://openvpn.net/community-downloads/](https://openvpn.net/community-downloads/)。
- en: 'With that done, you can now import the *.ovpn* configuration file, connect
    to your VPN, and use the internet in a much more private and secure manner. If
    you plan to connect to your VPN using a Linux client, you can install OpenVPN
    using the following command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，你现在可以导入*.ovpn*配置文件，连接到VPN，并以更私密、更安全的方式上网。如果你计划使用Linux客户端连接到VPN，可以使用以下命令安装OpenVPN：
- en: '[PRE52]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Then, connect to your VPN using your configuration file and this command:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用你的配置文件和以下命令连接到VPN：
- en: '[PRE53]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: See “[Test Your VPN](nsp-enoka501485-0014.xhtml#ah0705)” on [page 89](nsp-enoka501485-0014.xhtml#p89)
    for additional testing you can do to ensure your VPN is secure.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅“[测试你的VPN](nsp-enoka501485-0014.xhtml#ah0705)”在[第89页](nsp-enoka501485-0014.xhtml#p89)了解更多可以确保VPN安全性的测试方法。
- en: '[#20: Creating a VPN with Wireguard](nsp-enoka501485-0007.xhtml#rhd0702)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '[#20: 使用Wireguard创建VPN](nsp-enoka501485-0007.xhtml#rhd0702)'
- en: Modern versions of Ubuntu (those from March 2020 onward) have Wireguard built
    into the kernel, so it’s simple to install and get up and running. Wireguard isn’t
    built into a lot of networking hardware at this stage, so you’ll have to configure
    each of your endpoints to connect to it manually, rather than simply configuring
    your router and passing all network traffic through the VPN tunnel. In this project,
    you’ll create a Wireguard server using the instructions to create a virtual machine
    in the cloud, and then you’ll install and configure Wireguard. We’ll create the
    relevant public and private key pairs for the server and any clients, configure
    the server firewall as required, configure and connect a client, and test the
    VPN to ensure that it’s working correctly. Your internet traffic will then be
    safe and secure, as long as you’re connected to your Wireguard VPN.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现代版本的Ubuntu（从2020年3月开始的版本）已经将Wireguard集成到内核中，因此安装和启动非常简单。此时，Wireguard并未集成到许多网络硬件中，因此你需要手动配置每个端点来连接到它，而不是像配置路由器并通过VPN隧道传递所有网络流量那样简单。在这个项目中，你将按照创建云端虚拟机的说明，创建一个Wireguard服务器，然后安装和配置Wireguard。我们将为服务器及任何客户端创建相应的公钥和私钥对，按需配置服务器防火墙，配置并连接客户端，并测试VPN以确保它正常工作。只要你连接到Wireguard
    VPN，互联网流量就会变得安全可靠。
- en: '[Installing Wireguard](nsp-enoka501485-0007.xhtml#rbh0704)'
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[安装Wireguard](nsp-enoka501485-0007.xhtml#rbh0704)'
- en: 'Create a new Ubuntu server using the instructions provided in [Project 3](nsp-enoka501485-0010.xhtml#hd0303)
    in [Chapter 1](nsp-enoka501485-0010.xhtml#ch01). Log in to the server via SSH
    as a standard, non-root user:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[第1章](nsp-enoka501485-0010.xhtml#ch01)中的[项目3](nsp-enoka501485-0010.xhtml#hd0303)提供的说明创建一个新的Ubuntu服务器。通过SSH以标准用户（非root用户）登录服务器：
- en: '[PRE54]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Then, use `apt` to install Wireguard, specifying `-y` to skip the confirmation
    prompt:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用`apt`安装Wireguard，并指定`-y`跳过确认提示：
- en: '[PRE55]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Next, you’ll create the necessary public and private keys required to connect
    to and encrypt your VPN.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将创建连接和加密VPN所需的公钥和私钥。
- en: '[Set Up the Key Pairs](nsp-enoka501485-0007.xhtml#rbh0705)'
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[设置密钥对](nsp-enoka501485-0007.xhtml#rbh0705)'
- en: 'Due to the sensitive nature of the files or folders you’re about to create,
    it’s wise to enforce more restrictive permissions than usual. You can run the
    following command to ensure that only the owner of a file can read and write to
    that file:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 由于您即将创建的文件或文件夹具有敏感性，建议比平常更加严格地设置权限。您可以运行以下命令，确保只有文件的所有者可以读取和写入该文件：
- en: '[PRE56]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: This `umask` command won’t last after you exit the terminal session, but only
    the owner is allowed to read and write to the folders and files you create during
    this session.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这个`umask`命令在退出终端会话后不会持续有效，但仅允许文件和文件夹的所有者在此会话中读取和写入您创建的文件和文件夹。
- en: 'Now, using the `wg genkey` command, create the private Wireguard key:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用`wg genkey`命令创建私有的Wireguard密钥：
- en: '[PRE57]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: The output shown in the terminal is your private key, which will be stored in
    the *private.key* file specified in the command. Do not share this key. Treat
    it like a password—it’s how your VPN will be secured.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 终端中显示的输出是您的私钥，它将存储在命令指定的*private.key*文件中。请勿共享此密钥。像对待密码一样对待它——它是您VPN安全的保障。
- en: 'With the private key created, you’ll need a corresponding public key to provide
    to your clients so they can authenticate to the server:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 创建私钥后，您需要一个相应的公钥提供给您的客户端，以便他们可以进行服务器身份验证：
- en: $ `sudo cat /etc/wireguard/private.key | wg pubkey | sudo tee /etc/wireguard/public.key`
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: $ `sudo cat /etc/wireguard/private.key | wg pubkey | sudo tee /etc/wireguard/public.key`
- en: This command first reads the contents of the *private.key* file using `cat`.
    Then, the `wg pubkey` command uses the private key to generate the public key.
    The public key is then output to the terminal and saved to the *public.key* file.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令首先使用`cat`读取*private.key*文件的内容。然后，`wg pubkey`命令使用私钥生成公钥。公钥随后输出到终端并保存到*public.key*文件中。
- en: Now that you have your public/private key pair, you can configure your VPN server
    and clients.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经拥有公钥/私钥对，可以配置您的VPN服务器和客户端。
- en: '[Configure Wireguard](nsp-enoka501485-0007.xhtml#rbh0706)'
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[配置Wireguard](nsp-enoka501485-0007.xhtml#rbh0706)'
- en: 'Wireguard requires a configuration file to function. This file is not created
    when Wireguard is installed, so you need to create one from scratch. Create and
    open the */etc/wireguard/wg0.conf* file using a text editor:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Wireguard需要一个配置文件才能运行。安装Wireguard时并不会创建此文件，因此您需要从头开始创建一个。使用文本编辑器创建并打开*/etc/wireguard/wg0.conf*文件：
- en: '[PRE58]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Add the following contents to the file:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下内容添加到文件中：
- en: '[PRE59]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Replace *your_private_key* with the private key you created earlier. Your key
    will be the contents of your */etc/wireguard/private.key* file. The address will
    be the address of your server within the subnet you want your VPN clients to be
    assigned when they connect to your server; ensure that this subnet is different
    from your private network. For example, if you use *192.168.1.x* addresses in
    your network, avoid using *192.168.1.x* addresses for your VPN. The listening
    port should be any port between 1025 and 65535, chosen at random. This port is
    the one your server and clients will use to communicate. Once complete, save and
    exit the configuration file.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 将*your_private_key*替换为您之前创建的私钥。您的密钥将是*/etc/wireguard/private.key*文件的内容。地址将是您希望VPN客户端连接到服务器时分配的子网地址；确保该子网与您的私有网络不同。例如，如果您在网络中使用*192.168.1.x*地址，则避免在VPN中使用*192.168.1.x*地址。监听端口应该是1025到65535之间的任意端口，随机选择。这个端口是您的服务器和客户端用来通信的端口。完成后，保存并退出配置文件。
- en: 'At this point, the server’s network settings require some modification. Configure
    IP forwarding so the VPN will forward the traffic it receives using the following
    command and then restart `sysctl` so that the changes take effect:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，服务器的网络设置需要一些修改。使用以下命令配置IP转发，使VPN能够转发其接收到的流量，然后重启`sysctl`以使更改生效：
- en: '[PRE60]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Next, you need to configure the firewall to allow VPN traffic to ingress and
    egress the server.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要配置防火墙以允许 VPN 流量进入和离开服务器。
- en: Configure the Firewall
  id: totrans-202
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置防火墙
- en: 'In this section we’ll discuss the use of the *Uncomplicated Firewall (UFW)*,
    Ubuntu’s built-in firewall that is designed to reduce the complexity of firewall
    configuration. To configure the firewall, first identify the correct network interface
    for the VPN. Specifying the wrong interface will result in a nonfunctional VPN.
    Enter the following command to locate your server’s default network interface:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论 *简单防火墙（UFW）* 的使用，这是 Ubuntu 内置的防火墙，旨在简化防火墙配置。要配置防火墙，首先需要识别 VPN 的正确网络接口。指定错误的接口将导致
    VPN 无法正常工作。输入以下命令来查找服务器的默认网络接口：
- en: '[PRE61]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: In this output, the network interface is called `ens33` (yours might be different).
    The *default route* shown by `ip route` will be your host’s public network interface.
    You’ll need this to configure your firewall correctly.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在此输出中，网络接口名为 `ens33`（你的可能不同）。`ip route` 显示的 *默认路由* 将是你主机的公共网络接口。你需要这个信息来正确配置防火墙。
- en: 'Next, add the following rules to the bottom of your Wireguard configuration
    file by opening */etc/wireguard/wg0.conf* with a text editor again and replacing
    `ens33` with your network interface name:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，通过再次使用文本编辑器打开 */etc/wireguard/wg0.conf* 文件，并将 `ens33` 替换为你的网络接口名，向 Wireguard
    配置文件的底部添加以下规则：
- en: '[PRE62]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Save and close the file. This allows Wireguard to modify the firewall configuration
    after Wireguard starts and before it stops to enable the VPN to function correctly.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并关闭文件。这允许 Wireguard 在启动后和停止前修改防火墙配置，以便 VPN 正常工作。
- en: 'Additionally, you need to allow traffic via the listening port you configured
    earlier in the chapter (port 26535 in the example):'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你需要允许通过你在本章早些时候配置的监听端口（示例中的端口为 26535）进行流量传输：
- en: '[PRE63]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Next, allow OpenSSH:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，允许 OpenSSH：
- en: '[PRE64]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Finally, with this rule updated, you need to disable and enable UFW to reload
    the rules (your SSH session might be interrupted, and you may need to log in again):'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，更新规则后，你需要禁用并启用 UFW 以重新加载规则（你的 SSH 会话可能会被中断，你可能需要重新登录）：
- en: '[PRE65]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: And with that, your firewall configuration is complete.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 至此，你的防火墙配置已经完成。
- en: Identify the DNS Server
  id: totrans-216
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 识别 DNS 服务器
- en: 'To secure your internet traffic, your VPN needs to have correctly configured
    DNS to prevent DNS leaks, which can compromise your security. To solve this problem,
    you’ll force your Wireguard VPN to use the DNS that’s used by the Wireguard server
    itself. Identify that DNS server(s) with the following command:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保你的互联网流量安全，VPN 需要正确配置 DNS，以防止 DNS 泄漏，因为这可能会危及你的安全。为了解决这个问题，你将强制 Wireguard
    VPN 使用 Wireguard 服务器本身使用的 DNS。通过以下命令识别该 DNS 服务器：
- en: '[PRE66]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: The resulting output is the DNS address you will provide to the client in its
    configuration later in this project—take note of it.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 结果输出是你稍后在此项目中将提供给客户端的 DNS 地址——记下来。
- en: Start the VPN
  id: totrans-220
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 启动 VPN
- en: 'Ideally, the VPN should start and be ready to accept client connections whenever
    the server starts up. You can achieve this by creating and starting a Wireguard
    system service using `systemctl`:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，VPN 应该在服务器启动时自动启动并准备好接受客户端连接。你可以通过使用 `systemctl` 创建并启动 Wireguard 系统服务来实现这一点：
- en: '[PRE67]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Once done, check the status to ensure Wireguard is running:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，检查状态以确保 Wireguard 正在运行：
- en: '[PRE68]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: If it’s working properly, the output should say `active`. If the service is
    not active or has a failed status, double-check your configuration file and firewall
    status to ensure there are no typos or other errors in your configuration.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 如果正常工作，输出应该显示 `active`。如果服务未激活或状态为失败，仔细检查配置文件和防火墙状态，确保配置中没有拼写错误或其他问题。
- en: Configure a VPN Client
  id: totrans-226
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置 VPN 客户端
- en: There are official client applications available for Wireguard for Windows,
    macOS, Android, and iOS—the setup of which is reasonably similar across the board.
    The Linux client setup is a little more involved, but if you’ve been able to configure
    the Wireguard server successfully, configuring a Linux client will seem very familiar.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: Wireguard 为 Windows、macOS、Android 和 iOS 提供了官方客户端应用程序——它们的设置过程大致相同。Linux 客户端的设置稍微复杂一些，但如果你已经成功配置了
    Wireguard 服务器，配置 Linux 客户端应该非常熟悉。
- en: Windows, macOS, Android, or iOS Client Configuration
  id: totrans-228
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Windows、macOS、Android 或 iOS 客户端配置
- en: 'To configure a client on any of these operating systems, follow these steps:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 要在任何这些操作系统上配置客户端，请按照以下步骤操作：
- en: 1\. Download and install the relevant client program from [https://www.wireguard.com/install/](https://www.wireguard.com/install/).
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1\. 从 [https://www.wireguard.com/install/](https://www.wireguard.com/install/)
    下载并安装相关客户端程序。
- en: 2\. In the client interface, click **+** or **Add Tunnel▸Add Empty Tunnel**
    to create a new VPN profile from scratch.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2\. 在客户端界面中，点击 **+** 或 **添加隧道▸添加空隧道** 来从头创建一个新的 VPN 配置文件。
- en: 3\. Note that the public and private keys for the client are displayed.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3\. 请注意，客户端的公钥和私钥将显示出来。
- en: 4\. Supply a friendly name in the Name field.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 4\. 在名称字段中提供一个友好的名称。
- en: 5\. Ignore any On Demand settings or check boxes.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 5\. 忽略任何按需设置或勾选框。
- en: '6\. Add the following details to the configuration, below the PrivateKey automatically
    generated for the client:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 6\. 在配置文件中添加以下详细信息，位于客户端自动生成的 PrivateKey 下方：
- en: '[PRE69]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '`Address` is the IP address you want your client to have within the VPN subnet
    and should be different for every VPN client. `DNS` should be the IP address of
    the DNS server you identified in “[Identify the DNS Server](nsp-enoka501485-0014.xhtml#ch0706)”
    on [page 85](nsp-enoka501485-0014.xhtml#p85). `PublicKey` is the public key you
    created for your Wireguard server earlier in the process. `AllowedIPs` is a setting
    used for *split tunneling*; traffic to and from the networks or addresses listed
    with this directive will be sent through the VPN tunnel, and all other traffic
    will go straight out and circumvent the VPN. Setting this to `0.0.0.0/0` sends
    all traffic from your client through the VPN. `Endpoint` is the public IP address
    of your VPN server, followed by the listening port you specified earlier (26535
    in the example).'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Address` 是您希望客户端在 VPN 子网中使用的 IP 地址，每个 VPN 客户端的地址应该不同。`DNS` 应该是您在 “[识别 DNS
    服务器](nsp-enoka501485-0014.xhtml#ch0706)”中确定的 DNS 服务器的 IP 地址，详见 [第 85 页](nsp-enoka501485-0014.xhtml#p85)。`PublicKey`
    是您在之前的过程中为 Wireguard 服务器创建的公钥。`AllowedIPs` 是用于 *分割隧道* 的设置；列在此指令中的网络或地址之间的流量将通过
    VPN 隧道传输，其他所有流量则会直接出去，绕过 VPN。将其设置为 `0.0.0.0/0` 将使所有来自客户端的流量都通过 VPN 传输。`Endpoint`
    是您的 VPN 服务器的公共 IP 地址，后跟您之前指定的监听端口（在示例中为 26535）。'
- en: 7\. Save the configuration.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 7\. 保存配置。
- en: '8\. On the Wireguard server, stop the Wireguard service, noting that there
    will be downtime for any users currently connected, using the following:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 8\. 在 Wireguard 服务器上停止 Wireguard 服务，注意此操作会导致当前连接的用户出现停机，使用以下命令：
- en: '[PRE70]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '9\. Open the */etc/wireguard/wg0.conf* configuration file with a text editor:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 9\. 使用文本编辑器打开 */etc/wireguard/wg0.conf* 配置文件：
- en: '[PRE71]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '10\. Add the client details to the bottom of the configuration file, keeping
    in mind that each peer you add will need its own [Peer] section added to this
    file:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 10\. 将客户端的详细信息添加到配置文件的底部，请记住，每个添加的对等端都需要在此文件中添加自己的 [Peer] 部分：
- en: '[PRE72]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: This instance of `PublicKey` is the public key created for your Wireguard client
    by the client application. Within the `[Peer]` section of the file, `AllowedIPs`
    refers to the IP addresses allowed to send traffic through the VPN tunnel. Set
    this to the specific host IP you want your client to have on the VPN network,
    which must match the IP you configured for this peer in the client configuration.
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个 `PublicKey` 实例是由客户端应用程序为您的 Wireguard 客户端创建的公钥。在文件的 `[Peer]` 部分，`AllowedIPs`
    指定了允许通过 VPN 隧道发送流量的 IP 地址。将其设置为您希望客户端在 VPN 网络上使用的特定主机 IP，必须与您在客户端配置中为此对等端配置的 IP
    相匹配。
- en: 11\. Save and close the file.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 11\. 保存并关闭文件。
- en: '12\. Start the Wireguard service and double-check that the status says `active`:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 12\. 启动 Wireguard 服务，并再次检查状态是否为 `active`：
- en: '[PRE73]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Back on your client, activate the VPN connection. Once successfully connected,
    ping your Wireguard server’s VPN address (such as 10.8.0.1):'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回您的客户端，激活 VPN 连接。成功连接后，ping 您的 Wireguard 服务器的 VPN 地址（例如 10.8.0.1）：
- en: '[PRE74]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: A successful result indicates your VPN connection is working between your client
    and server. Repeat this process for any additional clients.
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 成功的结果表示您的 VPN 连接在客户端和服务器之间工作正常。对任何额外的客户端，重复此过程。
- en: Linux Client
  id: totrans-252
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Linux 客户端
- en: 'To configure a Linux client, follow these steps:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 配置 Linux 客户端，按照以下步骤进行操作：
- en: '1\. Install Wireguard and resolvconf (used for DNS configuration):'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1\. 安装 Wireguard 和 resolvconf（用于 DNS 配置）：
- en: '[PRE75]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '2\. Generate the client public/private key pair for the client:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2\. 为客户端生成公钥/私钥对：
- en: '[PRE76]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '3\. Create the Wireguard client configuration file:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3\. 创建 Wireguard 客户端配置文件：
- en: '[PRE77]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 4\. Save and close the file.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 4\. 保存并关闭文件。
- en: '5\. On the Wireguard server, stop the Wireguard service:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 5\. 在 Wireguard 服务器上停止 Wireguard 服务：
- en: '[PRE78]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '6\. Open the */etc/wireguard/wg0.conf* configuration file with a text editor:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 6\. 使用文本编辑器打开 */etc/wireguard/wg0.conf* 配置文件：
- en: '[PRE79]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '7\. Add the client details to the bottom of the configuration file:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 7\. 将客户端详细信息添加到配置文件的底部：
- en: '[PRE80]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: This instance of `PublicKey` is the public key created for your Wireguard client
    by the client application. Within the `[Peer]` section of the file, `AllowedIPs`
    refers to the IP addresses allowed to send traffic through the VPN tunnel. Set
    this to the specific host IP you want your client to have on the VPN network.
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此处的 `PublicKey` 是由客户端应用程序为你的 Wireguard 客户端生成的公钥。在文件的 `[Peer]` 部分，`AllowedIPs`
    指的是允许通过 VPN 隧道发送流量的 IP 地址。将其设置为你希望客户端在 VPN 网络中拥有的特定主机 IP。
- en: 8\. Save and close the file.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 8\. 保存并关闭文件。
- en: '9\. Start the Wireguard service and double-check that the status says active:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 9\. 启动 Wireguard 服务并仔细检查状态是否为“活动”：
- en: '[PRE81]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Back on your client, activate the VPN connection using the following command:'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回客户端，使用以下命令激活 VPN 连接：
- en: '[PRE82]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Once successfully connected, ping your Wireguard server’s VPN address (such
    as 10.8.0.1). A successful result indicates your VPN connection is working between
    your client and server. To disconnect a Linux client from your VPN server, use
    the following command:'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 成功连接后，ping 你的 Wireguard 服务器的 VPN 地址（例如 10.8.0.1）。如果测试成功，表示你的 VPN 连接在客户端和服务器之间正常工作。要断开
    Linux 客户端与 VPN 服务器的连接，可以使用以下命令：
- en: '[PRE83]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Repeat this process for any additional clients you want to add.
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对任何其他要添加的客户端重复此过程。
- en: '[Test Your VPN](nsp-enoka501485-0007.xhtml#rah0705)'
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[测试你的 VPN](nsp-enoka501485-0007.xhtml#rah0705)'
- en: Regardless of which VPN you chose, find your public IP address from a website
    such as [https://www.whatismyip.com/](https://www.whatismyip.com/) while not connected
    to the VPN. Once done, connect to your VPN and refresh the page. Your public IP
    address should now be the IP address of your VPN server. Another way to test your
    VPN is to use a service such as DNS leak at [https://dnsleaktest.com/](https://dnsleaktest.com/).
    Performing a standard test should show you clearly whether there are any issues
    with your VPN configuration. If your actual public IP is masked and the DNS leak
    test shows only the DNS servers you’ve configured the VPN to use, then you’ve
    been successful in setting up your own private VPN server.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你选择了哪个 VPN，都可以通过像 [https://www.whatismyip.com/](https://www.whatismyip.com/)
    这样的网站，在未连接 VPN 时找到你的公共 IP 地址。完成后，连接到 VPN 并刷新页面。此时，你的公共 IP 地址应该变成 VPN 服务器的 IP 地址。另一个测试
    VPN 的方法是使用像 [https://dnsleaktest.com/](https://dnsleaktest.com/) 这样的服务。进行标准测试后，你应该能清楚地看到
    VPN 配置是否存在问题。如果你的实际公共 IP 地址被隐藏，并且 DNS 泄漏测试只显示了你配置的 DNS 服务器，那么说明你已成功搭建了自己的私人 VPN
    服务器。
- en: '[Summary](nsp-enoka501485-0007.xhtml#rah0706)'
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[总结](nsp-enoka501485-0007.xhtml#rah0706)'
- en: Connecting multiple clients to either your OpenVPN or Wireguard servers will
    allow traffic to pass between them as if they were on the same network. This means
    you can easily manage multiple devices remotely simply by having them all connected
    to your VPN at the same time. This chapter covered setting up your own private
    VPN, which provides you with complete control, using either OpenVPN or the much
    lighter and faster Wireguard. Your private internet traffic will now be truly
    private and secure while you are connected to your VPN.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 将多个客户端连接到你的 OpenVPN 或 Wireguard 服务器将允许它们之间的流量像在同一网络上一样传递。这意味着你可以轻松地通过同时将多个设备连接到你的
    VPN，来远程管理这些设备。本章讲解了如何搭建你自己的私人 VPN，使用 OpenVPN 或更加轻量、快速的 Wireguard，给你完全的控制权。通过连接到
    VPN，你的私人互联网流量将变得真正安全和私密。
