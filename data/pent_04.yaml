- en: Chapter 2. Using Kali Linux
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第2章. 使用Kali Linux
- en: You will use Kali Linux as the attack platform throughout this book. Kali, the
    successor to the popular BackTrack Linux, is a Debian-based distribution that
    comes with a plethora of penetration testing tools preinstalled and preconfigured.
    Anyone who’s ever tried to set up a pentesting box from scratch the day before
    a big engagement knows that getting everything working correctly can be a real
    pain. Having everything preconfigured in Kali can save a lot of time and headaches.
    Kali Linux works just like the standard Debian GNU/Linux distribution, with a
    lot of extra tools.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，你将使用Kali Linux作为攻击平台。Kali是流行的BackTrack Linux的继任者，它是基于Debian的发行版，预装并预配置了大量渗透测试工具。任何曾经尝试在大型任务前一天从零开始设置渗透测试盒子的人都知道，要让一切正常工作真的是一件很麻烦的事。Kali预先配置好的一切可以节省很多时间和麻烦。Kali
    Linux的工作方式与标准的Debian GNU/Linux发行版一样，只是多了很多额外的工具。
- en: Rather than point and click your way through Kali, you’ll use the Linux command
    line because that’s where the real power lies. In this chapter we’ll look at how
    to perform some common Linux tasks from the command line. If you’re already a
    Linux expert, you can skip this chapter and move on to [Chapter 3](ch03.xhtml
    "Chapter 3. Programming"); if not, take some time and dive in.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与其在Kali中点点鼠标，不如使用Linux命令行，因为真正的力量就在其中。在本章中，我们将介绍如何通过命令行执行一些常见的Linux任务。如果你已经是Linux专家，可以跳过本章，直接阅读[第3章](ch03.xhtml
    "Chapter 3. 编程")；如果不是，花些时间深入了解一下吧。
- en: Linux Command Line
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux命令行
- en: 'The Linux command line looks like this:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Linux命令行如下所示：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Like a DOS prompt or the Mac OS terminal, the Linux command line gives you access
    to a command processor called Bash that allows you to control the system by entering
    text-based instructions. When you open the command line you’ll see the prompt
    `root@kali#`. *Root* is the superuser on Linux systems, and it has complete control
    of Kali.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于DOS提示符或Mac OS终端，Linux命令行通过一个叫做Bash的命令处理器让你输入文本指令，从而控制系统。当你打开命令行时，你会看到提示符`root@kali#`。*Root*是Linux系统上的超级用户，拥有对Kali的完全控制权限。
- en: To perform operations in Linux, you enter commands along with any relevant options.
    For example, to view the contents of root’s home directory, enter the command
    **`ls`** as shown here.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中执行操作时，你需要输入命令以及相关的选项。例如，要查看root的主目录内容，可以输入如下面所示的命令**`ls`**。
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As you can see, there’s not much in the root directory, only a folder called
    *Desktop*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，根目录下没有太多东西，只有一个叫做*Desktop*的文件夹。
- en: The Linux Filesystem
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux文件系统
- en: 'In the Linux world, everything is a file: keyboards, printers, network devices—everything.
    All files can be viewed, edited, deleted, created, and moved. The Linux filesystem
    is made up of a series of directories that branch off from the root of the filesystem
    (`/`).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux世界里，一切皆文件：键盘、打印机、网络设备——所有的东西都可以视为文件。所有文件都可以查看、编辑、删除、创建和移动。Linux文件系统由一系列从文件系统根目录（`/`）分支出来的目录组成。
- en: 'To see your current directory, enter **`pwd`** at the terminal:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看当前目录，可以在终端输入**`pwd`**：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Changing Directories
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 切换目录
- en: To move to another directory, enter `cd` *`directory`* using either the absolute
    or relative path to the new directory, based your current location. The *absolute
    path* is the path to a file in relation to the root directory (`/`). For example,
    to change to your desktop from anywhere, you could enter the absolute path to
    the desktop with `cd /root/Desktop` to reach the root user’s desktop. If you were
    in the directory */root* (the root user’s home directory), you could use the *relative
    path* to the desktop (that is, relative to your current location) by entering
    `cd Desktop`, which would also take you to the desktop.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要切换到另一个目录，可以使用绝对路径或相对路径，输入`cd` *`directory`*，具体路径根据你当前的位置来决定。*绝对路径*是指相对于根目录（`/`）的文件路径。例如，要从任何地方切换到桌面，你可以输入绝对路径`cd
    /root/Desktop`来进入根用户的桌面。如果你当前所在的目录是*/root*（根用户的主目录），你可以使用桌面的*相对路径*（即相对于当前位置）输入`cd
    Desktop`，这也会把你带到桌面。
- en: The command `cd ..` takes you back one level in the filesystem, as shown here.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 命令`cd ..`会让你返回到文件系统的上一级，如下所示。
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Entering `cd ..` from root’s *Desktop* directory takes us back to root’s home
    directory. Entering `cd ../etc` from there moves us back up to the root of the
    filesystem and then to the */etc* directory.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 从root的*Desktop*目录输入`cd ..`可以返回到root的主目录。从那里输入`cd ../etc`会让你回到文件系统的根目录，然后进入*/etc*目录。
- en: 'Learning About Commands: The Man Pages'
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习命令：手册页
- en: To learn more about a command and its options and arguments, you can view its
    documentation (called its *manual page*, or *man page*) by entering `man` *`command`*.
    For example, to learn more about the `ls` command enter **`man ls`** as shown
    in [Example 2-1](ch02.xhtml#linux_man_page "Example 2-1. Linux man page").
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于命令及其选项和参数的信息，你可以通过输入`man` *`命令`*来查看其文档（称为*手册页*或*man页*）。例如，要了解更多关于`ls`命令的信息，可以输入**`man
    ls`**，如[示例2-1](ch02.xhtml#linux_man_page "示例2-1. Linux man页")所示。
- en: Example 2-1. Linux man page
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 示例2-1. Linux man页
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The man page gives useful (if a bit unfriendly looking) information about the
    `ls` command including its usage ❶, description ❷, and available options ❸.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 手册页提供了关于`ls`命令的有用信息（尽管看起来有些不太友好），包括其用法❶、描述❷和可用选项❸。
- en: As you can see in the description section at ❷, the `ls` command lists all files
    in the current working directory by default, but you can also use `ls` to get
    information about a particular file. For example, according to the man page you
    can use the `-a` option with `ls` to show all files, including *hidden directories*—directories
    not shown in the default `ls` listing—as shown in [Example 2-2](ch02.xhtml#using_an_option_with_ls
    "Example 2-2. Using an option with ls").
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在描述部分❷中看到的，`ls`命令默认列出当前工作目录中的所有文件，但你也可以使用`ls`来获取有关特定文件的信息。例如，根据手册页，你可以使用`-a`选项与`ls`一起显示所有文件，包括*隐藏目录*——这些目录在默认的`ls`列表中是不可见的——如[示例2-2](ch02.xhtml#using_an_option_with_ls
    "示例2-2. 使用选项与 ls")所示。
- en: Example 2-2. Using an option with `ls`
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 示例2-2. 使用选项与`ls`
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see, there are several hidden directories in the root directory,
    all of which are preceded by a period (`.`) character. (In [Chapter 8](ch08.xhtml
    "Chapter 8. Exploitation"), we’ll see how these sometimes-hidden directories can
    lead to a system compromise.) You can also see the entries `.` and `..`, which
    denote the current directory and the parent directory, respectively.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在根目录中有几个隐藏目录，它们的名称前都有一个点（`.`）字符。（在[第8章](ch08.xhtml "第8章. 利用")中，我们将看到这些有时隐藏的目录如何导致系统遭到攻破。）你还可以看到条目`.`和`..`，分别表示当前目录和上级目录。
- en: User Privileges
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户权限
- en: Linux user accounts offer resources to a particular individual or service. A
    user may log in with a password and be offered certain resources on the Linux
    system, such as the ability to write files and browse the Internet. That user
    may not be able to see files that belong to other users and can have reasonable
    assurance that other users can’t see his or her files either. In addition to traditional
    user accounts used by a person who logs in with a password and accesses the system,
    Linux systems can allow software to have a user account. The software can have
    the ability to use system resources to do its job, but it cannot read other users’
    private files. The accepted best practice on Linux systems is to run day-to-day
    commands as an unprivileged user account instead of running everything as the
    privileged root user to avoid inadvertently harming your system or granting excessive
    privilege to the commands and applications you run.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Linux用户账户为特定的个人或服务提供资源。用户可以通过密码登录，并被提供访问Linux系统上的某些资源的权限，例如写文件和浏览互联网的能力。该用户可能无法看到属于其他用户的文件，并且可以合理地保证其他用户也看不到他或她的文件。除了传统的用户账户（用户通过密码登录并访问系统）外，Linux系统还允许软件拥有一个用户账户。该软件可以使用系统资源来完成其工作，但无法读取其他用户的私人文件。在Linux系统中，公认的最佳做法是以没有特权的用户账户运行日常命令，而不是以特权的root用户身份运行所有操作，以避免无意中损害系统或授予运行的命令和应用程序过多的权限。
- en: Adding a User
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加用户
- en: By default, Kali offers only the privileged root account. Though many security
    tools require root privileges to run, you may want to add another unprivileged
    account for everyday use to reduce the potential for damage to your system. Remember,
    the root account can do anything on Linux, including corrupting all of your files.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Kali只提供特权的root账户。尽管许多安全工具需要root权限才能运行，但你可能希望为日常使用添加另一个没有特权的账户，以减少系统受损的潜在风险。记住，root账户可以在Linux上执行任何操作，包括破坏你所有的文件。
- en: To add a new user *georgia* to your Kali system use the `adduser` command, as
    shown in [Example 2-3](ch02.xhtml#adding_a_new_user "Example 2-3. Adding a new
    user").
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要将一个新用户*georgia*添加到Kali系统中，使用`adduser`命令，如[示例2-3](ch02.xhtml#adding_a_new_user
    "示例2-3. 添加新用户")所示。
- en: Example 2-3. Adding a new user
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 示例2-3. 添加新用户
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As you can see, in addition to adding a user to the system, a group *georgia*
    is created, a new user is added to this group ❶, a home directory is created for
    the user ❷, and the system prompts for information about the user, such as a password
    ❸ and the user’s full name ❹.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，除了将用户添加到系统中外，还创建了一个名为*georgia*的组，新的用户被添加到此组中❶，为用户创建了一个主目录❷，系统会提示输入用户信息，例如密码❸和用户的全名❹。
- en: Adding a User to the sudoers File
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将用户添加到sudoers文件
- en: When you need to do something that requires root privileges as a regular user,
    use the `sudo` command along with the command that you want to run as root, and
    then enter your password. For the newly created user *georgia* to be able to run
    privileged commands you need to add her to the *sudoers* file, which specifies
    which users can use the `sudo` command. To do so, enter **`adduser`** `username`
    **`sudo`** as shown here.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当你作为普通用户需要执行需要root权限的操作时，可以使用`sudo`命令，并将你想以root身份执行的命令与之一起输入，然后输入你的密码。为了让新创建的用户*georgia*能够运行特权命令，你需要将她添加到*sudoers*文件中，该文件指定哪些用户可以使用`sudo`命令。为此，可以输入**`adduser`**
    `username` **`sudo`**，如图所示。
- en: '[PRE7]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Switching Users and Using sudo
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 切换用户和使用sudo
- en: To switch users in your terminal session, say from the root user to *georgia*,
    use the `su` command as shown in [Example 2-4](ch02.xhtml#switching_to_a_different_user
    "Example 2-4. Switching to a different user").
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要在终端会话中切换用户，比如从root用户切换到*georgia*，可以使用`su`命令，如[示例2-4](ch02.xhtml#switching_to_a_different_user
    "示例2-4. 切换到不同的用户")所示。
- en: Example 2-4. Switching to a different user
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2-4. 切换到不同的用户
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You switch users with the `su` command. If you try to run commands (such as
    the `adduser` command) that require more privileges than the current user (*georgia*),
    the command is unsuccessful (`command not found`) ❶ because you can run the `adduser`
    command only as root.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`su`命令切换用户。如果你尝试运行需要比当前用户（*georgia*）更高权限的命令（例如`adduser`命令），该命令会失败（`command
    not found`）❶，因为你只能以root身份运行`adduser`命令。
- en: Luckily, as discussed previously, you can use the `sudo` command to run a command
    as root. Because the *georgia* user is a member of the `sudo` group, you can run
    privileged commands, and you can see user *john* is added ❷ to the system.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，正如之前讨论的那样，你可以使用`sudo`命令以root身份执行命令。由于*georgia*用户是`sudo`组的成员，你可以运行特权命令，并且可以看到用户*john*已被添加到系统中❷。
- en: To change back to the root user, enter the `su` command with no username. You
    will be prompted for the root’s password (*toor*).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要切换回root用户，输入`su`命令，不带用户名。系统会提示你输入root的密码（*toor*）。
- en: Creating a New File or Directory
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建新文件或目录
- en: To create a new, empty file called *myfile*, use the `touch` command.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个名为*myfile*的新空文件，请使用`touch`命令。
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: To create a new directory in your current working directory, enter **`mkdir`**
    `directory` as shown here.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要在当前工作目录中创建一个新目录，输入**`mkdir`** `directory`，如图所示。
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Use **`ls`** to confirm that the new directory has been created, and then change
    to *mydirectory* using **`cd`**.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**`ls`**确认新目录已创建，然后使用**`cd`**进入*mydirectory*。
- en: Copying, Moving, and Removing Files
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复制、移动和删除文件
- en: To copy a file, use the `cp` command as shown here.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要复制文件，请使用`cp`命令，如图所示。
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The syntax is `cp` *`source destination`*. When using `cp`, the original file
    is left in place, and a copy is made at the desired destination.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 语法是`cp` *`source destination`*。使用`cp`时，原始文件保持不变，并且会在指定的目标位置创建一个副本。
- en: Similarly, you can move a file from one location to another using the `mv` command.
    The syntax is identical to `cp`, but this time the file is removed from the source
    location.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以使用`mv`命令将文件从一个位置移动到另一个位置。语法与`cp`相同，但这时文件会从源位置删除。
- en: You can remove a file from the filesystem by entering `rm` *`file`*. To remove
    files recursively use the `-r` command.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过输入`rm` *`file`*来从文件系统中删除一个文件。要递归删除文件，请使用`-r`选项。
- en: Warning
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 警告
- en: Be careful when removing files, particularly recursively! Some hackers joke
    that the first command to teach Linux beginners is `rm -rf` from the root directory,
    which forcibly deletes the entire filesystem. This teaches new users the power
    of performing actions as root. Don’t try that at home!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 删除文件时要小心，特别是递归删除！一些黑客开玩笑说，教Linux初学者的第一条命令是`rm -rf`，从根目录开始，这会强制删除整个文件系统。这教给新用户执行root权限操作的强大威力。别在家尝试这个！
- en: Adding Text to a File
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 向文件添加文本
- en: The `echo` command echoes what you enter to the terminal, as shown here.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`echo`命令会将你输入的内容回显到终端，如图所示。'
- en: '[PRE12]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: To save text to a file, you can redirect your input to a file instead of to
    the terminal with the `>` symbol.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文本保存到文件中，你可以将输入重定向到文件，而不是终端，使用`>`符号。
- en: '[PRE13]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: To see the contents of your new file you can use the `cat` command.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看新文件的内容，你可以使用`cat`命令。
- en: '[PRE14]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Now echo a different line of text into *myfile* as shown next.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将另一行文本回显到*myfile*中，如下所示。
- en: '[PRE15]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The `>` overwrites the previous contents of the file. If you echo another line
    into *myfile*, that new line overwrites the output of the previous command. As
    you can see, the contents of *myfile* now reads *hello georgia again*.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`>`符号会覆盖文件的先前内容。如果你将另一行文本回显到*myfile*中，该新行将覆盖先前命令的输出。正如你所见，*myfile*的内容现在是*hello
    georgia again*。'
- en: Appending Text to a File
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 向文件追加文本
- en: To append text to a file, use `>>` as shown here.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要向文件追加文本，使用`>>`，如下所示。
- en: '[PRE16]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: As you can see, appending preserves the previous contents of the file.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，追加操作保留了文件的先前内容。
- en: File Permissions
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件权限
- en: If you look at the long output of `ls -l` on *myfile*, you can see the current
    permissions for *myfile*.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看`ls -l`命令在*myfile*上的长格式输出，你可以看到*myfile*当前的权限。
- en: '[PRE17]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: From left to right you see the file type and permissions (`-rw-r—r--`), the
    number of links to the file (1), the user and group that own the file (root),
    the file size (47 bytes), the last time the file was edited (April 23, 21:15),
    and finally the filename (*myfile*).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 从左到右，你可以看到文件类型和权限（`-rw-r—r--`）、文件链接数（1）、拥有该文件的用户和组（root）、文件大小（47字节）、最后编辑文件的时间（4月23日，21:15），最后是文件名（*myfile*）。
- en: 'Linux files have permissions to read (`r`), write (`w`), and execute (`x`)
    and three sets of user permissions: permissions for the owner, the group, and
    all users. The first three letters denote the permissions for the owner, the following
    three denote the permissions for the group, and the final three denote the permissions
    for all users. Since you created *myfile* from the root user account, the file
    is owned by user *root* and group *root*, as you can see in the output with `root
    root`. User root has read and write permissions for the file (`rw`). Other users
    in the group, if there are any, can read the file (`r`) but not write to or execute
    it. The last `r` shows that all users on the filesystem can read the file.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Linux文件有读（`r`）、写（`w`）和执行（`x`）权限，并且有三组用户权限：所有者、用户组和所有用户的权限。前三个字母表示所有者的权限，接下来的三个表示用户组的权限，最后三个表示所有用户的权限。由于你是以root用户账户创建的*myfile*，所以该文件属于用户*root*和用户组*root*，正如你在`root
    root`的输出中所看到的那样。root用户具有文件的读写权限（`rw`）。如果用户组中有其他用户，他们可以读取该文件（`r`），但不能写入或执行该文件。最后一个`r`表示文件系统上的所有用户都可以读取该文件。
- en: To change permissions on a file, use the `chmod` command. You can use `chmod`
    to specify permissions for the owner, the group, and the world. When specifying
    permissions use the numbers from 0 through 7 as shown in [Table 2-1](ch02.xhtml#linux_file_permissions
    "Table 2-1. Linux File Permissions").
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改文件的权限，使用`chmod`命令。你可以使用`chmod`来为所有者、用户组和世界指定权限。指定权限时，使用从0到7的数字，如[表2-1](ch02.xhtml#linux_file_permissions
    "表2-1。Linux文件权限")所示。
- en: Table 2-1. Linux File Permissions
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 表2-1。Linux文件权限
- en: '| Integer Value | Permissions | Binary Representation |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 整数值 | 权限 | 二进制表示 |'
- en: '| --- | --- | --- |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 7 | full | 111 |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 完全权限 | 111 |'
- en: '| 6 | read and write | 110 |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 读和写 | 110 |'
- en: '| 5 | read and execute | 101 |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 读和执行 | 101 |'
- en: '| 4 | read only | 100 |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 仅读取 | 100 |'
- en: '| 3 | write and execute | 011 |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 写入和执行 | 011 |'
- en: '| 2 | write only | 010 |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 仅写入 | 010 |'
- en: '| 1 | execute only | 001 |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 仅执行 | 001 |'
- en: '| 0 | none | 000 |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 无权限 | 000 |'
- en: 'When entering new file permissions, you use one digit for the owner, one for
    the group, and one for world. For example, to give the owner full permissions
    but the group and the world no permissions to read, write, or execute a file,
    use **`chmod 700`** like this:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当输入新的文件权限时，你使用一个数字表示所有者的权限，一个数字表示用户组的权限，一个数字表示世界的权限。例如，要给所有者完全的权限，但不给用户组和世界任何读、写或执行的权限，可以使用**`chmod
    700`**，如下所示：
- en: '[PRE18]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Now when you run the `ls -l` command on *myfile*, you can see that root has
    read, write, and execute (`rwx`) permissions and the other sets are blank ❶. If
    you try to access the file as any user other than root, you’ll get a permission
    denied error.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你在*myfile*上运行`ls -l`命令时，你可以看到root用户具有读、写和执行（`rwx`）权限，而其他的权限设置为空白❶。如果你尝试以root之外的任何用户身份访问该文件，你将收到权限拒绝错误。
- en: Editing Files
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑文件
- en: Perhaps no debate brings out such passion among Linux users as which is the
    best file editor. We’ll look at the basics of using two popular editors, vi and
    nano, beginning with my favorite, nano.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 也许没有什么辩论能像哪个是最好的文件编辑器那样激发Linux用户的热情。在这里，我们将看看两款流行编辑器vi和nano的基础使用方法，从我最喜欢的nano开始。
- en: '[PRE19]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Once in nano you can begin adding text to a new file called *testfile.txt*.
    When you open nano, you should see a blank file with help information for nano
    shown at the bottom of the screen, as shown here.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入nano，你可以开始向一个名为*testfile.txt*的新文件中添加文本。当你打开nano时，你应该看到一个空白文件，屏幕底部会显示nano的帮助信息，如下所示。
- en: '[PRE20]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: To add text to the file, just start typing.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要向文件中添加文本，只需开始输入即可。
- en: Searching for Text
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 搜索文本
- en: To search for text in a file, use ctrl-W, and then enter the text to search
    for at the search prompt as shown next.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要在文件中搜索文本，使用ctrl-W，然后在搜索提示符下输入要搜索的文本，如下所示。
- en: '[PRE21]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Nano should find the text *georgia* if the word is in the file. To exit, press
    ctrl-X. You will be prompted to save the file or lose the changes, as shown here:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文件中有*georgia*这个单词，nano应该能找到它。要退出，按ctrl-X。系统会提示你保存文件或放弃更改，如下所示：
- en: '[PRE22]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Enter **`Y`** to save the file. Now we’ll edit the file with the vi editor.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 输入**`Y`**保存文件。现在我们将使用vi编辑器来编辑该文件。
- en: Editing a File with vi
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用vi编辑文件
- en: Add the text in [Example 2-5](ch02.xhtml#editing_files_with_vi "Example 2-5. Editing
    files with vi") to *testfile.txt*. In addition to the contents of the file, at
    the bottom of the vi screen you see some information including the filename, number
    of lines, and the current cursor position (see [Example 2-5](ch02.xhtml#editing_files_with_vi
    "Example 2-5. Editing files with vi")).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 将[示例 2-5](ch02.xhtml#editing_files_with_vi "示例 2-5. 使用vi编辑文件")中的文本添加到*testfile.txt*中。除了文件内容外，你还会在vi屏幕底部看到一些信息，包括文件名、行数和当前光标位置（参见[示例
    2-5](ch02.xhtml#editing_files_with_vi "示例 2-5. 使用vi编辑文件")）。
- en: Example 2-5. Editing files with vi
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2-5. 使用vi编辑文件
- en: '[PRE23]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Unlike nano, you can’t just start editing the file once it is opened in vi.
    To edit a file, enter **`I`** to put vi into insert mode. You should see the word
    *INSERT* displayed at the bottom of your terminal. Once you’ve finished making
    changes, press esc to exit insert mode and return to command mode. Once in command
    mode, you can use commands to edit your text. For example, position the cursor
    at the line `we` and enter **`dd`** to delete the word `we` from the file.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 与nano不同，打开文件后，你不能直接开始编辑。在vi中编辑文件时，输入**`I`**将vi切换到插入模式。你应该能在终端底部看到*INSERT*字样。完成编辑后，按esc退出插入模式并返回到命令模式。在命令模式下，你可以使用命令编辑文本。例如，将光标定位到`we`这一行，输入**`dd`**即可删除文件中的`we`。
- en: To exit vi, enter :**`wq`** to tell vi to write the changes to the file and
    quit, as shown in [Example 2-6](ch02.xhtml#saving_changes_in_vi "Example 2-6. Saving
    changes in vi").
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要退出vi，输入:**`wq`**告诉vi将更改写入文件并退出，如[示例 2-6](ch02.xhtml#saving_changes_in_vi "示例
    2-6. 在vi中保存更改")所示。
- en: Example 2-6. Saving changes in vi
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2-6. 在vi中保存更改
- en: '[PRE24]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To learn more about available commands for vi and nano, read the corresponding
    man pages.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多vi和nano的可用命令，请阅读相应的man手册。
- en: Which editor you use daily is up to you. Throughout this book we’ll use nano
    to edit files, but feel free to substitute your editor of choice.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 你每天使用哪个编辑器由你决定。在本书中我们将使用nano编辑文件，但你可以自由选择你喜欢的编辑器。
- en: Data Manipulation
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据操作
- en: Now for a bit of data manipulation. Enter the text in [Example 2-7](ch02.xhtml#example_list_for_data_manipulation
    "Example 2-7. Example list for data manipulation") in *myfile* using your desired
    text editor. The file lists some of my favorite security conferences and the months
    when they typically happen.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在进行一些数据操作。使用你喜欢的文本编辑器，输入[示例 2-7](ch02.xhtml#example_list_for_data_manipulation
    "示例 2-7. 数据操作示例列表")中的文本到*myfile*中。该文件列出了一些我最喜欢的安全会议以及它们通常发生的月份。
- en: Example 2-7. Example list for data manipulation
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2-7. 数据操作示例列表
- en: '[PRE25]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Using grep
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用grep
- en: The command `grep` looks for instances of a text string in a file. For example,
    to search for all instances of the string *September* in our file, enter **`grep`**
    **`September`** **`myfile`** as follows.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 命令`grep`用于查找文件中某个文本字符串的实例。例如，要搜索文件中所有出现的*September*字符串，输入**`grep`** **`September`**
    **`myfile`**，如下所示。
- en: '[PRE26]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: As you can see, `grep` tells us that Derbycon and Brucon are in September.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，`grep`告诉我们Derbycon和Brucon是在9月。
- en: Now suppose you want only the names of the conferences in September but not
    the number or the month. You can send the output of `grep` to another command
    for additional processing using a pipe (`|`). The `cut` command allows you to
    take each line of input, choose a delimiter, and print specific fields. For example,
    to get just the names of conferences that run in September you can `grep` for
    the word *September* as you did previously. Next, you pipe (`|`) the output to
    `cut`, where you specify a space as the delimiter with the `-d` option and say
    you want the second field with the field (`-f`) option, as shown here.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你现在只想获取九月的会议名称，而不包括会议的编号或月份。你可以通过管道（`|`）将`grep`的输出传递给另一个命令进行进一步处理。`cut`命令允许你处理每一行输入，选择分隔符，并打印特定的字段。例如，要仅获取在九月举行的会议名称，你可以像之前一样使用`grep`查找*September*这个词。接下来，你将输出通过管道（`|`）传递给`cut`，在`cut`中你可以使用`-d`选项指定空格为分隔符，并通过`-f`选项指定你想要的第二个字段，如下所示。
- en: '[PRE27]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The result, as you can see, is that by piping the two commands together you
    get just the conferences Derbycon and Brucon.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，通过将这两个命令通过管道连接在一起，最终只得到会议名为Derbycon和Brucon的两个会议。
- en: Using sed
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用sed
- en: Another command for manipulating data is `sed`. Entire books have been written
    about using `sed`, but we’ll cover just the basics here with a simple example
    of finding a specific word and replacing it.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个用于数据处理的命令是`sed`。关于如何使用`sed`已经有整本书被写了下来，但我们这里仅介绍一些基本操作，例如查找特定单词并进行替换。
- en: The `sed` command is ideal for editing files automatically based on certain
    patterns or expressions. Say, for instance, you have a very long file, and you
    need to replace every instance of a certain word. You can do this quickly and
    automatically with the `sed` command.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`sed`命令非常适合根据特定模式或表达式自动编辑文件。例如，假设你有一个非常长的文件，并且需要替换某个特定单词的每个实例。你可以使用`sed`命令快速并自动完成这项任务。'
- en: In the language of `sed`, a slash (`/`) is the delimiter character. For example,
    to replace all instances of the word *Blackhat* with *Defcon* in *myfile*, enter
    **`sed 's/Blackhat/Defcon/' myfile`**, as shown in [Example 2-8](ch02.xhtml#replacing_words_with_sed
    "Example 2-8. Replacing words with sed").
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在`sed`的语法中，斜杠（`/`）是分隔符字符。例如，要将文件*myfile*中所有出现的*Blackhat*替换为*Defcon*，可以输入**`sed
    's/Blackhat/Defcon/' myfile`**，如[示例 2-8](ch02.xhtml#replacing_words_with_sed "示例
    2-8. 使用sed替换单词")中所示。
- en: Example 2-8. Replacing words with `sed`
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2-8. 使用`sed`替换单词
- en: '[PRE28]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Pattern Matching with awk
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用awk进行模式匹配
- en: Another command line utility for pattern matching is the `awk` command. For
    example, if you want to find conferences numbered 6 or greater, you can use `awk`
    to search the first field for entries greater than 5, as shown here.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个用于模式匹配的命令行工具是`awk`命令。例如，如果你想查找编号为6或更大的会议，你可以使用`awk`搜索第一字段，查找大于5的条目，如下所示。
- en: '[PRE29]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Or, if you want only the first and third words in every line, you can enter
    **`awk '{print $1,$3;}' myfile`**, as shown in [Example 2-9](ch02.xhtml#selecting_certain_columns_with_awk
    "Example 2-9. Selecting certain columns with awk").
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果你只想要每行的第一和第三个单词，可以输入**`awk '{print $1,$3;}' myfile`**，如[示例 2-9](ch02.xhtml#selecting_certain_columns_with_awk
    "示例 2-9. 使用awk选择特定列")中所示。
- en: Example 2-9. Selecting certain columns with `awk`
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2-9. 使用`awk`选择特定列
- en: '[PRE30]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We’ve looked at only simple examples of using these data manipulation utilities
    in this section. To get more information, consult the man pages. These utilities
    can be powerful time-savers.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 本节我们只展示了使用这些数据处理工具的简单示例。要获取更多信息，请查阅手册页。这些工具可以成为强大的时间节省器。
- en: Managing Installed Packages
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理已安装的软件包
- en: 'On Debian-based Linux distributions such as Kali Linux, you can use the Advanced
    Packaging Tool (`apt`) to manage packages. To install a package, enter **`apt-get
    install`** `package`. For example, to install Raphael Mudge’s front-end for Metasploit,
    Armitage, in Kali Linux, enter the following:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于Debian的Linux发行版（如Kali Linux）中，你可以使用高级包装工具（`apt`）来管理软件包。要安装一个软件包，输入**`apt-get
    install`** `package`。例如，要在Kali Linux中安装Metasploit的前端工具Armitage，请输入以下命令：
- en: '[PRE31]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'It’s that easy: `apt` installs and configures Armitage for you.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 就这么简单：`apt`会为你安装并配置Armitage。
- en: Updates are regularly released for the tools installed on Kali Linux. To get
    the latest versions of the packages already installed, enter **`apt-get upgrade`**.
    The repositories Kali uses for packages are listed in the file */etc/apt/sources.list*.
    To add additional repositories, you can edit this file and then run the command
    `apt-get update` to refresh the database to include the new repositories.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux 中的工具会定期发布更新。要获取已安装包的最新版本，请输入 **`apt-get upgrade`**。Kali 使用的包存储库列在文件
    */etc/apt/sources.list* 中。若要添加额外的存储库，你可以编辑此文件并运行 `apt-get update` 命令来刷新数据库，包含新的存储库。
- en: Note
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This book is built off the base install of Kali 1.0.6 unless otherwise noted
    in [Chapter 1](ch01.xhtml "Chapter 1. Setting Up Your Virtual Lab"), so in order
    to follow along with the book as is, don’t update Kali.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 本书基于 Kali 1.0.6 的基础安装，除非在 [第1章](ch01.xhtml "第1章 设置你的虚拟实验室") 中另有说明，否则为了跟随本书的内容，请不要更新
    Kali。
- en: Processes and Services
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进程和服务
- en: In Kali Linux you can start, stop, or restart services using the `service` command.
    For example, to start the Apache web server, enter **`service apache2 start`**
    as shown next.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Kali Linux 中，你可以使用 `service` 命令启动、停止或重启服务。例如，要启动 Apache 网络服务器，请输入 **`service
    apache2 start`**，如下所示。
- en: '[PRE32]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Likewise, to stop the MySQL database server, enter **`service mysql stop`**.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，要停止 MySQL 数据库服务器，请输入 **`service mysql stop`**。
- en: Managing Networking
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理网络
- en: When setting up the Kali Linux virtual machines in [Chapter 1](ch01.xhtml "Chapter 1. Setting
    Up Your Virtual Lab"), you used the `ifconfig` command to view network information
    as shown in [Example 2-10](ch02.xhtml#viewing_networking_information_with_ifco
    "Example 2-10. Viewing networking information with ifconfig").
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置 Kali Linux 虚拟机时，参考了 [第1章](ch01.xhtml "第1章 设置你的虚拟实验室")，你使用了 `ifconfig` 命令来查看网络信息，如
    [示例 2-10](ch02.xhtml#viewing_networking_information_with_ifco "示例 2-10 使用 ifconfig
    查看网络信息") 所示。
- en: Example 2-10. Viewing networking information with `ifconfig`
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2-10. 使用 `ifconfig` 查看网络信息
- en: '[PRE33]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: From the output of `ifconfig` you can glean a lot of information about your
    system’s network state. For one, the network interface is called `eth0` ❶. The
    IPv4 address (`inet addr`) that my Kali box uses to talk to the network is 192.168.20.9
    ❷ (yours will probably differ). An *IP address* is a 32-bit label assigned to
    devices in a network. The IP address is named up of 4 octets, or 8-bit parts.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `ifconfig` 的输出中，你可以获得关于系统网络状态的很多信息。首先，网络接口名为 `eth0` ❶。我的 Kali 机器用来与网络通信的 IPv4
    地址（`inet addr`）是 192.168.20.9 ❷（你的可能不同）。*IP 地址* 是分配给网络中设备的 32 位标签。IP 地址由 4 个八位字节（或
    8 位部分）组成。
- en: The address’s *network mask*, or *netmask* (`Mask`), at ❸ identifies which parts
    of the IP address are part of the network and which parts belong to the host.
    In this case the netmask 255.255.255.0 tells you that the network is the first
    three octets, 192.168.20.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 地址的 *网络掩码*，或 *子网掩码*（`Mask`），在 ❸ 处标识了 IP 地址的哪些部分属于网络，哪些部分属于主机。在此案例中，子网掩码 255.255.255.0
    告诉你网络的前三个八位字节是 192.168.20。
- en: The *default gateway* is where your host routes traffic to other networks. Any
    traffic destined outside the local network will be sent to the default gateway
    for it to figure out where it needs to go.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '*默认网关* 是你的主机用于路由流量到其他网络的位置。任何指向本地网络以外的流量都会被发送到默认网关，由它来确定流量的去向。'
- en: '[PRE34]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The `route` command output tells us that the default gateway is 192.168.20.1
    ❶. This makes sense because the system with the IP address 192.168.20.1 is the
    wireless router in my home network. Take note of your own default gateway for
    use in the following section.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`route` 命令的输出告诉我们默认网关是 192.168.20.1 ❶。这很有道理，因为 IP 地址为 192.168.20.1 的系统是我家网络中的无线路由器。请记下你自己的默认网关，以便在下一节中使用。'
- en: Setting a Static IP Address
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置静态 IP 地址
- en: By default, your network connection uses dynamic host configuration protocol
    (DHCP) to pull an IP address from the network. To set a static address, so that
    your IP address won’t change, you need to edit the file */etc/network/interfaces*.
    Use your preferred editor to open this file. The default configuration file is
    shown in [Example 2-11](ch02.xhtml#default_solidusetcsolidusnetworksolidusi "Example 2-11. The
    default /etc/network/interfaces file").
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，你的网络连接使用动态主机配置协议（DHCP）从网络中获取一个 IP 地址。若要设置静态地址，确保你的 IP 地址不变，你需要编辑文件 */etc/network/interfaces*。使用你喜欢的编辑器打开此文件。默认配置文件如
    [示例 2-11](ch02.xhtml#default_solidusetcsolidusnetworksolidusi "示例 2-11 默认的 /etc/network/interfaces
    文件") 所示。
- en: Example 2-11. The default /etc/network/interfaces file
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2-11. 默认的 /etc/network/interfaces 文件
- en: '[PRE35]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: To give your system a static IP address you need to add an entry for the eth0
    interface. Add the text shown in [Example 2-12](ch02.xhtml#adding_a_static_ip_address
    "Example 2-12. Adding a static IP address") to */etc/network/interfaces* with
    the IP addresses changed to match your environment.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 要为你的系统设置静态IP地址，你需要为eth0接口添加一个条目。将[示例2-12](ch02.xhtml#adding_a_static_ip_address
    "示例2-12. 添加静态IP地址")中显示的文本添加到*/etc/network/interfaces*中，并修改IP地址以匹配你的环境。
- en: Example 2-12. Adding a static IP address
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 示例2-12. 添加静态IP地址
- en: '[PRE36]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: You set the IP address for eth0 as static at ❶. Use the IP address, netmask
    ❷, and gateway ❸ you found in the previous section to fill in the information
    in your file.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 你已将eth0的IP地址设置为静态IP地址，如❶所示。使用你在上一节中找到的IP地址、子网掩码❷和网关❸来填写文件中的相关信息。
- en: Once you’ve made these changes, restart networking with `service` `networking
    restart` so that the newly added static networking information will be used.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你做出这些更改，使用`service networking restart`重新启动网络服务，以便使用新添加的静态网络信息。
- en: Viewing Network Connections
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查看网络连接
- en: To view network connections, listening ports, and so on, use the `netstat` command.
    For example, you can see the programs listening on TCP ports by issuing the command
    `netstat -antp`, as shown in [Example 2-13](ch02.xhtml#using_netstat_to_view_listening_ports
    "Example 2-13. Using netstat to view listening ports"). *Ports* are simply software-based
    network sockets that listen on the network to allow remote systems to interact
    with programs on a system.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看网络连接、监听端口等，可以使用`netstat`命令。例如，你可以通过执行命令`netstat -antp`来查看监听TCP端口的程序，如[示例2-13](ch02.xhtml#using_netstat_to_view_listening_ports
    "示例2-13. 使用netstat查看监听端口")所示。*端口*仅仅是基于软件的网络套接字，在网络上监听，允许远程系统与系统上的程序进行交互。
- en: Example 2-13. Using `netstat` to view listening ports
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 示例2-13. 使用`netstat`查看监听端口
- en: '[PRE37]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: You see that the Apache web server you started earlier in the chapter is listening
    on TCP port 80\. (See the man page for other `netstat` options.)
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到你在本章开始时启动的Apache web服务器在TCP端口80上监听。（有关其他`netstat`选项，请查看man页面。）
- en: 'Netcat: The Swiss Army Knife of TCP/IP Connections'
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Netcat：TCP/IP连接的瑞士军刀
- en: As the man page notes, the Netcat tool is known as the Swiss Army knife for
    TCP/IP connections. It’s a versatile tool that we’ll utilize throughout this book.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 正如man页面所指出的，Netcat工具被称为TCP/IP连接的瑞士军刀。它是一个多功能的工具，我们将在本书中贯穿使用。
- en: To see Netcat’s various options enter **`nc -h`**, as shown in [Example 2-14](ch02.xhtml#netcat_help_information
    "Example 2-14. Netcat help information").
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看Netcat的各种选项，请输入**`nc -h`**，如[示例2-14](ch02.xhtml#netcat_help_information "示例2-14.
    Netcat帮助信息")所示。
- en: Example 2-14. Netcat help information
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 示例2-14. Netcat帮助信息
- en: '[PRE38]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Check to See If a Port Is Listening
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查端口是否处于监听状态
- en: Let’s have Netcat connect to a port to see if that port is listening for connections.
    You saw previously that the Apache web server is listening on port 80 on your
    Kali Linux system. Tell Netcat to attach to port 80 verbosely, or output rich,
    with the `-v` option as shown next. If you started Apache correctly, you should
    see the following when attempting to connect the service.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们让Netcat连接到一个端口，看看该端口是否正在监听连接。你之前看到的Apache web服务器正在Kali Linux系统的端口80上监听。让Netcat通过`-v`选项以详细模式连接端口80，如下所示。如果你正确启动了Apache，当尝试连接该服务时，你应该看到以下内容。
- en: '[PRE39]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: As you can see, Netcat reports that port 80 is indeed listening (`open`) on
    the network. (We’ll look more at open ports and why they are interesting in [Chapter 5](ch05.xhtml
    "Chapter 5. Information Gathering")’s discussion of port scanning.)
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，Netcat报告显示端口80确实在网络上处于监听状态（`open`）。（我们将在[第5章](ch05.xhtml "第5章. 信息收集")的端口扫描讨论中进一步了解开放端口及其为何重要。）
- en: You can also listen on a port for an incoming connection using Netcat, as shown
    next.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用Netcat监听某个端口上的传入连接，方法如下所示。
- en: '[PRE40]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: You use the options `l` for listen, `v` for verbose, and `p` to specify the
    port to listen on.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 你使用`l`选项进行监听，`v`选项启用详细模式，`p`选项指定要监听的端口。
- en: Next, open a second terminal window and use Netcat to connect to the Netcat
    listener.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，打开第二个终端窗口，使用Netcat连接到Netcat监听器。
- en: '[PRE41]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Once you connect, enter the text **`hi georgia`**, and when you return to the
    listener’s terminal window, you see that a connection was received and your text
    was printed.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你连接，输入文本**`hi georgia`**，当你返回到监听器的终端窗口时，你会看到一个连接已建立，并且你的文本已被打印出来。
- en: '[PRE42]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Close down both Netcat processes by pressing CTRL-C.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 通过按CTRL-C关闭两个Netcat进程。
- en: Opening a Command Shell Listener
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打开命令行Shell监听器
- en: Now for something a bit more interesting. When you set up your Netcat listener,
    use the `-e` flag to tell Netcat to execute */bin/bash* (or start a Bash command
    prompt) when a connection is received. This allows anyone who connects to the
    listener to execute commands on your system, as shown next.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 现在来点更有趣的。当你设置 Netcat 监听器时，使用 `-e` 标志告诉 Netcat 在接收到连接时执行 */bin/bash*（或者启动一个 Bash
    命令提示符）。这允许任何连接到监听器的人在你的系统上执行命令，如下所示。
- en: '[PRE43]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Again, use a second terminal window to connect to the Netcat listener.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用第二个终端窗口连接到 Netcat 监听器。
- en: '[PRE44]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: You can now issue Linux commands to be executed by the Netcat listener. The
    `whoami` Linux command will tell you the current logged-in user. In this case,
    because the Netcat process was started by the *root* user, your commands will
    be executed as *root*.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以发出 Linux 命令让 Netcat 监听器执行。`whoami` Linux 命令会告诉你当前登录的用户。在这种情况下，因为 Netcat
    进程是由 *root* 用户启动的，所以你的命令将以 *root* 用户的身份执行。
- en: Note
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This is a simple example because both your Netcat listener and the connection
    are on the same system. You could use another of your virtual machines, or even
    your host system, for this exercise as well.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的例子，因为你的 Netcat 监听器和连接都在同一系统上。你也可以使用你另外的虚拟机，甚至是你的宿主系统来进行这个练习。
- en: Close down both Netcat processes again.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 再次关闭两个 Netcat 进程。
- en: Pushing a Command Shell Back to a Listener
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将命令行 Shell 推送回监听器
- en: In addition to listening on a port with a command shell, you can also push a
    command shell back to a Netcat listener. This time set up the Netcat listener
    without the `-e` flag as shown next.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在端口上监听命令行 Shell，你还可以将命令行 Shell 推送回 Netcat 监听器。这次设置 Netcat 监听器时不使用 `-e` 标志，如下所示。
- en: '[PRE45]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Now open a second terminal, and connect back to the Netcat listener you just
    created as shown here.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 现在打开第二个终端，并像这里所示的那样，重新连接到你刚刚创建的 Netcat 监听器。
- en: '[PRE46]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Connect with Netcat as usual, but this time use the `-e` flag to execute */bin/bash*
    on the connection. Back in your first terminal you see a connection as shown next,
    and if you enter terminal commands, you will see them executed. (We’ll learn more
    about listening with */bin/bash* on a local port and actively pushing */bin/bash*
    with a connection, known as *bind shells* and *reverse shells*, respectively,
    in [Chapter 4](ch04.xhtml "Chapter 4. Using the Metasploit Framework").)
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 按照平常的方式使用 Netcat 进行连接，但这次使用 `-e` 标志在连接上执行 */bin/bash*。回到第一个终端，你会看到如下面所示的连接，如果你输入终端命令，你会看到它们被执行。（我们将在[第
    4 章](ch04.xhtml "第 4 章. 使用 Metasploit 框架")中学习更多关于在本地端口上监听 */bin/bash* 和通过连接主动推送
    */bin/bash*，分别被称为 *bind shells* 和 *reverse shells*。）
- en: '[PRE47]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Now, one more thing with Netcat. This time, instead of outputting what comes
    into your listener to the screen, use `>` to send it to a file as shown next.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Netcat 还有一个功能。这次，不是将进入监听器的数据输出到屏幕，而是使用 `>` 将其发送到文件中，如下所示。
- en: '[PRE48]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: In the second terminal you set up Netcat to connect, but this time you use the
    `<` symbol to tell it to send the contents of a file (*myfile*) over the Netcat
    connection. Give Netcat a second or two to finish, and then examine the contents
    of the file *netcatfile* created by your first Netcat instance. The contents should
    be identical to *myfile*.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个终端中，你设置了 Netcat 进行连接，但这次你使用了 `<` 符号来告诉它通过 Netcat 连接发送一个文件（*myfile*）的内容。给
    Netcat 几秒钟的时间来完成，然后检查由你第一个 Netcat 实例创建的文件 *netcatfile* 的内容。其内容应该与 *myfile* 完全相同。
- en: '[PRE49]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: You have used Netcat to transfer the file. In this case we’ve simply transferred
    the file from one directory to another, but you can imagine how this technique
    can be used to transfer files from system to system—a technique that often comes
    in handy in the post-exploitation phase of a pentest, once you have access to
    a system.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经使用 Netcat 转移了文件。在这个例子中，我们只是将文件从一个目录转移到另一个目录，但你可以想象，这种技术可以用来在系统之间转移文件——这是渗透测试后期阶段，获得系统访问权限后的常用技术。
- en: Automating Tasks with cron Jobs
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 cron 任务自动化任务
- en: The `cron` command allows us to schedule tasks to automatically run at a specified
    time. In the */etc* directory in Kali, you can see several files and directories
    related to `cron`, as shown in [Example 2-15](ch02.xhtml#crontab_files "Example 2-15. crontab
    files").
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`cron` 命令允许我们安排任务在指定时间自动运行。在 Kali 系统的 */etc* 目录中，你可以看到与 `cron` 相关的多个文件和目录，如[示例
    2-15](ch02.xhtml#crontab_files "示例 2-15. crontab 文件")所示。'
- en: Example 2-15. crontab files
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2-15. crontab 文件
- en: '[PRE50]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: The *cron.daily*, *cron.hourly*, *cron.monthly*, and *cron.weekly* directories
    specify scripts that will run automatically, every day, every hour, every month,
    or every week, depending on which directory you put your script in.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '*cron.daily*、*cron.hourly*、*cron.monthly* 和 *cron.weekly* 目录指定了将自动运行的脚本，分别是每天、每小时、每月或每周，根据你将脚本放入哪个目录来决定。'
- en: If you need more flexibility you can edit `cron`’s configuration file, */etc/crontab*.
    The default text is shown in [Example 2-16](ch02.xhtml#crontab_configuration_file
    "Example 2-16. crontab configuration file").
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要更多的灵活性，可以编辑 `cron` 的配置文件，*/etc/crontab*。默认文本如 [示例 2-16](ch02.xhtml#crontab_configuration_file
    "示例 2-16. crontab 配置文件") 所示。
- en: Example 2-16. `crontab` configuration file
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 2-16. `crontab` 配置文件
- en: '[PRE51]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: The fields in a `crontab` are, from left to right, the minute, hour, day of
    the month, month, day of the week, user who will run the command, and, finally,
    the command to be run. To run a command every day of the week, every hour, and
    so on, you use an asterisk (`*`) instead of specifying a value for the column.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '`crontab` 中的字段，从左到右依次为：分钟、小时、日期、月份、星期、执行命令的用户，最后是要执行的命令。要使命令每天、每小时等都运行，你可以使用星号（`*`）来代替指定某一列的具体值。'
- en: For example, look at the first `crontab` line at ❶, which runs the hourly `cron`
    jobs specified in */etc/cron.hourly*. This `crontab` runs on the 17th minute of
    every hour every day of every month on every day of the week. The line at ❷ says
    that the daily `crontab` (*/etc/cron.daily*) will be run at the 25th minute of
    the 6th hour of every day of every month on every day of the week. (For more flexibility,
    you can add a line here instead of adding to the hourly, daily, weekly, or monthly
    lists.)
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，查看第一个 `crontab` 行 ❶，它会运行每小时执行的 `cron` 任务，这些任务在 */etc/cron.hourly* 中指定。这个
    `crontab` 在每小时的第 17 分钟，每天、每月、每周都运行。第 ❷ 行表示每日的 `crontab`（*/etc/cron.daily*）将在每天、每月、每周的第
    6 小时的第 25 分钟执行。（为了更大的灵活性，你可以在这里添加一行，而不是将其添加到每小时、每天、每周或每月的列表中。）
- en: Summary
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小结
- en: In this chapter we’ve looked at some common Linux tasks. Navigating the Linux
    filesystem, working with data, and running services are all skills that will serve
    you well as you move through the rest of this book. In addition, when attacking
    Linux systems, knowing which commands to run in a Linux environment will help
    you make the most of successful exploitation. You may want to automatically run
    a command periodically by setting up a `cron` job or use Netcat to transfer a
    file from your attack machine. You will use Kali Linux to run your attacks throughout
    this book, and one of your target systems is Ubuntu Linux, so having the basics
    in place will make learning pentesting come more naturally.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们探讨了一些常见的 Linux 操作任务。浏览 Linux 文件系统、处理数据和运行服务，这些技能将对你在本书的学习过程中大有帮助。此外，在攻击
    Linux 系统时，知道在 Linux 环境下运行哪些命令，将帮助你充分利用成功的利用技巧。你可能希望通过设置 `cron` 任务定期自动运行某些命令，或者使用
    Netcat 从你的攻击机器传输文件。你将在本书中使用 Kali Linux 进行攻击，并且你的目标系统是 Ubuntu Linux，因此掌握这些基础知识将使学习渗透测试变得更加自然。
