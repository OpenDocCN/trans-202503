- en: '23'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '23'
- en: CURVES, SURFACES, AND VOLUMES
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 曲线、表面和体积
- en: '![Image](Images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/common.jpg)'
- en: Electrodynamics is a geometric subject. Curves, surfaces, and volumes play a
    dual role in electromagnetic theory. They serve as the places where electric charge
    and current can reside, and they play an essential role in the formulation of
    the Maxwell equations, the modern expression of how electric and magnetic fields
    are created and how they evolve in time.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 电动力学是一个几何学科。在电磁学理论中，曲线、表面和体积扮演着双重角色。它们是电荷和电流可能存在的地方，并且在麦克斯韦方程的形成中起着至关重要的作用，麦克斯韦方程是现代电磁场如何产生以及如何随时间演变的表达式。
- en: Before we can explore the Maxwell equations, we’ll need data types for curves,
    surfaces, and volumes—we’ll build them in this chapter. A curve can be specified
    by giving a function from a single real parameter to a position in space. A surface
    can be specified as a function from a pair of real numbers to a position in space.
    A volume can be specified as a function from a triple of numbers to a position
    in space. These mathematical parameterizations lead naturally to data type definitions.
    We’ll package the parameterizations with appropriate boundaries to form the types
    `Curve`, `Surface`, and `Volume`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入研究麦克斯韦方程之前，我们需要为曲线、表面和体积构建数据类型——我们将在本章中构建它们。曲线可以通过给定从单一实数参数到空间位置的函数来指定。表面可以通过给定从一对实数到空间位置的函数来指定。体积可以通过给定从三元数到空间位置的函数来指定。这些数学参数化自然地导致数据类型定义。我们将用适当的边界包装这些参数化，形成
    `Curve`、`Surface` 和 `Volume` 类型。
- en: Let’s start with some introductory code.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一些入门代码开始。
- en: Introductory Code
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入门代码
- en: '[Listing 23-1](ch23.xhtml#ch23list1) shows the introductory code for the `Geometry`
    module we’ll develop in this chapter.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 23-1](ch23.xhtml#ch23list1) 显示了我们将在本章中开发的 `Geometry` 模块的入门代码。'
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Listing 23-1: Opening lines of code for the Geometry module*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 23-1：几何模块的开头代码行*'
- en: We’ll use the type `Position` and the related functions we defined in the `CoordinateSystems`
    module in [Chapter 22](ch22.xhtml), so we’ve imported these and a few types and
    functions from the `SimpleVec` module of [Chapter 10](ch10.xhtml).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用在 [第 22 章](ch22.xhtml) 的 `CoordinateSystems` 模块中定义的 `Position` 类型及相关函数，因此我们已经导入了这些类型和函数，以及从
    [第 10 章](ch10.xhtml) 的 `SimpleVec` 模块中导入的一些类型和函数。
- en: Our first geometric objects are one-dimensional curves embedded in three-dimensional
    space.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一个几何对象是嵌入三维空间的一维曲线。
- en: Curves
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 曲线
- en: Curves have two distinct uses in electromagnetic theory. First, we use them
    to describe the place that electric charge and current live. Current in a wire
    can flow along a curve. Static charge can also be placed along a curve.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 曲线在电磁学理论中有两种不同的用途。首先，我们用它们来描述电荷和电流所存在的位置。电流可以沿着一条曲线在导线中流动。静电荷也可以沿曲线分布。
- en: The second place we use them is in Ampere’s law, which asserts a relationship
    between the magnetic field along a closed curve in space (a loop) and the electric
    current that flows through a surface with the closed curve as its boundary. This
    second use of curves is more abstract since the curve doesn’t need to be the location
    of any actual material, but it’s also more important for a deep understanding
    of modern electromagnetic theory.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个用途是安培定律，它揭示了空间中一条闭合曲线（一个回路）沿着的磁场与穿过以该闭合曲线为边界的表面的电流之间的关系。曲线的第二个用途更加抽象，因为曲线不需要是任何实际物质的位置，但它对于深入理解现代电磁理论也更为重要。
- en: Parameterizing Curves
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 曲线的参数化
- en: 'How can we describe a curve in space? We can parameterize the curve so there’s
    a real number associated with each point on the curve and then give (by way of
    a function) the position in space associated with each value of the parameter.
    For example, a line along the y-axis could be parameterized with the following
    function:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何描述空间中的曲线？我们可以对曲线进行参数化，使每个曲线上的点都有一个实数对应，然后通过一个函数给出与每个参数值相关的空间位置。例如，沿 y 轴的直线可以通过以下函数进行参数化：
- en: '![Image](Images/450equ01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/450equ01.jpg)'
- en: 'A circle with radius 2 in the xy-plane centered at the origin could be parameterized
    with the following function:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一个半径为 2 的圆，位于 xy 平面并以原点为圆心，可以通过以下函数来参数化：
- en: '![Image](Images/450equ02.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/450equ02.jpg)'
- en: In these functions, *t* serves only as the name of a parameter (we could have
    chosen *s* or any convenient symbol) and has nothing to do with time.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些函数中，*t* 仅作为参数的名称（我们可以选择 *s* 或任何方便的符号），与时间无关。
- en: 'A parameterized curve therefore requires a function with type `R ->` `Position`
    sending a parameter `t :: R` along the curve to a point `r :: Position` in space.
    But we also need starting and ending points for our curve. For example, the circle
    in the xy-plane with radius 2 centered at the origin can be specified with the
    function'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '因此，一个参数化的曲线需要一个类型为`R ->` `Position`的函数，将参数`t :: R`沿着曲线发送到空间中的某个点`r :: Position`。但是我们还需要曲线的起始和结束点。例如，xy平面中半径为2、以原点为圆心的圆可以用以下函数来指定：'
- en: '![Image](Images/451equ01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/451equ01.jpg)'
- en: as well as the starting parameter *t[a]* = 0 and the ending parameter *t[b]*
    = 2*π*. If we use the same function and starting parameter but change the ending
    parameter to *t[b]* = *π*, we get a semicircle (the half circle above the x-axis).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以及起始参数*t[a]* = 0和结束参数*t[b]* = 2*π*。如果我们使用相同的函数和起始参数，但将结束参数更改为*t[b]* = *π*，我们将得到一个半圆（位于x轴上方的半圆）。
- en: 'The starting and ending points can be specified by a starting parameter `startingCurveParam
    :: R` (which we called *t[a]* earlier) and an ending parameter `endingCurveParam
    :: R` (which we called *t[b]*). Thus, we specify a curve with three pieces of
    data: a function, a starting parameter, and an ending parameter.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '起始点和结束点可以通过起始参数`startingCurveParam :: R`（我们之前称之为*t[a]*）和结束参数`endingCurveParam
    :: R`（我们之前称之为*t[b]*）来指定。因此，我们用三部分数据来指定曲线：一个函数、一个起始参数和一个结束参数。'
- en: A data type can be used to combine pieces of data that really belong together.
    For the curve, it will be very convenient to have a single type `Curve` that contains
    the function, the starting point, and the ending point.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型可以用来组合那些本应属于同一组的数据。对于曲线来说，拥有一个单一类型`Curve`，其中包含函数、起始点和结束点将非常方便。
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The data type `Curve` has a single data constructor that is also called `Curve`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型`Curve`有一个单一的数据构造函数，也叫做`Curve`。
- en: Examples of Curves
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 曲线示例
- en: Let’s encode the example of the circle with radius 2 in the xy-plane centered
    at the origin.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编码一个半径为2的圆的例子，这个圆位于xy平面，且以原点为圆心。
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We’re naming our curve circle2 to remind us of the radius 2\. The parameterization
    23.1 is given as the first argument to the data constructor `Curve`, followed
    by the starting and ending curve parameters.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将曲线命名为circle2，以提醒我们半径为2。参数化23.1作为数据构造函数`Curve`的第一个参数，后面跟着起始和结束的曲线参数。
- en: A circle in the xy-plane centered at the origin is easier to express in cylindrical
    coordinates than in Cartesian. In cylindrical coordinates, our circle has the
    constant values *s* = 2 and *z* = 0\. Only the *ϕ* coordinate changes from 0 to
    2*π*. This suggests that we use the *ϕ* coordinate as our parameter for the curve.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在xy平面中，以原点为圆心的圆在圆柱坐标系下比在笛卡尔坐标系下更容易表示。在圆柱坐标系中，我们的圆有常数值*s* = 2和*z* = 0。只有*ϕ*坐标从0变化到2*π*。这意味着我们可以使用*ϕ*坐标作为曲线的参数。
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We use the cyl function to specify the curve in cylindrical coordinates. The
    curve `circle2'` is the same as the curve circle2.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用cyl函数来指定圆柱坐标系中的曲线。曲线`circle2'`与曲线circle2相同。
- en: 'Here’s the definition for a unit circle:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是单位圆的定义：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: There are families of curves for which we need to provide additional information
    before we’ve defined a specific curve. A straight line segment is such a curve.
    We need to provide both a starting position and an ending position, which is the
    perfect job for a higher-order function.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 有些曲线族需要我们在定义特定曲线之前提供额外的信息。直线段就是这样的曲线。我们需要提供起始位置和结束位置，而这正是高阶函数的完美任务。
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We define the local name `d` to be the displacement vector pointing from position
    `r1` to position `r2`. We also define a local function `f` as our curve function
    by using the `shiftPosition` function to pick out the position that is shifted
    from `r1` by the displacement vector `t *^ d`. The curve parameter `t` runs from
    `0` to `1`, so `t *^ d` is a scaled version of the displacement vector `d` that
    runs from length 0 to the full length of `d`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义局部变量`d`为位移向量，从位置`r1`指向位置`r2`。我们还通过使用`shiftPosition`函数来定义一个局部函数`f`作为我们的曲线函数，该函数选取从`r1`通过位移向量`t
    *^ d`平移得到的位置。曲线参数`t`的范围从`0`到`1`，因此`t *^ d`是位移向量`d`的一个缩放版本，从长度0到`d`的完整长度。
- en: We’ve seen how to talk about one-dimensional curves in Haskell. Now let’s move
    up a dimension and talk about surfaces.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了如何在Haskell中描述一维曲线。现在让我们提升一个维度，来讨论曲面。
- en: Surfaces
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 曲面
- en: Surfaces have two distinct uses in electromagnetic theory. We use them to describe
    the place that electric charge and current live. Current can flow along a surface.
    Static charge can also be placed on a surface.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在电磁理论中，曲面有两个不同的用途。我们用它们来描述电荷和电流所在的地方。电流可以沿着曲面流动。静电荷也可以放置在曲面上。
- en: We also use them in Gauss’s law, which asserts a relationship between the electric
    field on a closed surface in space and the electric charge inside that surface.
    This second use of surfaces is more abstract since the surface need not be the
    location of any actual material, but it’s also more important for a deep understanding
    of modern electromagnetic theory.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在高斯定律中使用它们，后者阐明了空间中闭合曲面上的电场与该曲面内电荷之间的关系。曲面的第二种用途更加抽象，因为表面不必是任何实际物质的所在，但对于深入理解现代电磁理论，它也更加重要。
- en: Parameterizing Surfaces
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数化曲面
- en: A surface is a parameterized function from two parameters to space. For example,
    we can parameterize the unit sphere with two parameters, *θ* and *ϕ*, as the function
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 曲面是从两个参数到空间的参数化函数。例如，我们可以用两个参数*θ*和*ϕ*对单位球体进行参数化，作为函数
- en: '![Image](Images/452equ01.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/452equ01.jpg)'
- en: and the ranges 0 ≤ *θ* ≤ *π* and 0 ≤ *ϕ* ≤ 2*π*.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 并且范围为0 ≤ *θ* ≤ *π*和0 ≤ *ϕ* ≤ 2*π*。
- en: For a second example, suppose we want to parameterize the surface that lies
    in the xy-plane, bounded by the parabola *y* = *x*² and the line *y* = 4\. This
    surface is shown in [Figure 23-1](ch23.xhtml#ch23fig1).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第二个示例，假设我们要对位于xy平面上的表面进行参数化，该表面由抛物线*y* = *x*²和直线*y* = 4所限定。此表面如[图23-1](ch23.xhtml#ch23fig1)所示。
- en: '![Image](Images/453fig01.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/453fig01.jpg)'
- en: '*Figure 23-1: A parameterized surface*'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*图23-1：一个参数化的表面*'
- en: 'In this case, it makes sense to use *x* and *y* as the parameters. The parameterized
    function for the surface is not very exciting:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，使用*x*和*y*作为参数是有意义的。这个表面的参数化函数并不特别令人兴奋：
- en: '![Image](Images/453equ01.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/453equ01.jpg)'
- en: The interesting part about this surface is the specification of the boundary.
    There’s a lower curve of *y* = *x*² that gives the bottom boundary, an upper curve
    of *y* = 4 that gives the top boundary, a lower limit of *x* = –2 that specifies
    the left boundary, and an upper limit of *x* = 2 that specifies the right boundary.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个曲面有趣的地方在于边界的指定。有一个下界曲线*y* = *x*²给出了底部边界，一个上界曲线*y* = 4给出了顶部边界，一个下限*x* = –2指定了左边界，一个上限*x*
    = 2指定了右边界。
- en: 'For a general surface, we will call our two parameters *s* and *t*. (This parameter
    *s* is unrelated to the *s* of cylindrical coordinates discussed in [Chapter 22](ch22.xhtml).)
    To specify a general surface, we must give five pieces of data: a parameterizing
    function of two variables, a lower curve, an upper curve, a lower limit, and an
    upper limit. Here’s the data type definition for a general surface:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一般的曲面，我们将把两个参数称为*s*和*t*。（这个参数*s*与[第22章](ch22.xhtml)中讨论的圆柱坐标的*s*无关。）为了指定一个一般的曲面，我们必须提供五个数据项：两个变量的参数化函数、下界曲线、上界曲线、下限和上限。以下是一般曲面数据类型的定义：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The function surfaceFunc is the parameterizing function that maps (*s*,*t*)
    into a `Position`. The lower curve is given as a function *t[l]*(*s*) that gives
    the lowest value of *t* on the surface for each value of the parameter *s*. The
    upper curve is given as a function *t[u]*(*s*) that gives the highest value of
    *t* on the surface for each value of the parameter *s*. The lower limit *s[l]*
    is the lowest value of *s* on the surface, and the upper limit *s[u]* is the largest
    value of *s* on the surface.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 函数surfaceFunc是一个参数化函数，将(*s*,*t*)映射到一个`Position`。下界曲线作为一个函数*t[l]*(*s*)给出，它为每个*s*值提供曲面上*t*的最小值。上界曲线作为一个函数*t[u]*(*s*)给出，它为每个*s*值提供曲面上*t*的最大值。下限*s[l]*是曲面上*s*的最小值，上限*s[u]*是曲面上*s*的最大值。
- en: Examples of Surfaces
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 曲面的示例
- en: 'To encode the unit sphere we discussed earlier, we can write the following:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要编码我们之前讨论的单位球体，可以写出以下内容：
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In this case, we want constant functions for the lower and upper curves, so
    we use the const function to turn a number into a constant function and the `$`
    operator to avoid the need for parentheses around `2*pi`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们希望为下界和上界曲线使用常数函数，因此我们使用const函数将一个数字转换为常数函数，并使用`$`运算符避免在`2*pi`周围使用括号。
- en: Unsurprisingly, it’s easier to specify a unit sphere in spherical coordinates.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 不出所料，在球坐标中指定单位球体更为简单。
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In spherical coordinates, we use the same parameters (*θ*,*ϕ*), the same lower
    and upper curves, and the same limits. Only the parameterizing function changes.
    The surface `unitSphere'` is the same surface as unitSphere.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在球坐标中，我们使用相同的参数（*θ*，*ϕ*），相同的上下曲线，以及相同的限制条件。只有参数化函数发生了变化。表面`unitSphere'`与unitSphere是相同的表面。
- en: Let’s encode our parabolic surface from [Figure 23-1](ch23.xhtml#ch23fig1).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们对[图23-1](ch23.xhtml#ch23fig1)中的抛物面进行编码。
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We use anonymous functions to specify both the surface parameterization and
    the parabolic lower boundary curve.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用匿名函数来指定表面的参数化以及抛物线下边界曲线。
- en: What about a sphere centered at an arbitrary position with an arbitrary radius?
    We could parameterize it by hand, but instead let’s define a function that shifts
    the location of any surface. That seems like a useful function to have around.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何处理一个以任意位置为中心且具有任意半径的球体呢？我们可以手动对其进行参数化，但不如定义一个函数来移动任意表面的位置。这个函数似乎非常有用。
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `shiftSurface` function doesn’t change the limits of the parameters being
    used. Instead, it shifts the positions that the parameterizing function `g` was
    providing by the displacement vector `d`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`shiftSurface`函数不会改变正在使用的参数的限制条件。相反，它会通过位移向量`d`来移动参数化函数`g`所提供的位置。'
- en: Next, we define a centered sphere with an arbitrary radius.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们定义一个具有任意半径的中心球面。
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Finally, we define a sphere with an arbitrary center and arbitrary radius.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们定义一个具有任意中心和任意半径的球面。
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Here’s the northern hemisphere of the unit sphere:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这是单位球体的北半球：
- en: '[PRE13]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Here’s a disk in the xy-plane, centered at the origin:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个位于xy平面上的圆盘，中心在原点：
- en: '[PRE14]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'I don’t think the term “unit cone” is standard terminology, but here is a cone
    in which the circular boundary of the base lies on a unit sphere, with the vertex
    of the cone at the center of the sphere:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为“单位圆锥”这个术语不是标准术语，但这里是一个圆锥，其中底面的圆形边界位于单位球面上，圆锥的顶点位于球心：
- en: '[PRE15]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: These surfaces, or ones you write, can be used in [Chapter 24](ch24.xhtml) to
    form a charge distribution in which charge is distributed across a surface, or
    in [Chapter 26](ch26.xhtml) to form a current distribution in which current flows
    across a surface. Closed surfaces, such as spheres, can be used with Gauss’s law.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这些表面，或者你自己写的表面，可以在[第24章](ch24.xhtml)中用于形成一个电荷分布，其中电荷分布在表面上，或者在[第26章](ch26.xhtml)中用于形成一个电流分布，其中电流流过表面。闭合表面，例如球面，可以与高斯定律一起使用。
- en: Orientation
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定向
- en: Our surfaces are oriented surfaces. An *orientation* is a choice of which direction
    (perpendicular to the surface) to consider “positive.” If ![Image](Images/scap.jpg)
    is a unit vector pointing in the direction of increasing *s*, and ![Image](Images/tcap.jpg)
    is a unit vector pointing in the direction of increasing *t*, then the positive
    direction for orientation is ![Image](Images/455equ01.jpg). (The parameter *s*
    used in specifying a surface and its associated unit vector ![Image](Images/scap.jpg)
    are unrelated to the cylindrical coordinate *s* and its associated unit vector
    ![Image](Images/scap.jpg). Context should make clear which is meant.) The orientation
    of a surface is important in a flux integral, which is used to calculate electric
    flux, magnetic flux, and current flowing through a surface.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的表面是有方向的表面。*定向*是选择哪个方向（垂直于表面）被视为“正方向”。如果![Image](Images/scap.jpg)是指向* s *增大的方向的单位向量，且![Image](Images/tcap.jpg)是指向*t*增大的方向的单位向量，则定向的正方向是![Image](Images/455equ01.jpg)。（用于指定表面及其相关单位向量![Image](Images/scap.jpg)的参数*s*与圆柱坐标*s*及其相关单位向量![Image](Images/scap.jpg)无关。上下文应该能明确表示是哪一个。）表面的定向在通量积分中非常重要，通量积分用于计算通过表面的电通量、磁通量和电流。
- en: Let’s determine the orientation for the `unitSphere`. We used spherical coordinates
    to parameterize this surface, with the first parameter (in general called *s*)
    being *θ* for the unit sphere and the second parameter (in general called *t*)
    being *ϕ* for the unit sphere. Therefore, as shown in [Figure 23-2](ch23.xhtml#ch23fig2),
    the orientation of the unit sphere is positive in the ![Image](Images/455equ04.jpg)
    direction. In spherical coordinates, ![Image](Images/455equ03.jpg), meaning that
    “outward” is the positive direction of orientation for the unit sphere.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来确定 `unitSphere` 的方向。我们使用球坐标来参数化这个表面，第一个参数（通常称为 *s*）是单位球的 *θ*，第二个参数（通常称为
    *t*）是单位球的 *ϕ*。因此，如 [图 23-2](ch23.xhtml#ch23fig2) 所示，单位球的方向是正向的，指向 ![Image](Images/455equ04.jpg)
    方向。在球面坐标中，![Image](Images/455equ03.jpg)，这意味着“朝外”是单位球的正方向。
- en: '![Image](Images/456fig01.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/456fig01.jpg)'
- en: '*Figure 23-2: When the first parameter s is *θ* and the second parameter t
    is *ϕ*, the direction of orientation is ![Image](Images/455equ04.jpg), which is
    the same as ![Image](Images/rcap.jpg), so the orientation is outward.*'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-2：当第一个参数 s 是 *θ* 且第二个参数 t 是 *ϕ* 时，方向是 ![Image](Images/455equ04.jpg)，与
    ![Image](Images/rcap.jpg) 相同，因此方向是朝外的。*'
- en: We could make a unit sphere with “inward” as the orientation, but we would need
    to parameterize it differently from the `unitSphere`. If we take *ϕ* as the first
    parameter and *θ* as the second, the orientation is inward.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以做一个单位球体，将“朝内”作为方向，但我们需要与 `unitSphere` 不同的参数化方法。如果我们将 *ϕ* 作为第一个参数，*θ* 作为第二个参数，那么方向是朝内的。
- en: Volumes
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 体积
- en: 'When we have a charge that’s distributed throughout a volume, we’ll use a volume
    charge density to describe it; therefore, we’ll need a new data type to describe
    a volume. We need to specify seven pieces of data to describe a volume:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们有一个分布在体积中的电荷时，我们将使用体积电荷密度来描述它；因此，我们需要一个新的数据类型来描述体积。我们需要指定七个数据项来描述一个体积：
- en: 1\. A parameterizing function from three parameters (*s*,*t*,*u*) into space
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 一个从三个参数 (*s*,*t*,*u*) 到空间的参数化函数
- en: 2\. A lower surface *u[l]*(*s*,*t*) describing the lowest value of *u* for each
    (*s*,*t*)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 一个下表面 *u[l]*(*s*,*t*)，描述每个 (*s*,*t*) 对应的 *u* 的最小值
- en: 3\. An upper surface *u[u]*(*s*,*t*) describing the highest value of *u* for
    each (*s*,*t*)
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 一个上表面 *u[u]*(*s*,*t*)，描述每个 (*s*,*t*) 对应的 *u* 的最大值
- en: 4\. A lower curve *t[l]*(*s*) describing the lowest value of *t* for each value
    of *s*
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 一个下曲线 *t[l]*(*s*)，描述每个 *s* 值对应的 *t* 的最小值
- en: 5\. An upper curve *t[u]*(*s*) describing the highest value of *t* for each
    value of *s*
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 一个上曲线 *t[u]*(*s*)，描述每个 *s* 值对应的 *t* 的最大值
- en: 6\. A lower limit *s[l]* describing the lowest value of *s*
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. 一个下限 *s[l]*，描述 *s* 的最小值
- en: 7\. An upper limit *s[u]* describing the highest value of *s*
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 7\. 一个上限 *s[u]*，描述 *s* 的最大值
- en: 'Here’s the definition of the `Volume` data type:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `Volume` 数据类型的定义：
- en: '[PRE16]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The volumeFunc for a given `Volume` has type `(R,R,R) -> Position`. Recall from
    [Chapter 22](ch22.xhtml) that this type is the same as `CoordinateSystem`. We’ll
    often want to use cartesian, cylindrical, or spherical as our volumeFunc, although
    it’s possible to invent your own coordinate system.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 给定 `Volume` 的 volumeFunc 类型为 `(R,R,R) -> Position`。回想一下在 [第 22 章](ch22.xhtml)
    中提到的，这个类型与 `CoordinateSystem` 是相同的。我们通常会使用笛卡尔坐标系、圆柱坐标系或球面坐标系作为我们的 volumeFunc，尽管你也可以发明自己的坐标系统。
- en: 'Here’s a unit ball, centered at the origin:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个以原点为中心的单位球：
- en: '[PRE17]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'For the volumeFunc, we use spherical, which means that the parameters (*s*,*t*,*u*)
    are the spherical coordinates (*r*,*θ*,*ϕ*). We must provide a lower limit *r[l]*,
    an upper limit *r[u]*, a lower curve *θ[l]*(*r*), an upper curve *θ[u]*(*r*),
    a lower surface *ϕ[l]*(*r*,*θ*), and an upper surface *ϕ[u]*(*r*,*θ*). For a ball,
    we should pick the following:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 volumeFunc，我们使用球面坐标系，这意味着参数 (*s*,*t*,*u*) 是球坐标系中的 (*r*,*θ*,*ϕ*)。我们必须提供下限
    *r[l]*、上限 *r[u]*、下曲线 *θ[l]*(*r*)、上曲线 *θ[u]*(*r*)、下表面 *ϕ[l]*(*r*,*θ*) 和上表面 *ϕ[u]*(*r*,*θ*)。对于一个球体，我们应该选择以下内容：
- en: '![Image](Images/457equ01.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/457equ01.jpg)'
- en: Notice that *θ[l]* is the function *r* ↦ 0 (in Haskell notation `\r -> 0` or
    `\_ -> 0`). This the same as the constant function that returns 0 for any input
    (in Haskell notation const 0). The function *ϕ[l]* takes *two* inputs and returns
    0 (in Haskell notation `\_ _ -> 0`).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，*θ[l]* 是函数 *r* ↦ 0（在 Haskell 表示法中为 `\r -> 0` 或 `\_ -> 0`）。这与返回 0 的常数函数相同（在
    Haskell 表示法中为 const 0）。函数 *ϕ[l]* 接受 *两个* 输入并返回 0（在 Haskell 表示法中为 `\_ _ -> 0`）。
- en: Here’s a cylinder with a circular base centered at the origin and circular top
    in the plane *z* = *h*. We give the radius and height of the cylinder as inputs
    to the function `centeredCylinder`.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个圆柱体，底面圆心位于原点，顶部圆面位于*z* = *h*平面。我们将圆柱的半径和高度作为输入传递给函数`centeredCylinder`。
- en: '[PRE18]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: These volumes, or ones you write, can be used in [Chapter 24](ch24.xhtml) to
    form a charge distribution in which charge is distributed throughout a volume,
    or in [Chapter 26](ch26.xhtml) to form a current distribution in which current
    flows throughout a volume.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这些体积，或你编写的体积，可以在[第24章](ch24.xhtml)中用于形成一个电荷分布，在其中电荷分布在整个体积内，或者在[第26章](ch26.xhtml)中用于形成一个电流分布，在其中电流流经整个体积。
- en: Summary
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we developed the data types `Curve`, `Surface`, and `Volume`
    for describing geometric objects. We defined some particular geometric objects,
    such as `unitCircle`, `sphere`, and `unitBall`. These curves, surfaces, and volumes
    will become objects we integrate over to calculate electric fields, and they will
    also serve as the abstract settings for Gauss’s law and Ampere’s law. The next
    chapter discusses charge distributions in preparation for the following chapter
    on electric fields.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们开发了`Curve`、`Surface`和`Volume`数据类型，用于描述几何体。我们定义了一些特定的几何体，比如`unitCircle`、`sphere`和`unitBall`。这些曲线、表面和体积将成为我们积分以计算电场的对象，它们也将作为高斯定律和安培定律的抽象背景。下一章将讨论电荷分布，为接下来的电场章节做准备。
- en: Exercises
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习题
- en: '**Exercise 23.1.** Replace the undefined r radius below with a definition that
    will take a center position and radius and produce a circle parallel to the xy-plane.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.1.** 替换下面未定义的半径r，给出一个定义，该定义将接受一个中心位置和半径，并生成一个与xy平面平行的圆。'
- en: '[PRE19]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '**Exercise 23.2.** A helix can be parameterized most easily in cylindrical
    coordinates. In cylindrical coordinates (*s*,*ϕ*,*z*), a helix with radius 1 can
    be parameterized as'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.2.** 螺旋线最容易用圆柱坐标参数化。在圆柱坐标系（*s*,*ϕ*,*z*）中，半径为1的螺旋线可以参数化为'
- en: '![Image](Images/458equ01.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/458equ01.jpg)'
- en: Define a `Curve` for this helix. Choose end points so that the helix makes five
    loops around.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为这个螺旋线定义一个`Curve`。选择端点使得螺旋线围绕中心旋转五圈。
- en: '**Exercise 23.3.** A square has four sides. Let’s make a `Curve` to represent
    a square with vertices (–1,–1,0), (1,–1,0), (1,1,0), and (–1,1,0). Make the orientation
    of the curve counterclockwise. Fill in the parts that are `undefined`.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.3.** 一个正方形有四条边。让我们定义一个`Curve`来表示一个顶点为（–1,–1,0）、（1,–1,0）、（1,1,0）和（–1,1,0）的正方形。使曲线的方向为逆时针。填写`undefined`部分。'
- en: '[PRE20]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**Exercise 23.4.** Define a `Surface` for a cone with height *h* and radius
    *r*. Do not include the surface of the base of the cone. Position and orient the
    cone however it’s convenient.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.4.** 为一个高度为*h*，半径为*r*的圆锥体定义一个`Surface`。不要包括圆锥底面的表面。你可以根据需要调整圆锥的位置和方向。'
- en: '**Exercise 23.5.** Replace the undefined that follows with a definition of
    an upper-half ball (*z* ≥ 0) with unit radius, centered at the origin.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.5.** 替换下面未定义的部分，给出一个半径为单位的上半球（*z* ≥ 0）的定义，球心位于原点。'
- en: '[PRE21]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**Exercise 23.6.** Replace the `undefined` that follows with a definition of
    a ball with given a radius centered at the origin. (The `R` is the type of the
    radius, and you may want to put a variable for the radius on the left of the equal
    sign.)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.6.** 替换下面的`undefined`部分，给出一个给定半径并以原点为中心的球体的定义。（`R`是半径的类型，你可能想要在等号左侧放一个半径的变量。）'
- en: '[PRE22]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '**Exercise 23.7.** What is the type of `shiftPosition d` in the definition
    of `shift` `Surface` given earlier?'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.7.** 在之前给出的`shift` `Surface`定义中，`shiftPosition d`的类型是什么？'
- en: '**Exercise 23.8.** Define a function'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.8.** 定义一个函数'
- en: '[PRE23]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: that takes a displacement vector and a volume as input and returns a shifted
    volume as output.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 它接受一个位移向量和一个体积作为输入，并返回一个平移后的体积作为输出。
- en: '**Exercise 23.9.** Define a function'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.9.** 定义一个函数'
- en: '[PRE24]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: that takes a radius as input and gives a `Curve` as output corresponding to
    [Figure 23-3](ch23.xhtml#ch23fig3).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 它接受一个半径作为输入，并给出一个与[图 23-3](ch23.xhtml#ch23fig3)对应的`Curve`作为输出。
- en: '![Image](Images/459fig01.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/459fig01.jpg)'
- en: '*Figure 23-3: A curve representing the boundary of a quarter disk*'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-3：表示四分之一圆盘边界的曲线*'
- en: '**Exercise 23.10.** Define a `Surface` for the rectangular region that is shown
    in [Figure 23-4](ch23.xhtml#ch23fig4). Choose your parameterization so that the
    orientation is in the ![Image](Images/icap.jpg) direction (the positive x-direction).'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.10.** 为[图 23-4](ch23.xhtml#ch23fig4)中显示的矩形区域定义一个`Surface`。选择你的参数化方式，使得方向朝向![Image](Images/icap.jpg)方向（即正x方向）。'
- en: '![Image](Images/460fig01.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/460fig01.jpg)'
- en: '*Figure 23-4: A surface in the yz-plane*'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-4：yz 平面中的一个曲面*'
- en: '**Exercise 23.11.** Define a function'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.11.** 定义一个函数'
- en: '[PRE25]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: that takes a height *h* and radius *R* as input and gives a `Volume` as output
    corresponding to [Figure 23-5](ch23.xhtml#ch23fig5).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数接受高度 *h* 和半径 *R* 作为输入，并返回一个对应于[图 23-5](ch23.xhtml#ch23fig5)的`Volume`。
- en: '![Image](Images/460fig02.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/460fig02.jpg)'
- en: '*Figure 23-5: A volume representing a quarter cylinder*'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 23-5：表示四分之一圆柱体的体积*'
- en: '**Exercise 23.12.**'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 23.12.**'
- en: (a) Define a `Surface` for a torus with major radius 3 and minor radius 0.5.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: (a) 定义一个`Surface`，表示一个大半径为 3，小半径为 0.5 的环面。
- en: (b) Define a `Volume` for the space inside the torus of part (a).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: (b) 定义一个`Volume`，表示（a）部分环面内部的空间。
