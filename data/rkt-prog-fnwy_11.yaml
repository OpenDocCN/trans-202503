- en: A
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: A
- en: Number Bases
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 数字基数
- en: '![Image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/common01.jpg)'
- en: The word *digit* derives from the Latin word *digitius*, meaning finger or toe.
    Of course we take this as the origin of our counting digits zero through nine,
    which we can match with our fingers (or toes). These digits form the basis of
    our base-10 or decimal number system. The positional number system commonly in
    use today is called the *Hindu–Arabic numeral system*. The works of Muhammad ibn
    Mūsā al-Khwārizm̄ī (for example *On the Calculation with Hindu Numerals*, c. 825)
    were influential in the introduction of this system. The innovation was using
    the position of each digit to represent which power of 10 to multiply the digit
    by. This made calculations much simpler than using other systems, such as Roman
    numerals.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*数字*这个词来源于拉丁语*digitus*，意为手指或脚趾。当然，我们将其视为我们从零到九的计数数字的起源，可以通过手指（或脚趾）来匹配这些数字。这些数字构成了我们的十进制或基数为10的数字系统的基础。当前常用的位置数字系统称为*印度-阿拉伯数字系统*。穆罕默德·伊本·穆萨·阿尔·赫瓦里兹米的著作（例如《用印度数字进行计算》，约公元825年）在这一系统的引入中具有影响力。创新之处在于利用每个数字的位置来表示该数字乘以的10的幂。与使用其他系统（如罗马数字）相比，这使得计算变得更加简便。'
- en: The decimal number system assigns to each digit position a power of 10, starting
    with the rightmost digit in a string of digits. The meaning of a string of digits
    is then derived by multiplying each digit by the corresponding power of 10, as
    seen in [Figure A-1](app01.xhtml#chAfig1).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 十进制数字系统为每个数字位置分配了一个10的幂次，从数字串中的最右侧数字开始。数字串的含义则通过将每个数字与对应的10的幂相乘来得出，如[图 A-1](app01.xhtml#chAfig1)所示。
- en: '![Image](../images/Afig01.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/Afig01.jpg)'
- en: '*Figure A-1: Base-10 positional values*'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 A-1：基数为10的位置值*'
- en: 'This is taken to mean the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着以下内容：
- en: 271828 = 2 ⋅ 10⁵ + 7 ⋅ 10⁴ + 1 ⋅ 10³ + 8 ⋅ 10² + 2 ⋅ 10¹ + 8 ⋅ 10⁰
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 271828 = 2 ⋅ 10⁵ + 7 ⋅ 10⁴ + 1 ⋅ 10³ + 8 ⋅ 10² + 2 ⋅ 10¹ + 8 ⋅ 10⁰
- en: 'A concise way to represent this value is as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 表示此值的一种简洁方式如下：
- en: '![Image](../images/p0318-01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/p0318-01.jpg)'
- en: Here *d*[0] = 8, *d*[1] = 2, …, *d*[5] = 2—the digits from least to most significant.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 *d*[0] = 8, *d*[1] = 2, …, *d*[5] = 2——从最低位到最高位的数字。
- en: The decimal system isn’t the only possible number system. Any integer greater
    than 1 can be used as the base of a number system. If you were a citizen of a
    universe where people only had eight fingers (see [Figure A-2](app01.xhtml#chAfig2)),
    you’d probably use the octal (or base-8) number system.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 十进制系统并不是唯一的数字系统。任何大于1的整数都可以用作数字系统的基数。如果你生活在一个人们只有八个手指的宇宙中（见[图 A-2](app01.xhtml#chAfig2)），你可能会使用八进制（或基数为8）数字系统。
- en: '![Image](../images/Afig02.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/Afig02.jpg)'
- en: '*Figure A-2: The octal digits*'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 A-2：八进制数字*'
- en: 'Numbers in bases other than 10 are normally printed with the base as a subscript
    of the number. A number in the octal system would be printed as 1234[8]. We can
    convert this to decimal as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 除10进制外的其他基数系统中的数字通常以数字的下标形式表示基数。一个八进制数会写作1234[8]。我们可以按以下方式将其转换为十进制：
- en: '![Image](../images/p0318-02.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/p0318-02.jpg)'
- en: As is well known, computers internally work strictly on the binary (or base-2)
    number system. Three binary digits are capable of representing the numbers from
    0 to 7, which, as we’ve seen, form the basis of the octal number system. Four
    binary digits can represent the numbers from 0 to 15 (the base-16 digits). Since
    the numbers 10 through 15 take more than one decimal digit to represent, the letters
    A through F are used instead. That is, A=10, B=11, etc. This is known as the hexadecimal
    number system. For example, the number FACE[16] = 64206, as shown below.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如大家所知，计算机内部严格按照二进制（或基数为2）数字系统工作。三个二进制数字能够表示从0到7的数字，这些数字，如我们所见，构成了八进制数字系统的基础。四个二进制数字可以表示从0到15的数字（基数为16的数字）。由于数字10到15需要多个十进制数字来表示，因此使用字母A到F代替。也就是说，A=10，B=11，依此类推。这就是所谓的十六进制数字系统。例如，数字FACE[16]
    = 64206，如下所示。
- en: '![Image](../images/p0318-03.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/p0318-03.jpg)'
- en: Two hexadecimal digits (or eight binary digits) constitute what’s called a byte.
    Bytes aren’t usually used as a number basis, but they’re a common unit used to
    designate the size of computer memory.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 两个十六进制数字（或八个二进制数字）构成所谓的一个字节。字节通常不是用作数字的基数，但它们是用来表示计算机内存大小的常见单位。
- en: Here’s some Racket code that takes a positive decimal integer and returns a
    list consisting of the digits that form the binary representation of the number.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些Racket代码，它接受一个正十进制整数，并返回一个包含该数字二进制表示的数字列表。
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This works by extracting the least significant (rightmost) binary digit and
    reducing the value of *n* by dividing by 2 to get to the next digit.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法通过提取最不重要的（二进制中最右边的）数字，并通过除以2来减少*n*的值，从而得到下一个数字。
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Racket also provides the ˜`r` function, which takes a base-10 value and outputs
    a formatted string in another base.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Racket还提供了˜`r`函数，它接受一个十进制值并输出以另一进制格式化的字符串。
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
