- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Network Analysis
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 网络分析
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: In [Chapter 2](c02.xhtml), we considered a few network geometry metrics; in
    this chapter, we’ll use them. First, we’ll explain how vertex metrics allow you
    to do supervised learning within a network, that is, predicting values associated
    to vertices and predicting new edges in the network; we’ll also look at how vertex
    metrics enable you to cluster vertices in a network. We’ll then discuss a few
    clustering algorithms that operate directly within the geometry of the network.
    Next, we’ll explain how to use global network metrics to do machine learning and
    statistical analyses on datasets that consist of collections of networks. We’ll
    then explore a network variant of the susceptible, infected, and recovered (SIR)
    model from epidemiology. With this model, we can see how entities (from diseases
    to misinformation) spread through networks and how network geometry influences
    this spread. Finally, we’ll examine how we can use vertex metrics to devise targeted
    strategies for disrupting this spread.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](c02.xhtml)中，我们讨论了一些网络几何指标；在本章中，我们将使用这些指标。首先，我们将解释如何通过顶点指标在网络中进行监督学习，即预测与顶点相关的值并预测网络中的新边；我们还将探讨顶点指标如何使你能够在网络中进行顶点聚类。然后，我们将讨论一些直接在网络几何结构内操作的聚类算法。接下来，我们将解释如何使用全局网络指标对包含多个网络的数据集进行机器学习和统计分析。然后，我们将探讨流行病学中的易感、感染和恢复（SIR）模型的网络变体。通过这个模型，我们可以观察到从疾病到错误信息等实体是如何在网络中传播的，以及网络几何如何影响这种传播。最后，我们将研究如何使用顶点指标制定有针对性的策略来干扰这种传播。
- en: Using Network Data for Supervised Learning
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用网络数据进行监督学习
- en: Network data is often accompanied by a traditional structured dataset where
    the rows are identified with the vertices in the network. For instance, you might
    have a social network dataset that consists of a list of individuals (the vertices),
    the friendships between them (edges in the network), and one or more numerical
    or categorical columns providing additional non-network information about each
    individual—such as age, gender, or salary. We might want to consider this as a
    supervised learning problem, where we train a machine learning algorithm to predict
    one of the data columns. The way to do this is to use vertex metrics as independent
    variables (along with any of the other data columns), which lets the algorithm
    incorporate the network role of each vertex when making predictions. Let’s try
    this.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 网络数据通常伴随着传统的结构化数据集，其中的行通过网络中的顶点进行标识。例如，你可能有一个社交网络数据集，其中包含个人（顶点）列表、他们之间的友谊（网络中的边）以及一列或多列提供有关每个个体的额外非网络信息的数值或分类列——例如年龄、性别或薪水。我们可能希望将此视为一个监督学习问题，在其中我们训练一个机器学习算法来预测数据列中的一个值。做到这一点的方法是使用顶点指标作为自变量（以及其他任何数据列），这使得算法在进行预测时可以结合每个顶点在网络中的角色。让我们来试试这个方法。
- en: Making Predictions with Social Media Network Metrics
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 利用社交媒体网络指标进行预测
- en: Let’s return to Farrelly’s social network, which we analyzed in the previous
    chapter to illustrate the different measures of vertex centrality. How might bridges
    between different parts of the network or hubs tightly connecting a few medical
    school friends influence how often Farrelly mentioned those individuals in her
    diary during the first term of medical school? Let’s take a look at how network
    metrics relate to diary mentions in this social network.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到Farrelly的社交网络，之前我们在第2章分析了该网络，说明了不同的顶点中心性度量。不同网络部分之间的桥梁或紧密连接一些医学院朋友的中心节点，如何影响Farrelly在医学院第一学期的日记中提到这些人的频率呢？让我们看看网络指标如何与这个社交网络中的日记提及相关。
- en: We’ll choose a few vertex centrality metrics and attach Farrelly’s diary data
    as a dependent variable in the set. Let’s load the data and examine the distribution
    of our dependent variable with [Listing 3-1](#listing3-1).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将选择几个顶点中心性指标，并将Farrelly的日记数据作为该集合中的因变量。让我们加载数据，并使用[列表 3-1](#listing3-1)检查因变量的分布。
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Listing 3-1: A script that imports the relevant *.csv* file for further analysis'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 3-1：导入相关的 *.csv* 文件以进行进一步分析的脚本
- en: '[Figure 3-1](#figure3-1) shows a histogram of the dependent variable’s distribution
    (Poisson).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-1](#figure3-1) 显示了因变量分布的直方图（泊松分布）。'
- en: '![](image_fi/503083c03/f03001.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03001.png)'
- en: 'Figure 3-1: A histogram of diary entry data for Farrelly’s social network'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3-1：Farrelly社交网络的日记条目数据的直方图
- en: Generally, count variables, such as those conforming to the Poisson distribution,
    include a lot of zero and near-zero values, along with some large values. We can
    see from [Figure 3-1](#figure3-1) that this outcome is Poisson distributed. Poisson-distributed
    variables can pose issues to machine learning algorithms, as they involve a lot
    of zero values and some outliers, such as the diary entries involving V10\. This
    suggests that a generalized linear model (Poisson regression) is probably more
    appropriate of a supervised learning model than other machine learning algorithms.
    It looks like most individuals in the network receive few (if any) mentions over
    the term. However, a few outliers exist, including Farrelly and her closest friends
    within the network (V3, V10, and V14). Let’s dive deeper to see how centrality
    measures predict diary mentions. In [Listing 3-2](#listing3-2), we sample Farrelly’s
    social network metrics of interest and use them as independent variables in our
    Poisson regression model.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，计数变量，如符合泊松分布的变量，包含大量零值和接近零的值，以及一些大值。从[图3-1](#figure3-1)可以看到，这一结果符合泊松分布。泊松分布的变量可能会对机器学习算法造成问题，因为它们涉及大量的零值和一些异常值，比如涉及V10的日记条目。这表明，与其他机器学习算法相比，广义线性模型（泊松回归）可能是更适合的监督学习模型。看起来网络中的大多数个体在整个学期中几乎没有（如果有的话）被提及。然而，还是存在一些异常值，包括法雷利和她在网络中的最亲密朋友（V3、V10和V14）。让我们深入探讨一下，看看中心性度量如何预测日记提及。在[清单3-2](#listing3-2)中，我们对法雷利社交网络中的相关指标进行了采样，并将其作为自变量纳入我们的泊松回归模型。
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Listing 3-2: A script that computes a Poisson regression and analyzes its results'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 清单3-2：计算泊松回归并分析其结果的脚本
- en: Your results may vary depending on your R version’s seeding, but in the samples
    we modeled with this dataset and other seeds (9 of 10 random splits), the summary
    functions show that betweenness centrality seems to have large coefficient values
    in the model and be the most consistent predictor of diary entry mentions across
    subsets of Farrelly’s social network data modeled with our regression function.
    The Chi-squared test values in our samples ranged from *p* < 0.01 to *p* = 0.25\.
    When we examine the plots associated with the linear regression, we can see that
    most of our sample fits the regression equation well. [Figure 3-2](#figure3-2)
    shows two of the plots generated by [Listing 3-2](#listing3-2) (including V3,
    V7, and V13 as outliers).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你的结果可能会因R版本的种子设置不同而有所变化，但在我们使用这个数据集和其他种子（10次随机分割中的9次）建模的样本中，汇总函数显示，介数中心性似乎在模型中具有较大的系数值，并且是预测法雷利社交网络数据集中日记条目提及最一致的指标。我们的样本中的卡方检验值从*p*
    < 0.01到*p* = 0.25不等。当我们检查与线性回归相关的图表时，可以看到大部分样本很好地符合回归方程。[图3-2](#figure3-2)展示了[清单3-2](#listing3-2)生成的两幅图（包括V3、V7和V13作为异常值）。
- en: The small sample size likely contributes to the variation between samples, but
    overall, we have a good predictive model. Indeed, this reflects Farrelly’s own
    intuition that the bridges of her network tended to coordinate memorable events
    and activities that brought together various pieces of her network that term.
    We’ll return to the instability of regression models on small sample sizes with
    outliers in [Chapter 6](c06.xhtml) and [Chapter 8](c08.xhtml), along with more
    stable models you can use for these situations to get consistent model results.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 小样本量可能是导致样本间差异的原因之一，但总体而言，我们有一个良好的预测模型。事实上，这反映了法雷利自己直觉的观点，即她的社交网络中的桥梁往往协调那些能将她的社交网络中不同部分结合起来的、令人难忘的事件和活动。我们将在[第6章](c06.xhtml)和[第8章](c08.xhtml)中回顾小样本量和异常值对回归模型的不稳定性，并介绍一些更稳定的模型，以便在这些情况下获得一致的模型结果。
- en: '![](image_fi/503083c03/f03002.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03002.png)'
- en: 'Figure 3-2: Residual and quantile plots of the Poisson regression run in [Listing
    3-2](#listing3-2)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图3-2：在[清单3-2](#listing3-2)中运行的泊松回归的残差图和分位数图
- en: Bigger networks with dependent variables more closely tied to one’s social network
    (such as strength of political views, workout habits, and so on) tend to work
    better in this sort of analysis. Within biological networks, centrality measures
    might be used to predict disease severity, likelihood of response to a drug undergoing
    clinical trials, or disease risk at six months after a social-network-based behavioral
    health intervention. Analyzing the geometry of the network often produces useful
    independent variables for predicting some quality associated with the vertices
    of the network.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种分析中，具有依赖变量且与个人社交网络更紧密相关的更大网络（例如政治观点的强度、锻炼习惯等）通常表现得更好。在生物网络中，中心性度量可以用来预测疾病的严重程度、药物在临床试验中的反应概率，或社交网络基础上的行为健康干预六个月后的疾病风险。分析网络的几何形状通常会产生有用的独立变量，用于预测与网络节点相关的某些特性。
- en: Predicting Network Links in Social Media
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 预测社交媒体中的网络链接
- en: Another important form of supervised learning in a network is *link prediction*,
    in which potential new edges are inferred from a network’s structure or metadata.
    One way to predict links is to use prior growth patterns of a network to predict
    which edges are most likely to appear next. This has many real-world applications,
    some of the most notable being in social media. Whenever Facebook or another platform
    suggests a person for you to friend, an algorithm has run a link prediction on
    its network of users behind the scenes and given the missing edge between you
    and this potential friend a high score. There are many sophisticated methods for
    performing link prediction, but a common general strategy is to translate the
    problem to a traditional Euclidean supervised learning task. Let’s explore this
    conceptually using Farrelly’s social network as an example.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 网络中另一种重要的监督学习形式是*链接预测*，它根据网络的结构或元数据推断潜在的新边。预测链接的一种方法是利用网络的先前增长模式来预测哪些边最有可能出现。这在现实世界中有许多应用，其中一些最显著的应用是在社交媒体中。每当
    Facebook 或其他平台建议你添加某人为好友时，后台算法会对其用户网络运行链接预测，并给你与这个潜在好友之间的缺失边赋予一个高分。有许多复杂的方法可以进行链接预测，但一种常见的通用策略是将问题转化为传统的欧几里得监督学习任务。让我们以
    Farrelly 的社交网络为例来概念性地探讨这一点。
- en: Imagine this network evolving over time, with a binary indicator denoting edges
    that formed since the last time period. Wouldn’t it be neat if we could predict
    edge formation over a time period based on what the network looked like geometrically
    in the past time period? Or if we could use vertex labels (such as class schedule
    or volunteer days) to predict edge formation in the next time period?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下这个网络随时间演化，二元指标表示自上一个时间段以来形成的边。如果我们能够根据网络在过去时间段中的几何形态来预测某一时间段内的边形成，那岂不是很酷吗？或者如果我们可以使用节点标签（例如课表或志愿者日期）来预测下一个时间段的边形成呢？
- en: For the independent variables, we can use any collection of features associated
    with the two vertices. These can be intrinsic network-based features or extrinsic
    features such as user demographics in a social network. The network-based predictors
    come in two flavors. We can use vertex metrics by choosing a function to aggregate
    the two vertex scores in each pair to a single number (common choices for this
    include sum, max, mean, and absolute value of difference). For instance, we could
    compute the PageRank score for the two vertices in each vertex pair and then take
    the average of these two scores to assign the vertex pair.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于独立变量，我们可以使用与两个节点相关的任何特征集合。这些可以是基于网络的内在特征，也可以是社交网络中用户人口统计等外在特征。基于网络的预测因子有两种类型。我们可以通过选择一个函数，将每一对节点的两个节点分数聚合成一个单一的数字（常见的选择包括求和、最大值、均值和差值的绝对值）。例如，我们可以计算每对节点的
    PageRank 分数，然后取这两个分数的平均值来为节点对赋值。
- en: The other flavor of network-based features uses some measure of the network
    relationship between the two vertices; the most natural choice here is simply
    the network distance between the two vertices, though you can try other options
    such as the number of shortest paths between the two vertices or the average time
    a random walk takes to get from one to the other. All these network-based predictors
    should be computed for the current version of the network rather than the earlier
    snapshot, and these network-based predictors can be combined with any collection
    of non-network features. (In practice, most non-network features are attached
    to individual vertices rather than pairs, so once again you’ll have to aggregate
    them to get a single score for each vertex pair.)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种基于网络的特征使用某种度量来表示两个顶点之间的网络关系；这里最自然的选择是两个顶点之间的网络距离，尽管你也可以尝试其他选项，如两个顶点之间的最短路径数量或随机游走从一个顶点到另一个顶点的平均时间。所有这些基于网络的预测因子应当针对当前版本的网络进行计算，而不是早期的快照，并且这些基于网络的预测因子可以与任何非网络特征结合使用。（实际上，大多数非网络特征是附加在单个顶点上的，而不是顶点对，因此你再次需要对它们进行聚合，以便为每对顶点得到一个单一的评分。）
- en: Once the independent predictors are computed for a time period of interest and
    an indicator variable exists for that time period, a supervised classifier can
    be used to predict edge formation over the time periods of interest. The higher
    the likelihood score for edge formation, the more likely that relationship will
    exist by the next time period. In Farrelly’s social network, betweenness centrality
    would likely be the main network-based predictor, as well as social activity data
    or diary entries from the first term of medical school. Everyone in her original
    social network was connected to her (and most to each other) by the end of that
    term.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦为某一感兴趣时间段计算了独立预测因子，并且该时间段存在指示变量，就可以使用监督分类器来预测该时间段内的边缘形成。边缘形成的可能性得分越高，表示在下一个时间段该关系存在的可能性越大。在
    Farrelly 的社交网络中，介数中心性可能是主要的基于网络的预测因子，以及来自医学第一学期的社交活动数据或日记条目。她原始社交网络中的每个人在学期结束时都与她相连（大多数人彼此之间也有联系）。
- en: Using Network Data for Unsupervised Learning
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用网络数据进行无监督学习
- en: Just as we can use the vertex metrics from [Chapter 2](c02.xhtml) as predictors
    in a supervised learning task, we can also use them as features in unsupervised
    learning tasks. In the case of clustering, this will partition the vertices into
    sets of those with similar functions in the network (hubs, bridges, and so on).
    Clustering vertices is known in the network sciences as *community mining*, so
    when using vertex metrics for this purpose, we obtain communities defined by the
    structural role they play in the network.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们可以使用[第 2 章](c02.xhtml)中的顶点度量作为监督学习任务中的预测因子一样，我们也可以将它们作为无监督学习任务中的特征。在聚类的情况下，这将把顶点划分为具有相似功能的集合（中心、桥梁等）。在网络科学中，聚类顶点被称为
    *社区挖掘*，因此，当我们将顶点度量用于此目的时，我们获得的社区是通过它们在网络中所扮演的结构角色来定义的。
- en: Applying Clustering to the Social Media Dataset
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将聚类应用于社交媒体数据集
- en: In [Listing 3-3](#listing3-3), we apply k-means clustering to Farrelly’s social
    network dataset that was our main running example in [Chapter 2](c02.xhtml).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在[清单 3-3](#listing3-3)中，我们将 k-means 聚类应用于 Farrelly 的社交网络数据集，这是我们在[第 2 章](c02.xhtml)中的主要运行示例。
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Listing 3-3: A script that uses k-means on the vertex metrics to cluster the
    vertices from the network in [Figure 3-1](#figure3-1) into *k* = 3 groups'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 清单 3-3：一个使用 k-means 对顶点度量进行聚类的脚本，将来自[图 3-1](#figure3-1)的网络顶点聚为 *k* = 3 组
- en: Using k-means with *k* = 3 and PageRank, degree, hub centrality, betweenness,
    and transitivity as our features (which we first rescale), we get clusters with
    the means and sizes in [Table 3-1](#table3-1), where they were computed from the
    original prescaled values.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 k-means 方法，*k* = 3，并使用 PageRank、度、中心性、介数和传递性作为特征（我们首先对其进行重新缩放），得到的聚类均值和大小见[表
    3-1](#table3-1)，这些值是从原始重新缩放的值计算得出的。
- en: 'Table 3-1: Cluster Means and Sizes for k-Means Clustering (with *k* = 3) Run
    on a Handful of Vertex Metrics for Farrelly’s Social Network'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3-1：Farrelly 社交网络顶点度量的 k-means 聚类（*k* = 3）的聚类均值和大小
- en: '| **Cluster** | **PageRank** | **Degree** | **Hub score** | **Betweenness**
    | **Transitivity** | **Cluster size** |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| **聚类** | **PageRank** | **度** | **中心性** | **介数** | **传递性** | **聚类大小** |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| 1 | 0.05 | 3.14 | 0.54 | 3.21 | 0.80 | 7 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 0.05 | 3.14 | 0.54 | 3.21 | 0.80 | 7 |'
- en: '| 2 | 0.11 | 8.00 | 1.00 | 100.50 | 0.25 | 1 |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 0.11 | 8.00 | 1.00 | 100.50 | 0.25 | 1 |'
- en: '| 3 | 0.05 | 2.50 | 0.08 | 25.75 | 0.097 | 12 |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 0.05 | 2.50 | 0.08 | 25.75 | 0.097 | 12 |'
- en: Since k-means involves a random initiation, you might get different clustering
    results each time you try this. For this particular clustering, we see that one
    vertex has been assigned its own cluster (Farrelly’s vertex, V7); all of this
    vertex’s scores other than transitivity are exceptionally high, so it is an outlier
    in many metrics. All the remaining vertices are split between the other two clusters,
    which seem mostly distinguished by the fact that one cluster has higher hub and
    transitivity scores, while the other cluster has higher betweenness. Let’s plot
    this network with the vertices labeled by cluster (doing so is an easy adaptation
    of the code in [Listing 3-3](#listing3-3)); see [Figure 3-3](#figure3-3).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 k-means 聚类涉及随机初始化，因此每次尝试时可能会得到不同的聚类结果。对于这个特定的聚类，我们看到一个顶点被分配到它自己的聚类（Farrelly
    的顶点，V7）；除了转移性得分之外，这个顶点的所有得分都异常高，因此在许多指标上它是一个异常值。其余的顶点被分配到另外两个聚类中，这两个聚类似乎主要通过以下特征区分：一个聚类具有较高的枢纽度和转移性得分，而另一个聚类具有较高的介数中心性。让我们通过对顶点按聚类标记进行绘图来展示这个网络（这样做是对
    [列表 3-3](#listing3-3) 中代码的简单改编）；见 [图 3-3](#figure3-3)。
- en: '![](image_fi/503083c03/f03003.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03003.png)'
- en: 'Figure 3-3: Farrelly’s social network colored and labeled by cluster for the
    k-means clusters summarized in [Table 3-1](#table3-1)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3-3：Farrelly 的社交网络按聚类着色和标注，对应于 [表 3-1](#table3-1) 中总结的 k-means 聚类
- en: We see that Farrelly is indeed her own cluster, and rather remarkably, cluster
    1 is almost precisely the remaining medical school individuals, while cluster
    2 is the veterans group individuals. Interestingly, one medical school person
    has been placed in cluster 3, because they are isolated (have a transitivity score
    of zero) and are not part of the main hub of medical school individuals.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到，Farrelly 确实是她自己的聚类，并且非常巧妙的是，聚类 1 几乎完全是剩余的医学院个体，而聚类 2 则是退伍军人组的个体。有趣的是，有一个医学院的人被分配到了聚类
    3，因为他们是孤立的（转移性得分为零），并且不属于医学院个体的主要群体。
- en: Community Mining in a Network
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络中的社区挖掘
- en: So far, we’ve used the geometry of the network to extract features and then
    run traditional Euclidean machine learning clustering algorithms on them. Another
    approach to clustering vertices in a network (called *community mining*) is to
    rely directly on the geometry of the network. We’ll briefly walk through several
    ways to do this.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经使用网络的几何结构来提取特征，并对其应用了传统的欧几里得机器学习聚类算法。另一种聚类网络中顶点的方法（称为 *社区挖掘*）是直接依赖于网络的几何结构。我们将简要介绍几种实现方式。
- en: Exploring Networks with Random Walks
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用随机游走探索网络
- en: The *walktrap algorithm* uses random walks to explore the network and find communities
    in which the random walk gets “trapped.” If a random walk frequently stays within
    a certain set of vertices, then that set is a good candidate for a cluster. For
    instance, in Farrelly’s social network, a random walk starting among the medical
    school individuals has a high likelihood of staying with them for many steps because
    the only way out is across the bridge from Farrelly’s vertex. Indeed, to get out,
    the random walk would have to be at Farrelly’s vertex, and we would then choose
    that bridge as the next step (which happens with only one out of eight probability
    from that vertex because that vertex has eight edges attached to it). Similarly,
    a random walk starting among the veterans group individuals has a high likelihood
    of staying among them. In this way, the walktrap algorithm is good at finding
    communities that are separated by bridges. One downside with this approach is
    that it is computationally intensive to explore a large network this way.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*Walktrap 算法*通过随机游走来探索网络并寻找社区，其中随机游走“被困住”在某些区域。如果随机游走经常停留在一组特定的顶点中，那么这组顶点就很可能构成一个聚类。例如，在
    Farrelly 的社交网络中，从医学院个体中开始的随机游走，很有可能会长时间停留在这些个体中，因为唯一的出路是从 Farrelly 的顶点跨越一座桥。事实上，要离开这里，随机游走必须经过
    Farrelly 的顶点，然后我们会选择那座桥作为下一步（从该顶点出发，只有八分之一的概率选择这座桥，因为该顶点有八条边）。同样，从退伍军人组开始的随机游走也很有可能会停留在他们中间。通过这种方式，walktrap
    算法擅长找到通过桥梁分隔的社区。该方法的一个缺点是，它需要大量计算资源来探索大型网络。'
- en: Evaluating a Cluster’s Quality Outcome
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 评估聚类的质量结果
- en: 'In traditional Euclidean clustering, a typical way to evaluate the quality
    of a clustering outcome is to compare the distances within each cluster to the
    distances between the different clusters. There is a widely used network variant
    of this idea that applies to vertex clustering: the *modularity* of a vertex clustering
    is the probability that a randomly chosen edge is attached to two vertices in
    the same cluster minus the probability that this would occur if the edges in the
    network were randomly distributed. Intuitively, this compares the number of intracommunity
    edges to the number of intercommunity edges. It is sort of like a “lift” measure,
    because it compares how much better (in the sense of edges staying within clusters)
    the clustering is than a randomized benchmark. One of the important small-world
    properties of the Watts–Strogatz networks introduced in the preceding chapter
    is that they tend to be highly modular (clusters with high modularity scores).'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的欧几里得聚类中，评估聚类结果质量的典型方法是将每个聚类内的距离与不同聚类之间的距离进行比较。有一个广泛应用于顶点聚类的网络变种思想：顶点聚类的*模块度*是指随机选择一条边连接到同一聚类中两个顶点的概率，减去如果网络中的边是随机分布时发生这种情况的概率。从直观上看，这种方法比较的是社群内边和社群间边的数量。它有点像一种“提升”度量，因为它比较了聚类在“边缘保持在同一聚类内”的效果，相较于随机化基准的表现。在前一章介绍的Watts–Strogatz网络的一个重要的小世界特性是它们通常是高度模块化的（即具有较高模块度得分的聚类）。
- en: 'Modularity also enables you to view vertex clustering as an optimization problem:
    we find the cluster division that maximizes the modularity score. It’s not practical
    to try all possible divisions into clusters, so various algorithms have been introduced
    that attempt to search for high-modularity clusterings without being guaranteed
    to find the global optimum. Two of the popular approaches for this are *greedy
    algorithms*, where greedy means that at each step they go in the direction that
    most increases the modularity, rather than taking suboptimal steps in the short
    run in the hopes that they lead to greater values in the long run.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 模块度还使得你可以将顶点聚类视为一个优化问题：我们寻找最大化模块度得分的聚类划分。尝试所有可能的聚类划分并不实际，因此已经引入了多种算法，旨在寻找高模块度的聚类，但并不保证找到全局最优解。两种常见的方法是*贪心算法*，其中贪心意味着每一步都朝着最能增加模块度的方向前进，而不是短期内采取次优步骤，期望它们能够在长期内带来更大的收益。
- en: '*Louvain clustering* is one such greedy algorithm. It starts by treating each
    vertex as its own cluster and then iteratively merges neighboring clusters whenever
    doing so increases the modularity. Once this iterative local optimization process
    terminates, the algorithm creates a new, smaller network by merging all the vertices
    that have been assigned to the same cluster. This yields a network in which each
    vertex is its own cluster, so the same iterative local optimization process can
    be run again on this smaller graph. This algorithm is quite fast in practice and
    tends to perform well, but it often struggles to find smaller communities within
    large networks. There is a faster greedy algorithm that is often used, conveniently
    called *fast greedy clustering*, but it tends not to reach as high modularity
    scores.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*Louvain聚类*就是一种贪心算法。它从将每个顶点视为独立的聚类开始，然后在每次合并邻近聚类时，只有这样做能增加模块度，算法才会进行合并。一旦这个迭代的局部优化过程终止，算法通过合并所有被分配到同一聚类的顶点来创建一个新的、更小的网络。在这个新网络中，每个顶点都是一个独立的聚类，因此可以在这个较小的图上再次运行相同的迭代局部优化过程。这个算法在实践中非常快速，且通常表现良好，但它在大型网络中常常难以找到较小的社群。还有一种更快的贪心算法，通常被称为*快速贪心聚类*，但它往往无法达到很高的模块度得分。'
- en: Understanding Spinglass Clustering
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 理解Spinglass聚类
- en: Another approach to clustering doesn’t involve random walks or local optimization.
    Rather, it draws from statistical mechanics, a branch of physics dealing with
    particle interactions. *Spinglass algorithms* are based on magnetic couplings
    within a system of particles (positive and negative charges); they seek to optimize
    how the charges are aligned across the system. This can be applied to vertex clustering,
    called *spinglass clustering*. The basic idea is to define an energy associated
    to clusterings and then try to minimize this energy. This energy minimization
    process is usually done by *simulated annealing*, which is an algorithmic approach
    to optimization that also has roots in statistical mechanics. In simulated annealing,
    rather than always moving in the direction that decreases the energy the most
    (as would be done in a greedy algorithm that runs the risk of getting stuck in
    local optima), there is a temperature parameter that determines the probability
    of moving instead in a “wrong” direction. As the algorithm proceeds, the temperature
    is steadily lowered. This helps the algorithm explore large portions of the energy
    landscape early on before settling down and honing in on a particular solution.
    It mimics the cooling process in metallurgy in which metal purifies.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种聚类方法不涉及随机游走或局部优化。相反，它借鉴了统计力学，这是一门研究粒子相互作用的物理学分支。*自旋玻璃算法*基于系统中粒子之间的磁耦合（正负电荷）；它们的目标是优化电荷在系统中的排列方式。这可以应用于顶点聚类，称为*自旋玻璃聚类*。基本思路是定义与聚类相关的能量，并尝试最小化这个能量。这个能量最小化过程通常通过*模拟退火*来完成，模拟退火是一种优化算法，其根源也在统计力学中。在模拟退火中，与其总是朝着最能降低能量的方向前进（这会在贪心算法中出现，从而有可能陷入局部最优解），不如设置一个温度参数来确定是否朝着一个“错误”的方向移动的概率。随着算法的进行，温度会逐步降低。这有助于算法在初期探索能量景观的较大区域，之后再定下来并聚焦于某一特定解。它模仿了金属冶炼中的冷却过程，在这个过程中金属得以净化。
- en: Running the Clustering Algorithms on a Social Network
  id: totrans-55
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在社交网络上运行聚类算法
- en: Let’s try running these four vertex clustering algorithms on Farrelly’s social
    network. [Listing 3-4](#listing3-4) does this and then plots the results and computes
    the modularity scores (to run this, make sure you’ve already loaded this network
    data as in [Listing 2-4](c02.xhtml#listing2-4)).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试在 Farrelly 的社交网络上运行这四种顶点聚类算法。[列表 3-4](#listing3-4)实现了这一操作，并绘制了结果，计算了模块化得分（要运行此操作，请确保您已加载此网络数据，如[列表
    2-4](c02.xhtml#listing2-4)所示）。
- en: '[PRE3]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Listing 3-4: A script that runs the four vertex clustering algorithms discussed
    earlier on Farrelly’s social network, plots the results, and computes the modularity
    score for each'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 3-4：运行前面讨论的四种顶点聚类算法在 Farrelly 的社交网络上，绘制结果并计算每个算法的模块化得分
- en: '[Figure 3-4](#figure3-4) shows the resulting plots.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-4](#figure3-4)显示了生成的图形。'
- en: '![](image_fi/503083c03/f03004_m.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03004_m.png)'
- en: 'Figure 3-4: Clustering on Farrelly’s social network provided by four different
    algorithms'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3-4：在 Farrelly 的社交网络上使用四种不同算法进行聚类
- en: Note that for all these functions the number of clusters was not specified by
    the user as it is for k-means. These algorithms determine the number of clusters
    as part of their search for optimality. In this example, walktrap and spinglass
    found the same three clusters, which are the medical school individuals (including
    Farrelly’s vertex V7) and a division of the veterans group individuals into two
    parts. This three-way clustering yields the highest modularity score among the
    solutions found by these algorithms.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，对于所有这些函数，用户并未像在 k-means 中那样指定聚类的数量。这些算法在寻找最优解的过程中会自动确定聚类的数量。在这个例子中，walktrap
    和自旋玻璃算法都找到了相同的三个聚类，分别是医学院的个体（包括 Farrelly 的顶点 V7）以及将退伍军人群体个体分为两部分。这种三分聚类在这些算法找到的解决方案中产生了最高的模块化得分。
- en: Louvain found the next best score, and the result is similar to the previous
    one except that it splits the veterans group in a slightly different way (reassigning
    two vertices from one cluster to the other). With a modularity score just slightly
    below this, the fast greedy algorithm ended up with only two clusters (the medical
    school community with Farrelly in it and the veterans group community). Evidently,
    the greediness in this algorithm prevented it from finding that a higher modularity
    could be achieved by splitting the veterans group community. That said, this two-cluster
    solution found by the fast greedy algorithm describes the original context of
    the data, in which Farrelly combined her two separate communities.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Louvain 找到了下一个最佳得分，结果与之前的类似，唯一不同的是它以略微不同的方式拆分了退伍军人群体（将两个顶点从一个聚类重新分配到另一个聚类）。具有稍微低于此得分的模块度，快速贪心算法最终得出了只有两个聚类的结果（一个是包含
    Farrelly 的医学院社区，另一个是退伍军人群体社区）。显然，这个算法中的贪心性使得它无法发现通过拆分退伍军人群体社区可以获得更高的模块度。话虽如此，快速贪心算法找到的这个两聚类解决方案描述了数据的原始背景，在这个背景中，Farrelly
    将她的两个独立社区合并在一起。
- en: If you are interested, you can explore a few other vertex clustering algorithms
    implemented in igraph. For instance, the function `cluster_edge_betweenness()`
    uses the betweenness metric not as a feature but in a more direct way. Vertices
    with a high betweenness score are considered to be *bridges*, and the communities
    this function uncovers are the ones that are separated by these bridges. Another
    interesting approach is provided by the function `cluster_infomap()`, which uses
    information theory to find communities in which information flows readily; this
    can also be interpreted in terms of the behavior of random walks on the network.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感兴趣，可以探索在 igraph 中实现的其他一些顶点聚类算法。例如，函数`cluster_edge_betweenness()`使用介数度量，不是作为特征，而是以更直接的方式。具有高介数得分的顶点被认为是*桥梁*，这个函数发现的社区是那些被这些桥梁隔开的社区。另一个有趣的方法是由函数`cluster_infomap()`提供的，它利用信息理论来寻找信息流动顺畅的社区；这也可以通过网络中随机游走的行为来进行解释。
- en: So far, we’ve discussed supervised and unsupervised learning among the vertices
    within a single network. Let’s now consider situations in which we are comparing
    the networks themselves.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经讨论了单一网络中顶点之间的监督学习和无监督学习。现在让我们考虑比较不同网络的情况。
- en: Comparing Networks
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 比较网络
- en: Sometimes a network isn’t your entire dataset. It’s just a single instance in
    a dataset comprising many networks. For instance, detecting bot accounts on social
    media platforms usually involves supervised classification in which the friend
    or follower networks of real users are compared to those of fake users. In the
    Pennsylvania gerrymandering case mentioned in [Chapter 2](c02.xhtml), districting
    maps were converted to networks, and the old map was shown to be a dubious outlier
    in the distribution of networks. Neuroscience provides another important example
    where one needs to compare networks. Indeed, it’s common to translate functional
    magnetic resonance imaging (fMRI) and positron emission tomography (PET) data
    into a network structure in which the vertices represent different regions of
    the brain and in which edges are based on activity patterns (sequential activation
    of an area, for instance, or coactivation of multiple regions during one task).
    One often needs to compare two different groups of patients—either healthy patients
    against a group of patients with a particular neurological or psychological disorder
    or two different disease groups. Translated to network data science, this means
    we’re looking at a two-class dataset of networks to see if there are statistically
    significant differences between the two classes (to understand structural differences).
    We might also want to train a supervised classifier to predict the class based
    on the network structure.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，网络并不是你的整个数据集。它只是一个数据集中的单个实例，数据集中包含多个网络。例如，检测社交媒体平台上的机器人账户通常涉及监督分类，其中将真实用户的好友或关注者网络与虚假用户的网络进行比较。在[第2章](c02.xhtml)中提到的宾夕法尼亚州选区划分案件中，区划图被转化为网络，且旧地图在网络分布中被显示为一个可疑的离群值。神经科学提供了另一个重要的例子，在该领域，通常需要比较网络。事实上，功能性磁共振成像（fMRI）和正电子发射断层扫描（PET）数据通常会被转化为网络结构，其中顶点表示大脑的不同区域，边则基于活动模式（例如，某一区域的连续激活，或在执行一个任务时多个区域的共同激活）。人们通常需要比较两组不同的患者——健康患者与患有特定神经或心理疾病的患者，或者两组不同的疾病群体。转化为网络数据科学，这意味着我们在查看一个两类数据集的网络，看看两类之间是否存在统计学上显著的差异（以理解结构差异）。我们还可能希望训练一个监督分类器，根据网络结构预测类别。
- en: 'To generate some synthetic data, let’s create 100 networks of each of the types
    described at the end of [Chapter 2](c02.xhtml): Erdös–Renyi, scale-free, and Watts–Strogatz.
    In [Listing 3-5](#listing3-5), we do this and plot a histogram of the network
    diameter to see how it varies within and across the different types of networks.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了生成一些合成数据，让我们创建100个每种类型的网络，类型在[第2章](c02.xhtml)结尾有描述：Erdös–Renyi网络、无尺度网络和Watts–Strogatz网络。在[列表3-5](#listing3-5)中，我们进行这个操作，并绘制网络直径的直方图，查看它在不同类型的网络内部和跨类型的变化。
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Listing 3-5: A script that generates 300 networks, evenly split among three
    different types; computes their network diameter; and then plots the histograms
    for each: Erdös–Renyi, scale-free, and Watts–Strogatz'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 列表3-5：一个脚本，生成300个网络，三种类型均匀分配；计算它们的网络直径；然后绘制每种类型的直方图：Erdös–Renyi、无尺度网络和Watts–Strogatz网络。
- en: The parameters are chosen here so that all random networks have the same number
    of vertices (chosen arbitrarily to be 100) and approximately the same edge density
    (around 2 percent); this ensures that the network structure does differentiate
    the three groups, rather than something simpler like the number of vertices or
    edges. [Figure 3-5](#figure3-5) shows the resulting histogram plot.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这里选择的参数确保所有随机网络具有相同数量的顶点（任意选择为100个）和大致相同的边密度（约2%）；这样可以确保网络结构区分这三组，而不是像顶点或边的数量这样的简单因素。[图3-5](#figure3-5)展示了生成的直方图。
- en: '![](image_fi/503083c03/f03005.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03005.png)'
- en: 'Figure 3-5: Histograms of network diameter for three different types of random
    networks: Erdös–Renyi (light gray), scale-free (medium gray), and Watts–Strogatz
    (dark gray)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图3-5：三种不同类型的随机网络的网络直径直方图：Erdös–Renyi（浅灰色）、无尺度（中灰色）和Watts–Strogatz（深灰色）。
- en: We see that the three histograms are disjoint. Erdös–Renyi networks have moderate
    diameters. Scale-free networks have small diameter values. Watts–Strogatz networks
    have large diameters. If interested, you might try modifying [Listing 3-5](#listing3-5)
    to compute some of the other global network metrics discussed in [Chapter 2](c02.xhtml)
    (such as efficiency, transitivity, and spectral radius) to see how they behave
    for the different types of random graph structures.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到三个直方图是分离的。厄尔多斯–雷尼网络具有适中的直径。无标度网络的直径值较小。瓦茨–斯特罗加茨网络的直径较大。如果有兴趣，你可以尝试修改[清单3-5](#listing3-5)，计算[第2章](c02.xhtml)中讨论的其他一些全局网络度量（如效率、传递性和谱半径），看看它们在不同类型的随机图结构中表现如何。
- en: There are many machine learning tasks that you can do now on datasets of networks
    using the tools developed so far. For classification (such as labeling social
    media accounts as bot versus real based on their friend network) or regression
    (such as predicting the journal ranking of academic publications based on their
    citation networks), you can compute a collection of global network metrics to
    then use as features for a traditional supervised learning algorithm. Similarly,
    to cluster a collection of networks into different types (for example, grouping
    individuals according to their fMRI brain network structure), you can compute
    global network metrics and feed them into a traditional clustering algorithm.
    You can also do statistics, such as outlier detection and confidence interval
    estimation. Indeed, by representing each network with its vector of global network
    metric values, you “structure” your network data and open the door to all the
    statistical and machine learning methods that we traditionally rely upon in data
    science.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用目前开发的工具在网络数据集上进行许多机器学习任务。对于分类任务（例如，基于社交媒体账户的朋友网络将其标记为机器人或真实账户）或回归任务（例如，根据引用网络预测学术出版物的期刊排名），你可以计算一系列全局网络度量，然后将它们作为特征输入传统的监督学习算法。同样，为了将一组网络聚类成不同类型（例如，根据个体的fMRI大脑网络结构对其进行分组），你可以计算全局网络度量，并将它们输入传统的聚类算法。你还可以进行统计分析，如异常值检测和置信区间估计。实际上，通过用全局网络度量值的向量来表示每个网络，你就“构建”了你的网络数据，并为所有我们在数据科学中传统上依赖的统计和机器学习方法打开了大门。
- en: Analyzing Spread Through Networks
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析网络中的传播
- en: Another important topic in network analysis is the spread (or *propagation*)
    of various entities through a network. There are many real-world instances of
    this, including infectious diseases in contact networks and viral content in social
    media networks. Understanding the geometry of a network can help predict the way
    that entities spread on the network, and we can leverage this insight to change
    the network geometry so that we impact spread.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 网络分析中的另一个重要主题是各种实体在网络中的传播（或*扩散*）。现实世界中有许多这类实例，包括传染病在接触网络中的传播和社交媒体网络中的病毒内容。理解网络的几何结构有助于预测实体在网络中的传播方式，我们可以利用这一洞察力改变网络的几何结构，从而影响传播。
- en: Tracking Disease Spread Between Towns
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跟踪小镇之间的疾病传播
- en: Let’s return to the weighted network of four towns from the previous chapter’s
    [Figure 2-3](c02.xhtml#figure2-3). We’ll take the adjacency matrix for it from
    [Listing 2-3](c02.xhtml#listing2-3) and use it to create a weighted network whose
    edge weights are the inverses of the original distance; this turns distances into
    proximity scores, where shorter roads have larger edge weights than longer roads.
    [Listing 3-6](#listing3-6) (which relies on first running the script in [Listing
    2-3](c02.xhtml#listing2-3)) does this and plots the result.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到上一章的四个小镇加权网络，参见[图2-3](c02.xhtml#figure2-3)。我们将从[清单2-3](c02.xhtml#listing2-3)中获取其邻接矩阵，并使用它来创建一个加权网络，其边的权重为原始距离的倒数；这样就将距离转化为接近度得分，其中较短的道路具有比较长的道路更大的边权重。[清单3-6](#listing3-6)（需要先运行[清单2-3](c02.xhtml#listing2-3)中的脚本）实现了这一点，并绘制了结果。
- en: '[PRE5]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Listing 3-6: A script that creates and plots the four towns network from [Chapter
    2](c02.xhtml) but with the edge weights given by the inverses of the road lengths'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 清单3-6：一个脚本，它创建并绘制了来自[第2章](c02.xhtml)的四个小镇网络，但其边权重由道路长度的倒数给出
- en: '[Figure 3-6](#figure3-6) shows the resulting plot.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[图3-6](#figure3-6)显示了结果图。'
- en: '![](image_fi/503083c03/f03006.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03006.png)'
- en: 'Figure 3-6: Four towns and the proximity scores (inverse distance) of the roads
    between them'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图3-6：四个小镇及其之间道路的接近度得分（逆距离）
- en: Let’s consider a simple epidemiological model for the spread of a transmissible
    disease across this network in which the probability of the disease spreading
    from an infected town to each of its neighboring towns is given by the edge proximity
    scores. If the disease starts in town V1, then it has a 25 percent chance of spreading
    to V4\. If it does this, it then has a 16.7 percent chance of further spreading
    from V4 to V3\. But multiplying these two probabilities (which yields about 4.2
    percent) does not give the probability that the disease spreads from V1 to V3;
    it gives only the probability that it does so along the transmission route V1→V4→V3\.
    Another potential transmission route is V1→V4→V2→V3, which has a 1 percent chance
    of occurring.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个简单的传染病传播的流行病学模型，在这个网络中，感染的城镇向其邻近城镇传播疾病的概率由边的接近度评分给出。如果疾病从城镇V1开始传播，那么它有25%的机会传播到V4。如果传播到V4，它就有16.7%的机会继续从V4传播到V3。但是，乘这两个概率（大约4.2%）并不能给出疾病从V1传播到V3的概率；它只给出疾病沿着传播路径V1→V4→V3传播的概率。另一个可能的传播路径是V1→V4→V2→V3，这种情况发生的概率是1%。
- en: For a larger network, computing all the conditional probabilities based on potential
    transmission routes given by paths in the network will clearly be too cumbersome
    to do by hand, so we need these calculations to be automated. Moreover, this epidemiological
    model is too simple to be of much practical use; we discussed it here just to
    give a sense of how the structure of a weighted network might influence the spread
    of various entities (disease, information, and so on) across its vertices, as
    well as to motivate the more sophisticated epidemiological model that we’ll be
    turning to next.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个较大的网络，计算所有基于网络中路径给出的潜在传播路径的条件概率显然太过繁琐，无法手动完成，因此我们需要自动化这些计算。此外，这个流行病学模型过于简单，难以实际应用；我们在这里讨论它只是为了让大家了解加权网络的结构如何影响各种实体（如疾病、信息等）在其顶点之间的传播，同时也为接下来我们将要讨论的更复杂的流行病学模型做铺垫。
- en: 'An *SIR model*, or *susceptible-infected-resistant* model (alternatively, a
    *susceptible-infected-recovered* model), is a model that projects the spread of
    a disease among a population by assuming each individual can be in one of three
    disease states: susceptible (can become infected), infected (has the disease and
    can transmit it), or recovered or resistant (immune to the disease). Many variations
    of this model exist, including models that are susceptible-infected-susceptible,
    models that are susceptible-infected-recovered-susceptible, models including partial
    immunity from vaccines, models where individuals are born or die during the epidemic,
    and partitioned or geographic models where populations mix at different rates.
    Underlying all these models are systems of partial differential equations with
    parameters related to population mixing (such as contact rates or times) and disease
    characteristics (such as the number of new infections expected for a single infectious
    individual). Often these differential equations are too difficult to solve explicitly,
    so instead we run computer simulations to quantify the range and likelihood of
    different possible outcomes.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '*SIR模型*，或者*易感-感染-免疫*模型（或者，*易感-感染-康复*模型），是一种通过假设每个人可以处于三种疾病状态之一来预测疾病在群体中传播的模型：易感（可能被感染）、感染（已感染且能传播疾病）或康复/免疫（对疾病具有免疫力）。该模型有许多变体，包括易感-感染-易感模型、易感-感染-康复-易感模型、包括疫苗部分免疫的模型、在流行期间个体会出生或死亡的模型，以及人口在不同速率下混合的分区或地理模型。所有这些模型的基础都是包含与人口混合（如接触率或时间）和疾病特性（如一个感染者可能引发的新感染数量）相关的参数的偏微分方程系统。由于这些偏微分方程通常难以显式求解，因此我们通常使用计算机模拟来量化不同可能结果的范围和可能性。'
- en: 'To take into account the social interactions between individuals within a population,
    SIR models have been adapted to networks. This provides more detailed predictions
    of how a disease might spread, and it also helps people find ways of mitigating
    this spread: we can run the model to see what impact deleting a vertex or edge,
    or restructuring the network in other ways, will have on the spread of the disease.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 为了考虑个体在群体中的社会互动，SIR模型已被适应到网络中。这可以提供更详细的疾病传播预测，也有助于人们找到减少传播的方法：我们可以运行模型，查看删除某个顶点或边，或以其他方式重构网络，对疾病传播的影响。
- en: Many of the network geometry concepts from [Chapter 2](c02.xhtml) play a role
    here. Hubs are high transmission zones that might need to be shut down or reduced
    in size, bridges and vertices with high betweenness scores suggest targeted ways
    of cutting off the main transmission routes of the disease, and vertices with
    high centrality scores might indicate the individuals most important to vaccinate
    or quarantine as quickly as possible. Moreover, SIR models on networks and the
    computer simulation techniques used to explore them have applications far beyond
    epidemiology because they give a powerful empirical method for studying the complex
    relationship between network structure and network propagation more generally.
    For instance, the spread of misinformation on social media is a problem that has
    attracted a lot of attention recently and driven a need to better understand how
    network structure influences social media virality—and SIR-type models have proven
    to be valuable tools in this realm.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](c02.xhtml)中的许多网络几何概念在这里也发挥作用。中心节点是高传输区，可能需要关闭或缩小，具有高介数得分的桥梁和节点提示了切断疾病传播主路线的目标方法，而具有高中心性得分的节点可能表示那些需要尽快接种疫苗或隔离的关键个体。此外，SIR模型和用于探索它们的计算机模拟技术具有远超流行病学的应用，因为它们为研究网络结构与传播之间复杂关系提供了一种强有力的实证方法。例如，社交媒体上错误信息的传播是一个最近引起广泛关注的问题，并推动了人们更好地理解网络结构如何影响社交媒体传播——SIR类型的模型在这一领域已经证明了其价值。'
- en: Tracking Disease Spread Between Windsurfers
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跟踪风帆运动员之间的疾病传播
- en: Let’s jump right in with an example. [Listing 3-7](#listing3-7) loads a popular
    network dataset, the KONECT Windsurfer Network. This is a weighted network representing
    43 Southern California windsurfers and their level of interactions during the
    fall of 1986\. Almost all the nondiagonal entries of the adjacency matrix are
    nonzero—meaning almost every possible edge exists in this network—so it’s really
    the weights that matter. This makes it difficult to visualize the network, so
    let’s create two less dense versions of the network—one with all the edges whose
    weights are not in the top quartile removed and one with those below the median
    removed. (This is a simple form of filtering weighted networks, a concept we’ll
    return to in more depth in [Chapter 4](c04.xhtml).) [Listing 3-7](#listing3-7)
    does this and plots the results.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个例子开始。[列表 3-7](#listing3-7)加载了一个流行的网络数据集——KONECT 风帆运动员网络。这个加权网络代表了1986年秋季，43位南加州风帆运动员以及他们的互动水平。几乎所有邻接矩阵的非对角元素都非零——意味着这个网络中几乎每条可能的边都存在——所以实际上是边的权重才是关键。这使得可视化这个网络变得困难，因此我们将创建两个密度较低的网络版本——一个是移除所有权重不在前四分之一的边，另一个是移除低于中位数的边。（这是一种简单的加权网络过滤方法，这一概念我们将在[第4章](c04.xhtml)中详细讨论。）[列表
    3-7](#listing3-7)实现了这一操作并绘制了结果。
- en: '[PRE6]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Listing 3-7: A script that loads the KONECT Windsurfer Network dataset and
    creates two less dense versions of it, by removing edges whose weights are not
    in the top one or two quartiles, and then plots the result'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 3-7：一个脚本，加载KONECT风帆运动员网络数据集，并创建其两个较稀疏的版本，通过移除权重不在前四分之一或前两个四分之一的边，然后绘制结果
- en: Using the `edge_density()` function, we find that the original network has a
    density of 99.3 percent, the top-quartile network has a density of 25.8 percent,
    and the above-median network has a density of 51.4 percent. The plots in [Figure
    3-7](#figure3-7) show these two thinned-out versions of the windsurfer network.
    The edge thicknesses represent the edge weights, but to increase the visual distinction
    among them, we set the thickness to the square of the edge weight.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`edge_density()`函数，我们发现原始网络的密度为99.3%，前四分之一的网络密度为25.8%，而中位数以上的网络密度为51.4%。[图3-7](#figure3-7)中的图表展示了这两个稀疏版本的风帆运动员网络。边的粗细代表边的权重，但为了增加它们之间的视觉区分，我们将边的粗细设置为边权重的平方。
- en: '![](image_fi/503083c03/f03007_m.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03007_m.png)'
- en: 'Figure 3-7: Two thinned-out versions of the windsurfer network, in which all
    edges whose weights are not in the top quartile (left) or top two quartiles (right)
    have been removed'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图3-7：风帆运动员网络的两个稀疏版本，其中所有权重不在前四分之一（左）或前两个四分之一（右）的边已被移除
- en: Running an SIR simulation in R is easy. Using igraph’s `sir()` function, you
    can just specify the network, the infection rate (called *beta*), and the recovery
    rate (called *gamma*), and then (optionally) specify the number of simulation
    trials to conduct (the default value is 100). The infection rate determines the
    probability at each time step that a susceptible vertex becomes infected by an
    infected neighbor (higher rates for more contagious diseases); having two infected
    neighbors doubles the odds of getting infected. The recovery rate determines the
    probability distribution for the duration of infections; higher recovery rates
    mean higher probability at each time step that infected vertices move on to the
    recovered state. Higher recovery rates indicate shorter-duration infections.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在 R 中运行 SIR 模拟非常简单。使用 igraph 的 `sir()` 函数，你只需指定网络、感染率（称为 *beta*）和恢复率（称为 *gamma*），然后（可选）指定要进行的模拟试验次数（默认值为
    100）。感染率决定了每个时间步骤中，一个易感顶点被感染邻居感染的概率（传染性疾病的感染率较高）；有两个感染邻居时，被感染的几率会翻倍。恢复率决定了感染持续时间的概率分布；较高的恢复率意味着每个时间步骤中，感染的顶点更有可能转到恢复状态。较高的恢复率意味着感染持续时间较短。
- en: 'When plotting the result of `sir()`, you’ll see the number of actively infected
    individuals in the network together with the median value across the trials and
    estimated confidence intervals as a function of time. Applying the function `median()`
    to the output of `sir()` provides three time series: the median number of susceptible
    individuals, the median number of infected individuals, and the median number
    of recovered individuals. Let’s try this. In [Listing 3-8](#listing3-8) we simulate
    a disease on the full dataset with an infection rate of 3 and a recovery rate
    of 2.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制 `sir()` 的结果时，你将看到网络中活跃感染者的数量，以及在不同试验中的中位数值和估计的置信区间，作为时间的函数。将 `median()` 函数应用于
    `sir()` 的输出，提供了三条时间序列：易感个体的中位数、感染个体的中位数和恢复个体的中位数。让我们来试试这个。在[清单 3-8](#listing3-8)中，我们模拟了一个疾病，感染率为
    3，恢复率为 2。
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Listing 3-8: A script that runs 100 simulation trials of an SIR model on the
    KONECT Windsurfer Network dataset with an infection rate of `beta=3` and a recovery
    rate of `gamma=2` and then plots the results and displays the median number of
    infected individuals across time'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 清单 3-8：运行 100 次 SIR 模型模拟试验的脚本，使用 KONECT Windsurfer 网络数据集，感染率为 `beta=3`，恢复率为
    `gamma=2`，然后绘制结果并显示随时间变化的感染个体中位数
- en: '[Figure 3-8](#figure3-8) shows the resulting plot.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-8](#figure3-8)显示了结果图表。'
- en: '![](image_fi/503083c03/f03008.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03008.png)'
- en: 'Figure 3-8: Plot of SIR simulations (100 trials) on the original KONECT Windsurfer
    Network dataset, showing the number of infected individuals over time (with mean
    and confidence intervals) for a disease with infection rate 3 and recovery rate
    2'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3-8：原始 KONECT Windsurfer 网络数据集上的 SIR 模拟结果图（100 次试验），展示了随着时间推移，感染个体数量的变化（包含均值和置信区间），疾病的感染率为
    3，恢复率为 2
- en: At its peak, the median is 28 actively infected individuals—which is 65 percent
    of the entire network. This is a highly infectious disease spreading through a
    densely connected network. Running the same code as in [Listing 3-4](#listing3-4)
    but lowering the infection rate to `beta=1` and raising the recovery rate to `gamma=10`
    yields the plot in [Figure 3-9](#figure3-9).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在其峰值时，中位数为 28 个活跃感染者——这占整个网络的 65%。这是一个通过高度连接的网络传播的高度传染性疾病。运行与[清单 3-4](#listing3-4)中相同的代码，但将感染率降低为
    `beta=1`，并将恢复率提高到 `gamma=10`，产生了[图 3-9](#figure3-9)中的图表。
- en: '![](image_fi/503083c03/f03009.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03009.png)'
- en: 'Figure 3-9: SIR simulations on the original KONECT Windsurfer Network dataset
    (with confidence levels), now with infection rate 1 and recovery rate 10'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3-9：原始 KONECT Windsurfer 网络数据集上的 SIR 模拟（带置信度水平），现在的感染率为 1，恢复率为 10
- en: As expected, this new epidemic simulation shows fewer infected individuals over
    a smaller period of time. Now the median number of active infections peaks at
    17, and the time period of this epidemic is only one-quarter what it was for the
    previous parameters. When using SIR models to study real-world epidemics, epidemiologists
    look up the infection and recovery rate parameters in the scientific literature
    if they are already known, and if they’re not already known, they can be estimated
    from data on how the disease has spread so far. Usually, such estimates will involve
    some degree of uncertainty, so we can run SIR simulations on a range of parameters
    to see the range of possible outcomes.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 正如预期的那样，这个新的疫情模拟显示，在较短的时间内，感染人数较少。现在，中位活跃感染人数达到 17，且该疫情的时间周期仅为之前参数的四分之一。当使用
    SIR 模型研究现实世界中的疫情时，流行病学家会查阅科学文献中已知的感染率和恢复率参数，如果这些参数尚不清楚，则可以通过已有的传播数据来估算。通常，这些估算会涉及一定程度的不确定性，因此我们可以在不同参数范围内运行
    SIR 模拟，以查看可能的结果范围。
- en: Disrupting Communication and Disease Spread
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 中断通信和疾病传播
- en: 'One of the interesting proposed uses of vertex Forman–Ricci curvature is to
    rank vertices for removal to disrupt communication and disease spread on a network.
    In a communications network, disrupting communication may involve targeting a
    specific cell tower or isolating an individual import to the network. In 2020,
    we saw how isolating COVID-infected or COVID-exposed individuals by social distancing
    and quarantines helped stop the spread of COVID in large cities. Recall that vertex
    7 in the author’s network had a large Forman–Ricci curvature. Let’s run an SIR
    model on the author’s network with and without vertex 7 included to compare the
    results:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个有趣的建议应用是利用顶点 Forman–Ricci 曲率对顶点进行排名，以便移除顶点，从而中断网络中的通信和疾病传播。在通信网络中，打断通信可能涉及针对特定的基站或孤立网络中的某个重要节点。2020
    年，我们看到了如何通过社交距离和隔离 COVID 感染者或暴露者来帮助停止大城市中的 COVID 传播。回想一下，作者网络中的顶点 7 具有较大的 Forman–Ricci
    曲率。我们来运行一个带有和不带顶点 7 的 SIR 模型，比较结果：
- en: '[PRE8]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This script runs epidemics on the original network and the modified network,
    with vertex 7 removed, to compare the severity of the simulated epidemic. This
    should yield an initial plot similar to [Figure 3-10](#figure3-10), with the epidemic
    propagating through the whole network.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本在原始网络和修改后的网络（移除顶点 7 后）上运行疫情模拟，以比较模拟疫情的严重性。这将生成一个类似于 [图 3-10](#figure3-10)
    的初始图表，疫情通过整个网络传播。
- en: '![](image_fi/503083c03/f03010.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03010.png)'
- en: 'Figure 3-10: An SIR epidemic on the author’s full network'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3-10：作者完整网络上的 SIR 疫情
- en: '[Figure 3-10](#figure3-10) shows an SIR epidemic resulting in five time periods
    of infection spread, with a median number of infected at 5\. Some simulations
    suggest the possibility of up to 12 infections at once within the first 2 time
    periods. This is a pretty severe epidemic, forecast to impact more than 25 percent
    of the population at a time before the infection takes out the whole susceptible
    population.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-10](#figure3-10)显示了一个 SIR 疫情，导致五个时间周期的感染传播，中位感染人数为 5。一些模拟结果建议在前两个时间周期内可能出现最多
    12 例感染。这是一个相当严重的疫情，预计会影响超过 25% 的人口，直到整个易感人群都被感染。'
- en: Let’s examine what happens when vertex 7 is removed, shown in [Figure 3-11](#figure3-11).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看当顶点 7 被移除时会发生什么，如 [图 3-11](#figure3-11) 所示。
- en: '![](image_fi/503083c03/f03011.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c03/f03011.png)'
- en: 'Figure 3-11: An SIR epidemic on the author’s edited network (with vertex 7
    removed)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3-11：作者修改后的网络（移除顶点 7 后）的 SIR 疫情
- en: '[Figure 3-11](#figure3-11) shows a less severe epidemic over a shorter time
    frame. There are only four periods in which infection occurs, and the median number
    infected at the height of the epidemic is only 2, with a maximum estimate of 8\.
    While the epidemic still impacts the population, it is confined to fewer individuals
    and quickly over. By the end of the second time period, most models suggest the
    epidemic has ended.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-11](#figure3-11)显示了一个较轻的疫情，发生在较短的时间框架内。只有四个感染周期，疫情高峰期的中位感染人数仅为 2，最大估计为
    8。虽然疫情仍然影响着人群，但它局限于较少的个体，并且迅速结束。在第二个时间周期结束时，大多数模型表明疫情已经结束。'
- en: Many applications that let us target vertices to disrupt a network exist. Not
    only can we mitigate potential epidemics by removing pieces of a network, but
    we can also disrupt enemy communication within a terrorist cell or hostile government
    by taking out targets with highly negative Forman–Ricci curvature or disrupt disease
    processes by taking out proteins or genes within the backbone of the biological
    network. Changes in Forman–Ricci curvature as a network evolves also contribute
    to network-related analytics capabilities.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 存在许多可以让我们针对顶点来破坏网络的应用。我们不仅可以通过移除网络的某些部分来减轻潜在的流行病风险，还可以通过摧毁具有高度负的 Forman–Ricci
    曲率的目标来干扰恐怖分子小组或敌对政府的通信，或者通过摧毁生物网络骨架中的蛋白质或基因来破坏疾病过程。随着网络的发展，Forman–Ricci 曲率的变化也有助于与网络相关的分析能力。
- en: '*Forman–Ricci flow* is a geometric flow (differential equation) related to
    changes in curvature over time on a network, analogous to heat dissipating across
    a network from a defined starting point. Tracking changes in curvature can identify
    areas of change within a network. Forman–Ricci flow provides a way to quantify
    regions of growth or shrinkage of connections within networks, such as the rapid
    expansion of terrorist cell membership, accumulation of mutations in a cancer
    gene network, or increased disease spread risk in an epidemic. For instance, the
    increased large party or event activity in some regions during COVID quarantines
    resulted in an increased spread of COVID within those parts of an area’s social
    network. Forman–Ricci flow on image datasets also provides a way to map medical
    image data from a raw source file onto a standard surface, such as a plane or
    a sphere or even a frying pan, such that results can be pooled and compared within
    and across patient groups.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*Forman–Ricci 流* 是一种几何流（微分方程），与网络上曲率随时间变化相关，类似于热量从定义的起点在网络中扩散。跟踪曲率变化可以识别网络中的变化区域。Forman–Ricci
    流为量化网络中连接的增长或收缩区域提供了一种方法，例如恐怖分子小组成员的快速扩展、癌症基因网络中突变的积累，或流行病中疾病传播风险的增加。例如，COVID
    隔离期间一些地区的大型聚会或活动增加，导致该地区社会网络中的 COVID 传播加剧。Forman–Ricci 流在图像数据集上的应用也为将医学图像数据从原始源文件映射到标准表面（如平面、球面甚至煎锅）提供了一种方法，这样就可以在患者组内外汇总和比较结果。'
- en: Summary
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we first saw how the vertex metrics covered in [Chapter 2](c02.xhtml)
    can serve as predictors for supervised learning within a network (including link
    prediction) and as features for vertex clustering (that is, community mining).
    This approach to machine learning translates a network back to structured datasets
    and applies Euclidean machine learning algorithms. We then looked into a handful
    of community mining algorithms that operate directly within the network. Next,
    we moved from analyzing data within a network to analyzing datasets where each
    data point is itself a network. Similar to our use of vertex metrics in the previous
    setting, here we used global network metrics as predictors or features to do machine
    learning and statistical analyses on this kind of network data. Finally, in the
    last section of this chapter, we explored the SIR disease spread model from epidemiology
    as it applies to networks. The emphasis here is on the intersection of network
    geometry and network spread; in particular, we discuss some targeted strategies
    for disrupting epidemic spread that are rooted in network geometry.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先看到了[第二章](c02.xhtml)中讨论的顶点度量如何作为网络中监督学习的预测因子（包括链接预测），并作为顶点聚类（即社区挖掘）的特征。这种机器学习方法将网络转化为结构化数据集，并应用欧几里得机器学习算法。接着，我们探讨了一些直接在网络中操作的社区挖掘算法。随后，我们将分析从网络内数据转向分析每个数据点本身就是一个网络的数据集。与我们在前述设置中使用顶点度量类似，这里我们使用全局网络度量作为预测因子或特征，对这种网络数据进行机器学习和统计分析。最后，在本章的最后一节中，我们探讨了流行病学中的
    SIR 疾病传播模型在网络中的应用。这里的重点是网络几何和网络传播的交集；特别是，我们讨论了一些基于网络几何的、旨在破坏流行病传播的针对性策略。
