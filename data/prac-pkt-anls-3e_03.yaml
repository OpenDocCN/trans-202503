- en: '**3**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**3**'
- en: '**INTRODUCTION TO WIRESHARK**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**Wireshark简介**'
- en: '![image](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common.jpg)'
- en: As mentioned in [Chapter 1](ch01.xhtml#ch01), several packet-sniffing applications
    are available for performing network analysis, but we’ll focus mostly on Wireshark
    in this book. This chapter introduces Wireshark.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第1章](ch01.xhtml#ch01)所述，虽然有多种数据包嗅探应用可用于执行网络分析，但我们将在本书中主要关注Wireshark。本章将介绍Wireshark。
- en: '**A Brief History of Wireshark**'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Wireshark的简短历史**'
- en: Wireshark has a very rich history. Gerald Combs, a computer science graduate
    of the University of Missouri at Kansas City, originally developed it out of necessity.
    The first version of Combs’s application, called Ethereal, was released in 1998
    under the GNU Public License (GPL).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark有着非常丰富的历史。Gerald Combs是堪萨斯城密苏里大学的计算机科学毕业生，他最初出于必要性开发了Wireshark。Combs的第一个版本的应用程序，名为Ethereal，于1998年发布，并采用了GNU公共许可证（GPL）。
- en: Eight years after releasing Ethereal, Combs left his job to pursue other career
    opportunities. Unfortunately, his employer at that time had full rights to the
    Ethereal trademarks, and Combs was unable to reach an agreement that would allow
    him to control the Ethereal brand. Instead, Combs and the rest of the development
    team rebranded the project as *Wireshark* in mid-2006.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 发布《Ethereal》八年后，Combs离职去追求其他职业机会。不幸的是，当时他的雇主拥有《Ethereal》商标的全部权利，Combs未能达成协议，使他能够控制《Ethereal》品牌。最终，Combs和其他开发团队成员于2006年中期将该项目重新命名为*Wireshark*。
- en: Wireshark has grown dramatically in popularity, and its collaborative development
    team now boasts more than 500 contributors. The program that exists under the
    Ethereal name is no longer being developed.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark的受欢迎程度大幅增长，目前其协作开发团队拥有超过500名贡献者。以Ethereal名称存在的程序不再被开发。
- en: '**The Benefits of Wireshark**'
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Wireshark的优势**'
- en: Wireshark offers several benefits that make it appealing for everyday use. Aimed
    at both the up-and-coming and the expert packet analyst, it offers a variety of
    features to entice each. Let’s examine Wireshark according to the criteria defined
    in [Chapter 1](ch01.xhtml#ch01) for selecting a packet-sniffing tool.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark提供了几个使其在日常使用中很有吸引力的优势。它面向初学者和专家数据包分析师，提供了多种功能以吸引各类用户。让我们根据[第1章](ch01.xhtml#ch01)中定义的标准，来评估Wireshark在选择数据包嗅探工具时的表现。
- en: '**Supported protocols**   Wireshark excels in the number of protocols that
    it supports—more than 1,000 as of this writing. These range from common ones like
    IP and DHCP to more advanced proprietary protocols like DNP3 and BitTorrent. And
    because Wireshark is developed under an open source model, new protocol support
    is added with each update.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**支持的协议**   Wireshark在支持的协议数量上表现突出——截至本文编写时，已支持超过1,000种协议。这些协议从常见的IP和DHCP到更高级的专有协议，如DNP3和BitTorrent。由于Wireshark是在开源模式下开发的，每次更新时都会添加新的协议支持。'
- en: '**NOTE**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*In the unlikely event that Wireshark doesn’t support a protocol you need,
    you can code that support yourself. Then you can submit your code to the Wireshark
    developers for consideration for inclusion in the application. You can learn about
    what is required to contribute code to the Wireshark project at* [https://www.wireshark.org/develop.html](https://www.wireshark.org/develop.html).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果Wireshark不支持您需要的协议，您可以自行编写代码来实现支持。然后，您可以将代码提交给Wireshark开发者，以供考虑是否纳入应用程序中。有关向Wireshark项目贡献代码的要求，您可以在*
    [https://www.wireshark.org/develop.html](https://www.wireshark.org/develop.html)
    *查看相关信息。*'
- en: '**User-friendliness**   The Wireshark interface is one of the easiest to understand
    of any packet-sniffing application. It is GUI based, with clearly written context
    menus and a straightforward layout. It also provides several features designed
    to enhance usability, such as protocol-based color coding and detailed graphical
    representations of raw data. Unlike some of the more complicated command line–driven
    alternatives, like tcpdump, the Wireshark GUI is accessible to those just entering
    the world of packet analysis.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**用户友好性**   Wireshark的界面是所有数据包嗅探应用中最容易理解的之一。它基于图形用户界面（GUI），具有清晰编写的上下文菜单和简洁的布局。它还提供了多种旨在提升可用性的功能，如基于协议的颜色编码和原始数据的详细图形表示。与一些更为复杂的基于命令行的替代工具（如tcpdump）不同，Wireshark的GUI对初学者也十分友好。'
- en: '**Cost**   Since it’s open source and released under the GNU Public License
    (GPL), Wireshark’s pricing can’t be beat: it’s absolutely free. You can download
    and use Wireshark for any purpose, whether personal or commercial.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**费用** 由于Wireshark是开源的并且发布在GNU公共许可证（GPL）下，它的定价无可比拟：它完全免费。你可以出于任何目的下载和使用Wireshark，无论是个人使用还是商业用途。'
- en: '**NOTE**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Although Wireshark may be free, some people have made the mistake of paying
    for it by accident. If you search for packet sniffers on eBay, you may be surprised
    by how many people would love to sell you a “professional enterprise license”
    for Wireshark for the low, low price of $39.95\. If you decide you really want
    to buy it, give me a call, and we can talk about some oceanfront property in Kentucky
    I have for sale!*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*尽管Wireshark可能是免费的，但一些人犯了一个错误，不小心付费购买了它。如果你在eBay上搜索数据包嗅探器，你可能会惊讶于有多少人愿意以39.95美元的低价卖给你一个“专业企业许可证”。如果你真的决定想要购买它，给我打个电话，我们可以谈谈我在肯塔基州待售的一块海滨地产！*'
- en: '**Program support**   A software package’s level of support can make or break
    it. Freely distributed software such as Wireshark may not come with any formal
    support, so the open source community often relies on its user base to provide
    assistance. Luckily for us, the Wireshark community is one of the most active
    of any open source project. The Wireshark website links directly to several forms
    of support, including online documentation; a wiki; FAQs; and a place to sign
    up for the Wireshark mailing list, which is monitored by most of the program’s
    top developers. Paid support for Wireshark is also available from Riverbed Technology.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序支持** 一个软件包的支持水平可能决定它的成败。像Wireshark这样的自由分发软件可能没有正式的技术支持，因此开源社区通常依赖于其用户基础提供帮助。幸运的是，Wireshark社区是所有开源项目中最活跃的社区之一。Wireshark网站直接链接到多种支持形式，包括在线文档；维基百科；常见问题解答；以及注册Wireshark邮件列表的地方，这些邮件列表通常由该程序的大部分顶级开发人员进行监控。Wireshark的付费支持也可以通过Riverbed
    Technology提供。'
- en: '**Source code access**   Wireshark is open source software, so you can access
    the code at any time. This can be useful for troubleshooting application issues,
    understanding how protocol dissectors work, or making your own contributions.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**源代码访问** Wireshark是开源软件，因此你可以随时访问其源代码。这对于解决应用程序问题、理解协议分析器的工作原理，或进行自己的贡献都非常有用。'
- en: '**Operating system support**   Wireshark supports all major modern operating
    systems, including Windows, Linux-based, and OS X platforms. You can view a complete
    list of supported operating systems on the Wireshark home page.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**操作系统支持** Wireshark支持所有主要的现代操作系统，包括Windows、基于Linux的系统和OS X平台。你可以在Wireshark主页上查看完整的操作系统支持列表。'
- en: '**Installing Wireshark**'
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**安装Wireshark**'
- en: 'The Wireshark installation process is surprisingly simple. However, before
    you install Wireshark, make sure that your system meets the following requirements:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark的安装过程出奇的简单。然而，在安装Wireshark之前，请确保你的系统满足以下要求：
- en: •     Any modern 32-bit x86 or 64-bit CPU
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: •     任意现代的32位x86或64位CPU
- en: •     400MB available RAM, but more for larger capture files
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: •     400MB可用内存，但如果是较大的捕获文件，内存需求更高
- en: •     At least 300MB of available storage space, plus space for capture files
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: •     至少需要300MB的可用存储空间，另外还需要存储捕获文件的空间
- en: •     NIC that supports promiscuous mode
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: •     支持混杂模式的网卡
- en: •     WinPcap/libpcap capture driver
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: •     WinPcap/libpcap捕获驱动程序
- en: The WinPcap capture driver is the Windows implementation of the pcap packet-capturing
    application programming interface (API). Simply put, this driver interacts with
    your operating system to capture raw packet data, apply filters, and switch the
    NIC in and out of promiscuous mode.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: WinPcap捕获驱动程序是Windows系统上实现的pcap数据包捕获应用程序接口（API）。简而言之，这个驱动程序与操作系统交互，捕获原始数据包数据，应用过滤器，并将网卡在混杂模式和正常模式之间切换。
- en: Although you can download WinPcap separately (from *[http://www.winpcap.org/](http://www.winpcap.org/)*),
    it is typically better to install WinPcap from the Wireshark installation package,
    because the included version of WinPcap has been tested to work with Wireshark.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你可以单独下载WinPcap（从 *[http://www.winpcap.org/](http://www.winpcap.org/)*），但通常更好的做法是从Wireshark安装包中安装WinPcap，因为该版本的WinPcap已通过测试，确保能够与Wireshark兼容。
- en: '***Installing on Windows Systems***'
  id: totrans-29
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***在Windows系统上安装***'
- en: The current version of Wireshark is tested to support versions of Windows that
    are still within their extended support lifetime. As of the writing of this book,
    that encompasses Windows Vista; Windows 7; Windows 8; Windows 10; and Windows
    Servers 2003, 2008, and 2012\. While Wireshark will often work on other versions
    of Windows (like Windows XP), those versions are not officially supported.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当前版本的 Wireshark 已测试支持仍在延长支持生命周期内的 Windows 版本。截至本书编写时，这些版本包括 Windows Vista、Windows
    7、Windows 8、Windows 10，以及 Windows Servers 2003、2008 和 2012。虽然 Wireshark 通常也可以在其他版本的
    Windows（如 Windows XP）上运行，但这些版本不被正式支持。
- en: 'The first step when installing Wireshark on Windows is to obtain the latest
    installation build from the official Wireshark web page, *[http://www.wireshark.org/](http://www.wireshark.org/)*.
    Navigate to the Download Wireshark section on the website and choose a release
    mirror. Once you’ve downloaded the package, follow these steps:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 Wireshark 的第一步是从官方 Wireshark 网页获取最新的安装包，* [http://www.wireshark.org/](http://www.wireshark.org/)*。访问网站上的下载
    Wireshark 部分并选择一个镜像。下载完安装包后，按照以下步骤操作：
- en: Double-click the *.exe* file to begin installation and then click **Next** in
    the introductory window.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 *.exe* 文件以开始安装，然后在介绍窗口中点击 **下一步**。
- en: Read the licensing agreement and click **I Agree** if you agree.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 阅读许可协议并点击 **我同意**，如果你同意的话。
- en: Select the components of Wireshark you wish to install, as shown in [Figure
    3-1](ch03.xhtml#ch03fig1). For our purposes, you can accept the defaults by clicking
    **Next**.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你希望安装的 Wireshark 组件，如 [图 3-1](ch03.xhtml#ch03fig1)所示。对于我们的目的，你可以通过点击 **下一步**
    来接受默认设置。
- en: '![image](../images/f40-01.jpg)'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f40-01.jpg)'
- en: '*Figure 3-1: Choosing the Wireshark components you wish to install*'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 3-1：选择你希望安装的 Wireshark 组件*'
- en: Click **Next** in the Additional Tasks window.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在附加任务窗口中点击 **下一步**。
- en: Select the location where you wish to install Wireshark and click **Next**.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你希望安装 Wireshark 的位置，并点击 **下一步**。
- en: When the dialog asks whether you want to install WinPcap, first make sure the
    **Install WinPcap** box is checked, as shown in [Figure 3-2](ch03.xhtml#ch03fig2).
    Then click **Install**. The installation process should begin.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当对话框询问是否要安装 WinPcap 时，首先确保勾选了**安装 WinPcap**框，如 [图 3-2](ch03.xhtml#ch03fig2)所示。然后点击
    **安装**。安装过程应会开始。
- en: About halfway through the Wireshark installation, the WinPcap installation should
    start. When it does, click **Next** in the introductory window, read the licensing
    agreement, and click **I Agree**.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Wireshark 安装过程中大约一半时，WinPcap 安装应会开始。当它开始时，在介绍窗口中点击 **下一步**，阅读许可协议，并点击 **我同意**。
- en: You’ll be given the option to install USBPcap, a utility for collecting data
    from USB devices. Select the appropriate check box if you wish to do so and click
    **Next**.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统会提供安装 USBPcap 的选项，这是一个用于从 USB 设备收集数据的工具。如果你希望安装，请勾选相应的复选框，然后点击 **下一步**。
- en: '![image](../images/f41-01.jpg)'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f41-01.jpg)'
- en: '*Figure 3-2: Selecting the option to install the WinPcap driver*'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 3-2：选择安装 WinPcap 驱动程序的选项*'
- en: WinPcap and, if you selected it, USBPcap should install on your computer. After
    this installation is complete, click **Finish**.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: WinPcap 和（如果你选择了的话）USBPcap 应该已经安装在你的计算机上。安装完成后，点击 **完成**。
- en: Wireshark should complete its installation. When it’s finished, click **Next**.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Wireshark 应该完成安装。当它完成时，点击 **下一步**。
- en: In the installation confirmation window, click **Finish**.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装确认窗口中，点击 **完成**。
- en: '***Installing on Linux Systems***'
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***在 Linux 系统上安装***'
- en: Wireshark works on most modern Unix-based platforms. It can be installed either
    by using the distributions package manager of choice or by downloading and installing
    the package appropriate for your distribution. It isn’t realistic to cover installation
    procedures for everyone, so we’ll just look at a few.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark 可以在大多数现代基于 Unix 的平台上运行。它可以通过使用发行版的包管理器或下载并安装适合你发行版的包进行安装。由于无法覆盖所有安装过程，我们这里只讨论几种常见的情况。
- en: Typically, for system-wide software, root access is a requirement. However,
    local software installations compiled from source can usually be installed without
    root access.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，对于系统范围的软件，根权限是必需的。然而，从源代码编译的本地软件安装通常可以不需要根权限。
- en: '**RPM-Based Systems**'
  id: totrans-50
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**基于 RPM 的系统**'
- en: 'If you’re using Red Hat Linux or a distribution based on it, like CentOS, then
    it’s likely the OS has the Yum package management tool installed by default. If
    that’s the case, you may be able to install Wireshark the quick way by pulling
    it from the distribution’s software repository. To do this, open a console window
    and enter the following command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用 Red Hat Linux 或基于它的发行版，比如 CentOS，那么操作系统很可能默认安装了 Yum 包管理工具。如果是这种情况，你可能可以通过从发行版的软件仓库中获取
    Wireshark 来快速安装它。为此，打开一个控制台窗口并输入以下命令：
- en: '[PRE0]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If any dependencies are needed, you’ll be prompted to install them. If everything
    completes successfully, then you should be able to run Wireshark from the command
    line and access it via the GUI.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要任何依赖项，系统会提示你安装它们。如果一切顺利完成，你应该能够从命令行运行 Wireshark，并通过 GUI 访问它。
- en: '**DEB-Based Systems**'
  id: totrans-54
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**基于 DEB 的系统**'
- en: 'Most DEB-based distributions, such as Debian or Ubuntu, include the APT package
    management tool, which allows you to install Wireshark from the OS software repository.
    To install Wireshark with this tool, open a console window and enter the following:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数基于 DEB 的发行版，如 Debian 或 Ubuntu，包含 APT 包管理工具，允许你从操作系统的软件仓库中安装 Wireshark。要使用此工具安装
    Wireshark，请打开一个控制台窗口并输入以下命令：
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once again, you’ll be prompted to install any required dependencies to complete
    the installation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，你会被提示安装任何所需的依赖项以完成安装。
- en: '**Compiling from Source**'
  id: totrans-58
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**从源代码编译**'
- en: 'Due to changes in operation system architecture and Wireshark features, the
    instructions for compiling Wireshark from source might change over time. That’s
    one reason it’s recommended to use your operating system package manager to perform
    the installation. However, if your Linux distribution doesn’t use an automated
    package management software or you require a specialized installation, Wireshark
    can be installed manually by compiling it from source. To do so, complete the
    following steps:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 由于操作系统架构和 Wireshark 功能的变化，从源代码编译 Wireshark 的指令可能会随着时间的推移发生变化。这也是推荐使用操作系统的包管理工具来执行安装的原因之一。然而，如果你的
    Linux 发行版不使用自动化包管理软件，或者你需要特殊的安装方式，可以通过从源代码编译来手动安装 Wireshark。为此，请完成以下步骤：
- en: Download the source package from the Wireshark web page.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Wireshark 网站下载源代码包。
- en: 'Extract the archive by entering the following (substituting the filename of
    your downloaded package as appropriate):'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入以下命令解压归档文件（根据需要替换下载包的文件名）：
- en: '[PRE2]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Before configuring and installing Wireshark, a few dependencies may be required
    depending on your chosen Linux flavor. For example, Ubuntu 14.04 requires the
    installation of a few other packages for Wireshark to work. These can be installed
    by issuing the following command (you’ll need to do this as a root-level user
    or by invoking `sudo` before the command):'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在配置和安装 Wireshark 之前，根据你选择的 Linux 版本，可能需要一些依赖项。例如，Ubuntu 14.04 需要安装一些其他软件包才能正常运行
    Wireshark。这些可以通过发出以下命令安装（你需要以 root 用户身份执行此操作，或者在命令前加上 `sudo`）：
- en: '[PRE3]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: After installing prerequisites, navigate to the directory where the Wireshark
    files were extracted.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完先决条件后，导航到提取 Wireshark 文件的目录。
- en: Configure the source so that it will build correctly for your distribution of
    Linux by using the command ./configure. If you wish to deviate from the default
    installation options, you can specify those options at this point in the installation.
    If any dependencies are missing, you’ll most likely receive an error. You must
    install and configure those dependencies before proceeding. If configuration is
    successful, you should see a message noting success, as shown in [Figure 3-3](ch03.xhtml#ch03fig3).
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用命令 `./configure` 配置源代码，使其能够正确地为你的 Linux 发行版编译。如果你希望偏离默认的安装选项，可以在此时指定这些选项。如果缺少任何依赖项，你很可能会收到错误消息。在继续之前，必须安装并配置这些依赖项。如果配置成功，你应该看到一条成功的消息，如
    [图 3-3](ch03.xhtml#ch03fig3) 所示。
- en: '![image](../images/f43-01.jpg)'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f43-01.jpg)'
- en: '*Figure 3-3: When the `./configure` command is successful, a message is displayed
    with the selected configurations.*'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 3-3：当 `./configure` 命令成功执行时，会显示一条消息，提示已选择的配置。*'
- en: Enter the make command to build the source into a binary.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 make 命令将源代码编译成二进制文件。
- en: Initiate the final installation with sudo make install.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 sudo make install 启动最终安装。
- en: Run sudo/sbin/ldconfig to complete the installation.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 sudo/sbin/ldconfig 完成安装。
- en: '**NOTE**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*If you run into an error following these steps, you may have to install an
    additional package.*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你在按照这些步骤操作时遇到错误，可能需要安装一个额外的软件包。*'
- en: '***Installing on OS X Systems***'
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***在 OS X 系统上安装***'
- en: 'To install Wireshark on OS X, complete these steps:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OS X 上安装 Wireshark，请按照以下步骤操作：
- en: Download the OS X package from the Wireshark web page.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Wireshark 的网页上下载 OS X 包。
- en: Run the installation utility and proceed through its steps. Once you’ve accepted
    the required end user license agreement, you’ll have the option to select the
    installation location.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行安装工具并按照其步骤进行操作。一旦你接受了所需的最终用户许可协议，你将有机会选择安装位置。
- en: Complete the installation wizard.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成安装向导。
- en: '**Wireshark Fundamentals**'
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Wireshark 基础知识**'
- en: Once you’ve successfully installed Wireshark on your system, you can begin to
    familiarize yourself with it. Now you finally get to open your fully functioning
    packet sniffer and see . . . absolutely nothing!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你成功地在系统上安装了 Wireshark，你就可以开始熟悉它。现在，你终于可以打开你的功能齐全的数据包嗅探器，并看到……完全什么都没有！
- en: Okay, so Wireshark isn’t very interesting when you first open it. For things
    to really get exciting, you need to get some data.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，Wireshark 在你第一次打开它时并不太吸引人。要让事情变得更有趣，你需要获取一些数据。
- en: '***Your First Packet Capture***'
  id: totrans-82
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***你的第一次数据包捕获***'
- en: To get packet data into Wireshark, you’ll perform your first packet capture.
    You may be thinking, “How am I going to capture packets when nothing is wrong
    on the network?”
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将数据包数据导入 Wireshark，你将进行第一次数据包捕获。你可能会想，“如果网络上没有问题，我怎么捕获数据包呢？”
- en: First, there is *always* something wrong on the network. If you don’t believe
    me, then go ahead and send an email to all of your network users and let them
    know that everything is working perfectly.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，网络上*总是*存在问题。如果你不相信我，那就给你的网络用户发一封邮件，让他们知道一切都运行得完美无缺。
- en: Secondly, there doesn’t need to be something wrong in order for you to perform
    packet analysis. In fact, most packet analysts spend more time analyzing problem-free
    traffic than traffic that they are troubleshooting. After all, you need a baseline
    for comparison to effectively troubleshoot network traffic. For example, if you
    ever hope to solve a problem with DHCP by analyzing its traffic, you must understand
    what the flow of working DHCP traffic looks like.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，不一定需要出现问题才能进行数据包分析。事实上，大多数数据包分析师花费更多时间分析没有问题的流量，而不是他们正在排查故障的流量。毕竟，你需要有一个基线来比较，才能有效地排查网络流量。例如，如果你希望通过分析
    DHCP 流量来解决 DHCP 的问题，你必须了解工作正常的 DHCP 流量的流向。
- en: More broadly, to find anomalies in daily network activity, you must know what
    normal daily network activity looks like. When your network is running smoothly,
    your observations become a baseline representing what traffic looks like in a
    normal state.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 更广泛地说，要在日常网络活动中发现异常，你必须了解正常的日常网络活动是什么样的。当你的网络运行顺利时，你的观察会成为一个基线，代表正常状态下的流量。
- en: So, let’s capture some packets!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，让我们捕获一些数据包吧！
- en: Open Wireshark.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Wireshark。
- en: From the main drop-down menu, select **Capture** and then **Options**. You should
    see a dialog listing the various interfaces that can be used to capture packets,
    along with some basic information about each one ([Figure 3-4](ch03.xhtml#ch03fig4)).
    Take note of the Traffic heading, which shows a line graph indicating the amount
    of traffic currently passing through that interface. Peaks on a line tell you
    that you are actually capturing packets. If you aren’t, the line will be flat.
    You can also expand each interface by clicking the arrow to the left of it to
    see the addressing information, such as the MAC address or IP address, tied to
    it.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从主下拉菜单中选择**捕获**，然后选择**选项**。你应该会看到一个对话框，列出了可以用于捕获数据包的各种接口，以及每个接口的基本信息（[图 3-4](ch03.xhtml#ch03fig4)）。注意流量标题，它显示了一个折线图，表示当前通过该接口的流量量。折线上的峰值告诉你，实际上你正在捕获数据包。如果没有数据包，线条会是平的。你还可以通过点击每个接口左侧的箭头来展开它，查看与之关联的地址信息，如
    MAC 地址或 IP 地址。
- en: Click the interface you wish to use and click **Start**. Data should begin filling
    the window.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击你希望使用的接口，然后点击**开始**。数据应该开始填充窗口。
- en: Wait about a minute or so, and when you are ready to stop the capture and view
    your data, click the **Stop** button from the Capture drop-down menu.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待大约一分钟，当你准备停止捕获并查看数据时，从捕获下拉菜单中点击**停止**按钮。
- en: '![image](../images/f45-01.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f45-01.jpg)'
- en: '*Figure 3-4: Selecting an interface on which to perform your packet capture*'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3-4：选择用于执行数据包捕获的接口*'
- en: Once you have completed these steps and finished the capture process, the Wireshark
    main window should be alive with data. As a matter of fact, you might be overwhelmed
    by the amount of data that appears, but it will all start to make sense quickly
    as we break down the main window of Wireshark one piece at a time.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成这些步骤并结束捕获过程，Wireshark主窗口应该会充满数据。事实上，您可能会被出现的数据量压倒，但当我们逐一解析Wireshark的主窗口时，这一切都会很快变得有意义。
- en: '***Wireshark’s Main Window***'
  id: totrans-95
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Wireshark 主窗口***'
- en: You’ll spend most of your time in the Wireshark main window. This is where all
    of the packets you capture are displayed and broken down into a more understandable
    format. Using the packet capture you just made, let’s take a look at Wireshark’s
    main window, shown in [Figure 3-5](ch03.xhtml#ch03fig5).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 您将大部分时间都花在Wireshark的主窗口中。这里展示了您捕获的所有数据包，并将它们分解成更易于理解的格式。使用您刚刚捕获的数据包，让我们来看一下Wireshark的主窗口，如[图3-5](ch03.xhtml#ch03fig5)所示。
- en: '![image](../images/f45-02.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f45-02.jpg)'
- en: '*Figure 3-5: The Wireshark main window uses a three-pane design.*'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3-5：Wireshark的主窗口使用了三面板设计。*'
- en: The three panes in the main window—Packet List, Packet Details, and Packet Bytes
    from top to bottom—depend on one another. To view the details of an individual
    packet in the Packet Details pane, you must first select it in the Packet List
    pane. When you select a portion of the packet in the Packet Details pane, the
    Packet Bytes pane displays the bytes that correspond with that portion.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 主窗口中的三个面板——从上到下的**数据包列表**、**数据包详细信息**和**数据包字节**——彼此相互依赖。要查看**数据包详细信息**面板中单个数据包的详细信息，必须先在**数据包列表**面板中选择该数据包。当你在**数据包详细信息**面板中选择数据包的某一部分时，**数据包字节**面板将显示与该部分相对应的字节。
- en: '**NOTE**'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Notice that [Figure 3-5](ch03.xhtml#ch03fig5) lists a few different protocols
    in the Packet List pane. There is no visual separation of protocols on different
    layers (other than via color coding); all packets are shown as they are received
    on the wire.*'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意，[图3-5](ch03.xhtml#ch03fig5)在数据包列表面板中列出了几种不同的协议。不同层次的协议之间没有视觉上的分隔（除了通过颜色编码）；所有数据包都按照接收到的顺序显示。*'
- en: 'Here’s what each pane contains:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是每个面板的内容：
- en: '**Packet List**   The top pane displays a table containing all packets in the
    current capture file. It has columns containing the packet number, the relative
    time the packet was captured, the source and destination of the packet, the packet’s
    protocol, and some general information found in the packet.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据包列表** 顶部面板显示了当前捕获文件中所有数据包的表格。它包含了数据包编号、数据包捕获的相对时间、数据包的源和目的地、数据包的协议以及数据包中找到的一些一般信息的列。'
- en: '**NOTE**'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*When I refer to* traffic*, I’m referring to all packets displayed in the Packet
    List pane. When I refer to* DNS traffic *specifically, I mean the DNS protocol
    packets in the Packet List pane.*'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '*当我提到*流量*时，我指的是在数据包列表面板中显示的所有数据包。当我特别提到*DNS流量*时，我指的是数据包列表面板中的DNS协议数据包。*'
- en: '**Packet Details**   The middle pane contains a hierarchical display of information
    about a single packet and can be collapsed or expanded to show all of the information
    collected about the individual packet.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据包详细信息** 中间的面板显示了关于单个数据包的层次信息，并且可以折叠或展开以显示关于该数据包的所有收集信息。'
- en: '**Packet Bytes**   The lower pane—perhaps the most confusing—displays a packet
    in its raw, unprocessed form; that is, it shows what the packet looks like as
    it travels across the wire. This is raw information with nothing warm or fuzzy
    to make it easier to follow. We’ll discuss methods for interpreting this type
    of data in [Appendix B](ch15_appb.xhtml#ch15_appb).'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据包字节** 下方面板——可能是最让人困惑的——显示数据包的原始未处理形式；也就是说，它展示了数据包在网络上传输时的样子。这是原始信息，没有任何温和或模糊的部分来使其更容易理解。我们将在[附录B](ch15_appb.xhtml#ch15_appb)中讨论如何解释这类数据。'
- en: '***Wireshark Preferences***'
  id: totrans-108
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Wireshark 偏好设置***'
- en: Wireshark has several preferences that can be customized to meet your needs.
    To access Wireshark’s preferences, select **Edit** from the main drop-down menu
    and click **Preferences**. You’ll see the Preferences dialog, which contains several
    customizable options, as shown in [Figure 3-6](ch03.xhtml#ch03fig6).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark有多个可以自定义的偏好设置，以满足您的需求。要访问Wireshark的偏好设置，请从主下拉菜单中选择**编辑**并点击**偏好设置**。您将看到包含多个可自定义选项的偏好设置对话框，如[图3-6](ch03.xhtml#ch03fig6)所示。
- en: 'Wireshark’s preferences are divided into six major sections plus an Advanced
    section:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark的偏好设置分为六个主要部分，外加一个高级部分：
- en: '**Appearance**   These preferences determine how Wireshark presents data. You
    can change most options here according to your personal preferences, including
    whether to save window positions, the layout of the three main panes, the placement
    of the scroll bar, the placement of the Packet List pane columns, the fonts used
    to display the captured data, and the background and foreground colors.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**外观** 这些设置决定了Wireshark如何呈现数据。你可以根据个人喜好在这里更改大多数选项，包括是否保存窗口位置、三大窗格的布局、滚动条位置、数据包列表窗格列的位置、用于显示捕获数据的字体，以及背景和前景颜色。'
- en: '![image](../images/f47-01.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f47-01.jpg)'
- en: '*Figure 3-6: You can customize Wireshark using the Preferences dialog options.*'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3-6：你可以使用“设置”对话框选项来自定义Wireshark。*'
- en: '**Capture**   These preferences allow you to specify options related to the
    way packets are captured, including your default capture interface, whether to
    use promiscuous mode by default, and whether to update the Packet List pane in
    real time.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**捕获** 这些设置允许你指定与数据包捕获方式相关的选项，包括默认的捕获接口，是否默认使用混杂模式，以及是否实时更新“数据包列表”窗格。'
- en: '**Filter Expressions**   Later we will discuss how Wireshark allows you to
    filter traffic based on specific criteria. This section of the Preferences dialog
    allows you to create and manage those filters.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**过滤表达式** 稍后我们将讨论Wireshark如何根据特定条件过滤流量。此部分设置允许你创建和管理这些过滤器。'
- en: '**Name Resolution**   Through these preferences, you can activate features
    of Wireshark that allow it to resolve addresses into more recognizable names (including
    MAC, network, and transport name resolution) and specify the maximum number of
    concurrent name resolution requests.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**名称解析** 通过这些设置，你可以启用Wireshark的某些功能，使其能够将地址解析为更易识别的名称（包括MAC、网络和传输名称解析），并指定最大并发名称解析请求数。'
- en: '**Protocols**   This section allows you to manipulate options related to the
    capture and display of the various packets Wireshark is capable of decoding. Not
    every protocol has configurable preferences, but some have several options that
    can be changed. These options are best left at their defaults unless you have
    a specific reason to change them.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**协议** 这一部分允许你操作与Wireshark解码不同数据包相关的捕获和显示选项。并非每种协议都有可配置的设置，但有些协议提供了若干可以更改的选项。除非你有特定理由更改它们，否则最好保留默认设置。'
- en: '**Statistics**   This section provides a few configurable options for Wireshark’s
    statistical features, which will be covered in more depth in [Chapter 5](ch05.xhtml#ch05).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**统计信息** 这一部分提供了Wireshark统计功能的一些可配置选项，这些内容将在[第5章](ch05.xhtml#ch05)中详细介绍。'
- en: '**Advanced**   Settings that don’t fit neatly into any of the previous categories
    can be found here. Editing these settings is something typically only done by
    Wireshark power users.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级** 不适合归入上述任何类别的设置可以在此找到。编辑这些设置通常是Wireshark高级用户的工作。'
- en: '***Packet Color Coding***'
  id: totrans-120
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***数据包颜色编码***'
- en: If you are anything like me, you enjoy shiny objects and pretty colors. If so,
    you probably got excited when you saw all those different colors in the Packet
    List pane, as in the example in [Figure 3-7](ch03.xhtml#ch03fig7) (well, the figure
    is in black and white if you’re reading this book in print, but you get the idea).
    It may seem as if these colors are randomly assigned to each packet, but this
    isn’t the case.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你像我一样，喜欢闪亮的物体和漂亮的颜色，那么当你在“数据包列表”窗格中看到这些不同的颜色时，可能会感到很兴奋，就像在[图 3-7](ch03.xhtml#ch03fig7)中的示例一样（如果你是看纸质书，图示是黑白的，但你大概明白我的意思）。这些颜色似乎是随机分配给每个数据包的，但事实并非如此。
- en: '![image](../images/f48-01.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f48-01.jpg)'
- en: '*Figure 3-7: Wireshark’s color coding allows for quick protocol identification.*'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3-7：Wireshark的颜色编码可以快速识别协议。*'
- en: Each packet is displayed in a certain color for a reason. The color can reflect
    the packet’s protocol and specific field values. For example, all UDP traffic
    is blue and all HTTP traffic is green by default. The color coding allows you
    to quickly differentiate between various protocols so that you don’t need to read
    the protocol field in the Packet List pane for every packet. You’ll find that
    this greatly speeds up the time it takes to browse through large capture files.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据包会以特定的颜色显示，原因是有的。颜色可以反映数据包的协议和特定字段值。例如，所有的UDP流量默认是蓝色，所有的HTTP流量默认是绿色。颜色编码使你能够快速区分不同的协议，因此你无需每次都在“数据包列表”窗格中读取协议字段。你会发现，这大大加快了浏览大文件时所需的时间。
- en: Wireshark makes it easy to see which colors are assigned to each protocol through
    the Coloring Rules window, shown in [Figure 3-8](ch03.xhtml#ch03fig8). To open
    this window, select **View** from the main drop-down menu and click **Coloring
    Rules**.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark 通过着色规则窗口使你能够轻松查看每个协议分配的颜色，如[图 3-8](ch03.xhtml#ch03fig8)所示。要打开此窗口，请从主下拉菜单选择
    **查看** 并点击 **着色规则**。
- en: '![image](../images/f48-02.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f48-02.jpg)'
- en: '*Figure 3-8: The Coloring Rules window lets you view and modify the coloring
    of packets.*'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3-8：着色规则窗口让你查看和修改数据包的着色。*'
- en: 'Coloring rules are based on Wireshark filters, which we will look at in [Chapter
    4](ch04.xhtml#ch04). Using these filters, you can define your own coloring rules
    and modify existing ones. For example, to change the background color used for
    HTTP traffic from the default green to lavender, follow these steps:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 着色规则基于 Wireshark 过滤器，我们将在[第 4 章](ch04.xhtml#ch04)中讨论这些过滤器。使用这些过滤器，你可以定义自己的着色规则并修改现有的规则。例如，要将
    HTTP 流量的背景颜色从默认的绿色改为薰衣草色，请按照以下步骤操作：
- en: Open Wireshark and access the Coloring Rules window (**View** ▶ **Coloring Rules**).
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Wireshark 并访问着色规则窗口（**查看** ▶ **着色规则**）。
- en: Find the HTTP coloring rule in the coloring rules list and select it by clicking
    it once.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在着色规则列表中找到 HTTP 着色规则并单击选择它。
- en: You’ll see the foreground and background colors at the bottom of the screen,
    as shown in [Figure 3-9](ch03.xhtml#ch03fig9).
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将在屏幕底部看到前景色和背景色，如[图 3-9](ch03.xhtml#ch03fig9)所示。
- en: '![image](../images/f49-01.jpg)'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f49-01.jpg)'
- en: '*Figure 3-9: When editing a color filter, you can modify both the foreground
    and background colors.*'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 3-9：编辑颜色过滤器时，你可以修改前景色和背景色。*'
- en: Click the **Background** button.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **背景** 按钮。
- en: Select the color you wish to use on the color wheel and click **OK**.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你希望在颜色轮上使用的颜色并点击 **确定**。
- en: Click **OK** once more to accept the changes and return to the main window.
    The user interface should then reload itself to reflect the updated color scheme.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次点击 **确定** 接受更改并返回主窗口。用户界面将重新加载，以反映更新后的颜色方案。
- en: As you work with Wireshark on your network, you’ll begin to notice that you
    deal with certain protocols more than others. Here’s where color-coded packets
    can make your life a lot easier. For example, if you think that there is a rogue
    DHCP server on your network handing out IP leases, you could modify the coloring
    rule for the DHCP protocol so that it shows up in bright yellow (or some other
    easily identifiable color). This would allow you to pick out all DHCP traffic
    much more quickly, making your packet analysis more efficient.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在网络上使用 Wireshark 时，会开始注意到某些协议比其他协议更常见。此时，颜色编码的数据包可以让你的工作变得更加轻松。例如，如果你认为网络上存在一个不明的
    DHCP 服务器在分发 IP 租约，你可以修改 DHCP 协议的着色规则，使其显示为亮黄色（或其他易于识别的颜色）。这样，你就能更快地识别出所有的 DHCP
    流量，提高数据包分析的效率。
- en: '**NOTE**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Not too long ago, I was discussing Wireshark coloring rules during a presentation
    to a local group of students. One student was relieved to find out he could edit
    the coloring rules because he was color-blind and had trouble distinguishing certain
    protocols based on the default coloring. The ability to modify the default coloring
    rules thus provides some degree of accessibility.*'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '*不久前，我在向本地学生小组做演讲时讨论了 Wireshark 着色规则。一位学生发现自己可以编辑着色规则时松了一口气，因为他是色盲，基于默认着色很难区分某些协议。因此，能够修改默认的着色规则为一些程度的可访问性提供了帮助。*'
- en: '**Configuration Files**'
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**配置文件**'
- en: It’s helpful to understand where Wireshark stores various configuration settings
    should you ever need to modify those files directly. You can find the location
    of the Wireshark configuration files by selecting **Help** from the main drop-down
    menu, choosing **About Wireshark**, and clicking the **Folders** tab. This window
    is shown in [Figure 3-10](ch03.xhtml#ch03fig10).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 了解 Wireshark 存储各种配置设置的位置非常有帮助，尤其是当你需要直接修改这些文件时。你可以通过从主下拉菜单选择 **帮助**，选择 **关于
    Wireshark**，然后点击 **文件夹** 标签来查找 Wireshark 配置文件的位置。此窗口如[图 3-10](ch03.xhtml#ch03fig10)所示。
- en: '![image](../images/f50-01.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f50-01.jpg)'
- en: '*Figure 3-10: Locating Wireshark configuration files*'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3-10：定位 Wireshark 配置文件*'
- en: The two most important locations in terms of Wireshark customization are the
    personal and global configuration directories. The global configuration directory
    contains all of the default settings for Wireshark and is where the default profile
    stores its settings. The personal configuration folder contains customized settings
    and profiles unique to your account. Any new profiles you create will be stored
    in a subdirectory of the personal configuration folder using whatever name you
    provide.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在Wireshark定制中，最重要的两个位置是个人配置目录和全局配置目录。全局配置目录包含Wireshark的所有默认设置，并且是默认配置文件存储其设置的地方。个人配置文件夹包含针对你的帐户定制的设置和配置文件。你创建的任何新配置文件将存储在个人配置文件夹的子目录中，并使用你提供的名称。
- en: The difference between global and personal configuration directories is an important
    one, because any changes made to the global configuration files will affect every
    Wireshark user on a system.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 全局配置目录和个人配置目录之间的区别非常重要，因为对全局配置文件所做的任何更改都会影响系统上的每个Wireshark用户。
- en: '**Configuration Profiles**'
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**配置文件**'
- en: After learning about Wireshark’s preferences, you may find that sometimes you
    want to use one set of preferences but then quickly switch to another set to address
    a different scenario. Instead of making you manually reconfigure your preferences
    every time this occurs, Wireshark introduced configuration profiles, which allow
    users to create saved sets of preferences.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解Wireshark的偏好设置后，你可能会发现，有时你想使用一组偏好设置，但又希望迅速切换到另一组以应对不同的场景。Wireshark引入了配置文件，允许用户创建已保存的偏好设置集，而不必每次发生这种情况时都手动重新配置偏好设置。
- en: 'A configuration profile stores the following:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件存储以下内容：
- en: •     Preferences
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: •     偏好设置
- en: •     Capture filters
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: •     捕获过滤器
- en: •     Display filters
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: •     显示过滤器
- en: •     Coloring rules
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: •     着色规则
- en: •     Disabled protocols
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: •     禁用的协议
- en: •     Forced decodes
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: •     强制解码
- en: •     Recent settings, such as pane sizes, view menu settings, and column widths
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: •     最近的设置，例如面板大小、视图菜单设置和列宽
- en: •     Protocol-specific tables, such as SNMP users and custom HTTP headers
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: •     特定协议的表格，例如SNMP用户和自定义HTTP头
- en: To view the list of profiles, click **Edit** in the main drop-down menu and
    choose the **Configuration Profiles** option. Alternatively, you can right-click
    the profiles section at the bottom-right side of the screen and select the **Manage
    Profiles** option. When you arrive at the Configuration Profiles window, you’ll
    see that Wireshark comes with a few standard profiles, including the Default,
    Bluetooth, and Classic profiles shown in [Figure 3-11](ch03.xhtml#ch03fig11).
    The Latency Investigation profile is a custom profile I’ve added and is in plaintext,
    while the global and default profiles are in italics.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看配置文件列表，可以在主下拉菜单中点击**编辑**并选择**配置文件**选项。或者，你也可以右键点击屏幕右下角的配置文件部分，选择**管理配置文件**选项。当你进入配置文件窗口时，你会看到Wireshark提供了一些标准配置文件，包括[图3-11](ch03.xhtml#ch03fig11)中显示的默认、蓝牙和经典配置文件。延迟调查配置文件是我添加的自定义配置文件，采用的是纯文本格式，而全局和默认配置文件则以斜体显示。
- en: '![image](../images/f51-01.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f51-01.jpg)'
- en: '*Figure 3-11: Viewing configuration profiles*'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3-11：查看配置文件*'
- en: The Configuration Profiles window allows you to create, copy, delete, and apply
    configuration profiles. The process of creating a new profile is very simple.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件窗口允许你创建、复制、删除和应用配置文件。创建新配置文件的过程非常简单。
- en: Configure Wireshark with the settings you’d like to save to a profile.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据你希望保存到配置文件中的设置配置Wireshark。
- en: Proceed to the Configuration Profiles window by clicking **Edit** in the main
    drop-down menu. Select the **Configuration Profiles** option.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在主下拉菜单中点击**编辑**，进入配置文件窗口。选择**配置文件**选项。
- en: Click the plus (+) button and give the profile a descriptive name.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击加号（+）按钮，并为配置文件指定一个描述性名称。
- en: Click **OK**.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**。
- en: When you’d like to switch profiles, you can go to the Configuration Profile
    window, click the profile name, and click **OK**. You can do this more quickly
    by clicking the Profile heading at the bottom right of the Wireshark window and
    selecting the profile you’d like to use, as shown in [Figure 3-12](ch03.xhtml#ch03fig12).
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想切换配置文件时，可以进入配置文件窗口，点击配置文件名称，然后点击**确定**。你也可以通过点击Wireshark窗口右下角的Profile标题，并选择你想使用的配置文件来更快地完成此操作，如[图3-12](ch03.xhtml#ch03fig12)所示。
- en: '![image](../images/f52-01.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f52-01.jpg)'
- en: '*Figure 3-12: Quickly switch between profiles through the Profile heading.*'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3-12：通过Profile标题快速切换配置文件。*'
- en: One of the most useful aspects of configuration profiles is that each profile
    is stored in its own directory with a series of configuration files. This means
    that you can back up your profiles and share them with others. The folders tab
    shown in [Figure 3-10](ch03.xhtml#ch03fig10) provides paths to personal and global
    configuration file directories. To share a profile with a user on another computer,
    just copy the folder matching the name of the profile you want to share and paste
    it into the same directory for the appropriate user on another computer.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件最有用的一个方面是，每个配置文件都保存在其独立的目录中，并包含一系列配置文件。这意味着你可以备份配置文件并与他人分享。[图3-10](ch03.xhtml#ch03fig10)中的文件夹标签提供了个人和全局配置文件目录的路径。要与另一台计算机上的用户共享配置文件，只需复制与要共享的配置文件同名的文件夹，并将其粘贴到另一台计算机上相应用户的同一目录中。
- en: While reading along in this book, you may find the need to create a few high-level
    profiles for general troubleshooting, finding the source of network latency, and
    investigating security issues. Don’t be afraid to use profiles liberally. They
    are real time-savers when you want to quickly switch a few preference options
    on or off. I’ve known people who have used dozens of profiles to address different
    scenarios with great success.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本书时，你可能会发现需要创建一些高层次的配置文件，以进行常规故障排除、查找网络延迟源头以及调查安全问题。不要害怕广泛使用配置文件。当你想要快速切换一些偏好设置时，配置文件能为你节省大量时间。我认识一些人，他们成功地使用了数十个配置文件来应对不同的场景。
- en: Now that you have Wireshark up and running, you’re ready to do some packet analysis.
    [Chapter 4](ch04.xhtml#ch04) describes how you can work with the packets you’ve
    captured.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经成功启动了 Wireshark，准备进行数据包分析。[第4章](ch04.xhtml#ch04)描述了如何处理你捕获到的数据包。
