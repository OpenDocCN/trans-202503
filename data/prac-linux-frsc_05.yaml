- en: '**5'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**5'
- en: INVESTIGATING EVIDENCE FROM LINUX LOGS**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**正在调查来自Linux日志的证据**'
- en: '![Image](Images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/common01.jpg)'
- en: The computer term *log* originates from an ancient sailor’s technique for measuring
    the speed of a moving ship. A wooden log attached to a long rope was thrown overboard
    behind the ship. The rope had regularly spaced knots that sailors would count
    as the moving ship distanced itself from the floating log. They could calculate
    the speed of the ship from the number of knots counted over a period of time.
    Regular measurements of the ship’s speed were recorded in the ship’s “log book”
    or log.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机术语*log*源自古代水手用来测量船只航行速度的一种技术。一个绑着长绳的木块被扔到船后面水中，绳子上定期间隔着结点，水手们在船只远离漂浮的木块时，数着这些结点的数量。通过计数一定时间内经过的结点数量，他们可以计算船只的速度。定期测量的船速被记录在船只的“日志本”或日志中。
- en: Over time, the word *log* came to represent a variety of recorded periodic measurements
    or events. Log books are still used by organizations to document visitors entering
    buildings, the delivery of goods, and other activities that need a written historical
    record. The concept of a computer login and logout was created to control and
    record user activity. Early time-sharing computer systems were expensive and needed
    to keep track of computing resources consumed by different users. As the cost
    of storage capacity and processing power dropped, the use of logging expanded
    to nearly all parts of a modern computer system. This wealth of logged activity
    is a valuable source of digital evidence and helps forensic investigators reconstruct
    past events and activity.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，*log*一词开始代表各种记录的周期性测量或事件。日志本仍然被组织用来记录进入建筑物的访客、货物的交付以及其他需要书面历史记录的活动。计算机登录和注销的概念被创造出来以控制和记录用户活动。早期的分时计算机系统非常昂贵，需要跟踪不同用户消耗的计算资源。随着存储容量和处理能力的成本下降，日志记录的使用扩展到几乎所有现代计算机系统的部分。这些丰富的日志活动是数字证据的重要来源，有助于取证调查人员重建过去的事件和活动。
- en: '**Traditional Syslog**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**传统Syslog**'
- en: The traditional logging system on Unix and Unix-like operating systems such
    as Linux is *syslog*. Syslog was originally written for the sendmail software
    package in the early 1980s and has since become the de facto logging standard
    for IT infrastructure.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unix及类Unix操作系统（如Linux）上的传统日志系统是*syslog*。Syslog最初是为了sendmail软件包在1980年代初编写的，之后成为IT基础设施的事实标准日志系统。
- en: Syslog is typically implemented as a daemon (also known as a collector) that
    listens for log messages from multiple sources, such as packets arriving over
    network sockets (UDP port 514), local named pipes, or syslog library calls (see
    [Figure 5-1](ch05.xhtml#ch05fig01)).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Syslog通常作为一个守护进程（也称为收集器）来实现，监听来自多个源的日志消息，如通过网络套接字（UDP端口514）到达的包、局部命名管道或syslog库调用（见[图
    5-1](ch05.xhtml#ch05fig01)）。
- en: '![Image](Images/ch05fig01.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch05fig01.jpg)'
- en: '*Figure 5-1: Traditional syslog architecture (rsyslog)*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-1：传统syslog架构（rsyslog）*'
- en: The syslog architecture and network protocol is defined in RFC 5424\. Linux
    distributions have historically included one of several implementations of syslog
    for local system logging, the most common being *rsyslog*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: syslog架构和网络协议在RFC 5424中有定义。Linux发行版历史上包含了几种syslog实现，用于本地系统日志记录，最常见的是*rsyslog*。
- en: '***Syslog Facility, Severity, and Priority***'
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Syslog功能、严重性和优先级***'
- en: The syslog standard defines the format of messages and several characteristics
    of log entries. These characteristics are *facility*, *severity*, and *priority*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: syslog标准定义了消息的格式以及日志条目的几个特征。这些特征包括*功能*、*严重性*和*优先级*。
- en: 'The message facility allows the categorization of logs depending on a subsystem.
    RFC 5424 documents 24 syslog message facilities. The rsyslog .conf(5) man page
    and the Linux *syslog.h* header file define them as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 消息功能允许根据子系统对日志进行分类。RFC 5424文档列出了24种syslog消息功能。rsyslog .conf(5)手册页和Linux *syslog.h*头文件定义了它们，如下所示：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Some of these facility codes, like `news` (Usenet) or `uucp` (Unix-to-Unix copy)
    are obsolete and might be explicitly redefined by a system administrator at a
    local site. The last eight “local” facilities are reserved specifically for local
    sites to use as needed.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些功能代码，如`news`（Usenet）或`uucp`（Unix到Unix复制），已经过时，可能会被系统管理员在本地站点显式重新定义。最后八个“本地”功能专门为本地站点保留，供根据需要使用。
- en: One internal facility called `mark` is often implemented separately from the
    syslog standard. If used, the syslog daemon generates `mark` log entries, together
    with a timestamp, at regularly defined intervals. These markers indicate that
    the logging subsystem was still functional during periods of time when no logs
    were received. In a forensic examination, the marks are interesting as potential
    indicators of the absence of certain activity, which can be useful information
    in an investigation.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一个名为 `mark` 的内部设施通常独立于 syslog 标准实现。如果使用，syslog 守护进程会生成带有时间戳的 `mark` 日志条目，并在预定的时间间隔内记录。这些标记表明，在没有收到日志的时间段内，日志子系统仍然在正常工作。在取证检查中，这些标记是潜在的活动缺失指示器，可能是调查中的有用信息。
- en: 'There are eight severity levels, with zero being the most severe. The highest
    numbers generate the most volume of information and are often enabled on demand
    for troubleshooting or debugging. The severity level can be represented as either
    a numeric value or a text label. The levels are listed here together with the
    short or alternate names and description:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 有八个严重性级别，其中零是最严重的。最高的数字会生成最多的信息量，通常在故障排除或调试时根据需要启用。严重性级别可以表示为数字值或文本标签。级别在这里列出，并附有简短或替代的名称和描述：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: These severity levels are interesting from a forensic readiness perspective.
    If a particular syslog-generating component is at heightened risk or suspicion,
    or if there is an ongoing incident, the logging severity can be changed temporarily
    to increase the verbosity of the logs. Some tools and documentation may use the
    word priority when referring to severity.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 从取证准备的角度来看，这些严重性级别非常重要。如果某个特定的 syslog 生成组件面临更高的风险或怀疑，或者有正在进行的事件，可以暂时改变日志的严重性级别，以增加日志的详细程度。一些工具和文档可能会在提到严重性时使用“优先级”一词。
- en: The priority, or *PRI* value, of a syslog message is calculated from the facility
    and severity (by multiplying the facility by eight and then adding the severity).
    The syslog daemon can use the priority number to decide how to handle the message.
    These decisions include the location and file to save, filtering, which host(s)
    to forward messages to, and so on.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: syslog 消息的优先级，或称 *PRI* 值，是根据设施和严重性计算得出的（方法是将设施乘以八，然后加上严重性）。syslog 守护进程可以使用优先级数字来决定如何处理消息。这些决定包括保存位置和文件、过滤、转发到哪些主机等。
- en: '***Syslog Configuration***'
  id: totrans-21
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Syslog 配置***'
- en: 'The configuration of the local syslog daemon is important to know in a forensic
    investigation. The configuration file entries (both defaults and administrator
    customization) direct the investigator to where logs are located, which severity
    levels have been logged, and what other logging hosts are involved. Common syslog
    daemon configuration file locations are:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本地 syslog 守护进程的配置在取证调查中非常重要。配置文件条目（包括默认值和管理员自定义内容）指引调查员日志存放的位置、记录了哪些严重性级别以及涉及了哪些其他日志主机。常见的
    syslog 守护进程配置文件位置有：
- en: '*/etc/syslog.conf*'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/syslog.conf*'
- en: '*/etc/rsyslog.conf*'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/rsyslog.conf*'
- en: '*/etc/rsyslog.d/*.conf*'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/rsyslog.d/*.conf*'
- en: '*/etc/syslog-ng.conf*'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/syslog-ng.conf*'
- en: '*/etc/syslog-ng/**'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/syslog-ng/**'
- en: These are plaintext files that any text editor can read. The examples here include
    BSD syslog, rsyslog, and syslog-ng implementations.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是纯文本文件，任何文本编辑器都可以读取。这里的示例包括 BSD syslog、rsyslog 和 syslog-ng 实现。
- en: 'The configuration files define the location and contents of the logs managed
    by the daemon. A typical syslog configuration line has two fields: the selector
    and the action. The *selector* field is composed of the facility and severity
    (separated by a dot). The *action* field defines the destination or other action
    taken when logs match the selector. The following is an example rsyslog configuration
    file:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件定义了守护进程管理的日志的位置和内容。典型的 syslog 配置行有两个字段：选择器和操作。*选择器* 字段由设施和严重性（用点分隔）组成。*操作*
    字段定义了日志与选择器匹配时的目标或其他操作。以下是一个 rsyslog 配置文件的示例：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The first line is commented out and intended for debugging when needed. The
    second line sends all kernel logs to */var/log/kern.log*, regardless of severity.
    In the third line, mail logs with a severity of *error* or more are sent to the
    */var/log/mail.err* logfile. These files are stored locally and can be easily
    located and examined. The last line sends all log messages (any facility) with
    a severity of *info* or more to another host on the network. The `@` indicates
    a network destination and `loghost` is a central logging infrastructure.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行被注释掉，通常用于在需要时进行调试。第二行将所有内核日志发送到*/var/log/kern.log*，不论其严重性如何。第三行将所有严重性为*error*或更高的邮件日志发送到*/var/log/mail.err*日志文件。这些文件保存在本地，可以轻松定位和检查。最后一行将所有日志消息（任何设施）中严重性为*info*或更高的发送到网络上的另一台主机。`@`表示网络目标，`loghost`是中央日志记录基础设施。
- en: The network destinations are especially interesting for an investigation because
    they indicate a separate non-local source of log data that can be collected and
    examined. If identical logs are stored both locally and on a remote log host,
    the correlation can be interesting if the data doesn’t match. A mismatch may indicate
    malicious modification of one of the logs.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 网络目标对于调查特别有趣，因为它们表示来自非本地日志数据源的数据，这些数据可以被收集和检查。如果相同的日志同时存储在本地和远程日志主机上，那么如果数据不匹配，关联可能会变得很有趣。数据不匹配可能表示其中一条日志被恶意修改。
- en: On Linux systems, the */var/log/* directory is the most common place to save
    logs. However, these flat text files have scalability, performance, and reliability
    challenges when high volumes of log data are ingested. Enterprise IT environments
    still use the syslog protocol over the network, but messages are often saved to
    high-performance databases or systems designed specifically for managing logs
    (Splunk is a popular example). These databases can be a valuable source of information
    for investigators and enable a quick iterative investigative process. Very large
    text-based logfiles can take a long time to query (`grep`) for keywords compared
    to database log systems.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 系统中，*/var/log/* 目录是保存日志的最常见位置。然而，当大量日志数据被写入时，这些纯文本文件在可扩展性、性能和可靠性方面面临挑战。企业
    IT 环境仍然使用通过网络传输的 syslog 协议，但消息通常会保存到高性能数据库或专门设计用于管理日志的系统中（Splunk 是一个常见的例子）。这些数据库对于调查人员来说是一个宝贵的信息来源，并能加速快速的迭代调查过程。相比于数据库日志系统，超大的基于文本的日志文件在查询（`grep`）关键字时可能需要更长时间。
- en: '***Analyzing Syslog Messages***'
  id: totrans-34
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***分析 Syslog 消息***'
- en: A syslog message transmitted across a network is not necessarily identical to
    the corresponding message that is saved to a file. For example, some fields may
    not be saved (depending on the syslog configuration).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通过网络传输的 syslog 消息不一定与保存到文件中的对应消息完全相同。例如，某些字段可能不会被保存（这取决于 syslog 配置）。
- en: A program with built-in syslog support, also known as an *originator*, uses
    programming libraries or external programs to generate syslog messages on a local
    system. Programs implementing syslog are free to choose any facility and severity
    they wish for each message.^([1](footnotes.xhtml#ch05foot_01))
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 带有内建 syslog 支持的程序，也称为*源程序*，使用编程库或外部程序在本地系统上生成 syslog 消息。实现 syslog 的程序可以自由选择每条消息的任意设施和严重性等级。^([1](footnotes.xhtml#ch05foot_01))
- en: 'To illustrate, let’s take a look at the `logger`^([2](footnotes.xhtml#ch05foot_02))
    tool for generating syslog messages:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这一点，我们来看看`logger`^([2](footnotes.xhtml#ch05foot_02))工具，它用于生成 syslog 消息：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The syslog message from this example can be observed traversing a network.
    When captured and decoded by `tcpdump`, it looks like this:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例中的 syslog 消息可以在网络中观察到。当被`tcpdump`捕获并解码时，它看起来是这样的：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Some information (like severity or facility) in the original syslog messages
    might not be stored in the destination logfiles depending on how the syslog daemon
    is configured. For example, a typical rsyslog configuration will log the syslog
    message from the preceding example as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 syslog 守护进程的配置，原始 syslog 消息中的某些信息（如严重性或设施）可能不会被存储到目标日志文件中。例如，典型的 rsyslog
    配置将如下所示地记录前面示例中的 syslog 消息：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here, the severity and facility are not logged locally; however, the syslog
    daemon is aware of them when the message arrives and may use this information
    to choose the log destination. On the `loghost`, the UDP port numbers (the source
    port in particular) are also not logged unless the site is logging firewall traffic
    or using netflow logging.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，严重级别和设施不会在本地记录；但是，syslog守护进程在接收到消息时会了解这些信息，并可能使用这些信息来选择日志的目的地。在`loghost`上，UDP端口号（尤其是源端口）也不会被记录，除非站点正在记录防火墙流量或使用netflow日志记录。
- en: 'Most syslog systems log a few standard items by default. Here is an example
    of a typical log entry generated by rsyslog:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数syslog系统默认记录一些标准项。以下是rsyslog生成的典型日志条目的示例：
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This log line contains a timestamp, the local hostname, and the program that
    generated the message together with its process ID (in square brackets), followed
    by the message produced by the program. In this example, the `dhclient` program
    (PID 18842) is logging a DHCP acknowledgement containing the machine’s local IP
    address (10.0.11.227) and the IP address of the DHCP server (10.0.11.1).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这条日志行包含了时间戳、本地主机名，以及生成消息的程序及其进程ID（方括号内），随后是程序生成的消息。在这个例子中，`dhclient`程序（PID 18842）正在记录一个DHCP确认消息，其中包含计算机的本地IP地址（10.0.11.227）和DHCP服务器的IP地址（10.0.11.1）。
- en: Most Linux systems use log rotation to manage retention as logs grow over time.
    Older logs might be renamed, compressed, or even deleted. A common software package
    for this is logrotate, which manages log retention and rotation based on a set
    of configuration files. The default configuration file is */etc/logrotate.conf*,
    but packages may supply their own logrotate configuration and save it in */etc/logrotate.d/**
    during package installation. During a forensic examination, it is useful to check
    whether and how logfiles are rotated and retained over time. The logrotate package
    can manage any logfile, not only those generated by syslog.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数Linux系统使用日志轮换来管理随着时间推移而增长的日志文件的保留。较旧的日志文件可能会被重命名、压缩，甚至删除。常用的管理工具是logrotate，它通过一组配置文件来管理日志的保留和轮换。默认的配置文件是*/etc/logrotate.conf*，但软件包安装时可能会提供自己的logrotate配置并将其保存在*/etc/logrotate.d/*中。在法医检查过程中，检查日志文件如何以及是否进行了轮换和保留是非常有用的。logrotate软件包可以管理任何日志文件，而不仅仅是syslog生成的日志。
- en: 'Forensic examiners should be aware that syslog messages have some security
    issues that may affect the evidential value of the resulting logs. Thus, all logs
    should be analyzed with some degree of caution:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 法医检查员应该意识到，syslog消息存在一些安全问题，这些问题可能会影响结果日志的证据价值。因此，所有日志都应谨慎分析：
- en: Programs can generate messages with any facility and severity they want.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序可以根据需要生成任何设施和严重级别的消息。
- en: Syslog messages sent over a network are stateless, unencrypted, and based on
    UDP, which means they can be spoofed or modified in transit.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过网络发送的syslog消息是无状态的、不加密的，并且基于UDP，这意味着它们可能在传输过程中被伪造或篡改。
- en: Syslog does not detect or manage dropped packets. If too many messages are sent
    or the network is unstable, some messages may go missing, and logs can be incomplete.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Syslog不会检测或管理丢失的数据包。如果发送的消息过多或网络不稳定，某些消息可能会丢失，导致日志不完整。
- en: Text-based logfiles can be maliciously manipulated or deleted.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于文本的日志文件可能会被恶意篡改或删除。
- en: In the end, trusting logs and syslog messages involves assessing and accepting
    the risks of integrity and completeness.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，信任日志和syslog消息需要评估并接受完整性和准确性的风险。
- en: Some Linux distributions are starting to switch over to the systemd journal
    for logging and aren’t installing a syslog daemon. It is likely that locally installed
    syslog daemons on desktop Linux systems will decline in popularity, but in server
    environments, syslog will remain a de facto standard for network-based logging.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一些Linux发行版已经开始转向使用systemd日志系统进行日志记录，并且不再安装syslog守护进程。很可能，桌面Linux系统上本地安装的syslog守护进程将逐渐失去流行，但在服务器环境中，syslog将继续作为基于网络的日志记录的事实标准。
- en: '**Systemd Journal**'
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Systemd Journal**'
- en: The shortcomings of the aging syslog system have resulted in a number of security
    and availability enhancements. Many of these enhancements have been added to existing
    syslog daemons as non-standard features and never gained widespread use among
    Linux distributions. The systemd journal was developed from scratch as an alternative
    logging system with additional features missing from syslog.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 过时的 syslog 系统的不足导致了许多安全性和可用性方面的增强。这些增强功能中的许多已经作为非标准功能添加到现有的 syslog 守护进程中，但在
    Linux 发行版中并未得到广泛使用。systemd 日志是从零开始开发的，作为一种替代的日志系统，具备了 syslog 中缺失的额外功能。
- en: '***Systemd Journal Features and Components***'
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Systemd 日志功能和组件***'
- en: 'The design goals and decisions of the systemd journal were to add new features
    to those already found in traditional logging systems and integrate various components
    that had previously functioned as separate daemons or programs. Systemd journal
    features include:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: systemd 日志的设计目标和决策是为传统日志系统中已有的功能添加新特性，并集成先前作为单独守护进程或程序运行的各种组件。systemd 日志功能包括：
- en: Tight integration with systemd
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 systemd 紧密集成
- en: '`stderr` and `stdout` from daemons is captured and logged'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 捕获并记录守护进程的 `stderr` 和 `stdout`
- en: Log entries are compressed and stored in a database format
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志条目被压缩并以数据库格式存储
- en: Built-in integrity using forward secure sealing (FSS)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用前向安全封装（FSS）实现内建完整性
- en: Additional trusted metadata fields for each entry
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个条目的额外受信任元数据字段
- en: Logfile compression and rotation
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志文件压缩和轮换
- en: Log message rate limiting
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志消息速率限制
- en: With the introduction of FSS and trusted fields, the developers created a greater
    focus on log integrity and trustworthiness. From a digital forensics perspective,
    this is interesting and useful because it strengthens the reliability of the evidence.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 引入 FSS 和受信字段后，开发人员更加关注日志的完整性和可信度。从数字取证的角度来看，这一点既有趣又有用，因为它增强了证据的可靠性。
- en: 'The journal offers network transfer of messages to another log host (central
    logging infrastructure) in a similar way to traditional logging, but with a few
    enhancements:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 日志提供了将消息传输到另一个日志主机（中央日志基础设施）的网络功能，类似于传统日志系统，但有一些增强功能：
- en: TCP-based for stateful established sessions (solves dropped packet issue with
    UDP)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 TCP 的有状态已建立会话（解决了 UDP 的丢包问题）
- en: Encrypted transmission (HTTPS) for confidentiality and privacy
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于保密性和隐私的加密传输（HTTPS）
- en: Authenticated connections to prevent spoofing and unauthorized messages
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认证连接以防止欺骗和未经授权的消息
- en: Message queuing when `loghost` is unavailable (no lost messages)
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 `loghost` 不可用时的消息排队（无丢失消息）
- en: Signed data with FSS for message integrity
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 FSS 签名数据以确保消息的完整性
- en: Active or passive message delivery modes
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主动或被动消息传递模式
- en: These networking features allow a more secure logging infrastructure to be built,
    with a focus on integrity and completeness. A significant problem with syslog
    was the UDP-based stateless packet transmission. With the systemd journal, reliability
    and completeness of log transmission is addressed.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这些网络功能允许构建一个更安全的日志基础设施，重点关注完整性和完整性。syslog 的一个重大问题是基于 UDP 的无状态数据包传输。使用 systemd
    日志后，日志传输的可靠性和完整性得到了保障。
- en: If the journal networking features are used, check the */etc/systemd/ journal-upload.conf*
    file for the `"URL="` parameter containing the hostname of a central log host.
    This is a forensic artifact that may point to the existence of logs in a different
    location and may be important on systems for which logging is not persistent.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用了日志的网络功能，请检查 */etc/systemd/journal-upload.conf* 文件中的 `"URL="` 参数，该参数包含了中央日志主机的主机名。这是一个法医证据，可能指示日志存在于其他位置，并且对于日志不持久的系统来说，可能非常重要。
- en: '[Figure 5-2](ch05.xhtml#ch05fig02) shows the architectural component diagram
    of systemd journal networking.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-2](ch05.xhtml#ch05fig02) 显示了 systemd 日志网络的架构组件图。'
- en: '![Image](Images/ch05fig02.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch05fig02.jpg)'
- en: '*Figure 5-2: Systemd journal networking*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-2：Systemd 日志网络*'
- en: See the systemd-journal-remote(8), systemd-journal-gatewayd(8), and systemd-journal-upload(8)
    man pages for more information about the journal networking features. Although
    those features are innovative and greatly improve traditional logging, they are
    systemd specific and not compatible or well known outside the Linux community.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有关日志网络功能的更多信息，请参阅 systemd-journal-remote(8)、systemd-journal-gatewayd(8) 和 systemd-journal-upload(8)
    的手册页。尽管这些功能具有创新性，并大大改善了传统日志记录，但它们是特定于 systemd 的，且在 Linux 社区之外并不兼容或广为人知。
- en: '***Systemd Journal Configuration***'
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Systemd 日志配置***'
- en: Understanding the configuration of the systemd journal helps us assess the potential
    for finding forensic evidence on a system. The journal functions as a normal Linux
    daemon (see [Figure 5-3](ch05.xhtml#ch05fig03)) called systemd-journald and is
    well
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 理解 systemd 日志的配置有助于我们评估在系统上寻找法医证据的潜力。日志作为一个普通的 Linux 守护进程（见 [图 5-3](ch05.xhtml#ch05fig03)），名为
    systemd-journald，且表现得相当稳定。
- en: documented in the systemd-journald(8) man page. You can find the *enable* status
    of the journal daemon at boot time by examining the systemd unit files (*systemd-journald.service*).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在 systemd-journald(8) 手册页中有详细记录。你可以通过检查 systemd 单元文件（*systemd-journald.service*）来查看日志守护进程在启动时的
    *enable* 状态。
- en: '![Image](Images/ch05fig03.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch05fig03.jpg)'
- en: '*Figure 5-3: Systemd journal daemon*'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-3：Systemd 日志守护进程*'
- en: 'The systemd journal has several configuration parameters that define aspects
    of its operation (described in the journald.conf(5) man page). Common configuration
    file locations for the journal are as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: systemd 日志有多个配置参数，用于定义其操作的各个方面（详细描述见 journald.conf(5) 手册页）。日志的常见配置文件位置如下：
- en: '*/etc/systemd/journald.conf*'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/systemd/journald.conf*'
- en: '*/etc/systemd/journald.conf.d/*.conf*'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/systemd/journald.conf.d/*.conf*'
- en: '*/usr/lib/systemd/journald.conf.d/*.conf*'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/usr/lib/systemd/journald.conf.d/*.conf*'
- en: The configuration file specifies whether logs are volatile or persistent with
    the `"Storage="` parameter. Persistent logs, if configured, are stored in a binary
    format in */var/log/journal/*. If logs are configured to be volatile, they will
    be stored in */run/log/journal/* and exist only when the system is running; they
    are not available for postmortem forensic analysis. If `"ForwardToSyslog=` `yes"`
    is set, journal logs are sent to the traditional syslog system on the local machine
    and stored in local logfiles (*/var/log/*) or possibly forwarded to a central
    log host.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件通过 `"Storage="` 参数指定日志是易失性还是持久化的。如果配置为持久化，日志将以二进制格式存储在 */var/log/journal/*
    中。如果配置为易失性，它们将存储在 */run/log/journal/* 中，并且只在系统运行时存在；在系统关闭后，无法进行事后法医分析。如果设置了 `"ForwardToSyslog=`
    `yes"`，日志将被发送到本地机器的传统 syslog 系统，并存储在本地日志文件（*/var/log/*）中，或者可能会被转发到中央日志主机。
- en: On systems with a persistent journal, the */var/log/journal/* directory contains
    a subdirectory named after the machine-id (as found in */etc/machine-id*) that
    contains the local journal logfiles. The magic number identifying a journal file
    is the initial byte sequence 0x4C504B5348485248 or LPKSHHRH.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在具有持久化日志的系统中，*/var/log/journal/* 目录包含一个以机器ID命名的子目录（该ID在 */etc/machine-id* 中可以找到），该目录包含本地日志文件。用于标识日志文件的魔数是初始字节序列
    0x4C504B5348485248 或 LPKSHHRH。
- en: The journal files contain both system and user logs. System logs are generated
    by system services and the kernel. User logs are generated by user login sessions
    (shell or desktop) and various programs that a user executes. Users may read their
    own logs, but they are not permitted to modify or write to them directly.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 日志文件包含系统日志和用户日志。系统日志由系统服务和内核生成。用户日志由用户登录会话（shell 或桌面）和用户执行的各种程序生成。用户可以读取自己的日志，但不允许直接修改或写入这些日志。
- en: 'Here is an example of a system with a machine-id of `506578466b474f6e88ec`
    `fbd783475780` and the corresponding directory with journal logfiles:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个机器ID为 `506578466b474f6e88ec` `fbd783475780` 的系统示例，以及相应的包含日志文件的目录：
- en: '[PRE7]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Normal journal logs have a file extension of **.journal*. If the system crashed
    or had an unclean shutdown, or if the logs were corrupted, the filename will end
    in a tilde (**.journal~*). Filenames of logs that are in current use, or “online,”
    are *system.journal* and *user-UID.journal* (where UID is the numeric ID of a
    user). Logs that have been rotated to an “offline” or “archived” state have the
    original filename followed by *@* and a unique string. The unique string between
    the *@* and *.journal* is broken into three parts that describe the content of
    the logfile.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 正常的日志文件扩展名是 **.journal*。如果系统崩溃或发生了非正常关机，或者日志文件被损坏，文件名将以波浪号（**.journal~*）结尾。当前正在使用的日志文件，或者“在线”的日志文件，其文件名为
    *system.journal* 和 *user-UID.journal*（其中 UID 是用户的数字 ID）。已被归档或转存为“离线”的日志文件，其文件名在原始名称后会加上
    *@* 和一个唯一的字符串。这个 *@* 和 *.journal* 之间的唯一字符串被分为三部分，用来描述日志文件的内容。
- en: 'Let’s analyze the composition of a long journal filename, as shown in this
    example:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析一个长日志文件名的组成，如下例所示：
- en: '[PRE8]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The deconstructed parts are as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 解构后的部分如下：
- en: /var/log/journal/ The location (path) of persistent journal files
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: /var/log/journal/ 持久化日志文件的位置（路径）
- en: 506578466b474f6e88ecfbd783475780/ The machine-id directory
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 506578466b474f6e88ecfbd783475780/ 机器ID目录
- en: system@ Indicates a system logfile that has been archived
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: system@ 表示已归档的系统日志文件
- en: e29c14a0a5fc46929ec601deeabd2204 A sequence ID
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: e29c14a0a5fc46929ec601deeabd2204 序列号
- en: -000000000000189c The first sequence number in the file
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: -000000000000189c 文件中的第一个序列号
- en: -00059e37774baedd Hexadecimal timestamp of the first log entry
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: -00059e37774baedd 第一个日志条目的十六进制时间戳
- en: .journal Indicates a systemd journal logfile
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: .journal 表示一个 systemd 日志文件
- en: The hexadecimal timestamp refers to when the first entry was added to the journal.
    For the familiar epoch in seconds, convert this timestamp to decimal and then
    strip off the last six digits.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 十六进制时间戳表示第一个日志条目添加到日志时的时间。对于熟悉的秒级纪元，将此时间戳转换为十进制并去掉最后六位数字。
- en: If the system is receiving journal logs over the network from other hosts (by
    `systemd-journal-upload` or `systemd-journal-gatewayd`), a *remote/* directory
    may exist that contains logs for each remote host. These logs will have filenames
    like *remote-*HOSTNAME*.journal*.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统通过网络接收来自其他主机的日志（通过 `systemd-journal-upload` 或 `systemd-journal-gatewayd`），则可能存在一个
    *remote/* 目录，其中包含每个远程主机的日志。这些日志的文件名将类似于 *remote-*HOSTNAME*.journal*。
- en: The journal logs the systemd boot process and follows the starting and stopping
    of unit files until the system is shut down. Linux systems maintain a unique 128-bit
    boot-id that can be found (on a running system) in */proc/sys/kernel/random/boot_id*.
    The boot-id is randomly generated by the kernel at every boot, and it acts as
    a unique identifier for a particular duration of uptime (from boot to shutdown/reboot).
    The boot-id is recorded in the journal logs and used to distinguish time periods
    between boots (for example, `journalctl --list-boots`) and to show logs since
    the last boot (for example, `journalctl -b`). These journalctl options can also
    be applied to a file or directory for offline analysis. The boot-id may be of
    interest during a forensic examination if any malicious activity was known to
    have occurred during a specific boot period.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录了 systemd 启动过程，并跟踪单元文件的启动和停止，直到系统关闭。Linux 系统保持一个唯一的 128 位启动 ID，可以在运行中的系统中找到（路径：
    */proc/sys/kernel/random/boot_id*）。启动 ID 是内核在每次启动时随机生成的，它作为特定启动时段（从启动到关机/重启）的唯一标识符。启动
    ID 被记录在日志中，并用于区分启动之间的时间段（例如，`journalctl --list-boots`）以及显示自上次启动以来的日志（例如，`journalctl
    -b`）。这些 journalctl 选项也可以应用于文件或目录进行离线分析。如果在某个特定的启动期间发生了已知的恶意活动，启动 ID 在法医检查时可能会很有用。
- en: '***Analysis of Journal File Contents***'
  id: totrans-108
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***日志文件内容分析***'
- en: If commercial forensic tool support for journal files is unavailable, you can
    copy and analyze the journal files on a separate Linux analysis machine using
    the `journalctl` command. This command allows you to list the journal contents,
    search the journal, list individual boot periods, view additional log metadata
    (journald specific), view `stderr` and `stdout` from programs, export to other
    formats, and more.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有商业法医工具支持日志文件，你可以将日志文件复制到另一台 Linux 分析机上，并使用 `journalctl` 命令进行分析。这个命令允许你列出日志内容，搜索日志，列出单独的启动期，查看额外的日志元数据（特定于
    journald），查看程序的 `stderr` 和 `stdout`，导出到其他格式等。
- en: 'After copying the desired journal files or the entire journal directory to
    your analysis machine, you can use `journalctl` file and directory flags to specify
    the location of the journal files to be analyzed:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在将所需的日志文件或整个日志目录复制到分析机器后，你可以使用 `journalctl` 的文件和目录标志来指定要分析的日志文件位置：
- en: '[PRE9]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Specifying a file will operate only on that single file. Specifying a directory
    will operate on all the valid journal files in that directory.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 指定文件时仅对该单个文件进行操作。指定目录时会对该目录中的所有有效日志文件进行操作。
- en: 'Each journal file contains a header with metadata about itself, which you can
    view by using the `--header` flag of `journalctl`; for example:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 每个日志文件包含一个头部，里面有关于自身的元数据，可以通过使用 `journalctl` 的 `--header` 标志来查看；例如：
- en: '[PRE10]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The output provides a technical description of the journal file, the time- stamps
    of the period covered (head and tail), the number of logs (`Entry` `objects`),
    and other statistics. You can find more information about the journal file format
    here:^([3](footnotes.xhtml#ch05foot_03)) *[https://systemd.io/JOURNAL_FILE_FORMAT/](https://systemd.io/JOURNAL_FILE_FORMAT/)*.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 输出提供了日志文件的技术描述，覆盖时间段的时间戳（头部和尾部），日志条目数（`Entry` `objects`）以及其他统计信息。你可以在这里找到更多关于日志文件格式的信息：^([3](footnotes.xhtml#ch05foot_03))
    *[https://systemd.io/JOURNAL_FILE_FORMAT/](https://systemd.io/JOURNAL_FILE_FORMAT/)*。
- en: 'The following example is a basic listing of a specific journal file’s contents
    using the `journalctl` command:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例使用 `journalctl` 命令列出了特定日志文件的基本内容：
- en: '[PRE11]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In this example, system.journal is the name of the file being analyzed. The
    first line is informational, indicating the time period contained in the output.
    Some of the output is from the kernel, similar to the output from the dmesg command.
    Other lines are similar to syslog, starting with a timestamp, hostname, daemon
    name, and the process ID in square brackets, and ending with the log message.
    The journalctl command may also add other informational lines like -- Reboot --
    to indicate the end of a boot period (and the start of a new boot-id).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，system.journal 是正在分析的文件名。第一行是信息性内容，表示输出中包含的时间段。部分输出来自内核，类似于 dmesg 命令的输出。其他行类似于
    syslog，从时间戳、主机名、守护进程名称以及方括号中的进程 ID 开始，最后以日志消息结束。journalctl 命令也可能添加其他信息性行，如 --
    Reboot --，表示启动周期的结束（并开始新的启动 ID）。
- en: 'Each log entry has journal-specific metadata stored together with the log message.
    A full extraction of a journal entry can be done with a verbose output (`-o verbose`)
    parameter. The following is a verbose journal entry from the OpenSSH daemon:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 每条日志条目都有与日志消息一起存储的特定元数据。可以使用详细输出（`-o verbose`）参数对日志条目进行完整提取。以下是来自 OpenSSH 守护进程的详细日志条目：
- en: '[PRE12]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This output provides structured information with unique identifiers, systemd
    information, syslog `FACILITY` and `PRIORITY` (severity), the process that produced
    the log message, and more. The systemd.journal-fields(7) man page describes the
    fields of a journal log entry.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出提供了结构化的信息，包括唯一标识符、systemd 信息、syslog 的 `FACILITY` 和 `PRIORITY`（严重性）、生成日志消息的进程等。systemd.journal-fields(7)
    手册页面描述了日志条目的字段。
- en: 'Journal files are saved in a binary format that’s open and documented. The
    `journalctl` tool can be used to perform various examination tasks on journal
    files, but some forensic investigators may prefer to export the journal contents
    into another format for analysis. Two useful output formats are *export* and *json*.
    The export format is similar to the verbose format, with each entry separated
    by a blank line (this is technically a binary format, but it contains mostly readable
    text). The *json* output generates the journal entries in JSON for easy scripting
    or ingesting into other analysis tools. Here are two command line examples of
    creating *.json* and *.export* files with the full contents of a journal file:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 日志文件以二进制格式保存，该格式是公开和有文档记录的。`journalctl` 工具可用于对日志文件执行各种检查任务，但某些取证调查人员可能更倾向于将日志内容导出为其他格式进行分析。两种有用的输出格式是
    *export* 和 *json*。export 格式类似于详细格式，每个条目之间用空行分隔（这在技术上是二进制格式，但大部分是可读文本）。*json* 输出将日志条目生成为
    JSON 格式，方便脚本编写或导入其他分析工具。以下是创建 *.json* 和 *.export* 文件、包含完整日志文件内容的两个命令行示例：
- en: '[PRE13]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The new files created are *system.journal.json* and *system.journal.export*,
    which other (non-Linux) tools can easily read. Another output format is *.json-pretty*,
    which produces JSON in a more human-readable format.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的新文件为 *system.journal.json* 和 *system.journal.export*，其他（非 Linux）工具可以轻松读取这些文件。另一种输出格式是
    *.json-pretty*，它以更易读的方式生成 JSON 格式。
- en: 'Searching journal files is done by including match arguments in the form *FIELD*`=`*VALUE*,
    but the exact value you’re searching for needs to be specified. This type of search
    can be useful for extracting logs from a particular service. For example, to extract
    all logs from the `sshd.service` unit:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索日志文件是通过在 *FIELD*`=`*VALUE* 的形式中包含匹配参数来完成的，但需要指定您要搜索的确切值。这种搜索方式对于提取特定服务的日志非常有用。例如，要提取来自
    `sshd.service` 单元的所有日志：
- en: '[PRE14]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Regular expressions (regex) can be used with the --grep= parameter, but they
    can search only the message fields, not the journal metadata. The search syntax
    is not very flexible for forensic investigators, and it may be easier to export
    the journal to another format and use familiar tools like grep or other text search
    tools.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 正则表达式（regex）可以与 --grep= 参数一起使用，但它们只能搜索消息字段，而不能搜索日志元数据。对于取证调查人员来说，搜索语法并不十分灵活，可能更容易将日志导出为其他格式，然后使用像
    grep 或其他文本搜索工具这样的熟悉工具进行分析。
- en: 'It is worth mentioning that the systemd journal can log `stdout` and `sdterr`
    of daemons and other unit files. With traditional syslog, that information was
    typically lost because the daemon would detach from the controlling terminal when
    it started. Systemd preserves this output and saves it to the journal. You can
    list this output by specifying the `stdout` transport:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，systemd 日志可以记录守护进程和其他单元文件的 `stdout` 和 `stderr`。在传统的 syslog 中，这些信息通常会丢失，因为守护进程启动时会与控制终端分离。Systemd
    保留了这些输出并将其保存到日志中。您可以通过指定 `stdout` 传输来列出这些输出：
- en: '[PRE15]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Transports specify how the journal received the log entry. There are other transports
    like syslog, kernel, audit, and so on. These transports are documented in the
    systemd.journal-fields(7) man page.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 传输指定了日志条目是如何被日志接收的。还有其他传输方式，如 syslog、内核、审计等。这些传输方式在 systemd.journal-fields(7)
    手册页中有详细说明。
- en: 'If a journal file contains FSS information, the integrity can be checked using
    the `--verify` flag. In the following example, a journal file is checked, and
    `PASS` indicates that the file integrity is verified:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果日志文件包含 FSS 信息，可以使用`--verify`标志检查其完整性。在以下示例中，检查了一个日志文件，`PASS`表示文件完整性已验证：
- en: '[PRE16]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If a journal file has been tampered with, it will fail the verification:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果日志文件已被篡改，它将无法通过验证：
- en: '[PRE17]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In this example, the FSS integrity failed at byte offset 0x38fcc0 of the journal
    file, with a log entry that was maliciously modified. If a logfile has been tampered
    with in multiple places, the verification will fail at the first instance of tampering.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，FSS 完整性在日志文件的字节偏移量 0x38fcc0 处失败，日志条目被恶意修改。如果一个日志文件在多个地方被篡改，验证将在首次篡改处失败。
- en: 'When investigating incidents that happened during a known window of time, extracting
    logs from an explicit time frame is useful. The `journalctl` command can extract
    logs with a specified time range using two flags: `-S` (since) and `-U` (until).
    Any logs existing since the time of `-S` until (but not including) the time of
    `-U` are extracted.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在调查发生在已知时间窗口内的事件时，从明确的时间范围中提取日志是很有用的。`journalctl`命令可以使用两个标志：`-S`（自）和`-U`（直到）提取指定时间范围内的日志。所有自`-S`时间点开始到`-U`时间点（不包括该时间点）之前的日志都会被提取。
- en: 'The following two examples are from a Linux forensic analysis machine where
    journal files have been copied to an evidence directory for examination using
    the `journalctl` command:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 以下两个示例来自一台 Linux 取证分析机器，其中日志文件已被复制到证据目录以供使用`journalctl`命令进行检查：
- en: '[PRE18]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In the first example, the directory containing the journal files is specified
    and logs from November 1 and November 2 are extracted. The second example specifies
    a more exact time range and extracts logs from 8 AM to 9 AM on November 5\. See
    the journalctl(1) man page for other variations of the time and date string.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个示例中，指定了包含日志文件的目录，并提取了 11 月 1 日和 11 月 2 日的日志。第二个示例指定了一个更精确的时间范围，并提取了 11 月
    5 日上午 8 点到 9 点之间的日志。请参阅 journalctl(1) 手册页，了解其他时间和日期字符串的变体。
- en: The new features of systemd’s journal mechanism are very much aligned with forensic-readiness
    expectations. The systemd journal offers log completeness and integrity, which
    are fundamental concepts in digital forensics.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: systemd 日志机制的新特性与取证准备性的预期高度一致。systemd 日志提供了日志完整性和可靠性，这些都是数字取证中的基本概念。
- en: '**Other Application and Daemon Logs**'
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**其他应用程序和守护进程日志**'
- en: Programs are not required to use syslog or the systemd journal. A daemon or
    application may have a separate logging mechanism that completely ignores system-provided
    logging. Daemons or applications may also use syslog or the journal, but with
    non-standard facilities or severities and their own message formats.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 程序并不要求使用 syslog 或 systemd 日志。守护进程或应用程序可能有一个完全忽略系统提供的日志机制的独立日志系统。守护进程或应用程序也可能使用
    syslog 或日志，但使用非标准的设施或严重性以及它们自己的消息格式。
- en: '***Custom Logging to Syslog or Systemd Journal***'
  id: totrans-143
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***自定义日志记录到 Syslog 或 Systemd 日志***'
- en: Syslog provides a C library function for programs to generate syslog messages.
    Systemd provides an API for programs to submit log entries to the journal. Developers
    are free to use those instead of developing their own logging subsystems. However,
    the facilities, severities, and format of the message, are all decided by the
    developer. This freedom can lead to a variety of logging configurations among
    programs.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Syslog 提供了一个 C 库函数，供程序生成 syslog 消息。Systemd 提供了一个 API，供程序提交日志条目到日志中。开发人员可以自由使用这些，而不是开发自己的日志子系统。然而，消息的设施、严重性和格式都是由开发人员决定的。这种自由可能导致程序之间有各种各样的日志配置。
- en: 'In the following examples, each program uses a different syslog facility and
    severity for logging similar actions:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '在以下示例中，每个程序使用不同的 syslog 设施和严重性来记录类似的操作：  '
- en: '[PRE19]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: These logs describe failed logins from a mail server (`postfix`) ➊, secure shell
    (`sshd`) ➋, an imap server (`dovecot` using `pam`) ➌, and a SOCKS proxy (`danted`)
    ➍ .They all use different facilities (`mail`, `auth`, `authpriv`, `daemon`), and
    they all use different severities (`warning`, `info`, `notice`). In some cases,
    additional logs may contain more information about the same event at different
    facilities or severities. Forensic examiners should not assume all similar log
    events will use the same facility or severity, but rather should expect some variation.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '这些日志描述了来自邮件服务器（`postfix`）➊、安全外壳（`sshd`）➋、IMAP服务器（`dovecot` 使用 `pam`）➌ 和 SOCKS代理（`danted`）➍
    的登录失败情况。它们使用了不同的设施（`mail`、`auth`、`authpriv`、`daemon`），并且使用了不同的严重性（`warning`、`info`、`notice`）。在某些情况下，额外的日志可能包含关于同一事件在不同设施或严重性下的更多信息。法医检查员不应假设所有类似的日志事件都会使用相同的设施或严重性，而应预期会有一些变动。  '
- en: 'Daemons may choose to log to a custom or user-defined facility. This is usually
    defined in the daemon’s configuration or from compiled-in defaults. For example:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '守护进程可以选择将日志记录到自定义或用户定义的设施中。这通常在守护进程的配置中定义，或者通过编译的默认值来设置。例如：  '
- en: '[PRE20]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Here a `pppd` daemon is using `local2` as the facility, the `tcsd` daemon that
    manages the TPM uses `local5`, and an Apache web server (`apache2`) is configured
    to use `local7`. Daemons can log to whatever facility they want, and system administrators
    may choose to configure logging to a desired facility.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '在这个例子中，`pppd` 守护进程使用 `local2` 作为设施，管理 TPM 的 `tcsd` 守护进程使用 `local5`，而 Apache
    网络服务器（`apache2`）配置为使用 `local7`。守护进程可以选择任何它们想要的设施，系统管理员可以选择将日志记录配置到所需的设施。  '
- en: 'When an investigation is ongoing or an attack is underway, additional logging
    may be needed (possibly only temporarily). If there are heightened risks involving
    potential suspects or victims, logging can be selectively increased to support
    the collection of digital forensic evidence. For example, consider these potential
    entities for which selective increased logging could be used:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '当调查进行中或攻击正在进行时，可能需要额外的日志记录（可能是暂时性的）。如果涉及潜在嫌疑人或受害者的风险增加，可以选择性地增加日志记录，以支持数字法医证据的收集。例如，考虑以下可以使用选择性增强日志记录的潜在实体：  '
- en: A particular user or group
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个特定的用户或用户组
- en: A geographical region or specific location
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '一个地理区域或特定位置  '
- en: A particular server or group of servers
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '一个特定的服务器或服务器组  '
- en: An IP address or range of IPs
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '一个 IP 地址或 IP 范围  '
- en: Specific software components running on a system (daemons)
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '系统上运行的特定软件组件（守护进程）  '
- en: 'Most daemons provide configuration options to increase the verbosity of logging.
    Some daemons offer very granular possibilities of selective logging. For example,
    Postfix configuration directives allow increased logging for a specific list of
    IP addresses or domain names:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '大多数守护进程提供配置选项来增加日志记录的详细程度。有些守护进程提供非常细致的选择性日志记录功能。例如，Postfix 配置指令允许为特定的 IP 地址或域名列表增加日志记录：  '
- en: '[PRE21]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: In this example, a single IP address is selected for increased logging, using
    Postfix’s internal debug levels (3 instead of the default 2). The configuration
    documentation for each daemon will describe possibilities for verbose, debug,
    or other selective logging adjustments.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '在此示例中，选择了单个 IP 地址进行增强日志记录，使用 Postfix 的内部调试级别（使用级别 3 而不是默认的 2）。每个守护进程的配置文档将描述详细、调试或其他选择性日志记录调整的可能性。  '
- en: As described in the previous section, the `stdout` and `stderr` of a daemon
    started with systemd will be captured and logged to the journal, which is also
    useful from a forensic readiness perspective. If a daemon allows for verbose or
    debugging output to the console, it can be temporarily enabled for the duration
    of an incident or investigation.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '如前所述，通过 systemd 启动的守护进程的 `stdout` 和 `stderr` 将被捕获并记录到日志中，这从法医准备的角度也非常有用。如果守护进程允许向控制台输出详细信息或调试信息，则可以在事件或调查期间临时启用。  '
- en: '***Independent Server Application Logs***'
  id: totrans-161
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***独立服务器应用程序日志***  '
- en: Often applications will manage their own logfiles without the use of local logging
    systems like syslog or the systemd journal. In those situations, logs are typically
    stored in a separate logfile or log directory, usually in the */var/ log/* directory.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '应用程序通常会管理自己的日志文件，而不使用像 syslog 或 systemd 日志这样的本地日志系统。在这些情况下，日志通常会存储在单独的日志文件或日志目录中，通常位于
    */var/log/* 目录下。  '
- en: 'Larger applications may be complex enough to warrant multiple separate logfiles
    for different subsystems and components. This may include separate logfiles for
    the following:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 较大的应用程序可能足够复杂，需要为不同的子系统和组件创建多个独立的日志文件。这可能包括以下内容的单独日志文件：
- en: Application technical errors
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序技术错误
- en: User authentication (logins, logouts, and so on)
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户身份验证（登录、注销等）
- en: Application user transactions (web access, sessions, purchases, and so on)
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序用户交易（如 Web 访问、会话、购买等）
- en: Security violations and alerts
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全违规和警报
- en: Rotated or archived logs
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轮换或归档日志
- en: 'The Apache web server is a good example. It typically has a separate directory
    like */var/log/apache2/* or */var/log/httpd/*. The contents of the directory may
    include logs for the following:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Apache 网络服务器就是一个很好的例子。它通常会有一个独立的目录，比如 */var/log/apache2/* 或 */var/log/httpd/*。该目录的内容可能包括以下日志：
- en: General web access (*access.log*)
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般 Web 访问 (*access.log*)
- en: Web access for individual virtual hosts
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个虚拟主机的 Web 访问
- en: Web access for individual web applications
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个 Web 应用程序的 Web 访问
- en: Daemon errors (*error.log*)
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 守护进程错误 (*error.log*)
- en: SSL error logging
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSL 错误日志
- en: Applications will typically specify the log location, content, and verbosity
    in their configuration files. A forensic examiner should check for those log locations
    if it is not otherwise obvious.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序通常会在其配置文件中指定日志位置、内容和详细程度。如果日志位置不明显，取证检查员应检查这些日志位置。
- en: Some application installations may be fully contained in a specific directory
    on the filesystem, and the application may use this directory to store logs together
    with other application files. This setup is typical of web applications that may
    be self-contained within a directory. For example, the
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 一些应用程序的安装可能完全包含在文件系统的特定目录中，并且应用程序可能使用该目录来存储日志以及其他应用程序文件。这种设置通常出现在可能自包含于一个目录中的
    Web 应用程序中。例如：
- en: 'Nextcloud hosting platform and Roundcube webmail application have such application
    logs:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: Nextcloud 托管平台和 Roundcube Webmail 应用程序具有以下应用程序日志：
- en: '*nextcloud/data/nextcloud.log*'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*nextcloud/data/nextcloud.log*'
- en: '*nextcloud/data/updater.log*'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*nextcloud/data/updater.log*'
- en: '*nextcloud/data/audit.log*'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*nextcloud/data/audit.log*'
- en: '*roundcube/logs/sendmail.log*'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*roundcube/logs/sendmail.log*'
- en: '*roundcube/logs/errors.log*'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*roundcube/logs/errors.log*'
- en: Keep in mind that these logs are generated in addition to the web server access
    and error logs (apache, nginx, and so on). With web applications, a forensic examiner
    may find logs in multiple places related to a particular application, event, or
    incident.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这些日志是除了 Web 服务器访问和错误日志（如 Apache、Nginx 等）之外生成的。对于 Web 应用程序，取证检查员可能会在多个地方找到与特定应用程序、事件或事故相关的日志。
- en: Some applications may store logs in databases instead of text files. These are
    either full database services like MySQL or Postgres, or local database files
    like SQLite.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 一些应用程序可能将日志存储在数据库中，而不是文本文件中。这些数据库可以是完整的数据库服务，如 MySQL 或 Postgres，或者是像 SQLite
    这样的本地数据库文件。
- en: 'Another interesting log related to programs installed on a system is the *alternatives*
    log. The alternatives system was originally developed for Debian to allow installation
    of several concurrent versions of similar programs. Multiple distributions have
    adopted the alternatives mechanism. The `update-alternatives` script manages the
    symbolic links to generic or alternative application names located in the */etc/alternatives/*
    directory. For example, several symlinks are created to provide a `vi` program
    alternative:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 与系统上安装的程序相关的另一个有趣的日志是 *alternatives* 日志。alternatives 系统最初为 Debian 开发，用于允许安装多个并行版本的相似程序。多个发行版已经采用了
    alternatives 机制。`update-alternatives` 脚本管理位于 */etc/alternatives/* 目录中的指向通用或替代应用程序名称的符号链接。例如，创建多个符号链接以提供
    `vi` 程序的替代：
- en: '[PRE22]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The timestamp of the */etc/alternatives/* symlink indicates when the last change
    was made. This information is also recorded in the *alternatives.log* file:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '*/etc/alternatives/* 符号链接的时间戳表示上次更改的时间。此信息也记录在 *alternatives.log* 文件中：'
- en: '[PRE23]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This is a system-wide method of assigning default applications (analogous to
    XDG defaults for desktop users) and helps build a picture of which programs were
    used on a system. See the update-alternatives(1) man page^([4](footnotes.xhtml#ch05foot_04))
    for more information.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个系统范围的方法，用于分配默认应用程序（类似于桌面用户的 XDG 默认设置），并有助于构建系统中使用了哪些程序的整体图景。有关更多信息，请参阅 `update-alternatives(1)`
    手册页^([4](footnotes.xhtml#ch05foot_04))。
- en: During a forensic examination, pay close attention to error logs. Error messages
    reveal unusual and suspicious activity, and help to reconstruct past events. When
    investigating intrusions, error messages appearing before an incident can indicate
    pre-attack reconnaissance or prior failed attempts.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行法医检查时，要特别注意错误日志。错误消息揭示了异常和可疑活动，有助于重建过去的事件。在调查入侵时，事件发生之前出现的错误消息可能表明攻击前的侦察或之前的失败尝试。
- en: '***Independent User Application Logs***'
  id: totrans-191
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***独立用户应用程序日志***'
- en: When a user logs in to a Linux system, standard logs are created by the various
    components of the system (login, pam, display manager, and so on). After a user
    has logged in to their desktop or shell, further logging may also be saved in
    locations specific to that user.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户登录到Linux系统时，系统的各个组件（如登录、pam、显示管理器等）会创建标准日志。在用户登录到他们的桌面或shell后，进一步的日志也可能会保存在特定于该用户的位置。
- en: 'The systemd journal saves persistent logs specific to a user’s login session
    in */var/log/journal/*MACHINE-ID*/*user-UID*.journal*, where *UID* is a user’s
    numeric ID. This log (and the rotated instances) contains traces of a person’s
    login session activity, which may include information like the following:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: systemd日志将特定于用户登录会话的持久日志保存在*/var/log/journal/*MACHINE-ID*/*user-UID*.journal*中，其中*UID*是用户的数字ID。这个日志（以及旋转的实例）包含了一个人登录会话的活动痕迹，其中可能包括以下信息：
- en: Systemd targets reached and user services started
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 达到的systemd目标和启动的用户服务
- en: Dbus-daemon activated services and other activity
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dbus-daemon激活的服务和其他活动
- en: Agents like gnupg, polkit, and so on
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 像gnupg、polkit等代理
- en: Messages from subsystems like pulseaudio and Bluetooth
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自子系统的消息，比如pulseaudio和蓝牙
- en: Logs from desktop environments like GNOME
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自桌面环境的日志，如GNOME
- en: Privilege escalation like `sudo` or `pkexec`
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 权限提升，如`sudo`或`pkexec`
- en: The format of user journal files is the same as system journal files, and you
    can use the `journalctl` tool to analyze them (described earlier in the chapter).
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 用户日志文件的格式与系统日志文件相同，你可以使用`journalctl`工具来分析它们（在本章前面有描述）。
- en: Other logs may be saved by programs as they are run by a user. The location
    of such program logs must be in a directory writable by the user, which generally
    means they are somewhere in the user’s home directory. The most common places
    for persistent logs are the XDG base directory standards such as *~/.local/share/*APP*/**
    or *~/.config/*APP*/** (where *APP* is the application generating user logs).
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 其他日志可能会在程序由用户运行时被保存。这些程序日志的存储位置必须位于用户可写的目录中，这通常意味着它们会存储在用户的主目录下。持久日志最常见的存放位置是符合XDG基础目录标准的地方，如*~/.local/share/*APP*/**或*~/.config/*APP*/**（其中*APP*是生成用户日志的应用程序）。
- en: 'The following example shows a Jitsi video chat application log stored in *~/.config/*,
    which contains error messages:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了一个存储在*~/.config/*中的Jitsi视频聊天应用程序日志，其中包含错误消息：
- en: '[PRE24]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The benign warning messages shown here were generated whenever the Jitsi application
    started. For a forensic investigator, the content of these messages may not be
    interesting, but the timestamps indicate every time the video chat program was
    started. Trivial errors like this are potentially interesting for reconstructing
    past events.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示的良性警告消息是在每次Jitsi应用程序启动时生成的。对于法医调查员来说，这些消息的内容可能并不有趣，但时间戳表明了每次视频聊天程序启动的时间。像这样的琐碎错误在重建过去的事件时可能是有价值的。
- en: 'Some programs ignore the XDG standard and create hidden files and directories
    at the root of the user’s home directory. For example, the Zoom video chat application
    creates a *~/.zoom/log/* directory with a logfile:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 一些程序忽略XDG标准，在用户主目录的根目录下创建隐藏的文件和目录。例如，Zoom视频聊天应用程序会创建一个*~/.zoom/log/*目录，其中包含一个日志文件：
- en: '[PRE25]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: This Zoom log contains a wealth of information, including traces of past conference
    IDs that were used.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 这个Zoom日志包含了大量信息，包括使用过的历史会议ID。
- en: Temporary or non-persistent logs may also be found in *~/.local/cache/* APP*/**,
    as this cache directory is intended for data that can be deleted.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 临时或非持久性日志也可能位于*~/.local/cache/* APP*/**中，因为这个缓存目录是为可以删除的数据而设计的。
- en: 'In this example, the `libvirt` system for managing the user’s KVM/QEMU virtual
    machines has a log directory with a file for each machine:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，`libvirt`系统用于管理用户的KVM/QEMU虚拟机，并为每台机器创建一个日志目录，其中包含每台机器的日志文件：
- en: '[PRE26]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Performing a search for **.log* files or directories called “log” across a user’s
    home directory will produce an initial list of files to analyze. Linux applications
    can produce a significant amount of logs and persistent data that’s saved whenever
    the user runs various programs.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在用户主目录中搜索 **.log* 文件或名为“log”的目录将生成一个初步的文件列表以供分析。Linux 应用程序可以生成大量日志和持久数据，这些数据会在用户运行各种程序时保存。
- en: The analysis of individual application logs is outside the scope of this book,
    but it is worth mentioning that many popular apps store significant amounts of
    information about past use in a user’s home directory. This information often
    contains a history of files opened, remote host connections, communication with
    other people, timestamps of usage, devices accessed, and more.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 单个应用程序日志的分析超出了本书的范围，但值得一提的是，许多流行的应用程序会在用户的主目录中存储大量关于过去使用的信息。这些信息通常包含已打开的文件历史、远程主机连接、与其他人的通信、使用时间戳、访问的设备等。
- en: '***Plymouth Splash Startup Logs***'
  id: totrans-213
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Plymouth 启动画面日志***'
- en: During startup, most desktop distros use the Plymouth system to produce a graphical
    splash screen while the system is booting. The ESC key can be pressed while waiting
    to switch to console output. Non-graphical servers can also use Plymouth to provide
    visible output while a system is booting. The output provides color status indicators
    with green `[ OK ]` or red `[FAILED]` messages for each component.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，大多数桌面发行版使用 Plymouth 系统在系统启动时显示图形化的启动画面。按下 ESC 键可以切换到控制台输出。非图形化服务器也可以使用
    Plymouth 在系统启动时提供可见的输出。输出会为每个组件提供带有绿色 `[ OK ]` 或红色 `[FAILED]` 消息的颜色状态指示器。
- en: 'This Plymouth console output is typically saved to the */var/log/boot.log*
    file; for example:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 Plymouth 控制台输出通常保存在 */var/log/boot.log* 文件中；例如：
- en: '[PRE27]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: This file contains escape codes needed to produce the color indicators. It is
    safe to view, even if your analysis tool warns that it is a binary file.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件包含了生成颜色指示器所需的转义代码。即使你的分析工具警告它是一个二进制文件，它也是安全查看的。
- en: 'Failed components during boot will also appear in the boot log:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 启动过程中失败的组件也会出现在启动日志中：
- en: '[PRE28]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Rotated versions of the boot log may also exist in the */var/log/* directory.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 启动日志的轮换版本也可能存在于 */var/log/* 目录中。
- en: This boot log can be interesting to analyze in a forensic investigation. It
    shows the sequence of events during previous boots and may provide useful error
    messages. For example, the preceding error message indicates that the Linux firewall
    rules (`nftables`) failed to start. If this were an investigation of a system
    intrusion, that could be a critical piece of information.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 这个启动日志在取证调查中可能很有趣。它展示了上次启动期间事件的顺序，并可能提供有用的错误信息。例如，前面的错误信息表明 Linux 防火墙规则（`nftables`）未能启动。如果这是一次系统入侵调查，这可能是一个关键的线索。
- en: '**Kernel and Audit Logs**'
  id: totrans-222
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**内核和审计日志**'
- en: The logging described so far has been generated by userspace programs, daemons,
    and applications. The Linux kernel also generates log information from kernel
    space, which can be useful in a forensic investigation. This section explains
    the purpose of kernel-generated messages, where they are located, and how to analyze
    them.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 迄今为止描述的日志是由用户空间程序、守护进程和应用程序生成的。Linux 内核也会从内核空间生成日志信息，这些信息在取证调查中可能非常有用。本节将解释内核生成的消息的目的、它们的位置以及如何分析它们。
- en: The Linux audit system is composed of many userspace tools and daemons to configure
    auditing, but the auditing and logging activity is performed from within the running
    kernel. This is the reason for including it here together with the kernel logging
    mechanism. Firewall logs are also produced by the kernel and would fit nicely
    in this section, but that topic is covered in [Chapter 8](ch08.xhtml) on the forensic
    analysis of Linux networking.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 审计系统由许多用户空间工具和守护进程组成，用于配置审计，但审计和日志记录活动是在运行中的内核中执行的。这就是将其与内核日志机制一起包含在此的原因。防火墙日志也是由内核生成的，并且会很好地适应这一部分，但该主题在[第
    8 章](ch08.xhtml)关于 Linux 网络取证分析中有所覆盖。
- en: '***The Kernel Ring Buffer***'
  id: totrans-225
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***内核环形缓冲区***'
- en: The Linux kernel has a cyclic buffer that contains messages generated by the
    kernel and kernel modules. This buffer is a fixed size, and once it’s full, it
    stays full and starts overwriting the oldest entries with any new entries, which
    means kernel logs are continuously lost as new messages are written. Userspace
    daemons are needed to capture and process events as they are produced. The kernel
    provides */dev/kmsg* and */proc/kmsg* for daemons like systemd-journald and rsyslogd
    to read new kernel messages as they are generated. These messages are then saved
    or forwarded depending on the log daemon’s configuration.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核有一个循环缓冲区，其中包含由内核和内核模块生成的消息。这个缓冲区是固定大小的，一旦填满，它将保持满并开始用任何新的条目覆盖最旧的条目，这意味着内核日志会随着新消息的写入而不断丢失。用户空间的守护进程需要捕获并处理生成的事件。内核为系统守护进程如systemd-journald和rsyslogd提供了*/dev/kmsg*和*/proc/kmsg*，使它们可以读取新生成的内核消息。这些消息然后根据日志守护进程的配置被保存或转发。
- en: The `dmesg` command is used on a running system to display the current contents
    of the ring buffer, but that isn’t useful in a postmortem forensic examination.
    The ring buffer exists only in memory, but we can find traces of it in the logs
    written to the filesystem. During boot, the kernel begins saving messages to the
    ring buffer before any logging daemons are started. Once these daemons (systemd-journald,
    rsyslogd, and so on) start, they can read all the current kernel logs and begin
    to monitor for new ones.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '`dmesg`命令用于在运行中的系统上显示当前的环形缓冲区内容，但在死后取证检查中没有用处。环形缓冲区仅存在于内存中，但我们可以在写入到文件系统的日志中找到它的痕迹。在启动过程中，内核在任何日志守护进程启动之前开始将消息保存到环形缓冲区。一旦这些守护进程（如systemd-journald、rsyslogd等）启动，它们就可以读取所有当前的内核日志并开始监控新的日志。'
- en: 'It is common for syslog daemons to log kernel events to the */var/log/ kern.log*
    file. Rotated versions of this log may include *kern.log.1*, *kern.log.2.gz*,
    and so on. The format is similar to other syslog files. For example, the saved
    kernel logs from a compressed rotated log from rsyslogd on a Raspberry Pi look
    like this:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，syslog守护进程会将内核事件记录到*/var/log/kern.log*文件中。该日志的旋转版本可能包括*kern.log.1*、*kern.log.2.gz*等。格式与其他syslog文件类似。例如，从Raspberry
    Pi的rsyslogd压缩旋转日志中保存的内核日志如下所示：
- en: '[PRE29]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The rsyslogd daemon has a module called `imklog` that manages the logging of
    kernel events and is typically configured in the */etc/rsyslog.conf* file.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: rsyslogd守护进程有一个名为`imklog`的模块，负责管理内核事件的日志记录，通常配置在*/etc/rsyslog.conf*文件中。
- en: 'Systemd stores kernel logs in the journal with everything else. To view the
    kernel logs from a journal file, add the -k flag, as follows:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: Systemd将内核日志与其他内容一起存储在日志中。要查看来自日志文件的内核日志，可以添加-k标志，如下所示：
- en: '[PRE30]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The */etc/systemd/journald.conf* has a parameter (`ReadKMsg=`) that enables
    processing of kernel messages from */dev/kmsg* (which is the default).
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '*/etc/systemd/journald.conf*中有一个参数（`ReadKMsg=`），它启用从*/dev/kmsg*处理内核消息（这是默认设置）。'
- en: 'For a forensic examiner, kernel messages are important to help reconstruct
    the hardware components of a system at boot time and during system operation (until
    shutdown). During this period (identified by the boot-id), a record of attached,
    detached, and modified hardware devices (including manufacturer details) can be
    seen. In addition, information about various kernel subsystems such as networking,
    filesystems, virtual devices, and more can be found. Some examples of information
    that you can find in the kernel logs include:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 对于取证检查员来说，内核消息非常重要，它们有助于重建系统在启动时和系统运行期间（直到关机）硬件组件的状态。在此期间（由启动ID标识），可以看到已连接、已断开和已修改的硬件设备（包括制造商详情）的记录。此外，还可以找到有关各种内核子系统的信息，如网络、文件系统、虚拟设备等。你可以在内核日志中找到的一些信息示例如下：
- en: CPU features and microcode
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU特性和微代码
- en: Kernel version and kernel command line
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内核版本和内核命令行
- en: Physical RAM and memory maps
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物理内存和内存映射
- en: BIOS and mainboard details
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BIOS和主板详细信息
- en: ACPI information
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ACPI信息
- en: Secure boot and TPM
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全启动和TPM
- en: PCI bus and devices
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PCI总线和设备
- en: USB hubs and devices
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB集线器和设备
- en: Ethernet interfaces and network protocols
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以太网接口和网络协议
- en: Storage devices (SATA, NVMe, and so on)
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储设备（SATA、NVMe等）
- en: Firewall logging (blocked or accepted packets)
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防火墙日志（已阻止或已接受的包）
- en: Audit logs
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审计日志
- en: Errors and security alerts
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误和安全警报
- en: Let’s look at some examples of kernel messages that are interesting in a forensic
    investigation or that may raise questions regarding the existence of the message.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一些在取证调查中有趣的内核消息示例，或者可能引发有关消息存在的问题。
- en: 'In this example, information about a particular mainboard is provided:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，提供了关于特定主板的信息：
- en: '[PRE31]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Here, we can determine the mainboard is an ASUS Republic of Gamers model, and
    the current firmware (BIOS) version is shown. The mainboard model may provide
    some indication of system use (gamer rig, server, office PC, and so on). The firmware
    version may be of interest when examining security relevant vulnerabilities.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以确定主板是华硕的Republic of Gamers型号，当前的固件（BIOS）版本也已显示。主板型号可能提供一些系统用途的提示（如游戏主机、服务器、办公电脑等）。固件版本可能在检查与安全相关的漏洞时有所帮助。
- en: 'Newly attached hardware will generate kernel logs like the following:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 新连接的硬件将生成类似以下的内核日志：
- en: '[PRE32]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Here, an external speaker was plugged in to the system. This log information
    associates a specific piece of hardware with a machine at a specific point in
    time, and indicates that a person was in physical proximity to plug in the USB
    cable.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，外部扬声器被插入系统。这条日志信息将一件特定硬件与机器在特定时间点关联起来，并表明一个人曾在物理上靠近以插入USB线缆。
- en: 'The following is an example kernel message about a network interface’s mode:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是关于网络接口模式的示例内核消息：
- en: '[PRE33]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: A network interface in *promiscuous mode* indicates that a packet sniffer is
    being used to capture traffic on a network subnet. An interface may enter promiscuous
    mode when a network administrator is troubleshooting problems or if a machine
    has been compromised and is sniffing for passwords or other information.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 处于 *混杂模式* 的网络接口表示正在使用数据包嗅探器捕获网络子网上的流量。当网络管理员进行故障排除，或计算机已被入侵并正在嗅探密码或其他信息时，接口可能会进入混杂模式。
- en: 'A kernel message about a network interface’s online/offline status may look
    like this:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 关于网络接口在线/离线状态的内核消息可能如下所示：
- en: '[PRE34]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Here, the kernel logs indicate that a network interface came online for nearly
    50 minutes before going offline. If this were an intrusion or data theft investigation,
    observing an interface suddenly appearing could indicate an unused network port
    was involved. And if an unused physical Ethernet port was involved, it could mean
    that there was physical access to the server (which then means that you should
    check CCTV footage or server room access logs).
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，内核日志表明某个网络接口上线了近50分钟后离线。如果这是一起入侵或数据窃取调查，突然出现一个接口可能表示一个未使用的网络端口被涉及。如果涉及的是一个未使用的物理以太网端口，那可能意味着服务器有物理访问（这意味着你应该检查CCTV录像或服务器房间的访问日志）。
- en: When analyzing the kernel logs, try to separate the boot logs from the operational
    logs. During boot, there will be hundreds of log lines in a short period that
    are all associated with the boot process. The kernel logs generated after booting
    is finished will indicate changes during the operational state of the machine
    until shutdown.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在分析内核日志时，尝试将引导日志与操作日志分开。在启动过程中，会在短时间内生成数百行与启动过程相关的日志。启动完成后生成的内核日志将指示机器在操作状态下的变化，直到关机为止。
- en: You can temporarily increase the verbosity of kernel logs during an ongoing
    investigation or attack to generate additional information. The kernel accepts
    parameters to specify increased (or reduced) logging in several areas. See *[https://github.com/torvalds/linux/blob/master/Documentation/admin-guide/kernel-parameters.txt](https://github.com/torvalds/linux/blob/master/Documentation/admin-guide/kernel-parameters.txt)*
    for more information about the kernel parameters (search for “log”). These parameters
    can be added to GRUB during system startup (see [Chapter 6](ch06.xhtml) for more
    information).
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行调查或攻击时，你可以临时增加内核日志的详细程度，以生成更多信息。内核接受参数来指定在多个区域中增加（或减少）日志记录。有关内核参数的更多信息，请参阅
    *[https://github.com/torvalds/linux/blob/master/Documentation/admin-guide/kernel-parameters.txt](https://github.com/torvalds/linux/blob/master/Documentation/admin-guide/kernel-parameters.txt)*（搜索“log”）。这些参数可以在系统启动时添加到GRUB中（更多信息请参见[第6章](ch06.xhtml)）。
- en: 'Individual kernel modules may also have verbose flags to increase logging.
    Use modinfo with the kernel module name to find possible debug options. Here is
    an example:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 个别内核模块也可能有详细标志以增加日志记录。使用 `modinfo` 命令加上内核模块名称来查找可能的调试选项。以下是一个示例：
- en: '[PRE35]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: In this example, Ethernet module e1000e has a `debug` option that can be set.
    The options for individual modules can be specified by placing a **.conf* file
    in the */etc/modprobe.d/* directory. See the modprobe.d(5) man page for more information.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，Ethernet模块e1000e有一个可以设置的 `debug` 选项。可以通过将 **.conf** 文件放入 */etc/modprobe.d/*
    目录中来指定单个模块的选项。有关更多信息，请参阅modprobe.d(5)手册页。
- en: '***The Linux Auditing System***'
  id: totrans-266
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Linux审计系统***'
- en: 'The Linux Auditing System is described in the README file of the source code:
    “The Linux Audit subsystem provides a secure logging framework that is used to
    capture and record security relevant events.” Linux auditing is a kernel feature
    that generates an audit trail based on a set of rules. It has similarities to
    other logging mechanisms, but it is more flexible, granular, and able to log file
    access and system calls. The `auditctl` program loads rules into the kernel, and
    the `auditd` daemon writes the audit records to disk. See the auditctl(8) and
    auditd(8) man pages for more information. [Figure 5-4](ch05.xhtml#ch05fig04) shows
    the interaction between the various components.'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: Linux审计系统在源代码的README文件中有描述：“Linux审计子系统提供了一个安全的日志框架，用于捕获和记录与安全相关的事件。” Linux审计是一个内核特性，根据一组规则生成审计记录。它与其他日志机制有相似之处，但它更加灵活、细粒度，且能够记录文件访问和系统调用。`auditctl`程序将规则加载到内核中，`auditd`守护进程将审计记录写入磁盘。有关更多信息，请参阅auditctl(8)和auditd(8)的手册页。[图5-4](ch05.xhtml#ch05fig04)展示了各个组件之间的交互。
- en: '![Image](Images/ch05fig04.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch05fig04.jpg)'
- en: '*Figure 5-4: Linux Auditing System*'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-4：Linux审计系统*'
- en: 'There are three kinds of audit rules:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 审计规则有三种类型：
- en: '**Control rules** Overall control of the audit system'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '**控制规则** 审计系统的整体控制'
- en: '**File or “watch” rules** Audit access to files and directories'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件或“监视”规则** 审计文件和目录的访问'
- en: '**Syscall** Audit system calls'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '**系统调用** 审计系统调用'
- en: Audit rules are loaded into the kernel at boot time or by a system administrator
    using the `auditctl` tool on a running system.^([5](footnotes.xhtml#ch05foot_05))
    The audit rules are located in the */etc/audit/audit.rules* file. See the audit.rules(7)
    man page for more information about audit rules.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 审计规则在启动时加载到内核中，或者由系统管理员使用`auditctl`工具在运行中的系统上加载。^([5](footnotes.xhtml#ch05foot_05))审计规则位于*/etc/audit/audit.rules*文件中。有关审计规则的更多信息，请参阅audit.rules(7)手册页。
- en: A collection of separate rule files located in */etc/audit/rules.d/*.rules*
    can be merged with the */etc/audit/audit.rules* file using the *augenrules* file.
    The audit rules file is simply a list of arguments that would be provided to `auditctl`
    commands.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 位于*/etc/audit/rules.d/*.rules*的多个单独的规则文件可以与*/etc/audit/audit.rules*文件合并，使用*augenrules*文件。审计规则文件只是一个命令行参数列表，这些参数将被提供给`auditctl`命令。
- en: 'Here are several examples of audit rule lines as seen in a rule file:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些在规则文件中看到的审计规则行示例：
- en: '[PRE36]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The first rule deletes all current rules, effectively creating a new rule set.
    The second rule watches all the files in the */etc/ssl/private/* directory (recursively).
    If any user or process reads, writes, or changes the attributes on any files (like
    SSL private keys), an audit record will be generated. The third rule monitors
    a specific user (UID 1001 specified with `auid=`) for all files opened. Presumably
    this user is at heightened risk of attack or under suspicion.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个规则删除所有当前规则，从而有效地创建一个新的规则集。第二个规则监视*/etc/ssl/private/*目录中的所有文件（递归）。如果任何用户或进程读取、写入或更改任何文件的属性（如SSL私钥），则会生成一个审计记录。第三个规则监视特定用户（通过`auid=`指定的UID
    1001）打开的所有文件。假设该用户面临更高的攻击风险或被怀疑有不当行为。
- en: The default location of the audit log is */var/log/audit/audit.log* where `auditd`
    writes new audit records. This is a plaintext file with *FIELD = VALUE* pairs
    separated by spaces. The current list of field names can be found at *[https://github.com/linux-audit/audit-documentation/blob/master/specs/fields/field-dictionary.csv](https://github.com/linux-audit/audit-documentation/blob/master/specs/fields/field-dictionary.csv)*.
    This file can be examined in its raw format, but the `ausearch` and `aureport`
    tools provide normalization, post-processing, and more readable output.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 审计日志的默认位置是*/var/log/audit/audit.log*，`auditd`会将新的审计记录写入该文件。这是一个纯文本文件，包含*FIELD
    = VALUE*对，值之间用空格分隔。当前的字段名称列表可以在* [https://github.com/linux-audit/audit-documentation/blob/master/specs/fields/field-dictionary.csv](https://github.com/linux-audit/audit-documentation/blob/master/specs/fields/field-dictionary.csv)
    *找到。该文件可以以原始格式进行查看，但`ausearch`和`aureport`工具提供了规范化、后处理和更易读的输出。
- en: The *audit.log* file can be copied to a Linux analysis machine on which `ausearch`
    and `aureport` can be used with the `--input` flag to specify the file.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '*audit.log*文件可以复制到一台Linux分析机器上，在该机器上可以使用`ausearch`和`aureport`，并通过`--input`标志指定文件。'
- en: 'An audit record format can be raw or enriched. Enriched records additionally
    resolve numbers to names and append them to the log line. An example enriched
    audit record from a */var/log/audit/audit.log* file looks like this:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 审计记录格式可以是原始的或丰富的。丰富的记录会将数字解析为名称，并将其附加到日志行上。来自*/var/log/audit/audit.log*文件的一个示例丰富审计记录如下所示：
- en: '[PRE37]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The same audit record produced with the ausearch tool looks like:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ausearch工具生成的相同审计记录如下所示：
- en: '[PRE38]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: This command produces a formatted output of the entire *audit.log* file. Here
    the date is converted from epoch format, and some control character formatting
    corrections are made.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令生成整个*audit.log*文件的格式化输出。在这里，日期从纪元格式转换，并进行了一些控制字符的格式修正。
- en: 'You can specify `csv` or `text` for the output format. The `csv` format is
    useful for importing into other tools. The `text` format produces a single readable
    line for each audit record:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为输出格式指定`csv`或`text`。`csv`格式对于导入到其他工具中非常有用。`text`格式为每个审计记录生成一行可读的内容：
- en: '[PRE39]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: See the ausearch(8) man page for other specific queries of the audit log.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 查看ausearch(8)手册页，了解其他特定的审计日志查询。
- en: 'To generate a report of statistics from an audit logfile, the `aureport` command
    can be used:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成来自审计日志文件的统计报告，可以使用`aureport`命令：
- en: '[PRE40]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: This summary may be useful for inclusion in a forensic report or to help guide
    where to look next in a forensic examination.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 该总结可能有助于包含在取证报告中，或帮助指导下一步在取证检查中该关注哪里。
- en: 'You can generate individual reports for each of these statistics. For example,
    the following generates a report on logins:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为这些统计数据生成单独的报告。例如，以下生成一个关于登录的报告：
- en: '[PRE41]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: See the aureport(9) man page for the flags needed to generate other detailed
    reports about the other statistics.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 查看aureport(9)手册页，了解生成其他详细报告所需的标志位。
- en: 'The `aureport` and `ausearch` commands can also specify a time period. For
    example, this report is generated for the time period between 9 AM and 10 AM (but
    not including 10 AM) on November 8:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '`aureport`和`ausearch`命令也可以指定时间段。例如，以下报告是为 11 月 8 日上午 9 点到 10 点（但不包括 10 点）之间的时间段生成的：'
- en: '[PRE42]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Both `aureport` and `ausearch` use the same flags for the time range.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '`aureport`和`ausearch`都使用相同的时间范围标志。'
- en: The `aureport` and `ausearch` commands have flags to interpret numeric entities
    and convert them to names. Do not do this. It will replace the numeric user IDs
    and group IDs with the matching names found on your own analysis machine, not
    from the suspect disk under analysis. The `ausearch` command also has a flag to
    resolve hostnames, which is not recommended when performing a forensic examination.
    This will potentially trigger a DNS network request, which could produce inaccurate
    results or otherwise compromise an investigation.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '`aureport`和`ausearch`命令有标志位可以解释数字实体并将其转换为名称。但不要这样做。这样会将数字用户 ID 和组 ID 替换为在你自己分析机器上找到的匹配名称，而不是来自正在分析的可疑磁盘。`ausearch`命令还有一个标志位可以解析主机名，但在进行取证检查时不推荐使用。这可能会触发
    DNS 网络请求，进而产生不准确的结果或以其他方式妨碍调查。'
- en: '**Summary**'
  id: totrans-299
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: In this chapter, we have identified the locations of typical logs found on a
    Linux system. You have learned how to view these logs and the information they
    may contain. You have also seen examples of tools used to analyze logs in a forensic
    context. This chapter has provided the background on Linux logs that are referenced
    throughout the rest of the book.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经标识了 Linux 系统上典型日志的位置。你已经学习了如何查看这些日志以及它们可能包含的信息。你还看到了在取证环境中用于分析日志的工具示例。本章提供了
    Linux 日志的背景知识，这些内容在本书其余部分中都有提到。
