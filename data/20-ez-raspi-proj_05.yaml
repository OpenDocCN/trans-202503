- en: Cameras
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摄像头
- en: '**13'
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**13**'
- en: Burglar Detector with Photo Capture**
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**带有照片捕捉功能的入侵检测器**'
- en: This project will teach you to use the Raspberry Pi Camera Module v2, which,
    along with the PIR motion sensor, will detect and photograph trespassers. When
    the motion sensor detects movement, it triggers an event that takes a photo so
    you know who was in your house while you were out.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目将教你如何使用 Raspberry Pi Camera Module v2，结合 PIR 动态传感器，它将用于检测并拍摄入侵者的照片。当运动传感器探测到运动时，它会触发拍照事件，帮助你知道谁在你外出时进入了你的家。
- en: '![image](../images/f0163-01.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0163-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需组件**'
- en: Raspberry Pi
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Raspberry Pi
- en: Breadboard
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 面包板
- en: Raspberry Pi Camera Module v2
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Raspberry Pi Camera Module v2
- en: PIR mot ion sensor HC-SR501
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: PIR 动态传感器 HC-SR501
- en: Pushbut ton
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮
- en: Jumper wires
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 跳线
- en: '**INTRODUCING THE RASPBERRY PI CAMERA MODULE V2**'
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**介绍 Raspberry Pi 摄像头模块 V2**'
- en: The Raspberry Pi Camera Module v2, shown in [Figure 13-1](ch13.xhtml#ch13fig1),
    features an 8 MP Sony IMX219 image sensor with a fixed-focus lens. It’s capable
    of 3280×2464 pixel static images and supports video with resolutions of 1080p
    at 30 frames, 720p at 60 frames, and 640×480 at 90 frames—all of which means it’s
    a pretty good camera for its size! You’ll just use the static image capabilities
    in this project.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如 [图 13-1](ch13.xhtml#ch13fig1) 所示，Raspberry Pi Camera Module v2 配备了一颗 8 MP
    的 Sony IMX219 图像传感器，具有固定焦距镜头。它支持 3280×2464 像素的静态图像，并支持 1080p 30 帧、720p 60 帧和 640×480
    90 帧的视频分辨率——这些都意味着它在这个尺寸下是非常不错的摄像头！在本项目中，你将只使用其静态图像功能。
- en: '![image](../images/f0164-01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0164-01.jpg)'
- en: '**FIGURE 13-1:** Raspberry Pi Camera Module v2'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13-1：** Raspberry Pi Camera Module v2'
- en: This camera is compatible with all Raspberry Pi models—1, 2, 3, and zero—and
    comes with a 15 cm ribbon cable that makes it easy to connect to the CSI port
    on the Raspberry Pi, designed to interface with cameras. If you want your camera
    to reach farther than 15 cm from your Pi, you should be able to find and purchase
    longer cables.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 该摄像头与所有 Raspberry Pi 型号（1、2、3 和 Zero）兼容，并附带一根 15 cm 的带状电缆，使其可以轻松连接到 Raspberry
    Pi 上的 CSI 接口，该接口专为与摄像头连接而设计。如果你希望摄像头距离 Pi 超过 15 cm，你可以找到并购买更长的电缆。
- en: The Raspberry Pi Camera Module v2 is one of the most popular Raspberry Pi add-ons
    because it gives users an affordable way to take still photographs and record
    video in full HD. One interesting example of a Camera Module v2 project comes
    from the Naturebytes community, which provides kits to remotely capture wildlife
    photos. [Figure 13-2](ch13.xhtml#ch13fig2) shows the wildlife camera in action.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Raspberry Pi Camera Module v2 是 Raspberry Pi 最受欢迎的扩展之一，因为它为用户提供了一种经济实惠的方式，可以拍摄静态照片并录制全高清的视频。一个有趣的
    Camera Module v2 项目来自 Naturebytes 社区，该社区提供套件，能够远程捕捉野生动物照片。[图 13-2](ch13.xhtml#ch13fig2)
    展示了野生动物相机的实际应用。
- en: '![image](../images/f0164-02.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0164-02.jpg)'
- en: '**FIGURE 13-2:** Raspberry Pi camera with PIR motion sensor pointed at a bird
    feeder'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13-2：** 配备 PIR 动态传感器的 Raspberry Pi 摄像头对准鸟类喂食器'
- en: The Naturebytes kit is also equipped with a PIR motion sensor, so if a bird
    perches on the feeder in [Figure 13-2](ch13.xhtml#ch13fig2), it will trigger the
    camera to take a photo of the bird. You’ll use the same principles for this project’s
    burglar detector.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Naturebytes 套件还配备了 PIR 动态传感器，因此，如果鸟类停在 [图 13-2](ch13.xhtml#ch13fig2) 中的喂食器上，它将触发摄像头拍摄鸟类的照片。你将使用相同的原理来构建本项目的入侵检测器。
- en: '**BUILDING THE BURGLAR DETECTOR**'
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建入侵检测器**'
- en: The burglar detector consists of a PIR motion sensor, a pushbutton, and a camera
    module you’ll connect to your Pi. You’ll use the built-in picamera library, which
    makes it simple to control the camera.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 入侵检测器由一个 PIR 动态传感器、一个按钮和一个连接到 Pi 的摄像头模块组成。你将使用内置的 picamera 库，它可以简化对摄像头的控制。
- en: '**Enabling the Camera**'
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**启用摄像头**'
- en: You need to enable your Pi’s camera software before you can use the camera module.
    In the desktop environment, go to the main menu and select **Preferences** ▸ **Raspberry
    Pi Configuration**. You should see a window like the one in [Figure 13-3](ch13.xhtml#ch13fig3).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在你可以使用摄像头模块之前，你需要先启用 Pi 的摄像头软件。在桌面环境下，进入主菜单并选择 **首选项** ▸ **Raspberry Pi 配置**。你应该会看到类似于
    [图 13-3](ch13.xhtml#ch13fig3) 中的窗口。
- en: '![image](../images/f0165-01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0165-01.jpg)'
- en: '**FIGURE 13-3:** Enabling the camera software'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13-3：** 启用摄像头软件'
- en: Select **Enabled** on the Camera row, then click **OK**, and you’re ready to
    go.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在摄像头行选择 **启用**，然后点击 **确定**，这样你就可以开始使用了。
- en: '**Connecting the Camera**'
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**连接摄像头**'
- en: With the camera software enabled, shut down your Pi and then connect the camera
    to the CSI port. Make sure the camera is connected with the blue letters facing
    up and oriented as shown in [Figure 13-4](ch13.xhtml#ch13fig4). Then start up
    your Pi again.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 启用相机软件后，关闭你的Pi，然后将相机连接到CSI端口。确保相机连接时蓝色字母朝上，并且按照[图13-4](ch13.xhtml#ch13fig4)所示的方向进行连接。然后重新启动Pi。
- en: '![image](../images/f0166-01.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0166-01.jpg)'
- en: '**FIGURE 13-4:** Connecting the Raspberry Pi camera to the CSI port'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13-4：** 连接树莓派相机到CSI端口'
- en: '**WIRING THE CIRCUIT**'
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**接线电路**'
- en: '**NOTE**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Be careful when moving the camera. The ribbon is very fragile, and if it touches
    the GPIOs, they may permanently damage your camera. Try using some modeling clay
    or sticky tack to secure the camera.*'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*在移动相机时要小心。排线非常脆弱，如果接触到GPIO端口，可能会永久损坏相机。可以尝试使用一些模型粘土或粘性胶带来固定相机。*'
- en: With the camera connected, follow these instructions to wire the rest of the
    circuit, using [Figure 13-5](ch13.xhtml#ch13fig5) as a reference.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 连接相机后，按照以下说明连接电路的其余部分，参考[图13-5](ch13.xhtml#ch13fig5)。
- en: Connect a GND pin to the breadboard GND rails.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一个GND引脚连接到面包板的GND轨道。
- en: Insert a pushbutton into the breadboard so that it straddles the center divide.
    Connect one lead to GND and the other lead on the same side of the button to GPIO
    2.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将按钮插入面包板，使其横跨中心分隔。将一条引脚连接到GND，另一条引脚连接到按钮同侧的GPIO 2。
- en: Wire the PIR motion sensor with the connections shown in the following table.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照下表所示的连接方式接线PIR运动传感器。
- en: '| **PIR MOTION SENSOR** | **RASPBERRY PI** |'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **PIR运动传感器** | **树莓派** |'
- en: '| --- | --- |'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| GND | GND |'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | GND |'
- en: '| OUT | GPIO 4 |'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| OUT | GPIO 4 |'
- en: '| VCC | 5 V |'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| VCC | 5 V |'
- en: '![image](../images/f0167-01.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0167-01.jpg)'
- en: '**FIGURE 13-5:** The burglar detector circuit'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13-5：** 入侵检测器电路'
- en: '**WRITING THE SCRIPT**'
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**编写脚本**'
- en: 'To control the camera, you’ll use the built-in picamera library. It’s a very
    straightforward library, so this script will be a piece of cake. Here’s an overview
    of what the code should do:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制相机，你将使用内置的picamera库。它是一个非常简单的库，所以这个脚本将轻松完成。下面是代码应该执行的操作概述：
- en: Initialize the camera.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化相机。
- en: Take a photo when the PIR motion sensor detects movement.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当PIR运动传感器检测到运动时，拍照。
- en: Save the photos in your *Desktop* folder.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将照片保存在你的*桌面*文件夹中。
- en: Name the photos incrementally so you know what order they were taken in—for
    example, *image_1.jpg*, *image_2.jpg*, and so on.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按顺序命名照片，这样你就能知道它们拍摄的顺序——例如，*image_1.jpg*、*image_2.jpg*，依此类推。
- en: Stop the camera when the pushbutton is pressed. If you don’t include this feature,
    you won’t be able to exit the camera preview that pops up on your screen.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当按下按钮时停止相机。如果不包括此功能，你将无法退出屏幕上弹出的相机预览。
- en: '**Entering the Script**'
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**输入脚本**'
- en: Go to your *Projects* folder and create a new folder called *Cameras*. Then
    open **Python 3 (IDLE)** and go to **File** ▸ **New** to create a new script called
    *burglar_detector.py*, and copy the following code into it (remember that you
    can download all the scripts at *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 转到你的*项目*文件夹，创建一个名为*相机*的新文件夹。然后打开**Python 3 (IDLE)**，转到**文件** ▸ **新建**，创建一个名为*burglar_detector.py*的新脚本，并将以下代码复制到其中（记得你可以在*[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*下载所有脚本）。
- en: '**NOTE**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*You can’t name any of your files* picamera.py *because picamera is a Python
    library name and cannot be used.*'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*你不能将文件命名为* picamera.py *，因为picamera是一个Python库名称，不能使用该名称。*'
- en: '[PRE0]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: First you import the libraries you need ➊; as we’ve said, the program uses the
    picamera library to control the camera. You should be familiar with all the other
    modules used here from previous projects. Then you create objects to refer to
    the pushbutton, the PIR motion sensor, and the camera ➋, and initialize the camera
    with `camera.start_preview()` ➌. Depending on how your camera is oriented, you
    might also need to rotate it 180 degrees with `camera.rotation = 180` so that
    it doesn’t take the photos upside down. If your image is upside down when you
    test this code, go back and set the rotation to `0` or comment out this line.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 首先导入所需的库 ➊；正如我们所说，程序使用picamera库来控制相机。你应该已经熟悉这里使用的其他模块，这些模块在之前的项目中都有使用。然后创建对象来引用按钮、PIR运动传感器和相机
    ➋，并通过`camera.start_preview()` ➌初始化相机。根据相机的方向，可能还需要使用`camera.rotation = 180`将其旋转180度，以免拍摄倒立的照片。如果测试代码时图像倒立，请返回并将旋转设置为`0`，或者注释掉这一行。
- en: Next, you initialize an `i` variable that starts at `0` ➍. The `take_photo()`
    function, defined at ➏, will use this variable to count and number the images,
    incrementing the number in the filename by one with each picture taken.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你初始化一个从 `0` 开始的 `i` 变量 ➍。在 ➏ 处定义的 `take_photo()` 函数将使用这个变量来计数并给图片编号，每拍一张照片，文件名中的数字就递增
    1。
- en: You then define the `stop_camera()` function that stops the camera with the
    `camera.stop_preview()` method ➎. At ➏, you define the `take_photo()` function
    we just mentioned, which takes a photo. For this, you use the `camera.capture()`
    method, specifying the directory you want to save the image to inside the parentheses.
    In this case, we’re saving the images in the *Desktop* folder and naming the images
    `image_%s.jpg`, where `%s` is replaced with the number we incremented earlier
    in `i`. If you want to save your files to a different folder, replace this directory
    with the path to your chosen folder.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你定义了 `stop_camera()` 函数，使用 `camera.stop_preview()` 方法停止摄像头 ➎。在 ➏ 处，你定义了刚才提到的
    `take_photo()` 函数，用来拍照。为此，你使用 `camera.capture()` 方法，并在括号中指定你希望保存图片的目录。在这种情况下，我们将图片保存到
    *Desktop* 文件夹，并将图片命名为 `image_%s.jpg`，其中 `%s` 会被我们之前在 `i` 中递增的数字替代。如果你想将文件保存到其他文件夹，只需将该目录替换为你选择的文件夹路径。
- en: You then impose a 10-second delay ➐, meaning the camera takes photos at 10-second
    intervals for as long as the PIR sensor detects movement. Feel free to increase
    or decrease the delay time, but be careful to not overload the Pi with tons of
    images by making the delay time too small.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 接着，你添加了一个 10 秒的延迟 ➐，这意味着只要 PIR 传感器检测到运动，摄像头将每隔 10 秒拍一次照片。你可以自由增加或减少延迟时间，但要小心不要通过将延迟时间设置得过小来让
    Pi 被大量图片压垮。
- en: At ➑, you define the behavior to trigger the `stop_camera()` function when you
    press the pushbutton. This function stops the camera preview and exits the program.
    The `exit()` function pops up a window asking if you want to close the program;
    to close it, just click **OK**. Finally, you tell the camera to take a photo by
    triggering the `take_photo()` function when motion is detected ➒.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ➑ 处，你定义了按下按钮时触发 `stop_camera()` 函数的行为。这个函数停止摄像头预览并退出程序。`exit()` 函数会弹出一个窗口，询问你是否要关闭程序；要关闭它，只需点击**确定**。最后，当检测到运动时，你通过触发
    `take_photo()` 函数来让摄像头拍照 ➒。
- en: '**Running the Script**'
  id: totrans-63
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**运行脚本**'
- en: Press **F5** or go to **Run** ▸ **Run Module** to run the script. While the
    script is running, you should see a preview of what the camera sees on your screen.
    To shut down the camera preview, press the pushbutton and click **OK** in the
    window that pops up.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 按下**F5**或进入**运行** ▸ **运行模块**来运行脚本。在脚本运行时，你应该能在屏幕上看到摄像头所看到的预览画面。要关闭摄像头预览，按下按钮并在弹出的窗口中点击**确定**。
- en: Congratulations! Your burglar detector is ready to catch some burglars. Place
    the burglar detector in a strategic place and come back later to check any saved
    photos. [Figure 13-6](ch13.xhtml#ch13fig6) shows a photo taken by our burglar
    detector, catching someone stealing a computer from our lab.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你的入侵探测器已经准备好抓捕窃贼了。将入侵探测器放在一个战略位置，稍后回来查看任何保存的照片。[图 13-6](ch13.xhtml#ch13fig6)显示了我们入侵探测器拍摄的一张照片，捕捉到有人从我们的实验室偷走一台电脑。
- en: '![image](../images/f0170-01.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0170-01.jpg)'
- en: '**FIGURE 13-6:** Picture taken with the burglar detector'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13-6：** 用入侵探测器拍摄的照片'
- en: '**TAKING IT FURTHER**'
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**进一步探索**'
- en: 'As you’ve seen, projects with cameras are fun! Here’s an idea on how to improve
    your security system: redesign your project so that, when the sensor detects motion,
    the Raspberry Pi takes a photo, sends you an email notification, and sounds an
    alarm. You should already know how to do all of this using the skills you’ve learned
    from [Projects 9](ch09.xhtml#ch09)–[12](ch12.xhtml#ch12).'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，带有摄像头的项目非常有趣！这是一个改进你安全系统的想法：重新设计你的项目，使得当传感器检测到运动时，Raspberry Pi 拍照，发送电子邮件通知，并触发警报。你应该已经掌握了如何利用[第
    9 项](ch09.xhtml#ch09)–[第 12 项](ch12.xhtml#ch12)中学到的技能来完成这一切。
- en: '**14'
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**14'
- en: Home Surveillance Camera**
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 家庭监控摄像头**
- en: In this project, you’ll create a home surveillance camera system that streams
    live video on a web page that you can access from any device with browser capabilities
    connected to the same network as your Pi. This means you’ll be able to monitor
    any part of your house without getting off the sofa!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将创建一个家庭监控摄像头系统，它将实时视频流传输到网页上，你可以通过任何连接到与 Raspberry Pi 相同网络的设备上的浏览器访问。这意味着你可以在不离开沙发的情况下监控家中的任何地方！
- en: '![image](../images/f0172-01.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0172-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需零件**'
- en: Raspberry Pi
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Raspberry Pi
- en: Raspberry Pi Camera Module v2
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派摄像头模块v2
- en: In this project, you need to connect the camera to the Raspberry Pi, as we’ve
    shown you in [“Connecting the Camera”](ch13.xhtml#lev134) on [page 165](ch13.xhtml#page_165).
    If you haven’t enabled the software camera yet, go back to [Project 13](ch13.xhtml#ch13)
    and follow the instructions to set up the camera before continuing.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在本项目中，你需要将摄像头连接到树莓派，就像我们在[“连接摄像头”](ch13.xhtml#lev134)中展示的那样，位于[第165页](ch13.xhtml#page_165)。如果你还没有启用软件摄像头，请返回[第13项目](ch13.xhtml#ch13)，按照说明设置摄像头，然后再继续。
- en: '**RECORDING VIDEO TO A FILE**'
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**将视频录制到文件**'
- en: Before building your home surveillance camera system, you need to learn how
    to record video to a file.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建你的家庭监控摄像头系统之前，你需要学习如何将视频录制到文件中。
- en: Using [Project 13](ch13.xhtml#ch13) as a reference, connect your Raspberry Pi
    Camera Module v2 to your Pi using the CSI port. Create a new script called *record_file.py*
    in **Python 3 (IDLE)**, save it inside the *Cameras* folder, and enter the code
    in [Listing 14-1](ch14.xhtml#ch14list1).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 参考[第13项目](ch13.xhtml#ch13)，通过CSI端口将树莓派摄像头模块v2连接到你的树莓派。创建一个新的脚本文件，命名为*record_file.py*，在**Python
    3 (IDLE)**中保存，并将其放入*Cameras*文件夹中，输入[LISTING 14-1](ch14.xhtml#ch14list1)中的代码。
- en: '**LISTING 14-1:** Record video to a file'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**LISTING 14-1:** 将视频录制到文件'
- en: '[PRE1]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As usual, you first import the picamera library to control the camera ➊. You
    create an object called `camera` to refer to the camera ➋ and then set the camera
    resolution to 640×480 ➌. The camera resolution is configurable; the maximum resolution
    for video recording is 1920×1080 and the minimum resolution is 64×64\. To enable
    maximum resolution, you also need to set the frame rate to 15 by adding the line
    of code `camera.framerate = 15`. You can try testing this script now with different
    resolutions and see what works best for you, or you can just go with our settings
    for now and come back to it later.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，首先导入picamera库来控制摄像头 ➊。你创建一个名为`camera`的对象来引用摄像头 ➋，然后将摄像头的分辨率设置为640×480
    ➌。摄像头的分辨率是可配置的；视频录制的最大分辨率为1920×1080，最小分辨率为64×64。为了启用最大分辨率，还需要通过添加`camera.framerate
    = 15`这一行代码来设置帧率为15。你现在可以尝试使用不同的分辨率测试此脚本，看看哪种最适合你，或者你可以先使用我们的设置，稍后再进行调整。
- en: The camera then starts recording to a file called *videotest.h264* ➍. Feel free
    to change the filename, though you should keep the extension *.h264*, which is
    a format for video files. You then specify the amount of time that the camera
    should record for ➎. In this case, the camera is recording for 60 seconds. The
    `wait_recording()` method also repeatedly checks for errors, such as the disk
    space being too full for more recording.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，摄像头开始录制到名为*videotest.h264*的文件中 ➍。当然，你可以更改文件名，但应保持文件扩展名为*.h264*，因为这是视频文件的格式。接着，你需要指定摄像头录制的时间
    ➎。在这个例子中，摄像头录制60秒。`wait_recording()`方法也会反复检查是否有错误，比如磁盘空间不足以继续录制。
- en: 'Last, you stop the video recording ➏ and print a message saying that the recording
    is finished. Press **F5** or go to **Run** ▸ **Run Module** to run the script.
    Your video file is located in the script’s folder, *Cameras*. From the terminal,
    enter the following commands to navigate to the video folder and watch it:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你停止视频录制 ➏，并打印一条消息表示录制已完成。按**F5**或转到**运行** ▸ **运行模块**来运行脚本。你的视频文件位于脚本所在的*Cameras*文件夹中。从终端中输入以下命令导航到视频文件夹并观看：
- en: '[PRE2]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This opens a new window and plays the whole video in fullscreen. [Figure 14-1](ch14.xhtml#ch14fig1)
    shows a screenshot of our video recording test.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这会打开一个新窗口并全屏播放整个视频。[Figure 14-1](ch14.xhtml#ch14fig1)显示了我们视频录制测试的截图。
- en: '![image](../images/f0174-01.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0174-01.jpg)'
- en: '**FIGURE 14-1:** Recording video with the Raspberry Pi camera'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**FIGURE 14-1:** 使用树莓派摄像头录制视频'
- en: '**WRITING THE SCRIPT**'
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**编写脚本**'
- en: 'Now for the important bit: you’re going to build a web page that is hosted
    in your Raspberry Pi—also known as a *web server*—that streams live video. (We’ll
    cover web servers in more detail in [Projects 15](ch15.xhtml#ch15), [16](ch16.xhtml#ch16),
    and [17](ch17.xhtml#ch17).)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是关键部分：你将构建一个托管在树莓派上的网页——也就是一个*Web服务器*——用于直播视频流。（我们将在[第15项目](ch15.xhtml#ch15)、[16项目](ch16.xhtml#ch16)和[17项目](ch17.xhtml#ch17)中详细讨论Web服务器。）
- en: 'The script for this project is advanced, so we won’t explain each line in detail.
    Here’s an overview of what the code should do:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目的脚本较为复杂，因此我们不会详细解释每一行。以下是代码应该执行的概览：
- en: Initialize a web server and the Pi camera.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化Web服务器和Pi摄像头。
- en: Set the web server, available at the Raspberry Pi IP address port 8000, to show
    a web page you can customize using HTML.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置网页服务器，在树莓派的IP地址和端口8000下显示一个你可以使用HTML自定义的网页。
- en: Set the web page to contain the camera video streaming.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置网页以显示摄像头的视频流。
- en: Make the web server accessible from any browser connected to the same network
    as your Pi.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使得网页服务器可以从任何连接到同一网络的浏览器访问。
- en: '**Entering the Script**'
  id: totrans-97
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**输入脚本**'
- en: Open **Python 3 (IDLE)** and go to **File** ▸ **New** to create a new script.
    Enter the code in [Listing 14-2](ch14.xhtml#ch14list2), and save it as *surveillance_system.py*
    in the *Cameras* folder (remember that you can download all the scripts at *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 打开**Python 3 (IDLE)**，然后进入**文件** ▸ **新建**来创建一个新脚本。输入[清单 14-2](ch14.xhtml#ch14list2)中的代码，并将其保存在*Cameras*文件夹中，命名为*surveillance_system.py*（记得你可以从*[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*下载所有脚本）。
- en: This script was based on the web streaming example at *[http://picamera.readthedocs.io/en/latest/recipes2.html](http://picamera.readthedocs.io/en/latest/recipes2.html)*.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本是基于* [http://picamera.readthedocs.io/en/latest/recipes2.html](http://picamera.readthedocs.io/en/latest/recipes2.html)*上的流媒体示例。
- en: '**LISTING 14-2:** Stream video to a web page'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单 14-2：** 将视频流传输到网页'
- en: '[PRE3]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[Listing 14-2](ch14.xhtml#ch14list2) is more complicated than the scripts we’ve
    been writing so far, and explaining each class and function necessary for video
    streaming goes beyond the book’s scope, so we won’t go into it here.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 14-2](ch14.xhtml#ch14list2)比我们之前写的脚本要复杂，并且解释视频流所需的每个类和函数超出了本书的范围，因此我们不会在这里详细介绍。'
- en: 'There is space for customization, though. You can edit the way your web page
    looks and the camera settings:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，仍然有定制的空间。你可以编辑网页的外观以及摄像头设置：
- en: At ➊, you define your web page content using HTML; here you can change the title
    and heading of your web page. Check [Project 15](ch15.xhtml#ch15) for more information
    about HTML, as well as to learn how to style your web page using CSS.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在➊处，你使用HTML定义网页内容；在这里，你可以更改网页的标题和标题。有关HTML的更多信息，请查看[项目 15](ch15.xhtml#ch15)，并学习如何使用CSS为网页设置样式。
- en: At ➋, you initialize the camera; here you can change the camera resolution and
    frame rate.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在➋处，你初始化了摄像头；在这里，你可以更改摄像头的分辨率和帧率。
- en: '**Running the Script**'
  id: totrans-106
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**运行脚本**'
- en: Press **F5** or go to **Run** ▸ **Run Module** to run the script. Once the script
    is running, your camera will stream to the web page. To access this page, you
    need to find the IP address for your Pi and enter the URL *http://<Pi IP address>:8000*,
    replacing *<Pi IP address>* with your Pi’s IP address.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 按**F5**或进入**运行** ▸ **运行模块**来运行脚本。脚本运行后，你的摄像头将向网页流式传输视频。要访问此网页，你需要找到树莓派的IP地址，并输入网址*http://<Pi
    IP address>:8000*，将*<Pi IP address>*替换为你树莓派的IP地址。
- en: 'To find your Pi’s IP address, go to the terminal and enter the following:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到树莓派的IP地址，请打开终端并输入以下命令：
- en: '[PRE4]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will print the Pi’s IP address, as highlighted in [Figure 14-2](ch14.xhtml#ch14fig2).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出树莓派的IP地址，如[图 14-2](ch14.xhtml#ch14fig2)中所示。
- en: '![image](../images/f0177-01.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0177-01.jpg)'
- en: '**FIGURE 14-2:** Finding your Raspberry Pi’s IP address'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 14-2：** 查找树莓派的IP地址'
- en: Congratulations—you’ve built your own home surveillance system! You can access
    the video streaming from a computer, smartphone, or tablet browser connected to
    the local network. In this example, since our IP address is 192.168.1.112, we
    enter *http://192.168.1.112:8000*. Make sure you use your own IP address.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你——你已经建立了自己的家庭监控系统！你可以通过连接到本地网络的计算机、智能手机或平板电脑浏览器访问视频流。在这个例子中，由于我们的IP地址是192.168.1.112，我们输入*http://192.168.1.112:8000*。确保使用你自己的IP地址。
- en: '**TAKING IT FURTHER**'
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**进一步探索**'
- en: 'In this project you’ve learned how to record video and how to build a web server
    that streams live video footage. You can mix what you’ve learned here with other
    projects to enhance them. For example:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你学会了如何录制视频，并且如何构建一个可以流式传输实时视频的网页服务器。你可以将所学内容与其他项目结合，进一步增强它们。例如：
- en: Edit [Project 13](ch13.xhtml#ch13) so that the Pi records video for a specified
    time when it detects movement inside your house while you’re out.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑[项目 13](ch13.xhtml#ch13)，使得当树莓派在你外出时检测到家里有运动时，它会录制视频一段指定时间。
- en: Customize the streaming web page with CSS using the skills you’ll learn in [Project
    15](ch15.xhtml#ch15).
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[项目 15](ch15.xhtml#ch15)中学到的技巧，使用CSS自定义流媒体网页。
