- en: B
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: B
- en: Glossary
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 词汇表
- en: Symbols
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 符号
- en: '`.code`'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`.code`'
- en: A section for program code.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 程序代码部分。
- en: '`.const`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`.const`'
- en: A declaration section for initialized read-only values.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 用于声明已初始化的只读值的部分。
- en: '`.data`'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`.data`'
- en: A declaration section for initialized variables.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 用于声明已初始化变量的部分。
- en: '`.data?`'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`.data?`'
- en: A declaration section for uninitialized variables.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用于声明未初始化变量的部分。
- en: A
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: A
- en: ABI
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ABI
- en: See *application binary interface*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 见*应用二进制接口*。
- en: address bus
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 地址总线
- en: A set of electronic signals that hold a binary address of a memory element.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一组电子信号，表示内存元素的二进制地址。
- en: aggregate data types
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合数据类型
- en: Data types composed of one or more smaller data types.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 由一个或多个较小数据类型组成的数据类型。
- en: API
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: API
- en: Application programming interface.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序编程接口。
- en: application binary interface
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 应用二进制接口
- en: A set of conventions that code uses to ensure interoperability between code
    that calls other functions or procedures and the functions or procedures being
    called.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一组约定，代码使用这些约定来确保调用其他函数或过程的代码与被调用的函数或过程之间的互操作性。
- en: ASCII
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: ASCII
- en: American Standard Code for Information Interchange.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 美国信息交换标准代码。
- en: assembly unit
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 汇编单元
- en: The assembly of a source file plus any files it includes or indirectly includes.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一个源文件及其包含的或间接包含的所有文件的汇编。
- en: associativity
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 结合性
- en: Associativity dictates the grouping of operations within a complex expression
    in which the operators all have the same precedence. For example, if you have
    two operators, *op1* and *op2*, associativity determines the order of evaluation
    of the expression *x op1 y op2 z*. Left-associative operators would produce the
    result of the evaluation (*x op1 y*) *op2 z*, whereas right-associative operators
    would produce the result of the evaluation *x op1* (*y op2 z*).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 结合性决定了在一个复杂表达式中操作符的分组顺序，其中所有操作符具有相同的优先级。例如，如果你有两个操作符，*op1* 和 *op2*，结合性决定了表达式
    *x op1 y op2 z* 的求值顺序。左结合操作符会先计算 (*x op1 y*) *op2 z*，而右结合操作符会先计算 *x op1* (*y op2
    z*)。
- en: automatic variables
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 自动变量
- en: See *local variables*.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 见*局部变量*。
- en: AVX
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: AVX
- en: Advanced Vector Extensions.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 高级向量扩展。
- en: B
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: B
- en: BCD
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: BCD
- en: Binary-coded decimal.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 二进制编码十进制。
- en: big endian
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 大端字节序
- en: Multi-byte data objects in memory are big endian if their HO byte appears at
    the lowest address in memory and their LO byte appears at the highest address
    in memory.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果内存中的多字节数据对象的高字节出现在内存的最低地址处，而低字节出现在内存的最高地址处，则这些数据对象采用大端字节序。
- en: C
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: C
- en: calling convention
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 调用约定
- en: The protocol for passing data to and from a procedure, including where the data
    is to be passed, the alignment of the data, and the size of the data.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 传递数据给过程及从过程中返回数据的协议，包括数据的传递位置、数据的对齐方式和数据的大小。
- en: CLI
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: CLI
- en: Command line interface, or command line interpreter (Windows *cmd.exe* application).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行界面，或命令行解释器（Windows *cmd.exe* 应用程序）。
- en: code snippets
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段
- en: See *snippets*.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 见*代码片段*。
- en: coercion
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 强制转换
- en: Forcing a data type to behave as another data type; for example, treating a
    character value as an integer.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 强制将一个数据类型作为另一个数据类型处理；例如，将字符值当作整数处理。
- en: column-major ordering
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 列主序排列
- en: A function for storing elements of multidimensional array elements in linear
    memory by storing the elements of a column in contiguous locations and then placing
    each column after the previous column in memory.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一个函数，用于将多维数组元素存储到线性内存中，通过将每一列的元素存储在连续的内存位置中，然后按顺序将每一列放置到内存中。
- en: commutative
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 可交换
- en: An operation is commutative if (*A op B*) is always equal to (*B op A*).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果（*A op B*）总是等于（*B op A*），则该操作是可交换的。
- en: composite data types
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 复合数据类型
- en: See *aggregate data types*.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 见*聚合数据类型*。
- en: control bus
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 控制总线
- en: A set of electronic signals from the CPU that control activities such as reading,
    writing, and generating wait states.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一组来自CPU的电子信号，用于控制如读取、写入和生成等待状态等活动。
- en: control characters
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 控制字符
- en: Special nonprinting characters that control aspects of the machine printing
    the characters. This includes operations such as carriage return (moving the printer
    carriage to the beginning of the line), line feed (moving the printer device down
    one line), and backspace (moving the print position back one character on the
    current line).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊的非打印字符，用于控制打印字符的机器方面。这包括像回车（将打印头移到行首）、换行（将打印设备移动到下一行）和退格（将打印位置回退一个字符）等操作。
- en: CTL
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: CTL
- en: Compile-time language.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 编译时语言。
- en: D
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: D
- en: dangling pointer
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 悬空指针
- en: Use of a pointer to allocated memory after that memory has been freed and returned
    to the system (and is possibly being used for another purpose).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在已释放并返回给系统的内存上使用指针访问该内存（并且该内存可能正在被用于其他目的）。
- en: data bus
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 数据总线
- en: A set of electronic signals from the CPU that transfer data between the CPU
    and external devices (such as memory or I/O).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 从CPU到外部设备（如内存或输入/输出设备）传输数据的一组电子信号。
- en: delimiter characters
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 分隔符字符
- en: Characters that separate a sequence of other characters belonging to a set (such
    as a string of numeric characters delimited by spaces or commas).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 分隔属于一组的字符序列的字符（例如，空格或逗号分隔的数字字符串）。
- en: dependencies
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖关系
- en: In a makefile, one file is dependent on another if changing that other file
    requires a recompilation (or other operation) on the original file.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在makefile中，如果改变某个文件需要重新编译（或其他操作）原文件，则该文件依赖于另一个文件。
- en: dereference
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 解引用
- en: Access data at an address specified by a pointer variable.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 访问由指针变量指定的地址上的数据。
- en: descriptor
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 描述符
- en: A data structure that describes another data structure. Typically, a descriptor
    contains information such as a pointer to the actual data, type information, or
    length information.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 描述另一个数据结构的数据结构。通常，描述符包含诸如指向实际数据的指针、类型信息或长度信息等信息。
- en: directive
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 指令
- en: An assembly language statement that provides information to the assembler but
    is not a machine instruction and does not generate any code.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一种汇编语言语句，提供给汇编器的信息，但不是机器指令，不生成任何代码。
- en: domain (of a function)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的定义域
- en: The set of all possible input values that a function accepts.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 函数接受的所有可能输入值的集合。
- en: dword
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 双字
- en: Double word (two 16-bit words, forming a 32-bit value).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 双字（两个16位字，形成一个32位值）。
- en: dynamic type system
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 动态类型系统
- en: A program organization that allows types of objects to change during runtime.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 允许对象类型在运行时改变的程序组织。
- en: E
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: E
- en: effective address
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 有效地址
- en: The ultimate address in memory that an instruction will access, after all the
    address calculations are complete.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 指令将在内存中访问的最终地址，所有地址计算完成后。
- en: epilogue
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 尾声
- en: 'The standard exit sequence that cleans up local variable storage for a procedure.
    Typically, this consists of the following statements:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 清理过程局部变量存储的标准退出序列。通常，这包括以下语句：
- en: '[PRE0]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: F
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: F
- en: facade code
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 外观代码
- en: Code that changes the parameter or return result interface between calling code
    and a function or procedure being called to make the calling sequences compatible.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 改变调用代码和被调用函数或过程之间参数或返回结果接口的代码，以使调用序列兼容。
- en: false precision
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 假精度
- en: Extra bits in a computed result that contain garbage values; their presence
    indicates more precision than is actually present in the result.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 计算结果中的额外位，包含垃圾值；它们的存在表示结果中比实际值更多的精度。
- en: field
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 字段
- en: A member of a record and struct or object.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 记录、结构或对象的成员。
- en: floating-point unit
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点单元
- en: A section of a CPU that implements floating-point arithmetic.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 实现浮点运算的CPU部分。
- en: FPU
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点运算单元
- en: See *floating-point unit*.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 见*浮点运算单元*。
- en: full pathname
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 完整路径名
- en: A pathname beginning with a backslash (\) character, specifying a path that
    starts at the root directory. Also see *pathnames*.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 以反斜杠（\）字符开始的路径名，指定从根目录开始的路径。另见*路径名*。
- en: G
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: G
- en: granularity
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 粒度
- en: The smallest unit of access; for example, an MMU may access memory by using
    page granularity, where the granularity is 4096 bytes.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最小的访问单元；例如，MMU可以使用页面粒度访问内存，其中粒度为4096字节。
- en: guard digits (or bits)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 守卫数字（或位）
- en: Extra digits (or bits) maintained during a calculation to enhance the accuracy
    of a long chain of calculations.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算过程中维护的额外数字（或位），用于增强长链计算的精度。
- en: H
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H
- en: heap
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 堆
- en: An area in memory where a program keeps dynamically allocated memory objects.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 程序中用于存储动态分配的内存对象的内存区域。
- en: HLL
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 高级语言
- en: High-level language.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 高级语言。
- en: HO
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: HO
- en: High order.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 高阶。
- en: horizontal addition or subtraction
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 水平加法或减法
- en: Adding or subtracting adjacent lanes in an XMM or a YMM register rather than
    the usual corresponding lanes in separate XMM or YMM registers. Also see *vertical
    addition* *or* *subtraction*.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在XMM或YMM寄存器中相邻车道的加法或减法，而不是通常在不同的XMM或YMM寄存器中对应车道的加法或减法。另见*垂直加法* *或* *减法*。
- en: I
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: I
- en: I/O
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 输入/输出
- en: Input/output.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 输入/输出。
- en: IDE
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 集成开发环境
- en: See *integrated development environment*.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 见*集成开发环境*。
- en: idiom
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 习语
- en: An idiosyncrasy of the machine.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 机器的特异性。
- en: indirection
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 间接寻址
- en: A technique in which an instruction’s operand provides the location where the
    instruction can find the address of the object, rather than the object itself.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 一种技术，在这种技术中，指令的操作数提供了指令可以找到对象地址的位置，而不是直接提供对象本身。
- en: induction variable
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 归纳变量
- en: A variable whose value depends entirely on the value of another variable (typically
    during the execution of a loop).
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 其值完全依赖于另一个变量的值的变量（通常在循环执行期间）。
- en: integrated development environment
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 集成开发环境
- en: A set of programmer tools including compilers and assemblers, linkers, debuggers,
    and editors that allow you to develop software all within the same system.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 一套程序员工具，包括编译器、汇编器、链接器、调试器和编辑器，可以让你在同一系统中开发软件。
- en: L
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: L
- en: lane
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件通道
- en: An element of a vector (SSE/AVX packed data types).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 向量的一个元素（SSE/AVX打包数据类型）。
- en: leaf function
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 叶函数
- en: A function that does not call any other functions. The name comes from a call
    tree graph, in which its leaf nodes are those procedures that do not call any
    other procedures (and have no edges coming out of their nodes).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 不调用任何其他函数的函数。这个名称来源于调用树图，其中叶节点是那些不调用任何其他过程（且没有从其节点出来的边）的过程。
- en: lexicographical ordering
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 字典顺序
- en: Alphabetical ordering (or, more correctly, ordering based on the character code).
    Strings are compared on a character-by-character basis from the first character
    to the length of the shorter string. If two strings are equal to the length of
    the shorter string, the longer string is the greater of the two. Two strings are
    equal only if they have the same length and all characters in the string are equal.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 字母顺序（或更准确地说，是基于字符代码的顺序）。字符串按字符逐一比较，从第一个字符到较短字符串的长度。如果两个字符串的长度相同，那么较长的字符串视为更大的字符串。只有当两个字符串的长度相同且所有字符相等时，它们才相等。
- en: library module
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 库模块
- en: A collection of object files. Typically organized into a *.lib* file (though
    this is not a requirement for a library module).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 一组目标文件，通常被组织成一个*.lib*文件（尽管这对于库模块并不是必须的）。
- en: lifetime
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 生命周期
- en: A period of time, ranging from when storage is first bound to a variable to
    the point when the storage is no longer available for that variable.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 从存储首次分配给变量开始，到存储不再可用于该变量为止的时间段。
- en: LIFO
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 后进先出
- en: Last in, first out.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 后进先出
- en: little endian
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 小端法
- en: Multi-byte data objects in memory are little endian if their LO byte appears
    at the lowest address in memory and their HO byte appears at the highest address
    in memory.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果内存中的多字节数据对象的低字节出现在内存中最低地址的位置，高字节出现在内存中最高地址的位置，则它们是小端法表示的。
- en: LO
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: LO
- en: Low order.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 低位
- en: local variables
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 局部变量
- en: Variables (more properly called *automatic variables*) that have their storage
    allocated upon entry into a procedure and that storage is returned for other use
    when the procedure returns to its caller.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 变量（更准确地称为*自动变量*）在进入过程时分配存储，并且当过程返回到调用者时，这些存储会返回给其他使用。
- en: loop-invariant computation
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 循环不变计算
- en: A calculation that appears within a loop and always yields the same result on
    each iteration.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在循环中出现的计算，每次迭代都会产生相同的结果。
- en: M
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: M
- en: machine code
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 机器码
- en: Binary (or numeric) encoding of assembly language instructions.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 汇编语言指令的二进制（或数字）编码。
- en: macro
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 宏
- en: A textual sequence that a macro processor will substitute for a macro identifier
    everywhere that identifier appears in the source file.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 宏处理器将替换宏标识符的文本序列，这个标识符在源文件中出现的每个位置都会被替换。
- en: macroarchitecture
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 宏架构
- en: That view of the CPU’s architecture that is visible to software.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: CPU架构的一个视图，这个视图对软件可见。
- en: macro function
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 宏函数
- en: A macro that you can invoke anywhere in the body of the source file (including
    in the operand field of an instruction or directive); the macro returns a textual
    string that the macro invocation substitutes for the invocation.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 一种宏，你可以在源文件的任何地方调用（包括指令或指令的操作数字段中）；该宏返回一个文本字符串，宏调用会将其替换为该字符串。
- en: manifest constant
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 明示常量
- en: An identifier representing a constant value. MASM directly substitutes the value
    of the manifest constant everywhere the identifier appears in the program.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 表示常量值的标识符。MASM直接在程序中每次出现该标识符时替换为该常量的值。
- en: MASM
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: MASM
- en: Microsoft Macro Assembler.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 微软宏汇编器
- en: memory management unit
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 内存管理单元
- en: A component of the CPU that translates program addresses into physical memory
    addresses and handles illegal memory accesses.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: CPU的一个组件，负责将程序地址转换为物理内存地址，并处理非法内存访问。
- en: microarchitecture
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 微架构
- en: The design of the CPU below the level that is visible to software.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: CPU的设计位于软件可见层级之下。
- en: MMU
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: MMU
- en: See *memory management unit*.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 参见*内存管理单元*。
- en: MMX
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: MMX
- en: Multimedia Extensions (extended instruction set for the x86 CPU to support multimedia
    operations).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 多媒体扩展（针对x86 CPU的扩展指令集，支持多媒体操作）。
- en: mnemonic
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 助记符
- en: Literally, this means *memory aid*. Applied to instruction names, mnemonic effectively
    means *abbreviation*. For example, the mnemonic *lea* stands for *load effective
    address*.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 字面意思是*记忆辅助工具*。应用于指令名称时，助记符实际上意味着*缩写*。例如，助记符*lea*代表*加载有效地址*。
- en: MSVC
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: MSVC
- en: Microsoft Visual C++.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 微软 Visual C++。
- en: N
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: N
- en: namespace pollution
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 命名空间污染
- en: Having many names in a source file, thus limiting the number of available new
    names a programmer can use. (When a source file contains a large number of symbols,
    programmers commonly create conflicts by reusing the same name, leading to duplicate
    symbol errors in the compilation process.)
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在源文件中有多个名称，从而限制了程序员可用的新名称数量。（当源文件包含大量符号时，程序员通常会通过重用相同的名称来产生冲突，导致编译过程中的重复符号错误。）
- en: NaN
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 非数字（NaN）
- en: Not a number. A floating-point exceptional value indicating that a valid numeric
    result is unobtainable.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 非数字。浮点异常值，表示无法获得有效的数值结果。
- en: O
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: O
- en: opcode
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 操作码（opcode）
- en: Operation code. The numeric encoding of a machine instruction.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 操作码。机器指令的数字编码。
- en: ordered comparisons
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 有序比较
- en: Comparisons between two values, neither of which are NaNs.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 两个值之间的比较，且两者都不是NaN。
- en: oword
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: oword
- en: Octal word (eight 16-bit words, or a 16-byte value).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 八进制字（八个16位字，或一个16字节值）。
- en: P
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: P
- en: partial pathname
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 部分路径名
- en: A pathname that begins with a directory name (not a backslash character), denoting
    a path off the current (default) directory.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 一个以目录名称开始的路径名（不是反斜杠字符），表示当前（默认）目录之外的路径。
- en: pass by reference
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 通过引用传递
- en: A parameter-passing mechanism whereby the caller passes the address of the actual
    parameter data to a procedure or function.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 一种参数传递机制，调用者将实际参数数据的地址传递给过程或函数。
- en: pass by value
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 值传递
- en: A parameter-passing mechanism whereby the caller passes the actual value of
    a parameter to a procedure or function.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 一种参数传递机制，调用者将参数的实际值传递给过程或函数。
- en: pathnames
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 路径名
- en: A sequence of (sub)directory names separated by backslash (\) characters, possibly
    ending with a filename.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 一串由反斜杠（\）字符分隔的（子）目录名称，可能以文件名结尾。
- en: PC
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 程序计数器（PC）
- en: Program counter. The current instruction or directive address in an assembly
    language program. PC-relative addressing is an offset from the current machine
    instruction.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 程序计数器。汇编语言程序中当前指令或指令地址。PC相对寻址是当前机器指令的偏移量。
- en: powerset
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 幂集
- en: A set data type implemented by using a single bit to represent each object in
    the set. If the cardinality of the set (number of members in the set) is *n*,
    the set data type will require *n* bits. In mathematics, the power set of any
    set *S* is the set of all subsets of *S*, including the empty set and *S* itself;
    this requires 2^(*n*) different sets, which is representable by an *n*-bit bit
    string.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 一种集合数据类型，通过使用单个位来表示集合中的每个对象。如果集合的基数（集合中的成员数）是*n*，则该集合数据类型将需要*n*个位。在数学中，任何集合*S*的幂集是*S*的所有子集的集合，包括空集和*S*本身；这需要2^(*n*)个不同的集合，可以通过*n*位位串来表示。
- en: precedence
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 优先级
- en: When two different operators appear in an expression (without parentheses to
    denote the order of evaluation), precedence controls which operations occur first.
    For example, with the operators *op1* and *op2*, and the expression *x op1 y op2
    z*, the order of evaluation is determined by the precedence of the operators.
    If *op1* has higher precedence than *op2*, the expression is evaluated as (*x
    op1 y*) *op2 z*. If *op2* has a higher precedence than *op1*, the expression is
    evaluated as *x op1* (*y op2 z*). If both operators have the same precedence,
    associativity rules control the order of evaluation (see also *associativity*).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 当两个不同的运算符出现在一个表达式中（没有括号来表示评估顺序）时，优先级决定先进行哪些操作。例如，对于运算符*op1*和*op2*，以及表达式*x op1
    y op2 z*，评估顺序由运算符的优先级决定。如果*op1*的优先级高于*op2*，则表达式按（*x op1 y*） *op2 z*的顺序评估。如果*op2*的优先级高于*op1*，则表达式按*x
    op1*（*y op2 z*）的顺序评估。如果两个运算符具有相同的优先级，则结合性规则控制评估顺序（另见*结合性*）。
- en: precision
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 精度
- en: The number of digits or bits maintained in a computation.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算中保持的数字或位数。
- en: programming in the large
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 大规模编程
- en: Using processes, methodologies, and tools to handle the development of large
    software systems.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 使用过程、方法论和工具来处理大型软件系统的开发。
- en: prologue
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 序言
- en: 'The standard entry sequence to a procedure, typically consisting of these statements:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 标准的过程入口序列，通常包含以下语句：
- en: '[PRE1]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: proper subset
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 真子集
- en: A set whose elements are all contained within another set, and the two sets
    are not equal.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含在另一个集合内的集合，且这两个集合不相等。
- en: proper superset
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 真超集
- en: A set that contains all the elements of another set, and the two sets are not
    equal.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含另一个集合所有元素的集合，且这两个集合不相等。
- en: Q
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q
- en: qword
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 字长
- en: Quad word (four 16-bit values, forming a 64-bit value).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 四字（四个16位值，形成一个64位值）。
- en: R
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: R
- en: range (of a function)
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的值域
- en: The set of all possible output values a function produces.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 一个函数生成的所有可能输出值的集合。
- en: record
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 记录
- en: See *struct*.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 见*结构体*。
- en: row-major ordering
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 行主序排列
- en: A function for arranging multidimensional arrays in linear memory by storing
    elements of each row in contiguous memory locations and then placing each row,
    one after the other, in memory.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 一个用于将多维数组排列到线性内存中的函数，方法是将每行的元素存储在连续的内存位置中，然后将每行按顺序放置在内存中。
- en: S
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: S
- en: saturation
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 饱和
- en: The process of converting a larger (bit-sized) value to a smaller one by clipping
    (that is, forcing the maximum- or minimum-sized value if the original value is
    too large to fit in the smaller result).
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 将较大（位大小）值转换为较小值的过程，通过剪裁（即如果原始值过大以适应较小的结果，则强制为最大值或最小值）。
- en: scalar data type
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 标量数据类型
- en: A primitive, indivisible data type (for example, an integer or a floating-point
    value) that cannot be broken into any smaller parts (other than individual bits).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 一种原始的、不可分割的数据类型（例如整数或浮点值），不能被拆分成任何更小的部分（除了单独的位）。
- en: scope
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 作用域
- en: The scope of an identifier determines where that identifier is visible (accessible)
    in the source file during compilation. In most HLLs, the scope of a procedure
    local variable is the body of that procedure; the identifier is inaccessible outside
    that procedure.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 标识符的作用域决定了在编译期间源文件中该标识符的可见（可访问）范围。在大多数高级语言中，过程局部变量的作用域是该过程的主体；标识符在该过程外部不可访问。
- en: sign contraction
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 符号压缩
- en: The process of converting a larger signed value to a smaller signed value.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 将较大符号值转换为较小符号值的过程。
- en: significant digits
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 有效数字
- en: The (number of) digits whose values are maintained during a calculation.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算过程中保持其值的数字位数。
- en: SIMD
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: SIMD
- en: See *single-instruction, multiple-data instructions*.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 见*单指令多数据指令*。
- en: single-instruction, multiple-data instructions
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 单指令多数据指令
- en: Specialized machine instructions that operate on two or more pieces of data
    simultaneously. Provides higher-performance operations for certain multimedia
    and other applications.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 专用机器指令，能够同时操作两个或多个数据单元。为某些多媒体和其他应用提供更高性能的操作。
- en: SISD
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: SISD
- en: Single instruction, single data.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 单指令单数据。
- en: snippets
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段
- en: Small pieces of code that demonstrate a concept.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 演示概念的小段代码。
- en: SSE
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: SSE
- en: Streaming SIMD Extensions.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 流式SIMD扩展。
- en: state machine
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 状态机
- en: Programming logic that maintains a history of prior execution via a *state*
    maintained by the program. The state could be maintained in variables or in the
    current execution location of the state machine.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 程序逻辑通过程序维护的*状态*来保持先前执行的历史。该状态可以保存在变量中，或者保存在状态机的当前执行位置中。
- en: static variables
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 静态变量
- en: Variables whose lifetime is the execution time of the whole program; typically,
    you declare static variables in the `.data`, `.data?`, or `.const` section of
    an assembly language program.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 变量的生命周期是整个程序的执行时间；通常，在汇编语言程序的`.data`、`.data?`或`.const`部分声明静态变量。
- en: strength-reduction optimizations
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 强度缩减优化
- en: Using a less expensive operation to compute the same result as a more expensive
    operation.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 使用较便宜的操作来计算与更昂贵操作相同的结果。
- en: string descriptor
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串描述符
- en: A data structure that provides information about string data. Typically, a string
    descriptor contains a pointer to the actual string data, the number of characters
    in the string (its length), and possibly the string type or encoding (such as
    ASCII, UTF-8, or information describing other encoding).
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 提供关于字符串数据的信息的数据结构。通常，字符串描述符包含指向实际字符串数据的指针、字符串中的字符数（即长度），以及可能的字符串类型或编码（如ASCII、UTF-8，或描述其他编码的信息）。
- en: struct
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 结构体
- en: A composite data structure composed of a collection of heterogeneous (different
    typed) objects.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 由一组异质（不同类型）对象组成的复合数据结构。
- en: system bus
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 系统总线
- en: A collection of electronic signals comprising the address, data, and control
    buses.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 包含地址、数据和控制总线的电子信号集合。
- en: T
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: T
- en: timestamp
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳
- en: A numeric (usually time-based) value associated with an event in the system.
    Timestamps are monotonically increasing; that is, if two events have timestamps
    associated with them, the later event will have a larger timestamp value.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 与系统中某个事件相关联的数值（通常是基于时间的）。时间戳是单调递增的；也就是说，如果两个事件有时间戳，它们的时间戳值较大的事件会在较晚的时间发生。
- en: TOS
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 栈顶
- en: Top of stack.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 栈顶。
- en: trampoline
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 跳板
- en: A fixed point in the code where a program can jump (or call) to transfer to
    another point in the code that is outside the normal range of a `jmp` or `call`
    instruction.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 代码中的一个固定点，程序可以跳转（或调用）到这个点，转移到代码的另一个位置，超出了`jmp`或`call`指令的正常范围。
- en: tricky programming
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂的编程
- en: Programming constructs that use non-obvious results of a computation.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 使用计算结果中的非明显结果的编程结构。
- en: U
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: U
- en: unordered comparisons
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 无序比较
- en: Comparisons between two values, where at least one of the values is a NaN.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 比较两个值，其中至少有一个值是NaN。
- en: unraveling loops
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 展开循环
- en: Pulling the body out of a loop and expanding it in place several times (once
    for each loop iteration) to avoid the overhead of loop control at runtime.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 将函数体从循环中提取并多次展开（每次展开对应一次循环迭代），以避免在运行时产生循环控制的开销。
- en: URL
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: URL
- en: Uniform resource locator (web address).
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 统一资源定位符（网页地址）。
- en: V
  id: totrans-268
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: V
- en: variant type
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 变体类型
- en: A data type that can change dynamically during program execution (that is, it
    is a *varying* type).
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 一种在程序执行期间可以动态变化的数据类型（即，它是一个*可变*类型）。
- en: vector instructions
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 向量指令
- en: Instructions that operate on multiple pieces of data simultaneously (SIMD instructions).
    Specifically, an array of two or more data values.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 对多个数据项同时操作的指令（SIMD指令）。具体来说，是两个或更多数据值的数组。
- en: vertical addition or subtraction
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 垂直加法或减法
- en: Adding or subtracting corresponding lanes in two XMM or YMM registers. Also
    see *horizontal addition* *or* *subtraction*.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 对两个XMM或YMM寄存器中的对应数据进行加法或减法运算。另见*水平加法* *或* *减法*。
- en: W
  id: totrans-275
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: W
- en: whitespace characters
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 空白字符
- en: Characters that reserve space on a display but don’t otherwise have a printable
    glyph (such as the space and tab characters).
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 在显示器上占位但没有可打印字符的字符（如空格和制表符）。
- en: word
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 字
- en: A 16-bit value.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 16位值。
- en: wrapper code
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 包装代码
- en: Code that is written to change the behavior of a function call without directly
    modifying that function (such as changing where the caller passes parameters to
    the underlying function). Wrapper code is also known as a *facade*.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 一种改变函数调用行为的代码，而不直接修改该函数（例如改变调用者将参数传递给底层函数的位置）。包装代码也被称为*外观模式*。
