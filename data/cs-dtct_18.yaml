- en: —19—
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: —19—
- en: Binary Search Trees for Suspects
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 《可疑者的二叉搜索树》
- en: Frank limped back into his office to find Socks waiting. The young wizard sat
    in Frank’s chair, spinning idly. Frank glared until Socks realized his mistake.
    He mumbled an apology and jumped out of the chair.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Frank一瘸一拐地回到办公室，看到Socks在等着。他发现年轻的巫师坐在Frank的椅子上，懒散地转着椅子。Frank怒视着他，直到Socks意识到自己的错误。他低声道了个歉，跳下了椅子。
- en: “What did you find?” Frank asked.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: “你找到什么了吗？”Frank问道。
- en: Socks shrugged. “Nothing useful.”
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Socks耸了耸肩。“没什么有用的。”
- en: “Nothing?” Frank prompted.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: “没有吗？”Frank催促道。
- en: “None of the wizards had heard of any new leagues,” Socks added quickly. “The
    last wizarding league formed was the League of Magical Confectioners. They formed
    last year in response to the influx of subpar mints. Do you remember those grainy
    tablets restaurants served? They tasted like mint for the first few minutes but
    left an aftertaste of pine needles for the next six hours. It was like they were
    meant to be a prank. The League of Magical Confectioners fixed the mint situation,
    and then branched out into chocolates and toffees. The league now has six candy
    shops and four carts—”
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: “没有一个巫师听说过任何新的联盟，”Socks快速补充道。“上一个成立的巫师联盟是‘魔法糖果商联盟’，他们是在去年为了解决劣质薄荷糖的涌入而成立的。你还记得那些餐厅提供的粗糙薄荷糖吗？最开始它们尝起来像薄荷，但过了几分钟后，嘴里却留下了松针的后味，持续六个小时。就像是在开玩笑。‘魔法糖果商联盟’解决了薄荷糖问题，接着又拓展到了巧克力和太妃糖。现在联盟里有六家糖果店和四辆小推车——”
- en: “Nothing else?” Frank interrupted.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: “没有其他的吗？”Frank打断道。
- en: Socks shook his head. “I also asked about clubs and associations,” he offered.
    “The only new one was the Babbageville Wizards Bowling Association, and they lasted
    less than a month. Apparently there just aren’t that many wizards in Babbageville
    who like to bowl.”
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Socks摇了摇头。“我还问了俱乐部和协会的事情，”他提供道，“唯一的新情况是‘巴贝奇维尔巫师保龄球协会’，不过他们只存在了不到一个月。显然，巴贝奇维尔的巫师没几个喜欢打保龄球的。”
- en: Frank sighed. He hadn’t expected much from Socks’s investigation, but the complete
    lack of news still managed to disappoint him.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Frank叹了口气。他并没有指望从Socks的调查中得到什么好消息，但完全没有进展还是让他感到失望。
- en: “How about you?” Socks asked.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: “那你呢？”Socks问道。
- en: “Yeah,” replied Frank. “I got a new lead.”
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: “是的，”Frank回答，“我有了一个新线索。”
- en: “Really? What is it?”
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: “真的吗？那是什么？”
- en: Before Frank could answer, Officer Notation banged noisily into the office carrying
    an absurdly large stack of books. She made it to Frank’s desk and dropped the
    stack. The desk sagged under the weight.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 就在Frank准备回答时，Notation警官大声砸门进来，手里抱着一大摞书。她走到Frank的桌前，把书堆放下去。桌子在重压下下沉了。
- en: “All the transfer and assignment ledgers for the past year,” she panted. “Now
    can you tell me why I dragged these here?”
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: “过去一年的所有转账和分配账目，”她气喘吁吁地说，“现在，你能告诉我为什么我要把这些带来吗？”
- en: “We need to find a transfer,” said Frank.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: “我们需要找到一个转账，”Frank说道。
- en: “I figured that,” said Notation. “But if you’d told me which transfer, I could
    have just looked it up there.”
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: “我猜到了，”Notation说，“不过如果你告诉我是哪一笔转账，我可以直接查出来。”
- en: “I don’t know which transfer,” explained Frank. It was half true. Even if he
    had known, he would have still asked Notation to bring up all the records. He
    needed to be there during the search. He needed to make sure no one was missed.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: “我不知道是哪一笔转账，”Frank解释道。这有一半是真的。即使他知道，他还是会要求Notation带来所有记录。他需要在搜索过程中在场，确保没有遗漏任何人。
- en: “Okay,” said Notation. “What are we looking for?”
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: “好，”Notation说，“我们在找什么？”
- en: “We’ll start with any suspicious transfer between 50 and 70 days ago,” said
    Frank. Those were the approximate dates of the pages that had been torn from the
    ledger in the prison. “It’s a range search. We want to find all the transfers
    in a range of dates.”
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: “我们从50到70天前的任何可疑转账开始，”Frank说。那些大约是监狱账本中被撕掉的页面的日期。“这是一个范围搜索。我们想找到所有在这一时间段内的转账。”
- en: Notation groaned. “These requests are sorted by the original location of the
    requesting officer and then by officer name. They aren’t indexed by the date of
    the request. We’ll have to go through every request. It’ll take hours.”
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Notation呻吟道。“这些请求是按照申请警官的原始位置排序的，然后按警官名字排序。它们没有按请求日期索引。我们必须逐个检查所有请求，得花好几个小时。”
- en: “No, it won’t,” Frank assured her. “Because we’re going to use magic.”
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: “不会的，”Frank向她保证，“因为我们会用魔法。”
- en: Socks looked up in surprise. “Magic?” he asked. “I don’t know any range search
    spells.”
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Socks惊讶地抬起头。“魔法？”他问，“我不知道什么是范围搜索法术。”
- en: “You know binary search trees,” responded Frank.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: “你知道二叉搜索树，”Frank回答。
- en: “I’m an expert on binary search trees,” agreed Socks, “but I don’t see how that
    helps.”
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: “我是二叉搜索树的专家，”Socks同意道，“但我不明白这有什么帮助。”
- en: “We can build a binary search tree of transfer requests, with each node’s value
    equal to how long ago the transfer occurred. Then we can do a range search on
    the tree.”
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: “我们可以构建一个转账请求的二叉搜索树，每个节点的值等于转账发生的时间（从现在算起）。然后我们可以在树上进行范围查询。”
- en: “Range search on the tree?” asked Socks.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: “在树上做范围查询？”Socks问道。
- en: “Why bother with a tree?” asked Notation. “If we’re just doing one search, it’ll
    take longer to build the tree than to scan through the data.”
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: “为什么要使用树？”Notation问道。“如果我们只是做一次查询，建树的时间可能比扫描数据还要长。”
- en: Frank shrugged. “My guess is that we’ll ultimately want to do more than one
    search. If Socks builds the tree with magic, we can search it a bunch of times.”
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Frank耸了耸肩。“我猜最终我们会进行不止一次搜索。如果Socks用魔法构建了这棵树，我们可以多次搜索它。”
- en: “But I don’t know how to do a range search,” Socks protested.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: “但我不知道怎么做范围查询，”Socks抗议道。
- en: “Build the tree and I’ll show you.”
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: “把树建起来，我就给你看看。”
- en: “Okay,” said Socks. “This’ll take a little while; I’m only used to working with
    buttons. Real, physical buttons. I’ve never had to organize facts before. Facts
    seem like they’ll be squishy. I’ll need to modify the spell.”
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: “好的，”Socks说。“这需要一点时间；我只习惯于操作按钮，真正的物理按钮。我以前从未需要组织事实。事实看起来好像会很不稳定。我需要修改这个咒语。”
- en: As Socks hunched over Frank’s desk and scrawled out a modified spell on a piece
    of parchment, Notation confronted Frank. “What’s going on?” she asked.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当Socks弯腰伏在Frank的桌子上，在一张羊皮纸上写下修改后的咒语时，Notation面对面地向Frank询问。“发生了什么？”她问道。
- en: “Nothing,” Frank said.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: “没什么，”Frank说道。
- en: “Oh, come off it,” Notation snapped. “Ever since the prison, you’ve been holding
    something back. Why are we looking at transfer requests? How come you never mentioned
    them before? What did you find?”
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: “哦，别装了，”Notation厉声道。“从监狱出来之后，你一直隐瞒着什么东西。为什么我们要看转账请求？你怎么之前从没提到过它们？你发现了什么？”
- en: “As I said, it’s a hunch.”
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: “就像我说的，这是个直觉。”
- en: “I don’t buy it. You aren’t telling me something.”
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: “我不信。你一定瞒着我什么。”
- en: Frank didn’t answer.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Frank没有回答。
- en: '![image](../images/f0154-01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0154-01.jpg)'
- en: “Got it,” called Socks. “I think so, at least. We’ll see in a minute.”
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: “明白了，”Socks喊道。“至少我想是的。我们马上就知道了。”
- en: Socks turned to the stack of ledgers and began muttering an incantation. He
    waved his arms dramatically but entirely unnecessarily over the paper. With a
    flash, a large binary search tree appeared in the air with each node in the tree
    representing the number of days since that transfer date. The nodes hung in the
    air, connected by electric blue lines.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Socks转向那堆账本，开始低声念起咒语。他夸张地挥舞着手臂，完全没有必要地在纸上挥舞。随着一道闪光，一棵巨大的二叉搜索树出现在空中，树中的每个节点代表着自那次转账日期以来的天数。节点悬浮在空中，通过电蓝色的线条连接。
- en: '![image](../images/f0154-02.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0154-02.jpg)'
- en: “Now we range search,” said Frank.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: “现在我们进行范围查询，”Frank说道。
- en: “I told you, I don’t—” started Socks, but Frank waved him off.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: “我告诉过你，我不——”Socks开始说，但Frank挥了挥手示意他停止。
- en: “We’ll use a modified depth-first search,” Frank explained. “Start at the top
    node, the root node, and explore down the tree.”
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: “我们将使用修改版的深度优先搜索，”Frank解释道。“从最上面的节点开始，根节点，沿着树向下探索。”
- en: “Explore how?” asked Socks.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: “怎么探索？”Socks问道。
- en: “At each node, you follow three steps. First, you check if the node itself falls
    into the range. If it does, like 55 days here, then we’ll save it to our list
    of results. Otherwise, we ignore it.”
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: “在每个节点，您需要遵循三个步骤。首先，检查节点本身是否落在范围内。如果是，比如说这里的55天，那么我们会将其保存到结果列表中。否则，我们忽略它。”
- en: “Hold on a second,” said Socks. “I’ll make the nodes in our list glow a different
    color. What about dark green?”
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: “等一下，”Socks说。“我会让我们列表中的节点发出不同的颜色光。深绿色怎么样？”
- en: '![image](../images/f0155-01.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0155-01.jpg)'
- en: “Sure. Whatever,” Frank replied. “After we check the current node, we check
    whether we need to explore either child node. We recursively explore the left
    and right subtrees if, and only if, they could have nodes in the correct range.”
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: “当然，随便，”Frank回答道。“在检查当前节点之后，我们检查是否需要探索任何一个子节点。只有当它们可能包含在正确范围内的节点时，我们才会递归地探索左子树和右子树。”
- en: “Recursively explore?” asked Socks.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: “递归探索？”Socks问道。
- en: Frank waited for Notation to jump in with one of her formal definitions, but
    she remained stubbornly silent. He sighed and explained, “*Recursively* just means
    we apply the same algorithm to subproblems. In this case, we apply the same search
    to each of the child nodes. We treat them the same way we do the root node.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Frank等待Notation插入她的正式定义，但她坚持沉默。Frank叹了口气，解释道，“*递归*意味着我们将相同的算法应用于子问题。在这种情况下，我们对每个子节点应用相同的搜索方式。我们对它们的处理方式和根节点一样。”
- en: “Just check whether we need to explore the children, and, if so, apply the same
    steps. We’ll use a simple test and compare the *current* node’s value with our
    range. If the current node’s value is *less* than the *lower* end of the range,
    we know everything in the left subtree would fall below our range and we can skip
    that subtree. Alternatively, if the current node’s value is *greater* than the
    *lower* end of our range, we will need to continue our search on the left child.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: “只需检查是否需要探索子节点，如果需要，按照相同的步骤进行。我们会用一个简单的测试，将*当前*节点的值与我们的范围进行比较。如果当前节点的值*小于*范围的*下限*，那么我们知道左子树中的所有内容都会低于我们的范围，因此可以跳过左子树。反之，如果当前节点的值*大于*范围的*下限*，我们就需要继续在左子节点上进行搜索。”
- en: “The same logic applies to the right subtree. If the current node’s value is
    *greater* than the *higher* end of our range, we can skip the right subtree. Otherwise,
    we repeat our search on the right child.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: “右子树也适用相同的逻辑。如果当前节点的值*大于*我们范围的*上限*，那么我们可以跳过右子树。否则，我们会继续在右子节点上进行搜索。”
- en: “In this case, our range is 50 to 70, and as the left child can have values
    up to 55, nodes in that subtree could fall within our range, so we need to explore
    the left child. The right child can have values above 55, which also overlaps
    our range, so we need to explore that as well. Start with the left child.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: “在这种情况下，我们的范围是50到70，而左子节点的值最多可以到55，那个子树中的节点可能会落在我们的范围内，所以我们需要探索左子节点。右子节点的值可以超过55，这也与我们的范围重叠，因此我们也需要探索右子节点。从左子节点开始。”
- en: “Now we have 22 days,” continued Frank. “We don’t put it on our list. And because
    everything in the left subtree has to be less than 22, we don’t need to explore
    down that path either.”
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: “现在我们有22天的时间，”Frank继续说道，“我们不会把它列入我们的列表。因为左子树中的所有内容都必须小于22，所以我们也不需要沿着这条路径继续探索。”
- en: '![image](../images/f0156-01.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0156-01.jpg)'
- en: “We call this *pruning* the exploration,” added Notation. “Because it’s like
    cutting off the branch of a tree.”
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: “我们称这为*修剪*探索，”Notation补充道。“因为它就像是剪掉树枝。”
- en: When Frank looked over, she scowled as she remembered she wasn’t talking to
    him and fell silent.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当Frank转过头看时，她皱起了眉头，意识到自己并不是在和他交谈，便沉默了下来。
- en: “So we only explore the right child,” said Frank.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: “所以我们只探索右子节点，”Frank说道。
- en: “Recursively!” added Socks with all too much glee.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: “递归地！”Socks高兴地补充道。
- en: “Yes, recursively,” agreed Frank dryly. “Now we get 38\. Again, it doesn’t go
    on the list, and we can skip the left branch.”
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: “是的，递归地，”Frank干巴巴地同意道。“现在我们得到38。它不会被加入到列表中，我们可以跳过左分支。”
- en: '![image](../images/f0157-01.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0157-01.jpg)'
- en: “But we need to recursively explore the right branch,” said Socks, who was thoroughly
    enjoying the new algorithm.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: “但是我们需要递归地探索右分支，”Socks说道，他完全享受着这个新算法。
- en: Frank nodded.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Frank点了点头。
- en: '![image](../images/f0157-02.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0157-02.jpg)'
- en: The next node had no children. It was a dead end.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个节点没有子节点。这是一个死胡同。
- en: “Now what?” asked Socks.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: “接下来怎么办？”Socks问道。
- en: “Same thing as in a depth-first search,” said Frank. “We backtrack and take
    unexplored paths until we’ve searched the whole tree. In this case, we’ve already
    pruned a lot of paths, so we need to backtrack to the root.”
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: “和深度优先搜索中的情况一样，”Frank说道，“我们回溯并探索未被探索的路径，直到我们搜索完整个树。在这个案例中，我们已经修剪了很多路径，所以我们需要回溯到根节点。”
- en: The search progressed down the root’s right subtree. New matches were added
    to the result list, incompatible paths were pruned, and compatible paths were
    explored recursively.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索继续沿着根节点的右子树进行。新的匹配项被添加到结果列表中，不兼容的路径被修剪，兼容的路径则递归地进行探索。
- en: '![image](../images/f0158-01.jpg)![image](../images/f0159-01.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0158-01.jpg)![image](../images/f0159-01.jpg)'
- en: By the end, they had identified a handful of transfers that fell within the
    target range. Frank studied the list intently, looking for anything suspicious.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 到最后，他们已经确定了几个符合目标范围的传输。Frank专心研究着列表，寻找任何可疑的内容。
- en: “Nothing,” he growled in disbelief. “There’s nothing here.”
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: “什么都没有，”他不敢相信地低声咆哮。“这里什么都没有。”
- en: '**POLICE ALGORITHMS 101: BINARY SEARCH TREES**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**警察算法101：二叉搜索树**'
- en: '***Excerpt from Professor Drecker’s Lecture***'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '***来自Drecker教授讲座的摘录***'
- en: 'The range search algorithm on a binary search tree is similar to the search
    for a single value. The algorithm starts at the top node and recursively explores
    down the tree. At each node, it makes decisions based on three questions:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在二叉搜索树上的范围搜索算法类似于搜索单一值。算法从顶节点开始，递归地向下探索树。在每个节点上，它根据三个问题做出决策：
- en: '**Should this node be added to the results?** The current value should be added
    to the results if, and only if, it falls within the range.'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**这个节点应该被添加到结果中吗？** 当前值应该被添加到结果中，**前提是**它在范围内。'
- en: '**Should the left subtree be explored?** The algorithm should recursively explore
    the left subtree if there is a left child and the value of the current node is
    *greater than* the smallest value in the range. In that case, there *could* be
    a node in the left subtree that falls within the range.'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**应该探索左子树吗？** 如果当前节点有左子节点且当前节点的值*大于*范围内的最小值，算法应该递归地探索左子树。在这种情况下，左子树中*可能*有一个节点在范围内。'
- en: '**Should the right subtree be explored?** The algorithm should recursively
    explore the right subtree if there is a right child and the value of the current
    node is *less than* the largest value in the range. In that case, there *could*
    be a node in the right subtree that falls within the range.'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**应该探索右子树吗？** 如果当前节点有右子节点且当前节点的值*小于*范围内的最大值，算法应该递归地探索右子树。在这种情况下，右子树中*可能*有一个节点在范围内。'
- en: The advantage of using a binary search tree for range search is that you may
    be able to save computation by pruning out large amounts of the search space.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 使用二叉搜索树进行范围搜索的优势在于，通过剪枝大量的搜索空间，你可能能够节省计算量。
- en: 'Consider the following binary tree:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下二叉树：
- en: '![image](../images/f0161-01.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0161-01.jpg)'
- en: 'If you are searching for all values within the range [8, 20], you need to visit
    and evaluate only 7 of the 25 nodes (visited nodes are shaded):'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在搜索范围 [8, 20] 内的所有值，你只需要访问并评估25个节点中的7个节点（已访问的节点用阴影标出）：
- en: '![image](../images/f0161-02.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0161-02.jpg)'
- en: 'Similarly, if you are searching within the range [70, 80], you need to visit
    and evaluate only 6 of the 25 nodes:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，如果你在搜索范围 [70, 80] 内的值，你只需要访问并评估25个节点中的6个节点：
- en: '![image](../images/f0161-03.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0161-03.jpg)'
- en: It’s important to note that visiting a node doesn’t necessarily mean that it
    will appear in the result list. Both of the example searches still have to visit
    nodes that fall outside the range, because those nodes’ subtrees could contain
    values within the range.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，访问一个节点并不一定意味着它会出现在结果列表中。两个示例搜索仍然需要访问范围外的节点，因为这些节点的子树可能包含范围内的值。
- en: As with a search for a single value, using a binary search tree for range search
    is efficient only if you’re conducting multiple searches. Constructing a binary
    search tree is more expensive than doing a linear scan through the data. However,
    the cost of building a tree can be spread out over many searches to make the average
    cost per search lower.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 与单一值搜索一样，只有在你进行多个搜索时，使用二叉搜索树进行范围搜索才高效。构建二叉搜索树的成本比进行线性扫描数据更高。然而，构建树的成本可以在多次搜索中分摊，从而降低每次搜索的平均成本。
