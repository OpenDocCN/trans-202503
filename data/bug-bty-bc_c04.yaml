- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Environmental Setup and Traffic Interception
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 环境设置与流量拦截
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: You’ll save yourself a lot of time and headache if you hunt for bugs within
    a well-oiled lab. In this chapter, I’ll guide you, step-by-step, through setting
    up your hacking environment. You’ll configure your browser to work with Burp Suite,
    a web proxy that lets you view and alter HTTP requests and responses sent between
    your browser and web servers. You’ll learn to use Burp’s features to intercept
    web traffic, send automated and repeated requests, decode encoded content, and
    compare requests. I will also talk about how to take good bug bounty notes.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在一个精心设计的实验室中寻找漏洞，您将节省大量的时间和精力。在本章中，我将一步步指导您设置黑客攻击环境。您将配置浏览器与 Burp Suite 配合使用，Burp
    Suite 是一个 web 代理工具，允许您查看和修改浏览器与 web 服务器之间发送的 HTTP 请求和响应。您将学习如何使用 Burp 的功能拦截网络流量、发送自动化和重复的请求、解码编码内容，并对比请求。我还会讲解如何做好漏洞赏金笔记。
- en: This chapter focuses on setting up an environment for web hacking only. If your
    goal is to attack mobile apps, you’ll need additional setup and tools. We’ll cover
    these in Chapter 23, which discusses mobile hacking.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章仅关注设置 web 攻击环境。如果您的目标是攻击移动应用程序，您将需要额外的设置和工具。我们将在第 23 章中介绍这些内容，届时将讨论移动端黑客攻击。
- en: Choosing an Operating System
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择操作系统
- en: Before we go on, the first thing you need to do is to choose an operating system.
    Your operating system will limit the hacking tools available to you. I recommend
    using a Unix-based system, like Kali Linux or macOS, because many open source
    hacking tools are written for these systems. *Kali Linux* is a Linux distribution
    designed for digital forensics and hacking. It includes many useful bug bounty
    tools, such as Burp Suite, recon tools like DirBuster and Gobuster, and fuzzers
    like Wfuzz. You can download Kali Linux from [https://www.kali.org/downloads/](https://www.kali.org/downloads/).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，您需要做的第一件事是选择一个操作系统。您的操作系统将限制您可用的黑客工具。我建议使用基于 Unix 的系统，如 Kali Linux 或 macOS，因为许多开源黑客工具都是为这些系统编写的。*Kali
    Linux* 是一款为数字取证和黑客攻击设计的 Linux 发行版。它包括许多有用的漏洞赏金工具，如 Burp Suite、DirBuster 和 Gobuster
    等侦察工具，以及 Wfuzz 等模糊测试工具。您可以从 [https://www.kali.org/downloads/](https://www.kali.org/downloads/)
    下载 Kali Linux。
- en: If these options are not available to you, feel free to use other operating
    systems for hacking. Just keep in mind that you might have to learn to use different
    tools than the ones mentioned in this book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这些选项无法使用，您可以随意使用其他操作系统进行黑客攻击。只需记住，您可能需要学习使用与本书中提到的工具不同的工具。
- en: 'Setting Up the Essentials: A Browser and a Proxy'
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置基本工具：浏览器和代理
- en: 'Next, you need a web browser and a web proxy. You’ll use the browser to examine
    the features of a target application. I recommend using Firefox, since it’s the
    simplest to set up with a proxy. You can also use two different browsers when
    hacking: one for browsing the target, and one for researching vulnerabilities
    on the internet. This way, you can easily isolate the traffic of your target application
    for further examination.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要一个 web 浏览器和一个 web 代理。您将使用浏览器来检查目标应用程序的功能。我推荐使用 Firefox，因为它是与代理配合使用时最简单的浏览器。您还可以在黑客攻击时使用两个不同的浏览器：一个用于浏览目标，另一个用于在互联网上研究漏洞。这样，您可以轻松地隔离目标应用程序的流量，以便进一步检查。
- en: 'A *proxy* is software that sits between a client and a server; in this case,
    it sits between your browser and the web servers you interact with. It intercepts
    your requests before passing them to the server, and intercepts the server’s responses
    before passing them to you, like this:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*代理* 是位于客户端和服务器之间的软件；在这种情况下，它位于您的浏览器和您交互的 web 服务器之间。它在将您的请求传递给服务器之前拦截请求，并在将服务器的响应传递给您之前拦截响应，像这样：'
- en: Browser <--------------> Proxy <--------------> Server
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览器 <--------------> 代理 <--------------> 服务器
- en: Using a proxy is essential in bug bounty hunting. Proxies enable you to view
    and modify the requests going out to the server and the responses coming into
    your browser, as I’ll explain later in this chapter. Without a proxy, the browser
    and the server would exchange messages automatically, without your knowledge,
    and the only thing you would see is the final resulting web page. A proxy will
    instead capture all messages before they travel to their intended recipient.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在漏洞赏金猎取中，使用代理是至关重要的。代理允许您查看和修改发送到服务器的请求以及从服务器返回到浏览器的响应，正如我在本章后面所解释的那样。没有代理，浏览器和服务器将自动交换信息，而您对此一无所知，您只能看到最终的网页结果。代理则会捕获所有信息，确保在信息传递给预定的接收者之前先被捕捉到。
- en: Proxies therefore allow you to perform recon by examining and analyzing the
    traffic going to and from the server. They also let you examine interesting requests
    to look for potential vulnerabilities and exploit these vulnerabilities by tampering
    with requests.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，代理可以通过检查和分析往返服务器的流量来执行侦察。它们还可以让您检查有趣的请求，寻找潜在的漏洞，并通过篡改请求来利用这些漏洞。
- en: 'For example, let’s say that you visit your email inbox and intercept the request
    that will return your email with a proxy. It’s a GET request to a URL that contains
    your user ID. You also notice that a cookie with your user ID is included in the
    request:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设您访问了您的电子邮件收件箱，并拦截了通过代理返回您的电子邮件的请求。这是一个 GET 请求，URL 中包含了您的用户 ID。您还会注意到请求中包含了一个带有用户
    ID 的 Cookie：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this case, you can try to change the `USER_ID` in the URL and the `Cookie`
    header to another user’s ID and see if you can access another user’s email.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，您可以尝试将 URL 中的 `USER_ID` 和 `Cookie` 头部中的用户 ID 改为另一个用户的 ID，看看是否能够访问另一个用户的电子邮件。
- en: 'Two proxies are particularly popular with bug bounty hunters: Burp Suite and
    the Zed Attack Proxy (ZAP). This section will show you how to set up Burp, but
    you’re free to use ZAP instead.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 两种代理工具在漏洞悬赏猎人中尤其受欢迎：Burp Suite 和 Zed Attack Proxy（ZAP）。本节将向您展示如何设置 Burp，但您也可以选择使用
    ZAP。
- en: Opening the Embedded Browser
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打开内置浏览器
- en: Both Burp Suite and ZAP come with embedded browsers. If you choose to use these
    embedded browsers for testing, you can skip the next two steps. To use Burp Suite’s
    embedded browser, click **Open browser** in Burp’s Proxy tab after it’s launched
    ([Figure 4-1](#figure4-1)). This embedded browser’s traffic will be automatically
    routed through Burp without any additional setup.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite 和 ZAP 都带有内置浏览器。如果您选择使用这些内置浏览器进行测试，您可以跳过接下来的两个步骤。要使用 Burp Suite 的内置浏览器，请在启动后点击
    Burp 的 Proxy 选项卡中的**Open browser**（[图 4-1](#figure4-1)）。这个内置浏览器的流量将自动通过 Burp 路由，无需额外设置。
- en: '![f04001](image_fi/501546c04/f04001.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![f04001](image_fi/501546c04/f04001.png)'
- en: 'Figure 4-1: You can use Burp’s embedded browser instead of your own external
    browser for testing.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-1：您可以使用 Burp 的内置浏览器进行测试，而不是使用您自己的外部浏览器。
- en: Setting Up Firefox
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置 Firefox
- en: Burp’s embedded browser offers a convenient way to start bug hunting with minimal
    setup. However, if you are like me and prefer to test with a browser you are used
    to, you can set up Burp to work with your browser. Let’s set up Burp to work with
    Firefox.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Burp 的内置浏览器提供了一种方便的方式，能够通过最小的设置开始漏洞猎捕。然而，如果您像我一样，喜欢使用自己习惯的浏览器进行测试，您可以设置 Burp
    与您的浏览器一起使用。让我们设置 Burp 与 Firefox 一起使用。
- en: Start by downloading and installing your browser and proxy. You can download
    the Firefox browser from [https://www.mozilla.org/firefox/new/](https://www.mozilla.org/firefox/new/)
    and Burp Suite from [https://portswigger.net/burp/](https://portswigger.net/burp/).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 首先下载并安装您的浏览器和代理。您可以从 [https://www.mozilla.org/firefox/new/](https://www.mozilla.org/firefox/new/)
    下载 Firefox 浏览器，从 [https://portswigger.net/burp/](https://portswigger.net/burp/)
    下载 Burp Suite。
- en: 'Bug bounty hunters use one of two versions of Burp Suite: Professional or Community.
    You have to purchase a license to use Burp Suite Professional, while the Community
    version is free of charge. Burp Suite Pro includes a vulnerability scanner and
    other convenient features like the option to save a work session to resume later.
    It also offers a full version of the Burp intruder, while the Community version
    includes only a limited version. In this book, I cover how to use the Community
    version to hunt for bugs.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞悬赏猎人使用 Burp Suite 的两个版本之一：Professional 或 Community。使用 Burp Suite Professional
    需要购买许可证，而 Community 版本则是免费的。Burp Suite Pro 包含漏洞扫描器和其他便捷功能，例如保存工作会话以便稍后恢复。它还提供了
    Burp intruder 的完整版本，而 Community 版本仅包含有限版本。在本书中，我介绍了如何使用 Community 版本来进行漏洞猎捕。
- en: Now you have to configure your browser to route traffic through your proxy.
    This section teaches you how to configure Firefox to work with Burp Suite. If
    you’re using another browser-proxy combination, please look up their official
    documentation for tutorials instead.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您需要配置浏览器，使其通过代理路由流量。本节将教您如何配置 Firefox 以与 Burp Suite 配合使用。如果您使用的是其他浏览器-代理组合，请查阅它们的官方文档以获取教程。
- en: Launch Firefox. Then open the Connections Settings page by choosing **Preferences**▶**General**▶**Network
    Settings**. You can access the Preferences tab from the menu at Firefox’s top-right
    corner ([Figure 4-2](#figure4-2)).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 Firefox。然后通过选择 **Preferences**▶**General**▶**Network Settings** 打开连接设置页面。您可以从
    Firefox 右上角的菜单中访问 Preferences 选项卡（[图 4-2](#figure4-2)）。
- en: '![f04002](image_fi/501546c04/f04002.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![f04002](image_fi/501546c04/f04002.png)'
- en: 'Figure 4-2: You can find the Preferences option at the top-right corner of
    Firefox.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-2：你可以在 Firefox 的右上角找到首选项选项。
- en: The Connection Settings page should look like the one in [Figure 4-3](#figure4-3).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 连接设置页面应该与 [Figure 4-3](#figure4-3) 中的样子相似。
- en: Select **Manual proxy configuration** and enter the IP address **127.0.0.1**
    and port **8080** for all the protocol types. This will tell Firefox to use the
    service running on port 8080 on your machine as a proxy for all of its traffic.
    127.0.0.1 is the localhost IP address. It identifies your current computer, so
    you can use it to access the network services running on your machine. Since Burp
    runs on port 8080 by default, this setting tells Firefox to route all traffic
    through Burp. Click **OK** to finalize the setting. Now Firefox will route all
    traffic through Burp.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 **Manual proxy configuration** 并为所有协议类型输入 IP 地址 **127.0.0.1** 和端口 **8080**。这将告诉
    Firefox 使用你机器上端口 8080 上运行的服务作为所有流量的代理。127.0.0.1 是本地主机的 IP 地址，它标识你的当前计算机，因此你可以用它来访问你机器上运行的网络服务。由于
    Burp 默认运行在 8080 端口上，这个设置告诉 Firefox 将所有流量通过 Burp 路由。点击 **OK** 来完成设置。现在，Firefox
    会通过 Burp 路由所有流量。
- en: '![f04003](image_fi/501546c04/f04003.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![f04003](image_fi/501546c04/f04003.png)'
- en: 'Figure 4-3: Configure Firefox’s proxy settings on the Connection Settings page.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-3：在连接设置页面配置 Firefox 的代理设置。
- en: Setting Up Burp
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置 Burp
- en: After downloading Burp Suite, open it and click **Next**, then **Start Burp**.
    You should see a window like [Figure 4-4](#figure4-4).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 Burp Suite 后，打开它并点击 **Next**，然后点击 **Start Burp**。你应该会看到一个像 [Figure 4-4](#figure4-4)
    的窗口。
- en: '![f04004](image_fi/501546c04/f04004.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![f04004](image_fi/501546c04/f04004.png)'
- en: 'Figure 4-4: Burp Suite Community Edition startup window'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-4：Burp Suite Community Edition 启动窗口
- en: Now let’s configure Burp so it can work with HTTPS traffic. HTTPS protects your
    data’s privacy by encrypting your traffic, making sure only the two parties in
    a communication (your browser and the server) can decrypt it. This also means
    your Burp proxy won’t be able to intercept HTTPS traffic going to and from your
    browser. To work around this issue, you need to show Firefox that your Burp proxy
    is a trusted party by installing its certificate authority (CA) certificate.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们配置 Burp，使其能够与 HTTPS 流量一起工作。HTTPS 通过加密你的流量来保护数据的隐私，确保通信中的两方（你的浏览器和服务器）才能解密流量。这也意味着你的
    Burp 代理无法拦截往返浏览器的 HTTPS 流量。为了解决这个问题，你需要通过安装 Burp 的证书颁发机构（CA）证书，向 Firefox 显示你的
    Burp 代理是一个受信任的方。
- en: Let’s install Burp’s certificate on Firefox so you can work with HTTPS traffic.
    With Burp open and running, and your proxy settings set to 127.0.0.1:8080, go
    to *http://burp/* in your browser. You should see a Burp welcome page ([Figure
    4-5](#figure4-5)). Click **CA Certificate** at the top right to download the certificate
    file; then click **Save File** to save it in a safe location.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 Firefox 上安装 Burp 的证书，这样你就可以处理 HTTPS 流量了。打开并运行 Burp，并将你的代理设置为 127.0.0.1:8080，然后在浏览器中访问
    *http://burp/*。你应该会看到 Burp 的欢迎页面 ([Figure 4-5](#figure4-5))。点击右上角的 **CA Certificate**
    来下载证书文件，然后点击 **Save File** 将其保存在一个安全的位置。
- en: '![f04005](image_fi/501546c04/f04005.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![f04005](image_fi/501546c04/f04005.png)'
- en: 'Figure 4-5: Go to *http://burp/* to download Burp’s CA certificate.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-5：访问 *http://burp/* 以下载 Burp 的 CA 证书。
- en: Next, in Firefox, click **Preferences**▶**Privacy & Security**▶**Certificates**▶**View
    Certificates**▶**Authorities**. Click **Import** and select the file you just
    saved, and then click **Open**. Follow the dialog’s instructions to trust the
    certificate to identify websites ([Figure 4-6](#figure4-6)).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在 Firefox 中点击 **Preferences**▶**Privacy & Security**▶**Certificates**▶**View
    Certificates**▶**Authorities**。点击 **Import** 并选择你刚才保存的文件，然后点击 **Open**。按照对话框中的提示，信任该证书以识别网站
    ([Figure 4-6](#figure4-6))。
- en: '![f04006](image_fi/501546c04/f04006.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![f04006](image_fi/501546c04/f04006.png)'
- en: 'Figure 4-6: Select the ***Trust this CA to identify websites*** option in Firefox’s
    dialog.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-6：在 Firefox 的对话框中选择 ***Trust this CA to identify websites*** 选项。
- en: Restart Firefox. Now you should be all set to intercept both HTTP and HTTPS
    traffic.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 重启 Firefox。现在你应该可以拦截 HTTP 和 HTTPS 流量了。
- en: Let’s perform a test to make sure that Burp is working properly. Switch to the
    Proxy tab in Burp and turn on traffic interception by clicking **Intercept is
    off**. The button should now read Intercept is on ([Figure 4-7](#figure4-7)).
    This means you’re now intercepting traffic from Firefox or the embedded browser.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进行一次测试，确保 Burp 正常工作。切换到 Burp 的 Proxy 标签页，通过点击 **Intercept is off** 来开启流量拦截。按钮现在应该显示为
    Intercept is on ([Figure 4-7](#figure4-7))。这意味着你现在正在拦截来自 Firefox 或嵌入式浏览器的流量。
- en: '![f04007](image_fi/501546c04/f04007.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![f04007](image_fi/501546c04/f04007.png)'
- en: 'Figure 4-7: Intercept is on means that you’re now intercepting traffic.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-7：拦截开启意味着你现在正在拦截流量。
- en: 'Then open Firefox and visit [https://www.google.com/](https://www.google.com/).
    In Burp’s proxy, you should see the main window starting to populate with individual
    requests. The Forward button in Burp Proxy will send the current request to the
    designated server. Click **Forward** until you see the request with the hostname
    *www.google.com*. If you see this request, Burp is correctly intercepting Firefox’s
    traffic. It should begin like this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然后打开 Firefox 并访问 [https://www.google.com/](https://www.google.com/)。在 Burp 的代理中，你应该会看到主窗口开始填充各个请求。Burp
    代理中的 **Forward** 按钮将把当前请求发送到指定的服务器。点击 **Forward**，直到你看到带有主机名 *www.google.com*
    的请求。如果你看到这个请求，说明 Burp 正在正确地拦截 Firefox 的流量。它应该像这样开始：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Click **Forward** to send the request over to Google’s server. You should see
    Google’s home page appear in your Firefox window.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **Forward** 将请求发送到 Google 的服务器。你应该会看到 Google 的主页出现在你的 Firefox 窗口中。
- en: If you aren’t seeing requests in Burp’s window, you might not have installed
    Burp’s CA certificate properly. Follow the steps in this chapter to reinstall
    the certificate. In addition, check that you’ve set the correct proxy settings
    to 127.0.0.1:8080 in Firefox’s Connection Settings.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 Burp 的窗口中看不到请求，可能是你没有正确安装 Burp 的 CA 证书。请按照本章中的步骤重新安装证书。此外，检查你是否在 Firefox
    的连接设置中将代理设置为 127.0.0.1:8080。
- en: Using Burp
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Burp
- en: Burp Suite has a variety of useful features besides the web proxy. Burp Suite
    also includes an *intruder* for automating attacks, a *repeater* for manipulating
    individual requests, a *decoder* for decoding encoded content, and a *comparer*
    tool for comparing requests and responses. Of all Burp’s features, these are the
    most useful for bug bounty hunting, so we’ll explore them here.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite 除了 Web 代理外，还有许多有用的功能。Burp Suite 还包括一个 *intruder* 用于自动化攻击，一个 *repeater*
    用于操控单个请求，一个 *decoder* 用于解码编码内容，和一个 *comparer* 工具用于比较请求和响应。在 Burp 的所有功能中，这些对于漏洞奖励猎人来说是最有用的，所以我们将在这里探讨它们。
- en: The Proxy
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代理
- en: Let’s see how you can use the Burp *proxy* to examine requests, modify them,
    and forward them to Burp’s other modules. Open Burp and switch to the Proxy tab,
    and start exploring what it does! To begin intercepting traffic, make sure the
    Intercept button reads Intercept is on ([Figure 4-8](#figure4-8)).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用 Burp *代理* 来检查请求、修改它们，并将其转发到 Burp 的其他模块。打开 Burp 并切换到代理标签，开始探索它的功能！要开始拦截流量，确保拦截按钮显示“拦截已开启”（[图
    4-8](#figure4-8)）。
- en: '![f04008](image_fi/501546c04/f04008.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![f04008](image_fi/501546c04/f04008.png)'
- en: 'Figure 4-8: The Burp Proxy tab shows Intercept is on.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-8：Burp 代理标签显示拦截已开启。
- en: When you browse to a site on Firefox or Burp’s embedded browser, you should
    see an HTTP/HTTPS request appear in the main window. When intercept is turned
    on, every request your browser sends will go through Burp, which won’t send them
    to the server unless you click Forward in the proxy window. You can use this opportunity
    to modify the request before sending it to the server or to forward it over to
    other modules in Burp. You can also use the search bar at the bottom of the window
    to search for strings in the requests or responses.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 Firefox 或 Burp 的内置浏览器中浏览一个网站时，你应该会看到一个 HTTP/HTTPS 请求出现在主窗口中。当拦截功能开启时，你浏览器发送的每个请求都会通过
    Burp，除非你在代理窗口中点击 **Forward**，否则它不会发送到服务器。你可以利用这个机会在发送请求到服务器之前修改请求，或者将其转发到 Burp
    的其他模块。你还可以使用窗口底部的搜索栏来搜索请求或响应中的字符串。
- en: To forward the request to another Burp module, right-click the request and select
    **Send to** ***Module*** ([Figure 4-9](#figure4-9)).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要将请求转发到另一个 Burp 模块，右键点击请求并选择 **Send to** ***Module***（[图 4-9](#figure4-9)）。
- en: 'Let’s practice intercepting and modifying traffic by using Burp Proxy! Go to
    Burp Proxy and turn on traffic interception. Then open Firefox or Burp’s embedded
    browser and visit [https://www.google.com/](https://www.google.com/). As you did
    in the preceding section, click **Forward** until you see the request with the
    hostname *www.google.com*. You should see a request like this one:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过使用 Burp 代理来练习拦截和修改流量！进入 Burp 代理并开启流量拦截。然后打开 Firefox 或 Burp 的内置浏览器，访问 [https://www.google.com/](https://www.google.com/)。如同前面一节中所做的，点击
    **Forward**，直到你看到带有主机名 *www.google.com* 的请求。你应该会看到类似于以下的请求：
- en: '[PRE2]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![f04009](image_fi/501546c04/f04009.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![f04009](image_fi/501546c04/f04009.png)'
- en: 'Figure 4-9: You can forward the request or response to different Burp modules
    by right-clicking it.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-9：你可以通过右键点击请求或响应将其转发到不同的 Burp 模块。
- en: Let’s modify this request before sending it. Change the `Accept-Language` header
    value to `de`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在发送请求之前，让我们先修改一下这个请求。将`Accept-Language`头部的值更改为`de`。
- en: '[PRE3]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Click **Forward** to send the request over to Google’s server. You should see
    Google’s home page in German appear in your browser’s window ([Figure 4-10](#figure4-10)).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**转发**将请求发送到谷歌的服务器。你应该会看到谷歌的德语主页在你的浏览器窗口中显示出来（[图 4-10](#figure4-10)）。
- en: '![f04010](image_fi/501546c04/f04010.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![f04010](image_fi/501546c04/f04010.png)'
- en: 'Figure 4-10: Google’s home page in German'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-10：谷歌的德语主页
- en: 'If you’re a German speaker, you could do the test in reverse: switch the `Accept-Language`
    header value from `de` to `en`. You should see the Google home page in English.
    Congratulations! You’ve now successfully intercepted, modified, and forwarded
    an HTTP request via a proxy.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是德语使用者，可以反向进行测试：将`Accept-Language`头部的值从`de`切换到`en`。你应该会看到谷歌的英文主页。恭喜！你现在已经成功地通过代理拦截、修改并转发了一个HTTP请求。
- en: The Intruder
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入侵者
- en: The Burp *intruder* tool automates request sending. If you are using the Community
    version of Burp, your intruder will be a limited, trial version. Still, it allows
    you to perform attacks like *brute-forcing*, whereby an attacker submits many
    requests to a server using a list of predetermined values and sees if the server
    responds differently. For example, a hacker who obtains a list of commonly used
    passwords can try to break into your account by repeatedly submitting login requests
    with all the common passwords. You can send requests over to the intruder by right-clicking
    a request in the proxy window and selecting **Send to intruder**.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Burp的*入侵者*工具可以自动发送请求。如果你使用的是Burp的社区版，入侵者将是一个有限的试用版本。但它仍然允许你进行像*暴力破解*这样的攻击，攻击者会使用一组预设的值提交大量请求到服务器，查看服务器是否有不同的响应。例如，一个黑客获取了常用密码的列表后，可以通过反复提交登录请求，使用所有常见密码来尝试突破你的账户。你可以通过右键单击代理窗口中的请求并选择**发送到入侵者**来将请求发送到入侵者。
- en: The **Target** screen in the intruder tab lets you specify the host and port
    to attack ([Figure 4-11](#figure4-11)). If you forward a request from the proxy,
    the host and port will be prefilled for you.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 入侵者选项卡中的**目标**屏幕让你指定要攻击的主机和端口（[图 4-11](#figure4-11)）。如果你从代理转发请求，主机和端口会为你自动填充。
- en: '![f04011](image_fi/501546c04/f04011.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![f04011](image_fi/501546c04/f04011.png)'
- en: 'Figure 4-11: You can specify the host and port to attack on the Target screen.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-11：你可以在目标屏幕上指定要攻击的主机和端口。
- en: 'The intruder gives several ways to customize your attack. For each request,
    you can choose the payloads and payloads positions to use. The *payloads* are
    the data that you want to insert into specific positions in the request. The *payload
    positions* specify which parts of the request will be replaced by the payloads
    you choose. For example, let’s say users log in to *example.com* by sending a
    POST request to *example.com/login*. In Burp, this request might look like this:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 入侵者提供了多种自定义攻击的方式。对于每个请求，你可以选择使用的有效载荷和有效载荷位置。*有效载荷*是你想要插入到请求中特定位置的数据。*有效载荷位置*则指定哪些请求部分将被你选择的有效载荷替代。例如，假设用户通过向*example.com/login*发送POST请求登录*example.com*。在Burp中，这个请求可能看起来像这样：
- en: '[PRE4]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The POST request body contains two parameters: `username` and `password`. If
    you were trying to brute-force a user’s account, you could switch up the `password`
    field of the request and keep everything else the same. To do that, specify the
    payload positions in the **Positions** screen ([Figure 4-12](#figure4-12)). To
    add a portion of the request to the payload positions, highlight the text and
    click **Add** on the right.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: POST请求体包含两个参数：`username`和`password`。如果你想暴力破解一个用户的账户，可以只更改请求中的`password`字段，保持其他部分不变。为了实现这一点，指定有效载荷位置在**位置**屏幕中（[图
    4-12](#figure4-12)）。要将请求的一部分添加到有效载荷位置，选中该文本并点击右侧的**添加**。
- en: '![f04012](image_fi/501546c04/f04012.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![f04012](image_fi/501546c04/f04012.png)'
- en: 'Figure 4-12: You can specify the payload positions in the Positions screen.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-12：你可以在位置屏幕上指定有效载荷位置。
- en: Then, switch over to the **Payloads** screen ([Figure 4-13](#figure4-13)). Here,
    you can choose payloads to insert into the request. To brute-force a login password,
    you can add a list of commonly used passwords here. You can also, for example,
    use a list of numbers with which to brute-force IDs in requests, or use an attack
    payload list you downloaded from the internet. Reusing attack payloads shared
    by others can help you find bugs faster. We will talk more about how to use reused
    payloads to hunt for vulnerabilities in Chapter 25.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，切换到**有效负载**屏幕（[图4-13](#figure4-13)）。在这里，你可以选择插入请求的有效负载。为了暴力破解登录密码，你可以在这里添加常用密码列表。你还可以例如使用一组数字来暴力破解请求中的ID，或使用你从互联网上下载的攻击有效负载列表。重用他人共享的攻击有效负载可以帮助你更快地找到漏洞。我们将在第25章详细讲解如何使用重用的有效负载来寻找漏洞。
- en: '![f04013](image_fi/501546c04/f04013.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![f04013](image_fi/501546c04/f04013.png)'
- en: 'Figure 4-13: Choose your payload list on the Payloads screen.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-13：在有效负载屏幕上选择你的有效负载列表。
- en: Once you’ve specified those, click the **Start attack** button to start the
    automated test. The intruder will send a request for each payload you listed and
    record all responses. You can then review the responses and response codes and
    look for interesting results.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦指定了这些内容，点击**开始攻击**按钮以启动自动化测试。入侵者会为你列出的每个有效负载发送一个请求并记录所有响应。然后你可以查看响应和响应代码，并寻找有趣的结果。
- en: The Repeater
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重放器
- en: The *repeater* is probably the tool you’ll use the most often ([Figure 4-14](#figure4-14)).
    You can use it to modify requests and examine server responses in detail. You
    could also use it to bookmark interesting requests to go back to later.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '*重放器*可能是你最常用的工具（[图4-14](#figure4-14)）。你可以使用它修改请求并详细检查服务器响应。你还可以使用它将有趣的请求收藏，以便稍后再回来查看。'
- en: Although the repeater and intruder both allow you to manipulate requests, the
    two tools serve very different purposes. The intruder automates attacks by automatically
    sending programmatically modified requests. The repeater is meant for manual,
    detailed modifications of a single request.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管重放器和入侵者都允许你操作请求，但这两种工具的目的截然不同。入侵者通过自动发送经过程序修改的请求来自动化攻击，而重放器则用于对单个请求进行手动、详细的修改。
- en: Send requests to the repeater by right-clicking the request and selecting **Send
    to repeater**.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 通过右键点击请求并选择**发送到重放器**，将请求发送到重放器。
- en: On the left of the repeater screen are requests. You can modify a request here
    and send the modified request to the server by clicking **Send** at the top. The
    corresponding response from the server will appear on the right.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 重放器屏幕的左侧是请求。你可以在这里修改请求，并通过点击顶部的**发送**按钮将修改后的请求发送到服务器。服务器返回的相应响应将显示在右侧。
- en: The repeater is good for exploiting bugs manually, trying to bypass filters,
    and testing out different attack methods that target the same endpoint.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 重放器适合手动利用漏洞，尝试绕过过滤器，测试不同的攻击方法，目标是相同的端点。
- en: '![f04014](image_fi/501546c04/f04014.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![f04014](image_fi/501546c04/f04014.png)'
- en: 'Figure 4-14: The repeater is good for close examination of requests and manual
    exploitation.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-14：重放器适用于对请求进行仔细检查和手动利用。
- en: The Decoder
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解码器
- en: The Burp *decoder* is a convenient way to encode and decode data you find in
    requests and responses ([Figure 4-15](#figure4-15)). Most often, I use it to decode,
    manipulate, and re-encode application data before forwarding it to applications.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Burp的*解码器*是一个方便的工具，用于编码和解码你在请求和响应中发现的数据（[图4-15](#figure4-15)）。我通常使用它来解码、操作并重新编码应用数据，然后再将其转发给应用程序。
- en: '![f04015](image_fi/501546c04/f04015.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![f04015](image_fi/501546c04/f04015.png)'
- en: 'Figure 4-15: You can use the decoder to decode application data to read or
    manipulate its plaintext.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-15：你可以使用解码器解码应用数据，以便阅读或操作其明文。
- en: Send data to the decoder by highlighting a block of text in any request or response,
    then right-clicking it and selecting **Send to decoder**. Use the drop-down menus
    on the right to specify the algorithm to use to encode or decode the message.
    If you’re not sure which algorithm the message is encoded with, try to **Smart
    decode** it. Burp will try to detect the encoding, and decode the message accordingly.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在任何请求或响应中高亮一段文本，然后右键点击并选择**发送到解码器**，将数据发送到解码器。使用右侧的下拉菜单指定用于编码或解码消息的算法。如果你不确定消息使用了哪种编码算法，可以尝试**智能解码**。Burp会尝试检测编码方式并相应地解码消息。
- en: The Comparer
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 比较器
- en: The *comparer* is a way to compare requests or responses ([Figure 4-16](#figure4-16)).
    It highlights the differences between two blocks of text. You might use it to
    examine how a difference in parameters impacts the response you get from the server,
    for example.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '*比较器*是一种比较请求或响应的方式（[图4-16](#figure4-16)）。它会突出显示两块文本之间的差异。你可能会使用它来检查参数差异如何影响从服务器得到的响应，例如。'
- en: Send data over to the comparer by highlighting a block of text in any request
    or response, then right-clicking it and selecting **Send to comparer**.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 通过高亮显示请求或响应中的文本块，然后右键点击并选择**发送到比较器**，可以将数据发送到比较器。
- en: '![f04016](image_fi/501546c04/f04016.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![f04016](image_fi/501546c04/f04016.png)'
- en: 'Figure 4-16: The comparer will highlight the differences between two blocks
    of text.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-16：比较器将突出显示两块文本之间的差异。
- en: Saving Burp Requests
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 保存Burp请求
- en: You can save requests and responses on Burp as well. Simply right-click any
    request and select **Copy URL**, **Copy as curl command**, or **Copy to file**
    to store these results into your note folder for that target. The Copy URL option
    copies the URL of the request. The Copy as curl command copies the entire request,
    including the request method, URL, headers, and body as a curl command. Copy to
    file saves the entire request to a separate file.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在Burp中保存请求和响应。只需右键点击任何请求并选择**复制URL**、**复制为curl命令**或**复制到文件**，将这些结果存储到该目标的笔记文件夹中。复制URL选项复制请求的URL。复制为curl命令选项复制整个请求，包括请求方法、URL、头部和主体，以curl命令的形式。复制到文件选项将整个请求保存到单独的文件中。
- en: A Final Note on . . . Taking Notes
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于...做笔记的最后提醒
- en: 'Before you get started looking for vulnerabilities in the next chapter, a quick
    word of advice: organizational skills are critical if you want to succeed in bug
    bounties. When you work on targets with large scopes or hack multiple targets
    at the same time, the information you gather from the targets could balloon and
    become hard to manage.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始查找下章中的漏洞之前，给你一句建议：组织技能对于成功参与漏洞悬赏至关重要。当你处理具有大范围的目标或同时黑客多个目标时，从目标收集到的信息可能会迅速膨胀，变得难以管理。
- en: Often, you won’t be able to find bugs right away. Instead, you’ll spot a lot
    of weird behaviors and misconfigurations that aren’t exploitable at the moment
    but that you could combine with other behavior in an attack later on. You’ll need
    to take good notes about any new features, misconfigurations, minor bugs, and
    suspicious endpoints that you find so you can quickly go back and use them.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你不会立刻找到漏洞。相反，你会发现很多奇怪的行为和配置错误，这些问题当前可能无法被利用，但你可以在后续攻击中将它们与其他行为结合起来。你需要对找到的任何新功能、配置错误、小漏洞和可疑端点做好笔记，以便快速回头使用它们。
- en: Notes also help you plan attacks. You can keep track of your hacking progress,
    the features you’ve tested, and those you still have to check. This prevents you
    from wasting time by testing the same features over and over again.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记还有助于你规划攻击。你可以跟踪你的黑客进展、已测试的功能和仍需检查的功能。这样可以避免通过反复测试相同的功能浪费时间。
- en: Another good use of notes is to jot down information about the vulnerabilities
    you learn about. Record details about each vulnerability, such as its theoretical
    concept, potential impact, exploitation steps, and sample proof-of-concept code.
    Over time, this will strengthen your technical skills and build up a technique
    repository that you can revisit if needed.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记的另一个好用法是记录你了解到的漏洞信息。记录每个漏洞的细节，如其理论概念、潜在影响、利用步骤以及示例概念验证代码。随着时间的推移，这将增强你的技术技能，并积累一个技术库，必要时可以重新访问。
- en: Since these notes tend to balloon in volume and become very disorganized, it’s
    good to keep them organized from the get-go. I like to take notes in plaintext
    files by using Sublime Text ([https://www.sublimetext.com/](https://www.sublimetext.com/))
    and organize them by sorting them into directories, with subdirectories for each
    target and topic.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些笔记往往会膨胀并变得非常杂乱，从一开始就将其组织好是非常重要的。我喜欢使用Sublime Text ([https://www.sublimetext.com/](https://www.sublimetext.com/))
    在纯文本文件中做笔记，并通过将它们分类到目录中来组织，针对每个目标和主题再创建子目录。
- en: For example, you can create a folder for each target you’re working on, like
    Facebook, Google, or Verizon. Then, within each of these folders, create files
    to document interesting endpoints, new and hidden features, reconnaissance results,
    draft reports, and POCs.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以为每个正在处理的目标创建一个文件夹，如Facebook、Google或Verizon。然后，在这些文件夹中创建文件，记录有趣的端点、新的和隐藏的功能、侦察结果、草稿报告和POC（概念验证）。
- en: Find a note-taking and organizational strategy that works for you. For example,
    if you are like me and prefer to store notes in plaintext, you can search around
    for an integrated development environment (IDE) or text editor that you feel the
    most comfortable in. Some prefer to take notes using the Markdown format. In this
    case, Obsidian ([https://obsidian.md/](https://obsidian.md/)) is an excellent
    tool that displays your notes in an organized way. If you like to use mind maps
    to organize your ideas, you can try the mind-mapping tool XMind ([https://www.xmind.net/](https://www.xmind.net/)).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 找到一种适合你的笔记和组织策略。例如，如果你像我一样更喜欢以纯文本存储笔记，你可以寻找一个让你感觉最舒适的集成开发环境（IDE）或文本编辑器。有些人喜欢使用Markdown格式来做笔记。在这种情况下，Obsidian（[https://obsidian.md/](https://obsidian.md/)）是一个非常好的工具，可以以有序的方式展示你的笔记。如果你喜欢使用思维导图来组织想法，可以试试思维导图工具XMind（[https://www.xmind.net/](https://www.xmind.net/)）。
- en: Keep your bug bounty notes in a centralized place, such as an external hard
    drive or cloud storage service like Google Drive or Dropbox, and don’t forget
    to back up your notes regularly!
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的漏洞赏金笔记保存在一个集中位置，比如外部硬盘或云存储服务（如Google Drive或Dropbox），并且不要忘记定期备份你的笔记！
- en: 'In summary, here are a few tips to help you take good notes:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，以下是一些帮助你做好笔记的技巧：
- en: Take notes about any weird behaviors, new features, misconfigurations, minor
    bugs, and suspicious endpoints to keep track of potential vulnerabilities.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录任何异常行为、新特性、配置错误、轻微的漏洞和可疑的端点，以便跟踪潜在的安全漏洞。
- en: Take notes to keep track of your hacking progress, the features you’ve tested,
    and those you still have to check.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 做笔记以跟踪你的黑客进展，已经测试的特性以及那些你还需要检查的特性。
- en: 'Take notes while you learn: jot down information about each vulnerability you
    learn about, like its theoretical concept, potential impact, exploitation steps,
    and sample POC code.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在学习时做笔记：记下你所学到的每个漏洞的信息，比如它的理论概念、潜在影响、利用步骤以及示例POC代码。
- en: Keep your notes organized from the get-go, so you can find them when you need
    to!
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一开始就保持笔记的有序，这样当你需要时就能轻松找到！
- en: Find a note-taking and organizational process that works for you. You can try
    out note-taking tools like Sublime Text, Obsidian, and XMind to find a tool that
    you prefer.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到一个适合你的笔记和组织流程。你可以尝试一些笔记工具，如Sublime Text、Obsidian和XMind，找出最适合你的工具。
