- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">1</samp> <samp class="SANS_Dogma_OT_Bold_B_11">GETTING
    STARTED</samp>
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">1</samp> <samp class="SANS_Dogma_OT_Bold_B_11">开始使用</samp>
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: '![](../images/opener.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/opener.png)'
- en: In this chapter, you’ll get started writing your first JavaScript code. First,
    you’ll learn how to enter code directly into a web browser, without having to
    install any specialized software. This approach is ideal for quickly testing out
    simple sequences of code. Next, you’ll see how to write JavaScript in a separate
    text editor program, which is more appropriate as your code becomes more complex.
    We’ll use both of these techniques for writing and executing JavaScript code throughout
    the book, so this chapter will prepare you for everything that’s to come.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将开始编写你的第一段 JavaScript 代码。首先，你将学习如何直接在网页浏览器中输入代码，而无需安装任何专业的软件。这种方法非常适合快速测试简单的代码序列。接下来，你将看到如何在一个单独的文本编辑器程序中编写
    JavaScript，这在代码变得更复杂时更加合适。本书中我们将使用这两种方法来编写和执行 JavaScript 代码，因此本章将为你未来的内容做准备。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Using the JavaScript Console</samp>
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">使用 JavaScript 控制台</samp>
- en: The quickest way to run JavaScript code is through the *JavaScript console*.
    This is an interface in most web browsers that lets you enter individual lines
    of code and immediately see the results. We’ll use the console in Google Chrome,
    the most popular browser. If you don’t have Chrome installed, you can download
    and install it from [*https://<wbr>www<wbr>.google<wbr>.com<wbr>/chrome*](https://www.google.com/chrome).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 JavaScript 代码的最快方式是通过 *JavaScript 控制台*。这是大多数网页浏览器中的一个界面，允许你输入单独的代码行并立即查看结果。我们将使用
    Google Chrome 控制台，这是最流行的浏览器。如果你还没有安装 Chrome，可以从 [*https://<wbr>www<wbr>.google<wbr>.com<wbr>/chrome*](https://www.google.com/chrome)
    下载并安装它。
- en: 'Once you have Chrome installed, follow these steps to access the JavaScript
    console:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 安装好 Chrome 后，按照以下步骤访问 JavaScript 控制台：
- en: 1.  Open Chrome and enter **about:blank** in the address bar. This will take
    you to a blank web page.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 1.  打开 Chrome 并在地址栏中输入 **about:blank**，这会将你带到一个空白网页。
- en: 2.  In Windows or Linux, press CTRL-SHIFT-J, or press OPTION-COMMAND-J if you’re
    using macOS.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 或 Linux 上，按 CTRL-SHIFT-J，或者在使用 macOS 时按 OPTION-COMMAND-J。
- en: 3.  You should now see the JavaScript console, including the > prompt symbol
    where you can enter code. Click inside the console to put your cursor next to
    the prompt.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该能看到 JavaScript 控制台，包括一个 > 提示符，你可以在其中输入代码。点击控制台内的区域，将光标放在提示符旁边。
- en: The console should look something like [Figure 1-1](chapter1.xhtml#fig1-1).
    It may appear alongside the blank web page, rather than beneath it, depending
    on your browser settings.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台应该类似于 [图 1-1](chapter1.xhtml#fig1-1)，它可能会显示在空白网页旁边，而不是在下面，这取决于你的浏览器设置。
- en: '![](../images/Figure_1-1.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/Figure_1-1.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 1-1: Google Chrome’s
    JavaScript console</samp>'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 1-1：Google Chrome 的 JavaScript
    控制台</samp>
- en: 'When you’re learning a new programming language, it’s customary to start by
    writing some code to display the message “Hello, world!” Let’s try it out! Type
    the following into the console:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当你学习一种新的编程语言时，通常的做法是通过编写一段代码来显示“Hello, world!”消息。让我们试试看！在控制台中输入以下内容：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this book, when I ask you to enter code into the JavaScript console, I’ll
    show the code in bold. If the code produces any output in the console, I’ll show
    it directly below your input, not in bold.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，当我要求你在 JavaScript 控制台中输入代码时，我会将代码以粗体显示。如果代码在控制台中产生任何输出，我会将其直接显示在你的输入下方，而不是以粗体显示。
- en: When you’re ready to run the code you’ve typed in, press ENTER. You should see
    a dialog appear in the browser containing the message “Hello, world!” as shown
    in [Figure 1-2](chapter1.xhtml#fig1-2).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当你准备好运行已输入的代码时，按 ENTER。你应该会看到一个对话框在浏览器中出现，显示消息“Hello, world!”，如 [图 1-2](chapter1.xhtml#fig1-2)
    所示。
- en: '![](../images/Figure_1-2.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/Figure_1-2.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 1-2: Hello, world!</samp>'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 1-2：Hello, world!</samp>
- en: 'You’ve just used JavaScript’s alert function, which makes text pop up in a
    dialog. A *function* is a piece of code for performing a certain task—in this
    case, displaying a dialog. Functions can take *arguments*, which help specify
    how the task should be performed. The alert function takes one argument: a piece
    of text to display. Here, we’ve provided "Hello, world!" as the argument. You’ll
    learn much more about functions in [Chapter 5](chapter5.xhtml).'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚使用了 JavaScript 的 alert 函数，它会在对话框中弹出文本。*函数*是执行某项特定任务的代码——在这个例子中，任务是显示一个对话框。函数可以接受*参数*，这些参数帮助指定任务的执行方式。alert
    函数接受一个参数：需要显示的文本。在这里，我们提供了“Hello, world！”作为参数。你将在[第 5 章](chapter5.xhtml)中了解更多关于函数的内容。
- en: Click **OK** to dismiss the dialog and get back to the console. Then congratulate
    yourself on running your first JavaScript code.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**确定**关闭对话框并返回控制台。然后，为运行你的第一段 JavaScript 代码而自豪。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Using a Text Editor</samp>
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">使用文本编辑器</samp>
- en: The JavaScript console is good for testing out a few lines of code, but it isn’t
    so suitable for the larger projects we’ll be working on later in the book. For
    those, it’s more practical to use a *text editor*, a dedicated program for writing
    and editing code files. In this section, we’ll create a similar “Hello, world!”
    program in a text editor.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 控制台适合测试少量的代码，但对于本书后面将要处理的较大项目，它就不太适用了。对于这些项目，使用*文本编辑器*——一个专门用于编写和编辑代码文件的程序，显得更为实用。在本节中，我们将使用文本编辑器创建一个类似的“Hello,
    world！”程序。
- en: For this book, I recommend using the Visual Studio Code text editor from Microsoft
    (VS Code for short). It’s freely available for Windows, macOS, and Linux. Go to
    [*https://<wbr>code<wbr>.visualstudio<wbr>.com*](https://code.visualstudio.com)
    and follow the instructions there to download and install the editor.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本书，我推荐使用微软的 Visual Studio Code 文本编辑器（简称 VS Code）。它可以免费在 Windows、macOS 和 Linux
    上使用。请访问[*https://<wbr>code<wbr>.visualstudio<wbr>.com*](https://code.visualstudio.com)，并按照网站上的指示下载和安装编辑器。
- en: 'Once you’ve installed VS Code, create a new directory on your computer called
    *javascript_work* where you can save the code files you work on for this book.
    Then follow these steps to get ready to write your code:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完 VS Code 后，在你的计算机上创建一个名为*javascript_work*的目录，用于保存你在本书中编写的代码文件。然后，按照以下步骤准备好编写代码：
- en: 1.  Open VS Code.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 1.  打开 VS Code。
- en: 2.  Create a new file by selecting **File****New File**.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 2.  通过选择**文件****新建文件**来创建一个新文件。
- en: 3.  You should be prompted to name the new file. Enter ***hello.html***.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 3.  系统应该会提示你命名新文件。输入***hello.html***。
- en: 4.  Next, you should be prompted to choose the new file’s location. Select the
    *javascript_work* directory you just created and click **Create File**.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 4.  接下来，系统应该会提示你选择新文件的保存位置。选择你刚刚创建的*javascript_work*目录，并点击**创建文件**。
- en: 5.  You should now be on a screen where you can edit your new file.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 5.  现在你应该看到一个可以编辑新文件的界面。
- en: The.*html* extension in the filename indicates that this is an HTML file. HTML
    is a markup language used to describe the content of web pages. One way to run
    JavaScript code is to include it in an HTML file and then open the HTML file in
    a web browser. That’s what we’ll be doing here. Enter the contents of [Listing
    1-1](#Lis1-1) into your new file, exactly as written.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这个.*html*扩展名表明这是一个 HTML 文件。HTML 是一种标记语言，用于描述网页的内容。运行 JavaScript 代码的一种方法是将其包含在
    HTML 文件中，然后在网页浏览器中打开该 HTML 文件。这正是我们将要做的。将[清单 1-1](#Lis1-1)中的内容输入到你的新文件中，确保与原文完全一致。
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Listing 1-1: Writing JavaScript
    inside the file</samp> <samp class="SANS_Futura_Std_Book_11">hello.html</samp>'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">清单 1-1：在文件中编写 JavaScript</samp>
    <samp class="SANS_Futura_Std_Book_11">hello.html</samp>
- en: As you type, you may notice that VS Code tries to predict what you’re entering.
    This can be confusing at first, but once you get used to it, you’ll likely find
    it helpful. Sometimes these predictions will be inserted automatically, while
    for others you’ll have to press TAB to insert them.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在你输入的过程中，可能会注意到 VS Code 尝试预测你正在输入的内容。刚开始时这可能会让人困惑，但一旦习惯了，你可能会觉得它很有帮助。有时这些预测会自动插入，而对于其他情况，你则需要按
    TAB 键来插入它们。
- en: The first and last lines of [Listing 1-1](#Lis1-1) are HTML code, the bare minimum
    required to embed JavaScript into an HTML file. We’ll explore HTML in detail in
    [Chapter 7](chapter7.xhtml). For now, all you need to know is that it involves
    *tags* that identify different components of a web page. Most important for our
    purposes are the opening <script> tag at the end of the first line and the closing
    </script> tag at the beginning of the third line. When you load this file in a
    browser, everything between these tags (the second line in [Listing 1-1](#Lis1-1))
    will be interpreted as JavaScript.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 1-1](#Lis1-1)的第一行和最后一行是HTML代码，嵌入JavaScript到HTML文件中所需的最基本内容。我们将在[第7章](chapter7.xhtml)中详细探讨HTML。现在，你需要知道的是，它包含了*标签*，用来标识网页的不同组件。对于我们的目的来说，最重要的是第一行末尾的<script>标签和第三行开头的</script>标签。当你在浏览器中加载这个文件时，这些标签之间的内容（[列表
    1-1](#Lis1-1)中的第二行）将被解释为JavaScript。'
- en: 'The JavaScript portion of the file is:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件的JavaScript部分是：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here we’re using the alert function, just as we did earlier in the console.
    This time we provide a different message, "Hello from hello.html!", to display
    in the dialog.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们使用了alert函数，就像之前在控制台中那样。此次我们提供了不同的消息“Hello from hello.html!”，在对话框中显示出来。
- en: 'When you’re finished entering the code, save the file. Now you’re ready to
    open the file in Chrome and see the JavaScript code in action. Follow these steps:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当你输入完代码后，保存文件。现在你准备好在Chrome中打开文件，查看JavaScript代码的效果。请按照以下步骤操作：
- en: 1.  Open a new tab in Chrome.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在Chrome中打开一个新标签页。
- en: 2.  Press CTRL-O in Windows or Linux, or COMMAND-O in macOS, to bring up the
    Open File dialog.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows或Linux中按CTRL-O，或者在macOS中按COMMAND-O，打开“打开文件”对话框。
- en: 3.  Locate your *hello.html* file, select it, and click **Open**.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 找到你的*hello.html*文件，选择它，然后点击**打开**。
- en: You should now see a dialog pop up containing the "Hello from hello.html!" message,
    as shown in [Figure 1-3](chapter1.xhtml#fig1-3).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该能看到一个弹出对话框，显示“Hello from hello.html!”消息，如[图 1-3](chapter1.xhtml#fig1-3)所示。
- en: '![](../images/Figure_1-3.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/Figure_1-3.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 1-3: Hello from</samp>
    <samp class="SANS_Futura_Std_Book_11">hello.html</samp><samp class="SANS_Futura_Std_Book_Oblique_I_11">!</samp>'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 1-3：来自</samp> <samp class="SANS_Futura_Std_Book_11">hello.html</samp><samp
    class="SANS_Futura_Std_Book_Oblique_I_11">!</samp>
- en: The browser recognized the code in the HTML file between the <script> and </script>
    tags as JavaScript and executed that code, causing the dialog to appear. If you
    don’t see the dialog pop up, double-check the code in your *hello.html* file to
    make sure it matches [Listing 1-1](#Lis1-1) exactly.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器识别了HTML文件中<script>和</script>标签之间的代码作为JavaScript并执行了该代码，导致弹出对话框的出现。如果你没有看到对话框弹出，请仔细检查你的*hello.html*文件中的代码，确保它与[列表
    1-1](#Lis1-1)完全一致。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Summary</samp>
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">摘要</samp>
- en: In this chapter, you learned two different ways to write and execute JavaScript
    code. First, you entered code into the JavaScript console in the Chrome web browser.
    You’ll use this technique in the coming chapters to test out short snippets of
    code as you learn the basics of the language. Next, you embedded JavaScript in
    an HTML file using a text editor, then opened that file in Chrome to run the code.
    You’ll use this technique in later chapters to develop more sophisticated projects.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你学习了两种编写和执行JavaScript代码的不同方法。首先，你在Chrome网页浏览器的JavaScript控制台中输入了代码。你将在接下来的章节中使用这种技巧来测试简短的代码片段，学习语言的基础知识。接着，你使用文本编辑器将JavaScript嵌入HTML文件，然后在Chrome中打开该文件运行代码。在后续章节中，你将使用这种方法开发更复杂的项目。
