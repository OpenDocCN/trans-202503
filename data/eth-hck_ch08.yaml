- en: '**8'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**8'
- en: SCANNING TARGETS**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描目标**
- en: '*No thief, however skillful, can rob one of knowledge, and that is why knowledge
    is the best and safest treasure to acquire.*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*没有任何盗贼，尽管技术高超，能够偷走一个人的知识，这就是为什么知识是最好的也是最安全的财富。*'
- en: —L. Frank Baum, *The Lost Princess of Oz*
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: —L. Frank Baum，《奥兹国失落的公主》
- en: '![image](../images/common.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common.jpg)'
- en: The more you know about a victim, the more effectively you can influence their
    behavior. For example, a victim is more likely to click a phishing email if it’s
    sent by someone they know. In this chapter, we’ll explore some of the tools and
    techniques hackers use to learn about their victims. These tools search and catalog
    relevant publicly available information from the internet. You’ll use these tools
    to identify devices on the public internet that contain vulnerabilities that you
    can exploit.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你对受害者了解得越多，你就越能有效地影响他们的行为。例如，如果受害者收到的是他们认识的人发送的钓鱼邮件，他们更有可能点击。在本章中，我们将探讨黑客用来了解受害者的一些工具和技术。这些工具会搜索并目录化互联网中公开可用的相关信息。你将使用这些工具来识别互联网上包含你可以利用的漏洞的设备。
- en: This process of collecting and cataloging information from public sources is
    called *open source intelligence (OSINT)*. Let’s discuss how OSINT and social
    engineering techniques can identify and exploit vulnerable machines. I’ll begin
    by discussing an OSINT technique called *link analysis*.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这个从公共来源收集和目录化信息的过程叫做*开源情报（OSINT）*。让我们讨论一下OSINT和社会工程学技术如何识别并利用易受攻击的机器。我将从讨论一种名为*链接分析*的OSINT技术开始。
- en: '**Link Analysis**'
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**链接分析**'
- en: Link analysis identifies connections between related pieces of publicly available
    information. For example, you could look up a victim’s phone number in a phone
    book to link their number to their name. Or, to take a more extreme example, state
    actors like the NSA may have access to the telephone company’s private logs. This
    allows them to identify your recent contacts, often referred to as your *first-degree
    connections*.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 链接分析识别相关公开信息之间的联系。例如，你可以查找受害者在电话簿中的电话号码，将他们的号码与名字联系起来。或者，举一个更极端的例子，像NSA这样的国家行为者可能能够访问电话公司的私人日志。这使他们能够识别你最近的联系人，通常称为你的*一度联系*。
- en: The true power of this technique comes from its ability to identify who your
    contacts have themselves contacted, also known as your *second-degree connections*.
    Exploring second-degree connections allows hackers to discover hidden links between
    a person of interest and another person being investigated (see [Figure 8-1](ch08.xhtml#ch8fig1)).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术的真正力量在于它能够识别你的联系人与其他人的联系，也就是你的*二度联系*。探索二度联系使黑客能够发现感兴趣的人与另一个被调查对象之间的隐藏联系（见[图8-1](ch08.xhtml#ch8fig1)）。
- en: '![image](../images/ch08fig01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig01.jpg)'
- en: '*Figure 8-1: Firstand second-degree connections*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8-1：一度和二度联系*'
- en: Hackers and security researchers don’t have access to the same private data
    sources as governments and must rely on public sources.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客和安全研究人员无法像政府那样访问相同的私人数据源，因此必须依赖公共来源。
- en: An example of such a public source is the *whois* database, which contains contact
    information for websites. This allows users to report any issues to the website’s
    administrators. The contact information often includes the system administrator’s
    email address and phone number.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这种公共来源的一个例子是*whois*数据库，它包含了网站的联系信息。这样用户可以向网站管理员报告任何问题。联系信息通常包括系统管理员的电子邮件地址和电话号码。
- en: 'To protect their information from being exposed, system administrators will
    often pay an extra fee to keep this information private. However, the law requires
    some domains to publish their contact information. For example, the National Telecommunications
    and Information Administration (NTIA) requires all *.us* domains to publish their
    contact information. This means that you can view the contact information for,
    say, *zoom.us* by running the following command in your Kali Linux terminal:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保护自己的信息不被曝光，系统管理员通常会支付额外费用以保持这些信息的私密性。然而，法律要求某些域名必须发布其联系信息。例如，国家电信和信息管理局（NTIA）要求所有*.us*域名发布其联系信息。这意味着你可以通过在Kali
    Linux终端中运行以下命令来查看*zoom.us*的联系信息：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The command should print out a lot of information, including an address, phone
    number, and contact email. Scroll up in the terminal so that you can see all of
    this. The following is a short snippet of the result (I’ve redacted the phone
    number and email address as a courtesy).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令应该会打印出大量信息，包括地址、电话号码和联系方式。向上滚动终端，以便查看所有这些内容。以下是结果的简短片段（我已为礼貌起见，隐藏了电话号码和电子邮件地址）。
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: An attacker could use this information to send a phishing email to the system
    administrator and attempt to steal their username and password. If this fails,
    the attacker might attempt to use link analysis to discover the system administrator’s
    username and password. Let’s explore how the Maltego link analysis tool makes
    this possible.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可以利用这些信息向系统管理员发送钓鱼邮件，试图窃取他们的用户名和密码。如果失败，攻击者可能会尝试使用链路分析来发现系统管理员的用户名和密码。让我们来探索
    Maltego 链路分析工具是如何实现这一点的。
- en: '***Maltego***'
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Maltego***'
- en: '*Maltego* allows hackers and security researchers to discover connections between
    pieces of publicly available information on the internet. These sources include
    forum posts, web pages, and records from the whois database.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*Maltego* 允许黑客和安全研究人员发现互联网公开信息之间的连接。这些信息来源包括论坛帖子、网页和 whois 数据库中的记录。'
- en: Maltego refers to programs like whois as *transforms*. By applying a transform
    to a piece of data, a hacker can discover related information. Some of Maltego’s
    transforms identify related infrastructure such as DNS servers and web servers,
    whereas other transforms search public forums to find usernames or email addresses.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Maltego 中类似 whois 的程序称为 *transforms*。通过对一段数据应用一个 transform，黑客可以发现相关信息。Maltego
    的一些 transforms 会识别相关的基础设施，如 DNS 服务器和 web 服务器，而其他的 transforms 则会搜索公共论坛，查找用户名或电子邮件地址。
- en: Let’s use Maltego to see what open source information we can find on the *[maltego.com](http://maltego.com)*
    domain. Start up your Kali Linux virtual machine and search for Maltego in the
    **Applications** menu. Maltego offers both free and paid versions. We’ll use the
    free version, so select **Maltego CE free**. Follow the instructions in the setup
    wizard and select the defaults.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 Maltego 来查看我们可以在 *[maltego.com](http://maltego.com)* 域上找到哪些开源信息。启动 Kali
    Linux 虚拟机，并在 **应用程序** 菜单中搜索 Maltego。Maltego 提供免费和付费版本。我们将使用免费版，所以选择 **Maltego
    CE free**。按照设置向导中的说明操作，并选择默认设置。
- en: During the setup process, you’ll be asked to provide an email address. Instead
    of using your personal email address, let’s create an account on *[Protonmail.com](http://Protonmail.com)*,
    an anonymous encrypted mail service, and use that address to register for Maltego.
    If Protonmail is banned in your country, download the Opera browser, enable its
    built-in VPN, and select a country other than your own. This will route your requests
    through an encrypted channel to another country. (We’ll discuss creating an anonymous
    infrastructure in more depth in [Chapter 16](ch16.xhtml#ch16).) After you have
    done this, you should be able to use Protonmail.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置过程中，系统会要求你提供一个电子邮件地址。为了避免使用个人电子邮件地址，我们可以在*[@Protonmail.com](http://Protonmail.com)*
    创建一个帐户，这是一个匿名加密邮件服务，并使用该地址注册 Maltego。如果 Protonmail 在你所在的国家被禁用，可以下载 Opera 浏览器，启用其内置的
    VPN，并选择一个非本国的国家。这将通过加密通道将你的请求路由到另一个国家。（我们将在[第16章](ch16.xhtml#ch16)中更深入地讨论如何创建匿名基础设施。）完成此操作后，你应该能够使用
    Protonmail。
- en: After you’ve completed the setup process, you should see an empty canvas in
    the Maltego interface. To get started, add pieces of data, which Maltego refers
    to as *entities*, to this canvas. Maltego supports several entities such as telephone
    numbers, email addresses, physical locations, company names, and web domains.
    Click **New Entity Type**, search for **domain**, and then add the **Domain**
    entity to the canvas, as shown in [Figure 8-2](ch08.xhtml#ch8fig2).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 完成设置过程后，你应该会看到 Maltego 界面中的空画布。要开始使用，添加一些数据，这些数据在 Maltego 中被称为 *entities*，到这个画布上。Maltego
    支持多种实体，例如电话号码、电子邮件地址、物理位置、公司名称和网站域名。点击 **新建实体类型**，搜索 **domain**，然后将 **Domain**
    实体添加到画布中，如 [图 8-2](ch08.xhtml#ch8fig2) 所示。
- en: '![image](../images/ch08fig02.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig02.jpg)'
- en: '*Figure 8-2: Adding an entity to the canvas*'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-2：将实体添加到画布中*'
- en: Because we’re searching for information about Maltego itself, change the URL
    of the domain entity from *[paterva.com](http://paterva.com)* to *[maltego.com](http://maltego.com)*.
    Right-click the domain entity and run it through a whois transform by clicking
    the play button next to the **Domain owner detail** option ([Figure 8-3](ch08.xhtml#ch8fig3)).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在搜索有关 Maltego 本身的信息，修改域名实体的 URL，从 *[paterva.com](http://paterva.com)* 更改为
    *[maltego.com](http://maltego.com)*。右键点击域名实体，通过点击 **Domain owner detail** 选项旁边的播放按钮运行
    whois 转换器（[图 8-3](ch08.xhtml#ch8fig3)）。
- en: '![image](../images/ch08fig03.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig03.jpg)'
- en: '*Figure 8-3: Example of running a Maltego transform*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-3：运行 Maltego 转换器的示例*'
- en: Running the transform will produce other entities related to the domain. [Figure
    8-4](ch08.xhtml#ch8fig4) shows the output of the transform. Notice that the output
    includes information you would find in a whois query.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 运行转换器将生成与该域名相关的其他实体。[图 8-4](ch08.xhtml#ch8fig4)显示了转换器的输出。请注意，输出包括你在 whois 查询中可以找到的信息。
- en: '![image](../images/ch08fig04.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig04.jpg)'
- en: '*Figure 8-4: Results of the Maltego transform*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-4：Maltego 转换器的结果*'
- en: What could an attacker do with this information? Well, by applying consecutive
    transforms, they might discover information about a company’s users and infrastructure.
    You can install the additional transform by selecting **Transforms** ▶**Transform
    Hub** ([Figure 8-5](ch08.xhtml#ch8fig5)).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可能用这些信息做什么呢？通过连续应用转换器，他们可能会发现有关公司用户和基础设施的信息。你可以通过选择 **Transforms** ▶ **Transform
    Hub** 安装额外的转换器（[图 8-5](ch08.xhtml#ch8fig5)）。
- en: '![image](../images/ch08fig05.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig05.jpg)'
- en: '*Figure 8-5: The Transform Hub’s list of transforms*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-5：Transform Hub 的转换器列表*'
- en: One of the most useful pieces of information you can obtain is the system administrator’s
    username and password. Over the years, hackers have stolen databases containing
    login credentials from companies like LinkedIn, Adobe, and MasterCard. If you
    obtain a system administrator’s email address, you can search these leaked databases
    to find an associated password.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你能获得的最有用的信息之一是系统管理员的用户名和密码。多年来，黑客已经从 LinkedIn、Adobe 和 MasterCard 等公司窃取了包含登录凭证的数据库。如果你获得了系统管理员的邮箱地址，你可以在这些泄露的数据库中搜索与之相关的密码。
- en: The website *[https://haveibeenpwned.com/](https://haveibeenpwned.com/)* keeps
    track of these leaks and stores a list of email addresses associated with leaked
    passwords. Check the website directly to see if one of your passwords has been
    leaked, or search the database in Maltego by installing the *haveibeenpwned* transform
    and running it on the email address you discovered.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 网站 *[https://haveibeenpwned.com/](https://haveibeenpwned.com/)* 跟踪这些泄漏事件，并存储与泄露密码相关的邮箱地址列表。直接访问该网站查看是否有你的密码被泄露，或者通过在
    Maltego 中安装 *haveibeenpwned* 转换器并在你发现的邮箱地址上运行它来搜索数据库。
- en: '***Leaked Credential Databases***'
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***泄露凭证数据库***'
- en: 'You might notice that the transform will tell you whether the email address
    has been exposed in a leak, but it won’t show the password. How do hackers obtain
    the passwords associated with leaked email addresses? They’ll often turn to other
    databases containing plaintext usernames, email addresses, and passwords. One
    of the largest lists ever leaked contained approximately 1.4 billion email address
    (or username) and password pairs. You can find such a list available via the following
    Magnet link:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到，转换器会告诉你邮箱地址是否在泄漏事件中暴露，但它不会显示密码。黑客是如何获取与泄露的邮箱地址相关的密码的呢？他们通常会转向其他包含明文用户名、邮箱地址和密码的数据库。曾经泄露的最大数据库之一包含大约14亿个邮箱地址（或用户名）和密码对。你可以通过以下
    Magnet 链接找到这样的列表：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**NOTE**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Possession of this password list may be illegal in your country, so check
    your local laws before downloading the database.*'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*拥有此密码列表在你的国家可能是非法的，因此在下载数据库之前请检查当地的法律。*'
- en: '*Magnet links* are an improvement on torrent files. Instead of downloading
    a file from a single server, torrents allow you to download parts of the file
    from multiple machines called *peers*. A torrent file contains a link to a torrent
    tracker server, which keeps track of all the peers and facilitates connections
    between them. But this makes the torrent tracker server a single point of failure.
    With magnet links, each peer keeps track of other peers, instead, thus eliminating
    the need for a single tracker.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*磁力链接*是对种子文件的改进。与从单个服务器下载文件不同，种子文件允许你从多个机器（称为*节点*）下载文件的不同部分。种子文件包含一个链接，指向一个种子跟踪服务器，跟踪所有节点并促进它们之间的连接。但这也使得种子跟踪服务器成为单点故障。使用磁力链接后，每个节点会追踪其他节点，从而消除了对单一跟踪器的需求。'
- en: Because the plaintext database is very large (41GB), it won’t fit on your virtual
    machine as originally configured. You’ll need to increase the size of the virtual
    machine hard drive if you want to store this file. Do this by clicking **File**
    ▶**Virtual Media Manager** ([Figure 8-6](ch08.xhtml#ch8fig6)).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 由于纯文本数据库非常大（41GB），它无法适应你最初配置的虚拟机。若要存储此文件，你需要增加虚拟机硬盘的大小。通过点击**文件** ▶**虚拟媒体管理器**来完成此操作（[图
    8-6](ch08.xhtml#ch8fig6)）。
- en: '![image](../images/ch08fig06.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig06.jpg)'
- en: '*Figure 8-6: How to increase hard drive size*'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-6：如何增加硬盘大小*'
- en: Select the **Properties** tab ➊ in VirtualBox and then click the virtual machine
    images that you would like to increase in size ➋. Next, move the slider ➌ to a
    new size. Be careful though, because moving the slider all the way to the right
    could fill your hard drive and make your primary operating system unusable. Check
    the available space on your hard drive before you do this step.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 VirtualBox 中的**属性**选项卡 ➊，然后点击你想要增加大小的虚拟机镜像 ➋。接下来，将滑块 ➌ 移动到一个新的大小。然而要小心，因为将滑块移到最右侧可能会填满你的硬盘并使你的主操作系统无法使用。在执行这一步骤之前，请检查硬盘上的可用空间。
- en: 'The `rtorrent` utility supports magnet links. You can install it by running
    the following command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`rtorrent` 工具支持磁力链接。你可以通过运行以下命令来安装它：'
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now you can use it to download the file:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以用它来下载文件：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The data in the database is organized alphabetically and contains search tools
    that allow you to find particular information in less than a second. The leak
    contains a *README* file with instructions on how to use the tools.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库中的数据按字母顺序组织，并包含搜索工具，允许你在不到一秒钟的时间内找到特定的信息。泄露文件中包含一个*README* 文件，提供如何使用这些工具的说明。
- en: '***SIM Jacking***'
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***SIM 卡劫持***'
- en: If you find a password in the list, you can attempt to log in to the victim’s
    accounts. But some systems require users to perform an additional verification
    step after they log in, a process commonly referred to as *two-factor authentication*.
    For instance, the system might send a text message to the user’s smartphone containing
    a unique code that the user must provide during authentication. Other systems
    will call a user and ask them to verify that they’re currently logging in. However,
    if you don’t have access to a victim’s phone, you won’t be able to access their
    account.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在列表中发现密码，你可以尝试登录受害者的账户。但有些系统要求用户在登录后执行额外的验证步骤，这个过程通常被称为*双因素认证*。例如，系统可能会向用户的智能手机发送一条包含唯一验证码的短信，用户必须在认证时提供该验证码。其他系统则会打电话给用户，要求他们确认是否正在登录。然而，如果你无法访问受害者的手机，你将无法访问他们的账户。
- en: Although these authentication methods are creative, attackers have found ways
    of defeating two-factor authentication using a technique called *SIM jacking*.
    This attack is based on the fact that telecommunications companies can transfer
    your old phone number to a new phone when you purchase one. Attackers sometimes
    use social engineering techniques to trick those companies into transferring the
    victim’s phone number to the hacker’s phone. To do this, the attacker uses information
    collected from link analysis and leaked databases to answer the customer representative’s
    questions and impersonate the victim. Once the phone number has been transferred,
    all text messages and calls are forwarded to the hacker’s phone, allowing them
    to circumvent two-factor authentication.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些身份验证方法很有创意，攻击者仍然找到了一种方法，通过名为*SIM劫持*的技术绕过双因素身份验证。这种攻击的原理是，电信公司可以在你购买新手机时将你的旧手机号码转移到新手机上。攻击者有时使用社交工程技术来欺骗这些公司，将受害者的电话号码转移到黑客的手机上。为了做到这一点，攻击者使用从链接分析和泄露数据库中收集的信息来回答客户代表的问题，冒充受害者。一旦电话号码被转移，所有的短信和电话都会被转发到黑客的手机上，从而绕过双因素身份验证。
- en: In addition, certain SIM cards allow hackers to spoof phone numbers or change
    their voices in real time. We commonly refer to these as *encrypted SIMs*.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，某些SIM卡允许黑客伪造电话号码或实时改变他们的声音。我们通常称这些为*加密SIM卡*。
- en: '**Google Dorking**'
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Google Dorking**'
- en: Maltego isn’t the only way to collect data about a victim. Attackers can also
    use Google to obtain open source data. This technique is more lucrative than you
    might think, as Google attempts to find and index all web pages, some of which
    allow system administrators to control systems like IP cameras. A system administrator
    can explicitly tell Google not to crawl a specific resource by listing it in the
    *robots.txt* file on the web server. However, some web crawlers will ignore this
    file, so the best way to protect these web pages is to require user authentication.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Maltego并不是唯一收集受害者数据的方式。攻击者也可以利用Google获取开放源代码数据。这个技术比你想象的更具盈利性，因为Google尝试查找并索引所有网页，其中一些网页允许系统管理员控制像IP摄像头这样的系统。系统管理员可以通过在*robots.txt*文件中列出某个资源，明确告诉Google不要爬取该资源。然而，一些网页爬虫会忽略这个文件，因此保护这些网页的最佳方法是要求用户身份验证。
- en: By using carefully crafted Google searches, you can discover web pages that
    let you view or control systems. Let’s cover some of these queries to find sensitive
    pages.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用精心设计的Google搜索，你可以发现让你查看或控制系统的网页。让我们来看一些这些查询，来找到敏感页面。
- en: '**NOTE**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*The Computer Fraud and Abuse Act (CFAA) prohibits unauthorized access to systems
    you do not own. Because you are operating outside of your own virtual environment,
    clicking any of the links you discover during this process could constitute unauthorized
    access.*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*《计算机欺诈与滥用法案》（CFAA）禁止未经授权访问你不拥有的系统。因为你在自己的虚拟环境之外操作，所以点击你在此过程中发现的任何链接，可能构成未经授权的访问。*'
- en: 'Google allows you to use special filters to make your search more specific.
    For example, you can use the `inurl` filter to search for pages whose URLs contain
    certain patterns that can indicate the page’s functionality. For example, the
    following search will show you live cameras that have been intentionally made
    public:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Google允许你使用特殊的过滤器，使搜索更加具体。例如，你可以使用`inurl`过滤器搜索URL中包含某些模式的页面，这些模式可能表明该页面的功能。例如，以下搜索将显示那些有意公开的实时摄像头：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We assume that these cameras were intentionally made public because they’ve
    been assigned to a dedicated web page (*cam.html*). The following query attempts
    to discover IP cameras that were unintentionally exposed:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设这些摄像头是故意公开的，因为它们已被分配到一个专用网页（*cam.html*）。以下查询尝试发现那些无意中暴露的IP摄像头：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This query searches for *index.html* pages that contain the terms “live image”
    and “pop-up.” These words are typically associated with web pages that control
    cameras. You can make the search more specific by adding additional terms.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这个查询搜索包含“live image”和“pop-up”术语的*index.html*页面。这些词通常与控制摄像头的网页相关。你可以通过添加更多的术语来使搜索更具体。
- en: 'Other queries search exposed logs for plaintext usernames and passwords. For
    example, the following query uses the `filetype`, `intext`, and `after` filters
    to find log files discovered after 2019 that contain email addresses and passwords:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 其他查询会搜索暴露的日志，寻找明文用户名和密码。例如，以下查询使用了`filetype`、`intext`和`after`过滤器，来查找2019年后发现的包含电子邮件地址和密码的日志文件：
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You can find a list of these Google queries by visiting *[https://exploit-db.com/google-hacking-database/](https://exploit-db.com/google-hacking-database/)*.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过访问 *[https://exploit-db.com/google-hacking-database/](https://exploit-db.com/google-hacking-database/)*
    来查看这些 Google 查询的列表。
- en: '**Scanning the Entire Internet**'
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**扫描整个互联网**'
- en: 'Certain systems attempt to find and catalog every device on the internet and
    test them for vulnerabilities. They do this by performing a SYN scan on all 2^(32),
    or 4,294,967,296, IPv4 addresses on the internet. In this section, we’ll look
    at two tools, *Masscan* and *Shodan*, which allow attackers to scan the internet.
    There are also great academic tools, like *Zmap* from the University of Michigan:
    *[https://zmap.io/](https://zmap.io/)*.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一些系统尝试查找并记录互联网上的每个设备，并测试它们的漏洞。它们通过对互联网上所有 2^(32) 或 4,294,967,296 个 IPv4 地址执行
    SYN 扫描来实现这一点。在本节中，我们将讨论两种工具，*Masscan* 和 *Shodan*，这两种工具允许攻击者扫描互联网。还有一些很棒的学术工具，如密歇根大学的
    *Zmap*：[https://zmap.io/](https://zmap.io/)。
- en: '***Masscan***'
  id: totrans-72
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Masscan***'
- en: Masscan is an internet-scale scanner that scans for open TCP and UDP ports.
    Its creator, Robert Graham, has implemented his own custom TCP/IP stack, allowing
    the program to scan the entire IPv4 internet in less than 10 minutes. This is
    possible because Masscan is capable of transmitting up to 10 million packets per
    second. Unlike `nmap`, which synchronously sends SYN packets and waits for SYN-ACK
    responses, Masscan sends multiple SYN packets independently, or asynchronously,
    without waiting for a response to the previous packet.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Masscan 是一个互联网规模的扫描器，用于扫描开放的 TCP 和 UDP 端口。它的创作者 Robert Graham 实现了自定义的 TCP/IP
    协议栈，使得该程序可以在不到 10 分钟的时间内扫描整个 IPv4 互联网。这之所以可能，是因为 Masscan 每秒能够发送高达 1000 万个数据包。与
    `nmap` 不同，`nmap` 是同步发送 SYN 数据包并等待 SYN-ACK 响应，而 Masscan 是独立地或异步地发送多个 SYN 数据包，不等待对前一个数据包的响应。
- en: Transmitting this many packets requires special hardware and software. The machine
    running Masscan must have a 10Gbps Ethernet adapter and the *PF_RING ZC* driver
    installed. Running Masscan on a virtual machine also limits the number of packets
    you can transmit. Masscan performs best when you run it directly on a Linux machine.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 发送这么多数据包需要特殊的硬件和软件。运行 Masscan 的机器必须配备 10Gbps 以太网适配器，并安装 *PF_RING ZC* 驱动程序。在虚拟机上运行
    Masscan 也会限制你可以发送的数据包数量。Masscan 在直接运行于 Linux 机器上时表现最佳。
- en: For our purposes, we’ll run it at a much more modest rate of only 100,000 packets
    per second. We’ll also scan only a single port. With this configuration, it will
    take about 10 hours to scan every IPv4 device on the internet. Still, this configuration
    lets us use our Kali Linux virtual machine without any special hardware or software.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的，我们将以每秒仅 100,000 个数据包的速度运行。我们还将只扫描一个端口。使用此配置，扫描整个互联网的每个 IPv4 设备大约需要 10
    小时。尽管如此，这种配置仍然让我们可以使用没有特殊硬件或软件的 Kali Linux 虚拟机。
- en: '**Using an Exclusion List**'
  id: totrans-76
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用排除列表**'
- en: 'One more thing: you don’t actually want to scan the entire internet. The administrators
    of certain government and military servers don’t take kindly to being scanned.
    For this reason, several groups have compiled lists of IP addresses that you should
    not scan, called *exclusion lists*. You can find such an exclusion list at *[https://github.com/robertdavidgraham/masscan/blob/master/data/exclude.conf](https://github.com/robertdavidgraham/masscan/blob/master/data/exclude.conf)*.
    This list includes the IP addresses of machines at the NASA headquarters, the
    NASA Information and Electronic Systems Laboratory, and a US Navy computer and
    telecommunications station. Do **NOT** scan these.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一点：你实际上不想扫描整个互联网。某些政府和军队服务器的管理员对于被扫描并不友好。因此，几个组织已经编制了不应该扫描的 IP 地址列表，这些列表被称为
    *排除列表*。你可以在 *[https://github.com/robertdavidgraham/masscan/blob/master/data/exclude.conf](https://github.com/robertdavidgraham/masscan/blob/master/data/exclude.conf)*
    找到这样的排除列表。这个列表包含了 NASA 总部、NASA 信息与电子系统实验室以及美国海军计算机与通信站的机器的 IP 地址。**不要**扫描这些地址。
- en: 'Download this list and save it to a file called *exclude.txt*. It should look
    something like this:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 下载此列表并保存为名为 *exclude.txt* 的文件。它应类似于以下内容：
- en: '[PRE8]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You might say that this exclusion list could double as an attack list. But you
    are an ethical hacker and hacking these systems would be unethical. The list also
    contains several honey pots operated by the FBI and other agencies. A *honey pot*
    is a vulnerable machine intentionally placed in a network as bait for attackers.
    When a hacker compromises one of these machines, the owner can discover the hacker’s
    tools and techniques by monitoring the honey pot’s activity.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会说，这个排除列表也可以当作攻击列表使用。但您是一个道德黑客，黑入这些系统是不道德的。该列表还包含由 FBI 和其他机构操作的多个蜜罐。*蜜罐*是故意在网络中放置的一个易受攻击的机器，作为攻击者的诱饵。当黑客入侵其中一台机器时，拥有者可以通过监视蜜罐的活动来发现黑客的工具和技术。
- en: 'Here are some FBI honey pots included in the exclusion list (it’s important
    to update your exclusion list regularly because these might change):'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这是排除列表中包含的一些 FBI 蜜罐（重要的是定期更新您的排除列表，因为这些可能会发生变化）：
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Performing a Masscan Scan**'
  id: totrans-83
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**执行 Masscan 扫描**'
- en: 'Now let’s use Masscan to execute a quick scan of our virtual network. Open
    your preferred text editor and add the following:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 Masscan 执行一次虚拟网络的快速扫描。打开您喜欢的文本编辑器，并添加以下内容：
- en: '[PRE10]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `rate` represents the number of packets to transmit per second ➊. The next
    options determine the format of the output file, along with the type of information
    to include. We also specify the range of ports to scan ➋. Here, we’re scanning
    all possible ports, from 0 to 65,535\. Next, we specify the range of IP addresses
    ➌ to scan. We’ll scan all the IP addresses in our virtual environment. Finally,
    we specify our execution list ➍. Though we don’t need it for our environment,
    you should include it when doing public internet scans.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`rate`表示每秒要传输的数据包数量 ➊。接下来的选项决定了输出文件的格式，以及包含哪些信息类型。我们还指定了要扫描的端口范围 ➋。在这里，我们扫描所有可能的端口，从
    0 到 65,535\. 接下来，我们指定了要扫描的 IP 地址范围 ➌。我们将扫描虚拟环境中的所有 IP 地址。最后，我们指定了执行列表 ➍。虽然在我们的环境中不需要它，但进行公共互联网扫描时，应该包含此项。'
- en: Save the file as *scan.conf*. Although it’s possible to supply these parameters
    as command line arguments, creating a configuration file like this one makes it
    easier to repeat the scan.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为 *scan.conf*。尽管可以将这些参数作为命令行参数提供，但创建这样的配置文件使得重复扫描变得更容易。
- en: 'Open a terminal on your Kali Linux virtual machine and run the scan by executing
    the following command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 Kali Linux 虚拟机的终端，并通过执行以下命令来运行扫描：
- en: '[PRE11]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Your Kali Linux virtual machine should come with Masscan preinstalled. As the
    scan runs, you should see the following status screen:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 Kali Linux 虚拟机应该已经预装了 Masscan。随着扫描的进行，您应该会看到以下状态屏幕：
- en: '[PRE12]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'After the scan completes, you can view the XML results by opening *scan.xml*
    in Mousepad or your preferred text editor. It will contain a list of machines
    and open ports:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描完成后，您可以通过在 Mousepad 或您喜欢的文本编辑器中打开 *scan.xml* 来查看 XML 结果。它将包含一份机器和开放端口的列表：
- en: '[PRE13]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The line that begins with `host endtime=` ➊ indicates that Masscan has detected
    an open TCP port (`portid=`) with the ID `32228` on a machine with the IP address
    (`addr=`) `192.168.1.101`.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以 `host endtime=` 开头的行 ➊ 表示 Masscan 检测到一台机器上的开放 TCP 端口（`portid=`），该端口的 ID 是
    `32228`，机器的 IP 地址（`addr=`）是 `192.168.1.101`。
- en: '**Reading Banner Information**'
  id: totrans-95
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**读取横幅信息**'
- en: Masscan can also open a TCP connection on a port and download *banners* information
    that normally includes details about the application running on that port. For
    example, the banner might include the application’s version. This is extremely
    useful because as soon as a company discloses a known vulnerability in some software,
    a powerful machine running Masscan can identify all internet-facing vulnerable
    machines in less than 10 minutes.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Masscan 还可以在某个端口上打开 TCP 连接，并下载通常包含该端口上运行的应用程序的详细信息的 *横幅* 信息。例如，横幅可能包括该应用程序的版本。这非常有用，因为一旦公司披露某些软件中的已知漏洞，运行
    Masscan 的强大机器可以在不到 10 分钟的时间里识别出所有面向互联网的易受攻击的机器。
- en: For example, servers running older versions of the OpenSSL library are vulnerable
    to an attack called Heartbleed. In [Chapter 9](ch09.xhtml#ch9), we’ll examine
    the details of Heartbleed, which can allow hackers to read a server’s memory.
    For now, let’s see how a hacker might use Masscan to detect all the machines on
    the internet that are vulnerable to the attack.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，运行较旧版本 OpenSSL 库的服务器容易受到名为 Heartbleed 的攻击。在 [第 9 章](ch09.xhtml#ch9) 中，我们将详细探讨
    Heartbleed，它可以允许黑客读取服务器的内存。现在，让我们看看黑客如何使用 Masscan 检测互联网上所有易受攻击的机器。
- en: 'Earlier I mentioned that Masscan used its own custom TCP/IP implementation.
    Although this implementation works seamlessly for scanning, it conflicts with
    an operating system’s TCP/IP implementation when it attempts to establish a TCP
    connection and download a banner. You can circumvent this by using the `--source-ip`
    option to assign a unique network ID to the packets Masscan sends. Carefully select
    this IP address to ensure that it’s unique on the network (so that IP packets
    aren’t forwarded to another machine):'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 之前我提到过，Masscan使用了自定义的TCP/IP实现。尽管这种实现非常适合扫描，但它在尝试建立TCP连接并下载横幅时，与操作系统的TCP/IP实现发生冲突。你可以通过使用`--source-ip`选项为Masscan发送的数据包分配一个唯一的网络ID来规避此问题。仔细选择此IP地址，以确保它在网络中是唯一的（以避免IP数据包被转发到其他机器）：
- en: '[PRE14]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Here we’ve specified the range of IP addresses to scan using *CIDR notation*
    (see [Chapter 2](ch02.xhtml#ch2) for an explanation of CIDR notation). Next, we
    select the port to check. In this case, we are checking port 443 (`-p443`), which
    is associated with the HTTPS protocol. We then need to inspect the banner (`--banners`)
    for the OpenSSL version numbers associated with the Heartbleed (`--heartbleed`)
    vulnerability. Simultaneously establishing multiple TCP connections can cause
    conflicts between Masscan’s TCP/IP stack and that of the operating system, so
    we label outgoing packets with a new source IP address (`--source-ip`) not used
    by other machines on the network to avoid conflicts.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用*CIDR表示法*（详见[第2章](ch02.xhtml#ch2)了解CIDR表示法）指定了要扫描的IP地址范围。接下来，我们选择要检查的端口。在这个例子中，我们检查端口443（`-p443`），它与HTTPS协议相关。然后，我们需要检查横幅（`--banners`），以获取与Heartbleed（`--heartbleed`）漏洞相关的OpenSSL版本号。同时，建立多个TCP连接可能会导致Masscan的TCP/IP栈与操作系统的TCP/IP栈发生冲突，因此我们为外发的数据包指定一个新的源IP地址（`--source-ip`），避免与网络中其他机器发生冲突。
- en: 'Once the scan completes, we should see the following output:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描完成后，我们应该看到以下输出：
- en: '[PRE15]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The scan detected that port 443 is open on one host ➊ and that the machine might
    be running a vulnerable version of OpenSSL.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描检测到端口443在主机➊上开放，并且该机器可能运行着一个易受攻击的OpenSSL版本。
- en: 'You’ll need to follow extra steps if you decide to run this scan outside of
    your virtual test environment, especially if you’re running the scan over Wi-Fi.
    In particular, you’ll need to prevent your operating system from interfering by
    blocking the port that Masscan uses with a firewall. On Linux, the `iptables`
    program allows editing of firewall rules. Run the following command to create
    a new rule:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定在虚拟测试环境之外运行此扫描，尤其是在通过Wi-Fi运行扫描时，你需要采取额外步骤。特别是，你需要防止操作系统干扰，通过防火墙阻止Masscan使用的端口。在Linux上，`iptables`程序允许编辑防火墙规则。运行以下命令以创建新规则：
- en: '[PRE16]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This rule drops (`-j DROP`) all incoming (`-A INPUT`) packets associated with
    the TCP protocol (`-p tcp`) on port 3000 (`--dport`3000). I discuss firewalls
    in more detail in [Chapter 16](ch16.xhtml#ch16). For additional nuances on Masscan,
    read the Masscan documentation at *[https://github.com/robertdavidgraham/masscan/](https://github.com/robertdavidgraham/masscan/)*.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 该规则丢弃（`-j DROP`）所有与TCP协议（`-p tcp`）相关的传入（`-A INPUT`）数据包，端口为3000（`--dport`3000）。我在[第16章](ch16.xhtml#ch16)中会更详细地讨论防火墙。有关Masscan的更多细节，请阅读Masscan文档，链接为*[https://github.com/robertdavidgraham/masscan/](https://github.com/robertdavidgraham/masscan/)*。
- en: '***Shodan***'
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Shodan***'
- en: Like Google, *Shodan* is a search engine. But unlike Google, which searches
    for web pages, Shodan searches for active IP addresses. When it finds one, it
    collects as much information about that device as it can, including information
    on the device’s operating system, open ports, software versions, and location.
    Shodan catalogs this information and makes it searchable through a web page and
    Python API, so when hackers and security researchers discover a software vulnerability,
    they can use Shodan to find vulnerable devices.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 像Google一样，*Shodan*是一个搜索引擎。但与搜索网页的Google不同，Shodan搜索的是活动的IP地址。当它找到一个地址时，它会尽可能收集该设备的更多信息，包括设备的操作系统、开放端口、软件版本和位置。Shodan将这些信息进行编目，并通过网页和Python
    API提供搜索功能，因此当黑客和安全研究人员发现软件漏洞时，他们可以使用Shodan来找到易受攻击的设备。
- en: 'For example, the following search query returns Apache version 2.4.46 web servers
    that support HTTPS:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下搜索查询返回支持HTTPS的Apache 2.4.46版本的Web服务器：
- en: '[PRE17]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[Figure 8-7](ch08.xhtml#ch8fig7) shows the redacted result of running the query
    on Shodan.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[图8-7](ch08.xhtml#ch8fig7)展示了在Shodan上运行查询后的修改结果。'
- en: '![image](../images/ch08fig07.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig07.jpg)'
- en: '*Figure 8-7: The redacted results of running a query on Shodan*'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8-7：在Shodan上运行查询的删减结果*'
- en: 'Shodan also supports several filters for refining the search results. For example,
    the `os` filter limits the results to include only certain operating systems and
    the `city` filter limits results to machines in a specific city. The following
    search query returns Linux servers in Charlottesville, Virginia, that run Apache
    and support HTTPS:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Shodan还支持几个过滤器来精炼搜索结果。例如，`os`过滤器将结果限制为仅包含特定操作系统的设备，`city`过滤器将结果限制为某个特定城市的机器。以下查询返回位于弗吉尼亚州夏洛茨维尔、运行Apache并支持HTTPS的Linux服务器：
- en: '[PRE18]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You can find a list of Shodan filters at *[https://github.com/JavierOlmedo/shodan-filters/](https://github.com/JavierOlmedo/shodan-filters/)*.
    Shodan allows only registered users to run filtered queries, but you can always
    register with your Protonmail account.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在*[https://github.com/JavierOlmedo/shodan-filters/](https://github.com/JavierOlmedo/shodan-filters/)*找到Shodan过滤器的列表。Shodan仅允许注册用户运行过滤查询，但你总是可以使用你的Protonmail账户进行注册。
- en: 'However, there’s a downside to using Shodan: it logs your IP address every
    time you query Shodan. This is bad, because Shodan now knows your IP address and
    who you’re scanning. Thus, it might be better to set up your own scanning machine.
    In [Chapter 16](ch16.xhtml#ch16), I’ll show you how you can set up such an anonymous
    hacking environment. Now let’s discuss some limitations of current scanning methods.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，使用Shodan也有一个缺点：每次查询Shodan时，它都会记录你的IP地址。这不好，因为Shodan现在知道你的IP地址和你正在扫描的内容。因此，最好是设置你自己的扫描机器。在[第16章](ch16.xhtml#ch16)中，我将向你展示如何设置这样一个匿名的黑客环境。现在，让我们讨论一下当前扫描方法的局限性。
- en: '**IPv6 and NAT Limitations**'
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**IPv6和NAT的局限性**'
- en: Internet scanners are unable to scan private IP ranges behind routers that implement
    a system called *network address translation (NAT)*. This means that, often, the
    only devices that show up on public scans are public devices like cable modems
    and the Wi-Fi routers. To understand NAT and how it affects scanning, we must
    first discuss the limitations of IPv4.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网扫描器无法扫描位于路由器后面的私有IP范围，路由器采用了一个叫做*网络地址转换（NAT）*的系统。这意味着，通常，公开扫描中唯一显示的设备是像电缆调制解调器和Wi-Fi路由器这样的公共设备。为了理解NAT以及它如何影响扫描，我们必须首先讨论IPv4的局限性。
- en: '***Internet Protocol Version 6 (IPv6)***'
  id: totrans-120
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***互联网协议版本6（IPv6）***'
- en: So far, I’ve discussed scanning the approximately four billion possible addresses
    in IPv4\. However, there are approximately eight billion people on Earth, some
    of whom have multiple devices like phones, laptops, video game consoles, and IoT
    devices. There are approximately 50 billion internet-connected devices. Four billion
    addresses is not enough.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我已经讨论了扫描约40亿个可能的IPv4地址。然而，地球上大约有80亿人，其中一些人拥有多个设备，如手机、笔记本电脑、视频游戏控制台和物联网设备。互联网上大约有500亿个联网设备。40亿个地址是不够的。
- en: Two solutions were proposed to deal with this problem. The first was to share
    a single IP address between multiple people using NAT and the second was to create
    a new version of IP called *Internet Protocol (IPv6)* that contains a larger number
    of possible addresses.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，提出了两种解决方案。第一种是通过NAT让多个人共享一个IP地址，第二种是创建一个新版本的IP，称为*互联网协议（IPv6）*，它包含更多可能的地址。
- en: The designers of IPv6 proposed allocating more bits to each IP address. Instead
    of using 32-bit IPv4 addresses, IPv6 addresses are 128 bits long, which increases
    the number of possible IP addresses from four billion to 2^(128), or 340 undecillion
    (one trillion multiplied by itself three times).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6的设计者提出了为每个IP地址分配更多位的方案。IPv6地址采用128位长度，而不是使用32位的IPv4地址，这使得可能的IP地址数量从40亿增加到2^(128)，即340万亿亿亿（一万亿的三次方）。
- en: 'Unlike IPv4 addresses, for which 8-bit segments are represented by decimal
    numbers between 0 and 255, IPv6 addresses are represented as hexadecimal numbers,
    each of which represents an 8-bit sequence. IPv6 addresses are commonly written
    as eight pairs of hexadecimal numbers separated by colons. Following is an example
    of an IPv6 address:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 与IPv4地址不同，IPv4地址的8位段由介于0到255之间的十进制数字表示，而IPv6地址则以十六进制数字表示，每个十六进制数字代表一个8位序列。IPv6地址通常写作由冒号分隔的八对十六进制数字。以下是一个IPv6地址的示例：
- en: '[PRE19]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Because the IPv6 search space is so large, tools like Masscan can’t scan every
    IPv6 address.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 由于IPv6的搜索空间如此之大，像Masscan这样的工具无法扫描每个IPv6地址。
- en: You might be wondering why some machines still use IPv4 if a new standard exists.
    Switching to IPv6 requires updating the NICs and routers in the network. So, until
    infrastructure is updated, several systems will need to maintain backward compatibility
    with IPv4.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，如果已经有新的标准，为什么还有一些设备在使用IPv4呢？切换到IPv6需要更新网络中的网卡和路由器。因此，直到基础设施更新之前，许多系统需要与IPv4保持向后兼容。
- en: '***NAT***'
  id: totrans-128
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***NAT***'
- en: Because we can’t instantaneously upgrade all the equipment in the network to
    IPv6, home Wi-Fi routers use NAT to allow all devices in the home to share a single
    IP address. For example, consider the small home network depicted in [Figure 8-8](ch08.xhtml#ch8fig8),
    consisting of a laptop and mobile phone.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们无法立即将网络中的所有设备升级到IPv6，家庭Wi-Fi路由器使用NAT让家庭中的所有设备共享一个单一的IP地址。例如，考虑[图8-8](ch08.xhtml#ch8fig8)中描述的小型家庭网络，其中包括一台笔记本电脑和一部手机。
- en: '![image](../images/ch08fig08.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig08.jpg)'
- en: '*Figure 8-8: Example home network that uses NAT*'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8-8：使用NAT的示例家庭网络*'
- en: The cable modem is assigned a single IP address by the ISP, and it shares that
    address with the Wi-Fi router (the cable modem and router are bundled into a single
    device in some home networks). The router then creates its own internal LAN that
    contains the IP addresses in private IP range like 192.168.0.0/16 or 10.0.0.0/8\.
    These IP addresses are completely internal and will never be seen by an external
    network.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 电缆调制解调器由ISP分配一个单一的IP地址，并将该地址与Wi-Fi路由器共享（在某些家庭网络中，电缆调制解调器和路由器合并为一个设备）。然后，路由器会创建自己的内部局域网（LAN），该局域网包含类似192.168.0.0/16或10.0.0.0/8等私有IP地址范围的IP地址。这些IP地址完全是内部的，不会被外部网络看到。
- en: The Wi-Fi router must also map those internal IP addresses to a single external
    IP address. How is this possible? The router manages the mapping using port numbers.
    For example, the laptop may be mapped to the external IP address on port 1, whereas
    the mobile device may be mapped to the same external IP address on port 2.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: Wi-Fi路由器还必须将这些内部IP地址映射到一个单一的外部IP地址。这是如何做到的呢？路由器通过端口号管理这种映射。例如，笔记本电脑可能被映射到外部IP地址的端口1，而移动设备则可能被映射到相同的外部IP地址的端口2。
- en: But remember that network communication occurs between processes, and each device
    (like the laptop and phone) may be running multiple processes. Thus, the devices
    might each need multiple ports through which to make connections. We can solve
    this problem by assigning a unique port to each process. For example, the browser
    process running on port 562 of the laptop with IP address 192.168.1.101 might
    be assigned the external address (168.1.25.153) on port 8002, whereas the game
    running on port 452 of the laptop is assigned to port 5002 on the same external
    address. The table that keeps track of these assignments is called the NAT table.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 但请记住，网络通信发生在进程之间，每个设备（如笔记本和手机）可能在运行多个进程。因此，设备可能需要多个端口来进行连接。我们可以通过为每个进程分配一个唯一的端口来解决这个问题。例如，运行在端口562上的笔记本浏览器进程（IP地址为192.168.1.101）可能会分配给外部地址（168.1.25.153）上的端口8002，而在端口452上运行的笔记本游戏则分配给相同外部地址上的端口5002。记录这些分配的表格称为NAT表。
- en: You can see an example of this kind of mapping in [Figure 8-9](ch08.xhtml#ch8fig9).
    When the packet leaves the internal network, the source IP is replaced with an
    entry in the NAT table, making it appear as though all the traffic is coming from
    a single IP address running multiple processes.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[图8-9](ch08.xhtml#ch8fig9)中看到这种映射的示例。当数据包离开内部网络时，源IP会被NAT表中的条目替换，这使得所有流量看起来都来自一个IP地址，同时运行多个进程。
- en: '![image](../images/ch08fig09.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig09.jpg)'
- en: '*Figure 8-9: How the source IP address and port are replaced*'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8-9：如何替换源IP地址和端口*'
- en: If a packet arrives at the modem at 168.1.25.153 on port 8002, the modem will
    forward it to the router, which then will replace the destination address with
    the corresponding private address.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据包到达位于168.1.25.153上的调制解调器，并且端口为8002，调制解调器会将其转发到路由器，路由器随后会将目标地址替换为相应的私有地址。
- en: NAT also prevents scanning services like Masscan from directly connecting to
    devices connected to routers that implement NAT. This is why we designed the reverse
    shell in [Chapter 4](ch04.xhtml#ch4). It initiated the connection to the server,
    and not the other way around.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: NAT还防止像Masscan这样的扫描服务直接连接到实现NAT的路由器所连接的设备。这就是我们在[第4章](ch04.xhtml#ch4)中设计反向Shell的原因。它发起了与服务器的连接，而不是反过来。
- en: '**Vulnerability Databases**'
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**漏洞数据库**'
- en: '*Vulnerability databases* contain collections of known vulnerabilities. As
    I’ve discussed, once a hacker uses OSINT techniques to learn about a victim’s
    systems, they can search vulnerability databases for a way to access those systems.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '*漏洞数据库*包含已知漏洞的集合。正如我所讨论的，一旦黑客使用 OSINT 技术了解受害者的系统，他们就可以搜索漏洞数据库，寻找访问这些系统的方式。'
- en: One popular vulnerability database is Exploit Database (*[https://exploit-db.com/](https://exploit-db.com/)*),
    which contains information on vulnerabilities and instructions on how to exploit
    them. [Figure 8-10](ch08.xhtml#ch8fig10) shows its interface.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 一个流行的漏洞数据库是 Exploit Database (*[https://exploit-db.com/](https://exploit-db.com/)*)，它包含漏洞信息以及如何利用这些漏洞的说明。[图
    8-10](ch08.xhtml#ch8fig10) 显示了它的界面。
- en: '![image](../images/ch08fig10.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig10.jpg)'
- en: '*Figure 8-10: Exploit Database’s list of vulnerabilities*'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-10：Exploit Database 的漏洞列表*'
- en: In addition, NIST maintains the *National Vulnerability Database (NVD)*, which
    contains a collection of known vulnerabilities, at *[https://nvd.nist.gov/vuln/search](https://nvd.nist.gov/vuln/search)*.
    NIST also provides feeds that allow ethical hackers to get updates when new vulnerabilities
    are discovered. This database is synced with the *Common Vulnerabilities and Exposures
    (CVE)* database maintained by Mitre. [Figure 8-11](ch08.xhtml#ch8fig11) shows
    a CVE database entry about an Apache vulnerability.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，NIST 维护了 *国家漏洞数据库 (NVD)*，该数据库包含已知漏洞的集合，网址为 *[https://nvd.nist.gov/vuln/search](https://nvd.nist.gov/vuln/search)*。NIST
    还提供了订阅服务，允许道德黑客在发现新漏洞时获得更新。这个数据库与由 Mitre 维护的 *公共漏洞和暴露 (CVE)* 数据库同步。[图 8-11](ch08.xhtml#ch8fig11)
    显示了一个关于 Apache 漏洞的 CVE 数据库条目。
- en: '![image](../images/ch08fig11.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig11.jpg)'
- en: '*Figure 8-11: Entry for Apache Server CVE 2020-9491 vulnerability*'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-11：Apache 服务器 CVE 2020-9491 漏洞的条目*'
- en: 'CVE entries follow a particular naming structure: CVE-YYYY-NNNN, where YYYY
    represents the year the vulnerability was discovered, and NNNN is a unique number
    assigned to the vulnerability.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: CVE 条目遵循特定的命名结构：CVE-YYYY-NNNN，其中 YYYY 代表漏洞被发现的年份，NNNN 是分配给漏洞的唯一编号。
- en: These tools can do damage in the wrong hands. For example, an attacker may receive
    an NVD update about a new CVE vulnerability and then search Shodan for devices
    running vulnerable software. This scenario isn’t just hypothetical. In October
    2020, the NSA released the top CVE vulnerabilities exploited by one particular
    state actor. Researchers will continue to discover new vulnerabilities and new
    lists of preferred vulnerabilities will emerge, so the cycle will continue. This
    is why it’s so important to keep your systems updated and patched.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具在错误的手中可能造成伤害。例如，攻击者可能会收到关于新 CVE 漏洞的 NVD 更新，然后搜索 Shodan 查找运行漏洞软件的设备。这个场景不仅仅是一个假设。在
    2020 年 10 月，NSA 发布了由某个国家行为者利用的 CVE 漏洞榜单。研究人员将继续发现新漏洞，并且会出现新的漏洞优选列表，因此这一循环将持续下去。这就是为什么保持系统更新和修补如此重要的原因。
- en: 'You can also search these databases from the Kali Linux command line by running
    the following:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过在 Kali Linux 命令行中运行以下命令来搜索这些数据库：
- en: '[PRE20]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'For example, the following search shows the results of running a `searchsploit`
    query on Apache 2.4:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下搜索显示了在 Apache 2.4 上运行 `searchsploit` 查询的结果：
- en: '[PRE21]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Each entry contains the name of the vulnerability and a path to a script that
    a hacker can use to exploit it. You can view the exploitation script by using
    the `-p` flag followed by the unique number that identifies the exploit. Each
    exploit file is named using a unique number. For example, the second Remote Code
    Execution exploit is named *29316.py*, so we can view information on the file
    that implements the exploit by using the following command:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 每个条目都包含漏洞的名称和黑客可以用来利用它的脚本路径。你可以使用 `-p` 标志后跟唯一编号来查看利用脚本。每个漏洞利用文件都使用唯一的编号命名。例如，第二个远程代码执行漏洞的利用脚本名为
    *29316.py*，因此我们可以使用以下命令查看实现该漏洞利用的文件信息：
- en: '[PRE22]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: You can view the exploit code by opening the file at the path shown ➊. I’ll
    discuss exploits in more detail in [Chapter 9](ch09.xhtml#ch9).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过打开显示路径 ➊ 的文件来查看利用代码。我将在 [第 9 章](ch09.xhtml#ch9) 中更详细地讨论漏洞利用。
- en: '**Vulnerability Scanners**'
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**漏洞扫描器**'
- en: Searching the vulnerability database for each system configuration is tedious.
    Luckily, vulnerability scanners can automatically scan systems and identify any
    vulnerabilities present. In this section, I’ll discuss a commercial solution called
    *Nessus*; however, there are also open source ones like the OpenVAS and Metasploit’s
    Nexpose scanning module.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索每个系统配置的漏洞数据库是繁琐的。幸运的是，漏洞扫描器可以自动扫描系统并识别任何存在的漏洞。在本节中，我将讨论一个名为 *Nessus* 的商业解决方案；但是，也有像
    OpenVAS 和 Metasploit 的 Nexpose 扫描模块这样的开源解决方案。
- en: The *Nessus Home* scanner is free, but it is limited to 16 IP addresses. We’ll
    use it to scan your virtual lab environment. Open the browser on your Kali Linux
    virtual machine and download the Nessus scanner for Debian from *[https://www.tenable.com/downloads/nessus/](https://www.tenable.com/downloads/nessus/)*.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '*Nessus Home* 扫描器是免费的，但仅限于 16 个 IP 地址。我们将使用它来扫描你的虚拟实验环境。打开 Kali Linux 虚拟机上的浏览器并从
    *[https://www.tenable.com/downloads/nessus/](https://www.tenable.com/downloads/nessus/)*
    下载适用于 Debian 的 Nessus 扫描器。'
- en: 'Next, open a terminal and go to the folder with the downloaded file:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，打开终端并进入下载文件所在的文件夹：
- en: '[PRE23]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Use the Debian package management system to install the file by running the
    following command:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Debian 包管理系统通过运行以下命令安装该文件：
- en: '[PRE24]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Remember to replace the Nessus version number with the version you downloaded.
    Next, run the following commands to start the Nessus service:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 请记得将 Nessus 的版本号替换为你下载的版本。接下来，运行以下命令来启动 Nessus 服务：
- en: '[PRE25]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'You can access Nessus through your browser. Open Firefox on Kali Linux and
    enter the following URL to connect to the Nessus server that is running on your
    Kali Linux virtual machine:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过浏览器访问 Nessus。打开 Kali Linux 上的 Firefox 浏览器并输入以下 URL，连接到运行在 Kali Linux 虚拟机上的
    Nessus 服务器：
- en: '[PRE26]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'You should see a security warning. This is because the server is using a self-signed
    certificate like the one we generated in [Chapter 6](ch06.xhtml#ch6), and your
    browser is unable to verify the certificate with the PKI. Not to worry: this certificate
    is safe, and you can add an exception. In the browser, click **Advanced** and
    select **Accept the Risk and Continue** (see [Figure 8-12](ch08.xhtml#ch8fig12)).'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到一个安全警告。这是因为服务器使用的是自签名证书，就像我们在[第 6 章](ch06.xhtml#ch6)中生成的证书一样，而你的浏览器无法通过
    PKI 验证该证书。无需担心：这个证书是安全的，你可以添加一个例外。在浏览器中，点击 **高级** 并选择 **接受风险并继续**（见 [图 8-12](ch08.xhtml#ch8fig12)）。
- en: '![image](../images/ch08fig12.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig12.jpg)'
- en: '*Figure 8-12: Accepting a certificate that isn’t validated by the PKI*'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-12：接受未通过 PKI 验证的证书*'
- en: Start all of the devices in your virtual lab environment and run the `netdiscover`
    tool that we discussed in [Chapter 2](ch02.xhtml#ch2) to get the IP addresses
    of all machines in your virtual lab environment.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 启动虚拟实验环境中的所有设备，并运行我们在[第 2 章](ch02.xhtml#ch2)中讨论的 `netdiscover` 工具，以获取虚拟实验环境中所有机器的
    IP 地址。
- en: Next, in Nessus, click the **All Scans** tab and then the **New Scans** button
    to create your first scan. Here, you can also see all of the scans you can perform
    with Nessus. Select a basic scan ([Figure 8-13](ch08.xhtml#ch8fig13)).
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在 Nessus 中，点击 **所有扫描** 标签，然后点击 **新建扫描** 按钮创建你的第一个扫描。在这里，你还可以看到可以使用 Nessus
    执行的所有扫描。选择一个基础扫描（[图 8-13](ch08.xhtml#ch8fig13)）。
- en: '![image](../images/ch08fig13.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig13.jpg)'
- en: '*Figure 8-13: A list of available scans*'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-13：可用扫描列表*'
- en: Fill out the information for your scan. We’ll limit this to just the Metasploitable
    machine, so add its IP address to the list of hosts. (Remember, you can log in
    to the Metasploitable machine using the username **msfadmin** and password **msfadmin**
    and then run the `**ifconfig**` command to obtain the virtual machine’s IP address.)
    [Figure 8-14](ch08.xhtml#ch8fig14) shows these settings.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 填写你的扫描信息。我们将仅限于扫描 Metasploitable 机器，因此将其 IP 地址添加到主机列表中。（记住，你可以使用用户名 **msfadmin**
    和密码 **msfadmin** 登录 Metasploitable 机器，然后运行 `**ifconfig**` 命令获取虚拟机的 IP 地址。）[图 8-14](ch08.xhtml#ch8fig14)
    显示了这些设置。
- en: '![image](../images/ch08fig14.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig14.jpg)'
- en: '*Figure 8-14: Create a new Nessus scan.*'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-14：创建一个新的 Nessus 扫描。*'
- en: Launch the scan. When the scan completes, click the **Vulnerabilities** tab
    to see a list of vulnerabilities ([Figure 8-15](ch08.xhtml#ch8fig15)).
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 启动扫描。当扫描完成后，点击 **漏洞** 标签查看漏洞列表（[图 8-15](ch08.xhtml#ch8fig15)）。
- en: '![image](../images/ch08fig15.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig15.jpg)'
- en: '*Figure 8-15: Vulnerabilities detected by the scan*'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-15：扫描检测到的漏洞*'
- en: Notice that the scan detected a backdoor. This is the same backdoor we exploited
    earlier. Once a hacker has identified this vulnerability, they could execute the
    attack discussed in [Chapter 1](ch01.xhtml#ch1) and gain root shell access to
    the machine.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到扫描检测到了一个后门。这与我们之前利用的后门相同。一旦黑客识别出这个漏洞，他们可以执行 [第 1 章](ch01.xhtml#ch1) 中讨论的攻击，从而获得机器的
    root shell 访问权限。
- en: '**Exercises**'
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**练习**'
- en: Explore other OSINT tools by attempting the following exercises. I’ve ordered
    the exercise by increasing difficulty. In the first exercise, you’ll use `nmap`
    to collect information about a server by performing different `nmap` scans. In
    the second exercise, you’ll use the Discover tool to run multiple OSINT tools
    and aggregate the result into a single report. In the third and final exercise,
    you will write your own OSINT tool that will retrieve an administrator’s email
    address from the whois database and check a leaked password list to see if it
    contains a plaintext password entry.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 通过尝试以下练习，探索其他 OSINT 工具。我已按难度逐步排序这些练习。在第一个练习中，你将使用 `nmap` 通过执行不同的 `nmap` 扫描来收集关于服务器的信息。在第二个练习中，你将使用
    Discover 工具运行多个 OSINT 工具，并将结果汇总到一个报告中。在第三个也是最后一个练习中，你将编写自己的 OSINT 工具，从 whois 数据库中检索管理员的电子邮件地址，并检查泄漏的密码列表，看看是否包含明文密码条目。
- en: '***nmap Scans***'
  id: totrans-184
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***nmap 扫描***'
- en: 'I’ve listed some sample `nmap` scans in the code that follows. The first scan
    uses the `http-enum` script in `nmap` to enumerate the files and folders on a
    website. This is a great way to discover hidden files or directories:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我在接下来的代码中列出了一些示例 `nmap` 扫描。第一个扫描使用 `nmap` 中的 `http-enum` 脚本列举网站上的文件和文件夹。这是发现隐藏文件或目录的好方法：
- en: '[PRE27]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The second `nmap` scan attempts to identify the server’s operating system and
    running servers while avoiding detection:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个 `nmap` 扫描尝试识别服务器的操作系统和正在运行的服务器，同时避免被检测到：
- en: '[PRE28]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The `-A` option enables operating system detection, version detection, script
    scanning, and traceroute. The `-D` flag enables scanning with decoys, which attempt
    to avoid firewall detection by sending dummy packets with a fake source IP address
    along with the scanning machine’s real IP address. The third example uses `nmap`
    as a vulnerability scanner.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`-A` 选项启用操作系统检测、版本检测、脚本扫描和 traceroute。`-D` 标志启用使用诱饵进行扫描，它通过发送带有虚假源 IP 地址的虚拟数据包与扫描机的真实
    IP 地址一起，试图避免防火墙检测。第三个示例使用 `nmap` 作为漏洞扫描器。'
- en: '[PRE29]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We supply the `vulners` script, which scans a machine and lists the CVE vulnerabilities
    it detects. You can find a complete list of all `nmap` scripts currently installed
    on your Kali Linux virtual machine by listing the contents of the *script* directory,
    as follows:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提供了 `vulners` 脚本，它会扫描机器并列出它检测到的 CVE 漏洞。你可以通过列出 Kali Linux 虚拟机上 *script* 目录的内容，找到当前安装的所有
    `nmap` 脚本的完整列表，如下所示：
- en: '[PRE30]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Lastly, try a scan of all common ports (`-p-`) using the default scripts (`-sC`),
    and output the results in normal format (`-oN`) to a file called *scanResults.nmap*:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，尝试对所有常见端口进行扫描（`-p-`），使用默认脚本（`-sC`），并将结果以普通格式（`-oN`）输出到名为 *scanResults.nmap*
    的文件中：
- en: '[PRE31]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '***Discover***'
  id: totrans-195
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Discover***'
- en: '*Discover* is an open source tool that contains various scripts to automate
    the OSINT and vulnerability scanning process. After your scans have completed,
    Discover will generate a report with the information it has found, as shown in
    [Figure 8-16](ch08.xhtml#ch8fig16).'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '*Discover* 是一款开源工具，包含各种脚本，用于自动化 OSINT 和漏洞扫描过程。在扫描完成后，Discover 会生成报告，展示它找到的信息，如
    [图 8-16](ch08.xhtml#ch8fig16) 所示。'
- en: '![image](../images/ch08fig16.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/ch08fig16.jpg)'
- en: '*Figure 8-16: Results of running the Discover scan*'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-16：运行 Discover 扫描的结果*'
- en: 'Discover includes two OSINT scanning-tool categories: passive and active. The
    key difference between these is your likelihood of being detected. Passive scans
    query records held by third parties, so victims are unlikely to know they’re being
    scanned. Active scans probe the victim’s infrastructure and are more likely to
    trigger an alarm.'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: Discover 包括两种 OSINT 扫描工具类别：被动和主动。它们之间的主要区别在于你被发现的可能性。被动扫描查询第三方保存的记录，因此受害者不太可能知道自己正在被扫描。主动扫描则探测受害者的基础设施，更容易触发警报。
- en: 'Begin by examining some of Discover’s passive scanning tools:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，检查一些 Discover 的被动扫描工具：
- en: '**ARIN and Whois**    Identifies IP addresses. (The American Registry for Internet
    Numbers is the organization that administers IP addresses and hosts the whois
    database.)'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '**ARIN 和 Whois**    识别 IP 地址。（美国互联网号码注册局是管理 IP 地址并托管 whois 数据库的组织。）'
- en: '**dnsrecon**    Collects OSINT from DNS servers. (Also supports active scanning.)'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '**dnsrecon**    从 DNS 服务器收集 OSINT。（也支持主动扫描。）'
- en: '**goofile**    Searches a domain for specific file types.'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**goofile**    搜索一个域名中的特定文件类型。'
- en: '**theHarvester**    Searches public sources on the internet, such as Google
    and LinkedIn, for email addresses that are associated with a domain under investigation.'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '**theHarvester**    从公共互联网源（如 Google 和 LinkedIn）搜索与所调查的域名相关联的电子邮件地址。'
- en: '**Metasploit scanning tool**    Performs scans with the Metasploit framework.'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '**Metasploit 扫描工具**    使用 Metasploit 框架执行扫描。'
- en: '**URLCrazy**    Checks for URL variations that could be used for squatting,
    like the *[facebeok.com](http://facebeok.com)* example we considered in [Chapter
    7](ch07.xhtml#ch7).'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '**URLCrazy**    检查可能用于抢注的 URL 变种，就像我们在[第 7 章](ch07.xhtml#ch7)中考虑的 *[facebeok.com](http://facebeok.com)*
    示例。'
- en: '**Recon-ng**    Contains a variety of tools specifically for web-based open
    source reconnaissance. (Also supports active scanning.)'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '**Recon-ng**    包含一系列专门用于基于网络的开源侦察工具。（也支持主动扫描。）'
- en: 'The following are some active scanning tools:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些主动扫描工具：
- en: '**traceroute**    Sends ICMP packets to discover routers along the path to
    a server.'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '**traceroute**    发送 ICMP 数据包以发现通往服务器的路径上的路由器。'
- en: '**Whatweb**    Probes a website to uncover the technologies used to build it.'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '**Whatweb**    探测一个网站以揭示构建它所使用的技术。'
- en: You don’t have to run these tools individually. The Discover tool will execute
    them for you and generate a comprehensive report.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要单独运行这些工具。Discover 工具会为你执行它们并生成一份综合报告。
- en: 'Run the following command to clone the Discover repository and place it in
    the *opt* directory on the Kali Linux virtual machine. This directory contains
    any Linux programs you install:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令来克隆 Discover 仓库并将其放入 Kali Linux 虚拟机中的 *opt* 目录。此目录包含你安装的所有 Linux 程序：
- en: '[PRE32]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Navigate to the directory containing the repository and run the *update.sh*
    script. This will install Discover and all of its dependencies:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到包含该仓库的目录并运行 *update.sh* 脚本。这将安装 Discover 及其所有依赖：
- en: '[PRE33]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: During the installation process, you’ll be asked to enter information to create
    a certificate. Remember that you don’t need to use your private information. Just
    make something up like you did with your previous certificates.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装过程中，你将被要求输入信息以创建证书。记住，你不需要使用个人信息。就像你之前创建证书时那样，随便填一些信息。
- en: 'The installation process takes some time. In the meantime, create a folder
    called *Results* on your Kali Linux desktop. You’ll save your reports there. When
    your installation is complete, run Discover using the following command:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程需要一些时间。在此期间，在 Kali Linux 桌面上创建一个名为 *Results* 的文件夹，用来保存你的报告。当安装完成后，使用以下命令运行
    Discover：
- en: '[PRE34]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: As practice, select the domain option from the **Recon** menu and run both a
    passive and active scan on a domain that you own or have acquired permission to
    scan. The scan can take more than an hour to complete.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 作为练习，从 **Recon** 菜单中选择域名选项，并对你拥有或已获得扫描许可的域名进行被动和主动扫描。扫描可能需要超过一小时的时间。
- en: 'Discover should output the results of the scan to the following folder: */root/data/*.
    Move this to your *Results* folder for easy access by running the following command:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: Discover 应将扫描结果输出到以下文件夹：*/root/data/*。运行以下命令，将其移动到你的 *Results* 文件夹以便于访问：
- en: '[PRE35]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: What information did you discover?
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 你发现了什么信息？
- en: '***Writing Your Own OSINT Tool***'
  id: totrans-223
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***编写你自己的 OSINT 工具***'
- en: How much of of the web can you PWN on your own? Write a scanner that does a
    whois lookup on any of the four billion IPv4 addresses. It’s okay to check all
    IP addresses given that you aren’t connecting to these IP addresses. Instead,
    you’re looking up the admin’s information in a public database.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 你能够在自己的能力范围内掌握多少网络？写一个扫描器，执行对四十亿 IPv4 地址中的任意一个进行 whois 查询。由于你不会连接这些 IP 地址，所以可以检查所有
    IP 地址，实际上，你是在公共数据库中查找管理员的信息。
- en: In other words, you should be able to run
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，你应该能够运行
- en: '[PRE36]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: and extract any email addresses it finds. Then, use the `haveibeenpwnded` API
    available at *[https://haveibeenpwned.com/API/v2](https://haveibeenpwned.com/API/v2)*
    to see if the administrator email address was associated with a password leak.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 并提取任何发现的电子邮件地址。然后，使用 *[https://haveibeenpwned.com/API/v2](https://haveibeenpwned.com/API/v2)*
    提供的 `haveibeenpwned` API 查看管理员的电子邮件地址是否与密码泄露相关。
- en: For testing purposes, you might want to limit your scan to only a couple of
    addresses, and then scale it up after your tool works.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 出于测试目的，你可能只想限制扫描某几个地址，等工具正常工作后再进行更大范围的扫描。
- en: '**Bonus**'
  id: totrans-229
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**奖励**'
- en: Check the leaked database containing the 1.4 billion email addresses and passwords
    you downloaded earlier. Does it contain a password entry for the email address
    returned by the whois command? Loop through a collection of IP addresses and output
    a CSV file in which each line contains an IP address, email address, and password.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 检查之前下载的包含14亿个电子邮件地址和密码的泄露数据库。它是否包含whois命令返回的电子邮件地址的密码条目？遍历一组IP地址，并输出一个CSV文件，其中每一行包含一个IP地址、电子邮件地址和密码。
