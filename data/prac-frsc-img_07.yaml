- en: '**6**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**6**'
- en: '**FORENSIC IMAGE ACQUISITION**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**取证图像获取**'
- en: '![image](../images/common-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common-01.jpg)'
- en: This chapter explains the forensic imaging of storage media, with an emphasis
    on performing forensically sound image acquisition. This means maximizing the
    amount of data extracted from a particular storage medium, minimizing the disturbance
    to the storage device and medium, preserving the collected evidence, and documenting
    the process (including errors).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章解释了存储介质的取证成像，重点是执行取证性图像获取。这意味着最大化从特定存储介质中提取的数据量，最小化对存储设备和介质的干扰，保存收集到的证据，并记录过程（包括错误）。
- en: You’ll read about several tools and approaches here, as well as the strengths
    and weaknesses of each. As a result, you’ll be able to make an informed decision
    about which tool is most appropriate in a particular situation. You’ll learn how
    to use a variety of free or open source forensic imaging tools, such as dd, dcfldd,
    dc3dd, ewfacquire, and ftkimager-cli. In addition, I describe the sfsimage tool
    as a script that uses existing acquisition tools to create a SquashFS forensic
    evidence container.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在这里阅读到几种工具和方法，以及每种工具的优缺点。结果，你将能够根据特定情况做出明智的决定，选择最合适的工具。你将学习如何使用多种免费的或开源的取证成像工具，例如dd、dcfldd、dc3dd、ewfacquire和ftkimager-cli。此外，我还描述了sfsimage工具，这是一个使用现有获取工具创建SquashFS取证证据容器的脚本。
- en: How do you choose which tool to use when imaging a disk? To some extent, it’s
    a matter of personal preference. You may know one tool better than another or
    trust one particular tool based on past experience (or distrust a tool based on
    past experience). Each tool has its strengths and unique features. Forensic labs
    that use EnCase or FTK extensively might choose ewfacquire or ftkimager-cli for
    compatibility and policy reasons. Dcfldd and dc3dd are based on mature and well-tested
    software, and they were designed to forensically acquire raw images with extensive
    hashing and logging. For disks with many bad blocks, GNU ddrescue might be a good
    choice. For integrated hashing, encryption, and compression during acquisition,
    recent versions of dd_rescue might be an interesting alternative. Ultimately,
    the tool used will depend on the forensic lab’s organizational policy, the type
    of examination, your personal preferences, and other circumstances. No particular
    tool is recommended in this book.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行磁盘成像时，如何选择使用哪个工具？在某种程度上，这取决于个人偏好。你可能比其他工具更熟悉某个工具，或者基于过去的经验信任某个特定的工具（或者由于过去的经验不信任某个工具）。每个工具都有其优势和独特的功能。广泛使用EnCase或FTK的取证实验室可能会选择ewfacquire或ftkimager-cli，出于兼容性和政策原因。dcfldd和dc3dd基于成熟且经过充分测试的软件，旨在进行取证性原始图像获取，并且具备广泛的哈希计算和日志记录功能。对于具有许多坏道的磁盘，GNU
    ddrescue可能是一个不错的选择。对于在获取过程中进行集成哈希、加密和压缩，近期版本的dd_rescue可能是一个有趣的替代方案。最终，所使用的工具将取决于取证实验室的组织政策、检查类型、个人偏好以及其他情况。本书中没有推荐特定的工具。
- en: 'All the examples in this chapter make the following assumptions:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的所有示例都基于以下假设：
- en: • The subject storage device is physically attached to the forensics exam-iner’s
    acquisition workstation.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: • 受检存储设备物理上连接到取证检查员的获取工作站。
- en: • The subject storage device has been positively identified.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: • 受检存储设备已被确认。
- en: • The appropriate write-blocking mitigation is in place to prevent modification
    of the subject drive.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: • 已采取适当的写入阻断措施，以防止修改受检驱动器。
- en: • Disk capacity planning has been performed to ensure disk space is not an issue.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: • 已经进行了磁盘容量规划，以确保磁盘空间不成为问题。
- en: '**Acquire an Image with dd Tools**'
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用dd工具获取图像**'
- en: The resulting image file from dd-based tools is not a “format” in the same sense
    as other forensic formats, such as EnCase EWF or FTK SMART. Images created by
    dd-based tools don’t have a header, a footer, internal markers, or descriptive
    metadata about a case or incident. They are simply a raw mirror image of a chunk
    of data, in this case, a mirror image of a subject disk or other mass storage.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用基于dd的工具生成的图像文件，并不像其他取证格式（例如EnCase EWF或FTK SMART）那样是“格式”。由dd工具创建的图像没有头部、尾部、内部标记，或者有关案件或事件的描述性元数据。它们只是数据的一种原始镜像，在本例中，是受检磁盘或其他大容量存储的镜像。
- en: '**NOTE**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '***Warning:** the dd tools are unforgiving if you make any mistakes and will
    irrevocably overwrite any unprotected disk if instructed.*'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '***警告：** 如果你犯任何错误，dd工具将毫不宽容地不可逆地覆盖任何未受保护的磁盘。*'
- en: 'To reduce the risk of damaging evidence or an examiner workstation, always
    double-check the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少损坏证据或检查工作站的风险，始终仔细检查以下事项：
- en: • A write blocker is protecting the evidence/subject drive.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: • 写保护器正在保护证据/目标驱动器。
- en: • The serial number of the input device (`if=`) matches the serial number on
    the physical subject disk label.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: • 输入设备的序列号（`if=`）与物理目标磁盘标签上的序列号匹配。
- en: • Confirm the output file (`of=`) is a regular file located on the examiner
    system or a program that can handle the expected input to stdin.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: • 确认输出文件（`of=`）是一个普通文件，位于检查员系统中，或者是一个能够处理预期输入的程序，接收标准输入（stdin）。
- en: '***Standard Unix dd and GNU dd***'
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***标准 Unix dd 和 GNU dd***'
- en: 'The command syntax for dd simply specifies an input file and an output file,
    and it may include other options that modify the command’s behavior. The following
    example shows the use of dd to copy a disk block device to a file:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: dd 命令的语法简单地指定了输入文件和输出文件，并且可以包括其他选项来修改命令的行为。以下示例展示了使用 dd 将磁盘块设备复制到文件的操作：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here `if=` specifies the input file, which in this case is a raw disk device
    attached to the acquisition system. The `of=` parameter is the output file, which
    is a normal file that contains the raw data copied from the disk device. On completion,
    dd reports how many bytes were transferred. You can divide the number of bytes
    transferred by the sector size, and the result should exactly match the number
    of sectors identified when you attached the device.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的 `if=` 指定了输入文件，在此情况下是连接到采集系统的原始磁盘设备。`of=` 参数是输出文件，它是一个包含从磁盘设备复制的原始数据的普通文件。完成后，dd
    会报告传输了多少字节。你可以将传输的字节数除以扇区大小，结果应该与连接设备时识别的扇区数完全匹配。
- en: There can be challenges when using dd to forensically image a disk. If read
    errors occur in the middle of an acquisition, dd will abort with an “Input/output
    error.” Address this issue by adding `conv=noerror`, which will force dd to skip
    over the unreadable block and continue. The problem with skipping over unreadable
    blocks is that the sector offset on the destination file changes for filesystem
    blocks on the rest of the disk, causing the rest of the filesystem on the disk
    to appear corrupted. To illustrate, consider the pages of a book. Suppose [page
    99](ch04.xhtml#page_99) is ripped out. If the table of contents points to a chapter
    starting at [page 200](ch07.xhtml#page_200), it’s still possible to find it. The
    book’s page numbers are intact, even with the missing page. But this is not the
    case when sector 99 is ripped out of a disk image (due to a read error). The rest
    of the sectors are renumbered, and the filesystem’s “table of contents” will point
    to the wrong blocks after sector 99.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 dd 进行法证磁盘成像时可能会遇到挑战。如果在采集过程中发生读取错误，dd 会以“输入/输出错误”中止。通过添加 `conv=noerror`
    可以解决这个问题，它会强制 dd 跳过无法读取的块并继续执行。跳过无法读取的块的问题在于，目标文件中的扇区偏移会发生变化，这会导致磁盘其余部分的文件系统块出现错误。例如，考虑一本书的页面。假设
    [第 99 页](ch04.xhtml#page_99)被撕掉。如果目录指向以 [第 200 页](ch07.xhtml#page_200) 开头的章节，仍然可以找到它。即使缺少一页，书的页码仍然是完整的。但是，当磁盘镜像中的第
    99 扇区由于读取错误被撕掉时，情况就不同了。其余的扇区会重新编号，文件系统的“目录”会在第 99 扇区之后指向错误的块。
- en: The `sync` parameter corrects this by padding the unreadable output block with
    zeros, essentially creating a “fake” sector or block (full of zeros) to represent
    the missing one. The rest of the disk image will then have the correct sector
    numbers (offsets) expected by the filesystem it contains.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`sync` 参数通过用零填充无法读取的输出块来修正这一问题，实质上创建了一个“虚拟”扇区或块（全是零），以代表丢失的块。磁盘镜像的其余部分将会有文件系统期望的正确扇区号（偏移量）。'
- en: 'Using the previous example, but this time with protection from unreadable blocks
    (skipping and padding them with zeros), gives this result:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面的示例，但这次启用了防止读取错误块（跳过并用零填充它们），结果如下：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Padding the output impacts the forensic acquisition in that the image is modified
    and new data (the zeros) has been added. Cryptographic checksums of the disk will
    not match the original data on the disk (especially if there are new or changing
    unreadable areas of a disk). This problem can be managed by logging hash windows.
    This is discussed in “[Hash Windows](ch06.xhtml#ch06lev2sec08)” on [page 152](ch06.xhtml#page_152).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 填充输出会影响取证获取，因为镜像已经被修改并添加了新数据（零）。磁盘的加密校验和将与磁盘上的原始数据不匹配（特别是当磁盘上有新的或变化的不可读区域时）。这个问题可以通过记录哈希窗口来管理。有关这一点，请参见
    “[哈希窗口](ch06.xhtml#ch06lev2sec08)” 第 [152 页](ch06.xhtml#page_152)。
- en: Another issue with dd is that the transfer block size can be larger than the
    physical media sector size. This is problematic when a read error occurs, because
    the remaining sectors in the larger block are padded with zeros, not just the
    one unreadable sector. This means some normal readable sectors might be excluded
    from the forensic image. A block size larger than the sector size could also cause
    additional padding sectors to be added to the end of a forensic image (if the
    image size is not divisible by the block size). The potential performance gained
    from increasing the block size must be weighed against the risk of losing evidence
    from a large padded block.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: dd 的另一个问题是，传输块的大小可能大于物理介质的扇区大小。当发生读取错误时，这是一个问题，因为较大的块中剩余的扇区会被填充零，而不仅仅是不可读的一个扇区。这意味着一些正常可读的扇区可能会被排除在取证镜像之外。大于扇区大小的块大小还可能导致在取证镜像的末尾添加额外的填充扇区（如果镜像大小不能被块大小整除）。增加块大小可能带来的性能提升，必须与丢失来自大填充块的证据的风险进行权衡。
- en: Traditional dd has no capability for hashing, logging to a file, or other features
    you would expect of a forensic acquisition tool. Because the raw image contains
    no metadata about the original subject disk, you must separately document any
    information that describes the disk (or partially embed some information in the
    filename).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的 dd 工具没有哈希、日志记录或其他你期望从取证获取工具中得到的功能。由于原始镜像不包含关于原始磁盘的元数据，你必须单独记录任何描述磁盘的信息（或将部分信息嵌入到文件名中）。
- en: '***The dcfldd and dc3dd Tools***'
  id: totrans-30
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***dcfldd 和 dc3dd 工具***'
- en: Two popular dd derivatives, dcfldd and dc3dd, were independently developed specifically
    for use in a forensic context.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 两个流行的 dd 派生工具，dcfldd 和 dc3dd，都是专门为取证环境独立开发的。
- en: Because dcfldd and dc3dd originate from GNU dd, they use a similar command syntax.
    Neither tool has built-in support for writing to forensic formats (FTK, EnCase,
    AFF), compression, or image encryption. But you can achieve these functions through
    the use of command piping, which I’ll demonstrate in subsequent sections.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 dcfldd 和 dc3dd 都源自 GNU dd，所以它们使用相似的命令语法。两个工具都没有内置支持写入取证格式（FTK、EnCase、AFF）、压缩或镜像加密。但你可以通过使用命令管道来实现这些功能，我将在后续部分进行演示。
- en: 'The following example uses dcfldd to image a disk, ensuring blocks containing
    unreadable sectors are padded and don’t cause an abort:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 以下例子使用 dcfldd 来对磁盘进行镜像，确保包含不可读扇区的块会被填充，并且不会导致中止：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Errors are written to a separate error log file. The dcfldd tool does not use
    `conv=noerror,sync` by default; you must add it manually.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 错误会被写入单独的错误日志文件。dcfldd 工具默认不使用 `conv=noerror,sync`，你必须手动添加它。
- en: 'A similar imaging command for dc3dd is shown in the next example. By default,
    dc3dd does a good job of managing errors during acquisition. No `conv=noerror,sync`
    flag is needed because it’s built in. The output is well documented, both to `stdout`
    and to the log file. Here is a simple example acquisition:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个例子展示了 dc3dd 的类似镜像命令。默认情况下，dc3dd 在获取过程中能够很好地管理错误。无需 `conv=noerror,sync` 标志，因为它是内置的。输出会很好地记录，既写入
    `stdout`，也写入日志文件。这里是一个简单的获取示例：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can also configure the sfsimage script to use either dcfldd or dc3dd for
    imaging into a SquashFS forensic container. In the following example, a 4K native
    (4096-byte native sector size) drive is imaged using sfsimage:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以配置 sfsimage 脚本，使用 dcfldd 或 dc3dd 将数据镜像到 SquashFS 取证容器中。在以下例子中，使用 sfsimage
    镜像一个 4K 原生（4096 字节原生扇区大小）驱动器：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This example also illustrates that the physical and logical sector size of a
    drive does not impact the acquisition when using dd-style imaging tools.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子也说明了，当使用 dd 风格的镜像工具时，驱动器的物理和逻辑扇区大小不会影响获取过程。
- en: Both dcfldd and dc3dd have additional features for cryptographic hashing, image
    splitting, and piping to external programs. I’ll demonstrate these features in
    various situations throughout the rest of the book.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: dcfldd和dc3dd具有额外的功能，包括加密哈希、镜像拆分和与外部程序的管道传输。我将在本书的接下来的部分中展示这些功能在各种情况下的应用。
- en: '**Acquire an Image with Forensic Formats**'
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用取证格式采集镜像**'
- en: Several imaging formats were specifically designed with forensics in mind. Some
    of these, FTK and EnCase for example, are commercial proprietary formats and have
    been reverse engineered to allow development of open source–compatible tools.
    The next two sections describe tools for acquisition using these proprietary formats.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个成像格式是专门为取证设计的。例如，FTK和EnCase是商业专有格式，已经被逆向工程化，以便开发兼容开源工具。接下来的两节将介绍使用这些专有格式进行采集的工具。
- en: '***The ewfacquire Tool***'
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***ewfacquire工具***'
- en: An acquisition tool that specializes in Guidance EnCase Expert Witness formats
    is ewfacquire from libewf (*[https://github.com/libyal/libewf/](https://github.com/libyal/libewf/)*).
    This tool accepts informational parameters on the command line or asks for them
    interactively. You can choose from a number of commercial formats, including the
    various EnCase formats as well as FTK. The ewfacquire tool creates acquisition
    files that enable interoperability with EnCase, FTK, and Sleuth Kit. The tool
    can also convert raw images into other formats.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: ewfacquire是一个专门用于Guidance EnCase Expert Witness格式的采集工具，来自libewf (*[https://github.com/libyal/libewf/](https://github.com/libyal/libewf/)*)。该工具可以在命令行上接受信息性参数，或者交互式地询问用户。你可以从多个商业格式中进行选择，包括各种EnCase格式以及FTK。ewfacquire工具创建的采集文件支持与EnCase、FTK和Sleuth
    Kit的互操作性。该工具还可以将原始镜像转换为其他格式。
- en: 'This example shows ewfacquire acquiring an attached disk device (a MacBook
    Air connected to the examiner workstation in Target Disk Mode with a Thunderbolt-to-FireWire
    adapter):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例展示了ewfacquire采集一个附加的磁盘设备（一个通过Thunderbolt到FireWire适配器连接到检查工作站的MacBook Air，处于目标磁盘模式）：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The ewfacquire acquisition completed successfully in 37 minutes, and the 120GB
    file was split into 54 compressed **.E0* files totaling 79GB.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: ewfacquire采集在37分钟内成功完成，120GB文件被拆分为54个压缩的**.E0*文件，总计79GB。
- en: '***AccessData ftkimager***'
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***AccessData ftkimager***'
- en: AccessData provides free, precompiled, command line versions of the FTK Imager.
    The tool is called ftkimager and binaries (no source code) are available for Debian
    Linux, Fedora Linux, OS X, and Windows, which you can download from the AccessData
    website at *[http://accessdata.com/product-download/digital-forensics/](http://accessdata.com/product-download/digital-forensics/)*.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: AccessData提供了免费的、预编译的命令行版本FTK Imager。该工具名为ftkimager，二进制文件（没有源代码）适用于Debian Linux、Fedora
    Linux、OS X和Windows，你可以从AccessData网站下载，网址是*[http://accessdata.com/product-download/digital-forensics/](http://accessdata.com/product-download/digital-forensics/)*。
- en: The ftkimager tool can take input from a raw device, a file, or stdin. It outputs
    to an FTK SMART format, an EnCase EWF format, or stdout. The stdin and stdout
    streams are especially useful for piping to and from other programs. A number
    of other features are supported, including the addition of case metadata into
    the saved formats, compression, output file splitting (“image fragments”), hashing,
    and encrypted images.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: ftkimager工具可以从原始设备、文件或stdin接收输入。它可以输出到FTK SMART格式、EnCase EWF格式或stdout。stdin和stdout流特别适用于与其他程序之间的管道传输。还支持许多其他功能，包括将案件元数据添加到保存的格式中、压缩、输出文件拆分（“镜像碎片”）、哈希处理和加密镜像。
- en: 'The following basic example shows the use of ftkimager to acquire an attached
    disk:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下基本示例演示了使用ftkimager获取附加磁盘：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In this example, the source device was a SanDisk thumb drive accessible via
    */dev/sdf*, and the destination filename was *sandisk*. Because the default format
    is raw, adding the `--s01` flag saves it to FTK’s SMART format. A serial number
    and model string was added to the metadata using the `--description` flag.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，源设备是通过*/dev/sdf*访问的SanDisk U盘，目标文件名是*sandisk*。由于默认格式是原始格式，添加`--s01`标志将其保存为FTK的SMART格式。通过`--description`标志添加了一个序列号和型号字符串到元数据中。
- en: 'The ftkimager creates a log file with basic metadata and any additional information
    that was added using flags on the command line, as shown here:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: ftkimager创建了一个日志文件，记录了基本元数据以及使用命令行标志添加的任何附加信息，如下所示：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You can extract this same information using the `--print-info` flag together
    with the filename.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过使用`--print-info`标志并结合文件名来提取相同的信息。
- en: '***SquashFS Forensic Evidence Container***'
  id: totrans-58
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***SquashFS取证证据容器***'
- en: The sfsimage tool is simply a shell wrapper script that you can configure to
    use any imaging tool that supports writing an image cleanly to stdout. The script
    takes this stream of imaged bytes and places them inside a SquashFS compressed
    filesystem.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: sfsimage工具仅仅是一个shell包装脚本，你可以配置它以使用任何支持将镜像干净地写入stdout的镜像工具。该脚本将这些成像字节流放入一个SquashFS压缩文件系统中。
- en: 'In this example, sfsimage was configured to use dc3dd as the imaging tool by
    editing the `DD` variable in the beginning of the shell script:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，通过编辑shell脚本开头的`DD`变量，sfsimage被配置为使用dc3dd作为成像工具：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then the block device is imaged using the `-i` flag:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用`-i`标志对块设备进行镜像：
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following output shows the size of the compressed **.sfs* file:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 以下输出显示了压缩后的**.sfs**文件的大小：
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: You can list the contents of the SquashFS container file using `sfsimage -l`
    or mount it (read-only) using `sfsimage -m`. During the acquisition process, sfsimage
    saves the error log, hash log, and its own log together with the raw image file.
    You can add additional files to the sfsimage container using `sfsimage -a`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`sfsimage -l`列出SquashFS容器文件的内容，或者使用`sfsimage -m`挂载它（只读）。在获取过程中，sfsimage会保存错误日志、哈希日志以及它自己的日志，并将其与原始镜像文件一起保存。你可以使用`sfsimage
    -a`将额外的文件添加到sfsimage容器中。
- en: '***Acquire an Image to Multiple Destinations***'
  id: totrans-67
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***获取图像到多个目标位置***'
- en: 'The flexibility of the Unix piping mechanism allows the completion of multiple
    complex tasks in a single unattended step. Both dc3dd and dcfldd can specify multiple
    destination filenames, allowing you to make simultaneous image copies. The following
    example shows imaging a disk and simultaneously writing to multiple destination
    drives: a local copy on the acquisition host and a second copy on a mounted, external
    third-party drive. These two output files are specified using multiple `of=` flags
    as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Unix管道机制的灵活性使得在单一步骤中可以完成多个复杂任务。dc3dd和dcfldd都可以指定多个目标文件名，从而使得可以同时进行镜像复制。以下示例展示了如何对磁盘进行镜像，并同时将数据写入多个目标驱动器：一个是本地主机上的本地副本，另一个是已挂载的外部第三方驱动器上的副本。这两个输出文件通过多个`of=`标志来指定，如下所示：
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This technique is useful if you’re creating one image for analysis and another
    for backup, when you’re creating an additional image for a third party, or for
    any other situation where multiple copies of the image are needed. The two images
    should be identical, and you can verify them by comparing cryptographic checksums.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术在你创建一个用于分析的镜像和一个用于备份的镜像时非常有用，也适用于你为第三方创建额外镜像的情况，或者任何需要多个镜像副本的情况。这两个镜像应该是完全相同的，你可以通过比较加密校验和来验证它们。
- en: '**Preserve Digital Evidence with Cryptography**'
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用加密技术保存数字证据**'
- en: Preserving the integrity of evidence is fundamental to the digital forensics
    process. Integrity can be maintained by using cryptographic hashes and further
    enhanced with cryptographic signatures by the technicians who performed the acquisition.
    The purpose of hashing or signing images is to verify that the image has not changed
    since it was acquired. Because court proceedings and the presentation of evidence
    can take months or even years, it’s useful to confirm that evidence has not been
    modified during that time. This can be viewed as somewhat of a digital chain of
    custody.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 保证证据的完整性是数字取证过程中的基础。通过使用加密哈希并通过执行获取的技术人员进一步增强加密签名，可以保持完整性。哈希或签名镜像的目的是验证镜像自获取以来没有发生变化。由于法庭程序和证据展示可能需要几个月甚至几年的时间，因此确认证据在此期间没有被修改非常有用。这可以被视为一种数字化的证据链。
- en: The next few sections demonstrate the use of hash windows, signing with PGP
    and S/MIME, and RFC-3161 timestamping to preserve digital evidence. Let’s begin
    with some examples of basic cryptographic hashing.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的几个部分展示了使用哈希窗口、PGP和S/MIME签名以及RFC-3161时间戳来保存数字证据。我们先从一些基本的加密哈希示例开始。
- en: '***Basic Cryptographic Hashing***'
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***基本的加密哈希***'
- en: The cryptographic hashing of forensic images is typically included as part of
    the imaging process. The entire media image (each sector in sequence) is passed
    through a one-way hash function. As of this writing, the four primary forensic
    imaging tools discussed in this book support the cryptographic hashing algorithms
    shown in [Table 6-1](ch06.xhtml#ch6table1).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 数字取证镜像的加密哈希通常是成像过程的一部分。整个媒体镜像（每个扇区按顺序）会通过单向哈希函数。到目前为止，本书讨论的四个主要的取证成像工具支持[表6-1](ch06.xhtml#ch6table1)中所示的加密哈希算法。
- en: '**Table 6-1:** Supported Cryptographic Hashing Algorithms'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**表6-1：** 支持的加密哈希算法'
- en: '| **Tool** | **Hashing algorithms supported** |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| **工具** | **支持的哈希算法** |'
- en: '| --- | --- |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| dcfldd | MD5, SHA1, SHA256, SHA384, SHA512 |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| dcfldd | MD5, SHA1, SHA256, SHA384, SHA512 |'
- en: '| dc3dd | MD5, SHA1, SHA256, SHA512 |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| dc3dd | MD5, SHA1, SHA256, SHA512 |'
- en: '| ewfacquire | MD5, SHA1, SHA256 |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| ewfacquire | MD5, SHA1, SHA256 |'
- en: '| ftkimager | MD5, SHA1 |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| ftkimager | MD5, SHA1 |'
- en: The tools using forensic formats usually produce a hash by default. Both ftkimager
    and ewfacquire automatically generate hashes during the acquisition process, which
    you saw in previous examples.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用取证格式的工具通常会默认生成哈希值。ftkimager和ewfacquire会在采集过程中自动生成哈希值，这一点你在前面的示例中已经看到了。
- en: 'To create a hash (or multiple hashes) with dcfldd, you specify the desired
    hash algorithms on the command line, as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用dcfldd创建哈希（或多个哈希），你需要在命令行中指定所需的哈希算法，如下所示：
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'With dc3dd, you specify hash algorithms using `hash=` multiple times, as shown
    here:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用dc3dd时，你可以通过多次使用`hash=`来指定哈希算法，如下所示：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The traditional `dd` command doesn’t support hashing. Instead, you must pipe
    the image into a separate program during the acquisition process, which you can
    do by using the Unix `tee` command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的 `dd` 命令不支持哈希。相反，你必须在采集过程中将镜像管道传输到一个独立的程序，这可以通过使用Unix的 `tee` 命令来实现：
- en: '[PRE14]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'When `dd` has no `of=` specified, the data is sent to stdout where it can be
    redirected or piped into another program. In this example, it’s piped into the
    Unix `tee` command, which simultaneously saves the data to a file and sends it
    to stdout. Then it’spiped into an independent hashing tool, md5sum, where it produces
    the hash. In addition to md5sum, the Linux coreutils software package includes
    other hashing programs: sha1sum, sha224sum, sha256sum, sha384sum, and sha512sum.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 当`dd`没有指定`of=`时，数据会被发送到stdout，可以将其重定向或管道传输到另一个程序。在这个例子中，它被管道传输到Unix的 `tee` 命令，该命令同时将数据保存到文件并将其发送到stdout。然后，它被管道传输到独立的哈希工具md5sum，这时它会生成哈希。除了md5sum之外，Linux的coreutils软件包还包括其他哈希程序：sha1sum、sha224sum、sha256sum、sha384sum和sha512sum。
- en: I explain the process of verifying the hashes produced in “[Verify the Integrity
    of a Forensic Image](ch07.xhtml#ch07lev1sec03)” on [page 197](ch07.xhtml#page_197).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我在 “[验证取证镜像的完整性](ch07.xhtml#ch07lev1sec03)” 章节中解释了验证生成的哈希的过程，详见 [第197页](ch07.xhtml#page_197)。
- en: '***Hash Windows***'
  id: totrans-92
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***哈希窗口***'
- en: When you image an older or damaged disk, block read errors can occur. These
    errors can happen in random places during the acquisition, and the frequency can
    increase over time. This creates a challenge when you’re preserving the integrity
    of evidence, because the cryptographic hash might be different each time the disk
    is read (reacquired, duplicated, verified, and so on).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当你对旧的或损坏的磁盘进行镜像时，可能会出现块读取错误。这些错误可能在采集过程中随机发生，且随着时间的推移，发生的频率可能增加。这会在保全证据的完整性时带来挑战，因为每次读取磁盘时（重新采集、复制、验证等），加密哈希可能会不同。
- en: The solution to this problem is to use hash windows, or piecewise hashing. A
    hash window is a separate cryptographic hash taken over a smaller sequence of
    sectors on a disk. For example, a hash window size of 10MB during acquisition
    will generate a separate hash for every 10MB sequence of sectors and generate
    a list of hashes for a disk. If one sector becomes unreadable (or is modified
    for some reason), the hash of that window will be invalid. But all the other hash
    windows on the disk will maintain their integrity. So even if the hash of the
    full disk is invalid, if a hash window matches, the integrity of the data found
    within it will be preserved.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题的方法是使用哈希窗口，或分段哈希。哈希窗口是对磁盘上较小一段扇区序列进行的独立加密哈希。例如，在采集过程中使用10MB的哈希窗口大小，会为每10MB的扇区序列生成一个单独的哈希，并为磁盘生成一个哈希列表。如果某个扇区变得无法读取（或因某种原因被修改），该窗口的哈希将无效。但磁盘上其他的哈希窗口仍然会保持其完整性。因此，即使整个磁盘的哈希无效，如果某个哈希窗口匹配，窗口内数据的完整性也会得到保留。
- en: Among the commercial forensic formats, early versions of the Expert Witness
    Format (EWF) only use cyclic redundancy check (CRC) checksums for individual blocks
    of data. More recent versions are not open formats, and the ftkimager has no options
    for creating or viewing hash windows.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在商业取证格式中，早期版本的专家证人格式（EWF）仅使用循环冗余校验（CRC）校验和对数据的单独块进行检查。更新版本不是开放格式，且ftkimager没有创建或查看哈希窗口的选项。
- en: 'To create hash windows with dcfldd, you need to add the `hashwindow=` parameter
    to specify the window size. You can save the list of hash windows to a file during
    acquisition using the `hashlog=` parameter with a filename. The following example
    specifies a hash window size of 1MB, and the hashes for each sector range are
    logged to stdout:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用dcfldd创建哈希窗口，您需要添加`hashwindow=`参数来指定窗口大小。您可以在获取过程中使用`hashlog=`参数并指定文件名，将哈希窗口列表保存到文件中。以下示例指定了1MB的哈希窗口大小，并将每个扇区范围的哈希值记录到stdout：
- en: '[PRE15]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Groups of identical disk sectors will have the same hash value. This often occurs
    when large portions of a disk are zeroes or a repeating pattern.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 相同的磁盘扇区组将具有相同的哈希值。这通常发生在磁盘的较大部分是零值或重复模式时。
- en: 'With dc3dd, hash windows are referred to as *piecewise hashing*, and hashes
    can be created, not by sector range but per split file. In the following example,
    the hashes for the sector ranges in each split file are logged:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 使用dc3dd时，哈希窗口被称为*分段哈希*，哈希可以通过每个拆分文件创建，而不是通过扇区范围。在下面的示例中，每个拆分文件中扇区范围的哈希值都会被记录：
- en: '[PRE16]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If there is only one image file (that is, not split), there are no separate
    hash windows, just a single hash for the entire image. In the previous example,
    eight image files were created, and the MD5 hashes of each file match those reported
    during acquisition. This can be easily confirmed with md5sum as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果只有一个镜像文件（即没有拆分），则没有单独的哈希窗口，只有一个针对整个镜像的哈希值。在前面的示例中，创建了八个镜像文件，每个文件的MD5哈希值与获取时报告的值一致。可以使用md5sum轻松确认，如下所示：
- en: '[PRE17]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '***Sign an Image with PGP or S/MIME***'
  id: totrans-103
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用PGP或S/MIME签名镜像文件***'
- en: The hash value is useful to preserve the integrity of an image over time, but
    anyone can take a cryptographic hash of an image at any time. Consider a disk
    modified by an unauthorized person who creates a new hash for the disk image.
    Unless the original hash was properly secured at the original time of acquisition,
    it’s difficult to prove which hash (the old or the new) is the correct one. Cryptographic
    signing of forensic images binds a person (or that person’s key) to the integrity
    of the image. The forensic examiner, a superior, or an external neutral party
    can sign the image at the time of acquisition.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希值对于在时间上保持镜像的完整性非常有用，但任何人都可以随时对镜像进行加密哈希。考虑一个磁盘被未经授权的人修改，并为该磁盘镜像创建一个新的哈希值。除非原始哈希在获取时被妥善保管，否则很难证明哪个哈希值（旧的还是新的）是正确的。对取证镜像进行加密签名将某个人（或该人的密钥）与镜像的完整性绑定。取证检查员、上级或外部中立方可以在获取时签署该镜像。
- en: This doesn’t mean that you need to pass around multiterabyte images for people
    to sign. It’s enough to sign the hash of the drive or the list of hash windows.
    The best option is to sign the entire output log containing the timestamps, bytes
    acquired, and all resulting cryptographic hashes.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着您需要传递多个TB大小的镜像文件让别人签名。只需签名磁盘的哈希值或哈希窗口列表即可。最佳选择是签名包含时间戳、获取字节数和所有生成的加密哈希值的完整输出日志。
- en: In the same way an authorized individual signs paper forms with a pen, they
    can sign digital forms with a digital signature. Unlike pen and paper signatures,
    digital signatures are difficult to fake (unless the private key is stolen). Two
    popular standards for signing digital information are *Pretty Good Privacy (PGP)*
    and *Secure/Multipurpose Internet Mail Extensions (S/MIME)*.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 就像授权的个人用钢笔签署纸质表格一样，他们也可以使用数字签名签署数字表格。与钢笔和纸质签名不同，数字签名很难伪造（除非私钥被盗）。两种常见的数字签名标准是*Pretty
    Good Privacy (PGP)*和*Secure/Multipurpose Internet Mail Extensions (S/MIME)*。
- en: The most common Linux implementation of the OpenPGP standard is GnuPG (GPG).^([1](footnote.xhtml#fn30))
    The three different signing methods include a regular binary signature, a clear
    text signature, and a detached signature. Using a clear text signature is the
    most beneficial, because it shows the text together with the signature and can
    be easily embedded into other documents and reports.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的Linux OpenPGP标准实现是GnuPG (GPG)。^([1](footnote.xhtml#fn30)) 三种不同的签名方法包括常规二进制签名、明文签名和分离签名。使用明文签名是最有利的，因为它可以将文本与签名一起显示，并且可以轻松嵌入到其他文档和报告中。
- en: 'In the following example, S. Holmes has performed a forensic acquisition of
    a disk and signs the log output containing the MD5 hash and other details:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，S. Holmes进行了磁盘的取证获取，并签署了包含MD5哈希值和其他详细信息的日志输出：
- en: '[PRE18]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The previous command created the *hash.log.asc* file, which contains the contents
    of the file together with the signature:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令创建了 *hash.log.asc* 文件，其中包含文件的内容以及签名：
- en: '[PRE19]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This signed text can be verified at a later date by any third party using a
    copy of Holmes’s GPG public key.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 该签名文本可以通过任何第三方使用 Holmes 的 GPG 公钥副本在以后进行验证。
- en: Another encryption standard you can use to sign files is S/MIME. The use of
    S/MIME relies on X.509 certificates from a public key infrastructure (PKI), either
    privately within an organization or from a public certificate authority (CA).
    If an authorized person has a personal certificate (typically, the same one they
    use for signing and encrypting S/MIME email), they can use it to sign files containing
    acquisition details.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种可以用来签署文件的加密标准是 S/MIME。S/MIME 的使用依赖于来自公钥基础设施（PKI）的 X.509 证书，这些证书可以是组织内私有的，也可以来自公共证书颁发机构（CA）。如果授权人员拥有个人证书（通常是他们用来签署和加密
    S/MIME 电子邮件的证书），他们可以使用它来签署包含获取细节的文件。
- en: 'The gpgsm tool is part of GnuPG2 and supports managing X.509 keys, encryption,
    and signatures using the S/MIME standard. Once the necessary keys have been generated
    and certificates have been installed, you can use gpgsm to sign files in a similar
    manner to GPG. The following command produces a signature of a specified file:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: gpgsm 工具是 GnuPG2 的一部分，支持使用 S/MIME 标准管理 X.509 密钥、加密和签名。一旦生成了必要的密钥并安装了证书，您就可以像使用
    GPG 一样使用 gpgsm 对文件进行签名。以下命令对指定的文件生成签名：
- en: '[PRE20]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The `-a` flag specifies it should use ASCII armor, a method of encoding binary
    data in a plaintext format, instead of binary (because it’s easier to copy into
    reports or emails). The `-r` flag specifies which recipient key to use for signing.
    In this command example, the email address is used, but the key can also be specified
    by key ID, fingerprint, or matching components of X.509 strings. The `-o` specifies
    the output file for the signature, and `--sign` instructs gpgsm to create a signature
    over the specified *hash.log* file.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`-a` 标志指定应使用 ASCII 装甲，这是一种将二进制数据以明文格式编码的方法，而不是使用二进制（因为它更容易复制到报告或电子邮件中）。`-r`
    标志指定用于签名的接收者密钥。在这个命令示例中，使用的是电子邮件地址，但也可以通过密钥 ID、指纹或匹配的 X.509 字符串组件来指定密钥。`-o` 指定签名的输出文件，`--sign`
    指示 gpgsm 对指定的 *hash.log* 文件进行签名。'
- en: 'When used for signing, gpgsm will create a PEM^([2](footnote.xhtml#fn31)) signature
    file that looks similar to the following:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在签名时，gpgsm 将创建一个 PEM^([2](footnote.xhtml#fn31)) 签名文件，内容类似于以下内容：
- en: '[PRE21]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Once a signature has been created by an authorized party, the hash values and
    details of the original forensic acquisition cannot be changed. Only the person
    who created the signature can make changes and sign it again.^([3](footnote.xhtml#fn32))
    With these signatures, it’s possible to verify the integrity of the acquisition
    details without involving the person who signed it. I describe the signature verification
    process in [Chapter 7](ch07.xhtml#ch07).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦由授权方创建了签名，原始法医获取的哈希值和细节就无法更改。只有创建签名的人才能进行更改并重新签名。^([3](footnote.xhtml#fn32))
    使用这些签名，可以验证获取细节的完整性，而无需涉及签名的人。我在[第七章](ch07.xhtml#ch07)中描述了签名验证过程。
- en: You can purchase personal S/MIME certificates similar to SSL certificates for
    websites. You’ll find an overview of CAs who offer personal S/MIME certificates
    at *[https://www.sslshopper.com/email-certificates-smime-certificates.html](https://www.sslshopper.com/email-certificates-smime-certificates.html)*.
    Using a personal S/MIME certificate, you can also sign the acquisition details
    simply by sending a signed email message containing the contents of the output
    log.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以购买类似于网站 SSL 证书的个人 S/MIME 证书。您可以在 *[https://www.sslshopper.com/email-certificates-smime-certificates.html](https://www.sslshopper.com/email-certificates-smime-certificates.html)*
    查看提供个人 S/MIME 证书的 CA 概述。使用个人 S/MIME 证书，您也可以通过发送包含输出日志内容的签名电子邮件消息来简单地签署获取细节。
- en: The examples shown in this section are simple and use GNU Privacy Guard tools.
    There are other command line tools you can use to perform cryptographic signing.
    The OpenSSL command line tool provides a rich cryptographic toolkit that includes
    the ability to sign files using X.509 certificates and S/MIME. OpenSSL is used
    in the next section to demonstrate cryptographic timestamping.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中显示的示例很简单，使用了 GNU 隐私保护工具。还有其他命令行工具可以用于执行加密签名。OpenSSL 命令行工具提供了丰富的加密工具包，包括使用
    X.509 证书和 S/MIME 签署文件的能力。下一节将使用 OpenSSL 演示加密时间戳。
- en: '***RFC-3161 Timestamping***'
  id: totrans-122
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***RFC-3161 时间戳***'
- en: Signatures with PGP or S/MIME strongly bind an authorized individual (or multiple
    individuals) to the integrity of a file containing forensic acquisition results.
    In some cases, it’s also useful to strongly bind the forensic acquisition results
    to a specific point in time. You can do this by using an independent timestamping
    service.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PGP 或 S/MIME 签名可以将授权个人（或多个个人）强烈绑定到包含取证获取结果的文件的完整性上。在某些情况下，将取证获取结果强烈绑定到特定时间点也是非常有用的。你可以通过使用独立的时间戳服务来做到这一点。
- en: 'Timestamping is a formal standard defined in RFC-3161, which describes the
    format of a timestamp request and response. OpenSSL can create and send timestamp
    requests and verify responses. In the following example, an RFC-3161 compliant
    timestamp request for the acquisition log is created, producing a request file
    with a **.tsq* extension:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳是一个正式的标准，定义在 RFC-3161 中，描述了时间戳请求和响应的格式。OpenSSL 可以创建和发送时间戳请求并验证响应。在以下示例中，创建了一个符合
    RFC-3161 标准的时间戳请求，用于获取日志，生成一个带有 **.tsq* 扩展名的请求文件：
- en: '[PRE22]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This time stamp request contains a hash of the *hash.log* file, not the actual
    file. The file is *not* sent to the timestamping server. This is important from
    an information security perspective. The timestamp service provider is only trusted
    with timestamp information, not the contents of the files being timestamped.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这个时间戳请求包含 *hash.log* 文件的哈希值，而不是实际的文件。文件*不会*发送到时间戳服务器。这从信息安全的角度来看非常重要。时间戳服务提供商只会信任时间戳信息，而不是被时间戳的文件内容。
- en: 'The generated request can then be sent to a timestamping service using the
    `tsget` command included with OpenSSL.^([4](footnote.xhtml#fn33)) The following
    example uses the FreeTSA service:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，可以使用 OpenSSL 中包含的 `tsget` 命令将生成的请求发送到时间戳服务。^([4](footnote.xhtml#fn33)) 以下示例使用
    FreeTSA 服务：
- en: '[PRE23]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'On some Linux distributions, this script might be missing or broken. You can
    work around it by manually submitting the timestamp request with the `curl` command
    as follows:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些 Linux 发行版中，可能缺少或损坏这个脚本。你可以通过手动提交时间戳请求，使用 `curl` 命令来绕过它，命令如下：
- en: '[PRE24]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'If the timestamping server accepts the request, it returns an RFC-3161 compliant
    timestamp. In this example, the timestamp is saved with the **.tsr* file extension
    to `hash.log.tsr`. You can view the contents of the timestamp using the OpenSSL
    `ts` command:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果时间戳服务器接受请求，它会返回一个符合 RFC-3161 标准的时间戳。在这个例子中，时间戳会以 **.tsr* 文件扩展名保存到 `hash.log.tsr`
    中。你可以使用 OpenSSL `ts` 命令查看时间戳的内容：
- en: '[PRE25]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: A copy of the *hash.log.tsr* file provides proof that the acquisition results
    existed at a specific point intime. An independent third party can also verify
    the validity of the timestamp. I’ll demonstrate the validation of timestamps in
    [Chapter 7](ch07.xhtml#ch07).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '*hash.log.tsr* 文件的副本提供了一个证明，表明获取结果在特定时间点存在。独立的第三方也可以验证时间戳的有效性。我将在[第7章](ch07.xhtml#ch07)中演示时间戳的验证。'
- en: 'A number of free and commercial timestamping services are available on the
    internet. Here are a few examples:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上有许多免费和商业的时间戳服务。这里列出了一些示例：
- en: '• Comodo RFC-3161 Timestamping Service: *[http://timestamp.comodoca.com/?td=sha256](http://timestamp.comodoca.com/?td=sha256)*'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '• Comodo RFC-3161 时间戳服务: *[http://timestamp.comodoca.com/?td=sha256](http://timestamp.comodoca.com/?td=sha256)*'
- en: '• FreeTSA: *[http://freetsa.org/index_en.php](http://freetsa.org/index_en.php)*'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '• FreeTSA: *[http://freetsa.org/index_en.php](http://freetsa.org/index_en.php)*'
- en: '• Polish CERTUM PCC - General Certification Authority: *[http://time.certum.pl/](http://time.certum.pl/)*'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '• 波兰 CERTUM PCC - 一般认证机构: *[http://time.certum.pl/](http://time.certum.pl/)*'
- en: '• Safe Creative Timestamping Authority (TSA) server: *[http://tsa.safecreative.org/](http://tsa.safecreative.org/)*'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '• Safe Creative 时间戳认证机构（TSA）服务器: *[http://tsa.safecreative.org/](http://tsa.safecreative.org/)*'
- en: '• StartCom Free RFC-3161 Timestamping Service: *[http://tsa.startssl.com/rfc3161](http://tsa.startssl.com/rfc3161)*'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '• StartCom 免费 RFC-3161 时间戳服务: *[http://tsa.startssl.com/rfc3161](http://tsa.startssl.com/rfc3161)*'
- en: '• Zeitstempeldienst der DFN-PKI: *[http://www.pki.dfn.de/zeitstempeldienst/](http://www.pki.dfn.de/zeitstempeldienst/)*'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '• DFN-PKI 的 Zeitstempeldienst: *[http://www.pki.dfn.de/zeitstempeldienst/](http://www.pki.dfn.de/zeitstempeldienst/)*'
- en: The examples in the last two sections strongly bind an individual and a time
    to the integrity of an image. Cryptographic tokens such as smartcards or hardware
    security modules (HSMs) can be used to secure the private keys and guarantee physical
    possession of the token to sign the image. Cryptographic keys on hard tokens cannot
    be copied or stolen. Some examples of hard tokens that can be used to make cryptographic
    signatures include Nitrokey, Yubikey, and GnuPG OpenPGP smartcards.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 最后两部分中的示例强烈地将个人和时间与镜像的完整性绑定在一起。可以使用诸如智能卡或硬件安全模块（HSM）等加密令牌来保护私钥，并保证物理拥有令牌来签署镜像。硬令牌上的加密密钥不能被复制或窃取。一些可以用来制作加密签名的硬令牌包括Nitrokey、Yubikey和GnuPG
    OpenPGP智能卡。
- en: '**Manage Drive Failure and Errors**'
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**管理驱动器故障和错误**'
- en: Occasionally, a forensic lab receives a problematic hard disk to analyze. The
    disk might be old, damaged, or failing. It may have interface errors, platter
    read errors, head errors, motor resets, and other errors. In some cases, you can
    still acquire a partial forensic image of the drive. Depending on the disk size,
    the block size, and the number of unreadable sectors, imaging a bad disk could
    take several days.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，取证实验室会收到一个有问题的硬盘进行分析。磁盘可能很旧、损坏或正在故障中。它可能有接口错误、盘片读取错误、磁头错误、电机重置等问题。在某些情况下，您仍然可以获取该驱动器的部分取证镜像。根据磁盘大小、块大小和无法读取的扇区数量，映像制作可能需要几天时间。
- en: It’s important to understand that errors described here refer to the drive hardware.
    They don’t refer to software errors such as corrupt filesystems, destroyed partition
    tables, and so on.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要理解，这里描述的错误是指驱动器硬件的错误。它们并不指代如文件系统损坏、分区表破坏等软件错误。
- en: This section shows examples of different tools and how they handle error conditions.
    The dmsetup tool is useful for simulating disk errors and testing how forensic
    tools behave under various failing conditions, and was used in several of the
    following examples (the disk device is */dev/mapper/errdisk*). An overview of
    how dc3dd, dcfldd, ewfacquire, and ftkimager manage and report errors is shown
    in the following section.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分展示了不同工具的示例，以及它们如何处理错误情况。dmsetup工具用于模拟磁盘错误，并测试取证工具在各种故障条件下的表现，并在以下多个示例中使用（磁盘设备为*/dev/mapper/errdisk*）。下面的部分概述了dc3dd、dcfldd、ewfacquire和ftkimager如何管理和报告错误。
- en: '***Forensic Tool Error Handling***'
  id: totrans-146
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***取证工具错误处理***'
- en: 'The following example shows the dcfldd tool encountering a disk with two errors.
    The locations (block offsets) of the errors on a disk are reported to stdout and
    logged to the specified file, as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了dcfldd工具遇到带有两个错误的磁盘。错误在磁盘上的位置（块偏移量）会报告到标准输出，并记录到指定的文件中，如下所示：
- en: '[PRE26]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Several bugs were encountered when testing dcfldd under Debian Linux. The block
    size used for padding remained at 4K, even when a 512-byte block size was specified
    (dd showed the same behavior). On some errors, dcfldd went into an endless loop
    and had to be manually terminated.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian Linux下测试dcfldd时遇到了几个bug。即使指定了512字节的块大小，填充使用的块大小仍然保持为4K（dd也表现出相同的行为）。在某些错误情况下，dcfldd进入了死循环，必须手动终止。
- en: 'The dc3dd tool provides a very detailed overview of the errors encountered.
    Errors are sent to stout and saved in the specified log file, as follows:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: dc3dd工具提供了非常详细的错误概述。错误被发送到标准输出，并保存在指定的日志文件中，如下所示：
- en: '[PRE27]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The ewfacquire tool offers a default error granularity of 64 sectors, and this
    can be changed to 1 to reduce the number of sectors padded to zero. In this example,
    ewfacquire only detected two read errors (similar to dcfldd; it skipped and padded
    a 4k block without checking the other sectors):'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: ewfacquire工具提供了默认的错误粒度为64个扇区，且可以更改为1，以减少填充为零的扇区数。在这个例子中，ewfacquire只检测到两个读取错误（类似于dcfldd；它跳过并填充了一个4k块，而没有检查其他扇区）：
- en: '[PRE28]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The ftkimager reports errors and logs them. The following example uses an actual
    physically defective disk (an original first-generation iPod) because the ftkimager
    didn’t work with simulated errors created with dmsetup:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: ftkimager报告并记录错误。以下示例使用了一个实际的物理损坏磁盘（一台原始的第一代iPod），因为ftkimager在与dmsetup创建的模拟错误下无法正常工作：
- en: '[PRE29]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Each of the forensic acquisition tools had some error detection, handling, and
    logging capabilities. However, for disks with a significant number of errors or
    hardware damage, using more specialized tools might be more appropriate. The next
    section describes the use of data recovery tools for this purpose.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 每个取证采集工具都具有一些错误检测、处理和日志记录功能。然而，对于那些有大量错误或硬件损坏的磁盘，使用更专业的工具可能更为合适。下一节将介绍为此目的使用数据恢复工具的方法。
- en: '***Data Recovery Tools***'
  id: totrans-157
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***数据恢复工具***'
- en: Several disk block recovery tools are worth mentioning because of their robust
    error handling and aggressive recovery methods. Although these tools were not
    written with forensics in mind, they are useful in situations in which other forensic
    tools have failed.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个磁盘块恢复工具值得一提，因为它们具有强大的错误处理和积极的恢复方法。尽管这些工具不是专为取证设计的，但它们在其他取证工具失败的情况下非常有用。
- en: The ddrescue tool (by Antonio Diaz Diaz) was designed to recover blocks from
    damaged disks. Unlike the dd family of tools, it has a multiphase recovery algorithm,
    and you can run it against a disk multiple times to fill gaps in the image. The
    algorithm includes reading problematic parts of the disk backward to increase
    the number of recovered sectors and performing various retry operations over multiple
    passes.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: ddrescue 工具（由 Antonio Diaz Diaz 开发）旨在从损坏的磁盘中恢复数据块。与 dd 家族的工具不同，它有一个多阶段恢复算法，你可以多次运行它以填补镜像中的空白。该算法包括反向读取磁盘中有问题的部分，以增加恢复的扇区数量，并在多个传输过程中执行各种重试操作。
- en: 'A completed ddrescue operation results in statistics that describe the recovery
    success rate:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 完成的 ddrescue 操作会生成统计数据，描述恢复的成功率：
- en: '[PRE30]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The log file that ddrescue produces shows the start and end times and a detailed
    overview of the disk’s problem areas:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: ddrescue 生成的日志文件显示了开始和结束时间，并详细概述了磁盘的问题区域：
- en: '[PRE31]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The dd_rescue tool (note the underscore) was developed by Kurt Garloff in the
    late 1990s, and although the name contains *dd*, the command syntax is completely
    different and it doesn’t perform data conversion (same with ddrescue). But it
    does transfer blocks of data similar to dd. Several features make this tool a
    possible option for use in a digital forensic laboratory. The block size is dynamically
    changed when disk errors occur, automatically decreasing to a physical block size.
    After a period without errors, the block size is changed again to improve performance.
    You can also image the disk backwards, from the end of the disk to the beginning.
    This technique is useful if the drive has difficulty reading past a certain point
    on the disk.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: dd_rescue 工具（注意下划线）由 Kurt Garloff 于 1990 年代末开发，尽管其名称中包含 *dd*，但命令语法完全不同，并且它不执行数据转换（与
    ddrescue 相同）。但是，它确实像 dd 一样传输数据块。该工具具有若干功能，使其成为数字取证实验室中的一个可能选择。当磁盘发生错误时，块大小会动态调整，自动减小到物理块大小。在一段时间内没有错误发生后，块大小会再次调整，以提高性能。你还可以将磁盘反向成像，从磁盘的末端到开始。这项技术对于驱动器在读取磁盘某些点时遇到困难的情况非常有用。
- en: The myrescue tool is designed to initially avoid unreadable areas (no retries)
    and focuses on recovering as much of the readable areas as possible. After the
    readable sectors are copied, it works on the failed ranges. The tool documentation
    recommends letting difficult drives rest for a couple of hours between retries.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: myrescue 工具旨在初始时避免无法读取的区域（不重试），并专注于恢复尽可能多的可读区域。读取扇区复制后，它会处理失败的范围。该工具的文档建议在重试之间让有问题的驱动器休息几个小时。
- en: Another tool called recoverdm also performs data recovery. It is problematicdisksproblematicdisksproblematicdisksunique
    in that it can recover data from a damaged disk at the sector level or at an individual
    file level. The tool has additional features for floppies and optical media.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个名为 recoverdm 的工具也可以执行数据恢复。它具有独特的特点，即能够在扇区级别或单个文件级别从损坏的磁盘中恢复数据。该工具还具有额外的功能，用于软盘和光盘介质。
- en: '***SMART and Kernel Errors***'
  id: totrans-167
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***SMART 和内核错误***'
- en: 'The SMART information on the disk can provide additional indicators about the
    health of the drive and the likelihood of a successful recovery. For example:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘上的 SMART 信息可以提供关于驱动器健康状况和成功恢复可能性的额外指标。例如：
- en: '[PRE32]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: When performing forensic acquisition, you should note any error and failure
    messages appearing in dmesg or tool output. In cases where sectors could not be
    read and zeroed padding has been added, this needs to be recorded (depending on
    the forensic acquisition tool used, it will be logged).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行取证采集时，应注意记录在dmesg或工具输出中出现的任何错误和失败信息。如果无法读取某些扇区并且已添加零填充，这需要记录下来（具体取决于所使用的取证采集工具，通常会进行日志记录）。
- en: '***Other Options for Failed Drives***'
  id: totrans-171
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***失败驱动器的其他选项***'
- en: In this section, I provide a few additional tips and comments to help you acquire
    problematic disks.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我提供了一些附加的提示和建议，帮助你获取有问题的磁盘。
- en: In some cases, a disk might only operate correctly for a few minutes when it’s
    cold before it becomes inaccessible or unstable. If the disk functions properly
    for a few minutes before failing, you might still be able to make an image over
    time by repeatedly restarting the recovery. Some of the tools mentioned in “[Data
    Recovery Tools](ch03.xhtml#ch03lev2sec03)” on [page 162](ch06.xhtml#page_162)
    maintain a file that contains the recovery state from the last attempt. A recovery
    operation can be interrupted and later restarted where it left off.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，磁盘可能只有在冷却时才会正常工作几分钟，然后就变得无法访问或不稳定。如果磁盘在失败前能正常工作几分钟，你仍然可以通过反复重启恢复过程来逐渐制作镜像。在[第162页](ch06.xhtml#page_162)的“[数据恢复工具](ch03.xhtml#ch03lev2sec03)”中提到的一些工具会保存上次尝试恢复时的状态文件。恢复操作可以被中断，然后从上次的地方继续进行。
- en: After attempting to image a drive for a while, let the drive cool down and try
    again. Sometimes as a drive overheats, the access problems can get worse. Again,
    the disk recovery tools’ restart features are useful in this situation.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试对驱动器进行镜像一段时间后，让驱动器冷却下来然后再试。有时驱动器过热时，访问问题可能会变得更严重。同样，磁盘恢复工具的重启功能在这种情况下非常有用。
- en: If you suspect the drive electronics are faulty and a second identical (meaning
    the same make, model, and firmware revision) functioning drive is available,^([5](footnote.xhtml#fn34))
    you might be able to swap the drive electronics temporarily to recover the data.
    You don’t need to open the disk to perform this action, so the risk of damage
    (due to dust and so on) is minimal.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你怀疑驱动器的电子元件有故障，并且有一台相同型号（即相同的品牌、型号和固件版本）且功能正常的备用驱动器，^([5](footnote.xhtml#fn34))你可能能够暂时交换驱动器电子元件来恢复数据。你不需要打开磁盘进行此操作，因此损坏的风险（如灰尘等）最小。
- en: Professional data recovery firms have cleanrooms where trained staff can open
    drives, unstick drive heads, replace actuators, and perform other delicate operations
    on a drive. Do not attempt these procedures without the proper environment, equipment,
    and training. Just opening a drive outside of a cleanroom will expose it to dust
    particles, causing damage to the disk.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 专业的数据恢复公司拥有无尘室，训练有素的工作人员可以在无尘环境中打开驱动器、解开驱动器头、替换驱动器执行器，并进行其他精细操作。没有适当的环境、设备和培训，请勿尝试这些操作。仅在无尘室外打开驱动器会暴露在灰尘中，可能会对磁盘造成损坏。
- en: '***Damaged Optical Discs***'
  id: totrans-177
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***损坏的光盘***'
- en: Most of the tools mentioned earlier should also function on optical media. Some
    tools have added features or special behavior for optical media.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 前面提到的大多数工具也应该能在光盘介质上使用。某些工具为光盘介质增加了特殊的功能或行为。
- en: 'The ddrescue tool suggests specifying a 2048-byte sector size for optical media.
    Here’s an example of ddrescue in the process of recovering a damaged CD-ROM disc:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: ddrescue工具建议为光盘介质指定2048字节的扇区大小。以下是ddrescue恢复损坏的CD-ROM磁盘过程中的示例：
- en: '[PRE33]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Notice that ddrescue reads the CD-ROM backwards in an attempt to recover blocks.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，ddrescue会倒着读取CD-ROM，以尝试恢复扇区。
- en: For optical discs that are partially recoverable but have a corrupt file-system,
    you can use carving tools to extract files. A data carver designed for optical
    discs is the dares carver (*[ftp://ftp.heise.de/pub/ct/ctsi/dares.tgz](ftp://ftp.heise.de/pub/ct/ctsi/dares.tgz)*),
    which supports various optical disc filesystem formats.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 对于部分可恢复但文件系统损坏的光盘，可以使用文件雕刻工具提取文件。专为光盘设计的数据雕刻工具是dares雕刻工具（*[ftp://ftp.heise.de/pub/ct/ctsi/dares.tgz](ftp://ftp.heise.de/pub/ct/ctsi/dares.tgz)*），它支持多种光盘文件系统格式。
- en: This section has covered the management of drive failure and errors. Drive failure
    and errors do happen and can result in partial or total data loss. In cases where
    you experience problems with a drive, be sure you document the nature of the error
    and, wherever possible, the sector that was impacted.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 本节已经涵盖了磁盘故障和错误的管理。磁盘故障和错误是会发生的，并且可能导致部分或完全的数据丢失。如果你遇到磁盘问题，请确保记录错误的性质，并尽可能记录受影响的扇区。
- en: '**Image Acquisition over a Network**'
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**通过网络获取映像**'
- en: 'Imaging a disk over a network can be useful for a number of reasons:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 通过网络对磁盘进行成像在多种情况下是有用的：
- en: • A disk may be located in a remote location, and it might not be feasible to
    physically seize and ship the disk to a central forensic lab (possibly due to
    disruption of business, lack of resources, or other logistical issues).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: • 磁盘可能位于远程位置，并且可能无法将磁盘物理扣押并运送到中央法医实验室（可能是由于业务中断、资源不足或其他物流问题）。
- en: • A time-critical incident might require a remote drive image as soon as possible
    without delays due to shipping (depending on network bandwidth, disk size, and
    shipping times, shipping a disk might still be faster).^([6](footnote.xhtml#fn35))
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: • 时间紧迫的事件可能需要尽快获取远程磁盘映像，而不因运输而产生延迟（根据网络带宽、磁盘大小和运输时间，运输磁盘可能仍然更快）。^([6](footnote.xhtml#fn35))
- en: • A machine in a local forensic lab may have a disk in a PC that cannot be feasibly
    physically removed. This could be due to the design of the PC, the lack of tools
    needed, or the risk of causing damage or destroying evidence.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: • 本地法医实验室中的机器可能有一个无法物理拆卸的磁盘。这可能是由于PC的设计、缺少所需的工具，或是拆卸可能导致损坏或破坏证据的风险。
- en: In general, seizing disks does not scale well in large organizations, and having
    a broadly deployed enterprise solution for remote disk triage and acquisition
    is common. EnCase Enterprise is a classic example, with many newer firms bringing
    similar products to the market.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 通常来说，扣押磁盘在大规模组织中不容易扩展，拥有一个广泛部署的企业级远程磁盘筛查和采集解决方案是很常见的。EnCase Enterprise是一个经典的例子，许多新兴公司也在市场上推出了类似的产品。
- en: As with disk imaging, many possibilities exist to perform forensic acquisition
    over a network. Most solutions involve booting a forensic CD on a remote machine,
    establishing a network connection, and piping the dd output over the network to
    a local file. You can do this simply by using a combination of dd and netcat.
    Secure connections can also be made using ssh or secure netcat alternatives, such
    as socat and cryptcat.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 与磁盘成像类似，存在许多通过网络进行法医采集的方式。大多数解决方案包括在远程机器上启动法医CD，建立网络连接，并将dd输出通过网络传输到本地文件。你可以通过简单地使用dd和netcat的组合来实现。也可以使用ssh或安全netcat替代品（如socat和cryptcat）建立安全连接。
- en: This section provides several examples that use ssh for a secure network connection.
    But first, let’s start by looking at rdd, which was specifically designed with
    forensic acquisition in mind.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了几个使用ssh进行安全网络连接的示例。但首先，让我们来看一下rdd，它是专门为法医采集而设计的。
- en: '***Remote Forensic Imaging with rdd***'
  id: totrans-192
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用rdd进行远程法医成像***'
- en: Designed for acquiring disk images over a network, the rdd tool was developed
    by the Netherlands Forensic Institute (NFI). The rdd tool has a number of useful
    features, including hashing, logging, compression, error handling, file splitting,
    progress indicators, and statistics. Support for EWF output can be included at
    compile time. The rdd tool uses a client-server model, where the subject PC (booted
    from a forensic boot CD) is the client and the examiner PC is the server. You
    perform an acquisition by starting a listening process on the server (examiner
    PC) and running the acquisition command on the client.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: rdd工具是专门为通过网络获取磁盘映像而设计的，由荷兰法医研究所（NFI）开发。rdd工具具有许多有用的功能，包括哈希、日志记录、压缩、错误处理、文件分割、进度指示器和统计信息。支持EWF输出可以在编译时包含。rdd工具采用客户端-服务器模型，受试PC（从法医启动CD启动）是客户端，检查员PC是服务器。通过在服务器（检查员PC）上启动监听进程，并在客户端运行采集命令来执行采集操作。
- en: The rdd tool does not have built-in security; it must be added using a VPN,
    a secure shell, or the equivalent. When you are using rdd over untrusted or hostile
    networks, the network traffic needs to be encrypted, and listening TCP ports should
    not be exposed. You can do this by using a two-step process of establishing a
    secure network channel and using it for the acquisition.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: rdd工具没有内建的安全功能；必须使用VPN、安全外壳或类似工具来添加安全性。当你在不可信或敌对网络上使用rdd时，网络流量需要加密，并且监听的TCP端口不应暴露。你可以通过建立安全网络通道并利用该通道进行数据获取的两步过程来实现这一点。
- en: Without security, the rdd tool is still useful on a trusted network segment
    in a protected lab setting, when using crossed Ethernet cables, or when connecting
    two PCs with a FireWire cable. (FireWire interfaces can be used as network interfaces.)
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有安全性，rdd工具仍然可以在受信任的网络段中使用，比如在受保护的实验室环境中，或者在使用交叉以太网线缆或连接两台PC的FireWire线缆时（FireWire接口可以用作网络接口）。
- en: On the examiner’s workstation, run the server mode of `rdd-copy` by specifying
    `-S`, as shown in the following example. This needs to be started before the client
    starts. Make sure no firewalls or iptables packet filtering is blocking TCP port
    4832 (the default port).
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在考官的工作站上，通过指定`-S`运行`rdd-copy`的服务器模式，如下例所示。在客户端启动之前，必须先启动服务器模式。确保没有防火墙或iptables包过滤阻止TCP端口4832（默认端口）。
- en: '[PRE34]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'On the remote subject PC, run the client mode of `rdd-copy` using `-C`. Specify
    the input device using `-I`. The input device can be any locally attached storage
    device (it was a remote USB stick in this example). The output file, `-O`, has
    an additional option to indicate a network destination. The client tells the server
    which file to use for the acquired image, using the traditional Unix convention
    of *hostname:/path/to/filename*:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在远程目标PC上，使用`-C`运行`rdd-copy`的客户端模式。通过`-I`指定输入设备。输入设备可以是任何本地连接的存储设备（在这个示例中是远程USB闪存驱动器）。输出文件`-O`有一个额外的选项来指示网络目标。客户端通过使用传统的Unix约定*hostname:/path/to/filename*告知服务器获取镜像所使用的文件：
- en: '[PRE35]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Both client and server specify log files using `-l` and a hash algorithm that
    can be verified at the end of the transfer. You can monitor the progress of the
    client and the server by adding `-P 1` to either side (or both).
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端和服务器都通过`-l`指定日志文件，并使用一种可以在传输结束时验证的哈希算法。你可以通过在任何一方（或两方）添加`-P 1`来监控客户端和服务器的进度。
- en: '***Secure Remote Imaging with ssh***'
  id: totrans-201
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用ssh进行安全远程镜像***'
- en: 'In situations where rdd is not available, you can perform a basic acquisition
    using a single `ssh` command either on the remote PC containing the subject drive
    or on the examiner PC. The following example shows imaging a disk (a USB stick
    plugged into the remote PC in this example) over the network using a secure shell
    session originating from the remote PC:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在rdd不可用的情况下，你可以仅使用一个`ssh`命令进行基本的获取，无论是在包含目标磁盘的远程PC上还是在考官PC上。以下示例展示了通过从远程PC发起的安全外壳会话在网络上获取磁盘镜像（本示例中的USB闪存驱动器是插入远程PC的）。
- en: '[PRE36]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The `dd` command is run locally, and the output is piped into the `ssh` command.
    Secure shell will pipe this data stream into the cat program on the examiner PC.
    The output from the cat program is redirected into a file residing on the examiner
    PC. Upon completion, a raw image will be available to examine with other forensic
    tools.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地运行`dd`命令，并将输出通过管道传输到`ssh`命令。安全外壳将该数据流通过管道传输到考官PC上的`cat`程序。`cat`程序的输出被重定向到考官PC上的一个文件中。完成后，原始镜像文件可以用其他取证工具进行检查。
- en: 'You could also acquire the image with secure shell originating from the examiner
    workstation and connecting to the remote PC with the attached subject disk. The
    following example demonstrates this from the examiner PC, imaging the same USB
    again:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过安全外壳从考官工作站获取镜像，连接到带有目标磁盘的远程PC。以下示例演示了从考官PC获取相同USB镜像的过程：
- en: '[PRE37]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Here secure shell is instructed to run the `dd` command on the remote (subject)
    machine. The output from the remote `dd` command becomes the output of the local
    `ssh` command and is redirected to a local file. On completion, a raw image file
    is available for analysis on the examiner’sPC.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，指示安全外壳在远程（目标）机器上运行`dd`命令。远程`dd`命令的输出成为本地`ssh`命令的输出，并重定向到本地文件。完成后，考官的PC上将生成可用于分析的原始镜像文件。
- en: 'You can replace the basic `dd` commands shown in this section with dcfldd,
    dc3dd, or any of the other acquisition tools that image to stdout. You can use
    this method to collect other information about a remote (subject) machine. To
    illustrate, here are some examples of collecting data about a remote PC that has
    been started with the DEFT Linux boot CD. In this example, hdparm, smartctl, and
    lshw data are collected and saved on the examiner workstation:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用 dcfldd、dc3dd 或任何其他将数据成像到标准输出的工具，替换本节中显示的基本 `dd` 命令。你可以使用此方法收集有关远程（目标）机器的其他信息。为了说明这一点，下面是一些收集关于已启动
    DEFT Linux 启动 CD 的远程 PC 数据的示例。在这个示例中，hdparm、smartctl 和 lshw 数据被收集并保存在检查员工作站上：
- en: '[PRE38]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: As in the previous example, `ssh` executes various commands on the remote machine,
    and the output is redirected to files on the local (examiner) workstation. The
    serial number of the disk is included in the file-name to ensure an obvious link
    between the physical disk and the data files collected.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 如同前一个示例，`ssh` 在远程机器上执行各种命令，并将输出重定向到本地（检查员）工作站上的文件中。磁盘的序列号包含在文件名中，以确保物理磁盘与收集的数据文件之间有明确的关联。
- en: '***Remote Acquisition to a SquashFS Evidence Container***'
  id: totrans-211
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***远程采集到 SquashFS 证据容器***'
- en: As demonstrated previously, SquashFS can be used as a forensic evidence container,
    with sfsimage used to image local disks. The sfsimage script can also image a
    disk on a remote machine directly into a SquashFS evidence container. Two examples
    are shown here.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所示，SquashFS 可以作为法医证据容器使用，sfsimage 用于对本地磁盘进行成像。sfsimage 脚本还可以直接将远程机器上的磁盘成像到
    SquashFS 证据容器中。这里展示了两个示例。
- en: 'The remote dd output can be piped via ssh into a local `sfsimage` command,
    creating a SquashFS forensic evidence container with the raw image:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 远程 dd 输出可以通过 ssh 管道传输到本地 `sfsimage` 命令，从而创建一个包含原始镜像的 SquashFS 法医证据容器：
- en: '[PRE39]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: In this example, the remote PC is accessed by the root user (`root@remote-pc`),
    and a remote media card (`/dev/mmcblk0`) is imaged to stdout with a `dd` command.
    The stdout stream is transported over the ssh connection to the local `sfsimage`
    command where `-` (stdin) is the input file.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，通过 root 用户 (`root@remote-pc`) 访问远程 PC，使用 `dd` 命令将远程媒体卡 (`/dev/mmcblk0`)
    成像到标准输出（stdout）。标准输出流通过 ssh 连接传输到本地 `sfsimage` 命令，其中 `-`（stdin）是输入文件。
- en: 'A second method uses the same principle, but with variables for the sfsimage
    shell script. In the sfsimage `config()` block or in a separate *sfsimage.conf*
    file, you can specify variables and configuration settings that control sfsimage
    behavior. Setting the `DD` variable to an `ssh` command will cause mksquashfs
    to take input from a remote machine via ssh. A config file in the current working
    directory is shown here:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法使用相同的原理，但为 sfsimage shell 脚本设置了变量。在 sfsimage 的 `config()` 块或单独的 *sfsimage.conf*
    文件中，你可以指定控制 sfsimage 行为的变量和配置设置。将 `DD` 变量设置为 `ssh` 命令，将导致 mksquashfs 从远程机器通过 ssh
    获取输入。这里展示了一个当前工作目录中的配置文件：
- en: '[PRE40]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The double quotes in the `DD` variable need to be escaped. The `SQSUDO` variable
    is set to an empty string, because no local root privileges are needed. When you
    run `sfsimage` with this config file in your local working directory, your configuration
    settings will override the default sfsimage settings.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '`DD` 变量中的双引号需要进行转义。`SQSUDO` 变量被设置为空字符串，因为不需要本地根权限。当你在本地工作目录中运行带有此配置文件的 `sfsimage`
    时，你的配置设置将覆盖默认的 sfsimage 设置。'
- en: 'It is important to note, that the input file should still be specified as a
    dash (`-`), because input is piped to stdin internally by the `ssh` command in
    the `DD` variable. The remote acquisition using sfsimage in this way looks like
    this:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，输入文件仍应指定为短横线（`-`），因为输入会通过 `ssh` 命令在 `DD` 变量中被内部传输到标准输入（stdin）。使用这种方式通过
    sfsimage 进行远程采集如下所示：
- en: '[PRE41]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: I showed this `DD` configuration example primarily to illustrate the possibility
    of embedding remote network-imaging commands into sfsimage. The embedding of complex
    acquisition commands into config files can generally be used to change the operation
    of the sfsimage script.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我展示这个 `DD` 配置示例，主要是为了说明将远程网络成像命令嵌入到 sfsimage 中的可能性。通常，将复杂的采集命令嵌入配置文件可以改变 sfsimage
    脚本的操作方式。
- en: '***Acquire a Remote Disk to EnCase or FTK Format***'
  id: totrans-222
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***获取远程磁盘以便转换为 EnCase 或 FTK 格式***'
- en: 'You can also pipe remote `ssh` commands into other programs to perform tasks
    or conversions to other formats. A useful example is to remotely acquire a raw
    image and convert it to Encase/EWF as it’s being written to disk. This example
    shows a remote PC being remotely imaged to an examiner workstation and saved as
    **.ewf* files:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以将远程`ssh`命令管道传递给其他程序，以执行任务或转换成其他格式。一个有用的示例是远程获取原始图像并在写入磁盘时将其转换为Encase/EWF格式。此示例展示了远程PC被远程镜像到检查工作站并保存为**.ewf**文件：
- en: '[PRE42]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: In this example, a description of the PC (eepc) and the serial number (16048539022588504422)
    are embedded into the filename of the image. The final output from the `dd` command
    is shown on completion, directly followed by the ewfacquirestream completion message.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，PC（eepc）的描述和序列号（16048539022588504422）被嵌入到镜像文件名中。`dd`命令的最终输出将在完成后显示，紧接着是ewfacquirestream完成消息。
- en: You can use EnCase, Sleuth Kit, or any other tool that supports EWF to forensically
    analyze the resulting acquired image.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用EnCase、Sleuth Kit或任何其他支持EWF的工具对获取到的镜像进行法医分析。
- en: '[PRE43]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Using additional flags with ewfacquirestream can provide more case metadata
    details, increase the compression, and provide other features. See the ewfacquirestream(1)
    manual page for more information.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ewfacquirestream附加标志可以提供更多的案件元数据细节、增加压缩比并提供其他功能。有关更多信息，请参见ewfacquirestream(1)手册页。
- en: '***Live Imaging with Copy-On-Write Snapshots***'
  id: totrans-229
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用写时复制快照进行实时镜像***'
- en: In general, it doesn’t make sense to create a forensic image of a live system
    when the disks you need to acquire contain the running OS. Blocks are constantly
    changing on a live system. During the time needed to acquire a sector-by-sector
    image, the filesystem will change significantly, causing the imaged filesystem
    copy to be corrupt and inconsistent.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，当你需要获取的磁盘包含正在运行的操作系统时，创建实时系统的法医镜像没有意义。在实时系统上，块是不断变化的。在获取每个扇区的镜像所需的时间内，文件系统将发生显著变化，导致镜像的文件系统副本损坏且不一致。
- en: Sometimes it may not be feasible to boot a system with a forensic boot CD to
    remotely acquire an image. On live servers that cannot be shut down, the same
    method used to freeze the filesystem for backups might be leveraged in some situations.
    On systems that have Copy-on-Write (CoW) filesystems, you might be able to do
    a certain amount of forensic imaging if filesystem snapshots have associated block
    devices (Logical Volume Manager [LVM] for example). This will provide a consistent
    snapshot of the filesystem blocks at a certain point in time. If a CoW filesystem
    has no associated block device for a snapshot, the files will at least be frozen
    for a file-level acquisition.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 有时可能无法通过法医启动CD启动系统来远程获取镜像。在无法关闭的实时服务器上，可能会在某些情况下使用用于冻结文件系统的备份方法。如果系统具有写时复制（CoW）文件系统，并且文件系统快照具有关联的块设备（例如逻辑卷管理器[LVM]），那么你可能能够进行一定量的法医镜像。这将提供文件系统块在某个时间点的一致快照。如果CoW文件系统没有与快照关联的块设备，那么文件至少会被冻结，从而进行文件级的获取。
- en: If the subject system is a cloud-based virtual machine, imaging the live system
    over a network might be your only option, unless the cloud provider can provide
    snapshot images.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 如果目标系统是基于云的虚拟机，通过网络对实时系统进行镜像可能是唯一的选择，除非云服务提供商能够提供快照图像。
- en: '**Acquire Removable Media**'
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**获取可移动媒体**'
- en: Removable media are unique in that the drive device can be attached to a system
    and operate without any media. Block devices that can be forensically acquired
    only become available upon insertion of the media. USB thumb drives can be described
    as removable devices but not removable media. The medium is not removed from the
    USB thumb drive unless it is a memory card adapter or card reader.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 可移动媒体的独特之处在于，驱动设备可以连接到系统并在没有任何媒体的情况下操作。只有在插入媒体后，才能获取那些只能通过法医方式获取的块设备。USB闪存驱动器可以被描述为可移动设备，但不是可移动媒体。除非它是存储卡适配器或读卡器，否则介质不会从USB闪存驱动器中取出。
- en: This section covers basic removable media types, including memory cards, optical
    discs, and magnetic tapes.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 本节涵盖了基本的可移动媒体类型，包括存储卡、光盘和磁带。
- en: '***Memory Cards***'
  id: totrans-236
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***存储卡***'
- en: Most memory cards behave similarly to regular drives. Their storage is represented
    as a linear sequence of blocks, giving the appearance of a regular drive with
    sectors that you can access using any tool that operates on block devices.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数存储卡的行为与常规磁盘相似。它们的存储表现为一系列线性块，给人一种常规磁盘的印象，你可以使用任何操作块设备的工具访问这些扇区。
- en: In [Figure 6-1](ch06.xhtml#ch6fig1), a Micro SD card is inserted into an SD
    card adapter, which is inserted into an SD card reader, which is inserted into
    a PC. Here, several items of removable media are stacked and still appear as a
    block device that you can image normally.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [图 6-1](ch06.xhtml#ch6fig1) 中，Micro SD 卡插入 SD 卡适配器，再插入 SD 卡读卡器，最后插入 PC。这里，几项可移动存储介质被堆叠并且仍然显示为一个可以正常成像的块设备。
- en: '![image](../images/f06-01.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f06-01.jpg)'
- en: '*Figure 6-1: Removable memory card adapters*'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 6-1：可移动存储卡适配器*'
- en: 'In this example, all three items were inserted and attached to the acquisition
    host. The kernel detected them and created a */dev/sdg* block device:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，所有三项设备都插入并连接到采集主机。内核检测到了它们并创建了一个 */dev/sdg* 块设备：
- en: '[PRE44]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The SD adapter has a write-protect tab enabled, which isvisible in the dmesg
    output.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: SD 适配器已启用写保护标签，可以在 dmesg 输出中看到。
- en: 'In this example, the Micro SD card is imaged into a SquashFS evidence container
    using the sfsimage script:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，Micro SD 卡被使用 sfsimage 脚本成像到一个 SquashFS 证据容器中：
- en: '[PRE45]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: After imaging, a memory card can be safely removed from the card reader (assuming
    it has not been mounted).
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 成像后，可以安全地将存储卡从读卡器中取出（假设它没有被挂载）。
- en: '***Optical Discs***'
  id: totrans-247
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***光盘***'
- en: The different types of optical media vary in their physical and chemical properties;
    however, once you insert them into an attached optical drive, they have more similarities
    than differences. The three most common discs (DVD, CD-ROM, and Blu-ray) have
    a 2048-byte sector size and appear as a linear sequence of sectors (similar to
    a tape, but inaspiral). The primary difference is the density of the data bits
    (which is abstracted by the device hardware) and the disc capacity.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 不同类型的光学介质在其物理和化学属性上有所不同；然而，一旦将它们插入附加的光驱，它们的相似之处多于差异。三种最常见的光盘（DVD、CD-ROM 和蓝光）都有
    2048 字节的扇区大小，并且表现为一个线性扇区序列（类似于磁带，但呈螺旋形）。主要的区别在于数据比特的密度（这一点由设备硬件抽象化）和光盘的容量。
- en: 'Imaging data discs is straightforward and similar to imaging hard disks or
    flash media. An example of an optical disc being imaged with dc3dd is shown here:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 映像数据光盘非常简单，类似于硬盘或闪存的镜像。以下是使用 dc3dd 对光盘进行成像的示例：
- en: '[PRE46]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Using common forensic tools, you can then analyze the *datacd.raw* image file.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 使用常见的取证工具，你可以分析 *datacd.raw* 镜像文件。
- en: 'The recovery of Compact Disc Digital Audio (CDDA), or music CDs, is different
    from that of data discs. They contain a set of music tracks that are linear streams
    of pulse-code modulation (PCM) encoded bits. Unlike with data CDs, there is some
    tolerance for errors. For this reason, tools have been created to attempt the
    recovery of CDDA and manage drive issues such as misalignment and frame jitter.^([7](footnote.xhtml#fn36))
    Most CDDA tools are simple music CD *rippers* that convert the CD tracks into
    audio files (reencoded into some other audio format). In this example, cdparanoia
    performs a raw extraction of the PCM data:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 恢复紧凑型光盘数字音频（CDDA），或音乐光盘，与数据光盘的恢复方式不同。它们包含一组音乐轨道，这些轨道是线性的脉冲编码调制（PCM）编码的比特流。与数据光盘不同，它们对错误有一定的容忍度。正因如此，工具已经被创建出来，以尝试恢复
    CDDA 并管理驱动器问题，如未对齐和帧抖动。^([7](footnote.xhtml#fn36)) 大多数 CDDA 工具是简单的音乐光盘 *提取工具*，它们将光盘轨道转换为音频文件（重新编码为其他音频格式）。在这个示例中，cdparanoia
    执行了 PCM 数据的原始提取：
- en: '[PRE47]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: This command rips the entire music CD into a single raw PCM audio image file
    containing all the audio tracks. You can then import this file into audio analysis
    software. Because the audio data has not been modified or reencoded, there is
    no audio quality loss or degradation.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将整个音乐光盘提取为一个包含所有音频轨道的原始 PCM 音频镜像文件。然后，你可以将此文件导入音频分析软件中。由于音频数据未被修改或重新编码，因此没有音频质量的损失或退化。
- en: DVD and Blu-ray discs with digital rights management (DRM) and region protection
    are a challenge to recover. Linux tools and instructions to recover encrypted
    content exist but have been deliberately left outside the scope of this book.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 具有数字版权管理（DRM）和区域保护的 DVD 和蓝光光盘恢复起来具有挑战性。虽然存在用于恢复加密内容的 Linux 工具和指令，但这些内容故意不包括在本书的范围内。
- en: '***Magnetic Tapes***'
  id: totrans-256
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***磁带***'
- en: Tapes have essentially disappeared from home environments. But they are still
    used in small, medium, and enterprise environments for backup and archiving. On
    rare occasions, you might receive a request to recover data from tapes. In corporate
    forensic labs for example, old tapes are sometimes found when company departments
    are reorganizing or moving locations.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 磁带几乎在家庭环境中消失了。但它们仍然在小型、中型和企业环境中用于备份和归档。偶尔，您可能会收到要求从磁带中恢复数据的请求。例如，在公司法医实验室中，有时会在公司部门重组或搬迁时找到旧磁带。
- en: Historically, popular tapes used have been 4mm DAT, 8mm Exabyte, and DLT tapes.
    Today, the most common types used are LTO and 8mm DAT. The maximum native/compressed
    capacities of these tapes is 160GB/320GB for DAT-320 and 6TB/15TB for LTO-7\.
    Modern LTO drives also support encrypted tapes.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 历史上，常用的磁带有 4mm DAT、8mm Exabyte 和 DLT 磁带。如今，最常用的类型是 LTO 和 8mm DAT。这些磁带的最大原生/压缩容量分别为
    DAT-320 的 160GB/320GB 和 LTO-7 的 6TB/15TB。现代 LTO 驱动器还支持加密磁带。
- en: Modern tape drives are attached to host systems using a SAS or Fibre Channel
    interface. Historically, nearly all tape drives followed the SCSI Stream Command
    (SSC) standards (SSC-5 is the latest).
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 现代磁带驱动器通过 SAS 或光纤通道接口连接到主机系统。历史上，几乎所有磁带驱动器都遵循 SCSI 流命令（SSC）标准（SSC-5 是最新的）。
- en: Tape technologies use their own concept of “files,” which are placed in sequential
    order on a tape. Typically, a tape file consists of a backup archive created by
    backup or archiving software. Tape files are not randomly accessible like disk
    drives and optical discs. Instead, you access them by moving or *spacing* forward
    or backward to the beginning of a file number and then reading logical blocks
    until the end of the file.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 磁带技术使用自己的“文件”概念，这些文件按顺序放置在磁带上。通常，磁带文件由备份或归档软件创建的备份档案组成。磁带文件不像硬盘驱动器和光盘那样可以随机访问。相反，您需要通过前进或
    *间隔* 跳到文件编号的开始位置，然后读取逻辑块直到文件末尾。
- en: 'Tapes have different markers that tell the tape drive information about the
    position of the head on the tape (see [Figure 6-2](ch06.xhtml#ch6fig2)). The interesting
    markers to understand here are as follows:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 磁带上有不同的标记，用于告诉磁带驱动器磁头在磁带上的位置（见 [图 6-2](ch06.xhtml#ch6fig2)）。需要了解的有趣标记如下：
- en: '**BOT or BOM (Beginning of Tape or Media)** Tells the drive where it can start
    reading or writing data.'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '**BOT 或 BOM（磁带或介质开始）** 告诉驱动器可以开始读取或写入数据的位置。'
- en: '**EOF (End of File)** Tells the drive that the end of a tape file has been
    reached.'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '**EOF（文件结束）** 告诉驱动器已经到达磁带文件的末尾。'
- en: '**EOD (End of Data)** Tells the drive that the end of the written data has
    been reached (found immediately after the last tape file). This is the logical
    end of the tape.'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '**EOD（数据结束）** 告诉驱动器已到达写入数据的末尾（位于最后一个磁带文件之后）。这是磁带的逻辑末尾。'
- en: '**PEOT, EOT, or EOM ([Physical] End of Tape or Media)** Tells the drive that
    the end of the physical tape length has been reached.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '**PEOT、EOT 或 EOM（[物理] 磁带或介质结束）** 告诉驱动器已到达物理磁带长度的末尾。'
- en: '![image](../images/f06-02.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f06-02.jpg)'
- en: '*Figure 6-2: Files and markers on a tape*'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 6-2：磁带上的文件和标记*'
- en: When you’re acquiring tapes for forensic purposes, it’s essential to copy every
    file on the tape up to the EOD marker (the last readable file on the tape). It’s
    impossible to read past the EOD on a tape using standard SCSI commands. Some forensic
    firms offer specialized hardware and services which are able to recover data beyond
    the EOD.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行法医收集时，至关重要的是将磁带上的每个文件复制到 EOD 标记（磁带上最后一个可读文件）之前。使用标准的 SCSI 命令无法读取 EOD 之后的内容。一些法医公司提供专门的硬件和服务，能够恢复超出
    EOD 的数据。
- en: 'You can extract files from a tape using dd variants. In the example that follows,
    three tape files are recovered from a tape. The nonrewinding device for tape access
    is chosen, typically */dev/nst0* on Linux, to prevent the drive from rewinding
    before all the files have been copied. The command is run repeatedly, always using
    the same input device (it takes the next file on the tape), until it reaches “0+0
    records in,” indicating that all files have been extracted:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 dd 的变体从磁带中提取文件。在以下示例中，三个位于磁带上的文件被恢复。选择非回绕设备进行磁带访问，通常为 Linux 上的 */dev/nst0*，以防在复制所有文件之前，驱动器回绕磁带。命令会反复执行，始终使用相同的输入设备（它会取出磁带上的下一个文件），直到出现“0+0
    records in”表示所有文件已提取完毕：
- en: '[PRE48]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'After the tape files have been recovered, you can analyze the file type. Often,
    you can just use a basic file type program to determine which archive or backup
    format was used. In this example, two *.tar* files and one *.dump* file were extracted:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在带磁带文件恢复后，您可以分析文件类型。通常，您可以使用一个基本的文件类型程序来确定使用了哪种存档或备份格式。在此示例中，提取了两个 *.tar* 文件和一个
    *.dump* 文件：
- en: '[PRE49]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Each of the *hash*.log* files contains a separate MD5 hash for each tape file
    extracted. In this example, *file3.tape* is empty and can be ignored.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 *hash*.log* 文件包含一个单独的 MD5 哈希值，用于每个提取的磁带文件。在此示例中，*file3.tape* 是空的，可以忽略。
- en: '**RAID and Multidisk Systems**'
  id: totrans-274
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**RAID 和多磁盘系统**'
- en: The forensic acquisition of Redundant Array of Independent Disks (RAID) systems
    brings a number of challenges and might require additional steps to complete.
    Capacity planning is important, because it may involve imaging a large number
    of disks.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 对冗余独立磁盘阵列（RAID）系统的法医采集面临许多挑战，可能需要额外的步骤来完成。容量规划很重要，因为这可能涉及到对大量磁盘的成像。
- en: This section assumes the individual disks in a RAID have been imaged separately
    and exist on the acquisition workstation. The goal here is to assemble the imaged
    disks and make the meta device layer accessible as a file or block device, allowing
    you to use forensic analysis tools.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 本节假设 RAID 中的各个磁盘已分别成像并存在于采集工作站上。目标是将这些成像磁盘组装起来，使元设备层作为文件或块设备可访问，从而使用法医分析工具。
- en: Typically, RAID systems create their own header information at the beginning
    of a disk (and sometimes at the end of a disk). The header is for unique identifiers
    (UUIDs), array names, timestamps, RAID configuration details, and other housekeeping
    information.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，RAID 系统在磁盘的开始位置（有时也在磁盘的结束位置）创建自己的头信息。该头信息用于唯一标识符（UUID）、阵列名称、时间戳、RAID 配置信息以及其他管理信息。
- en: '***Proprietary RAID Acquisition***'
  id: totrans-278
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***专有 RAID 采集***'
- en: In situations where a hardware RAID controller was used and no software exists
    to assemble the RAID offline, you may need to clone the RAID disks and boot an
    examination system with the controller physically installed.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用硬件 RAID 控制器且没有软件工具来离线组装 RAID 的情况下，您可能需要克隆 RAID 磁盘，并启动一个带有控制器物理安装的检查系统。
- en: The examples in this section focus on Linux software RAID, but a number of open
    source tools are available that can support acquiring and analyzing proprietary
    RAID systems.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中的示例聚焦于 Linux 软件 RAID，但也有许多开源工具可以支持获取和分析专有 RAID 系统。
- en: 'For example, the following packages contain such tools and are available from
    the Debian software repository:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下软件包包含这些工具，并可以从 Debian 软件库中获取：
- en: '**dpt-i2o-raidutils** Adaptec I2O hardware RAID management utilities'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '**dpt-i2o-raidutils** Adaptec I2O 硬件 RAID 管理工具'
- en: '**array-info** A command line tool for reporting RAID status for several RAID
    types'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '**array-info** 一个用于报告多种 RAID 类型的 RAID 状态的命令行工具'
- en: '**cciss-vol-status** HP SmartArray RAID Volume Status Checker'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '**cciss-vol-status** HP SmartArray RAID 卷状态检查工具'
- en: '**cpqarrayd** A monitoring tool for HP (Compaq) SmartArray controllers'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '**cpqarrayd** HP（Compaq）SmartArray 控制器的监控工具'
- en: '**dpt-i2o-raidutils** Adaptec I2O hardware RAID management utilities'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '**dpt-i2o-raidutils** Adaptec I2O 硬件 RAID 管理工具'
- en: '**mpt-status** A tool to get RAID status out of mpt (and other) HW RAID controllers'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '**mpt-status** 一个从 mpt（及其他）硬件 RAID 控制器获取 RAID 状态的工具'
- en: '**varmon** VA RAID monitor'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '**varmon** VA RAID 监控工具'
- en: 'In addition to these software packages, the dmraid tool is able to identify
    RAID metadata for a number of proprietary formats. You can find a list of supported
    formats by using the `-l` flag, as follows:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些软件包之外，dmraid 工具还能够识别多种专有格式的 RAID 元数据。您可以使用 `-l` 标志查看支持的格式列表，具体如下：
- en: '[PRE50]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: The dmraid tool uses the same device mapper facility shown in “[Manage Drive
    Failure and Errors](ch06.xhtml#ch06lev1sec04)” on [page 159](ch06.xhtml#page_159)
    (where the dmsetup tool was used to simulate errors). The dmraid(8) manual page
    provides a number of examples for reassembling various proprietary RAID configurations.^([8](footnote.xhtml#fn37))
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: dmraid 工具使用与 “[管理驱动器故障和错误](ch06.xhtml#ch06lev1sec04)” 中所示相同的设备映射功能，见 [第159页](ch06.xhtml#page_159)（其中使用了
    dmsetup 工具模拟错误）。dmraid(8) 手册页提供了多个示例，用于重新组装各种专有 RAID 配置。^([8](footnote.xhtml#fn37))
- en: '***JBOD and RAID-0 Striped Disks***'
  id: totrans-292
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***JBOD 和 RAID-0 条带化磁盘***'
- en: Just a Bunch Of Disks (JBOD) is the term used to indicate that a number of disks
    have been concatenated into one logical drive (without any RAID configuration
    for performance or redundancy). To assemble a group of disks into a single JBOD
    device, you can use the `dmsetup` command.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '"Just a Bunch Of Disks"（JBOD）是用来表示将多个磁盘连接成一个逻辑驱动器的术语（没有任何RAID配置来提高性能或冗余）。要将一组磁盘组装成一个单一的JBOD设备，您可以使用`dmsetup`命令。'
- en: When you’re building devices from multiple disks, it’s useful to have a separate
    table file to define the device, offsets, and mappings. In this simple text file,
    you can also include comments with information about the disks.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 当您从多个磁盘构建设备时，拥有一个单独的表文件来定义设备、偏移量和映射非常有用。在这个简单的文本文件中，您还可以包含有关磁盘的信息评论。
- en: 'The following example has a JBOD with three disks of different sizes (a charactaristic
    of JBOD systems is that any combination of drive sizes can be used). The JBOD
    device mapper table file (*jbod-table.txt* in this example) defines how they are
    concatenated. Run the `dmsetup` command with the table file as input to create
    the device in */dev/mapper*:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例包含一个具有三个不同大小磁盘的JBOD（JBOD系统的特点是可以使用任何组合的驱动器大小）。该JBOD设备映射表文件（此示例中的*jbod-table.txt*）定义了它们如何连接。使用`dmsetup`命令并将表文件作为输入，以在*/dev/mapper*中创建设备：
- en: '[PRE51]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: This table defines three mappings that construct the device file, which will
    appear in */dev/mapper*. Each line defines the offset in the mapper device, the
    number of sectors to map, the target type (linear), and the target device with
    an offset (sector zero here, because we want the whole device). Getting the offsets
    right can be tricky and may require some calculation. Double-check the offsets
    first if there are problems.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 此表定义了构建设备文件的三个映射，这些文件将出现在*/dev/mapper*中。每行定义了映射器设备中的偏移量、要映射的扇区数量、目标类型（线性）以及带有偏移量的目标设备（此处为零扇区，因为我们希望使用整个设备）。正确获取偏移量可能很棘手，可能需要一些计算。如果遇到问题，请先仔细检查偏移量。
- en: 'The table is piped into the `dmsetup create` command, specifying the name of
    the mapper device. After the device is created, you can use regular forensic tools
    to operate on it. The following example shows the Sleuth Kit `fsstat` command
    being used on the newly created device:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 表被管道传输到`dmsetup create`命令中，指定映射器设备的名称。设备创建后，您可以使用常规取证工具对其进行操作。以下示例展示了Sleuth
    Kit的`fsstat`命令在新创建的设备上使用：
- en: '[PRE52]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'When you no longer need the mapper device, remove it by using the `dmsetup`
    command, as follows:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 当您不再需要映射器设备时，可以使用`dmsetup`命令将其删除，如下所示：
- en: '[PRE53]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: See the dmsetup(8) manual page for more information about the different device
    mapper types the dmsetup tool uses. You can use device mappings for encryption,
    snapshots, RAID systems, and even simulating errors and failing devices (which
    is useful for testing the behavior of forensic tools).
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`dmsetup`工具使用的不同设备映射器类型的更多信息，请参阅dmsetup(8)手册页。您可以使用设备映射进行加密、快照、RAID系统，甚至模拟错误和故障设备（这对于测试取证工具的行为非常有用）。
- en: RAID-0 striped disks are created for performance, not redundancy. A group of
    disks in a RAID-0 configuration has the combined capacity of all the drives, and
    disk access is distributed across the array (performance increases as disks are
    added).
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: RAID-0条带磁盘是为了性能而创建的，而不是冗余。RAID-0配置中的磁盘组具有所有驱动器的总容量，并且磁盘访问分布在阵列中（随着磁盘数量的增加，性能提高）。
- en: If you know the offsets and chunk size of a striped RAID-0 array, the dmsetup
    tool can create a mapper device to represent the assembled array.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您知道条带化RAID-0阵列的偏移量和块大小，则`dmsetup`工具可以创建一个映射器设备来表示已组装的阵列。
- en: 'In the following example, a RAID-0 consisting of two striped disks is attached
    to the acquisition host. It is known that the subject RAID system has 2048 initial
    sectors containing metadata and that the chunk size is 128 sectors. You can then
    assemble the RAID as follows:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，一个由两个条带磁盘组成的RAID-0被附加到采集主机。已知该RAID系统有2048个初始扇区，其中包含元数据，块大小为128个扇区。然后，您可以按如下方式组装RAID：
- en: '[PRE54]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'You can analyze this */dev/mapper* device using regular filesystem forensic
    tools. An example using Sleuth Kit’s `fls` command on the newly created device
    is shown here:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用常规文件系统取证工具分析此*/dev/mapper*设备。以下是使用Sleuth Kit的`fls`命令分析新创建的设备的示例：
- en: '[PRE55]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Don’t forget to remove the device when the tasks are completed.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 完成任务后，请勿忘记删除设备。
- en: '***Microsoft Dynamic Disks***'
  id: totrans-310
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Microsoft 动态磁盘***'
- en: Microsoft created the Logical Disk Manager (LDM) to manage logical volumes,
    and you can use the Linux-based tool ldmtool to analyze Microsoft dynamic disks.
    The goal here is to make the volume available for block-level access by forensic
    tools.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 微软创建了逻辑磁盘管理器（LDM）来管理逻辑卷，你可以使用基于Linux的工具ldmtool来分析微软的动态磁盘。这里的目标是使卷对取证工具具有块级访问权限。
- en: 'In this example, two subject disks with a volume created by Microsoft LDM are
    attached to the acquisition host. An LDM disk group is identified by its *Globally
    Unique Identifier (GUID)*. You can scan the disks for the disk group GUID, which
    will lead to more information about the disk group when the ldmtool `show` command
    is used:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，两个由微软LDM创建的卷的目标磁盘连接到采集主机。LDM磁盘组由其*全球唯一标识符（GUID）*标识。你可以扫描磁盘以查找磁盘组的GUID，使用ldmtool的`show`命令将获取更多关于该磁盘组的信息：
- en: '[PRE56]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: The `show` command provides the disk group name and GUID, the volume names,
    and the names of disks. This is enough information to create a mapper device.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '`show`命令提供了磁盘组的名称和GUID、卷名称以及磁盘的名称。这些信息足以创建映射设备。'
- en: 'Knowing the GUID and the volume name, you can create a volume device:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 知道GUID和卷名称后，你可以创建一个卷设备：
- en: '[PRE57]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'This creates a device in */dev/mapper* that corresponds to the filesystem on
    the dynamic disk (this is equivalent to a partition device like */dev/sda1*).
    Then you can use regular forensic analysis tools to operate on this device. An
    example using the Sleuth Kit `fsstat` command is shown as follows:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 这会在*/dev/mapper*中创建一个设备，它对应于动态磁盘上的文件系统（这相当于一个分区设备，如*/dev/sda1*）。然后，你可以使用常规的取证分析工具对该设备进行操作。以下是使用Sleuth
    Kit的`fsstat`命令的示例：
- en: '[PRE58]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: When you no longer need the device, remove it using the `dmsetup` command, as
    shown in “[JBOD and RAID-0 Striped Disks](ch06.xhtml#ch06lev2sec25)” on [page
    179](ch06.xhtml#page_179).
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 当你不再需要该设备时，可以使用`dmsetup`命令将其移除，如在[第179页](ch06.xhtml#page_179)的“[JBOD与RAID-0条带磁盘](ch06.xhtml#ch06lev2sec25)”中所示。
- en: '***RAID-1 Mirrored Disks***'
  id: totrans-320
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***RAID-1镜像磁盘***'
- en: Mirrored disks are simple and consist of two identical disks (or should be if
    they were synchronized). Image both disks into separate image files. Depending
    on the mirroring software or hardware, a header might be in the beginning sectors
    of the disk that you need to skip when you’re performing analysis work.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 镜像磁盘很简单，由两个相同的磁盘组成（如果它们已同步的话）。将两个磁盘分别制作成镜像文件。根据镜像软件或硬件的不同，磁盘的起始扇区可能包含一个头信息，进行分析时需要跳过这些扇区。
- en: 'The following example shows mirrored disks containing an EXT4 partition. The
    mirroring software (Linux Software RAID) used the first 32,768 sectors, and the
    mirrored filesystem starts at that offset on the physical disks and without an
    offset for the multiple device,^([9](footnote.xhtml#fn38)) md0:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了包含EXT4分区的镜像磁盘。镜像软件（Linux软件RAID）使用了前32,768个扇区，镜像文件系统从物理磁盘的该偏移开始，并且多个设备没有偏移，^([9](footnote.xhtml#fn38))
    md0：
- en: '[PRE59]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: In this example, the same filesystem on md0 is also found at the 32k offset
    of the two physical devices (sde and sdg). The cryptographic checksums of mirrored
    disks will probably not match each other, because the RAID header information
    might be different (unique disk UUIDs and so on) and the disks might not be perfectly
    synchronized.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，md0上的相同文件系统也存在于两个物理设备（sde和sdg）的32k偏移处。镜像磁盘的加密校验和可能不会相互匹配，因为RAID头信息可能不同（如独特的磁盘UUID等），并且磁盘可能没有完全同步。
- en: '***Linux RAID-5***'
  id: totrans-325
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Linux RAID-5***'
- en: If multiple disks are part of a Linux RAID array, you can acquire them individually
    and then assemble them using several methods. The dmsetup tool provides an interface
    to mdadm using tables. The mdadm tool can operate on devices that have been mapped
    or looped. In the following example, three acquired drive images from a Linux
    MD RAID-5 setup are used.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 如果多个磁盘是Linux RAID阵列的一部分，你可以分别获取它们，然后使用几种方法将它们组合在一起。dmsetup工具通过表格提供了一个与mdadm交互的接口。mdadm工具可以在已映射或已挂载的设备上运行。在以下示例中，使用了来自Linux
    MD RAID-5设置的三个获取的驱动器镜像。
- en: 'An mmls analysis of the individual partition tables reveals a Linux RAID partition
    at sector 2048 of each disk image (*sda.raw*, *sdb.raw*, and *sdc.raw*). This
    sector offset is converted (using Bash math expansion) to a byte offset for the
    `losetup` command:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 对单个分区表进行mmls分析，揭示了每个磁盘映像（*sda.raw*，*sdb.raw*，和*sdc.raw*）的第2048个扇区有一个Linux RAID分区。此扇区偏移被转换（使用Bash数学扩展）为`losetup`命令的字节偏移：
- en: '[PRE60]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'A read-only loop device is created for each of the disks in the array using
    the calculated byte offset (2048 sectors, which is 1048576 bytes):'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 对阵列中每个磁盘创建一个只读循环设备，使用计算出的字节偏移（2048个扇区，即1048576字节）：
- en: '[PRE61]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The preceding commands create loop devices corresponding to the three acquired
    image files. You can assemble an array using mdadm, as follows:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令创建了与三个获取的映像文件对应的循环设备。你可以使用mdadm组装一个阵列，方法如下：
- en: '[PRE62]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Now you can access and analyze the RAID meta disk device using regular forensic
    tools on the */dev/md0* device. An example using Sleuth Kit’s `fsstat` command
    is shown here:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用常规取证工具访问和分析RAID元磁盘设备，路径为*/dev/md0*。这里展示了一个使用Sleuth Kit的`fsstat`命令的示例：
- en: '[PRE63]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'You can also mount the newly created device and access it using regular file
    tools. The normal Linux `mount` command can be used as follows:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以挂载新创建的设备，并使用常规文件工具访问它。可以使用正常的Linux `mount`命令，方法如下：
- en: '[PRE64]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'When you’ve completed the analysis, reverse the steps for the cleanup process,
    including using the `stop` command with the mdadm system:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 完成分析后，按照清理过程的步骤反向操作，包括使用`stop`命令与mdadm系统：
- en: '[PRE65]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Depending on the system configuration, the Linux kernel may automatically attempt
    to reassemble attached RAID devices if they’re detected, possibly starting a rebuild
    operation that could destroy evidence. It’s important to use write blocking with
    live devices and ensure that read-only loop devices and arrays are created.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 根据系统配置，Linux内核可能会自动尝试重新组装已检测到的附加RAID设备，可能会启动一个重建操作，从而销毁证据。使用实时设备时，务必使用写入阻止，并确保创建只读循环设备和阵列。
- en: Many of the techniques described in this chapter apply to loop devices mapping
    to image files. More examples of creating and using loop devices are shown in
    [Chapter 8](ch08.xhtml#ch08).
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中描述的许多技术适用于映射到映像文件的循环设备。创建和使用循环设备的更多示例，请参见[第8章](ch08.xhtml#ch08)。
- en: '**Closing Thoughts**'
  id: totrans-341
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**结束语**'
- en: In this chapter, I covered the main topic of the book—forensic acquisition.
    You learned how to use the different dd-based tools, create images with forensic
    formats, and use SquashFS as a forensic evidence container. Various aspects of
    evidence preservation using cryptography were shown, including hashing, hash windows,
    signing, and timestamping. You now have a deeper understanding of error management
    and recovery when imaging problematic media. You are able to image over a network
    and image removable media and multi-disk (RAID) systems. This is the core of the
    forensic acquisition process.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我介绍了本书的主要主题——取证采集。你学习了如何使用不同的基于dd的工具，创建具有取证格式的映像，并使用SquashFS作为取证证据容器。本书还展示了使用加密技术进行证据保存的各个方面，包括哈希、哈希窗口、签名和时间戳。你现在对在成像问题媒体时的错误管理和恢复有了更深入的了解。你能够在网络上成像，成像可移动媒体和多磁盘（RAID）系统。这是取证采集过程的核心。
