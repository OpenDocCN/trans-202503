- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: The Journey Ahead
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 未来的旅程
- en: 'Your journey as a software engineer spans your entire career. There are many
    stops along the way: student, engineer, tech lead, maybe even manager. Most new
    engineers start with a technical foundation but little real-world experience.
    The chapters ahead will guide you toward the first milestone of your career, which
    you’ll reach when you can safely deliver code changes and work seamlessly with
    your team.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 作为软件工程师的旅程贯穿你整个职业生涯。途中有许多停靠站：学生、工程师、技术领导，甚至可能是经理。大多数新工程师起步时有技术基础，但缺乏实际经验。接下来的章节将引导你走向职业生涯的第一个里程碑，当你能够安全地交付代码变更并与团队无缝协作时，你将达到这一里程碑。
- en: Reaching the first milestone is difficult—the information you need is scattered
    across the internet or, worse, tucked away in someone’s head. This book consolidates
    key information that you need to be successful. But what does a successful software
    engineer look like, and how do you get there?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 达到第一个里程碑是困难的——你需要的信息分散在互联网上，或者更糟，藏在某人的脑袋里。这本书整合了你成功所需的关键信息。但成功的软件工程师是什么样的，又该如何实现呢？
- en: Your Destination
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的目标
- en: Everyone begins as an entry-level engineer. To advance, you’ll need to be competent
    in several core areas.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都从入门级工程师开始。要晋升，你需要在多个核心领域具备能力。
- en: Technical knowledge You know your computer science fundamentals. You know how
    to use integrated development environments (IDEs), build systems, debuggers, and
    test frameworks. You are familiar with continuous integration, metrics and monitoring,
    configuration, and packaging systems. You proactively create and improve test
    code. You consider operations when making architectural decisions.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 技术知识 你了解计算机科学的基础知识。你知道如何使用集成开发环境（IDEs）、构建系统、调试器和测试框架。你熟悉持续集成、指标和监控、配置和打包系统。你主动创建和改进测试代码。在做出架构决策时，你会考虑运营问题。
- en: Execution You create value by solving problems with code, and you understand
    the connection between your work and the business. You’ve built and deployed small
    and medium-sized features. You write, test, and review code. You share on-call
    duties and debug operational issues. You are proactive and dependable. You participate
    in technical talks, reading groups, interviews, and presentations.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行 你通过编写代码解决问题创造价值，并且你理解自己的工作与业务之间的联系。你已经构建并部署了小型和中型功能。你编写、测试并审查代码。你参与值班并调试运营问题。你积极主动，值得信赖。你参与技术讲座、阅读小组、面试和演讲。
- en: Communication You communicate clearly both in written and verbal form. You are
    able to give and receive feedback effectively. You proactively ask for help and
    get clarification in ambiguous situations. You raise issues and identify problems
    in a constructive manner. You provide help when possible and are starting to influence
    peers. You document your work. You write clear design documents and invite feedback.
    You are patient and empathetic when dealing with others.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 沟通 你能够清晰地进行书面和口头沟通。你能够有效地给予和接受反馈。在模糊的情况下，你主动寻求帮助并获得澄清。你以建设性的方式提出问题并识别问题。你在可能的情况下提供帮助，并开始影响同事。你记录自己的工作。你编写清晰的设计文档并邀请反馈。在与他人打交道时，你耐心且富有同理心。
- en: Leadership You work independently on well-scoped work. You learn from mistakes
    quickly. You handle change and ambiguity well. You actively participate in project
    and quarterly planning. You help new team members onboard. You give meaningful
    feedback to your manager.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 领导力 你能独立完成明确范围的工作。你能快速从错误中吸取教训。你能很好地应对变化和模糊的情况。你积极参与项目和季度规划。你帮助新团队成员快速上手。你向经理提供有意义的反馈。
- en: A Map for Your Journey
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的旅程地图
- en: To get to your destination, you need a map. The rest of this chapter will help
    you navigate both this book and the beginning of your career. We start at Peak
    Newb, where all newbies begin. From there, we travel down Ramp-Up River, where
    you start coding and learning local conventions and processes. Next is Cape Contributor,
    where you ship some meaningful features. Shipping features means you will have
    to sail the storms of Operations Ocean. Finally, we will land in the safe haven
    of Competence Cove.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了到达目的地，你需要一张地图。本章的其余部分将帮助你在这本书和职业生涯的起点之间找到方向。我们从“新手高峰”开始，这是所有新手的起点。然后，我们沿着“加速河”前进，你将在那里开始编写代码，学习本地的约定和流程。接下来是“贡献者岬”，你将在那里发布一些有意义的功能。发布功能意味着你将不得不航行于“运营海洋”的风暴中。最后，我们将抵达“能力湾”的安全港。
- en: We’ve annotated many paragraphs with chapter references. You can read this book
    linearly, or you can jump to the chapters you care most about. Many chapter references
    appear more than once in the outline; this is intentional. Chapters are grouped
    by subject, but the subjects we cover will span your career. You will discover
    new insights every time you revisit the material.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在许多段落中都标注了章节参考。你可以按顺序阅读本书，或者跳到你最关心的章节。许多章节参考会在大纲中多次出现；这是有意为之。各章节按主题分组，但我们涵盖的主题将贯穿你的整个职业生涯。每次回顾这些内容时，你都会获得新的见解。
- en: Peak Newb
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Peak Newb
- en: You begin your journey as a newbie. Get familiar with the company, the team,
    and how things get done. Attend onboarding meetings. Set up your development environment
    and system access, and figure out regular team processes and meetings. Read documentation
    and have discussions with teammates. Contribute by filling in documentation gaps
    you find in the onboarding process.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你作为新手开始了你的旅程。熟悉公司、团队以及工作流程。参加入职会议。设置开发环境和系统访问权限，了解常规团队流程和会议。阅读文档，并与队友讨论。通过填补入职过程中发现的文档空白来做出贡献。
- en: Your company might have a new hire orientation to help you get up and running.
    These programs teach you how the company works, provide a tour of the organization,
    and introduce company leadership. New hire programs also introduce you to new
    hires from other departments—your future colleagues. If your company doesn’t have
    a new hire program, ask your manager to explain the “org chart” (who is in charge
    of what and who reports to whom), the different departments, and how they relate;
    take notes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你的公司可能有新员工培训，帮助你快速上手。这些项目教你公司是如何运作的，提供组织结构的介绍，并向你介绍公司领导。新员工培训还会让你认识来自其他部门的新同事——你未来的同事。如果你的公司没有新员工培训项目，可以让经理解释一下“组织结构图”（谁负责什么，谁向谁汇报），不同的部门，以及它们之间的关系；做笔记。
- en: Some companies have additional new software engineer onboarding processes to
    help you get access to systems, set up your development environment, and check
    out and build code. If no such process exists, you have an opportunity to create
    one! Write down what you do as you set up. (See Chapter 2, “Getting to Conscious
    Competence.”)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一些公司有额外的软件工程师入职流程，帮助你获得系统访问权限、设置开发环境、检查和构建代码。如果没有这样的流程，你将有机会创建一个！在设置过程中，记录下你所做的事情。（参见第2章，“从无意识无能到有意识有能”）
- en: You should get assigned a small task to learn the basics of making a code change
    and shepherding it into production. If not, look or ask for some useful—but minor—change
    to make. It can be as small as updating a comment; the goal is to understand the
    steps, not to impress. (See Chapter 2, “Getting to Conscious Competence,” and
    Chapter 8, “Delivering Software.”)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会分配一个小任务，学习基本的代码修改并将其推送到生产环境。如果没有，寻找或询问一个有用但不复杂的小改动来做。可以是更新一个注释；目标是理解步骤，而不是给人留下深刻印象。（参见第2章，“从无意识无能到有意识有能”，以及第8章，“交付软件”）
- en: Set up your code editor or IDE. Use the IDE that your team uses; if you don’t
    know it, find a tutorial online. Learning your IDE will save you a lot of time
    later. Configure your IDE to apply team code formatting conventions; ask what
    they are and how to apply them. (See Chapter 3, “Working with Code.”)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 设置你的代码编辑器或集成开发环境（IDE）。使用团队使用的IDE；如果你不知道，可以在线查找教程。学习IDE将为你节省大量时间。配置IDE以应用团队的代码格式化约定；询问它们是什么以及如何应用。（参见第3章，“与代码合作”）
- en: Make sure your manager adds you to team and company meetings—stand-ups, sprint
    planning, retrospectives, all-hands, and so on. Remind your manager to schedule
    a one-on-one meeting if they conduct them. (See Chapter 12, “Agile Planning,”
    and Chapter 13, “Working with Managers.”)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的经理将你加入到团队和公司会议中——站会、冲刺规划、回顾会、全员大会等。提醒你的经理，如果他们进行一对一会议，安排一个一对一的会谈。（参见第12章，“敏捷规划”，以及第13章，“与经理合作”）
- en: Ramp-Up River
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ramp-Up River
- en: Once you’ve completed newbie tasks, you’ll take on your first real work for
    the team. You will probably work on an existing codebase. What you find might
    confuse or intimidate you. Ask questions, and have your team review your work
    frequently. (See Chapter 3, “Working with Code,” and Chapter 7, “Code Reviews.”)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你完成了新手任务，你将承担团队的第一项实际工作。你可能会处理现有的代码库。你看到的东西可能会让你感到困惑或不知所措。提问，并让你的团队经常审查你的工作。（参见第3章，“与代码合作”，以及第7章，“代码审查”）
- en: Learning is critical as you ramp up. Investigate how code is built, tested,
    and deployed. Read pull requests and code reviews. Don’t be afraid to ask for
    more information. Sign up for tech talks, brown bags, reading groups, mentorship
    programs, and the like. (See Chapter 2, “Getting to Conscious Competence”; Chapter
    5, “Managing Dependencies”; Chapter 6, “Testing”; and Chapter 8, “Delivering Software.”)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 学习是你成长过程中至关重要的部分。调查代码是如何构建、测试和部署的。阅读拉取请求和代码审查。不要害怕请求更多的信息。报名参加技术讲座、午餐沙龙、读书小组、导师计划等活动。
    （参见第2章，“从无意识到有意识的胜任”；第5章，“管理依赖”；第6章，“测试”；以及第8章，“交付软件”）
- en: Now is the time to build a relationship with your manager. Get to know their
    working style, understand their expectations, and talk to them about your goals.
    If your manager does one-on-ones, expect to have your first few sessions. Managers
    usually want to track progress, so ask your manager how to communicate status.
    (See Chapter 13, “Working with Managers.”)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是与经理建立关系的时候了。了解他们的工作风格，理解他们的期望，并与他们讨论你的目标。如果你的经理有一对一的沟通，预计你会进行第一次几次会谈。经理通常希望跟踪进展，因此询问经理如何传达状态。
    （参见第13章，“与经理合作”）
- en: You’ll probably also attend your first planning session, usually a sprint planning
    meeting. You might also join retrospective or all-hands meetings. Ask for an overview
    of the roadmap and development planning process. (See Chapter 12, “Agile Planning.”)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还会参加第一次规划会议，通常是冲刺规划会议。你也可能参加回顾会议或全员大会。要求了解路线图和开发规划流程的概述。 （参见第12章，“敏捷规划”）
- en: Cape Contributor
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Cape Contributor
- en: You’ll enter Cape Contributor once you begin working on larger tasks and features.
    The team trusts you to work more independently. Learn how to write production-grade
    code that’s operator friendly, properly manages dependencies, and has clean tests.
    (See Chapter 3, “Working with Code”; Chapter 4, “Writing Operable Code”; Chapter
    5, “Managing Dependencies”; and Chapter 6, “Testing.”)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦开始处理更大的任务和功能，你将进入Cape Contributor阶段。团队信任你能够更独立地工作。学习如何编写生产级代码，使其操作友好，正确管理依赖，并拥有清晰的测试。
    （参见第3章，“与代码合作”；第4章，“编写可操作的代码”；第5章，“管理依赖”；以及第6章，“测试”）
- en: You should be helping teammates now, too. Get involved in code reviews, and
    expect teammates to ask for ideas and feedback. Your team might forget that you’ve
    joined recently, so ask questions when you’re confused. (See Chapter 2, “Getting
    to Conscious Competence”; Chapter 7, “Code Reviews”; and Chapter 10, “Technical
    Design Process.”)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在也应该在帮助团队成员。参与代码审查，并期待团队成员向你寻求想法和反馈。你的团队可能会忘记你是新加入的，所以当你感到困惑时，不要害怕提问。 （参见第2章，“从无意识到有意识的胜任”；第7章，“代码审查”；以及第10章，“技术设计过程”）
- en: Most companies have quarterly planning and goal-setting cycles. Participate
    in team planning, and work with your manager to set goals or objectives and key
    results (OKRs). (See Chapter 12, “Agile Planning,” and Chapter 13, “Working with
    Managers.”)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数公司都有季度规划和目标设定周期。参与团队规划，与经理一起设定目标或关键成果（OKRs）。 （参见第12章，“敏捷规划”，以及第13章，“与经理合作”）
- en: Operations Ocean
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Operations Ocean
- en: 'You’ll learn more about how code is delivered to users as you work on larger
    tasks. A lot happens during delivery: testing, build, release, deployment, and
    rollout. Finessing this process takes skill. (See Chapter 8, “Delivering Software.”)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理更大任务时，你将会更多地了解代码如何交付给用户。在交付过程中发生很多事情：测试、构建、发布、部署和上线。精细化这个过程需要技巧。 （参见第8章，“交付软件”）
- en: After rolling out your changes, you’ll have to operate your team’s software.
    Operations work is high stress and takes grit; customers will be impacted by instability.
    You’ll debug live software using metrics, logs, and trace tools. You might also
    enter an on-call rotation at this point. Exposure to operational work will show
    you how code behaves in users’ hands, and you’ll learn to protect your software.
    (See Chapter 4, “Writing Operable Code,” and Chapter 9, “Going On-Call.”)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在推出更改之后，你将需要操作团队的软件。运维工作压力大，需要坚韧不拔；不稳定性会影响到客户。你将使用指标、日志和追踪工具来调试在线软件。此时你也可能进入值班轮换。接触运维工作将让你了解代码在用户手中的表现，你将学会保护你的软件。
    （参见第4章，“编写可操作的代码”，以及第9章，“进入值班”）
- en: Competence Cove
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Competence Cove
- en: Your team will count on you to drive a small project now. You’ll need to write
    a technical design document and help with project planning. Designing software
    will expose you to a new level of complexity. Don’t settle for your first design;
    explore trade-offs and plan for your system to evolve over time. (See Chapter
    10, “Technical Design Process”; Chapter 11, “Creating Evolvable Architectures”;
    and Chapter 12, “Agile Planning.”)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你的团队将依赖你来推动一个小项目。你需要编写技术设计文档并帮助进行项目规划。设计软件将让你接触到更高层次的复杂性。不要满足于你的第一个设计；探索不同的权衡，并为系统的长期演变做规划。（参见第10章，“技术设计过程”；第11章，“创建可演化架构”；以及第12章，“敏捷规划”。）
- en: Some of the early shine of your job has worn off. You see flaws in the architecture,
    the build and deploy system, and the testing environment. You are learning to
    balance regular work with necessary maintenance and refactoring. Don’t try to
    rewrite everything. (See Chapter 3, “Working with Code.”)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你工作的初期光辉已经褪去。你看到了架构、构建和部署系统以及测试环境中的缺陷。你正在学习如何平衡日常工作与必要的维护和重构。不要试图重写一切。（参见第3章，“与代码合作。”）
- en: You also have thoughts about team processes. Write down your observations—what’s
    working and what isn’t—and discuss your ideas in a one-on-one with your manager.
    (See Chapter 13, “Working with Managers.”)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你也有关于团队流程的想法。把你的观察记录下来——哪些有效，哪些无效——并与经理进行一对一的讨论。（参见第13章，“与经理合作。”）
- en: Now is also the time to work on longer-term goal setting and performance reviews.
    Work with your manager to understand the process and get feedback from peers.
    Discuss career aspirations, future work, projects, and ideas with your manager.
    (See Chapter 13, “Working with Managers,” and Chapter 14, “Navigating Your Career.”)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在也是设定长期目标和绩效评估的时机。与经理合作，了解流程并从同事那里获得反馈。与经理讨论职业愿望、未来的工作、项目和想法。（参见第13章，“与经理合作”和第14章，“驾驭你的职业生涯。”）
- en: Onward!
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向前进！
- en: You now have both a map and destination for your beginner’s journey. After landing
    at Competence Cove, you’ll be a full-fledged software engineer capable of working
    with your team to deliver valuable features. The remainder of the book will help
    you navigate the path. Our journey begins.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经有了初学者旅程的地图和目的地。到达能力湾后，你将成为一名成熟的软件工程师，能够与团队一起交付有价值的功能。书中的剩余部分将帮助你在这条路上前行。我们的旅程开始了。
