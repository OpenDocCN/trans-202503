- en: C
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: C
- en: Exercises
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 练习
- en: Exploration is the engine that drives innovation.
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 探索是推动创新的引擎。
- en: ''
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Edith Widder
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: —埃迪丝·威德尔
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: This appendix contains some ideas for further exploration, open questions, and
    challenges for readers who want to go beyond the material covered in this book.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录包含一些进一步探索的思路、未解的问题和挑战，适合那些希望超越本书内容的读者。
- en: '**Chapter 1: Foundations**'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**第1章：基础**'
- en: The book focuses on information security in conventional computer systems, but
    appliances and devices also run on software, and these are increasingly connected
    to the internet. How do we extend principles such as C-I-A to secure software
    that interacts with the physical world?
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书侧重于传统计算机系统中的信息安全，但家电和设备也运行软件，并且这些设备越来越多地与互联网连接。我们如何将C-I-A等原则扩展到与物理世界互动的安全软件中？
- en: '**Chapter 2: Threats**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**第2章：威胁**'
- en: Threat model an existing software design, or just one component of a large system.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对现有的软件设计进行威胁建模，或者仅对大型系统中的一个组件进行建模。
- en: For fun, threat model a favorite movie or scene from a book where adversaries
    battle over a prized asset.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了好玩，进行一个威胁建模，选择你最喜欢的电影或书中的场景，在那里对手为了争夺珍贵资产而展开激烈斗争。
- en: '**Chapter 3: Mitigations**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**第3章：缓解措施**'
- en: Write helper functions to limit the exposure of sensitive data in memory as
    described in “Minimize Data Exposure” on page 47.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写帮助函数，限制内存中敏感数据的暴露，如第47页“最小化数据暴露”中所述。
- en: Intentionally code a Confused Deputy and try to exploit it, or challenge a colleague
    to do so. Fix the vulnerability and confirm that the code is secure.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 故意编写一个混淆代理（Confused Deputy）并尝试利用它，或者挑战同事来做这件事。修复漏洞并确认代码安全。
- en: Design a library to enforce an extensible access policy for an existing data
    access API.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计一个库，强制执行现有数据访问API的可扩展访问策略。
- en: '**Chapter 4: Patterns**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**第4章：模式**'
- en: Take an existing design, or undertake a new one, and see how many of the chapter’s
    patterns you can use to make it as secure as possible.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选取现有设计，或开展新的设计，看看你能使用本章中多少模式，将其做到尽可能安全。
- en: What additional security patterns and anti-patterns can you think of? Keep a
    running list, adding to the ones presented in the chapter, and share them with
    colleagues.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你能想到哪些额外的安全模式和反模式？保持一个持续更新的清单，加入本章中提到的模式，并与同事分享。
- en: Are allowlists always better than blocklists? Think of an exception, or explain
    why none exist.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 白名单（allowlist）总比黑名单（blocklist）更好吗？想想有没有例外，或者解释为什么没有例外。
- en: '**Chapter 5: Cryptography**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**第5章：加密学**'
- en: An easy way to play around with real crypto tools is with the OpenSSL command
    line ([https://wiki.openssl.org/index.php/Main_Page](https://wiki.openssl.org/index.php/Main_Page)).
    You can use it to experiment with symmetric and asymmetric crypto, as well as
    MACs (called *digests* in `openssl(1)`), or even create and check your own certificates.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种轻松体验真实加密工具的方法是使用OpenSSL命令行工具（[https://wiki.openssl.org/index.php/Main_Page](https://wiki.openssl.org/index.php/Main_Page)）。你可以用它实验对称和非对称加密、MAC（在`openssl(1)`中称为*摘要*），甚至创建和检查你自己的证书。
- en: Find a high-quality crypto library and try using it to implement the basic operations
    described in the chapter. How was the API in terms of ease of use, and how confident
    are you that your implementation is secure?
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到一个高质量的加密库，并尝试用它实现本章中描述的基本操作。它的API使用起来如何？你对自己的实现安全性有多有信心？
- en: If the previous exercise proved difficult, how could you redesign the API to
    be easier to use, as well as more foolproof?
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果前面的练习感觉困难，如何重新设计API，让它更易用，同时也更加防错？
- en: Code the crypto API improvements you thought of, or wrap the original library
    to provide a better API.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写你想到的加密API改进，或者将原始库包装成提供更好API的形式。
- en: '**Chapter 6: Secure Design**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**第6章：安全设计**'
- en: Explore Google’s design document writing guidance ([https://www.industrialempathy.com/posts/design-docs-at-google/](https://www.industrialempathy.com/posts/design-docs-at-google/)).
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索谷歌的设计文档写作指南（[https://www.industrialempathy.com/posts/design-docs-at-google/](https://www.industrialempathy.com/posts/design-docs-at-google/)）。
- en: If you haven’t written a software design document before, try it out the next
    time you get an opportunity to do so (making it as informal and high level as
    you like).
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你以前没有编写过软件设计文档，下一次有机会时可以尝试编写（可以尽量简洁高层次）。
- en: If you work on a codebase that has no written design document, retroactively
    create one. For large systems, create designs for one component at a time, focusing
    on whatever components are most important to security or otherwise of interest.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您正在处理一个没有书面设计文档的代码库，请回溯性地创建一个。对于大型系统，可以一次创建一个组件的设计，重点关注对安全最重要或其他感兴趣的组件。
- en: '**Chapter 7: Security Design Reviews**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**第7章：安全设计评审**'
- en: Find existing designs and review them as a learning exercise. Don’t just look
    for vulnerabilities; create a broad assessment of both strengths and weaknesses,
    including places where security matters most, ways the design enhances security,
    mitigation alternatives, and ways in which security could be improved or made
    more usable.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找现有设计并作为学习练习进行评审。不要仅仅寻找漏洞；要对设计的优势和弱点进行广泛评估，包括安全最重要的地方、设计如何增强安全性、缓解方案的替代方法，以及如何改进安全性或使其更易用。
- en: Share and discuss your findings from the preceding exercise with colleagues.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与同事分享并讨论前面练习中的发现。
- en: '**Chapter 8: Secure Programming**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**第8章：安全编程**'
- en: To get a feel for realistic examples of security vulnerabilities, look for security
    bugs that have already been found and fixed in your codebase or in open source
    software projects. I suggest focusing on open source projects because vulnerabilities
    are usually described in detail and you can see the code. The US Department of
    Homeland Security sponsors a large database of publicly known vulnerabilities
    ([https://cve.mitre.org/](https://cve.mitre.org/)). The Chromium bug database
    is another good source of public vulnerabilities ([https://bugs.chromium.org/p/chromium/issues/list/](https://bugs.chromium.org/p/chromium/issues/list/)).
    A good starting point is to filter these databases for fixed security bugs so
    you can see the actual code changes.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了感受现实世界中安全漏洞的例子，可以寻找已经在您的代码库或开源软件项目中发现并修复的安全漏洞。我建议专注于开源项目，因为漏洞通常会详细描述，并且您可以看到代码。美国国土安全部赞助了一个大型的公开已知漏洞数据库（[https://cve.mitre.org/](https://cve.mitre.org/)）。Chromium
    漏洞数据库是另一个很好的公开漏洞来源（[https://bugs.chromium.org/p/chromium/issues/list/](https://bugs.chromium.org/p/chromium/issues/list/)）。一个好的起点是过滤这些数据库中已修复的安全漏洞，以便查看实际的代码更改。
- en: '*Underhanded coding*, also known as *obfuscated coding*, is the fine art of
    using footguns and other trickery to write code that works differently from what
    a casual inspection of the code would indicate. Underhanded coding contests challenge
    programmers to show off their creativity in pushing programming languages to their
    limits. But the same techniques used to camouflage malicious code as benign can
    also, if stumbled upon inadvertently, become footguns. Check out these sites for
    a start, or try to craft your own: [http://www.underhanded-c.org/](http://www.underhanded-c.org/)
    and [https://underhandedcrypto.com/](https://underhandedcrypto.com/).'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*隐蔽编码*，也称为*混淆编码*，是一种使用“脚枪”和其他诡计编写代码的精湛艺术，这些代码的行为与代码表面上的检查结果不同。隐蔽编码比赛挑战程序员展示他们在推动编程语言极限方面的创造力。但同样的技术也可以用来掩盖恶意代码，甚至如果不小心碰到，可能会成为“脚枪”。查看这些网站作为开始，或者尝试自己创作：[http://www.underhanded-c.org/](http://www.underhanded-c.org/)
    和 [https://underhandedcrypto.com/](https://underhandedcrypto.com/)。'
- en: '**Chapter 9: Low-Level Coding Flaws**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**第9章：低级编码缺陷**'
- en: Why don’t languages that provide fixed-width integer types provide any mechanism
    to detect overflow? Would it help? If so, how would you extend the C language
    to take advantage of it?
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么提供定宽整数类型的语言没有提供任何检测溢出的机制？这样做有帮助吗？如果有，您将如何扩展 C 语言以利用这一点？
- en: Explore how analysis tools such as Valgrind detect issues with memory management
    ([https://valgrind.org/docs/manual/mc-manual.html](https://valgrind.org/docs/manual/mc-manual.html)).
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索像 Valgrind 这样的分析工具如何检测内存管理问题（[https://valgrind.org/docs/manual/mc-manual.html](https://valgrind.org/docs/manual/mc-manual.html)）。
- en: Write a little program that includes a few kinds of memory management vulnerabilities,
    such as both read and write buffer overflows. Use a tool like Valgrind to see
    if it detects the bugs. Try varying the code to make it harder for the tool to
    analyze, and see if you can sneak a bug past it.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写一个小程序，其中包含几种类型的内存管理漏洞，例如读写缓冲区溢出。使用类似 Valgrind 的工具查看它是否能检测到漏洞。尝试变更代码，使其更难被工具分析，并查看是否能让漏洞躲过工具的检测。
- en: '**Chapter 10: Untrusted Input**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章：不受信任的输入**'
- en: Identify the untrusted inputs on the main attack surface of the system you work
    on and see how thoroughly input validation is implemented and tested.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定你所从事系统的主要攻击面上的不受信任输入，并检查输入验证的实现和测试是否足够全面。
- en: If you find that untrusted inputs may represent vulnerabilities, implement input
    validation.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你发现不受信任的输入可能代表漏洞，请实现输入验证。
- en: Often, input validation for a system is repetitive. Look for opportunities to
    use common code or helper functions to handle it reliably. Consider ways of baking
    input validation into frameworks so it cannot be accidentally forgotten.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，系统的输入验证是重复的。寻找机会使用公共代码或辅助函数来可靠地处理它。考虑将输入验证嵌入到框架中，以防止它被意外遗漏。
- en: '**Chapter 11: Web Security**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**第 11 章：网页安全**'
- en: Write security requirements for a component that creates and authenticates a
    web session. Design and threat model it, and find a friend to security review
    it.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为创建和验证网页会话的组件编写安全要求。设计并进行威胁建模，找个朋友做安全审查。
- en: Build an implementation of your web session into a simple web app. Try to impersonate
    another session, or steal the necessary session state. Better yet, find a friend
    to “attack” your implementation.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将你的网页会话实现构建成一个简单的网页应用。尝试模拟另一个会话，或窃取必要的会话状态。更好的是，找一个朋友来“攻击”你的实现。
- en: Add a CSRF protection mechanism to the component and test it in your web app.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为组件添加 CSRF 保护机制，并在你的网页应用中进行测试。
- en: Explore ways of securing web sessions without the use of cookies as an experiment
    to understand the essence of the security challenge.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索不使用 cookies 来保护网页会话的方法，作为实验以理解安全挑战的本质。
- en: Find the source code (and ideally, a written design document) for a web framework
    and learn how it implements sessions, prevents XSS and CSRF vulnerabilities, and
    ensures that HTTPS secures all web interactions. By threat modeling or other means,
    can you find any vulnerabilities? If you want to try attacking it, put up your
    own test server to do that.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找一个网页框架的源代码（最好还有一个书面设计文档），了解它如何实现会话，防止 XSS 和 CSRF 漏洞，并确保 HTTPS 安全所有网页交互。通过威胁建模或其他方法，你能找到任何漏洞吗？如果想尝试攻击它，可以搭建一个自己的测试服务器进行测试。
- en: '**Chapter 12: Security Testing**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**第 12 章：安全测试**'
- en: In the codebase of your choice, locate some area where security is important
    and look for additional security test cases that should be added. Write and contribute
    new security test cases.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你选择的代码库中，找到一个安全性重要的区域，寻找应该添加的额外安全测试用例。编写并贡献新的安全测试用例。
- en: 'Consider this alternative example of a vulnerability in GotoFail that the security
    tests we wrote wouldn’t catch—in place of the extra `goto fail;`, instead insert
    the line:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑一下在 GotoFail 中漏洞的另一个示例，安全测试写得很不错，但它无法捕捉到这个漏洞——在额外的`goto fail;`语句中，实际上应该插入这一行：
- en: '[PRE0]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This sort of technique might be used to secretly include a vulnerability that
    requires a specific trigger as a kind of backdoor. Detecting this would require
    a test case with an expected hash whose first byte was 0x23\. Can you write tests
    to detect this sort of vulnerability without knowing the specifics?
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这种技术可能被用来偷偷地引入一个需要特定触发器的漏洞，作为一种后门。要检测这个漏洞，需要一个测试用例，其预期的哈希值的第一个字节是 0x23。你能写出测试用例来检测这种漏洞而不知道具体细节吗？
- en: Check out an old version of an open source software project with a known vulnerability.
    Run the test suite and ensure that all tests pass. Write a security regression
    test to confirm the vulnerability. Sync up to the next version that fixes the
    vulnerability, merging in your regression test. Your security regression test
    should now pass; if not, fix it. Then, check for additional, related vulnerabilities
    in the latest version.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看一个已知漏洞的开源软件项目的旧版本。运行测试套件并确保所有测试通过。编写一个安全回归测试以确认漏洞。同步到修复漏洞的下一个版本，合并回归测试。你的安全回归测试现在应该通过；如果没有，修复它。然后，在最新版本中检查是否存在其他相关漏洞。
- en: '**Chapter 13: Secure Development Best Practices**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**第 13 章：安全开发最佳实践**'
- en: Explore easy ways to make incremental code quality improvements, such as using
    lint or code scanning tools, as well as checking the test coverage of error and
    exception handling.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索一些简单的方法来逐步提高代码质量，例如使用 lint 或代码扫描工具，以及检查错误和异常处理的测试覆盖率。
- en: See how well the security aspects of your codebase are documented and make needed
    improvements.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看代码库中安全方面的文档化情况，并进行必要的改进。
- en: Whenever you do code reviews, put on your security hat for another pass when
    appropriate.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每当进行代码审查时，适时地再戴上安全帽，做一次额外的检查。
- en: Consider security when you do bug triage, or perhaps browse your bug database
    with security in mind to see if bugs that have security implications are being
    punted.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在进行缺陷分类时要考虑安全性，或者在浏览你的缺陷数据库时要牢记安全性，看看是否有涉及安全问题的缺陷被忽视了。
- en: '**Afterword**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**后记**'
- en: 'Look for opportunities to make improvements along the lines mentioned in the
    conclusion, even if this means taking small steps: broader security participation,
    earlier integration of a security perspective and strategy, reduction or management
    of complexity, improvement in transparency about security practice, and so on.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 寻找机会在结论中提到的方向上进行改进，即使这意味着采取小步骤：更广泛的安全参与、更早地融入安全视角和策略、减少或管理复杂性、提高关于安全实践的透明度等等。
- en: Identify a unique security challenge and design and develop a reusable component
    that addresses it.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别一个独特的安全挑战，并设计和开发一个可重用的组件来解决它。
- en: Pursue other ideas of your own to raise the security bar and spread the word.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 寻找其他自己的想法，提升安全标准并传播这一理念。
