- en: '4'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4'
- en: Color-Coded LED Watch by John Baichtal
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 由 John Baichtal 制作的彩色编码 LED 手表
- en: In this project, you’ll make a watch that displays the time using color.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将制作一款使用颜色显示时间的手表。
- en: '![image](../images/f0081-01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0081-01.jpg)'
- en: 'With digital clocks found on phones, microwaves, and even coffee makers, you
    might think making another is redundant. On the other hand, how often have you
    needed to know the time while on an important phone call, on a hike, or just nowhere
    near your kitchen? There is still a place for the portable watch, and to modernize
    it I’ve come up with a solution: a custom digital timepiece featuring an intriguingly
    cryptic display.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管手机、微波炉甚至咖啡机中都有数字时钟，你可能会认为再做一个时钟是多余的。另一方面，多久你在重要电话中、徒步旅行时，或者完全不在厨房附近时需要知道时间呢？便携式手表依然有它的市场，而为了让它更现代化，我想出了一个解决方案：一款定制的数字时钟，拥有一个引人入胜、神秘的显示屏。
- en: With this project you’ll make your own watch using a pair of eight-dot NeoPixel
    LED strips to convey the time with *colors*. It may not be immediately clear how
    you’d tell the time with colors, but stick around and you’ll find out. The brains
    for our watch will be an Arduino, which simplifies certain parts of displaying
    the time but also presents special challenges.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将使用一对八点 NeoPixel LED 条来通过*颜色*展示时间。虽然一开始可能不清楚如何通过颜色来判断时间，但继续跟进，你会发现其中的窍门。我们手表的大脑将是
    Arduino，它简化了部分时间显示的过程，但也带来了特别的挑战。
- en: '**GET THE PARTS**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**获取部件**'
- en: You’ll need the following parts to build this project.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要以下部件来构建这个项目。
- en: '**NOTE**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*See “[Getting Started with the Arduino and the Arduino IDE](intro.xhtml#lev17)”
    on [page 15](intro.xhtml#page_15) for setup instructions.*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*请参见 “[使用 Arduino 和 Arduino IDE 入门](intro.xhtml#lev17)”（第 15 页）中的设置说明。*'
- en: '**Components**'
  id: totrans-10
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**组件**'
- en: Arduino Pro Mini (SparkFun P/N 11113; extra headers are available as P/N 00116.)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arduino Pro Mini（SparkFun P/N 11113；附加引脚可以通过 P/N 00116 获取。）
- en: FTDI Basic Breakout (SparkFun P/N 09716; this is a programming dongle necessary
    to program the Arduino Pro Mini.)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FTDI 基本扩展板（SparkFun P/N 09716；这是一个必要的编程器，用于编程 Arduino Pro Mini。）
- en: 2 NeoPixel strips (Adafruit P/N 1426 or SparkFun P/N 12661; this is an eight-LED
    RGB strip.)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2 根 NeoPixel 条（Adafruit P/N 1426 或 SparkFun P/N 12661；这是一条包含八个 LED 的 RGB 条。）
- en: DS1307 RTC Breakout Board (SparkFun P/N 12708; other options are Adafruit P/N
    255 or Adafruit P/N 3013.)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DS1307 RTC 扩展板（SparkFun P/N 12708；其他选择包括 Adafruit P/N 255 或 Adafruit P/N 3013。）
- en: 470 Ω resistor (SparkFun P/N 10969 is a good multipack)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 470 Ω 电阻（SparkFun P/N 10969 是一个不错的多件装）
- en: Enclosure (My enclosure was 85 mm × 55 mm on its largest side and 30 mm deep;
    find it by searching online for its P/N, WCAH2855\. A similar part is the classic
    3 × 2 × 1 project enclosure from RadioShack, P/N 2701801.)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外壳（我的外壳的最大边长为 85 mm × 55 mm，深度为 30 mm；可以通过在线搜索其 P/N，WCAH2855 来找到它。一个类似的部件是 RadioShack
    的经典 3 × 2 × 1 项目外壳，P/N 2701801。）
- en: Watch band (Any generic nylon or rubber watch band should do the trick. I used
    a knockoff iWatch band from Amazon.)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手表带（任何普通的尼龙或橡胶手表带都可以。我使用了来自亚马逊的山寨 iWatch 手表带。）
- en: 9 V battery pack and battery (A standard 9 V connector with wire leads; I’m
    using Jameco P/N 109154\. You can also get the SparkFun P/N 00091 snap connector
    and cut off the plug.)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9 V 电池包和电池（一个标准的9 V连接器带导线；我使用的是 Jameco P/N 109154。你也可以购买 SparkFun P/N 00091
    的快拆连接器，并剪掉插头。）
- en: Button (I used a panel-mount momentary button from SparkFun, P/N 11992\. The
    smaller, the better. You can swap out the button for a switch if you want to keep
    the display going until you turn it off.)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按钮（我使用了 SparkFun 的面板安装瞬时按钮，P/N 11992。按钮越小越好。如果你希望显示器一直显示，直到你关闭它，可以将按钮替换为开关。）
- en: Screws (I used M2 × 10 mm screws and nuts from HobbyKing, P/N HA0506.)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 螺丝（我使用了 HobbyKing 的 M2 × 10 mm 螺丝和螺母，P/N HA0506。）
- en: The small Arduino we use here offers the same Arduino experience without all
    the bells and whistles so that it will fit in a small enclosure. For instance,
    you can’t program it via USB, and you’ll need a FTDI Breakout (such as SparkFun
    P/N 09716) to program it. Before you begin building this project, see “[Arduino
    Boards Without a Built-in USB Connection](intro.xhtml#introsb1)” on [page 21](intro.xhtml#page_21)
    for information about how to set up the Arduino Pro Mini and FTDI.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的这款小型 Arduino 提供了与其他 Arduino 相同的体验，但去掉了所有花哨的功能，以便能适配小型外壳。例如，你不能通过 USB 编程它，你需要一个
    FTDI 扩展板（例如 SparkFun P/N 09716）来编程它。在开始构建这个项目之前，请参见 “[没有内建 USB 连接的 Arduino 板](intro.xhtml#introsb1)”（第
    21 页）了解如何设置 Arduino Pro Mini 和 FTDI。
- en: When choosing an enclosure, keep in mind that the LED strips and the 9 V battery
    are the main limitations on dimensions. You may also want a clip to keep the battery
    from rolling around inside the enclosure box, though mine was so densely packed
    nothing could move around.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择外壳时，记住LED条和9V电池是尺寸的主要限制。你可能还需要一个夹子来防止电池在外壳盒内滚动，尽管我的外壳已经密集地塞满了，什么都无法移动。
- en: '**Tools**'
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**工具**'
- en: Soldering iron and solder
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 烙铁和焊锡
- en: Dremel or similar rotary tool, with cutting and drilling implements
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dremel或类似的旋转工具，带切割和钻孔工具
- en: (Optional) Spray paint
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （可选）喷漆
- en: '**INTRODUCING THE REAL-TIME CLOCK MODULE**'
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**介绍实时时钟模块**'
- en: It turns out that keeping accurate time isn’t something Arduinos do well. They
    can keep track of time from second to second fairly well, thanks to the timing
    crystal built into the board, but they must use their own internal memory to retain
    this information, so when the memory fills up your clock stops working. Another
    problem arises when the Arduino loses power—you lose the time and have to reset
    it when you start the Arduino up again. The solution to these challenges lies
    in an add-on board called a *Real-Time Clock (RTC)* module.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 事实证明，保持准确的时间并不是Arduino擅长的事情。它们能够从秒到秒地很好地跟踪时间，得益于板上内置的时钟晶体，但它们必须使用自己的内部存储器来保留这些信息，因此当内存满时，时钟就会停止工作。另一个问题出现在Arduino失去电源时——你会失去时间，并且当你再次启动Arduino时需要重置时间。这些挑战的解决方案在于一个附加板，称为*实时时钟（RTC）*模块。
- en: The RTC consists of a dedicated timekeeping chip and a battery backup, so it
    can retain the time even when the main project powers down. It keeps track of
    the time so your Arduino doesn’t have to.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: RTC由一个专用的时间保持芯片和一个电池备份组成，因此即使主项目断电，它也能保留时间。它负责保持时间，因此你的Arduino就不必做这个工作。
- en: '[Figure 4-1](ch04.xhtml#ch04fig1) shows the DS1307 RTC module sold by Adafruit
    Industries. It accurately computes calendars up to the year 2100 with leap year
    factored in, and communicates with the Arduino through a two-wire interface.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 4-1](ch04.xhtml#ch04fig1)显示了由Adafruit Industries销售的DS1307 RTC模块。它可以准确计算到2100年的日历，并考虑闰年的因素，通过两线接口与Arduino进行通信。'
- en: '![image](../images/f0084-01.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0084-01.jpg)'
- en: '**FIGURE 4-1:** Adafruit’s DS1307 breakout board helps your Arduino keep time.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 4-1：** Adafruit的DS1307扩展板帮助你的Arduino保持时间。'
- en: '**HOW IT WORKS: COLOR-CODING THE LEDS**'
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理：LED的颜色编码**'
- en: With only a small watch face to utilize, we are limited to just two eight-LED
    strips to show the time. I devised a system—shown in [Figure 4-2](ch04.xhtml#ch04fig2)—that
    uses the color of the LEDs to convey the information. I selected five colors to
    stand in for numbers, listed in [Table 4-1](ch04.xhtml#ch04tab1).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 由于只能使用一个小的时钟面，我们仅限于使用两个八个LED的条形灯来显示时间。我设计了一个系统——如[图 4-2](ch04.xhtml#ch04fig2)所示——它通过LED的颜色来传递信息。我选择了五种颜色来代表数字，如[表
    4-1](ch04.xhtml#ch04tab1)所列。
- en: '**TABLE 4-1:** Number codes for the colors'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 4-1：** 颜色的编号代码'
- en: '| **COLOR** | **VALUE** |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| **颜色** | **数值** |'
- en: '| --- | --- |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Black | 0 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 黑色 | 0 |'
- en: '| Blue | 1 |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 蓝色 | 1 |'
- en: '| Red | 2 |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 红色 | 2 |'
- en: '| Yellow | 4 |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 黄色 | 4 |'
- en: '| Green | 5 |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 绿色 | 5 |'
- en: The top LED strip will indicate the hour, and the bottom strip the minutes.
    As mentioned, each strip will have eight LEDs. Each LED’s position in that strip
    will be the *multiplier* that you apply to the number associated with the color
    in [Table 4-1](ch04.xhtml#ch04tab1). For example, the seventh LED lit up yellow
    (4) would be 4 × 7, so would mean 28 minutes if it’s lit in the bottom strip.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部的LED条将指示小时，底部的LED条将指示分钟。如前所述，每条LED条将有八个LED。每个LED在条中的位置将是你应用于颜色在[表 4-1](ch04.xhtml#ch04tab1)中所关联数字的*倍数*。例如，第七个点亮的黄色LED（4）将是4
    × 7，所以如果它在底部条亮起，将表示28分钟。
- en: You could use more or fewer colors, but I decided to use only four (plus black)
    for simplicity’s sake. I wanted my clock to use the same colors manufacturers
    use to color-code resistors—in their world, 0 is black, 1 is brown, 2 is red,
    and so on. However, brown doesn’t show up well as visible light, so I substituted
    blue. Ultimately it doesn’t matter what colors you choose for each time. If it
    makes sense to you, go for it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用更多或更少的颜色，但为了简便，我决定只使用四种颜色（加上黑色）。我希望我的时钟使用与制造商用于电阻器颜色编码相同的颜色——在他们的世界里，0是黑色，1是棕色，2是红色，依此类推。然而，棕色作为可见光并不容易显示出来，所以我用蓝色代替了它。最终，选择每个时间点的颜色并不重要。如果它对你有意义，就可以使用它。
- en: 'Rather than use more colors to display larger times, we’ll light up a *second*
    LED on the bottom strip, and you can add the two bottom-strip numbers in your
    head to arrive at the time. Remember, the top strip will indicate the hour, and
    the bottom strip the minutes. Say it’s 7:56 AM, or 756\. To indicate this time,
    I could light up a blue LED in position #7 on the top bar, and yellow #4 (16)
    and green #8 (40) on the bottom bar. [Figure 4-2](ch04.xhtml#ch04fig2) shows how
    it should look. Refer to [Table 4-1](ch04.xhtml#ch04tab1) if you’re not sure how
    I arrived at these numbers. This will be a good test of your mental arithmetic
    skills.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免使用更多的颜色来显示较大的时间，我们将在底部条形灯上点亮*第二个* LED，你可以将底部条形灯的两个数字加起来，计算出时间。记住，顶部条形灯表示小时，底部条形灯表示分钟。假设时间是上午
    7:56，或者 756。为了表示这个时间，我可以在顶部条形灯的第 7 位点亮一个蓝色 LED，在底部条形灯的第 4 位（16）点亮一个黄色 LED，在第 8
    位（40）点亮一个绿色 LED。[图 4-2](ch04.xhtml#ch04fig2)展示了应该是什么样子的。如果你不确定我是如何得出这些数字的，请参考[表
    4-1](ch04.xhtml#ch04tab1)。这将是一个很好的考验你心算能力的机会。
- en: '![image](../images/f0085-01.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0085-01.jpg)'
- en: '**FIGURE 4-2:** The color and position of the LEDs indicate the time. This
    simulated display shows 7:56 AM.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 4-2：** LED 的颜色和位置表示时间。这个模拟显示屏显示的是上午 7:56。'
- en: '**BUILD IT**'
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**制作它**'
- en: The watch consists of the electronics and the enclosure that holds them. We’ll
    work on the two parts simultaneously.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这款手表由电子元件和它们的外壳组成。我们将同时进行这两部分的工作。
- en: '**NOTE**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*If you need instructions on soldering, see the appendix.*'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你需要焊接的说明，请参阅附录。*'
- en: '**Solder the NeoPixel strips.** Solder a couple of short wires connecting the
    two NeoPixel strips in series, as seen in [Figure 4-3](ch04.xhtml#ch04fig3). Connect
    the pin marked Dout, or Data out, to the pin marked Din, or Data in, shown with
    an orange wire in [Figure 4-3](ch04.xhtml#ch04fig3). Connect the remaining two
    pins, 4-7VDC (red) and GND (gray), to their mates on the other strip. Note that
    there are two GND pins and either one can be used.'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**焊接 NeoPixel 条形灯。** 焊接两根短导线，将两个 NeoPixel 条形灯串联起来，如[图 4-3](ch04.xhtml#ch04fig3)所示。将标记为
    Dout（数据输出）的引脚连接到标记为 Din（数据输入）的引脚，这在[图 4-3](ch04.xhtml#ch04fig3)中用橙色导线表示。将剩余的两个引脚，4-7VDC（红色）和
    GND（灰色），分别连接到另一个条形灯的对应引脚。注意，有两个 GND 引脚，任意一个都可以使用。'
- en: '![image](../images/f0085-02.jpg)'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0085-02.jpg)'
- en: '**FIGURE 4-3:** Solder the LED strips together.'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 4-3：** 将 LED 条形灯焊接在一起。'
- en: '**Drill the enclosure.** Once you have the LED strips wired up, place them
    on top of the enclosure and mark their mounting holes with a permanent marker
    for drilling; you should also indicate where the wires will enter the enclosure.
    While you’re at it, mark where you want the power button to go.'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**钻孔外壳。** 一旦你将 LED 条形灯接好，将它们放在外壳顶部，并用记号笔标记它们的安装孔位，以便钻孔；你还应该标记出导线将进入外壳的位置。与此同时，标记出你希望放置电源按钮的位置。'
- en: Once you have the enclosure marked, drill the holes. You may also want to consider
    how you intend to wear the watch. If you’re using a wrist strap, you’ll need to
    figure out how to attach the strap to the enclosure. [Figure 4-4](ch04.xhtml#ch04fig4)
    shows my enclosure with the holes drilled.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦外壳标记好，就可以钻孔了。你也许还想考虑如何佩戴这款手表。如果你打算使用腕带，你需要弄清楚如何将腕带固定到外壳上。[图 4-4](ch04.xhtml#ch04fig4)展示了我已经钻好孔的外壳。
- en: '![image](../images/f0086-01.jpg)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0086-01.jpg)'
- en: '**FIGURE 4-4:** Drill holes into the enclosure.'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 4-4：** 在外壳上钻孔。'
- en: '**Paint the enclosure.** You may want to paint the enclosure if the black finish
    is getting you down. [Figure 4-5](ch04.xhtml#ch04fig5) shows my enclosure being
    painted. I’m going for a military-esque olive drab.'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**涂装外壳。** 如果黑色涂层让你觉得不满意，可以考虑给外壳涂上一层油漆。[图 4-5](ch04.xhtml#ch04fig5)展示了我正在给外壳上色。我选择了类似军事风格的橄榄绿色。'
- en: '![image](../images/f0086-02.jpg)'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0086-02.jpg)'
- en: '**FIGURE 4-5:** Customize the plain black box with a splash of color.'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 4-5：** 用一抹色彩为普通黑色盒子进行个性化装饰。'
- en: '**Wire the RTC to the Arduino.** While the paint is drying, begin soldering
    the guts. Start with the RTC module, and wire it up to the Arduino Pro Mini; use
    [Figure 4-6](ch04.xhtml#ch04fig6) as a reference. Connect 5V on the RTC to the
    Arduino’s VCC pin (shown as a red wire in [Figure 4-6](ch04.xhtml#ch04fig6)) and
    the GND to the Arduino’s GND pin, shown as a black wire. Connect SCL, the serial
    clock shown as a green wire, to pin A5 of the Arduino, and connect SDA, in yellow,
    to pin A4.'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将 RTC 连接到 Arduino。** 在油漆干燥时，开始焊接内部组件。首先连接 RTC 模块，将其接到 Arduino Pro Mini 上；参考[图
    4-6](ch04.xhtml#ch04fig6)。将 RTC 上的 5V 接到 Arduino 的 VCC 引脚（在[图 4-6](ch04.xhtml#ch04fig6)中用红色导线表示），将
    GND 接到 Arduino 的 GND 引脚（用黑色导线表示）。将 SCL（串行时钟，用绿色导线表示）连接到 Arduino 的 A5 引脚，将 SDA（用黄色导线表示）连接到
    A4 引脚。'
- en: '![image](../images/f0087-01.jpg)'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0087-01.jpg)'
- en: '**FIGURE 4-6:** Connect the RTC to the Arduino.'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图4-6：** 将RTC连接到Arduino。'
- en: '**NOTE**'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*The FTDI board is not shown in the wiring diagrams, but you should have already
    attached it to your Pro Mini. If you haven’t done that yet, see “[Arduino Boards
    Without a Built-in USB Connection](intro.xhtml#introsb1)” on [page 21](intro.xhtml#page_21).*'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*FTDI板未在接线图中显示，但你应该已经将它连接到你的Pro Mini。如果你还没有这么做，请参见[第21页](intro.xhtml#page_21)的“[没有内置USB连接的Arduino板](intro.xhtml#introsb1)”*。'
- en: '**Attach the LED strips to the enclosure.** Once the paint is dry, you can
    attach the LED strips to the enclosure using M2 screws. Note that the specific
    orientation of the strips with regards to your viewing angle affects whether you
    get an accurate reading. *Both LED strips must be oriented the same way*. In the
    photo of my prototype on page 81, you can see that I had one strip inverted from
    the other. However, this proved to be a problem and I fixed it in the final design.
    Make sure you orient the strips the way they’re shown in the wiring diagrams.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将LED条安装到外壳上。** 涂料干燥后，你可以使用M2螺丝将LED条安装到外壳上。注意，LED条的具体方向会影响你是否能准确读取数据。*两条LED条必须朝相同的方向排列*。在第81页我的原型照片中，你可以看到我有一条LED条与另一条方向相反。不过，这证明是一个问题，我在最终设计中修正了这个问题。确保按照接线图中显示的方向安装LED条。'
- en: '**Connect the LED strips to the Arduino.** Attach the strips’ power, GND, and
    data wires to the Arduino as shown in [Figure 4-7](ch04.xhtml#ch04fig7).'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**连接LED条到Arduino。** 将LED条的电源、接地和数据线按[图4-7](ch04.xhtml#ch04fig7)所示连接到Arduino上。'
- en: '![image](../images/f0087-02.jpg)'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0087-02.jpg)'
- en: '**FIGURE 4-7:** Attach the NeoPixel strips to the Arduino.'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图4-7：** 将NeoPixel LED条连接到Arduino。'
- en: Data, shown as a yellow wire, connects to pin 6 on the Arduino with a 470 Ω
    resistor, which protects the strips from power spikes. Power (red) and GND (black)
    connect to +5V and GND, respectively.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据线（以黄色电线表示）连接到Arduino的6号引脚，并通过一个470 Ω的电阻保护LED条免受电力波动的影响。电源（红色）和接地（黑色）分别连接到+5V和接地。
- en: '**Install the button or switch.** Wire up the button and secure it to the enclosure
    using the panel-mount hardware that came with it. Connect one lead of the button
    to the red wire of the battery pack, shown in [Figure 4-8](ch04.xhtml#ch04fig8).
    Connect the second lead of the button, shown in purple, to the RAW pin of the
    Arduino. The GND wire of the battery pack connects to the GND of the Arduino.
    You can also swap in a switch, which will require you to manually turn on and
    off the display. This does not require a modification to the code—the LEDs update
    once a second as long as they and the rest of the project are powered.'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**安装按钮或开关。** 将按钮接线并用随附的面板安装硬件将其固定在外壳上。将按钮的一根引脚连接到电池包的红线，如[图4-8](ch04.xhtml#ch04fig8)所示。将按钮的另一根引脚（以紫色表示）连接到Arduino的RAW引脚。电池包的GND线连接到Arduino的GND引脚。你也可以替换为一个开关，这样你需要手动打开和关闭显示器。代码无需修改——只要LED和项目的其他部分有电，LED每秒更新一次。'
- en: '![image](../images/f0088-01.jpg)'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0088-01.jpg)'
- en: '**FIGURE 4-8:** Install the button and solder its leads to the Arduino.'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图4-8：** 安装按钮并将其引脚焊接到Arduino上。'
- en: '**Attach the watch strap.** Attach the strap. I used my Dremel to mill down
    a slot between the enclosure mouth and the lid, allowing me to “trap” the strap
    once the lid was secured. [Figure 4-9](ch04.xhtml#ch04fig9) shows the band’s installation.'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**安装手表表带。** 安装表带。我使用Dremel工具在外壳口和盖子之间铣出一个槽，能够在盖子固定后“夹住”表带。[图4-9](ch04.xhtml#ch04fig9)展示了表带的安装情况。'
- en: '![image](../images/f0089-01.jpg)'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f0089-01.jpg)'
- en: '**FIGURE 4-9:** Strap it!'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图4-9：** 系上表带！'
- en: '**CODE IT**'
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**编写代码**'
- en: Let’s examine the Arduino code for this project. You’ll find this listed as
    *led_watch.ino* in the book’s resources at *[https://nostarch.com/LEDHandbook/](https://nostarch.com/LEDHandbook/)*.
    [Listing 4-1](ch04.xhtml#ch04list1) sets up the script.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看这个项目的Arduino代码。你可以在本书的资源中找到名为*led_watch.ino*的文件，网址为*[https://nostarch.com/LEDHandbook/](https://nostarch.com/LEDHandbook/)*。清单4-1（[Listing
    4-1](ch04.xhtml#ch04list1)）中设置了脚本。
- en: '**LISTING 4-1:** Libraries and declarations'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单4-1：** 库文件和声明'
- en: '[PRE0]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We start with library declarations ➊. Then we initialize the RTC ➋ and the NeoPixel
    strips ➌. The button/switch needs no declaration, as it merely connects power
    to the Arduino.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从库声明开始 ➊。然后初始化RTC ➋ 和NeoPixel LED条 ➌。按钮/开关不需要声明，因为它只是将电源连接到Arduino。
- en: If you haven’t yet installed the libraries, you’ll have to do that before the
    code will run. You can find information on downloading and installing the NeoPixel
    and RTC libraries from their respective product pages at *[https://www.adafruit.com/](https://www.adafruit.com/)*.
    You should have the Wire library installed already, as it comes with the Arduino
    software.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有安装相关库，那么在代码运行之前，你需要先安装它们。你可以从各自的产品页面下载并安装NeoPixel和RTC库，相关信息可以参考*[https://www.adafruit.com/](https://www.adafruit.com/)*。你应该已经安装了Wire库，因为它包含在Arduino软件中。
- en: Next let’s delve into the heart of the code with [Listing 4-2](ch04.xhtml#ch04list2),
    which initializes the arrays that keep track of which colors correspond to the
    different times.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们深入探讨代码的核心部分，参见[清单 4-2](ch04.xhtml#ch04list2)，它初始化了跟踪不同时间对应颜色的数组。
- en: '**LISTING 4-2:** Initializing the arrays'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单 4-2：** 初始化数组'
- en: '[PRE1]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There are 60 entries—one for each minute in an hour—but for the sake of space,
    I’ve included only three here as examples. The watch displays the hour using the
    same array, so 7 AM has the same color coding as 7 minutes after the hour. Partly
    for whimsy and partly for debugging purposes, I made 0 all red. This way you can
    see when the hour strikes, and it also tells you the code works if you happen
    to be working on the project around the start of the hour.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 一共有60个条目——每分钟一个——但为了节省空间，这里只列出了三个作为示例。手表通过相同的数组来显示小时，因此7点的颜色编码与7点整后的分钟相同。部分出于调皮，部分为了调试，我让0点的颜色全部是红色。这样，你可以看到每小时的开始，同时如果你恰好在整点附近调试代码，这也能确认代码是否正常工作。
- en: '[Listing 4-3](ch04.xhtml#ch04list3) defines the `setup()` function.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 4-3](ch04.xhtml#ch04list3)定义了`setup()`函数。'
- en: '**LISTING 4-3:** The `setup()` function'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单 4-3：** `setup()`函数'
- en: '[PRE2]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This block of code begins Wire ➊, a library for governing serial communications,
    and activates the RTC ➋. If the RTC chip doesn’t respond, the Arduino sends an
    error message ➌ to the serial monitor. The script then adjusts the RTC’s time
    to match the date and time when the sketch was compiled ➍.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这一段代码首先引入Wire ➊库，用于管理串行通信，并激活RTC ➋。如果RTC芯片没有响应，Arduino会将错误信息➌发送到串口监视器。接着，脚本会调整RTC的时间，使其与编译程序时的日期和时间匹配
    ➍。
- en: '[Listing 4-4](ch04.xhtml#ch04list4) consists of the `loop()` function, which
    contains the code that controls the activation of the LED strips.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 4-4](ch04.xhtml#ch04list4)包含`loop()`函数，其中包含控制LED条激活的代码。'
- en: '**LISTING 4-4:** The activation loop'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单 4-4：** 激活循环'
- en: '[PRE3]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The sketch launches the instant you power up the Arduino (by pressing the button
    or hitting the switch). The loop reads the time from the RTC and then lights up
    the LEDs with whatever color is appropriate, displaying them as long as the board
    is powered. Each LED has a number (0–7 for hours and 8–15 for minutes), and receives
    color data from the array at the beginning of the sketch. If you use a switch
    instead of a button, it will keep the LEDs lit continuously, and the time will
    update every second.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你开启Arduino电源（通过按下按钮或切换开关），程序就会启动。循环会从RTC读取时间，然后根据适当的颜色点亮LED，只要电路板通电，LED会持续显示。每个LED都有一个编号（0–7代表小时，8–15代表分钟），并从程序开头的数组中接收颜色数据。如果使用开关代替按钮，LED会持续点亮，时间每秒更新一次。
- en: '**SUMMARY**'
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: Once you complete the physical build and upload the code, your watch is done!
    It may not be a precision instrument, but it will certainly start a conversation
    or two.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 完成物理搭建并上传代码后，你的手表就完成了！它可能不是一个精密的仪器，但肯定会引发几次对话。
