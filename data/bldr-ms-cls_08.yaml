- en: Chapter 8. UV Unwrapping
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第8章 UV 展开
- en: 'In this chapter, we’ll UV unwrap the models created so far (where necessary).
    *UV unwrapping* describes the process of creating a set of 2D coordinates for
    the faces of a model, which we can then use to apply textures to the model. Creating
    UV coordinates is akin to cutting up the surface of your model (along lines called
    *seams*) and spreading it out flat (see [Figure 8-1](ch08.html#uv_unwrapping_is_akin_to_taking_a_3d_obj
    "Figure 8-1. UV unwrapping is akin to taking a 3D object and spreading it out
    flat on a 2D surface. This results in your mesh having a set of 2D coordinates
    that can then be used to map a 2D image to your object.")). As you know, a mesh
    in Blender is made up of vertices joined together to form edges and faces. Each
    vertex in a model has its own set of spatial coordinates in the three spatial
    dimensions of the 3D Viewport: *x*, *y*, and *z*. These coordinates determine
    its position in 3D space. Similarly, UV coordinates are a separate set of 2D coordinates
    for the points of a model that allow you to map a 2D image to the surface of your
    mesh.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将对目前为止创建的模型进行 UV 展开（如果需要的话）。*UV 展开*描述了为模型的面创建一组二维坐标的过程，随后我们可以用它来为模型应用纹理。创建
    UV 坐标类似于沿着称为*缝隙*的线条切开模型表面，并将其展开成平面（见 [图 8-1](ch08.html#uv_unwrapping_is_akin_to_taking_a_3d_obj
    "图 8-1. UV 展开类似于将 3D 物体展开成 2D 平面。这样，您的网格就会拥有一组二维坐标，然后可以用来将二维图像映射到您的对象上。")）。如您所知，Blender
    中的网格由连接在一起的顶点构成，这些顶点形成了边和面。模型中的每个顶点都有自己在三维视口中的空间坐标：*x*、*y* 和 *z*。这些坐标决定了顶点在三维空间中的位置。类似地，UV
    坐标是为模型的点创建的另一组二维坐标，可以让您将二维图像映射到网格的表面上。
- en: Other Kinds of Texture Coordinates
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他类型的纹理坐标
- en: UV coordinates are only one way of mapping an image to an object in Blender.
    Blender also has a number of procedural coordinates that you can use to assign
    textures by applying some kind of projection to your mesh. These have the advantage
    of being automatic and are useful for a wide range of applications, but they lack
    the precision of UV unwrapping, which allows you to specify exactly which points
    on the mesh correspond to the parts of an image.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: UV 坐标只是将图像映射到 Blender 中对象的一种方式。Blender 还拥有多种程序化坐标，您可以通过对网格应用某种投影来分配纹理。这些坐标的优点是自动生成，适用于广泛的应用，但它们缺乏
    UV 展开所具有的精确度，后者可以让您精确指定网格上的哪些点与图像的哪些部分对应。
- en: '![UV unwrapping is akin to taking a 3D object and spreading it out flat on
    a 2D surface. This results in your mesh having a set of 2D coordinates that can
    then be used to map a 2D image to your object.](httpatomoreillycomsourcenostarchimages1538564.png.jpg)Figure 8-1. UV
    unwrapping is akin to taking a 3D object and spreading it out flat on a 2D surface.
    This results in your mesh having a set of 2D coordinates that can then be used
    to map a 2D image to your object.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '![UV 展开类似于将 3D 物体展开成 2D 平面。这样，您的网格就会拥有一组二维坐标，然后可以用来将二维图像映射到您的对象上。](httpatomoreillycomsourcenostarchimages1538564.png.jpg)图
    8-1. UV 展开类似于将 3D 物体展开成 2D 平面。这样，您的网格就会拥有一组二维坐标，然后可以用来将二维图像映射到您的对象上。'
- en: Editing UV Coordinates
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑 UV 坐标
- en: To edit UV coordinates, we use Blender’s UV Image editor along with the 3D Viewport.
    In general, when working with UV coordinates, it’s useful to switch to Blender’s
    UV editing layout using the drop-down menu in the Info editor header (see [Figure 8-2](ch08.html#slightly_modified_uv_image_editor_layout
    "Figure 8-2. A slightly modified UV Image editor layout. You can save this as
    the default layout by setting up your windows like this in a new .blend file and
    choosing Save User Settings from the File menu.")). This brings up the UV Image
    editor shown on the left and the 3D Viewport on the right.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要编辑 UV 坐标，我们使用 Blender 的 UV 图像编辑器和 3D 视口。通常，在处理 UV 坐标时，切换到 Blender 的 UV 编辑布局会很有帮助，您可以通过在信息编辑器头部的下拉菜单中进行切换（见
    [图 8-2](ch08.html#slightly_modified_uv_image_editor_layout "图 8-2. 稍微修改过的 UV 图像编辑器布局。您可以通过在新的
    .blend 文件中像这样设置窗口并选择从文件菜单中保存用户设置，将其保存为默认布局。")）。这样就会弹出左侧的 UV 图像编辑器和右侧的 3D 视口。
- en: It’s helpful to add a Properties editor between the UV Image editor and the
    3D Viewport by rightclicking the border between them and choosing Split Area.
    When you set the new area as a Properties editor, you can access the Object Data
    tab for switching between different UV coordinate sets and the Render tab for
    accessing Texture Baking controls.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 通过右键单击它们之间的边界并选择“拆分区域”，在 UV 图像编辑器和 3D 视图之间添加一个属性编辑器是很有帮助的。设置新的区域为属性编辑器后，您可以访问对象数据标签，用于在不同的
    UV 坐标集之间切换，以及渲染标签，用于访问纹理烘焙控制。
- en: The UV Grid
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: UV 网格
- en: 'We’ll use the UV Grid in the Image editor to determine which portion of a texture
    or image is applied to part of a mesh. The grid has coordinates that run from
    0 to 1, with the origin at the bottom left. By default, these coordinates are
    multiplied by the size of the image you select in order to give a number in pixels.
    If you have no image selected, Blender will assume the grid is 256 pixels across
    and give coordinates on that scale. You can turn this feature off by pressing
    **N** to bring up the Properties region of the UV Image editor and checking **Normalized**
    in the Display panel, which will then give UV coordinates between 0 and 1\. The
    UV Image editor follows the same conventions as the 3D Viewport: You can move,
    rotate, and scale any selected vertices using the same keys as in the 3D Viewport,
    and you can use the **X** and **Y** keys to constrain operators to the horizontal
    and vertical axes of the UV grid. By default, a mesh will not have any UV coordinates,
    so there will be nothing to select until you unwrap it.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在图像编辑器中使用 UV 网格来确定纹理或图像的哪部分应用到网格的某一部分。该网格的坐标范围从 0 到 1，原点位于左下角。默认情况下，这些坐标会乘以您选择的图像的大小，从而给出一个以像素为单位的数值。如果您没有选择图像，Blender
    会假设网格的宽度为 256 像素，并提供基于此比例的坐标。您可以通过按 **N** 来调出 UV 图像编辑器的属性区域，并在显示面板中勾选 **标准化**，此时将返回
    0 到 1 之间的 UV 坐标。UV 图像编辑器遵循与 3D 视图相同的规则：您可以使用与 3D 视图相同的快捷键移动、旋转和缩放任何选定的顶点，并且可以使用
    **X** 和 **Y** 键将操作限制在 UV 网格的水平和垂直轴上。默认情况下，网格不会有任何 UV 坐标，因此在展开之前没有任何可以选择的内容。
- en: '![A slightly modified UV Image editor layout. You can save this as the default
    layout by setting up your windows like this in a new .blend file and choosing
    Save User Settings from the File menu.](httpatomoreillycomsourcenostarchimages1538566.png.jpg)Figure 8-2. A
    slightly modified UV Image editor layout. You can save this as the default layout
    by setting up your windows like this in a new .blend file and choosing Save User
    Settings from the File menu.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![稍作修改的 UV 图像编辑器布局。您可以通过在新 .blend 文件中设置窗口布局并从文件菜单选择“保存用户设置”来将其保存为默认布局。](httpatomoreillycomsourcenostarchimages1538566.png.jpg)图
    8-2. 稍作修改的 UV 图像编辑器布局。您可以通过在新 .blend 文件中设置窗口布局并从文件菜单选择“保存用户设置”来将其保存为默认布局。'
- en: 'When you map an image to a mesh using its UV coordinates, the image is scaled
    to fill the UV grid, and each point of the mesh is then mapped to the corresponding
    point in the image. Beyond the edges of the UV grid, the image is repeated or
    extended so that UV coordinates outside the grid are mapped to part of the image
    as well. This allows you to repeat a *tileable texture* (one that can be repeated
    side by side and top to bottom without any discontinuity) over the surface of
    your mesh by unwrapping the mesh to be much bigger than the UV grid. Conversely,
    you can unwrap a whole mesh (or even multiple meshes) so that all the UV coordinates
    fit within the UV grid and then use a single (nontiling) image to uniquely texture
    each part of the object’s surface. Both options are shown in [Figure 8-3](ch08.html#two_options_for_uv_unwrappingdot_top_pac
    "Figure 8-3. Two options for UV unwrapping. Top: Packing all of an object’s faces
    into the UV grid to texture each part uniquely. Bottom: Tiling an image over an
    object’s surface.").'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用 UV 坐标将图像映射到网格时，图像会按比例缩放以填充 UV 网格，然后网格的每个点都会映射到图像中相应的点。超出 UV 网格边缘的图像会被重复或扩展，以便超出网格的
    UV 坐标也能映射到图像的某部分。这允许你通过展开网格，使其比 UV 网格大得多，从而在网格表面重复一个*可平铺纹理*（可以无缝地横向和纵向重复的纹理）。反之，你也可以展开整个网格（甚至多个网格），使所有
    UV 坐标都适合于 UV 网格内，然后使用一个单一的（非平铺）图像来唯一地为物体表面上的每一部分添加纹理。两种选项在[图 8-3](ch08.html#two_options_for_uv_unwrappingdot_top_pac
    "图 8-3. UV 展开选项。上：将物体的所有面包装到 UV 网格中，独立纹理化每个部分。下：将图像平铺到物体表面。")中展示。
- en: '![Two options for UV unwrapping. Top: Packing all of an object’s faces into
    the UV grid to texture each part uniquely. Bottom: Tiling an image over an object’s
    surface.](httpatomoreillycomsourcenostarchimages1538568.png.jpg)Figure 8-3. Two
    options for UV unwrapping. Top: Packing all of an object’s faces into the UV grid
    to texture each part uniquely. Bottom: Tiling an image over an object’s surface.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '![UV 解包的两种选项。上图：将物体的所有面片打包到 UV 网格中，以独特地为每个部分创建纹理。下图：将图像平铺到物体的表面。](httpatomoreillycomsourcenostarchimages1538568.png.jpg)图
    8-3。UV 解包的两种选项。上图：将物体的所有面片打包到 UV 网格中，以独特地为每个部分创建纹理。下图：将图像平铺到物体的表面。'
- en: When creating objects with fairly repetitive or homogenous textures, such as
    brick walls or soil, tileable textures can save you a lot of time. On the other
    hand, when creating characters and other unique objects, you’ll need to pack an
    object’s UVs onto a single grid in order to texture each part differently.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建具有较为重复或均匀纹理的物体时，比如砖墙或土壤，可拼接纹理能为你节省很多时间。另一方面，在创建角色和其他独特物体时，你需要将物体的 UV 坐标打包到单一网格中，以便为每个部分制作不同的纹理。
- en: Unwrapping Tools
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解包工具
- en: 'To start unwrapping a model, you’ll need to be in Edit mode (press TAB to switch
    into it if you aren’t already there). You’ll probably also want to switch to Edge
    Select mode in the 3D Viewport header, as tagging edges with UV seams is easiest
    when you can select edges directly. To begin unwrapping your object, press **U**
    in the 3D Viewport, which will bring up several operators for unwrapping your
    object, as shown in [Figure 8-2](ch08.html#slightly_modified_uv_image_editor_layout
    "Figure 8-2. A slightly modified UV Image editor layout. You can save this as
    the default layout by setting up your windows like this in a new .blend file and
    choosing Save User Settings from the File menu."). These operators are as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始解包模型，你需要进入编辑模式（如果还未进入，按 TAB 键切换）。你可能还需要切换到 3D 视图窗口的边缘选择模式，因为标记 UV 接缝时，直接选择边缘最为便捷。要开始解包你的物体，按下
    **U** 键，这将弹出若干解包操作选项，如 [图 8-2](ch08.html#slightly_modified_uv_image_editor_layout
    "图 8-2。一个稍作修改的 UV 图像编辑器布局。你可以通过在新 .blend 文件中按此布局设置窗口，并从文件菜单中选择“保存用户设置”，将其保存为默认布局。")
    所示。这些操作选项如下：
- en: '****Unwrap****. This is probably the most useful UV unwrapping method. Blender
    will try to unwrap your mesh by flattening it as if it were made from stretchy
    fabric, while also trying to minimize the distortion that this flattening inevitably
    causes. (In order for this process to work for a closed mesh, you’ll need to mark
    some UV seams on your mesh.)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '****解包****。这可能是最实用的 UV 解包方法。Blender 会尝试通过将你的网格“拉伸”并将其展平，仿佛它是由可拉伸的布料制成的，同时尽量减少这种拉伸不可避免地带来的扭曲。（为了让此过程适用于封闭网格，你需要在网格上标记一些
    UV 接缝。）'
- en: '****Smart UV Project****. This will automatically project your mesh by first
    projecting the largest chunk possible from one angle, excluding invisible faces
    or ones that point away from that viewport. It will then project progressively
    smaller, more difficult parts, splitting them into different UV islands as it
    goes. This effect can work reasonably well for simple meshes, but when used with
    more complex shapes, it often produces a lot of little islands that can be difficult
    to work with.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '****智能 UV 投影****。该方法将首先从一个角度自动投影网格中尽可能大的部分，排除不可见的面或者背离该视角的面。然后它会依次投影更小、更复杂的部分，并将它们分割到不同的
    UV 区域。这种效果对于简单网格通常效果不错，但对于更复杂的形状，常常会产生大量的小区域，操作起来比较困难。'
- en: '****Lightmap Pack****. This special UV unwrapping option for baking lighting
    to textures projects each individual polygon in a mesh to a separate rectangular
    UV island. The Lightmap Pack option uses up the UV coordinate space very efficiently,
    which makes it useful for baking lighting textures for game engines but not very
    useful for practical texturing.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '****光照贴图包****。这一特殊的 UV 解包选项用于将光照烘焙到纹理上，将网格中的每个单独多边形投影到一个独立的矩形 UV 区域。光照贴图包选项非常高效地使用了
    UV 坐标空间，这使得它在为游戏引擎烘焙光照纹理时非常有用，但对于实际的纹理制作并不是很实用。'
- en: '****Follow Active Quads****. This follows the active quad (the one highlighted
    when you have multiple faces selected in Face Select mode—usually the most recently
    selected one) and unwraps the faces radiating out from it in an even grid. This
    option works particularly well for meshes with grid-like topology (that is, no
    poles), such as pipes, cylinders, flat(ish) grids, and the like. It works best
    when you unwrap one quad first as a perfect rectangle with 90-degree corners:
    1) Unwrap with **U**▸**Unwrap**; 2) select each edge of the unwrapped quad in
    the UV Image editor and scale it so it’s perfectly horizontal/vertical; 3) unwrap
    the rest of the mesh by selecting it with CTRL-L, which selects anything connected
    to your current selection; 4) use the **Follow Active Quads** unwrap operator
    to get a nice even unwrap. This option, though, doesn’t work well for meshes with
    more complex topology.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '****跟随活动四边形****。此选项会跟随活动四边形（即在面选择模式下选中多个面时高亮显示的四边形——通常是最后选中的那个），并均匀地展开从其辐射出去的面。此选项特别适用于具有网格状拓扑的网格（即没有极点的网格），例如管道、圆柱、平面（近似平面）网格等。它在你先将一个四边形展开为完美矩形（90
    度角）时效果最佳：1）使用 **U**▸**展开**展开；2）在 UV 图像编辑器中选择展开后的每个边，并将其缩放至完全水平/垂直；3）使用 CTRL-L
    选择连接到当前选择的其他网格部分，展开其余网格；4）使用 **跟随活动四边形** 展开操作符进行均匀展开。然而，此选项不适用于具有更复杂拓扑的网格。'
- en: '****Cube Projection****. This option projects the faces of your mesh as if
    on the surface of a cube. It’s useful for roughly cube-shaped objects.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '****立方体投影****。此选项将网格的面投影到一个立方体的表面上。它适用于大致呈立方体形状的物体。'
- en: '****Cylinder Projection****. This option works like Cube Projection but acts
    as if the mesh is cylindrical.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '****圆柱投影****。此选项与立方体投影类似，但将网格视为圆柱形状。'
- en: '****Sphere Projection****. This option also works like Cube Projection but
    acts as if the mesh is spherical.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '****球形投影****。此选项也类似于立方体投影，但将网格视为球形。'
- en: '****Project from View****. This option projects your mesh as it appears in
    the 3D Viewport. It’s particularly useful for projecting a small, flat part of
    your mesh before pinning it and then projecting the rest using the Unwrap operator.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '****视图投影****。此选项将网格按照其在 3D 视口中的外观进行投影。它特别适用于在将网格固定后，先投影网格的一小部分平面，再使用展开操作符投影其余部分。'
- en: '****Project from View (Bounds)****. This option works like Project from View,
    but after it projects the meshes, it stretches the UV coordinates to fill the
    whole UV-coordinate space.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '****视图投影（边界）****。此选项与视图投影类似，但在投影网格后，会拉伸 UV 坐标以填满整个 UV 坐标空间。'
- en: '****Reset****. This option stretches each face across the whole UV-coordinate
    space.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '****重置****。此选项将每个面拉伸到整个 UV 坐标空间。'
- en: Seams
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 接缝
- en: Imagine trying to flatten out a beach ball. Even once you deflate it, you can’t
    stretch it out so that each part of the surface is flat on the ground without
    making at least one cut to the ball, and the more you carve it up, the less you
    have to stretch and distort it in order to flatten it out. Something similar is
    true when using the Unwrap operator to unwrap a mesh. In order for the operator
    to work, you’ll need to mark edges as *seams* where the mesh will split. Ideally,
    you should mark as few seams as possible so that you won’t have to paint across
    too many seams when it comes to texturing, but you also need to mark enough so
    that your mesh will not be distorted by the UV unwrapping. Distortion in this
    case arises from Blender having to warp and stretch the geometry in order to lay
    it out flat. When you use the distorted UVs to map an image to the 3D object,
    the texture will look stretched out as well.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下试图将一个沙滩球展平。即使你将它放气，你也无法将它展平，使得每个表面部分都平铺在地面上，除非至少做出一次切割，切割得越多，展平时所需的拉伸和变形就越少。当使用展开操作符展开网格时，也有类似的情况。为了使操作符能够工作，你需要标记网格分割的*接缝*。理想情况下，你应该尽量减少接缝的数量，这样在进行纹理绘制时就不需要跨越太多的接缝，但你也需要标记足够的接缝，以避免网格在
    UV 展开时产生扭曲。在这种情况下，扭曲是由于 Blender 必须拉伸和变形几何体，以便将其展平成平面。当你使用这些扭曲的 UV 来将图像映射到 3D 物体时，纹理也会显得被拉伸。
- en: To mark UV seams, select edges in Edit mode and use CTRL-E▸**Mark Seam** to
    mark the edge as a UV seam. To quickly select the shortest path between two edges
    (a good way to select a long string of edges for marking), select one edge, then
    press CTRL and rightclick the edge you want to use as the end point. You can also
    press ALT and rightclick to select an entire edge loop at once, allowing you to
    mark multiple edges at the same time. Shortcuts like these will make tagging multiple
    edges at once much quicker.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要标记 UV 接缝，进入编辑模式并选择边缘，然后使用 CTRL-E▸**标记接缝**将边缘标记为 UV 接缝。要快速选择两条边之间的最短路径（这是选择长串边缘进行标记的好方法），选择一条边，然后按住
    CTRL 并右键点击你想作为终点的边缘。你也可以按住 ALT 并右键点击一次性选择整个边环，这样就可以同时标记多个边缘。像这样的快捷键会使得一次性标记多个边缘变得更快捷。
- en: In general, you should try to hide your UV seams in areas where they won’t cause
    problems and where they will minimize the amount of stretching in your unwrap.
    Valleys and creases in your mesh are good places to hide seams, as is any area
    that won’t get too much attention. Try to mark seams symmetrically to make it
    easier to understand your unwrap and to allow you to copy and paste elements of
    your texturing later (if your unwrap is symmetrical, too). Finally, split your
    mesh into sensible islands (groups of faces bounded by seams). For example, in
    the case of the Bat Creature, I split the torso, wings, head, arms and legs, and
    hands and feet into separate sections, as you can see in [Figure 8-4](ch08.html#uv_seams_on_the_bat_creature_are_shown_h
    "Figure 8-4. The UV seams on the Bat Creature are shown here in wireframe view.
    While some seams are (unavoidably) in visible areas, such as around the outside
    edge of the wings, most are hidden in less conspicuous areas, like the inside
    of the legs and down the back of the ears and neck. Hiding your seams like this
    makes cleaning up seams in textures easier later on.").
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，你应该尽量将 UV 接缝隐藏在那些不会造成问题的地方，并且能够最小化展开时的拉伸。网格中的山谷和褶皱是隐藏接缝的好地方，还有一些不会太引人注意的区域。尽量对称地标记接缝，这样有助于理解你的展开，并允许你在后期对纹理进行复制和粘贴（如果你的展开也是对称的）。最后，将你的网格拆分成合理的岛屿（由接缝围起来的面组）。例如，在蝙蝠生物的例子中，我将躯干、翅膀、头部、手臂和腿部、手和脚拆分成独立的部分，就像在[图
    8-4](ch08.html#uv_seams_on_the_bat_creature_are_shown_h "图 8-4. 这里显示的是蝙蝠生物的 UV
    接缝，采用线框视图展示。虽然一些接缝（不可避免地）出现在可见区域，比如翼外缘周围，大多数则隐藏在不太显眼的地方，比如腿部内侧、耳朵和脖部背面。像这样隐藏接缝可以让你在后期处理纹理接缝时更加轻松。")中看到的那样。
- en: '![The UV seams on the Bat Creature are shown here in wireframe view. While
    some seams are (unavoidably) in visible areas, such as around the outside edge
    of the wings, most are hidden in less conspicuous areas, like the inside of the
    legs and down the back of the ears and neck. Hiding your seams like this makes
    cleaning up seams in textures easier later on.](httpatomoreillycomsourcenostarchimages1538570.png.jpg)Figure 8-4. The
    UV seams on the Bat Creature are shown here in wireframe view. While some seams
    are (unavoidably) in visible areas, such as around the outside edge of the wings,
    most are hidden in less conspicuous areas, like the inside of the legs and down
    the back of the ears and neck. Hiding your seams like this makes cleaning up seams
    in textures easier later on.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![这里显示的是蝙蝠生物的 UV 接缝，采用线框视图展示。虽然一些接缝（不可避免地）出现在可见区域，比如翼外缘周围，大多数则隐藏在不太显眼的地方，比如腿部内侧、耳朵和脖部背面。像这样隐藏接缝可以让你在后期处理纹理接缝时更加轻松。](httpatomoreillycomsourcenostarchimages1538570.png.jpg)图
    8-4. 这里显示的是蝙蝠生物的 UV 接缝，采用线框视图展示。虽然一些接缝（不可避免地）出现在可见区域，比如翼外缘周围，大多数则隐藏在不太显眼的地方，比如腿部内侧、耳朵和脖部背面。像这样隐藏接缝可以让你在后期处理纹理接缝时更加轻松。'
- en: Pinning Vertices
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 钉住顶点
- en: Unwrapping your mesh with the Unwrap operator may not give you exactly the unwrap
    you want; for example, one area might be scrunched up or have a proportion that’s
    not to scale. To fix this, you can pin vertices in the UV Image editor so that
    they won’t move when you re-unwrap the mesh (shortcut **E** in the UV editor or
    **U** in the 3D Viewport) by selecting a vertex or vertices and pressing **P**
    to pin them. (Pinned vertices will be highlighted in red.) Now when you re-unwrap,
    Blender will keep the pinned vertices in place and stretch the rest of the unwrap
    to allow for this. To unpin vertices, select them and press ALT-P.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用展开操作符展开网格可能不会给你完全想要的展开结果；例如，某个区域可能会被压缩或比例不对。为了解决这个问题，你可以在 UV 图像编辑器中固定顶点，这样在重新展开网格时它们就不会移动（在
    UV 编辑器中快捷键为 **E**，在 3D 视口中为 **U**）。通过选择一个或多个顶点并按 **P** 锁定它们。（固定的顶点会以红色突出显示。）现在当你重新展开时，Blender
    会保持固定的顶点不动，并拉伸其余的展开部分来适应这个变化。要取消固定顶点，选择它们并按 ALT-P。
- en: One important reason to use pinning is to establish a symmetrical unwrap. To
    do this, unwrap your mesh and then select a string of vertices running down the
    middle of the mesh and align them in the UV Image editor so that they are in a
    straight line (running in the appropriate direction). An easy way to do this is
    to scale them to zero on the *x*- or *y*-axis and then pin them (**P**). Now press
    **E** in the UV editor to unwrap again. This gives you a more symmetrical unwrap,
    as shown in [Figure 8-5](ch08.html#to_get_a_symmetrical_unwrap_on_the_torso "Figure 8-5. To
    get a symmetrical unwrap on the torso of the Bat Creature, I did a normal unwrap
    and then pinned the vertices down the center of the chest in a vertical line and
    unwrapped again. The result is a symmetrical UV island that will be simpler to
    texture later.").
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用固定点的一个重要原因是为了建立对称的展开。为此，首先展开网格，然后选择一串沿网格中间的顶点，并在 UV 图像编辑器中将它们排列成一条直线（沿适当的方向）。一种简单的方法是将它们在
    *x* 轴或 *y* 轴上缩放到零，然后按 **P** 锁定它们。现在，在 UV 编辑器中按 **E** 重新展开。这样可以得到更对称的展开，如[图 8-5](ch08.html#to_get_a_symmetrical_unwrap_on_the_torso
    "图 8-5. 要获得蝙蝠怪物躯干的对称展开，我做了一个正常的展开，然后将胸部中央的顶点垂直排列并重新展开。结果是一个对称的 UV 岛，后续贴图会更简单。")所示。
- en: Pinning can also be used to fix areas on large meshes that unwrap on top of
    one another, as often happens with long, tube-like meshes, where the UV unwrap
    may coil around undesirably. To fix this problem, pin one vertex from each end
    of the mesh so that the vertices sit farther apart in UV space, then unwrap the
    mesh again.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 固定点还可以用于修复大型网格上相互重叠的区域，特别是在处理长而管状的网格时，UV 展开可能会不必要地盘绕。要解决这个问题，可以在网格的两端各固定一个顶点，使这些顶点在
    UV 空间中分得更远，然后重新展开网格。
- en: Finally, when unwrapping a mesh with a lot of different pieces, it can help
    to pin entire UV islands as you finish with them so that you can move on to unwrapping
    other pieces without disturbing the ones you’re happy with. Blender will re-unwrap
    anything you have visible in the UV Image editor by default when you re-unwrap,
    so this is a good way to keep finished parts of your unwrap safe.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，当你展开一个有很多不同部件的网格时，完成一个 UV 岛的展开后，可以将其固定，以便在展开其他部件时不打扰到已经完成的部分。Blender 默认情况下会重新展开你在
    UV 图像编辑器中可见的所有内容，因此这是保持已经完成的展开部分安全的一种好方法。
- en: Packing
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打包
- en: When unwrapping characters and other unique objects, it’s often helpful to pack
    all of the UV islands for your mesh into a single grid. To do this automatically,
    you can use the Pack operator (CTRL-P), but you can usually do a more efficient
    job of packing UV islands yourself simply by moving, scaling, and rotating them
    like puzzle pieces. To speed up the selection of whole islands, switch to Island
    Selection mode in the UV Image editor using the buttons in the header.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在展开角色和其他独特对象时，将所有 UV 岛打包到一个单一的网格中通常是很有帮助的。要自动执行此操作，可以使用打包操作符（CTRL-P），但通常通过像拼图一样移动、缩放和旋转
    UV 岛，你可以做得更高效。为了加快选择整个岛屿的速度，可以通过顶部工具栏的按钮切换到 UV 图像编辑器中的岛屿选择模式。
- en: '![To get a symmetrical unwrap on the torso of the Bat Creature, I did a normal
    unwrap and then pinned the vertices down the center of the chest in a vertical
    line and unwrapped again. The result is a symmetrical UV island that will be simpler
    to texture later.](httpatomoreillycomsourcenostarchimages1538572.png.jpg)Figure 8-5. To
    get a symmetrical unwrap on the torso of the Bat Creature, I did a normal unwrap
    and then pinned the vertices down the center of the chest in a vertical line and
    unwrapped again. The result is a symmetrical UV island that will be simpler to
    texture later.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![为了让蝙蝠生物的躯干获得对称的展开，我进行了正常展开，然后将胸部中心的顶点固定成垂直线并再次展开。结果是一个对称的UV岛，后续更容易进行纹理绘制。](httpatomoreillycomsourcenostarchimages1538572.png.jpg)图8-5。为了让蝙蝠生物的躯干获得对称的展开，我进行了正常展开，然后将胸部中心的顶点固定成垂直线并再次展开。结果是一个对称的UV岛，后续更容易进行纹理绘制。'
- en: When packing UV islands, be sure to keep the scale of the islands similar. To
    average the scale of any UV islands you have selected, use CTRL-A or scale the
    islands manually. It’s much easier, though, to see whether islands are scaled
    correctly once you have a UV test grid assigned (see [Testing Your UV Coordinates](ch08.html#testing_your_uv_coordinates
    "Testing Your UV Coordinates")).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在打包UV岛时，确保保持岛屿的比例相似。要平均你所选的任何UV岛的比例，可以使用CTRL-A或手动调整岛屿的比例。不过，若你已经分配了UV测试网格，则更容易看到岛屿的比例是否正确（参见[测试你的UV坐标](ch08.html#testing_your_uv_coordinates
    "测试你的UV坐标")）。
- en: Assigning UV Textures
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分配UV纹理
- en: 'There are many ways to display textures on your models. For one, you can use
    Blender GLSL materials to create advanced materials with Texture options that
    respond to lighting and transparency. For simpler applications, though, such as
    previewing how a single image will be mapped to an unwrapped object, you can assign
    that image to your model in the UV Image editor. To do so, take the following
    steps:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在模型上显示纹理有很多方法。首先，你可以使用Blender GLSL材质来创建具有纹理选项的高级材质，这些选项能够响应光照和透明度。不过，对于一些更简单的应用，比如预览如何将单张图片映射到展开的物体上，你可以在UV图像编辑器中将该图片分配给模型。为此，请按照以下步骤操作：
- en: Select the object and enter **Edit mode**.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择对象并进入**编辑模式**。
- en: Select all of the faces and unwrap them if you haven’t done so already.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择所有面并展开它们，如果你还没有这样做的话。
- en: Select the image you want to assign to the mesh from the image drop-down menu
    in the header of the UV Image editor. Alternatively, you can open an image with
    **Image**▸**Open Image**, or create one with **Image**▸**New Image**.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从UV图像编辑器头部的图像下拉菜单中选择你要分配给网格的图像。或者，你可以通过**图像**▸**打开图像**来打开一张图像，或通过**图像**▸**新建图像**来创建一张图像。
- en: To see your image in the 3D Viewport, go to the Display panel of the Properties
    region and enable **Textured Solid**.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在3D视口中查看你的图片，请转到属性区域的显示面板，并启用**纹理实心**。
- en: Testing Your UV Coordinates
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试你的UV坐标
- en: 'To make sure that your UV unwrap works well and that areas are not becoming
    too distorted, apply a UV test grid to see the effects of your unwrap on your
    mesh (see [Figure 8-6](ch08.html#checking_your_uv_unwrap_with_a_uv_test_g "Figure 8-6. Checking
    your UV unwrap with a UV test grid image. This grid will help you to identify
    areas that have not unwrapped well, as well as ones that are out of scale with
    the rest of the unwrap.")). To do so, follow the steps below:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保你的UV展开效果良好，并且区域没有变形过度，应用一个UV测试网格，以查看展开对网格的影响（参见[图8-6](ch08.html#checking_your_uv_unwrap_with_a_uv_test_g
    "图8-6. 使用UV测试网格检查你的UV展开。这个网格将帮助你识别那些展开效果不佳的区域，以及与其他展开部分比例不符的区域。")）。为此，请按照以下步骤操作：
- en: In the UV Image editor, with your object in Edit mode, click **Image**▸**New
    Image** to apply a new image to your mesh and check the **UV Test Grid** option.
    This will generate a test grid pattern and assign it to the UV coordinates of
    your mesh.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在UV图像编辑器中，确保对象处于编辑模式，点击**图像**▸**新建图像**，将新图像应用到你的网格，并勾选**UV测试网格**选项。这将生成一个测试网格图案并将其分配到你的网格的UV坐标上。
- en: Turn on **Textured Solid** in the display options of the Properties region in
    the 3D Viewport. You should see a checkerboard pattern applied to your mesh.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在3D视口的属性区域的显示选项中启用**纹理实心**。你应该会看到棋盘格样式的纹理应用到你的网格上。
- en: You should now be able to easily see problem areas in your unwrap, such as areas
    with awkward stretching or parts of the mesh that are too big or too small. You
    can then fix these areas in the UV Image editor and see the changes in real time
    in the 3D Viewport.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该能够轻松地看到展开中的问题区域，比如有拉伸不自然的地方或网格部分过大或过小的地方。你可以在 UV 图像编辑器中修复这些区域，并在 3D 视图窗口中实时看到变化。
- en: Unwrapping the Bat Creature
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展开蝙蝠生物
- en: As you’ve seen in the preceding discussion, I unwrapped the Bat Creature and
    packed it into a single UV tile by first tagging seams and then unwrapping with
    the Unwrap operator (see [Figure 8-7](ch08.html#final_uv_layout_for_the_bat_creatureapos
    "Figure 8-7. The final UV layout for the Bat Creature’s body")). For the torso,
    I made the unwrap more symmetrical by selecting the line of vertices that ran
    down the middle of the front of the torso in the UV Image editor, scaling them
    on the *x*-axis to zero (**S**▸**X**▸**0**), pinning them, and then unwrapping
    again (**E**). Next, I averaged the scale of all of the islands, packed them into
    the UV grid, and scaled up the head slightly to give it more texture space relative
    to other areas (because it’s the part of the body likely to get more attention).
    Finally, I unwrapped the fingernails and teeth onto the same layout, fitting them
    into the remaining gaps between the other islands.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在前面的讨论中看到的，我展开了蝙蝠生物并将其打包到一个单独的 UV 方块中，首先标记接缝，然后使用展开操作符展开（见[图 8-7](ch08.html#final_uv_layout_for_the_bat_creatureapos
    "图 8-7. 蝙蝠生物身体的最终 UV 布局")）。对于躯干，我通过选择一条位于躯干正面中间的顶点线，在 UV 图像编辑器中将其沿 *x* 轴缩放为零 (**S**▸**X**▸**0**)，然后固定这些顶点，再次进行展开
    (**E**)，使得展开结果更加对称。接下来，我对所有岛屿的比例进行了平均，将它们打包到 UV 网格中，并稍微放大了头部，以相对于其他区域提供更多的纹理空间（因为头部是身体最容易引起注意的部分）。最后，我将指甲和牙齿展开到相同的布局中，将它们适当地填充到其他岛屿之间的空隙里。
- en: '![Checking your UV unwrap with a UV test grid image. This grid will help you
    to identify areas that have not unwrapped well, as well as ones that are out of
    scale with the rest of the unwrap.](httpatomoreillycomsourcenostarchimages1538574.png.jpg)Figure 8-6. Checking
    your UV unwrap with a UV test grid image. This grid will help you to identify
    areas that have not unwrapped well, as well as ones that are out of scale with
    the rest of the unwrap.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![检查你的 UV 展开情况，使用 UV 测试网格图像。这张网格将帮助你识别未展开良好的区域，以及那些与其他展开部分不成比例的区域。](httpatomoreillycomsourcenostarchimages1538574.png.jpg)图
    8-6. 使用 UV 测试网格图像检查你的 UV 展开情况。这个网格将帮助你识别未展开良好的区域，以及那些与其他展开部分不成比例的区域。'
- en: For the eyes, I unwrapped only the inner mesh simply by positioning the 3D Viewport
    to look at the eye straight on and using the Project from View (Bounds) operator.
    Later on, I will tweak the UVs of the eye mesh to fit the texture I will paint
    for it. See [Chapter 11](ch11.html "Chapter 11. Texture Painting") for more on
    unwrapping and texturing the eyes.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 对于眼睛，我只展开了内部网格，方法是将 3D 视图窗口对准眼睛正面，并使用“从视图投影（边界）”操作符。稍后，我会调整眼睛网格的 UV，以适应我将为其绘制的纹理。有关眼睛展开和纹理绘制的更多内容，请参见[第
    11 章](ch11.html "第 11 章. 纹理绘制")。
- en: Unwrapping the Jungle Temple
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展开丛林神庙
- en: The Jungle Temple had many separate elements, and rather than go through them
    all, I’ll just cover the most difficult ones. (The objects in the Jungle Temple
    not discussed below are simply unwrapped using variations on the techniques discussed
    earlier.)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 丛林神庙有许多独立的元素，而不是逐一讲解所有部分，我将只讲解最困难的部分。（丛林神庙中没有在下面讨论的物体，简单地使用了之前讨论的技术进行展开。）
- en: Stone Blocks
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 石块
- en: There were an awful lot of stone blocks in the Jungle Temple, so I didn’t want
    to have to texture each individually. Instead, I wanted to be able to unwrap them
    all relatively quickly and reuse the same textures for each. My quick and dirty
    solution was to use the Select Sharp operator in Edit mode to select the sharp
    edges of the blocks (Select▸Sharp Edges from the 3D Viewport header) and then
    mark them as seams (see [Figure 8-8](ch08.html#placing_seams_automatically_for_the_bloc
    "Figure 8-8. Placing seams automatically for the blocks in the Jungle Temple scene.
    I selected the edges of the stone blocks with Select Sharp and then marked them
    as seams and unwrapped them.")). Next, I used the Unwrap operator to unwrap all
    the blocks at once. I manually removed some seams in areas like the damaged stone
    and at the edges of some blocks where I wanted the texture to wrap around rather
    than having an obvious seam. I only placed seams manually on the blocks in the
    scene’s foreground, and I unwrapped these manually to make sure they unwrapped
    nicely.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在丛林神庙中有大量的石块，所以我不想为每个石块单独添加纹理。相反，我希望能够相对快速地展开它们，并为每个石块重用相同的纹理。我快速且粗糙的解决方案是在编辑模式下使用“选择尖锐边缘”操作符，选择石块的尖锐边缘（在3D视口头部选择▸尖锐边缘），然后将其标记为接缝（见[图8-8](ch08.html#placing_seams_automatically_for_the_bloc
    "图8-8. 自动为丛林神庙场景中的石块放置接缝。我用选择尖锐边缘选中了石块的边缘，然后将其标记为接缝并展开纹理。")）接着，我使用展开操作符一次性展开所有石块。我手动去除了一些区域的接缝，比如破损的石块和一些块的边缘，在这些地方我希望纹理能环绕而不是留下明显的接缝。我只在场景前景中的块上手动放置接缝，并且手动展开这些块，确保它们展开得很好。
- en: '![The final UV layout for the Bat Creature’s body](httpatomoreillycomsourcenostarchimages1538576.png.jpg)Figure 8-7. The
    final UV layout for the Bat Creature’s body'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![蝙蝠生物的最终UV布局](httpatomoreillycomsourcenostarchimages1538576.png.jpg)图8-7.
    蝙蝠生物的最终UV布局'
- en: Trees
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 树木
- en: In the case of the trees, I added seams down their backs (the sides facing away
    from the camera) and around the joins between the trunk and the roots. I then
    unwrapped them using Unwrap. Next, I selected a string of vertices in the UV Image
    editor that ran down the middle of the root or trunk, aligned it with the vertical
    axis, and pinned it. Unwrapping again gave me nicely aligned UV islands.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于树木，我在它们的背面（朝向相机的那一侧）和树干与根部的连接处添加了接缝。然后，我使用展开操作符展开了它们。接着，我在UV图像编辑器中选择了一串顶点，沿着根部或树干的中间位置排列，并将其固定。再次展开后，我得到了对齐良好的UV岛。
- en: The technique described above is useful when unwrapping something like tree
    bark that has a texture with a strong grain or directional pattern because all
    of the pieces will align with the direction of the grain. I packed both trees
    into the same UV space (see [Figure 8-9](ch08.html#uvs_for_the_tree_objectsdot_the_active_o
    "Figure 8-9. The UVs for the tree objects. The active object appears as editable
    UV islands, while other selected (but not active) objects appear gray in the UV
    Image editor.")) to allow me to texture them both at the same time later on.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 上述技术在展开类似树皮这样的纹理时非常有用，因为树皮纹理具有强烈的纹理方向性或颗粒感，因此所有部分都会与纹理的纹理方向对齐。我将两棵树都放入了同一个UV空间（见[图8-9](ch08.html#uvs_for_the_tree_objectsdot_the_active_o
    "图8-9. 树对象的UV。活动对象显示为可编辑的UV岛，而其他被选中（但不是活动）的对象则在UV图像编辑器中显示为灰色。")），这样之后我就可以同时给它们纹理了。
- en: '![Placing seams automatically for the blocks in the Jungle Temple scene. I
    selected the edges of the stone blocks with Select Sharp and then marked them
    as seams and unwrapped them.](httpatomoreillycomsourcenostarchimages1538578.png.jpg)Figure 8-8. Placing
    seams automatically for the blocks in the Jungle Temple scene. I selected the
    edges of the stone blocks with Select Sharp and then marked them as seams and
    unwrapped them.![The UVs for the tree objects. The active object appears as editable
    UV islands, while other selected (but not active) objects appear gray in the UV
    Image editor.](httpatomoreillycomsourcenostarchimages1538580.png.jpg)Figure 8-9. The
    UVs for the tree objects. The active object appears as editable UV islands, while
    other selected (but not active) objects appear gray in the UV Image editor.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '![在丛林神庙场景中自动放置石块的接缝。我使用“选择锐边”选择了石块的边缘，然后将其标记为接缝并展开它们。](httpatomoreillycomsourcenostarchimages1538578.png.jpg)图
    8-8. 在丛林神庙场景中自动放置石块的接缝。我使用“选择锐边”选择了石块的边缘，然后将其标记为接缝并展开它们。![树木对象的 UV。活动对象显示为可编辑的
    UV 岛，而其他选中的（但不是活动的）对象在 UV 图像编辑器中呈灰色。](httpatomoreillycomsourcenostarchimages1538580.png.jpg)图
    8-9. 树木对象的 UV。活动对象显示为可编辑的 UV 岛，而其他选中的（但不是活动的）对象在 UV 图像编辑器中呈灰色。'
- en: Multiple UV Maps
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多个 UV 映射
- en: You can add multiple UV-coordinate sets to an object and edit them independently.
    This is good for making use of multiple textures in complex materials and when
    texture painting. When texture painting, you can use one UV set to neatly pack
    your UV islands for your final texture and use another to assign seamless textures
    or photos to clone texture information from. In subsequent chapters, I will sometimes
    refer to creating extra UV sets for purposes like these.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为一个对象添加多个 UV 坐标集并独立编辑它们。这对于在复杂材质中使用多个纹理以及纹理绘制时非常有用。在纹理绘制时，你可以使用一个 UV 集合将
    UV 岛整齐地打包以用于最终的纹理，并使用另一个 UV 集合为无缝纹理或照片指定克隆纹理信息。在后续章节中，我有时会提到为这些目的创建额外的 UV 集合。
- en: For the trees, I created a second UV coordinate set to match up with a tileable
    bark texture, saving the first UV set to use for baking ambient occlusion and
    the final texture maps. To create this second set, I opened the Object Data tab
    of the Properties editor and clicked the + icon in the UV Maps panel to create
    a new UV set. You can choose between your existing UV sets from this panel and
    edit whichever is active. To unwrap the second UV set for my tree, I used the
    Follow Active Quads operator for the parts of the trees with approximately cylindrical
    topology and unwrapped and packed them so that they filled the width of the UV
    grid (see [Figure 8-10](ch08.html#in_the_second_uv_set_for_the_treescomma "Figure 8-10. In
    the second UV set for the trees, I unwrapped the UV islands using Follow Active
    Quads and then scaled to fill the width of the UV grid. Later, this will be used
    for aligning tileable textures along the length of the trees and their roots.")).
    Later, this would allow me to tile a texture multiple times around and along the
    length of the trunk and roots without creating too many seams where the textures
    didn’t match.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于树木，我创建了第二个 UV 坐标集，以配合可平铺的树皮纹理，同时将第一个 UV 集合保存用于烘焙环境光遮蔽和最终的纹理贴图。为了创建这个第二个 UV
    集合，我打开了属性编辑器的对象数据选项卡，并点击 UV 映射面板中的 + 图标来创建一个新的 UV 集合。你可以从这个面板中选择现有的 UV 集合并编辑任何一个处于活动状态的集合。为了展开我的树木的第二个
    UV 集合，我使用了“跟随活动四边形”操作符，这适用于具有大致圆柱形拓扑的树木部分，并将它们展开并打包，使它们填充 UV 网格的宽度（见[图 8-10](ch08.html#in_the_second_uv_set_for_the_treescomma
    "图 8-10. 在树木的第二个 UV 集合中，我使用跟随活动四边形展开了 UV 岛，并将其缩放以填充 UV 网格的宽度。之后，这将用于沿树干和树根的长度对齐可平铺纹理。")）。之后，这将允许我在树干和根部的长度上多次平铺纹理，而不会在纹理不匹配的地方创建太多接缝。
- en: '![In the second UV set for the trees, I unwrapped the UV islands using Follow
    Active Quads and then scaled to fill the width of the UV grid. Later, this will
    be used for aligning tileable textures along the length of the trees and their
    roots.](httpatomoreillycomsourcenostarchimages1538582.png.jpg)Figure 8-10. In
    the second UV set for the trees, I unwrapped the UV islands using Follow Active
    Quads and then scaled to fill the width of the UV grid. Later, this will be used
    for aligning tileable textures along the length of the trees and their roots.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![在树木的第二组UV集中，我使用Follow Active Quads展开了UV岛屿，然后缩放以填充UV网格的宽度。稍后，这将用于沿树木及其根部的长度对齐可平铺纹理。](httpatomoreillycomsourcenostarchimages1538582.png.jpg)图8-10。在树木的第二组UV集中，我使用Follow
    Active Quads展开了UV岛屿，然后缩放以填充UV网格的宽度。稍后，这将用于沿树木及其根部的长度对齐可平铺纹理。'
- en: Sharing UV Space Between Objects
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 物体之间共享UV空间
- en: Just as you’ll usually want to combine all of a single object’s UV islands in
    the UV grid, when it comes to unwrapping multiple objects for texturing, you may
    want them all to share the same UV space so that they can all use the same texture.
    Doing so will save you time when painting textures and memory when rendering.
    To see the UV coordinates of multiple objects in the UV Image editor at the same
    time, select the objects and then enter Edit mode for the one you want to edit.
    In the UV Image editor, turn on **View**▸**Draw Other Objects**. The UV coordinates
    for the selected objects will now be visible in gray (though only the current
    object will be editable), allowing you to align multiple objects on the same UV
    grid (see [Figure 8-11](ch08.html#uv_coordinates_for_the_various_leaf_obje "Figure 8-11. UV
    coordinates for the various leaf objects. Most were unwrapped to share the same
    UV coordinates.")).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 就像你通常会希望将单个物体的所有UV岛屿合并到UV网格中一样，在展开多个物体以进行纹理绘制时，你可能希望它们都共享相同的UV空间，这样它们就可以使用相同的纹理。这样做将节省你在绘制纹理时的时间，并在渲染时节省内存。要同时查看多个物体在UV图像编辑器中的UV坐标，选择物体后进入你想编辑的物体的编辑模式。在UV图像编辑器中，打开**视图**▸**绘制其他物体**。现在，所选物体的UV坐标将以灰色显示（尽管只有当前物体可以编辑），这样你就可以将多个物体对齐到同一个UV网格中（参见[图8-11](ch08.html#uv_coordinates_for_the_various_leaf_obje
    "图8-11。各种叶片物体的UV坐标。大多数被展开以共享相同的UV坐标。")）。
- en: '![UV coordinates for the various leaf objects. Most were unwrapped to share
    the same UV coordinates.](httpatomoreillycomsourcenostarchimages1538584.png.jpg)Figure 8-11. UV
    coordinates for the various leaf objects. Most were unwrapped to share the same
    UV coordinates.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '![各种叶片物体的UV坐标。大多数被展开以共享相同的UV坐标。](httpatomoreillycomsourcenostarchimages1538584.png.jpg)图8-11。各种叶片物体的UV坐标。大多数被展开以共享相同的UV坐标。'
- en: Leaves and Grass
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 叶片与草
- en: Flat meshes with open edges are particularly easy to unwrap because you don’t
    have to mark any seams. I simply used Unwrap on all the leaves in my scene, unwrapping
    them all to share the same UV space (see [Figure 8-11](ch08.html#uv_coordinates_for_the_various_leaf_obje
    "Figure 8-11. UV coordinates for the various leaf objects. Most were unwrapped
    to share the same UV coordinates.")). This excludes the IvyGen leaves, which were
    automatically unwrapped by the IvyGen add-on already. For the cylindrical elements,
    such as the stems of the grass, I marked seams as needed, unwrapped one face (making
    sure it unwrapped as a rectangle), and then selected the rest of the mesh (CTRL-L)
    and unwrapped using Follow Active Quads.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 带有开放边缘的平面网格特别容易展开，因为你不需要标记任何缝隙。我简单地对场景中的所有叶片使用了Unwrap，将它们都展开为共享相同的UV空间（参见[图8-11](ch08.html#uv_coordinates_for_the_various_leaf_obje
    "图8-11。各种叶片物体的UV坐标。大多数被展开以共享相同的UV坐标。")）。这不包括IvyGen叶片，它们已经通过IvyGen插件自动展开了。对于圆柱形元素，比如草的茎部，我根据需要标记缝隙，展开一个面（确保它展开为矩形），然后选择其余的网格（CTRL-L），并使用Follow
    Active Quads进行展开。
- en: Statue
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 雕像
- en: For the statue mesh, I marked seams by hand around all the major parts and unwrapped
    using the Unwrap operator. [Figure 8-12](ch08.html#statue_uvscomma_unwrapped_and_packed_int
    "Figure 8-12. The statue UVs, unwrapped and packed into the UV grid") shows the
    results. You could try using Smart Unwrap, and you might get what you need for
    a mesh like this, but unwrapping by hand will always give you more control.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 对于雕像网格，我手动标记了所有主要部分的缝隙，并使用Unwrap操作展开。[图8-12](ch08.html#statue_uvscomma_unwrapped_and_packed_int
    "图8-12。雕像的UV坐标，已展开并打包到UV网格中")展示了结果。你可以尝试使用智能展开，可能会得到适合这种网格的结果，但手动展开总是能提供更多的控制。
- en: The Rest of the Elements
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他元素
- en: The other elements in the Jungle Temple scene were all pretty straightforward
    and followed the same strategies used so far. Some elements, like the water, didn’t
    need UV textures because they will use entirely procedural materials instead.
    ([Chapter 9](ch09.html "Chapter 9. Hair and Particle Systems") will deal with
    creating procedural materials that don’t require textures, such as water and glass.)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 丛林寺庙场景中的其他元素都很直接，采用了迄今为止使用的相同策略。一些元素，比如水体，不需要UV纹理，因为它们将完全使用程序材质。（[第9章](ch09.html
    "第9章。毛发与粒子系统")将讨论创建不需要纹理的程序材质，如水和玻璃。）
- en: '![The statue UVs, unwrapped and packed into the UV grid](httpatomoreillycomsourcenostarchimages1538586.png.jpg)Figure 8-12. The
    statue UVs, unwrapped and packed into the UV grid'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![雕像的UV，展开并打包到UV网格中](httpatomoreillycomsourcenostarchimages1538586.png.jpg)图8-12。雕像的UV，展开并打包到UV网格中'
- en: Unwrapping the Spider Bot
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展开蜘蛛机器人UV
- en: For the Spider Bot, I did my best to squeeze the model’s entire UV unwrap onto
    a single texture (see [Figure 8-13](ch08.html#in_the_case_of_the_spider_bot_uvscomma_m
    "Figure 8-13. In the case of the Spider Bot UVs, most of the unwrapping was done
    with Unwrap. Once I unwrapped it, I packed all of the UV coordinates for the model
    to occupy the same space. (You only need to unwrap each duplicate part once. So,
    for example, the parts of the legs don’t all need to be unwrapped separately,
    as long as the duplicates all use the same mesh data.)")), excluding a few parts
    that would receive only procedural materials. Because much of the model used similar
    materials, it was easy to edit the whole texture at once. By starting with the
    big elements, like the body and the legs, and then squeezing the smaller parts
    into the gaps in between, I could produce a very efficiently packed set of UVs,
    ensuring that important elements got the texture real estate they needed. You
    can always check that the different parts unwrap with the right scale and without
    stretching using a UV grid texture (see [Figure 8-13](ch08.html#in_the_case_of_the_spider_bot_uvscomma_m
    "Figure 8-13. In the case of the Spider Bot UVs, most of the unwrapping was done
    with Unwrap. Once I unwrapped it, I packed all of the UV coordinates for the model
    to occupy the same space. (You only need to unwrap each duplicate part once. So,
    for example, the parts of the legs don’t all need to be unwrapped separately,
    as long as the duplicates all use the same mesh data.)")).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 对于蜘蛛机器人，我尽力将整个模型的UV展开压缩到一个单一的纹理中（见[图8-13](ch08.html#in_the_case_of_the_spider_bot_uvscomma_m
    "图8-13。在蜘蛛机器人UV的情况下，大部分展开工作是使用Unwrap完成的。一旦展开，我将所有UV坐标打包到同一空间中。 (你只需要展开每个重复部分一次。例如，腿部的部分不需要单独展开，只要重复部分使用相同的网格数据。)"))，排除了那些只使用程序材质的少数部分。由于模型中大部分使用了相似的材质，因此一次编辑整个纹理变得很容易。通过从较大的元素开始，比如身体和腿部，然后将较小的部分挤压到它们之间的空隙中，我能够产生一组非常高效打包的UV，确保重要元素获得所需的纹理空间。你可以随时使用UV网格纹理检查不同部分是否以正确的比例展开且没有拉伸（见[图8-13](ch08.html#in_the_case_of_the_spider_bot_uvscomma_m
    "图8-13。在蜘蛛机器人UV的情况下，大部分展开工作是使用Unwrap完成的。一旦展开，我将所有UV坐标打包到同一空间中。 (你只需要展开每个重复部分一次。例如，腿部的部分不需要单独展开，只要重复部分使用相同的网格数据。)"))。
- en: Applying Modifiers and Duplicates
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用修改器和副本
- en: In previous chapters, I used modifiers to model and retopologize the Spider
    Bot’s body and legs symmetrically. By doing so, I reduced the amount of work required
    and duplicated some of the parts for the legs. While I could have kept the leg
    pieces as duplicates, it was better to apply some of the modifiers at this stage,
    especially Mirror modifiers, because otherwise the textures would be mapped to
    both sides of the objects symmetrically. This would result in some obvious symmetry
    down the middle of the objects; worse, if I were to use any text or graphics in
    my textures, they would appear on the mirrored side of the mesh backward! For
    this reason, I applied the Mirror modifiers assigned to many of the Spider Bot’s
    constituent objects.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，我使用修改器对蜘蛛机器人（Spider Bot）的身体和腿部进行建模和对称性重新拓扑。通过这样做，我减少了所需的工作量，并复制了一些腿部的部件。虽然我本可以保持腿部部件为副本，但在这个阶段应用一些修改器会更好，特别是镜像修改器，因为否则纹理会对称地映射到物体的两侧。这将导致物体中间出现明显的对称性；更糟糕的是，如果我在纹理中使用任何文字或图形，它们会反向出现在网格的镜像一侧！因此，我对蜘蛛机器人许多组成部分应用了镜像修改器。
- en: Unfortunately, Blender won’t allow you to apply modifiers to objects that share
    their mesh data with other objects. This makes applying modifiers to the model
    difficult when, as for the Spider Bot, I have used linked duplicates to copy parts
    of the model, like the legs, which now have many objects that share the same mesh
    data. To get around this, use the Mesh from the Curve/Meta/Surf/Text operator
    (ALT-C), which will apply any modifiers to an object and convert them to proper
    geometry. Because you want to apply only the Mirror modifier, not the Subdivision
    Surface modifier, remove all but the Mirror modifier first and then use the operator.
    You will then need to remove the Mirror modifiers from the other duplicates because
    they will now be using the already mirrored mesh data.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，Blender 不允许对共享网格数据的对象应用修改器。这使得在使用链接复制（如蜘蛛机器人中的腿部）将模型的一些部分复制时，应用修改器变得困难，因为这些部分现在有多个对象共享相同的网格数据。为了解决这个问题，可以使用曲线/元/表面/文本操作符（ALT-C），这将对对象应用修改器并将其转换为正确的几何体。因为你只需要应用镜像修改器，而不是细分曲面修改器，首先去除除了镜像修改器以外的所有修改器，然后使用该操作符。接下来，你需要去除其他重复体上的镜像修改器，因为它们现在会使用已经镜像过的网格数据。
- en: '![In the case of the Spider Bot UVs, most of the unwrapping was done with Unwrap.
    Once I unwrapped it, I packed all of the UV coordinates for the model to occupy
    the same space. (You only need to unwrap each duplicate part once. So, for example,
    the parts of the legs don’t all need to be unwrapped separately, as long as the
    duplicates all use the same mesh data.)](httpatomoreillycomsourcenostarchimages1538588.png.jpg)Figure 8-13. In
    the case of the Spider Bot UVs, most of the unwrapping was done with Unwrap. Once
    I unwrapped it, I packed all of the UV coordinates for the model to occupy the
    same space. (You only need to unwrap each duplicate part once. So, for example,
    the parts of the legs don’t all need to be unwrapped separately, as long as the
    duplicates all use the same mesh data.)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![在蜘蛛机器人 UV 的情况下，大部分的展开是使用 Unwrap 完成的。展开后，我将所有 UV 坐标打包，使模型占据相同的空间。（每个重复部分只需展开一次。例如，腿部的各个部分不需要分别展开，只要它们的重复部分使用相同的网格数据即可。）](httpatomoreillycomsourcenostarchimages1538588.png.jpg)图
    8-13。在蜘蛛机器人 UV 的情况下，大部分的展开是使用 Unwrap 完成的。展开后，我将所有 UV 坐标打包，使模型占据相同的空间。（每个重复部分只需展开一次。例如，腿部的各个部分不需要分别展开，只要它们的重复部分使用相同的网格数据即可。）'
- en: Sharing UV Space Efficiently
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 高效共享 UV 空间
- en: For certain areas, I shared the UV space for similar parts (see [Figure 8-14](ch08.html#some_mechanical_elements_of_the_spider_b
    "Figure 8-14. Some mechanical elements of the Spider Bot were unwrapped to share
    the same portion of the UV grid. The small mechanical joints below the legs (right)
    were unwrapped to a small corner of the UV grid (left).")). For example, for the
    mechanical elements beneath the legs, I placed all of the UV islands on a patch
    at the top-right corner of the UV grid. Doing so will cause errors when baking
    textures, but by painting a generic texture over these areas, I can texture multiple
    parts of the model without using as much UV space. (Since these parts are relatively
    hidden, the lack of unique textures on these areas won’t make too much of a difference.)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些区域，我共享了类似部分的 UV 空间（见 [图 8-14](ch08.html#some_mechanical_elements_of_the_spider_b
    "图 8-14. 蜘蛛机器人的一些机械元素被展开，分享了 UV 网格的同一部分。腿部下方的小型机械关节（右）被展开到 UV 网格的小角落（左）。")）。例如，对于腿部下方的机械元素，我将所有
    UV 岛放置在 UV 网格的右上角区域。这样做会在烘焙纹理时出现错误，但通过在这些区域涂抹一个通用的纹理，我可以在不占用太多 UV 空间的情况下为多个模型部分添加纹理。（由于这些部分相对隐蔽，因此这些区域缺乏独特的纹理不会造成太大影响。）
- en: '![Some mechanical elements of the Spider Bot were unwrapped to share the same
    portion of the UV grid. The small mechanical joints below the legs (right) were
    unwrapped to a small corner of the UV grid (left).](httpatomoreillycomsourcenostarchimages1538590.png.jpg)Figure 8-14. Some
    mechanical elements of the Spider Bot were unwrapped to share the same portion
    of the UV grid. The small mechanical joints below the legs (right) were unwrapped
    to a small corner of the UV grid (left).'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![蜘蛛机器人的一些机械元素被展开，分享了 UV 网格的同一部分。腿部下方的小型机械关节（右）被展开到 UV 网格的小角落（左）。](httpatomoreillycomsourcenostarchimages1538590.png.jpg)图
    8-14。蜘蛛机器人的一些机械元素被展开，分享了 UV 网格的同一部分。腿部下方的小型机械关节（右）被展开到 UV 网格的小角落（左）。'
- en: Making sure that all objects are assigned roughly the same amount of UV space
    according to their size is more difficult for multiple objects because the Average
    Islands Scale operator (CTRL-A) works only on UV islands within a mesh. However,
    by using a UV grid texture and enabling Textured Solid in the 3D Viewport, you
    can judge the scale of an object’s UV coordinates and adjust them accordingly.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 确保所有物体根据其大小分配大致相同的 UV 空间，对于多个物体来说，这更为困难，因为“平均岛屿缩放”操作符（CTRL-A）仅适用于网格内的 UV 岛屿。然而，通过使用
    UV 网格纹理并在 3D 视口中启用“纹理实心”显示，你可以判断物体 UV 坐标的缩放，并相应地进行调整。
- en: In Review
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在回顾中
- en: This concludes unwrapping the models I created in earlier chapters. We’ve looked
    at how to tag seams to unwrap meshes and how to refine the results of Blender’s
    unwrapping. We’ve also learned how to pack UV coordinates for meshes together
    to make it simple to texture multiple objects with one image. In [Chapter 9](ch09.html
    "Chapter 9. Hair and Particle Systems"), we’ll move on to adding particle systems
    to some of our projects to create fur and grass before baking and painting textures
    in [Chapter 10](ch10.html "Chapter 10. Texture Baking") and [Chapter 11](ch11.html
    "Chapter 11. Texture Painting") and creating materials in [Chapter 12](ch12.html
    "Chapter 12. Materials"). In these later chapters, we’ll apply images to the UV
    coordinates we created in this chapter in order to bake and paint on textures
    that we can then use as the inputs for materials.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分内容结束了我在前几章中创建模型的展开操作。我们已经了解了如何标记接缝来展开网格，如何优化 Blender 展开结果。我们还学习了如何将网格的 UV
    坐标打包在一起，这样就可以用一张图像为多个物体添加纹理。在[第 9 章](ch09.html "第 9 章：毛发与粒子系统")中，我们将继续为我们的项目添加粒子系统，以创建毛发和草地，然后在[第
    10 章](ch10.html "第 10 章：纹理烘焙")和[第 11 章](ch11.html "第 11 章：纹理绘制")中进行纹理烘焙和绘制，并在[第
    12 章](ch12.html "第 12 章：材质")中创建材质。在这些后续章节中，我们将把图像应用到我们在本章创建的 UV 坐标上，以便进行烘焙和绘制纹理，最终作为材质的输入。
