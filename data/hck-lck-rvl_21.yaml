- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">A</samp> <samp class="SANS_Dogma_OT_Bold_B_11">SOLUTIONS
    TO COMMON WSL PROBLEMS</samp>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">A</samp> <samp class="SANS_Dogma_OT_Bold_B_11">常见
    WSL 问题的解决方案</samp>
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: It’s hard for me to imagine doing the kind of data analysis work I do without
    Linux. However, many Linux tools that I rely on every day simply don’t exist in
    the Windows ecosystem. Using just Windows, you can’t make your datasets searchable
    using Aleph, for example, or quickly spin up popular SQL servers to import leaked
    databases. Windows Subsystem for Linux (WSL) allows you to do these tasks and
    considerably more, including running command line tools, in Windows without needing
    to set up your own Linux VM.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我很难想象在没有 Linux 的情况下进行我所做的数据分析工作。然而，我每天依赖的许多 Linux 工具在 Windows 生态系统中根本不存在。例如，单独使用
    Windows，你无法像使用 Aleph 一样让数据集可搜索，或者快速启动流行的 SQL 服务器来导入泄露的数据库。Windows 子系统 for Linux（WSL）让你可以在
    Windows 中完成这些任务，甚至更多，包括运行命令行工具，而无需设置自己的 Linux 虚拟机。
- en: WSL generally works well, but you may encounter a few issues, particularly related
    to disk performance, when you attempt to crunch data stored on Windows-formatted
    disks from your Linux terminal. Some tasks may take your computer hours or days
    to finish when they should take just minutes. This appendix teaches Windows users
    more about the quirks of the Linux filesystem, as well as various possible solutions
    to the disk performance problem. It’s optional for Windows users, but if you do
    run into a situation where programs are taking considerably longer to run than
    I describe, this appendix should help you diagnose the problem and come up with
    a solution.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: WSL 通常运行良好，但在你尝试从 Linux 终端处理存储在 Windows 格式化磁盘上的数据时，可能会遇到一些问题，尤其是与磁盘性能相关的。一些任务可能需要你的计算机几个小时或几天才能完成，而实际上这些任务应该只需几分钟。附录将帮助
    Windows 用户了解 Linux 文件系统的某些特性，并提供各种解决磁盘性能问题的可能方案。对于 Windows 用户来说，这是可选内容，但如果你遇到程序运行时间比我描述的要长得多的情况，本附录应该能帮助你诊断问题并提出解决方案。
- en: I recommend waiting to read this appendix until after you finish [Chapter 3](chapter3.xhtml),
    where you’ll install WSL, and [Chapter 4](chapter4.xhtml), where you’ll learn
    the command line code required to implement the performance solutions described
    here. You might need to reference this appendix in [Chapter 5](chapter5.xhtml),
    while you’re bind-mounting in Docker or indexing datasets in Aleph; in [Chapter
    11](chapter11.xhtml), while you’re using Linux tools to extract over a million
    files; and in [Chapter 12](chapter12.xhtml), while you’re importing 20GB of data
    into a SQL database running in Docker.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议等到完成 [第 3 章](chapter3.xhtml)（你将安装 WSL）和 [第 4 章](chapter4.xhtml)（你将学习实现这里描述的性能解决方案所需的命令行代码）后再阅读本附录。你可能需要在
    [第 5 章](chapter5.xhtml)（你在 Docker 中绑定挂载或在 Aleph 中索引数据集时）参考本附录；在 [第 11 章](chapter11.xhtml)（你使用
    Linux 工具提取超过一百万个文件时）；以及在 [第 12 章](chapter12.xhtml)（你将 20GB 数据导入运行在 Docker 中的 SQL
    数据库时）。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Understanding WSL’s Linux Filesystem</samp>
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">理解 WSL 的 Linux 文件系统</samp>
- en: Before solving any problems that you might encounter with WSL, you’ll need to
    understand how and where WSL stores your Linux files. In this section, you’ll
    learn how the WSL Linux filesystem works in Windows, how to access Linux files
    in Windows, and, conversely, how to access Windows files in Linux. I also outline
    some of the simpler problems you might encounter and how to solve them.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在解决可能遇到的 WSL 问题之前，你需要了解 WSL 如何以及在何处存储 Linux 文件。在本节中，你将了解 WSL Linux 文件系统如何在 Windows
    中工作，如何在 Windows 中访问 Linux 文件，以及如何在 Linux 中访问 Windows 文件。我还会概述一些你可能会遇到的简单问题以及如何解决它们。
- en: 'Your WSL Linux filesystem contains much more than just the data you store there.
    It includes a complete copy of the Ubuntu operating system, and when you install
    new programs using apt, it installs those into the Linux filesystem, too. Just
    as in a real Ubuntu system, */* is the root folder, and it contains all of the
    usual default folders for Ubuntu systems. In your Ubuntu terminal, list the folder
    names in the root filesystem by running the <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls
    /</samp> command. This should give you the following output:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 WSL Linux 文件系统包含的不仅仅是你存储在其中的数据。它还包括 Ubuntu 操作系统的完整副本，当你使用 apt 安装新程序时，这些程序也会安装到
    Linux 文件系统中。就像在真实的 Ubuntu 系统中一样，*/* 是根文件夹，它包含了 Ubuntu 系统的所有默认文件夹。在你的 Ubuntu 终端中，运行
    <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls /</samp> 命令来列出根文件系统中的文件夹名称。你应该会看到以下输出：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This output lists all of the folders inside the root folder in your Ubuntu system.
    Your home folder is in */home*. For example, since my Ubuntu username is *micah*,
    my Ubuntu home folder is */home/micah*. If you’re using Windows 11 or newer, you
    should be able to browse your Linux files directly from File Explorer. When you’re
    browsing your Linux files, you see *all* of the Linux files, not just the data
    in your home folder. If you’re running a new enough version of Windows, change
    to your home folder (<samp class="SANS_TheSansMonoCd_W7Bold_B_11">cd ~</samp>)
    and then run the command <samp class="SANS_TheSansMonoCd_W7Bold_B_11">explorer.exe
    .</samp> to open your current working folder in Linux in Windows File Explorer.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出列出了 Ubuntu 系统中根文件夹内的所有文件夹。你的主文件夹在 */home*。例如，由于我的 Ubuntu 用户名是 *micah*，所以我的
    Ubuntu 主文件夹是 */home/micah*。如果你使用的是 Windows 11 或更高版本，你应该能够直接从文件资源管理器浏览你的 Linux
    文件。当你浏览 Linux 文件时，你会看到 *所有* 的 Linux 文件，而不仅仅是主文件夹中的数据。如果你正在运行一个足够新的 Windows 版本，切换到你的主文件夹（<samp
    class="SANS_TheSansMonoCd_W7Bold_B_11">cd ~</samp>），然后运行命令 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">explorer.exe
    .</samp> 来在 Windows 文件资源管理器中打开你当前在 Linux 中工作的文件夹。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*If you ever need to run a Windows program in Linux (such as <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">explorer.exe</samp>),
    run Linux programs in Windows, or otherwise do more advanced tasks in WSL, check
    out Microsoft’s detailed documentation at* [https://learn.microsoft.com/en-us/windows/wsl/filesystems](https://learn.microsoft.com/en-us/windows/wsl/filesystems).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你需要在 Linux 中运行 Windows 程序（例如 <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">explorer.exe</samp>）、在
    Windows 中运行 Linux 程序，或在 WSL 中执行更高级的任务，请查阅 Microsoft 的详细文档，链接如下：* [https://learn.microsoft.com/en-us/windows/wsl/filesystems](https://learn.microsoft.com/en-us/windows/wsl/filesystems)。'
- en: For example, [Figure A-1](#figA-1) shows a list of Linux files viewed in the
    Windows File Explorer app.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，[图 A-1](#figA-1)显示了在 Windows 文件资源管理器应用中查看的 Linux 文件列表。
- en: '![A screenshot of File Explorer in Windows browsing Linux files. The Linux
    path /home/micah is open](Images/FigureA-1.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![在 Windows 的文件资源管理器中浏览 Linux 文件的截图。Linux 路径 /home/micah 被打开](Images/FigureA-1.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-1: Browsing Linux
    files in File Explorer in Windows</samp>'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 A-1：在 Windows 的文件资源管理器中浏览
    Linux 文件</samp>
- en: It’s also helpful to understand the different behaviors of Windows and Linux
    filesystems. The Windows filesystem format is NTFS, and the most popular Linux
    filesystem format is ext4\. Each Linux file has separate permissions for reading,
    writing, and executing, but files on NTFS systems don’t have this metadata.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 了解 Windows 和 Linux 文件系统的不同行为也是很有帮助的。Windows 文件系统格式是 NTFS，而最流行的 Linux 文件系统格式是
    ext4。每个 Linux 文件都有单独的读取、写入和执行权限，但 NTFS 系统中的文件没有这些元数据。
- en: If you’re accessing a Windows filesystem within Linux (when you access */mnt/c*
    in WSL, for example), Linux treats every file as having read, write, and execute
    permissions, and you can’t change these permissions by default. This often isn’t
    a problem, but it does mean that if you copy files from Linux to Windows, you’ll
    lose their original permissions. If you want to be able to use file permissions,
    you’ll need to work with files on a proper Linux filesystem instead.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 Linux 中访问 Windows 文件系统（例如，当你访问 WSL 中的 */mnt/c* 时），Linux 会将每个文件视为具有读取、写入和执行权限，并且默认情况下不能更改这些权限。这通常不是问题，但这意味着如果你将文件从
    Linux 复制到 Windows，你将丢失它们的原始权限。如果你希望能够使用文件权限，你需要在一个真正的 Linux 文件系统上工作。
- en: Under the hood, the WSL Linux filesystem is stored in a single file in the *C:*
    drive in your user’s home folder. On my Windows 11 computer, the filename is *C:\Users\micah\AppData\Local\Packages\CanonicalGroupLimited
    .UbuntuonWindows_79rhkp1fndgsc\LocalState\ext4.vhdx*. The path on your computer
    will be slightly different, but the file containing your Linux filesystem will
    still be called *ext4.vhdx*. The more data you store in your Linux filesystem,
    the bigger the *ext4.vhdx* file gets.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 从底层来看，WSL Linux 文件系统存储在 *C:* 驱动器的用户主文件夹中的一个文件里。在我的 Windows 11 电脑上，文件名是 *C:\Users\micah\AppData\Local\Packages\CanonicalGroupLimited
    .UbuntuonWindows_79rhkp1fndgsc\LocalState\ext4.vhdx*。你电脑上的路径会稍有不同，但包含 Linux 文件系统的文件仍然叫做
    *ext4.vhdx*。你在 Linux 文件系统中存储的数据越多，*ext4.vhdx* 文件就会变得越大。
- en: For example, suppose you want to save your datasets directly to your Linux filesystem
    in the folder *~/datasets*, rather than to a USB disk. Downloading the BlueLeaks
    dataset to that folder will cause your *ext4.vhdx* file to grow hundreds of gigabytes
    larger. Because your whole WSL Linux filesystem is stored on your *C:* drive,
    this means you only have as much disk space available in Linux as you have free
    space on that drive. In addition to the limits of free space on your *C:* drive,
    by default, your WSL Linux filesystem can only take up a maximum of 256GB.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 比如，假设你想把数据集直接保存到 Linux 文件系统中的 *~/datasets* 文件夹，而不是保存到 USB 磁盘。将 BlueLeaks 数据集下载到这个文件夹会导致你的
    *ext4.vhdx* 文件增长数百 GB。因为整个 WSL Linux 文件系统都存储在 *C:* 驱动器上，这意味着你在 Linux 中可用的磁盘空间就等于该驱动器上的空闲空间。除了
    *C:* 驱动器上空闲空间的限制外，默认情况下，你的 WSL Linux 文件系统最大只能占用 256GB 的空间。
- en: If you want to store more data than this, you’ll need to take additional steps
    to expand the size of your Linux filesystem. Find detailed instructions for doing
    this at [*https://<wbr>learn<wbr>.microsoft<wbr>.com<wbr>/en<wbr>-us<wbr>/windows<wbr>/wsl<wbr>/vhd<wbr>-size*](https://learn.microsoft.com/en-us/windows/wsl/vhd-size).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想存储比这个更多的数据，你需要采取额外的步骤来扩展你的 Linux 文件系统的大小。你可以在[*https://<wbr>learn<wbr>.microsoft<wbr>.com<wbr>/zh<wbr>-cn<wbr>/windows<wbr>/wsl<wbr>/vhd<wbr>-size*](https://learn.microsoft.com/en-us/windows/wsl/vhd-size)找到详细的操作说明。
- en: Finally, you might come across a situation where you open an Ubuntu terminal,
    try to access a Windows-formatted USB disk in */mnt*, and find that it’s just
    not there. This is because you need to have mounted your Windows USB disk (plugged
    it in and, if it’s encrypted, entered your BitLocker password) *before* opening
    the Ubuntu shell. If you can’t access a USB disk from Ubuntu at a path like */mnt/d*
    (assuming your USB disk is mounted to the *D:* drive), you’ll need to restart
    WSL.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可能会遇到这样一种情况：你打开一个 Ubuntu 终端，尝试访问挂载在 */mnt* 中的 Windows 格式的 USB 磁盘，结果发现它根本不存在。这是因为你需要在打开
    Ubuntu shell 之前，*先*挂载你的 Windows USB 磁盘（插入磁盘，并且如果磁盘加密了，还需要输入 BitLocker 密码）。如果你无法在
    Ubuntu 中通过类似 */mnt/d* 的路径访问 USB 磁盘（假设你的 USB 磁盘挂载在 *D:* 驱动器上），你需要重新启动 WSL。
- en: To do so, open PowerShell and run <samp class="SANS_TheSansMonoCd_W7Bold_B_11">wsl
    --shutdown</samp>. This will close all open Ubuntu terminals and stop any running
    Docker containers. Afterward, open an Ubuntu terminal again, and you should be
    able to access that USB disk.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，打开 PowerShell 并运行 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">wsl --shutdown</samp>。这将关闭所有打开的
    Ubuntu 终端并停止所有正在运行的 Docker 容器。之后，再次打开 Ubuntu 终端，你应该能够访问那个 USB 磁盘。
- en: 'With the basics of WSL out of the way, let’s discuss the primary problem you
    might encounter: disk performance.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在掌握了 WSL 的基础之后，让我们来讨论你可能遇到的主要问题：磁盘性能。
- en: <samp class="SANS_Futura_Std_Bold_B_11">The Disk Performance Problem</samp>
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">磁盘性能问题</samp>
- en: Using Windows files in WSL, like the disks mounted in */mnt*, has major performance
    issues. Reading from and writing to disks takes considerably longer when you’re
    working with files on a Windows disk than when you’re working with them on WSL’s
    Linux filesystem, like those in */home*. Some disk-intensive tasks, like extracting
    a compressed file that contains a million small files, might take several hours
    on a Windows disk, when the same task could be completed in seconds on a Linux
    disk. These performance issues can severely cut into your ability to get anything
    done.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在 WSL 中使用 Windows 文件（比如挂载在 */mnt* 中的磁盘）存在严重的性能问题。当你在 Windows 磁盘上处理文件时，读取和写入的速度比在
    WSL 的 Linux 文件系统（比如 */home* 中的文件）上要慢得多。某些磁盘密集型任务，比如提取一个包含百万个小文件的压缩文件，在 Windows
    磁盘上可能需要几个小时，而同样的任务在 Linux 磁盘上可以在几秒钟内完成。这些性能问题可能严重影响你的工作效率。
- en: For this reason, Microsoft recommends that you store data in the same operating
    system filesystem as the tools you plan to use. Using Linux tools like <samp class="SANS_TheSansMonoCd_W5Regular_11">find</samp>,
    <samp class="SANS_TheSansMonoCd_W5Regular_11">grep</samp>, and <samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>
    (see [Chapter 4](chapter4.xhtml)) or making your data searchable using Aleph (see
    [Chapter 5](chapter5.xhtml)) will work best if you store your datasets in the
    Linux filesystem. Meanwhile, analyzing datasets with Windows software, such as
    7-Zip, will work best if those datasets are stored in the Windows filesystem.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，微软建议将数据存储在与你打算使用的工具相同的操作系统文件系统中。使用 Linux 工具，如 <samp class="SANS_TheSansMonoCd_W5Regular_11">find</samp>、<samp
    class="SANS_TheSansMonoCd_W5Regular_11">grep</samp> 和 <samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>（见[第4章](chapter4.xhtml)）或使用
    Aleph 使数据可搜索（见[第5章](chapter5.xhtml)）时，最好的做法是将数据集存储在 Linux 文件系统中。与此同时，使用 Windows
    软件（如 7-Zip）分析数据集时，如果这些数据集存储在 Windows 文件系统中，则效果最佳。
- en: By far the simplest solution to the performance issue is to store all of your
    datasets in your Linux filesystem and use Linux tools to work with them. However,
    datasets are often too large to fit in the *C:* drive. For example, BlueLeaks
    alone takes up over half the disk space I have available on the laptop I’m using
    right now. This gives you no choice but to store the datasets on a USB disk like
    the *datasets* disk that you encrypted in [Chapter 1](chapter1.xhtml). If you
    don’t have enough space on your *C:* drive to work with all of the data that you’d
    like to, you’ll need to implement one of the solutions I discuss in the following
    section.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，解决性能问题的最简单方法是将所有数据集存储在 Linux 文件系统中，并使用 Linux 工具进行处理。然而，数据集通常过大，无法放入 *C:*
    驱动器。例如，单是 BlueLeaks 就占用了我目前使用的笔记本电脑上超过一半的磁盘空间。这迫使你将数据集存储在像[第1章](chapter1.xhtml)中加密的
    *datasets* 磁盘这样的 USB 磁盘上。如果你在 *C:* 驱动器上没有足够的空间来处理你想要的数据，你将需要实施我在下一节中讨论的解决方案之一。
- en: You can sometimes work around disk performance problems by simply using native
    Windows programs rather than Linux programs to do your most disk-intensive tasks.
    Throughout this book, I suggest using native Windows tools when appropriate. For
    example, the Linux programs <samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>
    and <samp class="SANS_TheSansMonoCd_W5Regular_11">tar</samp> are used to extract
    compressed files. Extracting files saved on a Windows disk using these tools can
    be extremely slow if you’re working from WSL. Instead, you can just use a Windows
    archive program like 7-Zip, as you did in [Chapter 4](chapter4.xhtml) to unzip
    BlueLeaks. Since extracting compressed files with 7-Zip doesn’t involve WSL at
    all, there’s no disk performance problem.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，你可以通过使用本地 Windows 程序而非 Linux 程序来绕过磁盘性能问题，执行最消耗磁盘的任务。在本书中，我建议在合适的情况下使用本地 Windows
    工具。例如，Linux 程序 <samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp> 和 <samp
    class="SANS_TheSansMonoCd_W5Regular_11">tar</samp> 用于解压缩文件。如果你从 WSL 中工作，使用这些工具解压存储在
    Windows 磁盘上的文件可能会非常慢。相反，你可以像在[第4章](chapter4.xhtml)中解压 BlueLeaks 时那样，使用 Windows
    压缩程序 7-Zip。由于使用 7-Zip 解压文件完全不涉及 WSL，因此没有磁盘性能问题。
- en: Likewise, when you’re running Python scripts, you can use the Windows version
    of Python (downloadable from [*https://<wbr>www<wbr>.python<wbr>.org*](https://www.python.org))
    rather than the Ubuntu version. This allows your Python scripts to crunch data
    from your Windows-formatted USB disk, bypassing the WSL performance problem, which
    is why [Chapter 7](chapter7.xhtml) advises you to use PowerShell instead of WSL.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，当你运行 Python 脚本时，可以使用 Windows 版本的 Python（可以从[*https://<wbr>www<wbr>.python<wbr>.org*](https://www.python.org)下载），而不是
    Ubuntu 版本。这样，你的 Python 脚本就能处理来自 Windows 格式化的 USB 磁盘的数据，避免了 WSL 性能问题，这也是[第7章](chapter7.xhtml)建议你使用
    PowerShell 而非 WSL 的原因。
- en: This technique can only take you so far, though. There aren’t always native
    Windows alternatives. For instance, you can’t run Docker containers, which are
    required for running software like Aleph, without WSL. For those cases, you’re
    better off storing your data in a Linux filesystem using one of the following
    solutions.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种技术也仅能解决部分问题。并非所有情况下都有本地 Windows 替代方案。例如，如果没有 WSL，你无法运行 Docker 容器，而 Docker
    容器是运行像 Aleph 这样的软件所必需的。在这些情况下，你最好将数据存储在 Linux 文件系统中，使用以下解决方案之一。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Solving the Disk Performance Problem</samp>
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">解决磁盘性能问题</samp>
- en: 'This section covers two potential solutions to the WSL disk performance problem:
    storing only datasets you’re actively working with in your WSL Linux partition,
    or storing your entire WSL Linux partition on a USB disk with more disk space
    than your *C:* drive has available. I recommend the first, simpler option if you
    just want to be able to easily work through this book. The second option is a
    better long-term solution if you plan to routinely work with large datasets using
    Linux tools in Windows in the future.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了解决 WSL 磁盘性能问题的两种潜在方案：仅将当前工作所需的数据集存储在 WSL Linux 分区中，或者将整个 WSL Linux 分区存储在具有更多磁盘空间的
    USB 磁盘上。我建议选择第一个更简单的选项，如果你只想轻松地完成本书中的任务。第二个选项是一个更好的长期解决方案，如果你计划将来在 Windows 中使用
    Linux 工具定期处理大数据集。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Storing Only Active
    Datasets in Linux</samp>
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">仅在 Linux 中存储活动数据集</samp>
- en: If you don’t have enough free space for all your datasets on your *C:* drive,
    you can store just those you need for your current work in your Linux filesystem,
    keeping the rest on your USB disk. For example, you could copy the folders that
    you’re actively working with into your Ubuntu home folder (that is, in *~/datasets*)
    and keep them there while you’re conducting a specific investigation. When you
    no longer need to work with these files, copy them back to your external Windows
    disk and delete them from your home folder to clear up space.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的 *C:* 驱动器没有足够的空间存储所有数据集，你可以仅将当前工作所需的部分数据集存储在 Linux 文件系统中，其余数据保留在 USB 磁盘上。例如，你可以将正在处理的文件夹复制到
    Ubuntu 的主文件夹中（即 *~/datasets*），并在进行特定研究时将它们保留在这里。当你不再需要这些文件时，可以将它们复制回外部 Windows
    磁盘，并从主文件夹中删除以腾出空间。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Storing Your Linux
    Filesystem on a USB Disk</samp>
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">将你的 Linux 文件系统存储在
    USB 磁盘上</samp>
- en: Another option is to move your whole Ubuntu installation—that is, the *ext4
    .vhdx* file that contains your Linux filesystem—to a USB disk with lots of free
    space. This way, if you store all your datasets in your Ubuntu home folder (in
    *~/datasets*), the data will physically be stored on your USB disk instead of
    on your internal *C:* drive.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选择是将整个 Ubuntu 安装——也就是包含 Linux 文件系统的 *ext4.vhdx* 文件——移动到具有大量空闲空间的 USB 磁盘上。这样，如果你将所有数据集存储在
    Ubuntu 的主文件夹中（即 *~/datasets*），数据将物理地存储在 USB 磁盘上，而不是存储在内部 *C:* 驱动器中。
- en: With this solution, you won’t be able to open an Ubuntu terminal unless your
    USB disk is plugged in and mounted, which is less convenient. If you try opening
    an Ubuntu terminal while your USB disk isn’t mounted, you’ll get the error message
    <samp class="SANS_TheSansMonoCd_W5Regular_11">The system cannot find the path
    specified</samp>. However, I recommend using this method if you plan to investigate
    your own datasets in the future. Here’s how to implement it.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个解决方案，你将无法打开 Ubuntu 终端，除非 USB 磁盘已插入并挂载，这样不太方便。如果你在 USB 磁盘未挂载的情况下尝试打开 Ubuntu
    终端，你将收到错误消息 <samp class="SANS_TheSansMonoCd_W5Regular_11">The system cannot find
    the path specified</samp>。然而，如果你打算将来研究自己的数据集，我推荐使用这种方法。以下是如何实现它。
- en: 'Open a PowerShell terminal and create a new folder on your external USB disk
    to store your Linux filesystem by running the following command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 PowerShell 终端，并通过运行以下命令在外部 USB 磁盘上创建一个新的文件夹，用于存储 Linux 文件系统：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In PowerShell, the <samp class="SANS_TheSansMonoCd_W5Regular_11">New-Item</samp>
    command creates a new file or folder. In this case, it’s creating a new folder
    at *D:\WSL*. If you’d like to store your *ext4.vhdx* file somewhere else, you
    can change the path when you run this command.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PowerShell 中，<samp class="SANS_TheSansMonoCd_W5Regular_11">New-Item</samp>
    命令用于创建新文件或文件夹。在此案例中，它正在 *D:\WSL* 创建一个新的文件夹。如果你希望将 *ext4.vhdx* 文件存储在其他位置，可以在运行此命令时更改路径。
- en: 'WSL lets you install multiple Linux distributions (that is, versions of Linux)
    at the same time. In order to move one of them to your USB disk, you’ll need to
    know its name. It’s probably called Ubuntu, but you can check by running the <samp
    class="SANS_TheSansMonoCd_W5Regular_11">wsl --list</samp> command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: WSL 允许你同时安装多个 Linux 发行版（即不同版本的 Linux）。为了将其中一个移动到 USB 磁盘上，你需要知道其名称。它可能叫做 Ubuntu，但你可以通过运行
    <samp class="SANS_TheSansMonoCd_W5Regular_11">wsl --list</samp> 命令来检查：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This output lists each WSL distribution that you have installed. In my case,
    I have <samp class="SANS_TheSansMonoCd_W5Regular_11">Ubuntu</samp> (my default
    distribution), as well as <samp class="SANS_TheSansMonoCd_W5Regular_11">docker-desktop
    -data</samp> and <samp class="SANS_TheSansMonoCd_W5Regular_11">docker-desktop</samp>,
    which are both used by Docker Desktop. If you’ve worked through [Chapter 5](chapter5.xhtml)
    and installed Docker Desktop yourself, you should have these WSL distributions
    too.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出列出了你安装的每个WSL发行版。在我的例子中，我有<samp class="SANS_TheSansMonoCd_W5Regular_11">Ubuntu</samp>（我的默认发行版），以及<samp
    class="SANS_TheSansMonoCd_W5Regular_11">docker-desktop -data</samp>和<samp class="SANS_TheSansMonoCd_W5Regular_11">docker-desktop</samp>，它们都是Docker
    Desktop使用的。如果你已经完成了[第5章](chapter5.xhtml)并自己安装了Docker Desktop，你也应该有这些WSL发行版。
- en: The following steps show you how to move a WSL distribution from the *C:* drive
    to a USB disk. These instructions focus on the Ubuntu distribution, but if any
    other WSL distributions are taking up too much space on *C:* as well, you could
    follow the same steps to move them to a USB disk, making sure to change the distribution
    name when you run the commands. I don’t recommend moving the Docker distributions,
    though, as this might cause issues with Docker Desktop working correctly.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤展示了如何将WSL发行版从*C:*驱动器移动到USB磁盘。这些说明主要针对Ubuntu发行版，但如果其他WSL发行版也占用了*C:*驱动器的太多空间，你也可以按照相同的步骤将它们移动到USB磁盘，只需在运行命令时更改发行版名称。我不建议移动Docker发行版，因为这可能会导致Docker
    Desktop无法正常工作。
- en: 'Once you’ve confirmed the name of the distribution you’d like to move to your
    disk, export a copy of it with the following command, replacing <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">Ubuntu</samp>
    with the appropriate name:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你确认了要移动到磁盘的发行版名称，使用以下命令导出该发行版的副本，将<samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">Ubuntu</samp>替换为适当的名称：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This should save a copy of all of the data from your chosen distribution into
    the file *D:\WSL\backup.tar*. Once this finishes, unregister the Ubuntu distribution
    on your *C:* drive from WSL by running this command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会将你选择的发行版的所有数据保存到文件*D:\WSL\backup.tar*中。完成后，通过运行此命令从WSL中取消注册你在*C:*驱动器上的Ubuntu发行版：
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will remove the distribution from your computer and delete the Linux filesystem
    file *ext4.vhdx*. That’s okay, because you just made a backup.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这将从你的计算机中移除该发行版，并删除Linux文件系统文件*ext4.vhdx*。没关系，因为你刚刚创建了备份。
- en: 'Next, import your backup, this time telling WSL that you want your data for
    this distribution to be in *D:\WSL*:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，导入你的备份，这次告诉WSL你希望将该发行版的数据存放在*D:\WSL*中：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This command creates a new WSL distribution, in this case called <samp class="SANS_TheSansMonoCd_W5Regular_11">Ubuntu</samp>.
    Now make that distribution into your default WSL distribution by running the following
    command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令创建一个新的WSL发行版，在本例中称为<samp class="SANS_TheSansMonoCd_W5Regular_11">Ubuntu</samp>。现在，通过运行以下命令将该发行版设为默认WSL发行版：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: When you later open a WSL terminal, it should now open a shell in the default
    distribution you just chose.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当你稍后打开WSL终端时，它应该会打开你刚刚选择的默认发行版的shell。
- en: At this point, you’ve moved your Ubuntu filesystem from the *C:* drive to the
    *D:* drive (or whatever path you changed it to when you ran your own commands).
    The original *ext4.vhdx* file stored on *C:* should no longer exist, and you should
    have a new one in *D:\WSL\ext4.vhdx*.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，你已经将Ubuntu文件系统从*C:*驱动器移动到了*D:*驱动器（或你在运行命令时更改的路径）。原来的*ext4.vhdx*文件应该不再存在，应该已经有了一个新的文件在*D:\WSL\ext4.vhdx*。
- en: 'Now that you’ve restored the temporary backup file, *D:\WSL\backup.tar*, you
    can delete it by running the following command in your PowerShell terminal:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经恢复了临时备份文件，*D:\WSL\backup.tar*，你可以通过在PowerShell终端中运行以下命令删除它：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Open a new Ubuntu terminal. It should work, with one problem: you’ll automatically
    be logged in as the root user, while before you would automatically log in as
    an unprivileged user. To fix this, you’ll create a file called */etc/wsl.conf*,
    using the nano text editor described in [Chapter 4](chapter4.xhtml).'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的Ubuntu终端。它应该可以正常工作，但有一个问题：你会自动以root用户登录，而之前你会自动以一个没有权限的用户登录。要解决此问题，你将创建一个名为*/etc/wsl.conf*的文件，使用[第4章](chapter4.xhtml)中描述的nano文本编辑器。
- en: 'Run the following command to open nano:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令打开nano：
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Enter the following two lines into the text editor file to set your default
    user, changing <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">micah</samp>
    to whatever your username was before you moved *ext4 .vhdx* to a USB disk:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在文本编辑器文件中输入以下两行来设置你的默认用户，将 <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">micah</samp>
    更改为你在将 *ext4.vhdx* 移动到 USB 磁盘之前的用户名：
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Press CTRL-O, followed by ENTER, to save the file, and then press CTRL-X to
    exit. Back in your PowerShell terminal, shut down WSL by running this command:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 按下 CTRL-O，然后按 ENTER 保存文件，再按 CTRL-X 退出。回到 PowerShell 终端，通过运行以下命令关闭 WSL：
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: When you open a new Ubuntu terminal, you should now be logged in as your normal
    unprivileged user, rather than the root user.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当你打开一个新的 Ubuntu 终端时，你现在应该已作为正常的非特权用户登录，而不是 root 用户。
- en: Running your Linux filesystem off of a USB disk should now work, but your Linux
    filesystem is still limited to the default 256GB of data, even if your USB disk
    is bigger. The final step is to expand the size of your Linux filesystem so that
    it can take up as much space as you have available on your USB disk.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，运行 Linux 文件系统从 USB 磁盘应该可以正常工作，但即使你的 USB 磁盘更大，Linux 文件系统仍然受到默认 256GB 数据的限制。最后一步是扩展
    Linux 文件系统的大小，以便它可以使用 USB 磁盘上所有可用的空间。
- en: 'In PowerShell, shut down WSL by running:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PowerShell 中，通过运行以下命令关闭 WSL：
- en: '[PRE11]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Next, open a Command Prompt shell as an administrator. (Since you need to open
    it as an administrator, it’s simplest to just open Command Prompt directly instead
    of opening a Command Prompt tab in Windows Terminal.) Click **Start**, search
    for **command prompt**, right-click **Command Prompt**, and click **Run as Administrator**.
    In your administrator Command Prompt, open the Windows CLI program DiskPart by
    running the following:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，作为管理员打开一个命令提示符窗口。（因为你需要以管理员身份打开，所以直接打开命令提示符比在 Windows Terminal 中打开命令提示符标签页更简单。）点击
    **开始**，搜索 **命令提示符**，右键点击 **命令提示符**，然后点击 **以管理员身份运行**。在管理员命令提示符中，运行以下命令打开 Windows
    CLI 程序 DiskPart：
- en: '[PRE12]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This program helps you manage your computer’s drives and partitions. When you
    open it, it should drop you into an interactive shell similar to the Python shell.
    In DiskPart, you must first select the disk that you’d like to resize, in this
    case the *ext4.vhdx* file. Run this command, substituting the correct path to
    *ext4.vhdx* on your machine:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这个程序帮助你管理计算机的磁盘和分区。打开它时，它应该会进入一个类似于 Python Shell 的交互式 shell。在 DiskPart 中，你必须先选择你想要调整大小的磁盘，这里是
    *ext4.vhdx* 文件。运行以下命令，将 *ext4.vhdx* 的路径替换为你机器上正确的路径：
- en: '[PRE13]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You can then check the current size of your Linux filesystem by running this
    command:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以通过运行以下命令检查 Linux 文件系统的当前大小：
- en: '[PRE14]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The output of <samp class="SANS_TheSansMonoCd_W5Regular_11">detail vdisk</samp>
    shows you information about the virtual disk that you’re inspecting, including
    the total maximum size of your Linux filesystem in the <samp class="SANS_TheSansMonoCd_W5Regular_11">Virtual
    size</samp> field, along with the actual disk space the Linux filesystem is currently
    using in the <samp class="SANS_TheSansMonoCd_W5Regular_11">Physical size</samp>
    field.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`<samp class="SANS_TheSansMonoCd_W5Regular_11">detail vdisk</samp> 的输出显示了你正在检查的虚拟磁盘的信息，包括在
    <samp class="SANS_TheSansMonoCd_W5Regular_11">Virtual size</samp> 字段中显示的 Linux
    文件系统的总最大大小，以及在 <samp class="SANS_TheSansMonoCd_W5Regular_11">Physical size</samp>
    字段中显示的 Linux 文件系统当前使用的实际磁盘空间。'
- en: Next, you’ll resize your virtual disk to be larger than 256GB. First you need
    to determine how big you want it to be. If your USB disk is empty except for this
    *ext4.vhdx* file, then it’s reasonable to select the size of the entire USB disk.
    You can find the total size of your USB disk by right-clicking your disk in File
    Explorer and clicking **Properties**. In the General tab, you’ll see information
    about disk space usage, including the total capacity of the disk. You should avoid
    making your virtual disk larger than the total size of your USB disk; if you do,
    you might run out of disk space in your USB disk without WSL realizing it, leading
    to unpredictable Linux problems.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要将虚拟磁盘调整为大于 256GB。首先，你需要确定想要的大小。如果你的 USB 磁盘除了这个 *ext4.vhdx* 文件外是空的，那么选择整个
    USB 磁盘的大小是合理的。你可以通过右键点击文件资源管理器中的磁盘，点击 **属性** 来查看 USB 磁盘的总大小。在“常规”标签页下，你将看到有关磁盘空间使用的信息，包括磁盘的总容量。你应该避免将虚拟磁盘的大小设置得大于
    USB 磁盘的总大小；如果这样做，可能会导致 USB 磁盘空间不足，而 WSL 未能察觉，进而导致无法预料的 Linux 问题。
- en: 'Once you determine how big you want your Linux partition to be, make sure you
    know that number in megabytes. For example, if you want its maximum size to be
    1TB, then that would be 1,048,576MB. Check the “File Size Units and Conversions”
    box in [Chapter 4](chapter4.xhtml) for information on how to calculate this. Now
    run the following command to resize it, replacing <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">1048576</samp>
    with your chosen maximum size in megabytes:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你确定了 Linux 分区的大小，确保你知道该数字的大小，单位是兆字节。例如，如果你希望它的最大大小为 1TB，那么这将是 1,048,576MB。有关如何计算这个数字的信息，请查阅[第4章](chapter4.xhtml)中的“文件大小单位与转换”框。现在运行以下命令来调整大小，将<samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">1048576</samp>替换为你选择的最大大小（单位为兆字节）：
- en: '[PRE15]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Run <samp class="SANS_TheSansMonoCd_W7Bold_B_11">detail vdisk</samp> again
    to confirm that the <samp class="SANS_TheSansMonoCd_W5Regular_11">Virtual size</samp>
    field now shows the new maximum size you just set, then exit DiskPart by running
    the <samp class="SANS_TheSansMonoCd_W7Bold_B_11">exit</samp> command:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行<samp class="SANS_TheSansMonoCd_W7Bold_B_11">detail vdisk</samp>命令，确认<samp
    class="SANS_TheSansMonoCd_W5Regular_11">虚拟大小</samp>字段现在显示你刚设置的新的最大大小，然后通过运行<samp
    class="SANS_TheSansMonoCd_W7Bold_B_11">exit</samp>命令退出 DiskPart：
- en: '[PRE16]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Close the administrator Command Prompt.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭管理员命令提示符。
- en: You’ve now expanded the virtual disk size in *ext4.vhdx*, but you still need
    to expand the actual Linux partition on this disk. To do that, you need to determine
    the path to the virtual disk itself.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经在*ext4.vhdx*中扩展了虚拟磁盘的大小，但你仍然需要扩展该磁盘上的实际 Linux 分区。为此，你需要确定虚拟磁盘本身的路径。
- en: 'First, open an Ubuntu terminal and run the following command:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，打开 Ubuntu 终端并运行以下命令：
- en: '[PRE17]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'This command checks to be sure that */dev* is mounted in WSL. This is a special
    Linux folder containing files that each represent a piece of hardware attached
    to your computer, including hard drives. When I run this command, I get the following
    output:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令检查确保*/dev*在 WSL 中已挂载。这是一个特殊的 Linux 文件夹，包含每个硬件组件的文件，包括硬盘。当我运行这个命令时，我得到了以下输出：
- en: '[PRE18]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Since that command uses <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>,
    you’ll first need to type your password to proceed. If you see the warning message
    <samp class="SANS_TheSansMonoCd_W5Regular_11">mount: /dev: none already mounted
    on /dev</samp> you can safely ignore it; this means that */dev* was already mounted.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '由于该命令使用了<samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>，你首先需要输入密码才能继续。如果你看到警告信息<samp
    class="SANS_TheSansMonoCd_W5Regular_11">mount: /dev: none already mounted on /dev</samp>，可以安全忽略它；这意味着*/dev*
    已经被挂载。'
- en: 'Run the following command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE19]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This command runs <samp class="SANS_TheSansMonoCd_W5Regular_11">mount</samp>,
    which outputs all of the filesystems that are mounted in Linux, then pipes that
    output to <samp class="SANS_TheSansMonoCd_W5Regular_11">grep</samp> to filter
    that down to just the ext4 filesystems. The output should show you the path to
    the virtual hard drive. For example, my output tells me the path to my hard drive
    is */dev/sdc*:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令运行<samp class="SANS_TheSansMonoCd_W5Regular_11">mount</samp>，该命令列出所有在 Linux
    中挂载的文件系统，然后将输出结果传递给<samp class="SANS_TheSansMonoCd_W5Regular_11">grep</samp>，以筛选出
    ext4 文件系统。输出应该会显示虚拟硬盘的路径。例如，我的输出显示硬盘的路径是*/dev/sdc*：
- en: '[PRE20]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Finally, resize your Linux partition to take up as much space as it can by
    running the following command, making sure to use the correct path to your virtual
    hard drive from the previous command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，运行以下命令，将你的 Linux 分区调整为占用尽可能多的空间，确保使用上一个命令中确定的虚拟硬盘的正确路径：
- en: '[PRE21]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'When I run this, I get the following output:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当我运行这个命令时，得到以下输出：
- en: '[PRE22]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: If all went well, you should see a message confirming that the partition has
    been resized and is now as large as the full virtual disk. You’re done! You’ve
    expanded your Linux filesystem so that you can fit many more datasets on it.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，你应该看到一条确认分区已被调整大小，并且现在与整个虚拟磁盘一样大的信息。完成了！你已经扩展了 Linux 文件系统，现在可以在其中存储更多的数据集了。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Next Steps</samp>
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">下一步</samp>
- en: In my opinion, Microsoft made Windows a considerably more useful operating system
    by building WSL into it, particularly when you need to analyze hacked and leaked
    datasets. If you’re going to use WSL on a regular basis, I recommend that you
    read through the official documentation at [*https://<wbr>learn<wbr>.microsoft<wbr>.com<wbr>/en<wbr>-us<wbr>/windows<wbr>/wsl<wbr>/*](https://learn.microsoft.com/en-us/windows/wsl/).
    Those docs cover topics beyond the scope of this appendix, such as using WSL with
    VS Code, installing SQL database software directly in WSL instead of using it
    in Docker, running graphical Linux apps directly in Windows, and more.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，微软通过将WSL集成到Windows中，极大地提升了Windows操作系统的实用性，特别是当你需要分析被黑客攻击和泄露的数据集时。如果你打算定期使用WSL，建议你阅读官方文档：[**https://<wbr>learn<wbr>.microsoft<wbr>.com<wbr>/en<wbr>-us<wbr>/windows<wbr>/wsl<wbr>/**](https://learn.microsoft.com/en-us/windows/wsl/)。这些文档涵盖了本附录之外的内容，比如如何将WSL与VS
    Code结合使用、如何在WSL中直接安装SQL数据库软件而不是在Docker中使用它、如何直接在Windows中运行图形化Linux应用等。
- en: In addition to using WSL, you may want to familiarize yourself with Linux in
    general by working through this book, trying out various Linux distributions by
    running them in VMs on your computer (see [Chapter 1](chapter1.xhtml)), and playing
    with Linux servers in the cloud (see [Chapter 4](chapter4.xhtml)).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用WSL外，你可能还想通过阅读本书，尝试在计算机上运行虚拟机来体验不同的Linux发行版（参见[第1章](chapter1.xhtml)），并在云端玩转Linux服务器（参见[第4章](chapter4.xhtml)），以此来更好地熟悉Linux。
