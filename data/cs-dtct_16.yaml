- en: —17—
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: —17—
- en: A Binary Search Tree Trap
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 一个二叉搜索树陷阱
- en: Less than a block from Cloaks and More, Frank spotted a woman tailing him. Even
    as irritation flashed through him, he had to admit that she was good. She kept
    to the other side of the road, always at least 30 feet back. More often than not,
    she relied on the reflections in the shop windows to watch him. And she wore a
    perfectly nondescript traveling cloak—a shade of forest green sported by over
    half the people on the street.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 离Cloaks and More不到一个街区的地方，弗兰克发现有个女人在跟踪他。尽管心中涌上了烦躁，他不得不承认她的确很厉害。她始终保持在街道另一侧，保持至少30英尺的距离。她更多的时候是依靠商店窗户的反射来观察他。而且她穿了一件毫无特色的旅行斗篷——一种森林绿的颜色，街上的一半人都穿着类似的颜色。
- en: Frank stopped abruptly, dropped to one knee, and pretended to tie his shoe.
    It was the second oldest technique for identifying a tail, the first being to
    dash madly in a random direction and see who followed. Although arguably less
    effective than a mad dash, the fake-shoe-tying routine had the benefit of subtlety
    and, more importantly, involved no running.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克突然停下，单膝跪地，假装在系鞋带。这是识别尾随者的第二老方法，第一种是疯狂地朝一个随机方向冲去，看看谁跟着。尽管可以说这种假装系鞋带的方式比疯跑略显低效，但它的好处在于隐蔽，最重要的是，不需要奔跑。
- en: The tail continued on past, stopping about 10 feet ahead to examine a stack
    of cabbages through a particularly well-polished shop window.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 尾随者继续向前走，停在约10英尺远的地方，停下来通过一面特别光亮的商店窗户仔细观察一堆卷心菜。
- en: Frank stood and started back in the other direction. After half a block, he
    crossed to her side of the street, ignoring the angry shouts from a donkey cart
    driver, and started down a small alley. Once off the main road, he turned around
    and waited.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克站起身，开始朝另一个方向走。走了半个街区后，他穿过街道到她那一侧，忽视了马车司机愤怒的喊声，进入了一条小巷。一旦离开了主街，他转身停下了脚步，等待着。
- en: The tail almost ran into him as she hurried around the corner.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 尾随者几乎撞上了他，她匆忙绕过拐角。
- en: “Hi,” said Frank. “Why are you following me?” He tried for a conversational,
    nonchalant tone—something he couldn’t pull off even under normal circumstances.
    It was at best a growl, though he did manage to avoid shouting.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: “嗨，”弗兰克说道，“你为什么跟着我？”他尽力让自己的语气听起来像是在闲聊，冷淡自然——即使在正常情况下他也做不到这一点。结果最多也不过是低吼，但他成功避免了大喊大叫。
- en: Professional spies often devote considerable time to planning how they will
    react if discovered. They develop a portfolio of complex backstories for a range
    of scenarios, explaining away everything from following someone to being discovered
    in the royal palace with a listening device and a fake turtle. They dream of smooth
    recoveries and effortless lies. However, things rarely go so well in reality,
    and gasps of surprise are actually quite common. In this case, Frank had even
    been hoping for a moment of panic to exploit.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 职业间谍通常会花费相当多的时间来计划如果被发现时该如何反应。他们为各种情况制定复杂的背景故事，解释从跟踪某人到在皇宫里被发现并携带窃听设备和假海龟的所有情节。他们梦想着平稳的收场和轻松的谎言。然而，现实中很少如此顺利，惊讶的喘息反而是相当常见的。在这个案例中，弗兰克甚至曾希望能抓住一瞬间的恐慌来加以利用。
- en: True to form, however, the tail remained professional. There was no panic. There
    was no gasp of surprise. The only indication that anything had gone wrong was
    the briefest flash of anger in her eyes right before she flung down a smoke bomb
    and vanished.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，正如预料的那样，尾随者依然保持专业。没有慌乱，也没有惊讶的喘息声。唯一表明出了问题的迹象是她眼中一闪而过的愤怒，紧接着她丢下一颗烟雾弹，消失在空气中。
- en: Even without the smoke bomb, the spy would have been too fast for Frank. By
    the time he grabbed for her, he could hear her footsteps pounding down the street.
    He cursed and plunged through the smoke after her.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 即使没有烟雾弹，间谍也足够快，弗兰克根本追不上。等他伸手去抓她时，他已经听到她的脚步声在街道上回响。他咒骂一声，扑进烟雾中追了上去。
- en: Within half a block, Frank had resigned himself to yet another depth-first search.
    He had chased enough petty thieves through the city to know how it would go. The
    spy would likely turn off the main road soon, hoping to get out of sight. It wasn’t
    a bad strategy in general, but it wouldn’t work here. This part of the city had
    few side streets, and most of them were dead ends.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 半个街区之内，弗兰克已决定接受另一次深度优先搜索。他追赶过足够多的小偷，知道情况会如何发展。间谍很可能很快会离开主路，试图消失在人群中。这个策略在大多数情况下并不差，但在这里行不通。这个城市的这一部分几乎没有旁道，而且大多数都是死胡同。
- en: As he ran, he visualized the streets as a graph, with the intersections and
    dead ends as nodes where he would have to make decisions and the roads in between
    as the graph’s edges—paths that got him from one decision point to another.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当他奔跑时，他将街道想象成一个图，交叉口和死胡同是节点，他需要在这些地方做出决定，街道之间的路则是图的边——将他从一个决策点带到另一个的路径。
- en: '![image](../images/f0137-01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0137-01.jpg)'
- en: Doing a quick calculation, he figured he had time to explore maybe five or six
    side streets before he fell too far behind and the trail went cold. Unfortunately,
    that was just one of the risks of using depth-first search for a chase.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 经过快速计算，他认为自己有时间探索五六条小街道，直到落得太远，线索消失。 不幸的是，这就是用深度优先搜索追踪时的风险之一。
- en: The first two streets proved to be a waste of time. The closest thing he found
    to criminal activity was a pack of kids covering the wall with graffiti. Using
    a charred stick, they had written “Team recursion” and “Recursion 4eva.” He continued
    his search.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 前两条街道证明是浪费时间。他所能发现的最接近犯罪活动的，是一群孩子在墙上涂鸦。 他们用一根烧焦的木棍写下了“团队递归”和“递归4eva”。 他继续搜寻。
- en: A few more dead ends later, Frank was contemplating giving up when he spotted
    a trail of footprints in the mud leading to an open sewer grate. He leaned against
    the wall and caught his breath. This had to be her escape route.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 几次碰壁之后，弗兰克正在考虑放弃，这时他发现了泥地上一个通往开放排水井盖的脚印。 他靠在墙上，喘了口气。这一定是她的逃生路线。
- en: Frank peered into the dark hole but couldn’t see anything. He lowered himself
    through the sewer grate and dropped onto a wooden platform. He crouched low, making
    himself as small a target as possible, and scanned the dark room. The platform
    was bolted to a rough stone wall, overlooking a cavernous room that extended at
    least 50 feet down. The only light streamed in through the opening above, shining
    down like a giant spotlight on the distant floor. As he watched, the spy streaked
    through the oval of light and ran toward the opposite wall. She was well ahead
    of him now.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克窥视着黑暗的洞口，但什么也看不见。 他把自己放进排水井盖，落在一个木平台上。 他低下身，尽可能地让自己变小，扫描着黑暗的房间。 平台固定在一面粗糙的石墙上，俯瞰着一个至少50英尺深的宽阔房间。
    唯一的光线从上方的开口射入，像一个巨大的聚光灯照亮远处的地面。 当他观察时，那个间谍快速穿过了光圈，朝着对面墙跑去。 现在她已经远远领先于他。
- en: Frank surveyed his options. There were other platforms below him, about 20 feet
    apart and connected by iron ladders. When he noticed the small brass tag embedded
    in the floor, he swore vigorously. He was standing at the top of a binary search
    ladder.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克打量着周围的选择。 他脚下有其他平台，相隔约20英尺，通过铁梯相连。 当他注意到地板上嵌着一个小铜牌时，他气愤地咒骂了一声。 他站在一座二叉搜索梯子的顶部。
- en: '![image](../images/f0138-01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0138-01.jpg)'
- en: Binary search ladders were originally designed by Alena Branche, an eccentric
    art gallery owner, as a way to organize paintings. They were effectively giant
    binary search trees—data structures designed to allow efficient searches. The
    structure is organized like a giant upside-down tree, with a single platform at
    the top, known technically as the *root node*. Branching down from each platform
    is a maximum of two ladders, each of which leads to a different *child node*—another
    platform one level below. The entire structure branches and branches as it descends,
    offering a variety of paths.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 二叉搜索梯子最初由一个古怪的艺术画廊老板阿莱娜·布兰奇设计，用来组织画作。 它们实际上是巨大的二叉搜索树——一种旨在实现高效搜索的数据结构。 该结构像一个倒置的大树，顶部有一个单一平台，技术上称为*根节点*。
    每个平台下面最多有两条梯子，分别通向不同的*子节点*——一个位于下一层的另一个平台。 整个结构逐渐分支，提供了多条路径。
- en: 'A fanatic about the tiniest details, Alena had originally used this structure
    to organize paintings by the number of grass blades depicted. She enforced a simple
    organizational scheme: when standing on any platform, you were guaranteed that
    all paintings below the left ladder (in the left *subtree*) would contain fewer
    blades of grass than the current platform’s picture. And all paintings below the
    right ladder (in the right *subtree*) would contain more. By starting at the top,
    you could even choose your path down so as to find a painting with a particular
    number of grass blades.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对细节狂热的阿莱娜最初使用这一结构来按画作中描绘的草叶数量来组织画作。她实施了一种简单的组织方案：站在任何平台上，你可以保证所有位于左侧梯子下方（在左*子树*中的画作）都比当前平台的画作含有更少的草叶。而所有位于右侧梯子下方（在右*子树*中的画作）则含有更多的草叶。从顶部开始，你甚至可以选择向下的路径，以便找到一幅具有特定草叶数量的画作。
- en: '![image](../images/f0139-01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0139-01.jpg)'
- en: Unfortunately, these kinds of binary search ladders never really caught on in
    the art world, due to both their excessive size and the need for constant climbing,
    but they were quickly adopted and adapted by the criminal world. Binary search
    ladder traps, the dangerous implementation of Alena’s creation, had been developed
    by junior wizard Katia Ladderfell while she was working for the Vinettees. Instead
    of paintings, Katia placed a single numeric tag on each platform and created a
    numeric password that would allow safe passage through the tree. When designing
    a tree and placing the tags, she maintained the binary search tree property—the
    values in any node’s left subtree were always less than at the node itself, and
    the values in the right subtree were always greater. Only one path through this
    new weaponized binary search tree was safe, and that was the path that led to
    the password value at the bottom-most node. If you knew the password, you could
    descend the tree as though performing a search for that value. At each level,
    you could compare the password’s value to the value on the current platform and
    choose the left or right ladder accordingly. Thus, the Vinettees’ thugs were required
    to memorize only a single password instead of a series of ladder choices. This
    simplicity was essential given the quality of the organization’s help.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，这种二叉搜索梯子在艺术界并未真正流行起来，原因既在于它们的过于庞大，又在于需要不断攀爬，但它们很快被犯罪世界所采纳并改编。二叉搜索梯子陷阱，阿莱娜创作的这一危险实现，是由年轻巫师卡蒂娅·拉德费尔（Katia
    Ladderfell）在为维内提家族工作时开发的。与画作不同，卡蒂娅在每个平台上放置了一个单一的数字标签，并创建了一个数字密码，允许安全通过这棵树。在设计这棵树并放置标签时，她保持了二叉搜索树的特性——任何节点的左子树中的值总是小于节点本身的值，右子树中的值总是大于节点本身的值。通过这棵新型的武器化二叉搜索树，只有一条路径是安全的，那就是通向最底层节点密码值的路径。如果你知道密码，就可以像执行该值的搜索一样下降树。每一层，你可以将密码的值与当前平台上的值进行比较，然后选择左侧或右侧梯子。因此，维内提家族的打手们只需要记住一个密码，而不需要记住一系列的梯子选择。考虑到这个组织成员的素质，这种简单性至关重要。
- en: If you didn’t know the password and chose a wrong ladder, you triggered sometimes
    deadly and sometimes just emotionally scarring traps. Typical dangers included
    cursed ladders, poisonous spiders, falling rocks, dart guns, swinging blades,
    and in some cases magical insults—where intruders would be demoralized by five
    levels of progressively nasty observations on the state of their appearance, odor,
    or general intelligence.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不知道密码并选择了错误的梯子，你会触发有时致命、有时只是情感上令人创伤的陷阱。典型的危险包括被诅咒的梯子、有毒的蜘蛛、落石、飞镖枪、摆动的刀片，以及在某些情况下的魔法侮辱——入侵者会因为五层逐渐恶化的侮辱性言辞而感到沮丧，这些言辞针对的是他们的外貌、气味或智力水平。
- en: The last time Frank had faced one of the Vinettees’ binary search ladders, a
    snitch had given him the password—the number 10\. This one number allowed Frank
    to sneak into the hideout undetected and catch three of the Vinettees by surprise.
    Only Rebecca had escaped.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 上一次弗兰克面对维内提家族的二叉搜索梯子时，一个告密者给了他密码——数字10。这个数字让弗兰克能够悄悄进入藏匿处，出其不意地抓住了三名维内提成员。只有丽贝卡逃脱了。
- en: If only he knew the password to this trap, he might still have a chance of catching
    the spy.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果他知道这个陷阱的密码，他或许还有机会抓住那个间谍。
- en: A series of ideas flickered through Frank’s mind in quick succession. First,
    why wouldn’t the Vinettees reuse passwords? Their thugs tended to be rather dim
    individuals. Frank doubted they could remember more than a few numbers. Second,
    there weren’t really any evil wizards around anymore, so this binary search ladder
    trap must have been constructed years ago. After the wizard Exponentious’s failed
    attempt to bring down the kingdom, the lesser evil wizards had either reformed
    or gone into hiding. In fact, Katia Ladderfell herself had fled town to start
    a coconut farm. Finally, Frank was extremely high up and his knees were starting
    to feel weak.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一连串的想法迅速在弗兰克的脑海中闪现。首先，为什么维内特家族的人不重用密码？他们的爪牙通常是些愚笨的人。弗兰克怀疑他们根本记不住几个数字。其次，现在几乎没有恶魔巫师了，所以这个二分查找梯子陷阱肯定是多年前建造的。在巫师Exponentious失败图谋推翻王国之后，次等的恶魔巫师们要么已经改邪归正，要么隐匿了起来。事实上，卡蒂亚·拉德菲尔自己已经逃离小镇去开设椰子农场了。最后，弗兰克所在的位置非常高，他的膝盖开始感到虚弱。
- en: 'Frank eyed the tag on the root node platform on which he stood: 50\. If he
    was correct and the Vinettees had reused the password, he needed to search down
    the ladders for 10\. Since 10 is less than 50, he needed to go down the left subtree.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克瞥了一眼他站立的根节点平台上的标签：50。如果他没错，而且维内特家族确实重用了密码，那么他需要沿梯子往下查找10。由于10小于50，他需要走下左侧子树。
- en: '![image](../images/f0140-01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0140-01.jpg)'
- en: Mumbling a string of preemptive curses, Frank moved toward the left-hand ladder
    and started down. The journey proved gratifyingly uneventful. No spiders. No swinging
    blades. Not even a single insult.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一边低声咒骂，弗兰克朝左边的梯子走去并开始下行。整个过程令人满意地毫无波折。没有蜘蛛。没有摆动的刀片。甚至没有一句侮辱。
- en: '![image](../images/f0141-01.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0141-01.jpg)'
- en: On the next platform, Frank found a tag labeled 5\. Since 10 is greater than
    5, he knew the path was to the right this time. He jogged to the right-hand ladder,
    growing in confidence. It often paid to trust in others’ incompetence.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个平台上，弗兰克发现了一个标签，标记为5。由于10大于5，他知道这次应该走右边的路径。他跑向右侧的梯子，信心越来越足。相信他人的无能往往是有回报的。
- en: '![image](../images/f0141-02.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0141-02.jpg)'
- en: The next platform sat one level, and 20 feet, above the ground. Frank noted
    that the tag read 25 and immediately went left.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个平台位于地面上方一层，约20英尺的高度。弗兰克注意到标签上写着25，便立即转向左侧。
- en: He had descended halfway before he realized something was wrong. He heard a
    soft screech as the rung above his left foot started to move. He glanced down
    just in time to see it hit the bar below, crunching his left foot between the
    rungs. He shouted in surprise. As he watched, the rung slid up and then down again,
    sending a fresh jolt of pain through his foot. The ladder was literally biting
    him. He could even feel ridges of metallic teeth start to poke out along each
    rung.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 他下到一半时才意识到有什么不对劲。他听到一声轻微的尖叫声，左脚上方的梯级开始移动。他低头看去，恰好看到梯级撞到下面的横杆，导致他的左脚被梯级夹住。他惊叫了一声。当他观察时，梯级又滑上去，然后又滑了下来，给他的脚带来了一阵新的剧痛。梯子简直是在咬他。他甚至能感觉到金属齿条开始从每个梯级间突出来。
- en: Making a split-second decision, he jumped clear before the ladder could start
    chomping at his fingers. He landed awkwardly on his twice-bitten foot, staggering
    a few steps before easing himself to the floor.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 他在一瞬间做出了决定，迅速跳开，避开了梯子在他手指上咬下的一刻。他笨拙地落在了自己被咬过两次的脚上，踉跄了几步后才缓缓地跌坐在地上。
- en: He swivelled around and glared at the tag at the bottom of the ladder. The tag
    clearly read 10\. He had taken the correct path. Then he noticed a small chalk
    notation on the floor nearby. It read “Do not use. Password changed.” Frank promptly
    resumed his swearing.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 他转过身，怒视着梯子底部的标签。标签上清楚地写着10。他走对了路。然后，他注意到附近地面上的一小段粉笔标记。上面写着“不要使用，密码已更改。”弗兰克立刻恢复了咒骂。
- en: '![image](../images/f0142-01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0142-01.jpg)'
- en: '**POLICE ALGORITHMS 101: BINARY SEARCH TREES**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**警察算法101：二分查找树**'
- en: '***Excerpt from Professor Drecker’s Lecture***'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '***德雷克教授讲座摘录***'
- en: 'A binary search tree is a data structure that organizes data similarly to how
    it would be accessed in an ordinary binary search. Each tree node stores a single
    value and can have up to two child nodes: a left child and a right child. The
    tree nodes are organized by the values they contain. The values of the data in
    the left node (and all its children) will be lower than the value of the current
    node. Similarly, the values of the data in the right node (and all its children)
    will be greater than the value of the current node.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 二叉搜索树是一种数据结构，它以类似于普通二叉搜索的方式组织数据。每个树节点存储一个值，并可以有最多两个子节点：左子节点和右子节点。树节点按照它们包含的值进行组织。左节点（以及所有其子节点）中的数据值将小于当前节点的值。类似地，右节点（以及所有其子节点）中的数据值将大于当前节点的值。
- en: '![image](../images/f0143-01.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0143-01.jpg)'
- en: 'We can efficiently search the binary search tree by walking down from the topmost
    node—also called the *root node*. At each step, we determine whether to explore
    the left or right subtree by comparing the value at the current node with the
    target value. If the target value is less than the current value, the search progresses
    to the left:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过从最上层的节点开始向下遍历来高效地搜索二叉搜索树——这个节点也被称为*根节点*。在每一步中，我们通过比较当前节点的值与目标值，决定是探索左子树还是右子树。如果目标值小于当前值，则搜索会向左进行：
- en: '![image](../images/f0143-02.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0143-02.jpg)'
- en: 'If the target value is greater than the current value, the search progresses
    to the right:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果目标值大于当前值，则搜索会向右进行：
- en: '![image](../images/f0144-01.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0144-01.jpg)'
- en: The search ends when either the target value is found or we reach a dead end.
    In the latter case, we can definitively say that the target value is not in the
    tree.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当目标值被找到或我们到达死胡同时，搜索结束。在后者情况下，我们可以断言目标值不在树中。
- en: We say that the binary search tree is perfectly balanced if every node in the
    tree has the same number of nodes in its left subtree as in its right subtree.
    In this case, the depth of the tree grows by one each time we approximately double
    the number of nodes in the tree.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们说，当二叉搜索树是完全平衡的时，每个节点的左子树和右子树中包含的节点数量相同。在这种情况下，每次我们大致将树中的节点数量加倍时，树的深度会增加一。
- en: The computational cost of a search is proportional to the depth of the target
    value in the tree. The deeper the tree, the more comparisons we have to perform.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索的计算成本与目标值在树中的深度成正比。树越深，我们需要进行的比较就越多。
