["```\n ---\n apiVersion: \"acid.zalan.do/v1\"\n kind: postgresql\n metadata:\n➊ name: todo-db\n spec:\n   teamId: todo\n   volume:\n     size: 1Gi\n     storageClass: longhorn\n➋ numberOfInstances: 3\n   users:\n  ➌ todo:\n     - superuser\n     - createdb\n   databases:\n  ➍ todo: todo\n   postgresql:\n     version: \"14\"\n```", "```\nroot@host01:~# kubectl -n todo get sts\nNAME      READY   AGE\ntodo-db   3/3     6m1s\n```", "```\nroot@host01:~# kubectl -n todo get pvc\nNAME               STATUS   ... CAPACITY   ACCESS MODES   STORAGECLASS   AGE\npgdata-todo-db-0   Bound    ... 1Gi        RWO            longhorn       10m\npgdata-todo-db-1   Bound    ... 1Gi        RWO            longhorn       8m44s\npgdata-todo-db-2   Bound    ... 1Gi        RWO            longhorn       7m23s\n```", "```\nroot@host01:~# kubectl -n todo get secret\nNAME                                                    TYPE    DATA   AGE\n...\ntodo.todo-db.credentials.postgresql.acid.zalan.do       Opaque  2      8m30s\n```", "```\nroot@host01:~# kubectl -n todo get svc todo-db\nNAME      TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\ntodo-db   ClusterIP   10.110.227.34   <none>        5432/TCP   59m\n```", "```\n---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: todo\n  labels:\n    app: todo\n```", "```\nspec:\n  replicas: 3\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 30%\n      maxSurge: 50%\n```", "```\n  selector:\n    matchLabels:\n      app: todo\n  template:\n metadata:\n      labels:\n        app: todo\n```", "```\n    spec:\n      containers:\n      - name: todo\n        image: bookofkubernetes/todo:stable\n```", "```\n        env:\n        - name: NODE_ENV\n          value: production\n        - name: PREFIX\n          value: /\n        - name: PGHOST\n          value: todo-db\n        - name: PGDATABASE\n          value: todo\n        - name: PGUSER\n          valueFrom:\n            secretKeyRef:\n              name: todo.todo-db.credentials.postgresql.acid.zalan.do\n              key: username\n              optional: false\n        - name: PGPASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: todo.todo-db.credentials.postgresql.acid.zalan.do\n              key: password\n              optional: false\n```", "```\n        resources:\n          requests:\n            memory: \"128Mi\"\n            cpu: \"50m\"\n          limits:\n            memory: \"128Mi\"\n            cpu: \"50m\"\n        ports:\n        - name: web\n          containerPort: 5000\n```", "```\n---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: todo\n  labels:\n    app: todo\nspec:\n scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: todo\n  minReplicas: 3\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 50\n```", "```\n---\nkind: Service\napiVersion: v1\nmetadata:\n  name: todo\n  labels:\n    app: todo\nspec:\n  type: NodePort\n  selector:\n    app: todo\n  ports:\n  - name: web\n    protocol: TCP\n    port: 5000\n    nodePort: 5000\n```", "```\nroot@host01:~# curl -v http://host01:5000/\n...\n< HTTP/1.1 200 OK\n< X-Powered-By: Express\n...\n<html lang=\"en\" data-framework=\"backbonejs\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Todo-Backend client</title>\n        <link rel=\"stylesheet\" href=\"css/vendor/todomvc-common.css\">\n        <link rel=\"stylesheet\" href=\"css/chooser.css\">\n    </head>\n...\n</html>\n```", "```\n#!/bin/bash\nconf=/etc/kubernetes/admin.conf\n...\ncurl --cacert $ca --cert $cert --key $key https://192.168.61.10:6443/metrics\n...\n```", "```\nroot@host01:~# /opt/api-server-metrics.sh\n...\n# TYPE rest_client_requests_total counter\nrest_client_requests_total{code=\"200\",host=\"[::1]:6443\",method=\"GET\"} 9051\nrest_client_requests_total{code=\"200\",host=\"[::1]:6443\",method=\"PATCH\"} 25\nrest_client_requests_total{code=\"200\",host=\"[::1]:6443\",method=\"PUT\"} 21\nrest_client_requests_total{code=\"201\",host=\"[::1]:6443\",method=\"POST\"} 179\nrest_client_requests_total{code=\"404\",host=\"[::1]:6443\",method=\"GET\"} 155\nrest_client_requests_total{code=\"404\",host=\"[::1]:6443\",method=\"PUT\"} 1\nrest_client_requests_total{code=\"409\",host=\"[::1]:6443\",method=\"POST\"} 5\nrest_client_requests_total{code=\"409\",host=\"[::1]:6443\",method=\"PUT\"} 62\nrest_client_requests_total{code=\"500\",host=\"[::1]:6443\",method=\"GET\"} 18\nrest_client_requests_total{code=\"500\",host=\"[::1]:6443\",method=\"PUT\"} 1\n...\n```", "```\nroot@host01:~# curl http://host01:5000/metrics/\n# HELP api_success Successful responses\n# TYPE api_success counter\napi_success{app=\"todo\"} 0\n\n# HELP api_failure Failed responses\n# TYPE api_failure counter\napi_failure{app=\"todo\"} 0\n...\n# HELP process_cpu_seconds_total Total user and system CPU time ...\n# TYPE process_cpu_seconds_total counter\nprocess_cpu_seconds_total{app=\"todo\"} 0.106392\n...\n```", "```\nroot@host01:~# /opt/install-kube-prometheus.sh\n...\n```", "```\nroot@host01:~# kubectl -n monitoring get pods\nNAME                                   READY   STATUS    RESTARTS   AGE\nalertmanager-main-0                    2/2     Running   0          14m\nalertmanager-main-1                    2/2     Running   0          14m\nalertmanager-main-2                    2/2     Running   0          14m\nblackbox-exporter-6b79c4588b-pgp5r     3/3     Running   0          15m\ngrafana-7fd69887fb-swjpl               1/1     Running   0          15m\nkube-state-metrics-55f67795cd-mkxqv    3/3     Running   0          15m\nnode-exporter-4bhhp                    2/2     Running   0          15m\nnode-exporter-8mc5l                    2/2     Running   0          15m\nnode-exporter-ncfd2                    2/2     Running   0          15m\nnode-exporter-qp7mg                    2/2     Running   0          15m\nnode-exporter-rtn2t                    2/2     Running   0          15m\nnode-exporter-tpg97                    2/2     Running   0          15m\nprometheus-adapter-85664b6b74-mglp4    1/1     Running   0          15m\nprometheus-adapter-85664b6b74-nj7hp    1/1     Running   0          15m\nprometheus-k8s-0                       2/2     Running   0          14m\nprometheus-k8s-1                       2/2     Running   0          14m\nprometheus-operator-6dc9f66cb7-jtrqd   2/2     Running   0          15m\n```", "```\nroot@host01:~# kubectl -n monitoring describe prometheus\nName:         k8s\nNamespace:    monitoring\n...\nAPI Version:  monitoring.coreos.com/v1\nKind:         Prometheus\n...\nSpec:\n...\n  Image:  quay.io/prometheus/prometheus:v2.32.1\n...\n  Service Account Name:  prometheus-k8s\n  Service Monitor Namespace Selector:\n  Service Monitor Selector:\n...\n```", "```\nroot@host01:~# kubectl -n monitoring get servicemonitor\nNAME                      AGE\nalertmanager-main         20m\nblackbox-exporter         20m\ncoredns                   20m\ngrafana                   20m\nkube-apiserver            20m\nkube-controller-manager   20m\nkube-scheduler            20m\nkube-state-metrics        20m\nkubelet                   20m\nnode-exporter             20m\nprometheus-adapter        20m\nprometheus-k8s            20m\nprometheus-operator       20m\n```", "```\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n...\n  name: prometheus-k8s\nrules:\n  - apiGroups:\n    - \"\"\n    resources:\n    - services\n    - endpoints\n    - pods\n    verbs:\n    - get\n    - list\n    - watch\n...\n```", "```\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n...\n  name: prometheus-k8s\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: prometheus-k8s\nsubjects:\n  - kind: ServiceAccount\n    name: prometheus-k8s\n    namespace: monitoring\n```", "```\nroot@host01:~# kubectl -n todo apply -f /opt/rbac.yaml\nrole.rbac.authorization.k8s.io/prometheus-k8s created\nrolebinding.rbac.authorization.k8s.io/prometheus-k8s created\n```", "```\n---\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: todo\nspec:\n  selector:\n    matchLabels:\n      app: todo\n  endpoints:\n    - port: web\n```", "```\nroot@host01:~# kubectl -n todo apply -f /opt/svc-mon.yaml\nservicemonitor.monitoring.coreos.com/todo created\n```"]