["```\nCREATE TABLE customers (\n    customer_id text,\n `--snip--`\n);\n\nCREATE TABLE Customers (\n    customer_id text,\n `--snip--`\n);\n```", "```\nCREATE TABLE \"Customers\" (\n    customer_id serial,\n `--snip--`\n);\n```", "```\nSELECT * FROM \"Customers\";\n```", "```\ndriver_id   st  first_name  last_name\n----------  --  ----------  ---------\n10302019    NY  Patrick     Corbin\n10302019    FL  Howard      Kendrick\n```", "```\nid  first_name  last_name\n--  ----------  ---------\n 1  Patrick     Corbin\n 2  Howard      Kendrick\n 3  David       Martinez\n```", "```\n2911d8a8-6dea-4a46-af23-d64175a08237\n```", "```\nCREATE TABLE natural_key_example (\n    1 license_id text CONSTRAINT license_key PRIMARY KEY,\n    first_name text,\n    last_name text\n);\n\n2 DROP TABLE natural_key_example;\n\nCREATE TABLE natural_key_example (\n    license_id text,\n    first_name text,\n    last_name text,\n    3 CONSTRAINT license_key PRIMARY KEY (license_id)\n);\n```", "```\nlicense_id text PRIMARY KEY\n```", "```\nINSERT INTO natural_key_example (license_id, first_name, last_name)\nVALUES ('T229901', 'Gem', 'Godfrey');\n\nINSERT INTO natural_key_example (license_id, first_name, last_name)\nVALUES ('T229901', 'John', 'Mitchell');\n```", "```\nERROR:  duplicate key value violates unique constraint \"license_key\"\nDETAIL:  Key (license_id)=(T229901) already exists.\n```", "```\nCREATE TABLE natural_key_composite_example (\n    student_id text,\n    school_day date,\n    present boolean,\n    CONSTRAINT student_key PRIMARY KEY (student_id, school_day)\n);\n```", "```\nINSERT INTO natural_key_composite_example (student_id, school_day, present)\nVALUES(775, '2022-01-22', 'Y');\n\nINSERT INTO natural_key_composite_example (student_id, school_day, present)\nVALUES(775, '2022-01-23', 'Y');\n\nINSERT INTO natural_key_composite_example (student_id, school_day, present)\nVALUES(775, '2022-01-23', 'N');\n```", "```\nERROR:  duplicate key value violates unique constraint \"student_key\"\nDETAIL:  Key (student_id, school_day)=(775, 2022-01-23) already exists.\n```", "```\nCREATE TABLE surrogate_key_example (\n  1 order_number bigint GENERATED ALWAYS AS IDENTITY,\n    product_name text,\n    order_time timestamp with time zone,\n  2 CONSTRAINT order_number_key PRIMARY KEY (order_number)\n);\n\n3 INSERT INTO surrogate_key_example (product_name, order_time)\nVALUES ('Beachball Polish', '2020-03-15 09:21-07'),\n       ('Wrinkle De-Atomizer', '2017-05-22 14:00-07'),\n       ('Flux Capacitor', '1985-10-26 01:18:00-07');\n\nSELECT * FROM surrogate_key_example;\n```", "```\norder_number    product_name           order_time\n------------ ------------------- ----------------------\n           1 Beachball Polish    2020-03-15 09:21:00-07\n           2 Wrinkle De-Atomizer 2017-05-22 14:00:00-07\n           3 Flux Capacitor      1985-10-26 01:18:00-07\n```", "```\nINSERT INTO surrogate_key_example\n1 OVERRIDING SYSTEM VALUE\nVALUES (4, 'Chicken Coop', '2021-09-03 10:33-07');\n\n2 ALTER TABLE surrogate_key_example ALTER COLUMN order_number RESTART WITH 5;\n\n3 INSERT INTO surrogate_key_example (product_name, order_time)\nVALUES ('Aloe Plant', '2020-03-15 10:09-07');\n```", "```\norder_number    product_name           order_time\n------------ ------------------- ----------------------\n           1 Beachball Polish    2020-03-15 09:21:00-07\n           2 Wrinkle De-Atomizer 2017-05-22 14:00:00-07\n           3 Flux Capacitor      1985-10-26 01:18:00-07\n           4 Chicken Coop        2021-09-03 10:33:00-07\n           5 Aloe Plant          2020-03-15 10:09:00-07\n```", "```\nCREATE TABLE licenses (\n    license_id text,\n    first_name text,\n    last_name text,\n    1 CONSTRAINT licenses_key PRIMARY KEY (license_id)\n);\n\nCREATE TABLE registrations (\n    registration_id text,\n    registration_date timestamp with time zone,\n    2 license_id text REFERENCES licenses (license_id),\n    CONSTRAINT registration_key PRIMARY KEY (registration_id, license_id)\n);\n\n3 INSERT INTO licenses (license_id, first_name, last_name)\nVALUES ('T229901', 'Steve', 'Rothery');\n\n4 INSERT INTO registrations (registration_id, registration_date, license_id)\nVALUES ('A203391', '2022-03-17', 'T229901');\n\n5 INSERT INTO registrations (registration_id, registration_date, license_id)\nVALUES ('A75772', '2022-03-17', 'T000001');\n```", "```\nERROR:  insert or update on table \"registrations\" violates foreign key constraint \"registrations_license_id_fkey\"\nDETAIL:  Key (license_id)=(T000001) is not present in table \"licenses\".\n```", "```\nCREATE TABLE registrations (\n    registration_id text,\n    registration_date date,\n    license_id text REFERENCES licenses (license_id) ON DELETE CASCADE,\n    CONSTRAINT registration_key PRIMARY KEY (registration_id, license_id)\n);\n```", "```\nCREATE TABLE check_constraint_example (\n    user_id bigint GENERATED ALWAYS AS IDENTITY,\n    user_role text,\n    salary numeric(10,2),\n    CONSTRAINT user_id_key PRIMARY KEY (user_id),\n    1 CONSTRAINT check_role_in_list CHECK (user_role IN('Admin', 'Staff')),\n    2 CONSTRAINT check_salary_not_below_zero CHECK (salary >= 0)\n);\n```", "```\nCONSTRAINT grad_check CHECK (credits >= 120 AND tuition = 'Paid')\n```", "```\nCONSTRAINT sale_check CHECK (sale_price < retail_price)\n```", "```\nCREATE TABLE unique_constraint_example (\n    contact_id bigint GENERATED ALWAYS AS IDENTITY,\n    first_name text,\n    last_name text,\n    email text,\n    CONSTRAINT contact_id_key PRIMARY KEY (contact_id),\n    1 CONSTRAINT email_unique UNIQUE (email)\n);\n\nINSERT INTO unique_constraint_example (first_name, last_name, email)\nVALUES ('Samantha', 'Lee', 'slee@example.org');\n\nINSERT INTO unique_constraint_example (first_name, last_name, email)\nVALUES ('Betty', 'Diaz', 'bdiaz@example.org');\n\nINSERT INTO unique_constraint_example (first_name, last_name, email)\n2 VALUES ('Sasha', 'Lee', 'slee@example.org');\n```", "```\nERROR:  duplicate key value violates unique constraint \"email_unique\"\nDETAIL:  Key (email)=(slee@example.org) already exists.\n```", "```\nCREATE TABLE not_null_example (\n    student_id bigint GENERATED ALWAYS AS IDENTITY,\n    first_name text NOT NULL,\n    last_name text NOT NULL,\n    CONSTRAINT student_id_key PRIMARY KEY (student_id)\n);\n```", "```\nALTER TABLE `table_name` DROP CONSTRAINT `constraint_name`;\n```", "```\nALTER TABLE `table_name` ALTER COLUMN `column_name` DROP NOT NULL;\n```", "```\nALTER TABLE not_null_example DROP CONSTRAINT student_id_key;\nALTER TABLE not_null_example ADD CONSTRAINT student_id_key PRIMARY KEY (student_id);\nALTER TABLE not_null_example ALTER COLUMN first_name DROP NOT NULL;\nALTER TABLE not_null_example ALTER COLUMN first_name SET NOT NULL;\n```", "```\nCREATE TABLE new_york_addresses (\n    longitude numeric(9,6),\n    latitude numeric(9,6),\n    street_number text,\n    street text,\n    unit text,\n    postcode text,\n    id integer CONSTRAINT new_york_key PRIMARY KEY\n);\n\nCOPY new_york_addresses\nFROM '*C:\\YourDirectory\\*city_of_new_york.csv'\nWITH (FORMAT CSV, HEADER);\n```", "```\nEXPLAIN ANALYZE SELECT * FROM new_york_addresses\nWHERE street = 'BROADWAY';\n\nEXPLAIN ANALYZE SELECT * FROM new_york_addresses\nWHERE street = '52 STREET';\n\nEXPLAIN ANALYZE SELECT * FROM new_york_addresses\nWHERE street = 'ZWICKY AVENUE';\n```", "```\nGather (cost=1000.00..15184.08 rows=3103 width=46) (actual time=9.000..388.448 rows=3336 loops=1)\n  Workers Planned: 2\n  Workers Launched: 2\n  ->  Parallel Seq Scan on new_york_addresses  (cost=0.00..13873.78 1\n     rows=1293 width=46) (actual time=2.362..367.258 rows=1112 loops=3)\n        Filter: (street = 'BROADWAY'::text)\n        Rows Removed by Filter: 312346\nPlanning Time: 0.401 ms\nExecution Time: 389.232 ms 2\n```", "```\nCREATE INDEX street_idx ON new_york_addresses (street);\n```", "```\nBitmap Heap Scan on new_york_addresses  (cost=76.47..6389.39 rows=3103 width=46) (actual time=1.355..4.802 rows=3336 loops=1)\n  Recheck Cond: (street = 'BROADWAY'::text)\n  Heap Blocks: exact=2157\n  ->  Bitmap Index Scan on street_idx  (cost=0.00..75.70 rows=3103 width=0) 1\n      (actual time=0.950..0.950 rows=3336 loops=1)\n        Index Cond: (street = 'BROADWAY'::text)\nPlanning Time: 0.109 ms\nExecution Time: 5.113 ms 2\n```"]