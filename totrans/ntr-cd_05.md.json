["```\nfunction draw() {\n  for (let particle of particles) {\n    particle.run();\n  }\n}\n```", "```\n  particles = particles.filter(particle => !particle.isDead());\n```", "```\n\nlet particles = [];\n\nfunction setup() {\n  createCanvas(640, 240);\n}\n\nfunction draw() {\n  particles.push(new Particle());\n\n  let length = particles.length - 1;\n  for (let i = length; i >= 0; i--) {\n    let particles = particles[i];\n    particle.run();\n    if (particle.isDead()) {\n      particles.splice(i, 1);\n    }\n  }\n}\n```", "```\nclass Emitter {\n  constructor() {\n    this.particles = [];\n  }\n\n  addParticle() {\n    this.particles.push(new Particle());\n  }\n\n  run() {\n    let length = this.particles.length - 1;\n    for (let i = length; i >= 0; i--) {\n      let particle = this.particles[i];\n      particle.run();\n      if (particle.isDead()) {\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n}\n```", "```\nlet emitter;\n\nfunction setup() {\n  createCanvas(640, 240);\n  emitter = new Emitter(width / 2, 20);\n}\n function draw() {\n  background(255);\n  emitter.addParticle();  \n  emitter.run();\n}\n```", "```\nfunction mousePressed() {\n  emitters.push(new Emitter(mouseX, mouseY));\n}\n```", "```\nclass HappyConfetti {\n}\n\nclass FunConfetti {\n}\n\nclass WackyConfetti {\n}\n```", "```\n constructor() {\n   this.happyParticles = [];\n   this.funParticles = [];\n   this.wackyParticles = [];\n }\n```", "```\nclass Dog {\n  constructor() {\n    this.age = 0;\n  }\n\n  eat() {\n    print(\"Yum!\");\n  }\n sleep() {\n    print(\"Zzzzzz\");\n  }\n\n  bark() {\n    print(\"WOOF\");\n  }\n}\n```", "```\nclass Particle {\n  constructor(x, y) {\n    this.acceleration = createVector(0, 0);\n    this.velocity = createVector(random(-1, 1), random(-2, 0));\n    this.position = createVector(x, y);\n    this.lifespan = 255.0;\n  }\n run() {\n    this.update();\n    this.show();\n  }\n\n  update() {\n    this.velocity.add(this.acceleration);\n    this.position.add(this.velocity);\n    this.lifespan -= 2.0;\n    this.acceleration.mult(0);\n  }\n\n  applyForce(force) {\n    this.acceleration.add(force);\n  }\n\n  isDead() {\n    return (this.lifespan < 0);\n  }\n\n  show() {\n    fill(0, this.lifespan);\n    circle(this.position.x, this.position.y, 8);\n  }\n}\n```", "```\n    let angle = map(this.position.x, 0, width, 0, TWO_PI * 2);\n```", "```\nfunction draw() {\n  background(255);\n\n  /* Apply a force to all particles? */\n\n  emitter.addParticle();\n  emitter.run();\n}\n```", "```\n applyForce(force) {\n    for (let particle of this.particles) {\n      particle.applyForce(force);\n    }\n  }\n```", "```\napplyForce(force) {\n  for (let particle of this.particles) {\n    particle.applyForce(force);\n  }\n}\n```", "```\napplyRepeller(repeller) {\n  for (let particle of this.particles) {\n    let force = repeller.repel(particle);\n    particle.applyForce(force);\n  }\n}\n```", "```\nlet img;\n```", "```\n    let vx = randomGaussian(0, 0.3);\n    let vy = randomGaussian(-1, 0.3);\n    this.velocity = createVector(vx, vy);\n```", "```\n  addParticle(amount = 1) {\n    for (let i = 0; i < amount; i++) {         \n      this.particles.push(new Particle(this.origin.x, this.origin.y));\n    }\n  }\n```"]