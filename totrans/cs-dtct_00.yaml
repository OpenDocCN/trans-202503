- en: —1—
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Search Problems
  prefs: []
  type: TYPE_NORMAL
- en: The door opened without a knock—only the hinge’s creak announced the visitor.
    Frank started for his crossbow, but pulled up short. If the Vinettees were coming
    for him, they would have knocked—with an axe. Whoever was coming through the door
    must want to talk. Frank reached for his mug instead and downed the remainder
    of his now-cold coffee.
  prefs: []
  type: TYPE_NORMAL
- en: “Captain Donovan,” he said as the man entered. “What brings you to this fine
    neighborhood? I thought you didn’t venture below Fifteenth Street anymore.”
  prefs: []
  type: TYPE_NORMAL
- en: “It’s been a while,” the captain said simply. “How’ve you been, Frank?”
  prefs: []
  type: TYPE_NORMAL
- en: “Spectacular,” Frank answered dryly, eyeing the captain as he walked a slow
    circuit around the room.
  prefs: []
  type: TYPE_NORMAL
- en: Donovan scanned Frank’s shabby office. His red officer’s cloak swished gently
    behind him. “How’s the private eye game?”
  prefs: []
  type: TYPE_NORMAL
- en: “It pays the bills,” Frank lied.
  prefs: []
  type: TYPE_NORMAL
- en: The captain nodded. He paused for a moment, then moved to the bookshelf and
    browsed the contents.
  prefs: []
  type: TYPE_NORMAL
- en: “So is this a social visit then?” Frank said. “Should I be asking after Marlene
    and the kids?”
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0002-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: “They’re quite well,” replied Donovan without turning around. “Marlene’s turtle-grooming
    business is doing well these days. Bill joined the force last year. And Veronica
    is an accountant, just about the last thing we would have—”
  prefs: []
  type: TYPE_NORMAL
- en: “I wasn’t actually asking,” Frank interrupted.
  prefs: []
  type: TYPE_NORMAL
- en: 'The captain shrugged. He pulled a book from the shelf and leafed through the
    pages. Frank craned his neck to see the cover—*Police Academy Yearbook: Class
    XXI*.'
  prefs: []
  type: TYPE_NORMAL
- en: “What do you want, Captain?” Frank demanded.
  prefs: []
  type: TYPE_NORMAL
- en: The captain met Frank’s stare at last. “I need your help, Frank,” he said.
  prefs: []
  type: TYPE_NORMAL
- en: Frank straightened. In the five years since Frank had left the force, the captain
    had paid him exactly two visits, and both had been to warn him to stay away from
    active cases. Threats were all Frank had come to expect, but now it seemed the
    captain had a special kind of problem—perhaps the kind that would mean an end
    to Frank’s delinquent rent.
  prefs: []
  type: TYPE_NORMAL
- en: “I’m not on the force anymore,” said Frank airily. “Why don’t you get one of
    your trusted detectives to do it?”
  prefs: []
  type: TYPE_NORMAL
- en: “I need someone outside of the force,” said the captain. “Drop the act, Frank.
    If you don’t know what it means for me to be here, you’re not the person I need.”
  prefs: []
  type: TYPE_NORMAL
- en: Frank chuckled. “A leak? On *your* force?”
  prefs: []
  type: TYPE_NORMAL
- en: “Worse. Last night someone broke into the station’s record room and stole over
    500 scrolls.”
  prefs: []
  type: TYPE_NORMAL
- en: “What were they after?” asked Frank. Without thinking, he leaned forward in
    his chair and reached for a fresh scroll and a quill. The movement came automatically
    to him, like drinking coffee or avoiding stairs.
  prefs: []
  type: TYPE_NORMAL
- en: “I don’t know,” said Donovan. “There was no pattern. They stole whole shelves
    of documents, everything from property disputes to expense reports. They took
    all the ledgers we keep on assassins, celebrities, private investigators, notaries
    . . . They even took both boxes of Farmer Swinson’s noise complaints. But other
    shelves were completely untouched. We counted at least 512 missing documents.”
  prefs: []
  type: TYPE_NORMAL
- en: “Maybe it was one of Farmer Swinson’s neighbors,” joked Frank. “They must’ve
    heard that after a mere hundred complaints, an intern will come to your house
    and give you a stern lecture.”
  prefs: []
  type: TYPE_NORMAL
- en: Captain Donovan didn’t bother to reply. He just stared pityingly until Frank
    cleared his throat and broke the silence. “So you want me to find these documents?”
  prefs: []
  type: TYPE_NORMAL
- en: The captain shook his head. “I want you to find the thieves. We have backups
    of the documents. I want to know what information they needed and what they plan
    to do with it.”
  prefs: []
  type: TYPE_NORMAL
- en: “A search problem,” Frank mused. During his time on the force, his two specialties
    had been search problems and annoying the captain.
  prefs: []
  type: TYPE_NORMAL
- en: “Does the king know?” Frank asked.
  prefs: []
  type: TYPE_NORMAL
- en: “I briefed him yesterday,” said the captain, a hint of annoyance in his voice.
    “Ever since the trouble with that crackpot wizard, the king insists on daily briefings
    on everything.” Two years ago, a megalomaniac wizard named Exponentious had tried
    to destroy the entire kingdom. Since then King Fredrick had personally instituted
    sweeping upgrades to the kingdom’s security, with over 300 new security regulations,
    at least 5 of which dealt with the storage of official documents in government
    buildings under 10 stories tall.
  prefs: []
  type: TYPE_NORMAL
- en: “I can’t blame him though,” Donovan grumbled. “It was a close call. If it hadn’t
    been for Princess Ann, who knows where the kingdom would be now.”
  prefs: []
  type: TYPE_NORMAL
- en: Frank nodded silently. Exponentious had attacked the algorithmic foundations
    of the kingdom by cursing the scholars who studied those algorithms. Within months
    he had rendered even simple operations inefficient, and the kingdom had started
    to grind to a halt. Evidence of the damage had been everywhere; even in his local
    bakery, Frank had himself witnessed panic break out as customers discovered they
    couldn’t remember how to arrange themselves into a line.
  prefs: []
  type: TYPE_NORMAL
- en: '“The king has, of course, taken a personal interest in the matter,” the captain
    continued irritably. “He wants all the details: Who’s assigned to the case? Which
    search algorithms are we using? Have we scoured all of the neighboring buildings?”'
  prefs: []
  type: TYPE_NORMAL
- en: Frank stifled a chuckle and mulled over the proposition. A consulting gig for
    the capital’s police force would be good money. He glanced down at his feet, where
    the tip of a toe peeked through a hole in his shoe. “If I’m going to consult,”
    he said, “I’m going to do things my way.”
  prefs: []
  type: TYPE_NORMAL
- en: This was the moment of truth. Five years ago he’d been kicked off the force
    for *doing things his way*. The captain was a man of rules and order. Frank’s
    last use of heuristics had been the final straw—Captain Donovan had claimed his
    badge that very afternoon. But, then again, doing things his own way had always
    gotten Frank results.
  prefs: []
  type: TYPE_NORMAL
- en: “I figured as much,” the captain responded at last. He pulled a thin folder
    from under his trench cloak and dropped it on Frank’s desk.
  prefs: []
  type: TYPE_NORMAL
- en: “I’ll be in touch,” Donovan said. Then, without ceremony, he turned and left
    the office.
  prefs: []
  type: TYPE_NORMAL
- en: _____________________
  prefs: []
  type: TYPE_NORMAL
- en: Three hours and twelve mugs of coffee later, Frank sat hunched over his desk
    and thumbed through the thin folder of information for the seventh time. The words
    jumped and swayed in the flickering candlelight, but didn’t provide any new insights.
  prefs: []
  type: TYPE_NORMAL
- en: There wasn’t a lot to go on. The captain had given him a list of missing documents
    and the duty roster for the night in question, but nothing more.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, with an exaggerated sigh, Frank grabbed a piece of parchment and started
    making notes.
  prefs: []
  type: TYPE_NORMAL
- en: The first step in any search problem is determining what it is you hope to find—the
    *target*, as his old instructor in Police Algorithms 101 called it. Frank had
    learned that lesson early; he’d been tasked in his first week as an officer with
    finding the duke’s prize stallion, and he’d proudly returned to the station that
    same afternoon with a 42-pound horned turtle. Apparently, the impressive reptile
    wasn’t good enough. A good search algorithm means nothing if you’re looking for
    the wrong thing.
  prefs: []
  type: TYPE_NORMAL
- en: In this case it wasn’t a *what*, but rather a *who*. The captain had been right
    about that point. Once the thieves had the documents, it didn’t matter if the
    police got them back. The thieves already had whatever information they needed.
  prefs: []
  type: TYPE_NORMAL
- en: 'So his target was simple: the person or persons who stole the documents.'
  prefs: []
  type: TYPE_NORMAL
- en: The second step in any search problem is identifying the *search space*. What
    are you searching? During Frank’s daily search for his keys, the search space
    was every flat surface in his office. And when Frank wanted to find a criminal,
    his search space was every person in the vicinity of the capital.
  prefs: []
  type: TYPE_NORMAL
- en: Frank sat back and rubbed his eyes. It was a big search problem, finding a specific
    criminal in a city of criminals. But he had seen worse.
  prefs: []
  type: TYPE_NORMAL
- en: Now that he had defined the problem, he could start on an algorithm. A linear
    search was out; he couldn’t afford to question everyone in the city. He could
    also rule out many of the other, fancier algorithms he had studied in the academy.
    For a problem like this, he would have to go back to his toolkit of basic search
    algorithms—the private investigator’s most trusted friends.
  prefs: []
  type: TYPE_NORMAL
- en: Frank made a note on the parchment. He had the target to find, he knew the search
    space, and he had his algorithm. It was time to get to work.
  prefs: []
  type: TYPE_NORMAL
- en: '**POLICE ALGORITHMS 101: SEARCH PROBLEMS**'
  prefs: []
  type: TYPE_NORMAL
- en: '***Excerpt from Professor Drecker’s Lecture***'
  prefs: []
  type: TYPE_NORMAL
- en: In this class we’ll discuss several different algorithms (and related data structures)
    for solving search problems. A *search problem* is defined as any problem that
    requires us to find a specific value (or target) within a space of possible values
    (a search space).
  prefs: []
  type: TYPE_NORMAL
- en: Those of you who graduate and go on to become police officers will find yourselves
    facing problems that fall into this category every single day. This broad definition
    of a search problem encompasses a lot of different computational problems, from
    searching the police log for a specific entry to finding rooms within a hideout
    to finding all arrest records that match some criteria. This class won’t be exhaustive—that
    would take years—but I’ll give you some simple examples of basic and important
    algorithms as we go.
  prefs: []
  type: TYPE_NORMAL
- en: 'The algorithms described in this class will have three common components:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Target** The piece of data you’re searching for. The target can be either
    a specific value or a criterion that signifies the successful completion of a
    search.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Search space** The set of all possibilities to test for the target. For example,
    the search space could be a list of values or all the nodes in a graph. A single
    possibility within the search space is called a *state*.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Search algorithm** The set of specific steps or instructions for conducting
    the search.'
  prefs: []
  type: TYPE_NORMAL
- en: Some search problems will have additional requirements or complexities, which
    we’ll touch upon as we go over different algorithms.
  prefs: []
  type: TYPE_NORMAL
