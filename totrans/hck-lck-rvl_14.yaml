- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">10</samp> <samp class="SANS_Dogma_OT_Bold_B_11">BLUELEAKS
    EXPLORER</samp>
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">10</samp> <samp class="SANS_Dogma_OT_Bold_B_11">BLUELEAKS
    EXPLORER</samp>
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: In some ways, I spent the summer of 2020 like many other Americans. I mostly
    stayed at home, avoiding COVID-19 like the plague it is; I spent far too many
    hours doom-scrolling through social media feeds; and occasionally I put on an
    N95 mask, grabbed some hand sanitizer, and hit the streets to protest the police
    killings of George Floyd, Breonna Taylor, and countless other Black Americans.
    But I also spent much of that summer writing code that would make it easier for
    me and other journalists at The Intercept to make sense of the sprawling BlueLeaks
    dataset.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些方面，我度过了2020年的夏天，就像许多其他美国人一样。我大多数时间待在家里，像瘟疫一样避开COVID-19；我花了太多时间在社交媒体上滑动，看着各种悲观信息；偶尔我会戴上N95口罩，拿些免洗手消毒液，走上街头，抗议警察杀害乔治·弗洛伊德、布雷安娜·泰勒以及无数其他黑人美国人。但我也花了很多时间编写代码，以便我和《拦截者》杂志的其他记者能更轻松地理解庞大的BlueLeaks数据集。
- en: My efforts culminated in a piece of open source software, which I released as
    part of this book, called BlueLeaks Explorer. BlueLeaks Explorer is a web application
    that allows you to examine the BlueLeaks data almost as if you could log in as
    an admin on the actual websites that were hacked. BlueLeaks Explorer is a little
    like a large Python script that makes all of the CSVs in BlueLeaks easier to work
    with, like the scripts you wrote in [Chapter 9](chapter9.xhtml).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我的努力最终结出了一个开源软件，它作为本书的一部分发布，名为BlueLeaks Explorer。BlueLeaks Explorer是一个Web应用程序，可以让你几乎像在被黑客攻击的实际网站上以管理员身份登录一样，查看BlueLeaks数据。BlueLeaks
    Explorer有点像一个大型Python脚本，它使BlueLeaks中的所有CSV文件更容易处理，就像你在[第9章](chapter9.xhtml)中编写的脚本一样。
- en: In this chapter, you’ll continue to investigate the BlueLeaks dataset, this
    time using BlueLeaks Explorer. I’ll give you a thorough overview of the software,
    including how to set it up on your own computer and how to start researching BlueLeaks
    with it. I’ll conclude the chapter by explaining the technology behind the app
    and pointing you to its Python source code on GitHub. If you ever need to develop
    an app to investigate a specific dataset, you can use this chapter as inspiration.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你将继续调查BlueLeaks数据集，这一次使用BlueLeaks Explorer。我将为你提供该软件的详细概述，包括如何在自己的电脑上安装它，以及如何使用它开始研究BlueLeaks。我将在章末解释该应用程序背后的技术，并将其Python源代码指向GitHub。如果你以后需要开发一个应用程序来调查特定的数据集，你可以以本章为灵感。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Undiscovered Revelations in BlueLeaks</samp>
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">BlueLeaks中的未被发现的揭露</samp>
- en: As discussed in the previous chapter, my BlueLeaks investigation focused on
    the data from the *ncric* folder. Even within that folder, I concentrated on the
    final two weeks of data, focusing on police surveillance of the Black Lives Matter
    movement. Other journalists dug into different parts of the dataset, investigating
    fusion centers in places like Maine and Texas.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前一章所讨论的，我的BlueLeaks调查集中在*ncric*文件夹中的数据。即使在这个文件夹内，我也专注于最后两周的数据，重点关注警方对“黑人的命也是命”运动的监视。其他记者则深入挖掘数据集中的其他部分，调查如缅因州和德克萨斯州的融合中心。
- en: Notably, journalist Nathan Bernard broke several stories for the local news-and-arts
    magazine *Mainer* based on BlueLeaks documents from the Maine Information and
    Analysis Center (MIAC), Maine’s fusion center. These included stories about MIAC
    disseminating unverified rumors, sometimes based on satirical social media posts,
    that were first spread by far-right activists on social media and then included
    in FBI and DHS intelligence reports, similar to the FBI warning discussed in [Chapter
    9](chapter9.xhtml) about a George Soros−funded group hiring “professional anarchists.”
    “This bogus intel gives cops a dangerously distorted sense of what to expect during
    demonstrations by portraying peaceful protesters as highly trained, paid and organized
    criminal actors intent on causing mayhem,” Bernard wrote in one article.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，记者内森·伯纳德根据来自缅因州信息与分析中心（MIAC）的BlueLeaks文件，为当地的新闻与艺术杂志*Mainer*报道了几个故事。这些故事包括MIAC传播未经验证的谣言，有时这些谣言基于极右翼活动分子在社交媒体上发布的讽刺性帖子，然后被纳入FBI和国土安全部的情报报告中，这与[第9章](chapter9.xhtml)中讨论的FBI警告类似，内容是关于乔治·索罗斯资助的一个组织雇佣“职业无政府主义者”。伯纳德在一篇文章中写道：“这种虚假的情报让警察对示威活动有了一个危险扭曲的认识，将和平抗议者描绘成高度训练、有酬劳和组织的犯罪分子，意图制造混乱。”
- en: Additionally, John Anderson and Brant Bingamon wrote a series of articles for
    the *Austin Chronicle*, a local paper in Austin, Texas, based on BlueLeaks documents
    from the Austin Regional Intelligence Center (ARIC), Austin’s fusion center. Anderson
    wrote about ARIC’s practice of monitoring for and distributing lists of local
    Black Lives Matter protests (just like NCRIC did during the summer of 2020) and
    about several SARs posted to ARIC, including one where the “suspicious activity”
    was someone mailing a package of toys to Lebanon. Bingamon wrote stories revealing
    that ARIC had monitored local leftist groups in Austin, and that some ARIC courses
    for law enforcement teach junk science—including a technique for detecting deception
    called Scientific Content Analysis (SCAN), which a 2016 study concluded has “no
    empirical support” ([*https://<wbr>www<wbr>.ncbi<wbr>.nlm<wbr>.nih<wbr>.gov<wbr>/pmc<wbr>/articles<wbr>/PMC4766305<wbr>/*](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4766305/)).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，约翰·安德森（John Anderson）和布兰特·宾加蒙（Brant Bingamon）为《奥斯汀纪事报》撰写了一系列文章，这是德克萨斯州奥斯汀市的一家地方报纸，基于奥斯汀地区情报中心（ARIC）从
    BlueLeaks 文件中得到的文件。安德森写道，ARIC 实践监控并分发当地黑人生命要紧运动（就像 NCRIC 在2020年夏天所做的一样），并详细介绍了
    ARIC 发布的几份可疑活动报告，其中包括一个人邮寄玩具包裹到黎巴嫩的案例。宾加蒙撰写的文章揭示了 ARIC 监控了奥斯汀的当地左翼团体，并指出 ARIC
    面向执法人员的一些课程教授了垃圾科学——包括一种称为科学内容分析（SCAN）的检测欺骗技术，一项2016年的研究得出结论称其“没有经验证据支持”（[*https://<wbr>www<wbr>.ncbi<wbr>.nlm<wbr>.nih<wbr>.gov<wbr>/pmc<wbr>/articles<wbr>/PMC4766305<wbr>/*](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4766305/)）。
- en: MIAC, ARIC, and NCRIC are some of the BlueLeaks sites that have received the
    most interest, but many more haven’t gotten any attention at all. By the end of
    this chapter, you’ll have all the tools you need to do a deep dive on any BlueLeaks
    folder you choose and search for newsworthy revelations. To start, you’ll install
    BlueLeaks Explorer in Exercise 10-1.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: MIAC、ARIC 和 NCRIC 是一些引起最大关注的 BlueLeaks 站点，但还有许多其他站点没有引起任何关注。到本章结束时，你将拥有所有必要的工具，可以深入研究你选择的任何
    BlueLeaks 文件夹，并搜索有新闻价值的发现。首先，你将在练习 10-1 中安装 BlueLeaks Explorer。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 10-1: Install BlueLeaks Explorer</samp>'
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 10-1：安装 BlueLeaks Explorer</samp>
- en: You can find BlueLeaks Explorer’s source code at [*https://<wbr>github<wbr>.com<wbr>/micahflee<wbr>/blueleaks<wbr>-explorer*](https://github.com/micahflee/blueleaks-explorer).
    That GitHub page includes instructions on how to get it up and running locally
    on your computer, but I’ll explain all the steps in this exercise as well.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [*https://<wbr>github<wbr>.com<wbr>/micahflee<wbr>/blueleaks<wbr>-explorer*](https://github.com/micahflee/blueleaks-explorer)
    找到 BlueLeaks Explorer 的源代码。该 GitHub 页面包含了在本地计算机上运行它的详细说明，但我也会在这个练习中解释所有步骤。
- en: The BlueLeaks Explorer app is packaged as a Docker image and published to Docker
    Hub at [*https://<wbr>hub<wbr>.docker<wbr>.com<wbr>/r<wbr>/micahflee<wbr>/blueleaks<wbr>-explorer*](https://hub.docker.com/r/micahflee/blueleaks-explorer).
    You’ll run it locally on your computer using Docker and point it at your BlueLeaks
    folder. Before you begin, make sure you’ve completed the exercises in [Chapter
    5](chapter5.xhtml) so that you understand how to use Docker and Docker Compose.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: BlueLeaks Explorer 应用程序以 Docker 镜像的形式打包，并发布到 Docker Hub 的 [*https://<wbr>hub<wbr>.docker<wbr>.com<wbr>/r<wbr>/micahflee<wbr>/blueleaks<wbr>-explorer*](https://hub.docker.com/r/micahflee/blueleaks-explorer)。你将在本地计算机上使用
    Docker 运行它，并指向你的 BlueLeaks 文件夹。在开始之前，请确保你已经完成了[第5章](chapter5.xhtml)中的练习，以便了解如何使用
    Docker 和 Docker Compose。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Create the Docker
    Compose Configuration File</samp>
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">创建 Docker Compose
    配置文件</samp>
- en: Start by creating a new folder called *blueleaks-explorer*. This folder will
    require about 5GB of disk space. Create a new file in that folder called *docker-compose.yaml*
    and open it in your text editor.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 首先创建一个名为*blueleaks-explorer*的新文件夹。该文件夹需要约5GB的磁盘空间。在该文件夹中创建一个名为*docker-compose.yaml*的新文件，并在文本编辑器中打开它。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*If you’re using Windows, I recommend that you follow this chapter in Ubuntu
    with WSL rather than PowerShell (see [Appendix A](appendixA.xhtml) for information
    about performance issues you might encounter when using Docker in Windows). You
    can open an Ubuntu terminal, create the* blueleaks-explorer *folder in your Linux
    filesystem using* <samp class="SANS_TheSansMonoCd_W7Bold_Italic_BI_11">mkdir blueleaks-explorer</samp>*,
    and edit the* docker-compose.yaml *file in VS Code by running* <samp class="SANS_TheSansMonoCd_W7Bold_Italic_BI_11">code
    docker-compose.yaml</samp>*, all from Ubuntu.*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你使用的是Windows，建议你在Ubuntu的WSL环境中按照本章操作，而不是使用PowerShell（有关在Windows中使用Docker时可能遇到的性能问题，请参见[附录A](appendixA.xhtml)）。你可以打开一个Ubuntu终端，使用*<samp
    class="SANS_TheSansMonoCd_W7Bold_Italic_BI_11">mkdir blueleaks-explorer</samp>*在你的Linux文件系统中创建*blueleaks-explorer*文件夹，然后通过运行*<samp
    class="SANS_TheSansMonoCd_W7Bold_Italic_BI_11">code docker-compose.yaml</samp>*在VS
    Code中编辑*docker-compose.yaml*文件，所有这些都可以在Ubuntu中完成。*'
- en: 'Here’s how I created the folder and made the *docker-compose.yaml* file on
    my Mac. You can do the same in Linux or Windows with WSL:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在我的Mac上创建文件夹并制作*docker-compose.yaml*文件的方法。你也可以在Linux或Windows的WSL上做相同的事情：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Add the following code to your *docker-compose.yaml* file, replacing <samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">/Volumes/datasets/BlueLeaks-extracted</samp>
    with the path that maps to */data /blueleaks* in your own *BlueLeaks-extracted*
    folder:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码添加到你的*docker-compose.yaml*文件中，将<samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">/Volumes/datasets/BlueLeaks-extracted</samp>替换为映射到你自己*BlueLeaks-extracted*文件夹中*/data/blueleaks*路径的内容：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This file describes the settings for the BlueLeaks Explorer Docker container.
    The container is called <samp class="SANS_TheSansMonoCd_W5Regular_11">app</samp>
    and is set to use the latest version of the <samp class="SANS_TheSansMonoCd_W5Regular_11">micahflee/blueleaks-explorer</samp>
    Docker container image, which you’ll download from Docker Hub. The <samp class="SANS_TheSansMonoCd_W5Regular_11">ports</samp>
    section maps port 8000 on your computer to port 80 inside the container. This
    means that once the BlueLeaks Explorer app is running, you can load it on your
    browser at *http://<wbr>localhost:8000*. The <samp class="SANS_TheSansMonoCd_W5Regular_11">volumes</samp>
    section maps folders on your machine to folders inside the container.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件描述了BlueLeaks Explorer Docker容器的设置。容器名为<samp class="SANS_TheSansMonoCd_W5Regular_11">app</samp>，并设置为使用最新版本的<samp
    class="SANS_TheSansMonoCd_W5Regular_11">micahflee/blueleaks-explorer</samp> Docker容器镜像，该镜像你将从Docker
    Hub下载。<samp class="SANS_TheSansMonoCd_W5Regular_11">ports</samp>部分将你电脑上的8000端口映射到容器内的80端口。这意味着，一旦BlueLeaks
    Explorer应用程序运行，你就可以在浏览器中加载*http://<wbr>localhost:8000*。<samp class="SANS_TheSansMonoCd_W5Regular_11">volumes</samp>部分将你机器上的文件夹映射到容器内的文件夹。
- en: Save the *docker-compose.yaml* file.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 保存*docker-compose.yaml*文件。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Bring Up the Containers</samp>
  id: totrans-24
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">启动容器</samp>
- en: 'In a terminal window, change to the *blueleaks-explorer* folder that you just
    made, then run this command to download the BlueLeaks Explorer Docker image and
    start the server:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端窗口中，切换到你刚才创建的*blueleaks-explorer*文件夹，然后运行以下命令以下载BlueLeaks Explorer Docker镜像并启动服务器：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The first time you run the command, the output should end with something like
    this:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次运行该命令时，输出应该以类似这样的信息结束：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: At this point, BlueLeaks Explorer is running on your computer, but it hasn’t
    been initialized. If you load *http://<wbr>localhost:8000* in your browser, you
    should get an error telling you as much.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，BlueLeaks Explorer已经在你的计算机上运行，但尚未初始化。如果你在浏览器中加载*http://<wbr>localhost:8000*，你应该会看到一个错误，告诉你这一点。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Initialize the Databases</samp>
  id: totrans-30
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">初始化数据库</samp>
- en: The first time you use BlueLeaks Explorer, you must run a script to convert
    the many CSV files in BlueLeaks into SQLite databases. SQLite is lightweight SQL
    database software that can store a whole database in a single file (you’ll learn
    more about SQL databases in [Chapter 12](chapter12.xhtml)). All of the CSVs in
    BlueLeaks were originally formatted as SQL tables, which the hacker exported into
    CSV format. Converting these CSV files back into database tables makes it easier
    for the Python code that runs BlueLeaks Explorer to query for and access items
    within those tables, then display them in the web app. For example, when searching
    for SARs that contain a specific string, BlueLeaks Explorer might search all the
    BriefSummary fields in the SARs table, trying to find reports that mention that
    string.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次使用 BlueLeaks Explorer 时，您必须运行一个脚本，将 BlueLeaks 中的许多 CSV 文件转换为 SQLite 数据库。SQLite
    是轻量级的 SQL 数据库软件，可以将整个数据库存储在一个文件中（您将在[第 12 章](chapter12.xhtml)中学习更多关于 SQL 数据库的内容）。BlueLeaks
    中的所有 CSV 文件最初是作为 SQL 表格格式化的，黑客将其导出为 CSV 格式。将这些 CSV 文件转换回数据库表格，使得运行 BlueLeaks Explorer
    的 Python 代码更容易查询并访问表格中的数据项，然后在 web 应用程序中显示它们。例如，当搜索包含特定字符串的 SAR 时，BlueLeaks Explorer
    可能会搜索 SAR 表格中的所有 BriefSummary 字段，尝试找到提到该字符串的报告。
- en: 'To initialize BlueLeaks Explorer, open a separate terminal window, change to
    your *blueleaks-explorer* folder, and run this command:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要初始化 BlueLeaks Explorer，打开一个单独的终端窗口，切换到您的 *blueleaks-explorer* 文件夹，并运行以下命令：
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will run <samp class="SANS_TheSansMonoCd_W5Regular_11">poetry run python
    ./initialize.py</samp> in your already running <samp class="SANS_TheSansMonoCd_W5Regular_11">app</samp>
    container. The *initialize.py* Python script will take a while to finish running,
    since it’s transforming thousands of CSV files into hundreds of SQLite databases;
    it took my computer about 50 minutes.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您已运行的 <samp class="SANS_TheSansMonoCd_W5Regular_11">app</samp> 容器中运行 <samp
    class="SANS_TheSansMonoCd_W5Regular_11">poetry run python ./initialize.py</samp>。由于它正在将成千上万的
    CSV 文件转换为数百个 SQLite 数据库，*initialize.py* Python 脚本需要一些时间才能完成；我的计算机大约用了 50 分钟。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*If you’re curious about the details of what the initialization script is doing,
    take a look at the source code. BlueLeaks Explorer is open source, meaning you
    can check out the* initialize.py *file in the project’s git repository at* [https://github.com/micahflee/blueleaks-explorer/blob/main/src/initialize.py](https://github.com/micahflee/blueleaks-explorer/blob/main/src/initialize.py)*.*'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果您对初始化脚本正在做什么感到好奇，可以查看源代码。BlueLeaks Explorer 是开源的，这意味着您可以查看项目 Git 仓库中的* initialize.py
    *文件，网址是* [https://github.com/micahflee/blueleaks-explorer/blob/main/src/initialize.py](https://github.com/micahflee/blueleaks-explorer/blob/main/src/initialize.py)*。*'
- en: When *initialize.py* finishes running, refresh *http://<wbr>localhost:8000*
    in your web browser to pull up BlueLeaks Explorer, as shown in [Figure 10-1](#fig10-1).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当 *initialize.py* 运行完成后，刷新您的浏览器中 *http://<wbr>localhost:8000* 以加载 BlueLeaks
    Explorer，如[图 10-1](#fig10-1)所示。
- en: '![A screenshot of the BlueLeaks Explorer app, loaded in a web browser at http://localhost:8080\.
    The app says, “Choose a site to explore,” and the only site listed is “Northern
    California Regional Intelligence Center.”](Images/Figure10-1.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![BlueLeaks Explorer 应用程序的截图，在 http://localhost:8080 中加载。该应用程序显示“选择一个站点进行探索”，并且唯一列出的站点是“北加州区域情报中心”。](Images/Figure10-1.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-1: The freshly installed
    BlueLeaks Explorer app</samp>'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">图 10-1: 新安装的 BlueLeaks Explorer
    应用程序</samp>'
- en: 'Each fusion center is unique: it’s run by different people, has different priorities
    and goals, and keeps track of different data. To make the best use of BlueLeaks
    Explorer, you need to spend some time understanding how the data in your target
    fusion center is laid out. I call this layout the *structure* of a BlueLeaks site.
    This refers to which tables contain useful information (some tables are empty
    or contain irrelevant data about the website layout), which columns in those tables
    are useful, and how the various tables are related.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 每个融合中心都是独一无二的：它由不同的人运营，具有不同的优先级和目标，并跟踪不同的数据。为了充分利用 BlueLeaks Explorer，您需要花些时间了解目标融合中心中的数据布局。我将这种布局称为
    BlueLeaks 站点的*结构*。这指的是哪些表格包含有用的信息（某些表格为空或包含与网站布局无关的数据），这些表格中哪些列是有用的，以及各种表格之间是如何关联的。
- en: 'The top of every page in BlueLeaks Explorer includes three links, as shown
    in [Figure 10-1](#fig10-1): Explore Data, Define Structure, and Browse Files.
    It would be difficult to automatically figure out the structure of a BlueLeaks
    site, in part because it’s subjective—individual users determine what information
    is interesting or useless for their purposes. Therefore, the Define Structure
    page brings you to an editor where you can define your own structures for BlueLeaks
    sites. Under Explore Data, you can find structures you’ve already created for
    individual BlueLeaks sites. Since you’re running BlueLeaks Explorer locally on
    your own computer, you’ll have access only to structures you’ve made yourself
    or that are included in the BlueLeaks Explorer Docker image. Finally, Browse Files
    lists all of the files in BlueLeaks, enabling you to link to specific documents
    or embed images; it’s simply a web interface to the raw BlueLeaks data, as if
    you were looking at it in a file browser.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 BlueLeaks Explorer 页面顶部都有三个链接，如 [图 10-1](#fig10-1) 所示：探索数据、定义结构和浏览文件。自动推测
    BlueLeaks 网站的结构是困难的，部分原因是它是主观的—不同的用户会根据自己的需要判断哪些信息有用或无用。因此，定义结构页面将带你进入一个编辑器，在这里你可以为
    BlueLeaks 网站定义自己的结构。在“探索数据”下，你可以找到你已经为单个 BlueLeaks 网站创建的结构。由于你是在自己的计算机上本地运行 BlueLeaks
    Explorer，你将只能访问你自己创建的结构或包含在 BlueLeaks Explorer Docker 镜像中的结构。最后，“浏览文件”列出了 BlueLeaks
    中的所有文件，使你可以链接到特定文档或嵌入图像；它仅仅是 BlueLeaks 数据的一个网页界面，就像你在文件浏览器中查看它一样。
- en: '> <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '> <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>'
- en: '*If you set up a VPN to hide your IP address from fusion center websites as
    described in “Covering Your Tracks with a VPN Service” in [Chapter 9](chapter9.xhtml),
    you may want to use a VPN for this chapter as well. Though BlueLeaks Explorer
    is hosted on your own computer, viewing content within it might load images from
    fusion center sites, and clicking links could bring you to those sites.*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你按照 [第9章](chapter9.xhtml) 中“通过 VPN 服务掩盖你的踪迹”的描述，设置了 VPN 来隐藏你的 IP 地址，建议你在本章中也使用
    VPN。尽管 BlueLeaks Explorer 托管在你自己的计算机上，查看其中的内容可能会加载来自融合中心网站的图像，点击链接可能会将你带到这些网站。*'
- en: In the following section, you’ll begin by exploring the data for the NCRIC site
    using a structure that I’ve already created.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，你将开始使用我已经创建的结构探索 NCRIC 网站的数据。
- en: <samp class="SANS_Futura_Std_Bold_B_11">The Structure of NCRIC</samp>
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">NCRIC 结构</samp>
- en: BlueLeaks Explorer allows you to browse and search all of the tables in any
    BlueLeaks site that you have a structure for. To demonstrate the features of the
    app—including listing the tables in a BlueLeaks site, viewing and searching the
    data in those tables, viewing data from related tables, and viewing images and
    documents associated with rows of data—you’ll start by exploring the NCRIC data.
    This will help you understand how structures are constructed before you make your
    own.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: BlueLeaks Explorer 允许你浏览和搜索你拥有结构的任何 BlueLeaks 网站中的所有表格。为了演示该应用的功能—包括列出 BlueLeaks
    网站中的表格、查看和搜索这些表格中的数据、查看相关表格的数据、以及查看与数据行相关的图像和文档—你将从探索 NCRIC 数据开始。这将帮助你理解如何构建结构，在你创建自己的结构之前。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Exploring Tables
    and Relationships</samp>
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">探索表格和关系</samp>
- en: As directed in Exercise 10-1, make sure your BlueLeaks Explorer Docker container
    is running and load *http://<wbr>localhost:8000* in your browser. From the Explore
    Data section, click **Northern California Regional Intelligence Center**. [Figure
    10-2](#fig10-2) shows this page.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如练习 10-1 中所示，确保你的 BlueLeaks Explorer Docker 容器正在运行，并在浏览器中加载 *http://<wbr>localhost:8000*。在“探索数据”部分，点击
    **北加州区域情报中心**。[图 10-2](#fig10-2) 显示了这个页面。
- en: '![A screenshot of NCRIC data in BlueLeaks Explorer. It lists all of the useful
    tables—examples include 911Centers, AgencyNames, and EmailBuilder—and the number
    of rows in each table.](Images/Figure10-2.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![一张显示 BlueLeaks Explorer 中 NCRIC 数据的截图。它列出了所有有用的表格—例如 911Centers、AgencyNames
    和 EmailBuilder—以及每个表格中的行数。](Images/Figure10-2.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-2: Viewing the NCRIC
    tables in BlueLeaks Explorer</samp>'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 10-2：在 BlueLeaks Explorer
    中查看 NCRIC 表格</samp>
- en: Here, you can see a list of tables in the *ncric* folder, as well as the number
    of rows of data in each table. The EmailBuilder table has 5,213 rows, for example.
    I’ve hidden all of the tables that are empty or contain information I considered
    irrelevant so that they don’t show up here.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到*ncric*文件夹中的表格列表，以及每个表格中数据的行数。例如，EmailBuilder表格有5,213行。我已经隐藏了所有空表或我认为无关的信息表格，以便它们不会出现在这里。
- en: 'When I first defined the NCRIC structure, I started by exploring the data in
    each table, one at a time (I’ll explain how you can do this for other parts of
    BlueLeaks later in the chapter). I found that the following tables contained the
    most interesting and potentially newsworthy data:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当我第一次定义NCRIC结构时，我从逐个探索每个表格中的数据开始（稍后在本章中我会解释你如何对BlueLeaks的其他部分进行此操作）。我发现以下表格包含了最有趣且潜在的新闻价值数据：
- en: '**EmailBuilder** Contains all of the bulk email NCRIC sends out to its large
    list of local police and private industry partners'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**EmailBuilder** 包含NCRIC发送给其大量本地警察和私人行业合作伙伴的所有批量电子邮件。'
- en: '**EventBuilder** Describes events that NCRIC put on, complete with their descriptions,
    PDF flyers, and lists of who attended'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**EventBuilder** 描述了NCRIC主办的活动，包括活动描述、PDF传单和参加人员列表。'
- en: '**FormBuilder**<samp class="SANS_Portrait_Text_Heavy_B_227">(AA)</samp><samp
    class="SANS_Portrait_Text_Heavy_B_227">(AA)</samp>Contains a list of forms on
    NCRIC’s website for a variety of purposes, like submitting SARs, requesting technical
    help, or even registering for an account with the fusion center'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**FormBuilder**<samp class="SANS_Portrait_Text_Heavy_B_227">(AA)</samp><samp
    class="SANS_Portrait_Text_Heavy_B_227">(AA)</samp>包含NCRIC网站上用于各种目的的表单列表，比如提交SARs、请求技术帮助，甚至是注册融合中心账户。'
- en: '**Requests** Includes requests from local police for the fusion center’s assistance
    with tasks like monitoring social media and breaking into locked phones'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**Requests** 包含地方警察请求融合中心协助处理任务的请求，比如监控社交媒体和破解锁定的手机。'
- en: '**SARs** Contains suspicious activity reports, which, as you learned in the
    previous chapter, are files submitted to NCRIC in which people report behavior
    that they believe could be criminal or otherwise suspicious'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**SARs** 包含可疑活动报告，正如你在上一章中所学，这些是提交给NCRIC的文件，其中人们报告他们认为可能是犯罪或其他可疑行为的情况。'
- en: '**SurveyForm** Includes surveys that NCRIC requests from attendees of events
    it has hosted'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**SurveyForm** 包含NCRIC要求活动参与者填写的调查问卷。'
- en: Different tables within BlueLeaks relate to each other in various ways. For
    example, as you know from the previous chapter, many of the BlueLeaks sites include
    the tables Documents and DocumentCategory. Both of these tables contain a field
    called DocumentCategoryID. One row in the Documents table in the *ncric* folder,
    for instance, describes a document titled *FBI NSIR Tradecraft Alert Voter Suppression*.
    The DocFilename field contains the path of a PDF. The DocumentCategoryID is 167\.
    Looking at the row with that DocumentCategoryID in the DocumentCategory table,
    you can see that the CategoryName is Elections. Now you know that NCRIC put this
    document in the Elections category. In database-speak, two tables that are connected
    via a shared field have a *relationship*. The SurveyForm table, which lists surveys
    for attendees of NCRIC-hosted events to fill out, is also related to the Survey
    table, which includes the actual survey feedback.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: BlueLeaks中的不同表格以各种方式彼此关联。例如，正如你在上一章中所知，许多BlueLeaks网站包含“Documents”和“DocumentCategory”这两个表格。这两个表格都包含一个叫做DocumentCategoryID的字段。例如，在*ncric*文件夹中的Documents表格中的一行，描述了一份标题为*FBI
    NSIR Tradecraft Alert Voter Suppression*的文档。DocFilename字段包含PDF的路径。DocumentCategoryID是167。通过查看DocumentCategory表中具有该DocumentCategoryID的行，你可以看到CategoryName是“选举”。现在你知道NCRIC将这份文档放在了选举类别中。在数据库术语中，通过共享字段连接的两个表之间存在一个*关系*。SurveyForm表格列出了NCRIC主办活动的与会者需要填写的调查问卷，它也与Survey表格相关联，后者包含了实际的调查反馈。
- en: BlueLeaks Explorer makes it easy to quickly find related information within
    a BlueLeaks site. Click the Documents table from the list of tables shown in [Figure
    10-2](#fig10-2). You should see a list of documents, each on its own row in the
    Documents table. In the Search field, enter **Voter Suppression** to bring up
    the FBI NSIR Tradecraft Alert Voter Suppression document, shown in [Figure 10-3](#fig10-3).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: BlueLeaks Explorer使得在BlueLeaks网站中快速找到相关信息变得更加容易。从[图10-2](#fig10-2)中显示的表格列表中点击“Documents”表格。你应该会看到一份文档列表，每一份文档都位于Documents表格中的单独一行。在搜索框中输入**选民压制**以调出FBI
    NSIR Tradecraft Alert选民压制文档，如[图10-3](#fig10-3)所示。
- en: '![A screenshot showing the FBI NSIR Tradecraft Alert Voter Suppression document.
    The fields shown include DocTitle, DateEntered, CategoryName, and CategoryDescription.
    The record also includes a preview of the associated file, FBIVoter_Suppression_NSIR_final
    copy2.pdf.](Images/Figure10-3.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![显示FBI NSIR贸易技巧警告选民压制文件的截图。显示的字段包括DocTitle、DateEntered、CategoryName和CategoryDescription。记录还包括与该文件关联的预览图，FBIVoter_Suppression_NSIR_final
    copy2.pdf。](Images/Figure10-3.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-3: Viewing the FBI
    NSIR Tradecraft Alert Voter Suppression document in BlueLeaks Explorer</samp>'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图10-3：在BlueLeaks Explorer中查看FBI
    NSIR贸易技巧警告选民压制文件</samp>
- en: When you view a document row using the NCRIC structure I defined, BlueLeaks
    Explorer will show you a link to the file itself—in this case, a PDF. It also
    shows a preview of the file if it’s available (the path to the preview image is
    listed in the PreviewImage field), along with the document category—in this case,
    Elections.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用我定义的NCRIC结构查看文档行时，BlueLeaks Explorer将会显示该文件本身的链接——在这个例子中，是一个PDF文件。如果该文件有预览图，系统还会显示该文件的预览图（预览图片的路径列在PreviewImage字段中），以及文档类别——在这个例子中，是“选举”。
- en: If you click the filename link, the PDF will open. Dated October 16, 2018, the
    document warns, “The FBI assesses threat actors may use social media, namely Facebook
    and Twitter, to suppress voter turnout by posting disinformation on when and how
    to vote in the 2018 midterm election.” It points out examples of voter suppression
    tactics on social media from the 2016 election, such as a Spanish-language meme
    claiming that you can vote for Hillary Clinton by texting “Hillary” to a specific
    phone number—tricking voters into falsely believing they voted for Clinton.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击文件名链接，PDF文件将会打开。该文档日期为2018年10月16日，警告称：“FBI评估威胁行为者可能会利用社交媒体，特别是Facebook和Twitter，通过发布关于何时如何投票的虚假信息来压制选民投票率，尤其是在2018年中期选举中。”文档还指出了2016年选举中社交媒体上选民压制战术的例子，比如一个西班牙语的迷因称，选民可以通过给特定电话号码发送“希拉里”来投票给希拉里·克林顿——这种方式让选民误以为自己已经为克林顿投票。
- en: 'Next, click **Permalink** under the Elections category to get to the category
    itself. Your URL should now be *http://<wbr>localhost:8000<wbr>/ncric<wbr>/DocumentCategory<wbr>/167*,
    and from here you should see all 11 documents categorized in Elections. You can
    click Permalink under any of those documents to view it. You can easily flip between
    documents and their categories in this way because I defined a relationship in
    the NCRIC structure between the Document and DocumentCategory tables. The permalink
    brings you to a unique URL just for that row. During an investigation, you can
    keep track of any interesting items in the dataset using their permalinks so you
    can easily refer back to them later on. The Show All link will show all of the
    hidden fields for this row. I’ve configured the Documents table to show only a
    handful of fields: DocTitle, DateEntered, DocFilename, URL, PreviewImage, and
    the DocumentCategory relationship. Clicking Show All will show you the remaining
    hidden fields as well.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，点击选举类别下的**永久链接**以访问该类别。此时你的URL应该是*http://<wbr>localhost:8000<wbr>/ncric<wbr>/DocumentCategory<wbr>/167*，从这里你应该能看到所有11个被归类为“选举”的文档。你可以点击这些文档下的永久链接来查看它们。你可以轻松地在文档和其类别之间切换，因为我在NCRIC结构中定义了Document和DocumentCategory表之间的关系。永久链接会把你带到该行的唯一URL。在调查过程中，你可以通过永久链接跟踪数据集中任何有趣的项目，方便以后快速参考。点击“显示所有”链接将会显示该行的所有隐藏字段。我已配置Documents表仅显示少数几个字段：DocTitle、DateEntered、DocFilename、URL、PreviewImage以及DocumentCategory关系。点击“显示所有”将会显示其余隐藏字段。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Searching for Keywords</samp>
  id: totrans-66
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">搜索关键词</samp>
- en: For a concrete example of how BlueLeaks Explorer makes it easier to investigate
    the BlueLeaks documents, let’s revisit the SAR described in “Investigating a SAR”
    in [Chapter 9](chapter9.xhtml), in which a lawyer reported a student protester.
    This time, instead of manually grepping CSV files and copying and pasting big
    blocks of text from fields in spreadsheets for easier reading, you’ll do it all
    in BlueLeaks Explorer.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更具体地说明BlueLeaks Explorer如何使调查BlueLeaks文档变得更容易，我们来回顾一下在[第9章](chapter9.xhtml)中描述的SAR案例，律师报告了一个学生抗议者。这一次，不需要手动grep
    CSV文件并从电子表格中复制粘贴大段文本来便于阅读，你可以在BlueLeaks Explorer中直接完成这些操作。
- en: Go back to the NCRIC list of tables, click **SARs**, and search for **antifa**
    to find that specific row. [Figure 10-4](#fig10-4) shows the record. The File1
    row should display a clickable link to the PDF originally attached to the SAR,
    allowing you to quickly open the document. If you click it, you’ll immediately
    be able to read the PDF in another browser tab.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 NCRIC 表格列表，点击**SARs**，然后搜索**antifa**，找到特定的行。[图 10-4](#fig10-4) 显示了该记录。File1
    行应该显示一个可点击的链接，指向原始附加在 SAR 上的 PDF 文件，允许你快速打开该文档。如果你点击它，你将能在另一个浏览器标签中立即阅读 PDF 文件。
- en: '![A screenshot showing details of the specific SAR filed by an investigator
    at the Marin County DA’s office about a student protester.](Images/Figure10-4.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![显示调查员在马林县地区检察官办公室为一名学生抗议者提交的具体 SAR 的详细信息的截图。](Images/Figure10-4.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-4: Viewing a SAR
    in BlueLeaks Explorer</samp>'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 10-4：在 BlueLeaks Explorer
    中查看 SAR</samp>
- en: Now that you have an idea of how to navigate BlueLeaks Explorer, it’s your turn
    to explore other parts of the BlueLeaks dataset beyond NCRIC.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经对如何浏览 BlueLeaks Explorer 有了一定了解，轮到你去探索 BlueLeaks 数据集中的其他部分，超出 NCRIC 的范围。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Building Your Own BlueLeaks Structure</samp>
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">构建你自己的 BlueLeaks 结构</samp>
- en: In this section, you’ll learn how to define your own structure for another BlueLeaks
    site, the Los Angeles Joint Regional Intelligence Center (JRIC). By the end of
    this section, you’ll have the tools you need to create structures for all of the
    BlueLeaks sites.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习如何为另一个 BlueLeaks 网站——洛杉矶联合地区情报中心（JRIC）定义自己的结构。在本节结束时，你将掌握创建所有 BlueLeaks
    网站结构所需的工具。
- en: Building out a BlueLeaks Explorer site structure takes work, but it also helps
    you gain a much clearer understanding of the data. Once you’ve started cleaning
    up a few of the tables, you can spend time reading them, looking for newsworthy
    revelations. As you read, you’ll probably end up tweaking the structure to help
    you in your research, and you’ll also likely start cleaning up new tables as you
    discover relationships to them.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 构建 BlueLeaks Explorer 网站结构需要一定的工作量，但它也能帮助你更清楚地理解数据。一旦你开始清理一些表格，你就可以花时间阅读它们，寻找值得报道的发现。在阅读过程中，你可能会调整结构，以帮助你进行研究，也很可能在发现与之相关的内容时开始清理新的表格。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Defining the JRIC
    Structure</samp>
  id: totrans-75
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">定义 JRIC 结构</samp>
- en: Some structures, like the one I constructed for NCRIC, are already included
    with BlueLeaks Explorer. To either edit existing structures or define new ones,
    load BlueLeaks Explorer in your browser and click **Define Structure** at the
    top of the screen. [Figure 10-5](#fig10-5) shows the page that should pop up.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一些结构，如我为 NCRIC 构建的结构，已经包含在 BlueLeaks Explorer 中。要编辑现有结构或定义新结构，请在浏览器中加载 BlueLeaks
    Explorer，并点击屏幕顶部的**定义结构**。[图 10-5](#fig10-5) 显示了应弹出的页面。
- en: On the Define Structure page, every structure that is already defined is listed
    under Edit Structures. In [Figure 10-5](#fig10-5), this is just a single structure,
    NCRIC. To edit a structure, simply click its name. The BlueLeaks sites that don’t
    yet have a structure are listed by their folder name under Define a New Structure,
    along with a button to create that new structure. Scroll down until you see the
    listing for *jric*, and click **Create**.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义结构页面上，所有已定义的结构都列在编辑结构下。在[图 10-5](#fig10-5)中，这只有一个结构——NCRIC。要编辑结构，只需点击其名称。尚未定义结构的
    BlueLeaks 网站将按其文件夹名称列在“定义新结构”下，并附有创建该新结构的按钮。向下滚动，直到看到 *jric* 的列表，然后点击**创建**。
- en: '![A screenshot showing the Define Structure page in BlueLeaks Explorer. All
    of the defined structures are listed under “Edit structures,” and all of the BlueLeaks
    sites that don’t have structures yet are listed under “Define a new structure.”](Images/Figure10-5.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![显示 BlueLeaks Explorer 中定义结构页面的截图。所有已定义的结构都列在“编辑结构”下，所有尚未定义结构的 BlueLeaks 网站则列在“定义新结构”下。](Images/Figure10-5.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">[Figure 10-5](#fig10-5): Viewing
    the Define Structure page in BlueLeaks Explorer</samp>'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">[图 10-5](#fig10-5)：在 BlueLeaks
    Explorer 中查看定义结构页面</samp>
- en: In the page that opens, you can configure exactly how BlueLeaks Explorer should
    work when you investigate the JRIC data, as shown in [Figure 10-6](#fig10-6).
    The top of the page displays the name of the site, which defaults to the BlueLeaks
    folder name, *jric*.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of the BlueLeaks Explorer page for editing the JRIC structure.
    It shows all the tables in JRIC, all fields for each table, and several options
    to define how these tables and fields act and relate to each other.](Images/Figure10-6.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-6: Editing the JRIC
    structure in BlueLeaks Explorer</samp>'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Click **Rename** next to the site name and enter **Los Angeles Joint Regional
    Intelligence Center**. Every time you make a change like this, you should see
    the message “You have unsaved changes,” with a Save button, in the bottom-right
    corner. Click **Save**.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: Below the site name, the Edit Structure page lists all of the tables in this
    BlueLeaks site. Next to each table name is the Rename button, as well as buttons
    to show or hide the table. BlueLeaks Explorer automatically detects tables that
    don’t have any rows and hides them by default; this is why the ASIOptions table
    starts out hidden. You can also manually hide tables that you don’t care about
    to reduce clutter when you’re actually investigating this site later on.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: Now that you’ve created the JRIC structure, open the **Explore Data** link at
    the top in a separate browser tab. You should see that the Los Angeles Joint Regional
    Intelligence Center site has been added to the list of sites to explore. [Figure
    10-7](#fig10-7) shows the new Explore Data page.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot from the Explore Data page after creating the JRIC structure.
    The JRIC site appears on this page above NCRIC.](Images/Figure10-7.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-7: The Explore Data
    page after you’ve created the JRIC structure</samp>'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: Any additional structures you create for other BlueLeaks sites will also appear
    on this page.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the JRIC link to pull up all the tables in this site. As you work through
    the rest of the section, and when building a structure in BlueLeaks Explorer in
    general, keep two tabs open: the Explore Data and Define Structure pages. This
    way, when you save changes in the Define Structure tab, you can refresh the Explore
    Data tab to see them implemented.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Showing Useful Fields</samp>
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In Exercise 9-3, you wrote a Python script to automatically create a spreadsheet
    mapping the names of BlueLeaks folders to their associated organizations. You
    found this information in *Company.csv*, a spreadsheet with 108 different columns.
    Only a few fields in this spreadsheet proved to be relevant, which makes this
    a good table for practicing showing only useful fields.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: In your Explore Data tab, click the Company table. You should see the page shown
    in [Figure 10-8](#fig10-8). There are 7 rows displayed, each containing all 108
    different fields, some of which include lots of HTML. Because each row has so
    many fields, this figure shows only the fields at the beginning of the first row
    of data.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的“探索数据”标签页中，点击“公司”表格。你应该能看到如[图10-8](#fig10-8)所示的页面。这里显示了7行数据，每行包含所有108个不同的字段，其中一些字段包含大量的HTML。因为每行有这么多字段，图中只显示了第一行数据的字段。
- en: The text in these fields isn’t very readable yet, but that’s easy to fix. Back
    in your Define Structure tab, scroll down until you find the Company table. For
    each field, you can choose the type from a drop-down menu and toggle a checkbox
    to set whether or not you want it to appear in the Explore Data page. For example,
    you probably don’t care about the value of BannerAdHeight, so you’d want to hide
    that field.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这些字段中的文本目前并不太容易读取，但这是一个很容易解决的问题。回到你的“定义结构”标签页，向下滚动直到找到“公司”表格。对于每个字段，你可以从下拉菜单中选择类型，并通过切换复选框来设置是否希望它出现在“探索数据”页面上。例如，你可能不关心BannerAdHeight的值，因此你希望隐藏该字段。
- en: You can also click the checkbox next to Show at the top of the table to toggle
    all the checkboxes at once. Click it now to uncheck—that is, hide—all of the fields
    in the Company table. From here, you can scroll through and select only the most
    useful fields to display.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以点击表格顶部的“显示”复选框，来一次性切换所有复选框。现在点击它以取消勾选——也就是隐藏——所有的公司表格字段。从这里，你可以滚动浏览并选择仅显示最有用的字段。
- en: '![A screenshot showing data from the JRIC’s Company table. Every field is shown,
    including those that are useless, so it’s a lot to scroll through.](Images/Figure10-8.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![显示JRIC公司表格的数据截图。每个字段都显示，包括那些无用的字段，因此需要滚动浏览很多内容。](Images/Figure10-8.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-8: Exploring data
    in JRIC’s Company table before editing the structure</samp>'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图10-8：编辑结构前在JRIC公司表格中探索数据</samp>
- en: By reading through the Explore Data page, I can guess that the most useful fields
    include URL, InitialPage, SiteHeader, and CompanyName. Back on the Define Structure
    page, check the boxes next to these fields to show them and then click **Save**.
    Refresh the Explore Data page. It should now look like [Figure 10-9](#fig10-9).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 通过浏览“探索数据”页面，我可以猜测最有用的字段包括URL、InitialPage、SiteHeader和CompanyName。在“定义结构”页面，勾选这些字段旁边的复选框以显示它们，然后点击**保存**。刷新“探索数据”页面，应该会像[图10-9](#fig10-9)那样显示。
- en: The Explore Data page still lists all seven rows in the Company table, but this
    time it shows only the four specific fields you selected, which makes it much
    easier to read through. As you can see from the second row of data, the Explore
    Data page also hides empty fields—the leads.jric.org row doesn’t have anything
    in its SiteHeader field, so BlueLeaks Explorer skips that field.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: “探索数据”页面仍然列出了公司表格中的所有七行数据，但这次只显示了你选择的四个特定字段，这使得阅读更加容易。如第二行数据所示，“探索数据”页面还会隐藏空字段——leads.jric.org这一行在SiteHeader字段中没有内容，因此BlueLeaks
    Explorer跳过了该字段。
- en: You can still see all of the hidden fields for any row by clicking the Show
    All button below it. In the course of an investigation, you might discover that
    a field you chose to hide is actually useful, in which case you can edit the structure
    again to display it.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你仍然可以通过点击每行下方的“显示所有”按钮来查看所有被隐藏的字段。在调查过程中，你可能会发现你选择隐藏的某个字段其实很有用，在这种情况下，你可以再次编辑结构以显示该字段。
- en: '![A screenshot showing JRIC’s Company table with most fields hidden.](Images/Figure10-9.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![显示JRIC公司表格截图，大部分字段被隐藏。](Images/Figure10-9.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-9: Viewing JRIC’s
    Company table with the irrelevant fields hidden</samp>'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图10-9：查看隐藏无关字段的JRIC公司表格</samp>
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Changing Field Types</samp>
  id: totrans-102
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">更改字段类型</samp>
- en: The Explore Data page is much more readable now, but it’s still not perfect.
    The SiteHeader field is hard to read because it’s a block of HTML. It would also
    be nice if CompanyName appeared at the top of the list of fields. Let’s make one
    more change to fix that.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在“探索数据”页面可读性大大提高，但仍然不是完美的。由于SiteHeader字段是一个HTML块，它很难阅读。如果CompanyName能出现在字段列表的顶部，那就更好了。让我们做最后一个更改来解决这个问题。
- en: 'Every field in BlueLeaks Explorer starts out as text, and it’s up to you to
    change the type if you think there’s a better way to display that field. Here
    are all of the types that are available:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: BlueLeaks Explorer 中的每个字段一开始都是文本类型，您需要根据需要更改其类型，如果您认为有更好的方式来显示该字段。以下是所有可用的类型：
- en: '**text** Displays the value as text; this is the default for all fields'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**text** 将值显示为文本；这是所有字段的默认设置。'
- en: '**html** Renders the value as an HTML web page'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**html** 将值呈现为 HTML 网页。'
- en: '**pre** Displays the field’s value as text in a fixed-width font and preserves
    all of the original spacing (see the BriefSummary field in [Figure 10-4](#fig10-4)
    for an example)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**pre** 以固定宽度字体显示字段的值，并保留所有原始空格（请参见[图 10-4](#fig10-4)中的BriefSummary字段作为示例）。'
- en: '**image**<samp class="SANS_Portrait_Text_Heavy_B_227">(AA)</samp><samp class="SANS_Portrait_Text_Heavy_B_227">(AA)</samp>Loads
    an image from a path directly in your browser; choose this type only if the field
    contains a path to an image (see the PreviewImage field in [Figure 10-3](#fig10-3)
    for an example)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**image**<samp class="SANS_Portrait_Text_Heavy_B_227">(AA)</samp><samp class="SANS_Portrait_Text_Heavy_B_227">(AA)</samp>从路径中直接加载图像到浏览器；仅在字段包含图像路径时选择此类型（请参见[图
    10-3](#fig10-3)中的PreviewImage字段作为示例）。'
- en: '**attachment** Displays a filepath as a text link directly to the file; choose
    this type only if the field contains a path to a non-image file (see the DocFilename
    field in [Figure 10-3](#fig10-3) for an example)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**attachment** 将文件路径显示为直接链接到文件的文本链接；仅在字段包含非图像文件的路径时选择此类型（请参见[图 10-3](#fig10-3)中的
    DocFilename 字段作为示例）。'
- en: '**survey** Recognizes the format of SurveyData fields, which appear only in
    Survey tables and contain feedback from attendees of events hosted by fusion centers—and
    makes the results easier to read'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**survey** 识别 SurveyData 字段的格式，这些字段仅出现在 Survey 表格中，包含来自融合中心举办的活动的参与者反馈—并使结果更易于阅读。'
- en: Back in the Edit Structure tab, find the SiteHeader field. This field has a
    Type drop-down menu that’s currently set to text; switch it to **html**. Now scroll
    down until you find the CompanyName field. Click the grip icon to the left of
    it and drag it to the top of the list of fields. Click **Save** again and refresh
    the Explore Data tab. Your Company table should now look like [Figure 10-10](#fig10-10).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到 Edit Structure 标签页，找到 SiteHeader 字段。此字段有一个类型下拉菜单，目前设置为文本；将其更改为 **html**。现在向下滚动，直到找到
    CompanyName 字段。点击它左侧的握手图标并将其拖动到字段列表的顶部。再次点击 **Save** 并刷新 Explore Data 标签页。您的 Company
    表格现在应显示为[图 10-10](#fig10-10)。
- en: '![A screenshot showing JRIC’s Company table after editing its structure. The
    SiteHeader field is now rendered as HTML instead of text and the CompanyName is
    now listed first for each row.](Images/Figure10-10.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![显示编辑结构后 JRIC 公司表格的截图。SiteHeader 字段现在渲染为 HTML，而不是文本，CompanyName 现在在每行的最前面。](Images/Figure10-10.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-10: Exploring JRIC’s
    Company table after editing its structure</samp>'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 10-10：编辑结构后探索 JRIC 的公司表格</samp>
- en: Because you changed the SiteHeader field type from text to HTML, BlueLeaks Explorer
    renders it as HTML and loads the JRIC header image hosted from JRIC’s web server.
    [Figure 10-10](#fig10-10) also shows that the CompanyName field is now listed
    first for each row.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 因为您将 SiteHeader 字段的类型从文本更改为 HTML，所以 BlueLeaks Explorer 将其渲染为 HTML，并加载从 JRIC
    的 Web 服务器托管的 JRIC 头部图像。[图 10-10](#fig10-10) 还显示 CompanyName 字段现在在每行的最前面。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Adding JRIC’s Leads
    Table</samp>
  id: totrans-115
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">添加 JRIC 的 Leads 表格</samp>
- en: In your Explore Data tab, go back to the JRIC table listing. This time, click
    the Leads table. If you read through its rows, you’ll see that this table is full
    of SARs. It’s similar to NCRIC’s SARs table, except that its leads are submitted
    by both the fusion center’s partners and members of the public, and it appears
    to retain data forever, whereas the NCRIC SARs table includes only one month’s
    worth of SARs. To get more practice using BlueLeaks Explorer, including setting
    up a relationship between two tables, you’ll define the structure for the Leads
    table next.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的 Explore Data 标签页中，返回 JRIC 表格列表。这次，点击 Leads 表格。如果您浏览它的行，您会看到该表格充满了 SAR（可疑活动报告）。它类似于
    NCRIC 的 SAR 表格，不同之处在于它的线索由融合中心的合作伙伴和公众成员提交，并且它似乎永久保留数据，而 NCRIC 的 SAR 表格仅包含一个月的
    SAR 数据。为了更好地练习使用 BlueLeaks Explorer，包括在两个表格之间建立关系，接下来您将定义 Leads 表格的结构。
- en: In your Define Structure tab, find the Leads table, hide all of its columns,
    and repeat the steps you followed with the Company table to show only the useful
    fields, selecting the most appropriate type for each. After reading through the
    first several rows of Leads data in the Explore Data tab, I decided to show FormTimeStamp,
    County, PhoneNum, EmailAddress, ActivityDate, ActivityTime, ActivityDetails, fullname,
    Information, NSFormName, FUpload, and FUploadName. Feel free to show or hide different
    fields yourself.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的定义结构（Define Structure）标签页中，找到Leads表，隐藏所有列，然后重复你在Company表中执行的步骤，只显示有用的字段，并为每个字段选择最合适的类型。在浏览Explore
    Data标签页中的Leads数据的前几行后，我决定显示FormTimeStamp、County、PhoneNum、EmailAddress、ActivityDate、ActivityTime、ActivityDetails、fullname、Information、NSFormName、FUpload和FUploadName。你可以根据需要自由选择显示或隐藏不同的字段。
- en: 'After saving the structure and refreshing the Explore Data page, I get these
    fields from the first row in the Leads table:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在保存结构并刷新Explore Data页面后，我从Leads表的第一行中获取了以下字段：
- en: '**FormTimeStamp** 06/07/20 00:39:09'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**FormTimeStamp** 06/07/20 00:39:09'
- en: '**County** Los Angeles'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**County** 洛杉矶'
- en: '**PhoneNum** *[redacted]*'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**PhoneNum** *[redacted]*'
- en: '**EmailAddress** *[redacted]*@torrenceca.gov'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**EmailAddress** *[redacted]*@torrenceca.gov'
- en: '**ActivityDate** 06/06/20 00:00:00'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**ActivityDate** 06/06/20 00:00:00'
- en: '**ActivityTime** 1345'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**ActivityTime** 1345'
- en: '**ActivityDetails** On the above date and time officers were dispatched to
    a call of a suspicious package. Upon, arrival [*sic*] officers noticed that the
    package had bottles with a cloth items [*sic*] sticking out of the top of the
    bottle resembling a Molotov Cocktail. This package was in the general area of
    a BLM protest that was going on. (see attached report and photos)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**ActivityDetails** 在上述日期和时间，警员被派往处理一个可疑包裹的报警。到达现场后，警员注意到包裹上有瓶子，瓶口处伸出布条物品[*sic*]，类似自制汽油弹（Molotov
    Cocktail）。这个包裹位于一个正在进行的BLM抗议活动附近。（见附带的报告和照片）'
- en: '**NSFormName** PublicCountyLeadSheet'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**NSFormName** PublicCountyLeadSheet'
- en: '**FUpload** LFU00010\984.docx'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**FUpload** LFU00010\984.docx'
- en: '**FUploadName** 200020437.docx'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**FUploadName** 200020437.docx'
- en: The FUpload and FUploadName fields both contain filenames. Notice that FUpload
    seems to be the path to a file inside the BlueLeaks dataset. Back in the Define
    Structure page, change the type of FUpload from text to attachment, save your
    changes, and refresh the Explore Data page. The FUpload field should now link
    to *http://<wbr>localhost:8000<wbr>/blueleaks<wbr>-data<wbr>/jric<wbr>/files<wbr>/LFU00010<wbr>/984<wbr>.docx*,
    which loads the document from your local copy of the data. You can click this
    link to read it if you’re curious. The filename is *984.docx*, but it appears
    that the person who submitted this lead originally uploaded the file as *2000020437.docx*.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: FUpload和FUploadName字段都包含文件名。注意，FUpload似乎是指向BlueLeaks数据集内某个文件的路径。在定义结构页面中，将FUpload的类型从文本（text）更改为附件（attachment），保存更改并刷新Explore
    Data页面。此时，FUpload字段应该会链接到*http://<wbr>localhost:8000<wbr>/blueleaks<wbr>-data<wbr>/jric<wbr>/files<wbr>/LFU00010<wbr>/984<wbr>.docx*，该链接会从你本地的文件副本加载文档。如果你感兴趣，可以点击这个链接阅读该文件。文件名是*984.docx*，但似乎提交此条线索的人最初上传的文件名是*2000020437.docx*。
- en: Looking through other rows in this Leads table, I also notice that values in
    the NSFormName field are different for different leads. My guess is that this
    field describes which form was filled out to add this lead to JRIC’s database.
    Most of the values for NSFormName appear to be PublicCountyLeadSheet or LeadSheetPrivateSectorAndPublic.
    Is the Leads table related to some other table that describes forms? Let’s find
    out.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览Leads表中的其他行时，我还注意到NSFormName字段在不同的线索中值不同。我猜测这个字段描述了填写哪种表单来将此线索添加到JRIC的数据库中。大多数NSFormName的值似乎是PublicCountyLeadSheet或LeadSheetPrivateSectorAndPublic。Leads表是否与描述表单的其他表有关联呢？让我们来查明。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Building a Relationship</samp>
  id: totrans-131
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">建立关系</samp>
- en: Go back to the page listing all of the tables in JRIC and click the table named
    FormBuilder. This table doesn’t have a field called NSFormName, but it does have
    one called FormName. If you search the table for PublicCountyLeadSheet and LeadSheetPrivateSectorAndPublic,
    you will see that the row with ID 1 has a FormName value of PublicCounty LeadSheet,
    and the row with ID 2 has a FormName value of LeadSheet PrivateSectorAndPublic.
    (From the FormBuilder table page, you could sort it by FormBuilderID ascending
    to see these first two rows in that table as well.) Because the NSFormName field
    on the Leads table maps to the FormName field on the FormBuilder table, there’s
    a relationship between these two tables. Let’s create that relation in BlueLeaks
    Explorer.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: Back in the Define Structure page, scroll down to the bottom of the Leads table.
    After the list of fields, there’s another section that says Field Maps to Table.
    Both Field and Table are drop-down menus. Click the Field drop-down menu to list
    all of the fields in this table and select **NSFormName**. Click the Table drop-down
    menu, which lists all of the other tables in this BlueLeaks site, and choose **FormBuilder**.
    Once you select the table, you should see a third drop-down menu that lets you
    choose the field in that table. Choose **FormName** and click **Create Relationship**.
    A prompt should pop up, asking, “What is the name of this relationship?” Enter
    **Form** and click **OK**, then save your changes.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: Back in the Explore Data tab, navigate back to the Leads table. For each lead,
    you should now see all of the fields from the form that was used to submit the
    lead. However, as [Figure 10-11](#fig10-11) shows, it’s difficult to read.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, the related form is displayed, but, like the Company table you
    worked with previously, far too many fields are shown, including blocks of HTML
    that are difficult to make sense of. To fix this, you’ll edit the structure of
    the FormBuilder table as you did with the Company and Leads tables. As you build
    structures, I recommend finishing one table so that it displays nicely, then moving
    on to related ones.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '![The Molotov Cocktail lead described in the text, now showing the fields from
    the form filled out to submit it.](Images/Figure10-11.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-11: An item in the
    JRIC Leads table, now with a relationship to the FormBuilder table</samp>'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: 'Go back to the Define Structure tab, find the FormBuilder table, and hide all
    of its fields. Check the boxes to show FormName and FormContent, and change FormContent’s
    type from text to **html**. You already added a relationship to the Leads table
    that links it to the FormBuilder table, so while you’re here, create a relationship
    in the other direction as well. Scroll down to the bottom of the FormBuilder table
    and add a new relationship: map the FormName field to the Leads table’s NSFormName
    field. This time, when you create the relationship, name it *Submissions*. Save
    your changes in the Define Structure tab.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: In your Explore Data tab, navigate to the Leads page again to see what it looks
    like. Now as you scroll through each lead, you can see which form was filled out
    to submit it. [Figure 10-12](#fig10-12) shows a different example from the Leads
    table.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: 'In this case, a member of the public rather than a fusion center member filled
    out this form, using a fake name and email address (John Doe and *idont@thinkso.org*).
    They wrote a message, in all caps, about a fireworks store in Pahrump, Nevada,
    just over the border from California:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: ON SATURDAYS, ALL 3 STORES ARE PACKED AND OVER 90% OF THE TRAFFIC IS FROM CA.
    THEY ARE ALSO ALMOST ALL BLACK OR MEXICAN. NO DISRESPECT TO RACE, BUT DOESNT THAT
    SORT OF MEET YOUR PROFILE OF PROBLEMS LATELY? I DONT REALLY CARE ABOUT THE CAUSES
    EITHER WAY, BUT THE UNREST IS HURTING TRUMP. I WOULD BET YOU HAVE A FEW ANTIFA
    PEOPLE BUYING FIREWORKS TO CAUSE TROUBLE. JUST THOUGHT I WOULD MENTION IT.
  id: totrans-141
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![A screenshot showing a lead submitted by a member of the public, in the JRIC
    database, complete with the form that was used to submit it.](Images/Figure10-12.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-12: An item in the
    JRIC Leads table, with a cleaned-up relationship to the FormBuilder table</samp>'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: BlueLeaks Explorer shows you LeadSheetPrivateSectorAndPublic, the form that
    was filled out to submit this lead. Scroll to the bottom of the form and click
    **Permalink** to go to a page that shows just the LeadSheetPrivateSectorAndPublic
    form in the FormBuilder table. Because of the Submissions relationship you created,
    this page should show you everything that was submitted to JRIC using this form—all
    1,949 leads submitted by the public.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Verifying BlueLeaks Data</samp>
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Whenever you’re looking at leaked or hacked data, you should always do additional
    research outside of the dataset itself to help verify that the data is authentic
    and put it into context. By looking at the Company table in the previous section,
    you learned that the JRIC site is hosted at [*https://<wbr>www<wbr>.jric<wbr>.org*](https://www.jric.org).
    Load that link in Tor Browser (covered in [Chapter 2](chapter2.xhtml)) or while
    connected to a VPN, and check out the JRIC website.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: At the time of writing, I could tell from the website that this fusion center
    focuses on the Los Angeles area. Some of the BlueLeaks sites went offline after
    the hack in 2020, but many, like JRIC, remained online. [Figure 10-13](#fig10-13)
    shows JRIC’s website, loaded anonymously in Tor Browser.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '![The home page of JRIC’s website, loaded in Tor Browser.](Images/Figure10-13.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 10-13: The home page
    of JRIC’s website,</samp> <samp class="SANS_Futura_Std_Book_11">[https://www.jric.org](https://www.jric.org),</samp>
    <samp class="SANS_Futura_Std_Book_Oblique_I_11">loaded in Tor Browser</samp>'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: It wasn’t clear to me that JRIC was a fusion center focused on Los Angeles,
    or what its mission was, until I viewed its website. If you click around the JRIC
    site to get a better understanding of the types of information it collects, you
    can then use BlueLeaks Explorer to view that information. For example, if you
    click the Submit a SAR link at the top of the home page, you can find the forms
    that add SARs to the Leads table.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: You’ve only explored a small amount of content in the JRIC data so far. Now
    it’s time to finish building the structure so you can explore the rest.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 10-2: Finish Building the
    Structure for JRIC</samp>'
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the previous sections, you started building the structure for the JRIC data.
    You cleaned up the Company, Leads, and FormBuilder tables and created a relationship
    between the latter two tables, allowing you to see which form was submitted to
    create each lead and which leads were created from each form. In this exercise,
    you’ll use your newfound knowledge to finish defining the structure for the other
    tables in JRIC. This will give you a clearer understanding of exactly what data
    was stored there, making it much easier to continue your investigation. It will
    also give you practice creating structures for the rest of the BlueLeaks sites.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: You can play with BlueLeaks Explorer however you wish to customize the JRIC
    structure to suit your preferences. However, if you’re not sure where to start,
    I recommend beginning with the first table (AgencyNames), then the second (Align),
    and so on, finishing with the last table (VideoOptions). If you run into a table
    that has a relationship to another table, work on the related table first before
    you continue down the list.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, here’s how I’d start the AgencyNames table. In the Explore Data
    tab, in the list of JRIC tables, click **AgencyNames**. This table has 1,396 rows,
    and each row has just two fields: AgencyNamesID and AgencyName. The names appear
    to be various military agencies, police departments, school districts, and other
    organizations—my guess is these are all of JRIC’s partners. This data is pretty
    easy to read and search by itself, so I’d consider this table done already.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: Still in the Explore Data tab, I’d move on to the Align table. This has just
    three rows, with the Align field as Left, Right, or Center. This table is completely
    useless for the purposes of an investigation. In the Define Structure tab, find
    the Align table, click the **Hide** button, then click **Save**. Back in the Explore
    Data tab, refresh the page, and you’ll see that the Align table has disappeared.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: I find that when building a BlueLeaks Explorer structure, it helps to read some
    raw data to begin with, just to try to understand what it is and how it should
    be formatted. If you see any fields that are obviously HTML, for example, change
    their type from text to **html**. Once you have an understanding of what the important
    fields are, you can hide the rest. And once you’re done deciding what fields to
    show and what their types should be, you can add any relationships as appropriate.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve structured the JRIC data to more easily explore it, do some investigating.
    The JRIC data includes an entire series of training videos for the Terrorism Liaison
    Office, split into different modules. Check out the Video and VideoCategory tables;
    at the time of writing, no one has reported on this information.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know how to define structures in BlueLeaks Explorer, you can do
    the same for any other sites in the BlueLeaks dataset to investigate them in greater
    depth. BlueLeaks Explorer is most useful when paired with a tool like Aleph, described
    in [Chapter 5](chapter5.xhtml), that indexes the data so you can search it for
    keywords. If you index all of the data in BlueLeaks, you can search it all at
    once to find documents in various BlueLeaks sites. Then, once you discover the
    sites you’re interested in, you can do a deep dive on them using BlueLeaks Explorer.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">The Technology Behind BlueLeaks Explorer</samp>
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sometimes a dataset is so complicated—and so newsworthy—that it’s worth writing
    a custom application just to help you make sense of it. BlueLeaks Explorer is
    one such application. The information covered in this book, especially in [Chapters
    7](chapter7.xhtml) and [8](chapter8.xhtml), provides a solid foundation for the
    additional independent research required to build an app like this yourself.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many different ways to go about writing custom apps for investigating
    datasets. In this section, I describe the technologies and libraries I used to
    develop BlueLeaks Explorer: first those I used to build the *backend* (the web
    server), then those I used for the *frontend* (the user interface that runs in
    a web browser). I personally like this *tech stack*, or combination of technologies
    an app uses, but this is by no means an exhaustive list of possibilities. Most
    of the technologies described here are outside the scope of this book; this section
    provides just a brief introduction to inspire future research.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: If you feel confident in your programming skills and are inclined to do so,
    you can make improvements to my BlueLeaks Explorer code in the git repo and submit
    them back into the project, since it’s open source.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">The Backend</samp>
  id: totrans-164
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: I developed the backend of BlueLeaks Explorer in Python, relying on a third-party
    Python package called Flask, a simple framework for building web apps. You can
    learn more about using Flask at [*https://<wbr>flask<wbr>.palletsprojects<wbr>.com*](https://flask.palletsprojects.com).
    You can also check out the source code for BlueLeaks Explorer, specifically *app.py*
    at [*https://<wbr>github<wbr>.com<wbr>/micahflee<wbr>/blueleaks<wbr>-explorer<wbr>/blob<wbr>/main<wbr>/src<wbr>/app<wbr>.py*](https://github.com/micahflee/blueleaks-explorer/blob/main/src/app.py),
    to see exactly how I used Flask for this project.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: The backend also makes use of built-in Python modules, primarily <samp class="SANS_TheSansMonoCd_W5Regular_11">json</samp>
    (which you’ll learn about in the next chapter) and <samp class="SANS_TheSansMonoCd_W5Regular_11">sqlite3</samp>,
    which lets you run SQL queries on the SQLite databases that represent BlueLeaks
    sites. When a web browser loads the web server powered by Flask, the web server
    responds with HTML that loads some JavaScript code. This is the frontend, described
    in the following section.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: The backend also implements an API, which allows the frontend to communicate
    with it. For example, when the frontend wants to know the list of sites that already
    have structures, it can load */api/sites* on the backend, which returns this data
    in JSON format. If it wants to retrieve data in JSON format from a specific table
    on a specific site, it can load */api/*<*site*>*/*<*table*>. In this case, the
    Python code uses the <samp class="SANS_TheSansMonoCd_W5Regular_11">sqlite3</samp>
    module to look up this data in the SQlite3 database for that BlueLeaks site, and
    then returns what it finds to the frontend.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">The Frontend</samp>
  id: totrans-168
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To develop web applications, you’ll have to program not in Python but in JavaScript,
    since this is the programming language that web browsers understand. I developed
    the frontend of BlueLeaks Explorer using a JavaScript framework called Vue.js
    ([*https://<wbr>vuejs<wbr>.org*](https://vuejs.org)). If you’re like me and find
    that you really enjoy writing code, I recommend that you try learning JavaScript
    so that you can make web applications. You can find the frontend source code at
    [*https://<wbr>github<wbr>.com<wbr>/micahflee<wbr>/blueleaks<wbr>-explorer<wbr>/tree<wbr>/main<wbr>/src<wbr>/frontend<wbr>/src*](https://github.com/micahflee/blueleaks-explorer/tree/main/src/frontend/src).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: Using Vue.js, the BlueLeaks Explorer frontend includes a series of pages designed
    to display data it retrieves by making HTTP requests to the backend. When you
    save a structure that you’re working on in BlueLeaks Explorer, the frontend also
    sends data to the backend, which then saves the structure as a JSON file.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Summary</samp>
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this chapter, you got BlueLeaks Explorer up and running locally on your computer
    using Docker. You’ve learned how to define structures for each BlueLeaks site,
    make the data in the tables easier to read, and create relationships between tables.
    Now that you have the skills required to investigate anything in the sprawling
    BlueLeaks dataset, let me know if you find any revelations!
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you’ll learn more about the JSON file format. You’ll work
    with a dataset containing a million JSON files related to the January 6, 2021,
    attack on the US Capitol and continue to hone your Python skills by writing code
    to find the most important files within it.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
