- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Technical Email Controls
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 技术邮件控制
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: So far, we’ve performed phishing attacks and learned how to train users to notice
    them. We’ve also discussed how to respond when people fall victim to social engineering
    despite our training. This chapter covers the implementation of technical email
    controls to help provide a safety net for the organization and remove some of
    this burden from the user.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经进行了网络钓鱼攻击演练，并学习了如何训练用户识别它们。我们还讨论了当用户即使在我们训练后依然成为社交工程攻击的受害者时，应该如何应对。本章将介绍技术邮件控制的实施，以帮助为组织提供安全保障，并减轻一些用户的负担。
- en: In addition, we’ll discuss email appliances and services that can filter and
    manage emails. But before we get into those, let’s look at the actual standards
    associated with the technical side of email controls.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还将讨论可以过滤和管理电子邮件的邮件设备和服务。但在深入这些内容之前，让我们先看看与电子邮件控制的技术方面相关的实际标准。
- en: Standards
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准
- en: 'As email has evolved, so have the technologies to protect it. And as those
    technologies have evolved, so have the attack patterns, becoming, as with anything
    in the information security field, a continuous game of cat and mouse. Over time,
    security professionals have proposed, debated, and approved a variety of standards.
    When it comes to securing email, there are three major ones: *Domain Keys Identified
    Mail (DKIM)*, *Sender Policy Framework (SPF)*, and *Domain-based Message Authentication,
    Reporting, and Conformance (DMARC)*. We’ll discuss each of these in this section.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 随着电子邮件的发展，用于保护电子邮件的技术也在不断发展。正如信息安全领域的任何事物一样，随着这些技术的进步，攻击模式也在不断变化，成为了一场持续的猫鼠游戏。随着时间的推移，安全专业人员提出、讨论并批准了各种标准。说到保护电子邮件，有三个主要标准：*域名密钥标识邮件（DKIM）*、*发件人策略框架（SPF）*和*基于域的消息认证、报告和符合性（DMARC）*。我们将在本节中讨论这三个标准。
- en: 'What do these three standards do? A common misconception is that they protect
    your emails from incoming phishing or spoofing attempts. To some degree, they
    do, but it’s more accurate to describe them as protecting your *reputation*: if
    you send an email with these standards implemented, and the recipient domain is
    configured to check the associated records, they can detect attempts at spoofing
    your domain. While this may seem counterintuitive and unproductive, follow along
    through the remainder of this chapter to see how this might help you.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这三种标准的作用是什么？一个常见的误解是，它们保护你的电子邮件免受来袭的网络钓鱼或欺骗性伪装攻击。在某种程度上，它们确实有这样的作用，但更准确地说，这些标准是在保护你的*声誉*：如果你发送的电子邮件实施了这些标准，并且收件人域已配置为检查相关记录，他们可以检测到试图伪装你域名的行为。虽然这可能看起来与直觉相反且似乎没有效果，但请继续阅读本章剩余部分，看看这如何帮助你。
- en: In short, SPF checks whether a host or IP address is in the sender’s list, DKIM
    sends a digital signature, and DMARC implements both SPF and DKIM, in addition
    to checking alignment. DMARC also establishes reporting. SPF is considered the
    lowest of the security standards. The caveat is that the recipient must have their
    mail servers configured to check for guidance from the sender regarding the standards
    and then actually perform the actions.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，SPF检查主机或IP地址是否在发件人列表中，DKIM发送数字签名，而DMARC实施SPF和DKIM，并检查对齐性。DMARC还建立了报告机制。SPF被认为是最基础的安全标准。需要注意的是，收件方必须将其邮件服务器配置为检查发件人关于标准的指导，并实际执行相关操作。
- en: “From” Fields
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: “发件人”字段
- en: To grasp how these standards work, you need to understand the various types
    of From fields in an email. In addition to a Reply-to field, emails have From
    and MailFrom. The *From* field, also called *5322.From*, displays the sender.
    The *MailFrom* field, or *5321.MailFrom*, is the actual service that sent the
    email. For example, if I sent emails using MailChimp, my email address would be
    in the 5322.From field, and MailChimp’s server and address would be in the 5321.MailFrom
    field.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解这些标准如何工作，你需要了解电子邮件中各种类型的发件人字段。除了Reply-to字段，电子邮件还有From和MailFrom字段。*From*字段，也叫*5322.From*，显示发件人信息。*MailFrom*字段，或*5321.MailFrom*，是实际发送电子邮件的服务。例如，如果我使用MailChimp发送电子邮件，我的电子邮件地址将出现在5322.From字段，而MailChimp的服务器和地址则会出现在5321.MailFrom字段。
- en: 'The numbers attached to these fields come from the RFCs that they were defined
    in. Here’s another easy way to think about it: the 5321.MailFrom field is the
    equivalent of a return address on an envelope mailed using the postal service,
    while the 5322.From field is the equivalent of a return address at the top of
    a letter contained within the envelope.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这些字段后面的数字来自于它们所在的 RFC 文件。这里有一种更容易理解的方法：5321.MailFrom 字段相当于通过邮政服务邮寄的信封上的回邮地址，而
    5322.From 字段相当于信封内信件顶部的回邮地址。
- en: Now let’s cover these three standards in chronological order, beginning with
    DKIM.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们按时间顺序介绍这三个标准，首先从 DKIM 开始。
- en: Domain Keys Identified Mail
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 域名密钥识别邮件（Domain Keys Identified Mail）
- en: DKIM became an internet standard in 2011\. It seeks to authenticate emails and
    prevent spoofing by requiring senders to cryptographically sign parts of the email,
    including the 5322.From field. Seeing as an attacker probably won’t have access
    to the private key used to digitally sign the field, the email recipients can
    rapidly identify spoofing attempts.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: DKIM 于 2011 年成为互联网标准。它旨在通过要求发送方加密签名邮件的部分内容（包括 5322.From 字段）来验证电子邮件并防止伪造。考虑到攻击者很可能无法访问用于数字签名的私钥，邮件接收者可以迅速识别伪造尝试。
- en: The *DKIM header*, a field included in the email message, specifies where to
    get the public key that can verify the signature. The public key gets stored in
    a DNS TXT record using the DNS domain (`d=`) and selector (`s=`) tags you can
    find in the email message. The DKIM public key is the only part of the framework
    viewable to the general population, but finding it hinges upon knowing the selector,
    which you can do only if you received an email from the domain (or manage to brute-force
    it).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*DKIM 头部*，是电子邮件消息中包含的一个字段，指定了在哪里可以找到用于验证签名的公钥。公钥通过 DNS TXT 记录存储，使用你可以在电子邮件消息中找到的
    DNS 域（`d=`）和选择器（`s=`）标签。DKIM 公钥是该框架中唯一可供公众查看的部分，但找到它依赖于知道选择器，只有在你收到了该域名的电子邮件（或成功进行暴力破解）时，你才能知道这个选择器。'
- en: The DKIM process is as follows. First, you compose an email. As the email is
    sent, the private key associated with your DKIM entry creates two digital signatures
    that prove the authenticity of the email. One signature is for the DKIM header
    itself, and the other is for the body of the email. Each email has a unique pair
    of signatures. The signatures get placed in the header and sent along with the
    email. Once it’s received, and if the recipient mail server has DKIM configured,
    the server will verify the message’s authenticity by using the public key published
    to the DNS records. If the key is able to successfully decrypt the email, the
    email is authentic and wasn’t altered.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: DKIM 的过程如下。首先，你编写一封电子邮件。在邮件发送时，与 DKIM 条目关联的私钥会创建两个数字签名，以证明电子邮件的真实性。一个签名用于 DKIM
    头部，另一个签名用于邮件正文。每封电子邮件都有一对唯一的签名。这些签名会放入邮件头部并与邮件一起发送。一旦接收到邮件，如果接收方的邮件服务器已配置 DKIM，服务器会通过使用发布到
    DNS 记录中的公钥来验证邮件的真实性。如果该密钥能够成功解密邮件，则该邮件是真实的，并且没有被篡改。
- en: This said, DKIM isn’t often used for authentication. Instead, we mostly use
    it to verify the authenticity, and for something called DMARC alignment, discussed
    in “Domain-Based Message Authentication, Reporting, and Conformance” later in
    this chapter. One of the shortcomings of DKIM is that it’s effective only if both
    the sender and recipient implement it. Furthermore, even if your organization
    implements DKIM internally, it can protect your users only from external actors
    spoofing other internal employees, which is good for your reputation, but does
    little to achieve security otherwise. After all, actors might spoof a trusted
    third party. But as mentioned earlier, the recipient must have their mail servers
    configured to check the DKIM authentication, which is typically accomplished through
    implementing DMARC. In the absence of DMARC, authentication failures are still
    passed to the recipient.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，DKIM 并不常用于身份验证。相反，我们主要用它来验证邮件的真实性，并用于后面章节中讨论的所谓 DMARC 对齐。“基于域的消息认证、报告和一致性”即是这一部分内容。DKIM
    的一个缺点是只有发送方和接收方都实现了它，才能有效。此外，即使你的组织内部实施了 DKIM，它也只能保护你的用户免受外部攻击者伪造其他内部员工的行为，这对你的声誉有好处，但在安全性方面效果有限。毕竟，攻击者可能会伪造一个可信的第三方。不过，如前所述，接收方必须将其邮件服务器配置为检查
    DKIM 身份验证，这通常是通过实施 DMARC 来完成的。如果没有 DMARC，身份验证失败仍然会传递给接收方。
- en: 'DKIM was first introduced in RFC 6376\. Later, RFC 8301 amended it with the
    following specification regarding the type of encryption DKIM could use:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: DKIM最早在RFC 6376中引入。后来，RFC 8301对其进行了修订，增加了关于DKIM可以使用的加密类型的以下规范：
- en: 'Two algorithms are defined by this specification at this time: rsa-sha1 and
    rsa-sha256\. Signers MUST sign using rsa-sha256\. Verifiers MUST be able to verify
    using rsa-sha256\. rsa-sha1 MUST NOT be used for signing or verifying.'
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 此规范目前定义了两种算法：rsa-sha1和rsa-sha256。签名者必须使用rsa-sha256进行签名。验证者必须能够使用rsa-sha256进行验证。rsa-sha1不得用于签名或验证。
- en: In 2018, another RFC dealing with DKIM was released; RFC 8463 added a new signing
    algorithm, ed25519, which uses SHA-256 and Edwards-curve Digital Signature Algorithm
    (EdDSA) in place of an RSA key.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 2018年，另一个关于DKIM的RFC发布；RFC 8463增加了一种新的签名算法，ed25519，它使用SHA-256和Edwards曲线数字签名算法（EdDSA）代替RSA密钥。
- en: Implementing DKIM
  id: totrans-21
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 实施DKIM
- en: For DKIM to be effective, you have to configure it not only in your DNS server
    but on the mail server as well. Otherwise, it acts as a deterrent at best. Let’s
    walk through configuring DKIM on a domain hosted through Google Workspace. Other
    mail servers have similar features.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使DKIM有效，你必须不仅在DNS服务器中配置它，还要在邮件服务器上配置。否则，它充其量只是一个威慑手段。让我们来看看如何在Google Workspace托管的域上配置DKIM。其他邮件服务器也有类似的功能。
- en: 'Regular Gmail uses Google’s default DKIM keys, as do domains hosted in Workspace
    that do not have DKIM configured. You cannot set up your own DKIM for a Gmail
    account hosted at *gmail.com*, but you can for a domain using Workspace. According
    to Google’s support documents, if a user doesn’t set up their own DKIM public
    key, Google will use the following default one: `d=*.gappssmtp.com`.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 普通的Gmail使用Google的默认DKIM密钥，Workspace中没有配置DKIM的域名也使用此密钥。如果一个Gmail账户托管在*gmail.com*上，你无法为其设置自己的DKIM，但可以为使用Workspace的域名设置。根据Google的支持文档，如果用户没有设置自己的DKIM公钥，Google将使用以下默认公钥：`d=*.gappssmtp.com`。
- en: Let’s set up our own private key. First, navigate to your Workspace administrator’s
    console as a Super Admin. Once you’re in the console, click **Authenticate email**,
    as shown in [Figure 11-1](#figure11-1).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设置自己的私钥。首先，以超级管理员身份进入你的Workspace管理员控制台。进入控制台后，点击**验证电子邮件**，如[图11-1](#figure11-1)所示。
- en: '![<<Google admin console''s "Settings for Gmail" page, including user settings,
    labs, hosts, default routing, authenticate email (outlined in red), and manage
    quarantines.>>](image_fi/500983c11/f11001.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![<<Google管理员控制台的“Gmail设置”页面，包括用户设置、实验室、主机、默认路由、验证电子邮件（红框标出）和管理隔离。>>](image_fi/500983c11/f11001.png)'
- en: 'Figure 11-1: Selecting the Authenticate email option'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-1：选择“验证电子邮件”选项
- en: You should now see the DKIM authentication option and be prompted to select
    a domain to configure DKIM to support ([Figure 11-2](#figure11-2)).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该能看到DKIM身份验证选项，并被提示选择一个域名来配置DKIM以支持（[图11-2](#figure11-2)）。
- en: '![<<Google admin console''s "Authenticate email" page listing DKIM authentication
    options, including domain selection. "Generate New Record" and "Stop Authentication"
    buttons shown.>>](image_fi/500983c11/f11002.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![<<Google管理员控制台的“验证电子邮件”页面列出了DKIM身份验证选项，包括域名选择。"生成新记录"和"停止验证"按钮显示在页面上。>>](image_fi/500983c11/f11002.png)'
- en: 'Figure 11-2: Beginning the DKIM configuration'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-2：开始DKIM配置
- en: Once you select Generate New Record, you will need to select a key length and
    the selector ([Figure 11-3](#figure11-3)). Note that some hosting providers and
    DNS platforms do not support 2,048-bit key lengths. Per Google, if this is the
    case, default back to 1,024-bit keys.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你选择了生成新记录，你需要选择密钥长度和选择器（[图11-3](#figure11-3)）。请注意，某些托管提供商和DNS平台不支持2048位密钥长度。根据Google的说法，如果是这种情况，请退回到1024位密钥。
- en: '![<<"Generate New Record" box shows option selections for the DKIM key bit
    length (2048) and prefix selector (google).>>](image_fi/500983c11/f11003.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![<<"生成新记录"框显示了DKIM密钥位长度（2048）和前缀选择器（google）的选项选择。>>](image_fi/500983c11/f11003.png)'
- en: 'Figure 11-3: Generating the DKIM record and RSA key'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-3：生成DKIM记录和RSA密钥
- en: From here, select the domain as appropriate and click **Generate New Record**.
    This will create the key (censored in [Figure 11-4](#figure11-4)). Open a new
    window to copy and paste this into DNS. Once this is complete, click **Start Authenticating**.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，根据需要选择域名并点击**生成新记录**。这将创建密钥（在[图11-4](#figure11-4)中已被屏蔽）。打开一个新窗口，将其复制并粘贴到DNS中。完成后，点击**开始验证**。
- en: '![<<Google admin console''s "Authenticate email" page. Outlined in red: the
    selected domain (theosintion.com), the DNS Host name/TXT record name (partially
    censored by author), and the TXT record value (partially censored by author).>>](image_fi/500983c11/f11004.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![<<谷歌管理员控制台的“验证电子邮件”页面。红框内显示了选择的域名（theosintion.com）、DNS 主机名/TXT 记录名（部分被作者屏蔽）以及
    TXT 记录值（部分被作者屏蔽）。>>](image_fi/500983c11/f11004.png)'
- en: 'Figure 11-4: DKIM record in Google Workspace'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-4：Google Workspace 中的 DKIM 记录
- en: After this stage, enter the cPanel, a common domain management tool used by
    many hosting providers. The cPanel should include a DNS Zone Editor, with a box
    that allows you to enter your public key into a TXT record ([Figure 11-5](#figure11-5)).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在此阶段，进入 cPanel，这是许多主机提供商使用的常见域名管理工具。cPanel 应该包含一个 DNS 区域编辑器，并有一个框可以让你将公钥输入到
    TXT 记录中（[图 11-5](#figure11-5)）。
- en: '![<<DNS Zone Editor shows the fields Select domain, Create new record, and
    Manage DNS records, which includes the type, name, and value. Name and Value information
    is partially censored by author.>>](image_fi/500983c11/f11005.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![<<DNS 区域编辑器显示了选择域名、创建新记录和管理 DNS 记录的字段，其中包括类型、名称和值。名称和值的信息部分被作者屏蔽。>>](image_fi/500983c11/f11005.png)'
- en: 'Figure 11-5: Adding a DNS TXT record'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-5：添加 DNS TXT 记录
- en: 'Note that these panels might limit you to 255 characters: too short for the
    2,048-bit-long key recommended by industry standards. (When this happened to me,
    I contacted support and asked them to manually enter the information on my behalf,
    which they reluctantly did.)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这些面板可能会限制你输入的字符数为 255 个：这对于行业标准推荐的 2,048 位长的密钥来说太短了。（当我遇到这种情况时，我联系了支持部门并要求他们代为手动输入信息，虽然他们不情愿，但最终还是做了。）
- en: Once you save the key, propagating the record could take up to 48 hours. You’ll
    need to click Start Authentication on the dashboard to verify it after propagation
    is complete. Propagation typically takes 24–48 hours, but sometimes as long as
    72 hours, depending on the infrastructure and provider.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你保存了密钥，记录的传播可能需要最多 48 小时。传播完成后，你需要在仪表板上点击“开始认证”来验证它。传播通常需要 24 到 48 小时，但有时也可能需要长达
    72 小时，这取决于基础设施和提供商。
- en: 'Here’s another important consideration, discussed further in the next section:
    you must validate that your hosting and DNS provider supports concatenated DNS
    entries before using anything above a 1,024-bit RSA key. Essentially, certain
    providers impose limits on the number of characters that can be entered into a
    single entry in DNS. Your DMARC implementation will fail alignment if the provider
    does not support the concatenation, as DNS will interpret it as two unrelated
    TXT entries and fail to accomplish its purpose.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的考虑因素将在下一节中进一步讨论：你必须验证你的主机和 DNS 提供商是否支持连接 DNS 条目，否则无法使用超过 1,024 位 RSA 密钥。基本上，某些提供商对
    DNS 单个条目中可以输入的字符数有限制。如果提供商不支持连接，DNS 将其解释为两个无关的 TXT 条目，从而无法实现其目的，你的 DMARC 实施也将无法对齐。
- en: For setting up DKIM on other email providers, like Exchange, Office 365, and
    Sendmail, you can find links to several tutorials at [http://email-security.seosint.xyz/](http://email-security.seosint.xyz/).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于在其他邮件提供商上设置 DKIM，如 Exchange、Office 365 和 Sendmail，你可以在 [http://email-security.seosint.xyz/](http://email-security.seosint.xyz/)
    找到多个教程的链接。
- en: Shortcomings of DKIM
  id: totrans-43
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DKIM 的不足之处
- en: The encryption used in DKIM has at times included vulnerabilities. Until 2018,
    DKIM allowed the use of the SHA-1 algorithm for signing and verification. Yet
    the security community has known SHA-1 to be insecure since 2010, before the DKIM
    standard was even created. Researchers at CWI Amsterdam and Google have since
    successfully performed a collision attack on the protocol, at which point most
    parties in the cryptography and security communities deprecated it. The collision
    attack allowed the parties to take hashes of two files that didn’t match and produce
    the same hash from them, making it appear that they matched. All major web browser
    vendors announced they would stop accepting SHA-1 certificates in 2017\.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: DKIM 中使用的加密算法曾存在一些漏洞。直到 2018 年，DKIM 允许使用 SHA-1 算法进行签名和验证。然而，安全界从 2010 年就已知 SHA-1
    不安全，甚至在 DKIM 标准出台之前。阿姆斯特丹 CWI 的研究人员和谷歌此后成功对该协议进行了碰撞攻击，至此加密和安全界的大多数成员都弃用了 SHA-1。碰撞攻击使得攻击者能够通过两个不匹配的文件的哈希值生成相同的哈希，从而使其看起来像是匹配的。所有主要的网络浏览器厂商宣布将在
    2017 年停止接受 SHA-1 证书。
- en: It’s true that creating a collision at the precise location within the process
    of DKIM operations would still require a lot of computational power, so only sophisticated
    and well-funded organizations, such as nation-states or large tech companies,
    could have the capabilities to perform such an attack. After all, Google was one
    of the two parties to produce the SHA-1 collision (and it’s unlikely that Google
    will be attempting to send unauthorized emails to your organization). But if you
    have the autonomy to do so, use the more secure SHA-256.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 确实，在 DKIM 操作过程中的精确位置制造碰撞仍然需要大量计算能力，因此只有像国家级机构或大型科技公司等复杂且资金充足的组织，才有能力执行这样的攻击。毕竟，谷歌是产生
    SHA-1 碰撞的两方之一（并且不太可能谷歌会试图向您的组织发送未经授权的邮件）。但如果您有自主权，建议使用更安全的 SHA-256。
- en: Secondly, vulnerabilities exist in RSA, used as the public-key infrastructure
    of the DKIM standard. As I mentioned earlier, Google’s DKIM tool supports two
    1,024-bit and 2,048-bit RSAs. The 2,048-bit RSA is the current industry minimum
    standard. There is significant debate as to whether RSA is secure, given mathematic,
    computational, and cryptographic advances since RSA’s introduction. Several academics
    and researchers have claimed to be able to crack RSA or reduce the RSA cryptosystem.
    Reducing the cryptosystem is a method of weakening its strength by identifying
    large prime numbers used and factorization.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，RSA 存在漏洞，它作为 DKIM 标准的公钥基础设施。如前所述，谷歌的 DKIM 工具支持两种 1,024 位和 2,048 位 RSA。2,048
    位 RSA 是当前行业的最低标准。由于自 RSA 引入以来数学、计算和加密学方面的进展，是否认为 RSA 安全存在显著争议。几位学者和研究人员声称能够破解
    RSA 或削弱 RSA 加密系统。削弱加密系统是一种通过识别所使用的大素数并进行因式分解来降低其强度的方法。
- en: Using 1,024-bit RSA is certainly a vulnerability on paper, while using 2,048-bit
    RSA is discouraged but not prohibited. Pragmatically, without massive computational
    resources or access to quantum computing facilities, neither 1,024- nor 2,048-bit
    RSA can be broken in less than two million years on a single system. Later versions
    of DKIM added Ed25519-SHA256 as an accepted algorithm, although it has not been
    widely adopted.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 1,024 位 RSA 在理论上肯定是一个漏洞，而使用 2,048 位 RSA 被不鼓励但并不禁止。从实际角度来看，除非拥有巨大的计算资源或访问量子计算设施，否则无论是
    1,024 位 RSA 还是 2,048 位 RSA 都无法在不到两百万年的时间里在单一系统上破解。DKIM 的后续版本增加了 Ed25519-SHA256
    作为被接受的算法，尽管它尚未得到广泛采用。
- en: The final weakness in DKIM is not a vulnerability, but rather a shortcoming.
    DKIM is excellent to implement, and it can protect an organization’s reputation—but
    only if the recipient’s mail server is configured to check the DKIM signature
    and take action against emails claiming to come from a domain with DKIM enabled;
    otherwise, your organization’s reputation can still be damaged.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: DKIM 的最终弱点不是漏洞，而是一个缺陷。DKIM 实现起来非常出色，可以保护组织的声誉——但前提是接收方的邮件服务器配置为检查 DKIM 签名，并对声称来自启用
    DKIM 的域的邮件采取行动；否则，您的组织声誉仍然可能受到损害。
- en: Sender Policy Framework
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发件人政策框架
- en: Like DKIM, the Sender Policy Framework (SPF) seeks to prevent spoofing using
    DNS TXT records. In these TXT records, SPF defines the domains, lists of hosts,
    domains, and IP addresses, and IP addresses allowed to send emails from within
    a mail environment or on behalf of a domain.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 与 DKIM 类似，发件人政策框架（SPF）也通过使用 DNS TXT 记录来防止欺骗。在这些 TXT 记录中，SPF 定义了允许从邮件环境内或代表某个域发送邮件的域、主机列表、域名和
    IP 地址。
- en: While some sources describe SPF as authenticating the sender, it’s more appropriate
    to describe the framework as validating it; if configured to do so, the recipient
    will check the sender information from the 5322 and 5321 fields to authorize the
    senders, as defined in the SPF record. If the record is configured to *hard fail*,
    the email will fail, and if it’s configured to *soft fail*, the email will succeed.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有些来源将 SPF 描述为验证发件人，但更恰当的描述是将其作为验证框架；如果配置为如此，接收方将检查来自 5322 和 5321 字段的发件人信息，以授权发件人，正如
    SPF 记录中所定义的。如果记录配置为 *硬失败*，则邮件将失败；如果配置为 *软失败*，则邮件将成功。
- en: To see how this works, imagine that someone spoofs an email from a domain. The
    recipient checks the SPF record and observes that the sending domain has hard
    fails configured; also, the sender isn’t listed in the record. In addition, the
    SPF policy is set to pass. In that case, the email will fail to reach its destination.
    If there hadn’t been an SPF record, or if the policy was set to `none` or configured
    to soft fail, the email would have succeeded.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解这如何运作，假设有人伪造了一个域名的电子邮件。收件人检查 SPF 记录，并注意到发送域名配置了硬失败；而且，发送者没有在记录中列出。此外，SPF
    策略设置为通过。在这种情况下，邮件将无法到达其目的地。如果没有 SPF 记录，或者策略设置为 `none` 或配置为软失败，邮件将成功送达。
- en: Since SPF does not require cryptography, SPF and DKIM are complementary, not
    competitors. SPF is logic based, as it compares incoming values to a list. The
    host, domain, or IP address is either in the record or it isn’t. DKIM employs
    both logic and cryptography in the form of digital signatures. You can read more
    about SPF in RFC 7208, which introduced it in 2014\.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 SPF 不需要加密，SPF 和 DKIM 是互补的，而不是竞争关系。SPF 基于逻辑，通过将传入的值与列表进行比较。主机、域名或 IP 地址要么在记录中，要么不在。DKIM
    则采用逻辑和加密的结合形式，通过数字签名。你可以在 RFC 7208 中阅读更多关于 SPF 的信息，SPF 在 2014 年被引入。
- en: Implementing SPF
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 实现 SPF
- en: Let’s implement SPF in Google Workspace. Begin by determining any service providers,
    such as Google or Outlook, and the associated domains allowed to send email on
    behalf of your organization. (You might specify those domains in the MX record.)
    If you’re running an internal mail server, like Exchange, also determine the network
    blocks authorized to email on behalf of the organization.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 Google Workspace 中实现 SPF。首先，确定任何服务提供商，例如 Google 或 Outlook，以及允许代表你的组织发送邮件的关联域名。（你可以在
    MX 记录中指定这些域名。）如果你正在运行内部邮件服务器，例如 Exchange，还需要确定授权代表组织发送邮件的网络块。
- en: 'Then, for these domains and IP addresses, choose a policy for various situations:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，为这些域名和 IP 地址选择适合各种情况的策略：
- en: Pass (`+`) Allows all email to pass through (not recommended, unless for brief
    troubleshooting)
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过（`+`）允许所有邮件通过（不推荐，除非用于短期故障排除）
- en: No policy (`?`), neutral Essentially means *no policy*
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无策略（`?`），中立 实际上意味着 *没有策略*
- en: Soft fail (`~`) Somewhere between fail and neutral; generally these emails are
    accepted but tagged
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 软失败（`~`）介于失败和中立之间；通常这些邮件会被接受，但会被标记
- en: Hard fail (`-`) Rejects the email
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 硬失败（`-`）拒绝邮件
- en: As backups, you might configure something like `+all` (not recommended, as it
    would allow all mail), `+mx` (allows emails from the host listed in the MX record;
    not recommended if using cloud email like Google or Office 365), or `+nostarch.com`
    (which would allow emails from *nostarch.com*).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 作为备选方案，你可以配置类似 `+all`（不推荐，因为它会允许所有邮件），`+mx`（允许来自 MX 记录中列出的主机的邮件；如果使用 Google
    或 Office 365 等云邮件服务，不推荐使用），或者 `+nostarch.com`（这将允许来自 *nostarch.com* 的邮件）。
- en: 'Once you have this information, you’re ready to create the record. To start,
    navigate to the DNS editor for your hosting provider and create a new TXT record.
    Alternatively, edit any existing TXT records that have `v=spf1` in the body, as
    shown here:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了这些信息，你就可以准备创建记录。首先，进入你托管提供商的 DNS 编辑器，并创建一个新的 TXT 记录。或者，编辑任何已经包含 `v=spf1`
    的现有 TXT 记录，如下所示：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Set the time-to-live (TTL) value to the default of 14,400\. The *TTL value*
    is the time DNS recursive resolvers have to cache our SPF record before pulling
    down a new one (if it changed). Some things, like critical assets and load balancers,
    operate best with a very small TTL. Assets that should not change frequently or
    have redundancy built in (such as MX records) are recommended to have larger TTL
    values. This is to attempt to combat techniques like fast flux or dynamic DNS
    records commonly used in sophisticated phishing campaigns and attacks against
    social media sites.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 将生存时间（TTL）值设置为默认的 14,400。*TTL 值*是 DNS 递归解析器缓存 SPF 记录的时间，之后会拉取新的记录（如果它已更改）。一些内容，如关键资产和负载均衡器，最好使用非常小的
    TTL。建议像 MX 记录这种不需要频繁更改或已经具备冗余的资产，使用较大的 TTL 值。这是为了应对像快速变化的域名（fast flux）或动态 DNS
    记录等技术，这些技术通常用于复杂的钓鱼攻击和针对社交媒体网站的攻击。
- en: 'Then name the TXT record after the organization’s domain. For the actual text,
    enter `v=spf1`, followed by the mechanisms and the policy, as discussed earlier.
    To define these mechanisms, you’ll need to know the five types of fields allowed:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将 TXT 记录命名为组织的域名。对于实际文本，输入 `v=spf1`，后跟之前讨论的机制和策略。要定义这些机制，你需要了解允许的五种字段类型：
- en: '`ip4` IPv4 address or CIDR range'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ip4` IPv4 地址或 CIDR 范围'
- en: '`ip6` IPv6 address'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ip6` IPv6地址'
- en: '`mx` The sender’s MX record in DNS'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`mx` 发送者在DNS中的MX记录'
- en: '`a` Address record for host in DNS'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`a` DNS中主机的地址记录'
- en: '`include` References the policy of another domain'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`include` 引用其他域的策略'
- en: 'Now, build the string to input into DNS. Let’s say that you’ll allow hosts
    using *nostarch.com*’s MX record, in addition to MailChimp and a private, non-routable
    IP address range, with a hard fail. The text to enter into DNS would look like
    this:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，构建要输入DNS的字符串。假设你将允许使用*nostarch.com*的MX记录的主机，除了MailChimp和一个私人、不可路由的IP地址范围外，还有一个硬失败。要输入DNS的文本将是这样的：
- en: '[PRE1]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You could write this record in an alternative way, as well. In Chapter 4, you
    learned that No Starch uses Google Workspace, so you could replace the `+mx` portion
    with Google’s servers (which can be found in the Workspace dashboard). To keep
    this to one line, you will remove the MailChimp SPF `include` mechanism. The alternative
    entry would look like this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以用另一种方式写这个记录。在第4章中，你了解到No Starch使用Google Workspace，因此你可以将`+mx`部分替换为Google的服务器（可以在Workspace仪表盘中找到）。为了保持这一行简洁，你将移除MailChimp
    SPF的`include`机制。替代的条目将是这样的：
- en: '[PRE2]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Once you paste this into the DNS record, allow up to 72 hours for it to propagate.
    It takes time for the various DNS servers on the internet to copy the updated
    information. This time is heavily dependent upon the TTL times, which direct servers
    to cache information for a period of seconds before refreshing. In my experience,
    SPF can become valid almost immediately, unlike DKIM. Whether you use Google as
    your mail provider or not, you can still use the Google Admin Toolbox Check MX
    site to validate the information provided. You can find the toolbox at [https://toolbox.googleapps.com/apps/checkmx/](https://toolbox.googleapps.com/apps/checkmx/).
    You can find instructions for configuring SPF on other platforms at [http://email-security.seosint.xyz/](http://email-security.seosint.xyz/).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你将其粘贴到DNS记录中，允许最多72小时才能传播。互联网中各个DNS服务器需要时间来复制更新的信息。这段时间主要取决于TTL（生存时间）值，TTL指示服务器在刷新前缓存信息的时间。根据我的经验，SPF几乎可以立即生效，不像DKIM那样。无论你是否使用Google作为邮件提供商，你仍然可以使用Google
    Admin Toolbox Check MX网站来验证所提供的信息。你可以在[https://toolbox.googleapps.com/apps/checkmx/](https://toolbox.googleapps.com/apps/checkmx/)找到该工具箱。你可以在[http://email-security.seosint.xyz/](http://email-security.seosint.xyz/)找到有关在其他平台上配置SPF的说明。
- en: Shortcomings of SPF
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: SPF的缺点
- en: Remember from Chapter 4 that SPF allows attackers to enumerate domains, IP addresses,
    and ranges of IP addresses that an organization either owns or uses. Attackers
    may also be able to tell if the target has hard fail or soft fail configured by
    checking the `-all` (hard fail), `~all`(soft fail), or `~?` (neutral) part of
    the TXT record. This information may influence their decision about whether to
    spoof your organization’s domain, or perhaps squat on something similar. A detail-oriented
    social engineer may even configure DKIM and SPF on their phishing domain to bypass
    any checks that an organization may have in place, should they actually be enforcing
    any policies.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 记得在第4章中提到，SPF允许攻击者枚举一个组织拥有或使用的域、IP地址和IP地址范围。攻击者还可能通过检查TXT记录中的`-all`（硬失败）、`~all`（软失败）或`~?`（中立）部分来判断目标是否配置了硬失败或软失败。这些信息可能会影响他们是否决定伪造你组织的域名，或者是否占用类似的域名。一个细心的社会工程师甚至可能在其钓鱼域上配置DKIM和SPF，以绕过任何组织可能已实施的检查，前提是他们实际上执行了任何政策。
- en: SPF can also alert attackers to your working relationships with other organizations.
    If other domains need the authority to send emails on your behalf, you may need
    to create SPF records for them. Examples of domains that will need permission
    to send emails on an organization’s behalf are mailing lists like MailChimp, Mailgun,
    or Constant Contact. Also account for other providers that send emails on behalf
    of the organization, such as GoToMeeting or similar collaboration platforms.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: SPF还可以提醒攻击者你与其他组织的工作关系。如果其他域需要获得代表你发送电子邮件的权限，你可能需要为它们创建SPF记录。需要权限代表组织发送电子邮件的域名示例包括像MailChimp、Mailgun或Constant
    Contact这样的邮件列表。还需要考虑其他代表组织发送电子邮件的提供商，如GoToMeeting或类似的协作平台。
- en: The final aspect of SPF is not a vulnerability, but rather a shortcoming. Like
    DKIM, SPF is good to implement, and it can protect an organization’s reputation,
    but only if the recipient mail server is configured to check for the SPF records
    and enforce the defined policy. Failure to do so, however, may damage your organization’s
    reputation.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: SPF 的最终方面不是漏洞，而是一个不足之处。像 DKIM 一样，SPF 是值得实现的，它可以保护组织的声誉，但前提是接收方邮件服务器已配置为检查 SPF
    记录并强制执行定义的策略。然而，如果未进行此操作，可能会损害组织的声誉。
- en: Domain-Based Message Authentication, Reporting, and Conformance
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于域的消息认证、报告与一致性
- en: 'DMARC takes existing SPF and DKIM implementations and uses them to create a
    more robust solution for preventing spoofing, business email compromise, and reputational
    harm. First introduced as an internet standard in 2015 (RFC 7489), it seeks to
    overcome the limitations of both SPF and DKIM: it implements both of the earlier
    standards, but also reports successes and failures to the sending domain. DMARC
    checks an email’s *alignment*, or whether the 5322.Fromfield matches the authenticated
    domain names. In other words, it verifies that an email with a *From* field claiming
    to be from info@nostarch.com actually originated from that domain. An email can
    pass SPF and DKIM but fail in alignment.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: DMARC 利用现有的 SPF 和 DKIM 实现，创建了一个更加稳健的解决方案，以防止欺骗、商业邮件泄露和声誉损害。DMARC 于 2015 年作为互联网标准首次发布（RFC
    7489），旨在克服 SPF 和 DKIM 的局限性：它实现了这两个早期标准，但还会将成功与失败报告给发送域。DMARC 检查邮件的*对齐*，即 5322.From
    字段是否与认证的域名匹配。换句话说，它验证邮件中声明来自 info@nostarch.com 的*From* 字段，是否确实来源于该域。邮件可以通过 SPF
    和 DKIM，但在对齐方面失败。
- en: Here is what happens when a communication uses DMARC. First, a user writes an
    email. The sending email server inserts a DKIM header into it, and then sends
    it to the recipient. From there, in order for the email to traverse an organization
    with an enforced DMARC policy implemented, two things must happen. First, the
    email must pass DKIM signature checks (5322.From, with validation using a public
    key contained in DNS). Second, it must pass SPF checks (5322.From) and TXT records.
    Depending on the outcome of those checks, the DMARC record will specify that the
    server should either accept or reject the email. Reporting will occur for failures.
    The email undergoes any processes or filters enacted by the recipient, and if
    everything passes, it arrives in the recipient’s inbox.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当通信使用 DMARC 时，会发生以下情况。首先，用户撰写一封电子邮件。发送邮件的服务器将 DKIM 头部信息插入邮件中，然后将其发送给收件人。从那里开始，为了让邮件通过实施强制
    DMARC 策略的组织，必须满足两个条件。首先，邮件必须通过 DKIM 签名检查（5322.From，使用 DNS 中包含的公钥进行验证）。其次，邮件必须通过
    SPF 检查（5322.From）和 TXT 记录。根据这些检查的结果，DMARC 记录将指定服务器应该接受或拒绝该邮件。如果检查失败，会进行报告。邮件会经过收件人所采取的任何处理或过滤器，如果一切通过，邮件将进入收件人的收件箱。
- en: DMARC is widely used. Several compliance frameworks require it, along with US
    federal agencies, as directed by Department of Homeland Security Binding Operational
    Directive 18-01\. If you keep up with vendor marketing materials, you may recall
    the flood of vendors using this directive to sell DMARC and email security tools
    in 2017\. But these implementations are worthless without an enforced policy,
    or a technical configuration that directs actions to occur with minimal human
    intervention. Additionally, the recipient must actually check the records and
    enforce the policy they have in place.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: DMARC 被广泛使用。多个合规框架要求使用 DMARC，包括美国联邦机构，根据国土安全部的《绑定操作指令 18-01》。如果你跟进过供应商的市场宣传资料，你可能会记得
    2017 年大量供应商利用该指令推销 DMARC 和电子邮件安全工具。但这些实现没有强制执行的策略或技术配置，无法在最小化人工干预的情况下执行操作，这些实现是毫无价值的。此外，收件人必须实际检查记录并强制执行他们的策略。
- en: 'Two RFCs exist to update DMARC: RFC 8553, which addresses using underscores
    in node names; and RFC 8616, which addresses the use of ASCII characters in SPF,
    DKIM, and DMARC when they don’t address internationally used characters.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 有两份 RFC 用于更新 DMARC：RFC 8553，解决了在节点名称中使用下划线的问题；以及 RFC 8616，解决了在 SPF、DKIM 和 DMARC
    中使用 ASCII 字符时未涵盖国际使用字符的问题。
- en: Implementing DMARC
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 实现 DMARC
- en: 'Before you can implement DMARC, you have to implement SPF and DKIM. Then you’ll
    need to collect the information to put in the TXT record. You can find the full
    record format defined in Section 6.3 of RFC 7489, but you’ll need the following,
    at a minimum:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在实现 DMARC 之前，你必须先实现 SPF 和 DKIM。然后，你需要收集信息以便填入 TXT 记录。你可以在 RFC 7489 第 6.3 节中找到完整的记录格式定义，但至少需要以下信息：
- en: The version of DMARC (`v`) The version of DMARC in use. This is currently 1,
    indicated by `v=DMARC1`.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DMARC的版本（`v`） 当前使用的DMARC版本。目前为1，表示为`v=DMARC1`。
- en: The policy (`p`) The policy to be applied for a given domain.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 策略（`p`） 要应用于特定域的策略。
- en: The subdomain policy (`sp`) Policy that is applicable only to subdomains of
    the sending domain, such as emails from info@us.nostarch.com but not info@nostarch.com.
    In the absence of an `sp` field or qualifier, the organization will enforce the
    main `p` field.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 子域名策略（`sp`） 仅适用于发送域的子域名的策略，例如来自info@us.nostarch.com的邮件，但不包括来自info@nostarch.com的邮件。如果没有`sp`字段或限定符，组织将执行主`p`字段的策略。
- en: The percent of “bad emails” to apply the policy to (`pct`) A number between
    0 and 100 that determines the percentage of emails from a domain owner to apply
    the policy to.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用该策略的“坏邮件”百分比（`pct`） 一个介于0到100之间的数字，决定将该策略应用于域名所有者的邮件的百分比。
- en: The `rua` tag The email address to which the reports are sent. OSINT collectors
    can read and weaponize this, so an alias is recommended.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`rua`标签 该标签指定接收报告的电子邮件地址。OSINT收集器可以读取并利用这些信息，因此建议使用别名。'
- en: All fields in the DMARC record, aside from the version, require qualifiers.
    For example, the `policy` field takes either `none`, `quarantine`, or `reject`.
    The `none` qualifier takes no action, while `quarantine` redirects the email to
    be placed into spam folders or sent to administrators, and `reject` rejects the
    email.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 除版本外，DMARC记录中的所有字段都需要限定符。例如，`policy`字段接受`none`、`quarantine`或`reject`。`none`限定符不执行任何操作，`quarantine`将邮件重定向到垃圾邮件文件夹或发送给管理员，`reject`则会拒绝邮件。
- en: 'You can also add forensic reporting options and an address for forwarding forensic
    reports. The forensic failure reporting tag (`fo`) determines which events will
    generate forensic reporting. It has four options: `0`, which creates a failure
    report if all mechanisms fail; `1`, which creates a failure report if any mechanisms
    fail; `d`, which creates a DKIM failure report if DKIM fails, regardless of alignment;
    and `s`, whichcreates a SPF failure report if SPF fails, regardless of alignment.
    The `ruf` tag specifies the email address to which the forensic reports are sent.
    Like the `rua` tag, OSINT collectors can read and weaponize this, so use an alias.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以添加法医报告选项以及转发法医报告的地址。法医失败报告标签（`fo`）决定哪些事件会生成法医报告。它有四个选项：`0`，当所有机制失败时生成失败报告；`1`，当任何机制失败时生成失败报告；`d`，当DKIM失败时生成DKIM失败报告，不管对齐情况；`s`，当SPF失败时生成SPF失败报告，不管对齐情况。`ruf`标签指定接收法医报告的电子邮件地址。和`rua`标签一样，OSINT收集器可以读取并利用这些信息，因此建议使用别名。
- en: Two additional fields, `adkim` and `aspf`, determine whether the owner requires
    alignment mode, which dictates the actions to take if the email fails SPF or DKIM.
    Both have possible values of `r` for relaxed and `s` for strict. Relaxed requires
    an exact match for the domain only, while strict requires a complete exact match
    to pass. Both values are optional and, by default, set to relaxed.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 另外两个字段，`adkim`和`aspf`，决定所有者是否要求对齐模式，这决定了如果电子邮件未通过SPF或DKIM时应采取的措施。两者都有`r`（宽松）和`s`（严格）两种可能的值。宽松模式只要求域名完全匹配，而严格模式要求完全精确匹配才能通过。两者都是可选的，默认设置为宽松模式。
- en: 'This might seem like a lot of information. To put it to use, let’s configure
    a DMARC record for *nostarch.com*:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能看起来信息量很大。为了应用这些内容，让我们为*nostarch.com*配置一个DMARC记录：
- en: '[PRE3]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This record has a quarantine policy for domains only. It applies to 95 percent
    of the emails, and any failure causes forensic reporting, with forensic reports
    going to soc@nostarch.com. You’ll set the email address to receive the general
    DMARC reports to dmarc@nostarch.com*.*
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 该记录为域名设置了一个隔离策略。它适用于95%的邮件，任何失败都会触发法医报告，法医报告将发送到soc@nostarch.com。你将设置接收一般DMARC报告的电子邮件地址为dmarc@nostarch.com*。*
- en: Once you’ve drafted this, you’d add it to a TXT record in *nostarch.com*’s DNS
    zone file with the name *dmarc* and a TTL of `14400`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你草拟好这个内容，你需要将其添加到*nostarch.com*的DNS区域文件中的TXT记录，名称为*dmarc*，TTL值为`14400`。
- en: Shortcomings of DMARC
  id: totrans-99
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DMARC的不足之处
- en: Aside from the same information disclosures present in SPF, and the fact that
    your email recipients might not check for SPF or DKIM, DMARC itself introduces
    no significant issues or vulnerabilities.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 除了SPF中存在的相同信息泄露问题，以及你的邮件收件人可能不会检查SPF或DKIM外，DMARC本身并不会引入重大问题或漏洞。
- en: That said, simply creating the DNS TXT records for DMARC does not immediately
    make you secure. For example, you could easily misconfigure your DMARC implementation.
    When you’re initially configuring DMARC, avoid rejecting emails, as that removes
    the ability for humans to review the email for validity and may cause business
    interruptions or misdirected communications.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，仅仅创建DMARC的DNS TXT记录并不能立即确保您的安全。例如，您可能很容易配置错误您的DMARC实现。在初始配置DMARC时，避免拒绝电子邮件，因为这会删除人工审核邮件有效性的能力，并可能导致业务中断或邮件传递错误。
- en: 'Mitigating this is simple: start by setting the initial DMARC policy to `none`
    and review 100 percent of the emails (`p=none; pct=100;`). As time progresses,
    lower the `pct` field incrementally until you’re comfortable with the reports
    and the performance. Once you’ve attained a good level, change the review percentage
    to a manageable but realistic value. I recommend 60 to 85 percent for enterprises,
    depending on your resources. Then update the DMARC TXT record to reflect this
    (`p=quarantine; pct=75;`).'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 缓解这一问题很简单：首先将初始的DMARC策略设置为`none`，并审核100%的电子邮件（`p=none; pct=100;`）。随着时间的推移，逐步降低`pct`字段，直到您对报告和性能感到满意。一旦达到了理想的水平，您可以将审核百分比更改为一个可管理但现实的值。我建议企业设置为60%到85%，具体取决于您的资源。然后更新DMARC
    TXT记录以反映这一点（`p=quarantine; pct=75;`）。
- en: Keep in mind that actors who use email to attempt to gain access to your organization’s
    enterprise may leverage tools to enhance their legitimacy, so don’t rely solely
    on SPF, DKIM, and DMARC. For example, if an actor compromises another organization
    with SPF, DKIM, and DMARC configured, and then sends your organization an email
    through legitimate channels, it will pass all checks associated with these three
    standards.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，试图通过电子邮件获取您组织访问权限的攻击者可能会利用工具来增强其合法性，因此不要仅仅依赖SPF、DKIM和DMARC。例如，如果一个攻击者通过配置了SPF、DKIM和DMARC的其他组织进行了攻击，并且通过合法渠道向您的组织发送电子邮件，那么它将通过与这三个标准相关的所有检查。
- en: Another threat vector not addressed by DMARC is encryption. The three standards
    do not provide a means to encrypt emails. Sure, DKIM uses cryptography, but only
    to sign emails. The next sections cover how to address this gap.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: DMARC未解决的另一个威胁向量是加密。这三个标准并未提供加密电子邮件的方式。当然，DKIM使用了加密技术，但仅仅是用于签名电子邮件。接下来的部分将介绍如何解决这一问题。
- en: Opportunistic TLS
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机会性TLS
- en: When originally designed, the SMTP, POP, and IMAP mail protocols didn’t include
    encryption. As attacks evolved, researchers created *Opportunistic Transport Layer
    Security (TLS)* to encrypt them. You’ll sometimes see it nicknamed *STARTTLS*,
    after the command used to start the service.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在最初设计时，SMTP、POP和IMAP邮件协议并不包括加密。随着攻击的发展，研究人员创建了*机会性传输层安全性（TLS）*来加密它们。您有时会看到它被昵称为*STARTTLS*，这是用于启动该服务的命令。
- en: Here’s how STARTTLS works. First, the sending server connects to the receiving
    server as normal. It then requests Extended SMTP, which allows images and attachments.
    From here, the sender asks the recipient server if it supports STARTTLS. If the
    response is yes, the connection restarts and encrypts the email using the version
    of the SSL or TLS protocol agreed upon by both hosts. If the answer is no, the
    email proceeds unencrypted. Another variant, called *Enforced TLS*, won’t let
    the email send unless the connection is secured. The use of Enforced TLS is not
    widely adopted because of the possibility of mail being blocked for the inability
    to negotiate encryption.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是STARTTLS的工作原理。首先，发送服务器像往常一样连接到接收服务器。然后，它请求扩展SMTP，允许图片和附件。从这里，发送方询问接收服务器是否支持STARTTLS。如果回答是“是”，连接将重新启动并使用双方主机达成协议的SSL或TLS协议版本来加密电子邮件。如果回答是否定的，电子邮件将不加密地继续发送。另一种变体，称为*强制TLS*，如果连接没有得到加密，邮件将无法发送。由于无法协商加密而导致邮件被阻止的可能性，强制TLS的使用并不广泛。
- en: The biggest problem with STARTTLS is that it is *opportunistic,* which means
    it uses encryption only if available. In the absence of available encryption or
    support for it, the message will be sent in plaintext. Another problem with STARTTLS
    is that the encryption handshake itself occurs in plaintext, which enables would-be
    attackers to steal the session information or modify the messages via man-in-the-middle
    attacks. You can see both of these problems exploited in *STRIPTLS attacks,* whereby
    an attacker either disables the actual STARTTLS command or makes it appear as
    if TLS is unavailable. By configuring SMTP to require TLS for outgoing connections,
    you can mitigate STRIPTLS but might lose outgoing email services if you misconfigure
    the TLS or if the recipient is not configured to receive TLS emails/blocks the
    port.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: STARTTLS 的最大问题在于它是*机会性的*，这意味着只有在可用时才使用加密。如果没有可用的加密或加密支持，邮件将以明文方式发送。STARTTLS
    的另一个问题是加密握手本身发生在明文中，这使得潜在攻击者能够通过中间人攻击窃取会话信息或篡改邮件内容。你可以在*STRIPTLS 攻击*中看到这两个问题被利用，攻击者要么禁用实际的
    STARTTLS 命令，要么让 TLS 看起来不可用。通过配置 SMTP 要求传出连接使用 TLS，可以减轻 STRIPTLS 的影响，但如果配置错误 TLS
    或接收方未配置为接收 TLS 邮件/阻止该端口，可能会丧失发送邮件服务。
- en: Another mitigation of STRIPTLS exists in a subordinate function of Domain Name
    System Security Extensions (DNSSEC) called DNS-based Authentication of Named Entities
    (DANE). Implementing DANE requires organizations to create a DNS record that directs
    all communications on a specific port or protocol to negotiate the session using
    a public key placed into DNS. This could also be misused or collected as part
    of an OSINT effort, as with anything in public DNS entries, as an adversary can
    query DNS records and draw inferences from the entries. While this mitigation
    itself is simple to implement, DNSSEC overall is not, so we haven’t seen widespread
    adoption of it.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个减轻 STRIPTLS 的方案是域名系统安全扩展（DNSSEC）下的一个子功能，称为基于 DNS 的命名实体认证（DANE）。实现 DANE 需要组织创建一个
    DNS 记录，指引所有在特定端口或协议上的通信，通过在 DNS 中放置公钥来协商会话。这也可能被滥用或作为开放源情报（OSINT）的一部分收集，就像任何公开的
    DNS 记录一样，攻击者可以查询 DNS 记录并从中推断信息。虽然这种缓解方案本身很容易实现，但总体来说，DNSSEC 并不简单，因此我们尚未看到其广泛应用。
- en: 'Around the same time that DANE was being developed, a different solution to
    the same problem (STRIPTLS) was being drafted: SMTP MTA Strict Transport Security
    (MTA-STS).'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 与 DANE 开发的时间相近，另一种解决相同问题的方案（STRIPTLS）也在草拟中：SMTP MTA 严格传输安全（MTA-STS）。
- en: MTA-STS
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MTA-STS
- en: '*SMTP MTA Strict Transport Security (MTA-STS)* is another way of implementing
    TLS for securing email communications. In this method, the two parties negotiate
    the TLS handshake using DNS TXT records, as well as files uploaded to specific
    directories in a predefined, publicly accessible subdomain of the sending domain.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '*SMTP MTA 严格传输安全（MTA-STS）* 是另一种实现 TLS 来保障电子邮件通信安全的方法。在这种方法中，双方使用 DNS TXT 记录以及上传到发送域预定义的、公开可访问的子域的特定目录中的文件，来协商
    TLS 握手。'
- en: This standard applies to only SMTP traffic between mail servers. The communication
    between client and server is accomplished using HTTP Strict Transport Security
    (HSTS). Because of the complexity of implementing MTA-STS, I won’t walk through
    the process here. You can find links to tutorials at [http://email-security.seosint.xyz/](http://email-security.seosint.xyz/)*.*
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 该标准仅适用于邮件服务器之间的 SMTP 流量。客户端与服务器之间的通信通过 HTTP 严格传输安全（HSTS）来实现。由于实现 MTA-STS 的复杂性，我不会在这里详细讲解过程。你可以在
    [http://email-security.seosint.xyz/](http://email-security.seosint.xyz/) 查找教程链接。
- en: TLS-RPT
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TLS-RPT
- en: '*SMTP TLS Reporting (TLS-RPT)* is a method of gathering statistics about potential
    failures when negotiating TLS and associated domains. Think of this as comparable
    to DMARC, if MTA-STS were the DKIM element. You can use this information for troubleshooting
    or threat intelligence.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '*SMTP TLS 报告（TLS-RPT）* 是一种收集有关 TLS 协商失败统计信息的方法，及相关域。可以将其视为类似 DMARC，如果 MTA-STS
    是 DKIM 元素的话。你可以使用这些信息进行故障排除或威胁情报分析。'
- en: 'Setting up TLS-RPT is relatively easy, as it merely requires a DNS TXT record
    with `_smtp._tls.``domain.tld` and a reporting address in the body. If an error
    occurs with an email using an encrypted method (DANE or MTA-STS), the reporting
    email will receive a notification. The following is an example for *nostarch.com*:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 TLS-RPT 相对简单，只需在 DNS 中添加一个包含 `_smtp._tls.``domain.tld` 的 TXT 记录，并在邮件正文中包含报告地址。如果加密方式（DANE
    或 MTA-STS）出现错误，报告邮箱将收到通知。以下是 *nostarch.com* 的示例：
- en: '[PRE4]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The top line is the field name and TTL. The second line is the value. Here,
    we’ve set the TTL to 300 and reporting to [soc@nostarch.com](http://mailto:soc@nostarch.com).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行是字段名和 TTL。第二行是值。在这里，我们已将 TTL 设置为 300，并将报告发送到 [soc@nostarch.com](http://mailto:soc@nostarch.com)。
- en: Email Filtering Technologies
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电子邮件过滤技术
- en: The final step to achieving email security Zen is using filtering technologies.
    This typically means hiring a vendor or service provider to receive your emails
    before you do. The vendor will scan them for patterns they observe across all
    clients, and check for SPF, DKIM, and DMARC, if configured. Email filtering isn’t
    perfect, but it does remove a lot of the burden from the technical staff. Keep
    in mind, though, that hiring a vendor will likely require you to make changes
    to your public DNS records, and you can discover these relationships using OSINT
    techniques, as discussed previously.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 实现电子邮件安全的最后一步是使用过滤技术。通常，这意味着聘请供应商或服务提供商在你收到邮件之前接收它们。供应商会扫描它们，查找在所有客户端中观察到的模式，并检查
    SPF、DKIM 和 DMARC（如果已配置）。电子邮件过滤并不完美，但确实减少了技术人员的负担。不过，请记住，聘请供应商可能需要你更改公共 DNS 记录，而你可以通过前面讨论过的
    OSINT 技术发现这些关系。
- en: Many configurations and products are out there. When choosing a vendor, consider
    their throughput of emails per minute or second. Also decide whether you’d like
    to maintain the email filtering through software, an appliance, or a cloud service.
    Each option presents unique challenges, particularly with respect to implementation,
    support, availability, and reporting, and each offers different features. Email
    filtering may be easier to implement in cloud instances, as these would best protect
    the availability of email. However, any decision that requires configuration,
    especially beyond DNS records, might afford opportunities for failure, disruption,
    or poor security. If you choose to use a cloud provider, you’ll also be reliant
    upon the SLA and your contract with the vendor. That said, they do simplify the
    process; you’ll be responsible for just updating your MX record in the DNS zone
    file and selecting the proper options.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 市面上有许多配置和产品。在选择供应商时，考虑他们每分钟或每秒钟处理的电子邮件量。还要决定是否希望通过软件、硬件设备或云服务来维护电子邮件过滤。每种选择都有独特的挑战，尤其是在实施、支持、可用性和报告方面，而且每种方式都提供不同的功能。电子邮件过滤在云实例中可能更容易实施，因为这些实例可以最好地保护电子邮件的可用性。然而，任何需要配置的决定，特别是超出
    DNS 记录的配置，可能会带来失败、干扰或不良安全性的问题。如果你选择使用云服务提供商，你还将依赖于服务水平协议（SLA）以及与你供应商的合同。尽管如此，它们确实简化了流程；你只需更新
    DNS 区域文件中的 MX 记录并选择适当的选项。
- en: Some vendors will also maintain and manage your SPF, DKIM, and DMARC implementations
    for you. Weigh the risks of what could occur to disrupt the system against what
    you gain from using the system. Does the vendor provide you their threat intelligence?
    Is this the service that the vendor specializes in? What does the contract entail?
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 一些供应商还会为你维护和管理你的 SPF、DKIM 和 DMARC 实现。权衡可能导致系统中断的风险与使用该系统所能获得的收益。供应商是否提供其威胁情报？这是否是供应商的专业服务？合同内容包含什么？
- en: Other Protections
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他保护措施
- en: As security professionals, we must build our systems so that they can not only
    handle ordinary use, but also withstand abuse in a way that contains the actions
    long enough for us to detect and respond to them. This is the crux of Winn Schwartau’s
    book *Time Based Security* (Impact PR, 1999).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 作为安全专业人员，我们必须构建我们的系统，使其不仅能应对日常使用，还能承受滥用，并能在足够长的时间内容纳这些行为，让我们可以检测并响应。这是Winn Schwartau的书《基于时间的安全》（Impact
    PR, 1999）中的核心观点，*基于时间的安全*。
- en: When securing your systems against phishing, consider implementing controls
    beyond those used solely for email. While we won’t discuss them in this chapter,
    implement malware protection, whether it’s antivirus, endpoint detection and response
    (EDR), or any other anti-malware product. Most malware finds its way into networks
    via email when users download it from a successful phish.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在防止钓鱼攻击时，考虑实施超出单纯电子邮件控制的措施。虽然我们在本章中不讨论这些措施，但要实施恶意软件防护，无论是杀毒软件、终端检测与响应（EDR）还是其他任何反恶意软件产品。大多数恶意软件通过电子邮件进入网络，当用户从成功的钓鱼邮件中下载它时。
- en: 'Two other technologies can prevent catastrophic outcomes from phishing: file
    integrity monitoring (FIM) and data loss prevention (DLP) systems. FIM monitors
    a set of files for modification. You could write a simple FIM solution that takes
    a cryptographic hash of every file and stores it somewhere. It would then validate
    that the files haven’t changed, and if they have, check whether the change was
    authorized. This is important for detecting malicious actors already in the network.
    If the file contents changed without authorization, this could indicate new applications
    running or being installed, ransomware, or someone tampering with important files.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 另外两种技术可以防止钓鱼攻击造成灾难性后果：文件完整性监控（FIM）和数据丢失防护（DLP）系统。FIM 监控一组文件是否被修改。你可以编写一个简单的
    FIM 解决方案，对每个文件进行加密哈希计算并将其存储在某个地方。然后，它会验证文件是否未被更改，如果更改了，还会检查更改是否被授权。这对于检测已进入网络的恶意行为者非常重要。如果文件内容未经授权发生了变化，可能意味着新应用程序正在运行或被安装、勒索软件的存在，或者有人篡改了重要文件。
- en: DLP aims to prevent users from emailing files outside the organization, uploading
    files to the public internet and file-sharing websites (like Google Drive, Box,
    and Dropbox), and saving data to unauthorized USB devices (if any at all). Many
    DLP solutions also have the capability to prevent users from sharing sensitive
    or regulated data like Payment Card Industry (PCI) data, PHI, and PII. This is
    important because it prevents users from handing over trade secrets, intellectual
    property, and crown jewels. It also takes away many of the reasons they would
    have to plug a USB drive into their workstations in the first place, reducing
    the likelihood of a successful baiting attack.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 数据丢失防护（DLP）旨在防止用户将文件通过电子邮件发送到组织外部，上传到公共互联网和文件共享网站（如 Google Drive、Box 和 Dropbox），以及将数据保存到未经授权的
    USB 设备上（如果有的话）。许多 DLP 解决方案还具备防止用户共享敏感或受监管数据的能力，例如支付卡行业（PCI）数据、个人健康信息（PHI）和个人身份信息（PII）。这很重要，因为它可以防止用户泄露商业机密、知识产权和重要资产。它还消除了用户将
    USB 驱动器插入工作站的许多理由，从而减少了成功的诱饵攻击的可能性。
- en: Conclusion
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In this chapter, you took steps to make your organization a little safer. You
    learned about the three email security standards that aim to curb email spoofing,
    as well as the shortcomings of each. (If you’re like me, you’ve developed a special
    hatred of the letters *RFC*.)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你采取了一些措施使你的组织变得更加安全。你了解了三种旨在遏制电子邮件欺骗的安全标准，以及每种标准的不足之处。（如果你像我一样，可能已经对字母*RFC*产生了特别的厌恶。）
- en: Using the information in this chapter, you can apply the concepts and standards
    to your organization to create layers of defense. You may have to explain to management
    that SPF, DKIM, and DMARC aren’t absolute solutions to phishing, and that even
    when they’re in place, the organization should consider installing more controls,
    like email filtering solutions.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 运用本章中的信息，你可以将这些概念和标准应用到你的组织中，构建多层防御。你可能需要向管理层解释，SPF、DKIM 和 DMARC 不是防止钓鱼攻击的绝对解决方案，即使它们已经到位，组织也应该考虑安装更多的控制措施，例如电子邮件过滤解决方案。
- en: After the organization chooses the email filtering solution that best fits with
    its compliance needs and budget, take the time to properly implement the solution.
    Then test it with phishing simulations. If the simulations get caught, great.
    Next, you could release them from quarantine to test users. If the simulations
    make it through, work with the vendor to determine why and how to fix the problem.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在组织选择最符合合规需求和预算的电子邮件过滤解决方案后，花时间正确实施该解决方案。然后，通过钓鱼模拟进行测试。如果模拟被拦截，那就太好了。接下来，你可以将其从隔离区释放出来，测试用户。如果模拟攻击成功通过，与你的供应商合作，找出原因并解决问题。
