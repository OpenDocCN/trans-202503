["```\nstr = Text.Append(\"He-\", \"Man\")\nTextWindow.WriteLine(str) ' Displays: He-Man\n```", "```\nres = Text.Append(\"1\", \"5\")\nTextWindow.WriteLine(res)       ' Output: 15 (1 followed by 5)\nTextWindow.WriteLine(\"1\" + \"5\") ' Output: 6\n```", "```\n1 res = Text.GetLength(\"\")               ' res = 0 (empty string)\n2 res = Text.GetLength(\"Careless Bears\") ' res = 14 (the space counts!)\n3 res = Text.GetLength(1023)             ' res = 4\n4 res = Text.GetLength(-101.5)           ' res = 6\n```", "```\n1 myString = \"The quick brown fox\"\n2 res = Text.IsSubText(myString, \"brown\") ' res = \"True\"\n3 res = Text.IsSubText(myString, \"BROWN\") ' res = \"False\"\n4 res = Text.IsSubText(myString, \"dog\")   ' res = \"False\"\n```", "```\n1 myString = \"The quick brown fox\"\n2 res = Text.EndsWith(myString, \"fox\") ' res = \"True\"\n3 res = Text.EndsWith(myString, \"x\")   ' res = \"True\"\n4 res = Text.EndsWith(myString, \"FOX\") ' res = \"False\"\n5 res = Text.EndsWith(myString, \"dog\") ' res = \"False\"\n```", "```\n1 myString = \"The quick brown fox\"\n2 res = Text.StartsWith(myString, \"The\") ' res = \"True\"\n3 res = Text.StartsWith(myString, \"T\")   ' res = \"True\"\n4 res = Text.StartsWith(myString, \"the\") ' res = \"False\"\n```", "```\n1 myString = \"The quick brown fox\"\n2 res = Text.GetSubText(myString, 1, 3)  ' res = \"The\"\n3 res = Text.GetSubText(myString, 0, 3)  ' res = \"\"\n4 res = Text.GetSubText(myString, 17, 3) ' res = \"fox\"\n5 res = Text.GetSubText(myString, 17, 4) ' res = \"fox\"\n```", "```\nstrIn = \"Pirate squids hate hot dogs.\"\nFor N = 1 To Text.GetLength(strIn)  ' For each character\n  ch = Text.GetSubText(strIn, N, 1) ' Gets the character at position N\n  TextWindow.WriteLine(ch)          ' Displays it on a new line\nEndFor\n```", "```\n1 myString = \"The quick brown fox\"\n2 res = Text.GetSubTextToEnd(myString, 13) ' res = \"own fox\"\n3 res = Text.GetSubTextToEnd(myString, 19) ' res = \"x\"\n4 res = Text.GetSubTextToEnd(myString, 20) ' res = \"\"\n```", "```\n1 myString = \"The quick brown fox\"\n2 res = Text.GetIndexOf(myString, \"The\")   ' res = 1\n3 res = Text.GetIndexOf(myString, \"quick\") ' res = 5\n4 res = Text.GetIndexOf(myString, \"QUICK\") ' res = 0\n5 res = Text.GetIndexOf(myString, \"o\")     ' res = 13\n6 res = Text.GetIndexOf(myString, \"dog\")   ' res = 0\n```", "```\n1 ' ChangeCase.sb\n2 var1 = \"Ewok\"\n3 lwrCase = Text.ConvertToLowerCase(var1)   ' lwrCase = \"ewok\"\n4 TextWindow.WriteLine(lwrCase)             ' Displays: ewok\n5 TextWindow.WriteLine(var1)                ' Displays: Ewok\n6 uprCase = Text.ConvertToUpperCase(var1)   ' uprCase = \"EWOK\"\n7 TextWindow.WriteLine(uprCase)             ' Displays: EWOK\n8 TextWindow.WriteLine(var1)                ' Displays: Ewok\n```", "```\n 1 ' StringMatch.sb\n 2 While (\"True\")\n 3   TextWindow.Write(\"Who's your favorite Shrek character? \")\n 4   name = Text.ConvertToUpperCase(TextWindow.Read())\n 5   If (name = \"DONKEY\") Then\n 6     TextWindow.WriteLine(\"You won 200 ogre points!\")\n 7   Else\n 8     TextWindow.WriteLine(\"You won 100 ogre points!\")\n 9   EndIf\n10 EndWhile\n```", "```\nname = TextWindow.Read()\nname = Text.ConvertToUpperCase(name)\n```", "```\nWho's your favorite Shrek character? dOnkey\nYou won 200 ogre points!\n```", "```\n1 ' CharCode.sb\n2 str = \"ABab12\"\n3 For N = 1 To Text.GetLength(str)\n4   ch = Text.GetSubText(str, N, 1)         ' Gets the Nth character\n5   code = Text.GetCharacterCode(ch)        ' Gets its code point\n6   TextWindow.WriteLine(ch + \": \" + code)  ' Displays ch and its code point\n7 EndFor\n```", "```\nA: 65\nB: 66\na: 97\nb: 98\n1: 49\n2: 50\n```", "```\n 1 ' UnicodeDemo.sb\n 2 GraphicsWindow.BrushColor = \"Black\"\n 3 GraphicsWindow.FontSize = 30  ' Makes the font larger\n 4\n 5 code = 9728           ' Code point for the first symbol\n 6 xPos = 0              ' Horizontal position for drawing a symbol\n 7 yPos = 0              ' Vertical position for drawing a symbol\n 8 For row = 1 To 7      ' Draws 7 rows\n 9   xPos = 0            ' For each new row, start at the left edge\n10   For col = 1 To 20   ' 20 columns for each row\n11     ch = Text.GetCharacter(code)              ' Gets a character\n12     GraphicsWindow.DrawText(xPos, yPos, ch)   ' Draws it\n13     code = code + 1                           ' Sets to next code point\n14     xPos = xPos + 30                          ' Leaves a horizontal space\n15   EndFor\n16   yPos = yPos + 30                            ' Moves to the next row\n17 EndFor\n```", "```\ncode for uppercase ch = code(A) + (code for lowercase ch – code(a))\n```", "```\nQUO = Text.GetCharacter(34)                 ' Gets the double quotation mark\nTextWindow.WriteLine(QUO + \"Bazinga\" + QUO) ' Output: \"Bazinga\"\n```", "```\nLF = Text.GetCharacter(10)                     ' Code for line feed\nTextWindow.WriteLine(\"Line1\" + LF + \"Line2\")   ' Displays two lines\n```", "```\nTextWindow.WriteLine(\"Line1\")\nTextWindow.WriteLine(\"Line2\")\n```", "```\nFor code = 65 To 90\n  ch = Text.GetCharacter(code)\n  TextWindow.WriteLine(ch)\nEndFor\n```", "```\n 1 ' VowelCount.sb\n 2 TextWindow.Write(\"Enter a sentence: \")  ' Prompts the user for text\n 3 str = TextWindow.Read() ' Reads text entered by the user\n 4\n 5 count = 0               ' Sets vowel count to 0 (so far)\n 6 For N = 1 To Text.GetLength(str)        ' Checks all characters\n 7   ch = Text.GetSubText(str, N, 1)       ' Gets Nth character\n 8   ch = Text.ConvertToUpperCase(ch)      ' Makes it uppercase\n 9   If ((ch = \"A\") Or (ch = \"E\") Or (ch = \"I\") Or (ch = \"O\") Or (ch = \"U\")) Then\n10     count = count + 1  ' If it finds a vowel, increments count\n11   EndIf\n12 EndFor\n13 TextWindow.Write(\"Your sentence contains [\") ' Shows result\n14 TextWindow.WriteLine(count + \"] vowels.\")\n```", "```\nEnter a sentence: Small Basic is fun\nYour sentence contains [5] vowels.\n\nEnter a sentence: Giants leave nasty diapers.\nYour sentence contains [9] vowels.\n```", "```\n 1 ' Palindrome.sb\n 2 Again:\n 3 TextWindow.WriteLine(\"\")\n 4 TextWindow.Write(\"Enter a number: \")\n 5 ans = TextWindow.ReadNumber()          ' Saves user's input in ans\n 6\n 7 length = Text.GetLength(ans)           ' Number of digits of input number\n 8 pos1 = 1                               ' Sets pos1 to read first digit\n 9 pos2 = length                          ' Sets pos2 to read last digit\n10 For N = 1 To (length / 2)              ' Performs (length/2) comparisons\n11   ch1 = Text.GetSubText(ans, pos1, 1)  ' Reads digit at position pos1\n12   ch2 = Text.GetSubText(ans, pos2, 1)  ' Reads digit at position pos2\n13   If (ch1 <> ch2) Then                 ' If not equal, no need to continue\n14     TextWindow.WriteLine(ans + \" isn't a palindrome.\")  ' Shows result\n15     Goto Again\n16   EndIf\n17 EndFor\n18\n19 TextWindow.WriteLine(ans + \" is a palindrome.\")\n20 Goto Again\n```", "```\nEnter a number: 1234321\n1234321 is a palindrome.\n\nEnter a number: 12345678\n12345678 isn't a palindrome.\n```", "```\n 1 ' PigLatin.sb\n 2 TextWindow.Title = \"Pig Latin\"\n 3\n 4 While (\"True\")\n 5   TextWindow.Write(\"Enter a word: \")\n 6   word = TextWindow.Read()\n 7\n 8   pigLatin = Text.GetSubTextToEnd(word, 2)          ' Gets characters 2 to end\n 9   pigLatin = pigLatin + Text.GetSubText(word, 1, 1) ' Appends first character\n10   pigLatin = pigLatin + \"ay\"                        ' Appends \"ay\"\n11   TextWindow.WriteLine(pigLatin)                    ' Displays the output\n12   TextWindow.WriteLine(\"\")\n13 EndWhile\n```", "```\n 1 ' FixMySpelling.sb\n 2 words = \"1=mountain;2=valley;...;22=animation;\" ' See file for full list\n 3\n 4 While (\"True\")      ' Runs forever\n 5   strIn = words[Math.GetRandomNumber(Array.GetItemCount(words))]\n 6   randChar = Text.GetCharacter(96 + Math.GetRandomNumber(26))\n 7   charPos = Math.GetRandomNumber(Text.GetLength(strIn))\n 8\n 9   strOut = Text.GetSubText(strIn, 1, charPos - 1)\n10   strOut = strOut + randChar\n11   strOut = strOut + Text.GetSubTextToEnd(strIn, charPos)\n12\n13   TextWindow.Write(\"Enter correct spelling for [\" + strOut + \"]: \")\n14   ans = TextWindow.Read()\n15   ans = Text.ConvertToLowerCase(ans)\n16   If (ans = strIn) Then\n17     TextWindow.WriteLine(\"Good Job!\")\n18   Else\n19     TextWindow.WriteLine(\"Incorrect. It is \" + strIn + \".\")\n20   EndIf\n21   TextWindow.WriteLine(\"\")\n22 EndWhile\n```", "```\nEnter correct spelling for [mairror]: miror\nIncorrect. It is mirror.\n\nEnter correct spelling for [inteorface]: interface\nGood Job!\n```", "```\n 1 ' Unscramble.sb\n 2 words = \"1=mountain;2=valley;...;22=animation;\" ' See file for full list\n 3\n 4 While (\"True\")\n 5   strIn = words[Math.GetRandomNumber(Array.GetItemCount(words))]\n 6   Scramble()  ' Returns strOut (a scrambled version of strIn)\n 7\n 8   TextWindow.Write(\"Unscramble [\" + strOut + \"]: \")\n 9   ans = TextWindow.Read()\n10   ans = Text.ConvertToLowerCase(ans)\n11\n12   If (ans = strIn) Then\n13     TextWindow.WriteLine(\"Good Job!\")\n14   Else\n15     TextWindow.WriteLine(\"No. It is \" + strIn + \".\")\n16   EndIf\n17   TextWindow.WriteLine(\"\")\n18 EndWhile\n```", "```\n 1 Sub Scramble                                ' Scramble subroutine\n 2   len = Text.GetLength(strIn)\n 3   For N = 1 To len                          ' Loops up to length of word\n 4     char[N] = Text.GetSubText(strIn, N, 1)  ' Saves each letter into an array\n 5   EndFor\n 6\n 7   strout = \"\"                               ' Empties the output string\n 8   While (Text.GetLength(strout)< len)\n 9     pos = Math.GetRandomNumber(len)         ' Picks where to place the letter\n10     If (char[pos] <> \"\") Then\n11       strout = strout + char[pos]           ' Adds in the extra letter\n12       char[pos] = \"\"                        ' Empties the element\n13     EndIf\n14   EndWhile\n15 EndSub\n```", "```\nUnscramble [lalvey]: lovely\nNo. It is valley.\n```", "```\nThis is the Rat,\nThat ate\n```", "```\nThis is the Rat,\nThat ate the Malt,\nThat lay in\n```", "```\nThis is the Rat,\nThat ate the Malt,\nThat lay in the House that Jack built.\n```", "```\n 1 ' JackHouse.sb\n 2 GraphicsWindow.Title = \"The House That Jack Built\"\n 3 GraphicsWindow.CanResize = \"False\"\n 4 GraphicsWindow.Width = 480\n 5 GraphicsWindow.Height = 360\n 6 GraphicsWindow.FontBold = \"False\"\n 7 GraphicsWindow.FontSize = 20\n 8 GraphicsWindow.FontName = \"Times New Roman\"\n 9\n10 LF = Text.GetCharacter(10)  ' Code for line feed\n11\n12 rhyme[1] = \"the Farmer who sowed the corn,\" + LF + \"That fed \"\n13 rhyme[2] = \"the Cock that crowed in the morn,\" + LF + \"That waked \"\n14 rhyme[3] = \"the Priest all shaven and shorn,\" + LF + \"That married \"\n15 rhyme[4] = \"the Man all tattered and torn,\" + LF + \"That kissed \"\n16 rhyme[5] = \"the Maiden all forlorn,\" + LF + \"That milked \"\n17 rhyme[6] = \"the Cow with the crumpled horn,\" + LF + \"That tossed \"\n18 rhyme[7] = \"the Dog,\" + LF + \"That worried \"\n19 rhyme[8] = \"the Cat,\" + LF + \"That killed \"\n20 rhyme[9] = \"the Rat,\" + LF + \"That ate \"\n21 rhyme[10] = \"the Malt,\" + LF + \"That lay in \"\n22 rhyme[11] = \"the House that Jack built.\"\n23\n24 Controls.AddButton(\"Next\", 420, 320)\n25 Controls.ButtonClicked = OnButtonClicked\n26 nextLine = 11\n27 OnButtonClicked()\n```", "```\n 1 Sub OnButtonClicked\n 2   img = Program.Directory + \"\\Page\" + (12 - nextLine) + \".png\"\n 3   GraphicsWindow.DrawImage(img, 0, 0)\n 4\n 5   strOut = \"This is \"\n 6   For N = nextLine To 11\n 7     strOut = Text.Append(strOut, rhyme[N])\n 8   EndFor\n 9   GraphicsWindow.DrawText(10, 10, strOut)\n10\n11   nextLine = nextLine - 1\n12   If (nextLine = 0) Then\n13     nextLine = 11\n14   EndIf\n15 EndSub\n```"]