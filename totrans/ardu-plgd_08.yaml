- en: '**7'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A CUSTOM PH METER**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/common-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
- en: Microcontrollers are used in many, if not most, commercial and scientific instruments.
    They are accurate and versatile, which makes them a relatively low-cost solution
    to a variety of measurement requirements. This project combines an Arduino microcontroller
    with a commercial probe and some analog circuitry to construct an accurate meter
    that measures *pH*, the relative acidity or alkalinity of a solution.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: There are three basic ways of measuring pH. This project involves using a pH
    meter and probe. The other approaches are litmus paper indicators, which you might
    remember from high school chemistry, and colorimeters, the traditional swimming
    pool maintenance kit. The latter is usually a kit of chemical reagents with a
    comparison color chart. Of the three, a pH meter is by far the most accurate.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: But what does pH measure, exactly? The pH value describes the activity of hydrogen
    ions in aqueous solutions. The higher the activity of hydrogen ions, the more
    acidic the solution is and the lower the pH is. Less activity of hydrogen ions
    (and greater activity of hydroxide ions) results in a higher pH.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: The pH scale is logarithmic. A difference of one pH measurement unit represents
    a tenfold increase or reduction of hydrogen-ion activity in the solution. This
    explains how a solution’s aggressiveness rapidly increases with the distance from
    the neutral point on the pH scale.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 7-1](ch07.xhtml#ch07fig1) shows the finished Custom pH Meter, and if
    you wonder why measuring pH is useful, “[Why Measure pH?](ch07.xhtml#ch07note1)”
    on [page 187](ch07.xhtml#page_187) discusses several answers to that question.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-01.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-1: The Custom pH Meter in an actual measurement environment*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '**Why Build Your Own pH Meter?**'
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Commercial pH meters run the gamut of prices from low-cost portable units under
    $60 to full-fledged laboratory instruments costing several hundred or several
    thousand dollars. Relatively low-cost pH meters can do the job, but all have drawbacks,
    such as marginal accuracy, relatively short lifetime, calibration issues, and
    consistency.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: A variety of pH meter kits are also available, including many stamps, some designed
    for the Arduino. (A *stamp* is a small circuit board with the critical circuitry
    to perform some function, minus the processor.) I have not had a chance to sample
    these kits, but they tend to be pricey, running close to or over $100\. And they
    still require a power supply and packaging.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: While this project doesn’t propose to offer a full-scale laboratory instrument,
    it provides a good, workable pH meter and gives a lot of insight into what actually
    comprises a pH meter. I’ve made every attempt to tune the circuit for optimal
    performance, but you may find further adjustment helpful, so if you want to try
    something different after seeing the circuit, go for it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '**WHY MEASURE pH?**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: In the past, pH was a relatively obscure measurement, confined to the laboratory
    bench and industrial environments (for quality control, process control, measuring
    and controlling waste effluents, and so on). However, more people have started
    using scientific measurement in areas that have traditionally relied on rote instructions
    or trial-and-error experimentation, like home winemaking and beer brewing, hydroponics,
    home agriculture, hydroculture, and baking. All of these applications can benefit
    from accurate pH measurement, and they don’t even include the more mundane task
    of managing the chemistry of your swimming pool, koi pond, fountain, or aquarium.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, in baking, dough needs a low pH to rise. The pH of foods also
    impacts two of the four tastes: low-pH, or acidic, foods tend to taste sour, while
    higher-pH, or more alkaline, foods taste bitter. Lemon juice is an example of
    sour, and broccoli rabe or dark chocolate can be considered bitter. In home gardening,
    pH is an important soil characteristic for particular crops. Simple adjustments
    in pH can make aquarium water clear and reduce scum deposits on the glass sides,
    and a balanced pH in ponds keeps fish healthy and reduces algae. And the list
    goes on.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '**Required Tools**'
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Soldering iron and solder
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Drill and drill bits
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Keyhole saw
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Center punch
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: File
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: 2-56 tap
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Heat gun or hair dryer (for heat-shrink tubing)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '**Parts List**'
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You’ll need the following parts to build your Custom pH meter:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: One Deek-Robot Pro Mini Arduino clone (Other Arduinos should work with the project
    in general, but not with the shield template provided for this book. I used an
    Arduino Nano clone for the breadboard because of the built-in USB interface. In
    the completed unit, I switched to the Pro Mini to conserve space.)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: One LM35 (D) temperature sensor
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: One Texas Instruments TL072 dual op-amp (The pinout is shown in [Figure 7-2](ch07.xhtml#ch07fig2).)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-2: TL072 pinout*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: One 10-turn, 1-megaohm trimmer (R7)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: One 10-turn, 10-kilohm trimmer (R4)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: One BNC male connector
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: One LM7805 voltage regulator
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: One LMC7660 power inverter (The pinout is shown in [Figure 7-3](ch07.xhtml#ch07fig3).)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-03.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-3: LMC7660 pinout*'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: One 16×2 LCD
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: One I²C adapter, if not included with the LCD
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: One 5.1V Zener diode
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: One 1 μF ceramic capacitor (C2)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Five 0.1 μF ceramic capacitors (C1, C6, C7, C8, C9)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: One 0.01 μF ceramic capacitor (C5)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: One 22 μF tantalum capacitor (C10)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Two 10 μF tantalum capacitors (C3, C4)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: One 10-kilohm, 1/8 W resistor (R5)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Three 10-kilohm, 1/8 W resistors (R1, R2, R10)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Two 1-kilohm, 1/8 W resistors (R8, R9)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: One pH probe
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Four 4-40×1/2-inch screws
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Eight 4-40 nuts and washers
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Four 2-56×1/2-inch screws
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 28- or 30-gauge hookup wire
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: One Hammond 1591 BTCL plastic enclosure
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Heat-shrink tubing
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '**Downloads**'
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Sketch**   *pHMeter.ino*'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '**Cover template**   *pHCover.pdf*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '**Side template**   *pHBoxSide.pdf*'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '**Shield**   *pHMeter.pcb*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '**About the pH Probe**'
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'At the heart of the Custom pH Meter is a pH probe. This measures the activity
    of hydrogen ions in a solution, which in turn determines the acidity or alkalinity
    of that solution. A basic pH probe, like the one in [Figure 7-4](ch07.xhtml#ch07fig4),
    comprises two elements: a reference electrode and a measurement electrode. I won’t
    go into the chemistry of the probe or the exact mechanism of a pH probe’s operation,
    but I will describe its output and interface to the circuitry that provides the
    readout.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义 pH 测量仪的核心是 pH 探头。它测量溶液中氢离子的活性，从而决定该溶液的酸碱性。一个基本的 pH 探头，如[图 7-4](ch07.xhtml#ch07fig4)所示，包含两个元件：参考电极和测量电极。我不会深入探讨探头的化学原理或
    pH 探头的具体工作机制，但我会描述它的输出以及与电路的接口，电路提供显示读数。
- en: A pH probe produces a voltage proportional to the pH of the solution the probe
    is immersed in. The pH range starts at 0, which is the most acidic, and goes up
    to 14, which is the most alkaline. The probe delivers an output voltage from approximately
    –420mV to +420mV, representing an increment of roughly 60mV per unit of pH. A
    neutral pH of 7.0, at mid-scale from 0 to 14, is represented by 0.0mV.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: pH 探头产生的电压与探头浸入溶液的 pH 值成正比。pH 范围从 0 开始，最酸性，到 14，最碱性。探头输出的电压大约在 -420mV 到 +420mV
    之间，表示每个 pH 单位大约增量为 60mV。中性 pH 7.0 位于从 0 到 14 的中间值，表示为 0.0mV。
- en: 'The nature of the probe’s output makes the Custom pH Meter’s basic function
    in this project relatively straightforward: it needs to read and display a voltage.
    But there are a few other things the Custom pH Meter circuit has to account for.
    First, while commercial probes are built to the highest standards, they can be
    off by some nominal amount and require adjustment. Second, we’re dealing with
    relatively small values, so to maintain accuracy, components and circuits have
    to be carefully selected. Further, as probes are used and age, they tend to change
    slightly, requiring recalibration.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 探头输出的特性使得本项目中的自定义 pH 测量仪的基本功能相对简单：它需要读取并显示电压。但自定义 pH 测量仪电路还需要考虑其他一些问题。首先，虽然商用探头是按照最高标准制造的，但它们可能存在一定的误差，需要调整。其次，我们处理的是相对较小的值，因此为了保持准确性，组件和电路必须精心挑选。此外，随着探头的使用和老化，它们通常会发生轻微变化，需要重新校准。
- en: '![image](../images/f07-04.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f07-04.jpg)'
- en: '*Figure 7-4: A simplified drawing of a pH probe*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-4：pH 探头的简化图*'
- en: Finally, the pH probe has a very high electrical impedance—perhaps 10 to 100
    megaohms or higher. Practically speaking, a high impedance means that despite
    the voltage level, there is very little energy available to change the state or
    condition of another device, so the circuit needs to amplify that signal. This
    requires a specialized input circuit involving an op-amp, which is designed to
    minimize noise while handling the high-impedance signal. Today’s semiconductors
    are up to the task, and as I discuss in “[Some Notes on IC Selection](ch07.xhtml#ch07lev2sec4)”
    on [page 196](ch07.xhtml#page_196), I checked out several op-amps to find one
    that seemed to offer the best combination of performance and price. Of course,
    while a good op-amp is important, the circuitry feeding input to the op-amp must
    also be as efficient as possible to achieve an accurate reading without introducing
    noise that could affect the sensitive output of the pH probe.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，pH 探头具有非常高的电阻值——可能是 10 到 100 兆欧姆或更高。从实际角度看，高电阻意味着尽管电压水平较高，但几乎没有能量能够改变其他设备的状态或条件，因此电路需要放大这个信号。这需要一个专门的输入电路，通常会涉及运算放大器（op-amp），其设计目的是在处理高阻抗信号时尽量减少噪声。今天的半导体技术已经能够满足这一需求，正如我在[《集成电路选择的一些注意事项》](ch07.xhtml#ch07lev2sec4)中提到的，[第
    196 页](ch07.xhtml#page_196)里，我检查了几种运算放大器，找到了最适合性能与价格平衡的型号。当然，虽然选择一款好的运算放大器很重要，但输入电路同样需要尽可能高效，以便在不引入噪声的情况下，准确读取
    pH 探头的敏感输出。
- en: '**TAKING CARE OF YOUR pH PROBE**'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**如何保养你的 pH 探头**'
- en: While your pH probe probably came with instructions, there are a couple of things
    you can do to increase its useful life. First, of course, follow the manufacturer’s
    instructions. Second, unless the manufacturer specifies differently, when storing
    your probe, immerse the business end in a 3-molar solution of potassium chloride
    (KCl), as shown in [Figure 7-5](ch07.xhtml#ch07fig5). You should be able to buy
    such a solution wherever you purchase your pH buffer solutions at a very modest
    cost. (A *buffer solution* is a mix of relatively weak acidic and alkaline chemicals
    that produces a specific pH.) You can also compound your own by dissolving about
    22 g of KCl in 100 mL of distilled water.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你的 pH 探头可能附带了使用说明书，但有一些方法可以延长其使用寿命。首先，当然，按照制造商的说明进行操作。其次，除非制造商另有说明，存储探头时，应将探头的工作端浸入
    3 摩尔浓度的氯化钾（KCl）溶液中，如[图 7-5](ch07.xhtml#ch07fig5)所示。你应该能在购买 pH 缓冲溶液的地方以相当低廉的价格购买到这种溶液。（*缓冲溶液*是由相对弱酸性和碱性化学物质混合而成的溶液，能保持特定的
    pH 值。）你也可以通过将约 22 克 KCl 溶解在 100 毫升蒸馏水中来自制这种溶液。
- en: '![image](../images/f07-05.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f07-05.jpg)'
- en: '*Figure 7-5: The pH probe I used for this project. The tip is protected in
    a small vial of KCl solution with a rubber seal*.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-5：我在本项目中使用的 pH 探头。探头尖端被浸泡在含有橡胶密封的 KCl 溶液的小瓶中*。'
- en: Even for relatively short storage times, it is best to keep the probe in a pH
    7 buffer solution rather than in air or water. Between samples or when moving
    the probe to a different buffer solution, make sure to rinse the probe carefully.
    Most manufacturers suggest rinsing with distilled water. You can gently blot the
    excess water off the probe, but most manufacturers caution against rubbing or
    wiping the electrode bulb for fear of creating an error due to polarization.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是相对较短的存储时间，最好将探头存放在 pH 7 缓冲溶液中，而不是在空气或水中。在每次样品之间，或将探头转移到不同的缓冲溶液时，务必小心冲洗探头。大多数制造商建议使用蒸馏水冲洗。你可以轻轻地将多余的水分拍掉，但大多数制造商警告不要擦拭或擦干电极球，以免由于极化效应而导致测量误差。
- en: When calibrating your probe prior to a measurement, the manufacturers of even
    top-of-the-line pH meters suggest calibrating with a buffer closest to the expected
    pH of the sample. For example, if you suspect the pH value of the sample to be
    around 9, use a pH 10 buffer solution to calibrate the instrument.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在测量之前对探头进行校准时，即便是顶级 pH 计的制造商也建议使用最接近预期样品 pH 值的缓冲溶液进行校准。例如，如果你怀疑样品的 pH 值约为 9，那么应使用
    pH 10 的缓冲溶液来校准仪器。
- en: '**The Schematic**'
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**原理图**'
- en: The Custom pH Meter circuits shown in [Figures 7-6](ch07.xhtml#ch07fig6) and
    [7-7](ch07.xhtml#ch07fig7) comprises a dual op-amp, a voltage inverter to supply
    ±5V to the op-amp, a voltage regulator, a temperature IC, an Arduino, and an I²C
    LCD. You have the option to build your Custom pH Meter with an Arduino Nano or
    an Arduino Pro Mini. I had an easier time building the breadboard with a Nano,
    but my final product (and therefore, the shield PCB file provided for this chapter)
    uses the Pro Mini to conserve space.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 7-6](ch07.xhtml#ch07fig6) 和 [图 7-7](ch07.xhtml#ch07fig7) 所示的定制 pH 计电路包括一个双运算放大器、一个电压反转器（为运算放大器提供
    ±5V 电压）、一个电压调节器、一个温度集成电路、一个 Arduino 和一个 I²C LCD 显示屏。你可以选择使用 Arduino Nano 或 Arduino
    Pro Mini 来构建你的定制 pH 计。我在使用 Nano 构建面包板时更为顺利，但我的最终产品（因此，本章节提供的扩展 PCB 文件）使用 Pro Mini
    来节省空间。'
- en: The rest of this section describes the reasoning behind the design decisions
    made in creating this schematic.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的其余部分将介绍在设计此原理图时做出的决策及其背后的原因。
- en: '![image](../images/f07-06.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f07-06.jpg)'
- en: '*Figure 7-6: The basic schematic for the Custom pH Meter, using an Arduino
    Nano*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-6：使用 Arduino Nano 的定制 pH 计基本原理图*'
- en: '![image](../images/f07-07.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f07-07.jpg)'
- en: '*Figure 7-7: The basic schematic for the Custom pH Meter, using a Deek-Robot
    Pro Mini*'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-7：使用 Deek-Robot Pro Mini 的定制 pH 计基本原理图*'
- en: '***Integrating the High-Impedance Probe***'
  id: totrans-82
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***集成高阻抗探头***'
- en: Recall that the pH probe delivers a DC output voltage that swings from –420mV
    to +420mV, giving approximately 60mV per unit of pH. This output is delivered
    at very high impedance, and the circuit must accept the probe’s high-impedance
    input without adding spurious signals, reduce the impedance to a manageable level,
    and amplify the input so it can be read by the analog inputs of the Arduino. The
    circuit also has to provide a way to adjust the voltage that goes to the display
    in order to calibrate the probe in terms of both offset and gain (see “[Offset
    and Gain](ch07.xhtml#ch07note2)” on [page 194](ch07.xhtml#page_194) for a crash
    course).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，pH探头输出的直流电压范围从–420mV到+420mV，大约每个pH单位对应60mV。此输出具有非常高的阻抗，电路必须接受探头的高阻抗输入而不引入杂散信号，降低阻抗到可管理的水平，并放大输入信号，以便Arduino的模拟输入能够读取。电路还必须提供一种方法来调整送往显示器的电压，以便在偏置和增益方面校准探头（请参见“[偏置和增益](ch07.xhtml#ch07note2)”在[第194页](ch07.xhtml#page_194)的快速教程）。
- en: To handle the high-impedance probe output, the input of the op-amp must have
    a very high impedance, typically in the teraohm (1×10^(12) ohms) range, to read
    any voltage at all. The input of the op-amp must also have a low input current
    (the two go together); this is typically around 10 picoamps (1×10^(−12) amps),
    though some op-amps offer input current below 25 femtoamps (1×10^(−15) amps).
    It’s also good if the op-amp has very low *drift* (that is, tendency to change
    output with no change in input).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理高阻抗探头输出，运算放大器的输入必须具有非常高的阻抗，通常在太赫（1×10^(12)欧姆）范围内，才能读取任何电压。运算放大器的输入还必须具有低输入电流（这两者是相关的）；通常约为10皮安（1×10^(−12)安培），尽管一些运算放大器的输入电流低于25飞安（1×10^(−15)安培）。如果运算放大器具有非常低的*漂移*（即在输入不变的情况下输出发生变化的倾向），那将是非常好的。
- en: '***General Design Notes***'
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***一般设计注意事项***'
- en: The Custom pH Meter is designed to work from a power supply of 9V, selectable
    between a battery and a plug-in module via a power switch (see the schematics
    in [Figures 7-6](ch07.xhtml#ch07fig6) and [7-7](ch07.xhtml#ch07fig7)). Because
    the input from the AC source could be suspect, the Custom pH Meter uses an external
    voltage regulator rather than the regulator built into the Pro Mini. An LM7805
    with bypass capacitors at both the input and output worked well in previous projects,
    and this project uses the same regulator. This regulator supplies positive 5V
    to the inverter, the op-amp circuitry, and the Arduino. The power switch is a
    three-position switch, where the center is off, one position selects the battery,
    and the other selects AC power.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 定制pH计设计为使用9V电源，可以通过电源开关在电池和插入模块之间选择（请参见[图7-6](ch07.xhtml#ch07fig6)和[图7-7](ch07.xhtml#ch07fig7)中的原理图）。由于交流电源的输入可能不稳定，定制pH计使用外部电压调节器，而不是Pro
    Mini内建的调节器。一个LM7805电压调节器，输入和输出端都带有旁路电容器，在以前的项目中效果良好，本项目也使用了同样的调节器。该调节器为逆变器、运算放大器电路和Arduino提供+5V电源。电源开关是一个三位置开关，中间是关闭位置，一个位置选择电池，另一个位置选择交流电源。
- en: 'Because the pH probe provides an output of ±420mV, this circuit has to be able
    to handle a *bipolar* (above and below ground) voltage. The simplest way to achieve
    that is to use an op-amp with positive and negative supplies and a ground in the
    middle, which in turn requires a power supply that can provide those voltages.
    The LMC7660 voltage inverter is the solution: it converts the positive 5V from
    the voltage regulator to +5V and –5V, with ground in the middle. Thus, the op-amp
    can handle the input signal as long as it doesn’t go above +5V or below –5V.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 由于pH探头提供的输出为±420mV，因此该电路必须能够处理*双极性*（高于和低于地面）电压。实现这一点的最简单方法是使用一个具有正负电源和中间接地的运算放大器，这就需要一个能够提供这些电压的电源。LMC7660电压逆变器是解决方案：它将来自电压调节器的+5V转化为+5V和–5V，并且中间有地面。这样，运算放大器就能处理输入信号，只要它不超过+5V或低于–5V。
- en: '**NOTE**'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Most voltage inverters are very similar to the LMC7660 and require minimal
    external components—in this case, only two capacitors. This circuit uses tantalum
    capacitors because of their compact size and reliability, but electrolytic capacitors
    could be used*.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '*大多数电压逆变器与LMC7660非常相似，且所需的外部组件最小—在这种情况下，仅需两个电容器。该电路使用钽电容器，因为它们体积小且可靠，但也可以使用电解电容器*。'
- en: '**OFFSET AND GAIN**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**偏置和增益**'
- en: To demonstrate how offset and gain work, [Figure 7-8](ch07.xhtml#ch07fig8) illustrates
    the continuum of voltage used in this project, from –5V to +5V.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示偏置和增益如何工作，[图7-8](ch07.xhtml#ch07fig8)展示了本项目中使用的电压范围，从–5V到+5V。
- en: '![image](../images/f07-08.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f07-08.jpg)'
- en: '*Figure 7-8: An illustration of what happens to the voltage when changing the
    gain and offset on the Custom pH Meter*'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7-8：改变增益和偏移量时自定义pH计中电压变化的示意图*'
- en: Imagine that when the voltage from the pH probe is amplified, there is a voltage
    range A. In this illustration, voltage A represents half the supply voltage, ranging
    from –2.5V to +2.5V for a total of 5V. If the gain is adjusted, the voltage range
    will still center on 0V but will increase or decrease to some voltage range B.
    Adjusting the gain will always increase or decrease the lower and higher ends
    of the selected voltage sector equally, provided the original sector is within
    the total voltage range.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，当pH探头的电压被放大时，会有一个电压范围A。在这个示例中，电压A代表供电电压的一半，范围从–2.5V到+2.5V，总共是5V。如果增益被调整，电压范围仍然会以0V为中心，但会增加或减少到某个电压范围B。调整增益时，所选电压范围的最低和最高端将始终以相同的幅度增加或减少，前提是原始电压范围在总电压范围内。
- en: The entire voltage sector can also be shifted within the continuum by adjusting
    the offset, as illustrated in [Figure 7-8](ch07.xhtml#ch07fig8). The range of
    voltage A2 still encompasses the same total voltage as range A, but its minimum
    and maximum voltages are different. In this instance, the center of the voltage
    range is shifted from 0V to 2.5V, such that voltage A2 swings from 0V to 5V.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 通过调整偏移量，整个电压范围也可以在连续体内移动，如[图7-8](ch07.xhtml#ch07fig8)所示。电压范围A2仍然包含与范围A相同的总电压，但其最小电压和最大电压不同。在这种情况下，电压范围的中心从0V移动到2.5V，使得电压A2的范围从0V到5V。
- en: This offset can be any voltage within the supply range, but in practice, it’s
    best not to run the voltage to the voltage rails (the maximum and minimum of the
    supply voltage). Instead, leave some buffer between the rails and the voltage
    range a project needs.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这个偏移量可以是供电范围内的任何电压，但实际上最好不要将电压推到电压轨（即供电电压的最大值和最小值）。相反，应在电压轨和项目所需的电压范围之间留出一些缓冲区。
- en: “[The Sketch](ch07.xhtml#ch07lev1sec11)” on [page 205](ch07.xhtml#page_205)
    shows that the Custom pH Meter maps the voltage within the limits of the supply
    to the Pro Mini (0V to +5V) to be an average of the gain selected. The final gain
    and offset adjustments for this project are made using the prepared buffer solutions
    and the potentiometers in the circuit.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: “[电路图](ch07.xhtml#ch07lev1sec11)”在[第205页](ch07.xhtml#page_205)中显示，自定义pH计将电压映射到Pro
    Mini的供电限制内（0V到+5V），并使其成为所选增益的平均值。本项目的最终增益和偏移调整是通过使用预先准备的缓冲溶液和电路中的电位器来完成的。
- en: The Custom pH Meter uses a Deek-Robot Pro Mini Arduino clone because this clone
    is small and inexpensive; however, a Nano could work if you make your own shield-printed
    circuit board. While the Pro Mini does not include a USB interface, there are
    a variety of ways to program it with little effort. See “[Connecting and Programming
    an Arduino Pro Mini](ch00.xhtml#ch00lev2sec4)” on [page 8](ch00.xhtml#page_8)
    if you’ve never used this particular Arduino before.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义pH计使用Deek-Robot Pro Mini Arduino克隆板，因为该克隆板体积小且价格便宜；不过，如果自己制作印刷电路板，Nano也可以使用。虽然Pro
    Mini没有USB接口，但有多种方式可以轻松地对其进行编程。如果你以前从未使用过这款Arduino，请参阅[第8页](ch00.xhtml#page_8)的“[连接和编程Arduino
    Pro Mini](ch00.xhtml#ch00lev2sec4)”章节。
- en: The I²C interface for the display comprises only two wires—clock and data—in
    addition to power and ground. The I²C protocol can also be used with several I²C
    devices at the same time, if required.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 显示器的I²C接口仅包括两根线——时钟和数据，此外还有电源和接地。如果需要，I²C协议也可以与多个I²C设备同时使用。
- en: '***The Op-Amp Circuit in Detail***'
  id: totrans-100
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***运算放大器电路详细介绍***'
- en: 'In the op-amp circuit, there are resistors and capacitors to minimize the effect
    of spurious signals and to couple the circuits. The amplifier circuit has two
    stages, which are both included in the single package of the opamp: the first
    handles the high impedance from the probe and offers gain adjustment, while the
    second is a buffer that provides the offset, both for calibration and to accommodate
    the 0 to +5V analog input required by the Arduino. Each stage has a 10-turn trimmer
    potentiometer. The trimmer in the first stage is 1 megaohm, and it sets the gain;
    the trimmer in the buffer stage is 10 kilohms, and it is used for the offset.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在运算放大器电路中，使用了电阻和电容来最小化杂散信号的影响，并对电路进行耦合。放大电路有两个阶段，两个阶段都包含在运算放大器的单一封装中：第一个阶段处理来自探头的高阻抗并提供增益调整，第二个阶段是缓冲器，提供偏移量，既用于校准，也为了适应Arduino所需的0到+5V模拟输入。每个阶段都有一个10转的调整电位器。第一个阶段的电位器为1兆欧，它设置增益；缓冲阶段的电位器为10千欧，用于调整偏移量。
- en: The first stage provides most of the gain (the output is roughly six times the
    value of the input), which is adjustable via a negative feedback resistor (R2)
    and a potentiometer (R3). The adjustment range is a bit wider than required, but
    it works out quite well. Initially, I tightened up on the range but found that
    for some probes, a smaller range makes calibration difficult.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 第一级提供了大部分增益（输出大约是输入的六倍），增益可以通过一个负反馈电阻（R2）和一个电位器（R3）进行调节。调整范围比实际需要的稍宽，但效果还是很好。最初，我对范围进行了收紧，但发现对于某些探头来说，较小的范围会使校准变得困难。
- en: The second stage op-amp circuit uses a fixed feedback resistor of 10 kilohms
    (R5), while the noninverting input uses a combination of two resistors of 10 kilohms
    each (R1 and R2) and a 10-kilohm potentiometer (R4) to provide the offset adjustment.
    This stage provides a small amount of gain in addition to the offset adjustment
    to allow the pH probe voltage to center on 0mV (pH of 7) and swing between –420mV
    (pH of 0) and +420mV (pH of 14). In addition, this buffer stage changes the scale
    from a negative and positive voltage to a positive-only voltage for the Arduino.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 第二级运算放大器电路使用了一个固定的反馈电阻（R5），值为10千欧，而非反相输入使用了两个10千欧电阻（R1和R2）和一个10千欧的可调电位器（R4）来提供偏移调节。该阶段除了提供偏移调节外，还提供了少量增益，使得pH探头电压能够集中在0mV（pH为7）并在–420mV（pH为0）和+420mV（pH为14）之间波动。此外，该缓冲阶段将电压范围从正负电压转换为仅正电压，供Arduino使用。
- en: Using the buffer stage to both provide the calibration offset and convert the
    plus-minus voltage swing works out conveniently with little, if any, discernable
    downside. Optionally, a separate reference voltage could be generated, but that
    would add additional components and offers little advantage over offsetting the
    voltage from the buffer stage and referencing the voltage to ground.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 使用缓冲阶段同时提供校准偏移和转换正负电压范围是非常方便的，几乎没有什么明显的缺点。可选择生成单独的参考电压，但这会增加额外的组件，并且相比于从缓冲阶段偏移电压并将电压参考接地，几乎没有优势。
- en: At the output end of the buffer, a Zener diode (D1) and resistor (R9) are added
    to protect the Pro Mini from any overvoltage condition. No protection was added
    to protect against a negative voltage to the analog input pin; however, during
    initial setup and experimentation, the analog pin accidentally received a negative
    voltage many times with no adverse effects.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在缓冲器的输出端，添加了一个齐纳二极管（D1）和电阻（R9）来保护Pro Mini免受过电压影响。没有添加保护来防止负电压对模拟输入引脚的影响；然而，在初始设置和实验过程中，模拟引脚多次意外接收到负电压，但没有出现不良反应。
- en: '***Some Notes on IC Selection***'
  id: totrans-106
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***一些关于IC选择的说明***'
- en: 'Before settling on an IC for any project, it is a good idea to test multiple
    ICs to see which works best in your situation. When sampling chips, I suggest
    keeping notes on the pros and cons of each chip. For example, these are my notes
    on op-amp possibilities for the Custom pH Meter:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在为任何项目选择集成电路（IC）之前，最好测试多个IC，以查看哪个最适合你的情况。在采样芯片时，我建议记录每个芯片的优缺点。例如，这些是我对定制pH计的运算放大器选择的记录：
- en: '**TL072**   Worked well; a good all-around solution'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**TL072**   表现良好；是一个不错的全能解决方案'
- en: '**TLC2262**   A good all-around solution; a toss-up between this and the TL072'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**TLC2262**   一个不错的全能解决方案；和TL072之间难以抉择'
- en: '**OPA129**   Worked well, but not available in DIP'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**OPA129**   表现良好，但没有DIP封装'
- en: '**LMC6001**   Worked well, but a little pricey for no advantage, at around
    $20'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**LMC6001**   表现良好，但没有优势，价格有点贵，大约20美元'
- en: '**LMC6042**   Probably would have worked, but was difficult to set up'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**LMC6042**   可能会有效，但设置起来较为困难'
- en: '**LMP7702**   Probably would have worked, but a little pricey and was difficult
    to set up'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**LMP7702**   可能会有效，但价格有点贵，且设置起来较为困难'
- en: After trying several op-amp circuits in the public domain with mostly disappointing
    results, I used a generalized circuit to test each of these op-amps in turn, and
    for each test, the circuit required a certain amount of tuning to work. This tuning
    included changing the circuitry to stabilize gain and minimize spurious signals
    and stray voltages. The Texas Instruments TL072P op-amp proved the best option,
    and once I made that selection, I adjusted the circuit further to optimize it
    for the Custom pH Meter. The TLC2262 also would have worked well; I used it in
    some prototype samples.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: The other op-amps I sampled might have worked as well, or almost as well, if
    optimized like the TL072; however, that would have been time consuming for a marginal
    or zero gain. The final Custom pH Meter circuit represents a best effort within
    self-imposed limitations, like budget. For example, a top-shelf op-amp, like the
    Texas Instruments OPA627/637, probably would have worked well, but the chip alone
    had a price tag between $25 and $50, depending on the version. That would have
    brought the total budget for the project to well over $100, a self-imposed limit.
    The decision to continue the project itself was already problematic because of
    the probe’s cost ($36 at the time of writing); however, I believe the probe’s
    capabilities warrant the expense.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '**Preparing the LCD**'
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Before you build the circuit on a breadboard, make sure the LCD is prepared
    for prototyping. Though the LCD used in this project can be purchased with the
    I²C adapter board, I have often had to buy the LCD and the adapter board separately,
    as was the case this time. When you buy them separately, the adapter board usually
    comes with header pins installed, and all you should have to do is insert them
    into the display and solder them. “[Affixing the I²C Board to the LCD](ch00.xhtml#ch00lev1sec2)”
    on [page 3](ch00.xhtml#page_3) describes this process.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '**ON LCD BACKLIGHTS**'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: When I initially wired the I²C board to the display board for the Custom pH
    Meter, I cut off the cathode (K) header terminal on the display board. The anode
    and cathode headers allow you to provide a voltage to power the display’s backlight.
    The idea behind severing the connection was to include a separate switch to turn
    the backlight on and off to preserve battery current. It turned out the display
    was not readable without the backlight except in extremely bright light, so I
    abandoned that effort and manually rewired the backlight. You can experiment with
    other displays to try to find an ambient-light readable display.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '**The Breadboard**'
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Like most of my Arduino projects, the Custom pH Meter began with a breadboard
    (see [Figure 7-9](ch07.xhtml#ch07fig9)). Despite the somewhat ragged appearance,
    the breadboard iteration worked well.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-09.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-9: This circuit on a breadboard served as a proof of concept for
    the Custom pH Meter*.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the basic Custom pH Meter circuit, I added a separate circuit
    (visible in the upper-left area of the breadboard in [Figure 7-9](ch07.xhtml#ch07fig9))
    to supply a continuous, variable ±500mV test voltage so I could check the circuit
    and do some preliminary calibration prior to testing with the probe itself. This
    test circuit, shown in [Figure 7-10](ch07.xhtml#ch07fig10), comprises a separate
    voltage inverter, a pair of voltage dividers, and a potentiometer to vary the
    voltage. You may want to set up this small circuit on a separate breadboard and
    use it to do the preliminary adjustment of the finished unit.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-10.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-10: This circuit provided the test voltage for the Custom pH Meter*.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: In [Figure 7-9](ch07.xhtml#ch07fig9), the pH probe is held by an inexpensive
    burette clamp attached to an old machinist’s magnetic gauge holder. The probe
    was too thin to fit in the holder, so I wrapped some foam around the probe to
    clamp it.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: Preparing this breadboard turned out to be a little messier and more convoluted
    than usual because there’s a lot on the board. As shown in [Figure 7-9](ch07.xhtml#ch07fig9),
    I used a large breadboard that included four vertical breadboards and a strip
    across the top for positive and negative rails. Initially, I used an Arduino Nano
    clone to build the Custom pH Meter on the breadboard. In the finished version,
    however, I suggest using a Deek-Robot Pro Mini board to reduce the size. Both
    Arduinos use the same 5V, 16 MHz Atmel 328 processor and other components. In
    keeping with the requirement to have the shortest possible connection to the input
    of the op-amp, the BNC connector is situated to provide a relatively direct connection
    to the noninverting input of the op-amp. The voltage regulator, an LM7805, is
    located in the upper right of the breadboard and is powered with either a 9V alkaline
    battery or a 7.5V to 12V wall adapter.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the steps I took to construct the breadboard:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: Connect all vertically oriented positive and negative rails (marked by red and
    blue stripes, respectively) to the horizontal positive and negative rails across
    the top of the breadboard.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Mount the power inverter chip (LMC7660) on the upper-left side.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Mount capacitor C3 (10 μF) between pins 2 and 4 of the LMC7660\. (Make sure
    to observe polarity: connect the positive side to pin 2 and the negative side
    to pin 4.)'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Mount capacitor C4 (10 μF) between pin 5 of the LMC7660 and the blue negative
    rail. (Make sure to observe polarity: the plus side of the cap goes to the blue
    negative rail.)'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect pin 3 of the LMC7660 to the blue negative rail.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect pin 8 of the LMC7660 to the red positive rail.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert the voltage regulator (LM7805) into the right-hand section of the breadboard.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect pin 1 of the LM7805 to a blank row that will accept the incoming 9V
    or 7.5V voltage. (It can accept from +7V to +12V, as shown in the schematic.)
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect pin 2 of the LM7805 to the blue negative rail.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect pin 3 of the LM7805 to the red positive rail.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect capacitor C2 (1 μF) from pin 1 of the LM7805 to the blue negative rail.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect capacitor C1 (0.1 μF) from pin 3 to the blue negative rail.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert the TL072 IC in the breadboard; I placed it in the second vertical section.
    Observe all antistatic precautions while handling the chip.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make the connections to the TL072 as short as possible to eliminate possible
    spurious signals.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect capacitor C5 (0.01 μF) from pin 8 of the TL072 to the blue negative
    rail. Make the connection as close to the chip as possible to minimize effects
    of spurious signals.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect pin 8 of the TL072 to the red positive rail (once again, using as short
    a jumper as possible).
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect resistor R5 (47 kilohms) from pin 2 of the TL072 to the blue negative
    rail.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the center lead of the BNC input jack to pin 3 of the TL072 with as
    short a wire as possible.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the ground of the BNC to the closest spot available on the blue negative
    rail. (I used a panel-mount BNC connector and screwed a piece of stiff wire to
    the flange so I could mount it very close.)
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect pin 4 of the TL072 to the negative voltage of the LMC7660 (pin 5).
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert one lead of capacitor C6 (0.1 μF) to pin 4 of the TL072, as close to
    the chip as possible.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert the other end of capacitor C6 to the closest spot available on the blue
    negative rail.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert the outside pins of potentiometer R7 (1 megaohm) between pins 1 and 2
    on the TL072.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert a short jumper from pin 2 to pin 3 of potentiometer R7\. The potentiometer
    will work with only the two pins (center and one end) used. For convention and
    stability, I usually connect the center to the pin not being varied.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert capacitor C7 (0.1 μF) from pin 1 to pin 2 of the TL072.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert resistor R8 (1 kilohm) from pin 1 to pin 6 of the TL072.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect one lead of capacitor C8 (0.1 μF) to pin 6 of the TL072 and the other
    lead of capacitor C8 to ground.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect resistor R10 (10 kilohms) between pins 6 and 7 of the TL072.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In an open area of the breadboard (as close to the TL072 as possible), insert
    potentiometer R4 (10 kilohms).
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect one side of resistor R2 (10 kilohms) to pin 1 of potentiometer R4.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the other side of resistor R2 to negative 5V (pin 5 of the LMC7660).
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect one side of resistor R1 (10 kilohms) to pin 3 of potentiometer R4.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the other side of resistor R1 to the red positive rail.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect pin 2 (the center pin or slider) of potentiometer R4 to pin 5 of the
    TL072.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect one lead of capacitor C9 (0.1 μF) to pin 5 of the TL072 (as close to
    the pin as possible) and the other lead to the blue negative rail.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert the Arduino Nano into the breadboard. I placed it in the second row from
    the left toward the bottom of the board so the USB connection would be easily
    available.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect 5V from the Nano (pin 27) to the red positive rail.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the ground of the Nano (pin 29) to the blue negative rail.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect one side of resistor R9 (1 kilohm) to pin 7 of the TL072.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the other side of resistor R9 to A0 (pin 26) of the Nano. You may have
    to identify a blank space on the breadboard and then use a jumper wire.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the anode of the Zener diode (D1) to pin A0 on the Nano.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the cathode of the Zener diode to the blue negative rail.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the positive lead of capacitor C10 (22 μF) to A0 of the Nano.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the other lead of capacitor C10 to the blue negative rail.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make a four-wire cable for the LCD with wires for plus, minus, SDA, and SCL.
    (See “[Connectors Used in This Book](ch00.xhtml#ch00lev1sec6)” on [page 18](ch00.xhtml#page_18)
    if you’ve never made a cable.)
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the positive and negative wires of the LCD harness to the red positive
    and blue negative rails, respectively.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the SDA pin from the LCD to A4 (pin 22) of the Nano.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the SCL pin from the LCD to A5 (pin 21) of the Nano.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In [Figure 7-9](ch07.xhtml#ch07fig9), at the upper left of the board, you will
    see four resistors and a potentiometer on three wires. That’s the probe voltage
    simulator circuit in [Figure 7-10](ch07.xhtml#ch07fig10). To wire up the simulator
    circuit, make the following connections:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: Connect the open end of resistor R5 (10 kilohms) to negative 5V (pin 5 of the
    LMC7660).
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the open end of resistor R1 (10 kilohms) to the red positive rail.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At the juncture of resistor R1 (10 kilohms) and resistor R2 (1 kilohm), connect
    pin 1 of potentiometer R3 (20 kilohms).
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At the juncture of trimmer R4 (1 kilohm) and resistor R5 (10 kilohms), connect
    pin 3 of the potentiometer R3 (20 kilohms).
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the center lead (pin 2) of potentiometer R3 (20 kilohms) to pin 3 of
    the TL072.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The temperature sensor is not included in the breadboard.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: Finally, calibrate the Custom pH Meter. I suggest calibrating first with the
    simulator circuit and then with the actual probe, as described in the next section.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: '**Calibrating the Custom pH Meter**'
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Calibrating the Custom pH Meter for the first time may be a little trying, but
    it shouldn’t take long to get the hang of it, and it should work well afterward.
    First, set both the scale and offset potentiometers as close to the middle of
    their ranges as possible. Because pH 7 is neutral, start there, put the probe
    in the pH 7 solution, and adjust the offset until the display reads 7.00.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: Next, clean the probe, place it in the pH 4 solution, and adjust the scale trimmer
    until the display reads 4.00\. After that, clean the probe again, and try the
    pH 7 solution again; the reading should remain close to center. If it is off center,
    then adjust the offset to exactly 7.0 again, and repeat the process. This time,
    it should require only a small adjustment to set the scale to pH 4.0\. Now, check
    the display with the probe in the pH 10 buffer solution, see how far off the reading
    is, and adjust the scale trimmer accordingly. Repeat this process until the readings
    match all three buffer solutions. (After about three or four tries, adjusting
    both scale and offset, I got it to line up perfectly.)
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: When you know the meter works, I suggest resetting it and calibrating it again
    for practice. I was able to do it quite a bit faster the second time, with only
    two repetitions. I rechecked my pH meter several times over a period of about
    three weeks, and it seemed to stay in calibration; you should have similar results.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: '*As a preliminary test, I also used the test voltage circuit in [Figure 7-10](ch07.xhtml#ch07fig10)
    to perform initial calibration. You will also need a digital voltmeter. I started
    with 0V and adjusted the offset potentiometer until the LCD showed a pH of 7\.
    Next, I adjusted the test voltage circuit to output 180mV on my digital voltmeter
    and turned the scale potentiometer until the LCD showed a pH of 10\. I then adjusted
    the test voltage to –180mV and adjusted the scale until the LCD showed a pH of
    4\. After only a couple of tries, I had good results, so I disconnected the test
    supply and replaced it with the probe. This time, I was able to calibrate the
    meter in only a single try*.'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: 'When your meter is built and calibrated, try testing it on some common household
    products, like these:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '• Coca-Cola Classic: pH 2.5'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: '• Orange juice: pH 2.8'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '• Coffee: pH 5.0'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: '• 5 percent ammonia solution: pH 11'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: '• Clorox bleach: pH 11.9'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: '**IN AN ANALOG FRAME OF MIND**'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: Some of us dinosaurs still like analog readouts, and for those holdouts mired
    in the 20th century, I have included provisions in the schematics in [Figures
    7-6](ch07.xhtml#ch07fig6) and [7-7](ch07.xhtml#ch07fig7), the sketch, and the
    final shield PCB file for using an analog readout. This was a bit of an afterthought
    and it’s optional, so the series resistor for the meter is not included in the
    shield; however, the Pro Mini pin connections to the readout are. The single required
    resistor can be mounted on the rear of the meter movement. In [Figure 7-11](ch07.xhtml#ch07fig11),
    I simply connected the meter to the breadboard circuit.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-11.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-11: The Custom pH Meter breadboard circuit, with both the digital
    display and a 20 mA meter movement*'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: I’ve collected analog meters and movements over the years; the meter pictured
    is a Simpson 20 mA meter movement. To drive the meter, I simply used the PWM (pulse-width
    modulation) output from pins 5 and 6 on the Pro Mini, hooked directly to the meter
    with a resistor in series. In the sketch, I centered the meter on 0V so it uses
    a positive and negative voltage.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: I ended up using a variable resistor to set the analog meter’s minimum and maximum
    to –420mV and +420mV, respectively. This eliminated the problem of attempting
    to set the gain and offset to match the digital readout. However, that in no way
    affects the accuracy of either readout, and the digital and analog readouts match.
    They also track identically through the entire pH range.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: For many meters, the case can be removed to easily place a different scale,
    as has been done in [Figure 7-11](ch07.xhtml#ch07fig11). The face on this project’s
    meter was prepared with a laser printer to make the scale reflect pH value and
    show an mV scale for reference. A nice scale can be made using a drawing program
    such as Corel Draw or Adobe Illustrator, and you can purchase full sheets of adhesive-backed
    label stock to adhere it to the original meter plate. Just be careful not to damage
    the needle or movement in the process.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: '**About the Effects of Temperature**'
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Thus far, I have not addressed the issue of temperature, but a solution’s pH
    value is temperature-dependent, as illustrated in [Figure 7-12](ch07.xhtml#ch07fig12).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-12.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-12: How pH varies with temperature*'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: The effect of temperature on pH at or around room temperature (25°C) is nominal.
    In fact, according to the chart, the difference in pH from 25°C to 0°C would measure
    as little as half a pH unit at both pH extremes. At 100°C, however, the difference
    is more pronounced and could be as much as 1.5 pH units.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: Given that information, the question becomes exactly how to handle the effect
    of temperature on pH.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: '***Adding a Temperature Sensor***'
  id: totrans-211
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The first step to address the effects of temperature is to include a temperature
    sensor in the circuit so the Custom pH Meter knows what the temperature is. One
    of the easiest and most widely used temperature sensors in Arduino land is the
    LM35, which according to the data sheet outputs a linear 10mV/°C at 25°C, with
    half-degree accuracy. You can see this sensor in the schematics in [Figures 7-6](ch07.xhtml#ch07fig6)
    and [7-7](ch07.xhtml#ch07fig7).
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: I hooked up the chip and included it in the sketch, but I was somewhat concerned
    about the accuracy. Unfortunately, I didn’t have a National Institute of Standards
    and Technology (NIST) temperature standard to go by, so I compared the Arduino
    sensor readings to a glass scientific thermometer, a bimetal dial thermometer,
    and a Radio Shack digital thermometer. None of these agreed with each other or
    the Arduino.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: '***Checking Accuracy***'
  id: totrans-214
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The obvious way to calibrate the temperature sensor was to check it against
    two temperature values I really knew: the freezing and boiling point (at sea level)
    of distilled water. Because I live about 12 feet above sea level, the altitude
    would not be a problem. The result of my ice water and boiling tests indicated
    that the sensor was indeed off by about 2 percent. This was probably due to something
    in the external circuitry, such as the reference voltage, and is compensated for
    in the sketch. The temperature IC and connections were protected in a heat-shrink
    tube to eliminate any moisture getting to the connections, as described in “[Construction](ch07.xhtml#ch07lev1sec13)”
    on [page 211](ch07.xhtml#page_211).'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: 'According to the manufacturer for the glass electrode I used in this project,
    the error caused by temperature can be calculated as follows:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: Error in pH = 0.003 × (Calibrated temperature − Current temperature) × (Neutral
    pH − Actual pH)
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, if the electrode is calibrated at room temperature (25°C) and
    is measuring a sample around pH 4 at around 5°C, you would calculate the error
    as follows:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: 'Calculate the temperature difference: 25°C – 5°C = 20°C'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Calculate how far away from neutral the pH is: 7 pH – 4 pH = 3 pH'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The total error is: 0.003 × 20 × 3 = 0.18 pH.'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As of this writing, I have not attempted to integrate the temperature reading
    into the sketch to adjust the pH automatically. The Custom pH Meter does, however,
    display the temperature on the LCD, so you can decide whether or not it’s worth
    adjusting. As you can see in [Figure 7-12](ch07.xhtml#ch07fig12), the effect is
    minimal and can easily be approximated from the chart or calculated with tests
    similar to mine.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: Chances are that most of your measurements will be at or near room temperature.
    Temperature compensation is generally required only in severe environmental and
    industrial environments. If you are taking pH readings at extreme temperatures,
    you may want to include the formula in your sketch.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '*If you’re curious, you can read more about how to compensate for pH probe
    reading errors due to temperature at* [http://www.qclscientific.com/electrochem/phtemp%20comp.html](http://www.qclscientific.com/electrochem/phtemp%20comp.html).'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: '**The Sketch**'
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Custom pH Meter sketch, like many others in this book, comprises parts of
    other sketches and examples. I’ve included comments throughout that describe how
    the most significant pieces work. This unit was tested on and used with the Arduino
    IDE version 1.0.5-r2.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The basic pH measurement functionality is straightforward: it reads an analog
    value from the analog output of the op-amp circuitry and feeds that value to an
    analog input pin of the Pro Mini. The pH and temperature are read every time the
    main loop runs and then stored in `pHvalue` and `tempC`, respectively. My first
    version of the sketch printed these directly to the LCD.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: But when I laid out the circuit on the breadboard and adjusted the components,
    I noticed that the output was a little jumpy. The pH value jumped around by two
    or three tenths of a pH unit, plus or minus some core value. For example, the
    reading might fluctuate from a pH of 4 to 4.1, then to 3.9 and back to 4.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: '***Smoothing the pH and Temperature Output***'
  id: totrans-231
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: I went back to the drawing board. I played with the circuit, trying to find
    where the jumpiness was coming from, and failed to nail it down. Then, because
    the pH was unlikely to change quickly, I decided to average a few readings. While
    that stabilized the reading, the drawback was that the more samples I took, the
    slower the reading.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: However, I didn’t think that was a problem, as some expensive commercial pH
    meters I’ve used took some time to stabilize, very likely for the same reason.
    But there was still room for improvement.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, there is a useful sketch on the Arduino website written by David
    Mellis and subsequently modified by Tom Igoe that uses an array to smooth a signal.
    (You can see the original sketch in full at *[https://www.arduino.cc/en/Tutorial/Smoothing/](https://www.arduino.cc/en/Tutorial/Smoothing/)*.)
    I used this example as a model to smooth out the pH voltage in this project’s
    sketch. I experimented with several different values and found that somewhere
    between 5 and 10 samples worked well. I set `numReadings` equal to 10, and that
    resulted in a minimal drag on stabilization period, smoothing things out fairly
    well. The sketch shown in this book stores the result after smoothing in the `average`
    variable, which is printed to the LCD at the end of the main loop. In addition,
    I continued to fine-tune the circuit, so the sketch required less and less averaging.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: 'Notice that the same smoothing technique has been employed in the part of the
    sketch that handles input from the temperature-sensing circuit. (The `average2`
    variable contains the smoothed temperature reading result.) This was necessary
    for the same reason smoothing was needed for the pH voltage: even the temperature
    sensor output was a bit jittery. My first suspicion was that perhaps the Arduino
    Pro Mini and its voltage reference was causing hiccups in both the pH and temperature
    voltages. However, I hooked the temperature sensor directly up to my multimeter
    with a well-filtered power supply and experienced the same disruptions. In the
    end, the smoothing approach solved the problem.'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: '*While the smoothing approach used in this sketch worked well, that isn’t the
    only approach you could take. For example, a moving average approach could also
    work well*.'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: '***Centering an Analog Meter***'
  id: totrans-238
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If you choose to use an analog meter, the Arduino will need to drive the positive
    and negative sides of the meter. The sketch maps the meter drive to reverse the
    PWM values on two pins as follows.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To obtain `meterdrive1`, the average value (the average of pH values measured)
    is mapped from 0 to 14, while `meterdrive2` is the same average value mapped from
    14 to 0\. Both mappings use the `map()` function from Arduino’s preloaded libraries.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: 'The `map()` function is a useful tool that lets you map a number from one range
    to another. The syntax is as follows:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `map()` function can be used to shift a set of values or, as in this case,
    to reverse the values going from 0, 14 and from 14, 0\. If you want to use an
    analog meter and don’t want to reset the indicator to the center, you can simply
    use either output pin 5 or pin 6 (leave the one you don’t use open) and change
    the value of the resistor to result in a correct reading.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: '**A NOTE ON SIGNIFICANT FIGURES**'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: 'The following line of code prints the pH to the LCD, showing two decimal places:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: An earlier draft of the sketch called `lcd.print(average,1)` instead, showing
    only one decimal place, but when I was trying to minimize the jitter on the Custom
    pH Meter, I changed the display code to include two decimal places for finer granulation.
    For the most part, the pH reading remained extremely stable even to the second
    decimal place.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: In the final sketch, I kept two decimal places, but to be honest, I’m not sure
    how meaningful or accurate the second decimal place is. It has a slight tendency
    to drift as the probe sits in the solution, which I believe is normal. I dutifully
    researched and learned a lot more about *significant figures* (the digits in a
    measurement that actually have meaning) than I ever wanted to know, but I was
    still left without a definitive answer.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the bottom line: all of the literature I perused regarding pH discussed
    pH in terms of integers—or at best, to the tenths position. Only in some references
    to scientific and industrial applications was the hundredths position even used
    at all.'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: For most practical applications, you can change the sketch to use a single significant
    digit if you prefer. I do also strongly recommend that you use only a single significant
    digit during preliminary calibration, as the additional digit could be confusing.
    If you must (as much for ego as anything), you can put the second significant
    digit back, but know that its accuracy is suspect and, in my experience, it doesn’t
    really buy you anything.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: '**The Shield**'
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Custom pH Meter shield, shown in [Figure 7-13](ch07.xhtml#ch07fig13), is
    designed to minimize noise from the pH probe to the input. The Pro Mini and the
    LCD in this project can generate a little electrical noise; thus, all of the active
    analog input components are at one end of the PCB, while the Pro Mini and interface
    to the display are at the opposite end of the board. The inverter IC and associated
    components are located under the Pro Mini to conserve space.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-13.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-13: The shield PCB has headers soldered in place only for the pins
    this project uses on the Pro Mini. The voltage inverter and capacitors are located
    under where the Pro Mini will plug in*.'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: For this project, I decided to use a double-sided circuit board. This made the
    PCB layout a lot simpler than trying to squeeze everything on one side, and it
    allowed the amplifier, buffer stage IC, and associated components to be arranged
    in close proximity. You can see the layout file for this shield, which you can
    download with the rest of this book’s resource files, in [Figure 7-14](ch07.xhtml#ch07fig14).
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-14.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-14: The top traces in the shield layout are the darkest, the bottom
    traces are second darkest, and the silkscreen layer is the lightest. Notice that
    the silkscreen layer shows boxes around various components*.'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 7-15](ch07.xhtml#ch07fig15) shows the completed printed circuit board
    before and after population. When populating this board, make sure to take precautions
    to prevent static electricity damage to the TL072\. Because of this chip’s very
    high input impedance, it is particularly sensitive to static discharge from handling.
    I used a socket to hold the op-amp so in case it got damaged, replacing it would
    not be a major job.'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-15.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-15: The shield PCB before and after population. The voltage inverter
    and associated components are under the Pro Mini. The populated version is shown
    with the display connected*.'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: Also note that many resistors on this PCB are mounted vertically to save space
    and reduce lead length and circuit-board-trace lengths. I used 0.100-inch female
    headers to mount the Pro Mini, which leaves plenty of room for the components
    underneath. It is not necessary to fully populate the board with headers to fit
    all the Pro Mini’s pins; you just need enough to mechanically support the Pro
    Mini and provide the necessary electrical connections. I found it helpful to place
    headers at the very end of at least one side to align the pins and simplify my
    aim when plugging in the Pro Mini board.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: '**Construction**'
  id: totrans-263
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Be sure the sketch is loaded onto the Arduino, and solder all components to
    your PCB now, including wires for power and ground and for the jack for the (optional)
    temperature sensor. Place the op-amp into its socket now as well, but bend pin
    3 of the op-amp so that it sticks out. You will need to be able to access pin
    3 in a later stage of the construction process.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: 'When the Custom pH Meter circuit is soldered and the sketch is loaded onto
    the Arduino, only one step remains in terms of actual construction: putting everything
    inside a protective box. This section describes some suggestions for an enclosure
    and for how to mount the circuit board inside. [Figure 7-16](ch07.xhtml#ch07fig16)
    shows the finished enclosure.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-16.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-16: The finished Custom pH Meter in the enclosure. This close-up
    illustrates the positioning of the holes for the offset (labeled* Ofst) *and gain
    (labeled* Scale) *calibration adjustments*.'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '***The Custom pH Meter Enclosure***'
  id: totrans-268
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Your choice of enclosure will depend on how you want to use the Custom pH Meter,
    whether or not you elect to include an analog meter, and the level of portability
    required. I selected a standard ABS clear plastic box with outside measurements
    of approximately 1.3×2.45×4.4 inches. The space was somewhat tighter than I planned,
    but I was able to squeeze in the printed circuit board, display, switch, connectors,
    and battery.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: '**Making Room for the Display**'
  id: totrans-270
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: This project’s enclosure is a Hammond Manufacturing case, model 1591 BTCL. [Figure
    7-17](ch07.xhtml#ch07fig17) shows a drawing of the top of the plastic box, marked
    with lines for cutting the display hole and drilling the mounting holes.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-17.jpg)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-17: Template for the cover of the enclosure, showing an opening for
    the 16×2 display (shaded area) and where to drill mounting holes*'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: You can download this drawing with this book’s resource files (see *[https://www.nostarch.com/arduinoplayground/](https://www.nostarch.com/arduinoplayground/)*)
    and use it as a template for center punching the holes.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: 'I needed as much vertical room as possible inside the enclosure to accommodate
    the battery, so cutting out the top of the enclosure was necessary. Be careful,
    though: some displays have slightly different footprints, so measure yours and
    check it against the drawing first. If there’s a discrepancy, adjust the measurements.'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: The ABS plastic the enclosure is made of cuts easily, so cutting out the display
    hole shouldn’t pose any major problems. Before you get started, clamp the enclosure
    securely to a piece of scrap wood attached to a workbench or table.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: '**WARNING**'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: '*When you use a relatively large bit to drill into a thin layer of ABS plastic,
    the bit will tend to grab the plastic. Do not hold the enclosure by hand*.'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: To follow this template, first drill the two big holes in the opposing corners
    of the display area, using the punch marks as centers. I found 1/2 inches to be
    a good size for these holes, but just make them big enough to accommodate the
    saw blade you’re going to use to make the cutout. You may want to drill the centers
    of the 1/2-inch holes with a smaller drill first to make sure they are on center.
    Then, use a keyhole saw to cut out the smaller rectangle.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: 'To make sure there is enough room for the battery, I suggest mounting the display
    off center, as shown in [Figure 7-16](ch07.xhtml#ch07fig16), with the measurements
    indicated in [Figure 7-17](ch07.xhtml#ch07fig17). When your display hole is cut,
    drill the smaller holes for mounting the LCD with a #30 or 1/8-inch drill to accommodate
    the 4-40 screws.'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: '**Drilling Holes for Other Hardware**'
  id: totrans-281
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Once the top is prepared, drill holes for the BNC connector (A), on/off switch
    (B), power input switch (C), and optional temperature jack (D) in the two smaller
    sides of the main body of the case, according to the template in [Figure 7-18](ch07.xhtml#ch07fig18).
    The hole for the BNC connector is 3/8 inches, while the holes for the switches
    and the temperature jack are all 1/4 inches.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-18.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-18: Approximate layout for the holes for the BNC connector (A) on
    the left side of the enclosure, and the on/off switch (B), battery/AC switch (C),
    and optional 3.5 mm temperature sensor input jack (D) on the right side*.'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: '***Mounting the Circuit Board***'
  id: totrans-285
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Finally, choose where to mount the printed circuit board to the inside of the
    case. For both pH meters that I made, I held a nonpopulated shield PCB inside
    the case and marked the locations of the four mounting holes on the plastic; you
    can use a printout of the board layout in this book’s resource files as a pattern
    if you prefer. With your four holes marked, gently center punch and drill them.
    Be careful not to crack the plastic enclosure, and make sure they line up with
    the mounting holes indicated on the PCB. I suggest using a #41 drill bit (about
    3/32 inches) to drill these holes.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: 'If you use the shield design included with this book, you may also need to
    drill the circuit board’s mounting holes to the correct size. Conventional manufacturing
    practice would advise using a spacer, screw, and nut to hold the board inside
    the enclosure, but instead, I drilled and tapped the circuit board itself. I used
    a #50 bit to drill the circuit board in all four corners and tapped it with a
    2-56 tap. I then used 2-56 screws to fasten the board in place. While this may
    not be a recommended practice for all applications, the board was light enough
    that it worked out well.'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, I would not expect a finished pH meter to be subjected to much
    physical punishment. With that in mind, I just put a strip of foam on the noncomponent
    side of the board and screwed the board to the side of the case—but not too hard.
    If you expect the unit to experience repeated and extreme vibration, you can put
    a dab of Thread-Lok or another anaerobic adhesive on the screw threads before
    assembly.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: Once the board is mounted, mark the access holes for the gain and offset trimmers.
    Place the cover on the enclosure, look straight down through the cover, and use
    a Sharpie marker to mark the locations of the two trimmer access holes. Remove
    the top from the enclosure, and drill 1/4-inch holes corresponding to the screw
    heads on the trimmers (see [Figure 7-16](ch07.xhtml#ch07fig16)).
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: '***Installing the Other Hardware***'
  id: totrans-290
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Now you can install the BNC connector, on/off switch, power switch, and (optional)
    temperature jack. I found it easiest to mount the switches and jack inside the
    enclosure first and solder the wires to them later. The same technique works well
    with the BNC connector, though you may wish to solder the ground wire beforehand.
    I took a piece of 22-gauge solid wire, wrapped it three-quarters of a turn around
    the base of the connector, tightened it with the retaining nut, and soldered it
    to a ground tap on the PCB (see [Figure 7-13](ch07.xhtml#ch07fig13)).
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: '*While I did not bring out the signals for the analog meter for my personal
    build, if you build the shield, you’ll see the two connections marked with a small
    box around them*.'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: '**Connecting the Probe to the Op-Amp**'
  id: totrans-294
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: “[Integrating the High-Impedance Probe](ch07.xhtml#ch07lev2sec1)” on [page 193](ch07.xhtml#page_193)
    describes special considerations required for using the pH probe as an input to
    the Custom pH Meter. It turns out that even high-quality FR-4 circuit board material
    can cause some current leakage, from dirt or moisture on the surface or other
    contamination. To minimize leakage, connect the input from the IC directly to
    the probe. In order to do this, place the IC in close physical proximity to the
    BNC connector inside the case. Then, instead of soldering pin 3 of the op-amp
    to the board or plugging that pin into a socket, bend it out and wire it directly
    to the BNC connector (see [Figure 7-19](ch07.xhtml#ch07fig19)).
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-19.jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-19: To minimize spurious signals, the connection from the BNC connector
    to the IC pin is soldered directly*.'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: Because this is the only high-impedance part of the circuit, some other precautions
    mentioned in the op-amp’s data sheet (such as ground-isolation rings around the
    other inputs) are not required. However, this project’s shield PCB does keep critical
    traces as short as possible and places components in close proximity.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: '**Connecting the Temperature Sensor**'
  id: totrans-299
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: For the optional temperature sensor, you will need to mount a 3.5 mm three-conductor
    jack inside the enclosure; the drilling hole for this is marked D in [Figure 7-18](ch07.xhtml#ch07fig18).
    Wire this jack to the temperature IC connections on the PCB, which are the three
    holes between the display connections and regulator IC in [Figure 7-20](ch07.xhtml#ch07fig20).
    The sleeve of the connector is ground, the ring is positive, and the tip is the
    output of the temperature-sensing IC.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-20.jpg)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-20: The three connections for the temperature sensing IC are just
    above the word* Therm.'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: You can protect the IC itself from liquid immersion by encapsulating it in a
    short length of heat-shrink tubing with sealant, as shown in [Figure 7-21](ch07.xhtml#ch07fig21).
    This heat-shrink tubing is readily available online. The sealant on the inside
    of the tubing should make a completely waterproof seal for the IC. To seal the
    IC, just insert it into the tubing and heat with a heat gun or a hair dryer on
    high heat until it is completely sealed.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f07-21.jpg)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-21: This LM35 temperature IC is completely encapsulated in a short
    length of heat-shrink tubing with a sealant thermal gel. The thermal gel can barely
    be seen where the wires enter the tubing*.'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: Once all hardware is mounted inside the enclosure and all components are soldered
    to the PCB, screw the LCD to the cover and close it all up to finish. You might
    also want to label your potentiometers and switches, as shown in [Figure 7-16](ch07.xhtml#ch07fig16),
    for ease of operation later.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
