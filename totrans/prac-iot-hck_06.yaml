- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Network Assessments
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 网络评估
- en: '![](Images/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/chapterart.png)'
- en: Assessing the security of services in IoT systems can sometimes be challenging,
    because these systems often use newer protocols supported by very few security
    tools, if any at all. So, it’s important that we learn which tools we *can* use
    and whether we can expand those tools’ capabilities.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 评估物联网系统中服务的安全性有时可能是具有挑战性的，因为这些系统通常使用很少有安全工具支持的新协议，甚至可能没有支持的工具。因此，我们需要了解我们*能*使用哪些工具，以及我们是否可以扩展这些工具的能力。
- en: In this chapter, we start by explaining how to circumvent network segmentation
    and penetrate into an isolated IoT network. Next, we show you how to identify
    IoT devices and fingerprint custom network services using Nmap. Then we attack
    *Message Queuing Telemetry Transport (MQTT)*, a common network IoT protocol. By
    doing so, you’ll learn how to write custom password-authentication cracking modules
    with the help of Ncrack.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先解释如何绕过网络分段并渗透到隔离的物联网网络。接下来，我们展示如何使用Nmap识别物联网设备并指纹定制的网络服务。然后，我们攻击*消息队列遥测传输（MQTT）*，这是一种常见的物联网网络协议。通过这样做，你将学会如何在Ncrack的帮助下编写定制的密码认证破解模块。
- en: Hopping into the IoT Network
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进入物联网网络
- en: Most organizations try to improve the security of their networks by introducing
    network segmentation and segregation strategies. These strategies separate assets
    with lower security requirements, such as the devices in the guest network, from
    critical components of the organization’s infrastructure, such as the web servers
    located at the datacenter and the voice network for employee phones. The critical
    components might also include an IoT network. For instance, the company might
    use security cameras and access control units, like remotely controlled door locks.
    To segregate the network, the company usually installs perimeter firewalls or
    switches and routers capable of separating the network into different zones.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数组织通过引入网络分段和隔离策略来提高其网络的安全性。这些策略将安全要求较低的资产（例如访客网络中的设备）与组织基础设施的关键组件（如位于数据中心的Web服务器和员工电话使用的语音网络）分开。关键组件还可能包括物联网网络。例如，公司可能使用安全摄像头和访问控制单元，如远程控制门锁。为了隔离网络，公司通常会安装周界防火墙或能够将网络划分为不同区域的交换机和路由器。
- en: One common way to segment a network is through *VLANs*, which are logical subsets
    of a larger, shared physical network. Devices must be located in the same VLAN
    to communicate. Any connection to a device that belongs to a different VLAN must
    go through a Layer 3 switch, a device that combines the functionality of a switch
    and a router, or just a router, which can then impose ACLs. The ACLs selectively
    admit or reject inbound packets using advanced rulesets, providing fine-grained
    network traffic control.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 划分网络的一种常见方法是通过*VLANs*，它们是更大、共享物理网络的逻辑子集。设备必须位于同一VLAN中才能进行通信。任何连接到属于不同VLAN的设备的连接必须通过第三层交换机，这是一种结合了交换机和路由器功能的设备，或者仅通过路由器，然后可以施加ACL。ACL通过使用高级规则集选择性地接纳或拒绝传入的数据包，从而提供精细的网络流量控制。
- en: But if the company configures these VLANs insecurely or uses insecure protocols,
    an attacker could circumvent the restrictions by performing a VLAN-hopping attack.
    In this section, we walk through this attack to access the organization’s protected
    IoT network.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果公司不安全地配置这些VLAN或使用不安全的协议，攻击者可能通过执行VLAN跳跃攻击来绕过这些限制。在本节中，我们将演示这种攻击，以访问组织保护的物联网网络。
- en: VLANs and Network Switches
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: VLAN和网络交换机
- en: To perform an attack against the VLANs, you need to understand how network switches
    operate. On a switch, each port is either configured as an *access port* or a
    *trunk port* (also called a *tagged* port by some vendors), as shown in [Figure
    4-1](#figure4-1).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要对VLAN进行攻击，你需要了解网络交换机的工作原理。在交换机上，每个端口要么被配置为*接入端口*，要么为*干线端口*（一些供应商也称之为*标记端口*），如[图4-1](#figure4-1)所示。
- en: '![f04001](Images/f04001.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![f04001](Images/f04001.png)'
- en: 'Figure 4-1: Common network architecture with separated VLANs for guests and
    IoT devices'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-1：为访客和物联网设备分隔的常见网络架构
- en: When a device, such as an IP camera, is connected to an access port, the network
    assumes that the packets it transfers belong to a certain VLAN. On the other hand,
    when a device is connected to a trunk port, it establishes a VLAN *trunk link*,
    a type of connection that allows the packets of any VLAN to pass through. We mainly
    use trunk links to connect multiple switches and routers.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当设备（如 IP 摄像头）连接到访问端口时，网络会假设它传输的数据包属于某个特定的 VLAN。另一方面，当设备连接到中继端口时，它会建立一个 VLAN
    *中继链路*，这种连接允许任何 VLAN 的数据包通过。我们主要使用中继链路来连接多个交换机和路由器。
- en: To identify the traffic in a trunk link that belongs to each VLAN, the switch
    uses an identification method called *VLAN tagging*. It marks packets that traverse
    a trunk link with a tag that corresponds to their access port’s VLAN ID. When
    the packets arrive at the destination switch, the switch removes the tag and uses
    it to transfer the packets to the correct access port. Networks can use one of
    several protocols to perform the VLAN tagging, such as the Inter-Switch Link (ISL),
    the LAN Emulation (LANE), and IEEE 802.1Q and 802.10 (FDDI).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了识别中继链路中属于每个 VLAN 的流量，交换机使用一种名为 *VLAN 标记* 的标识方法。它通过一个标签标记穿越中继链路的数据包，该标签对应于它们访问端口的
    VLAN ID。当数据包到达目标交换机时，交换机会去除标签并利用它将数据包传输到正确的访问端口。网络可以使用几种协议来执行 VLAN 标记，例如互联交换链路（ISL）、局域网仿真（LANE）、IEEE
    802.1Q 和 802.10（FDDI）。
- en: Switch Spoofing
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 交换机欺骗
- en: Many network switches establish VLAN trunk links dynamically using a Cisco proprietary
    networking protocol called the *Dynamic Trunking Protocol (DTP)*. DTP allows two
    connected switches to create a trunk link and then negotiate the VLAN tagging
    method.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 许多网络交换机通过一种名为 *动态中继协议（DTP）* 的 Cisco 专有网络协议动态地建立 VLAN 中继链路。DTP 允许两台连接的交换机创建中继链路，然后协商
    VLAN 标记方法。
- en: In a *switch spoofing attack*, attackers abuse this protocol by pretending their
    device is a network switch, tricking a legitimate switch into establishing a trunk
    link to it ([Figure 4-2](#figure4-2)). As a result, the attackers can gain access
    to packets originating from any VLAN on the victim switch.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *交换机欺骗攻击* 中，攻击者通过假装自己的设备是网络交换机，利用该协议欺骗合法交换机与其建立中继链路（[图 4-2](#figure4-2)）。因此，攻击者可以访问来自受害交换机任何
    VLAN 的数据包。
- en: '![f04002](Images/f04002.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![f04002](Images/f04002.png)'
- en: 'Figure 4-2: Switch spoofing attack'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-2：交换机欺骗攻击
- en: 'Let’s try this attack. We’ll send DTP packets that resemble those from an actual
    switch on the network using the open source tool Yersinia ([https://github.com/tomac/yersinia/](https://github.com/tomac/yersinia/)).
    Yersinia is preinstalled in Kali Linux, but if you are using the latest Kali version,
    you’ll need to first install the `kali-linux-large` metapackage. You can do so
    by issuing the following command in a terminal:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试这个攻击。我们将使用开源工具 Yersinia ([https://github.com/tomac/yersinia/](https://github.com/tomac/yersinia/))
    发送类似于网络上实际交换机的数据包的 DTP 数据包。Yersinia 已经预安装在 Kali Linux 中，但如果你使用的是最新的 Kali 版本，你需要先安装
    `kali-linux-large` 元包。可以通过在终端中执行以下命令来安装：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We generally recommend using the preceding approach instead of manually compiling
    tools, as we have identified issues with the compilation of some of the tools
    in the newest Kali versions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一般建议使用上述方法，而不是手动编译工具，因为我们已经发现最新 Kali 版本中的一些工具编译存在问题。
- en: 'Alternatively, you can try compiling Yersinia by using the following commands:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你也可以尝试使用以下命令编译 Yersinia：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To establish the trunk link with the attacker’s device, open Yersinia’s graphic
    user interface:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要与攻击者设备建立中继链路，请打开 Yersinia 的图形用户界面：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the interface, click **Launch Attack**. Then, in the **DTP** tab, select
    the **enable trunking** option, as shown in [Figure 4-3](#figure4-3).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在界面中，点击 **启动攻击**。然后，在 **DTP** 标签页中，选择 **启用中继** 选项，如 [图 4-3](#figure4-3) 所示。
- en: '![f04003](Images/f04003.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![f04003](Images/f04003.png)'
- en: 'Figure 4-3: The Yersinia DTP tab'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-3：Yersinia DTP 标签
- en: When you select this option, Yersinia should imitate a switch that supports
    the DTP protocol, connect to a victim switch’s port, and repeatedly send the DTP
    packets needed to establish a trunk link with the victim switch. If you want to
    send just one raw DTP packet, select the first option.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择此选项时，Yersinia 应该模仿支持 DTP 协议的交换机，连接到受害交换机的端口，并反复发送建立中继链路所需的 DTP 数据包。如果只想发送一个原始的
    DTP 数据包，请选择第一个选项。
- en: Once you’ve enabled trunking in the DTP tab, you should see data from the available
    VLANs in the 802.1Qtab, as shown in [Figure 4-4](#figure4-4).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在 DTP 标签中启用干道传输，您应该能够在 802.1Q 标签中看到来自可用 VLAN 的数据，如[图 4-4](#figure4-4)所示。
- en: '![f04004](Images/f04004.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![f04004](Images/f04004.png)'
- en: 'Figure 4-4: The Yersinia 802.1Q tab'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-4：Yersinia 802.1Q 标签
- en: 'The data also includes the available VLAN IDs. To access the VLAN packets,
    first identify your network interface using the `nmcli` command, which is preinstalled
    in Kali Linux:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 数据还包括可用的 VLAN ID。要访问 VLAN 数据包，首先使用 `nmcli` 命令识别您的网络接口，Kali Linux 中预安装了此命令：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In this example, the attacker’s laptop has the `eth1` network interface. Enter
    the following commands in the Linux terminal:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，攻击者的笔记本具有 `eth1` 网络接口。在 Linux 终端中输入以下命令：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: First, we load the kernel module for the VLAN tagging method using the `modprobe`
    command, which is preinstalled in Kali Linux. Then we create a new interface with
    the desired VLAN ID using the `vconfig` command, followed by the `add` parameter,
    the name of our network interface, and the VLAN identifier. The `vconfig` command
    is preinstalled in Kali Linux, and it’s included in the `vlan` package in other
    Linux distributions. In our case, we’ll specify the VLAN 20 ID used for the IoT
    network in this example and assign it to the network adapter on the attacker’s
    laptop. You can also select an IPv4 address using the `ifconfig` command.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们使用 `modprobe` 命令加载 VLAN 标签方法的内核模块，Kali Linux 中预安装了该命令。然后，我们使用 `vconfig`
    命令创建一个具有所需 VLAN ID 的新接口，接着使用 `add` 参数，指定我们的网络接口名称和 VLAN 标识符。`vconfig` 命令在 Kali
    Linux 中预安装，在其他 Linux 发行版中，它包含在 `vlan` 包中。在本示例中，我们将指定用于 IoT 网络的 VLAN 20 ID，并将其分配给攻击者笔记本上的网络适配器。您还可以使用
    `ifconfig` 命令选择 IPv4 地址。
- en: Double Tagging
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 双标签攻击
- en: As mentioned earlier, an access port sends and receives packets with no VLAN
    tag, because those packets are assumed to belong to a specific VLAN. On the other
    hand, the packets that the trunk port sends and receives should be marked with
    a VLAN tag. This allows packets originating from any access port, even those belonging
    to different VLANs, to pass through. But there are certain exceptions to this,
    depending on the VLAN tagging protocol in use. For example, in the IEEE 802.1Q
    protocol, if a packet arrives at a trunk port and has no VLAN tag, the switch
    will automatically forward this packet to a predefined VLAN called the *native
    VLAN*. Usually, this packet has the VLAN ID 1\.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，访问端口发送和接收的包没有 VLAN 标签，因为这些包被认为属于特定的 VLAN。另一方面，干道端口发送和接收的包应当标记上 VLAN 标签。这允许来自任何访问端口的包，即使是属于不同
    VLAN 的包，也能够通过。但根据所使用的 VLAN 标签协议，仍然存在某些例外。例如，在 IEEE 802.1Q 协议中，如果一个包到达干道端口且没有 VLAN
    标签，交换机将自动将此包转发到一个预定义的 VLAN，称为 *本地 VLAN*。通常，这个包的 VLAN ID 为 1。
- en: If the native VLAN’s ID belongs to one of the switch access ports or if an adversary
    has acquired it as part of a switch spoofing attack, the attacker might be able
    to perform a double tagging attack, as shown in [Figure 4-5](#figure4-5).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果本地 VLAN 的 ID 属于交换机的某个访问端口，或者如果对手在交换机欺骗攻击中获得了它，攻击者可能会执行双标签攻击，如[图 4-5](#figure4-5)所示。
- en: '![f04005](Images/f04005.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![f04005](Images/f04005.png)'
- en: 'Figure 4-5: Double tagging attack'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-5：双标签攻击
- en: When a packet that traverses a trunk link arrives on the destination switch’s
    trunk port, the destination port removes its VLAN tag and then uses this tag to
    transfer the packet to the correct custom packets. You could add two VLAN tags
    and trick the switch into removing only the outer one. If it’s the native VLAN
    tag, the switch will transfer the packet with the inner tag to its trunk link,
    toward the second switch. When the packet arrives on the destination switch’s
    trunk port, the switch will use the inner tag to forward the packet to the appropriate
    access port. You can use this method to send packets to a device that you wouldn’t
    otherwise be able to reach, such as an IoT device monitoring server, as shown
    in [Figure 4-5](#figure4-5).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当穿越干道链路的包到达目标交换机的干道端口时，目标端口会移除其 VLAN 标签，然后使用该标签将包转发到正确的自定义数据包。您可以添加两个 VLAN 标签，并欺骗交换机仅移除外部标签。如果是本地
    VLAN 标签，交换机将把带有内部标签的包转发到其干道链路，朝第二个交换机方向传输。当包到达目标交换机的干道端口时，交换机会使用内部标签将包转发到适当的访问端口。您可以使用此方法将数据包发送到本来无法访问的设备，如
    IoT 设备监控服务器，如[图 4-5](#figure4-5)所示。
- en: To perform the attack, the outer VLAN tag has to identify the adversary’s own
    VLAN, which must also be the native VLAN of the established trunk link, whereas
    the inner tag must identify the VLAN to which a targeted IoT device belongs. We
    can use the *Scapy*``framework ([https://scapy.net/](https://scapy.net/)), a powerful
    packet manipulation program written in Python, to forge a packet with these two
    VLAN tags. You can install Scapy using Python’s `pip` package manager.``
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行该攻击，外部 VLAN 标签必须识别对手自己的 VLAN，并且该 VLAN 必须是已建立的 trunk 链接的本地 VLAN，而内部标签则必须识别目标
    IoT 设备所属的 VLAN。我们可以使用 *Scapy*``框架 ([https://scapy.net/](https://scapy.net/))，这是一个用
    Python 编写的强大数据包操作程序，来伪造一个包含这两个 VLAN 标签的数据包。你可以通过 Python 的 `pip` 包管理器来安装 Scapy。``
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
