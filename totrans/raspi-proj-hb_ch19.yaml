- en: '**19'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**19'
- en: 'Make a Game in Scratch: Hungry Monkey**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Scratch 中制作游戏：饥饿猴子**
- en: In this project you’ll use the block-based programming language Scratch to create
    a game that can be controlled with two pushbuttons and your Pi.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将使用基于区块的编程语言 Scratch 来创建一个可以通过两个按键和树莓派控制的游戏。
- en: '![image](../images/f0233-01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0233-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需零件**'
- en: Raspberry Pi
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派
- en: Two pushbuttons
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 两个按键
- en: Breadboard
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 面包板
- en: Jumper wires
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 跳线
- en: In this project, you’ll create your own game called Hungry Monkey. The object
    of the game is for the monkey to catch as many ripe bananas as possible in 30
    seconds, while avoiding the rotten ones. You’ll be able to move the monkey left
    and right with two pushbuttons that you’ll wire to your Raspberry Pi.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将创建一个名为“饥饿猴子”的游戏。游戏的目标是让猴子在 30 秒内尽可能多地抓到成熟的香蕉，同时避免抓到腐烂的香蕉。你可以通过将两个按键连接到树莓派来控制猴子的左右移动。
- en: '**INTRODUCING SCRATCH 2**'
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**介绍 Scratch 2**'
- en: '**NOTE**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*To find out more about Scratch, visit the official Scratch website at* [http://scratch.mit.edu/](http://scratch.mit.edu/).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*要了解更多关于 Scratch 的信息，请访问官方 Scratch 网站* [http://scratch.mit.edu/](http://scratch.mit.edu/)。'
- en: Scratch is a visual programming language you can use to create animations, stories,
    and games using drag-and-drop code blocks. Although Scratch was developed to teach
    kids how to program, it’s suitable for anyone who wants to learn some fundamental
    programming concepts or just wants to have fun building their own games.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch 是一种可视化编程语言，你可以使用它通过拖放代码块创建动画、故事和游戏。虽然 Scratch 最初是为了教孩子们编程而开发的，但它同样适合任何想要学习基本编程概念或只是想玩游戏制作的人。
- en: Scratch 2 is installed on Raspbian by default. You can open it from the desktop
    main menu by going to **Programming** ▸ **Scratch 2**. When you open Scratch 2,
    you should see a window like the one in [Figure 19-1](ch19.xhtml#ch19fig1).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch 2 默认安装在 Raspbian 上。你可以通过桌面主菜单中的**编程** ▸ **Scratch 2**来打开它。当你打开 Scratch
    2 时，你应该能看到像[图 19-1](ch19.xhtml#ch19fig1)这样的窗口。
- en: '![image](../images/f0234-01.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0234-01.jpg)'
- en: '**FIGURE 19-1:** The Scratch 2 window'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 19-1：** Scratch 2 窗口'
- en: The Scratch window divides the screen into four main sections. The Stage ➊ is
    where your game or animations will play out. At the top right, you’ll see a green
    flag and a stop sign; you can use these icons to start and stop the game, respectively.
    When you first open Scratch, you should see a cat on your stage by default.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch 窗口将屏幕分为四个主要部分。Stage ➊ 是你的游戏或动画播放的区域。右上角，你会看到一个绿色的旗帜和一个停止标志；你可以使用这些图标来启动和停止游戏。当你首次打开
    Scratch 时，默认情况下，舞台上应该会看到一只猫。
- en: 'The Sprite List ➋ shows all of your *sprites*, which are your game characters
    or any object that performs an action in your project. In the middle of the window
    is the Blocks Area ➌, which has three tabs: Scripts, Costumes, and Sounds. The
    Scripts tab contains programming blocks you use to build your program. Each block
    is a different programming instruction that you can drag and drop into place in
    your program. You’ll see different categories of blocks organized according to
    what they do. Each category has a specific color; for example, blocks from the
    **Motion** category, which tell your sprites how to move around, are dark blue.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Sprite List ➋ 显示了所有的*精灵*，这些精灵是你的游戏角色或在项目中执行某个动作的任何物体。窗口的中间是 Blocks 区域 ➌，它有三个标签：Scripts、Costumes
    和 Sounds。Scripts 标签包含你用来构建程序的编程块。每个块都是一个不同的编程指令，你可以将其拖放到程序中。你会看到根据功能不同而分类的块，每个类别都有特定的颜色；例如，**运动**类别的块是深蓝色的，它们告诉精灵如何移动。
- en: The Costumes tab ➍ shows options for customizing and creating new costumes for
    your sprites, and the Sounds tab ➎ allows you to add sounds to your sprites. The
    Scripts Area ➏ is where you drag the blocks and put them together to create a
    script.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Costumes 标签 ➍ 显示了自定义和创建新角色服装的选项，Sounds 标签 ➎ 允许你为角色添加声音。Scripts 区域 ➏ 是你拖动并拼接代码块以创建脚本的地方。
- en: The menu bar ➐ at the top shows the File and Edit main menus at the left side.
    The icons at the center allow you to duplicate, delete, grow, and shrink your
    sprites, and also get help from Scratch.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部的菜单栏 ➐ 显示了左侧的文件和编辑主菜单。中间的图标允许你复制、删除、放大和缩小你的角色，还可以从 Scratch 获取帮助。
- en: '**WIRING THE CIRCUIT**'
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**连接电路**'
- en: The circuit for this project consists of two pushbuttons and the Raspberry Pi.
    Follow these instructions to wire them, using [Figure 19-2](ch19.xhtml#ch19fig2)
    as a reference.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目的电路由两个按键和树莓派组成。按照这些指示来连接它们，可以参考[图 19-2](ch19.xhtml#ch19fig2)。
- en: Connect a GND pin to your breadboard’s GND rail.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一个 GND 引脚连接到面包板的 GND 电源轨。
- en: Insert two pushbuttons into the breadboard.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将两个按钮插入面包板中。
- en: Connect the bottom-right pushbutton pins to the GND rail.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将右下角的按钮引脚连接到 GND 电源轨。
- en: Connect the bottom-left pin of one pushbutton to GPIO 2 and the other to GPIO
    3.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一个按钮的左下角引脚连接到 GPIO 2，另一个连接到 GPIO 3。
- en: '![image](../images/f0235-01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0235-01.jpg)'
- en: '**FIGURE 19-2:** Wiring two pushbuttons to the Raspberry Pi'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 19-2：** 将两个按钮连接到树莓派'
- en: That’s it! You’re ready to code the game.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样！你已经准备好编写游戏代码了。
- en: '**BUILDING THE SCRIPT**'
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建脚本**'
- en: Before creating a game, it’s useful to outline the features you want your game
    to have so you know exactly what you need to do.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建游戏之前，最好先概述你希望游戏具备的功能，这样你就能确切知道需要做什么。
- en: 'In the Hungry Monkey game, the player controls a monkey who needs to catch
    as many ripe bananas as possible while avoiding rotten bananas. For each good
    banana caught, the player gets a point; if the player catches a rotten banana,
    the game deducts a point. Here’s a list of the main steps to build the Hungry
    Monkey game:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在《饥饿猴子》游戏中，玩家控制一只猴子，需要尽可能抓住熟香蕉，同时避免抓到烂香蕉。每抓到一个好香蕉，玩家得一分；如果抓到烂香蕉，游戏将扣除一分。以下是构建《饥饿猴子》游戏的主要步骤：
- en: 'Create the main character, the monkey, and allow the player to control its
    movement using two pushbuttons: one moves the monkey right and the other moves
    the monkey left. Also allow the player to move the monkey with keyboard keys.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建主角猴子，并允许玩家通过两个按钮来控制猴子的移动：一个按钮让猴子向右移动，另一个按钮让猴子向左移动。同时允许玩家通过键盘键来控制猴子的移动。
- en: Create the good and rotten banana sprites and make them fall from the sky.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建好香蕉和烂香蕉的精灵，并让它们从天而降。
- en: Program the monkey so that it catches the bananas when it touches them.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编程使猴子在碰到香蕉时将其抓住。
- en: Create a score system that adds one point when the monkey catches a good banana
    and subtracts a point when it catches a rotten one.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个得分系统，当猴子抓到一个好香蕉时加一分，抓到一个烂香蕉时减一分。
- en: Create a timer and end the game when the timer hits 0.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个计时器，当计时器归零时结束游戏。
- en: Display the player’s score when the game is over.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 游戏结束时显示玩家的得分。
- en: The Scratch file for this project is available at *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*.
    To upload a saved program to Scratch, go to **File ▸ Load Project**. To build
    the script, follow the next few sections.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目的 Scratch 文件可以在* [https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*找到。要上传已保存的程序到
    Scratch，请进入**文件 ▸ 加载项目**。接下来按照以下几节构建脚本。
- en: '**Creating the Sprites and Choosing the Stage Background**'
  id: totrans-40
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**创建精灵并选择舞台背景**'
- en: '**NOTE**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*You can also create a sprite from scratch using the paintbrush icon, upload
    your own sprite by clicking the folder icon, or take a photo with a webcam for
    your sprite with the camera icon.*'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*你也可以通过点击画笔图标从头创建一个精灵，点击文件夹图标上传你自己的精灵，或者用摄像头图标拍摄照片制作精灵。*'
- en: In the Hungry Monkey Game, you’ll use a monkey sprite, and a banana sprite from
    the Sprite Library. You won’t need to use the cat sprite that appears on the Stage
    by default, so you can delete it by right-clicking the sprite and selecting **Delete**
    to delete this sprite.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在《饥饿猴子游戏》中，你将使用精灵库中的猴子精灵和香蕉精灵。你不需要使用默认出现在舞台上的猫精灵，可以通过右键点击精灵并选择**删除**来删除这个精灵。
- en: Go to the Sprite List and click the leftmost icon that looks like a character
    (see [Figure 19-3](ch19.xhtml#ch19fig3)) to open the Sprite Library.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 前往精灵列表，点击最左边的图标（看起来像一个角色），以打开精灵库（参见[图 19-3](ch19.xhtml#ch19fig3)）。
- en: '![image](../images/f0237-01.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0237-01.jpg)'
- en: '**FIGURE 19-3:** Icons to create new sprites'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 19-3：** 创建新精灵的图标'
- en: From the Animals category, choose the `Monkey2` sprite and click **OK**. Then,
    open the Sprite Library again, select the `Bananas` sprite from the Things category,
    and then click **OK**.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从“动物”类别中选择`Monkey2`精灵并点击**OK**。然后再次打开精灵库，从“物品”类别中选择`Bananas`精灵，点击**OK**。
- en: You can choose a background for your game from the leftmost side of the Sprite
    List. There you’ll find a set of icons for the background. Click the first icon—highlighted
    in [Figure 19-4](ch19.xhtml#ch19fig4)—to choose a background from the backdrop
    library. We’ve chosen the one called *blue sky*.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从精灵列表的最左侧选择游戏背景。在那里，你会找到一组背景图标。点击第一个图标（在[图 19-4](ch19.xhtml#ch19fig4)中高亮显示）以从背景库中选择一个背景。我们选择了名为*蓝天*的背景。
- en: '![image](../images/f0237-02.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0237-02.jpg)'
- en: '**FIGURE 19-4:** Selecting the background from the backdrop library'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 19-4：** 从背景库中选择背景'
- en: Now your sprites section should look like [Figure 19-5](ch19.xhtml#ch19fig5).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的精灵区应该像[图 19-5](ch19.xhtml#ch19fig5)所示。
- en: '![image](../images/f0237-03.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0237-03.jpg)'
- en: '**FIGURE 19-5:** Sprite List with the selected sprites and background'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 19-5：** 选中的精灵和背景的精灵列表'
- en: '**Editing the Sprites**'
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**编辑精灵**'
- en: Scratch allows you to increase or decrease the size of a sprite, change its
    color, or edit it as you would do in an image-editing program. Scratch built-in
    image editor is called *Paint Editor*. Here you’ll make some changes to your sprites’
    appearance.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch允许你增加或减少精灵的大小，改变其颜色，或者像在图像编辑程序中一样编辑它。Scratch内置的图像编辑器叫做*Paint Editor*。在这里你将对精灵的外观进行一些更改。
- en: Select the `Monkey2` sprite in the Sprite List; if a sprite is selected, it
    will be outlined in blue, as shown in [Figure 19-5](ch19.xhtml#ch19fig5). Next,
    click the `Monkey2` sprite in the Costumes tab, and edit the first costume, called
    `monkey2-a`. With the mouse pointer drag a corner of the sprite until its size
    matches 98×138 pixels, or use the shrink tool until you get the desired size;
    the sprite size is displayed below the `monkey2-a` costume. Also change the `Bananas`
    sprite’s size to 28×28 pixels.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在精灵列表中选择`Monkey2`精灵；如果已选择精灵，它会以蓝色轮廓显示，如[图 19-5](ch19.xhtml#ch19fig5)所示。接下来，点击“造型”标签中的`Monkey2`精灵，编辑第一个造型，名为`monkey2-a`。使用鼠标指针拖动精灵的一个角，直到其大小变为98×138像素，或者使用缩放工具直到获得所需的大小；精灵的大小会显示在`monkey2-a`造型下方。同时，将`Bananas`精灵的大小更改为28×28像素。
- en: When adjusting the sprites’ size, make sure they’re at the center of the canvas
    in order to keep the sprite’s reference point.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 调整精灵的大小时，确保它们位于画布的中心，以保持精灵的参考点。
- en: '**Adding Controls to the Monkey Sprite**'
  id: totrans-58
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**为猴子精灵添加控制**'
- en: Now you’ll add controls to the monkey so you can make it go left or right by
    pressing the pushbuttons or the left and right arrows on the keyboard.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你将为猴子添加控制，使其可以通过按下按钮或键盘上的左右箭头来左右移动。
- en: To allow the Raspberry Pi GPIOs to interface with Scratch so the program will
    react when a pushbutton is pressed, you need to add an extension library to Scratch.
    Select the `Monkey2` sprite in the Scripts tab, select **More Blocks**, and click
    **Add an Extension**. Next select the Pi GPIO icon, as shown in [Figure 19-6](ch19.xhtml#ch19fig6),
    and click **OK**.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让树莓派GPIO与Scratch进行交互，并且在按下按钮时程序能够响应，你需要向Scratch添加一个扩展库。在“脚本”标签中选择`Monkey2`精灵，选择**更多积木**，然后点击**添加扩展**。接着选择Pi
    GPIO图标，如[图 19-6](ch19.xhtml#ch19fig6)所示，然后点击**确定**。
- en: '![image](../images/f0238-01.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0238-01.jpg)'
- en: '**FIGURE 19-6:** Adding the Pi GPIO extension'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 19-6：** 添加Pi GPIO扩展'
- en: The extension library adds new blocks to control the Pi GPIOs, which should
    appear in the More Blocks category.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展库添加了新的积木来控制Pi GPIO，这些积木应该出现在“更多积木”类别中。
- en: There are many different ways to make your sprite move in Scratch. You’ll use
    the (x,y) coordinate system, in which the (0,0) position is the middle of the
    Stage. Increasing the x-coordinate moves your sprites to the right, and decreasing
    it moves your sprites to the left. Increasing the y-coordinate moves your sprites
    up, and decreasing it moves your sprites down. The blocks that control movement
    are in the dark blue **Motion** category.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在Scratch中有很多方法可以让你的精灵移动。你将使用(x, y)坐标系统，其中(0,0)位置是舞台的中心。增加x坐标将使精灵向右移动，减少它会使精灵向左移动。增加y坐标会使精灵向上移动，减少它则会使精灵向下移动。控制移动的积木位于深蓝色的**运动**类别中。
- en: To control the monkey, select the `Monkey2` sprite and drag the blocks in [Figure
    19-7](ch19.xhtml#ch19fig7) into the Script Area. Then change the settings in the
    blocks to match [Figure 19-7](ch19.xhtml#ch19fig7).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制猴子，选择`Monkey2`精灵并将[图 19-7](ch19.xhtml#ch19fig7)中的积木拖入脚本区域。然后根据[图 19-7](ch19.xhtml#ch19fig7)中的设置更改积木的参数。
- en: '![image](../images/f0239-01.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0239-01.jpg)'
- en: '**FIGURE 19-7:** Blocks for controlling the monkey'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 19-7：** 控制猴子的积木'
- en: You first set the `Monkey2` sprite’s x-position to 0 and y-position to –110\.
    Setting x to 0 centers your sprite horizontally, and setting y to –110 moves your
    sprite to the floor. This way the sprite is always in this position every time
    you start the game.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 首先将`Monkey2`精灵的x位置设置为0，y位置设置为–110。将x设置为0可以使精灵水平居中，将y设置为–110则将精灵移动到地面。这样每次你开始游戏时，精灵都会保持在这个位置。
- en: The next two blocks set GPIO 2 and GPIO 3 to inputs, so the program will be
    able to tell if the pushbuttons have been pressed.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的两个积木将GPIO 2和GPIO 3设置为输入端口，以便程序能够检测到推按钮是否被按下。
- en: '**NOTE**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Finding the blocks is easy. Remember that each blocks category has a specific
    color and each block within it is colored accordingly.*'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '*找到这些积木很简单。记住，每个积木类别都有特定的颜色，每个积木的颜色也相应地进行了设置。*'
- en: Then you add a forever loop that continuously checks if the player is pressing
    the pushbuttons or the left and right arrow keys. If the player presses the pushbutton
    connected to GPIO 3, or the right arrow key, the sprite’s x-position is changed
    by 30, moving it to the right; if the player presses the pushbutton connected
    to GPIO 2, or the left arrow key, the sprite’s x-position is changed by –30, moving
    it to the left. You can increase this number to make your monkey move faster,
    or decrease it to make the monkey move slower.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你添加一个永远循环，不断检查玩家是否按下了推按钮或左右箭头键。如果玩家按下连接到GPIO 3的推按钮或右箭头键，精灵的x位置会改变30，使其向右移动；如果玩家按下连接到GPIO
    2的推按钮或左箭头键，精灵的x位置会改变-30，使其向左移动。你可以增加这个数值来让猴子移动得更快，或者减少它来让猴子移动得更慢。
- en: Once you’ve added the blocks, double-check them against [Figure 19-7](ch19.xhtml#ch19fig7),
    and then you can test it out.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 添加完这些积木后，请与[图19-7](ch19.xhtml#ch19fig7)进行双重检查，然后可以进行测试。
- en: '**Testing Your Script**'
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**测试你的脚本**'
- en: To start a script in Scratch, you use the green flag block, ![image](../images/f0239-02.jpg).
    This block will start your game and synchronize all the scripts in your sprites.
    When you click the green flag icon at the top right of the stage section, Scratch
    starts all the scripts that are under this block.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在Scratch中启动脚本时，使用绿色旗帜积木，![image](../images/f0239-02.jpg)。这个积木会启动你的游戏并同步所有精灵中的脚本。当你点击舞台区域右上角的绿色旗帜图标时，Scratch会启动所有在该积木下的脚本。
- en: Click the green flag icon ![image](../images/f0239-03.jpg) at the upper-right
    corner of the stage now. Test that the sprite moves appropriately by pressing
    the pushbuttons and arrow keys. When you have everything working, move on to the
    timer.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在点击舞台右上角的绿色旗帜图标 ![image](../images/f0239-03.jpg)。按下推按钮和箭头键测试精灵是否按预期移动。当一切正常后，继续测试计时器。
- en: '**Creating the Countdown Timer**'
  id: totrans-77
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**创建倒计时器**'
- en: The player needs to know how much time they have left to catch bananas, so next
    you’ll create a countdown timer.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 玩家需要知道剩余多少时间来抓取香蕉，接下来你将创建一个倒计时器。
- en: To add the timer to your game, select the `Monkey2` sprite, and then add the
    blocks in [Figure 19-8](ch19.xhtml#ch19fig8) to the Script Area. You may notice
    you can’t find the show variable block. That’s because you need to create the
    variable to hold the time. To create variables, navigate to the **Data** blocks
    category, and click the **Make a Variable** button. Call the new variable time
    and make it available for all sprites by checking the **For all sprites** box.
    Now drag that block into the Script Area.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要将定时器添加到游戏中，选择`Monkey2`精灵，然后将[图19-8](ch19.xhtml#ch19fig8)中的积木添加到脚本区域。你可能会注意到找不到显示变量的积木。这是因为你需要创建一个变量来存储时间。要创建变量，请进入**数据**积木类别，并点击**创建变量**按钮。将新变量命名为time，并通过勾选**所有精灵**框使其对所有精灵可用。现在将该积木拖入脚本区域。
- en: '![image](../images/f0240-01.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0240-01.jpg)'
- en: '**FIGURE 19-8:** Blocks to create a countdown timer'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**图19-8：** 创建倒计时器的积木'
- en: To create the countdown timer, you’ll use a block called timer. This block counts
    the time that has passed since the script started. When you click the green flag
    icon, the script resets the timer, so it starts counting from 0 every time you
    start the game. Next you include a block that shows the `time` variable on the
    stage. You can position the `time` variable by dragging it across the stage section;
    move it to the stage’s top-right corner.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建倒计时器，你需要使用一个叫做timer的积木。这个积木会计算从脚本开始以来已经过去的时间。当你点击绿色旗帜图标时，脚本会重置定时器，每次开始游戏时它都会从0开始计时。接下来，添加一个积木，将`time`变量显示在舞台上。你可以通过拖动它来调整`time`变量的位置，将其移动到舞台的右上角。
- en: Next, the forever loop keeps updating the `time` variable so that it starts
    at 30 and decreases by one every second. You use the round block so the countdown
    time is shown only in integer numbers. If you want to change your game duration,
    you can adjust the number in the round block.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，永远循环会不断更新`time`变量，使其从30开始，每秒减少1。你使用圆形积木，确保倒计时只显示整数。如果你想改变游戏时长，可以调整圆形积木中的数字。
- en: Pay careful attention to the nesting here (see [Figure 19-9](ch19.xhtml#ch19fig9));
    you’ll notice that the set time to block comes first, then the round block. Then,
    on top of that, you need to drop the green - block with two empty circles. Inside
    the first empty circle, enter 30, and inside the second empty circle, drop a timer
    block from the **Sensing** category.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 请特别注意这里的嵌套（参见[图19-9](ch19.xhtml#ch19fig9)）；你会注意到，先有设定时间的模块，然后是回合模块。接着，在这个基础上，你需要放置带有两个空圆圈的绿色模块。在第一个空圆圈里输入30，在第二个空圆圈里放入一个来自**感知**类别的计时器模块。
- en: '![image](../images/f0241-01.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0241-01.jpg)'
- en: '**FIGURE 19-9:** The nested if block'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**图19-9：** 嵌套的if语句块'
- en: The if block at the end (see [Figure 19-8](ch19.xhtml#ch19fig8)) hides the `time`
    variable from the stage when `time` hits 0\. Now try it out!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的if模块（参见[图19-8](ch19.xhtml#ch19fig8)）会在`time`归零时隐藏`time`变量在舞台上的显示。现在试试看吧！
- en: '**Counting and Displaying the Score**'
  id: totrans-88
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**计算并显示分数**'
- en: To create the score system, first you need to create a variable to keep track
    of the score. In the **Data** blocks category, create a new variable called `score`
    and make it available for all sprites. Select the `Monkey2` sprite, and then add
    the blocks in [Figure 19-10](ch19.xhtml#ch19fig10) to the scripts area.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建分数系统，首先你需要创建一个变量来跟踪分数。在**数据**模块类别中，创建一个名为`score`的新变量，并使其对所有角色可见。选择`Monkey2`角色，然后将[图19-10](ch19.xhtml#ch19fig10)中的模块添加到脚本区。
- en: '![image](../images/f0241-02.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0241-02.jpg)'
- en: '**FIGURE 19-10:** Blocks to display the score and stop the game'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**图19-10：** 显示分数并停止游戏的模块'
- en: Set the set score to block to `0` so your score will restart when the game starts.
    Then add the show variable block to display the score on the stage.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 将设定分数的模块设置为`0`，这样当游戏开始时，分数会重置。然后添加显示变量模块，在舞台上显示分数。
- en: At the end of the game, when the time hits 0, the monkey should say the score
    in a speech bubble and all the scripts will stop, ending the game. To make the
    monkey talk, add some purple **Looks** blocks to show a speech bubble—you can
    enter whatever text you want your monkey to say here.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏结束时，当时间归零时，猴子应该在气泡框中说出分数，所有脚本将停止，游戏结束。为了让猴子说话，添加一些紫色的**外观**模块来显示气泡框——你可以在这里输入你希望猴子说的任何文本。
- en: Again, be careful with the nesting here, and look at [Figure 19-10](ch19.xhtml#ch19fig10)
    carefully.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 再次小心嵌套，并仔细查看[图19-10](ch19.xhtml#ch19fig10)。
- en: '**Making the Bananas Fall from the Sky**'
  id: totrans-95
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**让香蕉从天而降**'
- en: 'Now that you’ve created all the `Monkey2` animations and controls, you need
    to set the `Bananas` sprite to fall from the sky. Here’s the to-do list for the
    `Bananas` sprite:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经创建了所有`Monkey2`的动画和控制，你需要让`Bananas`角色从天而降。以下是`Bananas`角色的待办事项清单：
- en: The bananas should fall from the sky, starting from a random x-position and
    then decreasing in y-position until they hit the floor.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 香蕉应该从天而降，从一个随机的x位置开始，然后y位置逐渐减小，直到它们触地。
- en: The bananas should disappear when they hit the floor.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当香蕉触地时，它们应该消失。
- en: When the bananas touch the monkey, a sound should play, one point should be
    added to the score, and the bananas should disappear.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当香蕉触碰到猴子时，应该播放声音，分数加一，香蕉消失。
- en: All the bananas should be deleted when the time hits 0, so they don’t continue
    to fall after the game is over.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有香蕉应该在时间归零时被删除，以免在游戏结束后继续掉落。
- en: First you need to add a sound from the Sound Library to the blocks section.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要从声音库中将声音添加到模块区。
- en: '**Adding a Sound from the Sound Library**'
  id: totrans-102
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**从声音库中添加声音**'
- en: You’ll add a pop sound to the `Bananas` sprite to play when it hits the `Monkey2`
    sprite. For that, select the `Bananas` sprite, and in the blocks section select
    the **Sounds** tab. Then click the ![image](../images/f0242-01.jpg) icon to choose
    a sound from the Sound Library and choose `pop`. Select the **Scripts** tab to
    add your action blocks.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 你将为`Bananas`角色添加一个“啪”声，当它碰到`Monkey2`角色时播放。为此，选择`Bananas`角色，在模块区选择**声音**标签。然后点击![image](../images/f0242-01.jpg)图标，从声音库中选择一个声音，并选择`pop`。选择**脚本**标签以添加动作模块。
- en: '**Making the Bananas Fall**'
  id: totrans-104
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**让香蕉掉落**'
- en: To accomplish everything in the to-do list, select the `Bananas` sprite, and
    then add the blocks in [Figure 19-11](ch19.xhtml#ch19fig11) to its scripts area.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成待办事项清单，选择`Bananas`角色，然后将[图19-11](ch19.xhtml#ch19fig11)中的模块添加到它的脚本区。
- en: '![image](../images/f0242-02.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0242-02.jpg)'
- en: '**FIGURE 19-11:** Blocks for creating and controlling the `Bananas` sprite'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**图19-11：** 创建并控制`Bananas`角色的模块'
- en: With the upper-left set of blocks ➊ in [Figure 19-11](ch19.xhtml#ch19fig11),
    you create a clone of the `Bananas` sprite every second. In other words, you make
    a new `Bananas` sprite appear every second.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [图 19-11](ch19.xhtml#ch19fig11) 中的左上角代码块 ➊，你每秒创建一个 `Bananas` 精灵的克隆体。换句话说，你每秒生成一个新的
    `Bananas` 精灵。
- en: In the set of blocks to the right ➌, you initialize the values for the `Bananas`
    clones. The show block ensures that the bananas appear on the screen. You set
    the bananas’ y-position to 170, which corresponds to the top of the Stage, and
    set the x-position to a random number between –230 and 230, which is the horizontal
    Stage space from left to right.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在右侧的代码块集合 ➌ 中，你初始化了 `Bananas` 克隆体的值。`show` 块确保香蕉出现在屏幕上。你将香蕉的 y 坐标设置为 170，这对应舞台的顶部，并将
    x 坐标设置为 -230 到 230 之间的随机数，这个范围是舞台的水平空间，从左到右。
- en: Then you initialize a repeat until block, which is like a `while` loop that
    is active until the `time` variable hits 0\. The change y by block inside the
    repeat until block decreases the y-position of the bananas so they look like they’re
    falling from the sky. In this case, we’re decreasing the y-position by 5\. If
    you want to make them fall faster, increase the y-value; if you want them to fall
    more slowly, decrease it.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 接着你初始化了一个 `repeat until` 块，它类似于 `while` 循环，直到 `time` 变量为 0 时才停止。在 `repeat until`
    块中的 `change y by` 块会减少香蕉的 y 坐标，使它们看起来像是从天上掉下来。在这个例子中，我们将 y 坐标减少 5。如果你想让它们掉得更快，增加
    y 值；如果你想让它们掉得更慢，减少 y 值。
- en: The first if block inside the repeat until block makes the bananas disappear
    when they reach the bottom of the stage, at y < –160\. The second if block adds
    one point to the `score` variable and plays the `pop` sound when the bananas hit
    the monkey, and makes the bananas disappear. Finally, when the repeat until block
    is over, the `Bananas` clones are hidden from the stage.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个 `if` 块位于 `repeat until` 块内，当香蕉到达舞台底部（y < –160）时，它会让香蕉消失。第二个 `if` 块在香蕉碰到猴子时，会为
    `score` 变量加 1 并播放 `pop` 音效，同时让香蕉消失。最后，当 `repeat until` 块结束时，`Bananas` 克隆体会从舞台上隐藏。
- en: The blocks in the lower left ➋ of [Figure 19-11](ch19.xhtml#ch19fig11) stop
    the creation of new `Bananas` clones when the `time` variable hits 0.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [图 19-11](ch19.xhtml#ch19fig11) 左下角的代码块 ➋ 停止在 `time` 变量为 0 时创建新的 `Bananas`
    克隆体。
- en: '**Adding the Rotten Bananas**'
  id: totrans-113
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**添加腐烂香蕉**'
- en: 'You now have the monkey, the good bananas, the timer, and the score. You’re
    just missing the rotten bananas. The script for the rotten bananas is really similar
    to the script in [Figure 19-11](ch19.xhtml#ch19fig11); you just need to make these
    changes:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了猴子、好的香蕉、计时器和分数。你只差腐烂香蕉了。腐烂香蕉的脚本与 [图 19-11](ch19.xhtml#ch19fig11) 中的脚本非常相似；你只需要做以下更改：
- en: Create rotten bananas every 2 seconds instead of 1.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每 2 秒钟生成腐烂香蕉，而不是每 1 秒钟生成。
- en: Decrease the score by one when the rotten bananas touch the monkey.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当腐烂香蕉碰到猴子时，减少分数 1。
- en: Play a different sound when the monkey touches the rotten bananas. We’ve chosen
    the sound called `F elec bass`.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当猴子碰到腐烂香蕉时播放不同的音效。我们选择了名为 `F elec bass` 的音效。
- en: Change how the rotten bananas look.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改腐烂香蕉的外观。
- en: Because this script is so similar to the previous one, you’re going to duplicate
    the good bananas and then make the changes. Right-click the `Bananas` sprite and
    select **duplicate**. The sprite and its script should be duplicated and automatically
    named `Bananas2`. Right-click the `Bananas2` sprite and select **info**; a menu
    should appear that allows you to change the sprite’s name. Enter `Rotten` as the
    new name. The changes you need to make to the script are highlighted in [Figure
    19-12](ch19.xhtml#ch19fig12).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个脚本与之前的脚本非常相似，你将复制好的香蕉并进行更改。右键点击 `Bananas` 精灵并选择 **duplicate**。精灵及其脚本将被复制，并自动命名为
    `Bananas2`。右键点击 `Bananas2` 精灵并选择 **info**；此时会弹出一个菜单，让你更改精灵的名称。输入 `Rotten` 作为新名称。你需要在脚本中进行的更改已在
    [图 19-12](ch19.xhtml#ch19fig12) 中高亮显示。
- en: '![image](../images/f0244-01.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0244-01.jpg)'
- en: '**FIGURE 19-12:** Blocks for controlling the rotten bananas'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 19-12：** 控制腐烂香蕉的代码块'
- en: Change the wait block value to `2` ➊, so a new `Rotten` clone will fall every
    2 seconds, instead of every second. Also change the sound block to play `F elec
    bass` ➋, and in the set score to block, reduce the score by `1` ➌. Remember that
    you have to add this sound from the library in the Sounds tab first.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `wait` 块的值更改为 `2` ➊，这样每隔 2 秒就会生成一个新的 `Rotten` 克隆体，而不是每秒生成一个。另外，将音效块更改为播放 `F
    elec bass` ➋，并在 `set score to` 块中将分数减少 `1` ➌。记住，你必须先在音效选项卡中从库中添加这个音效。
- en: With the script for rotten bananas complete, next you’ll change the `Rotten`
    sprite colors so that the bananas look rotten. Select the `Rotten` sprite and
    click the **Costumes** tab. The Paint Editor screen should appear (see [Figure
    19-13](ch19.xhtml#ch19fig13)).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 腐烂香蕉的脚本完成后，接下来您将改变`Rotten`角色的颜色，使香蕉看起来腐烂。选择`Rotten`角色，点击**服装**选项卡。应该会弹出绘图编辑器屏幕（参见[图19-13](ch19.xhtml#ch19fig13)）。
- en: On the right side of the window, select the bucket icon ➊; then, at the bottom,
    select different colors ➋ to fill each individual banana with a different color.
    Choose colors like brown, olive green, and dark green to show that they’re rotten.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在窗口的右侧，选择桶图标 ➊；然后，在底部，选择不同的颜色 ➋ 来填充每个香蕉。选择棕色、橄榄绿和深绿等颜色，显示它们腐烂了。
- en: '![image](../images/f0245-01.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0245-01.jpg)'
- en: '**FIGURE 19-13:** Editing the **Rotten** sprite colors'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**图19-13:** 编辑**Rotten**角色的颜色'
- en: '**PLAYING THE GAME**'
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**玩游戏**'
- en: Congratulations! Your game is ready. To play the game in fullscreen, click the
    fullscreen icon at the top-left corner of the stage, and then click the green
    flag icon. Playing the game in fullscreen makes it run smoother and quicker.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你的游戏已准备就绪。要在全屏模式下玩游戏，请点击舞台左上角的全屏图标，然后点击绿旗图标。在全屏模式下玩游戏能使其运行更加流畅和快速。
- en: Remember that you can use either the pushbuttons or the keyboard keys to play
    the game. When the game is over, just click the green flag icon to restart.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，您可以使用按钮或键盘键来玩游戏。游戏结束时，只需点击绿旗图标即可重新开始。
- en: '**TAKING IT FURTHER**'
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**进一步扩展**'
- en: 'This project was just a glimpse of what you can do with Scratch. Here are some
    ideas to improve this game:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目只是展示了您在Scratch中可以做的一小部分。以下是一些改进这个游戏的想法：
- en: Increase the bananas’ falling speed as the game progresses.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着游戏的进行，增加香蕉的下落速度。
- en: Increase the number of rotten bananas as the game progresses.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着游戏的进行，增加腐烂香蕉的数量。
- en: Make this game multiplayer by creating another sprite with different controls.
    (You’ll need to add another `score` variable to hold player 2’s score.)
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过创建另一个角色并使用不同的控制方式，使这个游戏支持多人模式。（您需要添加另一个`score`变量来存储玩家2的分数。）
- en: Add other electronics to your circuit that you can interface with Scratch, like
    buttons, buzzers, or sensors.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向您的电路中添加其他电子设备，您可以用Scratch接口连接，如按钮、蜂鸣器或传感器。
- en: Have fun and create your own games!
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 玩得开心，创造属于你自己的游戏吧！
