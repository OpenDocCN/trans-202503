["```\nperl -lne '(1x$_) !~ /^1?$|^(11+?)\\1+$/ && print \"$_ is prime\"'\n```", "```\nperl -MList::Util=sum -alne 'print sum @F'\n```", "```\nuse module qw(arg);\n```", "```\nuse List::Util qw(sum);\nwhile (<>) {\n    @F = split(' ');\n    print sum @F, \"\\n\";\n}\n```", "```\n1:2:3:4:5:6:7:8:9:10\n```", "```\nperl -MList::Util=sum -F: -alne 'print sum @F'\n```", "```\nperl -MList::Util=sum -alne 'push @S,@F; END { print sum @S }'\n```", "```\nperl -MList::Util=sum -alne '$s += sum @F; END { print $s }'\n```", "```\nperl -MList::Util=shuffle -alne 'print \"@{[shuffle @F]}\"'\n```", "```\n$ echo a b c d | perl -MList::Util=shuffle -alne 'print \"@{[shuffle @F]}\"'\nb c d a\n```", "```\n$ echo a b c d | perl -MList::Util=shuffle -alne 'print shuffle @F'\nbcda\n```", "```\n$ echo a b c d | perl -MList::Util=shuffle -alne '$,=\":\"; print shuffle @F'\nb:c:d:a\n```", "```\nperl -MList::Util=shuffle -alne 'print join \" \", shuffle @F'\n```", "```\nperl -MList::Util=min -alne 'print min @F'\n```", "```\n-8  9  10 5\n7   0  9  3\n5  -25 9  999\n```", "```\n-8\n0\n-25\n```", "```\nperl -MList::Util=min -alne '@M = (@M, @F); END { print min @M }'\n```", "```\nperl -MList::Util=min -alne '\n  $min = min @F;\n  $rmin = $min unless defined $rmin && $min > $rmin;\n  END { print $rmin }\n'\n```", "```\n-8  9  10 5\n7   0  9  3\n5  -25 9  999\n```", "```\nperl -MList::Util=min -alne '$min = min($min // (), @F); END { print $min }'\n```", "```\nperl -MList::Util=max -alne 'print max @F'\n```", "```\nperl -MList::Util=max -alne '@M = (@M, @F); END { print max @M }'\n```", "```\nperl -MList::Util=max -alne '\n  $max = max @F;\n  $rmax = $max unless defined $rmax && $max < $rmax;\n  END { print $rmax }\n'\n```", "```\nperl -MList::Util=max -alne '$max = max($max // (), @F); END { print $max }'\n```", "```\nperl -alne 'print \"@{[map { abs } @F]}\"'\n```", "```\nperl -alne 'print scalar @F'\n```", "```\nfoo bar baz\nfoo bar\nbaz\n```", "```\n3\n2\n1\n```", "```\nperl -alne 'print scalar @F, \" $_\"'\n```", "```\nfoo bar baz\nfoo bar\nbaz\n```", "```\n3 foo bar baz\n2 foo bar\n1 baz\n```", "```\nperl -alne '$t += @F; END { print $t }'\n```", "```\nfoo bar baz\nfoo bar\nbaz\n```", "```\nperl -alne 'map { /*regex*/ && $t++ } @F; END { print $t || 0 }'\n```", "```\nperl -alne '$t += /*regex*/ for @F; END { print $t }'\n```", "```\nperl -alne '$t += grep /*regex*/, @F; END { print $t }'\n```", "```\nperl -lne '/*regex*/ && $t++; END { print $t || 0 }'\n```", "```\nperl -Mbignum=bpi -le 'print bpi(21)'\n```", "```\nperl -Mbignum=PI -le 'print PI'\n```", "```\nperl -Mbignum=bexp -le 'print bexp(1,21)'\n```", "```\nperl -Mbignum=bexp -le 'print bexp(2,31)'\n```", "```\nperl -Mbignum=e -le 'print e'\n```", "```\nperl -le 'print time'\n```", "```\nperl -le 'print scalar gmtime'\n```", "```\nperl -le 'print scalar localtime'\n```", "```\n($second,             [0]\n$minute,              [1]\n$hour,                [2]\n$month_day,           [3]\n$month,               [4]\n$year,                [5]\n$week_day,            [6]\n$year_day,            [7]\n$is_daylight_saving   [8]\n)\n```", "```\nperl -le 'print join \":\", (localtime)[2,1,0]'\n```", "```\nperl -le 'print join \":\", (localtime)[2..6]'\n```", "```\nperl -le 'print join \":\", (localtime)[-2, -3]'\n```", "```\nperl -MPOSIX -le '\n  @now = localtime;\n  $now[3] -= 1;\n  print scalar localtime mktime @now\n'\n```", "```\nperl -MPOSIX -le '\n  @now = localtime;\n  $now[0] -= 7;\n  $now[3] -= 9;\n  $now[4] -= 14;\n  print scalar localtime mktime @now\n'\n```", "```\nperl -MMath::BigInt -le 'print Math::BigInt->new(5)->bfac()'\n```", "```\nperl -le '$f = 1; $f *= $_ for 1..5; print $f'\n```", "```\nperl -MMath::BigInt=bgcd -le 'print bgcd(@list_of_numbers)'\n```", "```\nperl -MMath::BigInt=bgcd -le 'print bgcd(20,60,30)'\n```", "```\nperl -MMath::BigInt=bgcd -anle 'print bgcd(@F)'\n```", "```\nperl -le '\n  $n = 20; $m = 35;\n  ($m,$n) = ($n,$m%$n) while $n;\n  print $m\n'\n```", "```\nperl -MMath::BigInt=blcm -le 'print blcm(35,20,8)'\n```", "```\nperl -MMath::BigInt=blcm -anle 'print blcm(@F)'\n```", "```\nperl -le '\n  $a = $n = 20;\n  $b = $m = 35;\n  ($m,$n) = ($n,$m%$n) while $n;\n  print $a*$b/$m\n'\n```", "```\nperl -le 'print join \",\", map { int(rand(15-5))+5 } 1..10'\n```", "```\nperl -le '\n  $n=10;\n  $min=5;\n  $max=15;\n  $, = \" \";\n  print map { int(rand($max-$min))+$min } 1..$n;\n'\n```", "```\nperl -MAlgorithm::Permute -le '\n  $l = [1,2,3,4,5];\n  $p = Algorithm::Permute->new($l);\n  print \"@r\" while @r = $p->next\n'\n```", "```\nperl -MAlgorithm::Permute -le '\n  @l = (1,2,3,4,5);\n  Algorithm::Permute::permute { print \"@l\" } @l\n'\n```", "```\n1 2 3\n1 3 2\n3 1 2\n2 1 3\n2 3 1\n3 2 1\n```", "```\nperl -MList::PowerSet=powerset -le '\n  @l = (1,2,3,4,5);\n  print \"@$_\" for @{powerset(@l)}\n'\n```", "```\n1 2 3\n2 3\n1 3\n3\n1 2\n2\n1\n```", "```\nperl -le '\n  $i=3;\n  $u += ($_<<8*$i--) for \"127.0.0.1\" =~ /(\\d+)/g;\n  print $u\n'\n```", "```\nperl -le '\n  $ip=\"127.0.0.1\";\n  $ip =~ s/(\\d+)\\.?/sprintf(\"%02x\", $1)/ge;\n  print hex($ip)\n'\n```", "```\nperl -le 'print unpack(\"N\", 127.0.0.1)'\n```", "```\nperl -MSocket -le 'print unpack(\"N\", inet_aton(\"127.0.0.1\"))'\n```", "```\nperl -MSocket -le 'print inet_ntoa(pack(\"N\", 2130706433))'\n```", "```\nperl -le '\n  $ip = 2130706433;\n  print join \".\", map { (($ip>>8*($_))&0xFF) } reverse 0..3\n'\n```", "```\nperl -le '\n  $ip = 2130706433;\n  $, = \".\";\n  print map { (($ip>>8*($_))&0xFF) } reverse 0..3\n'\n```", "```\nperl -le '\n  $ip = 2130706433;\n  $, = \".\";\n  print map { (($ip>>8*($_))&0xFF) } 3,2,1,0\n'\n```"]