- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Becoming Anonymous Online
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如何实现在线匿名
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: Pentesters and red teamers get excited about setting up and tuning their infrastructure
    just as much as they do about writing their engagement reports; that is to say,
    not at all. To them, the thrill is all in the exploitation, lateral movement,
    and privilege escalation. Building a secure infrastructure is dull paperwork.
    If they accidentally leak their IP in the target’s log dashboard, so what? They’ll
    owe the team a beer for messing up, the blue team will get a pat on the back for
    finding and exposing the attack, and everyone can start afresh the next day.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员和红队成员在搭建和调优自己的基础设施时，兴奋感和写参与报告时一样多；也就是说，完全没有兴奋感。对他们来说，刺激全在于利用、横向移动和特权升级。建立一个安全的基础设施则是无聊的文书工作。如果他们不小心在目标的日志面板中泄露了自己的
    IP 地址，那又怎样？他们只需要为搞砸了事情请团队喝一杯啤酒，蓝队会因为发现并揭露攻击而得到表扬，大家可以在第二天重新开始。
- en: 'Things are different in the real world. There are no do-overs for hackers and
    hacktivists, for instance. They do not have the luxury of a legally binding engagement
    contract. They bet their freedom, nay, their lives, on the security of their tooling
    and the anonymity of their infrastructure. That’s why in each of my books, I insist
    on writing about some basic operational security (OpSec) procedures and how to
    build an anonymous and efficient hacking infrastructure: a quick how-to-stay-safe
    guide in this ever-increasingly authoritarian world we seem to be forging for
    ourselves. We start this guide with how to become as anonymous online as possible,
    using a virtual private network (VPN), Tor, bouncing servers, and a replaceable
    and portable attack infrastructure.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 现实世界是不同的。例如，黑客和黑客活动分子没有重来的机会。他们没有法律约束力的参与合同这一奢侈品。他们将自由，甚至生命，押注于他们工具的安全性和基础设施的匿名性。这就是为什么在我的每本书中，我都坚持写一些基本的操作安全（OpSec）程序，以及如何构建一个匿名且高效的黑客基础设施：在这个越来越具有威权主义色彩的世界里，一份如何保持安全的快速指南。我们将从如何尽可能做到在线匿名开始，使用虚拟私人网络（VPN）、Tor、跳跃服务器以及一个可替换且便于携带的攻击基础设施。
- en: If you are already intimate with current Command and Control (C2) frameworks,
    containers, and automation tools like Terraform, you can just skip ahead to Chapter
    4, where the actual hacking begins.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经熟悉当前的指挥与控制（C2）框架、容器以及像 Terraform 这样的自动化工具，你可以跳过前面的内容，直接进入第4章，那里才是真正的黑客攻击开始的地方。
- en: VPNs and Their Failings
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VPN 及其缺陷
- en: I would hope that in 2021, just about everyone knows that exposing their home
    or work IP address to their target website is a big no-no. Yet, I find that most
    people are comfortable snooping around websites using a VPN service that promises
    total anonymity—one they registered with using their home IP address, maybe even
    with their own credit card, along with their name and address. To make matters
    worse, they set up that VPN connection from their home laptop while streaming
    their favorite Netflix show and talking to friends on Facebook.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望到2021年，几乎每个人都知道将自己的家庭或工作 IP 地址暴露给目标网站是个大忌。然而，我发现大多数人仍然习惯于通过一个承诺完全匿名的 VPN
    服务浏览网站——这个 VPN 是他们用家庭 IP 地址注册的，可能还用了自己的信用卡，附带自己的姓名和地址。更糟糕的是，他们是在家里的笔记本上设置 VPN
    连接，一边看着自己最喜欢的 Netflix 节目，一边和朋友在 Facebook 上聊天。
- en: 'Let’s get something straight right away. No matter what they say, VPN services
    will always, *always* keep some form of logs: IP address, DNS queries, active
    sessions, and so on. Let’s put ourselves in the shoes of a naïve internaut for
    a second and pretend that there are no laws forcing every access provider to keep
    basic metadata logs of outgoing connections—such laws exist in most countries,
    and no VPN provider will infringe them for your measly $5 monthly subscription,
    but please indulge this candid premise. The VPN provider has hundreds if not thousands
    of servers in multiple datacenters around the world. They also have thousands
    of users—some on Linux machines, others on Windows, and a spoiled bunch on Macs.
    Could you really believe it’s possible to manage such a huge and heterogeneous
    infrastructure without something as basic as logs?'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们马上澄清一件事。不管他们怎么说，VPN服务总是会*总是*保留某种形式的日志：IP地址、DNS查询、活动会话等等。让我们暂时站在一个天真的互联网用户的角度，假设没有法律强迫每个接入提供商保留出站连接的基本元数据日志——这种法律在大多数国家都存在，而且没有VPN提供商会为你那区区5美元的月费而违反这些法律，但请你暂时接受这个坦诚的前提。VPN提供商在全球多个数据中心有成百上千台服务器。他们也有成千上万的用户——有些是Linux用户，另一些是Windows用户，还有一部分娇惯的Mac用户。你真的能相信在没有日志这种基础工具的情况下，管理如此庞大且异构的基础设施是可能的吗？
- en: Without logs, the technical support would be just as useless and clueless as
    the confused client calling them to solve a problem. Nobody in the company would
    know how to start fixing a simple DNS lookup problem, let alone mysterious routing
    issues involving packet loss, preferred routes, and other networking witchcraft.
    Many VPN providers feel obliged to vociferously defend their log-*less* service
    to keep up with competitors making similar claims, but this is a falsehood that
    has led to a pointless race to the bottom, powered by blatant lies—or “marketing,”
    as I believe they call it these days.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 没有日志的情况下，技术支持就和那些打电话求助的困惑客户一样无用和迷茫。公司里没有人知道如何开始解决一个简单的DNS查询问题，更不用说涉及丢包、优先路由和其他网络巫术的神秘路由问题了。许多VPN提供商觉得有必要大声辩护他们的无日志服务，以跟上竞争者们做出类似声明的步伐，但这是一种谎言，导致了毫无意义的竞争，推动了公然的谎言——或者“营销”，就像我现在认为他们所称之为的那样。
- en: The best you can hope for from a VPN provider is that they do not sell customer
    data to the highest bidder. Don’t even bother with free providers. Invest in your
    privacy, both in time and money. I recommend starting with AirVPN and ProtonVPN,
    which are both serious actors in the business.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你能从一个VPN服务提供商那里获得的最好的期望就是他们不会将客户数据卖给出价最高的人。甚至不要考虑那些免费的提供商。为你的隐私投资，不论是时间还是金钱。我推荐从AirVPN和ProtonVPN开始，它们都是这个行业中非常认真的参与者。
- en: This same perception of anonymity applies to Tor (The Onion Router, [https://www.torproject.org](https://www.torproject.org)),
    which promises anonymous passage through the internet via a network of nodes and
    relays that hide your IP address. Is there any reason you should blindly trust
    that first node you contact to enter the Tor network any more than the unsolicited
    phone call promising a long-lost inheritance in exchange for your credit card
    number? Sure, the first node only knows your IP address, but maybe that’s too
    much information already.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这种对匿名性的看法同样适用于Tor（洋葱路由，[https://www.torproject.org](https://www.torproject.org)），它通过一个隐藏你的IP地址的节点和中继网络来保证通过互联网的匿名传输。你有没有理由盲目相信第一个你接触的进入Tor网络的节点，和那个未经请求的电话一样，承诺给你一个失散多年的遗产，只要你提供信用卡号？当然，第一个节点只知道你的IP地址，但或许这已经是太多的信息了。
- en: Location, Location, Location
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 地点，地点，地点
- en: 'One way to increase your anonymity is to be careful of your physical location
    when hacking. Don’t get me wrong: Tor is amazing. VPNs are a great alternative.
    But when you do rely on these services, always assume that your IP address—and
    hence, your geographical location and/or browser fingerprint—is known to these
    intermediaries and can be discovered by your final target or anyone investigating
    on their behalf. Once you accept this premise, the conclusion naturally presents
    itself: to be truly anonymous on the internet, you need to pay as much attention
    to your physical trail as you do to your internet fingerprint.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 提高匿名性的一种方式是小心你在黑客行为时的物理位置。别误会我的意思：Tor非常棒，VPN是一个很好的替代方案。但是，当你依赖这些服务时，永远要假设你的IP地址——因此，你的地理位置和/或浏览器指纹——是这些中介所知道的，并且可以被你的最终目标或任何代表他们调查的人发现。一旦你接受这个前提，结论自然就显现出来了：要在互联网上真正匿名，你需要像关注你的互联网指纹一样关注你的物理痕迹。
- en: If you happen to live in a big city, use busy train stations, malls, or similar
    public gathering places that have public Wi-Fi to quietly conduct your operations.
    Just another dot in the fuzzy stream of daily passengers. However, be careful
    not to fall prey to our treacherous human pattern-loving nature. Avoid at all
    costs sitting in the same spot day in, day out. Make it a point to visit new locations
    and even change cities from time to time.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你恰好住在大城市，可以利用繁忙的火车站、购物中心或类似的公共聚集场所，这些地方有公共Wi-Fi，悄悄进行你的操作。就像每天成千上万的乘客一样，融入模糊的流动中。然而，要小心不要落入我们那种喜欢模式的人的陷阱。无论如何，尽量避免天天坐在同一个地方。要有意识地去新地点，甚至偶尔更换城市。
- en: 'Some places in the world, like China, Japan, the UK, Singapore, the US, and
    even some parts of France, have cameras monitoring streets and public places.
    In that case, an alternative would be to embrace one of the oldest tricks in the
    book: war driving. Use a car to drive around the city looking for public Wi-Fi
    hotspots. A typical Wi-Fi receiver can catch a signal up to 40 meters (~150 feet)
    away, which you can increase to a couple hundred meters (a thousand feet) with
    a directional antenna, like Alfa Networks’ Wi-Fi adapter. Once you find a free
    hotspot, or a poorly secured one that you can break into—WEP encryption and weak
    WPA2 passwords are not uncommon and can be cracked with tools like Aircrack-ng
    and Hashcat—park your car nearby and start your operation. If you hate aimlessly
    driving around, check out online projects like WiFi Map, at [https://www.wifimap.io](https://www.wifimap.io),
    that list open Wi-Fi hotspots, sometimes with their passwords.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 世界上一些地方，比如中国、日本、英国、新加坡、美国，甚至法国的某些地区，都有摄像头监控街道和公共场所。在这种情况下，一个替代方案是采用书中最古老的技巧之一：战争驾驶。用车在城市中开来开去，寻找公共Wi-Fi热点。普通的Wi-Fi接收器可以接收到最多40米（约150英尺）远的信号，如果使用方向性天线，如Alfa
    Networks的Wi-Fi适配器，可以将这个范围增加到几百米（1000英尺）。一旦找到一个免费的热点，或者一个安全性差的热点（如WEP加密和弱的WPA2密码，这些是比较常见的，可以通过像Aircrack-ng和Hashcat这样的工具破解），把车停在附近并开始你的操作。如果你讨厌无目的地开车，可以查看像WiFi
    Map这样的在线项目，[https://www.wifimap.io](https://www.wifimap.io)，它列出了开放的Wi-Fi热点，有时还包括它们的密码。
- en: Hacking is really a way of life. If you are truly committed to your cause, you
    should fully embrace it and avoid being sloppy at all costs.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客真的可以说是一种生活方式。如果你真心致力于你的事业，你应该全身心投入，避免任何疏忽。
- en: The Operation Laptop
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作笔记本电脑
- en: Now that we have taken care of the location, let’s get the laptop situation
    straight. People can be precious about their laptops, with stickers everywhere,
    crazy hardware specs, and, good grief, that list of bookmarks that everyone swears
    they’ll go through one day. That’s the computer you flash at the local conference,
    not the one you use for an operation. Any computer you use to rant on Twitter
    and check your Gmail inbox is pretty much known to most government agencies. No
    number of VPNs will save your sweet face should your browser fingerprint leak
    somehow to your target.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经解决了位置问题，让我们理清笔记本电脑的使用情况。人们对他们的笔记本电脑往往很珍惜，上面贴满了贴纸，配置疯狂，还有，天哪，那些大家都说“总有一天会看的”书签列表。这是你在本地会议上展示的电脑，而不是你用来执行操作的那台电脑。任何你用来发Twitter或查看Gmail收件箱的电脑，都几乎为大多数政府机构所知。即便你使用了再多的VPN，如果你的浏览器指纹泄露到你的目标上，你的“美好面容”也无法得到拯救。
- en: For hacking purposes, we want an ephemeral operating system (OS) that flushes
    everything away on every reboot. We store this OS on a USB stick, and whenever
    we find a nice spot to settle in, we plug it into the computer to load our environment.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 出于黑客目的，我们需要一个每次重启时都会清除所有数据的临时操作系统（OS）。我们将这个操作系统存储在一个USB闪存驱动器上，每当我们找到一个合适的地方安顿下来时，就将其插入电脑中以加载我们的环境。
- en: Tails *(*[https://tails.boum.org/](https://tails.boum.org/)) is the go-to Linux
    distribution for this type of usage. It automatically rotates the MAC address,
    forces all connections to go through Tor, and avoids storing data on the laptop’s
    hard disk. (Conversely, traditional operating systems tend to store parts of memory
    on disk to optimize parallel execution, an operation known as *swapping*.) If
    it was good enough for Snowden, I bet it’s good enough for almost everyone. I
    recommend setting up Tails OS and storing it on an external drive before doing
    anything else.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Tails *(*[https://tails.boum.org/](https://tails.boum.org/)) 是这种用途的首选Linux发行版。它会自动更换MAC地址，强制所有连接都通过Tor进行，并避免将数据存储在笔记本硬盘上。（相反，传统操作系统往往会将部分内存数据存储在磁盘上以优化并行执行，这个操作被称为*交换*。）如果它足够适合斯诺登使用，我敢打赌它对几乎每个人都足够好。我建议在做任何事情之前，先设置Tails
    OS并将其存储在外部硬盘上。
- en: Some people are inexplicably fond of Chromebooks. These are minimal operating
    systems stacked on affordable hardware that only support a browser and a terminal.
    Seems ideal, right? It’s not. It’s the worst idea ever, next to licking a metal
    pole in the wintertime. We’re talking about an OS developed by Google that requires
    you to log in to your Google account, synchronize your data, and store it on Google
    Drive. Need I go on? There are some spinoffs of Chromium OS that disable the Google
    synchronization part, such as NayuOS, but the main point is that these devices
    were not designed with privacy in mind and under no circumstances should they
    be used for anonymous hacking activities. And if they were, then launch day must
    have been hilarious at Google.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一些人 inexplicably 喜欢 Chromebook。这些是堆叠在廉价硬件上的最小操作系统，仅支持浏览器和终端。听起来很理想，对吧？其实并不是。这是最糟糕的想法之一，仅次于冬天舔金属杆。我们在谈论的是一个由
    Google 开发的操作系统，它要求你登录 Google 帐户，同步数据，并将数据存储在 Google Drive 上。还需要我继续说吗？有一些基于 Chromium
    OS 的衍生系统，像是 NayuOS，禁用了 Google 同步部分，但重点是这些设备并不是为了隐私设计的，绝对不应该用于匿名黑客活动。如果用了，Google
    的发布日一定很有趣。
- en: Your operation laptop should only contain volatile and temporary data, such
    as browser tabs, a copy-paste of commands, and so on. If you absolutely need to
    export huge volumes of data, make sure to store that data in an encrypted fashion
    on portable storage.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你的操作笔记本应仅包含易失性和临时数据，例如浏览器标签页、复制粘贴的命令等。如果你确实需要导出大量数据，确保将数据以加密方式存储在便携式存储设备上。
- en: Bouncing Servers
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跳跃服务器
- en: 'Our laptop’s only purpose is to connect us to a set of servers that hold the
    necessary tooling and scripting to prepare for our adventure: the *bouncing servers*.
    These are virtual hosts we set up anonymously, only connect to via Tor or a VPN,
    and trust to interact with our more malicious virtual machines (VMs) and store
    our loot.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的笔记本唯一的目的是将我们连接到一组服务器，这些服务器包含必要的工具和脚本，为我们的冒险做准备：*跳跃服务器*。这些是我们匿名设置的虚拟主机，只通过
    Tor 或 VPN 连接，并信任它们与我们更恶意的虚拟机 (VM) 互动并存储我们的战利品。
- en: These servers provide us with a reliable and stable gateway to our future attack
    infrastructure. To connect to a bouncing server, we would SSH into it directly
    after ensuring our VPN or Tor connection is established. We can initiate a Secure
    Shell (SSH) connection from a random machine in a cold and busy train station
    and find ourselves a warm and cozy environment where all our tooling and favorite
    Zsh aliases are waiting for us.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这些服务器为我们提供了一个可靠且稳定的通道，通向我们未来的攻击基础设施。为了连接到跳跃服务器，我们将在确保 VPN 或 Tor 连接已建立的情况下直接通过
    SSH 连接到它。我们可以在一个寒冷且繁忙的火车站的随机机器上发起一个 Secure Shell (SSH) 连接，并找到一个温暖舒适的环境，所有的工具和我们喜爱的
    Zsh 别名都在等着我们。
- en: 'The bouncing servers can be hosted on one or many cloud providers spread across
    many geographical locations. The obvious limitation is the payment solution supported
    by these providers. Here are some examples of cloud providers with decent prices
    that accept cryptocurrencies:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 跳跃服务器可以托管在一个或多个云服务提供商上，分布在多个地理位置。显而易见的限制是这些提供商支持的支付方式。以下是一些接受加密货币且价格合理的云服务提供商示例：
- en: RamNode ([https://www.ramnode.com/](https://www.ramnode.com/)) costs about $5
    a month for a server with 1GB of memory and two virtual CPU (vCPU) cores. Only
    accepts Bitcoin.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RamNode ([https://www.ramnode.com/](https://www.ramnode.com/)) 每月大约需要 $5，提供
    1GB 内存和两个虚拟 CPU (vCPU) 核心的服务器。只接受比特币。
- en: NiceVPS ([https://nicevps.net/](https://nicevps.net/)) costs about €14.99 a
    month for a server with 1GB of memory and one vCPU core. Accepts Monero and Zcash.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NiceVPS ([https://nicevps.net/](https://nicevps.net/)) 每月大约需要 €14.99，提供 1GB
    内存和一个 vCPU 核心的服务器。接受 Monero 和 Zcash。
- en: Cinfu ([https://www.cinfu.com/](https://www.cinfu.com/)) costs about $4.79 a
    month for a server with 2GB of memory and one vCPU core. Supports Monero and Zcash.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cinfu ([https://www.cinfu.com/](https://www.cinfu.com/)) 每月大约需要 $4.79，提供 2GB
    内存和一个 vCPU 核心的服务器。支持 Monero 和 Zcash。
- en: PiVPS ([https://pivps.com/](https://pivps.com/)) costs about $14.97 a month
    for a server with 1GB of memory and one vCPU core. Supports Monero and Zcash.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PiVPS ([https://pivps.com/](https://pivps.com/)) 每月大约需要 $14.97，提供 1GB 内存和一个
    vCPU 核心的服务器。支持 Monero 和 Zcash。
- en: SecureDragon ([https://securedragon.net/](https://securedragon.net/)) costs
    about $4.99 a month for a server with 1GB of memory and two vCPU cores. Only accepts
    Bitcoin.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SecureDragon ([https://securedragon.net/](https://securedragon.net/)) 每月大约需要
    $4.99，提供 1GB 内存和两个 vCPU 核心的服务器。只接受比特币。
- en: Some services, like BitLaunch ([https://bitlaunch.io/](https://bitlaunch.io/)),
    can act as a simple intermediary. BitLaunch accepts Bitcoin payments but then
    spawns servers on DigitalOcean and Linode using its own account (for three times
    the price, of course, which is downright outrageous). Another intermediary service
    with a slightly better deal is bithost ([https://bithost.io/](https://bithost.io/)),
    which still takes a 50 percent commission. The trade-off, on top of the obvious
    rip-off, is neither of these providers gives you access to the DigitalOcean API,
    which can help automate much of the setup.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一些服务，比如 BitLaunch ([https://bitlaunch.io/](https://bitlaunch.io/))，可以充当简单的中介。BitLaunch
    接受比特币支付，但会使用其自己的账户在 DigitalOcean 和 Linode 上创建服务器（当然，价格是三倍的，简直令人无法接受）。另一种中介服务是
    bithost ([https://bithost.io/](https://bithost.io/))，它的交易条件稍好一些，但仍然收取 50% 的佣金。除了显而易见的宰客行为外，选择这两家服务的折衷是，它们都不给你提供
    DigitalOcean 的 API 接口，而这个接口可以帮助自动化大部分设置过程。
- en: 'Choosing a cloud provider can come down to this bitter trade-off: support of
    cryptocurrencies and the pseudo-anonymity they grant versus ease of use and automation.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 选择云服务提供商时，可能需要做出这个痛苦的折衷：是否支持加密货币及其提供的伪匿名性，还是更注重易用性和自动化。
- en: All major cloud providers—AWS, Google Cloud, Microsoft Azure, Alibaba, and so
    on—require a credit card before approving your account. Depending on where you
    live, this may not be a problem, as there are many services that provide prepaid
    credit cards in exchange for cash. Some online services even accept top-up credit
    cards with Bitcoin, but most of them will require some form of government-issued
    ID. That’s a risk you should carefully consider.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 所有主要的云服务提供商——AWS、Google Cloud、Microsoft Azure、阿里巴巴等——都要求在批准账户之前提供信用卡信息。根据你所在的地区，这可能不是问题，因为有很多服务提供商可以通过现金兑换预付费信用卡。有些在线服务甚至接受比特币充值的信用卡，但大多数都会要求提供某种政府签发的身份证明。这是一个你应该仔细考虑的风险。
- en: Ideally, bouncing servers should be used to host management tools like Terraform,
    Docker, and Ansible that will later help us build multiple attack infrastructures.
    A high-level overview of the architecture is presented in [Figure 1-1](#figure1-1).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，跳板服务器应该用于托管像 Terraform、Docker 和 Ansible 这样的管理工具，这些工具将帮助我们构建多个攻击基础设施。架构的高层概述见[图
    1-1](#figure1-1)。
- en: '![f01001.png](image_fi/501263c01/f01001.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![f01001.png](image_fi/501263c01/f01001.png)'
- en: 'Figure 1-1: Overview of the hacking infrastructure'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-1：黑客基础设施概述
- en: Our bouncing servers will never interact with the target. Not a single bleep.
    Therefore, we can afford to keep them around a little longer before switching—a
    few weeks or months—without incurring significant risks. Still, a dedicated investigation
    team might find a way to link these systems with those used to interact with the
    target, so deleting and re-creating bouncing servers regularly is a good idea.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的跳板服务器绝不会与目标互动。一个信号都不会发出。因此，我们可以让它们待得稍久一些再更换——几周或几个月——而不会带来重大风险。然而，专门的调查团队可能会找到方法将这些系统与那些用于与目标互动的系统关联起来，所以定期删除和重建跳板服务器是个好主意。
- en: The Attack Infrastructure
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 攻击基础设施
- en: Our attack infrastructure has a much higher volatility level than our bouncing
    servers and should be kept only a few days. It should be unique to each operation
    or target, if possible. The last thing we want is an investigator piecing together
    various clues from different targets hit by the same IP.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的攻击基础设施的波动性比我们的跳板服务器高得多，应该只保留几天。如果可能的话，应该针对每次操作或目标保持唯一性。我们最不希望发生的情况是，调查人员通过同一个
    IP 将来自不同目标的线索拼凑在一起。
- en: The attack infrastructure is usually composed of frontend and backend systems.
    The frontend system may initiate connections to the target, scan machines, and
    so forth. It can also be used—in the case of a reverse shell—to route incoming
    packets through a web proxy and deliver them, as appropriate, to the backend system,
    usually a C2 framework like Metasploit or Empire. Only some requests are forwarded
    to the C2 backend; other pages return insipid content, as depicted in [Figure
    1-2](#figure1-2).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击基础设施通常由前端和后端系统组成。前端系统可能发起连接到目标，扫描机器等。它还可以用来——在反向 shell 的情况下——通过网络代理路由传入的数据包，并根据需要将其传递到后端系统，通常是像
    Metasploit 或 Empire 这样的 C2 框架。只有一些请求会被转发到 C2 后端；其他页面则返回乏味的内容，如[图 1-2](#figure1-2)所示。
- en: '![f01002.png](image_fi/501263c01/f01002.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![f01002.png](image_fi/501263c01/f01002.png)'
- en: 'Figure 1-2: Packet routing to the backend'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-2：数据包路由到后端
- en: 'This packet routing can be done with a regular web proxy like Nginx or Apache
    that acts as a filter: requests from infected computers are routed directly to
    the corresponding backend C2 instance, while the remaining requests—from snoopy
    analysts, for example—are displayed an innocent web page. The backend C2 framework
    is really the spinal cord of the attack infrastructure, executing commands on
    infected machines, retrieving files, delivering exploits, and more.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据包路由可以通过常见的网络代理如Nginx或Apache来实现，它们充当过滤器：来自感染计算机的请求被直接路由到相应的后台C2实例，而其余的请求——例如来自好奇分析师的请求——则显示一个无害的网页。后台C2框架实际上是攻击基础设施的脊梁，执行感染机器上的命令，检索文件，传送漏洞利用工具等。
- en: You want your infrastructure to be modular and replaceable at will. Bypassing
    an IP ban should be as easy as sending one command to spawn a new proxy. Problems
    with the C2 backend? Enter a single command and you have a new C2 backend running
    with the exact same configuration.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你希望你的基础设施是模块化的，并且可以随时替换。绕过IP封禁应该像发送一个命令来启动一个新的代理一样简单。C2后台出现问题？输入一个命令，你就能启动一个新的C2后台，且配置完全相同。
- en: Achieving this level of automation is not a whimsical way to try out the trendiest
    tools and programming techniques. The easier it is to spring fully configured
    attacking servers, the fewer mistakes we make, especially under stressful circumstances.
    It’s as good an excuse as any to get into the skin of a DevOps person, learn their
    craft, and twist it to our own needs. Hopefully, this will clue us in to some
    shortcomings we will later exploit in our hacking adventure. The next chapter
    will focus on building this backend.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 达到这种自动化水平并不是一种试图尝试最流行工具和编程技术的异想天开的方式。攻击服务器配置得越容易，尤其是在压力环境下，我们犯的错误就越少。它是一个进入DevOps角色、学习其技能并将其改造为我们自己需求的好理由。希望这能让我们意识到一些不足之处，之后我们可以在黑客冒险中加以利用。下一章将重点讨论如何构建这个后台。
- en: Resources
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: For a fantastic account of Edward Snowden’s life and adventures in the intelligence
    community, read *Permanent Record*, by Edward Snowden (Macmillan, 2019).
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 若想了解Edward Snowden的生平以及他在情报界的冒险经历，阅读*Permanent Record*，作者Edward Snowden（Macmillan，2019）。
- en: Search for darkAudax’s tutorial on hacking WEP-encrypted communications here
    [https://aircrack-ng.org/](https://aircrack-ng.org/).
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这里搜索darkAudax关于黑客攻击WEP加密通信的教程：[https://aircrack-ng.org/](https://aircrack-ng.org/)。
- en: Find Brannon Dorsey’s tutorial on cracking WPA/WPA2 Wi-Fi routers with Aircrack-ng
    and Hashcat at [https://hakin9.org/](https://hakin9.org/).
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[https://hakin9.org/](https://hakin9.org/)找到Brannon Dorsey关于使用Aircrack-ng和Hashcat破解WPA/WPA2
    Wi-Fi路由器的教程。
- en: Search for Muhammad Arul’s guide to setting up Zsh on a Linux machine at [https://www.howtoforge.com/](https://www.howtoforge.com/).
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[https://www.howtoforge.com/](https://www.howtoforge.com/)查找Muhammad Arul关于在Linux机器上设置Zsh的指南。
