- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Becoming Anonymous Online
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/book_art/chapterart.png)'
  prefs: []
  type: TYPE_IMG
- en: Pentesters and red teamers get excited about setting up and tuning their infrastructure
    just as much as they do about writing their engagement reports; that is to say,
    not at all. To them, the thrill is all in the exploitation, lateral movement,
    and privilege escalation. Building a secure infrastructure is dull paperwork.
    If they accidentally leak their IP in the target’s log dashboard, so what? They’ll
    owe the team a beer for messing up, the blue team will get a pat on the back for
    finding and exposing the attack, and everyone can start afresh the next day.
  prefs: []
  type: TYPE_NORMAL
- en: 'Things are different in the real world. There are no do-overs for hackers and
    hacktivists, for instance. They do not have the luxury of a legally binding engagement
    contract. They bet their freedom, nay, their lives, on the security of their tooling
    and the anonymity of their infrastructure. That’s why in each of my books, I insist
    on writing about some basic operational security (OpSec) procedures and how to
    build an anonymous and efficient hacking infrastructure: a quick how-to-stay-safe
    guide in this ever-increasingly authoritarian world we seem to be forging for
    ourselves. We start this guide with how to become as anonymous online as possible,
    using a virtual private network (VPN), Tor, bouncing servers, and a replaceable
    and portable attack infrastructure.'
  prefs: []
  type: TYPE_NORMAL
- en: If you are already intimate with current Command and Control (C2) frameworks,
    containers, and automation tools like Terraform, you can just skip ahead to Chapter
    4, where the actual hacking begins.
  prefs: []
  type: TYPE_NORMAL
- en: VPNs and Their Failings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I would hope that in 2021, just about everyone knows that exposing their home
    or work IP address to their target website is a big no-no. Yet, I find that most
    people are comfortable snooping around websites using a VPN service that promises
    total anonymity—one they registered with using their home IP address, maybe even
    with their own credit card, along with their name and address. To make matters
    worse, they set up that VPN connection from their home laptop while streaming
    their favorite Netflix show and talking to friends on Facebook.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s get something straight right away. No matter what they say, VPN services
    will always, *always* keep some form of logs: IP address, DNS queries, active
    sessions, and so on. Let’s put ourselves in the shoes of a naïve internaut for
    a second and pretend that there are no laws forcing every access provider to keep
    basic metadata logs of outgoing connections—such laws exist in most countries,
    and no VPN provider will infringe them for your measly $5 monthly subscription,
    but please indulge this candid premise. The VPN provider has hundreds if not thousands
    of servers in multiple datacenters around the world. They also have thousands
    of users—some on Linux machines, others on Windows, and a spoiled bunch on Macs.
    Could you really believe it’s possible to manage such a huge and heterogeneous
    infrastructure without something as basic as logs?'
  prefs: []
  type: TYPE_NORMAL
- en: Without logs, the technical support would be just as useless and clueless as
    the confused client calling them to solve a problem. Nobody in the company would
    know how to start fixing a simple DNS lookup problem, let alone mysterious routing
    issues involving packet loss, preferred routes, and other networking witchcraft.
    Many VPN providers feel obliged to vociferously defend their log-*less* service
    to keep up with competitors making similar claims, but this is a falsehood that
    has led to a pointless race to the bottom, powered by blatant lies—or “marketing,”
    as I believe they call it these days.
  prefs: []
  type: TYPE_NORMAL
- en: The best you can hope for from a VPN provider is that they do not sell customer
    data to the highest bidder. Don’t even bother with free providers. Invest in your
    privacy, both in time and money. I recommend starting with AirVPN and ProtonVPN,
    which are both serious actors in the business.
  prefs: []
  type: TYPE_NORMAL
- en: This same perception of anonymity applies to Tor (The Onion Router, [https://www.torproject.org](https://www.torproject.org)),
    which promises anonymous passage through the internet via a network of nodes and
    relays that hide your IP address. Is there any reason you should blindly trust
    that first node you contact to enter the Tor network any more than the unsolicited
    phone call promising a long-lost inheritance in exchange for your credit card
    number? Sure, the first node only knows your IP address, but maybe that’s too
    much information already.
  prefs: []
  type: TYPE_NORMAL
- en: Location, Location, Location
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One way to increase your anonymity is to be careful of your physical location
    when hacking. Don’t get me wrong: Tor is amazing. VPNs are a great alternative.
    But when you do rely on these services, always assume that your IP address—and
    hence, your geographical location and/or browser fingerprint—is known to these
    intermediaries and can be discovered by your final target or anyone investigating
    on their behalf. Once you accept this premise, the conclusion naturally presents
    itself: to be truly anonymous on the internet, you need to pay as much attention
    to your physical trail as you do to your internet fingerprint.'
  prefs: []
  type: TYPE_NORMAL
- en: If you happen to live in a big city, use busy train stations, malls, or similar
    public gathering places that have public Wi-Fi to quietly conduct your operations.
    Just another dot in the fuzzy stream of daily passengers. However, be careful
    not to fall prey to our treacherous human pattern-loving nature. Avoid at all
    costs sitting in the same spot day in, day out. Make it a point to visit new locations
    and even change cities from time to time.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some places in the world, like China, Japan, the UK, Singapore, the US, and
    even some parts of France, have cameras monitoring streets and public places.
    In that case, an alternative would be to embrace one of the oldest tricks in the
    book: war driving. Use a car to drive around the city looking for public Wi-Fi
    hotspots. A typical Wi-Fi receiver can catch a signal up to 40 meters (~150 feet)
    away, which you can increase to a couple hundred meters (a thousand feet) with
    a directional antenna, like Alfa Networks’ Wi-Fi adapter. Once you find a free
    hotspot, or a poorly secured one that you can break into—WEP encryption and weak
    WPA2 passwords are not uncommon and can be cracked with tools like Aircrack-ng
    and Hashcat—park your car nearby and start your operation. If you hate aimlessly
    driving around, check out online projects like WiFi Map, at [https://www.wifimap.io](https://www.wifimap.io),
    that list open Wi-Fi hotspots, sometimes with their passwords.'
  prefs: []
  type: TYPE_NORMAL
- en: Hacking is really a way of life. If you are truly committed to your cause, you
    should fully embrace it and avoid being sloppy at all costs.
  prefs: []
  type: TYPE_NORMAL
- en: The Operation Laptop
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have taken care of the location, let’s get the laptop situation
    straight. People can be precious about their laptops, with stickers everywhere,
    crazy hardware specs, and, good grief, that list of bookmarks that everyone swears
    they’ll go through one day. That’s the computer you flash at the local conference,
    not the one you use for an operation. Any computer you use to rant on Twitter
    and check your Gmail inbox is pretty much known to most government agencies. No
    number of VPNs will save your sweet face should your browser fingerprint leak
    somehow to your target.
  prefs: []
  type: TYPE_NORMAL
- en: For hacking purposes, we want an ephemeral operating system (OS) that flushes
    everything away on every reboot. We store this OS on a USB stick, and whenever
    we find a nice spot to settle in, we plug it into the computer to load our environment.
  prefs: []
  type: TYPE_NORMAL
- en: Tails *(*[https://tails.boum.org/](https://tails.boum.org/)) is the go-to Linux
    distribution for this type of usage. It automatically rotates the MAC address,
    forces all connections to go through Tor, and avoids storing data on the laptop’s
    hard disk. (Conversely, traditional operating systems tend to store parts of memory
    on disk to optimize parallel execution, an operation known as *swapping*.) If
    it was good enough for Snowden, I bet it’s good enough for almost everyone. I
    recommend setting up Tails OS and storing it on an external drive before doing
    anything else.
  prefs: []
  type: TYPE_NORMAL
- en: Some people are inexplicably fond of Chromebooks. These are minimal operating
    systems stacked on affordable hardware that only support a browser and a terminal.
    Seems ideal, right? It’s not. It’s the worst idea ever, next to licking a metal
    pole in the wintertime. We’re talking about an OS developed by Google that requires
    you to log in to your Google account, synchronize your data, and store it on Google
    Drive. Need I go on? There are some spinoffs of Chromium OS that disable the Google
    synchronization part, such as NayuOS, but the main point is that these devices
    were not designed with privacy in mind and under no circumstances should they
    be used for anonymous hacking activities. And if they were, then launch day must
    have been hilarious at Google.
  prefs: []
  type: TYPE_NORMAL
- en: Your operation laptop should only contain volatile and temporary data, such
    as browser tabs, a copy-paste of commands, and so on. If you absolutely need to
    export huge volumes of data, make sure to store that data in an encrypted fashion
    on portable storage.
  prefs: []
  type: TYPE_NORMAL
- en: Bouncing Servers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Our laptop’s only purpose is to connect us to a set of servers that hold the
    necessary tooling and scripting to prepare for our adventure: the *bouncing servers*.
    These are virtual hosts we set up anonymously, only connect to via Tor or a VPN,
    and trust to interact with our more malicious virtual machines (VMs) and store
    our loot.'
  prefs: []
  type: TYPE_NORMAL
- en: These servers provide us with a reliable and stable gateway to our future attack
    infrastructure. To connect to a bouncing server, we would SSH into it directly
    after ensuring our VPN or Tor connection is established. We can initiate a Secure
    Shell (SSH) connection from a random machine in a cold and busy train station
    and find ourselves a warm and cozy environment where all our tooling and favorite
    Zsh aliases are waiting for us.
  prefs: []
  type: TYPE_NORMAL
- en: 'The bouncing servers can be hosted on one or many cloud providers spread across
    many geographical locations. The obvious limitation is the payment solution supported
    by these providers. Here are some examples of cloud providers with decent prices
    that accept cryptocurrencies:'
  prefs: []
  type: TYPE_NORMAL
- en: RamNode ([https://www.ramnode.com/](https://www.ramnode.com/)) costs about $5
    a month for a server with 1GB of memory and two virtual CPU (vCPU) cores. Only
    accepts Bitcoin.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NiceVPS ([https://nicevps.net/](https://nicevps.net/)) costs about €14.99 a
    month for a server with 1GB of memory and one vCPU core. Accepts Monero and Zcash.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cinfu ([https://www.cinfu.com/](https://www.cinfu.com/)) costs about $4.79 a
    month for a server with 2GB of memory and one vCPU core. Supports Monero and Zcash.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PiVPS ([https://pivps.com/](https://pivps.com/)) costs about $14.97 a month
    for a server with 1GB of memory and one vCPU core. Supports Monero and Zcash.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SecureDragon ([https://securedragon.net/](https://securedragon.net/)) costs
    about $4.99 a month for a server with 1GB of memory and two vCPU cores. Only accepts
    Bitcoin.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some services, like BitLaunch ([https://bitlaunch.io/](https://bitlaunch.io/)),
    can act as a simple intermediary. BitLaunch accepts Bitcoin payments but then
    spawns servers on DigitalOcean and Linode using its own account (for three times
    the price, of course, which is downright outrageous). Another intermediary service
    with a slightly better deal is bithost ([https://bithost.io/](https://bithost.io/)),
    which still takes a 50 percent commission. The trade-off, on top of the obvious
    rip-off, is neither of these providers gives you access to the DigitalOcean API,
    which can help automate much of the setup.
  prefs: []
  type: TYPE_NORMAL
- en: 'Choosing a cloud provider can come down to this bitter trade-off: support of
    cryptocurrencies and the pseudo-anonymity they grant versus ease of use and automation.'
  prefs: []
  type: TYPE_NORMAL
- en: All major cloud providers—AWS, Google Cloud, Microsoft Azure, Alibaba, and so
    on—require a credit card before approving your account. Depending on where you
    live, this may not be a problem, as there are many services that provide prepaid
    credit cards in exchange for cash. Some online services even accept top-up credit
    cards with Bitcoin, but most of them will require some form of government-issued
    ID. That’s a risk you should carefully consider.
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, bouncing servers should be used to host management tools like Terraform,
    Docker, and Ansible that will later help us build multiple attack infrastructures.
    A high-level overview of the architecture is presented in [Figure 1-1](#figure1-1).
  prefs: []
  type: TYPE_NORMAL
- en: '![f01001.png](image_fi/501263c01/f01001.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-1: Overview of the hacking infrastructure'
  prefs: []
  type: TYPE_NORMAL
- en: Our bouncing servers will never interact with the target. Not a single bleep.
    Therefore, we can afford to keep them around a little longer before switching—a
    few weeks or months—without incurring significant risks. Still, a dedicated investigation
    team might find a way to link these systems with those used to interact with the
    target, so deleting and re-creating bouncing servers regularly is a good idea.
  prefs: []
  type: TYPE_NORMAL
- en: The Attack Infrastructure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our attack infrastructure has a much higher volatility level than our bouncing
    servers and should be kept only a few days. It should be unique to each operation
    or target, if possible. The last thing we want is an investigator piecing together
    various clues from different targets hit by the same IP.
  prefs: []
  type: TYPE_NORMAL
- en: The attack infrastructure is usually composed of frontend and backend systems.
    The frontend system may initiate connections to the target, scan machines, and
    so forth. It can also be used—in the case of a reverse shell—to route incoming
    packets through a web proxy and deliver them, as appropriate, to the backend system,
    usually a C2 framework like Metasploit or Empire. Only some requests are forwarded
    to the C2 backend; other pages return insipid content, as depicted in [Figure
    1-2](#figure1-2).
  prefs: []
  type: TYPE_NORMAL
- en: '![f01002.png](image_fi/501263c01/f01002.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-2: Packet routing to the backend'
  prefs: []
  type: TYPE_NORMAL
- en: 'This packet routing can be done with a regular web proxy like Nginx or Apache
    that acts as a filter: requests from infected computers are routed directly to
    the corresponding backend C2 instance, while the remaining requests—from snoopy
    analysts, for example—are displayed an innocent web page. The backend C2 framework
    is really the spinal cord of the attack infrastructure, executing commands on
    infected machines, retrieving files, delivering exploits, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: You want your infrastructure to be modular and replaceable at will. Bypassing
    an IP ban should be as easy as sending one command to spawn a new proxy. Problems
    with the C2 backend? Enter a single command and you have a new C2 backend running
    with the exact same configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Achieving this level of automation is not a whimsical way to try out the trendiest
    tools and programming techniques. The easier it is to spring fully configured
    attacking servers, the fewer mistakes we make, especially under stressful circumstances.
    It’s as good an excuse as any to get into the skin of a DevOps person, learn their
    craft, and twist it to our own needs. Hopefully, this will clue us in to some
    shortcomings we will later exploit in our hacking adventure. The next chapter
    will focus on building this backend.
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For a fantastic account of Edward Snowden’s life and adventures in the intelligence
    community, read *Permanent Record*, by Edward Snowden (Macmillan, 2019).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Search for darkAudax’s tutorial on hacking WEP-encrypted communications here
    [https://aircrack-ng.org/](https://aircrack-ng.org/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Find Brannon Dorsey’s tutorial on cracking WPA/WPA2 Wi-Fi routers with Aircrack-ng
    and Hashcat at [https://hakin9.org/](https://hakin9.org/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Search for Muhammad Arul’s guide to setting up Zsh on a Linux machine at [https://www.howtoforge.com/](https://www.howtoforge.com/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
