["```\n   <!DOCTYPE html>\n   **<html** lang=\"en\"**>**\n     **<head>**\n       **<meta** charset=\"utf-8\"**>**\n       **<title></title>**\n     **</head>**\n     **<body>**\n       **<div** id=\"treemap\"**></div>**\n➊     **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js\"**>**\n       **</script>**\n➋     **<script** src=\"js/treemap-squared-0.5.min.js\"**></script>**\n   **</body>**\n    **</html>**\n```", "```\ncensus = [\n  { region: \"South\", state: \"AL\", pop2010: 4784762, pop2012: 4822023 },\n  { region: \"West\",  state: \"AK\", pop2010:  714046, pop2012:  731449 },\n  { region: \"West\",  state: \"AZ\", pop2010: 6410810, pop2012: 6553255 },\n  *// Data set continues...*\n```", "```\n**var** south = {};\nsouth.data = [];\nsouth.labels = [];\n**for** (**var** i=0; i<census.length; i++) {\n    **if** (census[i].region === \"South\") {\n        south.data.push(census[i].pop2012);\n        south.labels.push(census[i].state);\n    }\n}\n```", "```\n   **var** data = [ west.data, midwest.data, northeast.data, south.data ];\n   **var** labels = [ west.labels, midwest.labels, northeast.labels, south.labels ];\n➊ Treemap.draw(\"treemap\", 600, 450, data, labels);\n```", "```\n   **var** total2010 = 0;\n   **var** total2012 = 0;\n   **var** south = {\n       data: [],\n       labels: [],\n       growth: [],\n       minGrowth: 100,\n       maxGrowth: -100\n   };\n   **for** (**var** i=0; i<census.length; i++) {\n➊     total2010 += census[i].pop2010;\n➋     total2012 += census[i].pop2012;\n➌     **var** growth = (census[i].pop2012 - census[i].pop2010)/census[i].pop2010;\n       **if** (census[i].region === \"South\") {\n           south.data.push(census[i].pop2012);\n           south.labels.push(census[i].state);\n           south.growth.push(growth);\n➍         **if** (growth > south.maxGrowth) { south.maxGrowth = growth; }\n➎         **if** (growth < south.minGrowth) { south.minGrowth = growth; }\n       }\n       *// Code continues...*\n   }\n```", "```\n**var** growth = [ west.growth, midwest.growth, northeast.growth, south.growth ];\n**var** totalGrowth = (total2012 - total2010)/total2010;\n```", "```\n**var** colorRanges = {\n  positive: [ \"#FFFFBF\",\"#D9EF8B\",\"#A6D96A\",\"#66BD63\",\"#1A9850\",\"#006837\" ],\n  negative: [ \"#FFFFBF\",\"#FEE08B\",\"#FDAE61\",\"#F46D43\",\"#D73027\",\"#A50026\" ]\n};\n```", "```\n**function** pickColor(coordinates, index) {\n    **var** regionIdx = index[0];\n    **var** stateIdx = index[1];\n    **var** growthRate = growth[regionIdx][stateIdx];\n    **var** deltaGrowth = growthRate - totalGrowth;\n    **if** (deltaGrowth > 0) {\n        colorRange = colorRanges.positive;\n    } **else** {\n        colorRange = colorRanges.negative;\n        deltaGrowth = -1 * deltaGrowth;\n    }\n    **var** colorIndex = Math.floor(colorRange.length*(deltaGrowth-minDelta)/\n(maxDelta-minDelta));\n    **if** (colorIndex >= colorRange.length) { colorIndex = colorRange.length - 1;\n}\n    color = colorRange[colorIndex];\n    **return**{ \"fill\" : color };\n}\n```", "```\nTreemap.draw(\"treemap\", 600, 450, data, labels, {\"box\" : pickColor});\n```", "```\n<!DOCTYPE html>\n**<html** lang=\"en\"**>**\n  **<head>**\n    **<meta** charset=\"utf-8\"**>**\n    **<title></title>**\n  **</head>**\n  **<body>**\n    *<!--[if lt IE 9]><script src=\"js/excanvas.min.js\"></script><![endif]-->*\n    **<script** src=\"js/heatmap.js\"**></script>**\n  **</body>**\n**</html>**\n```", "```\n**var** game = [\n  { team: \"UNC\",  points: 2, time: 0.85, unc: 2, duke: 0, x: 0.506, y: 5.039 },\n  { team: \"UNC\",  points: 3, time: 1.22, unc: 5, duke: 0, x: 1.377, y: 1.184 },\n  { team: \"DUKE\", points: 2, time: 1.65  unc: 5, duke: 2, x: 8.804, y: 7.231 },\n  *// Data set continues...*\n```", "```\n**<div** id=\"heatmap\"\n    style=\"position:relative;width:600px;height:360px;\n               background-image:url('img/basketball.png');\"**>**\n**</div>**\n```", "```\n➊ **var** docNode = document.getElementById(\"heatmap\");\n➋ **var** height = docNode.clientHeight;\n➌ **var** width  = docNode.clientWidth;\n➍ **var** dataset = {};\n➎ dataset.max = 3;\n➏ dataset.data = [];\n   **for** (**var** i=0; i<game.length; i++) {\n       **var** currentShot = game[1];\n➐      **if** ((currentShot.x !== -1) && (currentShot.y !== -1)) {\n           **var** x = Math.round(width * currentShot.x/10);\n           **var** y = height - Math.round(height * currentShot.y/10);\n           dataset.data.push({\"x\": x, \"y\": y, \"count\": currentShot.points});\n       }\n   }\n```", "```\n**var** heatmap = h337.create({\n    element: \"heatmap\",\n    radius: 30,\n    opacity: 50\n});\nheatmap.store.setDataSet(dataset);\n```", "```\n$(\"#heatmap canvas\").css(\"z-index\", \"1\");\n```", "```\n   <!DOCTYPE html>\n   **<html** lang=\"en\"**>**\n     **<head>**\n       **<meta** charset=\"utf-8\"**>**\n       **<title></title>**\n     **</head>**\n     **<body>**\n➊     **<div** id=\"graph\"**></div>**\n➋     **<script** src=\"js/sigma.min.js\"**></script>**\n     **</body>**\n   **</html>**\n```", "```\n**var** albums = [\n  {\n    album: \"Miles Davis - Kind of Blue\",\n    musicians: [\n      \"Cannonball Adderley\",\n      \"Paul Chambers\",\n      \"Jimmy Cobb\",\n      \"John Coltrane\",\n      \"Miles Davis\",\n      \"Bill Evans\"\n    ]\n  },{\n    album: \"John Coltrane - A Love Supreme\",\n    musicians: [\n      \"John Coltrane\",\n      \"Jimmy Garrison\",\n      \"Elvin Jones\",\n      \"McCoy Tyner\"\n    ]\n  *// Data set continues...*\n```", "```\n**var** s = **new** sigma(\"graph\");\n```", "```\n**for** (**var** idx=0; idx<albums.length; idx++) {\n    **var** theta = idx*2*Math.PI / albums.length;\n    s.graph.addNode({\n        id: \"\"+idx,    *// Note: 'id' must be a string*\n        label: albums[idx].album,\n        x: radius*Math.sin(theta),\n        y: radius*Math.cos(theta),\n        size: 1\n    });\n}\n```", "```\ns.refresh();\n```", "```\n➊ **for** (**var** srcIdx=0; srcIdx<albums.length; srcIdx++) {\n       **var** src = albums[srcIdx];\n➋     **for** (**var** mscIdx=0; mscIdx<src.musicians.length; mscIdx++) {\n           **var** msc = src.musicians[mscIdx];\n➌         **for** (**var** tgtIdx=srcIdx+1; tgtIdx<albums.length; tgtIdx++) {\n               **var** tgt = albums[tgtIdx];\n➍             **if** (tgt.musicians.some(**function**(tgtMsc) {**return** tgtMsc === msc;}))\n   {\n                   s.graph.addEdge({\n                       id: srcIdx + \".\" + mscIdx + \"-\" + tgtIdx,\n                       source: \"\"+srcIdx,\n                       target: \"\"+tgtIdx\n                   })\n               }\n           }\n       }\n   }\n```", "```\n<!DOCTYPE html>\n**<html** lang=\"en\"**>**\n    **<head>**\n        **<meta** charset=\"utf-8\"**>**\n        **<title></title>**\n    **</head>**\n    **<body>**\n        **<div** id=\"graph\"**></div>**\n        **<script** src=\"js/sigma.min.js\"**></script>**\n        **<script** src=\"js/sigma.layout.forceAtlas2.min.js\"**></script>**\n    **</body>**\n**</html>**\n```", "```\ns.startForceAtlas2({gravity:100,scalingRatio:70,slowDown:100});\nsetTimeout(**function**() { s.stopForceAtlas2(); }, 10000);\n```", "```\n   **for** (**var** idx=0; idx<albums.length; idx++) {\n       **var** theta = idx*2*Math.PI / albums.length;\n       s.graph.addNode({\n           id: \"\"+idx, *// Note: 'id' must be a string*\n➊         label: \"\",\n➋         album: albums[idx].album,\n           x: radius*Math.sin(theta),\n           y: radius*Math.cos(theta),\n           size: 1\n       });\n   }\n```", "```\ns.bind(\"clickNode\", **function**(ev) {\n    **var** nodeIdx = ev.data.node.id;\n    *// Code continues...*\n});\n```", "```\n   s.bind(\"clickNode\", **function**(ev) {\n       **var** nodeIdx = ev.data.node.id;\n       **var** nodes = s.graph.nodes();\n       nodes.forEach(**function**(node) {\n➊         **if** (nodes[nodeIdx] === node) {\n               node.label = node.album;\n           } **else** {\n               node.label = \"\";\n           }\n       });\n   });\n```", "```\n**if** (nodes[nodeIdx] === node && node.label !== node.album) {\n```", "```\n   s.graph.edges().forEach(**function**(edge) {\n       **if** ((nodes[nodeIdx].label === nodes[nodeIdx].album) &&\n➊         ((edge.target === nodeIdx) || (edge.source === nodeIdx))) {\n➋         edge.color = \"blue\";\n       } **else** {\n➌         edge.color = \"black\";\n       }\n   });\n```", "```\ns.refresh();\n```", "```\n<!DOCTYPE html>\n**<html** lang=\"en\"**>**\n  **<head>**\n    **<meta** charset=\"utf-8\"**>**\n    **<title></title>**\n  **</head>**\n  **<body>**\n    **<script** src=\"js/wordcloud2.js\"**></script>**\n  **</body>**\n**</html>**\n```", "```\n**var** tags = [\n    [\"c#\", 601251],\n    [\"java\", 585413],\n    [\"javascript\", 557407],\n    [\"php\", 534590],\n    [\"android\", 466436],\n    [\"jquery\", 438303],\n    [\"python\", 274216],\n    [\"c++\", 269570],\n    [\"html\", 259946],\n    *// Data set continues...*\n```", "```\n**var** list = tags.map(**function**(word) {\n    **return** [word[0], Math.round(word[1]/10000)];\n});\n```", "```\n[\n    [\"c#\", 60],\n    [\"java\", 59],\n    [\"javascript\", 56],\n    [\"php\", 53],\n    [\"android\", 47],\n    [\"jquery\", 44],\n    [\"python\", 27],\n    [\"c++\", 27],\n    [\"html\", 26],\n    *// Data set continues...*\n```", "```\n   <!DOCTYPE html>\n   **<html** lang=\"en\"**>**\n     **<head>**\n       **<meta** charset=\"utf-8\"**>**\n       **<title></title>**\n     **</head>**\n     **<body>**\n➊     **<div** id=\"cloud\" style=\"position:relative;\"**></div>**\n       **<script** src=\"js/wordcloud2.js\"**></script>**\n     **</body>**\n   **</html>**\n```", "```\nWordCloud(document.getElementById(\"cloud\"), {list: list});\n```", "```\n#cloud span **{**\n    **cursor:** pointer**;**\n**}**\n```", "```\n   <!DOCTYPE html>\n   **<html** lang=\"en\"**>**\n     **<head>**\n       **<meta** charset=\"utf-8\"**>**\n       **<title></title>**\n     **</head>**\n     **<body>**\n       **<div** id=\"cloud\" style=\"position:relative;\"**></div>**\n➊     **<div** id=\"details\"**><div>**\n       **<script** src=\"js/wordcloud2.js\"**></script>**\n     **</body>**\n   **</html>**\n```", "```\n   **var** clicked = **function**(ev) {\n➊     **if** (ev.target.nodeName === \"SPAN\") {\n           *// A <span> element was the target of the click*\n       }\n   }\n```", "```\n   **var** clicked = **function**(ev) {\n       **if** (ev.target.nodeName === \"SPAN\") {\n➊         **var** tag = ev.target.textContent;\n       }\n   }\n```", "```\n   **var** clicked = **function**(ev) {\n       **if** (ev.target.nodeName === \"SPAN\") {\n           **var** tag = ev.target.textContent;\n           **var** clickedTag;\n➊        tags.some(**function**(el) {\n➋            **if** (el[0] === tag) {\n                   clickedTag = el;\n                   **return** **true**;  *// This ends the .some() loop*\n              }\n➌            **return** **false**;\n➍        });\n       }\n   }\n```", "```\n   **var** clicked = **function**(ev) {\n     **var** details = \"\";\n\n     **if** (ev.target.nodeName === \"SPAN\") {\n         **var** tag = ev.target.textContent,\n             clickedTag;\n         **if** (tags.some(**function**(el) {\n             **if** (el[0] === tag) {\n                   clickedTag = el;\n                   **return** **true**;\n             }\n             **return** **false**;\n         })) {\n➊           details = \"There were \" + clickedTag[1] +\n➋                     \" Stack Overflow questions tagged \\\"\" + tag + \"\\\"\";\n         }\n     }\n➌   document.getElementById(\"details\").innerText = details;\n   }\n```", "```\ndocument.getElementById(\"cloud\").addEventListener(\"click\", clicked)\n```"]