["```\n{-# OPTIONS_GHC -Wall #-}\n\nimport Graphics.Gnuplot.Simple\n\ntype R = Double\n\ntRange :: [R]\ntRange = [0,0.01..5]\n\nyPos :: R  -- y0\n     -> R  -- vy0\n     -> R  -- ay\n     -> R  -- t\n     -> R  -- y\nyPos y0 vy0 ay t = y0 + vy0 * t + ay * t**2 / 2\n\nplot1 :: IO ()\nplot1 = plotFunc [Title \"Projectile Motion\"\n                 ,XLabel \"Time (s)\"\n                 ,YLabel \"Height of projectile (m)\"\n                 ,PNG \"projectile.png\"\n                 ,Key Nothing\n                 ] tRange (yPos 0 20 (-9.8))\n```", "```\n[Attribute] -> [a] -> (a -> a) -> IO ()\n```", "```\nplot1Custom :: IO ()\nplot1Custom\n    = plotFunc [Title \"Projectile Motion\"\n               ,XLabel \"Time (s)\"\n               ,YLabel \"Height of projectile (m)\"\n               ,PNG \"CustomLabel.png\"\n               ,Key Nothing\n               ,Custom \"label\" [\"\\\"Peak Height\\\" at 1.5,22\"]\n               ] tRange (yPos 0 20 (-9.8))\n```", "```\ncustomLabel :: (R,R) -> String -> Attribute\ncustomLabel (x,y) label\n     = Custom \"label\" [\"\\\"\" ++ label ++ \"\\\"\" ++ \" at \"\n                                ++ show x ++ \",\" ++ show y]\n```", "```\nPrelude>  :t 'c'\n'c' :: Char\nPrelude>  :t '\\\"'\n'\\\"' :: Char\nPrelude>  :t \"c\"\n\"c\" :: [Char]\nPrelude>  :t \"\\\"\"\n\"\\\"\" :: [Char]\n```", "```\nplot2Custom :: IO ()\nplot2Custom\n    = plotFunc [Title \"Projectile Motion\"\n               ,XLabel \"Time (s)\"\n               ,YLabel \"Height of projectile (m)\"\n               ,Key Nothing\n               ,customLabel (1.5,22) \"Peak Height\"\n               ] tRange (yPos 0 20 (-9.8))\n```", "```\nPrelude> :m Graphics.Gnuplot.Simple\nPrelude Graphics.Gnuplot.Simple> :t plotPath\nplotPath\n  :: Graphics.Gnuplot.Value.Tuple.C a =>\n     [Attribute] -> [(a, a)] -> IO ()\n```", "```\nplot3Custom :: IO ()\nplot3Custom\n    = plotPath [Title \"Projectile Motion\"\n               ,XLabel \"Time (s)\"\n               ,YLabel \"Height of projectile (m)\"\n               ,Key Nothing\n               ,customLabel (1.5,22) \"Peak Height\"\n               ] [(t, yPos 0 20 (-9.8) t) | t <- tRange]\n```", "```\nPrelude Graphics.Gnuplot.Simple> :t plotFuncs\nplotFuncs\n   :: (Graphics.Gnuplot.Value.Atom.C a,\n       Graphics.Gnuplot.Value.Tuple.C a) =>\n      [Attribute] -> [a] -> [a -> a] -> IO ()\n```", "```\nxRange :: [R]\nxRange = [0,0.02..10]\n\nf3 :: R -> R\nf3 x = exp (-x)\n\nusePlotFuncs :: IO ()\nusePlotFuncs = plotFuncs [] xRange [cos,sin,f3]\n```", "```\nxs1, xs2 :: [R]\nxs1 = [0,0.1..10]\nxs2 = [-5,-4.9..5]\n\nxys1, xys2 :: [(R,R)]\nxys1 = [(x,cos x) | x <- xs1]\nxys2 = [(x,sin x) | x <- xs2]\n\nusePlotPaths :: IO ()\nusePlotPaths = plotPaths [] [xys1,xys2]\n```", "```\nusePlotFuncs' :: IO ()\nusePlotFuncs' = plotFuncs [ XRange (-2,8)\n                          , YRange (-0.2,1)\n                          ] xRange [cos,sin,f3]\n```", "```\nxRange' :: [R]\nxRange' = [-10.0, -9.99 .. 10.0]\n\nsinPath :: [(R,R)]\nsinPath = [(x, sin x) | x <- xRange' ]\n\ncosPath :: [(R,R)]\ncosPath = [(x, cos x) | x <- xRange' ]\n\nplot4 :: IO ()\nplot4 = plotPathsStyle [ Title \"Sine and Cosine\"\n                       , XLabel \"x\"\n                       , YLabel \"Function Value\"\n                       , YRange (-1.2,1.5)\n                       ] [ (defaultStyle {lineSpec = CustomStyle\n                                          [LineTitle \"sin x\"]}, sinPath)\n                         , (defaultStyle {lineSpec = CustomStyle\n                                          [LineTitle \"cos x\"]}, cosPath) ]\n```", "```\nts :: [R]\nts = [0,0.1..6]\n\ntxPairs :: [(R,R)]\ntxPairs = [(t,30 * t - 4.9 * t**2) | t <- ts]\n```", "```\napproxsin :: R -> R\napproxsin = undefined\n```", "```\nplotFuncs [] [-4,-3.99..4] [sin,approxsin]\n```"]