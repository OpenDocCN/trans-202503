- en: Chapter 12. Color
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Representing and handling colors is one of the fundamental tasks of an image-manipulation
    program like GIMP. Thus, we cover the topic in several places in this book. In
    this chapter, we present the main concepts and tools. In [Appendix A](apa.html
    "Appendix A. Vision and Image Representation"), we discuss the foundations of
    color perception, so refer to that appendix if you need to refresh your knowledge.
    The theories of color and vision form the foundation of color handling in GIMP,
    and a thorough understanding of that appendix will help you to understand this
    chapter fully.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, [Chapter 19](ch19.html "Chapter 19. Obtaining and Printing Images")
    contains information about 16-bit color depth and handling photographs from a
    digital camera in raw format. [Chapter 20](ch20.html "Chapter 20. Image Formats")
    describes all the image formats handled by GIMP, focusing on the definition and
    use of color palettes. And in [Chapter 22](ch22.html "Chapter 22. Customizing
    GIMP"), we explain how to set the parameters of color management.
  prefs: []
  type: TYPE_NORMAL
- en: 12.1 Concepts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The concept of color is a very complex one, and many books have been written
    on the subject. Great thinkers like Aristotle, Huygens, Newton, Goethe, and many
    others developed theories of color. These theories dealt with physiology, philosophy,
    psychology, and even physics and high-level mathematics. The modern technology
    of computers, display screens, and printers now relies on a well-established theory
    that you can read about in any text on color theory.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we begin by briefly reviewing color models, which are presented
    in more detail in [A.3 Color Representation](apas03.html "A.3 Color Representation").
    We’ll then consider the three internal representations that GIMP uses to store
    image information while you work. External formats used to store images on hard
    disks or on the Web are considered in [Chapter 20](ch20.html "Chapter 20. Image
    Formats").
  prefs: []
  type: TYPE_NORMAL
- en: Color Models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: GIMP handles raster images, which are composed of *pixels*. A pixel is the smallest
    image component and represents a single color (and any associated transparency).
    Each color is made up of a unique mixture of components, which depend on the chosen
    color model. Several color models exist, and GIMP uses three of them. In all the
    models, a given color is represented as coordinates in some number of dimensions,
    generally three. The size of the coordinate range indicates the number of possible
    colors. Due to file size constraints, the coordinates are generally integers,
    at least when stored on external media. A floating number needs 32 or even 64
    bits, while all color representations on files use at most 8 bits per color.
  prefs: []
  type: TYPE_NORMAL
- en: 'The RGB model is additive, meaning that a color with a value of zero in each
    of its components is black, and a color with a maximum value in each of its components
    is white. The three fundamental colors are red, green, and blue, and the combination
    of two fundamental colors is a complementary color: red + green = yellow, red
    + blue = magenta, and green + blue = cyan. This model can be depicted as a cube,
    the contents of which define the gamut (or range) of colors that can be represented
    (see [Figure A-37](apas03.html#rgb_cube "Figure A-37. The RGB cube")).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The CMY model is a subtractive model, so a pixel with a value of zero in each
    of its components is white, and a pixel with a maximum value in each of its components
    is black. The three fundamental colors are cyan, magenta, and yellow. They are
    combined to create the complementary colors of the CMY model, which are the fundamental
    colors of the RGB model: cyan + magenta = blue, cyan + yellow = green, and magenta
    + yellow = red. The CMY cube ([Figure A-40](apas03.html#cmy_cube "Figure A-40. The
    CMY cube")) is the opposite of the RGB cube but defines the same gamut.'
  prefs: []
  type: TYPE_NORMAL
- en: The HSV model is neither additive nor subtractive. The hue component represents
    an angle on a circle that goes from red to violet and purple, ending in red again.
    The saturation component is a percentage of color, from 0% for white (no color
    at all) to 100% for full saturation. The value component is also a percentage,
    from 0% for black (no light at all) to 100% for full intensity (maximum light).
    This model can be depicted as a cone or a cylinder.
  prefs: []
  type: TYPE_NORMAL
- en: Display devices generate color by combining the light of different colors and
    usually use the RGB model. This model also corresponds to the main internal representation
    in the computer, as you’ll see later in this chapter. Printing devices, which
    generate color by superimposing inks, use the CMY model. To reduce the cost of
    ink, a fourth component, black, is often added, resulting in the CMYK model. With
    this model, black can be represented in many ways. For example, 100% C, M, and
    Y with 0% K and 100% K with 0% C, M, and Y would both result in a black color,
    but the former would look muddier and require more ink and a longer time to dry.
    The CMY and CMYK models, therefore, have the same gamut, and the appropriate choice
    depends on the printer. The HSV model was designed to be intuitive for humans.
    It provides a visual interface. Rather than inputting a color as a combination
    of three numeric coordinates, you can choose a hue (H) component and then set
    the saturation (S) and value (V) components.
  prefs: []
  type: TYPE_NORMAL
- en: Stored Representations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In GIMP memory, a pixel is always represented in the RGB model. In GIMP 2.8,
    each RGB component is represented by 1 byte, which means that its range is [0
    to 255]. The number of different colors is thus 256³ = 16, 777, 216\. This seems
    like a lot of colors, but in some cases, it’s not enough, as you’ll see later.
    A pixel requires 3 bytes if there is no transparency. If there is an Alpha channel
    for transparency, this component is represented by one additional byte.
  prefs: []
  type: TYPE_NORMAL
- en: When an image is stored in the XCF format native to GIMP, just the three or
    four necessary bytes are stored. Storage and retrieval do not require any conversion,
    but an image file can still be quite large. A 10-megapixel image with an Alpha
    channel, for example, takes up 40MB.
  prefs: []
  type: TYPE_NORMAL
- en: 'The *mode* of an image, found in **Image: Image > Mode**, doesn’t determine
    how an image is represented in memory. Rather, it determines how the image is
    handled. *RGB mode* is the most powerful because it corresponds to the stored
    representation of the image and allows for storage of a large number of different
    colors.'
  prefs: []
  type: TYPE_NORMAL
- en: For a grayscale image, RGB representation is overkill. In *Grayscale mode*,
    only one component per pixel (assuming no Alpha channel) is present; this component
    represents the intensity of light, from 0 for black to the maximum value for white.
    In GIMP 2.8, a grayscale pixel uses 1 byte, so the value range is [0 to 255].
    This range is not very large, and a very large grayscale gradient—for example,
    in the sky of a landscape photograph—can appear striped. A grayscale image is
    best stored in that mode in GIMP, but keep in mind, any operation dealing with
    color won’t work unless you change the image mode to RGB.
  prefs: []
  type: TYPE_NORMAL
- en: '![The initial image](httpatomoreillycomsourcenostarchimages1455440.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-1. The initial image
  prefs: []
  type: TYPE_NORMAL
- en: 'The third and last internal mode is the *Indexed mode*. In this mode, a pixel
    is not represented by the direct value of its color components but by an index
    in a table of predefined colors, called a *colormap*. This table can be of any
    size up to 256 entries, so an image in Indexed mode contains at most 256 different
    colors. This has several advantages and disadvantages:'
  prefs: []
  type: TYPE_NORMAL
- en: A pixel takes up only 1 byte or less if the colormap is smaller than 256 entries.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By simply changing entries in the colormap, full image transformations can be
    done easily and efficiently.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This mode is ideal if you’re creating a tapestry or a mosaic because such designs
    contain only a limited number of colors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Many image manipulations are impossible to achieve because the necessary colors
    cannot be represented.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The image quality that’s achievable in this mode is acceptable only in very
    specific or simple cases, for example, when the image is small or is a sketch.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![The Indexed Color Conversion dialog](httpatomoreillycomsourcenostarchimages1455442.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-2. The Indexed Color Conversion dialog
  prefs: []
  type: TYPE_NORMAL
- en: '![Optimum palette with 256 colors](httpatomoreillycomsourcenostarchimages1455444.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-3. Optimum palette with 256 colors
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s consider Indexed mode in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: Indexed Mode
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Figure 12-1](ch12s01.html#initial_image-id00091 "Figure 12-1. The initial
    image") shows a part of an image in RGB mode, zoomed to show the individual pixels.
    To convert it to Indexed mode, select **Image: Image > Mode > Indexed**, which
    opens the dialog shown in [Figure 12-2](ch12s01.html#indexed_color_conversion_dialog
    "Figure 12-2. The Indexed Color Conversion dialog"). The following Colormap choices
    are available:'
  prefs: []
  type: TYPE_NORMAL
- en: GENERATE OPTIMUM PALETTE allows you to choose the maximum number of colors,
    and GIMP then attempts to generate the best palette for the image. Even with the
    maximum of 256 colors, [Figure 12-3](ch12s01.html#optimum_palette_with_256_colors
    "Figure 12-3. Optimum palette with 256 colors") shows that the conversion results
    in a clear decrease in image quality.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: USE WEB-OPTIMIZED PALETTE uses a specific palette that’s supposed to have a
    consistent appearance on different screens. Unfortunately, the appearance is consistently
    bad, and this mode is now considered obsolete.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![An image dithered to black and white](httpatomoreillycomsourcenostarchimages1455446.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 12-4. An image dithered to black and white
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Using Floyd-Steinberg (normal) dithering](httpatomoreillycomsourcenostarchimages1455448.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 12-5. Using Floyd-Steinberg (normal) dithering
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'USE BLACK AND WHITE (1-BIT) PALETTE converts the image to black and white in
    the same way as the **Image: Colors > Threshold** tool, unless color dithering
    is used. With color dithering, a usable black and white copy of an image can be
    created, as shown in [Figure 12-4](ch12s01.html#image_dithered_to_black_and_white
    "Figure 12-4. An image dithered to black and white").'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: USE CUSTOM PALETTE allows you to choose from the available palettes, which are
    usually not as good as the optimum palette that GIMP can generate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The REMOVE UNUSED COLORS FROM COLORMAP checkbox is useful only when you select
    USE CUSTOM PALETTE.
  prefs: []
  type: TYPE_NORMAL
- en: As [Figure 12-3](ch12s01.html#optimum_palette_with_256_colors "Figure 12-3. Optimum
    palette with 256 colors") shows, indexing can lead to image degradation. A better
    result can be achieved with dithering, which uses a diffusion of pixels in available
    colors to approximate the colors that are not available. Four dithering algorithms
    are provided in the Index Color Conversion dialog, and [Figure 12-5](ch12s01.html#using_floyd-steinberg_left_parenthesisno
    "Figure 12-5. Using Floyd-Steinberg (normal) dithering") shows the result of the
    first one. ENABLE DITHERING OF TRANSPARENCY can be used to help smooth boundaries
    in a GIF image that includes transparent areas.
  prefs: []
  type: TYPE_NORMAL
- en: '![The available layer blending modes](httpatomoreillycomsourcenostarchimages1455450.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-6. The available layer blending modes
  prefs: []
  type: TYPE_NORMAL
- en: 12.2 Blending Modes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The blending modes apply an additional color plane to an image, either as a
    layer or as a design created with the painting tools. [Figure 12-6](ch12s01.html#available_layer_blending_modes
    "Figure 12-6. The available layer blending modes") shows 21 of the 23 blending
    modes available for painting tools. In layers, the Behind and Color erase modes
    are not available.
  prefs: []
  type: TYPE_NORMAL
- en: The blending modes are arranged in the menu according to their effect. The first
    four modes (Normal, Dissolve, Behind, and Color erase, or just the first two for
    layers) leave the pixels intact and change only which pixels are displayed. The
    next four modes (Lighten only, Screen, Dodge, and Addition) lighten the image
    and are arranged by impact, from least to greatest. The next three modes (Darken
    only, Multiply, and Burn) darken the image, and they are also arranged by impact,
    from least to greatest. The next three modes (Overlay, Soft light, and Hard light)
    alter the image’s luminosity. The next five modes (Difference, Subtract, Grain
    extract, Grain merge, and Divide) distort the image’s hues rather than just its
    saturation and value. The last four modes (Hue, Saturation, Color, and Value)
    use the HSV model components as the basis for blending the layers.
  prefs: []
  type: TYPE_NORMAL
- en: '![The top layer](httpatomoreillycomsourcenostarchimages1455452.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-7. The top layer
  prefs: []
  type: TYPE_NORMAL
- en: '![The bottom layer](httpatomoreillycomsourcenostarchimages1455454.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-8. The bottom layer
  prefs: []
  type: TYPE_NORMAL
- en: To demonstrate the blending modes, we’ll build an image with two layers. [Figure 12-7](ch12s02.html#top_layer
    "Figure 12-7. The top layer") is the top layer, and [Figure 12-8](ch12s02.html#bottom_layer
    "Figure 12-8. The bottom layer") is the bottom layer. We’ll use specific examples
    for the two modes that exist only with the painting tools.
  prefs: []
  type: TYPE_NORMAL
- en: '![Normal mode, 50% opacity](httpatomoreillycomsourcenostarchimages1455456.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-9. Normal mode, 50% opacity
  prefs: []
  type: TYPE_NORMAL
- en: We also need a notation for explaining the mathematics underlying the blending
    modes. Recall that a pixel is made of three values—the channels R, G, and B—and
    so can be thought of as a vector. We’ll use *U* to refer to the vector of a pixel
    in the upper layer, *L* to refer to the vector of a pixel in the lower layer,
    and *R* to refer to the vector of the resulting pixel.
  prefs: []
  type: TYPE_NORMAL
- en: Modes That Leave Pixels Intact
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The four modes in this category have an important property in common: They
    all assign a value to *R* by taking the exact values either from *U* or from *L*.'
  prefs: []
  type: TYPE_NORMAL
- en: In *Normal* mode, the upper pixel is always chosen (i.e., *R* = *U*). But if
    *U* isn’t fully opaque, then the value of *R* is a combination of *U* and *L*.
    If the opacity of *U* is set to percentage *x*, then
  prefs: []
  type: TYPE_NORMAL
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages1455458.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 12-9](ch12s02.html#normal_modecomma_50percent_opacity "Figure 12-9. Normal
    mode, 50% opacity") shows the result when the top layer opacity is 50%. Opacity
    works in the same way for all of the blending modes.'
  prefs: []
  type: TYPE_NORMAL
- en: In *Dissolve* mode, the choice between the upper and lower pixel is random but
    proportional to the opacity. Given a function *f*(*r*) that yields a random result
    between 0 and 1, the formula is *R* = [if 100 × *f*(*r*) *< x*] then *U,* else
    *L*. [Figure 12-10](ch12s02.html#dissolve_modecomma_50percent_opacity "Figure 12-10. Dissolve
    mode, 50% opacity") shows this result with 50% opacity, and [Figure 12-11](ch12s02.html#zooming_in_on_a_part_of_figure_12dot10
    "Figure 12-11. Zooming in on a part of Figure 12-10") magnifies a portion of this
    image.
  prefs: []
  type: TYPE_NORMAL
- en: '![Dissolve mode, 50% opacity](httpatomoreillycomsourcenostarchimages1455460.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-10. Dissolve mode, 50% opacity
  prefs: []
  type: TYPE_NORMAL
- en: '![Zooming in on a part of](httpatomoreillycomsourcenostarchimages1455462.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-11. Zooming in on a part of [Figure 12-10](ch12s02.html#dissolve_modecomma_50percent_opacity
    "Figure 12-10. Dissolve mode, 50% opacity")
  prefs: []
  type: TYPE_NORMAL
- en: To demonstrate *Behind* mode, we’ll use [Figure 12-12](ch12s02.html#image_with_transparency
    "Figure 12-12. An image with transparency"). We first removed the portrait’s background,
    replacing it with transparency. An underlying white layer is visible beneath the
    portrait layer. If we paint on this image in Behind mode, only the transparent
    pixels are affected, as shown in [Figure 12-13](ch12s02.html#painting_in_behind_mode
    "Figure 12-13. Painting in Behind mode"). If semitransparency had been used rather
    than full transparency, we would see a combination of the green and semi-transparent
    background color.
  prefs: []
  type: TYPE_NORMAL
- en: '*Color erase* mode removes the color that you’re painting with from the image
    and replaces it with partial transparency. In [Figure 12-14](ch12s02.html#painting_in_color_erase_mode
    "Figure 12-14. Painting in Color erase mode"), we used a large round brush and
    selected the hue of the face as the foreground color by ![](httpatomoreillycomsourcenostarchimages1453844.png.jpg)-clicking
    the girl’s left cheek. The white background layer is visible through the semitransparency.'
  prefs: []
  type: TYPE_NORMAL
- en: '![An image with transparency](httpatomoreillycomsourcenostarchimages1455464.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-12. An image with transparency
  prefs: []
  type: TYPE_NORMAL
- en: '![Painting in Behind mode](httpatomoreillycomsourcenostarchimages1455466.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-13. Painting in Behind mode
  prefs: []
  type: TYPE_NORMAL
- en: Lightening Modes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you use lightening modes, the image will be lighter than in Normal mode.
  prefs: []
  type: TYPE_NORMAL
- en: In *Lighten only* mode, the resulting pixel is the same as the lighter of the
    two pixels being blended. In [Figure 12-15](ch12s02.html#lighten_only_mode "Figure 12-15. Lighten
    only mode"), the brightly lit seascape was taken from the upper layer, and the
    rest was taken from the lower layer. The formula is simply *R* = max(*U, L*).
  prefs: []
  type: TYPE_NORMAL
- en: '*Screen* mode yields an even lighter result via a more complicated formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages1455468.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The upper and lower pixels are inverted, which is done by subtracting their
    value from 255 (in 8-bit depth). The results are multiplied, and then the product
    is normalized to subrange [0 to 255] by dividing it by 255 and inverting it again.
    As you see in [Figure 12-16](ch12s02.html#screen_mode "Figure 12-16. Screen mode"),
    the dark areas of the upper layer disappear, the light areas look washed out,
    and the image seems to be more transparent.
  prefs: []
  type: TYPE_NORMAL
- en: '![Painting in Color erase mode](httpatomoreillycomsourcenostarchimages1455470.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-14. Painting in Color erase mode
  prefs: []
  type: TYPE_NORMAL
- en: '![Lighten only mode](httpatomoreillycomsourcenostarchimages1455472.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-15. Lighten only mode
  prefs: []
  type: TYPE_NORMAL
- en: '*Dodge* mode exaggerates the lighting. The formula for this mode is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages1455474.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The lower pixel value is multiplied by 256 and then divided by the inverse value
    of the upper pixel. To prevent division by 0, 1 is added to the divisor. [Figure 12-17](ch12s02.html#dodge_mode
    "Figure 12-17. Dodge mode") shows the result. This mode works best when used with
    a painting tool to simulate the dodging process used in the darkroom to decrease
    exposure in specific areas. This mode can be used to bring out details in the
    darkest areas of an image.
  prefs: []
  type: TYPE_NORMAL
- en: '![Screen mode](httpatomoreillycomsourcenostarchimages1455476.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-16. Screen mode
  prefs: []
  type: TYPE_NORMAL
- en: '![Dodge mode](httpatomoreillycomsourcenostarchimages1455478.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-17. Dodge mode
  prefs: []
  type: TYPE_NORMAL
- en: '*Addition* mode exaggerates the lighting even further without any color inversion.
    Some areas may become completely white, as shown in [Figure 12-18](ch12s02.html#addition_mode
    "Figure 12-18. Addition mode"). To achieve this result, the pixel values are added,
    and then the result is truncated to 255 because greater values can’t be represented
    in the RGB cube. The formula is *R* = min(*U* + *L,* 255).'
  prefs: []
  type: TYPE_NORMAL
- en: Darkening Modes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With these modes, the resulting image is darker than the original.
  prefs: []
  type: TYPE_NORMAL
- en: '![Addition mode](httpatomoreillycomsourcenostarchimages1455480.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-18. Addition mode
  prefs: []
  type: TYPE_NORMAL
- en: '![Darken only mode](httpatomoreillycomsourcenostarchimages1455482.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-19. Darken only mode
  prefs: []
  type: TYPE_NORMAL
- en: '*Darken only* mode is the opposite of Lighten only mode: The resulting pixel
    is the darker of the two pixels being blended. As shown in [Figure 12-19](ch12s02.html#darken_only_mode
    "Figure 12-19. Darken only mode"), the resulting image contains content from the
    upper layer where it’s darker and the lower layer elsewhere. The formula is *R*
    = min(*U,L*).'
  prefs: []
  type: TYPE_NORMAL
- en: 'In *Multiply* mode, the pixel values are multiplied, and the result is normalized
    by dividing by 255: *R* = (*U* × *L*)*/*255\. As [Figure 12-20](ch12s02.html#multiply_mode
    "Figure 12-20. Multiply mode") shows, the result is much darker than the two layers.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Burn* mode simulates a darkroom process, similar to Dodge mode, and also works
    best with painting tools. This mode decreases the exposure of the image and can
    lead to a loss of detail in dark areas. The formula for this mode is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Multiply mode](httpatomoreillycomsourcenostarchimages1455484.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-20. Multiply mode
  prefs: []
  type: TYPE_NORMAL
- en: '![Burn mode](httpatomoreillycomsourcenostarchimages1455486.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-21. Burn mode
  prefs: []
  type: TYPE_NORMAL
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages1455488.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The lower pixel value is inverted and divided by the upper pixel value. That
    number is then normalized by multiplying by 256, and the result is inverted. Again,
    1 is added to the divisor to prevent division by 0\. In [Figure 12-21](ch12s02.html#burn_mode
    "Figure 12-21. Burn mode"), the only parts that are not completely burned out
    are those that were light in both layers.
  prefs: []
  type: TYPE_NORMAL
- en: Luminosity Modes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The three modes in this section are so similar that the first two currently
    have identical effects.
  prefs: []
  type: TYPE_NORMAL
- en: '![Overlay or Soft light mode](httpatomoreillycomsourcenostarchimages1455490.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-22. Overlay or Soft light mode
  prefs: []
  type: TYPE_NORMAL
- en: These modes deal with the luminosity of the image rather than its colors.
  prefs: []
  type: TYPE_NORMAL
- en: '*Overlay* mode combines Multiply and Screen modes, and it darkens the image
    a little less than Multiply. Its complicated equation is theoretically this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages1455492.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: But in GIMP 2.8, this mode actually uses the equation for Soft light mode. This
    bug has intentionally been left because correcting it would result in unexpected
    changes appearing in existing images that use Overlay mode. Developers are currently
    working on a strategy to correct the bug without altering existing images.
  prefs: []
  type: TYPE_NORMAL
- en: 'The equation for *Soft light* mode incorporates the result of the Screen mode
    calculation, here called *R**[S]*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages1455494.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As [Figure 12-22](ch12s02.html#overlay_or_soft_light_mode "Figure 12-22. Overlay
    or Soft light mode") shows, the resulting image is darker than the original image,
    having dim colors and softened edges.
  prefs: []
  type: TYPE_NORMAL
- en: '*Hard light* mode uses the most complicated equation of all the modes. It handles
    darker colors differently than brighter colors. Hard light is yet another combination
    of Multiply and Screen, and it results in brighter colors and sharper edges (i.e.,
    the exact opposite of Soft light). The upper layer is treated differently than
    the lower layer, unlike most of the modes already considered. [Figure 12-23](ch12s02.html#hard_light_mode
    "Figure 12-23. Hard light mode") and [Figure 12-24](ch12s02.html#hard_light_mode_with_the_layers_reversed
    "Figure 12-24. Hard light mode with the layers reversed") show two examples, with
    the layer order reversed in the second one. The equation is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If *U* > 128:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages1455496.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'If *U* ≤ 128: *R* = (2 × *U* × *L*)/256'
  prefs: []
  type: TYPE_NORMAL
- en: '![Hard light mode](httpatomoreillycomsourcenostarchimages1455498.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-23. Hard light mode
  prefs: []
  type: TYPE_NORMAL
- en: '![Hard light mode with the layers reversed](httpatomoreillycomsourcenostarchimages1455500.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-24. Hard light mode with the layers reversed
  prefs: []
  type: TYPE_NORMAL
- en: Color Distortion Modes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: These modes distort colors in various ways.
  prefs: []
  type: TYPE_NORMAL
- en: 'In *Difference* mode, the resulting pixel is the absolute value of the difference
    between the upper and lower pixels: *R* = *|**U* – *L**|*. For example, if *U*
    = 50 and *L* = 200, then *R* will be the absolute value of –150, which is 150\.
    When this occurs, the colors appear to be inverted, as shown in [Figure 12-25](ch12s02.html#difference_mode
    "Figure 12-25. Difference mode").'
  prefs: []
  type: TYPE_NORMAL
- en: '![Difference mode](httpatomoreillycomsourcenostarchimages1455502.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-25. Difference mode
  prefs: []
  type: TYPE_NORMAL
- en: '![Subtract mode](httpatomoreillycomsourcenostarchimages1455504.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-26. Subtract mode
  prefs: []
  type: TYPE_NORMAL
- en: '*Subtract* mode is based on the same idea as Difference mode, but it doesn’t
    take the absolute value after subtraction. This means the order of the layers
    affects the result, as illustrated by [Figure 12-26](ch12s02.html#subtract_mode
    "Figure 12-26. Subtract mode") and [Figure 12-27](ch12s02.html#subtract_mode_with_the_layers_reversed
    "Figure 12-27. Subtract mode with the layers reversed"). Subtract mode deals with
    negative values by setting them to 0, according to the following formula: *R*
    = max(*U* – *L*, 0). Any 0 values correspond to black areas.'
  prefs: []
  type: TYPE_NORMAL
- en: According to its name, the *Grain extract* mode should extract the film grain
    from a layer, but whether it does this is debatable. Some people think it gives
    images an embossed appearance. [Figure 12-28](ch12s02.html#grain_extract_mode
    "Figure 12-28. Grain extract mode") and [Figure 12-29](ch12s02.html#grain_extract_mode_with_the_layers_rever
    "Figure 12-29. Grain extract mode with the layers reversed") show the effect of
    Grain extract on our example images. The official formula is *R* = *L* – *U* +
    128, but negative values or values greater than 255 are truncated. Negative values
    are replaced with 0, and values greater than 255 are replaced with 255.
  prefs: []
  type: TYPE_NORMAL
- en: '![Subtract mode with the layers reversed](httpatomoreillycomsourcenostarchimages1455506.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-27. Subtract mode with the layers reversed
  prefs: []
  type: TYPE_NORMAL
- en: '![Grain extract mode](httpatomoreillycomsourcenostarchimages1455508.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-28. Grain extract mode
  prefs: []
  type: TYPE_NORMAL
- en: Whereas Grain extract mode extracts the grain from the layer, *Grain merge*
    mode merges the grain layer into the current layer. This mode is symmetric, so
    the order of the layers doesn’t matter. Our result is shown in [Figure 12-30](ch12s02.html#grain_merge_mode
    "Figure 12-30. Grain merge mode"). The formula for this mode is *R* = *U* + *L*
    – 128, and again, values that are negative or greater than 255 are truncated.
  prefs: []
  type: TYPE_NORMAL
- en: '*Divide* mode is yet another nonsymmetrical mode, wherein the value of the
    lower pixel is divided by that of the upper pixel (plus 1). The result is multiplied
    by 256 to normalize the value. The result, shown in [Figure 12-31](ch12s02.html#divide_mode
    "Figure 12-31. Divide mode"), is lighter than the original and completely white
    in some places. The equation is'
  prefs: []
  type: TYPE_NORMAL
- en: '![image with no caption](httpatomoreillycomsourcenostarchimages1455510.png.jpg)![Grain
    extract mode with the layers reversed](httpatomoreillycomsourcenostarchimages1455512.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-29. Grain extract mode with the layers reversed
  prefs: []
  type: TYPE_NORMAL
- en: '![Grain merge mode](httpatomoreillycomsourcenostarchimages1455514.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-30. Grain merge mode
  prefs: []
  type: TYPE_NORMAL
- en: HSV Modes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The last four modes operate in the HSV space. They work by replacing one component
    (hue, saturation, or value) in the upper layer with the corresponding component
    from the lower layer.
  prefs: []
  type: TYPE_NORMAL
- en: In *Hue* mode, the resulting pixel has the hue of the upper pixel and the saturation
    and value of the lower pixel. But if the saturation of the upper pixel is 0, the
    hue is also taken from the lower pixel. This explains why in [Figure 12-32](ch12s02.html#hue_mode
    "Figure 12-32. Hue mode"), the pixels corresponding to the black areas in the
    upper layer are completely replaced with the pixels from the lower layer.
  prefs: []
  type: TYPE_NORMAL
- en: '![Divide mode](httpatomoreillycomsourcenostarchimages1455516.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-31. Divide mode
  prefs: []
  type: TYPE_NORMAL
- en: '![Hue mode](httpatomoreillycomsourcenostarchimages1455518.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-32. Hue mode
  prefs: []
  type: TYPE_NORMAL
- en: In *Saturation* mode, the saturation is taken only from the upper layer. Because
    the saturation of the top layer was low throughout most of the image, the result,
    shown in [Figure 12-33](ch12s02.html#saturation_mode "Figure 12-33. Saturation
    mode"), is almost completely unsaturated.
  prefs: []
  type: TYPE_NORMAL
- en: In *Color* mode, the hue and saturation are taken from the upper layer, whereas
    the value is taken from the lower layer. As shown in [Figure 12-34](ch12s02.html#color_mode
    "Figure 12-34. Color mode"), the effect is that the lower layer is painted with
    the upper layer’s colors.
  prefs: []
  type: TYPE_NORMAL
- en: 'In *Value* mode, the value is taken from the upper layer, and the saturation
    and hue are taken from the lower layer. As shown in [Figure 12-35](ch12s03.html#value_mode
    "Figure 12-35. Value mode"), the result of this mode is the reverse of Color mode:
    The upper layer is painted with the colors of the lower layer.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Saturation mode](httpatomoreillycomsourcenostarchimages1455520.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-33. Saturation mode
  prefs: []
  type: TYPE_NORMAL
- en: '![Color mode](httpatomoreillycomsourcenostarchimages1455522.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-34. Color mode
  prefs: []
  type: TYPE_NORMAL
- en: 12.3 Color Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Color perception is one of the most complicated aspects of image processing.
    We see images in the real world, capture them with a camera or maybe scan them,
    and then we look at them on a screen and perhaps print them. All these stages
    change the image, rendering the visible colors and the values differently. The
    purpose of color management is to control these changes so what others see on
    the screen or in print is the image as we intended them to see it.
  prefs: []
  type: TYPE_NORMAL
- en: '![Value mode](httpatomoreillycomsourcenostarchimages1455524.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-35. Value mode
  prefs: []
  type: TYPE_NORMAL
- en: Color-Managed Workflow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The gamuts of devices (i.e., the sets of colors those devices are able to represent)
    are inevitably smaller than the gamut of normal human vision. (See [Digitalization](apas02.html#digitalization
    "Digitalization") for an in-depth discussion of image representation.) Furthermore,
    the digital camera or the scanner that digitalized the image, the monitor that
    displays it, and the printer that makes a copy all use different color spaces
    that are characterized by their gamuts and some adjustable parameters. [Figure 12-36](ch12s03.html#color-managed_workflow-id00092
    "Figure 12-36. A color-managed workflow") shows a diagram of a computer using
    a device-independent *working color space*, usually RGB. A working color space
    includes the color spaces of the most commonly used devices. It should include
    the color spaces of a scanner and a camera and those of a standard screen and
    of most printers. The working color space should contain only colors that can
    be represented on the devices being used. When an image file is loaded from a
    scanner or a digital camera, it must first be converted from its initial color
    space to the working one, and a similar conversion must be done when displaying
    the image on a monitor or printing it.
  prefs: []
  type: TYPE_NORMAL
- en: This conversion process is automatic if we have the necessary information, which
    is stored as a *color profile*. A color profile provides the information needed
    to convert from one color space to another. One profile describes the camera color
    space and is attached to the image file of a digital photograph. Other profiles
    specify the color spaces of the scanner, printer, and monitor.
  prefs: []
  type: TYPE_NORMAL
- en: '![A color-managed workflow](httpatomoreillycomsourcenostarchimages1455526.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-36. A color-managed workflow
  prefs: []
  type: TYPE_NORMAL
- en: '![The Image: Image > Mode menu](httpatomoreillycomsourcenostarchimages1455528.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12-37. The Image: Image > Mode menu'
  prefs: []
  type: TYPE_NORMAL
- en: '![Assigning a color profile](httpatomoreillycomsourcenostarchimages1455530.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-38. Assigning a color profile
  prefs: []
  type: TYPE_NORMAL
- en: 'You can assign a color profile to an image if it doesn’t have one or if you
    want to change the assigned one. The **Image: Image > Mode** menu ([Figure 12-37](ch12s03.html#image_image_greater_than_mode_menu
    "Figure 12-37. The Image: Image > Mode menu")) contains two entries that allow
    you to edit the color profile. Select the ASSIGN COLOR PROFILE entry to open the
    dialog shown in [Figure 12-38](ch12s03.html#assigning_a_color_profile "Figure 12-38. Assigning
    a color profile"). In the ASSIGN field, you can choose a previously used profile
    or search for a profile on the computer. On a GNU/Linux platform, the profiles
    are generally located in the `/usr/share/color/icc/` folder.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Converting to a color profile](httpatomoreillycomsourcenostarchimages1455532.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-39. Converting to a color profile
  prefs: []
  type: TYPE_NORMAL
- en: '**Image: Image > Mode > Convert to Color Profile** opens the dialog shown in
    [Figure 12-39](ch12s03.html#converting_to_a_color_profile "Figure 12-39. Converting
    to a color profile"). In addition to the name of the profile, this dialog allows
    you to choose the rendering intent and black point compensation, which we’ll discuss
    in [Using Color Management](ch12s03.html#using_color_management "Using Color Management").'
  prefs: []
  type: TYPE_NORMAL
- en: Color management can also be used to simulate the result of converting an image
    to the color space of another device. The gamut of a printer is smaller than the
    gamut of a monitor. Printers are especially poor at rendering saturated colors,
    particularly shades of blue and green. A picture that we painstakingly crafted
    in GIMP may look terrible when printed if the conversion isn’t managed. If you
    intend to print your image, displaying the image so it looks like the final printed
    result is best, rather than creating an image that exploits monitor capabilities
    that aren’t shared by the printer. This technique is called *softproofing*.
  prefs: []
  type: TYPE_NORMAL
- en: Color profiles are generally known as *ICC profiles* because they are defined
    by the International Color Consortium. The two most frequently used profiles are
    shown in [Figure 12-40](ch12s03.html#adobe_rgb_and_srgb_gamuts "Figure 12-40. Adobe
    RGB and sRGB gamuts"). Although using the profile with the largest gamut (i.e.,
    Adobe RGB) might seem best, this is generally not the case because color distortion
    can occur when converting the image to the more restricted printer gamut. Thus,
    the default color space is usually sRGB.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, if we load an image into GIMP without any embedded color profile, GIMP
    assumes it’s sRGB, although we can assign another profile. If an embedded profile
    exists, GIMP will ask whether you want to use it, and generally you should select
    yes.
  prefs: []
  type: TYPE_NORMAL
- en: '![Adobe RGB and sRGB gamuts](httpatomoreillycomsourcenostarchimages1455534.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-40. Adobe RGB and sRGB gamuts
  prefs: []
  type: TYPE_NORMAL
- en: Getting the color profile for a device is not always easy. This is especially
    true for monitors, which often require the purchase of a display calibration device.
    The retrieval of color profiles is beyond the scope of this book, but if you would
    like more information, we recommend the excellent website by Norman Koren (*[http://www.normankoren.com/color_management.html](http://www.normankoren.com/color_management.html)*).
  prefs: []
  type: TYPE_NORMAL
- en: Using Color Management
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can set the color management parameters in two places in GIMP. One is the
    **Image: Edit > Preferences** dialog, described in [Color Management](ch22s01.html#color_management
    "Color Management"). The other is the **Image: View > Display Filters** tool,
    described in [Display Filters](ch22s03.html#display_filters "Display Filters").'
  prefs: []
  type: TYPE_NORMAL
- en: 'Apply *rendering intent* via the **Image: Edit > Preferences** dialog. Rendering
    intent can be used to generate the so-called softproof of an image that you want
    to print. It specifies how colors are converted from one gamut to another. If
    no conversion is carried out, the colors in the first gamut that cannot be represented
    in the second one are simply clipped, leading to ugly distortions. By using a
    more sophisticated conversion technique, you can often achieve a much more satisfactory
    result. The two main techniques, perceptual and colorimetric, are shown in [Figure 12-41](ch12s03.html#perceptual_and_colorimetric_gamut_mappin
    "Figure 12-41. Perceptual and colorimetric gamut mappings").'
  prefs: []
  type: TYPE_NORMAL
- en: '![Perceptual and colorimetric gamut mappings](httpatomoreillycomsourcenostarchimages1455536.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-41. Perceptual and colorimetric gamut mappings
  prefs: []
  type: TYPE_NORMAL
- en: With *perceptual intent*, the color spectrum is compressed, and so the differences
    among colors are maintained. This process affects fully saturated colors much
    more than those with low saturation. If it is done with a large enough color depth,
    this process is mostly reversible and so is a good choice if you will be converting
    the image between color spaces multiple times. This is also a good choice if the
    image contains saturated colors.
  prefs: []
  type: TYPE_NORMAL
- en: '*Colorimetric intent* leaves the colors that belong to both gamuts completely
    unaltered and clips the others to the nearest color. This process is not reversible,
    and although it preserves the whites, it often yields poor results for images
    with saturated colors.'
  prefs: []
  type: TYPE_NORMAL
- en: 12.4 The Major Color Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the rest of this chapter, we’ll discuss the tools that you can use to adjust
    the colors in an image. Here we delve into the Color chooser, Levels, and Curves
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: The Color Chooser
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Color chooser is the main tool for choosing a color for any painting tool.
    To open the Color chooser from the Toolbox, click one of the rectangles that display
    the current foreground and background colors, as shown in ([Figure 12-42](ch12s04.html#opening_the_color_chooser_dialog
    "Figure 12-42. Opening the Color chooser dialog")).
  prefs: []
  type: TYPE_NORMAL
- en: '![Opening the Color chooser dialog](httpatomoreillycomsourcenostarchimages1455538.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-42. Opening the Color chooser dialog
  prefs: []
  type: TYPE_NORMAL
- en: The Color chooser appears as shown in [Figure 12-43](ch12s04.html#color_chooser-id00093
    "Figure 12-43. The Color chooser"). This dialog is packed with features, so we’ll
    break our discussion into several areas and look at them separately.
  prefs: []
  type: TYPE_NORMAL
- en: The top-right quadrant of the dialog contains six sliders corresponding to the
    channels in the HSV and RGB models. To the right of the sliders are counters that
    you can use to make precise changes. The radio buttons on the left are related
    to the first tab in the top-left quadrant, the one with Wilber’s head displayed
    on it. If any of the other tabs are selected, these buttons are not active.
  prefs: []
  type: TYPE_NORMAL
- en: The sliders are correlated, so if we move one of them, several others are also
    affected. For example, moving the S slider also changes all the RGB sliders. Moving
    one of the RGB sliders changes the H slider and can also change the S and V sliders,
    depending on their initial values. The color spectrum for the sliders changes
    to display the effect based on the current selection. Only the H slider always
    displays the same rainbow of colors.
  prefs: []
  type: TYPE_NORMAL
- en: The bottom-right quadrant of the dialog contains a number of controls. The HTML
    NOTATION field contains the hexadecimal representation of the current color in
    HTML code. This code is composed of three groups of two hexadecimal digits, representing
    the values of the three RGB channels. If we choose a color elsewhere in the dialog,
    the code will change to match, but we can also type a number into the field and
    look at the result, or we can even type in a color name. If we type the beginning
    of a name, all the available names that begin with those letters are displayed,
    as shown in [Figure 12-44](ch12s04.html#typing_a_color_name_in_the_html_notation
    "Figure 12-44. Typing a color name in the HTML notation field").
  prefs: []
  type: TYPE_NORMAL
- en: The small button to the right of the field is used to select a color from an
    image or from anywhere on the screen. If we click this button, the mouse pointer
    icon becomes an eyedropper. When we click somewhere on the screen (even outside
    of a GIMP window), the corresponding pixel color is selected for the Color chooser,
    and this color defines the value of the six sliders and the HTML notation field.
  prefs: []
  type: TYPE_NORMAL
- en: Below this field are 12 colored buttons that represent the *color history*.
    The button on the left with a `>` sign is used to add the current color to this
    history and remove the oldest color (the bottom-right one). If we click any of
    these buttons, its color becomes the current one.
  prefs: []
  type: TYPE_NORMAL
- en: The three buttons in the bottom-right corner of the dialog are mostly self-explanatory.
    RESET changes the current color to black but does not affect the history.
  prefs: []
  type: TYPE_NORMAL
- en: The bottom-left quadrant of the dialog contains only three controls. CURRENT
    and OLD represent, respectively, the current color as defined in the Color chooser
    dialog and the color defined before that. Click and drag the color from either
    of these two buttons to an image to fill the current selection. The HELP button
    does what you’d expect.
  prefs: []
  type: TYPE_NORMAL
- en: The top-left quadrant contains a rectangular display and five tabs, which give
    five different ways to finely tune the desired color. [Figure 12-43](ch12s04.html#color_chooser-id00093
    "Figure 12-43. The Color chooser") shows the Wilber tab, the only one that uses
    the six radio buttons to the left of the HSV and RGB sliders. Here, the selected
    radio button is H, which means the spectrum to the right of the large rectangular
    area shows the Hue scale. The pointer in this display indicates the current hue,
    whereas the rectangle on the left represents the possible variations of saturation
    and value when this hue is chosen. If we click this rectangle, we choose a specific
    value (in the horizontal scale) and a specific saturation (in the vertical scale).
    Two perpendicular lines cross at the chosen point, and the sliders on the right
    side of the dialog change to reflect the new saturation and value.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Color chooser](httpatomoreillycomsourcenostarchimages1455540.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-43. The Color chooser
  prefs: []
  type: TYPE_NORMAL
- en: '![Typing a color name in the HTML notation field](httpatomoreillycomsourcenostarchimages1455542.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-44. Typing a color name in the HTML notation field
  prefs: []
  type: TYPE_NORMAL
- en: Selecting a different radio button changes the rectangular display on the left.
    For example, [Figure 12-45](ch12s04.html#wilber_tabcomma_blue_selection "Figure 12-45. The
    Wilber tab, Blue selection") shows the display when the B (blue) radio button
    has been selected. The thin vertical rectangle allows us to choose the quantity
    of blue, and the large rectangle allows us to adjust the quantities of red and
    green. Occasionally, the combination that’s activated when you check the B radio
    button is more convenient, but usually the default (H) works best.
  prefs: []
  type: TYPE_NORMAL
- en: The Triangle tab has an icon showing a thumbnail of that tab’s display ([Figure 12-46](ch12s04.html#triangle_tab
    "Figure 12-46. The Triangle tab")). This tab offers another graphical way to choose
    the color using the HSV model. Clicking the hue circle selects the H component.
    A click in the triangle then changes the values of the S and V components. At
    one of the triangle’s points, S is 0; at another point, V is 0; at the final point,
    both are at the maximum (100). Some people find this tab more intuitive than the
    Wilber tab.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Wilber tab, Blue selection](httpatomoreillycomsourcenostarchimages1455544.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-45. The Wilber tab, Blue selection
  prefs: []
  type: TYPE_NORMAL
- en: The tab with a paintbrush icon behaves like a simulation of watercolor painting
    ([Figure 12-47](ch12s04.html#watercolor_tab "Figure 12-47. The Watercolor tab")).
    A click anywhere in the rectangle adds a small quantity of that color to the current
    one. The vertical slider sets the quantity of color being added, from 0 at the
    bottom to the maximum at the top. Because colors are added to the existing color,
    this tab uses the CMY model, and the color obtained becomes stronger the more
    we click. If we click one of the rectangle’s sides, the saturation increases.
    If we click in the center of the rectangle, the value decreases. This tab is especially
    useful for building a light color, like a pastel, beginning with a full white.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Triangle tab](httpatomoreillycomsourcenostarchimages1455546.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-46. The Triangle tab
  prefs: []
  type: TYPE_NORMAL
- en: '![The Watercolor tab](httpatomoreillycomsourcenostarchimages1455548.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-47. The Watercolor tab
  prefs: []
  type: TYPE_NORMAL
- en: The tab marked with a printer icon contains options based on the CMYK color
    model ([Figure 12-48](ch12s04.html#print_tab "Figure 12-48. The Print tab")).
    This tab is useful mainly for gathering information about how the colors will
    be mixed when printing rather than as a way to adjust a color, particularly because
    you can’t automatically change the CMY channels when changing the K channel, which
    is a common printing adjustment.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Print tab](httpatomoreillycomsourcenostarchimages1455550.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-48. The Print tab
  prefs: []
  type: TYPE_NORMAL
- en: '![The Palette tab](httpatomoreillycomsourcenostarchimages1455552.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-49. The Palette tab
  prefs: []
  type: TYPE_NORMAL
- en: 'The remaining tab has an icon showing a finger on a palette ([Figure 12-49](ch12s04.html#palette_tab
    "Figure 12-49. The Palette tab")). The center square shows the contents of the
    current palette, a concept explained in [22.7 Building New Palettes](ch22s07.html
    "22.7 Building New Palettes"). The only colors you can choose are from this palette,
    but you can change the palette in the Palettes dialog, which you open via **Image:
    Windows > Dockable Dialogs > Palettes**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Access a simplified dockable dialog for choosing colors by selecting **Image:
    Windows > Dockable dialogs > Colors**, as shown in [Figure 12-50](ch12s04.html#colors_dialogcomma_wilber_tab
    "Figure 12-50. The Colors dialog, Wilber tab"). The Colors dialog is a modified
    version of the left portion of the Color chooser. The Wilber tab contains six
    buttons on the right, used to choose the color model and the master channel. The
    Triangle, Watercolor, Printer, and Palette tabs are identical to those on the
    Color chooser. The last tab is a slightly modified version of the right portion
    of the Color chooser dialog ([Figure 12-51](ch12s04.html#colors_dialogcomma_sliders_tab
    "Figure 12-51. The Colors dialog, Sliders tab")).'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Colors dialog, Wilber tab](httpatomoreillycomsourcenostarchimages1455554.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-50. The Colors dialog, Wilber tab
  prefs: []
  type: TYPE_NORMAL
- en: '![The Colors dialog, Sliders tab](httpatomoreillycomsourcenostarchimages1455556.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-51. The Colors dialog, Sliders tab
  prefs: []
  type: TYPE_NORMAL
- en: The bottom of the Colors dialog contains several useful buttons. On the left
    are the buttons for setting the foreground and background colors. On the right
    is the button for applying the eyedropper and the field containing the HTML notation
    for the current color.
  prefs: []
  type: TYPE_NORMAL
- en: Levels
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Levels tool, opened by selecting **Image: Colors > Levels** or **Image:
    Tools > Color Tools > Levels**, is one of the most useful tools in GIMP for photo
    processing. In a nutshell, use the Levels tool (and the Curves tool, discussed
    in the next section) to adjust the relationship between initial pixel values (the
    input) and pixel values in the new, transformed image (the output). The Levels
    tool dialog is shown in [Figure 12-52](ch12s04.html#levels_dialog-id00094 "Figure 12-52. The
    Levels dialog").'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Levels dialog](httpatomoreillycomsourcenostarchimages1455558.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-52. The Levels dialog
  prefs: []
  type: TYPE_NORMAL
- en: '![Preset settings](httpatomoreillycomsourcenostarchimages1455560.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-53. Preset settings
  prefs: []
  type: TYPE_NORMAL
- en: The PRESETS field at the top of the Levels dialog opens a menu of previously
    saved settings. The settings are identified in ISO format by the date and time
    they were saved (see [Figure 12-53](ch12s04.html#preset_settings "Figure 12-53. Preset
    settings")). The plus sign on the right saves the current settings. This is more
    convenient than remembering the ISO date and time when you used a specific setting.
    Named settings are listed at the end of the saved settings. The same capabilities
    are available in the other color tools. The small triangle on the far right opens
    the menu shown in [Figure 12-54](ch12s04.html#levels_dialog_menu "Figure 12-54. The
    Levels dialog menu"). Use the first two entries to import or export settings to
    or from a file. The last entry opens the dialog shown in [Figure 12-55](ch12s04.html#settings_management
    "Figure 12-55. Settings management"), which lists the saved settings and contains
    three buttons to import settings, export settings, and delete the selected settings.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Levels dialog menu](httpatomoreillycomsourcenostarchimages1455562.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-54. The Levels dialog menu
  prefs: []
  type: TYPE_NORMAL
- en: '![Settings management](httpatomoreillycomsourcenostarchimages1455564.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-55. Settings management
  prefs: []
  type: TYPE_NORMAL
- en: The next line of the Levels dialog contains a menu to select the Channel that
    will be affected. The choices are Value, Red, Green, Blue, and Alpha (if an Alpha
    channel is available). When you select the Value channel, all three color channels
    change. The Value channel is the only channel available for a grayscale image.
    The RESET CHANNEL button resets the selected channel to its initial value without
    affecting any changes made elsewhere in the dialog.
  prefs: []
  type: TYPE_NORMAL
- en: The two buttons on the right set the characteristic of the histogram shown below.
    The histogram is a way to display the frequency of different values in the chosen
    channel. In 8-bit depth representation, there are 256 different values, from 0
    on the left to 255 on the right. The height of a bar in the graph is proportional
    to the number of pixels in the image with this value. If the leftmost button is
    pressed, the peak corresponds literally to the number of pixels, whereas in the
    logarithmic histogram, which you select with the rightmost button, the values
    are calculated using a logarithm. As [Figure 12-56](ch12s04.html#logarithmic_histogram
    "Figure 12-56. A logarithmic histogram") shows, the logarithmic histogram better
    illustrates variations in the low values, whereas the linear histogram (shown
    in [Figure 12-52](ch12s04.html#levels_dialog-id00094 "Figure 12-52. The Levels
    dialog")) exaggerates the peaks.
  prefs: []
  type: TYPE_NORMAL
- en: '![A logarithmic histogram](httpatomoreillycomsourcenostarchimages1455566.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-56. A logarithmic histogram
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of the Levels tool is to change the histogram by assigning new values
    to certain pixels. Generally, images look best when pixels are distributed across
    the full range. As you can see, the values greater than 200 are not represented
    at all in the example we’ve used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Just under the histogram are three movable triangles. The black one on the
    left corresponds to the *black point*: All pixels with a value less than or equal
    to the position of this triangle are set to 0 (i.e., black for color channels
    or full transparency for the Alpha channel). When this point moves to the right,
    more pixels become black, which is generally only beneficial if the histogram
    is empty on the left. The white triangle on the right corresponds to the *white
    point*: All pixels with a value greater than or equal to the position of that
    triangle are set to 255 (i.e., the maximum). Our example image would benefit from
    this adjustment because values greater than 200 are not represented at all. If
    we move the white triangle to 200, the full range of available values is represented
    in the image, which improves the contrast. The result is shown in [Figure 12-57](ch12s04.html#figure_12dot8_after_moving_the_white_tri
    "Figure 12-57. Figure 12-8 after moving the white triangle to 200"), which you
    can compare to the original image, shown in [Figure 12-8](ch12s02.html#bottom_layer
    "Figure 12-8. The bottom layer").'
  prefs: []
  type: TYPE_NORMAL
- en: '![after moving the white triangle to 200](httpatomoreillycomsourcenostarchimages1455568.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-57. [Figure 12-8](ch12s02.html#bottom_layer "Figure 12-8. The bottom
    layer") after moving the white triangle to 200
  prefs: []
  type: TYPE_NORMAL
- en: The middle, gray triangle corresponds to the *midpoint*. Moving it to the left
    makes the image lighter in the Value channel, more saturated in a color channel,
    or more opaque in the Alpha channel. Moving it to the right has the opposite effect.
    This slider changes the value of the *Gamma factor*, or Gamma correction, which
    specifies the shape of the *answering curve*. The answering curve represents the
    relationship between the input (initial pixel) and the output (new pixel) values.
    If Gamma = 1, the curve is a straight line. Increasing Gamma makes the curve convex,
    and decreasing it makes the curve concave.
  prefs: []
  type: TYPE_NORMAL
- en: Instead of moving one of the triangles by hand, we can also change the corresponding
    numeric field. Additionally, two eyedroppers, one for the black point and the
    other for the white point, are available. By clicking one of them and then clicking
    in the image on a pixel of the corresponding shade, we can adjust the triangles
    so they bracket the values that are represented in the image.
  prefs: []
  type: TYPE_NORMAL
- en: All the settings covered so far deal with the INPUT LEVELS, which enlarge the
    range of pixel values in the image to build a new image. Just below those controls
    are two triangles that alter the OUTPUT LEVELS. Moving the OUTPUT LEVELS triangles
    toward each other restricts the range of possible values. In the Value channel,
    for example, this reduces the image contrast, making the image duller, as shown
    in [Figure 12-58](ch12s04.html#figure_12dot8_after_restricting_the_outp "Figure 12-58. Figure 12-8
    after restricting the output levels to [100 to 200]").
  prefs: []
  type: TYPE_NORMAL
- en: '![after restricting the output levels to [100 to 200]](httpatomoreillycomsourcenostarchimages1455570.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-58. [Figure 12-8](ch12s02.html#bottom_layer "Figure 12-8. The bottom
    layer") after restricting the output levels to [100 to 200]
  prefs: []
  type: TYPE_NORMAL
- en: '![after inverting the output levels](httpatomoreillycomsourcenostarchimages1455572.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-59. [Figure 12-8](ch12s02.html#bottom_layer "Figure 12-8. The bottom
    layer") after inverting the output levels
  prefs: []
  type: TYPE_NORMAL
- en: 'If we move the white triangle to the left side and the black triangle to the
    right side, then we invert the image, as illustrated in [Figure 12-59](ch12s04.html#figure_12dot8_after_inverting_the_output
    "Figure 12-59. Figure 12-8 after inverting the output levels"). Doing this accomplishes
    the same thing as applying **Image: Colors > Invert**, except that when using
    the Levels tool, we can invert each of the RGB color channels separately.'
  prefs: []
  type: TYPE_NORMAL
- en: So far we’ve discussed the manual settings, which alter only the selected channel.
    The Levels tool also includes some automatic settings, which act on all channels
    at the same time. The simplest and most useful of these is the AUTO button, which
    extends the input range of the three color channels as far as possible. [Figure 12-60](ch12s04.html#figure_12dot8_after_using_the_auto_butto
    "Figure 12-60. Figure 12-8 after using the Auto button") shows the result for
    our image. Generally this improves the image, but in this example, the change
    is too dramatic.
  prefs: []
  type: TYPE_NORMAL
- en: '![after using the Auto button](httpatomoreillycomsourcenostarchimages1455574.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-60. [Figure 12-8](ch12s02.html#bottom_layer "Figure 12-8. The bottom
    layer") after using the Auto button
  prefs: []
  type: TYPE_NORMAL
- en: '![The Levels tool options](httpatomoreillycomsourcenostarchimages1455576.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-61. The Levels tool options
  prefs: []
  type: TYPE_NORMAL
- en: The three eyedroppers on the right, like the histogram eyedroppers, can be used
    to select the black and white points and also a midpoint in the image. But unlike
    the histogram eyedroppers, these eyedroppers change all the channels, which can
    lead to strange and unnatural effects. Note that the order in which these points
    are picked is significant, and picking them all is not necessary. Generally, the
    midpoint is the most difficult to pick accurately.
  prefs: []
  type: TYPE_NORMAL
- en: 'Although the Levels tool is, by default, not accessed from the Toolbox (change
    this in the **Image: Edit > Preferences** dialog, TOOLBOX entry), it does have
    Toolbox options, which appear when the tool is selected. These are shown in [Figure 12-61](ch12s04.html#levels_tool_options
    "Figure 12-61. The Levels tool options"). The HISTOGRAM SCALE radio buttons do
    the same thing as the buttons at the top right of the Levels dialog. The SAMPLE
    AVERAGE option, if checked, sets the radius of the area used to pick a color in
    the image when using one of the eyedroppers. This square appears if you press
    the mouse button when clicking the image with the eyedropper selected.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Curves dialog](httpatomoreillycomsourcenostarchimages1455578.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-62. The Curves dialog
  prefs: []
  type: TYPE_NORMAL
- en: Use the Curves tool to make the same adjustments as the Levels tool, but the
    Curves tool offers more control. Below the three eyedroppers in the Levels dialog
    is an EDIT THESE SETTINGS AS CURVES button, which retains any changes that were
    made in the Levels dialog and applies the Curves tool. The PREVIEW button allows
    you to see the effect of your changes and should always be checked. The four buttons
    at the bottom of the Levels dialog are self-explanatory.
  prefs: []
  type: TYPE_NORMAL
- en: Curves
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Curves tool is found via **Image: Colors > Curves** or **Image: Tools >
    Color Tools > Curves** and opens the dialog shown in [Figure 12-62](ch12s04.html#curves_dialog-id00095
    "Figure 12-62. The Curves dialog"). The Curves tool’s effect is similar to that
    of the Levels tool, but it offers fewer automatized options and more control.'
  prefs: []
  type: TYPE_NORMAL
- en: The top and the bottom of the Curves dialog are the same as the Levels dialog.
    In the rectangle at the center of the Curves dialog, you’ll see an image of the
    histogram. The diagonal of this rectangle represents the answering curve. Input
    values vary horizontally, and output values vary vertically. Initially, the input
    and output values are equal. When the mouse pointer is in the rectangle, its coordinates
    are displayed in the top-left corner.
  prefs: []
  type: TYPE_NORMAL
- en: '![A smooth curve](httpatomoreillycomsourcenostarchimages1455580.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-63. A smooth curve
  prefs: []
  type: TYPE_NORMAL
- en: '![A freehand curve](httpatomoreillycomsourcenostarchimages1455582.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-64. A freehand curve
  prefs: []
  type: TYPE_NORMAL
- en: By clicking and dragging the answering curve, we can change its shape. If the
    CURVE TYPE button shows SMOOTH, as it does by default, the curve, which remains
    smooth, is adjusted to pass by the points added, as shown in [Figure 12-63](ch12s04.html#smooth_curve
    "Figure 12-63. A smooth curve"). These points, called *anchors*, are automatically
    added every time you click in the histogram. The current anchor is a black dot.
    Move it by clicking and dragging or by using the up and down arrow keys on the
    keyboard. Press ![](httpatomoreillycomsourcenostarchimages1453922.png.jpg) to
    move the arrow keys by 15 pixels at a time, rather than the default of 1 pixel.
    The left and right arrow keys select the next anchor in the corresponding direction.
    If you click near an existing anchor, you can drag it to another position, thus
    changing the curve. To remove an anchor, drag it into one of the other anchors.
  prefs: []
  type: TYPE_NORMAL
- en: While the tool is in use, the mouse pointer takes the form of an eyedropper
    when you hover over the image. If you click the image, a vertical line appears
    in the Curves dialog at the value of the clicked pixel. ![](httpatomoreillycomsourcenostarchimages1453922.png.jpg)-clicking
    creates an anchor in the selected channel, and ![](httpatomoreillycomsourcenostarchimages1453844.png.jpg)-clicking
    creates an anchor in all the channels. The anchor is inserted only when the mouse
    button is released, so we can drag the point around the image to find a target
    value.
  prefs: []
  type: TYPE_NORMAL
- en: '![The result of the freehand curve](httpatomoreillycomsourcenostarchimages1455584.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-65. The result of the freehand curve
  prefs: []
  type: TYPE_NORMAL
- en: If the CURVE TYPE is set to FREEHAND, the curve is built by clicking and dragging
    in the rectangle and generally comes out jagged, as shown in [Figure 12-64](ch12s04.html#freehand_curve
    "Figure 12-64. A freehand curve"). The result is also more difficult to control,
    as illustrated in [Figure 12-65](ch12s04.html#result_of_the_freehand_curve "Figure 12-65. The
    result of the freehand curve"). But if we then choose SMOOTH as the curve type,
    the curve is automatically smoothed, and the necessary anchors are added.
  prefs: []
  type: TYPE_NORMAL
- en: The options for the Curves tool are the same as for the Levels tool (see [Figure 12-61](ch12s04.html#levels_tool_options
    "Figure 12-61. The Levels tool options")).
  prefs: []
  type: TYPE_NORMAL
- en: The Curves tool does not have any automatic controls and can be more difficult
    to master than the Levels tool, but it allows for more precise color handling.
    If we keep the curve straight and move only its end anchors horizontally, the
    effect is the same as moving the end triangles under INPUT LEVELS in the Levels
    tool. Moving them vertically has the same effect as moving the triangles under
    OUTPUT LEVELS. Adding an anchor in the middle of the curve and moving it vertically
    does the same thing as moving the middle triangle in the Levels tool and is a
    more intuitive visualization of the Gamma value.
  prefs: []
  type: TYPE_NORMAL
- en: '![Inverting the curve](httpatomoreillycomsourcenostarchimages1455586.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-66. Inverting the curve
  prefs: []
  type: TYPE_NORMAL
- en: Inverting the curve by putting the left (lower) anchor in the top-left corner
    and the right (upper) anchor in the bottom-right corner results in a negative
    image, as shown in [Figure 12-66](ch12s04.html#inverting_the_curve "Figure 12-66. Inverting
    the curve"). We can also do this in one channel only, with strange and colorful
    results. If we change the curves of individual color channels, they appear in
    their respective colors on the histogram, whereas the current curve is always
    black. These colored curves are not displayed when the Value channel is selected.
    Adjusting the shape of the curve can be tricky. Deforming the curve too much is
    easy and results in exaggerated, unnatural colors.
  prefs: []
  type: TYPE_NORMAL
- en: 12.5 Additional Color Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The **Image: Colors** menu contains lots of entries (see [Figure 12-67](ch12s05.html#image_colors_menu
    "Figure 12-67. The Image: Colors menu")). The first section of the menu contains
    the more basic tools, including Levels and Curves, which we just discussed. Now,
    we’ll demonstrate the other tools in this part of the menu using the photograph
    shown in [Figure 12-68](ch12s05.html#sample_image "Figure 12-68. A sample image").
    (Tip: You can access these entries by placing them in the Toolbox or via **Image:
    Tools > Color Tools**.)'
  prefs: []
  type: TYPE_NORMAL
- en: Color Balance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The adjustments you can make with the Color Balance tool can also be made with
    the Levels or Curves tool, but some people find the Color Balance tool more intuitive.
    Its dialog is shown in [Figure 12-69](ch12s05.html#color_balance_dialog-id00096
    "Figure 12-69. The Color Balance dialog"). The top of this dialog contains the
    same settings as the Levels and Curves tools, settings that are also shared by
    the next four tools in the menu: Hue-Saturation, Colorize, Brightness-Contrast,
    and Threshold.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Image: Colors menu](httpatomoreillycomsourcenostarchimages1455588.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12-67. The Image: Colors menu'
  prefs: []
  type: TYPE_NORMAL
- en: Adjust the color balance using three sliders [–100 to +100], one for each combination
    of a fundamental color and complementary color in the RGB and CMY models. Recall
    that the pairings are the same in these two models, but the designation of fundamental
    versus complementary differs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Balance tool to make adjustments in three different ranges: Shadows, Midtones,
    and Highlights. These ranges overlap, and precisely distinguishing them in an
    image is difficult. Because the sliders are very sensitive, achieving a natural-looking
    result is hard, as demonstrated in [Figure 12-70](ch12s05.html#after_using_the_color_balance_tool
    "Figure 12-70. After using the Color Balance tool"). Each of the ranges can be
    reset individually (by setting the value to 0), which makes adjusting an image
    by trial and error easier. Leave the two boxes at the bottom of the dialog checked
    to preview the effects of an adjustment.'
  prefs: []
  type: TYPE_NORMAL
- en: '![A sample image](httpatomoreillycomsourcenostarchimages1455590.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-68. A sample image
  prefs: []
  type: TYPE_NORMAL
- en: '![The Color Balance dialog](httpatomoreillycomsourcenostarchimages1455592.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-69. The Color Balance dialog
  prefs: []
  type: TYPE_NORMAL
- en: Hue-Saturation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This tool offers yet another way to make adjustments that you could also make
    using the Curves tool. The advantage of Hue-Saturation is that the controls are
    based on the three color models: RGB, CMY, and HSV. Another important difference
    is that Hue-Saturation deals with color ranges rather than color channels. For
    example, how would you change the saturation of yellow pixels using the Curves
    tool? With Hue-Saturation, it’s easy.'
  prefs: []
  type: TYPE_NORMAL
- en: '![After using the Color Balance tool](httpatomoreillycomsourcenostarchimages1455594.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-70. After using the Color Balance tool
  prefs: []
  type: TYPE_NORMAL
- en: '![The Hue-Saturation dialog](httpatomoreillycomsourcenostarchimages1455596.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-71. The Hue-Saturation dialog
  prefs: []
  type: TYPE_NORMAL
- en: The Hue-Saturation dialog, shown in [Figure 12-71](ch12s05.html#hue-saturation_dialog-id00097
    "Figure 12-71. The Hue-Saturation dialog"), begins with the customary line for
    the PRESETS settings.
  prefs: []
  type: TYPE_NORMAL
- en: '![After using the Hue-Saturation tool](httpatomoreillycomsourcenostarchimages1455598.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-72. After using the Hue-Saturation tool
  prefs: []
  type: TYPE_NORMAL
- en: '![The Colorize dialog](httpatomoreillycomsourcenostarchimages1455600.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-73. The Colorize dialog
  prefs: []
  type: TYPE_NORMAL
- en: The next part of the dialog lets us select what color range to change. The center
    button, called MASTER, allows us to change all the colors simultaneously. The
    six colored buttons specify color ranges, each representing a sixth of the hue
    circle. The OVERLAP slider [0 to 100] extends the chosen range into the two neighboring
    ranges.
  prefs: []
  type: TYPE_NORMAL
- en: The next three sliders are based on the HSV model. (Here, Value is called Lightness).
    The effect of adjusting any of the three sliders is visible not only in the image
    but also in the color buttons in the upper part of the dialog. Adjust the hue,
    saturation, or lightness of any of the six colors, or select the Master control.
    The many different possible combinations make this tool a difficult one to master.
    One possible result of the Hue-Saturation tool is shown in [Figure 12-72](ch12s05.html#after_using_the_hue-saturation_tool
    "Figure 12-72. After using the Hue-Saturation tool").
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a sepia photograph with the Colorize tool](httpatomoreillycomsourcenostarchimages1455602.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-74. Creating a sepia photograph with the Colorize tool
  prefs: []
  type: TYPE_NORMAL
- en: '![The Brightness-Contrast dialog](httpatomoreillycomsourcenostarchimages1455604.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-75. The Brightness-Contrast dialog
  prefs: []
  type: TYPE_NORMAL
- en: Colorize
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Colorize tool first desaturates the image and then adds color to a grayscale
    version in RGB mode. Its dialog ([Figure 12-73](ch12s05.html#colorize_dialog "Figure 12-73. The
    Colorize dialog")) begins with the standard color tool PRESETS option. Below that
    are sliders to specify the HSV components to apply to the image. The effect is
    similar to looking at a grayscale image through colored glass. The parameters
    shown in [Figure 12-73](ch12s05.html#colorize_dialog "Figure 12-73. The Colorize
    dialog") produce the sepia photograph in [Figure 12-74](ch12s05.html#creating_a_sepia_photograph_with_the_col
    "Figure 12-74. Creating a sepia photograph with the Colorize tool").
  prefs: []
  type: TYPE_NORMAL
- en: Brightness-Contrast
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Brightness-Contrast tool is very simple, as you can see from its dialog
    ([Figure 12-75](ch12s05.html#brightness-contrast_dialog "Figure 12-75. The Brightness-Contrast
    dialog")). As the name implies, you can use it to adjust two characteristics of
    an image: brightness and contrast.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Adjusting brightness and contrast](httpatomoreillycomsourcenostarchimages1455606.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-76. Adjusting brightness and contrast
  prefs: []
  type: TYPE_NORMAL
- en: 'Because this tool’s abilities are rather limited, a button is included (EDIT
    THESE SETTINGS AS LEVELS) that opens the Levels tool, which you can use to edit
    brightness and contrast with much more flexibility. The sliders in the Brightness-Contrast
    tool work in the usual way, but when the tool is active, we can also click and
    drag in the image itself: Vertical strokes change the brightness, horizontal strokes
    change the contrast. [Figure 12-76](ch12s05.html#adjusting_brightness_and_contrast
    "Figure 12-76. Adjusting brightness and contrast") shows the result of the settings
    shown in [Figure 12-75](ch12s05.html#brightness-contrast_dialog "Figure 12-75. The
    Brightness-Contrast dialog").'
  prefs: []
  type: TYPE_NORMAL
- en: Threshold
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Threshold tool transforms the current layer into a black and white image.
    Pixels that have a value within the set range are white, and those that have a
    value outside the range are black. Set the range by moving the two triangles below
    the histogram. Generally, you can achieve a better result by setting the threshold
    manually than by using the AUTO button. The settings shown in [Figure 12-77](ch12s05.html#threshold_dialog
    "Figure 12-77. The Threshold dialog") generate the result in [Figure 12-78](ch12s05.html#after_applying_the_threshold_tool
    "Figure 12-78. After applying the Threshold tool").
  prefs: []
  type: TYPE_NORMAL
- en: Use the Threshold tool to generate a *natural mask*, as described in [Building
    a Natural Mask](ch14s03.html#building_a_natural_mask "Building a Natural Mask").
  prefs: []
  type: TYPE_NORMAL
- en: '![The Threshold dialog](httpatomoreillycomsourcenostarchimages1455608.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-77. The Threshold dialog
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying the Threshold tool](httpatomoreillycomsourcenostarchimages1455610.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-78. After applying the Threshold tool
  prefs: []
  type: TYPE_NORMAL
- en: Posterize
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Posterize tool reduces the number of colors in an image. The only slider,
    which has a range of [2 to 256], is used to set the number of colors in each RGB
    channel. Setting the level to 8 generates the result shown in [Figure 12-79](ch12s05.html#after_posterization
    "Figure 12-79. After posterization").
  prefs: []
  type: TYPE_NORMAL
- en: Desaturate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Desaturate tool removes all color from the current layer, but the image
    remains in RGB mode, so you can add color later. The dialog includes three ways
    to compute the gray levels of the pixels.
  prefs: []
  type: TYPE_NORMAL
- en: '![After posterization](httpatomoreillycomsourcenostarchimages1455612.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-79. After posterization
  prefs: []
  type: TYPE_NORMAL
- en: '![After desaturation](httpatomoreillycomsourcenostarchimages1455614.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-80. After desaturation
  prefs: []
  type: TYPE_NORMAL
- en: LIGHTNESS is the average between the maximum and minimum of the three RGB values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'LUMINOSITY is a weighted average among the three RGB values. The coefficients
    used correspond to *luminance* in colorimetry are: 0.21 × *R* + 0.71 × *G* + 0.07
    × *B*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AVERAGE is the average of the three RGB values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Figure 12-80](ch12s05.html#after_desaturation "Figure 12-80. After desaturation")
    shows the result of applying LUMINOSITY.'
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Invert](httpatomoreillycomsourcenostarchimages1455616.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-81. After applying Invert
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Value Invert](httpatomoreillycomsourcenostarchimages1455618.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-82. After applying Value Invert
  prefs: []
  type: TYPE_NORMAL
- en: Inversion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The two inversion tools operate instantly on the current layer. **Image: Colors
    > Invert** generates the result shown in [Figure 12-81](ch12s05.html#after_applying_invert
    "Figure 12-81. After applying Invert"). The colors are inverted (i.e., they are
    replaced by their complementary color, as in a photographic negative). **Image:
    Colors > Value Invert** generates the result shown in [Figure 12-82](ch12s05.html#after_applying_value_invert
    "Figure 12-82. After applying Value Invert"). When this tool is used, only the
    Value component in the HSV model is inverted via the formula *V* = 100 – *V*,
    where *V* is the pixel value. Rounding errors can lead to a strong color distortion.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Auto submenu](httpatomoreillycomsourcenostarchimages1455620.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-83. The Auto submenu
  prefs: []
  type: TYPE_NORMAL
- en: '![The initial image with its histogram](httpatomoreillycomsourcenostarchimages1455622.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-84. The initial image with its histogram
  prefs: []
  type: TYPE_NORMAL
- en: 12.6 The Color Submenus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The next part of the **Image: Colors** menu contains four submenus: Auto, Components,
    Map, and Info. We’ll consider them each in turn.'
  prefs: []
  type: TYPE_NORMAL
- en: The Auto Submenu
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Auto submenu is shown in [Figure 12-83](ch12s05.html#auto_submenu "Figure 12-83. The
    Auto submenu"). It contains tools that have no corresponding dialogs. When selected,
    they adjust the image instantly, using automatic settings, as the name suggests.
    Because you can’t customize the settings for these tools, their utility depends
    on the image being processed. To demonstrate their effects, we have included the
    Histogram dialog with each demonstration image and with the initial image, which
    is shown in [Figure 12-84](ch12s05.html#initial_image_with_its_histogram "Figure 12-84. The
    initial image with its histogram").
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Equalize](httpatomoreillycomsourcenostarchimages1455624.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-85. After applying Equalize
  prefs: []
  type: TYPE_NORMAL
- en: Equalize
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Equalize tool automatically adjusts the brightness of all colors, so that
    each possible brightness value occurs about the same number of times in the image.
    The histogram for the image in [Figure 12-85](ch12s06.html#after_applying_equalize
    "Figure 12-85. After applying Equalize") shows that the color values that occur
    most frequently, in this case [0 to 80], are stretched the most: See the flat
    part in the middle of the histogram. In this example, the result is bizarre and
    is not an improvement. In other cases, the result may look better.'
  prefs: []
  type: TYPE_NORMAL
- en: White Balance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The White Balance tool operates separately on each of the RGB channels. It removes
    the least-used pixel values from both ends of the histogram and then stretches
    the remaining pixels to extend across the full range. In [Figure 12-86](ch12s06.html#after_applying_white_balance
    "Figure 12-86. After applying White Balance"), the brightest pixels disappeared,
    and the remaining pixels were stretched along the full range. The picture is much
    lighter, and this time the result could be considered an improvement.
  prefs: []
  type: TYPE_NORMAL
- en: Color Enhance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Color Enhance tool makes adjustments using the HSV model: It increases
    the saturation without changing the hue or the value. The effect on this image,
    shown in [Figure 12-87](ch12s06.html#after_applying_color_enhance "Figure 12-87. After
    applying Color Enhance"), is rather unpleasant. The Color Enhance tool flattened
    the histogram without extending the color range. The result is slightly better
    when we apply the White Balance tool first, but automatic tools such as this one
    clearly have limitations.'
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying White Balance](httpatomoreillycomsourcenostarchimages1455626.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-86. After applying White Balance
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Color Enhance](httpatomoreillycomsourcenostarchimages1455628.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-87. After applying Color Enhance
  prefs: []
  type: TYPE_NORMAL
- en: '![Before applying Normalize](httpatomoreillycomsourcenostarchimages1455630.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-88. Before applying Normalize
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Normalize](httpatomoreillycomsourcenostarchimages1455632.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-89. After applying Normalize
  prefs: []
  type: TYPE_NORMAL
- en: Normalize
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Normalize tool stretches the brightness of the image so the darkest point
    is black and the brightest point is as bright as possible in its current hue.
    To best demonstrate this, we’ll use the image shown in [Figure 12-88](ch12s06.html#before_applying_normalize
    "Figure 12-88. Before applying Normalize"), which we modified with the Levels
    tool: We moved the right triangle under INPUT LEVELS to position 212 to remove
    the few pixels brighter than this value and the right triangle under OUTPUT LEVELS
    to the same position to retain the same overall brightness in the image. When
    applied to this modified image, the Normalize tool produces a visible effect ([Figure 12-89](ch12s06.html#after_applying_normalize
    "Figure 12-89. After applying Normalize")), which it does only when there are
    no pixels on the far left or right of the histogram.'
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Stretch Contrast](httpatomoreillycomsourcenostarchimages1455634.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-90. After applying Stretch Contrast
  prefs: []
  type: TYPE_NORMAL
- en: Stretch Contrast
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Stretch Contrast tool works the same way as the Normalize tool, but rather
    than stretching the Value channel, it stretches the RGB channels separately. These
    two tools result in visibly different effects only if the RGB channel ranges differ
    significantly, and when the Stretch Contrast tool does produce a unique result,
    it can generate color distortions. To create [Figure 12-90](ch12s06.html#after_applying_stretch_contrast
    "Figure 12-90. After applying Stretch Contrast"), we began with the same modified
    example that we used for the Normalize tool, and the result is very similar.
  prefs: []
  type: TYPE_NORMAL
- en: Stretch HSV
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Stretch HSV tool works the same way as the Stretch Contrast tool, but it
    operates on the three channels of the HSV model instead of on the three RGB channels.
    This method can produce a better or worse result, depending on the image. Our
    result, shown in [Figure 12-91](ch12s06.html#after_applying_stretch_hsv "Figure 12-91. After
    applying Stretch HSV"), is almost identical to the initial image.
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Stretch HSV](httpatomoreillycomsourcenostarchimages1455636.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-91. After applying Stretch HSV
  prefs: []
  type: TYPE_NORMAL
- en: '![The Components menu](httpatomoreillycomsourcenostarchimages1455638.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-92. The Components menu
  prefs: []
  type: TYPE_NORMAL
- en: The Components Submenu
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Components menu is shown in [Figure 12-92](ch12s06.html#components_menu
    "Figure 12-92. The Components menu"). Its four tools operate on the RGB channels.
  prefs: []
  type: TYPE_NORMAL
- en: Channel Mixer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This tool uses the values from all three of the RGB channels to compute new
    values for each one of them. Initially, each output channel receives only the
    corresponding input channel. [Figure 12-93](ch12s06.html#channel_mixer_dialogcomma_red_channel
    "Figure 12-93. The Channel Mixer dialog, Red channel") shows the Red channel dialog.
  prefs: []
  type: TYPE_NORMAL
- en: At the top of the Channel Mixer dialog is a preview of the image, with zooming
    and panning enabled. Below that is the OUTPUT CHANNEL selection menu. The next
    three sliders, which have a range of [–200 to +200], allow you to set the percentage
    of the corresponding channel that will be assigned to the current output channel.
    If we change the output channel, we can define another set of percentages.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Channel Mixer dialog, Red channel](httpatomoreillycomsourcenostarchimages1455640.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-93. The Channel Mixer dialog, Red channel
  prefs: []
  type: TYPE_NORMAL
- en: 'If we check the MONOCHROME box, the image becomes grayscale, and we can use
    the sliders to set the proportion of each of the RGB channels that are used to
    build the monochrome image. For example, when we select **Image: Image > Mode
    > Grayscale**, a grayscale image is created using the values 21, 72, and 7 for
    the three RGB channels, from top to bottom.'
  prefs: []
  type: TYPE_NORMAL
- en: The PRESERVE LUMINOSITY checkbox maintains the initial luminosity of each pixel,
    which prevents the resulting image from being overly bright.
  prefs: []
  type: TYPE_NORMAL
- en: The set of buttons at the bottom of the dialog allow us to save the current
    settings, reload previously saved settings, and reset everything to the initial
    values.
  prefs: []
  type: TYPE_NORMAL
- en: You can make very fine adjustments to the colors of an image with this tool,
    but mastering it is difficult.
  prefs: []
  type: TYPE_NORMAL
- en: Decompose
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Decompose tool separates the channels of the image into separate grayscale
    images or layers based on the chosen color model. Its dialog, shown in [Figure 12-94](ch12s06.html#decompose_dialog
    "Figure 12-94. The Decompose dialog"), is fairly simple. At the top is the COLOR
    MODEL menu, and below that are two checkboxes. Checking the first box decomposes
    the image to layers; otherwise the decomposition results in separate images. The
    second box is included for CMYK printing purposes. When checked, every pixel that’s
    part of the current foreground color will be black in the decomposed images or
    layers. This is commonly used to show crop marks on all channels as a way to aid
    in alignment.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Decompose dialog](httpatomoreillycomsourcenostarchimages1455642.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-94. The Decompose dialog
  prefs: []
  type: TYPE_NORMAL
- en: '![Color models](httpatomoreillycomsourcenostarchimages1455644.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-95. Color models
  prefs: []
  type: TYPE_NORMAL
- en: The available color models, shown in [Figure 12-95](ch12s06.html#color_models-id00099
    "Figure 12-95. Color models"), are explained next.
  prefs: []
  type: TYPE_NORMAL
- en: 'RGB: This decomposition allows us to work on the channels separately and then
    recompose the image. One of the channels can also be used as a mask.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![The Hue channel](httpatomoreillycomsourcenostarchimages1455646.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 12-96. The Hue channel
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![The Saturation channel](httpatomoreillycomsourcenostarchimages1455648.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 12-97. The Saturation channel
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'RGBA: Similar to the RGB model, except with this model, an Alpha layer or image
    is also created for the image’s Alpha channel.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'HSV: The layers or images represent the components of the HSV model. The Hue
    channel is rather compressed, and the result has no natural meaning, as shown
    in [Figure 12-96](ch12s06.html#hue_channel "Figure 12-96. The Hue channel"). The
    Saturation channel is also not very meaningful ([Figure 12-97](ch12s06.html#saturation_channel
    "Figure 12-97. The Saturation channel")). In contrast, the Value channel returns
    an accurate grayscale representation of the image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'HSL: Similar to the HSV model, but the Value channel is replaced with Lightness,
    which is similar conceptually but calculated a little differently. The calculations
    for the Saturation channel also differ slightly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![The Alpha channel](httpatomoreillycomsourcenostarchimages1455650.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 12-98. The Alpha channel
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'CMY and CMYK: These models are generally used to decompose an image in order
    to pass it to printing software that requires decomposition.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ALPHA: A new image is created from the Alpha channel of the image. For example,
    [Figure 12-98](ch12s06.html#alpha_channel "Figure 12-98. The Alpha channel") was
    generated from an Alpha channel built with **Image: Colors > Color to Alpha**,
    using white as the color.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'LAB: The Lab (or L*a*b*) color space includes several models that are intended
    to be more representative of human vision than the other color models. The L channel
    represents luminosity, and the A and B channels represent color in the form of
    *opponent color axes*. The Lab color space was designed based on the *opponent
    process theory*, which states that signals received by the rods and cones are
    processed antagonistically: red versus green signals (A channel), yellow versus
    blue signals (B channel), and black versus white signals (L channel).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'YCBCR: The last four color models are based on this color space, which has
    channels for Luminance, Blue, and Red. This color space is used for digital video,
    and the various decompositions correspond to different recommendations by the
    International Telecommunication Union.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![The Compose dialog](httpatomoreillycomsourcenostarchimages1455652.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-99. The Compose dialog
  prefs: []
  type: TYPE_NORMAL
- en: Generally, you’ll use only the RGB, CMY, and HSV color models to make adjustments
    to an image. The other models are mainly for transferring the image information
    to an application.
  prefs: []
  type: TYPE_NORMAL
- en: Recompose
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use the Recompose tool only on an image that has been decomposed with
    the Decompose tool. When this tool is applied, the original image is rebuilt using
    the component images or layers, allowing you to decompose the image, manipulate
    the layers or images separately, and then recompose the image.
  prefs: []
  type: TYPE_NORMAL
- en: Compose
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Compose tool is much more powerful than the Recompose tool because any grayscale
    image can be used to represent the channels. As [Figure 12-99](ch12s06.html#compose_dialog
    "Figure 12-99. The Compose dialog") shows, the dialog first asks us to choose
    the COLOR MODEL. The available choices are the same as for the Decompose tool.
  prefs: []
  type: TYPE_NORMAL
- en: Next, choose the CHANNEL REPRESENTATIONS. If the current image has multiple
    layers, use the successive layers as the channels. If the image is in grayscale
    with only one layer, then that layer is initially used for all the channels. For
    each channel, we can either choose one of the available grayscale images or layers,
    or a mask value. If we choose a mask value, the slider on the right becomes operational,
    and we can choose a value in the range [0 to 255], which replaces the channel
    for all pixels. But at least one of the channels must be an image or a layer.
  prefs: []
  type: TYPE_NORMAL
- en: '![Interpreting RGB channels as HSL channels](httpatomoreillycomsourcenostarchimages1455654.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-100. Interpreting RGB channels as HSL channels
  prefs: []
  type: TYPE_NORMAL
- en: '![The Map submenu](httpatomoreillycomsourcenostarchimages1455656.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-101. The Map submenu
  prefs: []
  type: TYPE_NORMAL
- en: The Compose tool lets you exchange channels without changing the color model,
    use channels from one color model and interpret them with another model, add an
    Alpha channel taken from another image (if a model with an Alpha channel, such
    as RGBA, has been chosen), or replace a channel with a constant value. As you
    can see, this tool is powerful. [Figure 12-100](ch12s06.html#interpreting_rgb_channels_as_hsl_channel
    "Figure 12-100. Interpreting RGB channels as HSL channels") was obtained by decomposing
    in the RGB model and then composing the layers in the HSL model.
  prefs: []
  type: TYPE_NORMAL
- en: '![A sample image before colormapping](httpatomoreillycomsourcenostarchimages1455658.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-102. A sample image before colormapping
  prefs: []
  type: TYPE_NORMAL
- en: '![Rearranging the colormap](httpatomoreillycomsourcenostarchimages1455660.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-103. Rearranging the colormap
  prefs: []
  type: TYPE_NORMAL
- en: The Map Submenu
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Map submenu, shown in [Figure 12-101](ch12s06.html#map_submenu "Figure 12-101. The
    Map submenu"), is separated into two sections. Tools in the first section apply
    only to images in Indexed mode. Tools in the second section apply only to images
    in RGB mode or, for some of the entries, Grayscale mode. We’ll use the image in
    [Figure 12-102](ch12s06.html#sample_image_before_colormapping "Figure 12-102. A
    sample image before colormapping") as an example and convert a copy of it to Indexed
    mode with an optimal palette of 256 colors and Floyd-Steinberg dithering to demonstrate
    the first two tools (see [Indexed Mode](ch12s01.html#indexed_mode "Indexed Mode")
    for more information about indexing).
  prefs: []
  type: TYPE_NORMAL
- en: '![Choosing a colormap](httpatomoreillycomsourcenostarchimages1455662.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-104. Choosing a colormap
  prefs: []
  type: TYPE_NORMAL
- en: Rearrange Colormap
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This tool does not change the image. It simply changes the numbering of the
    entries in the colormap. As shown in [Figure 12-103](ch12s06.html#rearranging_the_colormap
    "Figure 12-103. Rearranging the colormap") (only a quarter of the actual window
    is visible), we can move the entries by dragging and dropping. Right-click anywhere
    in the window to sort the colormap according to one of the HSV components or to
    reverse or reset the order.
  prefs: []
  type: TYPE_NORMAL
- en: Set Colormap
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Set Colormap tool opens a dialog in which we can only choose a new colormap
    from among those available ([Figure 12-104](ch12s06.html#choosing_a_colormap "Figure 12-104. Choosing
    a colormap")). Some of the colormaps yield odd results, as you can see in [Figure 12-105](ch12s06.html#after_setting_the_colormap_to_blues
    "Figure 12-105. After setting the colormap to Blues").
  prefs: []
  type: TYPE_NORMAL
- en: Alien Map
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Alien Map tool transforms the colors of an image in the RGB or the HSL model
    by applying trigonometric functions to the pixel values.
  prefs: []
  type: TYPE_NORMAL
- en: The dialog shown in [Figure 12-106](ch12s06.html#alien_map_dialog "Figure 12-106. The
    Alien Map dialog") begins with a preview. Then we choose the color model, called
    *mode* in this dialog. The checkboxes on the right control which of the channels
    will be affected.
  prefs: []
  type: TYPE_NORMAL
- en: '![After setting the colormap to Blues](httpatomoreillycomsourcenostarchimages1455664.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-105. After setting the colormap to Blues
  prefs: []
  type: TYPE_NORMAL
- en: '![The Alien Map dialog](httpatomoreillycomsourcenostarchimages1455666.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-106. The Alien Map dialog
  prefs: []
  type: TYPE_NORMAL
- en: 'Each channel has two sliders: frequency [0 to 20] and phaseshift [0 to 360].
    Frequencies that are less than 0.7 yield a result similar to the original. Higher
    values give an increasingly “alien” result. [Figure 12-107](ch12s06.html#after_applying_alien_map
    "Figure 12-107. After applying Alien Map") is the result of using a frequency
    of 6.00 in the three RGB channels and a phaseshift of 0.00 in the three HSV channels.'
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Alien Map](httpatomoreillycomsourcenostarchimages1455668.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-107. After applying Alien Map
  prefs: []
  type: TYPE_NORMAL
- en: Color Exchange
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As its name indicates, this tool replaces a color in the image with a different
    one.
  prefs: []
  type: TYPE_NORMAL
- en: The dialog, shown in [Figure 12-108](ch12s06.html#color_exchange_dialog "Figure 12-108. The
    Color Exchange dialog"), contains a preview that you middle-click to define the
    FROM COLOR. This color can also be defined by clicking the corresponding button,
    which opens the Color chooser, or by setting the three sliders for the RGB channels.
    Each channel also has threshold sliders [0 to 1], which you adjust to set how
    much of the channel will be replaced.
  prefs: []
  type: TYPE_NORMAL
- en: The pixels in the image that are similar to the chosen FROM COLOR, within the
    threshold limits, are replaced with the TO COLOR, which you select using the button
    or the three sliders.
  prefs: []
  type: TYPE_NORMAL
- en: Gradient Map
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Gradient Map tool has no dialog. It uses the current gradient, which you
    can change in the Gradients dialog, usually a dockable dialog in the multi-dialog
    window below the layers tab. The mapping occurs between the color intensities
    in the image (represented as the Value channel in the Levels tool, for example)
    and the colors in the gradient. The left end of the gradient is mapped to the
    darkest pixel, and the right end to the lightest pixel. [Figure 12-109](ch12s06.html#after_applying_gradient_map
    "Figure 12-109. After applying Gradient Map") shows the result using the `Greens`
    gradient.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Color Exchange dialog](httpatomoreillycomsourcenostarchimages1455670.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-108. The Color Exchange dialog
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Gradient Map](httpatomoreillycomsourcenostarchimages1455672.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-109. After applying Gradient Map
  prefs: []
  type: TYPE_NORMAL
- en: Palette Map
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Palette Map tool works like the Gradient Map tool, only it uses the current
    palette instead of the current gradient. Change the current palette via the Palettes
    dialog. This dialog can be opened by clicking the small button to the right of
    any dockable dialog or from the **Image: Windows > Dockable Dialogs** menu. [Figure 12-110](ch12s06.html#after_applying_palette_map
    "Figure 12-110. After applying Palette Map") shows the result using the `Gold`
    palette.'
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Palette Map](httpatomoreillycomsourcenostarchimages1455674.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-110. After applying Palette Map
  prefs: []
  type: TYPE_NORMAL
- en: '![The Rotate Colors dialog](httpatomoreillycomsourcenostarchimages1455676.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-111. The Rotate Colors dialog
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Rotate Colors](httpatomoreillycomsourcenostarchimages1455678.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-112. After applying Rotate Colors
  prefs: []
  type: TYPE_NORMAL
- en: Rotate Colors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Rotate Colors tool uses the Hue color circle to alter the image colors.
    A hue subrange is defined on the FROM circle as a sector, and another sector is
    defined on the TO circle. The colors in the input range are mapped to the colors
    in the output range. The other colors are not affected.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Gray Options tab](httpatomoreillycomsourcenostarchimages1455680.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-113. The Gray Options tab
  prefs: []
  type: TYPE_NORMAL
- en: This dialog is shown in [Figure 12-111](ch12s06.html#rotate_colors_dialog "Figure 12-111. The
    Rotate Colors dialog"). You can adjust the two color ranges in various ways. The
    previews on the left show the original image and the current result. To get the
    dramatic change shown in [Figure 12-112](ch12s06.html#after_applying_rotate_colors
    "Figure 12-112. After applying Rotate Colors"), we clicked the CHANGE ORDER OF
    ARROWS button.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Sample Colorize dialog](httpatomoreillycomsourcenostarchimages1455682.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-114. The Sample Colorize dialog
  prefs: []
  type: TYPE_NORMAL
- en: 'This dialog contains a second tab, shown in [Figure 12-113](ch12s06.html#gray_options_tab
    "Figure 12-113. The Gray Options tab"). On this tab, we specify a color in the
    image to replace with gray, as long as the CHANGE TO THIS radio button is checked.
    The center circle is a visual representation of the GRAY THRESHOLD saturation:
    It extends when the threshold saturation is increased. The position of the small
    circle defines the hue and saturation of the color that will be converted to gray.
    If the TREAT AS THIS radio button is checked, the hue that will be converted to
    gray is defined by the rotation specified on the Main Options tab.'
  prefs: []
  type: TYPE_NORMAL
- en: Sample Colorize
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Sample Colorize tool uses a sampling image to colorize a destination image.
  prefs: []
  type: TYPE_NORMAL
- en: The destination image must be in RGB mode but can be either grayscale or color.
    Its colors will be discarded; only the Value channel will be used in the resulting
    image. [Figure 12-114](ch12s06.html#sample_colorize_dialog "Figure 12-114. The
    Sample Colorize dialog") shows the dialog for this tool. We created a sample image
    by applying a linear gradient to a blank canvas, using the Blend tool and the
    `Incandescent` gradient. The drop-down menus at the top of the dialog contain
    all of the images currently open in GIMP; use them to select a sample or use the
    current gradient as the sample, either as is or reversed. We can use the triangles
    or the numbers below the sample image preview to restrict the output range. We
    can also change the prominence of dark, medium, and light tones, using the triangles
    or the numbers in the input range below the destination image preview.
  prefs: []
  type: TYPE_NORMAL
- en: Various checkboxes set the parameters. HOLD INTENSITY applies the average light
    intensity of the source image to the destination image. ORIGINAL INTENSITY inactivates
    the Input levels intensity settings. USE SUBCOLORS makes the colors of an output
    pixel a mixture of the source and destination image values; otherwise, only the
    dominant color (the color with the maximum value) is used. SMOOTH SAMPLES improves
    the transition between colors selected after clicking the GET SAMPLE COLORS button.
  prefs: []
  type: TYPE_NORMAL
- en: The Info Submenu
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Info submenu is shown in [Figure 12-115](ch12s06.html#info_submenu-id00101
    "Figure 12-115. The Info submenu"). These entries don’t change the image. Rather,
    they offer ways to gather information about the image properties, which allow
    you to make informed adjustments using the other tools.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Info submenu](httpatomoreillycomsourcenostarchimages1455684.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-115. The Info submenu
  prefs: []
  type: TYPE_NORMAL
- en: '![The Value histogram](httpatomoreillycomsourcenostarchimages1455686.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-116. The Value histogram
  prefs: []
  type: TYPE_NORMAL
- en: Histogram
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Histogram tool opens a dockable dialog that can be selected via **Image:
    Windows > Dockable Dialogs > Histogram** and docked in one of the multi-dialog
    windows.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Keeping this dialog open on the screen is helpful, because it’s automatically
    updated when the current image changes and it provides a way to track the effect
    of various adjustments. Adjust its size, either to reduce the histogram and save
    space on the screen or to extend the histogram and show more precise information.
    In [Figure 12-116](ch12s06.html#value_histogram "Figure 12-116. The Value histogram"),
    only the Value channel is displayed in linear mode. Numeric data about the image
    pixels is displayed at the bottom of the dialog: the mean, standard deviation,
    and median of the values, and the number of pixels.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Red histogram with reduced range](httpatomoreillycomsourcenostarchimages1455688.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-117. The Red histogram with reduced range
  prefs: []
  type: TYPE_NORMAL
- en: '![The RGB histogram in Logarithmic mode](httpatomoreillycomsourcenostarchimages1455690.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-118. The RGB histogram in Logarithmic mode
  prefs: []
  type: TYPE_NORMAL
- en: 'In [Figure 12-117](ch12s06.html#red_histogram_with_reduced_range "Figure 12-117. The
    Red histogram with reduced range"), we’ve displayed the Red channel and defined
    a subrange by moving the white triangle below the histogram. Because this is an
    informational dialog, the image doesn’t change, but the data does: The pixel count
    is different from the total, and the percentile is less than 100.'
  prefs: []
  type: TYPE_NORMAL
- en: In [Figure 12-118](ch12s06.html#rgb_histogram_in_logarithmic_mode "Figure 12-118. The
    RGB histogram in Logarithmic mode"), we’ve displayed the three RGB channels at
    the same time, and the histogram is logarithmic. In Logarithmic mode, the low
    values are more prominent, which is generally better since small differences in
    small values are much easier to see than small differences in high values.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Border Average dialog](httpatomoreillycomsourcenostarchimages1455692.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-119. The Border Average dialog
  prefs: []
  type: TYPE_NORMAL
- en: Border Average
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Border Average tool is useful for finding an appropriate background color
    to go behind an image on a web page. It determines which color occurs most often
    along the border of the current layer and sets it as the foreground color. Because
    this does not change the image itself, this tool has no undo capability.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Border Average dialog, shown in [Figure 12-119](ch12s06.html#border_average_dialog
    "Figure 12-119. The Border Average dialog"), contains only two settings. The thickness
    of the BORDER SIZE specifies how much of the current layer is used in the calculation.
    The NUMBER OF COLORS is specified by the bucket size in the following way: Colors
    found in the border are placed in different buckets, depending on their similarity.
    The bucket containing the most colors is used to set the foreground color. A small
    bucket size leads to a large number of buckets and, often, an unexpected result.
    For example, when we applied the tool for the image in [Figure 12-102](ch12s06.html#sample_image_before_colormapping
    "Figure 12-102. A sample image before colormapping"), a bucket size of 16 yielded
    black, because the model’s black shirt spans much of the bottom border of the
    image and the tone is fairly consistent. A bucket size of 64 yielded a gray color,
    which is a mixture of the beige in the background of the photograph and the black
    of the woman’s shirt.'
  prefs: []
  type: TYPE_NORMAL
- en: Colorcube Analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This tool has been more or less obsolete since GIMP 2.4: Its dialog ([Figure 12-120](ch12s06.html#colorcube_analysis_dialog
    "Figure 12-120. The Colorcube Analysis dialog")) only displays the RGB logarithmic
    histogram, the image dimensions, and the number of unique colors.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Colorcube Analysis dialog](httpatomoreillycomsourcenostarchimages1455694.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-120. The Colorcube Analysis dialog
  prefs: []
  type: TYPE_NORMAL
- en: '![The generated palette](httpatomoreillycomsourcenostarchimages1455696.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-121. The generated palette
  prefs: []
  type: TYPE_NORMAL
- en: '![The Smooth Palette dialog](httpatomoreillycomsourcenostarchimages1455698.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-122. The Smooth Palette dialog
  prefs: []
  type: TYPE_NORMAL
- en: Smooth Palette
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This tool uses the various colors in the current layer to generate a palette
    in the form of a series of color stripes, as shown in [Figure 12-121](ch12s06.html#generated_palette
    "Figure 12-121. The generated palette"). We use it mainly with the Flame filter
    (see [Flame](ch17s13.html#flame "Flame")).
  prefs: []
  type: TYPE_NORMAL
- en: In the dialog shown in [Figure 12-122](ch12s06.html#smooth_palette_dialog "Figure 12-122. The
    Smooth Palette dialog"), the first two parameters set the dimensions of the new
    image for the palette. SEARCH DEPTH [1 to 1024] generates more colors when you
    increase the value.
  prefs: []
  type: TYPE_NORMAL
- en: The Remaining Color Tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The last part of the Colors menu contains six tools that aren’t really related
    but are grouped here. We’ll use the sample image shown in [Figure 12-123](ch12s06.html#sample_image-id00102
    "Figure 12-123. The sample image") to demonstrate the effect of each of these
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: '![The sample image](httpatomoreillycomsourcenostarchimages1455700.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-123. The sample image
  prefs: []
  type: TYPE_NORMAL
- en: '![The Color to Alpha dialog](httpatomoreillycomsourcenostarchimages1455702.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-124. The Color to Alpha dialog
  prefs: []
  type: TYPE_NORMAL
- en: Color to Alpha
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Color to Alpha tool replaces some chosen color with transparency. Its dialog,
    shown in [Figure 12-124](ch12s06.html#color_to_alpha_dialog "Figure 12-124. The
    Color to Alpha dialog"), contains a preview and a button for choosing the color,
    which opens a simplified version of the Color chooser. We chose a color from the
    picture using the eyedropper, and the result appears in [Figure 12-125](ch12s06.html#after_applying_color_to_alpha
    "Figure 12-125. After applying Color to Alpha").
  prefs: []
  type: TYPE_NORMAL
- en: Colorify
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Colorify tool desaturates the image and then colorizes it, as if it were
    a grayscale image seen through colored glass. The Colorify tool actually does
    the same thing as the Colorize tool but with a different user interface. Its dialog,
    shown in [Figure 12-126](ch12s06.html#colorify_dialog "Figure 12-126. The Colorify
    dialog"), contains a preview; a small palette of fully saturated colors; and a
    button for defining a custom color, which opens a simplified version of the Color
    chooser. Choosing a light color is best because darker colors reduce the contrast
    in the image, as demonstrated in [Figure 12-127](ch12s06.html#after_applying_colorify
    "Figure 12-127. After applying Colorify").
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Color to Alpha](httpatomoreillycomsourcenostarchimages1455704.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-125. After applying Color to Alpha
  prefs: []
  type: TYPE_NORMAL
- en: '![The Colorify dialog](httpatomoreillycomsourcenostarchimages1455706.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-126. The Colorify dialog
  prefs: []
  type: TYPE_NORMAL
- en: Filter Pack
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As its name suggests, this entry is actually a collection of tools, called
    *filters*, although they don’t have any specific connection to the collection
    of tools found in the **Image: Filters** menu.'
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Colorify](httpatomoreillycomsourcenostarchimages1455708.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-127. After applying Colorify
  prefs: []
  type: TYPE_NORMAL
- en: '![The Filter Pack dialog](httpatomoreillycomsourcenostarchimages1455710.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-128. The Filter Pack dialog
  prefs: []
  type: TYPE_NORMAL
- en: 'Its dialog, shown in [Figure 12-128](ch12s06.html#filter_pack_dialog "Figure 12-128. The
    Filter Pack dialog"), contains the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: Two previews, before and after the filter. These previews are very small and
    you can’t zoom in, so we often find it useful to first make a small selection
    in the image, work on that selection, invert it, and apply the tool again with
    the same parameters.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![The Hue variations](httpatomoreillycomsourcenostarchimages1455712.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 12-129. The Hue variations
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: SHOW allows you to change what’s shown in the preview. To use the trick just
    described, choose to show only the selection rather than the entire image.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The four checkboxes in WINDOWS open corresponding windows, which are explained
    next.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AFFECTED RANGE works in the same way as in the Color Balance tool (see [Color
    Balance](ch12s05.html#color_balance "Color Balance")).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SELECT PIXELS BY further determines which subrange will be affected by the changes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ROUGHNESS slider [0 to 1] sets the strength of changes made when you click
    a window.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The windows, which open when the corresponding boxes in the Filter Pack dialog
    are checked, each contain a filter linked to the main dialog but offering a unique
    way to edit the image. The four windows are these:'
  prefs: []
  type: TYPE_NORMAL
- en: 'HUE: Its dialog, shown in [Figure 12-129](ch12s06.html#hue_variations "Figure 12-129. The
    Hue variations"), contains seven previews. The center one displays the current
    state of the image. The others correspond to the three RGB colors and their complementary
    colors. Clicking one of the previews adds the corresponding color to the selected
    subrange (set in the Filter Pack dialog) with the current ROUGHNESS. Subtract
    a color by clicking its complementary color.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![The Saturation variations](httpatomoreillycomsourcenostarchimages1455714.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 12-130. The Saturation variations
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![The Value variations](httpatomoreillycomsourcenostarchimages1455716.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 12-131. The Value variations
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![The Advanced Filter Pack Options dialog](httpatomoreillycomsourcenostarchimages1455718.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 12-132. The Advanced Filter Pack Options dialog
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'SATURATION: Its dialog, shown in [Figure 12-130](ch12s06.html#saturation_variations
    "Figure 12-130. The Saturation variations"), contains only three previews, allowing
    you to increase or decrease the saturation in the current subrange.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'VALUE: Its dialog, shown in [Figure 12-131](ch12s06.html#value_variations "Figure 12-131. The
    Value variations"), also contains three previews, allowing you to increase or
    decrease the value in the image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ADVANCED: This checkbox opens the dialog shown in [Figure 12-132](ch12s06.html#advanced_filter_pack_options_dialog
    "Figure 12-132. The Advanced Filter Pack Options dialog"). The PREVIEW SIZE slider
    [50 to 125] allows you to change the size of the preview slightly. The AFFECTED
    RANGE specifies the meaning of Shadows, Midtones, and Highlights. The blue triangle
    allows you to remove the darkest pixels from the affected subrange. You can use
    the two other triangles to define the limits of the three subranges. The shape
    of the curve depends on the range chosen in the main window, on the roughness,
    and on the position of the bottom slider [0 to 1]. This shape represents the intensity
    of the changes that will be made to the image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![The Hot dialog](httpatomoreillycomsourcenostarchimages1455720.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-133. The Hot dialog
  prefs: []
  type: TYPE_NORMAL
- en: Hot
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Hot tool selects pixels that could cause problems when displayed in NTSC
    or PAL video. In its dialog, shown in [Figure 12-133](ch12s06.html#hot_dialog
    "Figure 12-133. The Hot dialog"), you can select the video mode as well as the
    process used to mitigate the potential problem. You can reduce luminance or saturation
    or blacken the pixels. By default, the changes made with this tool are done on
    an additional, transparent layer.
  prefs: []
  type: TYPE_NORMAL
- en: Maximum RGB
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Maximum RGB tool keeps only the RGB component with the maximum (or minimum)
    value. This explains why in its dialog, shown in [Figure 12-134](ch12s06.html#maximum_rgb_dialog
    "Figure 12-134. The Maximum RGB dialog"), the preview shows an image that’s mainly
    red, except for the eyes, which are blue. If we choose the minimal channels, the
    result is mainly blue, except for the eyes, which are now red.
  prefs: []
  type: TYPE_NORMAL
- en: Retinex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Retinex algorithms are designed to mimic the dynamics of human vision, making
    images viewed on a screen appear more realistic. The human eye distinguishes colors
    even in poor or colored lighting. The Retinex tool uses the MSRCR algorithm, which
    is used in digital photography or for processing astronomical and medical photographs.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Maximum RGB dialog](httpatomoreillycomsourcenostarchimages1455722.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-134. The Maximum RGB dialog
  prefs: []
  type: TYPE_NORMAL
- en: The options in its [Figure 12-135](ch12s06.html#retinex_dialog "Figure 12-135. The
    Retinex dialog"), assume that the user has some knowledge of the mathematics of
    the Retinex MSRCR algorithm. Those who don’t possess the required knowledge can
    simply fiddle with the options and sliders until the result is appealing. An example
    is shown in [Figure 12-136](ch12s06.html#after_applying_retinex "Figure 12-136. After
    applying Retinex").
  prefs: []
  type: TYPE_NORMAL
- en: '![The Retinex dialog](httpatomoreillycomsourcenostarchimages1455724.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-135. The Retinex dialog
  prefs: []
  type: TYPE_NORMAL
- en: '![After applying Retinex](httpatomoreillycomsourcenostarchimages1455726.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12-136. After applying Retinex
  prefs: []
  type: TYPE_NORMAL
