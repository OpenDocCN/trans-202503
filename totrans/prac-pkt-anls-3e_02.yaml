- en: '**2**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**2**'
- en: '**TAPPING INTO THE WIRE**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**接入网络线路**'
- en: '![image](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common.jpg)'
- en: A key decision for effective packet analysis is where to physically position
    a packet sniffer to appropriately capture the data. Packet analysts often refer
    to placing the packet sniffer as *sniffing the wire*, *tapping the network*, or
    *tapping into the wire*.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于有效的数据包分析来说，关键决策之一是将数据包嗅探器物理放置在哪个位置，以便适当地捕获数据。数据包分析员通常称将数据包嗅探器放置到网络中为*嗅探线路*、*接入网络*或*接入网络线路*。
- en: Unfortunately, sniffing packets isn’t as simple as plugging a laptop into a
    network port and capturing traffic. In fact, it’s sometimes more difficult to
    place a packet sniffer on a network than it is to actually analyze the packets.
    Sniffer placement is challenging because devices can be connected using a large
    variety of networking hardware. [Figure 2-1](ch02.xhtml#ch02fig1) illustrates
    a typical situation. Because the devices on a modern network (switches and routers)
    each handle traffic differently, you must take into account the physical setup
    of the network you are analyzing.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，嗅探数据包并不像将笔记本电脑插入网络端口并捕获流量那么简单。实际上，有时将数据包嗅探器放置到网络上，比实际分析数据包还要困难。嗅探器的放置具有挑战性，因为设备可以通过多种不同的网络硬件进行连接。[图
    2-1](ch02.xhtml#ch02fig1)展示了一个典型情况。由于现代网络中的设备（交换机和路由器）对流量的处理方式不同，因此在分析网络时，必须考虑到网络的物理布局。
- en: The goal of this chapter is to help you develop an understanding of packet sniffer
    placement in a variety of different network topologies. But first, let’s look
    at how we’re able to see all the packets that cross the wire we’re tapping into.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是帮助你理解在不同网络拓扑中放置数据包嗅探器的方式。但首先，让我们来看看我们是如何看到所有穿越我们接入的网络线路的数据包的。
- en: '![image](../images/f18-01.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f18-01.jpg)'
- en: '*Figure 2-1: Placing your sniffer on the network can be challenging when there
    are many connections, and getting the data you want can be tricky.*'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-1：当网络连接较多时，放置嗅探器在网络上可能会具有挑战性，获取所需的数据也可能变得棘手。*'
- en: '**Living Promiscuously**'
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**肆意生活**'
- en: Before you can sniff packets on a network, you need a network interface card
    (NIC) that supports a promiscuous mode driver. *Promiscuous mode* is what allows
    a NIC to view all packets crossing the wire.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在你能够嗅探网络上的数据包之前，你需要一张支持混杂模式驱动程序的网络接口卡（NIC）。*混杂模式*允许 NIC 查看所有穿越线路的数据包。
- en: As you learned in [Chapter 1](ch01.xhtml#ch01), with network broadcast traffic,
    it’s common for devices to receive packets that are not actually destined for
    them. For example, the Address Resolution Protocol (ARP), a crucial fixture on
    any network that we’ll examine in depth in [Chapter 7](ch07.xhtml#ch07), is used
    to determine which MAC address corresponds to a particular IP address. To find
    the matching MAC address, a device sends an ARP broadcast packet to every device
    on its broadcast domain in hopes that the correct one will respond.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在[第一章](ch01.xhtml#ch01)中学到的那样，在网络广播流量中，设备通常会接收到并非专门发送给它们的数据包。例如，地址解析协议（ARP）是任何网络中至关重要的协议，我们将在[第七章](ch07.xhtml#ch07)中深入探讨，它用于确定哪个
    MAC 地址与特定的 IP 地址相对应。为了找到匹配的 MAC 地址，设备会向其广播域中的所有设备发送 ARP 广播数据包，希望正确的设备能够响应。
- en: A broadcast domain (the network segment where any computer can directly transmit
    to another computer without going through a router) can consist of several devices,
    but only the correct recipient device on that domain should be interested in the
    ARP broadcast packet that’s transmitted. It would be terribly inefficient for
    every device on the network to process the ARP broadcast packet. Instead, if the
    packet is not destined for the device and therefore isn’t useful to it, the device’s
    NIC discards the packet rather than passing it to the CPU for processing.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 广播域（任何计算机可以直接向另一台计算机发送数据包而不通过路由器的网络段）可以由多台设备组成，但只有广播域中正确的接收设备应该对所传输的 ARP 广播数据包感兴趣。如果网络上的每一台设备都处理
    ARP 广播数据包，那将是极其低效的。相反，如果数据包不是面向该设备并且因此对它没有用，设备的 NIC 会丢弃该数据包，而不是将其传递给 CPU 进行处理。
- en: Discarding packets not destined for the receiving host improves processing efficiency,
    but it’s not so great for packet analysts. As analysts, we typically want to capture
    *every* packet sent across the wire so we don’t risk missing some crucial piece
    of information.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 丢弃不面向接收主机的数据包可以提高处理效率，但这对数据包分析员来说并不是那么理想。作为分析员，我们通常希望捕获通过网络传输的*每个*数据包，以免错过一些关键信息。
- en: We can ensure we capture all of the traffic by using the NIC’s promiscuous mode.
    When operating in promiscuous mode, the NIC passes every packet it sees to the
    host’s processor, regardless of addressing. Once the packet makes it to the CPU,
    a packet-sniffing application can grab it for analysis.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用网卡的混杂模式来确保捕获所有流量。在混杂模式下，网卡会将它看到的每个数据包都传递给主机的处理器，无论地址如何。一旦数据包到达 CPU，数据包嗅探应用程序就可以将其抓取进行分析。
- en: Most modern NICs support promiscuous mode, and Wireshark includes the libpcap/WinPcap
    driver, which allows it to switch your NIC directly into promiscuous mode from
    the Wireshark GUI. (We’ll talk more about libpcap/WinPcap in [Chapter 3](ch03.xhtml#ch03).)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现代网卡都支持混杂模式，而 Wireshark 包含 libpcap/WinPcap 驱动程序，允许它通过 Wireshark GUI 将网卡直接切换到混杂模式。（我们将在[第
    3 章](ch03.xhtml#ch03)中详细讨论 libpcap/WinPcap。）
- en: For the purposes of this book, you must have a NIC and an operating system that
    support the use of promiscuous mode. The only time you don’t need to sniff in
    promiscuous mode is when you want to see only the traffic sent directly to the
    MAC address of the interface from which you are sniffing.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本书要求你必须拥有支持使用混杂模式的网卡和操作系统。唯一不需要在混杂模式下嗅探的情况是，当你只想查看直接发送到你嗅探的接口的 MAC 地址的流量时。
- en: '**NOTE**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Most operating systems (including Windows) will not let you use a NIC in promiscuous
    mode unless you have elevated user privileges. If you can’t legally obtain these
    privileges on a system, chances are that you shouldn’t be performing any type
    of packet sniffing on that particular network.*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*大多数操作系统（包括 Windows）不会允许你在没有提升用户权限的情况下使用网卡的混杂模式。如果你无法合法地获得这些权限，那么你很可能不应该在该网络上进行任何类型的数据包嗅探。*'
- en: '**Sniffing Around Hubs**'
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**嗅探集线器网络**'
- en: Sniffing on a network that has hubs installed is a dream for any packet analyst.
    As you learned in [Chapter 1](ch01.xhtml#ch01), traffic sent through a hub goes
    through every port connected to that hub. Therefore, to analyze the traffic running
    through a computer connected to a hub, all you need to do is connect a packet
    sniffer to an empty port on the hub. You’ll be able to see all communication to
    and from that computer, as well as all communication between any other devices
    plugged into that hub. As illustrated in [Figure 2-2](ch02.xhtml#ch02fig2), your
    visibility window is limitless when your sniffer is connected to a hub-based network.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装了集线器的网络上进行嗅探是任何数据包分析师的梦想。正如你在[第 1 章](ch01.xhtml#ch01)中学到的那样，集线器传输的流量会通过连接到该集线器的每个端口。因此，要分析通过连接到集线器的计算机的流量，你只需将数据包嗅探器连接到集线器上的空闲端口即可。你将能够看到该计算机的所有通信，以及连接到该集线器的任何其他设备之间的所有通信。如[图
    2-2](ch02.xhtml#ch02fig2)所示，当你的嗅探器连接到集线器网络时，您的可视窗口是无限的。
- en: '![image](../images/f19-01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f19-01.jpg)'
- en: '*Figure 2-2: Sniffing on a hub network provides a limitless visibility window.*'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-2：在集线器网络上嗅探提供了一个无限的可视窗口。*'
- en: '**NOTE**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*The* visibility window, *as shown in various diagrams throughout this book,
    represents the devices on the network whose traffic you can see with a packet
    sniffer.*'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*如本书各个图表中所示，*可视窗口*表示网络上你可以用数据包嗅探工具看到流量的设备。*'
- en: Unfortunately for us, hub-based networks are rare because of the headaches they
    cause network administrators. Since only one device can communicate through a
    hub at any one time, a connected device must compete for bandwidth with all the
    other devices trying to communicate. When two or more devices communicate at the
    same time, packets collide, as shown in [Figure 2-3](ch02.xhtml#ch02fig3). The
    result may be packet loss, and the communicating devices may compensate for that
    loss by retransmitting packets, increasing network congestion. As the level of
    traffic and number of collisions increase, devices may need to transmit a packet
    three or four times, and network performance decreases dramatically. It’s therefore
    easy to understand why most modern networks of any size use switches. Although
    you’ll rarely find hubs in use on modern networks, you’ll occasionally run into
    them on networks that support legacy hardware or specialized devices, such as
    industrial control system (ICS) networks.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对我们来说，不幸的是，基于集线器的网络已经很少见，因为它们给网络管理员带来了很多麻烦。由于在任何时候只有一个设备可以通过集线器进行通信，连接的设备必须与所有其他试图通信的设备竞争带宽。当两个或更多设备同时通信时，数据包会发生冲突，如[图
    2-3](ch02.xhtml#ch02fig3)所示。结果可能是数据包丢失，通信设备可能会通过重新传输数据包来补偿丢失，从而增加网络拥塞。随着流量和冲突次数的增加，设备可能需要传输数据包三到四次，网络性能会显著下降。因此，很容易理解为什么大多数现代网络都使用交换机。虽然在现代网络中很少见到集线器，但在支持旧版硬件或特殊设备的网络中，例如工业控制系统（ICS）网络中，偶尔会遇到它们。
- en: '![image](../images/f20-01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f20-01.jpg)'
- en: '*Figure 2-3: Collisions occur on a hub network when two or more devices transmit
    at the same time.*'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-3：当两个或更多设备同时发送数据时，集线器网络会发生数据包冲突。*'
- en: The easiest way to identify whether a hub is in use in a network is to lay eyes
    on the server room or networking closet. Most hubs are labeled as such. When all
    else fails, just look in the darkest corner of the server closet for the network
    hardware with a few inches of dust on it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 识别网络中是否使用集线器的最简单方法是查看服务器机房或网络机柜。大多数集线器上都会有标签。如果一切都失败了，只需在服务器机柜的最暗角落寻找那些布满几英寸灰尘的网络硬件。
- en: '**Sniffing in a Switched Environment**'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**在交换环境中的嗅探**'
- en: Switches are the most common type of connection device used in modern networks.
    They provide an efficient way to transport data via broadcast, unicast, and multicast
    traffic. Switches allow full-duplex communication, meaning that machines can send
    and receive data simultaneously.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 交换机是现代网络中最常用的连接设备。它们通过广播、单播和多播流量提供高效的数据传输方式。交换机支持全双工通信，这意味着设备可以同时发送和接收数据。
- en: Unfortunately for packet analysts, switches add complexity. When you connect
    a sniffer to a port on a switch, you can see only broadcast traffic and the traffic
    transmitted and received by the device the sniffer is installed on, as shown in
    [Figure 2-4](ch02.xhtml#ch02fig4). To capture traffic from a target device on
    a switched network, you need to take an additional step.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对数据包分析师来说，不幸的是，交换机增加了复杂性。当你将嗅探器连接到交换机的端口时，你只能看到广播流量以及嗅探器所在设备发送和接收的流量，如[图 2-4](ch02.xhtml#ch02fig4)所示。为了捕获交换网络中目标设备的流量，你需要采取额外的步骤。
- en: '![image](../images/f21-01.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f21-01.jpg)'
- en: '*Figure 2-4: The visibility window on a switched network is limited to the
    port you are plugged into.*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-4：在交换网络中，能看到的流量窗口仅限于你连接的端口。*'
- en: 'There are four primary ways to capture this traffic: port mirroring, hubbing
    out, using a tap, and ARP cache poisoning.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获这些流量的四种主要方法是：端口镜像、集线器连接、使用网络采集器（tap）和ARP缓存中毒。
- en: '***Port Mirroring***'
  id: totrans-34
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***端口镜像***'
- en: '*Port mirroring*, or *port spanning*, is perhaps the easiest way to capture
    the traffic from a target device on a switched network. In this type of setup,
    you must have access to the command line or web management interface of the switch
    on which the target computer is located. Also, the switch must support port mirroring
    and have an empty port into which you can plug your sniffer.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*端口镜像*，或称*端口跨越*，可能是捕获交换网络中目标设备流量的最简单方法。在这种设置中，你必须能够访问目标计算机所在交换机的命令行或网页管理界面。此外，交换机必须支持端口镜像并且具有一个空闲端口，以便你可以连接你的嗅探器。'
- en: To enable port mirroring, you issue a command that forces the switch to copy
    all traffic on one port to another port. For instance, to capture all the traffic
    transmitted and received from a device on port 3 of a switch, you could plug your
    analyzer into port 4 and mirror port 3 to port 4\. [Figure 2-5](ch02.xhtml#ch02fig5)
    illustrates port mirroring.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用端口镜像，你需要发出一个命令，强制交换机将一个端口上的所有流量复制到另一个端口。例如，为了捕获从交换机的端口 3 发送和接收的所有流量，你可以将分析仪插入端口
    4，并将端口 3 镜像到端口 4。[图 2-5](ch02.xhtml#ch02fig5)展示了端口镜像的情况。
- en: '![image](../images/f21-02.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f21-02.jpg)'
- en: '*Figure 2-5: Port mirroring allows you to expand your visibility window on
    a switched network.*'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-5：端口镜像允许你扩展交换网络中的可视窗口。*'
- en: How you set up port mirroring depends on the manufacturer of your switch. For
    most enterprise switches, you’ll need to log in to a command line interface and
    configure port mirroring using a specific command. You’ll find a list of example
    port-mirroring commands in [Table 2-1](ch02.xhtml#ch02tab1).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 设置端口镜像的方式取决于交换机的制造商。对于大多数企业级交换机，你需要登录到命令行界面，并使用特定命令配置端口镜像。你可以在[表 2-1](ch02.xhtml#ch02tab1)中找到一些示例的端口镜像命令。
- en: '**Table 2-1:** Commands Used to Enable Port Mirroring'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 2-1：** 启用端口镜像的命令'
- en: '| **Manufacturer** | **Command** |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| **制造商** | **命令** |'
- en: '| --- | --- |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Cisco | `set span <`source port`> <`destination port`>` |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| Cisco | `set span <`source port`> <`destination port`>` |'
- en: '| Enterasys | `set port mirroring create <`source port`> <`destination port`>`
    |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| Enterasys | `set port mirroring create <`source port`> <`destination port`>`
    |'
- en: '| Nortel | `port-mirroring mode mirror-port <`source port`> monitor-port <`destination
    port`>` |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| Nortel | `port-mirroring mode mirror-port <`source port`> monitor-port <`destination
    port`>` |'
- en: '**NOTE**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Some enterprise switches provide web-based GUIs that offer port mirroring
    as an option, but these aren’t common and aren’t standardized. However, if your
    switch provides an effective way to configure port mirroring through a GUI, by
    all means use it. Additionally, more small office and home office (SOHO) switches
    are beginning to provide port-mirroring capabilities, and those are typically
    configured with a GUI.*'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*一些企业交换机提供基于 Web 的 GUI，提供端口镜像作为选项，但这些并不常见，且没有统一标准。然而，如果你的交换机提供了通过 GUI 配置端口镜像的有效方式，当然可以使用它。另外，更多的小型办公室和家庭办公室（SOHO）交换机开始提供端口镜像功能，通常是通过
    GUI 配置的。*'
- en: When port mirroring, be aware of the throughput of the ports you are mirroring.
    Some switch manufacturers allow you to mirror multiple ports to one port, functionality
    that may be useful when analyzing the communication between two or more devices
    on a single switch. However, let’s consider what can happen using some basic math.
    If you have a 24-port switch and you mirror 23 full-duplex 100Mbps ports to one
    port, you have potentially 4,600Mbps flowing to that port. This is well beyond
    the physical threshold of a single port, so you could cause packet loss or network
    slowdowns if the traffic reaches a certain level. This is sometimes referred to
    as oversubscription. In these situations, switches have been known to completely
    drop excess packets or even “pause” their internal circuitry, preventing communication
    altogether. Be sure that you don’t cause such problems when performing your capture.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行端口镜像时，注意你正在镜像的端口的吞吐量。一些交换机制造商允许将多个端口镜像到一个端口，这在分析单个交换机上两个或更多设备之间的通信时可能非常有用。然而，让我们通过一些基本的数学来考虑可能发生的情况。如果你有一台
    24 个端口的交换机，并将 23 个全双工 100Mbps 端口镜像到一个端口，那么这个端口的流量可能高达 4600Mbps。这远远超过了单个端口的物理阈值，因此，如果流量达到一定水平，可能会导致丢包或网络延迟。这种情况有时被称为超额订阅。在这些情况下，交换机可能会完全丢弃多余的包，甚至“暂停”其内部电路，导致通信中断。在进行捕获时，务必确保不会引发此类问题。
- en: Port mirroring may seem like an attractive, low-cost solution for enterprise
    networks and scenarios in which you need to consistently monitor specific network
    segments, such as in network security monitoring. However, this technique is usually
    not reliable enough for such an application. Especially at high throughput levels,
    port mirroring can provide inconsistent results and cause data loss that can be
    hard to track down. For such scenarios, you are advised to use a tap, discussed
    in “Using a Tap” on [page 24](ch02.xhtml#page_24).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 端口镜像可能看起来是一个有吸引力的低成本解决方案，适用于需要持续监控特定网络段的企业网络和场景，例如在网络安全监控中。然而，这种技术通常不足以在此类应用中提供足够的可靠性，尤其是在高吞吐量的情况下，端口镜像可能会提供不一致的结果，并导致数据丢失，难以追踪。在这种情况下，建议使用“使用
    TAP”中讨论的 TAP，详见[第 24 页](ch02.xhtml#page_24)。
- en: '***Hubbing Out***'
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***通过集线器隔离***'
- en: Another way to capture the traffic through a target device on a switched network
    is by *hubbing out*. With this technique, you place the target device and your
    analyzer system on the same network segment by plugging them both directly into
    a hub. Many people think of hubbing out as “cheating,” but it’s really a valid
    solution when you can’t perform port mirroring but still have physical access
    to the switch the target device is plugged into.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获通过目标设备的流量的另一种方法是在交换网络中使用*集线器隔离*。通过这种技术，你可以将目标设备和分析仪系统直接插入集线器，将它们放置在同一网络段。许多人将集线器隔离视为“作弊”，但当你无法执行端口镜像，并且仍能物理接触目标设备连接的交换机时，这实际上是一个有效的解决方案。
- en: 'To hub out, all you need is a hub and a few network cables. Once you have your
    hardware, connect it as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行集线器隔离，你只需要一个集线器和几根网络电缆。得到硬件后，按以下方式连接：
- en: Find the switch the target device resides on and unplug the target from the
    network.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到目标设备所在的交换机并将目标设备从网络中拔掉。
- en: Plug the target’s network cable into your hub.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将目标设备的网络线插入到集线器中。
- en: Plug in another cable that connects your analyzer to the hub.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入另一条连接分析仪与集线器的电缆。
- en: Plug in a network cable from your hub to the network switch to connect the hub
    to the network.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一根网络电缆从集线器插入到网络交换机，以将集线器连接到网络。
- en: Now you have put the target device and your analyzer in the same broadcast domain,
    and all traffic from your target device will be broadcast so that the analyzer
    can capture those packets, as illustrated in [Figure 2-6](ch02.xhtml#ch02fig6).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经将目标设备和分析仪放在同一广播域中，所有来自目标设备的流量将被广播，以便分析仪能够捕获这些数据包，如[图2-6](ch02.xhtml#ch02fig6)所示。
- en: '![image](../images/f23-01.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f23-01.jpg)'
- en: '*Figure 2-6: Hubbing out isolates your target device and analyzer.*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2-6：通过集线器隔离了目标设备和分析仪。*'
- en: In most situations, hubbing out reduces the duplex of the target device from
    full (bi-directional) to half (one-directional). While this method isn’t the cleanest
    way to capture packets, it’s sometimes your only option when a switch doesn’t
    support port mirroring. But keep in mind that your hub will also require a power
    connection, which can be difficult to find.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，通过集线器隔离会将目标设备的双工模式从全双工（双向）减少到半双工（单向）。虽然这种方法不是捕获数据包最干净的方式，但当交换机不支持端口镜像时，有时它是你唯一的选择。但请记住，你的集线器也需要电源连接，而这可能很难找到。
- en: '**NOTE**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*As a reminder, it is usually a nice gesture to alert the user of the device
    that you will be unplugging it, especially if that user happens to be the company
    CEO!*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*提醒一下，通常在拔掉设备前通知设备的用户是一个很好的举动，特别是当该用户恰好是公司的CEO时！*'
- en: '**FINDING “TRUE” HUBS**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**找到“真正的”集线器**'
- en: When hubbing out, be sure that you’re using a true hub and not a falsely labeled
    switch. Several networking hardware vendors have a bad habit of marketing and
    selling a device as a “hub” when it actually functions as a low-level switch.
    If you aren’t working with a proven, tested hub, you’ll see only your own traffic,
    not that of the target device.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行集线器隔离时，确保你使用的是一个真正的集线器，而不是错误标记的交换机。许多网络硬件供应商有一个坏习惯，将一种低级交换机标记并销售为“集线器”。如果你没有使用经过验证的集线器，你只会看到你自己的流量，而看不到目标设备的流量。
- en: When you find something you believe is a hub, test it to make sure. The best
    way to determine whether a device is a true hub is to hook up a pair of computers
    to it and see whether one computer can sniff traffic between the other computer
    and various other devices on the network, such as another computer or a printer.
    If so, you’ve got a keeper!
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当你找到一个你认为是集线器的设备时，测试它以确保其功能。确定设备是否为真正集线器的最佳方法是将一对计算机连接到该设备，看看是否其中一台计算机能够嗅探到另一台计算机与网络上其他设备（如另一台计算机或打印机）之间的流量。如果能，你就找到了一个可靠的设备！
- en: Since hubs are so antiquated, they’re not mass-produced much anymore. It’s almost
    impossible to buy a true hub off the shelf, so you’ll need to be creative in order
    to find one. A great source is often a surplus auction held by your local school
    district. Public schools are required to attempt to auction surplus items before
    disposing of them, and they often have older hardware sitting around. I’ve seen
    people walk away from auctions with several hubs for less than the cost of a plate
    of white beans and cornbread. Alternatively, eBay can be a good source of hubs,
    but be wary, as you may run into the same issue with mislabeled switches.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由于集线器（hubs）已经过时，现在几乎不再大规模生产了。几乎不可能在市面上买到真正的集线器，所以你需要发挥创造力才能找到一个。一个很好的来源通常是你当地学区举行的
    surplus 拍卖。公立学校在处理剩余物品前必须尝试拍卖这些物品，它们通常会有一些旧硬件堆放在一旁。我见过有人在拍卖会上以低于一盘白豆和玉米面包的价格买到好几个集线器。或者，eBay也是一个不错的集线器来源，但要小心，因为你可能会碰到标错的交换机。
- en: '***Using a Tap***'
  id: totrans-67
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用Tap***'
- en: Everybody knows the expression “Why have chicken when you could have steak?”
    (Or, if you are from the South, “Why have liver loaf when you could have fried
    bologna?”) This choice also applies to hubbing out versus using a tap.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 大家都知道“为什么吃鸡肉，而你可以吃牛排？”（或者，如果你来自南方，“为什么吃肝酱，而你可以吃炸香肠？”）这种选择同样适用于集线器与使用tap之间的对比。
- en: A network *tap* is a hardware device that you can place between two points on
    your cabling system to capture the packets between those two points. As with hubbing
    out, you place a piece of hardware on the network that allows you to capture the
    packets you need. The difference is that rather than using a hub, you use a specialized
    piece of hardware designed for network analysis.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 网络*tap*是一种硬件设备，你可以将其放置在电缆系统的两个点之间，以捕获这两个点之间的数据包。与集线器（hubbing out）类似，你需要在网络中放置一台硬件设备，允许你捕获所需的数据包。不同之处在于，你不是使用集线器，而是使用一种专门为网络分析设计的硬件设备。
- en: 'There are two primary types of network taps: *aggregated* and *nonaggregated*.
    Both types of taps sit between two devices in order to sniff the communications.
    The primary difference between an aggregated tap and a nonaggregated tap is that
    the nonaggregated tap has four ports, as shown in [Figure 2-7](ch02.xhtml#ch02fig7),
    and requires separate interfaces for monitoring traffic bidirectionally, while
    the aggregated tap has only three ports and can monitor bidirectionally with only
    a single interface.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 网络tap主要有两种类型：*聚合型*和*非聚合型*。这两种类型的tap都位于两台设备之间，用于嗅探通信。聚合型tap与非聚合型tap的主要区别在于，非聚合型tap有四个端口，如[图2-7](ch02.xhtml#ch02fig7)所示，需要独立的接口来监控双向流量，而聚合型tap只有三个端口，只需一个接口即可进行双向流量监控。
- en: '![image](../images/f24-01.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f24-01.jpg)'
- en: '*Figure 2-7: A Barracuda non-aggregated tap*'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2-7：一款Barracuda非聚合型tap*'
- en: Taps also typically require a power connection, although some include batteries
    that allow brief stints of packet sniffing.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Tap通常需要一个电源连接，尽管有些tap内置电池，允许进行短时间的数据包嗅探。
- en: '**Aggregated Taps**'
  id: totrans-74
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**聚合型Tap**'
- en: The aggregated tap is the simplest to use. It has only one physical monitor
    port for sniffing bidirectional traffic.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合型tap是最简单的使用方式。它只有一个物理监控端口，适用于双向流量嗅探。
- en: 'To capture all traffic to and from a single computer plugged into a switch
    using an aggregated tap, follow these steps:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 若要捕获从插入交换机的单台计算机的所有流量，请按照以下步骤操作：
- en: Unplug the computer from the switch.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从交换机上拔下计算机。
- en: Plug one end of a network cable into the computer and plug the other end into
    the tap’s “in” port.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一端的网络电缆插入计算机，另一端插入tap的“in”端口。
- en: Plug one end of another network cable into the tap’s “out” port and plug the
    other end into the network switch.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将另一端的网络电缆插入tap的“out”端口，另一端插入网络交换机。
- en: Plug one end of a final cable into the tap’s “monitor” port and plug the other
    end into the computer that is acting as your sniffer.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一端的电缆插入tap的“monitor”端口，另一端插入作为嗅探器的计算机。
- en: The aggregated tap should be connected as shown in [Figure 2-8](ch02.xhtml#ch02fig8).
    At this point, your sniffer should be capturing all traffic in and out of the
    computer you’ve plugged into the tap.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合型tap应按照[图2-8](ch02.xhtml#ch02fig8)所示进行连接。此时，你的嗅探器应该已经捕获了所有进出你插入tap的计算机的流量。
- en: '![image](../images/f25-01.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f25-01.jpg)'
- en: '*Figure 2-8: Using an aggregated tap to intercept network traffic*'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2-8：使用聚合tap拦截网络流量*'
- en: '**Nonaggregated Taps**'
  id: totrans-84
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**非聚合型Tap**'
- en: The nonaggregated tap is slightly more complex than the aggregated type, but
    it allows a bit more flexibility when capturing traffic. Instead of having a single
    monitor port that can be used to listen to bidirectional communication, the nonaggregated
    type has two monitor ports. One monitor port is used for sniffing traffic in one
    direction (from the computer connected to the tap), and the other monitor port
    is used for sniffing traffic in the other direction (to the computer connected
    to the tap).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 非聚合tap比聚合类型稍微复杂一些，但在捕获流量时提供了更多的灵活性。与聚合tap只有一个可用于监听双向通信的监视端口不同，非聚合tap具有两个监视端口。一个监视端口用于嗅探来自连接到tap的计算机的单向流量，另一个监视端口用于嗅探流向连接到tap的计算机的单向流量。
- en: 'To capture all traffic to and from a single computer plugged into a switch,
    follow these steps:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要捕获所有流入和流出单台计算机的流量，请按照以下步骤操作：
- en: Unplug the computer from the switch.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将计算机从交换机上拔掉。
- en: Plug one end of a network cable into the computer and plug the other end into
    the tap’s “in” port.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一根网线的一端插入计算机，另一端插入tap的“in”端口。
- en: Plug one end of another network cable into the tap’s “out” port and plug the
    other end into the network switch.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将另一根网线的一端插入到tap的“out”端口，另一端插入到网络交换机中。
- en: Plug one end of a third network cable into the tap’s “monitor A” port and plug
    the other end into one NIC on the computer that is acting as your sniffer.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将第三根网线的一端插入到tap的“monitor A”端口，另一端插入到充当嗅探器的计算机的一个NIC端口。
- en: Plug one end of a final cable into the tap’s “monitor B” port and plug the other
    end into a second NIC on the computer that is acting as your sniffer.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一根网线的一端插入到tap的“monitor B”端口，另一端插入到充当嗅探器的计算机的第二个NIC端口。
- en: The nonaggregated tap should be connected as shown in [Figure 2-9](ch02.xhtml#ch02fig9).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 非聚合tap应按照[图 2-9](ch02.xhtml#ch02fig9)所示的方式连接。
- en: '![image](../images/f26-01.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f26-01.jpg)'
- en: '*Figure 2-9: Using a nonaggregated tap to intercept network traffic*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-9：使用非聚合tap拦截网络流量*'
- en: While these examples may make it appear as though you can monitor only a single
    device using a tap, you can actually monitor many devices by getting creative
    with your placement of the tap. For example, if you wanted to monitor all the
    communication between an entire network segment and the Internet, you could place
    the tap between the switch to which all of the other devices are connected and
    the network’s upstream router. This placement at a network choke point lets you
    collect the traffic you desire. This strategy is commonly used in security monitoring.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些示例可能让你觉得只能通过tap监控单个设备，但实际上通过巧妙地放置tap，你可以监控多个设备。例如，如果你想监控整个网络段与互联网之间的所有通信，可以将tap放置在连接所有其他设备的交换机与网络上游路由器之间。将tap放置在网络瓶颈点可以让你收集所需的流量。这种策略在安全监控中很常见。
- en: '**Choosing a Network Tap**'
  id: totrans-96
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**选择网络tap**'
- en: Which type of tap is better? In most situations, aggregated taps are preferred
    because they require less cabling and don’t need two NICs on your sniffer computer.
    However, if you need to capture a high volume of traffic or care about traffic
    going in only one direction, a nonaggregated tap is a better choice.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 哪种类型的tap更好？在大多数情况下，聚合tap更受欢迎，因为它们需要较少的布线，并且不需要在嗅探计算机上安装两个NIC。然而，如果你需要捕获大量流量或只关心单向流量，非聚合tap则是更好的选择。
- en: You can purchase taps of all sizes, ranging from simple Ethernet taps that run
    about $150 to enterprise-grade fiber optic taps in the six-figure range. I’ve
    used enterprise-grade taps from Ixia (formerly Net Optics), Dualcomm, and Fluke
    Networks and have been very happy with them, but there are many other great taps
    available as well. If you’re using a tap for an enterprise application, you’ll
    want to be sure the tap has fail-open capability. This means that if the tap malfunctions
    or dies, packets will still pass through it and network connectivity for the tapped
    link won’t be interrupted.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以购买各种大小的tap，从简单的以太网tap（大约150美元）到企业级光纤tap（价格达到六位数）。我曾使用过Ixia（前身为Net Optics）、Dualcomm和Fluke
    Networks的企业级tap，效果非常好，但市场上也有许多其他优秀的tap。如果你在企业应用中使用tap，你需要确保tap具备故障开放功能。这意味着，如果tap发生故障或失效，数据包仍然会通过tap传输，且连接到tap的网络链路不会中断。
- en: '***ARP Cache Poisoning***'
  id: totrans-99
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***ARP缓存中毒***'
- en: One of my favorite techniques for tapping into the wire is ARP cache poisoning.
    We’ll cover the ARP protocol in detail in [Chapter 7](ch07.xhtml#ch07), but a
    brief explanation is necessary here so you can understand how this technique works.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢的窃听技术之一就是 ARP 缓存中毒。我们将在[第 7 章](ch07.xhtml#ch07)中详细讨论 ARP 协议，但在这里简要说明一下，以便你理解这种技术是如何工作的。
- en: '**The ARP Process**'
  id: totrans-101
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**ARP 过程**'
- en: Recall from [Chapter 1](ch01.xhtml#ch01) that the two main types of packet addressing
    are at layers 2 and 3 of the OSI model. These layer 2 addresses, or MAC addresses,
    are used in conjunction with whichever layer 3 addressing system you are using.
    In this book, in accordance with industry-standard terminology, I refer to the
    layer 3 addressing system as the *IP addressing system*.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾[第一章](ch01.xhtml#ch01)，OSI 模型的第 2 层和第 3 层是两种主要的包地址类型。这些第 2 层地址，或称 MAC 地址，与您使用的任何第
    3 层地址系统一起使用。在本书中，按照行业标准术语，我将第 3 层地址系统称为*IP 地址系统*。
- en: All devices on a network communicate with each other on layer 3 using IP addresses.
    Because switches operate on layer 2 of the OSI model, they are cognizant of only
    layer 2 MAC addresses, so devices must be able to include this information in
    packets they construct. When a MAC address is not known, it must be obtained using
    the known layer 3 IP addresses so traffic can be forwarded to the appropriate
    device. This translation process is done through the layer 2 protocol ARP.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 网络上的所有设备都使用 IP 地址在第 3 层进行通信。由于交换机在 OSI 模型的第 2 层工作，它们只关心第 2 层的 MAC 地址，因此设备必须能够在构造的数据包中包含这些信息。当
    MAC 地址未知时，必须通过已知的第 3 层 IP 地址获取，以便将流量转发到适当的设备。这一翻译过程是通过第 2 层协议 ARP 完成的。
- en: The ARP process, for computers connected to Ethernet networks, begins when one
    computer wishes to communicate with another. The transmitting computer first checks
    its ARP cache to see whether it already has the MAC address associated with the
    IP address of the destination computer. If it does not, it sends an ARP request
    to the data link layer broadcast address ff:ff:ff:ff:ff:ff, as discussed in [Chapter
    1](ch01.xhtml#ch01). This broadcast packet is received by every computer on that
    particular Ethernet segment. The packet basically asks, “Which IP address owns
    the *xx:xx:xx:xx:xx:xx* MAC address?”
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 对于连接到以太网网络的计算机，ARP 过程在一台计算机希望与另一台计算机通信时开始。发送计算机首先检查其 ARP 缓存，看看是否已经拥有与目标计算机的
    IP 地址相关联的 MAC 地址。如果没有，它会发送一个 ARP 请求到数据链路层的广播地址 ff:ff:ff:ff:ff:ff，如[第一章](ch01.xhtml#ch01)所讨论的那样。这个广播包会被该特定以太网段上的每台计算机接收。该包基本上是在询问：“哪个
    IP 地址拥有 *xx:xx:xx:xx:xx:xx* MAC 地址？”
- en: Devices without the destination computer’s IP address simply discard this ARP
    request. The destination machine replies to the packet with its MAC address via
    an ARP reply. At this point, the original transmitting computer now has the data
    link layer addressing information it needs to communicate with the remote computer,
    and it stores that information in its ARP cache for fast retrieval.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 没有目标计算机 IP 地址的设备会直接丢弃这个 ARP 请求。目标计算机通过 ARP 回复包回复其 MAC 地址。此时，原始发送计算机现在拥有了与远程计算机通信所需的数据链路层地址信息，并将这些信息存储在其
    ARP 缓存中，以便快速检索。
- en: '**How ARP Cache Poisoning Works**'
  id: totrans-106
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**ARP 缓存中毒是如何工作的**'
- en: '*ARP cache poisoning*, sometimes called *ARP spoofing*, is an advanced form
    of tapping into the wire on a switched network. It works by sending ARP messages
    to an Ethernet switch or router with fake MAC (layer 2) addresses in order to
    intercept the traffic of another computer. [Figure 2-10](ch02.xhtml#ch02fig10)
    illustrates this setup.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '*ARP 缓存中毒*，有时也叫做 *ARP 欺骗*，是一种在交换网络中窃听信号的高级技术。它通过向以太网交换机或路由器发送带有虚假 MAC（第 2 层）地址的
    ARP 消息，来拦截另一台计算机的流量。[图 2-10](ch02.xhtml#ch02fig10) 展示了这一设置。'
- en: '![image](../images/f28-01.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f28-01.jpg)'
- en: '*Figure 2-10: ARP cache poisoning lets you intercept the traffic of your target
    computer.*'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-10：ARP 缓存中毒可以让你拦截目标计算机的流量。*'
- en: This technique is commonly used by attackers to send falsely addressed packets
    to client systems in order to intercept certain traffic or cause denial-of-service
    (DoS) attacks on a target. However, it can also be a legitimate way to capture
    the packets of a target machine on a switched network.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术通常被攻击者用来向客户端系统发送虚假地址的数据包，以拦截特定流量或对目标发起拒绝服务（DoS）攻击。然而，它也可以是捕获交换网络上目标机器数据包的一种合法方式。
- en: '**Using Cain & Abel**'
  id: totrans-111
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用 Cain & Abel**'
- en: When attempting to poison the ARP cache, the first step is to acquire the necessary
    tools and collect some information. For our demonstration, we’ll use the popular
    security tool Cain & Abel from oxid.it (*[http://www.oxid.it/](http://www.oxid.it/)*),
    which supports Windows systems. Download and install it now, according to the
    directions on the website.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试进行ARP缓存中毒时，第一步是获取必要的工具并收集一些信息。为了演示，我们将使用来自oxid.it的流行安全工具Cain & Abel（* [http://www.oxid.it/](http://www.oxid.it/)*），它支持Windows系统。按照网站上的指示下载并安装它。
- en: '**NOTE**'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*When you attempt to download Cain & Abel, there is a good chance that antivirus
    software or your browser will flag the software as malicious or as a “hacker tool.”
    This tool has multiple uses, including several that could be nefarious. For our
    purposes, it poses no threat to your system.*'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '*当你尝试下载Cain & Abel时，杀毒软件或浏览器很可能会将该软件标记为恶意软件或“黑客工具”。这个工具有多种用途，其中一些可能是恶意的。但在我们的使用中，它对你的系统没有威胁。*'
- en: Before you can use Cain & Abel, you’ll need to collect certain information,
    including the IP address of your analyzer system, the remote system from which
    you wish to capture the traffic, and the router from which the remote system is
    downstream.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在你能使用Cain & Abel之前，你需要收集一些信息，包括分析器系统的IP地址、你希望捕获流量的远程系统的IP地址以及该远程系统下游的路由器。
- en: When you first open Cain & Abel, you’ll notice a series of tabs near the top
    of the window. (ARP cache poisoning is only one of Cain & Abel’s features.) For
    our purposes, we’ll be working in the Sniffer tab. When you click this tab, you
    should see an empty table, as shown in [Figure 2-11](ch02.xhtml#ch02fig11).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 当你第一次打开Cain & Abel时，你会注意到窗口顶部有一系列标签。（ARP缓存中毒只是Cain & Abel的一个功能。）为了我们的目的，我们将在嗅探器标签下操作。当你点击这个标签时，你应该看到一个空表格，如[图2-11](ch02.xhtml#ch02fig11)所示。
- en: '![image](../images/f29-01.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f29-01.jpg)'
- en: '*Figure 2-11: The Sniffer tab in the Cain & Abel main window*'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2-11：Cain & Abel主窗口中的嗅探器标签*'
- en: 'To complete this table, you’ll need to activate the program’s built-in sniffer
    and scan your network for hosts. To do so, follow these steps:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个表格，你需要激活程序的内置嗅探器，并扫描你的网络以寻找主机。请按照以下步骤操作：
- en: Click the second icon from the left on the toolbar, which resembles a NIC.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击工具栏上从左侧数起的第二个图标，它类似于一个网络接口卡（NIC）。
- en: You’ll be asked to select the interface you wish to sniff. Choose the one that
    is connected to the network on which you’ll be performing your ARP cache poisoning.
    If this is your first time using Cain & Abel, select this interface and click
    **OK**. Otherwise, if you’ve selected an interface in Cain & Abel before, your
    selection will have been saved, and you’ll need to press the NIC icon a second
    time to select the interface. (Ensure that this button is depressed to activate
    Cain & Abel’s built-in sniffer.)
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统会要求你选择一个你希望进行嗅探的接口。选择连接到你将执行ARP缓存中毒操作的网络的接口。如果这是你第一次使用Cain & Abel，选择该接口并点击**确定**。否则，如果你之前在Cain
    & Abel中选择过一个接口，那么你的选择将会被保存，你需要再次点击NIC图标以选择接口。（确保按下该按钮以激活Cain & Abel内置的嗅探器。）
- en: To build a list of available hosts on your network, click the plus (+) button.
    The MAC Address Scanner dialog appears, as shown in [Figure 2-12](ch02.xhtml#ch02fig12).
    The **All hosts in my subnet** radio button should be selected (or you can specify
    an address range if necessary). Click **OK** to continue.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要建立一个可用主机列表，点击加号（+）按钮。MAC地址扫描器对话框会出现，如[图2-12](ch02.xhtml#ch02fig12)所示。**我的子网中的所有主机**单选按钮应该被选中（或者如果需要，你可以指定一个地址范围）。点击**确定**继续。
- en: '![image](../images/f29-02.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f29-02.jpg)'
- en: '*Figure 2-12: Scanning for MAC addresses using the Cain & Abel network discovery
    tool*'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2-12：使用Cain & Abel网络发现工具扫描MAC地址*'
- en: 'Some Windows 10 users report Cain & Abel is unable to determine the IP address
    of their network interfaces, which prohibits the completion of this process. If
    you have this problem, when configuring network interfaces you’ll see that the
    IP address of your interfaces is 0.0.0.0\. To remedy this, take the following
    steps:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 一些Windows 10用户报告称Cain & Abel无法确定他们网络接口的IP地址，导致无法完成此过程。如果你遇到这个问题，在配置网络接口时你会看到接口的IP地址是0.0.0.0。为了解决这个问题，请按照以下步骤操作：
- en: If Cain & Abel is open, close it.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果Cain & Abel已打开，关闭它。
- en: On the desktop search bar, type ncpa.cpl to open the Network Connections dialog.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在桌面搜索栏中，输入ncpa.cpl以打开网络连接对话框。
- en: Right-click the network interface you’ll be sniffing from and click **Properties**.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击你将要进行嗅探的网络接口，然后点击**属性**。
- en: Double-click **Internet Protocol Version 4 (TCP/IPv4)**.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 **Internet Protocol Version 4 (TCP/IPv4)**。
- en: Click the **Advanced** button and choose the **DNS** tab.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **高级** 按钮并选择 **DNS** 标签。
- en: Select the checkbox next to **Use this connection’s DNS suffix in DNS registration**
    to activate it.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选中 **使用此连接的 DNS 后缀进行 DNS 注册** 旁边的复选框以激活它。
- en: Click **OK** to exit the open dialogs and relaunch Cain & Abel.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **OK** 退出打开的对话框并重新启动 Cain & Abel。
- en: The grid should now be filled with a list of all the hosts on your attached
    network, along with their MAC addresses, IP addresses, and vendor information.
    This is the list you’ll work from when setting up ARP cache poisoning.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 网格现在应该填充了你附加网络上所有主机的列表，以及它们的 MAC 地址、IP 地址和厂商信息。这是你在设置 ARP 缓存中毒时将要使用的列表。
- en: At the bottom of the program window, you should see a set of tabs that will
    take you to other windows under the Sniffer heading. Now that you have built your
    host list, you’ll be working from the APR (for ARP Poison Routing) tab. Switch
    to the APR window now by clicking the tab.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在程序窗口的底部，你应该看到一组标签，点击它们将带你进入嗅探器下的其他窗口。现在你已经构建了主机列表，你将从 APR（用于 ARP 中毒路由）标签开始工作。现在点击该标签切换到
    APR 窗口。
- en: Once in the APR window, you are presented with two empty tables. After you’ve
    completed the setup steps, the upper table will show the devices involved in your
    ARP cache poisoning, and the lower one will show all communication between your
    poisoned machines.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入 APR 窗口，你将看到两个空表格。在你完成设置步骤后，上方的表格将显示涉及你 ARP 缓存中毒的设备，下方的表格将显示你中毒机器之间的所有通信。
- en: 'To set up your poisoning, follow these steps:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置你的中毒过程，按照以下步骤操作：
- en: Click in the blank area in the upper portion of the screen. Then click the plus
    (+) button on the program’s standard toolbar.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕上方的空白区域。然后点击程序标准工具栏上的加号（+）按钮。
- en: The window that appears has two selection panes. On the left side, you’ll see
    a list of all available hosts on your network. If you click the IP address of
    the target computer, the pane on the right will show a list of all hosts in the
    network, except for the target machine’s IP address.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 出现的窗口有两个选择面板。在左侧，你会看到网络中所有可用主机的列表。如果你点击目标计算机的 IP 地址，右侧面板将显示网络中所有主机的列表，除了目标机器的
    IP 地址。
- en: In the right pane, click the IP address of the router that is directly upstream
    from the target machine, as shown in [Figure 2-13](ch02.xhtml#ch02fig13), and
    click **OK**. The IP addresses of both devices should now be listed in the upper
    table in the main application window.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧面板中，点击目标机器上游路由器的 IP 地址，如 [图 2-13](ch02.xhtml#ch02fig13) 所示，然后点击 **OK**。现在，两个设备的
    IP 地址应该已列在主应用窗口的上方表格中。
- en: To complete the process, click the yellow-and-black radiation symbol on the
    standard toolbar. This will activate Cain & Abel’s ARP cache poisoning features
    and allow your analyzing system to be the middleman for all communications between
    the target system and its upstream router.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为完成该过程，点击标准工具栏上的黄黑色辐射符号。这将激活 Cain & Abel 的 ARP 缓存中毒功能，并允许你的分析系统成为目标系统与其上游路由器之间所有通信的中介。
- en: '![image](../images/f31-01.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f31-01.jpg)'
- en: '*Figure 2-13: Selecting the devices for which you wish to enable ARP cache
    poisoning*'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-13：选择你希望启用 ARP 缓存中毒的设备*'
- en: You should now be able to fire up your packet sniffer and begin the analysis
    process. When you have finished capturing traffic, simply click the yellow-and-black
    radiation symbol again to stop ARP cache poisoning.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该能够启动数据包嗅探器并开始分析过程。当你完成捕获流量后，只需再次点击黄黑色辐射符号以停止 ARP 缓存中毒。
- en: '**A Word of Caution About ARP Cache Poisoning**'
  id: totrans-144
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**关于 ARP 缓存中毒的警告**'
- en: 'A final note on ARP cache poisoning: you should be very aware of the roles
    of the systems for which you implement this process. For instance, don’t use this
    technique when the target device is something with very high network utilization,
    such as a file server with a 1Gbps link to the network (especially if your analyzer
    system provides only a 100Mbps link).'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 ARP 缓存中毒的最后提醒：你应该非常清楚你实施此过程时系统的角色。例如，当目标设备是网络利用率非常高的设备时，不要使用此技术，比如一个与网络连接速度为
    1Gbps 的文件服务器（尤其是当你的分析系统只提供 100Mbps 的连接时）。
- en: When you reroute traffic using the technique shown in this example, all traffic
    transmitted and received by the target system must first go through your analyzer
    system, therefore making your analyzer the bottleneck in the communication process.
    This rerouting can have a DoS-type effect on the machine you are analyzing, resulting
    in degraded network performance and faulty analysis data. Traffic congestion can
    also prohibit SSL-based communication from working as expected.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用本示例中展示的技术重新路由流量时，所有传输和接收的流量必须首先经过你的分析系统，因此使得你的分析系统成为通信过程中的瓶颈。这个重新路由的过程可能会对你正在分析的机器造成类似DoS攻击的效果，导致网络性能下降和分析数据错误。流量拥堵还可能阻止基于SSL的通信按预期工作。
- en: '**NOTE**'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*You can avoid having all the traffic go through your analyzer system by using
    a feature called asymmetric routing. For more information about this technique,
    see the oxid.it user manual* ([http://www.oxid.it/ca_um/topics/apr.htm](http://www.oxid.it/ca_um/topics/apr.htm)).'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '*你可以通过使用一种叫做不对称路由的功能，避免所有流量都经过你的分析系统。如需了解更多关于这一技术的信息，请参阅oxid.it用户手册*（[http://www.oxid.it/ca_um/topics/apr.htm](http://www.oxid.it/ca_um/topics/apr.htm)）。'
- en: '**Sniffing in a Routed Environment**'
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**在路由环境中的嗅探**'
- en: All the techniques for tapping into the wire on a switched network are available
    on routed networks as well. The only major consideration when dealing with routed
    environments is the importance of sniffer placement when you are troubleshooting
    a problem that spans multiple network segments.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 所有在交换网络上截取数据的技术同样适用于路由网络。处理路由环境时，唯一需要特别考虑的重要因素是，当你在排查涉及多个网络段的问题时，嗅探器的布置位置至关重要。
- en: As you’ve learned, a device’s broadcast domain extends until it reaches a router,
    at which point the traffic is handed off to the next upstream router. When data
    must traverse multiple routers, it’s important to analyze the traffic on all sides
    of the router.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所学到的，一个设备的广播域会一直扩展，直到遇到路由器为止，这时流量会被传递到下一个上游路由器。当数据必须经过多个路由器时，分析所有路由器两侧的流量非常重要。
- en: For example, consider the problem you might encounter in a network with several
    segments connected via multiple routers. In this network, each segment communicates
    with an upstream segment to store and retrieve data. In [Figure 2-14](ch02.xhtml#ch02fig14),
    the problem we’re trying to solve is that a downstream subnet, network D, can’t
    communicate with any devices on network A.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑一下你可能在一个通过多个路由器连接的网络中遇到的问题。在这个网络中，每个网络段与上游网络段进行通信以存储和检索数据。在[图2-14](ch02.xhtml#ch02fig14)中，我们试图解决的问题是，下游子网网络D无法与网络A中的任何设备通信。
- en: '![image](../images/f32-01.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f32-01.jpg)'
- en: '*Figure 2-14: A computer on network D can’t communicate with computers on network
    A.*'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2-14：网络D中的一台计算机无法与网络A中的计算机通信。*'
- en: If you sniff the traffic of a device on network D that is having trouble communicating
    with devices on other networks, you may clearly see data being transmitted to
    another segment, but you might not see data coming back. If you rethink the positioning
    of your sniffer and begin sniffing the traffic in the next upstream network segment
    (network B), you’ll have a clearer picture of what is happening. At this point,
    you might find that traffic is dropped or routed incorrectly by network B’s router.
    Eventually, this leads you to a router configuration problem that, when corrected,
    solves your larger dilemma. Although this scenario is a bit broad, the moral of
    the story is that when dealing with multiple routers and network segments, you
    may need to move your sniffer around a bit to get the entire picture and pinpoint
    the problem.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你嗅探网络D中一台与其他网络设备通信有问题的设备流量，你可能会清楚地看到数据被传输到另一个网络段，但却看不到返回的数据。如果你重新考虑嗅探器的位置，并开始嗅探下一个上游网络段（网络B）的流量，你将更清晰地了解发生了什么。这时，你可能会发现流量被网络B的路由器丢弃或错误路由。最终，这将引导你发现路由器配置的问题，经过修正后，解决了你更大的困境。虽然这个场景有些宽泛，但故事的教训是：在处理多个路由器和网络段时，你可能需要稍微移动嗅探器，以获取完整的图景并精确定位问题。
- en: '**NETWORK MAPS**'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络拓扑图**'
- en: In our discussion of network placement, we have examined several network maps.
    A *network map*, or *network diagram*, shows all technical resources on a network
    and how they are connected.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们讨论网络布置时，我们已经研究了几张网络拓扑图。*网络拓扑图*，或称*网络示意图*，展示了网络中的所有技术资源及其连接方式。
- en: There is no better way to determine the placement of your packet sniffer than
    to visualize the network. If you have a network map available, keep it handy,
    as it will be a valuable asset in the troubleshooting and analysis process. You
    may even want to make a detailed map of your own network. Remember that sometimes
    half the battle in troubleshooting is ensuring you are collecting the right data.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 没有什么比可视化网络更能帮助你确定数据包嗅探器的部署位置。如果你有网络拓扑图，请随时带着它，因为它将在故障排除和分析过程中发挥重要作用。你甚至可以想要制作自己网络的详细图。记住，有时故障排除的一半工作就是确保你收集到了正确的数据。
- en: '**Sniffer Placement in Practice**'
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**嗅探器部署实践**'
- en: We have looked at four ways to capture network traffic in a switched environment.
    We can add one more if we simply consider installing a packet-sniffing application
    on a single device from which we want to capture traffic (the *direct install
    method*). Given these five methods, it can be a bit confusing to determine which
    one is the most appropriate. [Table 2-2](ch02.xhtml#ch02tab2) provides some general
    guidelines for each method.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看过了四种在切换环境中捕获网络流量的方法。如果我们考虑仅在单个设备上安装数据包嗅探应用程序并捕获该设备的流量（*直接安装法*），我们还可以再增加一种方法。考虑到这五种方法，确定哪种方法最合适可能有些混乱。[表
    2-2](ch02.xhtml#ch02tab2)提供了每种方法的一些基本指南。
- en: As analysts, we need to be as stealthy as possible. In a perfect world, we collect
    the data we need without leaving a footprint. Just as forensic investigators don’t
    want to contaminate a crime scene, we don’t want to contaminate our captured network
    traffic.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 作为分析员，我们需要尽可能隐秘。在一个理想的世界里，我们收集所需的数据而不留下任何痕迹。就像法医调查员不希望污染犯罪现场一样，我们也不希望污染捕获的网络流量。
- en: '**Table 2-2:** Guidelines for Packet Sniffing in a Switched Environment'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 2-2：** 切换环境中的数据包嗅探指南'
- en: '| **Technique** | **Guidelines** |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| **技术** | **指南** |'
- en: '| --- | --- |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Port mirroring | •     Leaves no network footprint and generates no additional
    packets.•     Can be configured without taking the client offline, which is convenient
    when mirroring router or server ports.•     Requires processing resources from
    the switch and can be inconsistent at higher throughput levels. |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| 端口镜像 | •     不会在网络上留下痕迹，也不会生成额外的数据包。•     可以在不使客户端下线的情况下配置，非常方便用于镜像路由器或服务器端口。•     需要交换机的处理资源，并且在高吞吐量下可能不稳定。
    |'
- en: '| Hubbing out | •     Works when you are not concerned about taking the host
    temporarily offline.•     Ineffective when you must capture traffic from multiple
    hosts, as collisions and dropped packets are likely.•     Can result in lost packets
    on modern 100/1000Mbps hosts because most true hubs are only 10Mbps. |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| 通过集线器连接 | •     当你不担心暂时使主机下线时有效。•     当必须从多个主机捕获流量时无效，因为可能会发生冲突和丢包。•     在现代100/1000Mbps主机上可能会丢失数据包，因为大多数集线器的速度仅为10Mbps。
    |'
- en: '| Using a tap | •     Ideal when you are not concerned about taking the host
    temporarily offline.•     The only option when you need to sniff traffic from
    a fiber-optic connection.•     Preferred solution for enterprise packet capture
    and continuous monitoring because taps are reliable and can scale to high throughput
    links.•     Since taps are made for the task at hand and are up to par with modern
    network speeds, this method is superior to hubbing out.•     Can be expensive,
    especially at scale, and so may be cost prohibitive. |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| 使用分接器 | •     当你不担心暂时使主机下线时，这是理想选择。•     当需要嗅探光纤连接的流量时，这是唯一的选择。•     由于分接器可靠且可以扩展到高吞吐量链路，因此它是企业数据包捕获和持续监控的首选方案。•     由于分接器是为此任务专门设计的，并且能够支持现代网络速度，因此这种方法优于通过集线器进行捕获。•     可能会很昂贵，尤其是大规模部署时，可能会导致成本过高。
    |'
- en: '| ARP cache poisoning | •     Considered very sloppy, as it involves injecting
    packets onto the network to reroute traffic through your sniffer.•     When port
    mirroring is not an option, can be effective for quickly capturing traffic from
    a device without taking it offline.•     Requires great care so as to not impact
    network functionality. |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| ARP 缓存中毒 | •     被认为非常粗糙，因为它涉及将数据包注入网络，通过嗅探器重新路由流量。•     当端口镜像不可用时，可以快速有效地从设备捕获流量，而无需使其下线。•     需要非常小心，以免影响网络功能。
    |'
- en: '| Direct install | •     Usually not recommended because if there is an issue
    with a host, that issue could cause packets to be dropped or manipulated in such
    a way that they are not represented accurately.•     The NIC of the host doesn’t
    need to be in promiscuous mode.•     Best for test environments, examining/baselining
    performance, and examining capture files created elsewhere. |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| 直接安装 | • 通常不推荐使用，因为如果主机出现问题，该问题可能会导致数据包丢失或被篡改，从而使其无法准确表示。 • 主机的网卡不需要处于混杂模式。
    • 最适合测试环境、检查/基准性能以及检查在其他地方创建的捕获文件。 |'
- en: As we step through practical scenarios in later chapters, we’ll discuss the
    best ways to capture the data we require on a case-by-case basis. For the time
    being, the flowchart in [Figure 2-15](ch02.xhtml#ch02fig15) should help you choose
    the best method for capturing traffic in a given situation. The chart takes different
    factors into consideration, starting with whether you are capturing packets at
    home or at work. Remember that this flowchart is simply a general reference and
    doesn’t cover every possible scenario in which you might tap into the wire.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在后续章节中，我们将通过实际场景来讨论根据具体情况捕获所需数据的最佳方法。暂时，图表[图2-15](ch02.xhtml#ch02fig15)应该能帮助你选择在特定情况下捕获流量的最佳方法。该图表考虑了不同的因素，首先是你是在家里还是在工作中捕获数据包。请记住，这个流程图仅作为一般参考，并未涵盖所有可能的场景，尤其是你可能接入网络的情况。
- en: '![image](../images/f35-01.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f35-01.jpg)'
- en: '*Figure 2-15: A diagram to help determine which method is best for tapping
    into the wire*'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2-15：帮助确定哪种方法最适合接入网络的图示*'
