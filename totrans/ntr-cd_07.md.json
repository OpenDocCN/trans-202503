["```\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js\"></script>\n```", "```\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.19.0/matter.min.js\"></script>\n```", "```\nlet v = createVector(1, -1);\n```", "```\nlet v = Matter.Vector.create(1, -1);\n```", "```\nlet a = createVector(1, -1);\nlet b = createVector(3, 4);\na.add(b);\n```", "```\nlet a = Matter.Vector.create(1, -1);\nlet b = Matter.Vector.create(3, 4);\nMatter.Vector.add(a, b, a);\n```", "```\nlet a = createVector(1, -1);\nlet b = createVector(3, 4);\nlet c = p5.Vector.add(a, b);\n```", "```\nlet a = Matter.Vector.create(1, -1);\nlet b = Matter.Vector.create(3, 4);\nlet c = Matter.Vector.add(a, b);\n```", "```\nlet v = createVector(1, -1);\nv.mult(4);\n```", "```\nlet v = Matter.Vector.create(1, -1);\nv = Matter.Vector.mult(v, 4);\n```", "```\nlet v = createVector(3, 4);\nlet m = v.mag();\nv.normalize();\n```", "```\nlet v = Matter.Vector.create(3, 4);\nlet m = Matter.Vector.magnitude(v);\nv = Matter.Vector.normalise(v);\n```", "```\nconst { Engine } = Matter;\n```", "```\nlet options = {\n  friction: 0.5,    \n  restitution: 0.8,\n};\nlet ball = Bodies.circle(x, y, radius, options);\n```", "```\nlet position = this.body.position;\n```", "```\nlet angle = this.body.angle;\n```", "```\nlet particleA = new Particle();\nlet particleB = new Particle();\n```", "```\nlet options = {\n  bodyA: particleA.body,\n  bodyB: particleB.body,\n  pointA: Vector.create(0, 0),\n  pointB: Vector.create(0, 0),\n  length: 100,\n  stiffness: 0.5\n};\n```", "```\nbody.position.x = mouseX;\nbody.position.y = mouseY;\n```", "```\nlet mouseConstraint = MouseConstraint.create(engine, { mouse });\nComposite.add(engine.world, mouseConstraint);\n```", "```\n  attract(mover) {\n    let force = p5.Vector.sub(this.position, mover.position);\n    let distance = force.mag();\n    distance = constrain(distance, 5, 25);\n    let strength = (G * this.mass * mover.mass) / (distance * distance);\n    force.setMag(strength);\n    return force;\n  }\n```", "```\nMatter.Events.on(engine, 'collisionStart', handleCollisions);\n```", "```\nfunction handleCollisions(event) {\n\n}\n```", "```\nfor (let pair of event.pairs) {\n\n}\n```", "```\nfor (let pair of event.pairs) {\n  let bodyA = pair.bodyA;\n  let bodyB = pair.bodyB;\n}\n```", "```\nvelocity.add(acceleration);\nposition.add(velocity);\n```", "```\n<script src=\"https://cdn.jsdelivr.net/gh/hapticdata/toxiclibsjs@0.3.2/build/toxiclibs.js\"></script>\n```", "```\nWorld\n```", "```\nVerletPhysics2D\n```", "```\nVector\n```", "```\nVec2D\n```", "```\nBody\n```", "```\nVerletParticle2D\n```", "```\nConstraint\n```", "```\nVerletSpring2D\n```", "```\nlet { Vec2D, Vec3D } = toxi.geom;\n```", "```\nlet a = createVector(1, -1);\nlet b = createVector(3, 4);\na.add(b);\n```", "```\nlet a = new Vec2D(1, -1);\nlet b = new Vec2D(3, 4);\na.addSelf(b);\n```", "```\nlet a = createVector(1, -1);\nlet b = createVector(3, 4);\nlet c = p5.Vector.add(a, b);\n```", "```\nlet a = new Vec2D(1, -1);\nlet b = new Vec2D(3, 4);\nlet c = a.add(b);\n```", "```\nlet a = createVector(1, -1);\nlet m = a.mag();\na.normalize();\n```", "```\nlet a = new Vec2D(1, -1);\nlet m = a.magnitude();\na.normalize();\n```", "```\nclass Particle {\n  constructor(x, y, r) {\n    this.body = Bodies.circle(x, y, r);\n  }\n}\n```", "```\nlet particle = new Particle(width / 2, height / 2, 8);\n```", "```\nphysics.addParticle(particle);\n```", "```\nphysics.addSpring(spring);\n```", "```\nlet particles = [];\n```", "```\nparticles[0].lock();\n```", "```\nlet particle = new Particle(320, 120);\n```", "```\nlet distance = 20;\nlet strength = 0.1;\nlet behavior = new AttractionBehavior(particle, distance, strength);\n```", "```\nphysics.addBehavior(behavior);\n```"]