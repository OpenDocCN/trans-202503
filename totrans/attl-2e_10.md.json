["```\n$ pkg-config --help\nUsage:\n  pkg-config [OPTION...]\n--snip--\nApplication Options:\n--snip--\n  --modversion                               output version for package\n--snip--\n  --libs                                     output all linker flags\n  --static                                   output linker flags for static linking\n--snip--\n  --libs-only-l                              output -l flags\n  --libs-only-other                          output other libs (e.g. -pthread)\n  --libs-only-L                              output -L flags\n  --cflags                                   output all pre-processor and compiler flags\n  --cflags-only-I                            output -I flags\n  --cflags-only-other                        output cflags not covered by the cflags-only-I option\n  --variable=NAME                            get the value of variable named NAME\n  --define-variable=NAME=VALUE               set variable NAME to VALUE\n  --exists                                   return 0 if the module(s) exist\n  --print-variables                          output list of variables defined by the module\n  --uninstalled                              return 0 if the uninstalled version of one or more\n                                             module(s) or their dependencies will be used\n  --atleast-version=VERSION                  return 0 if the module is at least version VERSION\n  --exact-version=VERSION                    return 0 if the module is at exactly version VERSION\n  --max-version=VERSION                      return 0 if the module is at no newer than version\n                                             VERSION\n  --list-all                                 list all known packages\n  --debug                                    show verbose debug information\n  --print-errors                             show verbose information about missing or conflicting\n                                             packages (default unless --exists or\n                                             --atleast/exact/max-version given on the command line)\n--snip--\n$\n```", "```\n$ pkg-config --list-all\n--snip--\nsystemd                        systemd - systemd System and Service Manager\nfontutil                       FontUtil - Font utilities dirs\nusbutils                       usbutils - USB device database\nbash-completion                bash-completion - programmable completion for the bash shell\nlibcurl                        libcurl - Library to transfer files with ftp, http, etc.\n--snip--\nnotify-python                  notify-python - Python bindings for libnotify\nnemo-python                    Nemo-Python - Nemo-Python Components\nlibcrypto                      OpenSSL-libcrypto - OpenSSL cryptography library\nlibgdiplus                     libgdiplus - GDI+ implementation\nshared-mime-info               shared-mime-info - Freedesktop common MIME database\nlibssl                         OpenSSL-libssl - Secure Sockets Layer and cryptography libraries\nxbitmaps                       X bitmaps - Bitmaps that are shared between X applications\n--snip--\nxkbcomp                        xkbcomp - XKB keymap compiler\ndbus-python                    dbus-python - Python bindings for D-Bus\n$\n```", "```\n$ pkg-config --debug |& grep directory\nCannot open directory #1 '/usr/local/lib/x86_64-linux-gnu/pkgconfig' in package search path: No\nsuch file or directory\nCannot open directory #2 '/usr/local/lib/pkgconfig' in package search path: No such file or\ndirectory\nCannot open directory #3 '/usr/local/share/pkgconfig' in package search path: No such file or\ndirectory\nScanning directory #4 '/usr/lib/x86_64-linux-gnu/pkgconfig'\nScanning directory #5 '/usr/lib/pkgconfig'\nScanning directory #6 '/usr/share/pkgconfig'\n$\n```", "```\n$ pkg-config --variable pcfiledir libssl\n/usr/lib/x86_64-linux-gnu/pkgconfig\n$\n```", "```\n➊ prefix=/usr\n   exec_prefix=${prefix}\n   libdir=${exec_prefix}/lib/x86_64-linux-gnu\n   includedir=${prefix}/include\n\n➋ Name: OpenSSL-libssl\n   Description: Secure Sockets Layer and cryptography libraries\n   Version: 1.0.2g\n   Requires.private: libcrypto\n   Libs: -L${libdir} -lssl\n   Libs.private: -ldl\n   Cflags: -I${includedir}\n```", "```\n$ cat test.pc\nprefix=/usr\nlibdir=${prefix}/lib dir\n\nName: test\n#Description: a test pc file\nVersion: 1.0.0\n$\n$ pkg-config --exists --print-errors test.pc\nPackage 'test' has no Description: field\n$ echo $?\n1\n$\n```", "```\n$ pkg-config --modversion libssl\n1.0.2g\n$\n```", "```\n$ pkg-config --atleast-version 1.0.2 libssl && echo \"libssl is good enough\"\nlibssl is good enough\n$ pkg-config --exists \"libssl >= 2.0\" || echo \"nope - too old :(\"\nnope - too old :(\n$\n```", "```\n$ pkg-config --cflags xorg-wacom\n-I/usr/include/xorg\n$ pkg-config --cflags-only-other xorg-wacom\n$\n```", "```\n--snip--\nName: music\nDescription: A library for managing music files\nVersion: 1.0.0\nRequires: chooser >= 1.0.1, player < 3.0\n--snip--\n```", "```\n$ pkg-config --validate test.pc\n$\n```", "```\nAC_INIT([test],[3.1])\nAC_OUTPUT([test.pc])\n```", "```\n➊ prefix=@prefix@\n   libdir=${prefix}/lib/test\n   includedir=${prefix}/include/test\n\n   Name: test\n   Description: A test .pc file\n➋ Version: @PACKAGE_VERSION@\n\n   CFlags: -I${includedir} -std=c11\n   Libs: -L${libdir} -ltest\n```", "```\n   $ autoreconf -i\n   $ ./configure --prefix=$HOME/test\n   configure: creating ./config.status\n   config.status: creating test.pc\n   $\n   $ cat test.pc\n➊ prefix=/home/jcalcote/test\n   libdir=${prefix}/lib/test\n   includedir=${prefix}/include/test\n\n   Name: test\n   Description: A test .pc file\n➋ Version: 3.1\n\n   CFlags: -I${includedir} -std=c11\n   Libs: -L${libdir} -ltest\n   $\n   $ pkg-config --cflags test.pc\n   -std=c11 -I/home/jcalcote/test/include/test\n   $\n```", "```\nAC_INIT([test],[3.1])\nAM_INIT_AUTOMAKE([foreign])\nAC_OUTPUT([Makefile])\n```", "```\nEXTRA_DIST = test.pc\n%.pc : %.pc.in\n        sed -e 's|[@]prefix@|$(prefix)|g'\\\n          -e 's|[@]PACKAGE_VERSION@|$(PACKAGE_VERSION)|' $< >$@\n```", "```\n$ autoreconf -i\nconfigure.ac:2: installing './install-sh'\nconfigure.ac:2: installing './missing'\n$\n$ ./configure\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a thread-safe mkdir -p... /bin/mkdir -p\nchecking for gawk... gawk\nchecking whether make sets $(MAKE)... yes\nchecking whether make supports nested variables... yes\nchecking that generated files are newer than configure... done\nconfigure: creating ./config.status\nconfig.status: creating Makefile\n$\n$ make prefix=/usr dist\nmake    dist-gzip am__post_remove_distdir='@:'\nmake[1]: Entering directory '/home/jcalcote/dev/book/autotools2e/book/test'\nsed -e 's|[@]prefix@|/usr|g'\\\n            -e 's|[@]PACKAGE_VERSION@|3.1|' test.pc.in >test.pc\n--snip--\n$\n$ cat test.pc\nprefix=/usr\n--snip--\n```", "```\n$ ./configure PKG_CONFIG_PATH=$HOME/required/pkg\n--snip--\n$\n```", "```\nAC_INIT([test],[3.1])\nAC_OUTPUT([test.pc test-uninstalled.pc])\n```", "```\n➊ libdir=@abs_top_builddir@/lib/test\n➋ includedir=@abs_top_srcdir@/include/test\n\n   Name: test\n   Description: A test .pc file\n➌ Version: @PACKAGE_VERSION@\n\n   CFlags: -I${includedir} -std=c11\n   Libs: -L${libdir} -ltest\n```", "```\n$ autoreconf\n$ ./configure\nconfigure: creating ./config.status\nconfig.status: creating test.pc\nconfig.status: creating test-uninstalled.pc\n$ pkg-config --cflags test.pc\n-std=c11 -I/home/jcalcote/dev/book/autotools2e/book/temp/include/test\n$\n```", "```\nprefix=/usr\n--snip--\nincludedir=${prefix}/include\n--snip--\nCflags: -I${includedir}\n```", "```\n$ pkg-config --cflags libssl\n\n$\n```", "```\n$ cat $(pkg-config --variable pcfiledir xorg-wacom)/xorg-wacom.pc\nsdkdir=/usr/include/xorg\n\nName: xorg-wacom\nDescription: X.Org Wacom Tablet driver.\nVersion: 0.32.0\nCflags: -I${sdkdir}\n$\n$ pkg-config --cflags xorg-wacom\n-I/usr/include/xorg\n$\n```", "```\n--snip--\nLIBSSL_CFLAGS=$(pkg-config --cflags libssl)\n--snip--\n```", "```\n$ pkg-config --libs libssl\n-lssl\n$\n```", "```\n--snip--\nLIBSSL_LIBS=$(pkg-config --libs libssl)\n--snip--\n```", "```\n--snip--\nif pkg-config --atleast-version=1.0.2 libssl; then\n  LIBSSL_CFLAGS=$(pkg-config --cflags libssl)\n  LIBSSL_LIBS=$(pkg-config --libs libssl)\nelse\n  m4_fatal([Requires libssl v1.0.2 or higher])\nfi\n--snip--\nCFLAGS=\"${CFLAGS} ${LIBSSL_CFLAGS}\"\nLIBS=\"${LIBS} ${LIBSSL_LIBS}\"\n--snip--\n```", "```\n   $ cat $(pkg-config --variable pcfiledir libssl)/libssl.pc\n   prefix=/usr\n   exec_prefix=${prefix}\n   libdir=${exec_prefix}/lib/x86_64-linux-gnu\n   includedir=${prefix}/include\n\n   Name: OpenSSL-libssl\n   Description: Secure Sockets Layer and cryptography libraries\n   Version: 1.0.2g\n➊ Requires.private: libcrypto\n   Libs: -L${libdir} -lssl\n➋ Libs.private: -ldl\n   Cflags: -I${includedir}\n   $\n   $ cat $(pkg-config --variable pcfiledir libcrypto)/libcrypto.pc\n   prefix=/usr\n   exec_prefix=${prefix}\n   libdir=${exec_prefix}/lib/x86_64-linux-gnu\n   includedir=${prefix}/include\n\n   Name: OpenSSL-libcrypto\n   Description: OpenSSL cryptography library\n   Version: 1.0.2g\n   Requires:\n   Libs: -L${libdir} -lcrypto\n➌ Libs.private: -ldl\n   Cflags: -I${includedir}\n   $\n   $ pkg-config --static --libs libssl\n➍ -lssl -ldl -lcrypto -ldl\n   $\n```", "```\nAC_INIT([test],[1.0])\nAN_UNDEFINED_MACRO()\n```", "```\n$ autoconf\n$ ./configure\n./configure: line 1675: syntax error: unexpected end of file\n$\n```", "```\n$ cat configure.ac\nAC_INIT([test],[1.0])\nAN_UNDEFINED_MACRO\n$ ./configure\n./configure: line 1674: AN_UNDEFINED_MACRO: command not found\n$\n```"]