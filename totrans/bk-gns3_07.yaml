- en: Chapter 7. Device Nodes, Live Switches, and the Internet
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章 设备节点、实时交换机与互联网
- en: In this chapter, I’ll demonstrate how GNS3 device nodes are used with Cisco
    IOS routers. GNS3 provides a Hub node and various Switch nodes, including an Ethernet
    switch, EtherSwitch router, ATM switch, and Frame Relay switch. In addition, we’ll
    take a look at how to create your own Frame Relay switch using a Cisco IOS router.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将演示如何将 GNS3 设备节点与思科 IOS 路由器一起使用。GNS3 提供了一个集线器节点和各种交换机节点，包括以太网交换机、EtherSwitch
    路由器、ATM 交换机和帧中继交换机。此外，我们还将看看如何使用思科 IOS 路由器创建自己的帧中继交换机。
- en: We’ll also explore a very powerful feature known as a *Cloud node*. A Cloud
    node is used to expand your networks beyond the GNS3 program. With Cloud nodes,
    you’ll soon be able to connect your GNS3 projects to live Cisco switches and access
    the Internet using GNS3 routers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将探索一个非常强大的功能，称为*云节点*。云节点用于将您的网络扩展到 GNS3 程序之外。使用云节点，您很快就能将 GNS3 项目连接到实时的思科交换机，并通过
    GNS3 路由器访问互联网。
- en: Built-in Device Nodes
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内置设备节点
- en: Built-in device nodes *simulate* the features of a specific device type (like
    a switch). They’re easy to configure and can be useful if you need to save time
    and PC resources or if you just want to get something done without knowing all
    the details of the underlying technology.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 内置设备节点*模拟*特定设备类型（如交换机）的功能。它们易于配置，如果您需要节省时间和计算机资源，或者只是想完成某件事而不想了解底层技术的所有细节，它们会非常有用。
- en: If you create a topology that uses VLANs, you can drag a GNS3 Ethernet switch
    node to your workspace and use a simple menu to quickly create VLANs or VLAN trunks.
    Of course, if you’re studying for a Cisco exam that involves switching, you need
    to know how to configure actual Cisco IOS switches.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您创建了一个使用 VLAN 的拓扑，您可以将 GNS3 以太网交换机节点拖到工作区，并使用简单的菜单快速创建 VLAN 或 VLAN 中继。当然，如果您正在为涉及交换的思科考试做准备，您需要知道如何配置实际的思科
    IOS 交换机。
- en: Node Configurator
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 节点配置器
- en: By now, you already know that the Node configurator can be used to configure
    the features of a single device node, but it can also be used to modify multiple
    devices at the same time. As your projects grow and you use more devices, this
    feature can save you a lot of time.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经知道节点配置器可以用来配置单个设备节点的功能，但它也可以用来同时修改多个设备。当您的项目变得更加复杂，使用更多设备时，这个功能可以节省大量时间。
- en: To open multiple devices at the same time, use your mouse to select those devices
    in your workspace, and then right-click any device and choose **Configure**. The
    selected devices display in the Node configurator, as shown in [Figure 7-1](ch07.html#modifying_multiple_devices_using_the_nod
    "Figure 7-1. Modifying multiple devices using the Node configurator").
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要同时打开多个设备，请用鼠标选择工作区中的这些设备，然后右键点击任何设备并选择**配置**。所选设备将在节点配置器中显示，如[图 7-1](ch07.html#modifying_multiple_devices_using_the_nod
    "图 7-1. 使用节点配置器修改多个设备")所示。
- en: '![Modifying multiple devices using the Node configurator](httpatomoreillycomsourcenostarchimages2209019.png.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![使用节点配置器修改多个设备](httpatomoreillycomsourcenostarchimages2209019.png.jpg)'
- en: Figure 7-1. Modifying multiple devices using the Node configurator
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-1. 使用节点配置器修改多个设备
- en: To configure a single device, select that device from the column on the left.
    Configure each device and click **Apply**. When you’re finished configuring all
    the devices, click **OK** to complete the process.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置单个设备，从左侧列中选择该设备。配置每个设备并点击**应用**。完成所有设备的配置后，点击**确定**以完成该过程。
- en: To modify multiple devices, use the SHIFT key to select several at once from
    the column on the left and then configure them in the same manner as you would
    a single device. Let’s say you have ten 7200 series routers and you want to add
    the same network module to slot 0 on all 10 routers. Use the SHIFT key to select
    all the routers, add the module to slot 0, and then click **Apply** and **OK**
    to make the change to all 10 devices.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改多个设备，请按住 SHIFT 键，从左侧列中选择多个设备，然后像配置单个设备一样进行配置。假设您有十台 7200 系列路由器，且您想将相同的网络模块添加到所有
    10 台路由器的插槽 0 中。按住 SHIFT 键选择所有路由器，将模块添加到插槽 0，然后点击**应用**和**确定**，以将更改应用到所有 10 台设备。
- en: You can also select an entire group of routers by clicking their group name.
    In the previous figure, you could configure R1, R2, and R3 at the same time by
    selecting the group name *Router c3725 group* ➊.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过点击其组名来选择整个路由器组。在前面的图中，您可以通过选择组名*Router c3725 group* ➊同时配置 R1、R2 和 R3。
- en: Ethernet Hub
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以太网集线器
- en: GNS3 provides an Ethernet hub (see [Figure 7-2](ch07.html#ethernet_hub_node_configurator
    "Figure 7-2. Ethernet hub Node configurator")) as a tool that networking instructors
    can use to teach students about the perils of Ethernet loops, excessive broadcasts,
    and multiport repeating.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: GNS3 提供了一种以太网集线器（参见[图 7-2](ch07.html#ethernet_hub_node_configurator "图 7-2.
    以太网集线器节点配置器")），这是网络教师用来向学生讲解以太网环路、广播过多和多端口重复的问题的工具。
- en: '![Ethernet hub Node configurator](httpatomoreillycomsourcenostarchimages2209021.png.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![以太网集线器节点配置器](httpatomoreillycomsourcenostarchimages2209021.png.jpg)'
- en: Figure 7-2. Ethernet hub Node configurator
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-2. 以太网集线器节点配置器
- en: As a general rule, you should stick with GNS3 switches and avoid including hubs
    in your projects. But if you do need to use an Ethernet hub, you can change the
    number of available Ethernet ports by pulling up the Node configurator and selecting
    your hub from the list on the left. The default value is eight ports, so if you
    want a different amount, enter that number in the Settings field on the right.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，你应该使用 GNS3 交换机，避免在项目中使用集线器。但如果确实需要使用以太网集线器，你可以通过打开节点配置器并从左侧列表中选择集线器，来更改可用的以太网端口数量。默认值是八个端口，如果你需要不同的端口数量，可以在右侧的设置字段中输入该数字。
- en: EtherSwitch Router
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: EtherSwitch 路由器
- en: GNS3 provides two types of Dynamips switches, the Ethernet switch node and the
    EtherSwitch router. I discussed the Ethernet switch node in [Chapter 4](ch04.html
    "Chapter 4. Creating and Managing Projects"), so I’ll only cover the EtherSwitch
    router here.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: GNS3 提供了两种类型的 Dynamips 交换机：以太网交换机节点和 EtherSwitch 路由器。我在[第 4 章](ch04.html "第
    4 章：创建和管理项目")中讨论了以太网交换机节点，所以这里只介绍 EtherSwitch 路由器。
- en: An *EtherSwitch router* is not a simulated device like an Ethernet hub or Ethernet
    switch node. Instead, it’s a Dynamips router running Cisco IOS that’s been configured
    with a 16-port switch module (NM-16ESW). This is the same switch module that can
    be installed on an actual Cisco router, and it has the same features and limitations
    (see [Appendix C](apc.html "Appendix C. NM-16ESW and IOU L2 Limitations") for
    details). Although the switch module has limited functionality, it’s perfectly
    suited for CCNA and many CCNP studies. For more advanced switching features, you
    need to integrate real switches into your GNS3 projects or use Cisco IOU switches.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*EtherSwitch 路由器* 不是像以太网集线器或以太网交换机节点那样的模拟设备。相反，它是一个运行 Cisco IOS 的 Dynamips
    路由器，并配置了一个 16 端口交换机模块（NM-16ESW）。这个交换机模块可以安装在实际的 Cisco 路由器上，并具有相同的功能和限制（详情请参见[附录
    C](apc.html "附录 C. NM-16ESW 和 IOU L2 限制")）。尽管交换机模块的功能有限，但它非常适合用于 CCNA 和许多 CCNP
    的学习。对于更高级的交换功能，你需要将实际的交换机集成到 GNS3 项目中，或者使用 Cisco IOU 交换机。'
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*The EtherSwitch router requires that you configure a c3745 router with an
    IOS.*'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*EtherSwitch 路由器要求你配置一台带 IOS 的 c3745 路由器。*'
- en: To add additional switch ports to your EtherSwitch router, right-click the switch
    icon and select **Configure**, as shown in [Figure 7-3](ch07.html#etherswitch_router_node_configurator
    "Figure 7-3. EtherSwitch router Node configurator").
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要向 EtherSwitch 路由器添加额外的交换机端口，请右键单击交换机图标并选择 **配置**，如图[7-3](ch07.html#etherswitch_router_node_configurator
    "图 7-3. EtherSwitch 路由器节点配置器")所示。
- en: The EtherSwitch router allows you to add additional switch modules. Adding another
    NM-16ESW module in slot 2 increases the number of switch ports to 32.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: EtherSwitch 路由器允许你添加额外的交换机模块。在槽位 2 中添加另一个 NM-16ESW 模块后，交换机端口的数量增加到 32 个。
- en: '![EtherSwitch router Node configurator](httpatomoreillycomsourcenostarchimages2209023.png.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![EtherSwitch 路由器节点配置器](httpatomoreillycomsourcenostarchimages2209023.png.jpg)'
- en: Figure 7-3. EtherSwitch router Node configurator
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-3. EtherSwitch 路由器节点配置器
- en: Frame Relay Switch
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 帧中继交换机
- en: GNS3 provides a simple *Frame Relay switch node*, capable of emulating the basics
    of a generic Frame Relay switch. The nice thing about the GNS3 Frame Relay switch
    node is that it requires very little configuration. The downside is that it can
    sometimes be unstable.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: GNS3 提供了一个简单的*帧中继交换机节点*，能够模拟通用帧中继交换机的基本功能。GNS3 帧中继交换机节点的优点是配置非常简单。缺点是它有时可能不稳定。
- en: Warning
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 警告
- en: '*The GNS3 Frame Relay switch node only supports the ANSI LMI type, and* Cisco
    *is the default LMI type on Cisco IOS. You must use the command `frame-relay lmi-type
    ansi` on your router interfaces. Otherwise your frame cloud will not work. You
    can verify your LMI type using the `show frame-relay lmi` command (after configuring
    Frame Relay encapsulation).*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*GNS3的Frame Relay交换机节点仅支持ANSI LMI类型，且*Cisco *是Cisco IOS上的默认LMI类型。你必须在路由器接口上使用命令`frame-relay
    lmi-type ansi`。否则，你的Frame Relay云将无法工作。你可以使用`show frame-relay lmi`命令来验证LMI类型（在配置了Frame
    Relay封装后）。*'
- en: In Frame Relay, [*data link connection identifiers (DLCIs)*](apd.html#gloss01_018)
    are used to assign frames to a [*permanent virtual circuit (PVC)*](apd.html#gloss01_049)
    using serial port connections. To configure DLCI to serial port mappings, right-click
    the Frame Relay switch icon and open the Node configurator. Use the Source and
    Destination fields to create a mapping and click **Add**. When you’re finished,
    click **Apply** and **OK** to complete the configuration.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在Frame Relay中，[*数据链路连接标识符（DLCI）*](apd.html#gloss01_018)用于通过串行端口连接分配帧到[*永久虚拟电路（PVC）*](apd.html#gloss01_049)。要配置DLCI到串行端口的映射，右键点击Frame
    Relay交换机图标并打开节点配置器。使用源字段和目标字段创建映射，并点击**添加**。完成后，点击**应用**和**确定**来完成配置。
- en: The example configuration in [Figure 7-4](ch07.html#frame_relay_switch_node_configurator
    "Figure 7-4. Frame Relay switch Node configurator") will be used later to create
    a simple Frame Relay network. In the Mapping panel on the right, notice that FR1
    is configured using two serial ports. Each serial port is used to link the Frame
    Relay switch to a router in your GNS3 project.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[图7-4](ch07.html#frame_relay_switch_node_configurator "图7-4. Frame Relay交换机节点配置器")中的示例配置稍后将用于创建一个简单的Frame
    Relay网络。在右侧的映射面板中，注意到FR1是通过两个串行端口进行配置的。每个串行端口用于将Frame Relay交换机连接到GNS3项目中的路由器。'
- en: '![Frame Relay switch Node configurator](httpatomoreillycomsourcenostarchimages2209025.png.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![Frame Relay交换机节点配置器](httpatomoreillycomsourcenostarchimages2209025.png.jpg)'
- en: Figure 7-4. Frame Relay switch Node configurator
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-4. Frame Relay交换机节点配置器
- en: Port 1 has been assigned two DLCI numbers (100 and 200). Each DLCI on port 1
    is mapped to a DLCI number on another serial port, and each mapping forms a Frame
    Relay PVC. Mapping is read from left to right, so in the first row, port 1 DLCI
    100 is mapped to port 2 DLCI 101, and in the second row, port 1 DLCI 200 is mapped
    to port 3 DLCI 201\. We’ll use these mappings to configure a simple Frame Relay
    network.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 端口1已分配了两个DLCI号（100和200）。端口1上的每个DLCI都映射到另一个串行端口上的DLCI号，每个映射形成一个Frame Relay PVC。映射是从左到右读取的，因此在第一行中，端口1的DLCI
    100映射到端口2的DLCI 101，在第二行中，端口1的DLCI 200映射到端口3的DLCI 201。我们将使用这些映射来配置一个简单的Frame Relay网络。
- en: Simple Frame Relay Hub and Spoke Configuration
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单的Frame Relay中心与辐射式配置
- en: There are several ways to configure a Frame Relay network, and understanding
    DLCI to serial port mapping is critical for understanding and configuring any
    of them. To better understand the mapping relationship, let’s configure a simple
    network using the previously discussed DLCI to serial port mappings. I won’t go
    into a lot of theory, but I’ll explain enough to get you started.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 配置Frame Relay网络有几种方法，而理解DLCI到串行端口的映射对于理解和配置它们至关重要。为了更好地理解映射关系，让我们使用之前讨论的DLCI到串行端口的映射配置一个简单的网络。我不会讲解太多理论，但会解释足够的内容让你能够开始。
- en: We’ll create our sample network using the topology in [Figure 7-5](ch07.html#sample_hub_and_spoke_frame_relay_network
    "Figure 7-5. Sample hub and spoke Frame Relay network"). The network is divided
    into two subnets, 10.10.10.0 and 10.10.10.32, using the subnet mask 255.255.255.224.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用[图7-5](ch07.html#sample_hub_and_spoke_frame_relay_network "图7-5. 示例中心与辐射式Frame
    Relay网络")中的拓扑来创建我们的示例网络。该网络被划分为两个子网，10.10.10.0和10.10.10.32，子网掩码为255.255.255.224。
- en: '![Sample hub and spoke Frame Relay network](httpatomoreillycomsourcenostarchimages2209027.png.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![示例中心与辐射式Frame Relay网络](httpatomoreillycomsourcenostarchimages2209027.png.jpg)'
- en: Figure 7-5. Sample hub and spoke Frame Relay network
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-5. 示例中心与辐射式Frame Relay网络
- en: This simple network is an example of a Frame Relay hub and spoke topology and
    should give you a good idea of how DLCI mappings work in a Frame Relay network.
    Router R2 will be on the 10.10.10.0 subnet, and router R3 will be on the 10.10.10.32
    subnet. Router R1 is the hub in our hub and spoke topology. It will be connected
    to both subnets and will forward packets between them through the Frame Relay
    switch. This configuration will allow router R2 to ping router R3 and vice versa.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简单的网络是帧中继中心-分支拓扑的示例，应该能让你很好地理解 DLCI 映射在帧中继网络中的工作原理。路由器 R2 将位于 10.10.10.0 子网中，路由器
    R3 将位于 10.10.10.32 子网中。路由器 R1 是我们的中心-分支拓扑中的中心，它将连接这两个子网，并通过帧中继交换机在它们之间转发数据包。此配置将允许路由器
    R2 与路由器 R3 相互 Ping 通。
- en: To create the project, add a Frame Relay switch node to your workspace and set
    it up the way we did in [Figure 7-4](ch07.html#frame_relay_switch_node_configurator
    "Figure 7-4. Frame Relay switch Node configurator"). Add three routers and configure
    each of them with a serial interface card such as a WIC or NM-4T. Link the routers
    to the FR1 switch as shown. Be sure R1 is connected to Port 1 on FR1, R2 is connected
    to Port 2, and R3 is connected to Port 3\. After linking the devices and configuring
    the Port:DLCI mapping on the FR1 switch, configure the hub router R1, as shown
    in the following code.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建项目，请在工作区中添加一个帧中继交换机节点，并按我们在 [图 7-4](ch07.html#frame_relay_switch_node_configurator
    "图 7-4. 帧中继交换机节点配置器") 中所做的那样进行设置。添加三台路由器，并为每台路由器配置一个串行接口卡，如 WIC 或 NM-4T。将路由器与
    FR1 交换机连接，如图所示。确保 R1 连接到 FR1 的端口 1，R2 连接到端口 2，R3 连接到端口 3。在连接设备并配置 FR1 交换机上的端口:DLCI
    映射后，按以下代码配置中心路由器 R1。
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: On the serial interface, enable Frame Relay encapsulation ➊, and set the LMI
    type to ANSI ➋. Although not required for GNS3, I’ve also set the clock rate ➌
    because, depending on your IOS, the command may be required on an actual Frame
    Relay switch.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在串行接口上启用帧中继封装 ➊，并将 LMI 类型设置为 ANSI ➋。尽管在 GNS3 中不是必需的，我还是设置了时钟速率 ➌，因为根据你的 IOS，实际的帧中继交换机可能需要这个命令。
- en: Next, configure point-to-point interfaces and DLCIs.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，配置点对点接口和 DLCI。
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Configure a point-to-point subinterface ➊ on serial interface `Serial0/0.100`
    using DLCI 100 ➋ and assign the interface an IP address from the first subnet
    ➌ (10.10.10.0/27).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在串行接口 `Serial0/0.100` 上配置点对点子接口 ➊，使用 DLCI 100 ➋ 并为接口分配来自第一个子网的 IP 地址 ➌（10.10.10.0/27）。
- en: Complete the configuration by adding a second point-to-point sub interface ➍
    in the same manner, but use DLCI 200 ➎, and assign the interface an IP addresses
    from the second subnet ➏ (10.10.10.32/27). In this example, I’ll use the first
    valid address from the subnet, which is 10.10.10.33.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以相同方式添加第二个点对点子接口 ➍，但使用 DLCI 200 ➎，并为接口分配来自第二个子网的 IP 地址 ➏（10.10.10.32/27）。在这个示例中，我将使用子网中的第一个有效地址，即
    10.10.10.33。
- en: Note
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*It’s considered a Cisco best practice to use the DLCI number for your subinterface
    number. `Serial0/0.100` is an example of a subinterface for DLCI 100.*'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用 DLCI 编号作为子接口编号被认为是 Cisco 最佳实践。`Serial0/0.100` 就是 DLCI 100 的子接口示例。*'
- en: The following listing contains all of the commands you need to configure router
    R2.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表包含配置路由器 R2 所需的所有命令。
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To configure R2, go under the serial interface and enable Frame Relay encapsulation
    ➊, then set the LMI type to ANSI ➋, set the clock rate ➌, and bring up the interface.
    Configure a point-to-point subinterface ➍ using DLCI 101 ➎ and assign the subinterface
    an IP address from the first subnet ➏ (10.10.10.0 /27 in this example). Lastly,
    set the router’s default gateway using the IP address configured under interface
    DLCI 100 of router R1 ➐ (IP address 10.10.10.1). Because R1 is the hub of our
    Frame Relay hub and spoke topology, it’s used as the default gateway for our two
    subnets so that data can be routed between routers R2 and R3.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置 R2，请进入串行接口并启用帧中继封装 ➊，然后将 LMI 类型设置为 ANSI ➋，设置时钟速率 ➌，并启用接口。使用 DLCI 101 ➎ 配置点对点子接口
    ➍，并为子接口分配来自第一个子网的 IP 地址 ➏（在此示例中为 10.10.10.0 /27）。最后，使用配置在 R1 路由器接口 DLCI 100 下的
    IP 地址 ➐（IP 地址为 10.10.10.1）设置路由器的默认网关。由于 R1 是我们帧中继中心-分支拓扑中的中心，它被用作两个子网的默认网关，以便数据可以在路由器
    R2 和 R3 之间路由。
- en: Finally, add a configuration to router R3 to complete the project.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，向路由器 R3 添加配置以完成项目。
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Router R3 is configured in nearly the same way as R2, but it uses DLCI 201 ➊
    and an IP address ➋ from the second subnet. Also, you need to set the default
    gateway using the IP address configured under interface DLCI 200 of router R1
    ➌ (IP address 10.10.10.33).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器R3的配置几乎与R2相同，但它使用DLCI 201 ➊和来自第二子网的IP地址 ➋。此外，你需要使用在路由器R1的接口DLCI 200下配置的IP地址
    ➌（IP地址10.10.10.33）设置默认网关。
- en: That’s it! All three routers should now be able to ping each other. In a nutshell,
    each router encapsulates data frames and identifies them with a Frame Relay DLCI
    number as they leave their serial interfaces. When the Frame Relay switch receives
    data from a router, the data frames are forwarded to other routers through the
    switch based on the DLCI to serial port mapping. Because R1 is configured as a
    Frame Relay hub and knows about both subnets, it can forward data between the
    two subnets using the two PVCs. In this example, one PVC is made up of DLCI 100
    mapped to DLCI 101, and the other is made up of DLCI 200 mapped to DLCI 201.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！现在，所有三个路由器应该都能够相互ping通。简而言之，每个路由器将数据帧封装，并在数据帧离开其串行接口时通过Frame Relay DLCI编号进行标识。当Frame
    Relay交换机从路由器接收到数据时，数据帧将根据DLCI到串口的映射通过交换机转发到其他路由器。由于R1被配置为Frame Relay集线器，并且了解两个子网，因此它可以通过两个PVC在这两个子网之间转发数据。在这个例子中，一个PVC由DLCI
    100映射到DLCI 101，另一个PVC由DLCI 200映射到DLCI 201组成。
- en: To verify that your Frame Relay circuit is active, enter the command `show frame-relay
    pvc` on each of your routers.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证你的Frame Relay电路是否处于活动状态，请在每个路由器上输入命令 `show frame-relay pvc`。
- en: '[PRE4]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you’ve set everything up correctly, your PVCs should be displayed under `Active`
    ➊.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经正确设置了一切，你的PVC应该显示为`Active` ➊。
- en: Creating a Frame Relay Switch Using IOS
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用IOS创建Frame Relay交换机
- en: As handy as the Frame Relay switch node is, sometimes you might need to create
    your own Frame Relay switch using an IOS router. Maybe you want to use a different
    LMI type (like Cisco or q933a), or perhaps your studies require knowing the details
    of an actual Cisco Frame Relay switch. In any case, an IOS switch is fairly easy
    to set up.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Frame Relay交换机节点非常方便，但有时你可能需要使用IOS路由器创建你自己的Frame Relay交换机。也许你想使用不同的LMI类型（如Cisco或q933a），或者你的学习需要了解实际的Cisco
    Frame Relay交换机的详细信息。无论如何，使用IOS交换机的设置相对简单。
- en: The following listing creates an IOS Frame Relay switch using DLCI mappings
    identical to the GNS3 Frame Relay switch node you configured earlier. It may look
    intimidating at first glance, but it’s not; you just need to understand how Frame
    Relay `connect` commands are used to configure the DLCI to serial port mappings.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 以下的列表创建了一个使用DLCI映射的IOS Frame Relay交换机，这些映射与你之前配置的GNS3 Frame Relay交换机节点相同。它乍一看可能令人畏惧，但其实并不是；你只需要理解如何使用Frame
    Relay `connect` 命令来配置DLCI到串口的映射。
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When configuring a Frame Relay switch, you must first enable Frame Relay switching
    with the `frame-relay switching` command ➊. You’ll also configure Frame Relay
    encapsulation on each serial interface with the `encapsulation frame-relay` command
    ➋. Then, use the `clock rate` command ➌ to set up clocking, choose an LMI type
    with `frame-relay lmi-type` ➍, and set the interface type to DCE using the `frame-relay
    intf-type dce` command ➎. After bringing up the interfaces, you’re ready to define
    your PVCs.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 配置Frame Relay交换机时，必须先使用 `frame-relay switching` 命令 ➊ 启用Frame Relay交换。你还需要在每个串行接口上使用
    `encapsulation frame-relay` 命令配置Frame Relay封装。然后，使用 `clock rate` 命令 ➌ 设置时钟频率，选择LMI类型使用
    `frame-relay lmi-type` ➍，并使用 `frame-relay intf-type dce` 命令 ➎ 设置接口类型为DCE。接口启用后，你就可以定义你的PVC。
- en: Note
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*On some IOS versions, the `clock rate` command may need to be entered as `clockrate`.*'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '*在某些IOS版本中，`clock rate` 命令可能需要输入为 `clockrate`。*'
- en: DLCI to port mapping is configured using `connect` *`connection-name interface
    dlci interface dlci`* commands. The last two commands in this configuration define
    a connection mapping between two Frame Relay PVCs. The command `connect PVC1 Serial0/0
    100 Serial0/1 101` ➏ defines a PVC between routers R1 and R2 and is used for creating
    our first subnet. The source interface is Serial0/0 and the source DCLI is 100\.
    The PVC is completed using interface Serial0/1, and DLCI 101 configured on router
    R2.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: DLCI到端口的映射是通过`connect` *`connection-name interface dlci interface dlci`* 命令进行配置的。此配置中的最后两个命令定义了两个Frame
    Relay PVC之间的连接映射。命令 `connect PVC1 Serial0/0 100 Serial0/1 101` ➏ 定义了R1和R2之间的PVC，并用于创建我们的第一个子网。源接口是Serial0/0，源DLCI是100。通过接口Serial0/1和配置在路由器R2上的DLCI
    101完成PVC。
- en: The command `connect PVC2 Serial0/0 200 Serial0/2 201` ➐ uses the same syntax
    to create a second PVC between routers R1 and R3 (used for the second subnet).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 命令 `connect PVC2 Serial0/0 200 Serial0/2 201` ➐ 使用相同的语法在路由器 R1 和 R3 之间创建第二个
    PVC（用于第二个子网）。
- en: That’s all there is to creating your own Frame Relay switch. When configuring
    a Frame Relay switch with Cisco IOS, the LMI type can be set to `cisco`, `ansi`,
    or `q933a`, but you must be consistent on all routers participating in the Frame
    Relay network.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 创建自己的帧中继交换机就这么简单。在使用 Cisco IOS 配置帧中继交换机时，LMI 类型可以设置为 `cisco`、`ansi` 或 `q933a`，但必须确保所有参与帧中继网络的路由器保持一致。
- en: ATM Switch
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ATM 交换机
- en: GNS3 provides an easy way to configure an [*Asynchronous Transfer Mode (ATM)*](apd.html#gloss01_007)
    switch. ATM is similar to Frame Relay in that it’s a layer 2 protocol that maps
    physical ports to logical circuits.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: GNS3 提供了一种简便的方式来配置 [*异步传输模式（ATM）*](apd.html#gloss01_007) 交换机。ATM 类似于帧中继，它是一个数据链路层协议，用于将物理端口映射到逻辑电路。
- en: To configure a VPI/VCI to port mapping, right-click the ATM switch icon and
    select **Configure**, as shown in [Figure 7-6](ch07.html#node_configurator-id00016
    "Figure 7-6. Node configurator"). Here, I’ve configured a simple virtual circuit
    using two ports on the ATM1 switch node.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置 VPI/VCI 到端口的映射，右键点击 ATM 交换机图标并选择 **配置**，如[图 7-6](ch07.html#node_configurator-id00016
    "图 7-6. 节点配置器")所示。在这里，我使用 ATM1 交换机节点上的两个端口配置了一个简单的虚拟电路。
- en: '![Node configurator](httpatomoreillycomsourcenostarchimages2209029.png.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![节点配置器](httpatomoreillycomsourcenostarchimages2209029.png.jpg)'
- en: Figure 7-6. Node configurator
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-6. 节点配置器
- en: Use the Source and Destination fields to create your port mapping, and then
    click **Add**. When you’re finished with all the port mapping, click **Apply**
    and **OK** to complete the configuration.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用源和目标字段来创建端口映射，然后点击 **添加**。当你完成所有端口映射后，点击 **应用** 和 **确定** 来完成配置。
- en: Now let’s run through a quick example of creating a simple point-to-point WAN
    connection using an ATM switch. Start by creating the topology shown in [Figure 7-7](ch07.html#sample_atm_network
    "Figure 7-7. Sample ATM network").
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们快速演示如何使用 ATM 交换机创建一个简单的点对点 WAN 连接。首先创建[图 7-7](ch07.html#sample_atm_network
    "图 7-7. 示例 ATM 网络")所示的拓扑。
- en: '![Sample ATM network](httpatomoreillycomsourcenostarchimages2209031.png.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![示例 ATM 网络](httpatomoreillycomsourcenostarchimages2209031.png.jpg)'
- en: Figure 7-7. Sample ATM network
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-7. 示例 ATM 网络
- en: Add an ATM switch to your workspace and configure it using the information from
    [Figure 7-6](ch07.html#node_configurator-id00016 "Figure 7-6. Node configurator").
    Next, add two routers and create a link between each router and the switch. You
    need to use *7200 series routers* that are each configured with an *ATM port adapter*
    (PA-A1) in slot 1\. Create a link from *a1/0* on each router to the ATM switch,
    as shown in [Figure 7-7](ch07.html#sample_atm_network "Figure 7-7. Sample ATM
    network"), and then enter the following commands to configure ATM on router R1.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个 ATM 交换机添加到工作区，并使用来自[图 7-6](ch07.html#node_configurator-id00016 "图 7-6. 节点配置器")的信息进行配置。接下来，添加两个路由器，并在每个路由器与交换机之间创建一条链路。你需要使用*7200
    系列路由器*，每台路由器都需要配置一个*ATM 端口适配器*（PA-A1），安装在槽位 1。创建从每个路由器的 *a1/0* 到 ATM 交换机的链路，如[图
    7-7](ch07.html#sample_atm_network "图 7-7. 示例 ATM 网络")所示，然后输入以下命令来配置 R1 路由器上的 ATM。
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Next, apply a similar configuration to router R2.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将类似的配置应用于路由器 R2。
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: To verify that your ATM circuit is up, enter the `show atm pvc` command.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证你的 ATM 电路是否启用，请输入 `show atm pvc` 命令。
- en: '[PRE8]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If the PVC status displays `UP`, then the two routers should now be able to
    ping each other.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 PVC 状态显示为 `UP`，那么两个路由器现在应该可以互相 ping 通。
- en: Cloud Nodes
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云节点
- en: The Cloud node is a highly configurable device node that doesn’t simulate a
    particular piece of hardware. Instead, it provides a wide range of [*Network Input/Output
    (NIO)*](apd.html#gloss01_042) connection options that allow GNS3 virtual devices
    to communicate with other programs or real hardware, like your PC’s Ethernet adapter.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 云节点是一个高度可配置的设备节点，它并不模拟特定的硬件。而是提供了广泛的[*网络输入/输出（NIO）*](apd.html#gloss01_042)连接选项，允许
    GNS3 虚拟设备与其他程序或实际硬件（如你 PC 的以太网适配器）进行通信。
- en: You connect to a Cloud node by creating a standard link from a GNS3 device (like
    a router) to the Cloud. Once this is done, any data leaving a virtual interface
    passes through the Cloud node’s NIO connection to a destination outside GNS3,
    like a physical Ethernet adapter. Keep in mind that throughput limitations presented
    in GNS3 also apply to the virtual interface connected to the Cloud mode, meaning
    those limitations will affect your overall performance.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你通过从 GNS3 设备（如路由器）到云节点创建标准链接来连接到云节点。完成后，任何离开虚拟接口的数据都会通过云节点的 NIO 连接传输到 GNS3 外部的目标，如物理以太网适配器。请记住，GNS3
    中显示的吞吐量限制也适用于连接到云模式的虚拟接口，这意味着这些限制会影响你的整体性能。
- en: To configure an NIO connection (shown in [Figure 7-8](ch07.html#cloud_node_configurator
    "Figure 7-8. Cloud Node configurator")), right-click the Cloud icon and select
    **Configure**.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置 NIO 连接（如[图 7-8](ch07.html#cloud_node_configurator "图 7-8。云节点配置器")所示），右键点击云图标并选择
    **配置**。
- en: '![Cloud Node configurator](httpatomoreillycomsourcenostarchimages2209033.png.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![云节点配置器](httpatomoreillycomsourcenostarchimages2209033.png.jpg)'
- en: Figure 7-8. Cloud Node configurator
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-8。云节点配置器
- en: 'The Node configurator provides six connection options:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 节点配置器提供六种连接选项：
- en: '****NIO Ethernet****. Creates a connection to one or more physical or logical
    interfaces in your PC. The NIO Ethernet configuration lets you set up both a generic
    NIO and a Linux-only NIO.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****NIO 以太网****。创建与计算机中一个或多个物理或逻辑接口的连接。NIO 以太网配置让你可以设置通用的 NIO 和仅限 Linux 的 NIO。'
- en: '****NIO UDP****. Creates a UDP socket in order to form a link between GNS3
    and other programs.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****NIO UDP****。创建一个 UDP 套接字，以便在 GNS3 和其他程序之间建立链接。'
- en: '****NIO TAP****. Creates a connection to a virtual TAP interface. TAP interfaces
    are often bridged to physical interfaces in your PC.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****NIO TAP****。创建与虚拟 TAP 接口的连接。TAP 接口通常会桥接到你计算机中的物理接口。'
- en: '****NIO UNIX****. Creates a UNIX Socket connection between GNS3 and some other
    application.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****NIO UNIX****。在 GNS3 和其他应用程序之间创建一个 UNIX 套接字连接。'
- en: '****NIO VDE****. Creates a link between GNS3 and a Virtual Distributed Ethernet
    device.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****NIO VDE****。在 GNS3 和虚拟分布式以太网设备之间创建一个链接。'
- en: '****NIO NULL****. Creates a link between GNS3 and a NULL device to form a dummy
    link.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****NIO NULL****。在 GNS3 和 NULL 设备之间创建一个链接，形成一个虚拟链路。'
- en: '****Misc.**** Allows you to rename a Cloud node.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****其他.**** 允许你重命名一个云节点。'
- en: To configure a connection, select the NIO connection type, choose the options
    you want, and select **Add**. You can configure more than one connection per Cloud
    node, allowing you to link multiple GNS3 devices, just as you can use multiple
    interfaces on a GNS3 switch or router.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置连接，选择 NIO 连接类型，选择你想要的选项，然后点击 **添加**。你可以为每个云节点配置多个连接，这样你可以将多个 GNS3 设备链接在一起，就像你可以在
    GNS3 交换机或路由器上使用多个接口一样。
- en: On Linux systems, you may want to use a generic NIO connection, which may work
    more reliably than a Linux-specific NIO. One reason is that the Linux-specific
    NIO may strip incoming VLAN tags. If you’re having difficulty with a connection
    on Linux, try both to see which works better.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 系统中，你可能希望使用通用的 NIO 连接，这可能比特定于 Linux 的 NIO 更可靠。一个原因是特定于 Linux 的 NIO 可能会去除传入的
    VLAN 标签。如果你在 Linux 上遇到连接困难，尝试两者，看看哪一个效果更好。
- en: Connecting GNS3 Devices to Physical Hardware
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 GNS3 设备连接到物理硬件
- en: The ability to connect projects to physical hardware is what transforms GNS3
    from a diamond in the rough to the Great Star of Africa. Using the Cloud node,
    you can establish trunk links with live Cisco switches and even access the Internet
    from your GNS3 devices. This gives GNS3 nearly limitless networking possibilities.
    Connecting GNS3 to real devices is easier on some systems than others, but it
    should work on all major operating systems.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 将项目连接到物理硬件的能力，是将 GNS3 从一个粗糙的钻石转变为非洲之星的关键。通过使用云节点，你可以与实时的 Cisco 交换机建立干道链接，甚至可以从
    GNS3 设备访问互联网。这使 GNS3 拥有几乎无限的网络可能性。将 GNS3 连接到真实设备在某些系统上比在其他系统上更容易，但它应该能在所有主要操作系统上工作。
- en: Dynamips Permissions
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Dynamips 权限
- en: Before connecting GNS3 devices to a physical Ethernet adapter, you may need
    to make a few changes on your PC. If your Cloud node is configured using NIO Ethernet
    on a Windows system, you should run GNS3 using administrator privileges by right-clicking
    the GNS3 icon and selecting **Run as Administrator**. To make this option permanent,
    right-click the GNS3 icon and choose **Properties**. Select the Compatibility
    tab and place a check next to **Run this program as an administrator**.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在将GNS3设备连接到物理以太网适配器之前，你可能需要对PC进行一些更改。如果你的Cloud节点在Windows系统上使用NIO以太网配置，你应该通过右键点击GNS3图标并选择**以管理员身份运行**来以管理员权限运行GNS3。为了使此选项永久生效，右键点击GNS3图标并选择**属性**，然后选择兼容性选项卡，在**以管理员身份运行此程序**前打勾。
- en: On Unix-based systems, you need to elevate the permissions of Dynamips before
    using NIO Ethernet or NIO TAP connections. If you skip this step, you’ll have
    to run GNS3 using the root account. Otherwise, NIO connections will fail and GNS3
    will display an error message in the GNS3 Console window.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于Unix的系统上，你需要提升Dynamips的权限才能使用NIO以太网或NIO TAP连接。如果跳过此步骤，你将不得不以root账户运行GNS3。否则，NIO连接将失败，GNS3将在控制台窗口显示错误消息。
- en: 'To set the correct Dynamips permissions on OS X, use the following commands:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在OS X上设置正确的Dynamips权限，请使用以下命令：
- en: '[PRE9]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Setting permissions on most Linux distributions works the same way; just replace
    the file path with the correct location for your `dynamips` file, as shown in
    the following code. If you’re running a Debian-based Linux system like Ubuntu,
    use the `setcap` command instead because it’s more secure.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数Linux发行版上设置权限的方式相同；只需将文件路径替换为你的`dynamips`文件的正确位置，如以下代码所示。如果你使用的是基于Debian的Linux系统（如Ubuntu），则应该使用`setcap`命令，因为它更安全。
- en: '[PRE10]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: After changing the Dynamips permissions, you can run GNS3 as a regular user,
    but Dynamips will be treated as though it’s being run by the root account.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 更改Dynamips权限后，你可以作为普通用户运行GNS3，但Dynamips将被视为由root账户运行。
- en: Preparing Your PC for a Bridge
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为桥接准备你的PC
- en: Some operating systems don’t allow GNS3 to communicate directly with your PC’s
    Ethernet hardware, and Wi-Fi adapters usually don’t work, either. Before using
    GNS3 with an Ethernet adapter on those systems, you might need to install additional
    software to make it work.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 一些操作系统不允许GNS3直接与PC的以太网硬件通信，Wi-Fi适配器通常也无法使用。在这些系统上使用以太网适配器前，可能需要安装额外的软件才能使其工作。
- en: A common solution is to install a virtual interface driver and use a bridge
    to associate it with your PC’s physical Ethernet adapter. GNS3 then passes network
    data to the virtual interface, which hands it off to the physical Ethernet interface
    via the bridge. On Unix-based systems, virtual interfaces are often provided using
    TUN/TAP drivers. On Windows, you’ll use a loopback adapter that’s bridged to your
    physical Ethernet adapter.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 一种常见的解决方案是安装虚拟接口驱动程序，并使用桥接将其与PC的物理以太网适配器关联。然后，GNS3会将网络数据传递给虚拟接口，虚拟接口通过桥接将数据转交给物理以太网接口。在基于Unix的系统中，虚拟接口通常通过TUN/TAP驱动程序提供。在Windows系统中，你将使用一个回环适配器，并将其桥接到物理以太网适配器。
- en: Even if your PC’s Ethernet hardware works directly with GNS3, the following
    methods are recommended and predictable ways to connect GNS3 to the outside world.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 即使PC的以太网硬件能够直接与GNS3协同工作，以下方法仍然是推荐的，并且是连接GNS3到外部网络的可预测方式。
- en: Using a Loopback Adapter on Windows
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Windows上使用回环适配器
- en: In Windows, a *loopback adapter driver* provides a virtual network interface
    that can be bridged to a physical Ethernet adapter in your PC. To add a loopback
    adapter to Windows, go to **Control Panel** ▸ **Device Manager**. Right-click
    your computer name from the list, and select **Add legacy hardware**. Click **Next**,
    select **Install the hardware that I manually select from a list (Advanced)**,
    and click **Next** again. Choose **Network Adapters** from the list and click
    **Next**. From the Add Hardware wizard, shown in [Figure 7-9](ch07.html#selecting_the_microsoft_loopback_adapter
    "Figure 7-9. Selecting the Microsoft Loopback Adapter"), select **Microsoft**
    under Manufacturer, and then scroll down and select the Network Adapter named
    **Microsoft Loopback Adapter**. Click **Next** and **Finish** to complete the
    installation. You must reboot Windows after installing the Microsoft Loopback
    Adapter.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 中，*回环适配器驱动程序* 提供了一个虚拟网络接口，可以与 PC 中的物理以太网适配器桥接。要在 Windows 中添加回环适配器，打开
    **控制面板** ▸ **设备管理器**。右键点击列表中的计算机名称，选择 **添加遗留硬件**。点击 **下一步**，选择 **手动从列表中选择要安装的硬件（高级）**，然后再次点击
    **下一步**。从列表中选择 **网络适配器** 并点击 **下一步**。在添加硬件向导中，如 [图 7-9](ch07.html#selecting_the_microsoft_loopback_adapter
    "图 7-9. 选择 Microsoft 回环适配器") 所示，选择 **Microsoft** 作为制造商，然后滚动并选择名为 **Microsoft 回环适配器**
    的网络适配器。点击 **下一步** 和 **完成** 完成安装。安装 Microsoft 回环适配器后，必须重启 Windows。
- en: The Microsoft loopback adapter can also be installed by running the `loopback-manager.cmd`
    command from your GNS3 installation directory.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过在 GNS3 安装目录中运行 `loopback-manager.cmd` 命令来安装 Microsoft 回环适配器。
- en: To create a bridge between the loopback adapter and Ethernet adapter, go to
    **Control Panel** ▸ **Network and Sharing Center** and choose **Change Adapter
    Settings**. Select the two adapters and right-click to bring up the menu shown
    in [Figure 7-10](ch07.html#creating_a_bridge_using_a_microsoft_loop "Figure 7-10. Creating
    a bridge using a Microsoft Loopback Adapter and an Ethernet adapter"). Select
    **Bridge connections** to create the bridge interface between the two adapters.
    When you’re finished, restart Windows to allow the changes to take effect.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 要在回环适配器和以太网适配器之间创建桥接，请打开 **控制面板** ▸ **网络和共享中心**，选择 **更改适配器设置**。选择这两个适配器，右键点击并弹出菜单，如
    [图 7-10](ch07.html#creating_a_bridge_using_a_microsoft_loop "图 7-10. 使用 Microsoft
    回环适配器和以太网适配器创建桥接") 所示。选择 **桥接连接**，以在两个适配器之间创建桥接接口。完成后，重启 Windows 以使更改生效。
- en: '![Selecting the Microsoft Loopback Adapter](httpatomoreillycomsourcenostarchimages2209035.png.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![选择 Microsoft 回环适配器](httpatomoreillycomsourcenostarchimages2209035.png.jpg)'
- en: Figure 7-9. Selecting the Microsoft Loopback Adapter
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-9. 选择 Microsoft 回环适配器
- en: '![Creating a bridge using a Microsoft Loopback Adapter and an Ethernet adapter](httpatomoreillycomsourcenostarchimages2209037.png.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Microsoft 回环适配器和以太网适配器创建桥接](httpatomoreillycomsourcenostarchimages2209037.png.jpg)'
- en: Figure 7-10. Creating a bridge using a Microsoft Loopback Adapter and an Ethernet
    adapter
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-10. 使用 Microsoft 回环适配器和以太网适配器创建桥接
- en: To allow GNS3 to use your physical Ethernet adapter on a Windows system, you’ll
    need to configure a Cloud node with the loopback adapter (see [Connecting GNS3
    Devices to Physical Hardware](ch07.html#connecting_gns3_devices_to_physical_hard
    "Connecting GNS3 Devices to Physical Hardware")). It’s a good idea to rename your
    loopback adapter, so it can be clearly identified within GNS3\. In this example,
    I recommend changing *Local Area Connection 2* to *Loopback*.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 GNS3 在 Windows 系统中使用物理以太网适配器，你需要用回环适配器配置一个云节点（参见 [将 GNS3 设备连接到物理硬件](ch07.html#connecting_gns3_devices_to_physical_hard
    "将 GNS3 设备连接到物理硬件")）。建议你重命名回环适配器，以便在 GNS3 中清晰地识别它。在这个示例中，我建议将 *本地连接 2* 改为 *回环适配器*。
- en: TUN/TAP Drivers on OS X
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OS X 上的 TUN/TAP 驱动程序
- en: If you’re using OS X, you need to install a virtual interface driver before
    GNS3 can access a physical Ethernet Interface. To install TUN/TAP drivers on OS
    X, download the driver software for your version of OS X from SourceForge (*[http://tuntaposx.sourceforge.net/](http://tuntaposx.sourceforge.net/)*),
    run the installer, and follow the instructions.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 OS X，你需要先安装虚拟接口驱动程序，才能让 GNS3 访问物理以太网接口。要在 OS X 上安装 TUN/TAP 驱动程序，请从 SourceForge
    (*[http://tuntaposx.sourceforge.net/](http://tuntaposx.sourceforge.net/)*) 下载适用于你
    OS X 版本的驱动软件，运行安装程序并按照指示操作。
- en: 'The drivers should be installed under */Library/Extensions* and should load
    automatically when you restart your system. To manually load the driver, change
    to the */Library/Extensions* directory and enter the following:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 驱动程序应该安装在 */Library/Extensions* 目录下，并应在你重启系统时自动加载。若要手动加载驱动程序，切换到 */Library/Extensions*
    目录并输入以下命令：
- en: '[PRE11]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Before launching GNS3, enter the following command to set permissions on your
    TAP interfaces. You’ll have to enter the command each time you reboot your Mac.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动 GNS3 之前，输入以下命令来设置你的 TAP 接口权限。每次重启你的 Mac 时，你都需要输入该命令。
- en: '[PRE12]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: To activate a TAP interface and bridge it to a physical Ethernet port in your
    PC, you must enter the following commands *after* you add a Cloud and attach a
    router to the nio_tap interface, configured using */dev/tap0*. If you enter the
    commands beforehand, they will fail and your bridge won’t work. You will have
    to enter these commands every time you load a project that includes a cloud node.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要激活 TAP 接口并将其与 PC 中的物理以太网端口桥接，你必须在*添加云节点并将路由器连接到使用 */dev/tap0* 配置的 nio_tap 接口后*输入以下命令。如果提前输入这些命令，它们将失败，桥接也无法正常工作。每次加载包含云节点的项目时，你都需要输入这些命令。
- en: '[PRE13]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: After entering the commands from a terminal, OS X should bridge the tap0 interface
    to the physical Ethernet interface in your Mac, which is en0 in this example.
    You should use the `ifconfig` command to verify the name of your Mac’s Ethernet
    interface and then replace en0 with that name.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端输入命令后，OS X 应该会将 tap0 接口与 Mac 中的物理以太网接口（本例中为 en0）进行桥接。你应该使用 `ifconfig` 命令来验证你
    Mac 上以太网接口的名称，然后用该名称替换 en0。
- en: Note
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*If you change the maximum transmission unit (MTU) size of an interface, you
    may see the error “ifconfig: BRDGADD tap0: Invalid argument” when you go to create
    the bridge. In this case, you need to make sure that the MTU size of your physical
    interface matches the MTU size of the TAP interface.*'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你更改了接口的最大传输单元（MTU）大小，在创建桥接时可能会看到“ifconfig: BRDGADD tap0: Invalid argument”错误。在这种情况下，你需要确保物理接口的
    MTU 大小与 TAP 接口的 MTU 大小匹配。*'
- en: I recommend adding an annotation to your project that includes these commands
    as a reminder to create the bridge when you open a project. Then, after opening
    the project you can copy the annotation and paste it into a terminal window to
    save time. Don’t forget to enter those commands *every time you open a project*
    that bridges Ethernet to a TAP interface, or it won’t work.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议在你的项目中添加一个注释，其中包含这些命令，以便在打开项目时提醒你创建桥接。然后，在打开项目后，你可以复制该注释并将其粘贴到终端窗口中，从而节省时间。别忘了每次打开一个将以太网接口桥接到
    TAP 接口的项目时，都要输入这些命令，*否则它不会起作用*。
- en: TUN/TAP Drivers on Ubuntu Linux
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ubuntu Linux 上的 TUN/TAP 驱动程序
- en: On Linux, you should be able to connect a Cloud node directly to your Ethernet
    interface using the NIO Ethernet tab under the Cloud configurator, but if you
    find that you need TUN/TAP drivers for Ubuntu, update your package manager and
    enter the following command to install the package.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 上，你应该能够使用云配置器中的 NIO 以太网标签将云节点直接连接到你的以太网接口，但如果你发现 Ubuntu 需要 TUN/TAP 驱动程序，请更新你的包管理器并输入以下命令来安装该软件包。
- en: '[PRE14]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: If you’re running some other version of Linux, you may have to install a different
    package, but this package should work on most Debian-based distributions.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你运行的是其他版本的 Linux，可能需要安装不同的软件包，但这个软件包应该适用于大多数基于 Debian 的发行版。
- en: Connecting to Live Switches
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接到实时交换机
- en: GNS3 is great software, but it has some limitations. For example, the NM-16ESW
    switch module doesn’t include all the advanced features of an actual layer 2 or
    layer 3 switch. If you want to work with advanced switching, you have to use additional
    software like Cisco IOU or use physical Cisco switches. If you’re creating CCNA
    labs, then one live Cisco switch might be enough, but if you’re creating CCNP
    or CCIE labs, you’ll probably use multiple live switches. Often the goal is to
    have a GNS3 router connected to each external switch. This is tricky because most
    PCs have only one Ethernet adapter. Fortunately, GNS3 and IOS have this sorted
    out. Your options are to trunk VLANs to the switch over a single Ethernet adapter
    in your PC or to install multiple Ethernet adapters in your PC.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: GNS3 是一个很棒的软件，但它也有一些限制。例如，NM-16ESW 交换模块并没有包含实际二层或三层交换机的所有高级功能。如果你想进行高级交换操作，你必须使用额外的软件，如
    Cisco IOU 或使用物理的 Cisco 交换机。如果你正在创建 CCNA 实验室，那么一个实际的 Cisco 交换机可能就足够了，但如果你创建的是 CCNP
    或 CCIE 实验室，你可能需要使用多个实际交换机。通常，目标是让 GNS3 路由器连接到每个外部交换机。这有些棘手，因为大多数 PC 只有一个以太网适配器。幸运的是，GNS3
    和 IOS 已经解决了这个问题。你的选择是通过 PC 的单个以太网适配器将 VLANs 传输到交换机，或者在你的 PC 中安装多个以太网适配器。
- en: In this section, I’ll cover two ways to connect GNS3 devices to live Cisco switches.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我将介绍两种将 GNS3 设备连接到实际 Cisco 交换机的方法。
- en: '****Standard 802.1Q Trunk****. This method uses a standard 802.1Q trunk to
    allow GNS3 devices to communicate with a live Cisco switch via your PC’s Ethernet
    adapter.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****标准 802.1Q 中继****。这种方法使用标准 802.1Q 中继，通过 PC 的以太网适配器，使 GNS3 设备能够与实际的 Cisco
    交换机通信。'
- en: '****Breakout Switch****. This method uses a specially configured Ethernet switch
    called a breakout switch to allow GNS3 devices to connect to multiple live switches
    using only a single Ethernet adapter in your PC. To create a breakout switch,
    you must have a second physical Ethernet switch on hand to use as the breakout
    switch.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****断开交换机****。这种方法使用一个特别配置的以太网交换机，称为断开交换机，允许 GNS3 设备通过 PC 的单个以太网适配器连接到多个实际交换机。要创建断开交换机，你必须手头有第二个物理以太网交换机作为断开交换机。'
- en: The option you choose depends on how many switches you own, your PC’s operating
    system, and what Ethernet adapters are already installed in your PC. Let’s start
    by looking at how an 802.1Q trunk works to reach a Cisco switch.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你选择的选项取决于你拥有多少交换机，你的 PC 操作系统，以及你 PC 中已安装了哪些以太网适配器。让我们首先看看 802.1Q 中继是如何工作的，以便连接到
    Cisco 交换机。
- en: Configuring a Standard 802.1Q Trunk
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置标准 802.1Q 中继
- en: In my opinion, an 802.1Q trunk is the best way to attach live switches to your
    GNS3 projects. The advantages of a standard 802.1Q trunk are that it is easy to
    set up and works the same as connecting a switch to a physical network. The disadvantage
    is that your PC operating system or your PC’s Ethernet drivers might not support
    it. Often they strip the 802.1Q tags from packets coming from the switch into
    your PC. Without the proper tags, GNS3 has no way of knowing which VLANs your
    packets belong to and in turn doesn’t know where to forward the packets, which
    breaks your network.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，802.1Q 中继是将实际交换机连接到你的 GNS3 项目的最佳方式。标准 802.1Q 中继的优点是它易于设置，且与将交换机连接到物理网络的方式相同。缺点是你的
    PC 操作系统或以太网驱动程序可能不支持它。通常它们会去掉从交换机传入你 PC 的数据包中的 802.1Q 标签。没有正确的标签，GNS3 就无法知道你的数据包属于哪个
    VLAN，进而不知道该如何转发数据包，这会导致网络故障。
- en: If you poke around the Internet, you’ll find all sorts of creative solutions
    that people have come up with to circumvent this problem, but they are generally
    platform-specific and vary from machine to machine.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在网上搜寻，你会发现人们提出了各种各样的创意解决方案来绕过这个问题，但这些解决方案通常是平台特定的，并且因机器而异。
- en: Note
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*One way to prevent tag stripping on OS X and Linux is to use a USB Ethernet
    adapter that supports 802.1Q tagging and jumbo frames. One such adapter that works
    well is the StartTech USB31000SW adapter, but any adapter that uses the ASIX AX88772A
    chipset should work.*'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '*一种防止在 OS X 和 Linux 上去除标签的方法是使用支持 802.1Q 标签和 Jumbo 帧的 USB 以太网适配器。一款表现良好的适配器是
    StartTech USB31000SW 适配器，但任何使用 ASIX AX88772A 芯片组的适配器应该都可以使用。*'
- en: In this example, you’ll place either an EtherSwitch router or Ethernet switch
    node in your workspace and configure it with the 802.1Q trunking protocol. Next,
    you’ll add a Cloud node to your workspace and configure it using an NIO interface,
    and link it to the GNS3 switch. The Cloud node can either be directly connected,
    or bridged, to your PC’s Ethernet adapter (depending on your OS). You’ll then
    plug an Ethernet cable from your PC’s Ethernet adapter into a port on the live
    Cisco switch. The switch port you choose also needs to be configured with 802.1Q
    trunking. After both the GNS3 switch and physical switch have been configured,
    you should be able to route GNS3-generated VLAN packets through the trunk to the
    live switch.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，你将把一个EtherSwitch路由器或以太网交换节点放入工作空间，并使用802.1Q干道协议进行配置。接下来，将一个云节点添加到工作空间，并使用NIO接口进行配置，然后将其连接到GNS3交换机。云节点可以直接连接或通过桥接连接到你的PC的以太网适配器（具体取决于操作系统）。然后，将以太网电缆从PC的以太网适配器插入到实时Cisco交换机的一个端口。你选择的交换机端口也需要配置为802.1Q干道。配置完成后，你应该能够通过干道将GNS3生成的VLAN数据包路由到实时交换机。
- en: In this section, we’ll create a simple project that connects our GNS3 network
    to a live c3550 switch using two VLANs (10 and 20). Begin by creating the topology
    shown in [Figure 7-11](ch07.html#sample_topology_using_a_standard_dot1q_t "Figure 7-11. Sample
    topology using a standard dot1q trunk to live switch"). When configuring the Cloud
    node, choose your PC’s Ethernet adapter name, found under the NIO Ethernet tab.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将创建一个简单的项目，将我们的GNS3网络通过两个VLAN（10和20）连接到实时c3550交换机。首先，创建[图7-11](ch07.html#sample_topology_using_a_standard_dot1q_t
    "图7-11. 使用标准dot1q干道连接到实时交换机的示例拓扑")中显示的拓扑。在配置云节点时，选择你的PC的以太网适配器名称，该名称可以在NIO以太网标签下找到。
- en: '![Sample topology using a standard dot1q trunk to live switch](httpatomoreillycomsourcenostarchimages2209039.png.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![使用标准dot1q干道连接到实时交换机的示例拓扑](httpatomoreillycomsourcenostarchimages2209039.png.jpg)'
- en: Figure 7-11. Sample topology using a standard dot1q trunk to live switch
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-11. 使用标准dot1q干道连接到实时交换机的示例拓扑
- en: 'To configure VLANs and an 802.1Q trunk using the *EtherSwitch router*, open
    a console on ESW1 and enter the following commands:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用*EtherSwitch路由器*配置VLAN和802.1Q干道，打开ESW1的控制台并输入以下命令：
- en: '[PRE15]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The previous commands create VLAN 10 ➊ and 20 ➋ on the switch, configure a trunk
    port ➌ using the dot1q protocol ➍, and assign access ports to VLAN 10 ➎ (for router
    R2) and VLAN 20 ➏ (for router R3).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的命令在交换机上创建了VLAN 10 ➊和VLAN 20 ➋，配置了一个使用dot1q协议的干道端口 ➌ 以及将接入端口分配给VLAN 10 ➎（用于路由器R2）和VLAN
    20 ➏（用于路由器R3）。
- en: If instead you choose to use an Ethernet switch node, configure one port as
    an 802.1Q trunk and the others as VLAN access ports, as shown in [Figure 7-12](ch07.html#ethernet_switch_node_configured_with_a_d
    "Figure 7-12. Ethernet switch node configured with a dot1q trunk port").
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择使用以太网交换节点，配置一个端口为802.1Q干道，其余端口为VLAN接入端口，如[图7-12](ch07.html#ethernet_switch_node_configured_with_a_d
    "图7-12. 配置了dot1q干道端口的以太网交换节点")所示。
- en: '![Ethernet switch node configured with a dot1q trunk port](httpatomoreillycomsourcenostarchimages2209041.png.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![配置了dot1q干道端口的以太网交换节点](httpatomoreillycomsourcenostarchimages2209041.png.jpg)'
- en: Figure 7-12. Ethernet switch node configured with a dot1q trunk port
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-12. 配置了dot1q干道端口的以太网交换节点
- en: Ports 1 and 2 are configured as access ports using VLAN 10 ➊ and 20 ➋, and port
    3 is the dot1q trunk port ➌ that’s connected to the Cloud node.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 端口1和端口2被配置为接入端口，分别使用VLAN 10 ➊和VLAN 20 ➋，端口3是dot1q干道端口 ➌，连接到云节点。
- en: Next, log on to your live Cisco switch and create the same VLANs. Then, configure
    the 802.1Q trunk port and cable it to your PC’s Ethernet adapter. The following
    listing is an example of how to configure a c3550 switch, using commands you’ve
    seen throughout the chapter.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，登录到实时Cisco交换机并创建相同的VLAN。然后，配置802.1Q干道端口，并将其连接到你的PC以太网适配器。以下列表是如何使用你在本章中看到的命令来配置c3550交换机的示例。
- en: '[PRE16]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: To complete the project, configure routers R2 and R3\. Log on to router R2 and
    configure an IP address and default gateway for VLAN 10.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 为完成项目，配置路由器R2和R3。登录到路由器R2并为VLAN 10配置IP地址和默认网关。
- en: '[PRE17]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Now, log on to router R3 and configure an IP address and default gateway for
    VLAN 20.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，登录到路由器R3并为VLAN 20配置IP地址和默认网关。
- en: '[PRE18]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Test VLAN routing through the switch by entering a `ping` command from one VLAN
    to another.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 通过从一个VLAN到另一个VLAN输入`ping`命令，测试VLAN通过交换机的路由功能。
- en: '[PRE19]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: When you’re finished with the project, you can further verify the configuration
    using tools like CDP or Wireshark.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 项目完成后，你可以使用CDP或Wireshark等工具进一步验证配置。
- en: Creating the Elusive Breakout Switch
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建难以捉摸的突破交换机
- en: A *breakout switch* is another way to connect real switches to GNS3 projects,
    and it’s common to set one up using Ubuntu Linux. Although a breakout switch does
    work on other systems, it’s easiest to set up on Linux. As mentioned earlier,
    other operating systems like Windows and OS X might remove VLAN information from
    the packets. For this reason, it’s best to install Ubuntu on real hardware if
    you plan to create a breakout switch. If you use a virtual machine, your underlying
    host OS may strip the VLAN tags, and the breakout switch won’t work. You can sometimes
    get around this by using a USB Ethernet adapter, like the StartTech USB31000SW
    mentioned in [Configuring a Standard 802.1Q Trunk](ch07.html#configuring_a_standard_802dot1q_trunk
    "Configuring a Standard 802.1Q Trunk").
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '*突破交换机*是将真实交换机连接到 GNS3 项目的另一种方式，通常使用 Ubuntu Linux 设置。尽管突破交换机在其他系统上也可以工作，但在
    Linux 上设置最为简单。如前所述，像 Windows 和 OS X 这样的其他操作系统可能会去除数据包中的 VLAN 信息。因此，如果你计划创建突破交换机，最好在真实硬件上安装
    Ubuntu。如果你使用虚拟机，底层的主机操作系统可能会去除 VLAN 标签，导致突破交换机无法正常工作。有时，你可以通过使用 USB 以太网适配器来解决这个问题，比如在[配置标准
    802.1Q 中继](ch07.html#configuring_a_standard_802dot1q_trunk "配置标准 802.1Q 中继")中提到的
    StartTech USB31000SW。'
- en: This switching method requires a minimum of two real Cisco switches; one is
    the breakout switch, and the other is one or more live Cisco switches that are
    used in your GNS3 project. The breakout switch is used to fool the live Cisco
    switches into thinking that each of your GNS3 routers is *directly connected*
    to a live switch with an Ethernet cable. In reality, only one Ethernet adapter
    is used in your PC to connect all your GNS3 routers to the live switches, and
    that adapter is connected to the breakout switch. The breakout switch is then
    configured to *break out all the VLANs* into individual interfaces that you plug
    into other live Cisco switches using Ethernet cables (one per VLAN). I call these
    *breakout cables*. [Figure 7-13](ch07.html#physical_layout_using_a_breakout_switch
    "Figure 7-13. Physical layout using a breakout switch and live Cisco switches")
    shows the physical layout of your PC and switches.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这种交换方法至少需要两台真实的 Cisco 交换机；一台是突破交换机，另一台是你在 GNS3 项目中使用的一个或多个实时 Cisco 交换机。突破交换机用于欺骗实时
    Cisco 交换机，让它们认为你的每个 GNS3 路由器都通过以太网电缆*直接连接*到实时交换机。实际上，你的 PC 只使用一个以太网适配器将所有 GNS3
    路由器连接到实时交换机，这个适配器连接到突破交换机。突破交换机随后配置为*将所有 VLAN 打破*为单独的接口，你可以通过以太网电缆（每个 VLAN 一根）将它们插入到其他实时
    Cisco 交换机中。我称这些为*突破电缆*。[图 7-13](ch07.html#physical_layout_using_a_breakout_switch
    "图 7-13. 使用突破交换机和实时 Cisco 交换机的物理布局") 显示了你的 PC 和交换机的物理布局。
- en: '![Physical layout using a breakout switch and live Cisco switches](httpatomoreillycomsourcenostarchimages2209043.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![使用突破交换机和实时 Cisco 交换机的物理布局](httpatomoreillycomsourcenostarchimages2209043.png)'
- en: Figure 7-13. Physical layout using a breakout switch and live Cisco switches
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-13. 使用突破交换机和实时 Cisco 交换机的物理布局
- en: Here’s the flyby view of how it works. Breakout VLANs are configured on your
    Linux Ethernet adapter using the `vlan` package, and an 802.1Q trunk is configured
    on the breakout switch. In GNS3, you’ll add one or more Cloud nodes that are configured
    with the Linux breakout VLANs using NIO Ethernet interfaces. In your GNS3 project,
    a router is connected to each of the Cloud node’s VLAN interfaces (one router
    per interface). Packets leaving the routers go into the Cloud node, where Linux
    tags them with a VLAN ID and passes them to the breakout switch using your PC’s
    Ethernet adapter. The breakout switch receives the packets on a standard 802.1Q
    trunk port. From there, the breakout switch uses the VLAN IDs to identify and
    transparently pass the packets to one (or more) live Cisco switches. What makes
    this so ingenious is that each GNS3 router has a separate Ethernet cable that
    is connected to a port on the live Cisco switch, even though your PC has only
    a single Ethernet adapter.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是它如何工作的飞行视角图。突破 VLAN 配置在你的 Linux 以太网适配器上，使用 `vlan` 包，而在突破交换机上配置一个 802.1Q 中继。在
    GNS3 中，你将添加一个或多个云节点，这些节点使用 NIO 以太网接口配置 Linux 突破 VLAN。在 GNS3 项目中，一个路由器连接到每个云节点的
    VLAN 接口（每个接口一个路由器）。离开路由器的数据包进入云节点，Linux 给它们标记 VLAN ID，并通过你的 PC 的以太网适配器将它们传递到突破交换机。突破交换机在标准的
    802.1Q 中继端口接收这些数据包。从那里，突破交换机使用 VLAN ID 来识别并透明地将数据包传递到一个（或多个）实时 Cisco 交换机。这种方法的巧妙之处在于，每个
    GNS3 路由器都有一根单独的以太网电缆，连接到实时 Cisco 交换机的端口，尽管你的 PC 只有一个以太网适配器。
- en: Breakout switches are fairly straightforward to set up on Linux. Start by updating
    your package manager and installing VLAN support on your Ubuntu system.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 上配置断开开关相对简单。首先，更新您的包管理器并在 Ubuntu 系统上安装 VLAN 支持。
- en: '[PRE20]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now, enable the `8021q` Linux module using the `modprobe` command.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用 `modprobe` 命令启用 `8021q` Linux 模块。
- en: '[PRE21]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Next, increase the MTU frame size on the Ethernet interface, and create your
    breakout VLANs using the `vconfig` command. Be sure to substitute *`eth0`* with
    the name of your interface.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，增加以太网接口的 MTU 帧大小，并使用 `vconfig` 命令创建您的断开 VLAN。确保将 *`eth0`* 替换为您的接口名称。
- en: '[PRE22]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Note
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*Your Ethernet adapter must support frame sizes above the standard maximum
    of 1500 bytes.*'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '*您的以太网适配器必须支持超过标准最大值 1500 字节的帧大小。*'
- en: The increased frame size ➊ makes room for the additional VLAN tags. Create one
    breakout VLAN for each router in your project. In the previous listing, I created
    two breakout VLANs (10 ➋ and 20 ➌) on my Linux PC’s *`eth0`* interface.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 增加的帧大小 ➊ 为额外的 VLAN 标签提供了空间。为您的项目中的每个路由器创建一个断开 VLAN。在前面的列表中，我在我的 Linux PC 的 *`eth0`*
    接口上创建了两个断开 VLAN（10 ➋ 和 20 ➌）。
- en: Note
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*Don’t confuse breakout VLANs with VLANs you create in your GNS3 projects.
    It’s important to understand that breakout VLANs should be used only by Linux
    and the breakout switch—they are not to be used in your GNS3 project or live Cisco
    switches.*'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要将断开 VLAN 与您在 GNS3 项目中创建的 VLAN 混淆。重要的是要理解，断开 VLAN 应仅由 Linux 和断开交换机使用——它们不能在您的
    GNS3 项目或实时 Cisco 交换机中使用。*'
- en: Start configuring the breakout switch by increasing the system-wide MTU size.
    After the command is entered, you must reload the switch for the change to take
    effect.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 开始通过增加系统范围的 MTU 大小来配置断开开关。输入命令后，必须重新加载交换机才能使更改生效。
- en: '[PRE23]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'After the switch reboots, log on and configure an 802.1Q trunk link as follows:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 交换机重启后，登录并按如下方式配置 802.1Q 中继链路：
- en: '[PRE24]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The interface you configure as the trunk is then connected to your PC’s physical
    Ethernet adapter using an Ethernet cable. As shown here, dot1q encapsulation ➊
    is configured on the trunk port ➋, and all VLANs ➌ are allowed through the trunk.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 配置为中继的接口然后通过以太网电缆连接到您的 PC 的物理以太网适配器。如图所示，dot1q 封装 ➊ 配置在中继端口 ➋ 上，并且所有 VLAN ➌
    都允许通过中继。
- en: 'Next, go under each interface that you plan to connect to a live switch, and
    configure a breakout VLAN and a dot1q tunnel for each VLAN, as shown in the following
    listing:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，进入您计划连接到实时交换机的每个接口，并为每个 VLAN 配置一个断开 VLAN 和一个 dot1q 隧道，如以下列表所示：
- en: '[PRE25]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Here, our breakout switch’s FastEthernet 0/2 interface is configured for VLAN
    10 ➊, dot1q tunneling ➋, and Cisco discovery protocol tunneling ➌. FastEthernet
    0/3 is configured the same way, but for VLAN 20 ➍. These are the interfaces used
    to connect GNS3 routers to your live Cisco switches.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们的断开开关的 FastEthernet 0/2 接口配置为 VLAN 10 ➊，dot1q 隧道 ➋ 和 Cisco 发现协议隧道 ➌。FastEthernet
    0/3 配置方式相同，但用于 VLAN 20 ➍。这些接口用于将 GNS3 路由器连接到您的实时 Cisco 交换机。
- en: We already know that Cisco Discovery Protocol (CDP) is used to share and gather
    information with directly connected Cisco equipment, often called *neighbors*.
    However, our live Cisco switch is not directly connected to GNS3; instead, it’s
    connected to the breakout switch. In this instance, the only way to use CDP is
    by tunneling the protocol through the breakout switch to a live Cisco switch with
    the `l2protocol-tunnel cdp` command. (You can also tunnel STP and VTP.) This is
    where things get tricky because CDP tunneling does not work on all switches. If
    you need to use CDP, be sure to choose a breakout switch that fully supports CDP
    tunneling. [Table 7-1](ch07.html#common_cisco_switches_and_their_cdp_tunn "Table 7-1. Common
    Cisco Switches and Their CDP Tunneling Compatibility") lists a few common Cisco
    switches and their CDP tunneling capabilities.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经知道，Cisco 发现协议（CDP）用于共享和收集与直接连接的 Cisco 设备（通常称为 *邻居*）的信息。然而，我们的实时 Cisco 交换机并未直接连接到
    GNS3；它是通过断开开关连接的。在这种情况下，使用 CDP 的唯一方法是通过断开开关隧道协议到实时 Cisco 交换机，使用 `l2protocol-tunnel
    cdp` 命令。（您也可以隧道 STP 和 VTP。）事情变得复杂的地方是，CDP 隧道并非在所有交换机上都能工作。如果您需要使用 CDP，务必选择完全支持
    CDP 隧道的断开交换机。[表 7-1](ch07.html#common_cisco_switches_and_their_cdp_tunn "表 7-1.
    常见的 Cisco 交换机及其 CDP 隧道兼容性")列出了几款常见的 Cisco 交换机及其 CDP 隧道能力。
- en: Table 7-1. Common Cisco Switches and Their CDP Tunneling Compatibility
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 表 7-1. 常见的 Cisco 交换机及其 CDP 隧道兼容性
- en: '| Switch | CDP tunneling compatibility |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| 交换机 | CDP 隧道兼容性 |'
- en: '| --- | --- |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Cisco 2950 | CDP will not work in either direction. Layer 2 tunneling is
    not supported on this switch. |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| Cisco 2950 | CDP在任何方向都无法工作。该交换机不支持层2隧道。 |'
- en: '| Cisco 3550 | CDP works only in one direction. Neighbors cannot be seen on
    the switches regardless of the IOS version. |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| Cisco 3550 | CDP仅在一个方向上工作。不论IOS版本如何，交换机上无法看到邻居。 |'
- en: '| Cisco 3560 | CDP works only in one direction. Neighbors cannot be seen on
    the switches regardless of the IOS version. |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| Cisco 3560 | CDP仅在一个方向上工作。不论IOS版本如何，交换机上无法看到邻居。 |'
- en: '| Cisco 3750 | Bidirectional CDP and fully functional (layer 2 and layer 3)
    using IP Services image. IP Base image does not support tunneling. |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| Cisco 3750 | 双向CDP和完全功能（层2和层3），使用IP服务镜像。IP基础镜像不支持隧道功能。 |'
- en: '| Cisco 4948 | Bidirectional CDP and fully functional (layer 2 and layer 3)
    using a minimum IP Services image. |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| Cisco 4948 | 双向CDP和完全功能（层2和层3），使用最低IP服务镜像。 |'
- en: The Cisco 3750 switch works well, both as a breakout switch and for tunneling
    CDP, but it’s not the cheapest switch available. If you don’t have the cash to
    spring for this model, you can choose a cheaper model that should work as a breakout
    switch, but you won’t have complete transparency in your GNS3 project.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Cisco 3750交换机表现良好，既可以作为分路交换机，也可以用于隧道CDP，但它不是最便宜的交换机。如果你没有足够的预算购买此型号，你可以选择一个较便宜的型号，应该能够作为分路交换机工作，但你在GNS3项目中不会获得完全透明性。
- en: Before continuing, be sure that Fa0/1 on the breakout switch is connected to
    your PC’s Ethernet port, and that Fa0/2 and Fa0/3 are connected to Ethernet ports
    on your live project switches. After checking those connections, start GNS3 and
    configure a Cloud node using the Linux VLANs you created previously, as shown
    in [Figure 7-14](ch07.html#configuring_a_cloud_node_using_linux_vla "Figure 7-14. Configuring
    a Cloud node using Linux VLANs").
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，请确保分路交换机的Fa0/1端口已连接到你的PC的以太网端口，Fa0/2和Fa0/3已连接到你现场项目交换机的以太网端口。检查完这些连接后，启动GNS3并使用你之前创建的Linux
    VLAN配置云节点，如[图7-14](ch07.html#configuring_a_cloud_node_using_linux_vla "图7-14.
    使用Linux VLAN配置云节点")所示。
- en: '![Configuring a Cloud node using Linux VLANs](httpatomoreillycomsourcenostarchimages2209045.png.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![使用Linux VLAN配置云节点](httpatomoreillycomsourcenostarchimages2209045.png.jpg)'
- en: Figure 7-14. Configuring a Cloud node using Linux VLANs
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-14. 使用Linux VLAN配置云节点
- en: Note
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*Even though you’re using Linux, it’s important to use the Generic Ethernet
    NIO and not the Linux Ethernet NIO. Otherwise, VLAN tagging may not work.*'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '*即使你使用的是Linux，使用通用以太网NIO而不是Linux以太网NIO也很重要。否则，VLAN标记可能无法正常工作。*'
- en: When you’re finished adding breakout VLANs to the Cloud node, add a couple of
    routers to your workspace and create a link from each router to a breakout VLAN
    on the Cloud node. In [Figure 7-15](ch07.html#virtual_routers_connected_to_linux_vlans
    "Figure 7-15. Virtual routers connected to Linux VLANs using a Cloud node"), router
    R1 (F0/0) is linked to VLAN 10 in the Cloud using *nio_gen_eth:eth0.10*, and R2
    (F0/0) is linked to VLAN 20 using *nio_gen_eth:eth0.20*.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成将分路VLAN添加到云节点后，向工作空间添加几个路由器，并为每个路由器创建一个与云节点上分路VLAN的连接。在[图7-15](ch07.html#virtual_routers_connected_to_linux_vlans
    "图7-15. 使用云节点连接到Linux VLAN的虚拟路由器")中，路由器R1（F0/0）通过*nio_gen_eth:eth0.10*连接到云中的VLAN
    10，路由器R2（F0/0）通过*nio_gen_eth:eth0.20*连接到VLAN 20。
- en: '![Virtual routers connected to Linux VLANs using a Cloud node](httpatomoreillycomsourcenostarchimages2209047.png.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![使用云节点连接到Linux VLAN的虚拟路由器](httpatomoreillycomsourcenostarchimages2209047.png.jpg)'
- en: Figure 7-15. Virtual routers connected to Linux VLANs using a Cloud node
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-15. 使用云节点连接到Linux VLAN的虚拟路由器
- en: Because the breakout switch is only used to split VLANs into multiple physical
    ports, it requires no further configuration. In this example, router R1 is now
    linked to any live switch plugged into breakout switchport f0/2, and R2 should
    be linked to any live switch plugged into port f0/3.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 因为分路交换机仅用于将VLAN分割到多个物理端口，所以无需进一步配置。在这个示例中，路由器R1现在连接到任何插入分路交换机端口f0/2的活动交换机，而R2应连接到任何插入端口f0/3的活动交换机。
- en: Note
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*If you create large projects using many VLANs, you may want to assign only
    one Linux VLAN interface per Cloud node to help clarify the layout in your workspace.*'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你使用多个VLAN创建大型项目，可能希望每个云节点只分配一个Linux VLAN接口，以帮助清晰地展示工作空间中的布局。*'
- en: Your GNS3 routers should now be able to communicate with one or more real Cisco
    switches.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的GNS3路由器应该能够与一个或多个实际的Cisco交换机进行通信。
- en: Optional Breakout Switch Configuration
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可选的分路交换机配置
- en: If you’re running Windows or OS X, you may be able to use a GNS3 Switch node
    to link your project to a breakout switch, as shown in [Figure 7-16](ch07.html#breakout_switch_configuration_using_an_e
    "Figure 7-16. Breakout switch configuration using an Ethernet switch node"). In
    this setup, the breakout switch is configured in the same way as previously, but
    you’ll need to make some tweaks to your PC. The Ethernet switch node connects
    to a Cloud node using an NIO interface configured with a loop-back adapter on
    Windows or a TAP interface on OS X. The virtual adapter is bridged to your PC’s
    physical Ethernet adapter. This allows Cloud 1 to connect to the breakout switch
    using your PC’s Ethernet adapter.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在运行 Windows 或 OS X，你可能能够使用 GNS3 交换机节点将你的项目连接到突破交换机，如 [图 7-16](ch07.html#breakout_switch_configuration_using_an_e
    "图 7-16. 使用以太网交换机节点配置突破交换机") 所示。在此设置中，突破交换机与之前配置的方式相同，但你需要对你的 PC 进行一些调整。以太网交换机节点通过一个
    NIO 接口连接到云节点，该接口在 Windows 上配置为回环适配器，在 OS X 上配置为 TAP 接口。虚拟适配器与 PC 的物理以太网适配器桥接。这样，云
    1 就可以通过 PC 的以太网适配器连接到突破交换机。
- en: '![Breakout switch configuration using an Ethernet switch node](httpatomoreillycomsourcenostarchimages2209049.png.jpg)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![使用以太网交换机节点配置突破交换机](httpatomoreillycomsourcenostarchimages2209049.png.jpg)'
- en: Figure 7-16. Breakout switch configuration using an Ethernet switch node
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-16. 使用以太网交换机节点配置突破交换机
- en: For the breakout switch to work, you should increase the MTU size on your PC’s
    physical Ethernet adapter, but not all adapters support this feature.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让突破交换机正常工作，你应该增加 PC 物理以太网适配器的 MTU 大小，但并不是所有适配器都支持此功能。
- en: 'If you’re a OS X user, the MTU size must be increased on both your physical
    adapter and virtual adapter. To increase the MTU size from the command line, use
    the following example:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 OS X 用户，必须增加你物理适配器和虚拟适配器的 MTU 大小。要通过命令行增加 MTU 大小，可以使用以下示例：
- en: '[PRE26]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Note
  id: totrans-228
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*On OS X, configure the virtual and physical adapter using the same MTU size,
    or the bridge creation will fail.*'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '*在 OS X 上，使用相同的 MTU 大小配置虚拟适配器和物理适配器，否则桥接创建将失败。*'
- en: You may have to check your Ethernet adapter documentation to configure your
    adapter on Windows. On many adapters, however, the MTU setting can be found under
    the Advanced properties of the adapter, as shown in [Figure 7-17](ch07.html#setting_the_jumbo_packet_size_on_windows
    "Figure 7-17. Setting the Jumbo Packet size on Windows"). In this example the
    `Jumbo Packet` value is set to 9014 bytes on an Intel PRO/1000 MT card.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要查看以太网适配器的文档，以便在 Windows 上配置你的适配器。然而，在许多适配器上，MTU 设置可以在适配器的高级属性中找到，如 [图 7-17](ch07.html#setting_the_jumbo_packet_size_on_windows
    "图 7-17. 在 Windows 上设置 Jumbo 包大小") 所示。在这个示例中，`Jumbo Packet` 的值被设置为 9014 字节，适用于
    Intel PRO/1000 MT 卡。
- en: '![Setting the Jumbo Packet size on Windows](httpatomoreillycomsourcenostarchimages2209051.png.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![在 Windows 上设置 Jumbo 包大小](httpatomoreillycomsourcenostarchimages2209051.png.jpg)'
- en: Figure 7-17. Setting the Jumbo Packet size on Windows
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-17. 在 Windows 上设置 Jumbo 包大小
- en: Next, bring up the Node configurator for the Ethernet switch node to define
    VLANs and the dot1q trunk port, as shown in [Figure 7-18](ch07.html#ethernet_switch_node_configured_for_brea
    "Figure 7-18. Ethernet switch node configured for breakout switch").
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，启动以太网交换机节点的节点配置器，定义 VLAN 和 dot1q 中继端口，如 [图 7-18](ch07.html#ethernet_switch_node_configured_for_brea
    "图 7-18. 配置为突破交换机的以太网交换机节点") 所示。
- en: '![Ethernet switch node configured for breakout switch](httpatomoreillycomsourcenostarchimages2209053.png.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![配置为突破交换机的以太网交换机节点](httpatomoreillycomsourcenostarchimages2209053.png.jpg)'
- en: Figure 7-18. Ethernet switch node configured for breakout switch
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-18. 配置为突破交换机的以太网交换机节点
- en: In this example, R1 is connected to access Port 1 (VLAN 10), R2 is connected
    to access Port 2 (VLAN 20), and Port 3 is the dot1q trunk to the breakout switch.
    After everything is configured in GNS3, you can log on and configure the breakout
    switch with VLANs and dot1q tunneling as previously described.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，R1 连接到接入端口 1（VLAN 10），R2 连接到接入端口 2（VLAN 20），端口 3 是连接到突破交换机的 dot1q 中继端口。在
    GNS3 中完成所有配置后，你可以登录并按之前描述的方式配置突破交换机的 VLAN 和 dot1q 隧道。
- en: Using Multiple Adapters in Your PC
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在你的 PC 上使用多个适配器
- en: Instead of using an 802.1Q trunk or a breakout switch, you could use one physical
    Ethernet interface for each router in GNS3\. If you have a laptop, you could use
    a USB hub and connect multiple USB Ethernet adapters to your PC; with a desktop,
    you could use the USB hub method or purchase a multiport Ethernet card. [Figure 7-19](ch07.html#physical_layout_using_multiple_adapters
    "Figure 7-19. Physical layout using multiple adapters in a PC") shows the physical
    layout of the design.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 与其使用 802.1Q 中继或分离交换机，您可以为 GNS3 中的每个路由器使用一个物理以太网接口。如果您有一台笔记本电脑，可以使用 USB 集线器并将多个
    USB 以太网适配器连接到计算机；如果是台式机，您可以使用 USB 集线器方法或购买多端口以太网卡。[图 7-19](ch07.html#physical_layout_using_multiple_adapters
    "图 7-19. 使用多个适配器的物理布局") 显示了设计的物理布局。
- en: '![Physical layout using multiple adapters in a PC](httpatomoreillycomsourcenostarchimages2209055.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![使用多个适配器的物理布局](httpatomoreillycomsourcenostarchimages2209055.png)'
- en: Figure 7-19. Physical layout using multiple adapters in a PC
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-19. 使用多个适配器的物理布局
- en: Connect each Ethernet adapter in your PC to a physical port on a live Cisco
    switch. Log on to each switch and configure an access port using the `switchport
    mode access` command. Then, assign a unique VLAN number to the port by entering
    `switchport access vlan {vlan number}`, as in the following listings.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 将计算机中的每个以太网适配器连接到实时的 Cisco 交换机上的物理端口。登录到每个交换机，并使用 `switchport mode access` 命令配置接入端口。然后，通过输入
    `switchport access vlan {vlan number}` 来为端口分配一个唯一的 VLAN 编号，如以下列表所示。
- en: 'Start with the first switch (c3550_sw1):'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 从第一个交换机（c3550_sw1）开始：
- en: '[PRE27]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Next, configure switch two (c3550_sw2):'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，配置第二个交换机（c3550_sw2）：
- en: '[PRE28]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: To connect GNS3 devices to the switches, add a Cloud node to your workspace
    and assign one NIO Ethernet interface for each Ethernet adapter in your PC. Connect
    your GNS3 routers to each NIO interface using one router per interface.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 GNS3 设备连接到交换机，请在工作区中添加一个 Cloud 节点，并为计算机中的每个以太网适配器分配一个 NIO Ethernet 接口。通过每个接口连接一个
    GNS3 路由器。
- en: Note
  id: totrans-247
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*OS X users will have to create a unique bridge interface for each adapter
    and bridge each Ethernet interface to a unique TAP interface. OS X supports up
    to 16 TAP devices (tap0 through tap15).*'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '*OS X 用户需要为每个适配器创建一个独特的桥接接口，并将每个以太网接口桥接到一个独特的 TAP 接口。OS X 支持最多 16 个 TAP 设备（tap0
    到 tap15）。*'
- en: After all the devices in your project have been configured, your GNS3 devices
    should be able to communicate with the live Cisco switches. Further configuration
    is required on the switches to enable routing between GNS3 routers and is determined
    by the switch block design you create.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目中的所有设备配置完成后，您的 GNS3 设备应该能够与实时的 Cisco 交换机通信。交换机上需要进一步配置，以启用 GNS3 路由器之间的路由，这取决于您创建的交换机块设计。
- en: Now let’s take a look at connecting GNS3 to the Internet.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看一下将 GNS3 连接到互联网的步骤。
- en: Connecting GNS3 Devices to the Internet
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 GNS3 设备连接到互联网
- en: 'To connect GNS3 devices to the Internet, you need to use an Ethernet adapter
    in your PC. Wireless network adapters are not supported if you use them directly,
    though one may work if bridged to a loopback adapter or TAP interface (but don’t
    count on it). Make the GNS3 to Ethernet connection the same way that you connect
    to a physical switch: add a Cloud node to your project and configure it with either
    an NIO TAP or NIO Ethernet interface.'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 GNS3 设备连接到互联网，您需要在计算机中使用以太网适配器。如果直接使用无线网络适配器，则不支持，尽管如果将其桥接到回环适配器或 TAP 接口，可能会有一个适配器能工作（但不能完全依赖它）。将
    GNS3 设备连接到以太网的方式与连接物理交换机相同：将一个 Cloud 节点添加到项目中，并使用 NIO TAP 或 NIO Ethernet 接口进行配置。
- en: Configuring Windows
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 Windows
- en: On Windows systems, create a bridge using a loopback adapter and your PC’s physical
    Ethernet adapter. Then, in GNS3, use a Cloud node configured using NIO Ethernet
    and select the loopback adapter. Because the loopback adapter is bridged to the
    physical Ethernet adapter, you can use the Cloud to connect to networks outside
    GNS3—including the Internet.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 系统上，使用回环适配器和计算机的物理以太网适配器创建一个桥接。然后，在 GNS3 中，使用配置了 NIO Ethernet 的 Cloud
    节点并选择回环适配器。因为回环适配器已桥接到物理以太网适配器，您可以通过 Cloud 连接到 GNS3 外部的网络——包括互联网。
- en: On Windows 8.*x*, install a loopback adapter, but do not add it to a bridge.
    Instead, configure Internet Connection Sharing (ICS) on your physical interface
    (Ethernet or Wi-Fi). To do so, right-click the **Start** button and select **Network
    Connections**. Next, right-click your physical Interface and select **Properties**.
    Select the **Sharing** tab, and check the **Allow other network users to connect
    through this computer’s Internet connection** option. Lastly, select your loopback
    adapter from the Home Networking Connection drop-down menu, and click **OK**.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 8.*x* 上，安装一个回环适配器，但不要将其添加到桥接中。相反，在您的物理接口（以太网或 Wi-Fi）上配置 Internet 连接共享（ICS）。操作方法是，右键点击
    **开始** 按钮并选择 **网络连接**。接下来，右键点击您的物理接口并选择 **属性**。选择 **共享** 标签页，然后勾选 **允许其他网络用户通过此计算机的
    Internet 连接进行连接** 选项。最后，从家庭网络连接下拉菜单中选择您的回环适配器，并点击 **确定**。
- en: Configuring Unix-Based Systems
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置基于 Unix 的系统
- en: On Ubuntu Linux, create an NIO Ethernet connection using your PC’s Ethernet
    interface. On OS X and some Linux systems, use an NIO TAP connection configured
    with */dev/tap0* and bridge the TAP interface to your PC’s Ethernet interface.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu Linux 上，使用您的 PC 的以太网接口创建一个 NIO 以太网连接。在 OS X 和一些 Linux 系统上，使用配置了 */dev/tap0*
    的 NIO TAP 连接，并将 TAP 接口桥接到 PC 的以太网接口。
- en: Creating a Simple Network
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个简单网络
- en: Create a project by adding a router and a Cloud node to your workspace and adding
    a link from the router to the Cloud. In [Figure 7-20](ch07.html#connecting_to_a_cloud_using_a_windows_lo
    "Figure 7-20. Connecting to a Cloud using a Windows loopback adapter"), the Cloud
    is configured using the Windows loopback adapter, named `Local Area Connection
    2`.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将一个路由器和一个云节点添加到您的工作空间，并将路由器与云之间添加一条连接来创建一个项目。在[图 7-20](ch07.html#connecting_to_a_cloud_using_a_windows_lo
    "图 7-20. 使用 Windows 回环适配器连接到云")中，云是使用 Windows 回环适配器配置的，名为 `Local Area Connection
    2`。
- en: '![Connecting to a Cloud using a Windows loopback adapter](httpatomoreillycomsourcenostarchimages2209057.png.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Windows 回环适配器连接到云](httpatomoreillycomsourcenostarchimages2209057.png.jpg)'
- en: Figure 7-20. Connecting to a Cloud using a Windows loopback adapter
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-20. 使用 Windows 回环适配器连接到云
- en: To test Internet connectivity, attach an Ethernet cable from your PC to an Internet
    device, like a cable modem, and configure an IP address on your GNS3 router. If
    you use DHCP to assign an IP address as I did here, you may have to wait a moment
    for the router to receive an IP address before you can test connectivity.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试 Internet 连接性，将一根以太网电缆从您的 PC 连接到一个互联网设备，如电缆调制解调器，并在您的 GNS3 路由器上配置一个 IP 地址。如果像我这里一样使用
    DHCP 来分配 IP 地址，您可能需要稍等片刻，直到路由器获得 IP 地址后才能测试连接性。
- en: '[PRE29]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: After your router has obtained an IP address, you should be able to ping a host
    on the Internet. Try to ping *[www.gns3.net](http://www.gns3.net)*! You’re not
    limited to using a router to connect to the Internet; you can also use an ASA
    device, Juniper router, or any other device that supports TCP/IP.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在路由器获取到 IP 地址后，您应该能够 ping 通 Internet 上的主机。试着 ping *[www.gns3.net](http://www.gns3.net)*！您不仅限于使用路由器连接到
    Internet；您也可以使用 ASA 设备、Juniper 路由器或任何其他支持 TCP/IP 的设备。
- en: Note
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*If you have other devices behind router R1, you need to configure NAT on R1
    before they can route to the Internet. For more information, visit Cisco’s website*
    ([http://www.cisco.com/en/US/tech/tk648/tk361/technologies_tech_note09186a0080094e77.shtml#topic6](http://www.cisco.com/en/US/tech/tk648/tk361/technologies_tech_note09186a0080094e77.shtml#topic6)).'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果您的路由器 R1 后面有其他设备，您需要在 R1 上配置 NAT，才能让它们路由到 Internet。欲了解更多信息，请访问思科网站* ([http://www.cisco.com/en/US/tech/tk648/tk361/technologies_tech_note09186a0080094e77.shtml#topic6](http://www.cisco.com/en/US/tech/tk648/tk361/technologies_tech_note09186a0080094e77.shtml#topic6))。'
- en: Final Thoughts
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最后的想法
- en: In this chapter, we looked at configuring GNS3 device nodes and integrating
    them into your projects using Cisco IOS. They’re simple to set up and well suited
    for large projects because they greatly reduce the load on your PC. Compared to
    Dynamips devices, GNS3 device nodes use almost no PC resources.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了如何配置 GNS3 设备节点，并将其集成到您的项目中，使用 Cisco IOS。它们非常容易设置，并且非常适合大型项目，因为它们大大减少了
    PC 的负载。与 Dynamips 设备相比，GNS3 设备节点几乎不使用 PC 资源。
- en: Connecting a GNS3 device to a live Cisco switch is tricky. If you choose to
    create a standard 802.1Q trunk to connect with a live switch, you can use either
    an EtherSwitch router or an Ethernet switch node, but your PC operating system
    and Ethernet adapter drivers must both support 802.1Q tagging. Without the proper
    VLAN tags, trunking won’t work.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 将GNS3设备连接到实际的Cisco交换机是一个比较棘手的操作。如果你选择创建一个标准的802.1Q中继链路来连接实际交换机，你可以使用EtherSwitch路由器或以太网交换机节点，但你的PC操作系统和以太网适配器驱动程序必须都支持802.1Q标记。如果没有正确的VLAN标签，中继功能将无法正常工作。
- en: If you have an extra IOS switch, you can create a breakout switch, which is
    a very reliable way to integrate multiple real Cisco switches into your GNS3 projects.
    A breakout switch works most reliably on Linux systems but can also be configured
    using Windows and OS X.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一台额外的IOS交换机，你可以创建一个分裂交换机，这是一种非常可靠的方式，可以将多个真实的Cisco交换机集成到你的GNS3项目中。分裂交换机在Linux系统上最为可靠，但也可以在Windows和OS
    X上进行配置。
- en: In the next chapter, we’ll look at some more advanced features including Cisco,
    ASA, and IDS/IPS.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将介绍一些更高级的功能，包括Cisco、ASA以及IDS/IPS。
