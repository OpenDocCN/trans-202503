["```\n2 im = loadImage (\"image.jpg\");\n```", "```\n3 image (im, 0, 0);\n```", "```\nmyImage.width   // Width of the image, in pixels\nmyImage.height  // Height of the image, in pixels\n```", "```\nmyImage.get(x,y);                  // Returns the color of the pixel at column x and row y\nmyImage.set(x,y, color(255,0,0))   // Sets the pixel at (x,y) to red\n```", "```\n1 img.resize (w, h);\n```", "```\n1 aspect = (float)w/(float)h;\n```", "```\nh = height;\n```", "```\nw = (int)(h*aspect);\n```", "```\nimg.resize (w, h);\n```", "```\nimage (img, (width-img.width)/2, (height-img.height)/2);\n```", "```\nsub = get(x0, y0, (mouseX-x0), (mouseY-y0));\n```", "```\nif (mouseButton == RIGHT) sub.resize (width, height);\n```", "```\nsub.resize (100,100);\n```", "```\nrotate(angle);\n```", "```\ntranslate (100, 200);\n```", "```\ncolor c;\nPImage im;\nc = im.get (x, y);\n```", "```\nc = get (x, y);\n```", "```\nc = get (mouseX, mouseY);\n```", "```\nset (i,j, color(255, 255, 0));\n```", "```\nbackground (255, 100, 40) \n```", "```\n1 for (i=0; i<width; i++)\n  for (j=0; j<height; j++)\n    set(i,j, color(255, 100, 40));\n```", "```\n2 if (g<threshold) g = black;\n  else g = white;\n```", "```\nmouseX/width\n```", "```\nvoid newFunctionA ()            int newFunctionB ()\n{                               {\n  `code                            code`\n                                  return `value`;\n}                               }\n```", "```\na = newFunctionB();\nx = newFunctionB()*2 + 1;\n```", "```\nfloat distance (int x0, int y0, int x1, int y1)\n```", "```\nif (x0 < 0) \n{\n  x0 = mouseX; \n  y0 = mouseY;\n}\n```", "```\nif (x0 < 0)  {\n  x0 = mouseX; \n  y0 = mouseY;\n}\n```", "```\nr = d*0.01745;\n```", "```\nr = d *2*PI/360.0;\n```", "```\nradians = degrees * degrees_to_radians;\n```", "```\n// Extract the HSB values from the pixel at (i,j)\nc = img.get(i,j);\n// Add val to the brightness and save again.\nimg.set (i,j, color(hue(c), saturation(c), brightness(c)+val));\n```", "```\nif (mousePressed) image (img2, 0, 0);\n  else image (img1, 0, 0);\n```", "```\nPImage duplicate (PImage from)\n```", "```\ncreateImage (width, height, RGB);\n```"]