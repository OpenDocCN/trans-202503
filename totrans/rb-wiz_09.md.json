["```\n\nmodule Colorize\n  def color\n    [:red, :blue, :green, :yellow].sample\n  end\nend\n\n```", "```\n\n>> **class FancyClass; end**\n=> nil\n\n```", "```\n\n>> **FancyClass.new**\n=> #<FancyClass:0x000001044d80c8>\n\n```", "```\n\n>> **module ImportantThings; end**\n=> nil\n\n>> **ImportantThings.new**\nNoMethodError: undefined method `new' for ImportantThings:Module\n\n```", "```\n\n>> **module Bucket**\n>>   **MAX_BITS_AND_TRINKETS = 100**\n\n>>   **def announcing_bits_and_trinkets**\n>>     **puts 'Step right up! Bits and trinkets available now!'**\n>>   **end**\n>> **end**\n=> nil\n\n```", "```\n\n>> **RUBY = 'Wonderful!'**\n=> \"Wonderful!\"\n\n>> **RUBY = 'Stupendous!'**\n(irb):2: warning: already initialized constant RUBY =>\n\"Stupendous!\"\n\n```", "```\n\n>> **class Announcer**\n>>   **include Bucket**\n>> **end**\n=> Announcer\n\n```", "```\n\n>> **loud_lucy = Announcer.new**\n=> #<Announcer:0x00000103f0c5b8>\n\n>> **loud_lucy.announcing_bits_and_trinkets**\nStep right up! Bits and trinkets available now!\n=> nil\n\n```", "```\n\n>> **class Announcer**\n>>   **extend Bucket**\n>> **end**\n=> Announcer\n\n>> **Announcer.announcing_bits_and_trinkets**\nStep right up! Bits and trinkets available now!\n=> nil\n\n```", "```\n\n>> **module Enchanted**\n>>   **def speak**\n>>     **puts 'Hello there!'**\n>>   **end**\n>> **end**\n=> nil\n\n```", "```\n\n>> **class Animal**\n>>   **def initialize(name)**\n>>     **@name = name**\n>>   **end**\n>> **end**\n=> nil\n\n```", "```\n\n>> **class Dog < Animal**\n>>   **include Enchanted**\n\n>>   **def bark**\n>>     **puts 'Arf!'**\n>>   **end**\n>> **end**\n=> nil\n\n```", "```\n\n>> **bigelow = Dog.new('Bigelow')**\n=> #<Dog:0x000001049df148 @name=\"Bigelow\">\n\n>> **bigelow.bark**\nArf!\n=> nil\n\n>> **bigelow.speak**\nHello there!\n=> nil\n\n```", "```\n\nclass Dog\n  include Enchanted\n  include Magical\n  include AnythingWeLike\n  # ...and so on and so forth\nend\n\n```", "```\n\nclass Dog\n  extend Enchanted\n  extend Magical\n  extend AnythingWeLike\n  # ...and so on and so forth\nend\n\n```", "```\n\nrequire './colorize'\n\nclass PandaFood < Food\n  include Colorize\n\n  attr_reader :calories\n\n  CALORIES_PER_SERVING = 1000\n\n  def initialize\n    @calories = CALORIES_PER_SERVING\n  end\nend\n\n```", "```\n\n>> **hogarths_food = PandaFood.new**\n=> #<PandaFood:0x00000104480850 @calories=1000>\n\n>> **hogarths_food.calories**\n=> 1000\n\n```", "```\n\n>> **hogarths_food.color**\n=> :yellow\n\n```", "```\n\n>> **hogarths_food.color**\n=> :blue\n\n```", "```\n\n➊ require './colorize'\n➋ class TestColors\n➌   include Colorize\n  end\n\n  test = TestColors.new\n➍ puts test.color\n\n```", "```\n\n$ **ruby test_color.rb**\nblue\n$ **ruby test_color.rb**\nyellow\n\n```", "```\n\n>> **module APocketFullofMethods**\n>>   **NUMBER_OF_METHODS = 42**\n>> **end**\n=> nil\n\n>> **NUMBER_OF_METHODS**\nNameError: uninitialized constant NUMBER_OF_METHODS\n\n>> **APocketFullofMethods::NUMBER_OF_METHODS**\n=> 42\n\n```", "```\n\n>> **module Namespace**\n>>   **GREETING = 'Hello from INSIDE the module!'**\n>> **end**\n=> nil\n\n>> **GREETING = 'Hello from OUTSIDE the module!'**\n=> \"Hello from OUTSIDE the module!\"\n\n```", "```\n\n>> **GREETING**\n=> \"Hello from OUTSIDE the module!\"\n>> **Namespace::GREETING**\n=> \"Hello from INSIDE the module!\"\n\n```", "```\n\nMyClass.fancy_class_method\nMyClass::CLASS_CONSTANT\n\n```", "```\n\nmodule Colorize\n  def color\n    :purple\n  end\nend\n\n```", "```\n\n➊ require './colorize'\n\n➋ class Food\n    def serve\n      puts 'Food is ready!'\n    end\n  end\n\n➌ class PandaFood < Food\n➍   include Colorize\n\n    attr_accessor :calories\n\n➎   CALORIES_PER_SERVING = 1000\n\n    def initialize\n      @calories = CALORIES_PER_SERVING\n    end\n\n    def serve\n      puts 'One piping hot serving of panda food, coming up!'\n    end\n\n➏   def analyze\n      puts \"This food contains #{@calories} calories and is #{color}.\"\n    end\n  end\n\n➐ hogarths_food = PandaFood.new\n  puts hogarths_food.analyze\n\n```", "```\n\n$ **ruby panda_food.rb**\n\n```", "```\n\nThis food contains 1000 calories and is purple.\n\n```", "```\n\nmodule Colorize\n  def color\n    [:red, :blue, :green, :yellow].sample\n  end\nend\n\n```", "```\n\nmodule Bucket\n  MAX_BITS_AND_TRINKETS = 100\n\n  def announcing_bits_and_trinkets\n    puts 'Step right up! Bits and trinkets available now!'\n  end\nend\n\n```", "```\n\nmodule Greetings\n  def sailor\n    puts 'Ahoy there!'\n  end\n  def pirate\n    puts 'Avast, ye salty dog!'\n  end\n\n  def robot\n    puts 'BEEP BOOP WHAT IS UP'\n  end\nend\n\n```", "```\n\nclass Message\n  include Greetings\nend\n\n```", "```\n\n>> **message = Message.new**\n=> #<Message:0x007fd6022c7948>\n\n>> **message.pirate**\nAvast, ye salty dog!\n=> nil\n\n```", "```\n\n>> **class Message**\n>>   **extend Greetings**\n>> **end**\n=> nil\n\n>> **Message.robot**\nBEEP BOOP WHAT IS UP\n=> nil\n\n```", "```\n\n>> **my_message = Message.new**\n=> #<Message:0x000001030cdf88>\n>> **my_message.robot**\nNoMethodError: undefined method `robot' for\n#<Message:0x000001030cdf88>\n\n```", "```\n\n>> **class Message**\n>>   **include Greetings**\n>> **end**\n\n>> **my_message = Message.new**\n=> #<Message:0x00000103108d18>\n>> **my_message.robot**\nBEEP BOOP WHAT IS UP\n=> nil\n\n```", "```\n\nmodule Enchanted\n  def speak\n    puts 'Hello there!'\n  end\nend\n\n```", "```\n\nclass Animal\n  def initialize(name)\n    @name = name\n  end\nend\nclass Dog < Animal\n  include Enchanted\n\n  def bark\n    puts 'Arf!'\n  end\nend\n\n```", "```\n\n>> **bigelow = Dog.new('Bigelow')**\n=> #<Dog:0x000001049df148 @name=\"Bigelow\">\n\n>> **bigelow.bark**\nArf!\n=> nil\n\n>> **bigelow.speak**\nHello there!\n=> nil\n\n```", "```\n\nrequire './colorize'\nclass Food < PandaFood\n  include Colorize\n   # ...and so on and so forth\nend\n\n```", "```\n\nMyClass::AModuleInsideThat::YetAnotherModule::MY_CONSTANT\nMyClass.some_method\n\n```"]