["```\nrule SafetyKatz_PE\n{\n   ❶ meta:\n         description = \"Detects the default .NET TypeLibGuid for SafetyKatz\"\n         reference = \"https://github.com/GhostPack/SafetyKatz\"\n         author = \"Matt Hand\"\n  ❷ strings:\n         $guid = \"8347e81b-89fc-42a9-b22c-f59a6a572dec\" ascii nocase wide\n     condition:\n         (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550) and $guid\n}\n```", "```\nrule Example\n{\n    strings:\n        $x = \"Hello\"\n        $y = \"world\"\n    condition:\n        any of them\n}\n```", "```\nPS > **$signatures = (Get-MpThreatCatalog).ThreatName**\nPS > **$signatures | Measure-Object -Line | select Lines**\n Lines\n -----\n222975\n\nPS > **$signatures | Group {$_.Split(**'**:**'**)[0]} |**\n**>> Sort Count -Descending |**\n**>> select Count,Name -First 10**\n\nCount Name\n----- ----\n57265 Trojan\n28101 TrojanDownloader\n27546 Virus\n19720 Backdoor\n17323 Worm\n11768 Behavior\n 9903 VirTool\n 9448 PWS\n 8611 Exploit\n 8252 TrojanSpy\n```", "```\nusing System;\nusing System.Diagnostics;\nusing System.Reflection;\nusing System.Runtime.CompilerServices;\nusing System.Runtime.InteropServices;\nusing System.Security;\nusing System.Security.Permissions;\n\n[assembly: AssemblyVersion(\"1.0.0.0\")]\n[assembly: CompilationRelaxations(8)]\n[assembly: RuntimeCompatibility(WrapNonExceptionThrows = true)] [assembly: Debuggable(DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints)]\n[assembly: AssemblyTitle(\"SafetyKatz\")]\n[assembly: AssemblyDescription(\" \")]\n[assembly: AssemblyConfiguration(\" \")]\n[assembly: AssemblyCompany(\" \")]\n[assembly: AssemblyProduct(\"SafetyKatz\")]\n[assembly: AssemblyCopyright(\"Copyright © 2018\")]\n[assembly: AssemblyTrademark(\" \")]\n[assembly: ComVisible(false)]\n[assembly: Guid(\"01234567-d3ad-b33f-0000-0123456789ac\")] ❶\n[assembly: AssemblyFileVersion(\"1.0.0.0\")]\n[assembly: SecurityPermission(SecurityAction.RequestMinimum, SkipVerification = true)]\n[module: UnverifiableCode]\n```", "```\nrule SafetyKatz_InternalFuncs_B64MimiKatz\n{\n     meta:\n        description = \"Detects the public version of the SafetyKatz\n                       tool based on core P/Invokes and its embedded\n                       base64-encoded copy of Mimikatz\"\n        reference = \"https://github.com/GhostPack/SafetyKatz\"\n        author = \"Matt Hand\"\n    strings:\n        $mdwd = \"MiniDumpWriteDump\" ascii nocase wide\n        $ll = \"LoadLibrary\" ascii nocase wide\n        $gpa = \"GetProcAddress\" ascii nocase wide\n        $b64_mimi = \"zL17fBNV+jg8aVJIoWUCNFC1apCoXUE\" ascii wide\n    condition:\n        ($mdwd and $ll and $gpa) or $b64_mimi\n}\n```", "```\nPS > **.\\yara64.exe -w -s .\\safetykatz.rules C:\\Temp\\SafetyKatz.exe**\n**>> SafetyKatz_InternalFuncs_B64MimiKatz C:\\Temp\\SafetyKatz.exe**\n0x213b:$mdwd: ❶ MiniDumpWriteDump\n0x256a:$ll: LoadLibrary\n0x2459:$gpa: GetProcAddress\n0x25cd:$b64_mimi: ❷\nz\\x00L\\x001\\x007\\x00f\\x00B\\x00N\\x00V\\x00+\\x00j\\x00g\\x008\\x00a\\x00V\\x00J\\x00I\\x00o\n\\x00W\\x00U\\x00C\\x00N\\x00F\\x00C\\x001\\x00a\\x00p\\x00C\\x00o\\x00X\\x00U\\x00E\\x00\n```"]