["```\n\n    //Chromatic Thermometer sketch for the LM35, with an alarm\n    //around 78 to 79 degrees Fahrenheit (26 degrees Celsius) \n\n    #include <Wire.h>              //Set up Comm wire library \n    #include <LiquidCrystal_I2C.h> //Set up LCD library with I2C \n\n    LiquidCrystal_I2C lcd(0x27, 16, 2); //16x2 display I2C address 0x27 \n\n    //Establish the number of readings to average at 10\n➊  const int numReadings = 10; \n    float readings[numReadings];        //The readings from the analog input \n    int index = 0;                      //The index of the current reading \n    float total = 0;                    //The running total\n    float average = 0;                  //The average\n    int tempPin = A0;\n    float TempC; \n    float tempF; \n\n    void setup() {\n      lcd.init();                       //Initialize LCD and turn on backlight\n      lcd.backlight(); \n\n      //Initialize serial communication with computer:\n      Serial.begin(9600); \n\n      //Initialize all the readings to 0:\n      for(int thisReading = 0; thisReading < numReadings; thisReading++)\n      readings[thisReading] = 0; \n\n      analogReference(INTERNAL);        //Set voltageReference = 1.1V \n    } \n\n    void loop() {\n      total = total - readings[index];          //Subtract the last reading\n      readings[index] = analogRead(tempPin);    //Read from the sensor\n      total = total + readings[index];          //Add the reading to the total \n\n      //Advance to the next position in the array:\n      index = index + 1; \n\n      if(index >= numReadings)     //If we're at the end of the array…\n        index = 0;                    //…wrap around to the beginning \n\n      average = total / numReadings;  //Calculate the average temperature\n      TempC = average / 9.81;         //Adjust/calibrate average \n                                      //based on empirical measurement\n\n      tempF = (TempC * 9 / 5) + 32;   //Convert to Fahrenheit\n     //Set up serial readout if desired\n      Serial.println();\n      Serial.print(\"TempC  \");\n      Serial.println(TempC);\n      Serial.print(\"TempF  \");\n      Serial.println(tempF);\n      Serial.print(\"Average  \");\n      Serial.println(average);\n      delay(10);                    //Delay in between reads for stability \n\n      //Set up for LCD\n      lcd.setCursor(0, 0);\n      lcd.print(\"Temp                  \");\n      lcd.setCursor(7, 0);\n      lcd.print(TempC, 1);\n      lcd.print((char)223);         //Degree symbol see below\n      lcd.print(\" C\");\n      lcd.setCursor(0, 1);\n      lcd.print(\"Temp  \");  \n      lcd.setCursor(7, 1);\n      lcd.print(tempF, 1);          //Truncate second decimal place\n      lcd.print((char)223); \n    /*May need to use (char) 178 if LCD displays the greek alpha character. \n    Different LCDs display different special characters*/ \n\n      lcd.print(\" F\");\n      delay(50); \n\n      //Beginning of conditional statements for display\n      if((tempF > 85.00 ) && (tempF < 200)) {\n        //85 degrees and 200 degrees are arbitrary.\n        digitalWrite(2, HIGH);\n      }\n      else {\n        digitalWrite(2, LOW);\n      } \n\n      if((tempF > 84) && (tempF < 85)) {\n        digitalWrite(3, HIGH);\n      }\n      else {\n        digitalWrite(3, LOW);\n      } \n\n      if((tempF > 83.00 ) && (tempF < 84)) {\n        digitalWrite(4, HIGH);\n      }\n      else {\n        digitalWrite(4, LOW);\n      } \n\n     if((tempF > 82) && (tempF < 83)) {\n        digitalWrite(5, HIGH);\n      }\n      else {\n        digitalWrite(5, LOW);\n      } \n\n      if((tempF > 81.00 ) && (tempF < 82)) {\n        digitalWrite(6, HIGH);\n      }\n      else {\n        digitalWrite(6, LOW);\n      } \n\n      if((tempF > 80) && (tempF < 81)) {\n        digitalWrite(7, HIGH);\n      }\n      else {\n        digitalWrite(7, LOW);\n      } \n\n      if((tempF > 79.00 ) && (tempF < 80)) {\n        digitalWrite(8, HIGH);\n      }\n      else {\n        digitalWrite(8, LOW);\n      } \n\n      if((tempF > 78) && (tempF < 79)) {\n        //Code for blinking LED as an alarm\n        digitalWrite(9, HIGH);\n        delay(50);\n        digitalWrite(9, LOW);\n        delay(50);\n      }\n      else {\n        digitalWrite(9, LOW);\n      } \n\n      if((tempF > 77.00 ) && (tempF < 78)) {\n        digitalWrite(10, HIGH);\n      }\n      else {\n        digitalWrite(10, LOW);\n      }\n\n      if(tempF < 76) {\n        digitalWrite(11, HIGH);\n      }\n      else {\n        digitalWrite(11, LOW);\n      }\n  }\n```", "```\n\n/*Sketch for MCP9808 version of Chromatic Thermometer\n\n This version of the Chromatic Thermometer uses the Adafruit MCP9808 breakout\n Board (or Microchip MCP9808 chip) and the Adafruit_MCP9808 library\n available from Adafruit ----> https://www.adafruit.com/product/1782\n\n The averaging may not be necessary. It tends to slow the\n response a little, but smoothes out the display.\n\n The result is truncated to a single decimal for both Celsius and Fahrenheit.\n This version includes the code to turn on and off 10 LEDs.\n*/ \n\n#include <Wire.h>               //Set up wire/serial library \n#include \"Adafruit_MCP9808.h\" //Set up MCP9808 library \n#include <LiquidCrystal_I2C.h>  //Set up library for LCD \n\nLiquidCrystal_I2C lcd(0x27, 16, 2);   //16x2 display; define LCD \n\n// Create the MCP9808 temperature sensor object \nAdafruit_MCP9808 tempsensor = Adafruit_MCP9808(); \n\nconst int numReadings = 10;     //Once again averaging 10 readings \nfloat readings[numReadings];    //The readings from the analog input\nint index = 0;                  //The index of the current reading\nfloat TempC = 0;\nfloat tempF = 0;\nfloat total = 0;                //The running total \nfloat average = 0;              //The average\n\n void setup() {\n  Serial.begin(9600); \n\n  lcd.init();  //Initiate LCD and backlight\n  lcd.backlight(); \n\n/*Make sure the sensor is found. You can also pass a different I2C address\nfrom the default, as in tempsensor.begin(0x19).*/   \n  if(!tempsensor.begin()) { \n    Serial.println(\"Couldn't find MCP9808!\");\n    while(1);\n  }\n} \nvoid loop() {\n  //Read and print out the temperature; then convert to Fahrenheit\n  float c = tempsensor.readTempC();\n  total = total - readings[index];\n  //Read from the sensor\n  readings[index] = c;\n  //Add the reading to the total\n  total = total + readings[index];\n  //Advance to the next position in the array\n  index = index + 1;\n  if(index >= numReadings)        //If we're at the end of the array… \n    index = 0;                        //…wrap around to the beginning:\n  //Calculate the average\n  average = total / numReadings; \n\n  TempC = average;\n  tempF = (TempC * 9 / 5) + 32;\n  delay(100); \n\n  //Set up LCD to print out temperatures\n  lcd.setCursor(0, 0);\n  lcd.print(\"Temp          \");\n  lcd.setCursor(6, 0);\n  lcd.print(TempC, 1);                //Truncate to one decimal place\n  lcd.print((char)223);\n  lcd.print(\" C\");\n  lcd.setCursor(0, 1);\n  lcd.print(\"Temp  \");  \n  lcd.setCursor(6, 1);\n  lcd.print(tempF, 1);               //Truncate to one decimal place\n  lcd.print((char)223); \n/*May need to use (char) 178 if LCD displays the greek alpha character. Different LCDs display different special characters*/\n\n  lcd.print(\" F\");\n  delay(100); \n\n  //Beginning of conditional statements for display\n  if((tempF > 85.00 ) && (tempF < 100)) {\n  digitalWrite(2, HIGH);\n  }\n else {\n  digitalWrite(2, LOW);\n  } \n\n  if((tempF > 84) && (tempF < 85)) {\n  digitalWrite(3, HIGH);\n  }\n  else {\n  digitalWrite(3, LOW);\n  } \n\n  if((tempF > 83.00 ) && (tempF < 84)) {\n  digitalWrite(4, HIGH);\n  }\n  else {\n  digitalWrite(4, LOW);\n  } \n\n  if((tempF > 82) && (tempF < 83)) {\n  digitalWrite(5, HIGH);\n  }\n  else {\n  digitalWrite(5, LOW);\n  } \n\n  if((tempF > 81.00 ) && (tempF < 82)) {\n  digitalWrite(6, HIGH);\n  }\n  else {\n  digitalWrite(6, LOW);\n  } \n\n  if((tempF > 80) && (tempF < 81)) {\n  digitalWrite(7, HIGH);\n  }\n  else {\n  digitalWrite(7, LOW);\n  } \n\n  if((tempF > 79.00 ) && (tempF < 80)) {\n  digitalWrite(8, HIGH);\n  }\n  else {\n  digitalWrite(8, LOW);\n  } \n\n  if((tempF > 78) && (tempF < 79)) {  //Code for blinking LED\n  digitalWrite(9, HIGH);\n  delay(50);\n  digitalWrite(9, LOW);\n  delay(50);\n  }\n  else {\n  digitalWrite(9, LOW);\n  }\n\n if((tempF > 77.00 ) && (tempF < 78)) {\n  digitalWrite(10, HIGH);\n  }\n  else {\n  digitalWrite(10, LOW);\n  } \n\n  if(tempF < 76) {\n  digitalWrite(11, HIGH);\n  }\n  else {\n  digitalWrite(11, LOW);\n  } \n}\n```", "```\n\n  if((tempF > 78) && (tempF < 79)) {\n    digitalWrite(9, HIGH);\n    delay(50);\n    digitalWrite(9, LOW);\n    delay(50);\n  }\n    else {\n      digitalWrite(9, LOW);\n  }\n```"]