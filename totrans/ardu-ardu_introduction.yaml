- en: <samp class="SANS_Dogma_OT_Bold_B_11">INTRODUCTION</samp>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../images/opener-img.png)'
  prefs: []
  type: TYPE_IMG
- en: I wrote this book for those who know the basics of working with the Arduino
    microcontroller environment but are hungry for more. Perhaps you’ve built the
    projects in *Arduino Workshop*, my first Arduino book for beginners, or some other
    introductory book. You know how to use data buses, control small motors, work
    with data from various sensors, and do much more. But there’s much more to learn,
    and you’re ready for more challenging projects.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, you’ll continue your journey into the world of Arduino-based learning
    and fun. Each chapter contains detailed tutorials on advanced techniques and tools
    you may have heard about but not yet tried, complete with instructions to build
    70 complex and useful projects. I’ve chosen these topics based on the skills I’ve
    found most valuable during years of helping others create fun, useful, and innovative
    Arduino-based circuits and products.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Who Is This Book For?</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This book is for those with intermediate-level Arduino experience who are ready
    to expand their skill set. You may have completed the introductory examples that
    come with Arduino starter kits, worked through a basic book on building Arduino
    projects, or taken a basic college-level computer engineering class that used
    an Arduino.
  prefs: []
  type: TYPE_NORMAL
- en: You might want to use this book as a reference to construct your own project
    ideas, or you might simply want to learn a range of new skills. If you’re interested
    in improving power efficiency, interfacing with older devices using common data
    buses, logging data from your projects to online or offline storage, controlling
    projects over the internet, and more, this is the book for you.
  prefs: []
  type: TYPE_NORMAL
- en: To allow as many people as possible to complete this book, I’ve minimized the
    cost of building each project. You can easily purchase all required parts from
    a wide variety of retailers online.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">What Can You Expect to Learn?</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In each chapter of this book, I introduce a set of new concepts or tools and
    then teach you how to implement them in a total of 70 entertaining and educational
    projects. I hope these spur your creative imagination and become a reference for
    your own future work.
  prefs: []
  type: TYPE_NORMAL
- en: In general, you don’t need to read sequentially, building the projects in one
    chapter before moving to the next one; instead, you can drop into any chapter
    you find interesting or useful. [Chapters 19](chapter19.xhtml) and onward cover
    internet-connected projects, so it’s simplest to read these sequentially, but
    it’s not a requirement. When any chapter relies on content covered in a previous
    chapter, I provide the necessary references so you can go back and learn the required
    skills. Once you begin an individual chapter, read it from start to finish.
  prefs: []
  type: TYPE_NORMAL
- en: The following list describes the contents of each chapter in brief.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 1](chapter1.xhtml): Multiple Buttons with One Analog Input**    Explains
    how you can read the status of one of many buttons using a single analog-to-digital
    input pin. This can be useful for creating user inputs with lots of buttons when
    you don’t have many input pins available.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 2](chapter2.xhtml): Port Manipulation**     Explains how to use
    port manipulation with the digital output pins of your Arduino. Doing so reduces
    the amount of code required to control multiple outputs and allows you to control
    multiple digital outputs at once.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 3](chapter3.xhtml): Using ATtiny Microcontrollers**    Demonstrates
    how to use the smaller, cheaper ATtiny microcontrollers with the Arduino environment.
    ATtinys allow you to save money if your project doesn’t need an entire Arduino
    board.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 4](chapter4.xhtml): Building Watchdog Timers**    Demonstrates how
    to build and use a watchdog timer, a small external circuit that can restart your
    project in case there’s a hardware or software fault that causes it to stop working,
    which can be fixed with a reset.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 5](chapter5.xhtml): Controlling LEDs with Charlieplexing**    Introduces
    the concept of Charlieplexing, an efficient way of controlling one of many LEDs
    with fewer digital output pins.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 6](chapter6.xhtml): Adding Professional Power Control**    Shows
    you how to build an external circuit you can use to give your Arduino project
    soft-on and soft-off power control. You can use this to make your Arduino turn
    itself off when a task has completed.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 7](chapter7.xhtml): Controlling AC Mains Power Outlets**    Covers
    a method of controlling mains power outlets safely by using wireless remote-control
    outlets and some easy soldering.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 8](chapter8.xhtml): Controlling Higher-Powered Devices**    Demonstrates
    how to control high-current shift register ICs, which allow your project to control
    higher currents than is possible with popular shift register ICs. The final project
    is a giant clock with a display comprised of super-bright LEDs.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 9](chapter9.xhtml): Building a Digital Music Player and Sound Board**    
    Introduces inexpensive MP3 player modules and shows you how to add audio to your
    Arduino projects for notifications and entertainment.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 10](chapter10.xhtml): Using Multiple I**²**C Devices with the Same
    Address**     Demonstrates how to control multiple I²C bus devices that share
    the same bus address using an external controller IC.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 11](chapter11.xhtml): Emulating USB Mice and Keyboards with the
    Leonardo**     Shows you how an Arduino Leonardo or compatible board can be used
    to emulate a USB mouse or keyboard, enabling data logging directly to PC software
    or interesting and amusing projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 12](chapter12.xhtml): Transferring Data to and from USB Flash Drives**    
    Introduces how to save and retrieve data directly to or from a USB memory stick
    using an inexpensive module.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 13](chapter13.xhtml): Interfacing with PS/2 Keyboards**    Shows
    you how to interface your Arduino with a PS/2 style PC keyboard, which allows
    you to key data directly into your Arduino and gives you another option for a
    user interface.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 14](chapter14.xhtml): Controlling the Arduino with Bluetooth**    
    Demonstrates using inexpensive Bluetooth interface modules with your Arduino and
    building an Android app to remotely control your Arduino projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 15](chapter15.xhtml): Energy Efficiency for Portable Projects**    Shows
    you how to put your Arduino into various low-power and sleep modes, allowing for
    greater autonomy when being used on battery power.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 16](chapter16.xhtml): Monitoring Automotive Electronics with the
    CAN Bus**     Teaches you to interface the motor vehicle CAN data bus with your
    Arduino, so you can interrogate the vehicle’s engine management system for information
    about the car, like speed and RPM.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 17](chapter17.xhtml): Arduino-to-RS232 Communication**    Demonstrates
    how to interface your Arduino with another Arduino or other devices over the popular
    RS232 data bus.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 18](chapter18.xhtml): Arduino-to-RS485 Communication**    Demonstrates
    how to use the RS485 data bus for interfacing with RS485-compatible devices or
    just Arduino-to-Arduino communication over longer wired distances.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 19](chapter19.xhtml): The ESP32 Microcontroller Platform and IoT**    The
    remaining chapters use an ESP32 Wi-Fi-enabled Arduino-compatible board to enable
    connection to the internet via a Wi-Fi access point. In [Chapter 19](chapter19.xhtml),
    you’ll use the ESP32 board to build a web-based remote control for your projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 20](chapter20.xhtml): Remote Control via Telegram**    Shows you
    how to remotely control and interact with your Arduino project from almost anywhere
    in the world using the Telegram social media app on a mobile device.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 21](chapter21.xhtml): Retrieve the Current Time from an Internet
    Time Server**     Teaches you to retrieve accurate time and date from network
    time servers on the internet using Wi-Fi.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 22](chapter22.xhtml): Capture and Log Data to Google Sheets**    Shows
    you how to log captured data from your ESP32 Arduino-compatible board directly
    to a Google Sheets spreadsheet for analysis and distribution.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 23](chapter23.xhtml): Building a Mini Web Server**    Explains how
    to build your own website to display data captured and analyzed by your ESP32
    Arduino-compatible board.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 24](chapter24.xhtml): The ESP32 Camera Board**    Shows how to use
    and control a digital camera–enabled ESP32 Arduino-compatible board for video
    streaming or controlling the digital camera upon request.'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, if you need a reminder, you can refer to the appendix to learn how
    to create and install an Arduino library using the ZIP file installation method.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">What I Expect You to Know</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As this is an intermediate-level book, I expect you already know how to make
    a range of Arduino-based projects, from the simple to the more involved. You should
    also be familiar with writing your own Arduino sketches and uploading them to
    your board.
  prefs: []
  type: TYPE_NORMAL
- en: You should be able to understand circuit schematics to construct the circuits
    for each project. When describing connections to an Arduino or compatible board,
    instead of showing the entire board, a schematic uses labels to represent the
    Arduino pins to which connections should be made. For example, consider the schematic
    shown in [Figure 1](#fig1).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF AN EXAMPLE CIRCUIT SCHEMATIC](../images/fig1.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 1: An example schematic</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: The Arduino’s pin D11 is connected to R3, Arduino D10 to R4, and Arduino D9
    to R5, with the LED’s cathodes terminating at GND, which is connected to the Arduino’s
    GND pin. Using schematics throughout this book will also improve your ability
    to read complex circuits.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, be prepared to take appropriate safety measures for your workstation.
    For the projects in this book, you’ll work with basic hand tools, battery-powered
    electrical devices, sharp knives, cutters, soldering irons, and more. As with
    any hobby or craft, it’s up to you to take care of yourself and those around you.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Dogma_OT_Bold_B_21">WARNING</samp>
  prefs: []
  type: TYPE_NORMAL
- en: '*At no point in your projects should you work directly with the mains current.
    Leave that to a licensed electrician who is trained for such work. Contacting
    the mains current will kill you.*'
  prefs: []
  type: TYPE_NORMAL
- en: If you need help or have any compliments or brickbats about the content of this
    book, please contact me via the publisher’s website at [*https://<wbr>nostarch<wbr>.com<wbr>/contactus*](https://nostarch.com/contactus).
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Materials You’ll Need</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To complete the projects in this book, you’ll need up-to-date Arduino IDE software
    and various hardware parts and accessories, including a few printed circuit boards.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Arduino IDE and Sketch
    Files</samp>
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you haven’t already done so, download and install the latest version of the
    Arduino IDE software. You can find versions for Windows 10 and newer, macOS 10.14
    64-bit and newer, and Linux (Ubuntu or similar) from [*https://<wbr>www<wbr>.arduino<wbr>.cc<wbr>/en<wbr>/software*](https://www.arduino.cc/en/software).
    The IDE has been a work in progress since 2005 and is currently up to version
    2.*x* (the exact number may change, but the instructions in this book should still
    work). If you’re still using an older IDE, update to the latest version.
  prefs: []
  type: TYPE_NORMAL
- en: Next, visit the book’s website at [*https://<wbr>nostarch<wbr>.com<wbr>/arduino<wbr>-arduinians*](https://nostarch.com/arduino-arduinians)
    to download the Arduino sketch files for every example and project in this book,
    as well as a list of parts used, PCB design files for the boards in some projects,
    and errata, if necessary. I’ll explain how to order the PCB files shortly.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Parts and Accessories</samp>
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As with any other electronic device, the Arduino is available from many retailers
    offering a range of products and accessories. When shopping for a microcontroller,
    please purchase an original Arduino or a quality derivative—otherwise you run
    the risk of receiving faulty or poorly performing goods. Why risk buying an inferior
    board that could end up costing you more in the long run? For a list of genuine
    Arduino suppliers, visit [*http://<wbr>arduino<wbr>.cc<wbr>/en<wbr>/Main<wbr>/Buy<wbr>.*](http://arduino.cc/en/Main/Buy)
  prefs: []
  type: TYPE_NORMAL
- en: 'All the parts required for projects are listed in their respective chapters.
    I recommend these suppliers (listed in alphabetical order) for your purchases
    of Arduino-related parts and accessories:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Altronics (Australia)** [*https://<wbr>altronics<wbr>.com<wbr>.au*](https://altronics.com.au)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arduino Store USA** [*https://<wbr>store<wbr>-usa<wbr>.arduino<wbr>.cc*](https://store-usa.arduino.cc)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Newark/element14** [*https://<wbr>element14<wbr>.com*](https://element14.com)'
  prefs: []
  type: TYPE_NORMAL
- en: '**PMD Way** [*https://<wbr>pmdway<wbr>.com*](https://pmdway.com)'
  prefs: []
  type: TYPE_NORMAL
- en: '**RS Components** [*https://<wbr>www<wbr>.rs<wbr>-components<wbr>.com*](https://www.rs-components.com)'
  prefs: []
  type: TYPE_NORMAL
- en: '**SparkFun Electronics** [*https://<wbr>sparkfun<wbr>.com*](https://sparkfun.com)'
  prefs: []
  type: TYPE_NORMAL
- en: All the parts required for the projects in this book are common and easily available
    from the various resellers listed and others that you may already be familiar
    with. But don’t go shopping yet. Take the time to read a few chapters to get an
    idea of what you’ll need so that you won’t waste money buying unnecessary things.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Project PCBs</samp>
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It’s possible to assemble all projects in this book using one or more solderless
    breadboards, which may also require some external soldering to other devices.
    For example, in [Chapter 7](chapter7.xhtml), you’ll build a wireless AC outlet
    remote controller with the interface circuit on a solderless breadboard. However,
    for certain projects, such as the 30-LED matrix display in [Chapter 5](chapter5.xhtml),
    ordering printed circuit boards (PCBs) will make your projects more reliable and
    easier to build. This also gives you a more permanent example of your efforts.
  prefs: []
  type: TYPE_NORMAL
- en: After you download and extract this book’s files from the No Starch website,
    you’ll find a group of ZIP files, each with a project number. Each project’s ZIP
    file contains a group of files called Gerbers, which PCB manufacturers use to
    control the machines that shape and drill blank PCBs into the desired configuration.
  prefs: []
  type: TYPE_NORMAL
- en: You can view the PCBs by using a Gerber viewer tool such as [*https://<wbr>www<wbr>.gerblook<wbr>.org*](https://www.gerblook.org).
    Simply upload your Gerber ZIP file, and the tool should display the front and
    back of the PCB along with the other layers of interest, as shown in [Figure 2](#fig2).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF USING THE GERBLOOK WEBSITE TO VIEW RENDERS OF THE PCB FOR
    PROJECT #19](../images/fig2.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 2: Using an online Gerber
    viewer to display the PCB for Project #19</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s go through the process for ordering PCBs. You don’t have to order all
    the PCBs for the book at once, but note that the turnaround time can be two to
    three weeks.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, visit your preferred PCB manufacturer. I’ve found success with the following
    (listed in alphabetical order):'
  prefs: []
  type: TYPE_NORMAL
- en: '**JLCPCB** [*https://<wbr>jlcpcb<wbr>.com*](https://jlcpcb.com)'
  prefs: []
  type: TYPE_NORMAL
- en: '**OSH Park** [*https://<wbr>oshpark<wbr>.com*](https://oshpark.com)'
  prefs: []
  type: TYPE_NORMAL
- en: '**PCB Way** [*https://<wbr>pcbway<wbr>.com*](https://pcbway.com)'
  prefs: []
  type: TYPE_NORMAL
- en: You might use JLCPCB if you’re looking to save money. I’ve found that OSH Park,
    based in the United States, has high-quality PCBs, and PCB Way sells good-quality
    items at reasonable prices. This is by no means an exhaustive list, just three
    companies that I’ve used with success over the years.
  prefs: []
  type: TYPE_NORMAL
- en: The manufacturer website you choose will generally have a Quote Now or Quick
    Order button on the front page. Clicking that should lead you to an Add Gerber
    File button. For example, [Figure 3](#fig3) shows a screenshot of that page on
    the PCB Way website.
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF UPLOADING THE PCB GERBER FILES TO THE PCB MANUFACTURER’S
    WEBSITE](../images/fig3.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 3: Uploading Gerbers
    to PCB factory</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: Click **Add Gerber File**, navigate to your required ZIP file, and click **Open**
    or **OK** to upload the ZIP file to the factory website. (You don’t need to decompress
    the individual project ZIP files before uploading them, as the manufacturers can
    accept them without modification.) Once you upload your ZIP, the site should show
    you your PCB’s top and bottom sides, along with the measurements and potentially
    an initial price estimate, as shown in [Figure 4](#fig4). In general, the cost
    of a PCB can range from US$10 for smaller projects to US$40 or so for the larger
    ones.
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF AN EXAMPLE PCB PRICE AND FREIGHT QUOTE](../images/fig4.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 4: An example of a PCB
    price and freight quote displayed after uploading PCB ZIP files</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: Once you see the image of the PCB you’re in the process of ordering, scroll
    down to find many design options to choose from, as shown in [Figure 5](#fig5).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF SELECTING PCB TYPE OPTIONS ON THE PCB MANUFACTURER’S WEBSITE](../images/fig5.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 5: Selecting PCB options</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: 'Don’t panic—you only need to worry about a few of these options. You can change
    the following to suit your needs:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Quantity**    PCB factories will generally have a minimum quantity of three
    or five boards, but you can order as many as you like.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Solder mask**    This is the color of the protective coating on both sides
    of the PCB. Generally, the default color is green, but you can change this to
    suit your tastes or needs.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Silkscreen**    This is the color of the text printed on top of the solder
    mask, such as the board’s labels or titles. Again, change this to suit your preferences.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Surface finish**    By default, the factory will generally use a lead-based
    process, which has been the standard for decades. If you prefer a lead-free environment
    or are having the boards delivered to a country that requires lead-free PCBs,
    you can change the surface finish to HASL lead-free or immersion gold.'
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve made your selections or left them as the default, click **Next**
    or **Calculate** to see the final price. The website should also offer various
    delivery options, from cheap post to air courier, as shown in [Figure 6](#fig6).
    Save your PCB to your cart and then complete the last few steps for payment and
    delivery.
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF AN EXAMPLE OF A FINAL PCB QUOTE WITH FREIGHT](../images/fig6.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 6: Final PCB quote</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: You should receive a set of nicely machined PCBs like those shown in [Figure
    7](#fig7).
  prefs: []
  type: TYPE_NORMAL
- en: '![A PHOTO OF PCBS FOR PROJECTS FROM THIS BOOK](../images/fig7.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 7: PCBs for various
    projects</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: These boards will form the basis for reliable and long-lasting projects.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Moving On</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this introduction, you learned about the structure of this book, where to
    get the parts, and how to order your own PCBs used in some of the book’s projects.
    You’re ready to continue your Arduino journey, creating things you may never have
    thought possible, from the simple yet convenient to the relatively complex. You’ll
    also learn new methods to apply to your own designs, bringing original projects
    to life. Let’s get started!
  prefs: []
  type: TYPE_NORMAL
