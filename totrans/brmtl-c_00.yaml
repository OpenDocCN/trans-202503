- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: This book is called *Bare Metal C* because it’s for people who get close to
    the hardware. It’s not for people who buy their computer in a box and never see
    the inside. The computer used in this book doesn’t even have a box. If you want
    to use it, you’re going to have to connect something to the “bare metal” of the
    board.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书名为*裸机C*，因为它是为那些接近硬件的人准备的。它不适合那些购买现成电脑并从未看到过内部结构的人。本书使用的计算机甚至没有外壳。如果你想使用它，你必须将某些东西连接到电路板的“裸金属”上。
- en: 'This book teaches embedded programming. An *embedded computer* is one that
    sits inside the machine and you never know it’s there. It’s the device that runs
    your garage door opener, your microwave, your car, or even your greeting card.
    But before it can do any of those things, it needs to be programmed. And that
    is what this book teaches you: how to program an embedded system.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书教授嵌入式编程。*嵌入式计算机*是指那种嵌入机器内部且你永远不知道它存在的设备。它是驱动你的车库门开关、微波炉、汽车，甚至贺卡的设备。但在它能够执行这些任务之前，需要进行编程。这就是本书教给你的内容：如何编程嵌入式系统。
- en: 'Why C? C gives you precise control over what your program is doing, whereas
    other languages, such as C++, can do a great deal of things behind your back.
    Consider the following statement:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么选择C？C语言让你能够精确控制程序的行为，而其他语言，如C++，可能会在你不知情的情况下做很多事情。考虑以下语句：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In C++, this could call a class’s assignment operator function, which might
    result in heap memory being allocated and freed as well as an exception being
    thrown. What all that means is unimportant right now; the point is that you don’t
    know exactly what’s going to happen.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在C++中，这可能调用类的赋值操作符函数，导致堆内存被分配和释放，并且可能抛出异常。现在这些是什么意思并不重要；关键是你无法完全知道将会发生什么。
- en: In C, this statement assigns the value `b` to the variable `a` with no side
    effects; it’s just an assignment, nothing more. This example is simple, but you’ll
    see other ways that C does exactly what you tell it throughout the book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在C语言中，这个语句将值`b`赋给变量`a`，没有副作用；它只是一个赋值操作，仅此而已。这个例子很简单，但你会在本书中看到C语言如何按照你的指令做事。
- en: Precise control is important because we are using C to program a low-end *system
    on a chip (SOC)* system based on the STM32F030x4 processor (a cheap ARM Cortex-M0-based
    system) that has 8KB of RAM. Memory management is very important with limited
    RAM, so we can’t afford to have a high-level language like C++ play with memory
    behind our backs. Precise control is also important because an embedded system
    doesn’t have an operating system and you need to tell the hardware what to do
    directly. High-level languages don’t always let you talk to the hardware, but
    C does.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 精确控制非常重要，因为我们使用C语言来编程一个基于STM32F030x4处理器的低端*系统单芯片（SOC）*系统（这是一个廉价的基于ARM Cortex-M0的系统，配备8KB
    RAM）。在有限的RAM下，内存管理至关重要，因此我们不能允许像C++这样的高级语言在背后操控内存。精确控制同样重要，因为嵌入式系统没有操作系统，你需要直接告诉硬件该做什么。高级语言并不总是允许你与硬件直接交互，而C语言则可以。
- en: The book is designed for people who have a basic knowledge of computers and
    hardware, but have a limited knowledge of programming. It is for the hardware
    designer who wants to connect a new piece of hardware to a microcontroller and
    use it for the first time. It is for the programmer who is interested in low-level
    programming and wants to get the most out of a 38¢ chip.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适用于那些具备基本计算机和硬件知识，但对编程了解有限的人。它是为那些希望将新硬件连接到微控制器并首次使用的硬件设计师而设计的。它也适用于那些对低级编程感兴趣并希望充分利用38美分芯片的程序员。
- en: To get the most out of your programs, you’ll need to know what goes on under
    the hood. The book shows you not only how to write a program, but also how your
    program is translated into machine code that’s used by the ARM chip. That’s important
    for maximum efficiency. For example, you’ll learn how much of a performance hit
    you’ll get if you change your program from using 16-bit integers to using 32-bit
    integers. The answer, surprisingly, is that 32-bit integers are *more efficient*
    and *faster* (32 bits is the natural number size for the ARM, and if it’s forced
    to do 16-bit arithmetic, it does 32-bit calculations and then throws away 16 bits).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分发挥程序的性能，你需要了解程序背后发生的事情。这本书不仅教你如何编写程序，还会展示你的程序是如何被翻译成 ARM 芯片使用的机器码的。这一点对于最大化效率至关重要。例如，你将了解到如果将程序中的
    16 位整数改为 32 位整数，会带来多大的性能影响。令人惊讶的是，32 位整数*更高效*且*更快*（32 位是 ARM 的自然数据大小，如果被迫进行 16
    位运算，它会先进行 32 位计算，然后丢弃 16 位）。
- en: 'To program and debug an ARM chip, you’ll need some extra tools: a flash memory
    programmer (to get your code into the machine), a USB-to-serial converter (because
    we use the serial line for debugging), and a JTAG debugger. Since almost all developers
    need this combination of tools, STMicroelectronics makes a board that provides
    all the hardware you’ll need, called the NUCLEO-F030R8\. As of this writing, a
    chip shortage has made some boards hard to find. See [https://nostarch.com/bare-metal-c](https://nostarch.com/bare-metal-c)
    for alternate boards. You’ll also need a mini USB cable (the one that doesn’t
    fit your phone) so you can plug the board into your computer.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要编程和调试 ARM 芯片，你需要一些额外的工具：闪存编程器（用于将代码加载到机器中）、USB 到串行转换器（因为我们使用串行线进行调试）和 JTAG
    调试器。由于几乎所有开发者都需要这种工具组合，意法半导体（STMicroelectronics）生产了一款提供所有所需硬件的开发板，名为 NUCLEO-F030R8。目前，由于芯片短缺，某些开发板可能很难找到。请参考[https://nostarch.com/bare-metal-c](https://nostarch.com/bare-metal-c)以获取替代开发板。你还需要一根迷你
    USB 数据线（那种不适用于你手机的线），以便将开发板连接到计算机上。
- en: Your first task is to order a NUCLEO-F030R8\. Then start reading Chapter 1.
    By the time the board arrives, you will be ready for it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你的第一项任务是订购一块 NUCLEO-F030R8 开发板。然后开始阅读第一章。当开发板到货时，你就准备好了。
