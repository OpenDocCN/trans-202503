["```\n#include <stdio.h>\n\n#define FORMAT_STRING    \"%s\"\n#define MESSAGE          \"Hello, world!\\n\"\n\nint\nmain(int argc, char *argv[]) {\n  printf(FORMAT_STRING, MESSAGE);\n  return 0;\n}\n```", "```\n$ gcc -E -P compilation_example.c\n\ntypedef long unsigned int size_t;\ntypedef unsigned char __u_char;\ntypedef unsigned short int __u_short;\ntypedef unsigned int __u_int;\ntypedef unsigned long int __u_long;\n\n/* ... */\n\nextern int sys_nerr;\nextern const char *const sys_errlist[];\nextern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;\nextern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;\nextern FILE *popen (const char *__command, const char *__modes) ;\nextern int pclose (FILE *__stream);\nextern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));\nextern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));\nextern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;\nextern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));\n\nint\nmain(int argc, char *argv[]) {\n  printf(➊\"%s\", ➋\"Hello, world!\\n\");\n  return 0;\n}\n```", "```\n  $ gcc -S -masm=intel compilation_example.c\n  $ cat compilation_example.s\n\n          .file    \"compilation_example.c\"\n          .intel_syntax noprefix\n          .section       .rodata\n➊ .LC0:\n          .string        \"Hello, world!\"\n          .text\n          .globl  main\n          .type   main, @function\n➋ main:\n  .LFB0:\n          .cfi_startproc\n          push    rbp\n          .cfi_def_cfa_offset 16\n          .cfi_offset 6, -16\n          mov     rbp, rsp\n          .cfi_def_cfa_register 6\n          sub      rsp, 16\n          mov     DWORD PTR [rbp-4], edi\n          mov     QWORD PTR [rbp-16], rsi\n          mov     edi, ➌OFFSET FLAT:.LC0\n          call    puts\n          mov     eax, 0\n          leave\n          .cfi_def_cfa 7, 8\n          ret\n          .cfi_endproc\n.LFE0:\n          .size    main, .-main\n          .ident   \"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\"\n          .section .note.GNU-stack,\"\",@progbits\n```", "```\n$ gcc -c compilation_example.c\n$ file compilation_example.o\ncompilation_example.o: ELF 64-bit LSB relocatable, x86-64, version 1 (SYSV), not stripped\n```", "```\n$ gcc compilation_example.c\n$ file a.out\na.out: ➊ELF 64-bit LSB executable, x86-64, version 1 (SYSV), ➋dynamically\nlinked, ➌interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32,\nBuildID[sha1]=d0e23ea731bce9de65619cadd58b14ecd8c015c7, ➍not stripped\n$ ./a.out\nHello, world!\n```", "```\n$ ➊readelf --syms a.out\n\nSymbol table '.dynsym' contains 4 entries:\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n    0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND\n    1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (2)\n    2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)\n    3: 0000000000000000     0 NOTYPE WEAK    DEFAULT  UND __gmon_start__\nSymbol table '.symtab' contains 67 entries:\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n   ...\n   56: 0000000000601030     0 OBJECT  GLOBAL HIDDEN    25 __dso_handle\n   57: 00000000004005d0     4 OBJECT  GLOBAL DEFAULT   16 _IO_stdin_used\n   58: 0000000000400550   101 FUNC    GLOBAL DEFAULT   14 __libc_csu_init\n   59: 0000000000601040     0 NOTYPE  GLOBAL DEFAULT   26 _end\n   60: 0000000000400430    42 FUNC    GLOBAL DEFAULT   14 _start\n   61: 0000000000601038     0 NOTYPE  GLOBAL DEFAULT   26 __bss_start\n   62: 0000000000400526    32 FUNC    GLOBAL DEFAULT   14 ➋main\n   63: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses\n   64: 0000000000601038     0 OBJECT  GLOBAL HIDDEN    25 __TMC_END__\n   65: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable\n   66: 00000000004003c8     0 FUNC    GLOBAL DEFAULT   11 _init\n```", "```\n  $ ➊strip --strip-all a.out\n  $ file a.out\n  a.out: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically\n  linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32,\n  BuildID[sha1]=d0e23ea731bce9de65619cadd58b14ecd8c015c7, ➋stripped\n  $ readelf --syms a.out\n\n➌ Symbol table '.dynsym' contains 4 entries:\n     Num:    Value          Size Type    Bind   Vis     Ndx Name\n       0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT UND\n       1: 0000000000000000     0 FUNC    GLOBAL DEFAULT UND puts@GLIBC_2.2.5 (2)\n       2: 0000000000000000     0 FUNC    GLOBAL DEFAULT UND __libc_start_main@GLIBC_2.2.5 (2)\n       3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT UND __gmon_start__\n```", "```\n$ ➊objdump -sj .rodata compilation_example.o\n\ncompilation_example.o:   file format elf64-x86-64\n\nContents of section .rodata:\n 0000 48656c6c 6f2c2077 6f726c64 2100    Hello, world!.\n\n$ ➋objdump -M intel -d compilation_example.o\n\ncompilation_example.o:   file format elf64-x86-64\n\nDisassembly of section .text:\n\n0000000000000000 ➌<main>:\n   0:  55                     push   rbp\n   1:  48 89 e5               mov    rbp,rsp\n   4:  48 83 ec 10            sub    rsp,0x10\n   8:  89 7d fc               mov    DWORD PTR [rbp-0x4],edi\n   b:  48 89 75 f0            mov    QWORD PTR [rbp-0x10],rsi\n   f:  bf 00 00 00 00         mov    edi,➍0x0\n  14:  e8 00 00 00 00       ➎call   19 <main+0x19>\n  19:  b8 00 00 00 00         mov    eax,0x0\n  1e:  c9                     leave\n  1f:  c3                     ret\n```", "```\n   $ readelf --relocs compilation_example.o\n\n   Relocation section '.rela.text' at offset 0x210 contains 2 entries:\n      Offset             Info         Type            Sym. Value    Sym. Name + Addend\n➊ 000000000010      00050000000a R_X86_64_32     0000000000000000    .rodata + 0\n➋ 000000000015      000a00000002 R_X86_64_PC32   0000000000000000    puts - 4\n   ...\n```", "```\n$ objdump -M intel -d a.out\n\na.out:       file format elf64-x86-64\n\nDisassembly   of section ➊.init:\n\n00000000004003c8 <_init>:\n  4003c8:  48 83 ec 08             sub    rsp,0x8\n  4003cc:  48 8b 05 25 0c 20 00    mov    rax,QWORD PTR [rip+0x200c25]\n  4003d3:  48 85 c0                test   rax,rax\n  4003d6:  74 05                   je     4003dd <_init+0x15>\n  4003d8:  e8 43 00 00 00          call   400420 <__libc_start_main@plt+0x10>\n  4003dd:  48 83 c4 08             add    rsp,0x8\n  4003e1:  c3                      ret\n\nDisassembly of section ➋.plt:\n\n00000000004003f0 <puts@plt-0x10>:\n  4003f0: ff 35 12 0c 20 00        push   QWORD PTR [rip+0x200c12]\n  4003f6: ff 25  14 0c 20 00       jmp    QWORD PTR [rip+0x200c14]\n  4003fc: 0f 1f  40 00             nop    DWORD PTR [rax+0x0]\n\n0000000000400400 <puts@plt>:\n  400400:  ff 25 12 0c 20 00       jmp    QWORD PTR [rip+0x200c12]\n  400406:  68 00 00 00 00          push   0x0\n  40040b:  e9 e0 ff ff ff          jmp    4003f0 <_init+0x28>\n\n...\n\nDisassembly of section ➌.text:\n\n0000000000400430 <_start>:\n\n  400430:   31 ed                  xor    ebp,ebp\n  400432:   49 89 d1               mov    r9,rdx\n  400435:   5e                     pop    rsi\n  400436:   48 89 e2               mov    rdx,rsp\n  400439:   48 83 e4 f0            and    rsp,0xfffffffffffffff0\n  40043d:   50                     push   rax\n  40043e:   54                     push   rsp\n  40043f:   49 c7 c0 c0 05 40 00   mov    r8,0x4005c0\n  400446:   48 c7 c1 50 05 40 00   mov    rcx,0x400550\n  40044d:   48 c7 c7 26 05 40 00   mov    rdi,0x400526\n  400454:   e8 b7 ff ff ff         call   400410 <__libc_start_main@plt>\n  400459:   f4                     hlt\n  40045a:   66 0f 1f 44 00 00      nop    WORD PTR [rax+rax*1+0x0]\n\n0000000000400460 <deregister_tm_clones>:\n...\n\n0000000000400526 ➍<main>:\n  400526:  55                      push   rbp\n  400527:  48 89 e5                mov    rbp,rsp\n  40052a:  48 83 ec 10             sub    rsp,0x10\n  40052e:  89 7d fc                mov    DWORD PTR [rbp-0x4],edi\n  400531:  48 89 75 f0             mov    QWORD PTR [rbp-0x10],rsi\n  400535:  bf d4 05 40 00          mov    edi,0x4005d4\n  40053a:  e8 c1 fe ff ff          call   400400 ➎<puts@plt>\n  40053f:  b8 00 00 00 00          mov    eax,0x0\n  400544:  c9                      leave\n  400545:  c3                      ret\n  400546:  66 2e 0f 1f 84 00 00    nop    WORD PTR cs:[rax+rax*1+0x0]\n  40054d:  00 00 00\n\n0000000000400550 <__libc_csu_init>:\n...\n\nDisassembly of section .fini:\n\n00000000004005c4 <_fini>:\n  4005c4:  48 83 ec 08             sub   rsp,0x8\n  4005c8:  48 83 c4 08             add   rsp,0x8\n  4005cc:  c3                      ret\n```", "```\n  $ objdump -M intel -d ./a.out.stripped\n\n  ./a.out.stripped:        file format elf64-x86-64\n\n  Disassembly of section ➊.init:\n\n  00000000004003c8 <.init>:\n    4003c8:  48 83 ec 08             sub    rsp,0x8\n    4003cc:  48 8b 05 25 0c 20 00    mov    rax,QWORD PTR [rip+0x200c25]\n    4003d3:  48 85 c0                test   rax,rax\n    4003d6:  74 05                   je     4003dd <puts@plt-0x23>\n    4003d8:  e8 43 00 00 00          call   400420 <__libc_start_main@plt+0x10>\n    4003dd:  48 83 c4 08             add    rsp,0x8\n    4003e1:  c3                      ret\n\n  Disassembly of section ➋.plt:\n  ...\n\n  Disassembly of section ➌.text:\n\n  0000000000400430   <.text>:\n➍  400430: 31 ed                     xor   ebp,ebp\n    400432: 49 89    d1               mov   r9,rdx\n    400435: 5e                        pop   rsi\n    400436: 48 89    e2               mov   rdx,rsp\n    400439: 48 83    e4 f0            and   rsp,0xfffffffffffffff0\n    40043d: 50                        push  rax\n    40043e: 54                        push  rsp\n    40043f: 49 c7    c0 c0 05 40 00   mov   r8,0x4005c0\n    400446: 48 c7    c1 50 05 40 00   mov   rcx,0x400550\n    40044d: 48 c7    c7 26 05 40 00   mov   rdi,0x400526\n➎  400454: e8 b7 ff ff ff            call  400410 <__libc_start_main@plt>\n    400459: f4                        hlt\n    40045a: 66 0f 1f 44 00 00         nop   WORD PTR [rax+rax*1+0x0]\n➏  400460: b8 3f 10 60 00            mov   eax,0x60103f\n    ...\n    400520: 5d                        pop   rbp\n    400521: e9   7a ff ff ff          jmp   4004a0 <__libc_start_main@plt+0x90>\n➐  400526: 55                        push  rbp\n    400527: 48   89   e5              mov   rbp,rsp\n    40052a: 48   83   ec   10         sub   rsp,0x10\n    40052e: 89   7d   fc              mov   DWORD PTR [rbp-0x4],edi\n    400531: 48   89   75   f0         mov   QWORD PTR [rbp-0x10],rsi\n    400535: bf   d4   05   40 00      mov   edi,0x4005d4\n    40053a: e8   c1   fe   ff ff      call  400400 <puts@plt>\n    40053f: b8   00   00   00 00      mov   eax,0x0\n    400544: c9                        leave\n➑  400545: c3                        ret\n    400546: 66   2e 0f 1f 84 00 00    nop   WORD PTR cs:[rax+rax*1+0x0]\n    40054d: 00   00 00\n    400550: 41   57                   push  r15\n    400552: 41   56                   push  r14\n    ...\n\n  Disassembly of section .fini:\n\n  00000000004005c4 <.fini>:\n    4005c4: 48 83 ec 08               sub   rsp,0x8\n    4005c8: 48 83 c4 08               add   rsp,0x8\n    4005cc: c3                        ret\n```", "```\n$ readelf -p .interp a.out\n\nString dump of section '.interp':\n  [     0] /lib64/ld-linux-x86-64.so.2\n```"]