- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](image_fi/book_art/chapterart.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Every day of their working lives, DevOps engineers immerse themselves in cloud-based
    trends and technologies. Meanwhile, everyone else in engineering is expected to
    be familiar with DevOps and keep pace with how it is evolving. The reason is simple:
    DevOps is an integral part of software development. However, you probably don’t
    have time to both do your day job and keep tabs on the ever-changing landscape
    of DevOps—and luckily, you don’t have to. Just gain an understanding of the foundational
    concepts, terms, and tactics of DevOps, and you’ll go far.'
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, when it comes time to deliver code, you can’t just put your
    head in the sand and hope someone else will deal with it. Writing configuration
    files, enforcing observability, and setting up continuous integration/continuous
    delivery (CI/CD) pipelines have become the norm in software development. You therefore
    need to be well versed in code and infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’re a software engineer, developer, or systems administrator, this book
    will teach you the concepts, commands, and techniques that will give you a solid
    foundation in DevOps, reliability, and modern application stacks. But be aware
    that this is an introduction to DevOps, not a definitive guide. I’ve chosen to
    keep the knowledge fire hose turned down low, and I’ll focus on the following
    foundational concepts:'
  prefs: []
  type: TYPE_NORMAL
- en: Infrastructure as code
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configuration management
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Security
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Containerization and orchestration
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delivery
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Monitoring and alerting
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Troubleshooting
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Plenty of other great books will take you on a deep dive into the concepts and
    culture of DevOps. I encourage you to read them and learn more. But if you just
    want to get started with the basics, *DevOps for the Desperate* has you covered.
  prefs: []
  type: TYPE_NORMAL
- en: What Is the Current State of DevOps?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Over the past few years, different trends have emerged in DevOps. There is a
    heavy focus on microservices, container orchestration (Kubernetes), automated
    code delivery (CI/CD), and observability (detailed logging, tracing, monitoring,
    and alerting). These topics aren’t new to the DevOps community, but they’re gaining
    more attention because everyone has swallowed the red pill and gone down the cloud-and-containerization
    rabbit hole.
  prefs: []
  type: TYPE_NORMAL
- en: Automating and testing the “code to customer” experience is still one of the
    most important parts of DevOps, and it will continue to be as late adopters play
    catch-up. As engineering ecosystems mature, more and more DevOps work is occurring
    higher up the tech stack. In other words, DevOps engineers are heavily relying
    on tools and processes so software engineers can self-serve shipping code. Because
    of this, sharing DevOps practices and techniques with feature teams is paramount
    to delivering standardized and predictable software.
  prefs: []
  type: TYPE_NORMAL
- en: A few more emerging trends are worth a brief mention here. The first is security.
    DevSecOps is becoming an essential part of the build process rather than a post-release
    afterthought. Another trend is the use of machine learning for data-driven decisions
    like alerting. Machine learning insights can be extremely useful in heuristics
    and will play a larger role going forward.
  prefs: []
  type: TYPE_NORMAL
- en: Who Should Read This Book?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This book is aimed at helping software engineers feel at home and thrive in
    a modern application stack. As such, it provides just the right amount of introductory
    information about DevOps tasks. This is not to say it has nothing to offer established
    DevOps engineers. On the contrary, it provides plenty of useful information about
    containerization, monitoring, and troubleshooting. If you are a DevOps engineer
    or software engineer in a small shop, you can even use this book to help you create
    your whole application stack, from local development to production.
  prefs: []
  type: TYPE_NORMAL
- en: So, if you’re a software developer looking for knowledge about DevOps, this
    book is for you. If you’re interested in becoming more of a generalist, this book
    is for you. And if I’ve paid you money to read this book—well, this book is definitely
    for you.
  prefs: []
  type: TYPE_NORMAL
- en: How This Book Is Organized
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This book is divided into three parts, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Part I: Infrastructure as Code, Configuration Management, Security, and Administration'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Part I introduces the concepts of infrastructure as code (IaC) and configuration
    management (CM), which are essential for building systems with a repeatable, versioned,
    and predictable state. We’ll also explore host-based and user-based security.
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 1: Setting Up a Virtual Machine This chapter discusses the concepts
    of IaC and CM. It then introduces two technologies, Vagrant and Ansible, that
    you’ll use to create and provision an Ubuntu VM.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Chapter 2: Using Ansible to Manage Passwords, Users, and Groups This chapter
    looks at how to use CM for user and group creation to restrict file and directory
    access. It also explains how to use CM to enforce complex passwords.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Chapter 3: Using Ansible to Configure SSH This chapter shows you how to set
    up public key and two-factor authentication over SSH, thus making it harder for
    unauthorized users to gain access to your host and sensitive data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Chapter 4: Controlling User Commands with sudo This chapter shows you how to
    create a security policy that delegates command access for a specific user and
    group. Controlling the command access that users and groups have on a host can
    help you avoid unnecessary exposure to attackers. At a minimum, it prevents you
    from having a poorly configured OS.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Chapter 5: Automating and Testing a Host-Based Firewall This chapter describes
    how to create and test a minimal firewall that will block all unwanted access
    while permitting approved traffic. By limiting port exposure, you can reduce the
    vulnerabilities your host and application may encounter from the outside.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Part II: Containerization and Deploying Modern Applications'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Part II introduces the concepts of containerization, orchestration, and delivery.
    It also explores some of the components that make up a modern stack.
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 6: Containerizing an Application with Docker This chapter introduces
    containers and containerization, and it shows how to create a sample containerized
    application. Having a basic understanding of containers and how to use them for
    local development and production is key to your ability to work with any modern
    application stack.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Chapter 7: Orchestrating with Kubernetes This chapter introduces container
    orchestration and explores how to use technologies like Kubernetes and minikube
    to deploy an application on a local cluster. It also serves as an example of how
    to set up a local development environment.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Chapter 8: Deploying Code This chapter discusses the concept of continuous
    integration and continuous deployment (CI/CD). It also explores some core technologies,
    like Skaffold, that allow you to create a pipeline on a local Kubernetes cluster.
    After building an effective CI/CD pipeline, you’ll have a good understanding of
    how to build, test, and deploy software.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Part III: Observability and Troubleshooting'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Finally, Part III introduces the concepts of monitoring, alerting, and troubleshooting.
    It looks at metric collection and visualization for applications and hosts. It
    also discusses some common host and application issues, as well as tools you can
    use to diagnose them.
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 9: Observability This chapter introduces the concept of a monitoring
    and alerting stack, and it explores the technologies (Prometheus, Alertmanager,
    and Grafana) that make up this stack. You’ll learn how to detect a system’s state
    and alert on it when things are out of scope.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Chapter 10: Troubleshooting Hosts The last chapter discusses common issues
    and errors on a host and some tools you can use to troubleshoot them. Being able
    to analyze issues on a host will help you in times of crisis and help you understand
    performance issues in your own code and applications.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What You’ll Need
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In order to explore the DevOps concepts in this book, you’ll install some tooling
    and the free VirtualBox virtualization technology for x86 hardware that allows
    you to run other operating systems on your local host. Unfortunately, some of
    the tools needed for these tasks won’t work natively on some OSes and CPUs, such
    as Windows and Apple Silicon. Using Linux or an Intel-based Mac as the host machine
    is the most straightforward option. The following list summarizes what you can
    expect for each OS:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Linux**'
  prefs: []
  type: TYPE_NORMAL
- en: If you’re on a Linux host, all the examples and sample applications will work
    out of the box. Since you’ll be installing VirtualBox, you’ll want to be running
    a desktop version of Linux rather than a headless server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Intel-based Mac**'
  prefs: []
  type: TYPE_NORMAL
- en: If you’re running an Intel-based Mac, as with Linux, all the examples and sample
    applications will work without any modifications. Use the Brew package manager
    ([https://brew.sh](https://brew.sh)) to install software.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Windows**'
  prefs: []
  type: TYPE_NORMAL
- en: If you’re on a Windows host, installing all the tools and applications in this
    book can be a challenge. For example, you’ll use Ansible to explore configuration
    management, but there’s no easy way to install Ansible on Windows. As a workaround,
    you can use an Ubuntu VM as your starting point. I recommend creating the VM with
    Hyper-V, since it’s native to Windows. You’ll need Windows 10 or 11 Pro to use
    Hyper-V. See the Ubuntu Wiki ([https://wiki.ubuntu.com/Hyper-V](https://wiki.ubuntu.com/Hyper-V))
    for instructions on creating an Ubuntu VM on Hyper-V.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You’ll also need to enable nested virtualization since you’ll be installing
    VirtualBox inside the Hyper-V Ubuntu VM. To enable this feature, enter the following
    command in an administrative PowerShell terminal:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You’ll need to run this command when the Ubuntu VM is stopped, or it will fail.
    Replace `VMName` with the name of the Ubuntu VM you just created.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After your VM is up and running, you’ll install VirtualBox using the Ubuntu
    version listed at [https://www.virtualbox.org/wiki/Linux_Downloads](https://www.virtualbox.org/wiki/Linux_Downloads).
    After completing that installation, you’ll be able to perform the book’s examples
    from within the newly created VM.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For older versions of Windows, you can use VirtualBox (yes, VirtualBox within
    VirtualBox) or VMware ([https://www.vmware.com/products/workstation-player.html](https://www.vmware.com/products/workstation-player.html))
    to create the Ubuntu VM. Instructions for these options are beyond the scope of
    this book.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Apple Silicon**'
  prefs: []
  type: TYPE_NORMAL
- en: If you’re using an Apple Silicon computer as your host machine, VirtualBox is
    not an option. Apple Silicon’s CPU is based off the ARM architecture, and VirtualBox
    works only on x86\. Instead, you’ll need to use a virtualization technology like
    Parallels ([https://parallels.com](https://parallels.com)), VMware Fusion ([https://vmware.com](https://vmware.com)),
    or Qemu ([https://www.qemu.org](https://www.qemu.org)) to create an ARM-based
    virtual machine. The first two options are paid software and may provide a better
    user experience. Qemu is free and open source, and it requires some extra configuration
    steps. Visit the companion GitHub repository ([https://github.com/bradleyd/devops_for_the_desperate/tree/main/apple-silicon/](https://github.com/bradleyd/devops_for_the_desperate/tree/main/apple-silicon/))
    for detailed instructions on how to set up a suitable lab to follow along on your
    Apple Silicon Mac.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To get the best experience, your host should have a minimum of 8GB of memory
    and at least 20GB of free disk space available; your mileage might vary if you
    have less. This book also makes some basic assumptions about your comfort level
    with Linux and the command line. You should be familiar with Bash and feel at
    home editing files.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and Installing VirtualBox
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Download the installer from [https://www.virtualbox.org/wiki/Downloads/](https://www.virtualbox.org/wiki/Downloads/).
    Choose the latest version and the correct download for your specific operating
    system. As mentioned previously, Windows users using Hyper-V will install VirtualBox
    for Ubuntu Linux. For Intel-based Macs, click the OS hosts link and download the
    installer. For Linux, you guessed it—click the Linux distributions link to find
    the download for your distribution. The VirtualBox website has excellent instructions
    for the different OSes at [https://www.virtualbox.org/manual/](https://www.virtualbox.org/manual/).
  prefs: []
  type: TYPE_NORMAL
- en: Launch VirtualBox from where you installed it to verify that it works. If everything
    is okay, you should be greeted with a start screen (see Figure 1).
  prefs: []
  type: TYPE_NORMAL
- en: '![Screenshot showing the blank starting screen of Oracle VM VirtualBox Manager
    with icons at the top for tools, add, import, properties, try, and help](image_fi/502482f06/f00001.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: VirtualBox start screen on macOS (it will look different depending
    on your host OS)'
  prefs: []
  type: TYPE_NORMAL
- en: If you decide to use your OS’s package manager to install VirtualBox, make sure
    you’ve got the latest version, as older versions might show differences from the
    examples in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Companion Repository
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As this is a book for the desperate, I have taken the liberty of creating IaC
    files, Kubernetes manifests, an example application, and other things that will
    help you follow along throughout. I have put all the examples and source code
    in a Git repository located at [https://github.com/bradleyd/devops_for_the_desperate.git](https://github.com/bradleyd/devops_for_the_desperate.git).
    To follow along with the chapters and examples, you’ll need to clone the book’s
    repository. Your OS should have Git installed by default, but if it does not,
    visit [https://git-scm.com/downloads](https://git-scm.com/downloads) for information
    on how to download and install Git for your specific OS.
  prefs: []
  type: TYPE_NORMAL
- en: 'From your terminal, enter the following command to clone the companion repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Feel free to clone this repository to anywhere you like. I have added some information
    in the *README* file as well if you need any additional guidance. We’ll revisit
    this repository throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: Editor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Throughout this book, you’ll need to edit and view files to complete tasks.
    For example, in some of the Ansible files, I’ve either left portions commented
    out that you’ll need to uncomment, or you’ll need to fill in some missing information.
  prefs: []
  type: TYPE_NORMAL
- en: I recommend using any editor you are comfortable with. You won’t need any special
    plug-in or dependency to follow along in this book. However, if you look hard
    enough, I am sure you can find syntax plug-ins to help with editing the different
    types of files, like Ansible and Vagrant manifests. I use Vim as my editor, but
    feel free to substitute your favorite.
  prefs: []
  type: TYPE_NORMAL
- en: And now, with all the background out of the way, you are ready to get started!
    In Chapter 1, we’ll dive into setting up a local virtual machine.
  prefs: []
  type: TYPE_NORMAL
