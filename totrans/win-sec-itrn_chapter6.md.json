["```\nPS> **$dir = Get-NtDirectory \"\\BaseNamedObjects\" -Access AccessSystemSecurity**\nGet-NtDirectory : (0xC0000061) - A required privilege is not held by\nthe client.\n`--snip--`\n\nPS> **Enable-NtTokenPrivilege SeSecurityPrivilege**\nPS> **$dir = Get-NtDirectory \"\\BaseNamedObjects\" -Access AccessSystemSecurity**\nPS> **$dir.GrantedAccess**\nAccessSystemSecurity \n```", "```\nPS> **Use-NtObject($d = Get-NtDirectory \"\\BaseNamedObjects\" -Access** \n**ReadControl) {**\n    **Get-NtSecurityDescriptor -Object $d**\n**}**\nOwner                  DACL ACE Count SACL ACE Count Integrity Level\n-----                  -------------- -------------- ---------------\nBUILTIN\\Administrators 4              1              Low \n```", "```\nPS> **Get-NtSecurityDescriptor \"\\BaseNamedObjects\" -SecurityInformation Owner**\nOwner                  DACL ACE Count SACL ACE Count Integrity Level\n-----                  -------------- -------------- ---------------\nBUILTIN\\Administrators NONE           NONE           NONE \n```", "```\nPS> **$creator = New-NtSecurityDescriptor -Type Mutant**\n❶ PS> **Add-NtSecurityDescriptorAce $creator -Name \"Everyone\" -Access GenericRead** \n❷ PS> **Format-NtSecurityDescriptor $creator** \nType: Mutant\nControl: DaclPresent\n<DACL>\n - Type  : Allowed\n - Name  : Everyone\n - SID   : S-1-1-0\n - Mask  : 0x80000000\n - Access: GenericRead\n - Flags : None\n\nPS> **$token = Get-NtToken -Effective -Pseudo**\n❸ PS> **$sd = New-NtSecurityDescriptor -Token $token -Creator $creator** \n**-Type Mutant** \nPS> **Format-NtSecurityDescriptor $sd**\nType: Mutant\nControl: DaclPresent\n❹ <Owner>\n - Name  : GRAPHITE\\user\n - Sid   : S-1-5-21-2318445812-3516008893-216915059-1002\n\n❺ <Group>\n - Name  : GRAPHITE\\None\n - Sid   : S-1-5-21-2318445812-3516008893-216915059-513\n\n<DACL>\n- Type  : Allowed\n- Name  : Everyone\n- SID   : S-1-1-0\n- Mask  : 0x00020001\n❻ - Access: ModifyState|ReadControl\n- Flags : None \n```", "```\nPS> **Format-NtToken $token -Owner -PrimaryGroup**\nOWNER INFORMATION\n----------------\nName          Sid\n----          ---\nGRAPHITE\\user S-1-5-21-2318445812-3516008893-216915059-1002\n\nPRIMARY GROUP INFORMATION\n-------------------------\nName          Sid\n----          ---\nGRAPHITE\\None S-1-5-21-2318445812-3516008893-216915059-513 \n```", "```\nPS> **Set-NtSecurityDescriptorOwner $creator -KnownSid LocalSystem**\nPS> **New-NtSecurityDescriptor -Token $token -Creator $creator -Type Mutant**\nNew-NtSecurityDescriptor : (0xC000005A) - Indicates a particular Security ID\nmay not be assigned as the owner of an object. \n```", "```\nPS> **$creator = New-NtSecurityDescriptor -Type Mutant**\nPS> **Add-NtSecurityDescriptorAce $creator -Name \"Everyone\" -Access GenericRead**\nPS> **Use-NtObject($m = New-NtMutant -SecurityDescriptor $creator) {**\n    **Format-NtSecurityDescriptor $m**\n**}**\nType: Mutant\nControl: DaclPresent\n<Owner>\n - Name  : GRAPHITE\\user\n - Sid   : S-1-5-21-2318445812-3516008893-216915059-1002\n\n<Group>\n - Name  : GRAPHITE\\None\n - Sid   : S-1-5-21-2318445812-3516008893-216915059-513\n\n<DACL>\n - Type  : Allowed\n - Name  : Everyone\n - SID   : S-1-1-0\n - Mask  : 0x00020001\n - Access: ModifyState|ReadControl\n - Flags : None \n```", "```\nPS> **$token = Get-NtToken -Effective -Pseudo**\n❶ PS> **$sd = New-NtSecurityDescriptor -Token $token -Type Mutant**\nPS> **Format-NtSecurityDescriptor $sd -HideHeader**\n❷ <Owner>\n - Name  : GRAPHITE\\user\n - Sid   : S-1-5-21-2318445812-3516008893-216915059-1002\n\n<Group>\n - Name  : GRAPHITE\\None\n - Sid   : S-1-5-21-2318445812-3516008893-216915059-513\n\n❸ <DACL>\n - Type  : Allowed\n - Name  : GRAPHITE\\user\n - SID   : S-1-5-21-2318445812-3516008893-216915059-1002\n - Mask  : 0x001F0001\n - Access: Full Access\n - Flags : None\n\n - Type  : Allowed\n - Name  : NT AUTHORITY\\SYSTEM\n - SID   : S-1-5-18\n - Mask  : 0x001F0001\n - Access: Full Access\n - Flags : None\n\n - Type  : Allowed\n - Name  : NT AUTHORITY\\LogonSessionId_0_137918\n - SID   : S-1-5-5-0-137918\n - Mask  : 0x00120001\n - Access: ModifyState|ReadControl|Synchronize\n - Flags : None \n```", "```\nPS> **Format-NtToken $token -DefaultDacl**\nDEFAULT DACL\n------------\nGRAPHITE\\user: (Allowed)(None)(GenericAll)\nNT AUTHORITY\\SYSTEM: (Allowed)(None)(GenericAll)\nNT AUTHORITY\\LogonSessionId_0_137918: (Allowed)(None)(GenericExecute|GenericRead) \n```", "```\nPS> **Use-NtObject($m = New-NtMutant) {**\n    **Format-NtSecurityDescriptor $m**\n**}**\nType: Mutant\nControl: None\n<NO SECURITY INFORMATION> \n```", "```\nPS> **Get-NtType \"Mutant\" | Select-Object SecurityRequired**\nSecurityRequired\n----------------\n          False \n```", "```\nPS> **Get-NtType Directory | Select-Object SecurityRequired**\nSecurityRequired\n----------------\n            True\n\nPS> **Use-NtObject($dir = New-NtDirectory) {**\n    **Format-NtSecurityDescriptor $dir -Summary**\n**}**\nGRAPHITE\\user: (Allowed)(None)(Full Access)\nNT AUTHORITY\\SYSTEM: (Allowed)(None)(Full Access)\nNT AUTHORITY\\LogonSessionId_0_137918: (Allowed)(None)(Query|Traverse|ReadControl) \n```", "```\nPS> **function New-ParentSD($AceFlags = 0, $Control = 0) {**\n    **$owner = Get-NtSid -KnownSid BuiltinAdministrators**\n  ❶ **$parent = New-NtSecurityDescriptor -Type Directory -Owner $owner -Group $owner**\n  ❷ **Add-NtSecurityDescriptorAce $parent -Name \"Everyone\" -Access GenericAll**\n    **Add-NtSecurityDescriptorAce $parent -Name \"Users\" -Access GenericAll -Flags $AceFlags**\n  ❸ **Add-NtSecurityDescriptorControl $parent -Control $Control**\n  ❹ **Edit-NtSecurityDescriptor $parent -MapGeneric**\n    **return $parent**\n**}**\n\nPS> **function Test-NewSD($AceFlags = 0,**\n                        **$Control = 0,**\n                        **$Creator = $null,**\n                        **[switch]$Container) {**\n  ❺ **$parent = New-ParentSD -AceFlags $AceFlags -Control $Control**\n    **Write-Output \"-= Parent SD =-\"**\n    **Format-NtSecurityDescriptor $parent -Summary**\n\n    **if ($Creator -ne $null) {**\n        **Write-Output \"`r`n-= Creator SD =-\"**\n        **Format-NtSecurityDescriptor $creator -Summary**\n    **}**\n\n  ❻ **$auto_inherit_flags = @()**\n    **if (Test-NtSecurityDescriptor $parent -DaclAutoInherited) {**\n        **$auto_inherit_flags += \"DaclAutoInherit\"**\n    **}**\n    **if (Test-NtSecurityDescriptor $parent -SaclAutoInherited) {**\n        **$auto_inherit_flags += \"SaclAutoInherit\"**\n    **}**\n    **if ($auto_inherit_flags.Count -eq 0) {**\n        **$auto_inherit_flags += \"None\"**\n    **}**\n\n    **$token = Get-NtToken -Effective -Pseudo**\n  ❼ **$sd = New-NtSecurityDescriptor -Token $token -Parent $parent -Creator $creator -Type Mutant****-Container:$Container -AutoInherit $auto_inherit_flags**\n    **Write-Output \"`r`n-= New SD =-\"**\n  ❽ **Format-NtSecurityDescriptor $sd -Summary**\n**}** \n```", "```\nPS> **Test-NewSD**\n-= Parent SD =-\n<DACL>\nEveryone: (Allowed)(None)(Full Access)\nBUILTIN\\Users: (Allowed)(None)(Full Access)\n\n-= New SD =-\n<Owner> : GRAPHITE\\user ❶\n<Group> : GRAPHITE\\None\n<DACL>\nGRAPHITE\\user: (Allowed)(None)(Full Access) ❷\nNT AUTHORITY\\SYSTEM: (Allowed)(None)(Full Access)\nNT AUTHORITY\\LogonSessionId_0_137918: (Allowed)(None)(ModifyState|ReadControl|...) \n```", "```\nPS> **Test-NewSD -AceFlags \"ObjectInherit\"** ❶\n-= Parent SD =-\n<Owner> : BUILTIN\\Administrators\n<Group> : BUILTIN\\Administrators\n<DACL>\nEveryone: (Allowed)(None)(Full Access)\nBUILTIN\\Users: (Allowed)(ObjectInherit)(Full Access)\n\n-= New SD =-\n<Owner> : GRAPHITE\\user ❷\n<Group> : GRAPHITE\\None\n<DACL> ❸\nBUILTIN\\Users: (Allowed)(None)(ModifyState|Delete|ReadControl|WriteDac|WriteOwner) \n```", "```\nPS> **Get-NtAccessMask (0x0001F0001 -band 0x0000F000F) -ToSpecificAccess Mutant**\nModifyState, Delete, ReadControl, WriteDac, WriteOwner \n```", "```\n❶ PS> **Test-NewSD -AceFlags \"ObjectInherit, InheritOnly\"**\n-= Parent SD =-\n<Owner> : BUILTIN\\Administrators\n<Group> : BUILTIN\\Administrators\n<DACL>\nEveryone: (Allowed)(None)(Full Access)\n❷ BUILTIN\\Users: (Allowed)(ObjectInherit, InheritOnly)(GenericAll)\n\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL>\n❸ BUILTIN\\Users: (Allowed)(None)(Full Access) \n```", "```\n❶ PS> **Test-NewSD -AceFlags \"ContainerInherit, InheritOnly\" -Container**\n-= Parent SD =-\n<Owner> : BUILTIN\\Administrators\n<Group> : BUILTIN\\Administrators\n<DACL>\nEveryone: (Allowed)(None)(Full Access)\nBUILTIN\\Users: (Allowed)(ContainerInherit, InheritOnly)(GenericAll)\n\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL>\n❷ BUILTIN\\Users: (Allowed)(None)(Full Access)\n❸ BUILTIN\\Users: (Allowed)(ContainerInherit, InheritOnly)(GenericAll) \n```", "```\nPS> **$ace_flags = \"ContainerInherit, InheritOnly, NoPropagateInherit\"**\nPS> **Test-NewSD -AceFlags $ace_flags -Container**\n`--snip--`\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL>\n❶ BUILTIN\\Users: (Allowed)(None)(Full Access) \n```", "```\nPS> **Test-NewSD -AceFlags \"ObjectInherit\" -Container**\n`--snip--`\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL>\n❶ BUILTIN\\Users: (Allowed)(ObjectInherit, InheritOnly)(ModifyState|...) \n```", "```\nPS> **$ace_flags = \"ObjectInherit, InheritOnly\"**\n❶ PS> **Test-NewSD -AceFlags $ace_flags -Control \"DaclAutoInherited\"**\n-= Parent SD =-\n<Owner> : BUILTIN\\Administrators\n<Group> : BUILTIN\\Administrators\n❷ <DACL> (Auto Inherited)\nEveryone: (Allowed)(None)(Full Access)\nBUILTIN\\Users: (Allowed)(ObjectInherit, InheritOnly)(GenericAll)\n\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n❸ <DACL> (Auto Inherited)\n❹ BUILTIN\\Users: (Allowed)(Inherited)(Full Access) \n```", "```\nPS> **function New-CreatorSD($AceFlags = 0, $Control = 0, [switch]$NoDacl) {**\n❶ **$creator = New-NtSecurityDescriptor -Type Mutant**\n❷ **if (!$NoDacl) {**\n❸ **Add-NtSecurityDescriptorAce $creator -Name \"Network\" -Access GenericAll**\n **Add-NtSecurityDescriptorAce $creator -Name \"Interactive\"**\n**-Access GenericAll -Flags $AceFlags**\n **}**\n **Add-NtSecurityDescriptorControl $creator -Control $Control**\n **Edit-NtSecurityDescriptor $creator -MapGeneric**\n **return $creator**\n**}** \n```", "```\n❶ PS> **$creator = New-CreatorSD -NoDacl**\n❷ PS> **Test-NewSD -Creator $creator -AceFlags \"ObjectInherit, InheritOnly\"**\n-= Parent SD =-\n<Owner> : BUILTIN\\Administrators\n<Group> : BUILTIN\\Administrators\n<DACL>\nEveryone: (Allowed)(None)(Full Access)\n❸ BUILTIN\\Users: (Allowed)(ObjectInherit, InheritOnly)(GenericAll)\n\n-= Creator SD =-\n❹ <NO SECURITY INFORMATION>\n\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL>\n❺ BUILTIN\\Users: (Allowed)(None)(Full Access) \n```", "```\n❶ PS> **$creator = New-CreatorSD**\n❷ PS> **Test-NewSD -Creator $creator -AceFlags \"ObjectInherit, InheritOnly\"**\n-= Parent SD =-\n<Owner> : BUILTIN\\Administrators\n<Group> : BUILTIN\\Administrators\n<DACL>\nEveryone: (Allowed)(None)(Full Access)\nBUILTIN\\Users: (Allowed)(ObjectInherit, InheritOnly)(GenericAll)\n\n-= Creator SD =-\n<DACL>\nNT AUTHORITY\\NETWORK: (Allowed)(None)(Full Access)\nNT AUTHORITY\\INTERACTIVE: (Allowed)(None)(Full Access)\n\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL>\n❸ NT AUTHORITY\\NETWORK: (Allowed)(None)(Full Access)\nNT AUTHORITY\\INTERACTIVE: (Allowed)(None)(Full Access) \n```", "```\n❶ PS> **$creator = New-CreatorSD -AceFlags \"Inherited\"**\n❷ PS> **Test-NewSD -Creator $creator -AceFlags \"ObjectInherit, InheritOnly\"**\n**-Control \"DaclAutoInherited\"**\n-= Parent SD =-\n<Owner> : BUILTIN\\Administrators\n<Group> : BUILTIN\\Administrators\n<DACL> (Auto Inherited)\nEveryone: (Allowed)(None)(Full Access)\nBUILTIN\\Users: (Allowed)(ObjectInherit, InheritOnly)(GenericAll)\n\n-= Creator SD =-\n<DACL>\nNT AUTHORITY\\NETWORK: (Allowed)(None)(Full Access)\nNT AUTHORITY\\INTERACTIVE: (Allowed)(Inherited)(Full Access)\n\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL> (Auto Inherited)\n❸ NT AUTHORITY\\NETWORK: (Allowed)(None)(Full Access)\n❹ BUILTIN\\Users: (Allowed)(Inherited)(Full Access) \n```", "```\n❶ PS> **$creator = New-CreatorSD -AceFlags \"Inherited\" -Control \"DaclProtected\"**\n❷ PS> **Test-NewSD -Creator $creator -AceFlags \"ObjectInherit, InheritOnly\"**\n**-Control \"DaclAutoInherited\"**\n-= Parent SD =-\n<Owner> : BUILTIN\\Administrators\n<Group> : BUILTIN\\Administrators\n<DACL> (Auto Inherited)\nEveryone: (Allowed)(None)(Full Access)\nBUILTIN\\Users: (Allowed)(ObjectInherit, InheritOnly)(GenericAll)\n\n-= Creator SD =-\n<DACL> (Protected)\nNT AUTHORITY\\NETWORK: (Allowed)(None)(Full Access)\nNT AUTHORITY\\INTERACTIVE: (Allowed)(Inherited)(Full Access)\n\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL> (Protected, Auto Inherited)\nNT AUTHORITY\\NETWORK: (Allowed)(None)(Full Access)\n❸ NT AUTHORITY\\INTERACTIVE: (Allowed)(None)(Full Access) \n```", "```\nPS> **$creator = New-CreatorSD -Control \"DaclDefaulted\"**\nPS> **Test-NewSD -Creator $creator -AceFlags \"ObjectInherit, InheritOnly\"**\n= Parent SD =-\n<Owner> : BUILTIN\\Administrators\n<Group> : BUILTIN\\Administrators\n<DACL>\nEveryone: (Allowed)(None)(Full Access)\nBUILTIN\\Users: (Allowed)(ObjectInherit, InheritOnly)(GenericAll)\n\n-= Creator SD =-\n<DACL> (Defaulted)\nNT AUTHORITY\\NETWORK: (Allowed)(None)(Full Access)\nNT AUTHORITY\\INTERACTIVE: (Allowed)(None)(Full Access)\n\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL>\nBUILTIN\\Users: (Allowed)(None)(Full Access)\n\nPS> **Test-NewSD -Creator $creator**\n-= Parent SD =-\n<Owner> : BUILTIN\\Administrators\n<Group> : BUILTIN\\Administrators\n<DACL>\nEveryone: (Allowed)(None)(Full Access)\nBUILTIN\\Users: (Allowed)(None)(Full Access)\n\n-= Creator SD =-\n<DACL> (Defaulted)\nNT AUTHORITY\\NETWORK: (Allowed)(None)(Full Access)\nNT AUTHORITY\\INTERACTIVE: (Allowed)(None)(Full Access)\n\n-= New SD =-\n<Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL>\nNT AUTHORITY\\NETWORK: (Allowed)(None)(Full Access)\nNT AUTHORITY\\INTERACTIVE: (Allowed)(None)(Full Access) \n```", "```\nPS> **$parent = New-NtSecurityDescriptor -Type Directory**\nPS> **Add-NtSecurityDescriptorAce $parent -KnownSid CreatorOwner**\n**-Flags ContainerInherit, InheritOnly -Access GenericWrite**\nPS> **Add-NtSecurityDescriptorAce $parent -KnownSid CreatorGroup**\n**-Flags ContainerInherit, InheritOnly -Access GenericRead**\nPS> **Format-NtSecurityDescriptor $parent -Summary -SecurityInformation Dacl**\n<DACL>\n❶ CREATOR OWNER: (Allowed)(ContainerInherit, InheritOnly)(GenericWrite)\nCREATOR GROUP: (Allowed)(ContainerInherit, InheritOnly)(GenericRead)\n\nPS> **$token = Get-NtToken -Effective -Pseudo**\n❷ PS> **$sd = New-NtSecurityDescriptor -Token $token -Parent $parent**\n**-Type Directory** **-Container**\nPS> **Format-NtSecurityDescriptor $sd -Summary -SecurityInformation Dacl**\n<DACL>\n❸ GRAPHITE\\user: (Allowed)(None)(CreateObject|CreateSubDirectory|ReadControl)\nCREATOR OWNER: (Allowed)(ContainerInherit, InheritOnly)(GenericWrite)\n❹ GRAPHITE\\None: (Allowed)(None)(Query|Traverse|ReadControl)\nCREATOR GROUP: (Allowed)(ContainerInherit, InheritOnly)(GenericRead) \n```", "```\nPS> **$token = Get-NtToken -Duplicate -IntegrityLevel Low**\nPS> **$sd = New-NtSecurityDescriptor -Token $token -Type Mutant**\nPS> **Format-NtSecurityDescriptor $sd -SecurityInformation Label -Summary**\n<Mandatory Label>\nMandatory Label\\Low Mandatory Level: (MandatoryLabel)(None)(NoWriteUp)\nPS> **$token.Close()** \n```", "```\nPS> **$creator = New-NtSecurityDescriptor -Type Mutant**\nPS> **Set-NtSecurityDescriptorIntegrityLevel $creator System**\nPS> **$token = Get-NtToken -Duplicate -IntegrityLevel Medium**\nPS> **New-NtSecurityDescriptor -Token $token -Creator $creator -Type Mutant**\n❶ New-NtSecurityDescriptor : (0xC0000061) - A required privilege is not held\nby the client.\n\n❷ PS> **$sd = New-NtSecurityDescriptor -Token $token -Creator $creator** \n**-Type Mutant -AutoInherit AvoidPrivilegeCheck**\nPS> **Format-NtSecurityDescriptor $sd -SecurityInformation Label -Summary**\n<Mandatory Label>\n❸ Mandatory Label\\System Mandatory Level: (MandatoryLabel)(None)(NoWriteUp)\n\nPS> **$token.Close()** \n```", "```\nPS> **$parent = New-NtSecurityDescriptor -Type Mutant**\n❶ PS> **Set-NtSecurityDescriptorIntegrityLevel $parent Low -Flags ObjectInherit**\nPS> **$token = Get-NtToken -Effective -Pseudo**\nPS> **$sd = New-NtSecurityDescriptor -Token $token -Parent $parent -Type Mutant**\nPS> **Format-NtSecurityDescriptor $sd -SecurityInformation Label -Summary**\n<Mandatory Label>\n❷ Mandatory Label\\Low Mandatory Level: (MandatoryLabel)(Inherited)(NoWriteUp) \n```", "```\nPS> **$token = Get-NtToken -Effective -Pseudo**\nPS> **$sd = New-NtSecurityDescriptor -Token $token -Type Mutant**\n**-AutoInherit MaclNoReadUp, MaclNoWriteUp**\nPS> **Format-NtSecurityDescriptor $sd -SecurityInformation Label -Summary**\n<Mandatory Label>\nMandatory Label\\Medium Mandatory Level: (MandatoryLabel)(None)(NoWriteUp|\nNoReadUp) \n```", "```\nPS> **$owner = Get-NtSid -KnownSid BuiltinAdministrators**\nPS> **$parent = New-NtSecurityDescriptor -Type Directory -Owner $owner -Group $owner**\n❶ PS> **$type_1 = New-Guid**\nPS> **$type_2 = New-Guid**\n❷ PS> **Add-NtSecurityDescriptorAce $parent -Name \"SYSTEM\" -Access GenericAll**\n**-Flags ObjectInherit -Type AllowedObject -ObjectType $type_1**\n❸ PS> **Add-NtSecurityDescriptorAce $parent -Name \"Everyone\" -Access GenericAll**\n**-Flags ObjectInherit -Type AllowedObject -InheritedObjectType $type_1**\n❹ PS> **Add-NtSecurityDescriptorAce $parent -Name \"Users\" -Access GenericAll**\n**-Flags ObjectInherit -InheritedObjectType $type_2 -Type AllowedObject**\nPS> **Format-NtSecurityDescriptor $parent -Summary -SecurityInformation Dacl**\n<DACL>\nNT AUTHORITY\\SYSTEM: (AllowedObject)(ObjectInherit)(GenericAll) (OBJ:f5ee1953...)\nEveryone: (AllowedObject)(ObjectInherit)(GenericAll)(IOBJ:f5ee1953...)\nBUILTIN\\Users: (AllowedObject)(ObjectInherit)(GenericAll)(IOBJ:0b9ed996...)\n\nPS> **$token = Get-NtToken -Effective -Pseudo**\n❺ PS> **$sd = New-NtSecurityDescriptor -Token $token -Parent $parent**\n**-Type Directory -ObjectType $type_2**\nPS> **Format-NtSecurityDescriptor $sd -Summary -SecurityInformation Dacl**\n<DACL>\n❻ NT AUTHORITY\\SYSTEM: (AllowedObject)(None)(Full Access)(OBJ:f5ee1953...)\n❼ BUILTIN\\Users: (Allowed)(None)(Full Access) \n```", "```\nPS> **Get-NtAccessMask -SecurityInformation AllBasic -ToGenericAccess**\nReadControl\n\nPS> **Get-NtAccessMask -SecurityInformation AllBasic -ToGenericAccess**\n**-SetSecurity**\nWriteDac, WriteOwner \n```", "```\nPS> **$owner = Get-NtSid -KnownSid BuiltinAdministrators**\nPS> **$obj_sd = New-NtSecurityDescriptor -Type Mutant -Owner $owner**\n**-Group $owner**\nPS> **Add-NtSecurityDescriptorAce $obj_sd -KnownSid World -Access GenericAll**\nPS> **Format-NtSecurityDescriptor $obj_sd -Summary -SecurityInformation Dacl**\n<DACL>\nEveryone: (Allowed)(None)(Full Access)\n\nPS> **Edit-NtSecurityDescriptor $obj_sd -MapGeneric**\nPS> **$mod_sd = New-NtSecurityDescriptor -Type Mutant**\nPS> **Add-NtSecurityDescriptorAce $mod_sd -KnownSid Anonymous**\n**-Access GenericRead**\nPS> **Set-NtSecurityDescriptorControl $mod_sd DaclAutoInherited,**\n**DaclAutoInheritReq**\nPS> **Edit-NtSecurityDescriptor $obj_sd $mod_sd -SecurityInformation Dacl**\nPS> **Format-NtSecurityDescriptor $obj_sd -Summary -SecurityInformation Dacl**\n<DACL> (Auto Inherited)\nNT AUTHORITY\\ANONYMOUS LOGON: (Allowed)(None)(ModifyState|ReadControl) \n```", "```\nPS> **$new_sd = New-NtSecurityDescriptor -Sddl \"D:(A;;GA;;;WD)\"**\nPS> **Set-NtSecurityDescriptor -Path \"\\BaseNamedObjects\\ABC\"**\n**-SecurityDescriptor $new_sd -SecurityInformation Dacl** \n```", "```\nPS> **Get-Win32SecurityDescriptor \"$env:WinDir\"**\nOwner                       DACL ACE Count SACL ACE Count Integrity Level\n-----                       -------------- -------------- ---------------\nNT SERVICE\\TrustedInstaller 13             NONE           NONE\n\nPS> **Format-Win32SecurityDescriptor \"MACHINE\\SOFTWARE\" -Type RegistryKey**\n**-Summary**\n<Owner> : NT AUTHORITY\\SYSTEM\n<Group> : NT AUTHORITY\\SYSTEM\n<DACL> (Protected, Auto Inherited)\nBUILTIN\\Users: (Allowed)(ContainerInherit)(QueryValue|...)\n`--snip--` \n```", "```\nPS> **$path = Join-Path \"$env:TEMP\" \"TestFolder\"**\n❶ PS> **Use-NtObject($f = New-NtFile $path -Win32Path -Options DirectoryFile**\n**-Disposition OpenIf) {**\n    **Set-NtSecurityDescriptor $f \"D:AIARP(A;OICI;GA;;;WD)\" Dacl**\n**}**\n\nPS> **$item = Join-Path $path test.txt**\nPS> **\"Hello World!\" | Set-Content -Path $item**\nPS> **Format-Win32SecurityDescriptor $item -Summary -SecurityInformation Dacl**\n<DACL> (Auto Inherited)\n❷ Everyone: (Allowed)(Inherited)(Full Access)\n\nPS> **$sd = Get-Win32SecurityDescriptor $path**\nPS> **Add-NtSecurityDescriptorAce $sd -KnownSid Anonymous -Access GenericAll**\n**-Flags ObjectInherit,ContainerInherit,InheritOnly**\n❸ PS> **Set-Win32SecurityDescriptor $path $sd Dacl**\nPS> **Format-Win32SecurityDescriptor $item -Summary -SecurityInformation Dacl**\n<DACL> (Auto Inherited)\nEveryone: (Allowed)(Inherited)(Full Access)\n❹ NT AUTHORITY\\ANONYMOUS LOGON: (Allowed)(Inherited)(Full Access) \n```", "```\nPS> **$path = Join-Path \"$env:TEMP\\TestFolder\" \"test.txt\"**\n❶ PS> **$sd = New-NtSecurityDescriptor \"D:(A;;GA;;;AU)\"**\nPS> **Set-Win32SecurityDescriptor $path $sd Dacl,ProtectedDacl**\nPS> **Format-Win32SecurityDescriptor $path -Summary -SecurityInformation Dacl**\n❷ <DACL> (Protected, Auto Inherited)\nNT AUTHORITY\\Authenticated Users: (Allowed)(None)(Full Access)\n\n❸ PS> **Set-Win32SecurityDescriptor $path $sd Dacl,UnprotectedDacl**\nPS> **Format-Win32SecurityDescriptor $path -Summary -SecurityInformation Dacl**\n❹ <DACL> (Auto Inherited)\nNT AUTHORITY\\Authenticated Users: (Allowed)(None)(Full Access)\nEveryone: (Allowed)(Inherited)(Full Access)\nNT AUTHORITY\\ANONYMOUS LOGON: (Allowed)(Inherited)(Full Access) \n```", "```\nPS> **$path = Join-Path \"$env:TEMP\\TestFolder\" \"test.txt\"**\nPS> **Reset-Win32SecurityDescriptor $path Dacl**\nPS> **Format-Win32SecurityDescriptor $path -Summary -SecurityInformation Dacl**\n<DACL> (Auto Inherited)\nEveryone: (Allowed)(Inherited)(Full Access)\nNT AUTHORITY\\ANONYMOUS LOGON: (Allowed)(Inherited)(Full Access) \n```", "```\nPS> **$path = Join-Path \"$env:TEMP\" \"TestFolder\"**\nPS> **Search-Win32SecurityDescriptor $path | Format-Table**\nName                Depth User                         Access\n----                ----- ----                         ------\n                    0    Everyone                     GenericAll\n                    0    NT AUTHORITY\\ANONYMOUS LOGON GenericAll\n\nPS> **$path = Join-Path $path \"new.txt\"**\nPS> **\"Hello\" | Set-Content $path**\nPS> **Search-Win32SecurityDescriptor $path | Format-Table**\nName                Depth User                         Access\n----                ----- ----                         ------\nC:\\Temp\\TestFolder\\ 1     Everyone                     GenericAll\nC:\\Temp\\TestFolder\\ 1     NT AUTHORITY\\ANONYMOUS LOGON GenericAll \n```", "```\n❶ PS> **$token = Get-NtToken -Anonymous**\nPS> **$creator = New-NtSecurityDescriptor -Type Mutant**\nPS> **Add-NtSecurityDescriptorAce $creator -KnownSid World -Access GenericAll**\nPS> **$sd = New-NtSecurityDescriptor -Token $token -Creator $creator**\nPS> **Format-NtSecurityDescriptor $sd -Summary -SecurityInformation Owner,Group,Dacl**\n❷ <Owner> : NT AUTHORITY\\ANONYMOUS LOGON\n<Group> : NT AUTHORITY\\ANONYMOUS LOGON\n<DACL>\nEveryone: (Allowed)(None)(Full Access)\n\n❸ PS> **Set-NtSecurityDescriptorControl $creator ServerSecurity**\nPS> **$sd = New-NtSecurityDescriptor -Token $token -Creator $creator**\nPS> **Format-NtSecurityDescriptor $sd -Summary -SecurityInformation Owner,Group,Dacl**\n❹ <Owner> : GRAPHITE\\user\n<Group> : GRAPHITE\\None\n<DACL>\n❺ Everyone: (AllowedCompound)(None)(Full Access)(Server:GRAPHITE\\user) \n```", "```\nPS> **function Get-NameAndOwner {**❶\n **[CmdletBinding()]**\n **param(**\n **[parameter(Mandatory, ValueFromPipeline)]**\n **$Entry,**\n **[parameter(Mandatory)]**\n **$Root**\n**)**\n\n **begin {**\n **$curr_owner = Get-NtSid -Owner** ❷\n **}**\n\n **process {**\n **$sd = Get-NtSecurityDescriptor -Path $Entry.Name -Root $Root** ❸\n**-TypeName $Entry.NtTypeName -ErrorAction SilentlyContinue**\n **if ($null -ne $sd -and $sd.Owner.Sid -ne $curr_owner) {**\n **[PSCustomObject] @{**\n **Name = $Entry.Name**\n**              NtTypeName = $Entry.NtTypeName**\n **Owner = $sd.Owner.Sid.Name**\n**              SecurityDescriptor = $sd**\n **}**\n **}**\n **}**\n**}**\n\nPS> **Use-NtObject($dir = Get-NtDirectory \\BaseNamedObjects) {**❹\n **Get-NtDirectoryEntry $dir | Get-NameAndOwner -Root $dir**\n**}**\nNameNtTypeName  Owner                   SecurityDescriptor\n--------------  -----                   ------------------\nCLR_PerfMon_DoneEnumEvent  Event       NT AUTHORITY\\SYSTEM     O:SYG:SYD:(A;;...\nWAMACAPO;3_Read            Event       BUILTIN\\Administrators  O:SYG:SYD:(A;;...\nWAMACAPO;8_Mem             Section     BUILTIN\\Administrators  O:SYG:SYD:(A;;...\n`--snip--` \n```", "```\nPS> **$entry**\nName            NtTypeName  Owner                   SecurityDescriptor\n----            ----------  -----                   ------------------\nWAMACAPO;8_Mem  Section     BUILTIN\\Administrators  O:SYG:SYD:(A;;...\n\nPS> **Get-NtGrantedAccess -SecurityDescriptor $entry.SecurityDescriptor**\nQuery, MapWrite, MapRead, ReadControl \n```", "```\nPS> **ls NtKey:\\ | Select Name, {$_.SecurityDescriptor.Owner.Sid}** \n```", "```\nPS> **ls C:\\ | Get-Acl | Select Path, Owner** \n```", "```\nPS> **(Get-Acl C:\\ | ConvertTo-NtSecurityDescriptor).Owner.Sid**\nName                        Sid\n----                        ---\nNT SERVICE\\TrustedInstaller S-1-5-80-956008885-3418522649-1831038044-... \n```", "```\nPS> **$new_dir = New-NtDirectory \"ABC\" -Win32Path**\nPS> **Get-NtSecurityDescriptor $new_dir | Select {$_.Owner.Sid.Name}**\n$_.Owner.Sid.Name\n-----------------\nBUILTIN\\Administrators\n\nPS> **Enable-NtTokenPrivilege SeRestorePrivilege**\nPS> **Use-NtObject($dir = Get-NtDirectory \"ABC\" -Win32Path -Access WriteOwner) {**\n **$sid = Get-NtSid -KnownSid World**\n **$sd = New-NtSecurityDescriptor -Owner $sid**\n **Set-NtSecurityDescriptor $dir $sd -SecurityInformation Owner**\n**}**\n\nPS> **Get-NtSecurityDescriptor $new_dir | Select {$_.Owner.Sid.Name}**\n$_.Owner.Sid.Name\n-----------------\nEveryone\n\nPS> **$new_dir.Close()** \n```"]