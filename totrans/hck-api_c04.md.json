["```\n$ **sudo apt update**\n$ **sudo apt full-upgrade -y**\n```", "```\n$ **sudo apt-get install git python3 golang**\n```", "```\n$ **sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb**\n$ **sudo apt install ./google-chrome-stable_current_amd64.deb**\n```", "```\n$ **sudo apt-get install burpsuite**\n```", "```\n§`Variable1`§*,* §`variable2`§*,* §`variable3`§\nRequest 1:    **Payload1**, variable2, variable3\nRequest 2:    Variable1, **payload1**, variable3\nRequest 3:    Variable1, variable2, **payload1**\n```", "```\n$ **sudo wget https://dl.pstmn.io/download/latest/linux64 -O postman-linux-x64.tar.gz**\n$ **sudo tar -xvzf postman-linux-x64.tar.gz -C /opt**\n$ **sudo ln -s /opt/Postman/Postman /usr/bin/postman**\n```", "```\npm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n```", "```\npm.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});\n```", "```\n$ **sudo** **apt-get install amass**\n```", "```\n$ **HOME/.config/amass/config.ini**\n```", "```\n$ **mkdir $HOME/.config/amass**\n$ **curl https://raw.githubusercontent.com/OWASP/Amass/master/examples/config.ini >$HOME/.config/amass/config.ini**\n```", "```\n# https://umbrella.cisco.com (Paid-Enterprise)\n# The apikey must be an API access token created through the Investigate management UI\n#[data_sources.Umbrella]\n#apikey =\n\n#https://urlscan.io (Free)\n#URLScan can be used without an API key\n#apikey =\n\n# https://virustotal.com (Free)\n#[data_sources.URLScan]\n#apikey =\n```", "```\n$ **git clone https://github.com/assetnote/kiterunner.git**\n$ **cd kiterunner**\n$ **make build**\n$ **sudo ln -s $(pwd)/dist/kr /usr/local/bin/kr**\n```", "```\n$ **kr**\nkite is a context based webscanner that uses common api paths for content discovery of an applications api paths.\n\nUsage:\n  kite [command]\n\nAvailable Commands:\n  brute       brute one or multiple hosts with a provided wordlist\n  help        help about any command\n  kb          manipulate the kitebuilder schema\n  scan        scan one or multiple hosts with a provided wordlist\n  version     version of the binary you're running\n  wordlist    look at your cached wordlists and remote wordlists\n\nFlags:\n      --config string    config file (default is $HOME/.kiterunner.yaml)\n  -h, --help             help for kite\n  -o, --output string    output format. can be json,text,pretty (default \"pretty\")\n  -q, --quiet            quiet mode. will mute unnecessary pretty text\n  -v, --verbose string   level of logging verbosity. can be error,info,debug,trace (default \"info\")\n\nUse \"kite [command] --help\" for more information about a command.\n```", "```\n$ **mkdir -p ~/api/wordlists**\n```", "```\n$ **curl https://wordlists-cdn.assetnote.io/data/automated/httparchive_apiroutes_2021_06_28.txt > latest_api_wordlist.txt**\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 6651k  100 6651k    0     0  16.1M      0 --:--:-- --:--:-- --:--:-- 16.1M\n```", "```\n$ **wget -r --no-parent -R \"index.html*\" https://wordlists-cdn.assetnote.io/data/ -nH**\n```", "```\n$ **nikto -h https://example.com**\n```", "```\n`$` **wfuzz** `options` **-z** `payload,params url`\n```", "```\n$ **wfuzz -z file,/usr/share/wordlists/list.txt http://targetname.com/FUZZ**\n```", "```\n$ **wfuzz -X POST -z list,admin-dashboard-docs-api-test http://targetname.com/FUZZ**\n```", "```\n$ **wfuzz -z range,500-1000 http://targetname.com/account?user_id=FUZZ**\n```", "```\n$ wfuzz -z list,A-B-C -z range,1-3 http://targetname.com/**FUZZ**/user_id=**FUZZ2**\n```", "```\n$ **wfuzz -z file,/usr/share/wordlists/list.txt –sc 200 http://targetname.com/FUZZ**\n```", "```\n$ **wfuzz -z file,/usr/share/wordlists/list.txt –sc 404 –sh 950 http://targetname.com/FUZZ**\n```", "```\n$ **cd /opt/**\n$ **sudo git clone https://github.com/s0md3v/Arjun.git**\n```", "```\n$ **python3 /opt/Arjun/arjun.py -u http://target_address.com**\n```", "```\n$ **python3 /opt/Arjun/arjun.py -u http://target_address.com -o arjun_results.json**\n```", "```\n$ **python3 /opt/Arjun/arjun.py -u http://target_address.com -o arjun_results.json --stable**\n```", "```\n$ **python3 /opt/Arjun/arjun.py -i burp_targets.txt**\n```"]