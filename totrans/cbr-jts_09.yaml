- en: '9'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sensors
  prefs: []
  type: TYPE_NORMAL
- en: Whether day or night, scouts for a far-distance observation should be sent out.
  prefs: []
  type: TYPE_NORMAL
- en: Even if a shinobi does not have impressive physical abilities, remember that
    the most vital thing is to have acute observation*.*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '—Yoshimori Hyakushu #11'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In addition to stationing guards at gates and soldiers at watch posts, *Bansenshūkai*
    recommends defending a castle by placing scouts surreptitiously along roads, paths,
    and other approaches. The defending commander should place scouts at staggered
    intervals around the castle’s perimeter.^([1](b01.xhtml#endnote-64)) These scouts
    fulfilled one of three roles:'
  prefs: []
  type: TYPE_NORMAL
- en: Smelling scouts (*kagi*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Listening scouts (*monogiki*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Outside foot scouts (*togiki*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Smelling and listening scouts, who used trained dogs and dog handlers, placed
    themselves in shrouded observation posts—they couldn’t see out, but neither could
    the enemy see in. The scout focused intently on smelling or listening for signs
    of infiltration. These techniques worked especially well at night, as smelling
    and listening scouts did not need light to operate.^([2](b01.xhtml#endnote-65))
  prefs: []
  type: TYPE_NORMAL
- en: Outside foot scouts tried to catch infiltrators by conducting sweeps at the
    edge of enemy territory; hiding on enemy ground and monitoring movement toward
    their own camp; or using tripwires, noise, or even physical contact to detect
    intruders. *Bansenshūkai* says that *togiki* scouts should be shinobi themselves,
    as they must be skilled in stealth and observation, have a preternatural understanding
    of which direction the enemy will attack from, and be able to successfully detect
    and engage an enemy ninja.^([3](b01.xhtml#endnote-66))
  prefs: []
  type: TYPE_NORMAL
- en: In addition to human (and animal) scouts, *Bansenshūkai* recommends using active
    and passive detection techniques to identify enemy infiltrators. Actively, shinobi
    might lower or swing a *sarubi* (monkey-fire, or “fire on a rope”^([4](b01.xhtml#endnote-67)))
    into or across a dark area such as a moat, trench, or the bottom of a castle wall
    to quickly and dynamically illuminate it, from a distance, in a way that fixed
    lanterns couldn’t. Passively, shinobi would build detection systems, for instance,
    by filling a wide but shallow trench with fine sand, then raking the sand into
    a complex pattern. Should an enemy bypass exterior defenses, they would leave
    footprints, alerting guards that the castle had been breached. Footprints in the
    sand might also tell an observant shinobi which direction the enemy came from
    and whether they had left the same way—valuable intelligence that could help neutralize
    an immediate threat and shore up future defenses.^([5](b01.xhtml#endnote-68))
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will look at the different types of security sensors commonly
    used in networks, comparing and contrasting modern deployment with the ways shinobi
    historically used sensors. We will highlight sensor placement, as well as sensor
    countermeasure techniques, learning from the shinobi to enhance our own cybersecurity
    defenses. We will also propose sensors based on the sensory scouts of ancient
    times.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying and Detecting Threats with Sensors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In cyber parlance, the term *sensor* encompasses a variety of detection systems
    and instruments. Most commonly, a sensor is a monitoring device on a tap, T-split,
    span, or mirror port that copies activity for observation, recording, and analysis.
    In one such configuration, sensors sniff and capture raw packets (PCAPs) as they
    cross the wire, then process and analyze them to alert security to suspicious
    events. Sensors can also be placed “in line,” meaning a packet travels through
    a device that can delay, block, or alter the packet’s information, effectively
    thwarting attacks rather than simply raising a red flag. Secondary sensors, such
    as Wi-Fi sensors, detect external or other unauthorized signals and connections,
    while physical security sensors, such as cameras, monitor access to sensitive
    data centers, server racks, and switch closets. In broader terms, certain software
    endpoint agents also act as sensors, as they collect events, actions, and activity
    on a host system and report back to a command and control (C2) system to analyze
    and raise alerts if necessary.
  prefs: []
  type: TYPE_NORMAL
- en: Organizations often dedicate sensors to certain types of traffic—for example,
    by configuring email gateway security devices for phishing attempts or spam, intrusion
    prevention/detection systems for network attacks, firewalls for unauthorized IPs
    and ports, proxies for suspicious websites, and data loss prevention systems.
    Sensor-based cybersecurity devices are typically installed at the main egress
    point of a network, typically at the demilitarized zone (DMZ). Because it is standard
    to place sensors as far up the network as possible to maximize the amount of traffic
    they see, if adversaries hide from sensors at the gateway or bypass the main egress
    to bridge into a network, it’s possible for them to operate within the network
    free from security sensor inspection.
  prefs: []
  type: TYPE_NORMAL
- en: Despite this security liability, most organizations are unlikely to drastically
    increase the number of sensors in their systems, as purchasing many additional
    sensors—along with the extra work to license, install, update, maintain, and monitor
    them all—is financially impractical. Unfortunately, many organizations simply
    assume that if the main egress sensor does not catch a threat, then more of the
    same sensor would not be more effective. This is an error in judgment that puts
    their systems at risk.
  prefs: []
  type: TYPE_NORMAL
- en: Better Sensors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A major problem with sensors is that they almost always require a person to
    monitor them and act on the information they convey. This problem is compounded
    by the limitations of security sensors and available analysis platforms. Think
    of modern security sensors this way: a building has a number of tiny microphones
    and cameras scattered throughout, but these cameras and microphones are trapped
    inside little straws—straws that give them narrow fields of capture. Now imagine
    trying to piece together an active breach while only able to peer through a single
    straw at a time. Not only that, but each straw is building up thousands of hours
    of data to store, process, and analyze. This frustrating situation is often alleviated
    with signatures, algorithms, or machine learning—tools that can help to identify
    anomalies and malicious activity. However, these automated systems aren’t perfect.
    Often, they create false positives or create such a large flood of legitimate
    alerts that it can feel the same as not having sensors at all. To remedy these
    problems, we can take a page from the shinobi: we can identify the paths an enemy
    is likely to take, and we can hide many types of sensors along those paths to
    give early warning of attacks. Consider the following guidance as you consider
    improving the sensors in your organization:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Model your network and identify your weaknesses.* Create a network map and
    information flow model of your environment—one that describes every system and
    its purpose, how systems are connected, where information enters and leaves your
    network, the type of information received, what sensors (if any) inspect information,
    and the egress points. Identify areas that lack sensors and places you believe
    are properly monitored. Predict where threat actors will attempt to infiltrate
    your network. Keep in mind that creating a comprehensive map can take months and
    requires help across the entire enterprise. Your resulting map might not be perfect,
    but even a flawed map is better than no map at all.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Conduct red team and pen testing.* Contract a red team to attempt infiltration
    of your network. Consider a “purple team” approach to the exercise, in which your
    network defenders (the blue team) observe the red team in real time in the same
    room and can pause the exercise to ask questions. Query the security sensors before,
    during, and after the attack to see what they detected or reported, if anything.
    This information should be highly enlightening. Allow your blue team to consider
    how different sensor placement could have detected the red team faster and more
    accurately. Discuss architectural defense changes, sensor tuning, and other solutions
    that are suggested by the testing.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Detect and block encrypted traffic.* Block all encrypted traffic that cannot
    be intercepted and inspected by your sensors. Also, take appropriate steps to
    strip your machines’ ability to use unauthorized encryption. Have the red team
    test your ability to detect encrypted traffic attacks. Most sensors cannot inspect
    encrypted traffic; therefore, many organizations allow asymmetric encryption,
    such as elliptic-curve Diffie-Hellman (ECDH), which cannot be broken by root certificates.
    Allowing unbroken encrypted traffic to leave your organization without going through
    DLP creates a security gap analogous to when castle guards scrutinize every bare-faced
    person who enters or leaves through the gate but permit anyone wearing a mask
    to walk through unchallenged.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Develop “smelling” and “listening” sensors.* Explore opportunities to create
    sensors that can secretly detect certain types of threat activity. For example,
    configure an external physical sensor that monitors a system’s CPU activity or
    power consumption and can detect unauthorized access or use—such as by a cryptocurrency
    miner—based on whether performance correlates with known commands or logged-in
    user activity.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Implement passive sensors.* Establish passive interfaces on switches and servers
    that should never be used. Also, configure sensors to detect and alert locally
    if an interface is activated, indicating the likely presence of an adversary on
    your network. Much like a shallow trench filled with sand, such systems can be
    built to detect lateral movement between network devices where it should not happen.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Install* togiki *sensors.* Place inward-facing sensors outside your network
    to detect infiltration. For example, with the cooperation of your ISP, configure
    sensors outside your network boundary to monitor inbound and outbound traffic
    that your other sensors might not detect. Place sensors in a T-split directly
    off a device working in conjunction with a host-based sensor, and then diff the
    devices against each other to determine whether both sensors are reporting the
    same activity. This approach helps identify compromised endpoint sensors and network
    interface drivers.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Recommended Security Controls and Mitigations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Where relevant, recommendations are presented with applicable security controls
    from the NIST 800-53 standard. Each should be evaluated with the concept of sensors
    in mind.
  prefs: []
  type: TYPE_NORMAL
- en: 'Implement packet sniffers, full network PCAPs, and other automated sensors
    to support incident handling, maintenance, and information flow enforcement. [AC-4:
    Information Flow Enforcement | (14) Security Policy Filter Constraints; IR-4:
    Incident Handling; MA-3: Maintenance Tools]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To safeguard physical access and detect tampering, install sensors on wiring
    closet locks, cameras to monitor data center and server access, water sensors
    to detect leaks that can threaten electrical devices, and wiretapping sensors
    on communication lines. [PE-4: Access Control for Transmission; PE-6: Monitoring
    Physical Access; PE-15: Water Damage Protection]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run awareness training programs for staff—including non-IT staff—so they can
    act as human sensors to detect threat activity. Provide a clear, easy, and accessible
    method for employees to report suspicious activity. [PM-16: Threat Awareness Program]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Intercept encrypted communications and allow your sensors to perform deep inspections
    of unencrypted packets. [AC-4: Information Flow Enforcement: | (4) Content Check
    Encrypted Information; SC-8: Transmission Confidentiality and Integrity]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Implement sensors that can analyze packets and take preventive measures such
    as blocking or filtering. [SC-5: Denial of Service Protection; SC-7: Boundary
    Protection | (10) Prevent Exfiltration | (17) Automated Enforcement of Protocol
    Formats]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Prohibit promiscuous sensor activation on non-sensing systems to prevent the
    release of sensitive information to adversaries who gain unauthorized access.
    [SC-42: Sensor Capability and Data]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Work with your ISP to place Trusted Internet Connection (TIC) sensors outside
    your network boundary. [AC-17: Remote Access | (3) Managed Access Control Points]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Document all internal system connections; their interfaces; the information
    they process, store, and communicate; and sensor placement between systems. [CA-9:
    Internal System Connections]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Conduct penetration testing and red team exercises to test and validate your
    sensor placement and capability. [CA-8: Penetration Testing; RA-6: Technical Surveillance
    Countermeasures Survey]'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Debrief
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we talked about smelling, hearing, and outside sensory scouts
    used to detect enemy shinobi in ancient Japan. We also looked at active and passive
    sensors that castle guards deployed to catch intruders. We then discussed various
    types of security sensors used today—sensors that help defenders see what’s happening
    on the wires around them. We covered several logistical problems around sensors
    such as sensor placement, false positives, and sensor management. Lastly, we talked
    about how to apply ancient shinobi techniques to identify intruders in networked
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will discuss the different types of bridges and ladders shinobi used
    to bypass castle defenses—a concept that has some importance in regard to sensors.
    For instance, imagine your castle is protected by a moat and you have placed all
    of your sensors at the drawbridge. An enemy shinobi who is able to covertly place
    a bridge of their own without using the drawbridge also effectively bypasses your
    sensors—making them useless. We’ll explore how this bridging concept is almost
    exactly the same in cybersecurity and how difficult it can be to address.
  prefs: []
  type: TYPE_NORMAL
