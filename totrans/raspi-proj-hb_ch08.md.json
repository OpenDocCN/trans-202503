["```\n➊ from sense_hat import SenseHat\n  #uncomment the following line if you are using the emulator\n➋ #from sense_emu import SenseHat\n  sense = SenseHat()\n➌ sense.show_message('Hello World!', text_colour = [0, 0, 255])\n```", "```\nfrom sense_hat import SenseHat\n#uncomment the following line if you are using the emulator\n#from sense_emu import SenseHat\nsense = SenseHat()\n#set blue pixel\nsense.set_pixel(0, 1, 0, 0, 255)\n#set green pixel\nsense.set_pixel(7, 6, 0, 255, 0)\n#set pink pixel\nsense.set_pixel(2, 5, 255, 51, 153)\n```", "```\nfrom sense_hat import SenseHat\n#uncomment the following line if you are using the emulator\n#from sense_emu import SenseHat\nsense = SenseHat()\n\n#red color\nX = [255, 0, 0]\n\n#no color\nN = [0, 0, 0]\n\n#sad face array\nsad_face = [\nN, N, X, X, X, X, N, N,\nN, X, N, N, N, N, X, N,\nX, N, X, N, N, X, N, X,\nX, N, N, N, N, N, N, X,\nX, N, N, X, X, N, N, X,\nX, N, X, N, N, X, N, X,\nN, X, N, N, N, N, X, N,\nN, N, X, X, X, X, N, N\n]\n\nsense.set_pixels(sad_face)\n```", "```\n  from signal import pause\n\n  from sense_hat import SenseHatm\n  #uncomment the following line if you are using the emulator\n  #from sense_emu import SenseHat\n  sense = SenseHat()\n\n➊ def move_up(event):\n      print('joystick was moved up')\n\n  def move_down(event):\n      print('joystick was moved down')\n\n  def move_right(event):\n      print('joystick was moved right')\n\n  def move_left(event):\n      print('joystick was moved left')\n\n  def move_middle(event):\n      print('joystick was pressed')\n\n➋ sense.stick.direction_up = move_up\n  sense.stick.direction_down = move_down\n  sense.stick.direction_right = move_right\n  sense.stick.direction_left = move_left\n  sense.stick.direction_middle = move_middle\n\n  pause()\n```", "```\n  #based on raspberrypi.org Sense HAT Pong example\n\n  #import necessary libraries\n➊ from random import randint\n  from time import sleep\n\n  #use this line if you are using the Sense HAT board\n  from sense_hat import SenseHat\n  #uncomment the following line if you are using the emulator\n  #from sense_emu import SenseHat\n\n  #create an object called sense\n➋ sense = SenseHat()\n\n  #set bat position, random ball position, and velocity\n➌ y = 4\n➍ ball_position = [int(randint(2,6)), int(randint(1,6))]\n➎ ball_velocity = [1, 1]\n\n  #red color\n  X = [255, 0, 0]\n  #no color\n  N = [0, 0, 0]\n\n  #sad face array\n  sad_face = [\n  N, N, X, X, X, X, N, N,\n  N, X, N, N, N, N, X, N,\n  X, N, X, N, N, X, N, X,\n  X, N, N, X, N, N, N, X,\n  X, N, N, X, N, N, N, X,\n  X, N, X, N, N, X, N, X,\n  N, X, N, N, N, N, X, N,\n  N, N, X, X, X, X, N, N\n  ]\n\n  #draw bat at y position\n➏ def draw_bat():\n      sense.set_pixel(0, y, 0, 255, 0)\n      sense.set_pixel(0, y+1, 0, 255, 0)\n      sense.set_pixel(0, y-1, 0, 255, 0)\n\n  #move bat up\n➐ def move_up(event):\n      global y\n      if y > 1 and event.action=='pressed':\n          y -= 1\n\n  #move bat down\n  def move_down(event):\n      global y\n      if y < 6 and event.action=='pressed':\n          y += 1\n\n  #move ball to the next position\n➑ def draw_ball():\n      #ball displayed on current position\n      sense.set_pixel(ball_position[0], ball_position[1], 75, 0, 255)\n      #next ball position\n      ball_position[0] += ball_velocity[0]\n      ball_position[1] += ball_velocity[1]\n      #if ball hits ceiling, calculate next position\n      if ball_position[0] == 7:\n          ball_velocity[0] = -ball_velocity[0]\n      #if ball hits wall, calculate next position\n      if ball_position[1] == 0 or ball_position[1] == 7:\n          ball_velocity[1] = -ball_velocity[1]\n      #if ball reaches 0 position, player loses and game quits\n      if ball_position[0] == 0:\n          sleep(0.25)\n          sense.set_pixels(sad_face)\n          quit()\n      #if ball hits bat, calculate next ball position\n      if ball_position[0] == 1 and y - 1 <= ball_position[1] <= y+1:\n          ball_velocity[0] = -ball_velocity[0]\n\n  #when joystick moves up or down, trigger corresponding function\n➒ sense.stick.direction_up = move_up\n  sense.stick.direction_down = move_down\n\n  #run the game\n➓ while True:\n      sense.clear()\n      draw_bat()\n      draw_ball()\n      sleep(0.25)\n```", "```\n#move bat up\ndef move_up(event):\n    global y\n    if y > 1 and event.action=='pressed':\n        y -= 1\n```"]