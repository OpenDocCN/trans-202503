- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: '![Image](../images/common.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common.jpg)'
- en: This book uses Scratch to invite exploration with math. It presents concepts
    such as number representations, divisibility, prime numbers, and cryptography
    that are useful and relevant in daily life and that are fun to code. It’s about
    how to ask interesting mathematical questions and how to program a computer to
    answer them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书通过Scratch引导你探索数学。它展示了如数字表示、可整除性、质数和密码学等概念，这些在日常生活中有用且相关，同时也是有趣的编程项目。它的重点是如何提出有趣的数学问题，以及如何编程让计算机回答这些问题。
- en: The book is also about finding the best way to solve a problem. You’ll see how
    a little bit of planning, combined with the right mathematical or coding tricks,
    can make complex calculations doable. These are the “hacks” in the book’s title;
    you’ll learn programming strategies for coaxing Scratch into giving you the answer
    you want and mathematical tricks that offer neat solutions to seemingly impossible
    problems.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书还讲述了如何找到解决问题的最佳方法。你将看到，一点点的规划，加上合适的数学或编程技巧，能够让复杂的计算变得可行。这些就是书名中的“黑客”技巧；你将学习如何通过编程策略引导Scratch给出你想要的答案，并掌握提供巧妙解决方案的数学技巧，帮助你解决看似不可能的问题。
- en: Why Scratch?
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么选择Scratch？
- en: Exploring a computer language involves seeing what it can do and figuring out
    how it can answer the questions you want to ask. Scratch is a language that encourages
    play. While it’s often used to create graphics, sound, and games, its spirit of
    play works for exploring math, too.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 探索计算机语言意味着了解它能做什么，并弄明白它如何回答你想提出的问题。Scratch是一种鼓励玩的语言。虽然它通常用于制作图形、声音和游戏，但它的玩乐精神同样适用于探索数学。
- en: 'Scratch is simple to use: it runs directly in a web browser through the Scratch
    website, *[https://scratch.mit.edu](https://scratch.mit.edu)*, with no installation
    required (although you can download the Scratch app from *[https://scratch.mit.edu/download](https://scratch.mit.edu/download)*
    if you’d prefer to work offline). You create programs by putting commands together
    like LEGO^® bricks, with all the options immediately available via drag-and-drop.
    The block-based interface lets you focus on combining loops, conditionals, and
    variables to build whatever you want, without getting bogged down in the syntax
    details of a text-based language. If you’ve used Scratch to make games or write
    stories, it’s easy to start using it to answer math-related questions.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch简单易用：它可以直接在网页浏览器中通过Scratch网站运行，* [https://scratch.mit.edu](https://scratch.mit.edu)
    *，无需安装（不过，如果你更喜欢离线工作，也可以从* [https://scratch.mit.edu/download](https://scratch.mit.edu/download)
    *下载Scratch应用程序）。你通过像拼接LEGO^®积木一样，将命令组合在一起，所有选项都可以通过拖放立即使用。基于块的界面让你能够专注于将循环、条件语句和变量组合起来，构建你想要的任何东西，而无需在文本编程语言的语法细节中陷入困扰。如果你曾使用Scratch制作游戏或编写故事，那么你会发现，使用它来解决与数学相关的问题也变得轻而易举。
- en: Who This Book Is For
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: 'This book is for you if:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你符合以下条件，这本书适合你：
- en: '![Image](../images/common-1.jpg) You like Scratch programming and want to learn
    more about it'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![Image](../images/common-1.jpg) 你喜欢Scratch编程，并希望深入了解它'
- en: '![Image](../images/common-1.jpg) You like math and are ready to see some new
    ideas'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![Image](../images/common-1.jpg) 你喜欢数学，准备好迎接一些新想法'
- en: '![Image](../images/common-1.jpg) You like puzzles and patterns'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![Image](../images/common-1.jpg) 你喜欢谜题和模式'
- en: '![Image](../images/common-1.jpg) You know how good it feels when you find the
    best way to solve a problem'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '![Image](../images/common-1.jpg) 当你找到解决问题的最佳方法时，你知道那种感觉有多好'
- en: You’ll get the most out of this book if you have some basic Scratch programming
    experience already. For example, you should be comfortable creating your own variables,
    lists, and custom blocks. It will also help to have some knowledge of algebra
    and geometry, such as understanding how to work with algebraic variables and interpret
    points on a coordinate plane. You’ll be amazed by what you can do in Scratch with
    just these few ingredients, from finding all the prime numbers in a set to creating
    unbreakable secret codes.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经有一些基本的Scratch编程经验，你将从这本书中受益匪浅。例如，你应该能够舒适地创建自己的变量、列表和自定义模块。如果你对代数和几何有一些了解，比如知道如何处理代数变量和解释坐标平面上的点，那也会有所帮助。仅凭这几样基本元素，你将惊讶于在Scratch中可以做的事情，从找出一个集合中的所有质数，到创建无法破解的秘密代码。
- en: What’s in This Book
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书内容
- en: 'Here’s an overview of what you’ll find in each chapter of the book:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是你将在本书每一章中找到的内容概览：
- en: '**[Chapter 1: What Computers Think About Numbers](ch01.xhtml#ch01)** We’ll
    start by exploring how computers keep track of numbers internally. Knowing this
    can help you avoid tricky errors and overcome some of the limits of a programming
    language.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第1章：计算机如何处理数字](ch01.xhtml#ch01)** 我们将从探索计算机如何内部处理数字开始。了解这一点可以帮助你避免一些难以察觉的错误，并克服编程语言的一些限制。'
- en: '**[Chapter 2: Exploring Divisibility and Primes](ch02.xhtml#ch02)** Next, we’ll
    investigate prime numbers, which are the building blocks of all integers. You’ll
    see how Scratch can help you find prime numbers and use them for computations.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第2章：探索可除性与质数](ch02.xhtml#ch02)** 接下来，我们将研究质数，它们是所有整数的基本构件。你将看到Scratch如何帮助你找到质数并将它们用于计算。'
- en: '**[Chapter 3: Splitting Numbers with Prime Factorization](ch03.xhtml#ch03)** This
    chapter presents different strategies for figuring out how to write a number as
    a product of primes. Testing out different techniques will help you find the most
    efficient strategy.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第3章：利用质因数分解分解数字](ch03.xhtml#ch03)** 本章介绍了不同的策略，用于找出如何将一个数字表示为质数的乘积。通过尝试不同的技巧，你将能找到最有效的策略。'
- en: '**[Chapter 4: Finding Patterns in Sequences](ch04.xhtml#ch04)** In this chapter,
    you’ll learn how to use Scratch to make sense of patterns in lists of numbers.
    Sometimes the patterns come from algebra, sometimes from geometry, and sometimes
    both.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第4章：在序列中寻找模式](ch04.xhtml#ch04)** 在本章中，你将学习如何使用Scratch理解数字列表中的模式。有时这些模式来自代数，有时来自几何，或者两者兼而有之。'
- en: '**[Chapter 5: From Sequences to Arrays](ch05.xhtml#ch05)** Having mastered
    one-dimensional lists, we’ll move on to two-dimensional tables of numbers, like
    multiplication tables and Pascal’s triangle. You’ll learn strategies for keeping
    track of two-dimensional data structures in Scratch.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第5章：从序列到数组](ch05.xhtml#ch05)** 掌握了一维列表后，我们将进入二维数字表格，如乘法表和帕斯卡三角形。你将学习如何在Scratch中追踪二维数据结构。'
- en: '**[Chapter 6: Making Codes, and Cracking Them Too](ch06.xhtml#ch06)** This
    chapter will show you how to use mathematical rules to scramble messages into
    gibberish. You’ll also discover techniques for unscrambling those messages, with
    or without a secret key.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第6章：制作代码并破解它们](ch06.xhtml#ch06)** 本章将向你展示如何使用数学规则将消息加密成乱码。你还将发现如何解密这些消息，无论是否拥有秘密密钥。'
- en: '**[Chapter 7: Experiments in Counting](ch07.xhtml#ch07)** Next, we’ll tackle
    two interesting problems from the field of combinatorics, also called the art
    of counting. You’ll see how Scratch can make patterns out of simple rules and
    count how many ways the patterns can occur.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第7章：计数实验](ch07.xhtml#ch07)** 接下来，我们将解决来自组合学领域的两个有趣问题，组合学也叫做计数艺术。你将看到Scratch如何通过简单的规则构建模式，并计算这些模式可以出现的方式有多少种。'
- en: '**[Chapter 8: Three Helpings of Pi](ch08.xhtml#ch08)** In this chapter, you’ll
    try out different ways of calculating the value of *π*, including by area, by
    convergence, and by using number theory.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第8章：三次圆周率计算](ch08.xhtml#ch08)** 在本章中，你将尝试不同的方法来计算*π*的值，包括通过面积法、收敛法以及使用数论法。'
- en: '**[Chapter 9: What Next?](ch09.xhtml#ch09)** The final chapter offers some
    suggestions about where to look for more math and programming problems and for
    more tools to solve them.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第9章：接下来做什么？](ch09.xhtml#ch09)** 最后一章提供了一些建议，帮助你寻找更多数学和编程问题，以及更多的工具来解决这些问题。'
- en: Every chapter features a series of hands-on Scratch coding projects so you can
    see the chapter’s concepts in action. There are 33 projects in all. Challenges
    throughout the book will also help you build on the ideas and programs discussed
    in each chapter. The book’s [appendix](app01.xhtml) contains some sample code
    and hints on how to approach these challenges.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 每一章都包含一系列动手实践的Scratch编程项目，帮助你将章节中的概念付诸实践。全书共有33个项目。此外，书中的挑战将帮助你在每章讨论的思想和程序基础上进一步构建。书的[附录](app01.xhtml)包含了一些示例代码以及如何解决这些挑战的提示。
- en: How to Read This Book
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何阅读本书
- en: The easiest way to read this book is like a novel, straight through from beginning
    to end. The topics covered are largely independent, though, so you can read the
    chapters out of order if you like. If you’re particularly interested in one of
    the chapter topics, you might want to skip ahead to that one; or maybe one of
    the chapters is relevant to a subject you’re studying in school and you’d like
    to start there. Exploring in this way is absolutely fine, but I do have a couple
    of recommendations.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读这本书最简单的方式是像读小说一样，从头到尾直接读完。尽管如此，书中涵盖的主题大部分是独立的，因此你也可以按照自己的兴趣跳跃阅读各章。如果你特别对某个章节感兴趣，或许你想跳到那一章；或者也许某一章和你正在学校学习的内容相关，你想从那一章开始阅读。以这种方式进行探索是完全可以的，但我有几点建议。
- en: '[Chapter 1](ch01.xhtml#ch01), about computer arithmetic, will help you understand
    what can go wrong with arithmetic in the programs in later chapters. It’s a good
    idea to read this one first. [Chapter 2](ch02.xhtml#ch02) introduces prime numbers,
    so you should read it before [Chapter 3](ch03.xhtml#ch03), which builds prime
    factorizations. You’ll probably also want to read [Chapter 4](ch04.xhtml#ch04),
    on sequences, before [Chapter 5](ch05.xhtml#ch05), on arrays, since arrays can
    be thought of as the two-dimensional equivalent of one-dimensional sequences.
    The following chapters all stand alone, but [Chapter 7](ch07.xhtml#ch07), in particular,
    goes into some pretty complex concepts and programs; working through some of the
    other chapters before you tackle that one might be a good idea in order to get
    more practice with Scratch programming and mathematical thinking.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一章](ch01.xhtml#ch01)，关于计算机算术，将帮助你理解后续章节中程序可能出现的算术问题。最好先阅读这一章。[第二章](ch02.xhtml#ch02)介绍了质数，所以你应该先读这一章，再阅读[第三章](ch03.xhtml#ch03)，它建立了质因数分解。你可能还想在阅读[第五章](ch05.xhtml#ch05)（关于数组）之前，先读一下[第四章](ch04.xhtml#ch04)（关于数列），因为数组可以被看作是二维的数列与一维数列之间的等效关系。接下来的章节都可以独立阅读，但尤其是[第七章](ch07.xhtml#ch07)，其中包含了一些相当复杂的概念和程序；在开始阅读这一章之前，最好先阅读一些其他章节，以便获得更多的
    Scratch 编程和数学思维的练习。'
- en: Online Resources
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在线资源
- en: You can find the Scratch code for all 33 projects and most of the challenge
    problems online at the Scratch studio for this book, *[https://scratch.mit.edu/studios/29153814](https://scratch.mit.edu/studios/29153814)*.
    The programs are also available for download from this book’s web page at *[https://nostarch.com/math-hacks-scratch](https://nostarch.com/math-hacks-scratch)*.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在本书的 Scratch 工作室找到所有 33 个项目的 Scratch 代码和大部分挑战问题，网址是 *[https://scratch.mit.edu/studios/29153814](https://scratch.mit.edu/studios/29153814)*。这些程序也可以从本书的网页下载，网址是
    *[https://nostarch.com/math-hacks-scratch](https://nostarch.com/math-hacks-scratch)*。
- en: My Inspiration
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我的灵感
- en: I wrote this book with my grandchildren in mind. When they introduced me to
    Scratch, I was immediately struck by the language’s mascot, that smiling ginger
    kitten. I didn’t know the mascot’s name, but it might as well have been Gummitch,
    the precocious main character in one of my favorite short stories, “Space-Time
    for Springers” by Fritz Leiber. Gummitch is a supergenius kitten who has big plans
    to write books explaining the world to other supergenius kittens, including *The
    Encyclopedia of Odors*, *Anthropofeline Psychology*, and, most intriguing of all,
    *Space-Time for Springers*.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我写这本书是考虑到我的孙辈。当他们向我介绍 Scratch 时，我立刻被这个语言的吉祥物——那只微笑的橙色小猫吸引了。我当时不知道这个吉祥物的名字，但它完全可以叫做
    Gummitch，那个在我最喜欢的短篇小说《春季跳跃者的时空》中表现出色的主角。Gummitch 是一只超天才的小猫，他有着宏大的计划，打算写书来向其他超天才小猫们解释这个世界，书名包括《气味百科全书》、*《人类与猫的心理学》*，以及最引人注目的
    *《春季跳跃者的时空》*。
- en: Seeing Scratch Cat’s resemblance to Gummitch, I wanted to write the math book
    Gummitch would have written, a sort of *Numbers for Springers*. I’ve aimed to
    keep the mathematical level of the book just right for supergenius kittens every-where.
    The book’s projects were fun to write and fun to hack in Scratch, combining a
    little bit of math with Scratch code to open up new ways to think about numbers,
    letters, geometry, and patterns. I hope you’ll enjoy the reading as much as I
    enjoyed the writing!
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 看到 Scratch Cat 与 Gummitch 的相似性，我想要写一本 Gummitch 会写的数学书，一本类似 *《春季跳跃者的数字学》* 的书。我尽力将这本书的数学水平调整到适合各地超天才小猫的程度。书中的项目既有趣又能在
    Scratch 中进行创作，将一点数学与 Scratch 代码结合，开辟了全新的思维方式，去思考数字、字母、几何和模式。我希望你们读得开心，就像我写得那么开心！
