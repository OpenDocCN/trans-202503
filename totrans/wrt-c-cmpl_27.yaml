- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: <samp class="SANS_Dogma_OT_Bold_B_11">REFERENCES</samp>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_11">参考文献</samp>
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: 'Aho, Alfred V., Monica S. Lam, Ravi Sethi, and Jeffrey D. Ullman. “Machine-Independent
    Optimizations.” [Chapter 9](chapter9.xhtml) in *Compilers: Principles, Techniques,
    & Tools*, 2nd ed. Boston: Addison-Wesley, 2006.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Aho, Alfred V., Monica S. Lam, Ravi Sethi, 和 Jeffrey D. Ullman. “机器无关优化。” [第9章](chapter9.xhtml)，《编译原理、技术与工具》（第2版）。波士顿：Addison-Wesley，2006年。
- en: 'Ballman, Aaron. Comment on Issue 53631: “C Compiler: Missing Diagnostics ‘Dereferencing
    “void *” Pointer.’ ” LLVM issue tracker. GitHub, September 21, 2022\. *[https://<wbr>github<wbr>.com<wbr>/llvm<wbr>/llvm<wbr>-project<wbr>/issues<wbr>/53631#issuecomment<wbr>-1253653888](https://github.com/llvm/llvm-project/issues/53631#issuecomment-1253653888)*.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ballman, Aaron. 关于问题53631的评论：“C编译器：缺少诊断信息‘解引用“void *”指针’。”LLVM问题跟踪器。GitHub，2022年9月21日。*
    [https://github.com/llvm/llvm-project/issues/53631#issuecomment-1253653888](https://github.com/llvm/llvm-project/issues/53631#issuecomment-1253653888)。
- en: Bendersky, Eli. “The Context Sensitivity of C’s Grammar, Revisited.” *Eli Bendersky’s
    Website*, May 2, 2011\. *[https://<wbr>eli<wbr>.thegreenplace<wbr>.net<wbr>/2011<wbr>/05<wbr>/02<wbr>/the<wbr>-context<wbr>-sensitivity<wbr>-of<wbr>-cs<wbr>-grammar<wbr>-revisited](https://eli.thegreenplace.net/2011/05/02/the-context-sensitivity-of-cs-grammar-revisited)*.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bendersky, Eli. “C语言语法的上下文敏感性，重审。” *Eli Bendersky的个人网站*，2011年5月2日。* [https://eli.thegreenplace.net/2011/05/02/the-context-sensitivity-of-cs-grammar-revisited](https://eli.thegreenplace.net/2011/05/02/the-context-sensitivity-of-cs-grammar-revisited)。
- en: Bendersky, Eli. “Directed Graph Traversal, Orderings and Applications to Data-Flow
    Analysis.” *Eli Bendersky’s Website*, October 16, 2015\. *[https://<wbr>eli<wbr>.thegreenplace<wbr>.net<wbr>/2015<wbr>/directed<wbr>-graph<wbr>-traversal<wbr>-orderings<wbr>-and<wbr>-applications<wbr>-to<wbr>-data<wbr>-flow<wbr>-analysis](https://eli.thegreenplace.net/2015/directed-graph-traversal-orderings-and-applications-to-data-flow-analysis)*.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bendersky, Eli. “有向图遍历、顺序和数据流分析的应用。” *Eli Bendersky的个人网站*，2015年10月16日。* [https://eli.thegreenplace.net/2015/directed-graph-traversal-orderings-and-applications-to-data-flow-analysis](https://eli.thegreenplace.net/2015/directed-graph-traversal-orderings-and-applications-to-data-flow-analysis)。
- en: Bendersky, Eli. “Parsing Expressions by Precedence Climbing.” *Eli Bendersky’s
    Website*, August 2, 2012\. *[https://<wbr>eli<wbr>.thegreenplace<wbr>.net<wbr>/2012<wbr>/08<wbr>/02<wbr>/parsing<wbr>-expressions<wbr>-by<wbr>-precedence<wbr>-climbing](https://eli.thegreenplace.net/2012/08/02/parsing-expressions-by-precedence-climbing)*.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bendersky, Eli. “通过优先级爬升解析表达式。” *Eli Bendersky的个人网站*，2012年8月2日。* [https://eli.thegreenplace.net/2012/08/02/parsing-expressions-by-precedence-climbing](https://eli.thegreenplace.net/2012/08/02/parsing-expressions-by-precedence-climbing)。
- en: Bendersky, Eli. “Position Independent Code (PIC) in Shared Libraries.” *Eli
    Bendersky’s Website*, November 3, 2011\. *[https://<wbr>eli<wbr>.thegreenplace<wbr>.net<wbr>/2011<wbr>/11<wbr>/03<wbr>/position<wbr>-independent<wbr>-code<wbr>-pic<wbr>-in<wbr>-shared<wbr>-libraries](https://eli.thegreenplace.net/2011/11/03/position-independent-code-pic-in-shared-libraries)*.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bendersky, Eli. “共享库中的位置无关代码（PIC）。” *Eli Bendersky的个人网站*，2011年11月3日。* [https://eli.thegreenplace.net/2011/11/03/position-independent-code-pic-in-shared-libraries](https://eli.thegreenplace.net/2011/11/03/position-independent-code-pic-in-shared-libraries)。
- en: Bendersky, Eli. “Position Independent Code (PIC) in Shared Libraries on x64.”
    *Eli Bendersky’s Website*, November 11, 2011\. *[https://<wbr>eli<wbr>.thegreenplace<wbr>.net<wbr>/2011<wbr>/11<wbr>/11<wbr>/position<wbr>-independent<wbr>-code<wbr>-pic<wbr>-in<wbr>-shared<wbr>-libraries<wbr>-on<wbr>-x64](https://eli.thegreenplace.net/2011/11/11/position-independent-code-pic-in-shared-libraries-on-x64)*.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bendersky, Eli. “x64架构下共享库中的位置无关代码（PIC）。” *Eli Bendersky的个人网站*，2011年11月11日。*
    [https://eli.thegreenplace.net/2011/11/11/position-independent-code-pic-in-shared-libraries-on-x64](https://eli.thegreenplace.net/2011/11/11/position-independent-code-pic-in-shared-libraries-on-x64)。
- en: Bendersky, Eli. “Some Problems of Recursive Descent Parsers.” *Eli Bendersky’s
    Website*, March 14, 2009\. *[https://<wbr>eli<wbr>.thegreenplace<wbr>.net<wbr>/2009<wbr>/03<wbr>/14<wbr>/some<wbr>-problems<wbr>-of<wbr>-recursive<wbr>-descent<wbr>-parsers](https://eli.thegreenplace.net/2009/03/14/some-problems-of-recursive-descent-parsers)*.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bendersky, Eli. “递归下降分析器的一些问题。” *Eli Bendersky的个人网站*，2009年3月14日。* [https://eli.thegreenplace.net/2009/03/14/some-problems-of-recursive-descent-parsers](https://eli.thegreenplace.net/2009/03/14/some-problems-of-recursive-descent-parsers)。
- en: Borgwardt, Michael. The Floating-Point Guide. Accessed January 12, 2023\. *[https://<wbr>floating<wbr>-point<wbr>-gui<wbr>.de](https://floating-point-gui.de)*.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Briggs, Preston, Keith D. Cooper, and Linda Torczon. “Improvements to Graph
    Coloring Register Allocation.” *ACM Transactions on Programming Languages and
    Systems* 16, no. 3 (May 1994): 428–455\. *[https://<wbr>doi<wbr>.org<wbr>/10<wbr>.1145<wbr>/177492<wbr>.177575](https://doi.org/10.1145/177492.177575)*.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Chaitin, G. J. “Register Allocation & Spilling via Graph Coloring.” *ACM SIGPLAN
    Notices* 17, no. 6 (June 1982): 98–101\. *[https://<wbr>doi<wbr>.org<wbr>/10<wbr>.1145<wbr>/872726<wbr>.806984](https://doi.org/10.1145/872726.806984)*.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Chaitin, Gregory J., Marc A. Auslander, Ashok K. Chandra, John Cocke, Martin
    E. Hopkins, and Peter W. Markstein. “Register Allocation via Coloring.” *Computer
    Languages* 6, no. 1 (January 1981): 47–57\. *[https://<wbr>doi<wbr>.org<wbr>/10<wbr>.1016<wbr>/0096<wbr>-0551(81)90048<wbr>-5](https://doi.org/10.1016/0096-0551(81)90048-5)*.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chu, Andy. “Pratt Parsing and Precedence Climbing Are the Same Algorithm.” *Oils
    Blog*, November 1, 2016\. *[https://<wbr>www<wbr>.oilshell<wbr>.org<wbr>/blog<wbr>/2016<wbr>/11<wbr>/01<wbr>.html](https://www.oilshell.org/blog/2016/11/01.html)*.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chu, Andy. “Precedence Climbing Is Widely Used.” *Oils Blog*, March 30, 2017\.
    *[https://<wbr>www<wbr>.oilshell<wbr>.org<wbr>/blog<wbr>/2017<wbr>/03<wbr>/30<wbr>.html](https://www.oilshell.org/blog/2017/03/30.html)*.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ciechanowski, Bartosz. Float Exposed. Accessed March 29, 2023\. *[https://<wbr>float<wbr>.exposed](https://float.exposed)*.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cooper, Keith D., and Linda Torczon. “Register Allocation.” [Chapter 13](chapter13.xhtml)
    in *Engineering a Compiler*, 2nd ed. Boston: Morgan Kaufmann, 2011.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cordes, Peter. Answer to “Is a Sign or Zero Extension Required When Adding a
    32bit Offset to a Pointer for the x86-64 ABI?” Stack Overflow, April 21, 2016,
    updated April 30, 2019\. *[https://<wbr>stackoverflow<wbr>.com<wbr>/a<wbr>/36760539](https://stackoverflow.com/a/36760539)*.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cppreference.com. “C23.” Updated September 25, 2023\. *[https://<wbr>en<wbr>.cppreference<wbr>.com<wbr>/w<wbr>/c<wbr>/23](https://en.cppreference.com/w/c/23)*.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cppreference.com. “Order of Evaluation.” Updated September 20, 2023\. *[https://<wbr>en<wbr>.cppreference<wbr>.com<wbr>/w<wbr>/c<wbr>/language<wbr>/eval<wbr>_order](https://en.cppreference.com/w/c/language/eval_order)*.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cuoq, Pascal. Answer to “Unsigned 64-Bit to Double Conversion: Why This Algorithm
    from g++.” Stack Overflow, November 7, 2014, updated October 23, 2018\. *[https://<wbr>stackoverflow<wbr>.com<wbr>/a<wbr>/26799227](https://stackoverflow.com/a/26799227)*.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David542 and Peter Cordes. “Integer Overflow in gas.” Forum discussion. Stack
    Overflow, October 10, 2020\. *[https://<wbr>stackoverflow<wbr>.com<wbr>/q<wbr>/64289590](https://stackoverflow.com/q/64289590)*.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dawson, Bruce. “Sometimes Floating Point Math Is Perfect.” *Random ASCII*, June
    19, 2017\. *[https://<wbr>randomascii<wbr>.wordpress<wbr>.com<wbr>/2017<wbr>/06<wbr>/19<wbr>/sometimes<wbr>-floating<wbr>-point<wbr>-math<wbr>-is<wbr>-perfect<wbr>/](https://randomascii.wordpress.com/2017/06/19/sometimes-floating-point-math-is-perfect/)*.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drysdale, David. “Beginner’s Guide to Linkers.” Updated 2009\. *[https://<wbr>www<wbr>.lurklurk<wbr>.org<wbr>/linkers<wbr>/linkers<wbr>.html](https://www.lurklurk.org/linkers/linkers.html)*.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: D’Silva, Vijay, Mathias Payer, and Dawn Song. “The Correctness-Security Gap
    in Compiler Optimization.” In *Proceedings of the 2015 IEEE Security and Privacy
    Workshops*, 73–87\. San Jose, CA, 2015\. *[https://<wbr>doi<wbr>.org<wbr>/10<wbr>.1109<wbr>/SPW<wbr>.2015<wbr>.33](https://doi.org/10.1109/SPW.2015.33)*.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finley, Thomas. “Two’s Complement.” Department of Computer Science, Cornell
    University, April 2000\. *[https://<wbr>www<wbr>.cs<wbr>.cornell<wbr>.edu<wbr>/~tomf<wbr>/notes<wbr>/cps104<wbr>/twoscomp<wbr>.html](https://www.cs.cornell.edu/~tomf/notes/cps104/twoscomp.html)*.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fog, Agner. “Calling Conventions for Different C++ Compilers and Operating Systems.”
    Updated February 1, 2023\. *[https://<wbr>www<wbr>.agner<wbr>.org<wbr>/optimize<wbr>/calling<wbr>_conventions<wbr>.pdf](https://www.agner.org/optimize/calling_conventions.pdf)*.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Friedl, Steve. “Reading C Type Declarations.” December 27, 2003\. *[http://<wbr>unixwiz<wbr>.net<wbr>/techtips<wbr>/reading<wbr>-cdecl<wbr>.html](http://unixwiz.net/techtips/reading-cdecl.html)*.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GCC Wiki. “Semantics of Floating Point Math in GCC.” Updated April 13, 2021\.
    *[https://<wbr>gcc<wbr>.gnu<wbr>.org<wbr>/wiki<wbr>/FloatingPointMath](https://gcc.gnu.org/wiki/FloatingPointMath)*.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'George, Lal, and Andrew W. Appel. “Iterated Register Coalescing.” *ACM Transactions
    on Programming Languages and Systems* 18, no. 3 (May 1996): 300–324\. *[https://<wbr>doi<wbr>.org<wbr>/10<wbr>.1145<wbr>/229542<wbr>.229546](https://doi.org/10.1145/229542.229546)*.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ghuloum, Abdulaziz. “An Incremental Approach to Compiler Construction.” In *Proceedings
    of the 2006 Scheme and Functional Programming Workshop*, 27–37\. Portland, OR,
    2006\. *[http://<wbr>scheme2006<wbr>.cs<wbr>.uchicago<wbr>.edu<wbr>/11<wbr>-ghuloum<wbr>.pdf](http://scheme2006.cs.uchicago.edu/11-ghuloum.pdf)*.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Gibbons, Phillip B. “Lecture 8: Induction Variable Optimizations.” Lecture
    slides for 15-745 Optimizing Compilers for Modern Architectures, Carnegie Mellon
    University, Spring 2019\. *[https://<wbr>www<wbr>.cs<wbr>.cmu<wbr>.edu<wbr>/afs<wbr>/cs<wbr>/academic<wbr>/class<wbr>/15745<wbr>-s19<wbr>/www<wbr>/lectures<wbr>/L8<wbr>-Induction<wbr>-Variables<wbr>.pdf](https://www.cs.cmu.edu/afs/cs/academic/class/15745-s19/www/lectures/L8-Induction-Variables.pdf)*.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Gibbons, Phillip B. “Lecture 16: Pointer Analysis.” Lecture slides for 15-745
    Optimizing Compilers for Modern Architectures, Carnegie Mellon University, Spring
    2016\. *[https://<wbr>www<wbr>.cs<wbr>.cmu<wbr>.edu<wbr>/afs<wbr>/cs<wbr>/academic<wbr>/class<wbr>/15745<wbr>-s16<wbr>/www<wbr>/lectures<wbr>/L16<wbr>-Pointer<wbr>-Analysis<wbr>.pdf](https://www.cs.cmu.edu/afs/cs/academic/class/15745-s16/www/lectures/L16-Pointer-Analysis.pdf)*.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Gibbons, Phillip B. “Lecture 23: Register Allocation: Coalescing.” Lecture
    slides for 15-745 Optimizing Compilers for Modern Architectures, Carnegie Mellon
    University, Spring 2019\. *[https://<wbr>www<wbr>.cs<wbr>.cmu<wbr>.edu<wbr>/afs<wbr>/cs<wbr>/academic<wbr>/class<wbr>/15745<wbr>-s19<wbr>/www<wbr>/lectures<wbr>/L23<wbr>-Register<wbr>-Coalescing<wbr>.pdf](https://www.cs.cmu.edu/afs/cs/academic/class/15745-s19/www/lectures/L23-Register-Coalescing.pdf)*.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Godbolt, Matt. Compiler Explorer. Updated September 27, 2023\. *[https://<wbr>godbolt<wbr>.org](https://godbolt.org)*.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Goldberg, David. “What Every Computer Scientist Should Know about Floating-Point
    Arithmetic.” *ACM Computing Surveys* 23, no. 1 (March 1991): 5–48\. *[https://<wbr>doi<wbr>.org<wbr>/10<wbr>.1145<wbr>/103162<wbr>.103163](https://doi.org/10.1145/103162.103163)*.
    Edited reprint included as Appendix D of *Numerical Computation Guide*. Palo Alto:
    Sun Microsystems, 2000\. *[https://<wbr>docs<wbr>.oracle<wbr>.com<wbr>/cd<wbr>/E19957<wbr>-01<wbr>/806<wbr>-3568<wbr>/ncg<wbr>_goldberg<wbr>.html](https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html)*.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Gustedt, Jens. “C11 Defects: Initialization of Padding.” *Jens Gustedt’s Blog*,
    October 24, 2012\. *[https://<wbr>gustedt<wbr>.wordpress<wbr>.com<wbr>/2012<wbr>/10<wbr>/24<wbr>/c11<wbr>-defects<wbr>-initialization<wbr>-of<wbr>-padding<wbr>/](https://gustedt.wordpress.com/2012/10/24/c11-defects-initialization-of-padding/)*.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gustedt, Jens. “Checked Integer Arithmetic in the Prospect of C23.” *Jens Gustedt’s
    Blog*, December 18, 2022\. *[https://<wbr>gustedt<wbr>.wordpress<wbr>.com<wbr>/2022<wbr>/12<wbr>/18<wbr>/checked<wbr>-integer<wbr>-arithmetic<wbr>-in<wbr>-the<wbr>-prospect<wbr>-of<wbr>-c23<wbr>/](https://gustedt.wordpress.com/2022/12/18/checked-integer-arithmetic-in-the-prospect-of-c23/)*.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hailperin, Max. “Comparing Conservative Coalescing Criteria.” *ACM Transactions
    on Programming Languages and Systems* 27, no. 3 (May 2005): 571–582\. *[https://<wbr>doi<wbr>.org<wbr>/10<wbr>.1145<wbr>/1065887<wbr>.1065894](https://doi.org/10.1145/1065887.1065894)*.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hilfinger, Paul. “Lecture 37: Global Optimization.” Lecture slides for CS 164:
    Programming Languages and Compilers, University of California, Berkeley, Spring
    2011\. *[https://<wbr>inst<wbr>.eecs<wbr>.berkeley<wbr>.edu<wbr>/~cs164<wbr>/sp11<wbr>/lectures<wbr>/lecture37<wbr>-2x2<wbr>.pdf](https://inst.eecs.berkeley.edu/~cs164/sp11/lectures/lecture37-2x2.pdf)*.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hyde, Randall. “Procedures.” Chap. 5 in *The Art of 64-Bit Assembly*, Vol.
    1\. San Francisco: No Starch Press, 2021.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'IEEE. *IEEE Standard for Floating-Point Arithmetic*. IEEE Std. 754-2019\. New
    York: IEEE, 2019\. *[https://<wbr>doi<wbr>.org<wbr>/10<wbr>.1109<wbr>/IEEESTD<wbr>.2019<wbr>.8766229](https://doi.org/10.1109/IEEESTD.2019.8766229.).*'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intel Corporation. *Intel® 64 and IA-32 Architectures Software Developer’s Manual*.
    Vol. 2, *Instruction Set Reference, A-Z*. Updated September 2023\. *[https://<wbr>www<wbr>.intel<wbr>.com<wbr>/content<wbr>/www<wbr>/us<wbr>/en<wbr>/developer<wbr>/articles<wbr>/technical<wbr>/intel<wbr>-sdm<wbr>.html](https://www.intel.com/content/www/us/en/developer/articles/technical/intel-sdm.html)*.
    Unofficial copy also available online at *[https://<wbr>www<wbr>.felixcloutier<wbr>.com<wbr>/x86<wbr>/](https://www.felixcloutier.com/x86/)*.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ISO/IEC. *Information Technology—Programming Languages—C*. 4th ed. ISO/IEC
    9899:2018\. Geneva, Switzerland: ISO, 2018.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ISO/IEC. *Information Technology—Programming Languages—C*. N3096 (working draft),
    April 1, 2023\. *[https://<wbr>open<wbr>-std<wbr>.org<wbr>/JTC1<wbr>/SC22<wbr>/WG14<wbr>/www<wbr>/docs<wbr>/n3096<wbr>.pdf](https://open-std.org/JTC1/SC22/WG14/www/docs/n3096.pdf)*.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jones, Joel. “Abstract Syntax Tree Implementation Idioms.” In *Proceedings of
    the 10th Conference on Pattern Languages of Programs (PLoP2003)*, 2003\. *[https://<wbr>hillside<wbr>.net<wbr>/plop<wbr>/plop2003<wbr>/Papers<wbr>/Jones<wbr>-ImplementingASTs<wbr>.pdf](https://hillside.net/plop/plop2003/Papers/Jones-ImplementingASTs.pdf)*.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Levien, Raph. “With Undefined Behavior, Anything Is Possible.” *Raph Levien’s
    Blog*, August 17, 2018\. *[https://<wbr>raphlinus<wbr>.github<wbr>.io<wbr>/programming<wbr>/rust<wbr>/2018<wbr>/08<wbr>/17<wbr>/undefined<wbr>-behavior<wbr>.html](https://raphlinus.github.io/programming/rust/2018/08/17/undefined-behavior.html)*.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'LLVM. “LLVM: lib/CodeGen/MachineCopyPropagation.Cpp Source File.” Source code.
    Accessed December 24, 2021\. *[https://<wbr>llvm<wbr>.org<wbr>/doxygen<wbr>/MachineCopyPropagation<wbr>_8cpp<wbr>_source<wbr>.html](https://llvm.org/doxygen/MachineCopyPropagation_8cpp_source.html)*.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LLVM Project. “Controlling Floating Point Behavior.” Clang Compiler User’s Manual.
    Accessed April 11, 2023\. *[https://<wbr>clang<wbr>.llvm<wbr>.org<wbr>/docs<wbr>/UsersManual<wbr>.html#controlling<wbr>-floating<wbr>-point<wbr>-behavior](https://clang.llvm.org/docs/UsersManual.html#controlling-floating-point-behavior)*.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LLVM Project. LLDB documentation. Updated October 4, 2023\. *[https://<wbr>lldb<wbr>.llvm<wbr>.org](https://lldb.llvm.org)*.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lu, H.J., Michael Matz, Milind Girkar, Jan Hubička, Andreas Jaeger, and Mark
    Mitchell, eds. *System V Application Binary Interface AMD64 Architecture Processor
    Supplement (With LP64 and ILP32 Programming Models)*. Updated September 26, 2023\.
    *[https://<wbr>gitlab<wbr>.com<wbr>/x86<wbr>-psABIs<wbr>/x86<wbr>-64<wbr>-ABI](https://gitlab.com/x86-psABIs/x86-64-ABI)*.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MaskRay. “Copy Relocations, Canonical PLT Entries and Protected Visibility.”
    *MaskRay*, January 9, 2021\. *[https://<wbr>maskray<wbr>.me<wbr>/blog<wbr>/2021<wbr>-01<wbr>-09<wbr>-copy<wbr>-relocations<wbr>-canonical<wbr>-plt<wbr>-entries<wbr>-and<wbr>-protected](https://maskray.me/blog/2021-01-09-copy-relocations-canonical-plt-entries-and-protected)*.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Meneide, JeanHeyd. “Ever Closer—C23 Draws Nearer.” *The Pasture*, February 28,
    2022\. *[https://<wbr>thephd<wbr>.dev<wbr>/ever<wbr>-closer<wbr>-c23<wbr>-improvements](https://thephd.dev/ever-closer-c23-improvements)*.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Muchnick, Steven S. “Register Allocation.” [Chapter 16](chapter16.xhtml) in
    *Advanced Compiler Design and Implementation*. San Francisco: Morgan Kaufmann,
    1997.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Myers, Joseph. Comment on Bug 90472: “ ‘extern int i;’ Declaration Inside Function
    Isn’t Allowed to Shadow ‘static int i;’ at File Scope.” GCC Bugzilla, May 16,
    2019\. *[https://<wbr>gcc<wbr>.gnu<wbr>.org<wbr>/bugzilla<wbr>/show<wbr>_bug<wbr>.cgi<wbr>?id<wbr>=90472#c3](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90472#c3)*.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Nisan, Noam, and Shimon Schocken. “Boolean Arithmetic.” [Chapter 2](chapter2.xhtml)
    in *The Elements of Computing Systems: Building a Modern Computer from First Principles*,
    1st ed. Cambridge: MIT Press, 2008\. *[https://<wbr>www<wbr>.nand2tetris<wbr>.org<wbr>/<wbr>_files<wbr>/ugd<wbr>/44046b<wbr>_f0eaab042ba042dcb58f3e08b46bb4d7<wbr>.pdf](https://www.nand2tetris.org/_files/ugd/44046b_f0eaab042ba042dcb58f3e08b46bb4d7.pdf)*.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regan, Rick. “Decimal to Floating-Point Converter.” *Exploring Binary*. Accessed
    June 2, 2023\. *[https://<wbr>www<wbr>.exploringbinary<wbr>.com<wbr>/floating<wbr>-point<wbr>-converter<wbr>/](https://www.exploringbinary.com/floating-point-converter/)*.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regan, Rick. “GCC Avoids Double Rounding Errors with Round-to-Odd.” *Exploring
    Binary*, January 15, 2014\. *[https://<wbr>www<wbr>.exploringbinary<wbr>.com<wbr>/gcc<wbr>-avoids<wbr>-double<wbr>-rounding<wbr>-errors<wbr>-with<wbr>-round<wbr>-to<wbr>-odd<wbr>/](https://www.exploringbinary.com/gcc-avoids-double-rounding-errors-with-round-to-odd/)*.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regan, Rick. “Hexadecimal Floating-Point Constants.” *Exploring Binary*, October
    4, 2010\. *[https://<wbr>www<wbr>.exploringbinary<wbr>.com<wbr>/hexadecimal<wbr>-floating<wbr>-point<wbr>-constants<wbr>/](https://www.exploringbinary.com/hexadecimal-floating-point-constants/)*.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regan, Rick. “Number of Digits Required for Round-Trip Conversions.” *Exploring
    Binary*, April 9, 2015\. *[https://<wbr>www<wbr>.exploringbinary<wbr>.com<wbr>/number<wbr>-of<wbr>-digits<wbr>-required<wbr>-for<wbr>-round<wbr>-trip<wbr>-conversions<wbr>/](https://www.exploringbinary.com/number-of-digits-required-for-round-trip-conversions/)*.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Regan, Rick. “往返转换所需的数字位数。” *探索二进制*，2015年4月9日。*[https://www.exploringbinary.com/number-of-digits-required-for-round-trip-conversions/](https://www.exploringbinary.com/number-of-digits-required-for-round-trip-conversions/)*。
- en: Regan, Rick. “The Spacing of Binary Floating-Point Numbers.” *Exploring Binary*,
    March 15, 2015\. *[https://<wbr>www<wbr>.exploringbinary<wbr>.com<wbr>/the<wbr>-spacing<wbr>-of<wbr>-binary<wbr>-floating<wbr>-point<wbr>-numbers<wbr>/](https://www.exploringbinary.com/the-spacing-of-binary-floating-point-numbers/)*.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Regan, Rick. “二进制浮点数的间距。” *探索二进制*，2015年3月15日。*[https://www.exploringbinary.com/the-spacing-of-binary-floating-point-numbers/](https://www.exploringbinary.com/the-spacing-of-binary-floating-point-numbers/)*。
- en: Regehr, John. “A Guide to Undefined Behavior in C and C++, Part 1.” *Embedded
    in Academia*, July 9, 2010\. *[https://<wbr>blog<wbr>.regehr<wbr>.org<wbr>/archives<wbr>/213](https://blog.regehr.org/archives/213)*.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Regehr, John. “C 和 C++ 中未定义行为指南，第1部分。” *嵌入学术界*，2010年7月9日。*[https://blog.regehr.org/archives/213](https://blog.regehr.org/archives/213)*。
- en: 'Ritchie, Dennis M. “The Development of the C Language.” In *The Second ACM
    SIGPLAN Conference on History of Programming Languages*, 201–8\. Cambridge: ACM,
    1993\. *[https://<wbr>doi<wbr>.org<wbr>/10<wbr>.1145<wbr>/154766<wbr>.155580](https://doi.org/10.1145/154766.155580)*.
    Reproduced on the author’s home page, Bell Labs, 2003\. *[https://<wbr>www<wbr>.bell<wbr>-labs<wbr>.com<wbr>/usr<wbr>/dmr<wbr>/www<wbr>/chist<wbr>.html](https://www.bell-labs.com/usr/dmr/www/chist.html)*.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ritchie, Dennis M. “C语言的发展。” 收录于 *第二届 ACM SIGPLAN 编程语言历史会议*，201–8页。剑桥：ACM，1993年。*[https://doi.org/10.1145/154766.155580](https://doi.org/10.1145/154766.155580)*。该文于2003年在作者主页上重印，贝尔实验室。*[https://www.bell-labs.com/usr/dmr/www/chist.html](https://www.bell-labs.com/usr/dmr/www/chist.html)*。
- en: Stallman, Richard M., and the GCC Developer Community. “Integers.” *Using the
    GNU Compiler Collection (GCC)*. Accessed January 12, 2023\. *[https://<wbr>gcc<wbr>.gnu<wbr>.org<wbr>/onlinedocs<wbr>/gcc<wbr>/Integers<wbr>-implementation<wbr>.html](https://gcc.gnu.org/onlinedocs/gcc/Integers-implementation.html)*.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stallman, Richard M. 和 GCC 开发者社区. “整数。” *使用 GNU 编译器集合（GCC）*。访问时间：2023年1月12日。*[https://gcc.gnu.org/onlinedocs/gcc/Integers-implementation.html](https://gcc.gnu.org/onlinedocs/gcc/Integers-implementation.html)*。
- en: 'Stallman, Richard, Roland Pesch, Stan Shebs, et al. *Debugging with GDB: The
    GNU Source-Level Debugger*. Accessed January 29, 2024\. *[https://<wbr>sourceware<wbr>.org<wbr>/gdb<wbr>/current<wbr>/onlinedocs<wbr>/gdb<wbr>/index<wbr>.html](https://sourceware.org/gdb/current/onlinedocs/gdb/index.html)*.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stallman, Richard, Roland Pesch, Stan Shebs, 等人. *使用 GDB 调试：GNU 源代码级调试器*。访问时间：2024年1月29日。*[https://sourceware.org/gdb/current/onlinedocs/gdb/index.html](https://sourceware.org/gdb/current/onlinedocs/gdb/index.html)*。
- en: Taylor, Ian Lance. “Linkers.” Series of blog posts. *Airs – Ian Lance Taylor*,
    September 2007\. First post available at *[https://<wbr>www<wbr>.airs<wbr>.com<wbr>/blog<wbr>/archives<wbr>/38](https://www.airs.com/blog/archives/38)*,
    table of contents available at *[https://<wbr>lwn<wbr>.net<wbr>/Articles<wbr>/276782<wbr>/](https://lwn.net/Articles/276782/)*.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Taylor, Ian Lance. “链接器。” 一系列博客文章。*Airs – Ian Lance Taylor*，2007年9月。第一篇文章请见
    *[https://www.airs.com/blog/archives/38](https://www.airs.com/blog/archives/38)*，目录请见
    *[https://lwn.net/Articles/276782/](https://lwn.net/Articles/276782/)*。
- en: Ullman, Jeffrey D. “Code Optimization I.” Lecture notes. Stanford University
    InfoLab, Stanford University. Accessed October 6, 2023\. *[http://<wbr>infolab<wbr>.stanford<wbr>.edu<wbr>/~ullman<wbr>/dragon<wbr>/slides3<wbr>.pdf](http://infolab.stanford.edu/~ullman/dragon/slides3.pdf)*.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ullman, Jeffrey D. “代码优化 I。” 讲义。斯坦福大学信息实验室，斯坦福大学。访问时间：2023年10月6日。*[http://infolab.stanford.edu/~ullman/dragon/slides3.pdf](http://infolab.stanford.edu/~ullman/dragon/slides3.pdf)*。
- en: Ullman, Jeffrey D. “Code Optimization II.” Lecture notes. Stanford University
    InfoLab, Stanford University. Accessed October 6, 2023\. *[http://<wbr>infolab<wbr>.stanford<wbr>.edu<wbr>/~ullman<wbr>/dragon<wbr>/slides4<wbr>.pdf](http://infolab.stanford.edu/~ullman/dragon/slides4.pdf)*.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ullman, Jeffrey D. “代码优化 II。” 讲义。斯坦福大学信息实验室，斯坦福大学。访问时间：2023年10月6日。*[http://infolab.stanford.edu/~ullman/dragon/slides4.pdf](http://infolab.stanford.edu/~ullman/dragon/slides4.pdf)*。
- en: Wang, Daniel C., Andrew W. Appel, Jeff L. Korn, and Christopher S. Serra. “The
    Zephyr Abstract Syntax Description Language.” In *Proceeedings of the Conference
    on Domain Specific Languages (DSL ’97)*. Santa Barbara, CA, 1997\. *[https://<wbr>www<wbr>.cs<wbr>.princeton<wbr>.edu<wbr>/~appel<wbr>/papers<wbr>/asdl97<wbr>.pdf](https://www.cs.princeton.edu/~appel/papers/asdl97.pdf)*.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 王丹尼尔·C., 安德鲁·W·阿佩尔, 杰夫·L·科恩, 和克里斯托弗·S·塞拉. “Zephyr抽象语法描述语言.” 收录于*领域特定语言会议（DSL
    '97）论文集*. 圣巴巴拉, CA, 1997\. *[https://www.cs.princeton.edu/~appel/papers/asdl97.pdf](https://www.cs.princeton.edu/~appel/papers/asdl97.pdf)*.
- en: Wikipedia. “Double-Precision Floating-Point Format.” Last modified March 26,
    2024\. *[https://<wbr>en<wbr>.wikipedia<wbr>.org<wbr>/wiki<wbr>/Double<wbr>-precision<wbr>_floating<wbr>-point<wbr>_format](https://en.wikipedia.org/wiki/Double-precision_floating-point_format)*.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基百科. “双精度浮点格式.” 最后修改于2024年3月26日\. *[https://en.wikipedia.org/wiki/Double-precision_floating-point_format](https://en.wikipedia.org/wiki/Double-precision_floating-point_format)*.
- en: Yang, Edward Z. “The AST Typing Problem.” *Ezyang’s Blog*, May 28, 2013\. *[http://<wbr>blog<wbr>.ezyang<wbr>.com<wbr>/2013<wbr>/05<wbr>/the<wbr>-ast<wbr>-typing<wbr>-problem<wbr>/](http://blog.ezyang.com/2013/05/the-ast-typing-problem/)*.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 杨爱德华·Z. “AST类型问题.” *Ezyang的博客*, 2013年5月28日\. *[http://blog.ezyang.com/2013/05/the-ast-typing-problem/](http://blog.ezyang.com/2013/05/the-ast-typing-problem/)*.
- en: Yang, Zhaomo, Brian Johannesmeyer, Anders Trier Olesen, Sorin Lerner, and Kirill
    Levchenko. “Dead Store Elimination (Still) Considered Harmful.” In *Proceedings
    of the 26th USENIX Security Symposium*, 1025–1040\. Vancouver, BC, 2017\. *[https://<wbr>www<wbr>.usenix<wbr>.org<wbr>/system<wbr>/files<wbr>/conference<wbr>/usenixsecurity17<wbr>/sec17<wbr>-yang<wbr>.pdf](https://www.usenix.org/system/files/conference/usenixsecurity17/sec17-yang.pdf)*.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 杨兆墨, 布赖恩·约翰内斯梅耶, 安德斯·特里尔·奥莱森, 索林·勒纳, 和基里尔·列夫琴科. “死存储消除（仍然）被认为有害.” 收录于*第26届USENIX安全研讨会论文集*,
    1025–1040\. 温哥华, BC, 2017\. *[https://www.usenix.org/system/files/conference/usenixsecurity17/sec17-yang.pdf](https://www.usenix.org/system/files/conference/usenixsecurity17/sec17-yang.pdf)*.
