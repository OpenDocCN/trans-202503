- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '![](Images/chapterart.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/chapterart.png)'
- en: Welcome to *The Art of WebAssembly*. This book teaches you how to read, write,
    and understand WebAssembly at the virtual machine level. It will help you learn
    how WebAssembly interacts with JavaScript, the web browser, and the embedding
    environment. By the end, you’ll comprehend what WebAssembly is, its ideal use
    cases, and how to write WebAssembly that performs at near-native speeds.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到*WebAssembly的艺术*。本书教你如何在虚拟机级别阅读、编写和理解WebAssembly。它将帮助你了解WebAssembly如何与JavaScript、网页浏览器以及嵌入环境进行交互。到最后，你将理解WebAssembly是什么，它的理想使用场景，以及如何编写接近本地速度的WebAssembly代码。
- en: Who Should Read This Book
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谁应该阅读本书
- en: This book is for web developers interested in understanding when and why to
    use WebAssembly. If you truly want to grasp WebAssembly, you need to learn it
    in detail. Several books have been written on various WebAssembly toolchains.
    This book is not specific to writing C/C++ or Rust, or any other language for
    WebAssembly; instead, it explores WebAssembly’s mechanisms and capabilities.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适合那些希望理解何时以及为何使用WebAssembly的网页开发者。如果你真心想掌握WebAssembly，你需要深入学习它。关于WebAssembly工具链，已有多本书籍进行讨论。本书并不专注于为WebAssembly编写C/C++、Rust或其他语言的代码；相反，它探索了WebAssembly的机制和能力。
- en: This book is for users who want to understand what WebAssembly is, what it can
    do, and how to use it best. WebAssembly can perform better and create smaller
    downloads and memory footprints than JavaScript. But developing high-performing
    WebAssembly applications requires more than simply writing an app in a language
    like C++/Rust or AssemblyScript and compiling it in WebAssembly. To build an application
    that executes two or three times as fast as its JavaScript equivalent, you’ll
    need to know how WebAssembly works at a deeper level.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适合那些想要了解WebAssembly是什么，它能做什么以及如何最佳使用它的用户。WebAssembly可以比JavaScript表现得更好，且可以创建更小的下载和内存占用。但开发高性能的WebAssembly应用程序不仅仅是用C++/Rust或AssemblyScript等语言编写应用程序并将其编译为WebAssembly。要构建一个执行速度是其JavaScript等效程序两到三倍的应用程序，你需要深入了解WebAssembly的工作原理。
- en: Readers should have a basic familiarity with web technologies, such as JavaScript,
    HTML, and CSS, but don’t need to be experts in any of them. In its current incarnation,
    it isn’t easy to use WebAssembly without understanding the web and how it works.
    I don’t explain the basics of a web page, but I also don’t assume readers have
    much knowledge of how the web works either.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 读者应具备基本的网页技术知识，如JavaScript、HTML和CSS，但不需要是这些技术的专家。在目前的WebAssembly形式下，如果不了解网页及其工作原理，使用WebAssembly并不容易。我不会解释网页的基础知识，但我也不假设读者对网页如何运作有太多了解。
- en: Why Users Are Interested in WebAssembly
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么用户对WebAssembly感兴趣
- en: 'At the first WebAssembly summit, Ashley Williams ([@ag_dubs](http://www.twitter.com/@ag_dubs))
    presented the result of her Twitter polls asking WebAssembly users why they were
    interested in the technology. Here are the results:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一次WebAssembly峰会上，Ashley Williams（[@ag_dubs](http://www.twitter.com/@ag_dubs)）展示了她在Twitter上发起的调查结果，询问WebAssembly用户为什么对这项技术感兴趣。以下是结果：
- en: Multi-language, 40.1 percent
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多语言，40.1 百分
- en: Smaller faster code, 36.8 percent
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更小更快的代码，36.8 百分
- en: Sandboxed (security), 17.3 percent
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 沙盒化（安全），17.3 百分
- en: 'She then asked users who were interested in WebAssembly for its support of
    multiple languages why that was so:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，她询问那些对WebAssembly支持多种语言感兴趣的用户，为什么会这样：
- en: JavaScript doesn’t meet my needs, 43.5 percent
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript无法满足我的需求，43.5 百分
- en: Reuse of existing libraries, 40.8 percent
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重用现有库，40.8 百分
- en: Preexisting app distro (distribution), 8.1 percent
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预先存在的应用分发（distribution），8.1 百分
- en: 'Of those users who thought JavaScript didn’t meet their needs, she asked why:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些认为JavaScript无法满足其需求的用户，她询问了原因：
- en: Performance is bad or inconsistent, 42 percent
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能差或不一致，42 百分
- en: The ecosystem doesn’t meet my needs, 17.4 percent
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生态系统无法满足我的需求，17.4 百分
- en: I don’t like or understand it, 31.3 percent
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我不喜欢或理解它，31.3 百分
- en: 'You can watch her talk, “Why the #wasmsummit Website Isn’t Written in Wasm,”
    on YouTube at [https://www.youtube.com/watch?v=J5Rs9oG3FdI](https://www.youtube.com/watch?v=J5Rs9oG3FdI).'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '你可以在YouTube上观看她的演讲，“Why the #wasmsummit Website Isn’t Written in Wasm”，网址：[https://www.youtube.com/watch?v=J5Rs9oG3FdI](https://www.youtube.com/watch?v=J5Rs9oG3FdI)。'
- en: Although these polls weren’t scientific, they’re still rather illuminating.
    For one, if you combine the first and third poll users interested in using WebAssembly
    to improve an app’s performance, the total is more than 55 percent. Improving
    your code’s performance with WebAssembly is unquestionably possible. But to really
    utilize WebAssembly isn’t magic; you just need to know what you’re doing. By the
    end of this book, you’ll know enough about WebAssembly to drastically improve
    the performance of your web apps.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些调查并非科学性调查，但它们仍然提供了相当有启发性的见解。首先，如果你将第一和第三次调查中那些有兴趣使用 WebAssembly 提升应用性能的用户结合起来，总数超过了
    55%。毫无疑问，使用 WebAssembly 提升代码性能是可能的。但要真正利用 WebAssembly 并非魔法；你只需要知道自己在做什么。到本书结束时，你将掌握足够的
    WebAssembly 知识，以显著提升你 web 应用的性能。
- en: Why the World Needs WebAssembly
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么世界需要 WebAssembly
- en: I’ve been developing web applications since the mid-1990s. Initially, web pages
    were no more than documents with images. That changed with the emergence of Java
    and JavaScript. At the time, JavaScript was a toy language that could add rollover
    effects to buttons on your web pages. Java was the real deal, and the Java virtual
    machine (JVM) was an exciting technology. But Java never reached its full potential
    on the web platform. Java requires a plug-in, and the plug-in technology eventually
    fell out of fashion when it became a security and malware nightmare.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我从 1990 年代中期开始开发 web 应用程序。最初，网页不过是带有图片的文档。随着 Java 和 JavaScript 的出现，这一情况发生了变化。那时，JavaScript
    是一种玩具语言，只能为网页上的按钮添加鼠标悬停效果。Java 才是真正的技术，而 Java 虚拟机（JVM）则是令人兴奋的技术。但是，Java 从未在网页平台上发挥出其全部潜力。Java
    需要插件，而插件技术最终因其安全性问题和恶意软件威胁而过时。
- en: Unfortunately, Java is a proprietary technology, which prevented its direct
    integration into the web browser. However, WebAssembly is different in that it
    wasn’t created unilaterally by a single technology company. WebAssembly began
    its life as a collaboration between many hardware and software vendors, such as
    Google, Mozilla, Microsoft, and Apple. It’s available without a plug-in in every
    modern web browser. You can use it to write hardware-independent software using
    Node.js. Because it’s not proprietary, any hardware or software platform can use
    it without royalty or permission. It fulfills the 1990s-era dream of *one binary
    to rule them all*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，Java 是一项专有技术，这阻止了它直接集成到网页浏览器中。然而，WebAssembly 不同，因为它不是由单一技术公司单方面创建的。WebAssembly
    起初是由许多硬件和软件供应商（如 Google、Mozilla、Microsoft 和 Apple）合作推出的。它在每个现代浏览器中都可以直接使用，无需插件。你可以使用它通过
    Node.js 编写硬件独立的软件。由于它不是专有的，任何硬件或软件平台都可以使用它，无需支付版权费或获得许可。它实现了 1990 年代的梦想——*一个二进制文件统治一切*。
- en: What’s in This Book
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书内容
- en: In this book, we will walk you through how WebAssembly works at a low level
    by introducing you to WebAssembly Text format. We will cover many low-level topics
    and take some time to show you how WebAssembly works with JavaScript in Node.js
    and web-based applications. The book is intended to be read in order, with concepts
    building on each other. There are also references throughout the book to code
    examples that can be found at [https://wasmbook.com](https://wasmbook.com).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将带领你了解 WebAssembly 如何在低层次上工作，通过介绍 WebAssembly 文本格式来实现。我们将讨论许多低层次的主题，并花一些时间展示
    WebAssembly 如何在 Node.js 和基于 web 的应用程序中与 JavaScript 协同工作。本书的阅读顺序是有意设计的，概念之间相互构建。书中还将有指向代码示例的引用，这些示例可以在
    [https://wasmbook.com](https://wasmbook.com) 找到。
- en: '**Chapter 1: An Introduction to WebAssembly**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**第1章：WebAssembly简介**'
- en: We go into detail about what WebAssembly is, what it isn’t, and when best to
    use it. You’re introduced to WebAssembly Text (WAT), which allows you to understand
    how WebAssembly works at the lowest level. We also set up the environment you’ll
    use to follow along with the examples in the book.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将详细探讨 WebAssembly 是什么，它不是什麽，以及什么时候最好使用它。你将接触到 WebAssembly 文本（WAT），它让你理解 WebAssembly
    如何在最低层次上运作。我们还将设置你将用来跟随本书示例的环境。
- en: '**Chapter 2: WebAssembly Text Basics**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**第2章：WebAssembly 文本基础**'
- en: We cover the basics of WAT and how it relates to high-level languages that deploy
    to WebAssembly. You’ll write your first WAT program, and we’ll discuss fundamentals
    like variable use and control flow.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将介绍 WAT 的基础知识，以及它如何与部署到 WebAssembly 的高级语言相关。你将编写你的第一个 WAT 程序，并讨论一些基础概念，如变量使用和控制流。
- en: '**Chapter 3: Functions and Tables**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**第3章：函数和表**'
- en: We discuss creating functions in WebAssembly modules and calling them from JavaScript.
    You’ll build a program to check for prime numbers to illustrate these concepts.
    We investigate calling functions from tables and performance implications.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将讨论如何在 WebAssembly 模块中创建函数并从 JavaScript 调用它们。你将构建一个检查素数的程序来说明这些概念。我们还将探讨从表格中调用函数以及性能影响。
- en: '**Chapter 4: Low-Level Bit Manipulation**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**第4章：低级位操作**'
- en: You learn about the low-level concepts you can use to improve your WebAssembly
    modules’ performance, such as number systems, bit masking, and 2s complement.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将学习可以用来提升 WebAssembly 模块性能的低级概念，例如数字系统、位掩码和 2 的补码。
- en: '**Chapter 5: Strings in WebAssembly**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**第5章：WebAssembly 中的字符串**'
- en: WebAssembly doesn’t have a built-in string data type, so in this chapter you
    will learn how strings are represented in WebAssembly, and how to manipulate them.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: WebAssembly 并没有内建的字符串数据类型，因此在本章中，你将学习字符串如何在 WebAssembly 中表示，以及如何操作它们。
- en: '**Chapter 6: Linear Memory**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**第6章：线性内存**'
- en: You’re introduced to linear memory and how WebAssembly modules use it to share
    large data sets with JavaScript or an alternative embedding environment. We start
    creating an object collision program that sets objects moving randomly and checks
    for object collisions, which we then use throughout the book.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将了解线性内存以及 WebAssembly 模块如何使用它与 JavaScript 或其他嵌入环境共享大型数据集。我们开始创建一个物体碰撞程序，让物体随机移动并检测碰撞，之后我们将在整本书中使用它。
- en: '**Chapter 7: Web Applications**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**第7章：Web 应用程序**'
- en: You learn how to create a simple web application using HTML, CSS, JavaScript,
    and WebAssembly.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将学习如何使用 HTML、CSS、JavaScript 和 WebAssembly 创建一个简单的 Web 应用程序。
- en: '**Chapter 8: Working with the Canvas**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**第8章：与 Canvas 一起工作**'
- en: We discuss how to use the HTML canvas with WebAssembly to create lightning-fast
    web animations. We use the canvas to improve our object collision application.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将讨论如何使用 HTML canvas 和 WebAssembly 创建极速的 Web 动画。我们使用 canvas 来优化我们的物体碰撞应用程序。
- en: '**Chapter 9: Optimizing Performance**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**第9章：优化性能**'
- en: You learn how WebAssembly works well for computationally intensive tasks, such
    as collision detection. You spend some time using Chrome and Firefox profilers
    and other optimization tools to improve our applications’ performance.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将学习 WebAssembly 如何在计算密集型任务中表现出色，例如碰撞检测。你将花一些时间使用 Chrome 和 Firefox 的性能分析工具以及其他优化工具来提升应用程序的性能。
- en: '**Chapter 10: Debugging WebAssembly**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章：调试 WebAssembly**'
- en: We will cover debugging basics such as logging to the console using alerts and
    stack traces. You will also learn how to use the debuggers in Chrome and Firefox
    to step through our WebAssembly code.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将介绍调试基础知识，例如使用警告和堆栈跟踪记录到控制台。你还将学习如何使用 Chrome 和 Firefox 中的调试工具逐步调试 WebAssembly
    代码。
- en: '**Chapter 11: AssemblyScript**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**第11章：AssemblyScript**'
- en: We discuss using WAT to understand high-level languages by using it to evaluate
    AssemblyScript, a high-level language designed to deploy to WebAssembly in an
    efficient way.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将讨论如何使用 WAT 来理解高级语言，通过使用它来评估 AssemblyScript，这是一种旨在高效部署到 WebAssembly 的高级语言。
