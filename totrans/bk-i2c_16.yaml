- en: '12'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '12'
- en: The TCA9548A I²C Bus Expander
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: TCA9548A I²C 总线扩展器
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: The I²C bus’s 112 nonreserved peripheral addresses are more than enough for
    almost any system; you’ll reach bus capacitance limits long before you put this
    many devices on the bus. However, since devices tend to hard-code their addresses
    into the hardware, only a limited number of identical devices can appear on the
    same I²C bus. Furthermore, because hundreds or thousands of I²C peripherals exist,
    there are often address conflicts between different I²C devices. The 10-bit addressing
    scheme was created to alleviate this problem, but few devices and fewer controllers
    take advantage of this feature. If you want to put two devices with the same address
    on the I²C bus, you’ll need to use an I²C bus expander.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: I²C 总线的 112 个非保留外设地址对于几乎任何系统来说都足够用了；你会在将如此多设备接入总线之前就达到总线电容限制。然而，由于设备往往将地址硬编码到硬件中，因此同一
    I²C 总线上只能出现有限数量的相同设备。此外，由于存在数百或数千个 I²C 外设，常常会在不同 I²C 设备之间发生地址冲突。10 位地址方案的创建旨在缓解这个问题，但很少有设备和控制器利用这个特性。如果你想将两个具有相同地址的设备接入
    I²C 总线，你将需要使用 I²C 总线扩展器。
- en: 'I²C *bus expanders*, also known as *bus multiplexers* or *bus switches*, allow
    you to switch a single I²C bus between two, four, or eight separate I²C buses.
    In sum, you program one of these multiplexers to switch an incoming pair of I²C
    lines to one of the sets of lines the IC supports. Common I²C multiplexer ICs
    include:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: I²C *总线扩展器*，也称为 *总线多路复用器* 或 *总线开关*，允许你将单个 I²C 总线切换到两个、四个或八个独立的 I²C 总线。简而言之，你可以编程一个多路复用器，将输入的
    I²C 线对切换到 IC 支持的某个线对集合。常见的 I²C 多路复用器 IC 包括：
- en: 'TCA9543A: Switches one I²C bus between two separate buses'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCA9543A：将一个 I²C 总线切换为两个独立的总线
- en: 'TCA9545A: Switches one I²C bus between four separate buses'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCA9545A：将一个 I²C 总线切换为四个独立的总线
- en: 'TCA9548A: Switches one I²C bus between eight separate buses'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCA9548A：将一个 I²C 总线切换为八个独立的总线
- en: This chapter focuses on the TCA9548A IC, since it supports the greatest number
    of buses. Both Adafruit and SparkFun provide breakout boards for it, which this
    chapter also discusses.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍 TCA9548A IC，因为它支持最多数量的总线。Adafruit 和 SparkFun 都提供适用于该芯片的分 breakout 板，本章也将讨论这些。
- en: 12.1 The TCA9548A I²C Multiplexer
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12.1 TCA9548A I²C 多路复用器
- en: The TCA9548A is, perhaps, the most popular I²C multiplexer used by hobbyists
    because several manufacturers provide breakout boards for it. Therefore, the remainder
    of this chapter will discuss that particular device (the TCA9543A and TCA9545A
    devices provide a subset of the TCA9548A’s capabilities, so studying the latter
    will tell you most of what you need to know concerning these other devices). The
    following subsections describe connecting devices, programming the register set,
    and programming the TCA9548A.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: TCA9548A 可能是爱好者中最受欢迎的 I²C 多路复用器，因为有多个厂商为其提供 breakout 板。因此，本章的剩余部分将讨论这一特定设备（TCA9543A
    和 TCA9545A 设备提供 TCA9548A 功能的子集，因此学习后者将帮助你了解大部分与这些其他设备相关的内容）。接下来的子章节将描述如何连接设备、编程寄存器集以及编程
    TCA9548A。
- en: The TCA9548A contains nine (SDA, SCL) pairs on the chip. The datasheet names
    the main lines from the controller device (SDA, SCL) and names the other eight
    pairs (SD0, SC0), (SD1, SC1), . . . , (SD7, SC7).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: TCA9548A 芯片上包含九对（SDA, SCL）引脚。数据手册中将来自控制器设备的主线（SDA, SCL）命名为主线，并将其他八对分别命名为（SD0,
    SC0）、（SD1, SC1）、...、（SD7, SC7）。
- en: 12.1.1 Upstream and Downstream Devices
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 12.1.1 上游设备与下游设备
- en: Devices on the same I²C bus as the TCA9548A are called *upstream devices* because
    they are on the main I²C bus before any of the switched I²C buses. Those switched
    buses are *downstream* from the TCA9548A. Upstream devices respond to addresses
    directly from the controller device, without any switching (or masking) on the
    part of the multiplexer. Therefore, if an upstream device shares the same address
    as a downstream device, the two devices will have an address conflict when the
    TCA9548A switches on the bus to which the downstream device is connected.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 与 TCA9548A 在同一 I²C 总线上的设备被称为*上游设备*，因为它们位于任何已切换的 I²C 总线之前，处于主 I²C 总线上。这些已切换的总线是
    TCA9548A 之后的*下游设备*。上游设备直接响应来自控制器设备的地址，且多路复用器不进行任何切换（或掩码）。因此，如果上游设备与下游设备共享相同的地址，当
    TCA9548A 切换到连接下游设备的总线时，这两个设备将发生地址冲突。
- en: The TCA9548A is a device on the I²C bus, meaning it can appear on the same physical
    SDA and SCL lines as other devices (see [Figure 12-1](#figure12-1)). I will refer
    to the main lines as the *upstream* pair and the remaining eight sets of lines
    as the *downstream* pairs.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: TCA9548A 是一个 I²C 总线上的设备，这意味着它可以与其他设备共享相同的物理 SDA 和 SCL 线（见[图 12-1](#figure12-1)）。我将把主线称为
    *上游* 对，而剩余的八组线称为 *下游* 对。
- en: Each of the downstream (SDA, SCL) pairs forms its own I²C bus, which can be
    operated independently of the other seven downstream pairs. By switching the upstream
    lines to one of the downstream pairs (under program control), a system with a
    TCA9548A can expand a single I²C bus into eight.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每一组下游（SDA, SCL）对形成自己的 I²C 总线，可以独立于其他七组下游对进行操作。通过将上游线切换到某个下游对（在程序控制下），使用 TCA9548A
    的系统可以将单个 I²C 总线扩展为八个。
- en: '![](image_fi/502468c12/f12001.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502468c12/f12001.png)'
- en: 'Figure 12-1: Upstream and downstream devices'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-1：上游和下游设备
- en: 12.1.2 The TCA9548A Selection Register
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 12.1.2 TCA9548A 选择寄存器
- en: The TCA9548A is one of the simpler I²C devices from a software perspective.
    The device has one 8-bit read/write register that appears at its I²C address.
    Writing data to the device selects which output bus to use; reading from the device
    reads the last value written to it (0 is written to the register on power-up).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: TCA9548A 从软件角度来看是 I²C 设备中比较简单的一个。该设备有一个 8 位的读写寄存器，该寄存器出现在其 I²C 地址上。向设备写入数据选择要使用的输出总线；从设备读取则读取最后写入的数据（设备上电时寄存器中写入
    0）。
- en: The register on the TCA9548A is a bit map used to select which downstream pairs
    connect to the upstream bus. A 1 in bit position 0 connects the upstream (SDA,
    SCL) lines to (SD0, SC0), a 1 in bit position 1 connects (SDA, SCL) to (SD1, SC1)
    and so on. A 1 in bit position 7 connects (SDA, SCL) to (SD7, SC7).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: TCA9548A 上的寄存器是一个位图，用于选择哪些下游对连接到上游总线。在位位置 0 中写入 1 会将上游（SDA, SCL）线连接到（SD0, SC0），在位位置
    1 中写入 1 会将（SDA, SCL）连接到（SD1, SC1），以此类推。在位位置 7 中写入 1 会将（SDA, SCL）连接到（SD7, SC7）。
- en: 'Though it’s possible to write multiple 1 bits to various positions in the TCA9548A
    register, you normally wouldn’t want to do this, since it could produce conflicts
    on the I²C bus if it attempts to simultaneously access two different devices.
    One reason for writing multiple 1 bits to the register is to send a general call
    command to devices on all the downstream buses. However, most of the time, you
    should ensure that you write only a single 1 bit to the register. Note that writing
    all 0s to the register is reasonable: doing so turns off all the downstream pairs,
    in which case the controller can talk only to devices that are upstream of the
    TCA9548A (that is, on the main, or upstream, SDA and SCL lines).'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然可以在 TCA9548A 寄存器的不同位置写入多个 1 位，但通常不建议这么做，因为如果同时访问两个不同的设备，可能会在 I²C 总线上产生冲突。写入多个
    1 位到寄存器的一个原因是向所有下游总线上的设备发送一般呼叫命令。然而，大多数时候，你应该确保只向寄存器写入单个 1 位。请注意，将所有 0 写入寄存器是合理的：这样做会关闭所有下游对，此时控制器只能与位于
    TCA9548A 上游的设备通信（即在主 SDA 和 SCL 线上）。
- en: 12.1.3 TCA9548A Address and Reset Lines
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 12.1.3 TCA9548A 地址和复位线
- en: The TCA9548A can respond to an I²C address in the range 0x70 through 0x77\.
    The chip has three address lines (A0, A1, and A2) that can be tied to Gnd or Vcc
    to select the address (the TCA9548A uses A0, A1, and A2 as the LO 3 bits of its
    address). This chapter will generally assume that the TCA9548A is configured for
    address 0x70, unless otherwise specified. To write to the on-board register, simply
    write a byte to the TCA9548A’s address on the I²C bus.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: TCA9548A 可以响应范围在 0x70 到 0x77 的 I²C 地址。该芯片有三条地址线（A0、A1 和 A2），可以将其连接到 Gnd 或 Vcc
    来选择地址（TCA9548A 使用 A0、A1 和 A2 作为地址的低 3 位）。本章一般假设 TCA9548A 配置为地址 0x70，除非另有说明。要写入板载寄存器，只需在
    I²C 总线上的 TCA9548A 地址写入一个字节。
- en: 'In addition to the three address lines and the main (upstream) SDA and SCL
    lines, the TCA9548A has one other important input: reset. Briefly pulling the
    reset line low will reset the device (writing a 0 to the internal register). The
    datasheet claims that you can use this line to recover from a bus fault condition.
    Generally, you would connect this reset line to a digital I/O pin on your CPU
    or simply tie it high (typically through a 10-kΩ pullup resistor).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 除了三条地址线和主（上游）SDA 和 SCL 线外，TCA9548A 还有一个重要的输入：复位。短时间拉低复位线将复位设备（向内部寄存器写入 0）。数据手册声称，你可以使用此线从总线故障条件中恢复。通常，你会将此复位线连接到
    CPU 的数字 I/O 引脚，或者简单地将其拉高（通常通过 10kΩ 的上拉电阻）。
- en: 12.1.4 The TCA9548A Power Supply, Pullups, and Level Shifting
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 12.1.4 TCA9548A电源、上拉电阻和电平转换
- en: The TCA9548A operates off any voltage in the range 1.65 V to 5.0 V, so it works
    with 1.8-V, 2.5-V, 3.3-V, or 5-V logic. All the pins are 5-V tolerant regardless
    of the power supply voltage, meaning you can use the TCA9548A as an I²C level
    shifter.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: TCA9548A可以在1.65 V到5.0 V的电压范围内工作，因此它可以与1.8 V、2.5 V、3.3 V或5 V逻辑兼容。所有引脚都可以容忍5 V电压，无论电源电压如何，这意味着你可以将TCA9548A用作I²C电平转换器。
- en: Because the I²C bus is open drain, the actual voltage appearing on the SDA and
    SCL lines is determined by the pullup resistor connection for both upstream and
    downstream signals. If you have a 3.3-V system, then SDA and SCL (upstream) will
    likely be pulled up to 3.3 V. To be safe, you’d probably run the TCA8845A at 3.3
    V as well. However, you can switch to a downstream channel (say, SD3 and SC3)
    and connect it to a 5-V device with 5-V pullup resistors on that downstream bus.
    The SD3 and SC3 pins on the TCA9548A will handle the 5-V signal just fine, without
    passing this voltage on to the controller device running at 3.3 V.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于I²C总线是开漏的，SDA和SCL线上实际的电压取决于上游和下游信号的上拉电阻连接。如果你有一个3.3 V系统，那么SDA和SCL（上游）可能会被上拉到3.3
    V。为了安全起见，你可能会将TCA8845A也运行在3.3 V下。然而，你可以切换到下游通道（例如，SD3和SC3），并将其连接到一个5 V设备，通过在该下游总线上的5
    V上拉电阻来实现。TCA9548A上的SD3和SC3引脚将能够正常处理5 V信号，而不会将此电压传递到运行在3.3 V的控制器设备上。
- en: Conversely, if your controller is running at 5 V and you power the TCA9548A
    at 5 V, you can connect one of the downstream channels to a 3.3-V system by simply
    using pullups to 3.3 V on that channel’s lines.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，如果你的控制器运行在5 V，并且你为TCA9548A提供5 V电源，你可以通过简单地在该通道的线路上使用上拉电阻将下游通道连接到3.3 V系统。
- en: 12.1.5 Reducing Bus Loading and Bus Speed
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 12.1.5 降低总线负载和总线速度
- en: In addition to acting as a level shifter, the TCA9548A can reduce (capacitive)
    loading on the I²C bus. Suppose you have a dozen devices on an I²C bus and the
    loading is forcing you to run at 100 kHz instead of 400 kHz. You can use a TCA9548A
    to spread out those 12 devices across 8 or 9 buses, including the original upstream
    bus, to reduce capacitive loading. Even if there are no address conflicts, the
    TCA9548A is useful in this capacity.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 除了作为电平转换器外，TCA9548A还可以减少（电容性）I²C总线的负载。假设你有12个设备在I²C总线上，并且负载迫使你以100 kHz的速度而不是400
    kHz的速度运行。你可以使用TCA9548A将这12个设备分布到8或9个总线上，包括原始上游总线，从而减少电容负载。即使没有地址冲突，TCA9548A在这种情况下也是有用的。
- en: The TCA9548A, by the way, can operate at normal (100 kHz) or fast (400 kHz)
    speed. It does not operate at fast mode plus (1 MHz) or faster.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，TCA9548A可以在正常（100 kHz）或快速（400 kHz）速度下工作。它不能在快速模式加（1 MHz）或更高速度下工作。
- en: 12.1.6 Switching Between Buses
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 12.1.6 总线之间的切换
- en: 'As I mentioned earlier, you activate a downstream bus by writing a 1 to the
    corresponding bit position in the TCA9548A register (and 0s to all the other bit
    positions). If you have three devices on downstream buses (SD0, SC0), (SD1, SC1),
    and (SD2, SC2) and you want to send data to each of these devices, use this process:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我之前提到的，通过在TCA9548A寄存器中向对应的比特位置写入1（并将所有其他比特位置写为0），你可以激活一个下游总线。如果你有三个下游设备（SD0,
    SC0）、（SD1, SC1）和（SD2, SC2），并且你想将数据发送到这些设备中的每一个，可以使用以下过程：
- en: Write 0x01 (0b0000_0001) to the TCA9548A at address 0x70.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写入0x01（0b0000_0001）到地址0x70的TCA9548A。
- en: Write the data to the device on (SD0, SC0) by simply writing to SDA and SCL
    as though it were an upstream device.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过简单地像处理上游设备一样向SDA和SCL写入数据，将数据写入（SD0, SC0）上的设备。
- en: Write 0x02 (0b0000_0010) to the TCA9548A to activate (SD1, SC1).
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写入0x02（0b0000_0010）到TCA9548A以激活（SD1, SC1）。
- en: Write to the second device on (SD1, SC1), just treating it as if it were an
    upstream device.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写入第二个设备（SD1, SC1），就像它是一个上游设备一样进行处理。
- en: Write 0x04 (0b0000_0100) to the TCA9548A to activate (SD2, SC2).
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写入0x04（0b0000_0100）到TCA9548A以激活（SD2, SC2）。
- en: Write to the third device on (SD2, SC2), just treating it as if it were an upstream
    device.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写入第三个设备（SD2, SC2），就像它是一个上游设备一样进行处理。
- en: (optional) Write 0x0 to the TCA9548A to disable all downstream buses.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: （可选）写入0x0到TCA9548A以禁用所有下游总线。
- en: As noted earlier, no upstream devices at any I²C address should appear on a
    downstream bus. That would create a conflict between the device on the upstream
    and downstream buses.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前所述，任何I²C地址上的上游设备不应出现在下游总线上。那样会在上游和下游总线的设备之间产生冲突。
- en: 12.1.7 Cascading TCA9548A Multiplexers
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 12.1.7 级联TCA9548A多路复用器
- en: Because the TCA9548A has three address lines, you can place up to eight of them
    on the same I²C bus. This gives you access to 64 (roughly) independent I²C buses
    driving from the same pair of SDA and SCL lines on the controller; that’s 112
    × 64 = 7,168 independent addresses. If this isn’t sufficient, you can cascade
    the multiplexers. Each downstream level needs a unique address, within a given
    level (that is, all TCA9548A devices connected to the outputs of the same TCA9548A
    can have the same address). In [Figure 12-2](#figure12-2), for example, the top
    TCA9548A could have address 0x70, the light gray ones could have address 0x71,
    and the dark gray ones could all have address 0x72.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 因为TCA9548A有三个地址线，你可以将最多八个TCA9548A设备连接到同一个I²C总线上。这样，你就可以通过控制器上的一对SDA和SCL线访问大约64个独立的I²C总线；即112
    × 64 = 7,168个独立地址。如果这还不够，你可以级联多路复用器。每一级下游都需要一个唯一的地址，在同一级别内（也就是说，所有连接到同一个TCA9548A输出端的TCA9548A设备可以使用相同的地址）。例如，在[图12-2](#figure12-2)中，最上面的TCA9548A可以使用地址0x70，浅灰色的TCA9548A可以使用地址0x71，深灰色的TCA9548A则都可以使用地址0x72。
- en: To write to a device connected to the rightmost TCA9548A in [Figure 12-2](#figure12-2)
    (assuming channels from left to right are numbered 0 to 7), you’d start by writing
    0x80 (0b1000_0000) to the TCA9548A at address 0x70 (the one connected directly
    to the controller). You would then write 0x80 to address 0x71 (corresponding to
    the rightmost light gray TCA9548A) and finally select the bus you wanted on the
    rightmost dark gray TCA9548A by writing the bus setting to address 0x72\.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要写入连接到[图12-2](#figure12-2)中最右侧TCA9548A的设备（假设从左到右的通道编号为0到7），你需要首先向地址0x70（直接连接到控制器的TCA9548A）写入0x80（0b1000_0000）。然后，你需要向地址0x71（对应最右侧浅灰色TCA9548A）写入0x80，最后通过向地址0x72写入总线设置来选择你想要的右侧深灰色TCA9548A总线。
- en: In practice, cascading TCA9548A devices in this manner is likely to create all
    types of timing and loading problems, so I wouldn’t recommend it. The only good
    reason to cascade multiplexers would be because you need more than eight buses
    and there’s only one open address in the range 0x70 through 0x77 on your upstream
    bus.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际操作中，以这种方式级联TCA9548A设备可能会产生各种定时和负载问题，所以我不推荐这么做。唯一值得级联多路复用器的理由是你需要超过八个总线，而在上游总线的0x70到0x77范围内只有一个空闲地址。
- en: '![](image_fi/502468c12/f12002.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502468c12/f12002.png)'
- en: 'Figure 12-2: Cascading TCA9548A multiplexers'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图12-2：级联TCA9548A多路复用器
- en: Because the TCA9548A is a surface mount device (SMD), it’s a bit difficult to
    wire into a typical breadboard or prototype circuit. Fortunately, Adafruit, SparkFun,
    and other manufacturers provide breakout boards that make these devices easy to
    use. The following sections describe these breakout boards.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 由于TCA9548A是表面贴装设备（SMD），它有点难以接入典型的面包板或原型电路。幸运的是，Adafruit、SparkFun和其他制造商提供了可以方便使用这些设备的分线板。接下来的章节将描述这些分线板。
- en: 12.2 The Adafruit TCA9548A I²C Expander
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12.2 Adafruit TCA9548A I²C扩展器
- en: The Adafruit TCA9548A I²C Expander is a traditional breakout board, containing
    a single TCA9548A with the pins brought out on 0.1-inch centers (see the smaller
    breakout board in [Figure 12-3](#figure12-3)). It also provides a bypass capacitor;
    pullup resistors for SDA, SCL, and reset; and three pulldown resistors that pull
    A0, A1, and A2 to Gnd so the device defaults to address 0x70\. There are solder
    jumpers on the back of the PCB so you can cut the pullup resistors to SDA and
    SCL (in case you’ve already got pullups on the upstream bus) and also set the
    address.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Adafruit TCA9548A I²C扩展器是一个传统的分线板，包含一个单独的TCA9548A，其引脚被带出并排布在0.1英寸的中心间距（请参见[图12-3](#figure12-3)中的较小分线板）。它还提供了一个旁路电容；为SDA、SCL和复位引脚提供上拉电阻；以及三个下拉电阻，将A0、A1和A2拉到地，从而使设备的默认地址为0x70。PCB背面有焊接跳线，可以切断SDA和SCL的上拉电阻（以防你在上游总线上已经有了上拉电阻），并且可以设置地址。
- en: The Adafruit breakout board does not put pullup resistors on the downstream
    buses. Many breakout boards such as those from Adafruit and SparkFun include pullup
    resistors, so they wouldn’t be necessary on the TCA9548A I²C Expander. Even more
    importantly, if you want to use this board as a level shifter, you want to be
    able to control what voltage the pullup resistors connect to. However, don’t forget
    that if you connect some I²C IC directly to a downstream bus, you have to add
    the pullup resistors yourself.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Adafruit的拓展板没有在下游总线上放置上拉电阻。许多拓展板（如Adafruit和SparkFun的板）都包含上拉电阻，因此在TCA9548A I²C扩展器上不需要额外的上拉电阻。更重要的是，如果你想将此板用作电平转换器，你需要能够控制上拉电阻连接的电压。然而，别忘了，如果你将某些I²C集成电路直接连接到下游总线，你必须自己添加上拉电阻。
- en: '![](image_fi/502468c12/f12003.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502468c12/f12003.png)'
- en: 'Figure 12-3: The SparkFun I²C Mux and Adafruit TCA9548A I²C Expander'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图12-3：SparkFun I²C Mux和Adafruit TCA9548A I²C扩展器
- en: 12.3 The SparkFun I²C Mux
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12.3 SparkFun I²C Mux
- en: 'SparkFun’s I²C Mux device (see [Figure 12-3](#figure12-3)) is handy if you
    work with Qwiic devices: it accepts an upstream Qwiic connector, routes it through
    the board if you want to connect other upstream devices, and then provides the
    eight downstream buses on Qwiic connectors.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: SparkFun的I²C Mux设备（参见[图12-3](#figure12-3)）对于使用Qwiic设备的人非常方便：它接受一个上游Qwiic连接器，如果你想连接其他上游设备，它会将信号通过板子路由，然后通过Qwiic连接器提供八个下游总线。
- en: There are some major differences between the SparkFun implementation and the
    Adafruit TCA9548A I²C Expander. First, because it’s Qwiic based, the SparkFun
    expander is largely a 3.3-V device only (though see the next note). The SparkFun
    board provides pullup resistors for downstream and upstream buses at 3.3 V; you
    can remove the upstream pullups by cutting some traces, but you don’t have this
    option with the pullups on the downstream buses.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: SparkFun实现和Adafruit TCA9548A I²C扩展器之间有一些主要区别。首先，由于它基于Qwiic，SparkFun扩展器基本上是一个3.3V设备（尽管请参见下一个注释）。SparkFun板为下游和上游总线提供3.3V的上拉电阻；你可以通过切断某些线路去除上游的上拉电阻，但下游总线上的上拉电阻没有这个选项。
- en: The second major difference between the SparkFun and Adafruit boards is size.
    Because the SparkFun board includes 10 Qwiic connectors (2 for the upstream bus,
    8 for the downstream buses), the board is quite a bit larger than the Adafruit
    device (see [Figure 12-3](#figure12-3)).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: SparkFun和Adafruit板的第二个主要区别是尺寸。由于SparkFun板包括10个Qwiic连接器（2个用于上游总线，8个用于下游总线），因此该板比Adafruit设备大得多（参见[图12-3](#figure12-3)）。
- en: Beyond these issues, the functionality of the SparkFun and Adafruit boards is
    exactly the same. Personally, if I were using Qwiic system parts, I’d use the
    SparkFun board; otherwise, I’d probably use the Adafruit board.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些问题，SparkFun和Adafruit板的功能完全相同。就个人而言，如果我使用Qwiic系统部件，我会选择SparkFun板；否则，我可能会使用Adafruit板。
- en: 12.4 Chapter Summary
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12.4 本章总结
- en: 'This chapter discussed three different I²C multiplexers: the TCA9543A, TCA9545A,
    and TCA9548A. These ICs allow you to expand a single I²C bus to two, four, or
    eight independent buses. This chapter discussed making device connections (upstream
    and downstream) to the multiplexers, programming the multiplexer, and connecting
    the multiplexer to an I²C bus. It also described how to use the TCA9548A as a
    level shifter and commented on the operating frequency of the device. This chapter
    concluded the generic discussion of the TCA9548A by describing how to cascade
    devices to support more than eight additional I²C buses.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论了三种不同的I²C多路复用器：TCA9543A、TCA9545A和TCA9548A。这些集成电路允许你将单个I²C总线扩展为两个、四个或八个独立的总线。本章讨论了如何将设备连接到多路复用器（上游和下游），如何编程多路复用器，以及如何将多路复用器连接到I²C总线。还介绍了如何将TCA9548A用作电平转换器，并评论了设备的工作频率。本章通过描述如何级联设备以支持超过八个额外的I²C总线，结束了TCA9548A的通用讨论。
- en: Finally, this chapter described two breakout boards manufactured by Adafruit
    and SparkFun. The Adafruit I²C Expander board is a traditional breakout board,
    bringing out the pins on a TCA9548A IC to 0.1-inch–centered pins on a small PCB.
    The SparkFun I²C Mux provides eight Qwiic connectors (rather than pins) for expanding
    the bus.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，本章介绍了由Adafruit和SparkFun制造的两个拓展板。Adafruit的I²C扩展板是一个传统的拓展板，将TCA9548A芯片的引脚引出到小型PCB上的0.1英寸间距引脚。SparkFun的I²C
    Mux提供了八个Qwiic连接器（而非引脚）用于扩展总线。
