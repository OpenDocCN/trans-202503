- en: '18'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '18'
- en: Bitmaps
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 位图
- en: Most vector images start or end (often both) their lives as bitmaps ([1.1](c01.xhtml#section1.1)),
    and Inkscape's SVG documents are no exception. Many vector drawings, artistic
    as well as technical, are developed from tracings of photos, scans, or other bitmap
    drawings; at the other end of their lifetimes, almost all vector pieces are exported
    into bitmap formats for viewing in software that cannot deal directly with vectors.
    Bitmaps are an important object type in Inkscape, and the techniques for dealing
    with them are sufficiently complex and interesting to devote an entire chapter
    to them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数矢量图像在其生命周期的开始或结束时（通常是两者）都是位图形式（[1.1](c01.xhtml#section1.1)），Inkscape 的 SVG
    文档也不例外。许多矢量绘图，无论是艺术性的还是技术性的，都是通过照片、扫描或其他位图图像的描摹而开发的；而在它们生命周期的另一端，几乎所有的矢量图形都会导出为位图格式，以便在无法直接处理矢量的程序中查看。位图是
    Inkscape 中重要的对象类型，处理位图的技巧足够复杂和有趣，值得专门用一章来讲解。
- en: 18.1 Bitmap as Object
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 18.1 位图作为对象
- en: If you have a bitmap image file, insert it into your Inkscape document with
    the File ▶ Import command. You can also File ▶ Open any bitmap file as a document
    in its own right. In this case, Inkscape automatically creates a new SVG document,
    its page size ([3.5.2](c03.xhtml#section3.5.2)) matching the pixel size of the
    bitmap, and places the bitmap on the canvas (into the document root—that is, not
    in any layer). You can now add other objects to that document and save it as SVG
    (if you want to get a bitmap with the result, you need to export it, [18.6](#section18.6)),
    or you can copy and paste the bitmap object from that document into any other.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个位图图像文件，可以通过文件 ▶ 导入命令将其插入到 Inkscape 文档中。你也可以通过文件 ▶ 打开命令将任何位图文件作为独立文档打开。在这种情况下，Inkscape
    会自动创建一个新的 SVG 文档，页面大小（[3.5.2](c03.xhtml#section3.5.2)）与位图的像素大小匹配，并将位图放置到画布上（进入文档根目录——也就是不在任何图层中）。此时，你可以向该文档添加其他对象并保存为
    SVG（如果你想得到包含结果的位图，你需要导出它，[18.6](#section18.6)），或者你也可以将位图对象从该文档复制并粘贴到任何其他文档中。
- en: '[1.1]'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[1.1]'
- en: Inkscape can read a large number of bitmap formats, including all of the major
    ones (PNG, JPG, TIFF, GIF, BMP, but it can't (yet) read the relatively new WebP
    even though it can export it). Choose**All Bitmaps** in the **Import** dialog
    to see only the files in supported bitmap formats. Past versions of Inkscape failed
    when trying to open bitmaps larger than several thousands pixels in one of the
    dimensions; now you won't have problems with images measuring tens of thousands
    of pixels (if your computer has enough RAM).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Inkscape 可以读取多种位图格式，包括所有主流格式（PNG、JPG、TIFF、GIF、BMP），但它尚不能读取相对较新的 WebP 格式，尽管它可以导出
    WebP 格式。选择**所有位图**选项，在**导入**对话框中只显示支持的位图格式文件。Inkscape 的早期版本在尝试打开大于几千像素的位图时会失败；现在，如果你的计算机有足够的内存，处理几万像素的图像将不会有问题。
- en: Whether opened or imported, what you end up with in your document is a *bitmap
    object* ([Figure 18-1](#fig18-1)). In most aspects, this is a regular object that
    you can transform, duplicate, clone, apply filters to, and so on. In the status
    bar, it is described asImage with its pixel size, for example 640 × 480. The pixel
    size of a bitmap is simply how many pixels it has horizontally and vertically;
    this is not the same as the size of the bitmap object on your canvas—you can scale
    it to any size in your SVG, but the intrinsic pixel size of the bitmap never changes.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是打开还是导入，最终在文档中呈现的是一个*位图对象*（[图 18-1](#fig18-1)）。在大多数方面，这是一个普通的对象，你可以对其进行变换、复制、克隆、应用滤镜等等。在状态栏中，它被描述为图像，并显示其像素大小，例如
    640 × 480。位图的像素大小仅仅是它在水平和垂直方向上的像素数量；这与位图对象在画布上的大小不同——你可以在 SVG 中将其缩放到任何尺寸，但位图的固有像素大小始终不变。
- en: '![](20/bi-example.svg.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-example.svg.png)'
- en: 'Figure 18-1: A bitmap object in a document'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-1：文档中的位图对象
- en: 18.2 Bitmap Import Options
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 18.2 位图导入选项
- en: '[Figure 18-2](#fig18-2) shows the dialog you see when you open or import a
    bitmap into Inkscape.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 18-2](#fig18-2) 显示了你在打开或导入位图到 Inkscape 时看到的对话框。'
- en: '![](20/bi-import-dialog.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-import-dialog.png)'
- en: 'Figure 18-2: Importing a bitmap from a file'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-2：从文件导入位图
- en: 18.2.1 Linking vs. Embedding
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 18.2.1 链接与嵌入
- en: The first choice you face with a bitmap is whether to *embed* it or *link* to
    it. By default, any bitmap you import into Inkscape is linked to the document—that
    means the actual content of the bitmap is always taken from the original bitmap
    file. The SVG document contains just a reference to that file—its filename and
    path relative to the location of the SVG file. The status bar description of a
    linked bitmap object reports its filename (inkscape.ico in [Figure 18-1](#fig18-1)).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理位图时，您首先面临的选择是是否*嵌入*位图或*链接*到它。默认情况下，您导入到 Inkscape 中的任何位图都是链接到文档的——这意味着位图的实际内容始终来自原始位图文件。SVG
    文档仅包含该文件的引用——它的文件名和相对于 SVG 文件位置的路径。链接位图对象在状态栏中显示其文件名（如 [图 18-1](#fig18-1) 中的 inkscape.ico）。
- en: This way, the SVG file size is kept to a minimum, and multiple SVG documents
    can reuse the same bitmap file. This also means that any changes made to that
    linked bitmap file outside Inkscape will be reflected in the Inkscape document
    immediately. Moreover, you can run an external editor (such as GIMP or Photoshop)
    on your linked image from inside Inkscape by right-clicking the bitmap object
    and choosing Edit externally.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，SVG 文件的大小得以保持最小，并且多个 SVG 文档可以重用相同的位图文件。这也意味着，您对该链接位图文件在 Inkscape 外部所做的任何更改都会立即反映在
    Inkscape 文档中。此外，您可以通过右键点击位图对象并选择“外部编辑”来在 Inkscape 内部使用外部编辑器（如 GIMP 或 Photoshop）编辑链接的图像。
- en: On the Imported Images page of Preferences ([3.1.1](c03.xhtml#section3.1.1)),
    you can uncheck Automatically reload images to disable the updating of imported
    bitmaps. It is also where you can choose which Bitmap editor you want to use to
    edit them via Edit externally (browse to select an executable file).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在“偏好设置”的“导入图像”页面（[3.1.1](c03.xhtml#section3.1.1)）中，您可以取消勾选“自动重新加载图像”选项，以禁用导入位图的更新。您还可以选择通过“外部编辑”（浏览选择可执行文件）来选择使用哪个位图编辑器进行编辑。
- en: The biggest disadvantage of linked bitmaps is in how easy it is to disrupt this
    link. If the bitmap file is deleted or moved to a different location relative
    to the SVG document, the result is not pretty, as [Figure 18-3](#fig18-3) demonstrates.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 链接位图的最大缺点是链接容易被破坏。如果位图文件被删除或相对于 SVG 文档移动到其他位置，结果就不太好，如 [图 18-3](#fig18-3) 所示。
- en: '![](20/bi-broken.svg.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-broken.svg.png)'
- en: 'Figure 18-3: What Inkscape shows when it cannot find a linked bitmap file'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-3：Inkscape 在无法找到链接的位图文件时的显示效果
- en: This is a common problem when you send your art to someone but forget to include
    the linked images.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个常见问题，尤其是当您将艺术作品发送给他人时，却忘记包括链接的图像。
- en: What matters for Inkscape is the relative location of the bitmap, because in
    the `xlink:href` attribute of the `svg:image` object, it stores the relative path
    from the SVG document location to the image file. For example, if the bitmap is
    in the images subfolder of the folder in which your SVG document resides, you
    can move that folder along with its images subfolder to a different location without
    a problem.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对 Inkscape 来说，重要的是位图的相对位置，因为在 `svg:image` 对象的 `xlink:href` 属性中，它存储的是从 SVG 文档位置到图像文件的相对路径。例如，如果位图位于您的
    SVG 文档所在文件夹的 images 子文件夹中，您可以将该文件夹及其 images 子文件夹一起移动到不同的位置，而不会有问题。
- en: Inkscape can also store the *absolute path* to the image in the `sodipodi:absref`
    attribute; if that attribute is present, Inkscape will use it if the relative
    link in`xlink:href` fails. You can enable this behavior, disabled by default,
    with the Store absolute path for linked images checkbox on the Imported Images
    page of Preferences. Using `sodipodi:absref` will restore the images if you move
    the SVG document to another location on the same computer but leave the linked
    images behind; it won't help, however, if you move the images, or if you try to
    open the SVG on a different computer without its associated images.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Inkscape 还可以将图像的*绝对路径*存储在 `sodipodi:absref` 属性中；如果该属性存在，当 `xlink:href` 中的相对链接失效时，Inkscape
    会使用它。您可以通过在“偏好设置”的“导入图像”页面中勾选“为链接图像存储绝对路径”选项来启用此功能（默认情况下该选项为禁用）。使用 `sodipodi:absref`
    将在您将 SVG 文档移动到计算机上的其他位置，但留下链接图像时恢复图像；然而，如果您移动了图像，或者尝试在没有关联图像的不同计算机上打开 SVG 文件，这个方法则无效。
- en: 'To prevent any linking problems once and for all, *embed* your image into the
    SVG document by choosing the corresponding option during bitmap import ([Figure 18-2](#fig18-2)).
    The status bar description for such an image looks like Image 64 × 64: embedded.
    An embedded image is stored right inside the SVG file, so it will never be lost.
    On the downside, this increases the file size of the SVG file (by about 1.4 times
    the file size of the bitmap file, which may be significant). Also, embedded images
    cannot be edited in an external bitmap editor and cannot be shared by multiple
    SVGs.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了彻底防止任何链接问题，在位图导入时选择相应的选项将图像*嵌入*到 SVG 文档中（[图 18-2](#fig18-2)）。此类图像的状态栏描述类似“图像
    64 × 64：已嵌入”。嵌入图像被存储在 SVG 文件内部，因此永远不会丢失。缺点是，这会增加 SVG 文件的大小（大约是位图文件大小的 1.4 倍，这可能是一个显著的增加）。另外，嵌入的图像不能在外部位图编辑器中编辑，也不能被多个
    SVG 文件共享。
- en: If you imported an image as linked but now want to embed it, use **Extensions ▶ Images ▶ Embed
    Images**. You can apply this either to the selected bitmap object (leaving all
    others as they are) or to all bitmap objects in the document, as shown in [Figure 18-4](#fig18-4).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将图像导入为链接图像，但现在希望将其嵌入，使用**扩展 ▶ 图像 ▶ 嵌入图像**。你可以将此操作应用于选定的位图对象（保持其他对象不变），或者应用于文档中的所有位图对象，如[图
    18-4](#fig18-4)所示。
- en: '![](20/bi-embed.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-embed.png)'
- en: 'Figure 18-4: Extensions ▶ Images ▶ Embed Images embeds linked images into SVG.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-4：扩展 ▶ 图像 ▶ 嵌入图像将链接图像嵌入到 SVG 文件中。
- en: WithExtensions ▶ Images ▶ Extract Image, you can reverse this—extract the selected
    embedded image, or all embedded images in the document, into linked file(s). You
    will be asked for the path to save the extracted file, as [Figure 18-5](#fig18-5)
    demonstrates.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用扩展 ▶ 图像 ▶ 提取图像，你可以逆转这个过程——将选定的嵌入图像或文档中的所有嵌入图像提取为链接文件。你将被要求选择保存提取文件的路径，如[图
    18-5](#fig18-5)所示。
- en: '![](20/bi-extract.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-extract.png)'
- en: 'Figure 18-5: Extensions ▶ Images ▶ Extract Image converts embedded images to
    linked.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-5：扩展 ▶ 图像 ▶ 提取图像将嵌入的图像转换为链接图像。
- en: 18.2.2 Size on Import
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 18.2.2 导入时的大小
- en: What size does an image have when you open or import it?
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 打开或导入图像时，它的大小是多少？
- en: By its nature, a bitmap does not have a physical size measured in inches or
    centimeters. What it has is the *pixel size*—for example, 960 by 480 pixels. In
    addition to that, some bitmap formats specify the suggested *resolution*, also
    called the DPI (for *dots per inch*, a historic term meaning the same as pixels
    per inch). For example, if an image of 960 by 480 pixels has the resolution of
    96 dpi, then it is supposed to be displayed in a space of 10 by 5 inches. For
    Inkscape, which is a vector application, this is no more than a suggestion—it
    treats the pixels of a bitmap as vector shapes that can be scaled to any size.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其本质，位图没有以英寸或厘米为单位的物理大小。它所拥有的是*像素大小*——例如，960 × 480 像素。除此之外，一些位图格式会指定建议的*分辨率*，也叫做
    DPI（*每英寸点数*，这是一个历史术语，意味着与每英寸像素数相同）。例如，如果一个 960 × 480 像素的图像具有 96 dpi 的分辨率，那么它应该显示在
    10 × 5 英寸的空间中。对于 Inkscape 这样一个矢量应用程序来说，这不过是一个建议——它将位图的像素视为可以缩放到任意大小的矢量形状。
- en: '[1.1]'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[1.1]'
- en: Not all bitmap formats can specify DPI, and not all images have a meaningful
    DPI value. Still, by default Inkscape uses the image's DPI when it's available
    to calculate the *initial* size of the bitmap object on canvas. Otherwise, it
    uses the Default import resolution (on the Imported Images page of Preferences),
    which is 96 dpi. At this resolution, the size of each pixel square is exactly
    1×1 px ([A.6](b01.xhtml#sectionA.6)). You can force Inkscape to use the same resolution
    for all imported images, disregarding their own DPI, by turning on the Override
    file resolution checkbox.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有位图格式都能指定 DPI，也并非所有图像都有一个有意义的 DPI 值。尽管如此，默认情况下，Inkscape 在可用时会使用图像的 DPI 来计算画布上位图对象的*初始*大小。否则，它会使用默认的导入分辨率（在“首选项”中的“导入图像”页面上），该分辨率为
    96 dpi。在这个分辨率下，每个像素方块的大小恰好是 1×1 px（[A.6](b01.xhtml#sectionA.6)）。你可以通过启用“覆盖文件分辨率”复选框，强制
    Inkscape 对所有导入的图像使用相同的分辨率，而不考虑它们自己的 DPI。
- en: 18.2.3 Rendering Options [1.1]
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 18.2.3 渲染选项 [1.1]
- en: Bitmaps consist of pixels ([1.1](c01.xhtml#section1.1)), which, to Inkscape,
    are little different from flat-color rectangles that get scaled, rotated, or skewed
    when you transform the image. If you zoom in close enough, you can even make out
    those individual pixels—but only barely, because by default Inkscape tries to
    smooth them out. If you dislike it, you can turn this smoothing off, when you
    import an image, by setting the Image Rendering Mode ([Figure 18-2](#fig18-2))
    to Blocky (optimizeSpeed). The default None (auto) and Smooth (optimizeQuality)
    are currently the same, and both smooth out pixels at high zoom levels, as shown
    in [Figure 18-6](#fig18-6).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 位图由像素组成（[1.1](c01.xhtml#section1.1)），对 Inkscape 来说，它们与平面颜色的矩形没有太大区别，这些矩形在转换图像时会被缩放、旋转或倾斜。如果你放大足够，你甚至可以分辨出这些单独的像素——但这只是勉强可见，因为默认情况下，Inkscape
    会尝试平滑它们。如果你不喜欢这个效果，可以在导入图像时通过将图像渲染模式（[图 18-2](#fig18-2)）设置为“块状”（优化速度）来关闭平滑。默认的“无”（自动）和“平滑”（优化质量）当前是相同的，都会在高倍放大时平滑像素，如[图
    18-6](#fig18-6)所示。
- en: '![](20/bi-rendering.svg.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-rendering.svg.png)'
- en: 'Figure 18-6: Image rendering options'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-6：图像渲染选项
- en: It makes sense to use Blocky, for example, when you work with pixel art where
    the position of each individual pixel matters. It is also preferable for large
    images that are not going to be zoomed into—for them, the jaggedness of individual
    pixels will never be seen, but the Blocky option results in slightly faster rendering.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在处理像素艺术时使用“块状”是合理的，因为每个像素的位置非常重要。当你处理不打算进行放大的大图像时，它也是首选——对于这些图像，个别像素的锯齿状不会被看到，但“块状”选项会导致稍微更快的渲染。
- en: If you have one or more images imported with wrong settings that you need to
    change, use the**Extensions ▶ Images ▶ Set Image Attributes** extension. Its Render
    images blocky option can apply to all images in the document or only to selected
    images.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你导入了一个或多个设置错误的图像，需要更改它们，可以使用**扩展 ▶ 图像 ▶ 设置图像属性**扩展。它的“渲染图像为块状”选项可以应用于文档中的所有图像或仅应用于选定的图像。
- en: 18.3 Clipping and Masking
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 18.3 剪切和蒙版
- en: Usually, the first thing you'll want to do to an imported bitmap is*crop* it,
    removing the unnecessary margins and leaving only part of the image. Inkscape
    provides several ways to achieve this.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你首先想要对导入的位图进行*裁剪*，去除不必要的边距，只保留图像的一部分。Inkscape 提供了几种方法来实现这一点。
- en: All techniques in this section are shown for bitmap objects—because that's what
    they are most often used for—but you can apply them to any kind of object, including
    groups or layers (which, as you remember, are just a special kind of groups).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中的所有技术展示的是针对位图对象的——因为它们最常用于位图对象——但你也可以将它们应用于任何类型的对象，包括组或图层（正如你记得的，它们只是特殊类型的组）。
- en: 18.3.1 Clipping
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 18.3.1 剪切
- en: Inkscape allows any object to be *clipped* by a path, so that only part of the
    object inside that path will be visible. To determine which points are inside
    and which are outside, the same rules are used as for filling ([12.1.2](c12.xhtml#section12.1.2)).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Inkscape 允许任何对象被路径*剪切*，使得只有该路径内部的部分对象可见。为了确定哪些点在内部，哪些在外部，使用的规则与填充相同（[12.1.2](c12.xhtml#section12.1.2)）。
- en: Starting from a bitmap object, draw a clipping path or shape over it using any
    convenient tool, such as the Rectangle or Pen. Then, select both the bitmap and
    the path/shape and choose Object ▶ Clip ▶ Set. The clipping path disappears (it
    now resides in `defs`, [A.4](b01.xhtml#sectionA.4)), but the bottom object is
    now clipped by it. To edit the clipping path (via its nodes or shape handles)
    without unclipping, click the corresponding toggle in the Node tool's controls
    bar, as shown in [Figure 18-7](#fig18-7).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个位图对象开始，使用任何方便的工具，如矩形工具或铅笔工具，在其上绘制一个剪切路径或形状。然后，选择位图和路径/形状，选择对象 ▶ 剪切 ▶ 设置。剪切路径消失（它现在位于
    `defs` 中，[A.4](b01.xhtml#sectionA.4)），但底部对象现在被该路径剪切。要编辑剪切路径（通过其节点或形状句柄）而不解除剪切，请单击节点工具控制栏中的相应切换，如[图
    18-7](#fig18-7)所示。
- en: '![](20/bi-clip.svg.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-clip.svg.png)'
- en: 'Figure 18-7: Applying clipping to a bitmap object'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-7：应用剪切到位图对象
- en: At any time, you can do Object ▶ Clip ▶ Release to remove the clipping and get
    the object and its clipping path as two separate objects again.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 随时，你都可以执行对象 ▶ 剪切 ▶ 释放，以去除剪切并将对象及其剪切路径恢复为两个独立的对象。
- en: The clipping path can be a group of paths or shapes, not a single path or shape.
    It makes more practical sense, however, to have a group as the clip target, not
    as the clipping path. When you clip a group, you can always enter it ([4.9.1](c04.xhtml#section4.9.1))
    and work inside, adding more objects, moving them around, or perhaps replacing
    the original object you intended to clip with a different one—all without releasing
    the clip. That's why I recommend, even if you have a single bitmap you want to
    crop, to group it first with itself and then clip that group, not the bare bitmap.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 裁剪路径可以是路径或形状的组，而不是单一的路径或形状。然而，更实用的做法是将组作为裁剪目标，而不是裁剪路径。当你裁剪一个组时，你总是可以进入该组（[4.9.1](c04.xhtml#section4.9.1)），在其中工作，添加更多对象，移动它们，或者可能用不同的对象替换你原本想要裁剪的对象——这一切都可以在不释放裁剪的情况下完成。这就是为什么我建议，即使你只有一个想要裁剪的位图，也先将其与自己组合成一个组，再裁剪这个组，而不是直接裁剪裸位图。
- en: 18.3.2 Masking
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 18.3.2 蒙版
- en: 'Masking is similar to clipping. You select the object and the mask and chooseObject ▶ Mask ▶ Set
    to mask it, or Object ▶ Mask ▶ Release to remove the mask. However, with clipping,
    an object is limited to the interior of the clipping path; any properties of the
    clip, such as opacity, fill color, stroke, or blur, have no effect on clipping.
    Clipping is *binary*: at any point, the clipped object is either visible or not.
    Masking, on the other hand, is *gradual*—it may make an object *partially* transparent.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 蒙版与裁剪类似。你选择对象和蒙版，然后选择对象 ▶ 蒙版 ▶ 设置来进行蒙版，或对象 ▶ 蒙版 ▶ 释放来移除蒙版。然而，在裁剪中，对象被限制在裁剪路径的内部；裁剪的任何属性，如不透明度、填充颜色、描边或模糊，对裁剪没有影响。裁剪是*二元*的：在任何时刻，被裁剪的对象要么是可见的，要么是不可见的。而蒙版则是*渐变*的——它可能使对象*部分*透明。
- en: 'Here''s the rule to remember: in a mask, *black* makes the masked object*transparent*
    (invisible), and *white* makes it *opaque* (visible). A 50 percent gray or 50-percent-opaque
    white makes the masked object semitransparent, but 50-percent-opaque black works
    just the same as fully opaque black (makes the object invisible). Any points not
    covered by the mask, or where the mask is 100 percent transparent, are not visible
    in the masked object. In other words, to make the object visible, the mask must
    have*visible lightness*: an opaque white mask gives 100 percent visibility, while
    anything darker or more transparent produces less than 100 percent visibility.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这个规则：在蒙版中，*黑色*使被蒙版的对象*透明*（不可见），而*白色*使其*不透明*（可见）。50% 灰色或50% 不透明的白色使被蒙版的对象半透明，而50%
    不透明的黑色与完全不透明的黑色效果相同（使对象不可见）。任何未被蒙版覆盖的区域，或者蒙版完全透明的地方，都不会在蒙版对象中显示。换句话说，要使对象可见，蒙版必须具有*可见的亮度*：不透明的白色蒙版提供100%的可见性，而任何较暗或更透明的部分则会降低可见性。
- en: Obviously, masking is most useful with gradients or blurring. For example, you
    can blend a photo strip with the background using a linear gradient mask, or feather
    the edges of a photo cutout using a blurred mask ([Figure 18-8](#fig18-8)).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，蒙版在渐变或模糊效果中最为有用。例如，你可以使用线性渐变蒙版将照片条与背景混合，或使用模糊蒙版对照片剪裁的边缘进行羽化处理（[图 18-8](#fig18-8)）。
- en: '![](20/bi-mask.svg.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-mask.svg.png)'
- en: 'Figure 18-8: Masking a bitmap object'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-8：蒙版位图对象
- en: The Node tool has another button for editing the mask of the selected object.
    However, this being the Node tool, that button only allows you to node-edit the
    single path or shape of the mask—you can't change its color, gradient, or blur;
    for this, you need to release the mask and set it again after changing.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 节点工具有一个按钮用于编辑选中对象的蒙版。然而，作为节点工具，该按钮仅允许你对蒙版的单一路径或形状进行节点编辑——你不能更改其颜色、渐变或模糊效果；对于这些，你需要释放蒙版并在更改后重新设置它。
- en: Just as with a clipping path, both a mask and a masked object can be groups.
    It makes sense to use masking on a group, even if it's a single-object group at
    first, because you can enter that group and work inside it without removing the
    mask.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 就像裁剪路径一样，蒙版和被蒙版的对象也可以是组。即使最初只是单一对象的组，使用蒙版也更有意义，因为你可以进入该组并在其中工作，而无需移除蒙版。
- en: 18.3.3 Bitmap as Pattern
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 18.3.3 位图作为图案
- en: If you want your imported bitmap to remain a rectangle and you only want to
    shave off some margins, you can turn it into a *pattern* ([10.8](c10.xhtml#section10.8))
    by pressing Alt-I. This does not change the visible display but converts a rectangular
    bitmap (it must not be rotated or skewed for this to work properly) into a rectangle
    object ([11.2](c11.xhtml#section11.2)) with a pattern fill displaying the bitmap.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望导入的位图保持矩形形状，只是想去掉一些边距，你可以通过按下 Alt-I 将其转变为*图案*（[10.8](c10.xhtml#section10.8)）。这不会改变可见显示，而是将一个矩形位图（为了确保正常工作，必须未旋转或未拉伸）转变为一个矩形对象（[11.2](c11.xhtml#section11.2)），并填充图案来显示该位图。
- en: This method is convenient because you can edit the shape or path and its bitmap
    fill at the same time ([Figure 18-9](#fig18-9)). If you resize the rectangle via
    its two corner handles—for example, with the Node or Rectangle tool ([11.2.1](c11.xhtml#section11.2.1))—it
    doesn’t affect the fill, which means you can crop it by moving the rectangle handles
    inward. At the same time, you can use the pattern's three handles to move, scale,
    and rotate the pattern, as described in[10.8.2](c10.xhtml#section10.8.2). (Initially,
    the pattern handles coincide with the rectangle handles; drag the X-shaped handle
    in the top-left corner to separate them.)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法很方便，因为你可以同时编辑形状或路径及其位图填充（[图 18-9](#fig18-9)）。如果你通过矩形的两个角手柄调整大小，例如，使用节点或矩形工具（[11.2.1](c11.xhtml#section11.2.1)），它不会影响填充，这意味着你可以通过将矩形手柄向内移动来裁剪它。同时，你可以使用图案的三个手柄来移动、缩放和旋转图案，具体请参见[10.8.2](c10.xhtml#section10.8.2)。（最初，图案手柄与矩形手柄重合；拖动左上角的X形手柄可以将它们分开。）
- en: '![](20/bi-pattern.svg.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-pattern.svg.png)'
- en: 'Figure 18-9: A bitmap as a pattern in a rectangle'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-9：矩形中的位图作为图案
- en: After you convert your bitmap to a patterned rectangle, you can convert it to
    path with Shift-Ctrl-C and node-edit the result, or intersect ([12.2](c12.xhtml#section12.2))
    the rectangle with another path. Transforming, by default, affects both the shape/path
    and its pattern fill; see [6.11](c06.xhtml#section6.11) for how to change that.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 将位图转换为图案矩形后，你可以按下 Shift-Ctrl-C 将其转换为路径，并进行节点编辑，或者将矩形与另一个路径相交（[12.2](c12.xhtml#section12.2)）。变换默认会影响形状/路径及其图案填充；有关如何更改这一点，请参见[6.11](c06.xhtml#section6.11)。
- en: 18.4 Retouching and Patching
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 18.4 修饰和修补
- en: Simple bitmap editing tasks, such as hiding defects or suppressing unnecessary
    details, are possible in Inkscape using its vector tools, without resorting to
    an external bitmap editor. While this approach is limited, it is often surprisingly
    useful and fast.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Inkscape 中，简单的位图编辑任务，例如隐藏缺陷或抑制不必要的细节，可以使用其向量工具完成，而无需求助于外部位图编辑器。虽然这种方法有限，但它通常非常有用且快速。
- en: Imagine you need to remove a small blemish in a photo. Start by zooming in closely
    and drawing a calligraphic stroke over it. Then, switch to the Dropper tool and
    pick a color from the photo nearby to assign it to the newly created path.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你需要去除照片中的小瑕疵。首先，放大并在其上绘制一个书法笔画。然后，切换到吸管工具，从照片中选择一个附近的颜色并将其赋给新创建的路径。
- en: 'In some cases, this may be all you really need—even such a primitive patch
    may blend well enough to become invisible once you zoom out. More likely, however,
    the edges of the patch will still be noticeable on at least one side. The next
    step is, therefore, a gradient: switch to the Gradient tool ([10.1](c10.xhtml#section10.1)),
    draw a linear or elliptic gradient trying to match the dominant direction of color
    change in the background, and use the Dropper tool again ([8.8](c08.xhtml#section8.8))
    to pick colors for the gradient stops. If the gradient fails to make the patch
    completely blend into the background, see if a little blurring can help, as shown
    in [Figure 18-10](#fig18-10).'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，这可能就是你真正需要的——即使如此简单的修补也可能足够融合，直到你缩小视图时它变得“不可见”。然而，更可能的是，修补的边缘至少在某一侧仍然可见。因此，下一步是使用渐变：切换到渐变工具（[10.1](c10.xhtml#section10.1)），绘制一个线性或椭圆渐变，尽量匹配背景中颜色变化的主导方向，并再次使用吸管工具（[8.8](c08.xhtml#section8.8)）选择渐变停靠点的颜色。如果渐变无法使修补完全与背景融合，请查看是否可以通过稍微模糊来帮助，如[图
    18-10](#fig18-10)所示。
- en: '![](20/bi-retouch.svg.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-retouch.svg.png)'
- en: 'Figure 18-10: Covering a small blemish on the cheek with a vector patch path,
    made "invisible" by gradient and blur'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-10：用向量修补路径覆盖脸颊上的小瑕疵，通过渐变和模糊处理使其“不可见”
- en: When these simple methods aren't good enough, try the new Mesh Gradient tool
    ([10.7](c10.xhtml#section10.7)) with automatic color picking for the mesh nodes
    ([10.7.5](c10.xhtml#section10.7.5)) to create a more complex or extensive patch.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当这些简单的方法不够好时，可以尝试使用新的网格渐变工具（[10.7](c10.xhtml#section10.7)），通过自动为网格节点选择颜色（[10.7.5](c10.xhtml#section10.7.5)）来创建更复杂或更广泛的补丁。
- en: When you're done retouching, don't forget to group the bitmap object with all
    its vector patches so the group can be moved as a single object.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 完成修整后，别忘了将位图对象与所有矢量补丁一起分组，这样整个组就可以作为一个单独的对象进行移动。
- en: 18.5 Tracing
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 18.5 描摹
- en: For a vector editor, two crucial bitmap-related capabilities are converting
    a bitmap to vector objects (*tracing*) and vice versa (*bitmap export*). Inkscape
    offers rich and powerful tools for these conversions, which the rest of this chapter
    explores in detail.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 对于矢量编辑器，两个与位图相关的重要功能是将位图转换为矢量对象（*描摹*）和反向操作（*位图导出*）。Inkscape 提供了丰富且强大的工具来进行这些转换，接下来的章节将详细探讨这些工具。
- en: 18.5.1 Manual Tracing
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 18.5.1 手动描摹
- en: One way of tracing a bitmap does not involve any tools other than those you
    already know. Just switch to the Pen tool ([14.1.1](c14.xhtml#section14.1.1)),
    zoom in on your bitmap, and do a series of clicks around or along an area that
    you want to turn into a vector path ([Figure 18-11](#fig18-11)). Use click-and-release
    in a sharp corner to create a cusp node; for smooth curved edges, make a series
    of short click-and-drags along the curved line. Vary the density of your clicks
    depending on how precisely you want to trace a specific area. Double-click, press
    Enter, or click the starting node to finish the path.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一种描摹位图的方法不涉及任何你不熟悉的工具。只需切换到钢笔工具（[14.1.1](c14.xhtml#section14.1.1)），放大位图，然后在你想转化为矢量路径的区域周围点击一系列的点（[图18-11](#fig18-11)）。在尖角处使用点击-释放来创建尖角节点；对于平滑的曲线边缘，在曲线的沿线做一系列短的点击-拖动。根据你想要描摹的具体区域的精确程度，调整点击的密度。双击、按回车键或点击起始节点来完成路径。
- en: '![](20/bi-manual.svg.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-manual.svg.png)'
- en: 'Figure 18-11: Tracing a bitmap manually using the Pen (in the default Bézier
    mode)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图18-11：使用钢笔手动描摹位图（在默认的贝塞尔模式下）
- en: For extra smoothness, you can trace in Spiro or BSpline modes ([14.1.4](c14.xhtml#section14.1.4));
    in those modes, any click creates a smooth node, and for a cusp node, do a Shift-click.
    Also, in the BSpline mode, remember to click not on the curve itself but a little
    outward on its curved side, so that the smooth path is inscribed into the polygon
    you create with your clicks. If you're tracing art without any curves at all,
    use the Straight lines mode so that an accidental drag does not create a smooth
    node you don't need.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更加平滑，你可以在 Spiro 或 BSpline 模式下描摹（[14.1.4](c14.xhtml#section14.1.4)）；在这些模式下，每次点击都会创建一个平滑的节点，想要创建尖角节点时，可以按住
    Shift 键进行点击。另外，在 BSpline 模式下，记住不要点击曲线本身，而是在曲线外侧稍微点击，这样平滑的路径会被刻入你通过点击创建的多边形中。如果你正在描摹没有任何曲线的艺术作品，可以使用直线模式，这样一个不小心的拖动就不会创建不需要的平滑节点。
- en: This technique may seem tedious and time-consuming at first, but once you get
    the hang of it, you will be able to trace complex art surprisingly quickly. Like
    any manual technique, its main advantage is the complete creative control—you
    decide what parts to trace and what to ignore, how to simplify complex shapes,
    where to diverge from the bitmap, and where to place each node. Depending on your
    skill, the result may look more satisfying than either an automatic trace or a
    completely manual drawing.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技巧乍一看可能显得乏味且耗时，但一旦掌握了它，你将能够令人惊讶地快速描摹复杂的艺术作品。像任何手动技巧一样，它的主要优点是完全的创造性控制——你决定要描摹哪些部分，忽略哪些部分，如何简化复杂的形状，在哪里偏离位图，在哪里放置每个节点。根据你的技能水平，最终效果可能比自动描摹或完全手工绘制的结果更加令人满意。
- en: 18.5.2 The Trace Bitmap Dialog
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 18.5.2 位图描摹对话框
- en: Inkscape's tool for automatic bitmap tracing, based on the stand-alone Potrace
    open source tracer ([http://potrace.sourceforge.net/](http://potrace.sourceforge.net/)),
    is very powerful. With it, you can trace anything from a simple black-and-white
    logo that needs just a few nodes to a complex photo that produces dozens of colored
    paths with thousands of nodes.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Inkscape 的自动位图描摹工具基于独立的 Potrace 开源描摹工具（[http://potrace.sourceforge.net/](http://potrace.sourceforge.net/)），功能非常强大。使用它，你可以描摹从简单的黑白标志（只需要少量节点）到复杂的照片（生成数十条彩色路径和成千上万个节点）等各种内容。
- en: 'The Trace Bitmap dialog (Shift-Alt-B, [Figure 18-12](#fig18-12)) has two main
    areas: the options panel on the left and the preview panel on the right. What
    the preview panel shows is not the traced vector path (that might be time-consuming
    to create) but the bitmap as it will be fed to the tracer—with all the color reduction
    and filtering preprocessing as specified in the options panel. To update the preview
    after the options change, click **Update**. Note that the dialog always shows,
    and the tracer always traces, a complete bitmap even if it is clipped, masked,
    or otherwise obscured in the document.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪位图对话框（Shift-Alt-B，[图18-12](#fig18-12)）有两个主要区域：左侧是选项面板，右侧是预览面板。预览面板显示的不是跟踪后的矢量路径（那可能需要耗费时间来创建），而是将输入到跟踪器的位图—包括在选项面板中指定的所有颜色减缩和过滤预处理。更改选项后，要更新预览，请点击**更新**。请注意，尽管位图可能在文档中被裁剪、遮罩或以其他方式遮挡，但对话框始终显示并且跟踪器始终会跟踪整个位图。
- en: '![](20/bi-tracedialog.svg.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-tracedialog.svg.png)'
- en: 'Figure 18-12: The Trace Bitmap dialog'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图18-12：跟踪位图对话框
- en: To perform the actual trace of the selected bitmap object, click **OK**. For
    a large bitmap, this may be slow; watch the status bar for progress messages.
    You can interrupt tracing by clicking the Stop button; Revert resets the options
    to defaults.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行选定位图对象的实际跟踪，请点击**确定**。对于大位图，这可能会很慢；请注意状态栏中的进度消息。您可以通过点击停止按钮中断跟踪；点击恢复将重置选项为默认值。
- en: The tracing tool has several modes of operation. These modes are divided into
    *single-scan modes* that create a single path from an image and *multiple-scan
    modes* that create multiple paths (grouped together).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪工具有几种操作模式。这些模式分为*单次扫描模式*（从图像创建单一路径）和*多次扫描模式*（创建多个路径并将其组合在一起）。
- en: 18.5.2.1 Brightness Cutoff
  id: totrans-89
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 18.5.2.1 亮度截止
- en: Brightness cutoff is the simplest approach to tracing a path. The resulting
    path covers anything that is darker than the threshold you set. This trace path,
    while a single object, can consist of multiple nonoverlapping subpaths ([12.1.1](c12.xhtml#section12.1.1)).
    This is the best tracing mode for simple monochromatic shapes such as logos, text,
    vignettes, and so on.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 亮度截止是最简单的路径跟踪方法。生成的路径覆盖比您设置的阈值更暗的任何区域。这个跟踪路径虽然是一个单一对象，但可以由多个不重叠的子路径组成（[12.1.1](c12.xhtml#section12.1.1)）。这是跟踪简单单色形状（如徽标、文本、渐晕等）的最佳模式。
- en: The Threshold is set as a fraction of the image's complete brightness range
    ([Figure 18-13](#fig18-13)). For example, at 0.6, the trace path covers the areas
    that are darker than 60 percent of the image; the Invert checkbox inverts the
    threshold so the path will cover the brightest 40 percent of the image.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 阈值设置为图像完整亮度范围的一个分数（[图18-13](#fig18-13)）。例如，阈值为0.6时，跟踪路径覆盖图像中比60%亮度暗的区域；勾选反转框会反转阈值，使得路径覆盖图像中最亮的40%区域。
- en: '![](20/bi-tracecutoff.svg.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-tracecutoff.svg.png)'
- en: 'Figure 18-13: Brightness cutoff tracing with different threshold values'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图18-13：不同阈值的亮度截止跟踪
- en: The Autotrace mode is another brightness-cutoff mode powered by a different
    tracing backend, Autotrace, instead of the Potrace backend other modes use. In
    this mode, you can't set the threshold, but the default might just work for you,
    as [Figure 18-14](#fig18-14) demonstrates.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 自动跟踪模式是另一种亮度截止模式，由不同的跟踪后端Autotrace提供支持，而不是其他模式使用的Potrace后端。在这种模式下，您不能设置阈值，但默认值可能适合您，正如[图18-14](#fig18-14)所示。
- en: '![](20/bi-tracecutoff-autotrace.svg.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-tracecutoff-autotrace.svg.png)'
- en: 'Figure 18-14: Brightness cutoff tracing with different threshold values'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图18-14：不同阈值的亮度截止跟踪
- en: 18.5.2.2 Tracing Quality
  id: totrans-97
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 18.5.2.2 跟踪质量
- en: Even if the bitmap you're tracing is itself a rendition of a vector path, the
    trace will never exactly reproduce that original path. Converting a vector shape
    into a bitmap always incurs loss of information, and Inkscape's tracer cannot
    restore this lost information other than by guessing. Generally it's pretty good
    at it, but there will be cases—especially when tracing low-resolution bitmaps
    or those containing text—where you will be disappointed by its failure to recognize
    features (arcs, straight lines, corners) that you can easily see in the bitmap,
    as shown in [Figure 18-15](#fig18-15).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 即使您正在跟踪的位图本身就是矢量路径的表现，跟踪也永远无法完全重现该原始路径。将矢量形状转换为位图总会导致信息丢失，而Inkscape的跟踪器无法通过任何其他方式恢复这些丢失的信息，只能进行猜测。一般来说，它在这方面表现不错，但在某些情况下，尤其是跟踪低分辨率位图或包含文本的位图时，您可能会对它无法识别某些特征（如弧线、直线、拐角）感到失望，正如[图18-15](#fig18-15)所示。
- en: '![](20/bi-tracequality.svg.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-tracequality.svg.png)'
- en: 'Figure 18-15: Some common quality problems with bitmap tracing'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'The best piece of advice in this situation is to get your bitmap at the highest
    possible *resolution*. It''s very hard to get a decent trace from a bitmap whose
    crucial features are several pixels across; tracing a higher-resolution version
    of an image often makes a huge difference. Also, you can try to adjust the Threshold
    and experiment with the Options at the bottom of the dialog (these options apply
    to all modes, both single-scan and multiple-scan):'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: The Speckles option removes any color blobs that are smaller than the specified
    number of pixels across. This suppresses small superfluous subpaths when tracing
    dirty or dithered bitmaps.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Increasing the Smooth corners parameter makes the trace algorithm less inclined
    to recognize sharp corners in the image. This may be useful when tracing a naturally
    smooth shape from a highly pixelated, low-resolution bitmap where you don't want
    accidental pixel cusps to become sharp corners in the traced path. Conversely,
    lowering this parameter is appropriate when you are tracing geometric shapes without
    any curved lines. When Smooth corners is zero, the resulting path consists almost
    entirely of straight line segments with cusp nodes between them (but corners may
    still be chamfered).
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Optimize paths parameter tries to reduce the number of nodes in the trace
    path, much like the Simplify command does ([12.3](c12.xhtml#section12.3)). Raising
    this value decreases the number of nodes you get but also increases the chance
    of introducing visible distortions or losing the details of your shapes.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 18.5.2.3 Other Single-Scan Modes
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The Edge detection mode applies the edge detection filter to the bitmap before
    tracing it. As a result, the trace path will contain narrow strips that follow
    the color boundaries in the source bitmap. The lower the Threshold is, the more
    edges will be detected and traced.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: The Color quantization mode first quantizes (divides) the image into the given
    number of areas (Colors), each with its own dominant color, much like when reducing
    a full-color image to a fixed palette in a bitmap editor. It then traces *every
    other* such area, which typically makes color gradients appear striped, as [Figure 18-16](#fig18-16)
    demonstrates.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '![](20/bi-traceedges.svg.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
- en: 'Figure 18-16: The Edge detection and Color quantization modes'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: Very visually interesting is the Centerline tracing option provided by Autotrace.
    It's a bit similar to Edge detection but creates a stroked path, not stroke-like
    strips. In the areas where there are no well-defined edges, this mode creates
    a charming geometric pattern with a predilection for diagonals, as shown in [Figure 18-17](#fig18-17).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '![](20/bi-tracecenterline.svg.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
- en: 'Figure 18-17: The Centerline tracing (autotrace) mode'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: 18.5.2.4 Multiple-Scan Modes
  id: totrans-113
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Like the single-scan Color quantization mode, each multiple-scan mode starts
    by quantizing the image into the given number of areas (theScans parameter). It
    then traces each area separately, assigns an appropriate color or gray level to
    the trace path, and groups all the paths together. With enough scans, the result
    for a high-resolution bitmap may look pretty decent—faithfully reproducing the
    color gradients, blur, natural textures, and so on.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 像单次扫描的颜色量化模式一样，每种多次扫描模式开始时都会将图像量化为给定数量的区域（`Scans`参数）。接着，它会分别描摹每个区域，为每条描摹路径分配适当的颜色或灰度级别，并将所有路径合并在一起。通过足够多次的扫描，高分辨率位图的结果可能会看起来相当不错——忠实地重现颜色渐变、模糊、自然纹理等。
- en: TheBrightness steps mode is the best for grayscale images; it ignores any hue
    or saturation differences and groups pixels into areas based solely on their brightness
    ([Figure 18-18](#fig18-18)). The Colors mode considers all aspects of the colors
    when performing quantization, which results in the most faithful reproduction
    of full-color images (see [Figure 16 in the color insert](c15b.xhtml#ill-fig16)).
    Finally, the Grays option works the same as Colors, except the resulting paths
    are painted with approximating shades of gray instead of the original colors.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 亮度级别模式最适合灰度图像；它忽略任何色调或饱和度的差异，仅根据亮度将像素分组到区域中（见[图18-18](#fig18-18)）。颜色模式在进行量化时考虑颜色的各个方面，能够最忠实地重现全彩图像（参见[彩色插页中的图16](c15b.xhtml#ill-fig16)）。最后，灰度选项与颜色模式相同，只是生成的路径使用近似的灰度色调，而不是原始颜色。
- en: '![](20/bi-tracemulti.svg.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-tracemulti.svg.png)'
- en: 'Figure 18-18: Multiple scans: 10 brightness steps'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图18-18：多次扫描：10个亮度级别
- en: 'The Smooth option applies a certain amount of blur to the image before quantizing
    it; this may produce better results in complex photographic images. TheStack scans
    option is best kept on: it makes sure that each area''s path covers not only that
    area but also all areas below it in z-order, which means there will be no gaps
    between the scans, as shown in [Figure 18-19](#fig18-19).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 平滑选项在进行量化之前会对图像应用一定程度的模糊；这在复杂的摄影图像中可能产生更好的效果。`堆叠扫描`选项最好保持开启：它确保每个区域的路径不仅覆盖该区域，还包括其下方所有区域的z轴顺序，这意味着扫描之间不会有间隙，如[图18-19](#fig18-19)所示。
- en: '![](20/bi-tracestack.svg.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-tracestack.svg.png)'
- en: 'Figure 18-19: Stacking scans vs. abutting them'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图18-19：堆叠扫描与相邻扫描
- en: The Remove background option simply removes the bottommost scan path from the
    group. This is useful when you are tracing a photo of something on a flat-color
    background and want to have the vector representation of the object only without
    the background.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 删除背景选项仅从组中移除最底层的扫描路径。当你正在描摹一张带有单一颜色背景的物体照片，并希望仅保留物体的矢量表示而不包括背景时，这个功能非常有用。
- en: 18.5.2.5 Object Extraction with SIOX
  id: totrans-122
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 18.5.2.5 使用SIOX提取对象
- en: SIOX stands for "Simple Interactive Object eXtraction"; this is an algorithm
    that assists you in separating a foreground object from the background in an image.
    In Inkscape, it is a preprocessor applied to an image before it is traced (using
    any mode) when you turn on the SIOX checkbox next to the Update button.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: SIOX代表“简单交互式对象提取”；这是一种帮助你从图像背景中分离前景对象的算法。在Inkscape中，它是应用于图像的预处理器，在你勾选更新按钮旁的SIOX复选框时，在进行描摹（使用任何模式）之前进行处理。
- en: 'The "Interactive" part of SIOX suggests, however, that it cannot do its magic
    fully automatically but needs some help. For SIOX to work, you must have two objects
    selected: the bitmap and, on top of it, a mask path that identifies the foreground
    object you''re interested in. That mask path can be pretty crude, but it must
    cover the entire foreground object and some minimal amount of background around
    it. The result of a SIOX scan is rarely perfect (in [Figure 18-20](#fig18-20),
    bits of background still need to be cleared away around the cat), but it''s a
    good starting point that you can get to very easily.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，SIOX的“交互式”部分表明，它不能完全自动完成任务，而是需要一些帮助。为了让SIOX正常工作，你必须选择两个对象：位图和位于其上的一个掩码路径，该路径标识你感兴趣的前景对象。这个掩码路径可以相当粗略，但它必须覆盖整个前景对象，并且周围至少有一些背景。SIOX扫描的结果通常不完美（在[图18-20](#fig18-20)中，猫周围仍需清除一些背景），但这是一个很好的起点，且你可以非常轻松地达到。
- en: '![](20/bi-tracesiox.svg.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-tracesiox.svg.png)'
- en: 'Figure 18-20: Using the SIOX option to extract a foreground object during tracing'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图18-20：使用SIOX选项在描摹过程中提取前景对象
- en: 18.5.2.6 Pixel Art Tracing [1.1]
  id: totrans-127
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 18.5.2.6 像素艺术描摹 [1.1]
- en: Inkscape has yet another tracing backend called *libdepixelize* designed for
    vectorizing low-resolution bitmaps where meaningful features can be as small as
    single pixels and there's little to no anti-aliasing. Such images, usually called
    *pixel art*, were the norm in computer games of the low-resolution era but, surprisingly,
    remain a popular subgenre of digital art even today.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Inkscape is not the best application for creating pixel art, but the Pixel art
    tab of its Trace Bitmap dialog makes it one of the best for reusing some old (or
    new) pixel art in your vector designs. This doesn't mean simple re-creating a
    bitmap's pixels as square paths; if you need that, just import your bitmap with
    the Blocky option ([18.2.3](#section18.2.3)) and use it as is without tracing.
    Instead, Inkscape's pixel art tracer attempts to infer and re-create the shapes
    the pixel art author had in mind—from their pixel approximations. As improbable
    as that sounds, the results are often very satisfying. For example, where two
    same-color pixels are diagonally adjacent, the pixel art tracer is smart enough
    to deduce they are a single feature and melt them together in the output, as demonstrated
    in [Figure 18-21](#fig18-21).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '![](20/bi-tracepixel.svg.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
- en: 'Figure 18-21: Using the pixel art tracer'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: The default Voronoi option of the pixel art tracer is usually the best; the
    grouping of polygons it creates is known as a *Voronoi tessellation* (named after
    a 19th-century Russian mathematician). The other output option, B-splines, tries
    to further smooth out the shapes of the Voronoi polygons, but the result is usually
    not as neat. For comparison, [Figure 18-21](#fig18-21) also shows what the regular
    Potrace color tracer would do to the same pixel art image.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: The options in the Heuristics section are best left to their defaults. If you
    want to learn more about the algorithm used by the pixel art tracer and about
    what these options can give you, start with the tutorial at [https://inkscape.org/doc/tutorials/tracing-pixelart/tutorial-tracing-pixelart.html](https://inkscape.org/doc/tutorials/tracing-pixelart/tutorial-tracing-pixelart.html)
    written by the authors of this feature.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: 18.6 Bitmap Export
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Nowadays, Inkscape's SVG files are often used on the web directly, thanks to
    web browsers' support for SVG. Still, ours remains a bitmap-dominated world, so
    the quality of rasterization and the bitmap export capabilities are crucial for
    a vector editor.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: 18.6.1 The Export PNG Image Dialog
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Use the Export PNG Image dialog (Shift-Ctrl-E) to export your drawing or any
    part of it into a PNG file at any resolution. The dialog''s areas, top to bottom,
    allow you to select:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: The canvas area you want to export ([18.6.1.1](#section18.6.1.1))
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The pixel size of the bitmap ([18.6.1.2](#section18.6.1.2))
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The filename of the export file and its format ([18.6.1.3](#section18.6.1.3))
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additional export options ([18.6.1.4](#section18.6.1.4))
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Export format parameters ([18.6.1.5](#section18.6.1.5))
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 18.6.1.1 Export Area
  id: totrans-143
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 18.6.1.1 导出区域
- en: For the area you want to export, you have four main options at the top of the
    dialog:Page, Drawing, Selection, and Custom ([Figure 18-22](#fig18-22)).
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你想要导出的区域，窗口顶部有四个主要选项：Page、Drawing、Selection 和 Custom ([图 18-22](#fig18-22))。
- en: '![](20/bi-export.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](20/bi-export.png)'
- en: 'Figure 18-22: The Export PNG Image dialog'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18-22：导出 PNG 图像对话框
- en: The Page button exports the page of your SVG document, as visualized by the
    frame on the canvas ([2.3](c02.xhtml#section2.3)), but any objects beyond the
    edges of the page are excluded. The Drawing button exports the bounding box of
    the entire visible drawing (hidden layers or objects don't count), which can be
    smaller or larger than the page; the page frame is not visible in the exported
    bitmap. When the Selection button is pressed, the dialo`g exports the bounding
    box of the current selection (again, it can be inside or outside the page frame—this
    does not matter).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Page 按钮导出的是 SVG 文档的页面内容，如画布上的框架所示 ([2.3](c02.xhtml#section2.3))，但页面边缘之外的对象会被排除。Drawing
    按钮导出的是整个可见图形的边界框（隐藏的图层或对象不计入），它可能比页面要小或大；在导出的位图中，页面框架不可见。当按下 Selection 按钮时，窗口会导出当前选区的边界框（同样，它可以位于页面框架内外——这无关紧要）。
- en: Alternatively, you can click Custom and type your own document coordinates for
    the top-left corner (x0, y0) as well as either the bottom-right corner (x1, y1)
    or the width and height of the export area. You can also choose the measurement
    unit for these values (the default is `px`, [A.6](b01.xhtml#sectionA.6)).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你可以点击 Custom 并输入自定义文档坐标来设定左上角（x0, y0）以及右下角（x1, y1）或导出区域的宽度和高度。你还可以选择这些值的测量单位（默认为
    `px`，[A.6](b01.xhtml#sectionA.6)）。
- en: The Export PNG Image dialog is not modal—that is, you can keep working on the
    canvas while it is open. Unless you choose Custom, the dialog responds to changing
    the selection by switching to the Selection mode and updating the coordinates
    to match the bounding box of the new selection. If nothing is selected and you
    are not in Custom, the dialog defaults to the Drawing mode.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 导出 PNG 图像对话框不是模态的——也就是说，你可以在它打开时继续在画布上工作。除非你选择了 Custom，否则窗口会响应选区的更改，切换到选区模式，并更新坐标以匹配新选区的边界框。如果没有选择任何内容且你不在
    Custom 模式下，窗口默认处于 Drawing 模式。
- en: 18.6.1.2 Image Size
  id: totrans-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 18.6.1.2 图像大小
- en: For the Image size, type the width and height in pixels (here, it is bitmap
    pixels, not px units), or adjust the resolution value of dpi, which stands for
    *dots* (that is, pixels) *per inch*. The default resolution of 96 dpi results
    in one SVG px unit translating to one pixel of the rendered bitmap. The horizontal
    and vertical DPI values are always the same; changing any one of the three editable
    values (Width, Height, dpi) changes the other two to match.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 对于图像大小，输入宽度和高度的像素值（这里是位图像素，而不是 px 单位），或者调整 dpi 的分辨率值，dpi 代表每英寸的*点*（即像素）数。默认的
    96 dpi 分辨率会使一个 SVG px 单位等于渲染位图的一个像素。水平和垂直的 DPI 值始终相同；更改三个可编辑值中的任何一个（宽度、高度、dpi）会自动调整另外两个以匹配。
- en: If your drawing contains some px-sized objects (such as strokes a whole number
    of px wide) and you want them to export precisely into the pixels of the bitmap,
    it may not be sufficient to choose the resolution of 96 dpi. For example, a 1×1
    px square in SVG might fall on a boundary between pixels in an exported bitmap
    and thus would end up smeared into four adjacent pixels instead of one.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的图形包含一些以 px 为单位的对象（例如宽度为整数 px 的线条），并且你希望它们精确地导出到位图的像素中，那么仅选择 96 dpi 的分辨率可能不足够。例如，SVG
    中的 1×1 px 方块可能会落在导出位图的像素边界之间，因此最终会扩展到四个相邻的像素，而不是一个。
- en: One way to fix this is by applying the Pixelize filter ([17.4](c17.xhtml#section17.4))
    to the exported objects. Another is to suppress anti-aliasing in PNG export options
    ([18.6.1.5](#section18.6.1.5)). Both those methods work, but you may find that
    your single-pixel features disappear or get snapped to a wrong pixel position
    in export. To fix this properly, you need to put in some more work. Enable the
    grid ([7.2](c07.xhtml#section7.2)) and snap your objects to the default 1 px-sized
    grid (or use the Pixel Snap extension, [13.4.2.6](c13.xhtml#section13.4.2.6)).
    Make sure your export area is itself aligned to the grid—that is, it has integer
    x0 and y0 coordinates when measured in px. After that, exporting at 96 dpi will
    give you a perfectly crisp image with no unwanted anti-aliasing.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 18.6.1.3 Export Filename and Format
  id: totrans-154
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: For the Filename, you can type or paste a complete path to the file or click
    the Export As button to access your filesystem and choose a folder and a file.
    If you've already exported this object or the whole page, Inkscape will try to
    fill in the filename automatically for you ([18.6.1.4](#section18.6.1.4)). If
    the file exists, you will be asked if you want to overwrite it.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '[1.1]'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: 'For a long time, PNG was the only export format Inkscape supported. By default,
    Inkscape still exports to PNG; the PNG format preserves the maximum rendering
    quality Inkscape is capable of, including alpha transparency, anti-aliasing, and
    RGB color with 8 bits per channel. Since version 1.1, you can also export to some
    other formats: JPG (lossy), WebP (lossy or lossless), and TIFF (lossless), as
    well as optimized PNG (lossy or lossless). Choose one of these formats from the
    **Save as type** list in the **Export As** filename chooser, or simply append
    the corresponding extension to the filename (.jpg, .webp, or .tiff; you cannot
    select optimized PNG by extension).'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: 18.6.1.4 Export Hints
  id: totrans-158
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When you're exporting a single selected object, the export filename and resolution
    are remembered and stored in that object's node in the SVG document (so you may
    need to save once you're done with the export). These values are then restored
    into the Export PNG Image dialog whenever you select this object to export again.
    Similarly, the filename and resolution are remembered when you're exporting the
    Page or Drawing.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: These*export hints* are great time savers when you need to export multiple objects—for
    example, slices of a web page graphic— to multiple bitmap files. If you've done
    this once (and saved your document after that), just select your objects with
    the Export PNG Image dialog open and you will see their saved export filenames
    in the Filename field. For the same reason—to make it easier to export multiple
    objects one by one—the dialog stays open even after you click Export (although
    there's also a Close when complete checkbox under the Filename field).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: You can speed up the process even more by selecting all objects you want to
    export and checking the Batch export all selected objects checkbox. Now, when
    you click Export, Inkscape will create one bitmap file per selected object. If
    an object has already been exported before—that is, has the filename and resolution
    hints saved—those values will be used for it; otherwise, a name for the bitmap
    file will be constructed from the object's ID (for example, text2402.png, see
    [A.9](b01.xhtml#sectionA.9)), and the file will be placed in the folder where
    your SVG document was last saved.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: Normally, even if you are exporting a selection, you are actually exporting
    an area—the bounding box of the selection—which may contain other visible objects.
    Checking the Hide all except selected checkbox ensures that the exported bitmap
    will contain *only* the exported objects, while all others, even if they overlap
    the export area, will not be rendered.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: 18.6.1.5 Export Format Parameters [1.1]
  id: totrans-163
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Inkscape allows you to adjust various parameters of export formats. There is
    no preview window, but if you want to try different parameter values and see the
    result at once, use this trick. Export your object and then import it back into
    Inkscape, placing it next to the object or area you're exporting. Now, you can
    export it over and over to the same file with different options, and Inkscape
    will reload the newly exported file each time, displaying the effect of your settings
    immediately.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: 18.6.1.5.1 PNG
  id: totrans-165
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: In the dialog's Advanced section (collapsed by default), you can set some format
    options for the regular PNG export (not optimized PNG).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: Use interlacing creates interlaced PNGs which, when used on a web page, will
    display a lower-resolution version of the image before it is fully transmitted
    from the web server.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bit depth controls how color is represented in the output PNG. The default value
    is `RGBA_8`, which means RGB color, Alpha channel (transparency), 8 bits per channel;
    this is exactly how color is represented in Inkscape's renderer, so this option
    stores the program's rasterization output optimally. You can trim the output by
    dropping the alpha channel (`RGB_8`) or by switching to grayscale with (`GrayAlpha_8`)
    or without alpha (`Gray_8`) and with any number of bits per channel, down to 1
    bit for a strictly black-and-white image (`Gray_1`). You can also use full-color
    representation with 16 bits per channel (`RGBA_16`), but since the renderer is
    still 8-bit, this will not actually increase the amount of information in the
    output (for example, if you're experiencing banding in gradients, this option
    will not reduce it).
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compression sets the level of compression of the PNG file; the optimal value
    depends on the content of the file, so if you want to get the smallest possible
    PNG file, I recommend using external utilities like *pngcrush* on Inkscape's PNGs.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pHYs dpi is the resolution value recorded in the PNG file; this value is rarely
    used, so there's no harm in leaving it at 0.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antialiasing is actually a parameter of Inkscape's renderer (called Cairo),
    not of the PNG file. This is where you can either turn off all anti-aliasing (the
    `CAIRO_ANTIALIASING_NONE` option) or try to improve on the default `CAIRO_ANTIALIASING_GOOD`
    by choosing `CAIRO_ANTIALIASING_BEST`.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 18.6.1.5.2 Other Formats
  id: totrans-172
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: For formats other than regular PNG, an Options dialog pops up after the progress
    bar is finished—that is, after Inkscape is done rendering the bitmap.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: For JPG, you can set the Quality (1 to 100, default 90) and the Progressive
    option; when downloaded over a slow connection, a Progressive JPG file will show
    a low-resolution preview before the complete full-resolution image (this only
    makes sense for large images). WebP has a Lossless option and adjustable parameters
    for Quality and Speed. TIFF has onlyQuality and Speed parameters.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: For the optimized PNG format, you can turn on Interlaced (similar to JPG's Progressive
    option) and choose how many trials will be performed in an attempt to achieve
    the best compression for the image. On the Lossy Options tab of the Options dialog,
    you can enable various reductions (bit depth, color type, palette) that can make
    the image even smaller but also lower quality.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: 18.6.2 Exporting via the Command Line
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'All of the capabilities of the Export PNG Image dialog are also available when
    you run Inkscape from the command line. This way, Inkscape can be used as a GUI-less
    utility from scripts or programs to automate various SVG rendering jobs. For example,
    this is how you export an object with`id="text2402"` at 600 dpi:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Exporting to formats other than PNG via command line does not work as of Inkscape
    1.1. For a complete list of Inkscape's command line switches, refer to [Appendix C](b03.xhtml#chC).
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: 18.6.3 Icon Preview
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While there's no preview pane in the Export PNG Image dialog, if you use Inkscape
    to create icons, one way to preview your work rendered to different icon sizes
    is via the Icon Preview dialog, which you can call from the View menu ([Figure 18-23](#fig18-23)).
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '![](20/icon-preview.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
- en: 'Figure 18-23: The Icon Preview dialog'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: This dialog contains previews of your document rasterized in a few typical icon
    sizes, from 16×16 to 128×128 pixels; in the left side of the dialog, one of these
    renderings is additionally displayed magnified so you can see how your vector
    objects translate to actual pixels. Click the **Selection** checkbox to switch
    the preview from showing the entire document to the current selection.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: 18.6.4 Make a Bitmap Copy
  id: totrans-185
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'After you export something from your document, you can import ([18.1](#section18.1))
    the bitmap file back to check how rasterization worked. If, however, you need
    that bitmap in your document and not as a separate file, you can use Inkscape''s
    shortcut: the Edit ▶ Make a Bitmap Copy command.'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: This command exports the selected objects (without saving the file) and imports
    the result as an embedded bitmap back to the document, overlaying it on top of
    the selection. You can set the export’s resolution on the Imported Images page
    of the Preferences; the default is 96 dpi, and for that value, the command will
    additionally snap the export area to the 1 px grid, making sure the pixels of
    the created bitmap align exactly with the boundaries of px squares, as shown in
    [Figure 18-24](#fig18-24).
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '![](20/bi-copy.svg.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
- en: 'Figure 18-24: A 96-dpi bitmap copy of a path, aligned to the grid'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: You can use this command for a quick preview of how your art will rasterize
    (after which, the bitmap object can be deleted). It is also useful when you have
    some very slow-rendering filters ([17.6](c17.xhtml#section17.6)) but do not want
    to work in the No Filters or Outline modes; in that case, just make a bitmap copy
    of the filtered object and hide the slow-rendering original.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: 18.7 Bitmap Filters and Extensions
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can apply Inkscape's filters ([Chapter 17](c17.xhtml#ch17)) to any kind
    of object, but they are perhaps most useful when you have a bitmap that is not
    editable with the standard vector tools. I especially recommend blend mode overlays
    ([17.2](c17.xhtml#section17.2)) and the preset filters ([17.4](c17.xhtml#section17.4))
    in theBlurs, Color, and Image Effects submenus. You should use filters whenever
    possible because they are nondestructive and do not change the original bitmap
    file you imported.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: 'Sometimes, however, you really do need to change the bitmap data itself. As
    mentioned above ([18.2.1](#section18.2.1)), with a linked image, you can just
    run your favorite bitmap editor on it, and you can even launch that editor from
    within Inkscape. This capability, however, is not available for embedded images.
    In those cases, extensions ([Chapter 19](c19.xhtml#ch19)) can help; a number of
    common bitmap processing algorithms have been implemented as extensions. Here
    are those that are most useful—and not (or not quite) achievable via filters—from
    the Extensions ▶ Raster submenu ([Figure 18-25](#fig18-25)):'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: Adaptive Threshold shifts each pixel to extreme values in each of the RGB channels,
    depending on whether that pixel is above or below a threshold. That threshold
    is calculated from that pixel's local neighborhood (whose size is defined by the
    Width and Height parameters). This is a valuable transformation, because it is
    similar to the way humans perceive images—we judge a point "light" or "dark" relative
    to its local area, not relative to the average lightness of the entire image.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add Noise gives you a choice of various types of noise to overlay on your image;
    most types look more or less like scattered sand.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Crop is a way to reduce the size of an SVG with an embedded image—unlike clipping,
    it actually removes part of the bitmap data from the edges (you can specify how
    much to crop on each side).
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Despeckle, Enhance, and Reduce Noise implement various noise reduction algorithms.
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dither randomly scatters pixels in a bitmap, with Amount specifying the radius
    of scattering.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Equalize applies histogram equalization to the image.
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HSB Adjust adjusts the hue (in the range of –360 to 360), saturation (–200 to
    200), and brightness (–200 to 200).
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implode, Swirl, and Wave smoothly distort an image more or less as their names
    suggest. Wave uses a horizontal sine wave with the given amplitude and wavelength.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Level blackens pixels that are darker than the Black Point, whitens pixels brighter
    than the White Point, and scales those that fall within this range to the full
    color range. When the Black Point is greater than 0 or the White Point is less
    than 100, the extension increases the contrast of the image. Gamma Correction
    specifies additional brightness correction (1 means no change).
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Level (with Channel) is the same as Level but for a single channel only.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Median paints each pixel with the median color of its circular neighborhood;
    the result is somewhat similar to blurring, but Median preserves sharp boundaries
    between colors that are too different.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Normalize increases contrast by expanding the color range of pixels to the full
    range of color (for example, if the image has no reds, all colors will be tinted
    toward red to compensate for that).
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oil Painting is similar to Median but additionally melts similar adjacent colors
    in a way that's reminiscent of paint strokes.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Resample changes the pixel size of the bitmap without scaling it. Resampling*up*
    does not change the appearance of an image, but it may be useful if you plan to
    apply some other effect and want it to work with higher resolution. Resampling
    *down* makes the image lose detail without changing its dimensions in the document;
    like Crop, this reduces the file size of an SVG document with an embedded bitmap.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharpen and Unsharp Mask are the classic algorithms for sharpening an image.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](20/bi-effects.svg.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
- en: 'Figure 18-25: Examples of extension effects from Extensions ▶ Raster'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: Unlike filters, extensions make permanent changes to the bitmaps they process.
    You can undo an extension but you cannot, for example, readjust its parameters
    after it is applied. Also, unlike filters, these extensions can work*only* on
    bitmap objects—you cannot, for example, apply a bitmap effect to a clone of a
    bitmap. If the bitmap is linked, these effects embed it and work on the embedded
    copy, not on the external linked original. Refer to [19.1](c19.xhtml#section19.1)
    for general tips on working with extension effects.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: 18.8 Color Management
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Color management aims to ensure that the colors in your artwork are correctly
    translated between different output devices, typically from screen to print. The
    ranges of colors that can be reproduced are different for different devices, and
    some color distortions are unavoidable. Color management allows you to preview,
    control, and thereby minimize such distortions.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: Inkscape has never claimed to be the best in class when it comes to color management.
    You can use screen-proofing to preview output colors, but you can't, using Inkscape
    alone, prepare a color-separated file for print with a color profile embedded.
    However, in most cases, you can get the result you need by employing some additional
    software, as described in this section.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, in the years since the first edition of this book, the importance
    of color management has certainly diminished. These days, a lot more graphics
    go from screen to screen than from screen to paper. Also, consumer-grade computer
    screens and desktop color printers are now much more uniform in quality—and most
    desktop printers will accept and print the same RGB data as is displayed on your
    screen, performing their own color conversion without you needing to do any extra
    work.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: It's only when you intend to print your design on high-end commercial printers,
    usually by sending it to a print service provider, that you will need to look
    into Inkscape's color management facilities. Even then, some providers can perform
    color management on your documents for you if you ask them to. If you have sufficient
    control over this process (for example, can review the print proofs), this is
    usually the best option, because the print service staff knows what works best
    with their equipment.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: 18.8.1 ICC Color Profiles
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An ICC color profile is a file that describes the color capabilities of an output
    device. If you want to prepare your document for outputting on a specific device,
    you must first obtain the ICC profile that exactly corresponds to this device
    and the output media (for example, the paper type used for printing). Sometimes,
    you can find an appropriate profile file on the internet (for example, on the
    website of the printer hardware's manufacturer), but typically, you would request
    it from the print service provider you will be using.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: Once you get the destination profile, you need to install it into your operating
    system. On Windows 10, it's as easy as right-clicking an .icc file and selecting
    Install Profile. On Linux, you need to have *gnome-color-manager* or *colord-kde*
    installed; then, double-click the .icc file and click Import.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: 18.8.2 Screen Proofing
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Since the color range of a typical printer is narrower than that of a computer
    display, Inkscape can proof (preview) the print output on your screen by emulating
    the printer colors. This is called *screen proofing* or *soft proofing*. For this,
    you need to have two ICC color profiles: one for the printer you''re going to
    use and another for your screen.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, you should have your display *calibrated* using a special hardware
    device called *colorimeter*; this calibration creates a custom ICC profile of
    your display. Unless your quality requirements are truly demanding, however, you
    can probably make do with a generic RGB profile, such as the one that comes installed
    with Windows.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: In **Preferences**, go to the **Input/Output ▶ Color management** page. Choose
    the display profile (if you have more than one) in the **Display adjustment**
    section. Then, in the **Proofing** section, check **Simulate output on screen**
    and choose the **Device profile** of your target device (that is, the printer
    on which you're planning to print your artwork). After that is set up, toggle
    the color-managed view via **View ▶ Color-Managed View** or the little toggle
    button in between the vertical and horizontal scroll bars in Inkscape's editing
    window.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: For both screen and target device profiles, you can also choose Device rendering
    intent. The default Perceptual is the best choice in most cases; if you want the
    output to look as color-rich as possible (for example, when printing simple business
    graphics), try Saturation.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: If a screen color is "out of gamut"—that is, cannot be rendered on the output
    device at all—you can make it immediately visible by designating an out-of-gamut
    marker color. For example, if your design has no reds, check **Mark out of gamut
    colors** and choose red for **Out of gamut warning color**. Then, wherever you
    see red in your drawing, you'll know you need to change the actual color of that
    object (which is shown in the status bar or in the Fill and Stroke dialog—the
    red mark is only in the drawing) if you want it to print without gross distortions.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: 18.8.3 Separating and Embedding
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Screen proofing is helpful, but it may not be enough—you may be required to
    produce a file already converted to the target color system. Such files are often
    called*color-separated* because they contain the separate color channels (usually
    CMYK,[8.4.2](c08.xhtml#section8.4.2)) corresponding to the inks of the output
    device. Such a file may also have the target color profile embedded into it. The
    most commonly used formats are PDF (vector) and TIFF (bitmap); both can contain
    color-separated data and embed ICC profiles.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: Although it can export PDF and PNG, Inkscape cannot do color separation or profile
    embedding. You need some other software to do the job for you, such as Adobe Photoshop
    (for TIFF) or Illustrator (for PDF); both can import Inkscape's SVG format directly.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: You can also use open source software. The Scribus page layout program ([http://scribus.net/](http://scribus.net/))
    will import SVG and create color-separated PDFs; starting from Inkscape 1.0.1,
    you can set up PDF export via Scribus from Inkscape's Save dialog (see the Inkscape
    1.0.1 Release Notes for details). The Cyan plug-in for GIMP ([https://github.com/rodlie/cyan/](https://github.com/rodlie/cyan/))
    will take Inkscape-exported PNG bitmap and convert it into a color-separated TIFF
    with screen proofing for complete control.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
