- en: '**10'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**10'
- en: RECONSTRUCTING USER DESKTOPS AND LOGIN ACTIVITY**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**重建用户桌面和登录活动**'
- en: '![Image](Images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/common01.jpg)'
- en: It is often necessary to reconstruct user login activity to know when a person
    has logged in to a system, how they logged in, what they were doing, and when
    they finally logged out. This chapter explains various aspects of shell and desktop
    user logins, and describes various artifacts that are interesting from a digital
    forensics perspective.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 重建用户登录活动通常是必要的，以了解某人何时登录系统，如何登录，他们在做什么，以及何时最终注销。本章解释了 shell 和桌面用户登录的各个方面，并描述了从数字取证角度来看有趣的各种证据。
- en: We are primarily focused on *human* interaction with the computer. Other system
    “users” are running daemons or starting programs, but they are part of normal
    system operation and are covered in other sections of the book. The human use
    of peripheral devices, such as printers, external drives, and so on, is also covered
    separately in [Chapter 11](ch11.xhtml).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们主要关注*人类*与计算机的交互。其他系统“用户”正在运行守护进程或启动程序，但它们是正常系统操作的一部分，并且在本书的其他部分有所涉及。人类使用外设，如打印机、外部硬盘等，也会在[第11章](ch11.xhtml)中单独讨论。
- en: '**Linux Login and Session Analysis**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Linux 登录和会话分析**'
- en: On early Unix systems, users logged in via a physical terminal or a terminal
    emulated by a PC, both of which connected over an RS232 serial line. Remote connections
    were possible using analog modems over dial-up or leased lines from the local
    phone company. As TCP/IP became popular, users logged in over the network using
    telnet or rlogin. Users entered their login name and password, and if correct,
    the system ran scripts to set up their environments and provide a command line
    prompt. When the user finished, they logged out, and the terminal was reset to
    prepare for the next login.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在早期的 Unix 系统中，用户通过物理终端或由 PC 仿真出的终端登录，二者都通过 RS232 串行线连接。远程连接可以通过拨号或本地电话公司租用的模拟调制解调器来实现。随着
    TCP/IP 的流行，用户通过 telnet 或 rlogin 在网络上登录。用户输入登录名和密码，如果正确，系统会运行脚本来设置环境并提供命令行提示符。当用户完成操作时，他们会注销，终端会被重置，以准备下次登录。
- en: 'Today, people log in using the local console or securely over a network. The
    most common ways to log in to Linux systems are:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，人们通过本地控制台或通过网络安全地登录。登录 Linux 系统的最常见方式有：
- en: Graphical logins through a local *display manager* (usually workstations and
    laptops)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过本地 *显示管理器* 的图形登录（通常用于工作站和笔记本电脑）
- en: Shell logins on a local virtual console (usually physical server access)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本地虚拟控制台上的 shell 登录（通常是物理服务器访问）
- en: Shell logins remotely over a network using secure shell (SSH) (usually remote
    server access)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用安全外壳（SSH）远程登录（通常是远程服务器访问）
- en: Shell logins over local serial lines (often used by embedded systems or Linux-based
    IoT devices)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过本地串行线的 shell 登录（通常用于嵌入式系统或基于 Linux 的物联网设备）
- en: '[Figure 10-1](ch10.xhtml#ch010fig01) shows a simplified overview of these user
    login methods.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 10-1](ch10.xhtml#ch010fig01) 显示了这些用户登录方式的简化概览。'
- en: '![Image](Images/ch10fig01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch10fig01.jpg)'
- en: '*Figure 10-1: System initialization and user login process*'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10-1：系统初始化和用户登录过程*'
- en: The first three of the above listed login methods are primarily intended for
    human interaction. The last login method is mostly used as an interface for configuration,
    firmware updates, or diagnostic programs, and it may use internal pins directly
    on the circuit board. Serial line logins can be useful in the forensic analysis
    of embedded and IoT devices where storage cannot be removed and imaged like a
    regular computer.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 上述列出的前三种登录方式主要用于人工交互。最后一种登录方式主要用作配置、固件更新或诊断程序的接口，它可能直接使用电路板上的内部引脚。串行线登录在嵌入式设备和物联网设备的取证分析中非常有用，因为这些设备的存储不能像普通计算机那样被移除和镜像。
- en: Remote desktop connections like VNC are not listed here because they are usually
    connecting to an already logged-in desktop or remotely accessing the display manager.
    In such cases, the remote desktop can be analyzed like a local graphical login.
    Remote desktop access is explained at the end of this chapter.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 像 VNC 这样的远程桌面连接在此没有列出，因为它们通常连接到已经登录的桌面或远程访问显示管理器。在这种情况下，远程桌面可以像本地图形登录一样进行分析。远程桌面访问将在本章末尾解释。
- en: The following sections describe how login sessions work and identify interesting
    digital forensic artifacts that may be available.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分描述了登录会话的工作原理，并识别可能存在的有趣数字取证证据。
- en: '***Seats and Sessions***'
  id: totrans-18
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***席位和会话***'
- en: To analyze human user activity on a Linux system, we must understand the concepts
    of seats, users, and sessions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要分析 Linux 系统上的人类用户活动，我们必须理解座席、用户和会话的概念。
- en: 'A *seat* is typically composed of one or more screens, a keyboard and mouse
    (unless the screen is a touchscreen), audio devices, video cameras, and other
    human interactive peripherals attached to a local workplace. The default seat
    name is `seat0`, and it’s recognized on system boot. We can view it in the systemd
    journal:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*座席*通常由一个或多个屏幕、键盘和鼠标（除非是触摸屏）、音频设备、摄像头及其他人机交互外设组成，这些设备连接到本地工作站。默认座席名为 `seat0`，并在系统启动时被识别。我们可以在
    systemd 日志中查看它：'
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A Linux system can be configured to have additional seats when a PC has multiple
    keyboards and screens for more than one person (though this is somewhat rare).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当一台 PC 配备了多个键盘和显示器供多人使用时（尽管这种情况比较少见），Linux 系统可以配置为拥有额外的座席。
- en: We can view a seat’s device components on a live system with loginctl seat-status
    seat0; however, this information is not available in a postmortem forensic investigation
    and must be inferred or reconstructed from the logs. See the sd-login(3) man page
    for more information on seats.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过登录 `loginctl seat-status seat0` 来查看座席的设备组件，但在事后取证调查中，这些信息是不可用的，必须从日志中推断或重建。有关座席的更多信息，请参阅
    sd-login(3) 手册。
- en: The term *user* can refer to either a person or a process. A human user is a
    person with a user account on the computer, which corresponds to a traditional
    Unix username and numeric user ID (UID). System processes (which are not people)
    also run under specified usernames and UIDs. When performing a forensic analysis
    of a system, it is important to differentiate between human and system user activity.
    A human user will log in from a seat or remotely with SSH or some other remote
    access method. Non-human (system process) users are typically daemons started
    from systemd or by some other system user.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*用户*一词可以指人或进程。人类用户是指拥有计算机用户账户的人，这对应于传统 Unix 的用户名和数字用户 ID（UID）。系统进程（不是人类）也在指定的用户名和
    UID 下运行。在对系统进行取证分析时，区分人类用户和系统用户活动非常重要。人类用户通常通过座席或远程 SSH 或其他远程访问方法登录。非人类（系统进程）用户通常是由
    systemd 或其他系统用户启动的守护进程。'
- en: A *session* is the duration of a user login and can take place on a physical
    seat or over a network connection such as SSH. After a successful login, a user
    is given a session ID, and the session is cleanly terminated at logout. Sessions
    are logged and managed by systemd-logind. Systemd, together with the display manager,
    can also facilitate *fast user switching*. This means that multiple users can
    be logged in to the same seat at the same time and can securely switch control
    between them.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*会话*是用户登录的持续时间，可以发生在物理座席上，也可以通过网络连接（如 SSH）进行。成功登录后，用户会获得一个会话 ID，且会话在注销时会被干净地终止。会话由
    systemd-logind 记录和管理。Systemd 和显示管理器一起，还可以实现*快速用户切换*。这意味着多个用户可以同时登录到同一座席，并能安全地在用户之间切换控制权。'
- en: '**NOTE**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*The word “session" has many meanings in computing. There are system login
    sessions, desktop sessions, application login sessions, browser sessions, TCP
    sessions, SSL/TLS sessions, and others. When performing forensic analysis work
    and writing forensic reports, make sure the use of the word session is clearly
    understood.*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*“会话”一词在计算机中有多重含义。包括系统登录会话、桌面会话、应用登录会话、浏览器会话、TCP 会话、SSL/TLS 会话等。在进行取证分析和编写取证报告时，请确保清楚理解会话一词的使用。*'
- en: 'Early Unix systems were expensive, and accounting logs were developed to facilitate
    billing of users or departments. Administrators needed to know when a user logged
    in, when they logged off, and possibly other usage information. On modern Linux
    systems, this is largely managed by systemd, but some traditional files still
    record the state and history of user login sessions:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 早期的 Unix 系统价格昂贵，开发了会计日志来便于对用户或部门进行计费。管理员需要了解用户何时登录、何时注销，以及其他可能的使用信息。在现代 Linux
    系统中，这主要由 systemd 管理，但一些传统文件仍记录用户登录会话的状态和历史：
- en: '| ***/var/log/wtmp*** | History of successful logins and logouts |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| ***/var/log/wtmp*** | 成功登录和注销的历史 |'
- en: '| ***/var/log/btmp*** | History of failed login attempts |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| ***/var/log/btmp*** | 失败的登录尝试历史 |'
- en: '| ***/var/log/lastlog*** | Most recent user logins |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| ***/var/log/lastlog*** | 最近的用户登录记录 |'
- en: '| ***/var/run/utmp*** | Current users logged in (only on running systems) |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| ***/var/run/utmp*** | 当前登录的用户（仅在运行的系统上） |'
- en: When performing a postmortem forensic analysis of a modern Linux system, anything
    stored temporarily on pseudo-filesystems will not be available (pseudo-filesystems
    are stored in memory). The */var/run/utmp* will not be available for analysis
    unless it is recovered from a memory image.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行现代 Linux 系统的事后法医分析时，任何存储在伪文件系统上的临时数据将无法获得（伪文件系统存储在内存中）。除非从内存镜像中恢复，否则无法分析
    */var/run/utmp*。
- en: 'The `utmpdump`^([1](footnotes.xhtml#ch10foot_01)) tool can be used to view
    the raw contents of *wtmp* and *btmp* (and *utmp* on a live system). Here are
    some example entries:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`utmpdump`^([1](footnotes.xhtml#ch10foot_01)) 工具可用于查看 *wtmp* 和 *btmp*（以及运行系统中的
    *utmp*）的原始内容。以下是一些示例条目：'
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The output fields (from left to right and following wrapped lines) are listed
    here with a description:^([2](footnotes.xhtml#ch10foot_02))
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 输出字段（从左到右，换行后的字段）如下所示，带有描述：^([2](footnotes.xhtml#ch10foot_02))
- en: '***type*** Type of record (see list of types below)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '***type*** 记录类型（见下方的类型列表）'
- en: '***pid*** PID of login process (agetty, sshd, or 0 for reboots and shutdowns)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '***pid*** 登录进程的 PID（agetty、sshd，或重启和关机时为 0）'
- en: '***id*** Terminal name suffix (last four characters of the tty; blank or tildes
    if none)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '***id*** 终端名称后缀（tty 的最后四个字符；如果没有则为空或为波浪符）'
- en: '***user*** Username (failed or successful) or action (shutdown, reboot, and
    so on)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '***user*** 用户名（失败或成功）或操作（关机、重启等）'
- en: '***line*** Device name of the tty (tilde if none)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '***line*** 终端设备名称（如果没有则为波浪符）'
- en: '***host*** A hostname or IP address string (or kernel info for some types)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '***host*** 主机名或 IP 地址字符串（或某些类型的内核信息）'
- en: '***addr*** An IP address (IPv4 or IPv6, if available)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '***addr*** IP 地址（IPv4 或 IPv6，如果可用）'
- en: '***time*** Timestamp of record'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '***time*** 记录的时间戳'
- en: Depending on the record type and the program writing to *wtmp* or *btmp*, the
    contents of the fields may be used for different information. For example, with
    types 1 or 2, the *user* field is used to log a shutdown or reboot, and the *host*
    field logs the kernel version. Also notice how *id* and *line* are similar, as
    are *host* and *address*. Any program can write to *wtmp* or *btmp* and can choose
    the fields it wants to use. Although this seems redundant, it increases the amount
    of log information saved from a variety of different programs.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 根据记录类型和写入 *wtmp* 或 *btmp* 的程序，字段的内容可能用于不同的信息。例如，类型 1 或 2 时，*user* 字段用于记录关机或重启，*host*
    字段记录内核版本。同时注意，*id* 和 *line* 相似，*host* 和 *address* 也类似。任何程序都可以写入 *wtmp* 或 *btmp*
    并选择它要使用的字段。虽然这看起来有些冗余，但它增加了不同程序所保存的日志信息量。
- en: 'The following record type numbers are stored in *wtmp* and *btmp* (and */var/run/utmp*):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下记录类型编号存储在 *wtmp* 和 *btmp*（以及 */var/run/utmp*）中：
- en: '**0**   Invalid data'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**0**   无效数据'
- en: '**1**   Change in run level or equivalent systemd target'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**1**   运行级别或等效的 systemd 目标发生变化'
- en: '**2**   Time of boot'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**2**   启动时间'
- en: '**3**   Timestamp before a clock change'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**3**   时钟变更前的时间戳'
- en: '**4**   Timestamp after a clock change'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**4**   时钟变更后的时间戳'
- en: '**5**   Process spawned by init'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**5**   由 init 启动的进程'
- en: '**6**   Login prompt provided'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**6**   提供登录提示'
- en: '**7**   Successful user login'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**7**   用户登录成功'
- en: '**8**   Process terminated (logout)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**8**   进程终止（注销）'
- en: For more information, see the utmp(5) man page.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅 utmp(5) 手册页。
- en: '**NOTE**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**NOTE**'
- en: '*During a forensic examination, look for possible passwords in the* btmp *file.
    If a user accidentally typed their password at the user login prompt, it will
    be logged here.*'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '*在法医检查中，查找可能的密码在* btmp *文件中。如果用户在登录提示时不小心输入了密码，它将被记录在这里。*'
- en: Alternatives to `utmpdump` are `utmpr`^([3](footnotes.xhtml#ch10foot_03)) (on
    GitHub at *[https://github.com/m9/lastlog/](https://github.com/m9/lastlog/)*)
    and a one-line Perl script to dump *wtmp* files (*[https://www.hcidata.info/wtmp.htm](https://www.hcidata.info/wtmp.htm)*.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`utmpdump` 的替代工具有 `utmpr`^([3](footnotes.xhtml#ch10foot_03))（GitHub 上的 *[https://github.com/m9/lastlog/](https://github.com/m9/lastlog/)*)
    和一个一行的 Perl 脚本来转储 *wtmp* 文件（* [https://www.hcidata.info/wtmp.htm](https://www.hcidata.info/wtmp.htm)*）。'
- en: In addition, the */var/log/lastlog* file contains the most recent login information
    for each user on a system. This is a sparse binary file that can be read on a
    running system with the `lastlog` command. Running `lastlog` on a separate Linux
    examination host will produce incorrect results because it reads the local password
    file, so an offline forensic tool must be used instead.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，*/var/log/lastlog* 文件包含系统中每个用户的最近登录信息。这是一个稀疏的二进制文件，可以通过 `lastlog` 命令在运行的系统上读取。在单独的
    Linux 检查主机上运行 `lastlog` 将产生不正确的结果，因为它读取本地密码文件，因此必须使用离线法医工具。
- en: 'The following three-line Perl script (*lastlog.pl*) parses offline *lastlog*
    files from suspect Linux systems:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下三行 Perl 脚本 (*lastlog.pl*) 解析嫌疑 Linux 系统的离线 *lastlog* 文件：
- en: '[PRE2]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Running it on an offline examination machine produces output similar to this:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在离线检查机器上运行时，输出类似于以下内容：
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The output starts with the numeric UID followed by a timestamp. The last two
    columns are the line (or terminal) used and the hostname or IP address (if it
    exists). This same information is in the *wtmp* log and should match.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 输出从数字 UID 开始，后跟时间戳。最后两列是使用的行（或终端）和主机名或 IP 地址（如果存在）。相同的信息也包含在 *wtmp* 日志中，并应匹配。
- en: The `lslogins` tool dumps information about *wtmp*, *btmp*, and *lastlog* in
    a single table (with the `--output-all` flag). It’s also possible to specify which
    offline copies of the files to use on an analysis machine. However, running this
    command will still read the */etc/passwd* and */etc/shadow* on your local analysis
    machine, creating incorrect output.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`lslogins` 工具将关于 *wtmp*、*btmp* 和 *lastlog* 的信息转储到一个表格中（使用 `--output-all` 标志）。也可以指定在分析机器上使用哪些离线文件副本。然而，运行此命令仍然会读取本地分析机器上的
    */etc/passwd* 和 */etc/shadow*，从而生成不正确的输出。'
- en: '**NOTE**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Be careful when running tools on your analysis machine that are intended for
    live systems. In many cases, the resulting data will not be about the suspect
    drive, but from your own analysis machine.*'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '*在分析机器上运行针对实时系统的工具时要小心。在许多情况下，生成的数据将不会关于嫌疑驱动器，而是来自您自己的分析机器。*'
- en: Some machines will have a */var/log/tallylog* file. This file maintains the
    state for `pam_tally`, a PAM module that counts attempted logins on a live system,
    possibly blocking on too many failed attempts. See the pam_tally2(8) man page
    for more information.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一些机器会有一个 */var/log/tallylog* 文件。该文件维护 `pam_tally` 的状态，这是一个 PAM 模块，用于计算实时系统上的登录尝试，可能会在登录失败次数过多时进行阻止。有关更多信息，请参见
    pam_tally2(8) 手册页。
- en: '***Shell Login***'
  id: totrans-70
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Shell 登录***'
- en: Users can log in to a Linux system with a shell on a local console^([4](footnotes.xhtml#ch10foot_04))
    or remotely with SSH. After successful authentication and authorization, a program
    called a shell is started and the user can interact with the system. This shell
    program interprets and executes commands typed by the user, or read from a text
    file run as a shell script.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以通过本地控制台^([4](footnotes.xhtml#ch10foot_04))登录到 Linux 系统，或者通过 SSH 远程登录。成功验证和授权后，启动一个名为
    shell 的程序，用户可以与系统进行交互。这个 shell 程序解释并执行用户输入的命令，或从文本文件中读取并作为 shell 脚本运行。
- en: The most common shell program on Linux systems is Bash; however, zsh and fish
    also have active user communities. The default shell is defined in the last field
    of the user’s */etc/passwd* entry. This section focuses on Bash, but the forensic
    examination principles should apply to any shell (refer to the specific shell’s
    man pages for help).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 系统上最常见的 shell 程序是 Bash；然而，zsh 和 fish 也有活跃的用户社区。默认 shell 定义在用户的 */etc/passwd*
    条目的最后一个字段中。本节重点介绍 Bash，但取证检查原理应适用于任何 shell（请参考特定 shell 的手册页获取帮助）。
- en: A shell can be *interactive* (for users) or *non-interactive* (for scripts).
    When invoked as a *login* shell (usually the first shell upon login), several
    additional startup scripts are run. [Figure 10-1](ch10.xhtml#ch010fig01) earlier
    in the chapter shows the typical process for getting a login shell.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Shell 可以是 *交互式*（针对用户）或 *非交互式*（针对脚本）。当作为 *登录* shell 启动时（通常是登录时的第一个 shell），会运行几个额外的启动脚本。[图
    10-1](ch10.xhtml#ch010fig01) 在本章前面显示了获取登录 shell 的典型过程。
- en: The local Linux console is a text mode interface via the PC monitor and keyboard.
    Over this physical interface, multiple “virtual consoles” are available, which
    can be switched using a hotkey (ALT-FN or CTRL-ALT-FN) or the `chvt` program.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 本地 Linux 控制台是通过 PC 显示器和键盘提供的文本模式接口。通过这个物理接口，可以使用多个“虚拟控制台”，可以通过热键（ALT-FN 或 CTRL-ALT-FN）或
    `chvt` 程序进行切换。
- en: Systemd-logind starts the agetty^([5](footnotes.xhtml#ch10foot_05)) program
    when a virtual console becomes active. The agetty daemon sets up the terminal
    and displays a login prompt. After a username is entered, it’s passed to the login
    program that asks for a password. If the username and password are correct and
    the user is authorized, a shell is started under the user’s UID and group ID (GID).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当虚拟控制台变为活动状态时，Systemd-logind 启动 agetty^([5](footnotes.xhtml#ch10foot_05)) 程序。agetty
    守护进程设置终端并显示登录提示。输入用户名后，传递给登录程序，要求输入密码。如果用户名和密码正确且用户已授权，则在用户的 UID 和组 ID（GID）下启动
    shell。
- en: Logging in to a shell over a network has been possible with telnet and rlogin
    since network protocols were introduced. Today, remote logins are typically done
    with more secure alternatives like SSH.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通过网络登录到 shell 从 telnet 和 rlogin 引入网络协议以来就一直是可能的。如今，远程登录通常使用更安全的替代方案，如 SSH。
- en: By default, the SSH daemon (sshd) listens on TCP port 22\. When incoming network
    connections are received, a cryptographic channel is established, the user is
    authenticated, and a shell is started. More details about analyzing SSH are provided
    later in the chapter, but [Figure 10-1](ch10.xhtml#ch010fig01) given earlier provides
    an overview of a network login.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，SSH 守护进程（sshd）监听 TCP 端口 22。当收到传入的网络连接时，建立加密通道，进行用户认证，并启动一个 shell。关于分析
    SSH 的更多细节将在本章稍后提供，但之前给出的 [图 10-1](ch10.xhtml#ch010fig01) 提供了网络登录的概述。
- en: Linux systems use PAM libraries for multiple login activities. PAM modules check
    passwords, authenticate users, determine authorization, and perform other pre-login
    checks. One important function on modern Linux systems is the starting of a systemd
    user instance (if it hasn’t started already). On successful login, PAM registers
    the session with systemd-logind, which starts the systemd user instance. The systemd
    user instance has a `default` `.target` that starts various unit files (user daemons,
    such as D-Bus) for the user before they are finally given a shell command prompt.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 系统使用 PAM 库进行多种登录活动。PAM 模块检查密码、验证用户、确定授权并执行其他登录前检查。现代 Linux 系统中的一个重要功能是启动
    systemd 用户实例（如果尚未启动）。登录成功后，PAM 将会话注册到 systemd-logind，进而启动 systemd 用户实例。systemd
    用户实例有一个 `default` `.target`，在用户最终获得 shell 命令提示符之前，会启动多个单元文件（用户守护进程，例如 D-Bus）。
- en: 'Shell login activity can be observed in the journal. This example shows an
    SSH login, followed by a logout:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过日志查看 shell 登录活动。此示例展示了一个 SSH 登录，随后是注销：
- en: '[PRE4]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Notice how in the first three lines the SSH daemon takes the connection and
    engages `pam`, which then involves systemd. SSH logins may also be found in syslog
    files like */var/log/auth.log*, or in other traditional Unix locations.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在前面三行中，SSH 守护进程接收连接并启动 `pam`，然后涉及 systemd。SSH 登录也可以在 syslog 文件中找到，如 */var/log/auth.log*，或者在其他传统
    Unix 位置。
- en: '**Shell Startup Files**'
  id: totrans-82
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**Shell 启动文件**'
- en: 'After a successful login, the shell starts and several scripts are run to set
    up the environment. Some system scripts are configured by the system administrator
    and run by every user, but users can also create and modify additional scripts
    in their home directories. Shell startup scripts (using Bash as an example) typically
    include the following:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 成功登录后，shell 启动并运行多个脚本来设置环境。一些系统脚本由系统管理员配置并由每个用户运行，但用户也可以在自己的主目录中创建和修改其他脚本。Shell
    启动脚本（以 Bash 为例）通常包括以下内容：
- en: '*/etc/profile*'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/profile*'
- en: '*/etc/profile.d/**'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/profile.d/**'
- en: '*~/.bash_profile*'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*~/.bash_profile*'
- en: '*/etc/bash.bashrc*'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/bash.bashrc*'
- en: '*~/.bashrc*'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*~/.bashrc*'
- en: The profile scripts are run only in a login shell (normally the first shell
    when the user logs in). The other scripts (**rc*) are run on every invocation
    of the shell.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件脚本仅在登录 shell 中运行（通常是用户登录时的第一个 shell）。其他脚本（**rc*）在每次调用 shell 时运行。
- en: 'On exit or logout, additional scripts are run, which typically include:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 退出或注销时，会运行额外的脚本，通常包括以下内容：
- en: '*/etc/bash.bash_logout*'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/bash.bash_logout*'
- en: '*~/.bash_logout*'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*~/.bash_logout*'
- en: These files should be examined for changes deviating from the defaults. In particular,
    user customization in the home directory may be interesting. In the case of a
    system-wide compromise, malicious modifications also may be made to the */etc/*
    files.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 应检查这些文件是否有偏离默认设置的变化。特别是，用户在主目录中的自定义可能会很有趣。在系统范围内被攻击的情况下，恶意修改也可能发生在 */etc/* 文件中。
- en: The environment variables, especially those that were explicitly set, can be
    interesting, and may reveal programs used or custom configuration. The `PATH`
    variable may point to an additional directory where the user’s own scripts and
    binaries are located. The `VISUAL` and `EDITOR` variables indicate the default
    editor used and, depending on the editor, may point to additional cache and history
    information about the files edited.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 环境变量，特别是那些显式设置的变量，可能很有趣，并且可能透露使用的程序或自定义配置。`PATH` 变量可能指向一个附加目录，其中包含用户自己的脚本和二进制文件。`VISUAL`
    和 `EDITOR` 变量表示使用的默认编辑器，并且根据编辑器的不同，可能指向关于已编辑文件的附加缓存和历史信息。
- en: 'Systemd and PAM provide additional locations to set environment variables at
    login:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Systemd 和 PAM 提供了额外的位置来设置登录时的环境变量：
- en: '*/etc/security/pam_env.conf*'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/security/pam_env.conf*'
- en: '*/etc/environment*'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/environment*'
- en: '*/etc/environment.d/*.conf*'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/environment.d/*.conf*'
- en: '*/usr/lib/environment.d/*.conf*'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/usr/lib/environment.d/*.conf*'
- en: '*~/.config/environment.d/*.conf*'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*~/.config/environment.d/*.conf*'
- en: You can find more information in the environment.d(5) and pam_env.conf(5) man
    pages. Variables stored in */run/* or modified in the memory of a running system
    will not be available in a postmortem forensic analysis.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 environment.d(5) 和 pam_env.conf(5) 的手册页中找到更多信息。存储在 */run/* 中或在正在运行的系统的内存中修改的变量在事后取证分析中不可用。
- en: '**Shell History**'
  id: totrans-102
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**Shell 历史**'
- en: Most shells can save a history of commands typed so the user can search and
    recall commands, instead of retyping them. This command history is especially
    interesting from an investigative point of view because they were explicitly typed
    by a human user. In the case of a compromised login, however, the command history
    could also be from a malicious script.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 shell 可以保存输入的命令历史，以便用户可以搜索并调用这些命令，而不是重新输入它们。从调查角度来看，这个命令历史特别有趣，因为这些命令是由人类用户显式输入的。然而，在登录被破坏的情况下，命令历史也可能来自恶意脚本。
- en: Shell history is configured using environment variables (starting with `HIST*`)
    that specify the file used, the number of commands to save, timestamp format,
    and other history features offered by the particular shell. The default Bash history
    file is *~/.bash_history*. This file contains a simple list of commands typed.
    Organizations wanting more forensic readiness may set the `HISTTIMEFORMAT` variable
    in Bash to include timestamps in the history. A shell history file may exist for
    every user, including root.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Shell 历史通过环境变量（以 `HIST*` 开头）进行配置，这些变量指定了使用的文件、保存的命令数量、时间戳格式以及特定 shell 提供的其他历史功能。默认的
    Bash 历史文件是 *~/.bash_history*。该文件包含一个简单的命令列表。希望提高取证准备的组织可以在 Bash 中设置 `HISTTIMEFORMAT`
    变量，以在历史记录中包含时间戳。每个用户（包括 root）都可能有一个 shell 历史文件。
- en: 'An examination of the shell history gives insight into the activity and character
    of the human user. Items, activity, and behavior you can observe or look for in
    the shell history include:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 shell 历史记录可以提供有关用户活动和行为的洞察。可以在 shell 历史记录中观察到或寻找的项目、活动和行为包括：
- en: Skill level (simple commands or mistakes indicating a beginner)
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技能水平（简单命令或表明初学者的错误）
- en: Revealed filenames from files created, edited, or deleted
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 揭示的文件名（来自创建、编辑或删除的文件）
- en: Commands modifying system configuration
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改系统配置的命令
- en: Manually setting up tunnels, relays, or VPNs
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动设置隧道、代理或 VPN
- en: Mounting local or remote filesystems or encrypted containers
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 挂载本地或远程文件系统或加密容器
- en: Testing local daemons or functionality on remote hosts
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试本地守护进程或远程主机上的功能
- en: Passwords typed (accidentally or as parameters on a command line)
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入的密码（无论是偶然输入还是作为命令行参数）
- en: Revealing other IP addresses or hostnames from running `ping`, `nslookup`, `ssh`,
    or other network tools
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过运行 `ping`、`nslookup`、`ssh` 或其他网络工具泄露的其他 IP 地址或主机名
- en: Information from text accidentally copy/pasted into a terminal window
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 意外复制/粘贴到终端窗口中的文本信息
- en: Any sequence of commands revealing intent or train of thought
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何揭示意图或思维过程的命令序列
- en: Typed commands are stored in memory and written to the history file when the
    shell exits. A history file may contain lines from multiple shell instances that
    exited at different times, so the commands saved may not be in chronological order.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 输入的命令会存储在内存中，并在 shell 退出时写入历史文件。历史文件可能包含来自多个不同时间退出的 shell 实例的命令，因此保存的命令可能不是按时间顺序排列的。
- en: If the history file has been explicitly disabled, deleted, zeroed, or symlinked
    to */dev/null*, it indicates an awareness of security or higher skill level of
    a suspected user or an attacker. For an excellent SANS talk on Bash history forensics,
    see *[https://youtu.be/wv1xqOV2RyE/](https://youtu.be/wv1xqOV2RyE/)*.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果历史文件被显式禁用、删除、清空或符号链接到 */dev/null*，则表明怀疑用户或攻击者具有一定的安全意识或更高的技能水平。有关 Bash 历史取证的精彩
    SANS 演讲，请参见 *[https://youtu.be/wv1xqOV2RyE/](https://youtu.be/wv1xqOV2RyE/)*。
- en: '***X11 and Wayland***'
  id: totrans-118
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***X11 和 Wayland***'
- en: The X11 window system was the de facto standard graphical interface for Unix
    and the natural choice for the Linux community. The most popular implementation
    of X11 on Linux today is [X.Org](http://X.Org), and many new extensions and enhancements
    have been added since forking from the XFree86 project.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: X11 窗口系统曾是 Unix 系统的事实标准图形界面，也是 Linux 社区的自然选择。如今，Linux 上最流行的 X11 实现是 [X.Org](http://X.Org)，自从从
    XFree86 项目分叉以来，已经加入了许多新的扩展和增强功能。
- en: '[X.Org](http://X.Org) connects applications to input devices (keyboard, mouse,
    touchscreen, and so on) and to output devices like graphics cards and monitors.
    In addition to [X.Org](http://X.Org), a separate window manager is needed to manage
    the windows (placement, decorations, resizing, movement, and so on). On top of
    the window manager, a desktop environment typically provides an additional “look
    and feel” or even a completely separate graphical shell. Each of these components
    and subcomponents may store information useful in a digital forensic context.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[X.Org](http://X.Org)将应用程序连接到输入设备（如键盘、鼠标、触摸屏等）以及输出设备，如显卡和显示器。除了[X.Org](http://X.Org)之外，还需要一个单独的窗口管理器来管理窗口（放置、装饰、调整大小、移动等）。在窗口管理器之上，桌面环境通常会提供额外的“外观和感觉”或甚至完全独立的图形外壳。这些组件和子组件中的每一个都可能存储在数字取证环境中有用的信息。'
- en: 'Most of the [X.Org](http://X.Org) configuration is done automatically; however,
    manual tweaks and customization are typically found in */etc/X11/xorg.conf* or
    files in the */etc/X11/xorg.conf.d/* directory. A log of [X.Org](http://X.Org)
    activity is created by default and written to */var/log/Xorg.0.log* (in some cases,
    it may be located in the user’s *.local/share/xorg/Xorg.0.log*). The contents
    of the file describe the graphics hardware, monitors, input devices, default screen
    resolution, and more. Some examples are shown here, taken from such a log:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分的[X.Org](http://X.Org)配置是自动完成的；然而，手动调整和定制通常可以在*/etc/X11/xorg.conf*或*/etc/X11/xorg.conf.d/*目录下的文件中找到。默认情况下，会创建[X.Org](http://X.Org)活动日志，并写入到*/var/log/Xorg.0.log*（在某些情况下，可能位于用户的*.local/share/xorg/Xorg.0.log*中）。该文件的内容描述了图形硬件、显示器、输入设备、默认屏幕分辨率等信息。以下是从此类日志中提取的一些示例：
- en: '[PRE5]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Other instances of the log may exist, such as a */var/log/Xorg.1.log* file.
    Unlike rotated logfiles, this is not an older version, but represents the display
    that was logged (0, 1, and so on). Older versions of the log may also exist and
    have an *.old* filename extension.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 日志中可能还存在其他实例，如*/var/log/Xorg.1.log*文件。与旋转日志文件不同，这不是旧版本，而是表示已记录的显示（0、1，依此类推）。日志的旧版本也可能存在，并且具有*.old*文件扩展名。
- en: 'The *Xorg* logfiles contain “markers” used to describe the log entries:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '*Xorg*日志文件包含用于描述日志条目的“标记”：'
- en: (–)     Probed
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: (–)     探测到
- en: (**)     From config file
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: (**)     来自配置文件
- en: (==)     Default setting
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: (==)     默认设置
- en: (++)     From command line
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: (++)     来自命令行
- en: (!!)     Notice
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: (!!)     注意
- en: (II)     Informational
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: (II)     信息
- en: (WW)     Warning
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: (WW)     警告
- en: (EE)     Error
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: (EE)     错误
- en: (NI)     Not implemented
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: (NI)     未实现
- en: (??)     Unknown
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: (??)     未知
- en: If a user was working with X11 and later switched to Wayland, this log may still
    exist and would provide information from an earlier point in time. You can find
    more information about [X.Org](http://X.Org) in the Xorg(1) man page.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户曾使用X11并后来切换到Wayland，这个日志可能仍然存在，并提供从早期时间点的信息。你可以在Xorg(1)手册页中找到更多关于[X.Org](http://X.Org)的信息。
- en: '[Figure 10-2](ch10.xhtml#ch010fig02) shows X11’s basic architecture. The evolution
    of desktop computing obsoleted many of X11’s original design decisions, and a
    more modern windowing system was needed. Wayland was designed to be the replacement,
    and most Linux distributions are moving toward Wayland-based desktops.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[图10-2](ch10.xhtml#ch010fig02)展示了X11的基本架构。桌面计算的发展使得许多X11原始设计决策变得过时，因此需要一种更现代的窗口系统。Wayland被设计为替代品，并且大多数Linux发行版正朝着基于Wayland的桌面系统发展。'
- en: '![Image](Images/ch10fig02.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch10fig02.jpg)'
- en: '*Figure 10-2: X11 Architecture*'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '*图10-2：X11架构*'
- en: 'Window managers are used in X11 environments to manage windows. Functionally,
    the window manager is just another X11 client. Most distros and graphical environments
    have a default window manager. Some popular X11 window mangers include:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口管理器用于X11环境中管理窗口。从功能上讲，窗口管理器只是另一个X11客户端。大多数Linux发行版和图形环境都有默认的窗口管理器。一些流行的X11窗口管理器包括：
- en: Mutter (GNOME default)
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mutter（GNOME默认）
- en: KWin (KDE default)
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KWin（KDE默认）
- en: Xfwm4 (Xfce default)
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xfwm4（Xfce默认）
- en: Openbox (LXDE default)
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Openbox（LXDE默认）
- en: Fluxbox, FVWM, and tiling window managers like i3
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fluxbox、FVWM以及像i3这样的平铺窗口管理器
- en: Each window manager will have its own configuration and logging artifacts. See
    the associated documentation for more information.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 每个窗口管理器都会有自己的配置和日志文件。有关更多信息，请参阅相关文档。
- en: Wayland uses a different model than X11 and combines window management together
    with compositing and other functionality. [Figure 10-3](ch10.xhtml#ch010fig03)
    shows Wayland’s architecture. The differences between X11 and Wayland can be seen
    by comparing the two architectures. As a side note, Wayland is not exclusive to
    Linux and is used in other operating systems like BSD.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Wayland 使用与 X11 不同的模型，将窗口管理、合成和其他功能结合在一起。[图 10-3](ch10.xhtml#ch010fig03) 显示了
    Wayland 的架构。通过比较 X11 和 Wayland 的架构，可以看到它们的差异。顺便提一下，Wayland 并不专属于 Linux，还用于其他操作系统，如
    BSD。
- en: '![Image](Images/ch10fig03.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch10fig03.jpg)'
- en: '*Figure 10-3: Wayland Architecture*'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10-3：Wayland 架构*'
- en: More information about the architectural differences between X11 and Wayland
    is available at *[https://wayland.freedesktop.org/architecture.html](https://wayland.freedesktop.org/architecture.html)*.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 X11 和 Wayland 之间架构差异的更多信息，请访问 *[https://wayland.freedesktop.org/architecture.html](https://wayland.freedesktop.org/architecture.html)*。
- en: Wayland compositors are becoming more popular. Mutter and KWin both support
    Wayland (in addition to X11), and power users are using specialty compositors
    like Sway (an i3 clone for Wayland) or Hikari (originally developed for FreeBSD).
    Each compositor has configuration and logging capability that can be examined,
    but the forensic analysis of individual compositors is outside the scope of this
    book.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Wayland 合成器越来越受欢迎。Mutter 和 KWin 都支持 Wayland（除了 X11），而高级用户则使用像 Sway（Wayland 的
    i3 克隆）或 Hikari（最初为 FreeBSD 开发）这样的专业合成器。每个合成器都有可以检查的配置和日志功能，但对个别合成器的法医分析超出了本书的范围。
- en: '***Desktop Login***'
  id: totrans-151
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***桌面登录***'
- en: Typical Linux desktop and laptop systems have a graphical login screen. This
    screen is sometimes called the *greeter* and is provided by a daemon called the
    *display manager*. The display manager sets up the graphics on the local machine
    and provides pre-login options (for example, language, screen brightness, accessibility,
    and so on).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的 Linux 桌面和笔记本系统有一个图形登录屏幕。这个屏幕有时被称为 *greeter*，由一个名为 *display manager* 的守护进程提供。显示管理器设置本地机器的图形并提供登录前的选项（例如语言、屏幕亮度、辅助功能等）。
- en: The display manager is independent of the graphical environment used, and it
    may allow users to choose which graphical environment they want to use after login.
    The most popular display managers today are GDM (the GNOME default) and SDDM (the
    KDE Plasma default).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 显示管理器与使用的图形环境无关，它可能允许用户在登录后选择想要使用的图形环境。目前最流行的显示管理器是 GDM（GNOME 默认）和 SDDM（KDE
    Plasma 默认）。
- en: 'You can determine which desktop manager is used by examining the systemd *display-manager.service*
    unit file, which is a symbolic link to the actual display manager. In the following
    example, the default target is symlinked to the graphical target and specifies
    (`Wants=`) the display manager service:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过检查 systemd *display-manager.service* 单元文件来确定使用的桌面管理器，该文件是实际显示管理器的符号链接。在以下示例中，默认目标被符号链接到图形目标，并指定（`Wants=`）显示管理器服务：
- en: '[PRE6]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The display manager service is symlinked to the GDM service, which starts (`ExecStart=`)
    the GDM daemon:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 显示管理器服务是符号链接到 GDM 服务，该服务启动（`ExecStart=`）GDM 守护进程：
- en: '[PRE7]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Depending on the configuration, the GDM display manager may save logs in */var/log/gdm/*
    or leave traces in the systemd journal.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 根据配置，GDM 显示管理器可能会将日志保存在 */var/log/gdm/* 中，或者在 systemd 日志中留下痕迹。
- en: 'The SDDM display manager may save logs in */var/log/sddm.log* and also log
    activity in the systemd journal (search for `sddm`). After a successful login,
    the SDDM display manager stores session logs in the user’s home directory that
    can be examined:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: SDDM 显示管理器可能将日志保存在 */var/log/sddm.log* 中，并且还会在 systemd 日志中记录活动（搜索 `sddm`）。成功登录后，SDDM
    显示管理器将会话日志存储在用户的主目录中，供检查：
- en: '[PRE8]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Other logs for either Wayland or X11 sessions may be present that are related
    to the desktop environment.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 可能存在与桌面环境相关的其他日志，这些日志与 Wayland 或 X11 会话相关。
- en: 'Upon successful login via the display manager, multiple processes are started.
    For example:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 通过显示管理器成功登录后，多个进程将被启动。例如：
- en: User instance of systemd (`systemd --user`)
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统用户实例（`systemd --user`）
- en: Desktop session manager (`gnome-session`, `plasma_session`, `xfce4-session`,
    and so on)
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 桌面会话管理器（`gnome-session`、`plasma_session`、`xfce4-session` 等）
- en: Window manager (if running X11)
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 窗口管理器（如果运行 X11）
- en: Systemd user units
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统用户单元
- en: XDG session autostart items (**.desktop* files)
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XDG 会话自动启动项（**.desktop** 文件）
- en: D-Bus session instance
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: D-Bus 会话实例
- en: Agents (polkit, gpg, ssh, and so on)
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理（polkit、gpg、ssh 等）
- en: The desktop or graphical shell
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 桌面或图形外壳
- en: Supporting daemons for the desktop environment (settings, Pulseaudio or PipeWire,
    Bluetooth, and so on)
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持桌面环境的守护进程（设置、Pulseaudio或PipeWire、蓝牙等）
- en: Each component will be running under the user’s UID. Configuration, logs, cache,
    and other related data is typically found in the user’s XDG directories. (Refer
    back to [Figure 10-1](ch10.xhtml#ch010fig01) for an overview of the graphical
    login process.)
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 每个组件将在用户的UID下运行。配置、日志、缓存和其他相关数据通常可以在用户的XDG目录中找到。（参考[图10-1](ch10.xhtml#ch010fig01)了解图形登录过程的概述。）
- en: 'The systemd *user* instance (not to be confused with the systemd *system* instance)
    is responsible for activating the units needed to bring up and supervise the login
    session. The systemd user instance is started when PAM registers the session with
    systemd-logind. The user unit files are found here:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: systemd *用户*实例（与systemd *系统*实例不同）负责激活启动和监督登录会话所需的单元。当PAM将会话注册到systemd-logind时，启动systemd用户实例。用户单元文件位于这里：
- en: '*/usr/lib/systemd/user/**'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/usr/lib/systemd/user/**'
- en: '*/etc/systemd/user/**'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/systemd/user/**'
- en: '*~/.config/systemd/user/**'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*~/.config/systemd/user/**'
- en: Each directory overrides the previous. The first two directories are the vendor
    and system administrator defaults. The last directory contains the custom configuration
    in the user’s home directory. In a forensic examination, these directories can
    be checked for deviations from the expected defaults, or any custom additions
    added by the system administrator, user, or malicious actor. The system-wide configuration
    of the systemd user instance is found in the */etc/systemd/user.conf* and */etc/systemd/logind.conf*
    files.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 每个目录都会覆盖前一个目录。前两个目录是供应商和系统管理员的默认值。最后一个目录包含用户主目录中的自定义配置。在取证检查中，可以检查这些目录以发现与预期默认设置的偏差，或系统管理员、用户或恶意行为者添加的任何自定义内容。systemd用户实例的系统范围配置文件位于*/etc/systemd/user.conf*和*/etc/systemd/logind.conf*文件中。
- en: 'In addition to the systemd user instance, the desktop session manager will
    bring up the user’s login environment with its own startup files. The XDG desktop
    definition files (**.desktop*) provide the information needed to bring up a user’s
    desktop environment. The XDG standards also define common locations for storing
    desktop configuration files. These files are found in the autostart directories,
    and files specific to the desktop environment are read and applications are launched
    accordingly. The system default and user-defined directory locations (user-created
    files have priority) are located here:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 除了systemd用户实例，桌面会话管理器还将通过自己的启动文件启动用户的登录环境。XDG桌面定义文件（**.desktop**）提供启动用户桌面环境所需的信息。XDG标准还定义了存储桌面配置文件的常用位置。这些文件位于自动启动目录中，并且特定于桌面环境的文件会被读取并启动相应的应用程序。系统默认和用户自定义的目录位置（用户创建的文件优先）位于这里：
- en: '*/etc/xdg/autostart/**'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/xdg/autostart/**'
- en: '*~/.config/autostart/**'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*~/.config/autostart/**'
- en: Window managers and desktop shells may also have their own *autostart* directories
    containing desktop files that start relevant components. The XDG Desktop Entry
    Specification can be found at *[https://specifications.freedesktop.org/desktop-entry-spec/](https://specifications.freedesktop.org/desktop-entry-spec/)*.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口管理器和桌面外壳也可能有自己的*autostart*目录，其中包含启动相关组件的桌面文件。XDG桌面条目规范可以在*[https://specifications.freedesktop.org/desktop-entry-spec/](https://specifications.freedesktop.org/desktop-entry-spec/)*找到。
- en: 'Definition files have a **.desktop* extension and describe how the desktop
    component should be brought up. The following example shows several entries illustrating
    the contents of a definition file:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 定义文件具有**.desktop**扩展名，并描述桌面组件应如何启动。以下示例展示了几个条目，说明定义文件的内容：
- en: '[PRE9]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Here, an application (GNOME Keyring, discussed later in this chapter) is described.
    Files have multilingual content for names and comments, and the context in which
    the definition file is valid is specified. The program and flags to execute are
    also defined.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这里描述了一个应用程序（稍后在本章讨论的GNOME Keyring）。文件包含名称和注释的多语言内容，并指定定义文件有效的上下文。同时也定义了要执行的程序和标志。
- en: Systemd and XDG both provide similar functionality in setting up desktop environments.
    Because of the widespread use of XDG and a commitment to compatibility by the
    major distros, both of them can be examined. Many desktop environments are transitioning
    XDG desktop startup activity to systemd, which is a complex process requiring
    backward compatibility with the XDG **.desktop* files. If a **.desktop* file contains
    the line `X-GNOME-Hidden UnderSystemd=true`, it means that the GNOME session manager
    should ignore the file, as it is being started by systemd.^([6](footnotes.xhtml#ch10foot_06))
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: Systemd 和 XDG 都提供了类似的功能来设置桌面环境。由于 XDG 被广泛使用，并且主要发行版承诺保持兼容性，两个系统都可以进行检查。许多桌面环境正在将
    XDG 桌面启动活动迁移到 systemd，这一过程复杂，需要与 XDG **.desktop** 文件保持向后兼容。如果 **.desktop** 文件包含
    `X-GNOME-Hidden UnderSystemd=true` 这一行，表示 GNOME 会话管理器应忽略该文件，因为它是由 systemd 启动的。^([6](footnotes.xhtml#ch10foot_06))
- en: 'Some session managers can save and restore session state about the desktop.
    These files can be examined to determine which windows may have been open in a
    previously saved state. The location of the saved session information is different
    for each desktop environment, and common locations include:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 一些会话管理器可以保存和恢复桌面状态。这些文件可以检查，以确定之前保存状态中哪些窗口可能已经打开。保存的会话信息的位置因桌面环境而异，常见的位置包括：
- en: '*~/.cache/sessions/*'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*~/.cache/sessions/*'
- en: '*~/.config/session/*'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*~/.config/session/*'
- en: '*~/.config/gnome-session/saved-session/*'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*~/.config/gnome-session/saved-session/*'
- en: '*~/.config/ksmserverrc*'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*~/.config/ksmserverrc*'
- en: Sessions may be saved automatically on exit or explicitly requested by the user.
    Depending on the desktop environment and its configuration, the session manager
    may save a simple list of open programs and also include the window sizes and
    locations on-screen.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 会话可能会在退出时自动保存，或者由用户明确请求。根据桌面环境及其配置，会话管理器可能保存一个简单的打开程序列表，并包含窗口的大小和屏幕上的位置。
- en: '**Fast User Switching**'
  id: totrans-192
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**快速用户切换**'
- en: Multiple users can be logged in to separate graphical environments at the same
    time by starting their sessions in different virtual consoles. Switching between
    users can be done with a hotkey (CTRL-ALT-FN), the `chvt` command, or a *switch
    user* option in the current graphical environment. User switching may indicate
    multiple people using the same machine or one person using multiple identities
    on the same machine.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在不同的虚拟控制台中启动会话，多个用户可以同时登录到不同的图形环境中。用户之间的切换可以通过热键（CTRL-ALT-FN）、`chvt` 命令，或当前图形环境中的*切换用户*选项来完成。用户切换可能意味着多个人在同一台机器上使用，或者一个人在同一台机器上使用多个身份。
- en: 'Also known as *fast user switching*, a menu option is typically provided in
    the graphical environment (if there are multiple users) that locks the screen
    and jumps to the display manager where another user can be authenticated. Depending
    on the display manager, this transition might be found in the journal. The following
    example log shows a new GDM session (a login screen) started due to a user switch,
    and terminated less than a minute later after the second user successfully authenticated:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 也称为*快速用户切换*，通常在图形环境中提供一个菜单选项（如果有多个用户），该选项会锁定屏幕并跳转到显示管理器，在那里可以验证另一个用户的身份。根据显示管理器的不同，这一过渡可能会出现在日志中。以下示例日志显示，由于用户切换，启动了一个新的
    GDM 会话（登录屏幕），并在不到一分钟后，在第二个用户成功验证后结束：
- en: '[PRE10]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Observing when a display manager is started without a user logging out indicates
    a possible user switch. This information provides a starting point to examine
    surrounding logs and filesystem timestamps that identify which users were active
    before and after the switch. A user switch can also be initiated from a locked
    screen by another person.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 当显示管理器在没有用户注销的情况下启动时，表明可能发生了用户切换。这些信息提供了一个起点，可以检查周围的日志和文件系统时间戳，以确定切换前后哪些用户是活跃的。用户切换也可以由另一位用户在锁定屏幕时发起。
- en: '**Authentication and Authorization**'
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**身份验证与授权**'
- en: When a user wants to access a Linux system, a number of checks are made before
    granting that access. The system looks for an indicator that the person really
    is who they claim to be and that they are indeed authorized to access the resources
    they want. Today, this is typically done with PAM. PAM can provide authentication
    and authorization controls between the user and the system, both at login and
    throughout the user login session.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户想要访问 Linux 系统时，在授予访问权限之前会进行一系列检查。系统会寻找一个指示，确认此人确实是他们所声称的身份，并且他们确实有权访问所需的资源。如今，这通常通过
    PAM 来完成。PAM 可以在用户和系统之间提供身份验证和授权控制，无论是在登录时还是在整个用户登录会话期间。
- en: 'PAM configuration is in the *pam.conf* file and the */etc/pam.d/* directory.
    PAM also logs the successes and failures of attempted authentication and authorization.
    Here are several examples:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: PAM 配置文件位于 *pam.conf* 文件和 */etc/pam.d/* 目录下。PAM 还记录尝试进行身份验证和授权的成功与失败。以下是几个示例：
- en: '[PRE11]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The first two lines ➊ show logs from an SSH login and logout over a network.
    The next two lines ➋ show logs from a login and logout on a local virtual console
    (text login prompt). The last two lines ➌ show a login and logout using GDM (a
    typical graphical login screen).
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 前两行 ➊ 显示的是通过网络进行的 SSH 登录和登出的日志。接下来的两行 ➋ 显示的是在本地虚拟控制台上（文本登录提示）进行的登录和登出的日志。最后两行
    ➌ 显示的是使用 GDM（典型的图形登录界面）进行的登录和登出。
- en: '***User, Group, and Password Files***'
  id: totrans-202
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***用户、组和密码文件***'
- en: Linux adopted the concepts and implementation of usernames and groups from Unix.
    Traditionally, these usernames and groups were listed in several files in the
    */etc/* directory.^([7](footnotes.xhtml#ch10foot_07)) The password file */etc/passwd*
    (which doesn’t contain passwords anymore) lists the defined users on the system
    with some additional information. The shadow file */etc/shadow* contains hashed
    passwords for each (enabled) user. The group file */etc/group* lists the groups
    and their members. Each user has a default group assigned (typically named after
    themselves) and can be added to other groups for access to files and resources.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 采用了 Unix 的用户名和组的概念和实现。传统上，这些用户名和组会列在 */etc/* 目录中的几个文件里。^([7](footnotes.xhtml#ch10foot_07))
    密码文件 */etc/passwd*（不再包含密码）列出了系统中定义的用户及一些附加信息。影子文件 */etc/shadow* 包含每个（已启用）用户的哈希密码。组文件
    */etc/group* 列出了组及其成员。每个用户都有一个默认的组（通常以用户名命名），并可以被添加到其他组以便访问文件和资源。
- en: 'The format of the *passwd*, *shadow,* and *group* files are described in the
    passwd(5),^([8](footnotes.xhtml#ch10foot_08)) shadow(5), and group(5) man pages.
    These files are plaintext, have one line per user/group, and have multiple fields
    per line. The following shows some excerpts from a *passwd* file:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '*passwd*、*shadow* 和 *group* 文件的格式在 passwd(5)、^([8](footnotes.xhtml#ch10foot_08))
    shadow(5) 和 group(5) 手册页中有描述。这些文件是纯文本格式，每行一个用户/组，每行有多个字段。以下是 *passwd* 文件中的一些摘录：'
- en: '[PRE12]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The fields (separated by colons) of the *passwd* file are as follows:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '*passwd* 文件的字段（用冒号分隔）如下：'
- en: Login name
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录名
- en: Password field (`x` indicates a password is stored in */etc/shadow*; `!` indicates
    password access is locked; a blank field means no password is required and applications
    may choose to allow access)
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码字段（`x` 表示密码存储在 */etc/shadow* 中；`!` 表示密码访问被锁定；空字段表示不需要密码，应用程序可以选择允许访问）
- en: Numerical user ID
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字用户 ID
- en: Numerical group ID
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字组 ID
- en: Comment field (often the user’s full name)
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注释字段（通常是用户的全名）
- en: User’s home directory
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户的主目录
- en: User’s shell program (the `nologin` program simply rejects login attempts)
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户的 Shell 程序（`nologin` 程序会直接拒绝登录尝试）
- en: The */etc/passwd* file has historically been a prime target of theft on early
    Unix systems. Anyone stealing this file had a list of users and encrypted/ hashed
    passwords that could be potentially cracked. This weakness led to the development
    of the shadow password file.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '*/etc/passwd* 文件在早期 Unix 系统中曾是盗窃的主要目标。任何窃取此文件的人都可以获得一个用户列表和加密/哈希密码，这些密码可能会被破解。这一弱点促使了影子密码文件的开发。'
- en: 'The */etc/shadow* file is not readable by regular users because it contains
    the (encrypted) password and other potentially sensitive information. Some examples
    from a shadow file are as follows:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '*/etc/shadow* 文件不能被普通用户读取，因为它包含（加密的）密码和其他可能敏感的信息。以下是一些来自影子文件的示例：'
- en: '[PRE13]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The fields (separated by colons) of the *shadow* file are as follows:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '*shadow* 文件的字段（用冒号分隔）如下：'
- en: Login name
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录名
- en: Encrypted password (if not a valid password string, password access is blocked)
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密密码（如果不是有效的密码字符串，则会阻止密码访问）
- en: Date of last password change (days since January 1, 1970)
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后一次密码更改的日期（自 1970 年 1 月 1 日以来的天数）
- en: Days until a user is allowed to change their password (if empty, the user can
    change password any time)
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户被允许更改密码的天数（如果为空，则用户可以随时更改密码）
- en: Days until a user is required to change their password (if empty, the user never
    has to change password)
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户必须更改密码的天数（如果为空，则用户永远不必更改密码）
- en: Password warning period (number of days before password expires)
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码警告期（密码过期前的天数）
- en: Password grace period (number of days user can change password after expiration)
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码宽限期（用户过期后可以更改密码的天数）
- en: Account expiration date (days since January 1, 1970)
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帐号过期日期（自 1970 年 1 月 1 日以来的天数）
- en: Unused field reserved for future use
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未使用的字段预留给未来使用
- en: The date of last password change may be interesting when constructing a forensic
    timeline of user activity.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建用户活动的取证时间线时，最后一次密码更改日期可能非常重要。
- en: 'The encrypted password field has three dollar sign ($)–separated fields. These
    fields are the encryption algorithm used, the encryption salt (to make cracking
    more difficult), and the encrypted password string. The encryption algorithms
    are:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 加密的密码字段包含三个由美元符号（$）分隔的字段。这些字段分别是使用的加密算法、加密盐值（用来增加破解难度）和加密的密码字符串。加密算法包括：
- en: '| **1** | MD5 |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| **1** | MD5 |'
- en: '| **2a** | Blowfish |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| **2a** | Blowfish |'
- en: '| **5** | SHA-256 |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| **5** | SHA-256 |'
- en: '| **6** | SHA-512 |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| **6** | SHA-512 |'
- en: See the crypt(3) man page for more information.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅 crypt(3) 手册页获取更多信息。
- en: 'The */etc/group* file stores information about Unix groups, including a list
    of group members. Some excerpts from a typical *group* file are as follows:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '*/etc/group* 文件存储关于 Unix 组的信息，包括组成员列表。以下是一个典型 *group* 文件的部分摘录：'
- en: '[PRE14]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The fields (separated by colons) of the group file are as follows:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 组文件的字段（由冒号分隔）如下：
- en: Group name
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组名
- en: Password (if used, the password information is stored in a gshadow file)
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码（如果使用，则密码信息存储在 gshadow 文件中）
- en: Numerical group ID
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字组 ID
- en: Comma-separated list of members
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以逗号分隔的成员列表
- en: A default group for each user is defined in the */etc/passwd* file. The */etc/
    group* file can provide additional group configuration. For example, notice how
    the *sudo* group lists users allowed to use the `sudo` program.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 每个用户的默认组定义在 */etc/passwd* 文件中。*/etc/group* 文件可以提供额外的组配置。例如，注意 *sudo* 组列出了可以使用
    `sudo` 程序的用户。
- en: 'Users and groups are simply human-readable names mapped to numbers: the user
    ID (UID) and group ID (GID). The *passwd* and *group* files define the name-to-number
    assignment.^([9](footnotes.xhtml#ch10foot_09)) There is no requirement to have
    an assigned user or group name for a particular UID or GID number. To illustrate,
    observe the following sequence of commands:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 用户和组只是映射到数字的可读名称：用户 ID（UID）和组 ID（GID）。*passwd* 和 *group* 文件定义了名称到数字的分配。^([9](footnotes.xhtml#ch10foot_09))
    对于特定的 UID 或 GID 数字，没有要求必须分配用户或组名称。为说明这一点，观察以下命令序列：
- en: '[PRE15]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In this example, a file is created using the `touch` command. The user and group
    is then changed using `chown` to numeric values that are not defined in the password
    or group files. You can see in the directory listing that the unknown user is
    `5555` and the unknown group is `6666`. From a forensics perspective, files with
    unassigned users and groups are interesting because they may indicate a previously
    deleted user/group or an attempt to hide malicious activity.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，文件是使用 `touch` 命令创建的。然后，使用 `chown` 命令将用户和组更改为在密码或组文件中未定义的数字值。从目录列表中可以看到，未知用户为
    `5555`，未知组为 `6666`。从取证角度来看，具有未分配用户和组的文件很有趣，因为它们可能表示一个先前删除的用户/组或隐藏恶意活动的尝试。
- en: 'How can we find files without assigned UIDs or GIDs? On a live system, the
    `find` command has the options `-nouser` and `-nogroup`, which can be used to
    scan a system for files that don’t have an existing user or group assigned. On
    a postmortem drive image, forensic software may have the ability to identify such
    files (using EnCase EnScript, for example). Identified files and directories can
    be analyzed in more detail to answer certain questions:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如何找到没有分配 UID 或 GID 的文件？在活动系统中，`find` 命令具有 `-nouser` 和 `-nogroup` 选项，可用于扫描没有分配现有用户或组的文件。在事后检查的磁盘镜像中，取证软件可能具备识别此类文件的能力（例如使用
    EnCase EnScript）。已识别的文件和目录可以进一步分析，以回答某些问题：
- en: How and why were the files created?
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件是如何以及为什么创建的？
- en: What happened to the original user and group?
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始用户和组发生了什么？
- en: Are the file timestamps interesting or relevant?
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件的时间戳是否有趣或相关？
- en: Does this UID or GID appear in any logs?
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个 UID 或 GID 是否出现在任何日志中？
- en: On a live system, are there any running processes with the same UID and GID?
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在运行的系统中，是否有任何进程具有相同的 UID 和 GID？
- en: There are several ways users and groups can be created and deleted. A system
    administrator can manually edit the *passwd*, *shadow*, and *group* files to add
    or remove assigned UIDs or GIDs. Command line tools like `useradd` or `groupadd`
    can be used. Distros may also provide graphical configuration tools that can add
    users and groups.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以创建和删除用户和组。系统管理员可以手动编辑 *passwd*、*shadow* 和 *group* 文件，添加或删除分配的 UID 或 GID。也可以使用
    `useradd` 或 `groupadd` 等命令行工具。发行版可能还提供图形配置工具来添加用户和组。
- en: 'When a user or group is created or modified, some tools make backup copies
    of the password, group, shadow files, and others. The backup copies have the same
    name with a hyphen (-) appended, as follows:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户或组被创建或修改时，一些工具会制作密码、组、shadow 文件等的备份副本。备份副本的名称与原文件相同，只是末尾会加上连字符（-），如下所示：
- en: '*/etc/passwd-*'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/passwd-*'
- en: '*/etc/shadow-*'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/shadow-*'
- en: '*/etc/gshadow-*'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/gshadow-*'
- en: '*/etc/group-*'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/group-*'
- en: '*/etc/subuid-*'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*/etc/subuid-*'
- en: These backup copies are normally identical to the original files. If a file
    is different, it was possibly modified manually or using alternative tools not
    supporting this backup convention. Examining the differences may reveal users
    that have been deleted, added, or modified previously.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 这些备份副本通常与原始文件相同。如果文件不同，则可能是手动修改的，或者使用了不支持该备份约定的其他工具。检查差异可能揭示之前已删除、添加或修改的用户。
- en: 'The *passwd* file contains both human users and system users. When analyzing
    human user activity, it is important to know the difference. The numeric ID fields
    in the *passwd* and *group* can help make this distinction in a forensic investigation.
    The following list describes a few standard users, groups, and allocated numeric
    ranges:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '*passwd* 文件包含了人类用户和系统用户。在分析人类用户活动时，了解二者的区别非常重要。*passwd* 和 *group* 中的数字 ID 字段可以帮助在法医调查中做出区分。以下列表描述了一些标准用户、组和分配的数字范围：'
- en: '**0** root (LSB required)'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '**0** root（LSB 必需）'
- en: '**1** daemon (LSB required)'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '**1** daemon（LSB 必需）'
- en: '**2** bin (LSB required)'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '**2** bin（LSB 必需）'
- en: '**0–100** Allocated by the system'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '**0–100** 系统分配'
- en: '**101–999** Allocated by applications'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '**101–999** 应用程序分配'
- en: '**1000–6000** Regular (human) user accounts'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '**1000–6000** 普通（人类）用户帐户'
- en: '**65534** nobody'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '**65534** nobody'
- en: Deviations from these standard UID and GID ranges are interesting from the perspective
    of a forensic investigator because they indicate possible manual modification
    or non-standard creation of users and groups.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 偏离这些标准的 UID 和 GID 范围对于法医调查员来说很有趣，因为它们可能表明用户和组的手动修改或非标准创建。
- en: Most Linux distros create new users starting with UID 1000 and also create default
    groups with the same GID number. However, the UID and GID of a user doesn’t have
    to be the same number. If a user’s UID is different from the GID, it suggests
    that an additional group was manually created.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 Linux 发行版在创建新用户时会分配 UID 从 1000 开始，并为默认组分配相同的 GID。然而，用户的 UID 和 GID 不必是相同的数字。如果用户的
    UID 与 GID 不同，则意味着可能手动创建了一个额外的组。
- en: 'The creation of a new user or group might be found in the shell history of
    the root user (`useradd fred`, for example) or in the shell history of a regular
    user (`sudo useradd fred`). If the user was created in a GUI tool, it may appear
    in the journal as follows:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新用户或组的操作可能会出现在 root 用户的 shell 历史记录中（例如 `useradd fred`），或者普通用户的 shell 历史记录中（例如
    `sudo useradd fred`）。如果用户是通过图形界面工具创建的，则可能在日志中显示如下：
- en: '[PRE16]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In this example, GNOME’s `gnome-control-center` (the Settings program) asked
    the `accounts-daemon` (part of AccountsService; *[https://www.freedesktop.org/wiki/Software/AccountsService/](https://www.freedesktop.org/wiki/Software/AccountsService/)*)
    to create a user (`fred`). This D-Bus service accesses and configures local user
    accounts using system tools like `useradd` or `groupadd`. AccountService was originally
    developed for GNOME but can be used by any distro.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，GNOME 的 `gnome-control-center`（设置程序）请求 `accounts-daemon`（属于 AccountsService；
    *[https://www.freedesktop.org/wiki/Software/AccountsService/](https://www.freedesktop.org/wiki/Software/AccountsService/)*)
    创建一个用户（`fred`）。这个 D-Bus 服务通过系统工具，如 `useradd` 或 `groupadd`，访问并配置本地用户帐户。AccountService
    最初为 GNOME 开发，但可以被任何发行版使用。
- en: 'The deletion of a user simply means that the defined user and ID record in
    the shadow, password, and group files has been deleted. The following is an example
    found in the journal (deleting `fred` from the previous example):'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 删除用户仅意味着在 shadow、password 和 group 文件中定义的用户和 ID 记录已被删除。以下是从日志中找到的示例（从前面的示例中删除
    `fred`）：
- en: '[PRE17]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Deleting a user or group does not automatically delete the files owned by those
    users. Unless explicitly deleted, the files will still exist and appear with the
    former numeric IDs of the deleted users.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 删除用户或组不会自动删除由这些用户拥有的文件。除非明确删除，否则这些文件仍然存在，并且会以已删除用户的原始数字 ID 显示。
- en: 'Some forensic programs or password recovery tools are able to attempt recovery
    of encrypted passwords stored in shadow files. Here is an example of John the
    Ripper recovering a password from the */etc/shadow* entry extracted for the user
    *sam*:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 一些取证程序或密码恢复工具能够尝试恢复存储在 shadow 文件中的加密密码。以下是 John the Ripper 从为用户 *sam* 提取的 */etc/shadow*
    条目中恢复密码的示例：
- en: '[PRE18]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Here, the `john` cracking tool discovers the password is *canada* from a wordlist
    or dictionary-based attack. John the Ripper leaves traces of password cracking
    activity, including previously recovered passwords, in the *~/.john/* directory
    of the user who ran it.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`john` 破解工具通过字典或基于词汇表的攻击发现密码是 *canada*。John the Ripper 会在运行它的用户的 *~/.john/*
    目录中留下密码破解活动的痕迹，包括以前恢复的密码。
- en: '***Elevated Privileges***'
  id: totrans-278
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***提升的权限***'
- en: A typical user account on a Linux system is expected to have enough privileges
    to do “normal work,” but not enough to cause damage to the system, disrupt other
    users, or access files that are meant to be private. Only one user, root (UID
    0), has privileges to do everything. Several mechanisms allow regular users to
    elevate privileges to perform certain authorized tasks.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 系统中，典型的用户帐户预计具有足够的权限来进行“正常工作”，但没有足够的权限去破坏系统、干扰其他用户或访问本应保密的文件。只有一个用户，即
    root（UID 0），拥有执行所有操作的权限。若干机制允许普通用户提升权限，以执行某些授权任务。
- en: 'The traditional Unix `su` (substitute user) command allows a command to be
    executed with the privileges of another user or group (root is the default if
    nothing is specified). Failed and successful use of the `su` command appears in
    the system log as shown here:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的 Unix `su`（替代用户）命令允许以另一个用户或组的权限执行命令（如果未指定，则默认为 root）。`su` 命令的失败和成功使用记录会出现在系统日志中，如下所示：
- en: '[PRE19]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: By default, all users are permitted to use the `su` command. See the su(1) man
    page for more information.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，所有用户都被允许使用 `su` 命令。有关更多信息，请参阅 su(1) 手册页。
- en: The `sudo` command provides more granularity than `su` and can be configured
    to allow some users to execute specific commands only. The `sudo` configuration
    is found in the */etc/sudoers* file or in files in the */etc/sudoers.d/* directory.
    A *sudo* group may also contain a list of authorized users.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '`sudo` 命令比 `su` 提供了更精细的权限管理，并可以配置为仅允许某些用户执行特定命令。`sudo` 配置可以在 */etc/sudoers*
    文件中找到，或在 */etc/sudoers.d/* 目录中的文件中。*sudo* 组中也可能包含授权用户的列表。'
- en: 'Failed and successful uses of the `sudo` command by authorized users is logged
    as shown here:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 授权用户使用 `sudo` 命令的失败和成功记录如下所示：
- en: '[PRE20]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Attempts to use `sudo` by unauthorized users (those users who are not considered
    “administrators”) will also appear in the system log:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 未经授权的用户（即那些不被视为“管理员”的用户）尝试使用 `sudo` 的操作也会出现在系统日志中：
- en: '[PRE21]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: A search for `sudo` activity can reveal information about compromised systems
    or abuse by regular users, including the privileged commands attempted.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 对 `sudo` 活动的搜索可以揭示有关系统被攻破或普通用户滥用的信息，包括尝试执行的特权命令。
- en: 'When a user runs `sudo` for the first time, they may be presented with a warning
    message or “lecture” about the risks and responsibilities:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户第一次运行 `sudo` 时，可能会出现警告信息或关于风险和责任的“讲解”：
- en: '[PRE22]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: If sudo is configured to display the message once only (the default), a zero-length
    file named after the user is created in the */var/db/sudo/lectured/* directory.
    The creation timestamp on this file indicates the first time a user ran the `sudo`
    command. See the sudo(8) and sudoers(5) man pages for more information.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 sudo 配置为仅显示一次信息（默认），则会在 */var/db/sudo/lectured/* 目录中创建一个以用户命名的零长度文件。该文件的创建时间戳表示用户首次运行
    `sudo` 命令的时间。有关更多信息，请参阅 sudo(8) 和 sudoers(5) 手册页。
- en: 'Another method of privilege escalation uses a `setuid` flag on an executable
    file indicating the program should execute with the UID of the file’s owner. Use
    of this flag is not logged (although the `setuid` program itself may generate
    logs). The `ls -l` of a `setuid` program has an “s” in the permission information:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种提升权限的方法是使用可执行文件上的 `setuid` 标志，表示该程序应以文件所有者的 UID 执行。使用此标志不会记录日志（尽管 `setuid`
    程序本身可能会生成日志）。`setuid` 程序的 `ls -l` 权限信息中会有一个“s”：
- en: '[PRE23]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'In a forensic investigation, a search can be made to find all *setuid* files.
    In particular, *setuid* files that are not part of any official distro software
    package can be interesting; for example:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在取证调查中，可以搜索所有 *setuid* 文件。特别是，*setuid* 文件如果不是任何官方发行版软件包的一部分，可能会很有趣；例如：
- en: '[PRE24]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: In this example, a suspicious *setuid* file was found in */tmp/* and should
    be examined further.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，一个可疑的 *setuid* 文件被发现在 */tmp/* 目录下，应进一步检查。
- en: All *setuid* files pose a risk to the system, and can be exploited if they contain
    vulnerabilities. If non-privileged users can exploit a `setuid` program, they
    may gain unauthorized access or execute arbitrary code as another user (like root
    for example). Files can also have the `setgid` flag set, causing programs to run
    as the file’s group.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 *setuid* 文件都对系统构成风险，如果它们包含漏洞，可能被利用。如果非特权用户能够利用 `setuid` 程序，他们可能会获得未授权访问权限，或者以其他用户（例如
    root）身份执行任意代码。文件还可以设置 `setgid` 标志，导致程序以文件的组身份运行。
- en: 'An API provided by the polkit (also called PolicyKit) framework can also escalate
    privileges over D-Bus. The polkit daemon (`polkitd`) listens for requests and
    takes appropriate action. The authorization actions are configured using *.rules*
    and *.policy* files located in the */etc/polkit-1/* or */usr/share/ polkit-1/*
    directories. When making authorization decisions, `polkitd` checks these rules
    and policies and logs activity to the journal, as shown here:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: polkit（也称为 PolicyKit）框架提供的 API 也可以通过 D-Bus 提升权限。polkit 守护进程（`polkitd`）监听请求并采取适当的行动。授权操作通过位于
    */etc/polkit-1/* 或 */usr/share/polkit-1/* 目录中的 *.rules* 和 *.policy* 文件进行配置。在做出授权决策时，`polkitd`
    会检查这些规则和政策，并将活动记录到日志中，如下所示：
- en: '[PRE25]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: In this example, a user tries to reboot a system, polkit asks for authentication,
    and the user fails to provide it.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，用户尝试重启系统，polkit 请求认证，用户未能提供认证。
- en: The `pkexec` command line tool is part of the polkit software package and functions
    similarly to `sudo`. For more information about polkit use over D-Bus, see the
    polkit(8) and polkitd(8) man pages.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '`pkexec` 命令行工具是 polkit 软件包的一部分，其功能类似于 `sudo`。有关通过 D-Bus 使用 polkit 的更多信息，请参阅
    polkit(8) 和 polkitd(8) 的手册页。'
- en: The Linux kernel also provides *capabilities* that can extend and reduce privileges
    of a user at a more granular level. Systemd has options to define capabilities
    in unit files. See the capabilities(7) and systemd.unit(5) man pages for more
    information.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 内核还提供了 *capabilities*，可以在更细粒度的级别上扩展和减少用户的权限。Systemd 具有在单元文件中定义能力的选项。有关更多信息，请参阅
    capabilities(7) 和 systemd.unit(5) 的手册页。
- en: '***GNOME Keyring***'
  id: totrans-303
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***GNOME 密钥环***'
- en: The GNOME desktop environment has a credential storage mechanism called the
    GNOME Keyring. Users can create multiple keyrings, and each keyring can store
    multiple passwords. Frontend tools interact with a backend daemon that creates
    and manages the files containing the passwords.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: GNOME 桌面环境有一个名为 GNOME 密钥环的凭证存储机制。用户可以创建多个密钥环，每个密钥环可以存储多个密码。前端工具与后台守护进程交互，后台守护进程创建和管理包含密码的文件。
- en: The default location of the keyring files is *~/.local/share/keyrings/* (previously
    *~/.gnome2/keyrings/*). Filenames are the same as the keyring names, with spaces
    replaced with underscores. If multiple keyrings exist and a default is specified,
    a file called *default* will contain the name of the default keyring. [Figure
    10-4](ch10.xhtml#ch010fig04) shows an overview of GNOME Keyring.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥环文件的默认位置是 *~/.local/share/keyrings/*（以前是 *~/.gnome2/keyrings/*）。文件名与密钥环名称相同，空格被替换为下划线。如果存在多个密钥环并指定了默认密钥环，则名为
    *default* 的文件将包含默认密钥环的名称。[图 10-4](ch10.xhtml#ch010fig04) 显示了 GNOME 密钥环的概述。
- en: '![Image](Images/ch10fig04.jpg)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch10fig04.jpg)'
- en: '*Figure 10-4: GNOME Keyring data flow*'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10-4：GNOME 密钥环数据流*'
- en: In some installations, the `pam_gnome_keyring` PAM module may use a keyring
    for logins. In that case, the login password is the same as the password of the
    default `gnome-keyring`. If a keyring is not given a password on creation, the
    keyring file will be stored in unencrypted form, with passwords and other information
    visible in a readable plaintext file format.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些安装中，`pam_gnome_keyring` PAM 模块可能会使用一个密钥环进行登录。在这种情况下，登录密码与默认的`gnome-keyring`密码相同。如果在创建时没有为密钥环设置密码，则密钥环文件将以未加密的形式存储，密码和其他信息将以可读的纯文本文件格式显示。
- en: The **.keyring* files can be copied to another system for analysis. The decrypted
    keyring files contain interesting data from a forensics perspective, including
    the creation timestamp of the keyring, the creation and modification timestamps
    for each password entry, and the description and password for each password entry.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '**.keyring** 文件可以复制到另一个系统进行分析。解密后的密钥环文件从取证角度来看包含有趣的数据，包括密钥环的创建时间戳、每个密码条目的创建和修改时间戳，以及每个密码条目的描述和密码。'
- en: If you don’t have the password, brute-force attempts can be made to crack it
    using a recovery tool that supports the GNOME Keyring format. If you do have the
    password to unlock a keyring, there are several ways to extract information.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有密码，可以使用支持 GNOME Keyring 格式的恢复工具进行暴力破解尝试。如果您拥有解锁密钥环的密码，则有几种方法可以提取信息。
- en: 'The easiest way to view all the information is simply to set a blank password
    for the keyring, meaning that the resulting keyring file contents will be saved
    unencrypted. Another way to extract information is using `dump-keyring0` `-format`,
    which is included in the GNOME Keyring source code,^([10](footnotes.xhtml#ch10foot_010))
    as shown here:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 查看所有信息的最简单方法是为密钥环设置一个空白密码，这样生成的密钥环文件内容将以未加密的形式保存。提取信息的另一种方法是使用 `dump-keyring0`
    `-format`，该工具包含在 GNOME Keyring 源代码中，^([10](footnotes.xhtml#ch10foot_010))，如下面所示：
- en: '[PRE26]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Using this method, you can see information about the keyring and the individual
    entries. The password entries contain the password, creation time, and last modified
    time.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此方法，您可以查看密钥环和各个条目的信息。密码条目包含密码、创建时间和最后修改时间。
- en: '*Seahorse* is the primary graphical tool in the GNOME desktop environment for
    managing passwords and keys. Seahorse can create and manage password keyrings
    (via the gnome-keyring-daemon) and can also create and manage other keys such
    as SSH and GNU Privacy Guard (GPG). Support for PKCS11 certificates is under development
    and uses the file *user.keystore*. [Figure 10-5](ch10.xhtml#ch010fig05) shows
    a screenshot of Seahorse.'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '*Seahorse* 是 GNOME 桌面环境中用于管理密码和密钥的主要图形工具。Seahorse 可以创建和管理密码密钥环（通过 gnome-keyring-daemon），还可以创建和管理其他密钥，如
    SSH 和 GNU 隐私保护（GPG）。对 PKCS11 证书的支持正在开发中，使用的是 *user.keystore* 文件。[图 10-5](ch10.xhtml#ch010fig05)
    显示了 Seahorse 的截图。'
- en: '![Image](Images/ch10fig05.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch10fig05.jpg)'
- en: '*Figure 10-5: Seahorse Passwords and Keys manager tool*'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10-5：Seahorse 密码和密钥管理工具*'
- en: '***KDE Wallet Manager***'
  id: totrans-317
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***KDE 钱包管理器***'
- en: The KDE desktop environment has a credential storage mechanism called KWallet,
    in which users can store multiple passwords and web form data. The wallet is protected
    with a separate password. KDE-integrated apps are able to use KWallet to store
    passwords and other sensitive information.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: KDE 桌面环境有一个名为 KWallet 的凭证存储机制，用户可以在其中存储多个密码和网页表单数据。钱包受一个独立的密码保护。集成了 KDE 的应用程序能够使用
    KWallet 存储密码和其他敏感信息。
- en: Wallets managed using the KWallet Manager operate through the `kwalletd` daemon,
    which is started on demand by the wallet manager. Wallets can be encrypted using
    the Blowfish algorithm or with the user’s GPG keys. [Figure 10-6](ch10.xhtml#ch010fig06)
    on the following page shows an overview of the KDE Wallet system.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 KWallet 管理的钱包通过 `kwalletd` 守护进程操作，该守护进程由钱包管理器按需启动。钱包可以使用 Blowfish 算法或用户的
    GPG 密钥进行加密。[图 10-6](ch10.xhtml#ch010fig06) 在下一页显示了 KDE 钱包系统的概览。
- en: 'The default location for wallet files is *~/.local/share/kwalletd/*, and files
    have the same name as the wallet. There are two files per wallet: one with a **.kwl*
    extension containing the encrypted data and one with a **.salt* extension containing
    salt data to strengthen against password-cracking attempts. The **.kwl* files
    have a header that determines the version and type of wallet file.'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 钱包文件的默认位置是 *~/.local/share/kwalletd/*，文件名与钱包相同。每个钱包有两个文件：一个是 **.kwl** 扩展名的文件，包含加密数据；另一个是
    **.salt** 扩展名的文件，包含盐数据，用于加强对密码破解的防护。**.kwl** 文件有一个头部，用于确定钱包文件的版本和类型。
- en: 'The first 12 bytes of the wallet file are always the same and signify that
    it is a KDE wallet:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 钱包文件的前12个字节始终相同，表示它是一个KDE钱包：
- en: '[PRE27]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The 13th and 14th bytes are the major and minor version numbers and the 15th
    and 16th bytes specify the encryption and hash algorithms, respectively (see *[https://github.com/KDE/kwallet/blob/master/src/runtime/kwalletd/backend/backendpersisthandler.cpp](https://github.com/KDE/kwallet/blob/master/src/runtime/kwalletd/backend/backendpersisthandler.cpp)*
    for more information). If the 15th byte of a **.kwl* file is 0x02, it’s GPG; if
    the 15th byte is 0x00 or 0x03, it’s a version of Blowfish.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 第13和14个字节是主版本号和次版本号，第15和16个字节分别指定加密算法和哈希算法（更多信息请参见*[https://github.com/KDE/kwallet/blob/master/src/runtime/kwalletd/backend/backendpersisthandler.cpp](https://github.com/KDE/kwallet/blob/master/src/runtime/kwalletd/backend/backendpersisthandler.cpp)*）。如果**.kwl**文件的第15个字节是0x02，则表示GPG；如果第15个字节是0x00或0x03，则表示Blowfish的版本。
- en: '![Image](Images/ch10fig06.jpg)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch10fig06.jpg)'
- en: '*Figure 10-6: KWallet data flow*'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '*图10-6：KWallet数据流*'
- en: Some Linux distributions create a default wallet called *kdewallet*, and users
    can create and manage additional wallets using frontend tools like `kwallet-query`
    or `kwalletmanager5`, shown in [Figure 10-7](ch10.xhtml#ch010fig07).
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 一些Linux发行版创建了一个名为*kdewallet*的默认钱包，用户可以使用前端工具如`kwallet-query`或`kwalletmanager5`创建和管理额外的钱包，如[图10-7](ch10.xhtml#ch010fig07)所示。
- en: '![Image](Images/ch10fig07.jpg)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch10fig07.jpg)'
- en: '*Figure 10-7: KWallet Manager Tool*'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '*图10-7：KWallet管理工具*'
- en: You can copy these files to another Linux machine to analyze them using the
    same wallet manager utilities.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将这些文件复制到另一台Linux机器上，使用相同的钱包管理工具进行分析。
- en: If a password-recovery tool supports the Blowfish format of KWallet files, attempts
    to brute-force the password can be made.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 如果密码恢复工具支持KWallet文件的Blowfish格式，可以尝试暴力破解密码。
- en: In some cases, the login password and KWallet password might be the same—for
    example, when `pam_kwallet` is used. If GPG is used, the KWallet password is the
    same as the user’s GPG key password. Also check the logs for `kwalletd5` or `kwalletmanager5`,
    as sometimes error messages may appear during the use of the wallet manager, providing
    a timestamp linked to evidence of use.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，登录密码和KWallet密码可能是相同的——例如，当使用`pam_kwallet`时。如果使用GPG，则KWallet密码与用户的GPG密钥密码相同。还可以检查`kwalletd5`或`kwalletmanager5`的日志，因为在使用钱包管理器时，有时会出现错误信息，提供与使用证据相关的时间戳。
- en: '***Biometric Fingerprint Authentication***'
  id: totrans-332
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***生物识别指纹身份验证***'
- en: Recent versions of Linux desktops offer biometric fingerprint authentication
    if the machine has compatible hardware. The fprint project (*[https://fprint.freedesktop.org/](https://fprint.freedesktop.org/)*)
    provides Linux support for various fingerprint-reading devices, which can be used
    for authentication.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 最近版本的Linux桌面提供生物识别指纹身份验证功能，如果机器具有兼容的硬件。fprint项目（*[https://fprint.freedesktop.org/](https://fprint.freedesktop.org/)*)为各种指纹识别设备提供Linux支持，可用于身份验证。
- en: 'The user must enroll fingerprints before they can be used. The enrollment process
    saves fingerprint information to files (a single file for each finger). The files
    are located in the */var/lib/fprint/* directory, as shown here:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 用户必须先注册指纹，才能使用它们。注册过程将指纹信息保存到文件中（每个手指一个文件）。这些文件位于*/var/lib/fprint/*目录中，如下所示：
- en: '[PRE28]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'This directory path is constructed from the username (`sam`), and the manufacturer
    (`synaptics`) and USB device number or serial number (`45823e114e26`) of the fingerprint-reading
    device. The filenames of enrolled fingers are saved as numbers. The associated
    numbers for each finger are as follows:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 该目录路径由用户名（`sam`）、指纹识别设备的制造商（`synaptics`）和USB设备编号或序列号（`45823e114e26`）构成。已注册手指的文件名保存为数字。每个手指的相关数字如下：
- en: 1    Left thumb
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 1    左拇指
- en: 2    Left index finger
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 2    左食指
- en: 3    Left middle finger
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 3    左中指
- en: 4    Left ring finger
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 4    左无名指
- en: 5    Left little finger
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 5    左小指
- en: 6    Right thumb
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 6    右拇指
- en: 7    Right index finger
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 7    右食指
- en: 8    Right middle finger
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 8    右中指
- en: 9    Right ring finger
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 9    右无名指
- en: 10    Right little finger
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 10    右小指
- en: The structure of the fingerprint objects is documented at the project team’s
    website, including useful information for a forensic examination.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 指纹对象的结构已在项目团队的网站上进行了文档化，其中包含了法医学检查的有用信息。
- en: The fingerprint files contain information about the fingerprint reader, the
    username, the date of enrollment, and possibly the data from the scanned finger.
    Depending on the fingerprint reader hardware, these files may differ. Some readers
    will store the fingerprint data in the device itself and only save metadata in
    the files.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 指纹文件包含有关指纹读取器、用户名、注册日期以及可能的扫描指纹数据的信息。根据指纹读取器硬件的不同，这些文件可能会有所不同。有些读取器会将指纹数据存储在设备本身，而只在文件中保存元数据。
- en: 'A PAM module (*pam_fprintd*) and PAM configuration file (*gdm-fingerprint*
    for example) facilitates fingerprint scanning for authentication. This PAM module
    also logs successful fingerprint authentication, as shown:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 一个PAM模块（*pam_fprintd*）和PAM配置文件（例如*gdm-fingerprint*）便于进行指纹扫描以实现认证。该PAM模块还会记录成功的指纹认证，如下所示：
- en: '[PRE29]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Here, biometric authentication was used to log in to a machine from GDM.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，使用生物识别认证通过GDM登录到机器。
- en: Biometric authentication is especially interesting from a forensics perspective.
    It identifies physical attributes of a person rather than knowledge of a password
    that can be stolen or shared. However, biometric authentication can also be forced
    (coercion, blackmail, physical force, or other threats) or “stolen” while someone
    is sleeping or unconscious. Other methods of using copies of fingerprints on certain
    materials have been shown to work with some fingerprint readers.^([11](footnotes.xhtml#ch10foot_011))
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 从取证角度来看，生物识别认证尤其有趣。它通过识别个人的身体特征来进行身份验证，而不是依赖可能被盗用或共享的密码。然而，生物识别认证也可能被迫（胁迫、敲诈、暴力或其他威胁）或在某人睡觉或失去知觉时“被盗”。其他使用指纹复制品在某些材料上的方法已被证明在一些指纹读取器上有效。^([11](footnotes.xhtml#ch10foot_011))
- en: '***GnuPG***'
  id: totrans-353
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***GnuPG***'
- en: In 1991, Philip Zimmermann created Pretty Good Privacy (PGP) to provide the
    public with a simple tool for strong encryption to protect files and messages.
    It was initially free and open source but later became a commercial product. Concerns
    over patents and commercialization led to the creation of the OpenPGP standard,
    originally described in RFC 2440 (currently RFC 4880 and RFC 5581). In 1999, an
    independent implementation of Open- PGP was developed under the name GNU Privacy
    Guard (GnuPG or GPG), a software project that is actively developed to this day.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 1991年，Philip Zimmermann创建了“相当好的隐私”（PGP），为公众提供了一种简单的强加密工具来保护文件和消息。最初它是免费的并且是开源的，但后来变成了商业产品。关于专利和商业化的担忧促使了OpenPGP标准的诞生，最初在RFC
    2440中描述（目前是RFC 4880和RFC 5581）。1999年，一个独立的OpenPGP实现以GNU Privacy Guard（GnuPG或GPG）的名义开发，这个软件项目至今仍在积极开发。
- en: GPG is a popular form of encryption and used by email programs, office programs,
    software package integrity verification tools, password managers,^([12](footnotes.xhtml#ch10foot_012))
    and other programs in need of interoperable cryptography.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: GPG是一种流行的加密方式，广泛应用于电子邮件程序、办公程序、软件包完整性验证工具、密码管理器、^([12](footnotes.xhtml#ch10foot_012))以及其他需要可互操作加密的程序中。
- en: Most Linux distributions include GPG software by default for the purpose of
    verifying the signatures of software packages. Frontend tools like Seahorse and
    KGpg make GPG key generation and management easy for Linux users. Decrypting GPG-encrypted
    files is a challenge that forensic investigators regularly face, together with
    other encryption challenges.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数Linux发行版默认包含GPG软件，目的是验证软件包的签名。像Seahorse和KGpg这样的前端工具使得Linux用户轻松生成和管理GPG密钥。解密GPG加密文件是取证调查员常面临的挑战之一，同时也面临其他加密挑战。
- en: The `gpg` program is compiled with default options, but will look for a system-wide
    configuration file (*/etc/gnupg/gpgconf.conf* ) and the default location of the
    user configuration file (*~/.gnupg/gpg.conf* ). [Figure 10-8](ch10.xhtml#ch010fig08)
    provides an overview of GPG.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '`gpg`程序使用默认选项进行编译，但会查找系统范围的配置文件（*/etc/gnupg/gpgconf.conf*）以及用户配置文件的默认位置（*~/.gnupg/gpg.conf*）。[图10-8](ch10.xhtml#ch010fig08)提供了GPG的概述。'
- en: '![Image](Images/ch10fig08.jpg)'
  id: totrans-358
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch10fig08.jpg)'
- en: '*Figure 10-8: GnuPG data flow*'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '*图10-8：GnuPG数据流*'
- en: The key files consist of public and private key pairs belonging to the user
    and any other keys that have been added to the public keyring. On newer systems,
    the user’s public keys are located in *~/.gnupg/pubring.kbx* (previous versions
    stored them in *~/.gnupg/pubring.gpg*).
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 关键文件由属于用户的公钥和私钥对以及已添加到公钥环中的其他密钥组成。在较新的系统中，用户的公钥位于*~/.gnupg/pubring.kbx*（早期版本存储在*~/.gnupg/pubring.gpg*中）。
- en: In addition to the private keys, it can be interesting to examine which public
    keys have been added to a keyring. This file can be read without the secret key
    and may contain information of forensic interest. For example, any public keys
    added by the user will be visible together with the date created, name, email
    address, and other information.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 除了私钥外，检查添加到密钥环中的公钥也可能具有兴趣。这个文件可以在没有秘密密钥的情况下读取，并且可能包含取证相关的信息。例如，任何用户添加的公钥都会显示出来，并伴有创建日期、姓名、电子邮件地址和其他信息。
- en: 'The `gpg` binary does not have an option to specify which file to use, but
    the `GNUPGHOME` environment variable can be set to point to a copy of the *.gnupg*
    directory if you have moved the files to a separate analysis machine, as demonstrated
    in the following example:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '`gpg` 可执行文件没有指定使用哪个文件的选项，但可以通过设置 `GNUPGHOME` 环境变量指向 *.gnupg* 目录的副本（如果你已将文件移动到单独的分析机器上），如下面的示例所示：'
- en: '[PRE30]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Other GPG commands for listing or extracting keys and information can also be
    used in this way. See the gpg(1) man page for more details.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 其他用于列出或提取密钥和信息的 GPG 命令也可以以类似方式使用。更多详细信息请参阅 gpg(1) 手册页。
- en: Some forensic programs or password-recovery tools are able to attempt recovery
    of GPG private keys. John the Ripper also supports brute-forcing GPG encrypted
    files.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 一些取证程序或密码恢复工具能够尝试恢复 GPG 私钥。John the Ripper 也支持暴力破解 GPG 加密文件。
- en: '**Linux Desktop Artifacts**'
  id: totrans-366
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Linux 桌面取证**'
- en: As with the forensic examination of Windows or Macintosh computers, the Linux
    desktop can be of significant interest to forensic investigators. Analyzing digital
    traces from various graphical components allows you to reconstruct past activity
    and user behavior. This section focuses on finding useful forensic artifacts on
    a graphical Linux system.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 与对 Windows 或 Macintosh 计算机的取证检查类似，Linux 桌面系统对于取证调查员来说也具有重要意义。分析来自各种图形组件的数字痕迹可以帮助重建过去的活动和用户行为。本节内容重点介绍在图形化
    Linux 系统中寻找有用的取证线索。
- en: '***Desktop Settings and Configuration***'
  id: totrans-368
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***桌面设置和配置***'
- en: Most desktops today use a database for storing configuration data. This database
    can be used by any application, and configuration settings can be shared between
    different programs.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 如今大多数桌面系统使用数据库来存储配置数据。任何应用程序都可以使用这个数据库，配置设置可以在不同的程序之间共享。
- en: '**GNOME configuration**'
  id: totrans-370
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**GNOME 配置**'
- en: Desktop environments based on GNOME 3 and GNOME 40^([13](footnotes.xhtml#ch10foot_013))
    store settings and configuration data using the GSettings API, which in turn uses
    the dconf configuration system. The `dconf-service` program is activated over
    D-Bus whenever an application or desktop component wants to modify configuration
    settings (for performance, reading settings is done directly from the files, without
    D-Bus). Dconf is conceptually similar to the Windows Registry, where data is stored
    in a hierarchical tree with keys and values.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 GNOME 3 和 GNOME 40^([13](footnotes.xhtml#ch10foot_013)) 的桌面环境使用 GSettings
    API 存储设置和配置数据，GSettings API 进一步使用 dconf 配置系统。每当应用程序或桌面组件想要修改配置设置时，`dconf-service`
    程序会通过 D-Bus 激活（为了性能考虑，读取设置时直接从文件中进行，而不通过 D-Bus）。Dconf 在概念上类似于 Windows 注册表，其中数据以层次树的形式存储，包含键和值。
- en: The desktop configuration utilities like GNOME Control Center (see [Figure 10-9](ch10.xhtml#ch010fig09)
    on the following page) or GNOME Tweaks read and write settings to the dconf system
    (the `dconf-editor` tool can be used to see all settings). Any applications built
    with the glib library are also able to use the dconf system to store configuration
    information.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 像 GNOME 控制中心（请参见下一页的 [图 10-9](ch10.xhtml#ch010fig09)）或 GNOME Tweaks 这样的桌面配置工具会读取并写入设置到
    dconf 系统中（`dconf-editor` 工具可以用来查看所有设置）。任何使用 glib 库构建的应用程序也能够利用 dconf 系统来存储配置信息。
- en: '![Image](Images/ch10fig09.jpg)'
  id: totrans-373
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch10fig09.jpg)'
- en: '*Figure 10-9: GNOME Control Center*'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10-9：GNOME 控制中心*'
- en: 'Because the typical tools (GNOME Control Center, Gnome Tweaks, `gsettings`,
    `dconf-editor`) for viewing dconf configuration also operate using D-Bus on a
    live system, they are not suitable for use in a postmortem examination. Therefore,
    we must examine the files where configuration data is stored on the filesystem.
    All the dconf settings that deviate from the defaults (that is, the user or application
    made changes) are stored in a single file: *~/.config/dconf/user*.'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 由于查看 dconf 配置的典型工具（如 GNOME 控制中心、Gnome Tweaks、`gsettings`、`dconf-editor`）也都通过
    D-Bus 在实时系统上操作，因此它们不适用于事后取证分析。因此，我们必须检查文件系统中存储配置数据的文件。所有偏离默认设置的 dconf 设置（即用户或应用程序所做的更改）都存储在一个单独的文件中：*~/.config/dconf/user*。
- en: 'This file uses a binary database format known as GNOME Variant (gvdb). The
    database can be extracted using an offline reader found here: *[https://github.com/chbarts/gvdb/](https://github.com/chbarts/gvdb/)*.
    The `reader` tool dumps the contents of any gvdb file, including GNOME configuration
    databases; for example:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'In this example, we see a variety of desktop configuration information that
    might be found in the dconf database file. The hierarchical tree structure of
    the configuration can be seen in paths (*/org/gnome/. . .*) and the contents on
    the line below. From this example, the configuration that is interesting from
    a forensics perspective includes:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
- en: Favorite apps listed on the GNOME dash (the dock revealed by clicking Activities)
    ➊
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A webcam used by the cheese program (cheese is a webcam photo app: *[https://wiki.gnome.org/Apps/Cheese](https://wiki.gnome.org/Apps/Cheese)*)
    ➋'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The file location of the desktop background picture (likely taken with the webcam)
    ➌
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The most recent Bluetooth devices, including MAC address, device description,
    and timestamp ➍
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The user-configured default search engine (DuckDuckGo) in the Epiphany web browser
    ➎
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User-defined proxy settings, including the protocol (SOCKS), TCP port number,
    and proxy host ➏
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any application can save settings via the GSettings API, and they will be stored
    in the dconf database files. In addition to the gvdb *user* file, system-wide
    equivalent dconf databases may be found in */etc/dconf/db/**. User-defined configuration
    data has priority over system configuration or other configuration databases (profiles).
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
- en: The configuration information saved depends on an application’s developer. As
    shown in the previous example, configuration information can include any persistent
    information desired, including history of files opened, bookmarks, timestamps
    of various events, remote servers and account names, previously attached devices,
    previous calendar notifications, and much more information that could be useful
    in a forensic investigation. See the dconf(7) man page for more information.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: '**KDE Configuration**'
  id: totrans-387
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'The KDE desktop manages user configuration changes with KConfig Modules (KCMs).^([14](footnotes.xhtml#ch10foot_014))
    These configuration changes are stored as plaintext files in the user’s *.config/*
    directory, with the filename usually ending in *rc*. Here are some examples:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: In this example, the user’s KDE/Plasma configuration changes that deviate from
    the system defaults are written into files. These files can be from any applications
    that integrate with KDE/Plasma.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: 'The files have a basic *ini*-style format that is easy to understand, as illustrated
    here:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Here the user has configured a personal cookie policy that includes explicitly
    rejecting cookies from certain sites.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: '**Other Desktop Configurations**'
  id: totrans-394
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Desktop environments and applications based on GNOME 2 store settings and configuration
    data using the GConf system. GConf is now deprecated, but some applications may
    still use it. The configuration data is stored using readable text files in XML
    format. The user-defined gconf files are located in *~/.config/gconf/** and system-wide
    files are in */etc/gconf/**.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 GNOME 2 的桌面环境和应用程序使用 GConf 系统存储设置和配置信息。虽然 GConf 现在已被弃用，但一些应用程序仍可能使用它。配置信息以可读的
    XML 格式文本文件存储。用户定义的 gconf 文件位于*~/.config/gconf/**，而系统范围的文件则位于*/etc/gconf/**。
- en: Other desktop environments, window managers, and graphical components may save
    configuration data in files or databases in the user XDG standard directories
    (*~/.config/*, *~/.local/share/*) or as hidden files in the home directory (*~/.**).
    Close examination of the user home directories may reveal additional configuration
    specific to a desktop environment or component not respecting the XDG base directory
    standard.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 其他桌面环境、窗口管理器和图形组件可能会将配置信息存储在文件或数据库中，这些文件位于用户 XDG 标准目录（*~/.config/*、*~/.local/share/*）或作为隐藏文件存储在主目录（*~/.**）中。仔细检查用户主目录可能会发现一些特定于桌面环境或未遵循
    XDG 基础目录标准的组件的额外配置。
- en: '***Desktop Clipboard Data***'
  id: totrans-397
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***桌面剪贴板数据***'
- en: Early X11 systems had very simple copy/paste mechanisms where selected text
    could be pasted using the middle mouse button into whatever window had focus (the
    selected text was not saved). The Inter-Client Communication Conventions Manual
    (ICCCM) standards called this the “PRIMARY” selection and added an additional
    “CLIPBOARD” for text that was saved in memory and could be pasted at any time.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 早期的 X11 系统有非常简单的复制/粘贴机制，选中的文本可以通过中键粘贴到任何获得焦点的窗口中（选中的文本不会被保存）。《客户端间通信规范手册》（ICCCM）标准将其称为“PRIMARY”选择，并添加了一个额外的“CLIPBOARD”用于保存到内存中的文本，可以随时粘贴。
- en: Modern desktop environments introduced clipboard management systems for multiple
    items that were stored persistently across logins. These clipboard managers are
    implemented as user daemons, plug-ins, or tray applets that coordinate the copying
    of text and choosing what to paste.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 现代桌面环境引入了用于管理多个项目的剪贴板管理系统，这些项目在不同的登录会话中会持续保存。这些剪贴板管理器通常作为用户守护进程、插件或托盘小程序来实现，它们协调文本的复制和粘贴选择。
- en: Most desktop environments have a default clipboard manager, but users may choose
    to install other stand-alone clipboard manager programs. This section describes
    the analysis and extraction of clipboard data from the most common clipboard managers.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数桌面环境都有默认的剪贴板管理器，但用户可以选择安装其他独立的剪贴板管理器程序。本节描述了从最常见的剪贴板管理器中分析和提取剪贴板数据的方法。
- en: The KDE desktop provides the Klipper clipboard manager. By default, the last
    seven copied items are remembered and saved to the file *~/.local/ share/klipper/history2.lst*.
    The file has a short header, and clipboard entries are separated by the word `string`.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: KDE 桌面提供了 Klipper 剪贴板管理器。默认情况下，最后七个复制的项目会被记住并保存到文件*~/.local/share/klipper/history2.lst*中。该文件有一个简短的头部，剪贴板条目由`string`一词分隔。
- en: 'The file can be viewed with a hex editor or text editor capable of 16-bit character
    widths. The following `sed` command can provide a quick-and-dirty list of saved
    clipboard entries:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件可以通过十六进制编辑器或支持 16 位字符宽度的文本编辑器查看。以下`sed`命令可以快速列出保存的剪贴板条目：
- en: '[PRE34]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The header ends with a version number, and the lines following are the history
    of items copied into the clipboard. You can also use the `strings` command (maybe
    with `-el`), but the list will appear unformatted.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 头部以版本号结尾，之后的行是复制到剪贴板中的项目历史记录。你也可以使用`strings`命令（可能需要`-el`参数），但列表将以未经格式化的方式显示。
- en: 'Distributions with the GNOME desktop environment may have different clipboard
    managers. These are available as plug-ins or separate programs, and some distros
    don’t install a clipboard manager by default. The following example shows the
    Clipboard Indicator extension for GNOME. The default history size is 15 items,
    which are stored in the *~/.cache/clipboard -indicator@tudmotu.com/registry.txt*
    file, as shown in this example:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 GNOME 桌面环境的发行版可能会有不同的剪贴板管理器。这些管理器作为插件或独立程序提供，有些发行版默认并不安装剪贴板管理器。以下示例展示了 GNOME
    的剪贴板指示器扩展。默认历史记录大小为 15 个项目，这些项目存储在*~/.cache/clipboard-indicator@tudmotu.com/registry.txt*文件中，如下所示：
- en: '[PRE35]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: This is a simple JSON file and can be read with any text editor.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的 JSON 文件，可以使用任何文本编辑器打开。
- en: 'Clipman is a plug-in for the Xfce panel and is embedded in the panel bar across
    the top or bottom of the desktop. By default, 10 items are stored in the *~/.cache/xfce4/clipman/textsrc*
    file. The items are stored in a readable format, and each item is separated by
    a semicolon:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: Clipman是Xfce面板的一个插件，它嵌入在桌面顶部或底部的面板栏中。默认情况下，10个项目存储在*~/.cache/xfce4/clipman/textsrc*文件中。这些项目以可读的格式存储，每个项目之间用分号分隔：
- en: '[PRE36]'
  id: totrans-409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Everything in `texts=` is on a single line. Copied text with multiple lines
    is separated with a newline character `\n`.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '`texts=`中的内容是一行文本。复制的多行文本由换行符`\n`分隔。'
- en: Another example is Lubuntu, which uses Qlipper by default and stores clipboard
    data in *~/.config/Qlipper/qlipper.ini*.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是Lubuntu，它默认使用Qlipper并将剪贴板数据存储在*~/.config/Qlipper/qlipper.ini*文件中。
- en: Many clipboard managers are available for Linux. Each distro makes its own decision
    on what to use, and you need to determine which clipboard system is in use and
    where the data might be stored.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: Linux有许多剪贴板管理器。每个发行版都会自行决定使用哪个管理器，你需要确定正在使用哪个剪贴板系统，并了解数据可能存储的位置。
- en: '***Desktop Trash Cans***'
  id: totrans-413
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***桌面垃圾桶***'
- en: The computer desktop metaphor also introduced the concept of trash cans that
    allow a user to easily recover files that were discarded. [freedesktop.org](http://freedesktop.org)
    defines a standard for implementing trash cans on Linux desktop systems.^([15](footnotes.xhtml#ch10foot_015))
    The standard refers to moving files to the trash as *trashing* and unlinking from
    the filesystem as *erasing*. Adherence to this standard lies not so much with
    the distros or even the desktops, but primarily with the file managers.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机桌面隐喻还引入了垃圾桶的概念，允许用户轻松恢复被丢弃的文件。[freedesktop.org](http://freedesktop.org)为在Linux桌面系统上实现垃圾桶定义了一个标准。^([15](footnotes.xhtml#ch10foot_015))
    该标准将文件移入垃圾桶称为*丢弃*，从文件系统中断开链接则称为*删除*。遵循这一标准的责任不仅仅在于发行版或桌面环境，主要还在于文件管理器。
- en: The desktop or file manager can display a trash icon where people can see trashed
    files, recover them, or delete them from the filesystem (that is, empty the trash).
    Depending on the type of storage media and filesystem, files deleted from the
    trash might still be recoverable using forensic tools.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 桌面或文件管理器可以显示一个垃圾桶图标，用户可以在其中查看丢弃的文件，恢复它们，或者从文件系统中删除它们（即清空垃圾桶）。根据存储介质和文件系统的类型，从垃圾桶中删除的文件可能仍然可以通过取证工具恢复。
- en: 'The default file managers for GNOME, KDE, Xfce, and LXDE are Nautilus, Dolphin,
    Thunar, and PCManFM, respectively. These file managers (and others) follow the
    trash specification. When files and directories are moved to the trash, they are
    moved to another location on the filesystem, and the information needed to recover
    them is saved. The typical location of the trash is *~/.local/share/Trash/* in
    the user’s home directory, which contains the following:'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: GNOME、KDE、Xfce 和 LXDE 的默认文件管理器分别是 Nautilus、Dolphin、Thunar 和 PCManFM。这些文件管理器（以及其他文件管理器）遵循垃圾桶规范。当文件和目录被移入垃圾桶时，它们会被移动到文件系统中的另一个位置，并保存恢复它们所需的信息。垃圾桶的典型位置是用户主目录下的*~/.local/share/Trash/*，该位置包含以下内容：
- en: '***files/*** The directory where trashed files and directories are moved. Unless
    entire directories are trashed, the *files/* directory is flat with no additional
    structure.'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '***files/*** 存放丢弃文件和目录的目录。除非整个目录被丢弃，否则*files/*目录是平面的，没有额外的结构。'
- en: '***info/*** A directory containing **.trashinfo* files for every deleted file
    or directory. These files contain the original location of the trashed item and
    a timestamp of when it was moved to the trash.'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '***info/*** 一个包含**.trashinfo*文件的目录，每个已删除的文件或目录都有一个对应的文件。这些文件包含被丢弃项目的原始位置及其被移动到垃圾桶的时间戳。'
- en: '***directorysizes*** When a directory is trashed, some file managers update
    the *directorysizes* file with the name and size of the directory trashed together
    with a timestamp (Unix epoch) of when it was moved.'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '***directorysizes*** 当一个目录被丢弃时，一些文件管理器会更新*directorysizes*文件，记录被丢弃目录的名称、大小以及移动的时间戳（Unix纪元）。'
- en: '***expunged/*** GNOME gvfs may create an expunged directory for deleting files
    from the trash. This is not part of the standard and doesn’t always appear.'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '***expunged/*** GNOME gvfs可能会创建一个expunged目录，用于从垃圾桶中删除文件。这不是标准的一部分，且并不总是出现。'
- en: 'The following example shows a typical trash folder structure containing a trashed
    file (*helloworld.c*) and trashed directory (*Secret_Docs/*):'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了一个典型的垃圾文件夹结构，其中包含一个被丢弃的文件（*helloworld.c*）和一个被丢弃的目录（*Secret_Docs/*）：
- en: '[PRE37]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: The **.trashinfo* and *directorysizes* file contents are readable plaintext.
    The *directorysizes* file contains one line for every deleted directory (in addition
    to the **.trashinfo* file).
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: 'No additional meta information is kept about the contents of trashed directories—only
    the size. The *.trashinfo* and *directorysizes* are shown here:'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Trash folders (other than a user’s home Trash) can exist on removable storage
    (like USB sticks), mounted network shares, and other locations using a *.Trash/*
    or *.Trash-UID/* directory (where UID is the numeric ID of the user) at the top
    of the mounted directory. The Trash specification does not require systems to
    support this, but many file managers do.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing trash folders on any operating system is standard in forensic investigations.
    When a deletion attempt is made, deletion timestamps exist, and an original location
    is revealed where more relevant files might be found.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
- en: '***Desktop Bookmarks and Recent Files***'
  id: totrans-428
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Identifying bookmarks (sometimes called “favorites") and recently used items
    on the desktop is a typical part of a forensic examination. On Linux desktops,
    bookmarks and recently used files, or “recents,” are managed with the same mechanism.
    Recent documents can also be thought of as dynamically created bookmarks.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
- en: The *xbel* file format refers to the XML Bookmark Exchange Language (see *[http://pyxml.sourceforge.net/topics/xbel/](http://pyxml.sourceforge.net/topics/xbel/)*
    and *[https://www.freedesktop.org/wiki/Specifications/desktop-bookmark-spec/](https://www.freedesktop.org/wiki/Specifications/desktop-bookmark-spec/)*).
    These are not limited to office documents and pictures; they may also contain
    other files that were opened by applications or file managers (zip files, for
    example).
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
- en: Bookmarks and information about recent files can be found in several standard
    locations on a Linux system with an *.xbel* extention. Examples include *.local/share/recently-used.xbel*
    and *.local/user-places.xbel* found in the user’s home directory. These files
    may also have backup copies (**.bak*) containing previously bookmarked items.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
- en: 'The following shows a single entry (there can be multiple entries) in a recently
    used file:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Here, the file *Conference.pdf* was saved to a temporary location by the Thunderbird
    mail client. Information about the file type and timestamps are also saved.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
- en: 'This example shows an entry in the *user-places.xbel* file:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Here, the folder */home/sam/KEEPOUT* is bookmarked (“add to places”) in KDE’s
    Dolphin file manager. The timestamp refers to the date added or when the properties
    of the bookmark were changed (name, icon, and so on).
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
- en: 'Some recent file data is stored in **.desktop* files in the *.local/share/Recent
    Documents/* directory; for example:'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Here, the *PFI_cover-front-FINAL.png* image file (the cover art from my last
    book) was recently opened by the Ristretto application. These desktop files contain
    no timestamps and the filesystem timestamp may indicate the creation date.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
- en: The aforementioned bookmarking methods were designed to be shared across applications,
    but individual applications may have their own implementation of storing bookmarks
    and recent documents. In a forensic examination, the list of installed programs
    may be analyzed for application-specific artifacts. Often these are stored in
    the user’s *.cache/* directory.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 上述书签方法是为了跨应用程序共享而设计的，但单个应用程序可能有自己的实现来存储书签和最近的文档。在取证检查中，已安装程序的列表可能会被分析，以寻找特定于应用程序的痕迹。这些痕迹通常存储在用户的
    *.cache/* 目录中。
- en: '***Desktop Thumbnail Images***'
  id: totrans-442
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***桌面缩略图图像***'
- en: When Linux desktops started to grow in popularity, graphical applications were
    developing their own way of managing thumbnail images (smaller versions of the
    original) for quick previews. Today this is standardized by [freedesktop.org](http://freedesktop.org)
    and used by most modern applications that need thumbnail functionality. This means
    that thumbnails created by one application can be reused by another application
    because they are all stored in the same place and in the same format. The specification
    for Linux desktop thumbnails can be found at *[https://www.freedesktop.org/wiki/Specifications/thumbnails/](https://www.freedesktop.org/wiki/Specifications/thumbnails/)*.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Linux 桌面环境开始流行时，图形应用程序开始开发各自管理缩略图图像（原始图像的缩小版本）的方法，以便快速预览。今天，这一标准由[freedesktop.org](http://freedesktop.org)规范化，并被大多数需要缩略图功能的现代应用程序使用。这意味着由一个应用程序创建的缩略图可以被另一个应用程序重用，因为它们都存储在同一个位置，并采用相同的格式。Linux
    桌面缩略图的规范可以在 *[https://www.freedesktop.org/wiki/Specifications/thumbnails/](https://www.freedesktop.org/wiki/Specifications/thumbnails/)*
    中找到。
- en: 'Thumbnails are typically stored in *~/.cache/thumbnails/* in several directories.
    Three possible subdirectories store thumbnail images: *large/*, *normal/*, and
    *fail/*. These contain different sizes (usually 256×256 or 128×128) of thumbnail
    images and also failed attempts to create a thumbnail.'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 缩略图通常存储在 *~/.cache/thumbnails/* 目录中的多个子目录中。三个可能的子目录用于存储缩略图图像：*large/*、*normal/*
    和 *fail/*。这些目录包含不同尺寸（通常为 256×256 或 128×128）的缩略图图像，还包括创建缩略图时的失败尝试。
- en: 'The standard dictates that all thumbnail files must be saved in PNG format
    and contain metadata about the original file. The possible metadata stored in
    the thumbnail images includes:'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 标准规定，所有的缩略图文件必须以 PNG 格式保存，并包含关于原始文件的元数据。缩略图图像中可能存储的元数据包括：
- en: Thumb::URI    URI of the original file (required)
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: Thumb::URI    原始文件的 URI（必填）
- en: Thumb::MTime    Modification time of the original file (required)
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: Thumb::MTime    原始文件的修改时间（必填）
- en: Thumb::Size    Size of the original file
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: Thumb::Size    原始文件的大小
- en: Thumb::Mimetype    The file MIME type
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: Thumb::Mimetype    文件的 MIME 类型
- en: Description    Descriptive text about thumbnail contents
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 描述    关于缩略图内容的描述性文字
- en: Software    Information about software that created the thumbnail
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: Software    创建缩略图的软件信息
- en: Thumb::Image::Width    Width (pixels) of the original image
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: Thumb::Image::Width    原始图像的宽度（像素）
- en: Thumb::Image::Height    Height (pixels) of the original image
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: Thumb::Image::Height    原始图像的高度（像素）
- en: Thumb::Document::Pages    Number of pages in the original document
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: Thumb::Document::Pages    原始文档的页数
- en: Thumb::Movie::Length    Length (seconds) of the original video
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: Thumb::Movie::Length    原始视频的时长（秒）
- en: date:create    The creation timestamp of the thumbnail file
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: date:create    缩略图文件的创建时间戳
- en: date:modify    The modification date of the thumbnail file (updated if the original
    changes)
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: date:modify    缩略图文件的修改日期（如果原始文件发生变化，则更新）
- en: The thumbnail filename is created using the MD5 hash of the URI of the original
    file location (without a trailing newline). For example, if the original file
    URI is *file:///home/username/cats.jpg*, the thumbnail filename will be *14993c875146cb2df70672a60447ea31.png*.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 缩略图文件名是通过原始文件位置的 URI 的 MD5 哈希值生成的（不包含尾随换行符）。例如，如果原始文件的 URI 是 *file:///home/username/cats.jpg*，则缩略图文件名将是
    *14993c875146cb2df70672a60447ea31.png*。
- en: Failed thumbnails are sorted by the program that failed and contain a blank
    PNG file with as much metadata about the original file as possible. The timestamp
    of the PNG saved in the fail directory is the time it failed.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 失败的缩略图按失败的程序进行排序，并包含一个空白的 PNG 文件，尽可能包含关于原始文件的所有元数据。保存在失败目录中的 PNG 文件的时间戳是失败的时间。
- en: 'The following example shows thumbnails found in a user’s *~/.cache/* directory:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了在用户的 *~/.cache/* 目录中找到的缩略图：
- en: '[PRE42]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Using any PNG analysis tool reveals more information inside these files.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 使用任何 PNG 分析工具可以揭示这些文件中的更多信息。
- en: 'In this example, the ImageMagick `identify` tool is used to extract metadata
    from one of the files:'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The first two timestamps refer to the creation and last modification times of
    the thumbnail PNG (it will be updated if the original image changes). The `Thumb::MTime:`
    property is the last modified timestamp (in Unix epoch format) of the original
    file.^([16](footnotes.xhtml#ch10foot_016)) The `Software:` property is the program
    that created the thumbnail. In this case, it was from KDE while using the Dolphin
    file manager. The `Thumb::Mimetype:`, `Thumb::Size:`, and `Thumb::URI:` properties
    reveal the image type, size, and location of the original file. The thumbnail
    is a smaller version of the original, as shown in [Figure 10-10](ch10.xhtml#ch010fig010).
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/ch10fig10.jpg)'
  id: totrans-466
  prefs: []
  type: TYPE_IMG
- en: '*Figure 10-10: Recovered thumbnail example*'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
- en: The removal of thumbnail files is best effort. Some file managers may delete
    the thumbnail when the original file is deleted. Some “cleaner” tools exist that
    purge cached files. Users could also manually delete the cache.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
- en: Some older applications might use the *~/.thumbnails* directory to store thumbnail
    image files.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
- en: '***Well-Integrated Desktop Applications***'
  id: totrans-470
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In the early days of X11 window managers, standard widget libraries were used
    to create a unified appearance across windows (same button styles, scrollbar styles,
    and so on). Desktop environments have taken this unified “look and feel” further
    to include tightly integrated applications. These apps don’t just look similar,
    they also behave in a similar manner, are able to communicate with one another
    (usually via D-Bus), and can share configuration. These apps are sometimes called
    *well-integrated* applications and are developed as part of a desktop environment
    project. Here are several examples of project teams along with links to lists
    of their apps:'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
- en: 'GNOME: *[https://wiki.gnome.org/Apps/](https://wiki.gnome.org/Apps/)*'
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'KDE: *[https://apps.kde.org/](https://apps.kde.org/)*'
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Xfce: *[https://gitlab.xfce.org/apps/](https://gitlab.xfce.org/apps/)*'
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'LXDE: *[https://wiki.lxde.org/](https://wiki.lxde.org/)*'
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Typical integrated apps tend to be text editors, image and document viewers,
    file managers, music and video players, and so on.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
- en: Other integrated “accessory” applications may include applications for screenshot,
    configuration tools, hotkey managers, themes, and so on. The larger desktop environments
    may even include their own email client (GNOME’s Evolution or KDE’s Kmail, for
    example) or web browser. Large cross-platform applications like Firefox, Thunderbird,
    LibreOffice, and so on may be integrated in a more generic way (using D-Bus to
    communicate).
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
- en: Well-integrated apps are interesting from a forensics perspective because they
    tend to log, share, configure, and store data in the same place and in the same
    way, making forensic analysis easier.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
- en: The use of widget libraries and well-integrated apps is not mandatory. It is
    possible to install GNOME, KDE, Xfce, and LXDE apps together on a single system,
    and even use older non-integrated X11 applications with various widget libraries
    (like Athena or Motif, for example).
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
- en: '**File Managers**'
  id: totrans-480
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: File manager applications are of special interest to forensic examiners. File
    managers are to the local system what web browsers are to the internet. Analysis
    of file managers provides insight into how files on the local machine were managed.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
- en: Dozens of file managers are available for Linux, both graphical and text console
    based. Each desktop environment favors a particular file manager, and distributions
    may choose one file manager as their default.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
- en: File managers are often a strong personal preference among Linux enthusiasts,
    and a user’s favorite may be installed, overriding the distro default.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
- en: Overall, these file managers are not bound to a particular desktop, and they
    can be used in any environment (if the required libraries are installed).
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
- en: The default file managers for the different desktop environments (KDE Dolphin,
    GNOME Nautilus, XFCE Thunar, and LXDE PCManFM) may be called by other well-integrated
    apps and leave artifacts of past activity, which can be useful in an investigation.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
- en: 'From a forensics perspective, the analysis of file managers and other integrated
    applications may include the following:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
- en: Recently opened documents
  id: totrans-487
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trash cans/recycle bins
  id: totrans-488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Image thumbnails
  id: totrans-489
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Search indexes and queries
  id: totrans-490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bookmarked files and directories
  id: totrans-491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tags and file manager metadata
  id: totrans-492
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: History of mounted devices and network shares
  id: totrans-493
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration and plug-ins
  id: totrans-494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These artifacts may be created and shared across well-integrated applications,
    and they can help reconstruct past activity. Every application may store different
    information and in different locations. During a forensic analysis, look for cache
    and data files for each application used.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
- en: '***Other Desktop Forensic Artifacts***'
  id: totrans-496
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A variety of other desktop artifacts can be found on most Linux systems. These
    are described here.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
- en: '**Screenshots**'
  id: totrans-498
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Screenshot functionality on Linux desktops can be implemented as extensions,
    as tools bundled with a particular environment, or as stand-alone applications.
    Screenshot tools typically save screenshots to the clipboard or to the filesystem.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
- en: 'When saved to the filesystem, screenshots are often saved to the user’s *~/Pictures/*
    directory with a default naming convention that includes a timestamp of when the
    screenshot was made, as shown here:'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Wayland’s security architecture prevents X11-based screenshot programs from
    working as expected, but alternative tools work with various Wayland compositors.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
- en: '**Desktop Search**'
  id: totrans-503
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Desktop search engines are an interesting place to look for forensic artifacts.
    Here, we are not looking for the keywords searched (they are not typically saved),
    but rather the search indexes containing filenames and other data. Local search
    engines are included with most distros and can index filenames or file content.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
- en: '**GNOME Desktop Search**'
  id: totrans-505
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: GNOME’s local search engine is called Tracker, and it uses daemons called Miners
    that index the filesystem and extract metadata for the Tracker database. Tracker
    uses the SPARQL database, which is based on SQLite. The database files can be
    found in either the *.cache/tracker/* or *.cache/tracker3/* directories.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
- en: 'Newer versions of Tracker separate the database into files for each search
    miner (Pictures, Documents, Filesystem, and so on). The database files (**.db*)
    can be dumped with the `sqlite` command and viewed as text or imported into SQLite
    forensic tools for analysis. For example, here the `sqlite` command is used to
    dump a tracker database:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: In this example, a file on the filesystem is represented by two lines (linked
    by the record number `100086`). There is a path and filename (`file:///home/sam/`
    `Downloads/Fintech_Forensics_Nikkel.pdf`), file size (`275303`), a file creation
    timestamp (`1593928895`), and a file added to database timestamp (`1602069522)`.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
- en: These databases may contain additional information not otherwise found on a
    forensic image, possibly information about files that had already been deleted.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
- en: '**KDE Desktop Search**'
  id: totrans-511
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'KDE has two local search engines: one for the local filesystem called Baloo
    and another for contacts, calendar, and email built into Akonadi, KDE’s personal
    information management (PIM) framework.'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
- en: 'The Baloo database is a single file located in the user’s home directory (*~/.local/share/baloo/index*),
    as shown here:'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-514
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: The size of the index can grow large over time as Baloo appears to ingest significant
    amounts of content data. As of this writing, no tools are available for offline
    forensic analysis of Baloo index files on a separate analysis machine. Analysis
    can be done with `strings`, hex editors, and forensic carving tools. There are
    several Baloo tools for searching and extracting data from a running system.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
- en: KDE’s other indexing activity is done with Akonadi. This framework stores and
    indexes email, contacts, calendar entries, notes, and other information in the
    KDE Kontact PIM suite. The data itself is stored in MySQL databases, and the search
    index uses Xapian database files (**.glass*). Everything is located in the user’s
    home directory (*~/.local/share/akonadi/*).
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-517
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: This example shows the parts of the Akonadi directory structure. The */search
    _db/* directory contains Xapian databases for each data category. The other directories
    have MySQL databases for the data itself. The contents of the databases can be
    extracted using standard MySQL and Xapian tools.
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
- en: '**Other Search Indexes**'
  id: totrans-519
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: The Xfce desktop environment uses the Catfish search tool. Catfish does not
    index files and searches files on demand.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
- en: 'A system-wide search package called *mlocate* indexes filenames. Some distros
    may have it installed by default (Ubuntu, for example). A tool to update the database
    is run periodically from cron or with systemd timers. Only file and directory
    names are indexed, not content. The configuration file is */etc/updatedb.conf*,
    and the database is */var/lib/mlocate/mlocate.db*. The mlocate.db(5) man page
    describes the database format. This database contains last modified/changed timestamps
    for each directory, and it also lists which files belong to that directory (but
    the individual files have no timestamps). A tool for dumping this database can
    be found here: *[https://github.com/halpomeranz/dfis/blob/master/mlocate-time/](https://github.com/halpomeranz/dfis/blob/master/mlocate-time/)*.'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
- en: The search databases described in this section may contain evidence of files
    that have been deleted, previous timestamps of files, or even document and file
    content that may be useful in a forensic investigation.
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
- en: '**User Network Access**'
  id: totrans-523
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This section describes access to/from Linux systems over a network. Remote
    access can be viewed from two perspectives: users initiating connections from
    a Linux system to a remote system, and Linux systems accepting connections from
    users on remote systems. Remote access is typically in the form of a remote shell
    or remote desktop.'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
- en: Network shares and cloud access are considered from the end user or client perspective.
    Local forensic analysis of client-side activity is covered, although analysis
    of network server applications is beyond the scope of this book.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
- en: '***Secure Shell Access***'
  id: totrans-526
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Remote access to Unix machines began with analog telephone modems used to connect
    a physical terminal to a serial port (tty) on a remote system. Once machines became
    connected to the internet, protocols like telnet and rlogin were created, and
    they used TCP/IP to access pseudo-terminals (pty or pts) on remote systems. These
    early protocols had poor security, and SSH was developed as a secure replacement
    that used cryptographic authentication and protection. Today, OpenSSH (*[https://www.openssh.com/](https://www.openssh.com/)*)
    is the de facto standard for secure remote access.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
- en: Machines with an SSH server (default TCP port 22) directly exposed to the internet
    will experience constant scanning, probing, and brute-force attempts to gain access,
    which will be visible in the logs. In a forensic examination, random opportunistic
    “noise” from the internet must be distinguished from a targeted attack under investigation.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 10-11](ch10.xhtml#ch010fig011) provides a basic overview diagram of
    OpenSSH clients.'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/ch10fig11.jpg)'
  id: totrans-530
  prefs: []
  type: TYPE_IMG
- en: '*Figure 10-11: SSH client overview*'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
- en: The `ssh` client accesses a shell or sends commands to a remote machine, the
    `scp` client is used to copy files (based on BSD’s `rcp`), and the `sftp` client
    also copies files interactively, similar to `ftp`. These three client programs
    use the same configuration files and keys, which are stored in the user’s *~/.ssh/*
    directory.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
- en: An SSH client can authenticate to a remote machine using passwords, key files,
    or other security key providers (smartcards, for example). By default, key files
    (if used) are manually created using the `ssh-keygen` tool and stored in files
    beginning with *id_**. The files are named after the algorithm used, and the public
    key file ends with the extension **.pub*.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
- en: The private key file can be encrypted with a passphrase or stored in the clear
    (often used for automated remote system administration tasks). The easiest way
    to check whether a key file is encrypted is to attempt to change the password
    (using `ssh-keygen -p`). If you are prompted with `Enter old` `passphrase:`, it’s
    encrypted. If you are prompted with `Enter new passphrase` `(empty for no passphrase):`,
    then it is stored in the clear. Brute-forcing an encrypted SSH key file can also
    be attempted.
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
- en: In an investigation, it is useful to search the entire system for SSH key files
    that might not be encrypted. Sometimes system users are created to make backups
    or run automated system management tools (Ansible or Nagios, for example). The
    header and footer of an SSH private key is the same whether encrypted or not,
    and the following examples can be used to create search strings in a forensic
    tool:^([17](footnotes.xhtml#ch10foot_017))
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-536
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The public key file ends with a comment field that can be interesting. It may
    contain a username, email address, hostname, or other descriptive information
    associated with the key. This public key can be made available for authentication
    using an *authorized_keys* keys file. Here’s an example public key:'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-538
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Notice how the public key string contains the user’s email address in the comment
    area. SSH clients don’t log anything locally by default, so it can be difficult
    to reconstruct past SSH activity. The *.ssh/known_hosts* file is interesting from
    a forensics perspective, as it contains a list of hosts that were accessed in
    the past. New hosts are automatically added to this list when an SSH connection
    is made. The *.ssh/known_hosts* file contains a hostname and/or IP address, the
    cryptographic algorithm used, and the public key of the remote machine. This list
    can be used to identify other machines, hostnames, domain names, and IP addresses
    possibly linked to an investigation.
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
- en: 'The public key information is also interesting as it can be correlated with
    externally gathered intelligence data like SSH public key scans (Shodan, for example),
    and could potentially identify other hosts using the same key (reused or replicated
    virtual machines). The following is an example line from a *.ssh/known_hosts*
    file:'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-541
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Another place to look for traces of past secure shell client activity is in
    the user’s shell history. These history files can be searched for `ssh`, `scp`,
    or `sftp` commands.
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
- en: Even though SSH clients don’t log activity by default, there may still be log
    entries indicating previous use. For example, when a client script or program
    has failed (or succeeded), evidence of SSH connection attempts might be found.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
- en: 'The SSH client configuration can be found several places: */etc/ssh/ssh _config*,
    */etc/ssh/ssh_config.d/**, and *~/.ssh/config*, although some of these are optional.
    Here, added custom configuration might point to other infrastructure (Host, Match,
    and ProxyJump commands, for example). Also, the use of relaying and forwarding
    of ports might be revealed (RemoteForward, ProxyCommand, and Tunnel, for example).
    SSH provides highly flexible port forwarding and proxying functionality, which
    can be used to bypass firewall rules and existing perimeter security systems.
    Evidence of remote hosts, remote usernames, port forwarding, and proxying may
    be found in the configuration files or from commands in the shell history.'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
- en: In a forensic examination, check other (non-OpenSSH) programs interacting with
    SSH (password managers or agents, for example) or alternative implementations
    of SSH (PuTTY, for example). An SSH agent will provide key authentication, and
    that is included by default in OpenSSH, but alternate agents can be used. Some
    examples of alternate agents or password managers were described previously (GNOME
    Keyring, GPG, or KDEWallet). Search for the existence of the `SSH_AUTH_SOCK` variable
    setting that indicates the use of an alternate agent for SSH.
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
- en: The file copying programs `scp` and `sftp` are often used as backends for larger
    applications (office suites, file managers, and so on) that need to exchange files
    with remote servers. An additional software package called sshfs exists to create
    a FUSE-mounted filesystem of a remote sftp login.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
- en: See the ssh(1), scp(1), sftp(1), ssh-keygen(1), and ssh_config(5) man pages
    for more detailed information about secure shell clients.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
- en: '***Remote Desktop Access***'
  id: totrans-548
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: For server environments, the ability to copy files and get a remote shell is
    often enough for users (especially administrators), and SSH adequately fills this
    need. But for desktop environments, a remote graphical desktop is possible and
    usually desired.
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
- en: Traditional Unix and Linux machines didn’t need remote desktop software, because
    remotely accessing desktops was built into the X11 protocol. This capability requires
    both the local and remote machines to run X11, which is not always the case (Windows
    or Mac clients accessing remote Linux desktops, for example). This led to the
    use of remote desktops.
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
- en: Virtual network computing (VNC) is the most popular remote desktop client for
    Linux. VNC servers typically listen on TCP port 5900 when a Linux desktop has
    a VNC server installed and running.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
- en: Wayland was developed with more security in mind and prevents client windows
    from accessing each other. Because of this, most X11-based remote access software
    doesn’t work on Wayland desktops (nor do X11 screenshot or hotkey managers). As
    a result, Wayland desktops must build remote desktop functionality into the compositor
    or use other methods to gain access to the desktop.
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
- en: 'One issue with VNC servers is the poor logging. In some cases, there may be
    no logs indicating a remote desktop connection. In other cases, the connection
    may be logged, but without an IP address. The following is an example from an
    Ubuntu machine:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Here a VNC connection was made to the `vino-server` daemon and then terminated.
    A hostname from a reverse DNS lookup is logged, but not an IP address.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
- en: '*If a person or organization runs their own DNS for the source IP range (**.in-addr
    .arpa *zone), they can fake or spoof any DNS reverse lookup they want, causing
    logs to be false. Never fully trust hostnames from reverse DNS lookups.*'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
- en: There are other client protocols for remote desktop access. Remote desktop protocol
    (RDP) is popular in Windows environments and has some Linux support. The Spice
    protocol was developed primarily for Linux desktops and includes features such
    as TLS encryption, USB port redirection, audio, and smartcard support. Many video-conferencing
    applications (Jitsi, Zoom, Microsoft Teams, and Skype, for example) offer screen
    sharing for support and presentation purposes.
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
- en: Many enterprise environments are implementing virtual desktop environments (VDEs)
    as an alternative to hardware desktop or laptop systems. A VDE is a full desktop
    environment running in a cloud. Similar to a virtual server, it’s a virtual desktop
    PC accessible with a remote desktop access method.
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
- en: '***Network Shares and Cloud Services***'
  id: totrans-560
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Network-mounted filesystems (also called network shares) can be managed in the
    kernel, or in userspace with FUSE. If mounted for system-wide use, these network
    filesystems may be configured in the */etc/fstab* file together with local hard
    drives. Network filesystems can also be mounted manually from the command line,
    and evidence might be found in the shell history. Evidence of mounting may also
    be found in the logs.
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
- en: Network file system (NFS) is the traditional Unix protocol, developed by Sun
    Microsystems, for mounting remote filesystems on local machines. NFS shares are
    mounted like normal drives, but with a hostname prepended to the first field of
    the fstab entry (`hostname.example.com:/home`, for example).
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
- en: Compared to other network filesystems, NFS is more complex, requiring multiple
    protocols and RPC services (mountd), processes to manage locking, authentication,
    exports, and more. NFS is typically used in enterprise environments, and rarely
    found in consumer home environments. See the nfs(5) man page for more information.
    The supporting protocols are defined in nearly a dozen different RFCs.
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
- en: Common internet file system (CIFS) and/or sever message block (SMB) were originally
    developed by IBM and then later by Microsoft to mount remote network filesystems
    on local machines. Linux implements the client in the kernel, and mounting can
    be an entry in */etc/fstab* (similar to NFS). The most common server-side implementation
    is Samba, which serves network shares to other SMB clients. See the mount.smb(3)
    man page for details.
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
- en: Webdav is a web-based specification for mounting shares over the HTTP protocol.
    The filesystem implementation under Linux is called davfs. Webdav is popular for
    mounting cloud services like NextCloud. Variations of the Webdav protocol include
    caldav and carddav for accessing remote calendars and contact databases. See the
    mount.davfs(8) man page for more information about mounting webdav shares.
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
- en: FUSE allows mounting filesystems without requiring a kernel implementation.
    FUSE filesystems also allow non-privileged users to mount filesystems (USB sticks,
    for example). FUSE can create filesystem abstractions for accessing arbitrary
    datasets in a filesystem-based manner (like remote FTP servers, local archive
    files, or unusual hardware devices containing data).
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
- en: Various cloud accounts on desktop machines can be configured with GUI tools
    provided by the desktop environment. GNOME provides GOA, or GNOME Online Accounts,
    for configuring cloud accounts. [Figure 10-12](ch10.xhtml#ch010fig012) shows the
    GOA configuration panel.
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/ch10fig12.jpg)'
  id: totrans-568
  prefs: []
  type: TYPE_IMG
- en: '*Figure 10-12: GNOME Online Accounts panel*'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
- en: The user has the ability to add and configure a variety of commercial and open
    cloud services.
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
- en: 'The configured accounts can be found in the user’s home directory in the *~/.config/goa-1.0/accounts.conf*
    file. The following shows two examples of configured cloud accounts:'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Here, Microsoft Exchange ➋ and Imap ➍ accounts are configured. Account identifiers
    at ➊ and ➌ in the file each contain a numeric timestamp indicating when the account
    entry was created. The passwords are stored in the GNOME Keyring.
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
- en: 'A list of possible GOA account sections can be found here: *[https://gitlab.gnome.org/GNOME/gnome-online-accounts/raw/master/doc/goa-sections.txt](https://gitlab.gnome.org/GNOME/gnome-online-accounts/raw/master/doc/goa-sections.txt)*.'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
- en: 'KDE stores cloud account information in the user’s *~/.config/libaccounts -glib/*
    directory. This is in an SQLite 3 database and can be accessed (dumped) as follows:'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: This reveals that a NextCloud account is configured for user `sam`. The password
    is stored in the KDE Wallet and requested by the libaccounts client.
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
- en: In some cases, a Linux system may have “fat client” software installed for accessing
    cloud resources. This can be free and open source software like the NextCloud
    client, or proprietary client software like Microsoft Teams.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
- en: Being able to reconstruct access to cloud services can support investigations
    and lead to the possible recovery of additional evidence stored on remote servers.
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
- en: '***Summary***'
  id: totrans-580
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This chapter will likely feel the most familiar for readers coming from a Windows
    or Mac forensics background. Nearly all of the user and desktop artifacts covered
    here are similar in concept. You now should know how to find and analyze the locations
    of user credentials and passwords and how fingerprint scans are stored. You also
    have explored windowing and desktop systems and the artifacts they provide. You
    should have a solid foundation for reconstructing user activity on the desktop,
    as well as remote access and cloud connectivity.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
