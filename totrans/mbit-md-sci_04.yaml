- en: '![Image](../images/common1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**4**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**MAGICAL MAGNETISM**'
  prefs: []
  type: TYPE_NORMAL
- en: As you saw in [Chapter 1](ch01.xhtml#ch01), the micro:bit has a built-in magnetometer
    that serves a variety of purposes. In this chapter, we’ll use it to turn your
    micro:bit into a compass that tells you which direction you’re facing. We’ll also
    measure the magnetic fields of neodymium magnets. Then, we’ll make a magnetic
    alarm that rings whenever someone opens the door.
  prefs: []
  type: TYPE_NORMAL
- en: '**PROJECT: COMPASS**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Image](../images/common3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Difficulty: Easy*'
  prefs: []
  type: TYPE_NORMAL
- en: In this project, shown in [Figure 4-1](ch04.xhtml#ch4fig1), you’ll use the micro:bit’s
    built-in magnetometer as a compass. It will display an arrow on the screen that
    points toward magnetic north.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/04fig01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-1: Finding north with a micro:bit compass*'
  prefs: []
  type: TYPE_NORMAL
- en: Unlike a conventional compass, this compass doesn’t always point north. Instead,
    it shows you which way to turn in order to be facing north.
  prefs: []
  type: TYPE_NORMAL
- en: Rotate until the arrow is facing straight ahead, and you’re looking north!
  prefs: []
  type: TYPE_NORMAL
- en: '**What You’ll Need**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'For this experiment, you will need:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Micro:bit**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Battery pack**'
  prefs: []
  type: TYPE_NORMAL
- en: You only need a micro:bit to make this compass, but if you plan to navigate
    outdoors, then you’ll need a battery pack as well.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0087-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Construction**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Go to *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*
    to access the book’s code repository and click the link for **Compass**. Once
    the program has opened, click **Download** and then copy the hex file onto your
    micro:bit. If you get stuck on this section, head back to [Chapter 1](ch01.xhtml#ch01),
    where the process of getting programs onto your micro:bit is explained in full.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you prefer to use Python, then download the code from the same website, along
    with instructions for downloading and using the book’s examples. The Python file
    for this experiment is *ch_04_Compass.py*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once you’ve loaded the program onto your micro:bit, you’ll see a message prompting
    you to move your micro:bit in a certain way. Follow the instructions. This will
    happen every time you flash a program onto the micro:bit that uses the magnetometer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The purpose of moving your micro:bit this way is to calibrate its magnetometer.
    The magnetometer chip on the micro:bit is sensitive to local magnetic field variations.
    By moving the magnetometer in different directions, you help its internal filtering
    software to compensate for the local distortions to Earth’s magnetic field. This
    is why it’s a good idea to calibrate your compass again if you take it outside,
    away from the metal objects commonly found indoors. Also, a battery pack can affect
    the magnetometer, so it’s best to calibrate with the same hardware you’ll use
    on the final project.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Calibrating your micro:bit’s magnetometer is a bit like doing a puzzle. As you
    move your micro:bit, more LEDs will light up ([Figure 4-2](ch04.xhtml#ch4fig2)).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Image](../images/04fig02.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*Figure 4-2: Calibrating your micro:bit’s magnetometer*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To use the compass, attach a battery pack to your micro:bit and take it outside,
    well away from items such as computers and household appliances. Hold the micro:bit
    level (so it’s flat). If the arrow points to the right or left, slowly turn in
    that direction until the arrow points straight ahead. When it does, you’re facing
    magnetic north.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the compass isn’t pointing north, try calibrating it again by pressing **button
    A**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Code**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The Blocks and MicroPython versions of the code follow the same pattern. The
    *heading*, or *bearing*, (the direction the micro:bit is pointing) is measured
    and then the program decides which of the three arrows (north, west, or east)
    it should display in order to direct the user in the right direction.
  prefs: []
  type: TYPE_NORMAL
- en: '**Blocks Code**'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Here is the Blocks code for this project.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0089-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In this project, we’ll set up the code so that you can calibrate the magnetometer
    any time you want by pressing button A.
  prefs: []
  type: TYPE_NORMAL
- en: The `calibrate compass` block is inside the `on button A pressed` block. The
    `calibrate compass` block will display the dot we used to calibrate the magnetometer
    earlier. You can then roll it around the display, as we did at the start of this
    project.
  prefs: []
  type: TYPE_NORMAL
- en: In the `forever` block, assign the value of `compass heading` (degrees from
    0 to 359) to a variable called `heading`, which will contain this heading.
  prefs: []
  type: TYPE_NORMAL
- en: Then create a large `if` block that consists of an `if`, an `else if`, and an
    `else`. This big block will test which direction the micro:bit is facing and display
    an arrow on the LED display showing you which way to turn to be facing north.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’re writing this code yourself, you will notice that the Blocks code
    library seems to offer only two kinds of `if` blocks: `if then` and `else`. To
    add the `else if then` section, click the `+` circled in [Figure 4-3](ch04.xhtml#ch4fig3).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/04fig03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-3: Adding another section to* if *blocks*'
  prefs: []
  type: TYPE_NORMAL
- en: The first line of the large `if` block tests whether `heading` is between 10
    and 180 degrees, where 0 degrees is north. Thus, a `heading` value between 10
    and 180 would indicate that you were facing east. In this case, the micro:bit
    would display the west arrow, which points left. This arrow tells you to turn
    to the left in order to face north.
  prefs: []
  type: TYPE_NORMAL
- en: If `heading` is not between 10 and 180, then the `else if` part of the block
    tests whether `heading` is greater than or equal to 180 and less than 350 degrees.
    If it is, then the micro:bit displays the east arrow, which tells you to go right.
  prefs: []
  type: TYPE_NORMAL
- en: If `heading` is between 350 and 10 degrees, the `else` part of the `if` block
    will display the north arrow, which points forward—you’re on the right track!
    [Figure 4-4](ch04.xhtml#ch4fig4) shows how this works (the numbers are possible
    values of `heading`).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/04fig04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-4: The arrow will point in one of three directions, guiding you north.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**MicroPython Code**'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Here is the MicroPython code for the project:'
  prefs: []
  type: TYPE_NORMAL
- en: from microbit import *
  prefs: []
  type: TYPE_NORMAL
- en: 'while True:'
  prefs: []
  type: TYPE_NORMAL
- en: heading = compass.heading()
  prefs: []
  type: TYPE_NORMAL
- en: 'if heading > 10 and heading < 180:'
  prefs: []
  type: TYPE_NORMAL
- en: display.show(Image.ARROW_W)
  prefs: []
  type: TYPE_NORMAL
- en: 'elif heading >= 180 and heading < 350:'
  prefs: []
  type: TYPE_NORMAL
- en: display.show(Image.ARROW_E)
  prefs: []
  type: TYPE_NORMAL
- en: 'else:'
  prefs: []
  type: TYPE_NORMAL
- en: display.show(Image.ARROW_N)
  prefs: []
  type: TYPE_NORMAL
- en: 'if button_a.was_pressed():'
  prefs: []
  type: TYPE_NORMAL
- en: compass.calibrate()
  prefs: []
  type: TYPE_NORMAL
- en: 'This code uses the same logic as its Blocks code equivalent: it checks the
    reading of the magnetometer and tells the micro:bit to display an arrow. Again,
    if the heading is between 10 and 180 degrees from north, the micro:bit shows a
    west arrow; if it’s between 180 and 350 degrees, the micro:bit displays an east
    arrow; and if the heading is within 20 degrees of north, an arrow points straight
    up, telling you to keep going in the same direction.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Things to Try**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: See whether you can use a magnet to confuse the compass about which direction
    is north.
  prefs: []
  type: TYPE_NORMAL
- en: '**How It Works: The Earth’s Magnetic Field**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Earth’s magnetic north and south poles have strong charges, creating a magnetic
    field all around the globe, as shown in [Figure 4-5](ch04.xhtml#ch4fig5).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/04fig05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-5: Earth’s magnetic field*'
  prefs: []
  type: TYPE_NORMAL
- en: The micro:bit’s magnetometer measures the strength of Earth’s magnetic field
    to deduce the direction the micro:bit is facing.
  prefs: []
  type: TYPE_NORMAL
- en: Interestingly, the magnetic north pole is not exactly at the top of the spinning
    ball that is Earth. The magnetic field can be centered up to 20 degrees away from
    the geographic poles, depending on where you are in the world.
  prefs: []
  type: TYPE_NORMAL
- en: Another interesting fact about the magnetic poles is that they’re shifting at
    a rate of about 6 miles (10 km) a year. One day, the poles will flip completely,
    meaning that magnetic north will be at the southern end of the globe. This process
    happens on Earth about every 450,000 years.
  prefs: []
  type: TYPE_NORMAL
- en: '**EXPERIMENT 4: MEASURING MAGNETIC FIELDS**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Image](../images/common2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Difficulty: Medium*'
  prefs: []
  type: TYPE_NORMAL
- en: As we just saw, the micro:bit’s built-in magnetometer is sensitive enough that
    you can use it as a compass to find north. It’s also a great tool for measuring
    the strength of a nearby magnet. In this experiment (shown in [Figure 4-6](ch04.xhtml#ch4fig6)),
    you’ll measure the strength of a magnetic field at various distances.
  prefs: []
  type: TYPE_NORMAL
- en: '**What You’ll Need**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In this experiment, you’ll need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Micro:bit**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Strong neodymium magnet**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ruler (preferably showing millimeters)**'
  prefs: []
  type: TYPE_NORMAL
- en: You’ll find all sorts of shapes and sizes of magnets on eBay. As you can see
    in [Figure 4-6](ch04.xhtml#ch4fig6), I’m using a disk-shaped one with a diameter
    of 10 mm, but any neodymium magnet of a similar size should work. Note that I’ve
    put a bit of tape labeled *N* on one side of the magnet (more on this later).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/04fig06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-6: The neodymium magnet used for Experiment 4*'
  prefs: []
  type: TYPE_NORMAL
- en: '**WARNING** *Neodynmium magnets are very strong, so be careful when handling
    them. If two of them get stuck together, it can be hard to separate them.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Construction**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The program repeatedly scrolls a number across the micro:bit’s display. This
    number represents the overall magnetic field strength detected by the magnetometer.
    We are going to measure the field strength at various distances from the magnet.
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*
    to access the book’s code repository and click the link for **Experiment 4: Magnetic
    Fields**. Once the program has opened, click **Download** and then copy the hex
    file onto your micro:bit. If you get stuck on this, head back to [Chapter 1](ch01.xhtml#ch01),
    where the process of getting programs onto your micro:bit is explained in full.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you prefer to use Python, download the code for this project from the same
    website, along with instructions for downloading and using the book examples.
    The Python file for this experiment is *Experiment_04.py*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Set your magnet on a flat surface so that it’s balanced on its curved edge.
    A neodymium magnet is so strong that if you set it down in this way, it will align
    itself with Earth’s magnetic field (by spinning until one side is facing north),
    just like a compass needle. Allow your magnet to do this and then put a piece
    of tape on the side that’s facing north. (You might need to use the Compass project,
    described earlier in this chapter, to find north so you don’t accidentally mark
    south instead.)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Align your ruler so the 0 cm mark is pointing north and the 30 cm mark is pointing
    south, as shown in [Figure 4-7](ch04.xhtml#ch4fig7). The ruler allows you to make
    sure the magnet continues to face north so that the effect of Earth’s magnetic
    field remains constant.![Image](../images/04fig07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Figure 4-7: Place the ruler in the north–south direction to make sure your
    magnet continues to face north.*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Set the magnet on its curved edge next to the 1 cm mark on the ruler. Make sure
    the north side is facing the micro:bit. Point the micro:bit south and align its
    edge with the 0 cm mark. Record the reading displayed on the micro:bit in the
    following table, in the 1 cm row. The unit of magnetic field strength is a *tesla*
    (which is a very, very strong magnetic field), so the readings from the micro:bit
    are in *microtesla* or millionths of a Tesla, represented by µT).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '|  **Distance from micro:bit to magnet (cm)**  | **Magnetic field strength
    (µT)** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 1 | **___________________________________** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 2 | **___________________________________** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 3 | **___________________________________** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 4 | **___________________________________** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 5 | **___________________________________** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 6 | **___________________________________** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 7 | **___________________________________** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 8 | **___________________________________** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 9 | **___________________________________** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| 10 | **___________________________________** |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: Move the magnet so it’s next to the 2 cm mark on the ruler. Enter the new number
    displayed on the micro:bit in the corresponding row in the table. Repeat this
    process for all the readings up to 10 cm. Notice that the field strength decreases
    quickly as you move the magnet away from the micro:bit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you’ve taken all the readings, try plotting a chart of your results. Make
    the vertical axis, or *Y axis*, show the field strength in µT and plot the distance
    of the magnet from the micro:bit in cm against the horizontal axis, or *X axis*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can plot this graph by hand on paper, or, if you prefer, you can make a
    copy of the Google Sheets spreadsheet I’ve created for this experiment and then
    replace my readings with the numbers you have just written down. You will find
    a link to this spreadsheet at *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*.
    Open this link and, from the spreadsheet menu, select **File**▸**Make a Copy**
    to make your own copy. [Figure 4-8](ch04.xhtml#ch4fig8) shows the completed spreadsheet
    with a chart of the readings underneath it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note that your readings might be different, as your magnet may be weaker or
    stronger.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Image](../images/04fig08.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*Figure 4-8: Make a graph of your results.*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'We’ll discuss these results in “How It Works: The Strength of Magnets” on [page
    99](ch04.xhtml#page_99).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Code**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The code for this experiment is simple. It takes a reading, displays it, and
    then repeats.
  prefs: []
  type: TYPE_NORMAL
- en: '**Blocks Code**'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Here is the Blocks code for this project.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0098-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The `show number` block displays the result of the `magnetic force` block inside
    the `forever` block.
  prefs: []
  type: TYPE_NORMAL
- en: The `magnet force` block has four options, which you can see in the drop-down
    menu of this block. You can either get a separate reading for the force in one
    of the three dimensions X, Y, or Z, or you can get the combined force measurement
    from all three dimensions. We will use the combined measurement, which is the
    `strength` option in the drop-down menu.
  prefs: []
  type: TYPE_NORMAL
- en: '**MicroPython Code**'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Here is the MicroPython version of the code:'
  prefs: []
  type: TYPE_NORMAL
- en: from microbit import *
  prefs: []
  type: TYPE_NORMAL
- en: 'while True:'
  prefs: []
  type: TYPE_NORMAL
- en: display.scroll(str(int(compass.get_field_strength() / 1300)))
  prefs: []
  type: TYPE_NORMAL
- en: In MicroPython, the `get_field_strength` function takes readings from the micro:bit’s
    magnetometer. Unlike the `magnetic force` block of the Blocks code, the MicroPython
    code does not specify the units for the measurement it returns, but the reading
    we get back is about 1,300 times the reading reported by the equivalent `magnetic
    force` block. Therefore, divide the number by 1,300 and then convert this value
    with the `int` function to make it an integer.
  prefs: []
  type: TYPE_NORMAL
- en: Use the `str` function to convert the number to a text string so the `scroll`
    function can display it on the micro:bit screen.
  prefs: []
  type: TYPE_NORMAL
- en: '**Things to Try**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Using the program for Experiment 4, try moving the magnet farther and farther
    away to see how far away the magnet can be and still show up on your micro:bit.
  prefs: []
  type: TYPE_NORMAL
- en: '**How It Works: The Strength of Magnets**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The chart in [Figure 4-8](ch04.xhtml#ch4fig8) shows that as you move the magnet
    away from the micro:bit, the magnetic field strength falls very rapidly at first
    and then gradually levels off. In fact, the relationship between magnetic field
    strength and distance from the magnet follows something called the *inverse square
    rule*. That is, the field strength is proportional to 1 divided by the square
    root of the distance from the magnet.
  prefs: []
  type: TYPE_NORMAL
- en: What this means is that when the distance between the magnet and the micro:bit
    doubles, the field strength falls to a quarter of its previous strength.
  prefs: []
  type: TYPE_NORMAL
- en: The strength of Earth’s magnetic field when measured on the ground ranges from
    25 to 65 µT. When you measure the magnetic force without a magnet nearby, you
    should get readings in this range. Even the super-strong neodymium magnet used
    in this experiment has a field strength of only a few hundred µT at a distance
    of a few centimeters. Magnets that are used to look inside human bodies during
    magnetic resonance imaging (MRI) scans typically have a field strength (where
    the person lies) of 0.5 to 1.5 T. That’s several thousand times stronger than
    the neodymium magnet. This is why you have to take off any metal you are wearing
    when you go into an MRI scanner!
  prefs: []
  type: TYPE_NORMAL
- en: '**PROJECT: MAGNETIC DOOR ALARM**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Image](../images/common3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Difficulty: Medium*'
  prefs: []
  type: TYPE_NORMAL
- en: We’re going to create a door alarm! By attaching a magnet to a door and a micro:bit
    to a door frame, the Mad Scientist can be alerted to the arrival of guests. The
    micro:bit will sound an alarm when it detects a change in the strength of the
    magnetic field. This is exactly what happens when someone opens the door, moving
    the magnet farther away.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 4-9](ch04.xhtml#ch4fig9) shows the project attached to the Mad Scientist’s
    door.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/04fig09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-9: A magnetic door alarm*'
  prefs: []
  type: TYPE_NORMAL
- en: '**What You’ll Need**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'For this project, you will need the following items:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Micro:bit**'
  prefs: []
  type: TYPE_NORMAL
- en: '**3 × Alligator clip cables** To connect the micro:bit to the speaker. These
    cables should be at least 15 cm (6 inches) long.'
  prefs: []
  type: TYPE_NORMAL
- en: '**USB power adapter or switched 3V battery pack** To power the micro:bit and
    speaker. See the [appendix](app01.xhtml) for other options for powering your micro:bit.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Speaker** You can use any of the methods for getting sound out of a micro:bit
    discussed in [Chapter 2](ch02.xhtml#ch02). Here, I used a Monk Makes Speaker for
    micro:bit.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Adhesive putty or self-adhesive pads** To attach the micro:bit and speaker
    to the door frame and the magnet to the door'
  prefs: []
  type: TYPE_NORMAL
- en: '**Neodymium magnet** As used in Experiment 4'
  prefs: []
  type: TYPE_NORMAL
- en: '**Construction**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Make sure to test the project before you install it on your door, since you’ll
    need to experiment a little to determine the right field strength to use. You’ll
    also need to calibrate the magnetometer before sticking it to a door frame.
  prefs: []
  type: TYPE_NORMAL
- en: Connect the speaker to the micro:bit using the three alligator cables, as shown
    in [Figure 4-9](ch04.xhtml#ch4fig9).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It’s a good idea to color-code your cables by using black for GND, red for 3V,
    and any other color for the audio connection from pin 0 of the micro:bit. That
    way, you won’t forget which cable is which. You’ll need to place the speaker at
    least 15 cm away from the micro:bit, as speakers have strong magnets that can
    disrupt the micro:bit’s magnetometer.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Go to *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*
    to access the book’s code repository and click the link for **Magnetic Alarm**.
    Once the program has opened, click **Download** and then copy the hex file onto
    your micro:bit. If you get stuck on this, head back to [Chapter 1](ch01.xhtml#ch01).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you prefer to use Python, you’ll find the code for this at the same website,
    along with instructions for downloading and using the book’s examples. The Python
    file for this experiment is *ch_04_Magnetic_Alarm.py*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once you have programmed the micro:bit, when you put the magnet close to the
    micro:bit, the speaker should be silent. Then when you move the magnet more than
    a few inches away, the alarm should sound. Once the program is working, disconnect
    the micro:bit from your computer and attach it to either a USB power adapter or
    battery pack. Then attach the micro:bit and speaker to your door frame. Fix the
    magnet to the door itself, within an inch (2.5 cm) of the micro:bit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**WARNING** *Adhesive putty can make a mess, so make sure you get permission
    before you start sticking things to the door and frame.*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If you’re using a USB power adapter, you’ll need an electrical outlet close
    enough to the door for the USB power adapter to reach.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Image](../images/f0102-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Code**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In both versions of the code, the magnetic field strength is first read and
    then compared with a threshold. If the threshold is exceeded, then a note is played.
  prefs: []
  type: TYPE_NORMAL
- en: '**Blocks Code**'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Here is the Blocks code for the project.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0102-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This code is basically saying that if the micro:bit reads a magnetic force strength
    of less than 100 µT, it should play a particular note for 4 beats. Since the strength
    of Earth’s magnetic field at the surface has a range of 25 to 65 µT, setting a
    threshold at 100 µT should ensure we’re detecting the magnet and not just picking
    up Earth’s magnetic field.
  prefs: []
  type: TYPE_NORMAL
- en: '**MicroPython Code**'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Here’s the MicroPython version of the program:'
  prefs: []
  type: TYPE_NORMAL
- en: from microbit import *
  prefs: []
  type: TYPE_NORMAL
- en: import music
  prefs: []
  type: TYPE_NORMAL
- en: 'while True:'
  prefs: []
  type: TYPE_NORMAL
- en: 'if compass.get_field_strength() < 160000:'
  prefs: []
  type: TYPE_NORMAL
- en: music.pitch(523, 1000)
  prefs: []
  type: TYPE_NORMAL
- en: This code works in the same way as the Blocks code, but because the units of
    `get_field_strength` are different from those of the `magnetic force` block, the
    threshold for sounding the alarm is different than in the Blocks code version.
    The units of the field strength returned by `get_field_strength` are not specified
    in its documentation (*[https://microbit-micropython.readthedocs.io/en/latest/compass.html](https://microbit-micropython.readthedocs.io/en/latest/compass.html)*),
    so I chose the threshold value of 160,000 by trial and error.
  prefs: []
  type: TYPE_NORMAL
- en: We supply the command `music.pitch` with a frequency of tone to produce. Unlike
    with the Blocks code, here we have to specify the frequency of the sound wave
    rather than a note. A frequency of 523 hertz (Hz) is the frequency of high C.
    The `music.pitch` command also requires a length of time to play the note. Here
    we’ve told the micro:bit to play the note for 1,000 milliseconds, or 1 second.
  prefs: []
  type: TYPE_NORMAL
- en: '**Things to Try**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Could a thief defeat your new alarm? Try placing a second magnet on the other
    side of the door frame, opposite the micro:bit. If the second magnet is close
    enough to the micro:bit, you may be able to open the door without triggering the
    alarm.
  prefs: []
  type: TYPE_NORMAL
- en: You could also change the alarm tone by changing the frequency to some other
    value. The following table shows some notes and their corresponding frequencies
    (to the nearest whole number).
  prefs: []
  type: TYPE_NORMAL
- en: '| **Note** | **Frequency (Hz)** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Middle C | 262 |'
  prefs: []
  type: TYPE_TB
- en: '| D | 294 |'
  prefs: []
  type: TYPE_TB
- en: '| E | 330 |'
  prefs: []
  type: TYPE_TB
- en: '| F | 349 |'
  prefs: []
  type: TYPE_TB
- en: '| G | 392 |'
  prefs: []
  type: TYPE_TB
- en: '| A | 440 |'
  prefs: []
  type: TYPE_TB
- en: '| B | 494 |'
  prefs: []
  type: TYPE_TB
- en: '| High C | 523 |'
  prefs: []
  type: TYPE_TB
- en: You can find a full table of musical notes and their frequencies at *[https://www.liutaiomottola.com/formulae/freqtab.htm](https://www.liutaiomottola.com/formulae/freqtab.htm)*.
  prefs: []
  type: TYPE_NORMAL
- en: '**SUMMARY**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The micro:bit’s magnetometer is useful for more than working out which direction
    you’re facing. In this chapter, we’ve explored how you can use it to sense the
    presence of a magnet and even to do some science by measuring magnetic field strength.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we’ll explore one of the micro:bit’s other built-in sensors—its
    accelerometer.
  prefs: []
  type: TYPE_NORMAL
