["```\n$ **minikube start --driver=virtualbox** \n `--snip--`\n Done! kubectl is now configured to use \"minikube\"\n```", "```\n$ **eval $(minikube -p minikube docker-env)**\n```", "```\n$ **docker version**\n```", "```\n# Build stage\nFROM golang:alpine AS build-env \nADD . /\nRUN cd / && go build -o telnet-server\n\n# Final stage\nFROM alpine:latest AS final\nWORKDIR /app\nENV TELNET_PORT 2323\nENV METRIC_PORT 9000\nCOPY –from=build-env /telnet-server /app/\nENTRYPOINT [″./telnet-server″]\n```", "```\n$ **docker build -t dftd/telnet-server:v1** .\n```", "```\nSending build context to Docker daemon     13MB\nStep 1/9 : FROM golang:alpine AS build-env\n ---> 6f9d081b1170\nStep 2/9 : ADD . /\n ---> 3146d8206747\nStep 3/9 : RUN cd / && go build -o telnet-server\n ---> Running in 3e05a0704b36\ngo: downloading github.com/prometheus/client_golang v1.6.0\ngo: downloading github.com/prometheus/common v0.9.1\ngo: downloading github.com/prometheus/client_model v0.2.0\ngo: downloading github.com/beorn7/perks v1.0.1\ngo: downloading github.com/cespare/xxhash/v2 v2.1.1\ngo: downloading github.com/golang/protobuf v1.4.0\ngo: downloading github.com/prometheus/procfs v0.0.11\ngo: downloading github.com/matttproud/golang_protobuf_extensions\n  v1.0.1 1 # Build stage\ngo: downloading google.golang.org/protobuf v1.21.0\ngo: downloading golang.org/x/sys v0.0.0-20200420163511-1957bb5e6d1f\nRemoving intermediate container 3e05a0704b36\n ---> 96631440ea5d\nStep 4/9 : FROM alpine:latest AS final\n ---> c059bfaa849c\nStep 5/9 : WORKDIR /app\n ---> Running in ddc5b73b1712\nRemoving intermediate container ddc5b73b1712\n ---> 022bcbba3b94\nStep 6/9 : ENV TELNET_PORT 2323\n ---> Running in 21bd3d15f50c\nRemoving intermediate container 21bd3d15f50c\n ---> 30d0284cade4\nStep 7/9 : ENV METRIC_PORT 9000\n ---> Running in 8f1fc01b04d5\nRemoving intermediate container 8f1fc01b04d5\n ---> adfd026e1c27\nStep 8/9 : COPY --from=build-env /telnet-server /app/\n ---> fd933cd32a94\nStep 9/9 : ENTRYPOINT [\"./telnet-server\"]\n ---> Running in 5d8542e950dc\nRemoving intermediate container 5d8542e950dc\n ---> f796da88ab94\n**Successfully built f796da88ab94**\n**Successfully tagged dftd/telnet-server:v1** \n```", "```\n$ **docker image ls dftd/telnet-server:v1**\nREPOSITORY                  TAG        IMAGE ID         CREATED          SIZE\ndftf/telnet-server          v1         f796da88ab94     1 minute ago     16.8MB\n```", "```\n$ **docker run -p 2323:2323 -d --name telnet-server dftd/telnet-server:v1**\n9b4b719216a1664feb096ba5a67c54907268db781a28d08596e44d388c9e9632\n```", "```\n$ **docker container ls -f name=telnet-server**\n```", "```\nCONTAINER ID  IMAGE         COMMAND       ...   PORTS                    NAMES\n9b4b719216a1  dftd/...      \"./telnet-..\" ...   0.0.0.0:2323->2323/tcp   telnet-server\n```", "```\n$ **docker container stop telnet-server**\ntelnet-server\n```", "```\n$ **docker exec telnet-server env**  \nTELNET_PORT=2323\nHOSTNAME=c8f66b93424a\nSHLVL=1\nHOME=/root\nTERM=xterm\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nPWD=/app\nMETRIC_PORT=9000\n```", "```\n$ **docker exec -it telnet-server /bin/sh** \n/app # ls\ntelnet-server\n/app #\n```", "```\n$ **docker container rm telnet-server**\ntelnet-server\n```", "```\n$ **docker inspect telnet-server**\n[\n    {\n        \"Id\": \"c8f66b93424a3dac33415941e357ae9eb30567a3d64d4b5e87776701ad8274c5\",\n        \"Created\": \"2022-02-16T03:35:44.777190911Z\",\n        \"Path\": \"./telnet-server\",\n        \"Args\": [],\n        \"State\": { 1\n            \"Status\": \"running\",\n            \"Running\": true,\n            \"Paused\": false,\n            \"Restarting\": false,\n            \"OOMKilled\": false,\n \"Dead\": false,\n            \"Pid\": 19794,\n            \"ExitCode\": 0,\n            \"Error\": \"\",\n            \"StartedAt\": \"2022-02-16T03:35:45.230788473Z\",\n            \"FinishedAt\": \"0001-01-01T00:00:00Z\"\n        },\n`--snip--`\n        \"NetworkSettings\": { 2\n            \"Bridge\": \"\",\n            \"HairpinMode\": false,\n            \"LinkLocalIPv6Address\": \"\",\n            \"LinkLocalIPv6PrefixLen\": 0,\n            \"Ports\": {\n                \"2323/tcp\": [\n                    {\n                        \"HostIp\": \"0.0.0.0\",\n                        \"HostPort\": \"2323\"\n                    }\n                ]\n            },\n            \"Gateway\": \"172.17.0.1\",\n            \"GlobalIPv6Address\": \"\",\n            \"GlobalIPv6PrefixLen\": 0,\n            \"IPAddress\": \"172.17.0.5\",\n            \"IPPrefixLen\": 16,\n            \"IPv6Gateway\": \"\",\n         \"MacAddress\": \"02:42:ac:11:00:05\",\n`--snip--`\n```", "```\n$ **docker history dftd/telnet-server:v1**\nIMAGE           CREATED       CREATED BY                                    SIZE    COMMENT\ncb5a2baff085    20 hours ago  /bin/sh -c #(nop) ENTRYPOINT [\"./telnet-ser...  0B\na826cfe49c09    20 hours ago  /bin/sh -c #(nop) COPY file:47e9acb5fa56759e... 13MB\na9a45301f95b    5 days ago    /bin/sh -c #(nop) ENV METRIC_PORT=9000          0B\n001a12a073c2    5 days ago    /bin/sh -c #(nop) ENV TELNET_PORT=2323          0B\n379892a150e3    6 days ago    /bin/sh -c #(nop) WORKDIR /app                  0B\nf70734b6a266    3 weeks ago   /bin/sh -c #(nop) CMD [\"/bin/sh\"]               0B\n<missing>       3 weeks ago   /bin/sh -c #(nop) ADD file:b91adb67b670d3a6f... 5.61MB\n```", "```\n$ **docker stats --no-stream telnet-server**\nCONTAINER ID  NAME           CPU %  MEM USAGE / LIMIT  MEM %   NET I/O  BLOCK I/O   PIDS\nc8f66b93424a  telnet-server  0.00%  2.145MiB/5.678GiB  0.04%   0B / 0B  0B / 0B      7\n```", "```\n$ **minikube ip**\n192.168.99.103\n```", "```\n$ **telnet 192.168.99.103 2323**\nTrying 192.168.99.103...\nConnected to 192.168.99.103.\nEscape character is '^]'.\n\n____________ ___________\n|  _  \\  ___|_   _|  _  \\\n| | | | |_    | | | | | |\n| | | |  _|   | | | | | |\n| |/ /| |     | | | |/ /\n|___/ \\_|     \\_/ |___/\n\n>\n```", "```\n>**d**\nTue May 10 22:55:13 +0000 UTC 2022.\n```", "```\n>**q**\nGood Bye!\nConnection closed by foreign host.\n```", "```\n $ **docker logs telnet-server**\ntelnet-server: 2022/01/04 19:38:22 telnet-server listening on [::]:2323\ntelnet-server: 2022/01/04 19:38:22 Metrics endpoint listening on :9000\ntelnet-server: 2022/01/04 19:38:32 [IP=192.168.99.1] New session\ntelnet-server: 2022/01/04 19:38:43 [IP=192.168.99.1] Requested command: d\ntelnet-server: 2022/01/04 19:38:44 [IP=192.168.99.1] User quit session\n```"]