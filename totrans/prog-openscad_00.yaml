- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: '*Programming with OpenSCAD: A Beginner’s Guide to Coding 3D-Printable Objects*
    introduces the versatile, text-based OpenSCAD 3D CAD software. This book guides
    readers through using arithmetic, variables, loops, modules, and decisions to
    design a series of increasingly complex 3D designs, all of which are suitable
    for 3D printing.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*OpenSCAD 编程：3D 可打印物体的初学者指南* 介绍了功能强大的基于文本的 OpenSCAD 3D CAD 软件。本书指导读者通过使用算术、变量、循环、模块和决策来设计一系列越来越复杂的
    3D 设计，这些设计都适合 3D 打印。'
- en: What Is OpenSCAD?
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 OpenSCAD？
- en: '*OpenSCAD* (pronounced *Open-S-CAD*) is text-based software for creating solid
    3D models. It allows you to design these models by writing code, which gives you
    (the designer) full control over the modeling process and allows for easy changes
    to any part of your design throughout that process. OpenSCAD also makes it easy
    to create designs that are defined by configurable parameters, which means you
    can build designs with change in mind.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*OpenSCAD*（发音为*Open-S-CAD*）是一个基于文本的软件，用于创建实体 3D 模型。它允许你通过编写代码来设计这些模型，这使得你（作为设计师）可以完全控制建模过程，并能够在整个过程中轻松修改设计的任何部分。OpenSCAD
    还使得创建由可配置参数定义的设计变得容易，这意味着你可以在设计时考虑到未来的变化。'
- en: 'OpenSCAD is a *descriptive programming language*: its coding statements *describe*
    the shape, size, and combination of each component of your overall design. OpenSCAD
    provides two main 3D modeling techniques: you can create complex objects from
    combinations of simpler shapes (known as *constructive solid geometry*) or extrude
    2D *.dxf* or *.svg* outlines into 3D shapes. Unlike most other free software for
    creating 3D models (such as Blender), OpenSCAD focuses on the mechanical, rather
    than the artistic, aspects of 3D design. Thus, OpenSCAD is the application to
    use when you’re planning to create 3D-printable models, but probably not what
    you’re looking for when you’re more interested in making computer-animated movies.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSCAD 是一种*描述性编程语言*：其编码语句*描述*了你整体设计中每个组件的形状、大小和组合。OpenSCAD 提供了两种主要的 3D 建模技术：你可以通过组合简单的形状（称为*构造实体几何*）来创建复杂的物体，或者将
    2D *.dxf* 或 *.svg* 轮廓挤压成 3D 形状。与大多数其他用于创建 3D 模型的免费软件（如 Blender）不同，OpenSCAD 更专注于
    3D 设计的机械方面，而非艺术方面。因此，当你计划创建可 3D 打印的模型时，OpenSCAD 是合适的工具，但如果你更感兴趣的是制作计算机动画电影，它可能不是你所寻找的工具。
- en: OpenSCAD is free, open source software that’s available to download for Windows,
    macOS, and Linux, as well as other systems. Specific system requirements are available
    at [https://openscad.org/downloads](https://openscad.org/downloads). This book
    covers OpenSCAD 2021.01, which is the latest version at the time of writing.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSCAD 是一款免费的开源软件，可供 Windows、macOS 和 Linux 等系统下载。具体的系统要求可以在 [https://openscad.org/downloads](https://openscad.org/downloads)
    查看。本书覆盖的是 OpenSCAD 2021.01，这是写作时的最新版本。
- en: Who This Book Is For
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书适合的人群
- en: This book is for beginners who are either new to code, new to 3D design, or
    new to OpenSCAD. While no prior background with either coding or 3D design is
    necessary to access the material presented in this book, some experience with
    introductory algebra would be helpful. No particular math beyond basic arithmetic
    (adding, subtracting, multiplying, and dividing) is required. However, some previous
    experience using variables in simple equations would be a useful starting point,
    as would some experience graphing points on the xy-plane.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适合那些初次接触编程、3D 设计或 OpenSCAD 的初学者。虽然阅读本书所涉及的内容并不要求你具备编程或 3D 设计的背景，但拥有一些初级代数经验会有所帮助。无需掌握基本的数学知识（加法、减法、乘法和除法）。然而，如果你对在简单方程中使用变量有所了解，或者有一些在
    xy 平面上绘制点的经验，将会是一个有用的起点。
- en: In line with our intentions to make this book beginner-friendly, we have deliberately
    chosen to focus on a subset of OpenSCAD. Our goal is to introduce its most useful
    elements in an accessible manner. In some cases, that means we briefly introduce
    a topic earlier in the book that we return to in more depth in later chapters.
    This spiraling is intended to help you form a strong foundation in the basics
    before adding layers of nuance. Our examples and projects have been curated to
    allow for maximum creative utility while still making the topic accessible to
    readers who are new to coding.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在面向初学者，因此我们故意选择专注于OpenSCAD的一个子集。我们的目标是以一种易于理解的方式介绍其最有用的元素。在某些情况下，这意味着我们在本书较早的部分简要介绍某个主题，然后在后续章节中更深入地讲解。这样的螺旋式学习方式旨在帮助你在增加更多细节之前，先打下坚实的基础。我们的示例和项目经过精心挑选，既能提供最大限度的创意实用性，又能让编程新手能够轻松理解。
- en: Why Learn to Code with OpenSCAD?
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么要通过OpenSCAD学习编程？
- en: While learning to code can be fun and exciting, it can also be challenging for
    beginners to figure out the *where* and *why* behind the inevitable errors in
    their coding projects. In contrast to the opaqueness of other text-based programming
    languages (in which it’s hard to see what’s going on behind the scenes), OpenSCAD’s
    visual nature gives users immediate feedback regarding the correctness of a particular
    approach.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然学习编程可能既有趣又令人兴奋，但对于初学者来说，弄清楚编程项目中不可避免的错误的*出错原因*和*错误所在*，也可能是一个挑战。与其他基于文本的编程语言（这些语言往往难以看清幕后发生了什么）相比，OpenSCAD的可视化特性能立即为用户提供有关特定方法正确性的反馈。
- en: Writing text-based code to create a 3D object is a powerful and effective way
    to learn how to structure long sequences of coding statements. Like more familiar
    imperative programming languages (JavaScript, Python, and so on), OpenSCAD includes
    variables and common control structures (such as `if` statements and loops) and
    supports the creation of programmer-defined modules and libraries. Additionally,
    OpenSCAD employs common syntax elements, such as using curly brackets ({ }) and
    semicolons (;), to organize statements as well as the familiar set of arithmetic
    operators and conventions. OpenSCAD not only opens up the world of text-based
    3D design, but also teaches skills that are transferable to many other popular
    programming languages.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 编写基于文本的代码来创建3D物体是一种强大而有效的学习方式，可以帮助你学习如何组织长序列的编码语句。与更为熟悉的命令式编程语言（如JavaScript、Python等）类似，OpenSCAD包括变量和常见的控制结构（如`if`语句和循环），并支持创建程序员定义的模块和库。此外，OpenSCAD使用常见的语法元素，如使用花括号（{
    }）和分号（;）来组织语句，以及熟悉的算术运算符和约定。OpenSCAD不仅开启了基于文本的3D设计世界，还教授了可转移到许多其他流行编程语言的技能。
- en: Learning to code with OpenSCAD also offers unique advantages for developing
    *computational thinking*. This computer-specific approach uses decomposition,
    abstraction, patterns, and algorithms to solve a problem in a way that makes it
    easy for a computer to carry out the solution. Developing an intuition for computational
    thinking can be difficult for beginners in other programming languages, but OpenSCAD
    makes it easy with algorithms and coding statements that literally take shape.
    Applying abstraction and patterns means visually identifying the repetitive and
    predictable elements in a design; decomposition becomes splitting a complex design
    into well-defined smaller pieces, and algorithms naturally extend from creating
    a list of steps that need to happen in order to create a design. The tactile feedback
    that comes from turning an OpenSCAD design into a physical 3D-printed object adds
    an entirely new dimension to learning to code.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用OpenSCAD学习编程也提供了独特的优势，有助于培养*计算思维*。这种计算机特定的方法利用分解、抽象、模式和算法来解决问题，使计算机能够轻松执行解决方案。对于其他编程语言的初学者来说，培养计算思维的直觉可能比较困难，但OpenSCAD通过字面上成形的算法和代码语句，使其变得简单。应用抽象和模式意味着在设计中可视化地识别出重复和可预测的元素；分解则是将一个复杂的设计拆分成定义明确的较小部分，而算法自然地从创建一系列步骤开始，这些步骤需要按顺序进行，以创建一个设计。从将OpenSCAD设计转化为实际3D打印物体中获得的触觉反馈，为学习编程增添了全新的维度。
- en: '*STEM* (science, technology, engineering, math) and *STEAM* (add art into the
    mix) are two recently popular acronyms that describe learning activities existing
    at the intersection of two or more of these traditionally separated disciplines.
    Learning to code with OpenSCAD is like taking a holistic, STEAM-based approach
    to learning how to code. OpenSCAD coding projects require translating visual shapes
    into concisely worded textual descriptions, and vice versa. Designs that start
    as hand-drawn sketches are converted to mathematical coordinate representation,
    with features that are estimated with proportionality. Designing with OpenSCAD
    code requires navigating both orthogonal and perspective views of 3D objects,
    and thinking about 3D shapes in terms of their 2D shadows. 3D-printing an OpenSCAD
    design develops engineering skills by requiring the consideration of physical
    tolerances and the adjustment of machine settings. In true STEAM fashion, this
    book asks you to simultaneously develop, combine, and practice skills typically
    relegated to the separate disciplines of technology, engineering, art, and math
    as you learn to code with OpenSCAD.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*STEM*（科学、技术、工程、数学）和*STEAM*（在其中加入艺术）是最近流行的两个缩写，描述的是这些传统上被分隔的学科之间交集处的学习活动。使用OpenSCAD学习编程就像是采取一种全面的、基于STEAM的编程学习方法。OpenSCAD编程项目要求将视觉形状转换为简洁的文字描述，反之亦然。从手绘草图开始的设计被转换为数学坐标表示，特征通过比例估算进行设计。使用OpenSCAD代码进行设计需要在3D物体的正交视图和透视视图之间进行导航，并在二维的阴影形式下思考3D形状。3D打印OpenSCAD设计通过要求考虑物理公差和调整机器设置来培养工程技能。按照真正的STEAM方法，本书要求你在学习OpenSCAD编程的过程中，同时发展、结合并练习通常归属于技术、工程、艺术和数学的独立学科的技能。'
- en: 'Learning to code with OpenSCAD has quite a few advantages:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 使用OpenSCAD学习编程有许多优点：
- en: OpenSCAD is popular, free, and open source.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAD是流行的、免费的开源软件。
- en: OpenSCAD is easy to learn and uses a common and transferable, text-based syntax
    that is shared with other popular programming languages.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAD易于学习，使用常见且可转移的文本基础语法，与其他流行编程语言共享。
- en: Designing 3D objects with OpenSCAD preserves a discoverable design history.
    Unlike other 3D-design software, where clicking Undo removes a step, with OpenSCAD,
    you can easily modify earlier steps in the design process without erasing later
    ones.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OpenSCAD设计3D物体保留了可发现的设计历史。与其他3D设计软件不同，在这些软件中，点击“撤销”会删除一步操作，但在OpenSCAD中，你可以轻松地修改设计过程中的早期步骤，而不会抹去后面的步骤。
- en: The compact size of text-based OpenSCAD files (*.scad*) makes sharing, storing,
    and modifying OpenSCAD models faster and more efficient than working with typical
    3D-modeling file formats.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于文本的OpenSCAD文件（*.scad*）紧凑的大小使得共享、存储和修改OpenSCAD模型比使用典型的3D建模文件格式更快、更高效。
- en: OpenSCAD has an easy-to-find console window for immediate and easy debugging
    feedback.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAD有一个易于找到的控制台窗口，可以提供即时且便捷的调试反馈。
- en: OpenSCAD coding projects are 3D-printable.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAD编程项目是可3D打印的。
- en: OpenSCAD is an effective first programming language choice for visual learners.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAD是视觉学习者的有效第一编程语言选择。
- en: Learning to code with OpenSCAD builds a foundation in computational thinking
    while also reinforcing spatial and mathematical reasoning in an interdisciplinary,
    STEAM-based context.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OpenSCAD学习编程在跨学科的、基于STEAM的背景下，不仅建立了计算思维的基础，还强化了空间和数学推理能力。
- en: 3D Printing and OpenSCAD
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3D打印与OpenSCAD
- en: Most people use OpenSCAD to create designs for 3D printing. At its core, *3D
    printing* is a tool for transforming virtual models into actual physical objects.
    OpenSCAD is a great choice of software to use when you’re creating parts to manufacture
    with a 3D printer. However, access to a 3D printer is in no way a prerequisite
    for this book or for learning to use OpenSCAD. We certainly recognize the appeal
    of seeing and touching your 3D designs, so we’ve sprinkled 3D-printing tips throughout
    this book, anticipating that many readers will want to interact with their virtual
    designs in the real world.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人使用OpenSCAD来创建3D打印设计。从本质上讲，*3D打印*是将虚拟模型转化为实际物理对象的工具。在创建用于3D打印的零件时，OpenSCAD是一个非常好的软件选择。然而，拥有3D打印机并不是本书学习或使用OpenSCAD的前提条件。我们当然理解看到和触摸自己3D设计的吸引力，因此在本书中，我们穿插了一些3D打印小贴士，预期许多读者会希望在现实世界中与自己的虚拟设计进行互动。
- en: '3D printing is used in an ever-increasing number of areas: mechanical engineering,
    product design, animation, architecture, sculpture, medicine, geology, rocketry,
    and the list goes on. 3D printing first gained popularity for its uses in rapid
    prototyping, which allows designers to create physical models and receive real-world
    feedback much faster than previously possible. However, in addition to prototyping
    early versions of a design, 3D-printing technologies have advanced to the point
    where it’s now possible to directly manufacture products in a variety of materials.
    Designers can now use 3D printing to build the final version of their design,
    using many types of plastic, glass, metal, magnets, cement, porcelain, bio-matter,
    and even edible foods! In fact, it’s no longer unusual for mechanical engineers
    to 3D-print metal rocket-engine parts, for dentists to 3D-print porcelain dental
    implants, for architects to 3D-print residential houses in cement, or for sculptors
    and jewelers to 3D-print a wax base for a lost-wax casting.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 3D打印技术被应用于越来越多的领域：机械工程、产品设计、动画、建筑、雕塑、医学、地质学、火箭学等等。3D打印最初因其在快速原型制作中的应用而流行，设计师能够比以往更快地创建物理模型并获得现实世界的反馈。然而，除了原型设计，3D打印技术已经发展到可以直接制造各种材料的产品。设计师现在可以使用3D打印技术，利用多种塑料、玻璃、金属、磁铁、水泥、瓷器、生物材料，甚至是可食用的食品来构建设计的最终版本！事实上，机械工程师3D打印金属火箭发动机部件、牙医3D打印瓷质牙科植入物、建筑师3D打印水泥住宅，或者雕塑家和珠宝设计师3D打印失蜡铸造的蜡模已不再是什么新鲜事。
- en: Although many types of 3D-printing technologies exist, *fused-filament fabrication*
    remains the cheapest and most readily accessible technology available. Most of
    the 3D-printing tips in this book are best suited for fused-filament fabrication,
    which builds a 3D form by melting successive layers of plastic on top of each
    other.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管存在许多类型的3D打印技术，但*熔融沉积建模*仍然是最便宜且最容易获得的技术。本书中的大多数3D打印技巧最适合熔融沉积建模，该技术通过将一层层塑料熔化并依次叠加来构建3D形状。
- en: What’s in This Book
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书内容
- en: 'This book is split into three sections:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本书分为三个部分：
- en: Chapters 1 through 3 introduce how to draw and combine basic 3D and 2D shapes.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第1到第3章介绍如何绘制和组合基本的3D和2D形状。
- en: Chapters 4 through 6 introduce loops, modules, and decisions so that you can
    add new layers of efficiency to your design process.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第4到第6章介绍循环、模块和决策，以便你可以为设计过程添加新的效率层次。
- en: Chapter 7 serves as a case study to reinforce prior topics and introduce higher-level
    design skills that work hand in hand with computational thinking.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第7章作为案例研究，强化之前的主题并介绍与计算思维紧密配合的更高阶设计技能。
- en: A series of Design Time challenges accompany the first six chapters of the book.
    These exercises provide quick designs to replicate, suitable to the scope of each
    chapter’s content. A small collection of Big Projects conclude each chapter. These
    projects, which require substantively more time and effort than the Design Time
    activities, are deliberately chosen to present a cumulative challenge.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的前六章伴随着一系列设计时间挑战。这些练习提供了快速复制的设计，适合每章内容的范围。每章最后都有一小部分大项目。这些项目需要比设计时间活动更多的时间和精力，故意选择这些项目以呈现一个渐进式的挑战。
- en: The designs in both the Design Time and Big Project sections are presented without
    absolute coordinates, as they are intended to inspire you to build toward a general
    resemblance without focusing too much on details. For these exercises, the big
    details like proportionality and shape combinations matter more than anything
    else. All Design Time and Big Project exercises are well suited for 3D printing.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 设计时间和大项目部分的设计没有绝对坐标，因为它们旨在激发你构建一个大致相似的模型，而不需要过多关注细节。在这些练习中，像比例性和形状组合这样的主要细节比其他任何事情都重要。所有的设计时间和大项目练习都非常适合3D打印。
- en: 'The following list gives a breakdown of the topics presented in each chapter:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表列出了每章中介绍的主题：
- en: '**Chapter 1: 3D Drawing with OpenSCAD**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**第1章：使用OpenSCAD进行3D绘图**'
- en: 'Introduces the OpenSCAD interfaces and teaches you to draw and place a few
    of the OpenSCAD primitive 3D shapes: cuboids, spheres, cylinders, and cones. OpenSCAD
    can also import 3D shapes generated by other applications, and we introduce that
    here as well. Another important concept covered is how to combine multiple shapes
    in a few ways. Finally, you’ll learn how to export an OpenSCAD 3D design for 3D
    printing. The Big Projects in this chapter are designed to help you get to know
    the settings on your 3D printer’s preparation software.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍了OpenSCAD的界面，并教你绘制和放置一些OpenSCAD的基本3D形状：长方体、球体、圆柱体和圆锥体。OpenSCAD还可以导入其他应用程序生成的3D形状，本章也将介绍这一点。另一个重要的概念是如何通过几种方式组合多个形状。最后，你将学习如何将OpenSCAD的3D设计导出为3D打印文件。本章中的“大项目”旨在帮助你了解3D打印机准备软件中的设置。
- en: '**Chapter 2: More Ways to Transform Shapes**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**第2章：更多的形状变换方法**'
- en: 'Presents a variety of additional transformation operations that can be applied
    to the 3D shapes introduced in Chapter 1. You’ll learn how to rotate, mirror,
    and adjust the proportionality of 3D shapes. You’ll also learn more sophisticated
    methods of combining shapes, including how to wrap a hull around two shapes and
    how to spread the properties of one shape along the edges of another shape with
    the `minkowski` operation. 3D-printing tips in this chapter introduce the concepts
    of infill and shell. The Big Projects ask you to combine multiple topics from
    Chapters 1 and 2 to produce objects you may actually use: a game die and a desktop
    organizer.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍了一些可以应用于第1章中介绍的3D形状的附加变换操作。你将学习如何旋转、镜像以及调整3D形状的比例。你还将学习更复杂的形状组合方法，包括如何在两个形状之间包裹外壳，以及如何使用`minkowski`操作将一个形状的属性沿另一个形状的边缘扩展。本章中的3D打印技巧介绍了填充和外壳的概念。本章的“大项目”要求你结合第1章和第2章的多个主题，制作你可能实际使用的物品：一个游戏骰子和一个桌面整理器。
- en: '**Chapter 3: 2D Shapes**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**第3章：2D形状**'
- en: Discusses an alternate way of approaching 3D design—building up a 3D form from
    its 2D *shadow*. You’ll learn how to draw with primitive OpenSCAD 2D shapes, including
    circles, rectangles, polygons, and text (including emoji). You’ll also learn how
    to combine those 2D shapes by using most of the same operations you studied in
    Chapter 2, as well as a new 2D operation called *offset*. Finally, you’ll see
    how to bring 2D shapes into the 3D world by extending them along the z-axis with
    a variety of new operations. 3D-printing tips in this chapter discuss resizing
    your 3D models for printing, including how to break a large model into multiple
    pieces so you can grow your 3D prints beyond the limited size of your 3D printer’s
    build platform. The Big Projects include storytelling dice, a dice holder, and
    a 3D trophy built from a 2D profile.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论了一种替代的3D设计方法——从2D *阴影*构建3D形状。你将学习如何使用基本的OpenSCAD 2D形状绘制图形，包括圆形、矩形、多边形和文本（包括表情符号）。你还将学习如何通过使用第2章中研究的大多数相同操作来组合这些2D形状，以及一种新的2D操作叫做*偏移*。最后，你将看到如何通过沿z轴扩展2D形状，将它们带入3D世界，并使用多种新的操作。章节中的3D打印技巧讨论了如何调整3D模型的尺寸以适应打印，包括如何将一个大模型拆分成多个部分，从而使你的3D打印超出3D打印机的构建平台的限制。本章的“大项目”包括讲故事的骰子、一个骰子架和一个由2D轮廓构建的3D奖杯。
- en: '**Chapter 4: Using Loops and Variables**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**第4章：使用循环和变量**'
- en: 'Introduces a new tool for computational thinking: the `for` loop. You’ll learn
    how to use variables and `for` loops to repeat shapes. The best part is that you’ll
    learn how to vary the characteristics of a shape (such as its size, position,
    or rotation) as it’s repeatedly drawn by the loop. This chapter also introduces
    comments and console printing as useful tools for planning and debugging your
    designs. 3D-printing tips in this chapter relate to exploring a few gotchas that
    may surprise you when you try to create 3D-printed objects from OpenSCAD designs:
    the limitations of small-scale features, reconfiguring a design to avoid fusing
    together parts that are supposed to be separate, and breaking a design into separate
    *.stl* files to print different pieces with different-colored filament. The Big
    Projects include a detail test, a Towers of Hanoi game, and a tic-tac-toe game.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍了一个新的计算思维工具：`for` 循环。你将学习如何使用变量和 `for` 循环来重复绘制形状。最棒的是，你将学会如何在循环绘制形状时，改变形状的特性（例如大小、位置或旋转）。本章还介绍了注释和控制台打印，这些是规划和调试设计的有用工具。本章中的
    3D 打印技巧涉及到一些可能会让你吃惊的小问题，尤其是当你试图从 OpenSCAD 设计中创建 3D 打印对象时：小尺寸特征的局限性、重新配置设计以避免本应分开的部分融合在一起，以及将设计拆分成不同的
    *.stl* 文件以便使用不同颜色的打印线材打印不同的部分。本章的大项目包括一个细节测试、汉诺塔游戏和井字游戏。
- en: '**Chapter 5: Modules**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**第五章：模块**'
- en: 'Introduces yet another computational thinking tool: decomposing a design into
    multiple modules. You’ll learn to use OpenSCAD modules to create your own shapes,
    as well as use separate files to group your new shapes into a reusable (and shareable)
    library. You’ll also create and use parameters to control characteristics of your
    shapes, as well as define variables within modules so that updating the design
    of new shapes is quick and easy. The Big Projects in this chapter include a skyscraper
    module and a library of new LEGO brick designs.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍了另一个计算思维工具：将设计分解为多个模块。你将学习如何使用 OpenSCAD 模块创建自己的形状，并使用单独的文件将这些新形状组织成一个可重用（且可共享）的库。你还将创建并使用参数来控制形状的特性，并在模块中定义变量，使得更新新形状的设计变得快速而简便。本章中的大项目包括一个摩天大楼模块和一组新的
    LEGO 积木设计库。
- en: '**Chapter 6: Dynamic Designs with if Statements**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**第六章：使用 if 语句进行动态设计**'
- en: Introduces the `if` statement, which allows you to create dynamic designs that
    change according to a certain condition. You’ll learn to create a variety of complex
    conditions using Boolean and logical operators, as well as extended `if` statements,
    and `if...else` statements. You’ll automate some of the design configurations
    suggested in the Big Projects from Chapter 4, as well as incorporate random numbers
    to add fun and unpredictable elements to your design and make repeated elements
    more organic and natural. The Big Projects include creating a random forest, a
    clock face, and a city of random skyscrapers.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍了 `if` 语句，它允许你根据某个条件创建动态变化的设计。你将学习如何使用布尔运算符和逻辑运算符创建各种复杂的条件，以及扩展的 `if` 语句和
    `if...else` 语句。你将自动化第四章“大项目”中提出的一些设计配置，并结合随机数为你的设计增添趣味和不可预测的元素，使得重复的元素更加有机和自然。本章中的大项目包括创建一个随机森林、一个时钟面盘和一座随机的摩天大楼城市。
- en: '**Chapter 7: Designing Big Projects**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**第七章：设计大型项目**'
- en: Presents a capstone project that walks through the process behind creating a
    big, multifile design. You’ll apply formal characteristics of computational thinking
    by using the iterative design cycle to reinforce and expand the ideas presented
    in the first six chapters. You’ll leverage the *walking skeleton* approach to
    evolve a simple version of the Leaning Tower of Pisa into a 3D model that bears
    a high resemblance to the actual tower. You can 3D-print this building as a trophy
    to congratulate yourself for all that you will have learned by following along
    with the material presented in the book.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 展示了一个总结性项目，讲解了创建一个大型多文件设计的过程。你将通过使用迭代设计循环，运用计算思维的正式特征，强化并扩展前六章中提出的理念。你将利用 *行走框架*
    方法，将比萨斜塔的简单版本逐步演变成一个与实际塔楼高度相似的 3D 模型。你可以将这个建筑 3D 打印出来，作为对自己在学习过程中所获得知识的奖杯。
- en: If you get stuck on any exercise in this book, suggested solutions to the Design
    Time and Big Project exercises (along with all chapter examples) are available
    at [https://programmingwithopenscad.github.io/](https://programmingwithopenscad.github.io/).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在本书中的任何练习中遇到困难，Design Time 和 Big Project 练习的建议解决方案（以及所有章节示例）可以在[https://programmingwithopenscad.github.io/](https://programmingwithopenscad.github.io/)找到。
- en: Terminology and Conventions Used in This Book
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书中使用的术语和约定
- en: Many introductory books on programming and computational thinking are available,
    and each author makes tough decisions as to how much granular detail is necessary
    for the audience they are trying to reach. As this book is meant for beginners,
    we have chosen to keep a high level of abstraction with regard to our vocabulary
    and conventions. Although some of the following terms have more precise definitions
    in other circumstances, our philosophy for this book is consistent with “don’t
    sweat the small stuff.”
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 许多关于编程和计算思维的入门书籍都有，且每位作者都会做出艰难的决策，决定需要为他们所面向的受众提供多少详细信息。由于本书面向初学者，我们选择保持较高的抽象层次，使用通用的词汇和约定。尽管以下一些术语在其他情况下有更精确的定义，但本书的理念是“不要过于纠结于小细节”。
- en: 'We use the following vocabulary in the book:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用以下词汇：
- en: Shape Any graphical 2D or 3D object created by OpenSCAD.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 形状 任何由 OpenSCAD 创建的二维或三维图形对象。
- en: Design An OpenSCAD creation (that is, an OpenSCAD *program*), which usually
    consists of a combination of multiple shapes.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设计 一个 OpenSCAD 创建的内容（即一个 OpenSCAD *程序*），通常由多个形状的组合构成。
- en: Operation An OpenSCAD command that changes the appearance/properties of one
    or more shapes.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 操作 一个 OpenSCAD 命令，用于改变一个或多个形状的外观/属性。
- en: Parameter Any value that specifies characteristics of shapes, operations, modules,
    or functions.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 参数 指定形状、操作、模块或函数特征的任何值。
- en: Preview The process of quickly displaying a design on-screen.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预览 在屏幕上快速显示设计的过程。
- en: Render The process of fully evaluating the geometry of a design (and showing
    it on-screen). Once it’s rendered, you can export a design.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 渲染 完整评估设计几何图形的过程（并在屏幕上显示）。一旦渲染完成，你可以导出设计。
- en: Units All dimensions in OpenSCAD are specified in *units*. A unit is usually
    a millimeter (by 3D-printing industry convention), but OpenSCAD is technically
    unitless. All models should be explicitly sized in 3D-printing preparation software
    just prior to printing.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单位 OpenSCAD 中的所有维度都以 *单位* 进行指定。通常情况下，单位是毫米（根据 3D 打印行业惯例），但 OpenSCAD 本身是无单位的。所有模型应在打印前在
    3D 打印准备软件中明确调整尺寸。
- en: Width The dimension associated with the x-axis, which is the “left-right” axis
    when 3D printing.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 宽度 与 x 轴相关的维度，在 3D 打印时是“左右”轴。
- en: Length The dimension associated with the y-axis, which is the “forward-backward”
    axis when 3D printing.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 长度 与 y 轴相关的维度，在 3D 打印时是“前后”轴。
- en: Height The dimension associated with the z-axis, which is the “up-down” axis
    when 3D printing.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 高度 与 z 轴相关的维度，在 3D 打印时是“上下”轴。
- en: 2D shapes Shapes with a width and length, but no height.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2D 形状 具有宽度和长度，但没有高度的形状。
- en: 3D shapes Shapes with a width, length, and height.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3D 形状 具有宽度、长度和高度的形状。
- en: A Brief Introduction to 3D Design with OpenSCAD
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简要介绍使用 OpenSCAD 进行 3D 设计
- en: If you’ve never worked with virtual 3D models before, manipulating the 3D designs
    you create in this book via the use of a 2D computer screen can be confusing at
    first. Understanding some of the basics involved in creating the illusion of 3D
    space on a 2D surface can also help you navigate the transition to a 3D-modeling
    environment.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从未接触过虚拟 3D 模型，通过使用 2D 计算机屏幕来操作本书中创建的 3D 设计可能会感到困惑。理解一些基本概念，尤其是如何在 2D 表面上创造
    3D 空间的假象，也可以帮助你顺利过渡到 3D 建模环境。
- en: Understanding 3D Points
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理解 3D 点
- en: '3D objects have a width, length, and height, so drawing a representation of
    3D shapes requires the use of three separate axes: the x-axis, y-axis, and z-axis
    ([Figure 1](#figure1-1)). The intersection of all three axes is called the *origin*
    and is indicated as the point (0, 0, 0) on the graph. Each axis proceeds in both
    positive and negative directions from the origin. Although a width, length, or
    height must be positive, the position of an object on a particular axis may be
    in the negative direction (which is relative to the location of the origin).'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 3D 物体有宽度、长度和高度，因此绘制 3D 形状的表示需要使用三个独立的坐标轴：x 轴、y 轴和 z 轴（见[图 1](#figure1-1)）。三个坐标轴的交点叫做*原点*，在图中表示为点
    (0, 0, 0)。每个坐标轴都从原点向正负两个方向延伸。尽管宽度、长度或高度必须是正值，但物体在某一坐标轴上的位置可能会在负方向上（这是相对于原点的位置）。
- en: '![ff01001](image_fi/279547f05/ff01001.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![ff01001](image_fi/279547f05/ff01001.png)'
- en: 'Figure 1: 3D coordinate system (Cartesian coordinate system. Created by Gustavb
    using PSTricks, licensed under the Creative Commons Attribution-Share Alike 3.0
    Unported license: [https://commons.wikimedia.org/wiki/File:Cartesian_coordinates_3D.svg](https://commons.wikimedia.org/wiki/File:Cartesian_coordinates_3D.svg))'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1：3D 坐标系（笛卡尔坐标系。由 Gustavb 使用 PSTricks 创建，依据创作共用 3.0 未移植版许可证授权：[https://commons.wikimedia.org/wiki/File:Cartesian_coordinates_3D.svg](https://commons.wikimedia.org/wiki/File:Cartesian_coordinates_3D.svg)）
- en: Sometimes a 2D screen makes it hard to determine the exact 3D point being viewed.
    For instance, in Figure 1, the point (3, 0, 5) could also be interpreted as the
    point (0, 4, 3.5). When in doubt about the size or position of a particular shape,
    rotate your design to gain a fuller perspective of the feature. As you rotate
    your design, a miniature graph legend (circled in red in [Figure 2](#figure1-2))
    rotates accordingly to help you keep track of which axis is which.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，2D 屏幕很难准确判断所看到的 3D 点的位置。例如，在图 1 中，点 (3, 0, 5) 也可以解释为点 (0, 4, 3.5)。当不确定某个形状的大小或位置时，可以旋转设计以获得更全面的视角。当你旋转设计时，一个小型的图形图例（在[图
    2](#figure1-2)中用红色圆圈标出）也会相应地旋转，帮助你跟踪每个坐标轴。
- en: '![ff01002](image_fi/279547f05/ff01002.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![ff01002](image_fi/279547f05/ff01002.png)'
- en: 'Figure 2: The graph legend keeps track of axis labels.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2：图形图例跟踪坐标轴标签。
- en: This legend is helpful because the axes in OpenSCAD aren’t labeled. This graph
    legend is a good feedback tool for interpreting the changing orientation of the
    *width,* *length*, and *height* as you rotate your view to understand each part
    of your design.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图例很有用，因为 OpenSCAD 中的坐标轴没有标签。这个图形图例是一个很好的反馈工具，帮助你在旋转视角以理解设计的各个部分时，解释*宽度*、*长度*和*高度*的变化方向。
- en: Using the OpenSCAD 3D-View Toolbar
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 OpenSCAD 3D 视图工具栏
- en: OpenSCAD uses a variety of perspectives and color shading (as does other 3D
    CAD software) to facilitate the representation of 3D shapes on a 2D computer screen.
    In addition to using a mouse, touchscreen, or trackpad to rotate your design,
    the OpenSCAD 3D-View toolbar ([Figure 3](#figure1-3)) provides several buttons
    for quickly rotating the 3D view of your design to an orthogonal 2D view, which
    can help reveal a shape’s true location and dimensions.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSCAD 使用多种视角和颜色阴影（与其他 3D CAD 软件一样），以便在 2D 计算机屏幕上表示 3D 形状。除了使用鼠标、触摸屏或触控板旋转设计外，OpenSCAD
    3D 视图工具栏（见[图 3](#figure1-3)）提供了多个按钮，可以快速将 3D 视图旋转到正交的 2D 视图，这有助于揭示形状的真实位置和尺寸。
- en: '![ff01003](image_fi/279547f05/ff01003.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![ff01003](image_fi/279547f05/ff01003.png)'
- en: 'Figure 3: Quick 2D orthogonal views of a 3D shape'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：3D 形状的快速 2D 正交视图
- en: 'In order, the buttons reveal the following 2D views: right, top, bottom, left,
    front, and back.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 按顺序，按钮会显示以下 2D 视图：右视图、上视图、下视图、左视图、前视图和后视图。
- en: Final Tips for Getting the Most Out of This Book
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从本书中获得最大收益的最终提示
- en: OpenSCAD has many more advanced features and capabilities than are included
    in this book. Consider these chapters a starting point in your exploration of
    the design possibilities offered by OpenSCAD. We’ve included an Afterword to provide
    a context for the development of OpenSCAD as an open source project, and to provide
    suggestions for further learning once you’ve finished reading the book. We encourage
    you to consult the documentation resources at [https://openscad.org/](https://openscad.org/),
    as well as the language reference (Appendix A) included in the back of this book
    to explore the full range of possibilities offered by the language. For a quick
    view of the basic features of OpenSCAD covered in the first four chapters of the
    book, we’ve also included a visual reference (Appendix B).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSCAD拥有比本书所涉及的更多高级功能和能力。可以将这些章节视为你探索OpenSCAD提供的设计可能性的起点。我们还附上了后记，以提供OpenSCAD作为一个开源项目发展的背景，并在你读完本书后，提供进一步学习的建议。我们鼓励你查阅[https://openscad.org/](https://openscad.org/)上的文档资源，以及本书附录A中包含的语言参考，以便深入探索该语言提供的所有可能性。为了快速查看本书前四章涵盖的OpenSCAD基本功能，我们还附上了视觉参考资料（附录B）。
- en: To truly learn how to design and code 3D-printable objects with OpenSCAD, you’ll
    need to put the book down periodically. Give yourself an opportunity to type and
    modify our examples, as well as to create your own versions of our Design Time
    and Big Project exercises. Then, use the book as a starting point for designing
    and coding your own projects. In fact, once you’ve learned something new, take
    a break from the book. Remix or extend our projects and examples, or design something
    entirely new. Try to design something useful, something that will help you apply
    that new lesson to a project you’re genuinely interested in. Show off and share
    your designs. Maybe even give your 3D-printed objects as a gift. Learning something
    new is much easier when you’re genuinely engaged with the topic, so most of all,
    have fun!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 要真正学会如何使用OpenSCAD设计和编写3D打印物体的代码，你需要定期放下书本。给自己一些机会，键入并修改我们的示例，以及创建你自己的设计时间和大项目练习。然后，将本书作为设计和编写你自己项目的起点。事实上，一旦你学会了新知识，尝试暂时放下书本。重新混合或扩展我们的项目和示例，或者设计一些全新的东西。尝试设计一些有用的东西，能够帮助你将新学的内容应用到你真正感兴趣的项目中。展示并分享你的设计，甚至把你的3D打印物品作为礼物送出去。当你真正投入到话题中时，学习新知识会变得更容易，所以最重要的是，享受乐趣！
