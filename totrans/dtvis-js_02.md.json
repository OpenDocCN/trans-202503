["```\n<!DOCTYPE html>\n**<html** lang=\"en\"**>**\n  **<head>**\n    **<meta** charset=\"utf-8\"**>**\n    **<title></title>**\n  **</head>**\n  **<body>**\n    *<!-- Content goes here -->*\n    *<!--[if lt IE 9]><script src=\"js/excanvas.min.js\"></script><![endif]-->*\n    **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js\"**>**\n    **</script>**\n    **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/flot/0.7/jquery.flot.min.js\"**>**\n    **</script>**\n  **</body>**\n**</html>**\n```", "```\n   <!DOCTYPE html>\n   **<html** lang=\"en\"**>**\n     **<head>**\n       **<meta** charset=\"utf-8\"**>**\n       **<title></title>**\n     **</head>**\n     **<body>**\n➊     **<div** id=\"chart\" style=\"width:600px;height:400px;\"**></div>**\n       *<!--[if lt IE 9]><script src=\"js/excanvas.min.js\"></script><![endif]-->*\n       **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js\"**>**\n       **</script>**\n       **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/flot/0.7/jquery.flot.min.js\"**>**\n       **</script>**\n     **</body>**\n   **</html>**\n```", "```\n**var** eas = [[1960,0.1558],[1961,0.1547],[1962,0.1574], *// Data continues...*\n**var** ecs = [[1960,0.4421],[1961,0.4706],[1962,0.5145], *// Data continues...*\n**var** lcn = [[1960,0.0811],[1961,0.0860],[1962,0.0990], *// Data continues...*\n**var** mea = [[1968,0.0383],[1969,0.0426],[1970,0.0471], *// Data continues...*\n**var** sas = [[1960,0.0478],[1961,0.0383],[1962,0.0389], *// Data continues...*\n**var** ssf = [[1960,0.0297],[1961,0.0308],[1962,0.0334], *// Data continues...*\n```", "```\n$(**function** () {\n    $.plot($(\"#chart\"), [ eas, ecs, lcn, mea, sas, ssf ]);\n});\n```", "```\n**<label><input** type=\"checkbox\"**>** East Asia & Pacific**</label>**\n**<label><input** type=\"checkbox\"**>** Europe & Central Asia**</label>**\n**<label><input** type=\"checkbox\"**>** Latin America & Caribbean**</label>**\n**<label><input** type=\"checkbox\"**>** Middle East & North Africa**</label>**\n**<label><input** type=\"checkbox\"**>** South Asia**</label>**\n**<label><input** type=\"checkbox\"**>** Sub-Saharan Africa**</label>**\n```", "```\n**<div** id=\"visualization\"**>**\n    **<div** id=\"chart\" style=\"width:500px;height:333px;float:left\"**></div>**\n    **<div** id=\"controls\" style=\"float:left;\"**>**\n        **<label><input** type=\"checkbox\"**>** East Asia & Pacific**</label>**\n        **<label><input** type=\"checkbox\"**>** Europe & Central Asia**</label>**\n        **<label><input** type=\"checkbox\"**>** Latin America & Caribbean**</label>**\n        **<label><input** type=\"checkbox\"**>** Middle East & North Africa**</label>**\n        **<label><input** type=\"checkbox\"**>** South Asia**</label>**\n        **<label><input** type=\"checkbox\"**>** Sub-Saharan Africa**</label>**\n    **</div>**\n**</div>**\n```", "```\n**<label** class=\"checkbox\"**>**\n    **<input** type=\"checkbox\" checked**>**\n    **<span** style=\"background-color:rgb(237,194,64);height:0.9em;\n                 width:0.9em;margin-right:0.25em;display:inline-block;\"**/>**\n    East Asia & Pacific\n**</label>**\n```", "```\n**var** source = [\n    { data: eas, show: **true**, color: \"#FE4C4C\", name: \"East Asia & Pacific\" },\n    { data: ecs, show: **true**, color: \"#B6ED47\", name: \"Europe & Central Asia\" },\n    { data: lcn, show: **true**, color: \"#2D9999\",\n      name: \"Latin America & Caribbean\" },\n    { data: mea, show: **true**, color: \"#A50000\",\n      name: \"Middle East & North Africa\" },\n    { data: sas, show: **true**, color: \"#679A00\", name: \"South Asia\" },\n    { data: ssf, show: **true**, color: \"#006363\", name: \"Sub-Saharan Africa\" }\n];\n```", "```\n{\n    data:  eas,\n    color: \"#E41A1C\"\n}\n```", "```\n$.grep(\n    source,\n    **function** (obj) { **return** obj.show; }\n)\n```", "```\n$.map(\n    source,\n    **function** (obj) { **return** { data: obj.data, color: obj.color }; }\n)\n```", "```\n$.map(\n    $.grep(\n        source,\n        **function** (obj) { **return** obj.show; }\n    ),\n    **function** (obj) { **return** { data: obj.data, color: obj.color }; }\n)\n```", "```\n$.each(source, **function**(idx, region) {\n    **var** input = $(\"<input>\").attr(\"type\",\"checkbox\").attr(\"id\",\"chk-\"+idx);\n    **if** (region.show) {\n        $(input).prop(\"checked\",**true**);\n    }\n    **var** span = $(\"<span>\").css({\n        \"background-color\": region.color,\n        \"display\":          \"inline-block\",\n        \"height\":           \"0.9em\",\n        \"width\":            \"0.9em\",\n        \"margin-right\":     \"0.25em\",\n    });\n    **var** label = $(\"<label>\").append(input).append(span).append(region.name);\n    $(\"#controls\").append(label);\n});\n```", "```\n**<div** id=\"visualization\"**>**\n    **<div** id=\"chart\" style=\"width:500px;height:333px;float:left\"**></div>**\n    **<div** id=\"controls\" style=\"float:left;\"**>**\n        **<p>**Select Regions to Include:**</p>**\n    **</div>**\n**</div>**\n```", "```\n$(\"input[id^='chk-']\").click(**function**(ev) {\n    *// Handle the click*\n})\n```", "```\nidx = ev.target.id.substr(4);\nsource[idx].show = !source[idx].show\n```", "```\nplotObj.setData(\n    $.map(\n        $.grep(source, **function** (obj) { **return** obj.show; }),\n        **function** (obj) { **return** { data: obj.data, color: obj.color }; }\n    )\n);\nplotObj.draw();\n```", "```\n   <!DOCTYPE html>\n   **<html** lang=\"en\"**>**\n     **<head>**\n       **<meta** charset=\"utf-8\"**>**\n       **<title></title>**\n     **</head>**\n     **<body>**\n       *<!-- Content goes here -->*\n       *<!--[if lt IE 9]><script src=\"js/excanvas.min.js\"></script><![endif]-->*\n       **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js\"**>**\n       **</script>**\n       **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/flot/0.7/jquery.flot.min.js\"**>**\n       **</script>**\n➊     **<script** src=\"js/jquery.flot.selection.js\"**></script>**\n     **</body>**\n   **</html>**\n```", "```\n$(**function** () {\n    $.plot($(\"#chart\") [\n        { data: eas, label: \"East Asia & Pacific\" },\n        { data: ecs, label: \"Europe & Central Asia\" },\n        { data: lcn, label: \"Latin America & Caribbean\" },\n        { data: mea, label: \"Middle East & North Africa\" },\n        { data: sas, label: \"South Asia\" },\n        { data: ssf, label: \"Sub-Saharan Africa\" }\n    ], {legend: {position: \"nw\"}});\n});\n```", "```\n➊ **var** $el = $(\"#chart\"),\n➋     data = [\n           { data: eas, label: \"East Asia & Pacific\" },\n           { data: ecs, label: \"Europe & Central Asia\" },\n           { data: lcn, label: \"Latin America & Caribbean\" },\n           { data: mea, label: \"Middle East & North Africa\" },\n           { data: sas, label: \"South Asia\" },\n           { data: ssf, label: \"Sub-Saharan Africa\" }\n       ],\n➌     options = {legend: {position: \"nw\"}};\n\n➍ **var** plotObj = $.plot($el, data, options);\n```", "```\n$el.on(\"plotselected\", **function**(ev, ranges) {\n    *// Handle selection events*\n});\n```", "```\nplotObj = $.plot($el, data,\n    $.extend(**true**, {}, options, {\n        xaxis: { min: ranges.xaxis.from, max: ranges.xaxis.to },\n        yaxis: { min: ranges.yaxis.from, max: ranges.yaxis.to }\n    })\n);\n```", "```\n**var** options = {\n    legend: {position: \"nw\"},\n    selection: {mode: \"xy\"}\n};\n```", "```\n   <!DOCTYPE html>\n   **<html** lang=\"en\"**>**\n     **<head>**\n       **<meta** charset=\"utf-8\"**>**\n       **<title></title>**\n     **</head>**\n     **<body>**\n       **<div** id=\"chart\" style=\"width:600px;height:400px;\"**></div>**\n➊     **<button** id=\"unzoom\"**>**Reset Zoom**</button>**\n       *<!--[if lt IE 9]><script src=\"js/excanvas.min.js\"></script><![endif]-->*\n       **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js\"**>**\n       **</script>**\n       **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/flot/0.7/jquery.flot.min.js\"**>**\n       **</script>**\n       **<script** src=\"js/jquery.flot.selection.js\"**></script>**\n     **</body>**\n   **</html>**\n```", "```\n$(\"#unzoom\").click(**function**() {\n    plotObj = $.plot($el, data, options);\n});\n```", "```\n   <!DOCTYPE html>\n   **<html** lang=\"en\"**>**\n     **<head>**\n       **<meta** charset=\"utf-8\"**>**\n       **<title></title>**\n     **</head>**\n     **<body>**\n➊     **<div** id=\"charts\"**></div>**\n       *<!--[if lt IE 9]><script src=\"js/excanvas.min.js\"></script><![endif]-->*\n       **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js\"**>**\n       **</script>**\n       **<script** src=\"//cdnjs.cloudflare.com/ajax/libs/flot/0.7/jquery.flot.min.js\"**>**\n       **</script>**\n     **</body>**\n   **</html>**\n```", "```\n$.each(exports, **function**(idx,region) {\n    **var** div = $(\"<div>\").css({\n        width: \"600px\",\n        height: \"60px\"\n    });\n    region.div = div;\n    $(\"#charts\").append(div);\n});\n```", "```\n**var** exports = [\n    { label: \"East Asia & Pacific\",\n      data: [[1960,13.2277],[1961,11.7964], *// Data continues...*\n    { label: \"Europe & Central Asia\",\n      data: [[1960,19.6961],[1961,19.4264], *// Data continues...*\n    { label: \"Latin America & Caribbean\",\n      data: [[1960,11.6802],[1961,11.3069], *// Data continues...*\n    { label: \"Middle East & North Africa\",\n      data: [[1968,31.1954],[1969,31.7533], *// Data continues...*\n    { label: \"North America\",\n      data: [[1960,5.9475],[1961,5.9275], *// Data continues...*\n    { label: \"South Asia\",\n      data: [[1960,5.7086],[1961,5.5807], *// Data continues...*\n    { label: \"Sub-Saharan Africa\",\n      data: [[1960,25.5083],[1961,25.3968], *// Data continues...*\n];\n```", "```\n$.each(exports, **function**(idx,region) {\n    region.plot = $.plot(region.div, [region.data], {\n        series: {lines: {fill: **true**, lineWidth: 1}, shadowSize: 0},\n        xaxis: {show: **false**, min:1960, max: 2011},\n        yaxis: {show: **false**, min: 0, max: 60},\n        grid:  {show: **false**},\n    });\n});\n```", "```\n**<div** id=\"charts-wrapper\"**>**\n    **<div** id=\"charts\" style=\"float:left;\"**></div>**\n    **<div** id=\"legends\" style=\"float:left;\"**></div>**\n    **<div** style=\"clear:both;\"**></div>**\n**</div>**\n```", "```\n$.each(exports, **function**(idx,region) {\n    **var** legend = $(\"<p>\").text(region.label).css({\n        \"height\":        \"17px\",\n        \"margin-bottom\": \"0\",\n        \"margin-left\":   \"10px\",\n        \"padding-top\":   \"33px\"\n    });\n    $(\"#legends\").append(legend);\n});\n```", "```\n$.plot(region.div, [region.data], {\n    series: {lines: {fill: **true**, lineWidth: 1}, shadowSize: 0},\n    xaxis:  {show: **true**, labelHeight: 0, min:1960, max: 2011,\n             tickFormatter: **function**() {**return** \"\";}},\n    yaxis:  {show: **false**, min: 0, max: 60},\n    grid:   {show: **true**, margin: 0, borderWidth: 0, margin: 0,\n             labelMargin: 0, axisMargin: 0, minBorderMargin: 0},\n});\n```", "```\n**var** dummyData = [];\n**for** (**var** yr=1960; yr<2012; yr++) dummyData.push([yr,0]);\n\n**var** dummyDiv = $(\"<div>\").css({ width: \"600px\", height: \"15px\" });\n$(\"#charts\").append(dummyDiv);\n\n**var** dummyPlot = $.plot(dummyDiv, [dummyData], {\n    xaxis: {show: **true**, labelHeight: 12, min:1960, max: 2011},\n    yaxis: {show: **false**, min: 100, max: 200},\n    grid:  {show: **true**, margin: 0, borderWidth: 0, margin: 0,\n            labelMargin: 0, axisMargin: 0, minBorderMargin: 0},\n});\n```", "```\n$.plot(region.div, [region.data], {\n    series: {lines: {fill: **true**, lineWidth: 1}, shadowSize: 0},\n    xaxis:  {show: **true**, labelHeight: 0, min: 1960, max: 2011,\n             tickFormatter: **function**() {**return** \"\";}},\n    yaxis:  {show: **false**, min: 0, max: 60},\n    grid:   {show: **true**, margin: 0, borderWidth: 0, margin: 0,\n             labelMargin: 0, axisMargin: 0, minBorderMargin: 0,\n             hoverable: **true**, autoHighlight: **false**},\n});\n```", "```\n$(\"charts\").on(\"plothover\", **function**() {\n    *// The mouse is hovering over a chart*\n}).on(\"mouseout\", **function**() {\n    *// The mouse is no longer hovering over a chart*\n});\n```", "```\n**<div** id=\"charts-wrapper\" style=\"position:relative;\"**>**\n    **<div** id=\"marker\" style=\"position:absolute;z-index:1;display:none;\n                            width:1px;border-left: 1px solid black;\"**></div>**\n    **<div** id=\"charts\" style=\"float:left;\"**></div>**\n    **<div** id=\"legends\" style=\"float:left;\"**></div>**\n    **<div** style=\"clear:both;\"**></div>**\n**</div>**\n```", "```\n$(\"charts\").on(\"plothover\", **function**(ev, pos) {\n    **var** year = Math.round(pos.x);\n    **var** left = dummyPlot.pointOffset(pos).left;\n});\n```", "```\n   $(\"#charts\").on(\"plothover\", **function**(ev, pos) {\n       **var** year = Math.round(pos.x);\n       **var** left = dummyPlot.pointOffset(pos).left;\n➊     **var** height = $(\"#charts\").height();\n       $(\"#marker\").css({\n           \"top\":    0,\n➋         \"left\":   left,\n           \"width\":  \"1px\",\n➌         \"height\": height\n       }).show();\n   });\n```", "```\n$(\"#charts\").on(\"mouseout\", **function**(ev) {\n    **if** (ev.relatedTarget.id !== \"marker\") {\n        $(\"#marker\").hide();\n    }\n});\n```", "```\n$(\"#marker\").on(\"mouseout\", **function**(ev) {\n      $(\"#marker\").hide();\n});\n```", "```\n   $.each(exports, **function**(idx,region) {\n       **var** value = $(\"<div>\").css({\n           \"position\":  \"absolute\",\n           \"top\":       (div.position().top - 3) + \"px\",\n➊         \"display\":   \"none\",\n           \"z-index\":   1,\n           \"font-size\": \"11px\",\n           \"color\":     \"black\"\n       });\n       region.value = value;\n       $(\"#charts-wrapper\").append(value);\n   });\n```", "```\n$(\"#charts\").on(\"plothover\", **function**(ev, pos) {\n    $.each(exports, **function**(idx, region) {\n        matched = $.grep(region.data, **function**(pt) { **return** pt[0] === year; });\n        **if** (matched.length > 0) {\n            region.value.text(year + \": \" + Math.round(matched[0][1]) + \"%\");\n        } **else** {\n            region.value.text(\"\");\n        }\n        region.value.css(\"left\", (left+4)+\"px\").show();\n    });\n});\n```", "```\n$(\"#charts\").on(\"plothover\", **function**(ev, pos) {\n\n    *// Handle plothover event*\n\n}).on(\"mouseout\", **function**(ev) {\n    **if** (ev.relatedTarget.id !== \"marker\") {\n        $(\"#marker\").hide();\n        $.each(exports, **function**(idx, region) {\n            region.value.hide();\n        });\n    }\n});\n\n$(\"#marker\").on(\"mouseout\", **function**(ev) {\n    $(\"#marker\").hide();\n    $.each(exports, **function**(idx, region) {\n        region.value.hide();\n    });\n});\n```", "```\n**http**://api.worldbank.org/regions/?format=json\n```", "```\n[ { \"page\": \"1\",\n    \"pages\": \"1\",\n    \"per_page\": \"50\",\n    \"total\": \"22\"\n  },\n  [ { \"id\": \"\",\n      \"code\": \"ARB\",\n      \"name\": \"Arab World\"\n    },\n    { \"id\": \"\",\n      \"code\": \"CSS\",\n      \"name\": \"Caribbean small states\"\n    },\n    { \"id\": \"\",\n      \"code\": \"EAP\",\n      \"name\": \"East Asia & Pacific (developing only)\"\n    },\n    { \"id\": \"1\",\n      \"code\": \"EAS\",\n      \"name\": \"East Asia & Pacific (all income levels)\"\n    },\n    { \"id\": \"\",\n      \"code\": \"ECA\",\n      \"name\": \"Europe & Central Asia (developing only)\"\n    },\n    { \"id\": \"2\",\n      \"code\": \"ECS\",\n      \"name\": \"Europe & Central Asia (all income levels)\"\n    },\n```", "```\n   $.getJSON(\n       \"http://api.worldbank.org/regions/\",\n➊     {format: \"json\"},\n       **function**(response) {\n           *// Do something with response*\n       }\n   );\n```", "```\n**Access-Control-Allow-Origin**: *\n```", "```\n**?format**=jsonP**&**prefix=Getdata\n```", "```\n   $.getJSON(\n➊     \"http://api.worldbank.org/regions/?prefix=?\",\n➋     {format: \"jsonp\"},\n       **function**(response) {\n           *// Do something with response*\n       }\n   );\n```", "```\n*// Fire off the query and retain the deferred object tracking it*\ndeferredRegionsRequest = $.getJSON(\n    \"http://api.worldbank.org/regions/?prefix=?\",\n    {format: \"jsonp\"}\n);\n```", "```\ndeferredRegionsRequest.done(**function**(response) {\n    *// Do something with response*\n});\n```", "```\ndeferredRegionsRequest.fail(**function**() {\n    *// Oops, our request for region information failed*\n});\n```", "```\nfiltered = $.grep(response[1], **function**(regionObj) {\n    **return** (regionObj.id !== **null**);\n});\n```", "```\nregions = $.map(filtered, **function**(regionObj) {\n        **return** {\n            code: regionObj.code,\n            name: regionObj.name.replace(\" (all income levels)\",\"\")\n        };\n    }\n);\n```", "```\ndeferredRegionsRequest.done(**function**(response) {\n    regions = $.map(\n        $.grep(response[1], **function**(regionObj) {\n            **return** (regionObj.id !== **null**);\n        }),\n        **function**(regionObj) {\n            **return** {\n                code: regionObj.code,\n                name: regionObj.name.replace(\" (all income levels)\",\"\")\n            };\n        }\n    );\n});\n```", "```\n**var** deferredRegionsAvailable = $.Deferred();\n```", "```\ndeferredRegionsAvailable.resolve();\n```", "```\ndeferredRegionsAvailable.done(**function**() {\n    *// Get the region data*\n});\n```", "```\n   *// Request the regions list and save status of the request in a Deferred object*\n➊ **var** deferredRegionsRequest = $.getJSON(\n       \"http://api.worldbank.org/regions/?prefix=?\",\n       {format: \"jsonp\"}\n   );\n\n   *// Create a second Deferred object to track when list processing is complete*\n➋ **var** deferredRegionsAvailable = $.Deferred();\n\n   *// When the request finishes, start processing*\n➌ deferredRegionsRequest.done(**function**(response) {\n       *// When we finish processing, resolve the second Deferred with the results*\n➍     deferredRegionsAvailable.resolve(\n           $.map(\n               $.grep(response[1], **function**(regionObj) {\n                   **return** (regionObj.id != \"\");\n               }),\n               **function**(regionObj) {\n                   **return** {\n                       code: regionObj.code,\n                       name: regionObj.name.replace(\" (all income levels)\",\"\")\n                   };\n               }\n           )\n       );\n   });\n   deferredRegionsAvailable.done(**function**(regions) {\n➎     *// Now we have the regions, go get the data*\n   });\n```", "```\n   deferredRegionsAvailable.done(**function**(regions) {\n       $.each(regions, **function**(idx, regionObj) {\n           regionObj.deferredDataRequest = $.getJSON(\n               \"http://api.worldbank.org/countries/\"\n                  + regionObj.code\n➊                + \"/indicators/NY.GDP.MKTP.CD\"\n                  + \"?prefix=?\",\n               { format: \"jsonp\", per_page: 9999 }\n           );\n       });\n   });\n```", "```\n   deferredRegionsAvailable.done(**function**(regions) {\n       $.each(regions, **function**(idx, regionObj) {\n           regionObj.deferredDataRequest = $.getJSON(\n               \"http://api.worldbank.org/countries/\"\n                  + regionObj.code\n                  + \"/indicators/NY.GDP.MKTP.CD\"\n                  + \"?prefix=?\",\n               { format: \"jsonp\", per_page: 9999 }\n           );\n           regionObj.deferredDataAvailable = $.Deferred();\n           regionObj.deferredDataRequest.done(**function**(response) {\n➊             regionObj.rawData = response[1] || [];\n               regionObj.deferredDataAvailable.resolve();\n           });\n       });\n   });\n```", "```\n$.map(regions, **function**(regionObj) {\n    **return** regionObj.deferredDataAvailable\n**})**\n```", "```\n$.when.apply(**this**,$.map(regions, **function**(regionObj) {\n    **return** regionObj.deferredDataAvailable\n}));\n```", "```\n   deferredAllDataAvailable.done(**function**(regions) {\n➊     $.each(regions, **function**(idx, regionObj) {\n➋         regionObj.flotData = $.map(\n➌             $.grep(regionObj.rawData, **function**(dataObj) {\n                   **return** (dataObj.value !== **null**);\n               }),\n➍             **function**(dataObj) {\n                   **return** [[\n➎                     parseInt(dataObj.date),\n➏                     parseFloat(dataObj.value)/1e12\n                   ]];\n               }\n           )\n       })\n   });\n```", "```\n   **var** deferredChartDataReady = $.Deferred();\n\n   deferredAllDataAvailable.done(**function**(regions) {\n       $.each(regions, **function**(idx, regionObj) {\n           regionObj.flotData = $.map(\n               $.grep(regionObj.rawData, **function**(dataObj) {\n                   **return** (dataObj.value !== **null**);\n               }),\n               **function**(dataObj) {\n                   **return** [[\n                       parseInt(dataObj.date),\n                       parseFloat(dataObj.value)/1e12\n                   ]];\n               }\n           )\n       })\n➊     deferredChartDataReady.resolve(regions);\n   });\n   deferredChartDataReady.done(**function**(regions) {\n       *// Draw the chart*\n   });\n```", "```\ndeferredChartDataReady.done(**function**(regions) {\n    $.plot($(\"#chart\"),\n        $.map(regions, **function**(regionObj) {\n            **return** {\n                label: regionObj.name,\n                data: regionObj.flotData\n            };\n        })\n        ,{ legend: { position: \"nw\"} }\n    );\n});\n```"]