["```\n1 ' Circles.sb\n2 GraphicsWindow.MouseDown = OnMouseDown\n3\n4 Sub OnMouseDown\n5   GraphicsWindow.PenColor = GraphicsWindow.GetRandomColor()\n6   X0 = GraphicsWindow.MouseX - 10\n7   Y0 = GraphicsWindow.MouseY - 10\n8   GraphicsWindow.DrawEllipse(X0, Y0, 20, 20)\n9 EndSub\n```", "```\n1 ' KeyDown.sb\n2 yPos = 10\n3 GraphicsWindow.KeyDown = OnKeyDown\n4\n5 Sub OnKeyDown\n6   GraphicsWindow.DrawText(10, yPos, GraphicsWindow.LastKey)\n7   yPos = yPos + 15\n8 EndSub\n```", "```\nTextWindow.Show()\nGraphicsWindow.Show()\nGraphicsWindow.KeyDown = OnKeyDown\n\nSub OnKeyDown\n  TextWindow.WriteLine(GraphicsWindow.LastKey)\nEndSub\n```", "```\n 1 ' Typewriter.sb\n 2 x = 0                ' x position for displaying the last character\n 3 y = 0                ' y position for displaying the last character\n 4 GraphicsWindow.Title = \"Typewriter\"\n 5 GraphicsWindow.FontName = \"Courier New\"\n 6 GraphicsWindow.TextInput = OnTextInput\n 7\n 8 Sub OnTextInput\n 9   Sound.PlayClick()     ' Plays a typewriter sound effect\n10   If (GraphicsWindow.LastKey = \"Return\") Then\n11     x = 0               ' Moves to next line\n12     y = y + 15\n13   Else\n14     GraphicsWindow.DrawText(x, y, GraphicsWindow.LastText)\n15     x = x + 8        ' Advances x position for the next character\n16     If (x > GraphicsWindow.Width) Then ' If more than right margin\n17       x = 0          ' Moves to the next line\n18       y = y + 15\n19     EndIf\n20   EndIf\n21 EndSub\n```", "```\n 1 ' Scribble.sb\n 2 GraphicsWindow.MouseMove = OnMouseMove\n 3\n 4 Sub OnMouseMove\n 5   x = GraphicsWindow.MouseX   ' Current x position of mouse\n 6   y = GraphicsWindow.MouseY   ' Current y position of mouse\n 7\n 8   If (Mouse.IsLeftButtonDown) Then\n 9     GraphicsWindow.DrawLine(prevX, prevY, x, y)\n10   EndIf\n11\n12   prevX = x                   ' Updates the last (previous) position\n13   prevY = y\n14 EndSub\n```", "```\nGraphicsWindow.MouseDown = OnMouseEvent\nGraphicsWindow.MouseMove = OnMouseEvent\n```", "```\nGraphicsWindow.MouseDown = OnMouseDown\n```", "```\nGraphicsWindow.MouseDown = DoNothing\n```", "```\n 1 ' GoldRush_Incomplete.sb\n 2 GraphicsWindow.Title = \"GOLD RUSH\"\n 3 GraphicsWindow.CanResize = \"False\"\n 4 GraphicsWindow.Width = 480\n 5 GraphicsWindow.Height = 360\n 6\n 7 path = Program.Directory\n 8 grid = Shapes.AddImage(path + \"\\Grid.png\")\n 9 player = Shapes.AddImage(path + \"\\Turtle.png\")\n10 gold = Shapes.AddImage(path + \"\\Gold.png\")\n11\n12 ' Places the player (turtle) near the middle\n13 XP = 4               ' x position (from 0 to 7)\n14 YP = 3               ' y position (from 0 to 5)\n15 Shapes.Move(player, XP * 60, YP * 60)\n16\n17 ' Creates the score text shape (over a black rectangle)\n18 GraphicsWindow.BrushColor = \"Black\"\n19 Shapes.AddRectangle(90, 20)\n20 GraphicsWindow.FontSize = 14\n21 GraphicsWindow.BrushColor = \"Red\"\n22 scoreID = Shapes.AddText(\"Score: 0\") ' For now\n23\n24 ' Registers two event handlers\n25 GraphicsWindow.KeyDown = OnKeyDown\n26 Timer.Tick = OnTick\n27\n28 ' Initializes variables\n29 Timer.Interval = 2000 ' Ticks every 2 sec\n30 score = 0             ' Keeps track of player's score\n31 bagCount = 0          ' Counts how many bags so far\n```", "```\n 1 Sub OnKeyDown\n 2  key = GraphicsWindow.LastKey\n 3   If ((key = \"Up\") And (YP > 0)) Then\n 4     YP = YP - 1\n 5   ElseIf ((key = \"Down\") And (YP < 5)) Then\n 6     YP = YP + 1\n 7   ElseIf ((key = \"Left\") And (XP > 0)) Then\n 8     XP = XP - 1\n 9   ElseIf ((key = \"Right\") And (XP < 7)) Then\n10     XP = XP + 1\n11   EndIf\n 12  Shapes.Move(player, XP * 60, YP * 60)\n13  CheckTouch()          ' Checks if the player touched the bag\n14 EndSub\n```", "```\n1 Sub OnTick  ' Timer expires\n2   NewRound()\n3 EndSub\n```", "```\n 1 Sub NewRound\n 2   bagCount = bagCount + 1\n 3   If (bagCount <= 20) Then\n 4     XG = Math.GetRandomNumber(8) - 1    ' From 0 to 7\n 5     YG = Math.GetRandomNumber(6) - 1    ' From 0 to 5\n 6     Shapes.Move(gold, XG * 60, YG * 60)\n 7     CheckTouch()\n 8   Else\n 9     Shapes.Remove(gold)                 ' Deletes the gold bag shape\n10     GraphicsWindow.KeyDown = OnGameOver ' Do nothing\n11     Timer.Tick = OnGameOver             ' Do nothing\n12   EndIf\n13 EndSub\n```", "```\n1 Sub OnGameOver\n2 EndSub\n```", "```\n 1 Sub CheckTouch\n 2   If ((XP = XG) And (YP = YG)) Then\n 3     score = score + 1    ' Gives the player one point\n 4     Shapes.SetText(scoreID, \"Score: \" + score)\n 5     Sound.PlayClick()    ' Adds sound effect\n 6     Timer.Pause()        ' Resets the timer\n 7     Timer.Resume()       ' Starts the timer\n 8     NewRound()           ' Starts a new round\n 9   EndIf\n10 EndSub\n```"]