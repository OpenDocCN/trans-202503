["```\n$ cd projects\n$ mkdir -p jupiter/src\n$ cd jupiter\n$ touch Makefile src/Makefile jupiter/src/main.c\n$\n```", "```\nall clean jupiter:\n        cd src && $(MAKE) $@\n\n.PHONY: all clean\n```", "```\nall: jupiter\n\njupiter: main.c\n        gcc -g -O0 -o $@ main.c\nclean:\n        -rm jupiter\n\n.PHONY: all clean\n```", "```\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char * argv[])\n{\n    printf(\"Hello from %s!\\n\", argv[0]);\n    return 0;\n}\n```", "```\ntargets: [dependencies][; command-0]\n[<tab>command-1\n<tab>command-2\n--snip--\n<tab>command-N]\n```", "```\nvar1 = val1\nvar2 = val2\n--snip--\ntarget1 : t1_dep1 t1_dep2 ... t1_depN\n<tab>shell-command1a\n<tab>shell-command1b\n--snip--\ntarget2 : t2_dep1 t2_dep2 ... t2_depN\n<tab>shell-command2a\n<tab>shell-command2b\n--snip--\n```", "```\n➊ foo: bar.c\n           sources=bar.c; \\\n           gcc -o foo $${sources}\n➋ fud: baz.c\n           sources=baz.c; gcc -o fud $${sources}\n➌ doo: doo.c\n           TMPDIR=/var/tmp gcc -o doo doo.c\n```", "```\n   --snip--\n   mytarget = foo\n➊ $(mytarget): $(mytarget).c\n        ➋ gcc -o $(mytarget) $(mytarget).c\n   mytarget = bar\n   --snip--\n```", "```\n--snip--\nfoo: foo.c\n        gcc -o bar bar.c\n--snip--\n```", "```\nprogram: main.o print.o display.o\n     ➊ ld main.o print.o display.o ... -o program\n\nmain.o: main.c\n        gcc -c -g -O2 -o main.o main.c\n\nprint.o: print.c\n        gcc -c -g -O2 -o print.o print.c\n\ndisplay.o: display.c\n        gcc -c -g -O2 -o display.o display.c\n```", "```\nsources = main.c print.c display.c\n\nprogram: $(sources)\n        gcc -g -O2 -o program $(sources)\n```", "```\nobjects = main.o print.o display.o\n\nmain.o: main.c print.h display.h\nprint.o: print.c print.h\ndisplay.o: display.c display.h\n\nprogram: $(objects)\n        gcc -g -O2 -o $@ $(objects)\n```", "```\n$(CC) $(CPPFLAGS) $(CFLAGS) -c\n```", "```\n➊ $ make\n   cc    -c -o main.o main.c\n   $\n➋ $ make program\n   cc    -c -o print.o print.c\n   cc    -c -o display.o display.c\n   gcc -g -O2 -o program main.o print.o display.o\n   $\n```", "```\n$ touch display.h\n$ make program\ncc -c -o main.o main.c\ncc -c -o display.o display.c\ngcc -g -O0 -o program main.o print.o display.o\n$\n```", "```\nall clean:\n        cd src && $(MAKE) $@\n```", "```\n➊ package = jupiter\n   version = 1.0\n   tarname = $(package)\n   distdir = $(tarname)-$(version)\n\n   all clean jupiter:\n           cd src && $(MAKE) $@\n\n➋ dist: $(distdir).tar.gz\n\n➌ $(distdir).tar.gz: $(distdir)\n           tar chof - $(distdir) | gzip -9 -c > $@\n           rm -rf $(distdir)\n\n➍ $(distdir):\n           mkdir -p $(distdir)/src\n           cp Makefile $(distdir)\n           cp src/Makefile src/main.c $(distdir)/src\n\n➎ .PHONY: all clean dist\n```", "```\n$ mkdir jupiter-1.0\n$ make dist\ntar chof - jupiter-1.0 | gzip -9 -c > jupiter-1.0.tar.gz\nrm -rf jupiter-1.0\n$\n```", "```\n   --snip--\n   $(distdir).tar.gz: $(distdir)\n           tar chof - $(distdir) | gzip -9 -c > $@\n           rm -rf $(distdir)\n\n➊ $(distdir): FORCE\n           mkdir -p $(distdir)/src\n           cp Makefile $(distdir)\n           cp src/Makefile $(distdir)/src\n           cp src/main.c $(distdir)/src\n\n➋ FORCE:\n           -rm $(distdir).tar.gz >/dev/null 2>&1\n           rm -rf $(distdir)\n\n  .PHONY: FORCE all clean dist\n```", "```\n--snip--\n$(distdir): FORCE\n        mkdir -p $(distdir)/src\n        cp Makefile $(distdir)\n        cp src/Makefile src/main.c $(distdir)/src\n\ndistcheck: $(distdir).tar.gz\n        gzip -cd $(distdir).tar.gz | tar xvf -\n        cd $(distdir) && $(MAKE) all\n        cd $(distdir) && $(MAKE) clean\n        rm -rf $(distdir)\n        @echo \"*** Package $(distdir).tar.gz is ready for distribution.\"\n--snip--\n.PHONY: FORCE all clean dist distcheck\n```", "```\n--snip--\nall clean check jupiter:\n        cd src && $(MAKE) $@\n--snip--\n.PHONY: FORCE all clean check dist distcheck\n```", "```\n--snip--\nsrc/jupiter: src/main.c\n        $(CC) $(CFLAGS) $(CPPFLAGS) -o $@ src/main.c\n\ncheck: all\n        ./jupiter | grep \"Hello from .*jupiter!\"\n        @echo \"*** ALL TESTS PASSED ***\"\n--snip--\n\n.PHONY: all clean check\n```", "```\n--snip--\ndistcheck: $(distdir).tar.gz\n        gzip -cd $(distdir).tar.gz | tar xvf -\n        cd $(distdir) && $(MAKE) all\n        cd $(distdir) && $(MAKE) check\n        cd $(distdir) && $(MAKE) clean\n        rm -rf $(distdir)\n        @echo \"*** Package $(distdir).tar.gz is ready for distribution.\"\n--snip--\n```", "```\n--snip--\nall clean check install jupiter:\n        cd src && $(MAKE) $@\n--snip--\n\n.PHONY: FORCE all clean check dist distcheck install\n```", "```\n--snip--\ncheck: all\n        ./src/jupiter | grep \"Hello from .*jupiter!\"\n        @echo \"*** All TESTS PASSED\"\n\ninstall:\n        cp jupiter /usr/bin\n        chown root:root /usr/bin/jupiter\n        chmod +x /usr/bin/jupiter\n--snip--\n\n.PHONY: all clean check install\n```", "```\n$ gzip -cd jupiter-1.0.tar.gz | tar xf -\n$ cd jupiter-1.0\n$ make all check\n--snip--\n$ sudo make install\nPassword: ******\n--snip--\n$\n```", "```\n   package = jupiter\n   version = 1.0\n   tarname = $(package)\n   distdir = $(tarname)-$(version)\n\n   prefix=/usr/local\n➊ export prefix\n\n   all clean check install jupiter:\n           cd src && $(MAKE) $@\n--snip--\n```", "```\n--snip--\ninstall:\n     ➋ install -d $(prefix)/bin\n        install -m 0755 jupiter $(prefix)/bin\n--snip--\n```", "```\n$ sudo make prefix=/usr install\n--snip--\n```", "```\n$ make all\n$ make prefix=$PWD/inst install\n$\n$ ls -1p\ninst/\nMakefile\nsrc/\n$\n$ ls -1p inst\nbin/\n$\n$ ls -1p inst/bin\njupiter\n$\n```", "```\n--snip--\nall clean check install uninstall jupiter:\n        cd src && $(MAKE) $@\n--snip--\n\n.PHONY: FORCE all clean check dist distcheck install uninstall\n```", "```\n--snip--\ninstall:\n        install -d $(prefix)/bin\n        install -m 0755 jupiter $(prefix)/bin\n\nuninstall:\n        rm -f $(prefix)/bin/jupiter\n        -rmdir $(prefix)/bin >/dev/null 2>&1\n--snip--\n\n.PHONY: all clean check install uninstall\n```", "```\n--snip--\ndistcheck: $(distdir).tar.gz\n        gzip -cd $(distdir).tar.gz | tar xvf -\n        cd $(distdir) && $(MAKE) all\n        cd $(distdir) && $(MAKE) check\n        cd $(distdir) && $(MAKE) prefix=$${PWD}/_inst install\n        cd $(distdir) && $(MAKE) prefix=$${PWD}/_inst uninstall\n        cd $(distdir) && $(MAKE) clean\n        rm -rf $(distdir)\n        @echo \"*** Package $(distdir).tar.gz is ready for distribution.\"\n--snip--\n```", "```\n--snip--\ndistcheck: $(distdir).tar.gz\n        gzip -cd $(distdir).tar.gz | tar xvf -\n        cd $(distdir) && $(MAKE) all\n        cd $(distdir) && $(MAKE) check\n        cd $(distdir) && $(MAKE) prefix=$${PWD}/_inst install\n        cd $(distdir) && $(MAKE) prefix=$${PWD}/_inst uninstall\n     ➊ @remaining=\"`find $(distdir)/_inst -type f | wc -l`\"; \\\n        if test \"$${remaining}\" -ne 0; then \\\n        ➋ echo \"*** $${remaining} file(s) remaining in stage directory!\"; \\\n           exit 1; \\\n        fi\n        cd $(distdir) && $(MAKE) clean\n        rm -rf $(distdir)\n        @echo \"*** Package $(distdir).tar.gz is ready for distribution.\"\n--snip--\n```", "```\n--snip--\nprefix = /usr/local\nexec_prefix = $(prefix)\nbindir = $(exec_prefix)/bin\nexport prefix\nexport exec_prefix\nexport bindir\n--snip--\n```", "```\n--snip--\ninstall:\n        install -d $(bindir)\n        install -m 0755 jupiter $(bindir)\n\nuninstall:\n        rm -f $(bindir)/jupiter\n        -rmdir $(bindir) >/dev/null 2>&1\n--snip--\n```", "```\n$ make prefix=/usr install\n--snip--\n```", "```\n$ make prefix=/usr sysconfdir=/etc install\n--snip--\n```", "```\n--snip--\ninstall:\n        install -d $(DESTDIR)$(bindir)\n        install -m 0755 jupiter $(DESTDIR)$(bindir)\n\nuninstall:\n        rm -f $(DESTDIR)$(bindir)/jupiter\n        -rmdir $(DESTDIR)$(bindir) >/dev/null 2>&1\n--snip--\n```", "```\n--snip--\ndistcheck: $(distdir).tar.gz\n        gzip -cd $(distdir).tar.gz | tar xvf -\n        cd $(distdir) && $(MAKE) all\n        cd $(distdir) && $(MAKE) check\n        cd $(distdir) && $(MAKE) DESTDIR=$${PWD}/inst install\n        cd $(distdir) && $(MAKE) DESTDIR=$${PWD}/inst uninstall\n        @remaining=\"`find $(distdir)/inst -type f | wc -l`\"; \\\n        if test \"$${remaining}\" -ne 0; then \\\n          echo \"*** $${remaining} file(s) remaining in stage directory!\"; \\\n          exit 1; \\\n        fi\n        cd $(distdir) && $(MAKE) clean\n        rm -rf $(distdir)\n        @echo \"*** Package $(distdir).tar.gz is ready for distribution.\"\n--snip--\n```", "```\n%install\nmake prefix=/usr DESTDIR=%BUILDROOT install\n```", "```\n$ make prefix=/usr install\n--snip--\n```", "```\nprogram: main.c\n       gcc -DCFGDIR=\"\\\"$(sysconfdir)\\\"\" -o $@ main.c\n```", "```\n#ifndef CFGDIR\n# define CFGDIR \"/etc\"\n#endif\nconst char *cfgdir = CFGDIR;\n```", "```\n%build\n%setup\n./configure prefix=/usr sysconfdir=/etc\nmake\n```", "```\n%install\nmake DESTDIR=%BUILDROOT% install\n```", "```\n%install\nmake prefix=%BUILDROOT%/usr sysconfdir=%BUILDROOT%/etc install\n```", "```\n$ sudo make install\n```", "```\n4CFLAGS = -g -O0\n--snip--\njupiter: main.c\n        $(CC) $(CPPFLAGS) $(CFLAGS) -o $@ main.c\n--snip--\n```", "```\n$ make CC=ccache CFLAGS='-g -O2' CPPFLAGS=-Dtest\n```", "```\n$ CC=ccache CFLAGS='-g -O2' CPPFLAGS=-Dtest make\n```", "```\n--snip--\nCFLAGS ?= -g -O0\n--snip--\n```", "```\n$ make -j clean all\n```", "```\n   package = jupiter\n   version = 1.0\n   tarname = $(package)\n   distdir = $(tarname)-$(version)\n\n   prefix = /usr/local\n   exec_prefix = $(prefix)\n   bindir = $(exec_prefix)/bin\n\n➊ #export prefix\n   #export exec_prefix\n   #export bindir\n\n➋ all jupiter: src/jupiter\n\n   dist: $(distdir).tar.gz\n\n   $(distdir).tar.gz: $(distdir)\n           tar chof - $(distdir) | gzip -9 -c > $@\n           rm -rf $(distdir)\n $(distdir): FORCE\n           mkdir -p $(distdir)/src\n           cp Makefile $(distdir)\n           cp src/Makefile $(distdir)/src\n           cp src/main.c $(distdir)/src\n\n   distcheck: $(distdir).tar.gz\n           gzip -cd $(distdir).tar.gz | tar xvf -\n           cd $(distdir) && $(MAKE) all\n           cd $(distdir) && $(MAKE) check\n           cd $(distdir) && $(MAKE) DESTDIR=$${PWD}/_inst install\n           cd $(distdir) && $(MAKE) DESTDIR=$${PWD}/_inst uninstall\n           @remaining=\"`find $${PWD}/$(distdir)/_inst -type f | wc -l`\"; \\\n           if test \"$${remaining}\" -ne 0; then \\\n             echo \"*** $${remaining} file(s) remaining in stage directory!\"; \\\n             exit 1; \\\n           fi\n           cd $(distdir) && $(MAKE) clean\n           rm -rf $(distdir)\n           @echo \"*** Package $(distdir).tar.gz is ready for distribution.\"\n\n   FORCE:\n           -rm -f $(distdir).tar.gz >/dev/null 2>&1\n           -rm -rf $(distdir) >/dev/null 2>&1\n➌ include src/Makefile\n\n  .PHONY: FORCE all clean check dist distcheck install uninstall\n```", "```\nCFLAGS = -g -O0\n\nsrc/jupiter: src/main.c\n        $(CC) $(CFLAGS) $(CPPFLAGS) -o $@ src/main.c\n\ncheck: all\n ./src/jupiter | grep \"Hello from .*jupiter!\"\n        @echo \"*** All TESTS PASSED\"\n\ninstall:\n        install -d $(DESTDIR)$(bindir)\n        install -m 0755 src/jupiter $(DESTDIR)$(bindir)\n\nuninstall:\n        rm -f $(DESTDIR)$(bindir)/jupiter\n        -rmdir -f $(DESTDIR)$(bindir) >/dev/null 2>&1\n\nclean:\n        rm -f src/jupiter\n```"]