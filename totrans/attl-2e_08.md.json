["```\n   $ ls -lr /usr/lib/x86_64-linux-gnu/libcurl*\n➊ -rw-r--r-- ... 947448 ... libcurl.a\n   lrwxrwxrwx ...     19 ... libcurl-gnutls.so.3 -> libcurl-gnutls.so.4\n   lrwxrwxrwx ...     23 ... libcurl-gnutls.so.4 -> libcurl-gnutls.so.4.4.0\n   -rw-r--r-- ... 444800 ... libcurl-gnutls.so.4.4.0\n   -rw-r--r-- ...    953 ... libcurl.la\n➋ lrwxrwxrwx ...     16 ... libcurl.so -> libcurl.so.4.4.0\n   lrwxrwxrwx ...     12 ... libcurl.so.3 -> libcurl.so.4\n➌ lrwxrwxrwx ...     16 ... libcurl.so.4 -> libcurl.so.4.4.0\n➍ -rw-r--r-- ... 452992 ... libcurl.so.4.4.0\n   $\n```", "```\nlibname.X\nlibname.sl -> libname.X\n```", "```\nlibname_la_LDFLAGS = -version-info 0:0:0\n```", "```\nlibname_la_LDFLAGS = -release 2.9.0 -version-info 0:0:0\n```", "```\n--snip--\nstatic void * print_it(void * data)\n{\n    const char ** strings = data;\n    printf(\"%s from %s!\\n\", strings[0], strings[1]);\n    return 0;\n}\n\nint print_routine(const char * salutation, const char * name)\n{\n    const char * strings[] = {salutation, name};\n#if ASYNC_EXEC\n    pthread_t tid;\n    pthread_create(&tid, 0, print_it, strings);\n    pthread_join(tid, 0);\n#else\n    print_it(strings);\n#endif\n    return 0;\n}\n```", "```\nint print_routine(const char * salutation, const char * name);\n```", "```\n--snip--\nint jupiter_print(const char * salutation, const char * name)\n{\n    print_routine(salutation, name);\n}\n```", "```\n--snip--\nint jupiter_print(const char * salutation, const char * name);\n--snip--\n```", "```\n--snip--\n#define DEFAULT_SALUTATION \"Hello\"\n\nint main(int argc, char * argv[])\n{\n    const char * salutation = DEFAULT_SALUTATION;\n    return jupiter_print(salutation, argv[0]);\n}\n```", "```\n   #ifndef MODULE_H_INCLUDED\n   #define MODULE_H_INCLUDED\n\n➊ #define GET_SALUTATION_SYM \"get_salutation\"\n\n➋ typedef const char * get_salutation_t(void);\n➌ const char * get_salutation(void);\n\n   #endif /* MODULE_H_INCLUDED */\n```", "```\n   --snip--\n   # Checks for header files.\n➊ AC_CHECK_HEADERS([stdlib.h dlfcn.h])\n   --snip--\n   # Checks for libraries.\n\n   # Checks for typedefs, structures, and compiler characteristics.\n\n   # Checks for library functions.\n➋ AC_SEARCH_LIBS([dlopen], [dl])\n   --snip--\n   cat << EOF\n   -------------------------------------------------\n\n   ${PACKAGE_NAME} Version ${PACKAGE_VERSION}\n\n   Prefix: '${prefix}'.\n   Compiler: '${CC} ${CFLAGS} ${CPPFLAGS}'\n➌ Libraries: '${LIBS}'\n   --snip--\n```", "```\n$ mkdir -p src/modules/hithere\n$\n```", "```\n➊ SUBDIRS = modules/hithere\n\n   bin_PROGRAMS = jupiter\n➋ jupiter_SOURCES = main.c module.h\n   --snip--\n   greptest.sh:\n➌ echo './jupiter | grep \".* from .*jupiter!\"' > greptest.sh\n   --snip--\n```", "```\n   pkglib_LTLIBRARIES = hithere.la\n   hithere_la_SOURCES = hithere.c\n➊ hithere_la_LDFLAGS = -module -avoid-version\n```", "```\n#include \"../../module.h\"\n\nconst char * get_salutation(void)\n{\n    return \"Hi there\";\n}\n```", "```\n--snip--\nAC_CONFIG_FILES([Makefile\n                 common/Makefile\n                 include/Makefile\n                 libjup/Makefile\n                 src/Makefile\n                src/modules/hithere/Makefile])\n--snip--\n```", "```\n   #include \"config.h\"\n\n   #include \"libjupiter.h\"\n➊ #include \"module.h\"\n\n➋ #if HAVE_DLFCN_H\n   # include <dlfcn.h>\n   #endif\n\n   #define DEFAULT_SALUTATION \"Hello\"\n\n   int main(int argc, char * argv[])\n   {\n       int rv;\n       const char * salutation = DEFAULT_SALUTATION;\n➌ #if HAVE_DLFCN_H\n       void * module;\n       get_salutation_t * get_salutation_fp = 0;\n    ➍ module = dlopen(\"./module.so\", RTLD_NOW);\n       if (module != 0)\n       {\n           get_salutation_fp = (get_salutation_t *)dlsym(\n                     module, GET_SALUTATION_SYM);\n           if (get_salutation_fp != 0)\n               salutation = get_salutation_fp();\n       }\n   #endif\n\n       rv = jupiter_print(salutation, argv[0]);\n\n➎ #if HAVE_DLFCN_H\n       if (module != 0)\n           dlclose(module);\n   #endif\n\n       return rv;\n   }\n```", "```\n$ autoreconf -i\n--snip--\n$ ./configure && make\n--snip--\n$ cd src\n$ ./jupiter\nHello from ...jupiter!\n$\n$ ln -s modules/hithere/.libs/hithere.so module.so\n$ ./jupiter\nHi there from ...jupiter!\n$\n```", "```\n--snip--\n# Checks for header files.\nAC_CHECK_HEADERS([stdlib.h ltdl.h])\n--snip--\n# Checks for libraries.\n\n# Checks for typedefs, structures, and compiler characteristics.\n\n# Checks for library functions.\nAC_SEARCH_LIBS([lt_dlopen], [ltdl])\n--snip--\n```", "```\n#include \"config.h\"\n\n#include \"libjupiter.h\"\n#include \"module.h\"\n\n#if HAVE_LTDL_H\n# include <ltdl.h>\n#endif\n\n#define DEFAULT_SALUTATION \"Hello\"\n\nint main(int argc, char * argv[])\n{\n    int rv;\n    const char * salutation = DEFAULT_SALUTATION;\n\n#if HAVE_LTDL_H\n    int ltdl;\n  ➊ lt_dlhandle module;\n     get_salutation_t * get_salutation_fp = 0;\n\n  ➋ LTDL_SET_PRELOADED_SYMBOLS();\n\n  ➌ ltdl = lt_dlinit();\n     if (ltdl == 0)\n     {\n      ➍ module = lt_dlopen(\"modules/hithere/hithere.la\");\n         if (module != 0)\n         {\n             get_salutation_fp = (get_salutation_t *)lt_dlsym(\n                       module, GET_SALUTATION_SYM);\n             if (get_salutation_fp != 0)\n                 salutation = get_salutation_fp();\n         }\n      }\n#endif\n\n    rv = jupiter_print(salutation, argv[0]);\n\n#if HAVE_LTDL_H\n    if (ltdl == 0)\n    {\n if (module != 0)\n            lt_dlclose(module);\n        lt_dlexit();\n    }\n#endif\n\n    return rv;\n}\n```", "```\n--snip--\njupiter_LDADD = ../libjup/libjupiter.la -dlopen modules/hithere/hithere.la\n--snip--\n```", "```\n➊ #define get_salutation hithere_LTX_get_salutation\n➋ #include \"../../module.h\"\n\n   const char * get_salutation(void)\n   {\n      return \"Hi there\";\n   }\n```", "```\n   $ make clean\n   --snip--\n   $ autoreconf\n   $ ./configure --disable-shared && make\n   --snip--\n   $ cd src\n   $ ls -1p modules/hithere/.libs\n➊ hithere.a\n   hithere.la\n   hithere.lai\n   $\n   $ ./jupiter\n➋ Hi there, from ./jupiter!\n   $\n   $ cd ..\n   $ make clean\n   --snip--\n   $ ./configure && make\n   $ cd src\n   $ ls -1p modules/hithere/.libs\n   hithere.a\n   hithere.la\n   hithere.lai\n   hithere.o\n   hithere.so\n   $\n   $ ./jupiter\n➌ Hi there, from ...jupiter!\n   $\n```"]