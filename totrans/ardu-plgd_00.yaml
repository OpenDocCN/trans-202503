- en: '**INTRODUCTION**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![image](../images/common-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Welcome to *Arduino Playground*! This book provides a broad spectrum of projects
    demonstrating the flexibility and versatility of the Arduino family of microcontroller
    boards. Each project contains everything you need to know to build it, including
    a schematic, a component list, and any *sketches* (that’s what Arduino folks call
    programs). I also endeavored to provide all information about the mechanical parts
    of each project, including a list of supplies, so you can complete any enclosures,
    moving parts, skeletons, and so on. Any special tools required are also described
    in the projects.
  prefs: []
  type: TYPE_NORMAL
- en: I have tried to make the projects more than just recipes for assembling the
    parts by including some background explanations of how I came up with the projects
    and how the technology works. I hope that the projects can be useful end products
    by themselves and, with some ingenuity, perhaps even serve as a launching pad
    for you to create projects of your own.
  prefs: []
  type: TYPE_NORMAL
- en: '**Who This Book Is For**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Building the projects in this book does not require an engineering degree,
    advanced mechanical aptitude, or programming expertise. That said, there are some
    basic requirements you should have to get the most out of the book:'
  prefs: []
  type: TYPE_NORMAL
- en: • An understanding of basic electronics, including the ability to read a schematic
    diagram and recognize elements such as resistors and capacitors
  prefs: []
  type: TYPE_NORMAL
- en: • An understanding of how to use computers and write software (Von Neumann architecture
    if you want to be snobby); knowledge of Arduino or other microcontroller architectures
    helps
  prefs: []
  type: TYPE_NORMAL
- en: • Experience soldering connections and wires
  prefs: []
  type: TYPE_NORMAL
- en: • Limited mechanical skills, such as how to operate an electric drill, various
    saws, and so on
  prefs: []
  type: TYPE_NORMAL
- en: My hope is that both beginner and experienced Arduino users will learn something
    new about electronics in these projects.
  prefs: []
  type: TYPE_NORMAL
- en: '**How This Book Is Organized**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Each chapter focuses on one project and describes how to prototype it on a breadboard
    for testing, briefly discusses how the sketch works, and finally shows how to
    construct the final product.
  prefs: []
  type: TYPE_NORMAL
- en: '• **[Chapter 0](ch00.xhtml#ch00): Setting Up and Useful Skills** provides you
    with some basic knowledge that you’ll use throughout the book, including how to
    prepare Arduino boards, how to program them, and how to use PCB software and make
    your own PCBs.'
  prefs: []
  type: TYPE_NORMAL
- en: '• In **[Chapter 1](ch01.xhtml#ch01): The Reaction-Time Machine**, you take
    advantage of the real-time capabilities of the Arduino microcontroller by measuring
    a user’s reaction to a stimulus. This project is quick and easy to build, and
    you’ll learn some of the fundamentals of using a controller for timing—with lots
    of opportunity to experiment with the sketch. The finished unit will provide hours
    of fun and entertainment for you and your friends and family.'
  prefs: []
  type: TYPE_NORMAL
- en: '• **[Chapter 2](ch02.xhtml#ch02): An Automated Agitator for PCB Etching** shows
    how you can use a change in current drain to make things happen in a circuit.
    In this case, the change reverses the direction of a motor so that it can be used
    to agitate printed-circuit boards in an etchant solution. Etching PCBs is but
    one application for the technology, as explained in the chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '• The project in **[Chapter 3](ch03.xhtml#ch03): The Regulated Power Supply**
    may well turn out to be one of the most frequently used products on your workbench.
    It’s a regulated variable-voltage power supply with a digital readout for voltage
    and current. The design is simple yet effective, and it’s fun to build.'
  prefs: []
  type: TYPE_NORMAL
- en: '• The project in **[Chapter 4](ch04.xhtml#ch04): A Watch Winder** is one of
    my favorites. It serves the utilitarian function of keeping automatic (self-winding)
    watches wound when not being worn, but the cool design also makes it a great kinetic
    sculpture. The Watch Winder uses an Arduino Nano to handle all the timing functions
    for keeping the watches wound and includes a multi-colored LED light display.
    Some of the assembly techniques may challenge a beginner, but the effort is more
    than worth it.'
  prefs: []
  type: TYPE_NORMAL
- en: '• The project in **[Chapter 5](ch05.xhtml#ch05): The Garage Sentry Parking
    Assistant** is a high-tech device designed to help you park your vehicle in your
    garage. It’s the electronic version of a tennis-ball-on-a-string contraption that’s
    designed to measure the distance you want to pull into your garage. It introduces
    ultrasonic transmitters and receivers and illustrates how they can be integrated
    with the Arduino controller. While this is a very practical application of the
    technology, other applications (such as liquid measurement) are limited only by
    your imagination.'
  prefs: []
  type: TYPE_NORMAL
- en: '• In **[Chapter 6](ch06.xhtml#ch06): The Battery Saver**, you make a device
    to help keep lead-acid storage batteries from being ruined by accidental discharge.
    The design is basically a high-current switch in series with a battery that disconnects
    when the battery reaches a dangerous level. While most automobiles today incorporate
    such circuitry, I have found this project particularly useful on boats and utility
    vehicles (tractors, mowers, and so on), and it can save you from having to replace
    these expensive batteries needlessly.'
  prefs: []
  type: TYPE_NORMAL
- en: '• In **[Chapter 7](ch07.xhtml#ch07): A Custom pH Meter**, you build a precision
    instrument for measuring pH in a variety of liquids. While the Custom pH Meter
    uses a professional probe, the electronics and readout are based on the Arduino
    processor. If you’re into home brewing, winemaking, hydroponics, or aquariums,
    or if you’re just managing the chemistry in your pool, the Custom pH Meter will
    be a welcome tool.'
  prefs: []
  type: TYPE_NORMAL
- en: '• The project in **[Chapter 8](ch08.xhtml#ch08): Two Ballistic Chronographs**
    is designed to measure the muzzle velocity of various guns from Airsoft pistols
    and rifles to BB guns and pellet guns. While not intended for conventional firearms,
    it boasts capability of measuring velocities over 2,500 feet per second. It also
    introduces some new technology to the stage, including some stand-alone logic,
    a counter, and a DAC. Two versions of the chronograph are described; the smaller
    one, Chronograph Lite, measures projectiles with velocities up to about 700 feet
    per second.'
  prefs: []
  type: TYPE_NORMAL
- en: '• In **[Chapter 9](ch09.xhtml#ch09): The Square-Wave Generator**, you build
    a low cost instrument for generating electronic waveforms. The genesis of the
    project was to provide a simulator for the Ballistic Chronograph in [Chapter 8](ch08.xhtml#ch08),
    but it worked so well that I made a separate project of it. While it falls short
    of the resolution and flexibility of regular laboratory instruments, you’ll find
    it useful in designing and testing various products—and at a fraction of the price.'
  prefs: []
  type: TYPE_NORMAL
- en: '• In **[Chapter 10](ch10.xhtml#ch10): The Chromatic Thermometer**, you create
    a handy gadget that tells the temperature using a sequence of colored LEDs. While
    the initial design is simple, the project led to variations that are more complex.
    You can add a digital readout, a high-accuracy sensor, and a variety of mechanical
    variants for everything from monitoring a fish tank to a wall decoration.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This book does not cover the basic engineering or programming concepts behind
    every project in depth, as it assumes you have enough background knowledge to
    understand those concepts based on a brief explanation. But for the curious reader,
    the text does provide references where extra information can be found about the
    design and technology. It also gives background into the history of the project:
    why I built the project (and why you might want to build it). In all cases, there
    has been an effort to provide a learning experience at a level the user can appreciate
    and understand.'
  prefs: []
  type: TYPE_NORMAL
- en: Where possible, the projects also suggest alternative approaches that advanced
    readers can try. To demonstrate why I selected a particular approach, I illustrate
    how some alternative ways of doing things solve certain problems and cause others.
    There’s a lot of room to personalize, and perhaps even improve on, each project,
    whether it be packaging, construction technique, or the sketch itself. For example,
    the Watch Winder can be a utilitarian device or an upscale kinetic sculpture.
  prefs: []
  type: TYPE_NORMAL
- en: '**WHAT IS MECHATRONICS?**'
  prefs: []
  type: TYPE_NORMAL
- en: During the course of writing this book, I ran across the term *mechatronics*
    several times. Being kind of a traditionalist (or just an old fuddy-duddy), I
    ignored the first several references. However, I eventually took the time to look
    up the term, and it sure sounds a lot like what we’re doing in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Put simply, mechatronics is the process of designing with electronics and mechanical
    engineering. Tetsuro Mori, the senior engineer of the Japanese company Yaskawa
    in 1969, coined the term to describe the process of building industrial robots,
    which requires electrical, mechanical, and computer engineering. A mechatronics
    engineer unites the principles of mechanics, electronics, and computing to generate
    a simpler, more economical, and more reliable system.
  prefs: []
  type: TYPE_NORMAL
- en: '**About the Parts Lists**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the design phase of this book, the selection of parts for projects was often
    determined by what I might have had lying around the shop. For example, the bearings
    in the Watch Winder from [Chapter 4](ch04.xhtml#ch04) were originally bearings
    I had in my junk bin, but I eventually replaced them with the ones mentioned in
    the parts list. I have made every effort to make the projects with the tools and
    materials as described, but I encourage you to use what you have handy.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Almost everyone I know who has programmed an Arduino started with the simple
    “blink” sketch. As a result, many see Arduino as inextricably entwined with LEDs
    turning on and off. Throughout the book, I attempt to reinforce this association
    by including LEDs in as many projects as possible. While blinking an LED doesn’t
    even scratch the surface of the Arduino’s capabilities, LEDs make the projects
    more fun and visually interactive*.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tools and Supplies**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Before you begin working through this book, review the following lists of tools
    and supplies, and note any items you don’t have. Not all of these are required
    for every project, so when you want to build a project, read the required tools
    and supplies lists for that particular chapter to see if you are missing anything
    essential. You can purchase most of these items at your local hardware store,
    but I will indicate where buying online might be a better option.
  prefs: []
  type: TYPE_NORMAL
- en: '***Drilling, Cutting, and Assembling***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Screwdrivers** You’ll want both Philips and slotted, in multiple sizes.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dremel tool (or equivalent)** A small drill or rotary tool can be very useful
    for a variety of tasks, from drilling and cutting to etching and polishing. An
    inexpensive bench attachment turns the Dremel tool into a small drill press, which
    is really handy, especially for drilling PCBs.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Electric drill** Battery operated is preferable. If possible, I suggest a
    chuck with 3/8-inch or 1/2-inch capacity—the bigger the better.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Drill bit set** I recommend purchasing a numbered drill set (that is, with
    bits labeled #1 through #60) in addition to a fractional drill set.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Pliers** I find that a pair of vise-grip pliers, about 6 to 8 inches long,
    fills many needs for clamping, holding things in place, and tightening. I also
    recommend getting a good pair of needle-nose pliers.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Saws** A simple hacksaw is handy for a variety of tasks. For cutting plastic,
    there are many options: a keyhole saw works well, or if you don’t mind spending
    some more money, a small variable-speed, hand-held jigsaw (or saber saw) is handy
    for making a variety of cuts. I use my jigsaw almost exclusively with hacksaw
    blades. (Practice sawing on some scrap wood if you’ve never used a jigsaw before.
    Once you understand how to use it, a jigsaw can be one of the handiest tools in
    the shop.)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sharp knife and scissors**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Screws and nuts** I suggest trying to get a small assortment of both English
    and metric screws and nuts. There are many such assortments on eBay, if your local
    hardware store doesn’t have a good selection.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tap and die set** A set isn’t required for most projects, as individual taps
    and dies are available, but a set is cheap and handy to have around.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tapered reamer** A tapered reamer is useful in many of the book’s projects,
    and it’s a tool I heartily recommend having. I use a set of two inexpensive reamers
    that I purchased on Amazon, and they work very well on plastic, aluminum, and
    mild steel. I suggest getting reamers that can create holes up to 7/8 inches in
    diameter.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tape** I suggest keeping masking tape, double-sided foam tape, and rugged
    outdoor double-sided tape (3M brand works well) on hand.'
  prefs: []
  type: TYPE_NORMAL
- en: '***Prototyping, Soldering, and Testing***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Alligator clips or clip-lead set** There are many alligator clips available,
    and they are very handy when putting together breadboards. Sets are available
    from multiple sources, including RadioShack and Amazon.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Breadboard and jumper wires** These are available from multiple sources,
    including Pololu and Amazon.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Digital multimeter** A broad spectrum of multimeter units is available. You
    can pay anywhere from under $5 to hundreds of dollars, but low-priced portable
    units work fine. You will find a multimeter a welcome addition to your household
    tool collection.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Resistor assortment** I suggest checking eBay or Amazon, where you can buy
    resistors in bulk easily. Some assortments might include 10 units each of 20 or
    30 values, while others contain 100 or more resistors per value. These are very
    economically priced.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Soldering iron and solder** Soldering irons are readily available at hardware
    stores, often for less than $10\. Jameco even has an online soldering tutorial
    (*[http://www.jameco.com/Jameco/workshop/learning-center/soldering-basics.html](http://www.jameco.com/Jameco/workshop/learning-center/soldering-basics.html)*)
    that might be worth reading if you’re a beginner.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Solder paste** This is needed only if you have trouble soldering surface-mount
    components. While these projects use only a small handful of surface-mount components,
    you may use more in the future as manufacturers make fewer through-hole versions
    of newer integrated circuits. I use a lead-free solder paste called Chip Quik.
    Don’t despair, though: you can solder surface-mount components with regular rosin-core
    solder and a soldering iron as described in “[Using SOICs](ch00.xhtml#ch00lev1sec7)”
    on [page 20](ch00.xhtml#page_20).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Solder wick** While none of us would ever be careless enough to make a solder
    bridge across connections, sometimes a gremlin sneaks in and does it anyway. For
    those occasions, solder wick (a copper braid with a little rosin on it to soaks
    up solder) lets you remove solder cleanly.'
  prefs: []
  type: TYPE_NORMAL
- en: If you like building complete Arduino projects, consider filling out your tool
    collection with any missing items. Everything described here will surely be useful
    at some point.
  prefs: []
  type: TYPE_NORMAL
- en: '***Online Retailers***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If you can’t find an electronic component or tool at your local hardware store,
    check one of these online retailers:'
  prefs: []
  type: TYPE_NORMAL
- en: • Adafruit (*[https://www.adafruit.com/](https://www.adafruit.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Amazon (*[http://www.amazon.com/](http://www.amazon.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Bitsbox (good in the UK; *[http://bitsbox.co.uk/](http://bitsbox.co.uk/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Digi-Key (*[http://www.digikey.com/](http://www.digikey.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • eBay (has almost anything you need for this book at low costs; *[http://www.ebay.com/](http://www.ebay.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Electronic Goldmine (*[http://www.goldmine-elec-products.com/](http://www.goldmine-elec-products.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Farnell (ships globally; *[http://www.farnell.com/](http://www.farnell.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Harbor Freight (*[http://www.harborfreight.com/](http://www.harborfreight.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Jameco (*[http://www.jameco.com/](http://www.jameco.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • MCM Electronics (*[http://www.mcmelectronics.com/](http://www.mcmelectronics.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Mouser (*[http://www.mouser.com/](http://www.mouser.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Newark Electronics (*[http://www.newark.com/](http://www.newark.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Newegg (*[https://www.newegg.com/](https://www.newegg.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • Pololu Robotics and Electronics (*[https://www.pololu.com/](https://www.pololu.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: • SparkFun (*[https://www.sparkfun.com/](https://www.sparkfun.com/)*)
  prefs: []
  type: TYPE_NORMAL
- en: '**About the Online Resources**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Each project has a Downloads section that lists any sketch, PCB, or template
    files provided online. Using those files is optional—you can copy the sketch from
    the book by hand, design your own PCB, and decide where to make holes for components
    yourself if you prefer. But if you want a place to start, download the resource
    files from *[https://www.nostarch.com/arduinoplayground/](http://www.nostarch.com/arduinoplayground/)*.
  prefs: []
  type: TYPE_NORMAL
