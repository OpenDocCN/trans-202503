- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">2</samp> <samp class="SANS_Dogma_OT_Bold_B_11">ACQUIRING
    DATASETS</samp>
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">2</samp> <samp class="SANS_Dogma_OT_Bold_B_11">获取数据集</samp>
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: In early January 2010, 22-year-old Chelsea Manning sat at a Windows computer
    in a temporary Sensitive Compartmented Information Facility (SCIF)—an enclosed
    area or room suitable for working with secret documents—in eastern Baghdad. She
    was downloading half a million secret “significant activity” reports from the
    military network SIPRNet, a Department of Defense computer network used for transmitting
    classified information.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 2010年1月初，22岁的切尔西·曼宁坐在巴格达东部一个临时的敏感信息隔离设施（SCIF）内，使用一台Windows电脑。她正在从军事网络SIPRNet下载50万份秘密的“重要活动”报告，SIPRNet是美国国防部用于传输机密信息的计算机网络。
- en: As an intelligence analyst working for the US Army, Manning needed regular access
    to these databases, so she downloaded them for work purposes. Having a local copy
    would be useful in a war zone where network access can be unreliable. It wasn’t
    until later that month that she decided to leak them to the public, after realizing
    they documented American war crimes in Iraq and Afghanistan. They would soon become
    some of the most significant public datasets of the 21st century. “I believe that
    if the general public, especially the American public, had access to the information
    contained within the [Iraq War Logs and Afghan War Logs], this could spark a domestic
    debate on the role of the military and our foreign policy in general,” she later
    said at her court martial hearing.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名为美国陆军工作的情报分析员，曼宁需要定期访问这些数据库，因此她将它们下载以便工作使用。拥有本地副本在网络访问可能不可靠的战区尤其有用。直到那个月稍晚些时候，她才决定将这些文件泄露给公众，因为她意识到这些文件记录了美国在伊拉克和阿富汗的战争罪行。这些文件很快成为21世纪最重要的公共数据集之一。“我相信，如果普通公众，尤其是美国公众，能够接触到[伊拉克战争日志和阿富汗战争日志]中的信息，这将激发关于军队角色和我们外交政策的一场国内辩论，”她在军事法庭听证会上后来这样说。
- en: At the SCIF computer, Manning compressed the files using a program called WinRAR,
    burned them to a rewritable CD, and left them in the SCIF for easy reference.
    A few weeks later, at the end of her shift on a Friday night, she slipped the
    CD into her cargo pocket and headed to her dorm, where she copied the data to
    her laptop. Eventually, she copied it to the SD card in her digital camera, and
    on January 23 she flew into the Reagan National Airport just outside of Washington,
    DC, with the SD card in hand.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在SCIF的电脑前，曼宁使用名为WinRAR的程序压缩文件，将其刻录到可重写CD上，并将其留在SCIF内以便参考。几周后，在一个星期五的夜班结束时，她将CD放入自己的货裤口袋，前往宿舍，将数据复制到自己的笔记本电脑上。最终，她将其复制到数码相机的SD卡中，并在1月23日带着SD卡飞抵华盛顿特区外的里根国家机场。
- en: 'In 2010, massive leaks like this were unprecedented. Today, they happen all
    the time. Back then, WikiLeaks was the only place for sources to go—traditional
    newsrooms weren’t prepared to handle leaks like this. Now, however, there are
    lots of options: sources can send documents to a transparency collective like
    Distributed Denial of Secrets (DDoSecrets), they can contact journalists directly
    using tools like Signal and OnionShare, or they can get in touch with a newsroom
    by following instructions on its public tips page.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 2010年，像这样的巨大泄密事件是前所未有的。今天，这种事情时有发生。那时，WikiLeaks是唯一可以供消息来源泄露信息的地方——传统新闻机构并未准备好处理这种泄密事件。然而，现在有了很多选择：消息来源可以将文件发送给像“分布式否认机密”（DDoSecrets）这样的透明性组织，也可以通过Signal和OnionShare等工具直接联系记者，或者他们可以通过新闻机构的公开提示页面上的指示与新闻机构取得联系。
- en: In this chapter, you’ll learn best practices for safely acquiring public and
    private datasets. You’ll learn more about the history of WikiLeaks and DDoSecrets,
    then use a technology called BitTorrent to obtain your own copy of the BlueLeaks
    dataset from DDoSecrets. You’ll download the Signal instant messaging app to securely
    communicate with sources and learn about PGP encryption, an alternative method
    of securing messages. You’ll practice sending data anonymously with Tor and OnionShare,
    then read the story of how I communicated with a source using several of these
    tools. Finally, I’ll outline several more ways to securely receive data from sources,
    including techniques appropriate for professional newsrooms rather than individual
    reporters.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你将学习安全获取公共和私人数据集的最佳实践。你将了解更多关于维基解密和DDoSecrets的历史，然后使用名为BitTorrent的技术从DDoSecrets获取你自己的BlueLeaks数据集副本。你将下载Signal即时通讯应用程序来安全地与消息源沟通，并学习PGP加密，这是另一种保护消息的方式。你将练习使用Tor和OnionShare匿名传输数据，接着阅读我如何使用这些工具与消息源沟通的故事。最后，我将概述几种从消息源安全接收数据的其他方法，包括适用于专业新闻机构而非单个记者的技术。
- en: <samp class="SANS_Futura_Std_Bold_B_11">The End of WikiLeaks</samp>
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">维基解密的终结</samp>
- en: After deciding she wanted to leak the War Logs, Manning first called a reporter
    at the *Washington Post*, but she didn’t feel like they took her seriously. She
    tried the *New York Times* but managed only to leave a voicemail, and the paper
    never returned her call. Finally, she settled on WikiLeaks, a leak site founded
    in 2006 by Australian information activist Julian Assange. This turned out to
    be a great choice at the time. In addition to publishing the documents, WikiLeaks
    worked in partnership with newspapers across the world, including the *New York
    Times*, the *Guardian*, and *Der Spiegel*, to break major stories about US imperialism.
    Along with the dataset of 250,000 State Department cables known as Cablegate,
    the two datasets that Manning leaked were a catalyst for the Arab Spring, the
    2011 pro-democracy movement that led to the toppling of governments in the Middle
    East and North Africa, including the authoritarian regimes in Egypt and Tunisia.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在决定泄露《战争日志》之后，曼宁首先联系了*华盛顿邮报*的一名记者，但她感觉他们没有认真对待她。她又试图联系*纽约时报*，但只留下了语音邮件，报社从未回电。最终，她选择了维基解密，一个由澳大利亚信息活动家朱利安·阿桑奇于2006年创办的泄密网站。事实证明，当时这个选择是非常正确的。除了发布这些文件外，维基解密还与世界各地的报纸合作，包括*纽约时报*、*卫报*和*明镜周刊*，一起披露关于美国帝国主义的重大新闻。与25万个被称为Cablegate的美国国务院电报数据集一起，曼宁泄露的两个数据集成为了阿拉伯之春的催化剂，这是2011年推动中东和北非地区推翻政府的亲民主运动，其中包括埃及和突尼斯的专制政权。
- en: Back then, WikiLeaks was revolutionary, initiating the document-based transparency
    movement by making massive datasets accessible to the public. The documents that
    Manning leaked were its first major releases with international consequences,
    making WikiLeaks a proof-of-concept for sites that allow anyone to anonymously
    submit leaked documents. Today, nearly every major newsroom in the US and many
    throughout the world have this capability using open source software like SecureDrop,
    though news organizations rarely publish raw datasets like WikiLeaks did.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当时，维基解密具有革命性，通过使大量数据集对公众开放，启动了基于文档的透明度运动。曼宁泄露的文件是其首次发布的具有国际影响力的重要文件，这使得维基解密成为一个概念验证，证明了允许任何人匿名提交泄露文件的网站是可行的。如今，几乎每个美国的大型新闻机构以及世界上许多新闻机构都可以使用像SecureDrop这样的开源软件具备这种能力，尽管新闻机构很少像维基解密那样发布原始数据集。
- en: Manning sent these datasets to WikiLeaks several years before the transparency
    group and its editor, Assange, shifted from a journalism outfit based on the premise
    that “information wants to be free” to an ethically dubious political organization
    working to get Donald Trump elected president in 2016\. During that US election,
    WikiLeaks and Assange went off the rails. The group published a dataset full of
    hacked Democratic National Committee (DNC) and Clinton campaign email messages
    just in time to distract the news cycle from the infamous *Access Hollywood* audio
    clip of Trump bragging about committing sexual assault. Assange lied to the public
    about his source for this data (it was Russian military intelligence), boosting
    the conspiracy theory that Seth Rich, an unrelated Democratic Party staffer who
    was murdered in Washington, DC, was his real source. WikiLeaks also promoted the
    Pizzagate conspiracy theory claiming that high-ranking Democratic Party officials
    were involved in a child sex-trafficking ring run out of a pizza shop in DC.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'Today, WikiLeaks is little more than an X (formerly Twitter) account. Its document
    submission systems have stopped working, and its website is no longer maintained.
    The loss of WikiLeaks to the online fever swamp was tragic for investigative journalism
    around the world, but a new and better organization has grown to take its place:
    DDoSecrets.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Distributed Denial of Secrets</samp>
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Distributed Denial of Secrets, or DDoSecrets, is a nonprofit transparency collective
    in the US founded by Emma Best in 2018\. It’s similar to WikiLeaks, but without
    the toxic ego of Julian Assange and with considerably more transparency around
    the group’s decision-making, and it’s largely run by queer people.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: DDoSecrets hosts data previously published by WikiLeaks, like the DNC Emails
    dataset, as well as those WikiLeaks declined to publish, like the Dark Side of
    the Kremlin dataset, which contains over 100GB of documents and emails from Russian
    oligarchs and politicians. Notably, it also hosts a great deal of data leaked
    in the months following Russia’s invasion of Ukraine in February 2022\. At that
    time, hackers—mostly claiming to be hacktivists, many identifying with the Anonymous
    hacktivist movement—bombarded Russia with cyberattacks. They hacked dozens of
    Russian organizations, including government agencies, oil and gas companies, and
    finance institutions, and submitted tens of terabytes of data to DDoSecrets to
    distribute to the public and to journalists.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '> <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '*I work closely with DDoSecrets as an adviser and sometimes volunteer.*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: 'Anyone can download the following datasets from DDoSecrets:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '**BlueLeaks**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: BlueLeaks is a collection of 270GB of documents from hundreds of US law enforcement
    and police fusion center websites, released during the height of 2020’s Black
    Lives Matter uprising. You’ll know this dataset well by the end of this book,
    and you’ll download a copy of it in this chapter’s first exercise.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '**Parler**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: The Parler dataset contains 32TB (yes, terabytes) of video scraped from the
    right-wing social network Parler, including many from the January 6, 2021, anti-democracy
    riot at the US Capitol. Many of these videos were used as evidence in Donald Trump’s
    second impeachment inquiry. You’ll learn more about this dataset in [Chapter 11](chapter11.xhtml).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '**Epik Fail**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: The Epik Fail dataset includes 10 years of domain name registrar data from Epik,
    a company that’s notorious for hosting domain names and websites for neo-Nazis
    and other extremist groups. You’ll explore this dataset in [Chapter 12](chapter12.xhtml).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: In addition to public datasets like these, DDoSecrets hosts many private datasets
    available only to journalists and researchers who request access. Datasets containing
    large quantities of PII, like names, email addresses, birth dates, or passwords,
    are often kept private. For example, the Oath Keepers dataset includes gigabytes
    of data from the American far-right paramilitary organization, including spreadsheets
    full of the group’s member and donor records. That part of the release is limited
    only to journalists and researchers who request access, but another part, 5GB
    of email and chat logs, is available to the public. You’ll download part of this
    release in [Chapter 4](chapter4.xhtml) and work with it in [Chapter 6](chapter6.xhtml).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: DDoSecrets publishes many more datasets than these, and it continues to release
    new ones all the time. For an inventory of all of those available, as well as
    instructions on how to request access to the limited-distribution datasets, visit
    [*https://<wbr>ddosecrets<wbr>.com*](https://ddosecrets.com).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*You won’t be able to share that DDoSecrets link on X. Shortly after DDoSecrets
    released BlueLeaks, Twitter permanently suspended the @DDoSecrets account and
    censored all links to* [https://ddosecrets.com](https://ddosecrets.com)*,* *citing
    its selectively enforced policy against posting hacked data. Twitter, now X, prevents
    tweets or even DMs including DDoSecrets links from going through, though WikiLeaks
    has faced no such censorship.*'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: DDoSecrets distributes public datasets using a protocol called BitTorrent. To
    download datasets, you’ll need to learn how to use it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Downloading Datasets with</samp> <samp
    class="SANS_Futura_Std_Bold_B_11">BitTorrent</samp>
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: At the turn of the 21st century, long before services like Netflix and Spotify
    made online entertainment cheap and accessible to the public, peer-to-peer file-sharing
    services like Napster, LimeWire, and Kazaa enjoyed immense popularity because
    they made downloading pirated media and software so easy. The copyright industry
    quickly shut down these centralized services with lawsuits, but decentralized
    technologies rose from their ashes. The most popular of these is BitTorrent. In
    addition to piracy, BitTorrent is also frequently used to legally distribute large
    files like Linux operating systems, as well as massive datasets.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: BitTorrent works well for sharing controversial data like BlueLeaks, because
    no one—not the US government, police departments, tech companies, internet service
    providers, or anyone else—can easily censor it. Traditionally, one computer on
    the internet hosts data (on a website, for example), and all other computers connect
    to that host to download it. If someone wants to censor that data, they only have
    to bring down that single host. With BitTorrent, however, data is hosted in *swarms*,
    a collection of computers currently sharing a specific set of files. If you want
    to download some data, you join the swarm by opening a link to the data, called
    a *torrent*, in your BitTorrent software and become a *peer*. Your BitTorrent
    software downloads pieces of the data that you need from other peers in the swarm,
    and in return, you upload pieces of data you already have to peers who need it.
    Once you have all of the data you need, you can remain in the swarm and continue
    sharing with peers as long as you keep your BitTorrent software open, making you
    a *seed*. If you have the internet bandwidth and are allowed to share the files,
    it’s generally good practice to keep seeding, especially if there are few other
    seeds.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Every BitTorrent swarm needs to have at least one seed in order to enable the
    peers to finish downloading all the data. The more popular the data, the bigger
    the swarm, the faster the downloads—and the more difficult censorship becomes.
    It’s hard to block access to every peer in a swarm (swarms can grow to have tens
    of thousands of peers), and nothing stops more peers from joining. There’s no
    single entity to sue or pressure financially. Swarms often consist of computers
    distributed around the world, so national laws also can’t achieve the censorship
    they might otherwise aim for.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: There is nothing illegal about using BitTorrent to share files that you’re legally
    allowed to share. Blizzard Entertainment has even adopted the technology itself
    to distribute large video games like *World of Warcraft* to its users, and the
    Internet Archive, the nonprofit digital library at [*https://<wbr>archive<wbr>.org*](https://archive.org),
    uses BitTorrent to distribute large files like radio and TV shows. The structure
    of BitTorrent hosting makes for faster downloads, and bandwidth costs are shared
    throughout the swarm.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'Most publicly available DDoSecrets datasets are distributed through BitTorrent.
    In order to download something with BitTorrent, you’ll need the following:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数公开可用的DDoSecrets数据集是通过BitTorrent分发的。为了通过BitTorrent下载某些内容，你需要以下条件：
- en: A program installed in your computer called a *BitTorrent client*. You can use
    whatever client you prefer, including a command line version, but I like one called
    Transmission. It’s free and open source and works great in Windows, macOS, and
    Linux.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序已安装在你的计算机中，称为*BitTorrent客户端*。你可以使用任何你喜欢的客户端，包括命令行版本，但我喜欢一个叫Transmission的客户端。它是免费的开源软件，在Windows、macOS和Linux中表现得都很出色。
- en: Either a *.torrent* file that you can open in your BitTorrent client or a *magnet
    link*, a type of URL that starts with *magnet:* and tells your BitTorrent client
    where to find the full *.torrent* file.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个*.torrent*文件，你可以在你的BitTorrent客户端中打开它，或者一个*磁力链接*，这是一种以*magnet:*开头的URL，告诉你的BitTorrent客户端去哪里找到完整的*.torrent*文件。
- en: Roughly 1TB of storage space, at least if you want to download the datasets
    used in this book. I recommend downloading to the encrypted *datasets* USB disk
    that you set up in Exercise 1-2.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大约1TB的存储空间，至少如果你想下载本书中使用的数据集。我建议你将数据下载到你在练习1-2中设置的加密*数据集*USB磁盘上。
- en: In a moment, you’ll use BitTorrent to download a copy of the BlueLeaks dataset,
    but first let’s take a look at where that data originated.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后，你将使用BitTorrent下载BlueLeaks数据集的副本，但首先让我们来看看这些数据的来源。
- en: <samp class="SANS_Futura_Std_Bold_B_11">The Origins of BlueLeaks</samp>
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">BlueLeaks的起源</samp>
- en: The disparate surveillance systems of local, state, and federal law enforcement
    agencies in the United States collected enough intelligence to learn critical
    clues about the September 11, 2001, terrorist attack before it happened. However,
    each agency kept this information to itself, failing to prevent the attack. Afterward,
    the US government decided these agencies needed to improve how they share information
    with each other. Congress directed the newly formed Department of Homeland Security
    (DHS) to create *fusion centers* across the country, collaborations between federal
    agencies like the DHS and FBI with state and local police departments, to share
    intelligence and prevent future terrorist attacks. These fusion centers are the
    source of much of the BlueLeaks data.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 美国地方、州和联邦执法机构的不同监视系统收集了足够的情报，提前发现了2001年9月11日恐怖袭击的关键线索。然而，每个机构将这些信息保留在自己手中，未能阻止此次袭击。事后，美国政府决定这些机构需要改善彼此之间的信息共享。国会指示新成立的国土安全部（DHS）在全国范围内创建*融合中心*，这些中心是联邦机构（如DHS和FBI）与州和地方警察部门之间的合作，旨在共享情报并防止未来的恐怖袭击。这些融合中心是BlueLeaks数据的主要来源之一。
- en: According to a 2012 Senate report, these fusion centers have “not produced useful
    intelligence to support Federal counterterrorism efforts,” and the intelligence
    reports they produced were “oftentimes shoddy, rarely timely, sometimes endangering
    citizens’ civil liberties and Privacy Act protections, occasionally taken from
    already-published public sources, and more often than not unrelated to terrorism.”
    Fusion centers had also been caught infiltrating and spying on anti-war activists,
    and in 2008, the American Civil Liberties Union published a report about fusion
    center abuses, including spying on religious groups in violation of the First
    Amendment.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 根据2012年参议院的一份报告，这些融合中心“没有提供有用的情报来支持联邦反恐工作”，而它们所产生的情报报告“往往不靠谱，时效性差，有时危及公民的公民自由和隐私法保护，偶尔是从已经发布的公共来源中获取的，且大多数情况下与恐怖主义无关。”融合中心还曾被发现渗透并监视反战活动人士，并且在2008年，美国公民自由联盟发布了一份关于融合中心滥用的报告，包括对宗教团体的监视，违反了第一修正案。
- en: In June 2020, a hacktivist self-identifying with the Anonymous movement hacked
    251 law enforcement websites, most of them fusion centers and related organizations.
    The hacked data, known as BlueLeaks, includes thousands of police documents and
    spreadsheets with over 16 million rows of data. The data spans from 2007 to June
    14, 2020, when the Black Lives Matter uprising triggered by the police murder
    of George Floyd was in full swing.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 2020年6月，一名自称为匿名者运动的黑客攻击了251个执法网站，其中大多数是融合中心及相关组织。被黑客攻击的数据被称为BlueLeaks，包含了数千份警察文件和电子表格，共有超过1600万行数据。这些数据的时间跨度从2007年到2020年6月14日，正值乔治·弗洛伊德被警察谋杀引发的黑人生命也重要运动（Black
    Lives Matter）全面爆发之时。
- en: While the hacktivist from Anonymous violated the law when they broke into these
    police websites and stole all this data, in the US it’s legal for you to download
    BlueLeaks, investigate it, and publish your findings.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然来自 Anonymous 的黑客活动者在闯入这些警察网站并窃取所有这些数据时违反了法律，但在美国，下载 BlueLeaks、调查它并发布你的发现是合法的。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 2-1: Download the BlueLeaks
    Dataset</samp>'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 2-1：下载 BlueLeaks 数据集</samp>
- en: In this exercise, you’ll download a local copy of the BlueLeaks dataset onto
    the 1TB USB disk you encrypted in the previous chapter. You’ll be investigating
    the contents of this dataset later in the book.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你将把 BlueLeaks 数据集下载到你在上一章加密的 1TB USB 硬盘上。稍后你将研究该数据集的内容。
- en: Download Transmission ([*https://<wbr>transmissionbt<wbr>.com*](https://transmissionbt.com))
    or any BitTorrent client of your choice and install it on your computer following
    the instructions for your operating system. Load the BlueLeaks page on the DDoSecrets
    website at [*https://<wbr>ddosecrets<wbr>.com<wbr>/wiki<wbr>/BlueLeaks*](https://ddosecrets.com/wiki/BlueLeaks).
    From there, find the magnet link for the BlueLeaks torrent and copy that to your
    clipboard.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 Transmission（[*https://<wbr>transmissionbt<wbr>.com*](https://transmissionbt.com)）或任何你选择的
    BitTorrent 客户端，并根据你的操作系统安装它。加载 DDoSecrets 网站上的 BlueLeaks 页面，地址为 [*https://<wbr>ddosecrets<wbr>.com<wbr>/wiki<wbr>/BlueLeaks*](https://ddosecrets.com/wiki/BlueLeaks)。从那里找到
    BlueLeaks 种子的磁力链接并将其复制到剪贴板。
- en: Next, open Transmission. Click **File**▸**Open Torrent Address**, paste the
    magnet link, and click **Open** to start downloading the data. When you first
    add this torrent to your client, it will ask where you want to save it. Save it
    to your *datasets* USB disk, then sit back and watch BitTorrent do its thing.
    It should connect you to the swarm, start downloading chunks of BlueLeaks from
    other peers (while possibly uploading chunks to other peers as well), and alert
    you when it’s done downloading. When the download completes, you’ll be seeding
    the BlueLeaks torrent and letting others download from you, until you remove the
    torrent from Transmission.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，打开 Transmission。点击 **文件**▸**打开种子地址**，粘贴磁力链接，然后点击 **打开** 开始下载数据。当你第一次将这个种子添加到客户端时，它会询问你想将其保存到哪里。将其保存到你的
    *datasets* USB 硬盘上，然后坐下来，看着 BitTorrent 按照自己的方式工作。它应该会连接到 swarm，开始从其他节点下载 BlueLeaks
    的数据块（同时也可能将数据块上传到其他节点），并在下载完成时提醒你。当下载完成后，你将为 BlueLeaks 种子做种，允许其他人从你这里下载，直到你将种子从
    Transmission 中移除。
- en: The 269GB download might take several hours, or even days if you have a slow
    internet connection. While you’re waiting, read on.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 269GB 的下载可能需要几个小时，甚至几天，如果你的网络连接比较慢的话。在等待的同时，请继续阅读。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Communicating with Encrypted Messaging
    Apps</samp>
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">使用加密消息应用程序进行沟通</samp>
- en: Most ways you communicate online aren’t very secure, even when you send messages
    that are ostensibly private. This is fine if you’re discussing nonsensitive information
    over Slack, SMS messages, or DMs on social media. However, when communicating
    with a confidential source who might face retaliation for talking with you, you
    should always use an encrypted messaging app.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你在线上沟通的大多数方式并不十分安全，即使你发送的是表面上看似私密的消息。如果你在 Slack、短信或社交媒体上的私信中讨论一些非敏感的信息，这倒是没问题。然而，当你与一个可能因为和你交谈而面临报复的机密来源沟通时，你应该始终使用加密的消息应用程序。
- en: Among encrypted messaging apps like WhatsApp and iMessage, Signal stands out
    as the best choice for source communications. Unlike other apps, Signal can’t
    be forced to share most information about its users with law enforcement or leak
    investigators, because it can’t access that user data in the first place. The
    only information the company can retrieve is the date that a user created their
    Signal account and the date that account most recently connected to Signal. Not
    even those who might typically be able to spy on your communications, like the
    messaging app’s employees, cloud hosting provider, or internet monitoring agencies,
    can access your Signal messages. Signal is the primary app I use for sensitive
    work communication, as well as for personal messaging. If I start out chatting
    with people on other platforms—SMS, DMs on social media, or anything else—I tend
    to move the conversation to Signal as soon as possible.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在 WhatsApp 和 iMessage 等加密消息应用中，Signal 因其源通信的最佳选择而脱颖而出。与其他应用不同，Signal 无法被强迫与执法机构或泄漏调查员分享关于其用户的大多数信息，因为它根本无法访问这些用户数据。公司唯一能检索到的信息是用户创建
    Signal 账户的日期，以及该账户最后一次连接到 Signal 的日期。即便是那些通常能够监视你通信的人，如消息应用的员工、云托管提供商或互联网监控机构，也无法访问你的
    Signal 消息。Signal 是我处理敏感工作通信和个人消息的主要应用。如果我一开始在其他平台（如 SMS、社交媒体的私信等）与人聊天，我会尽快将对话转移到
    Signal 上。
- en: 'In more detail, here’s how Signal ensures that it has as little information
    about its users as possible:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 更详细地说，Signal 如何确保尽可能少地收集关于用户的信息：
- en: Since messages and calls are *end-to-end encrypted*, the Signal service can’t
    access their contents. This means if you type a Signal message to me on your phone
    (your end) and hit send, the Signal app will encrypt it for me, or in other words,
    create a totally scrambled version of the message so that it’s impossible for
    anyone but me to unscramble it. The encrypted message then goes to Signal’s servers,
    which forward it to my phone (my end). Once it’s on my phone, the Signal app can
    then decrypt it so I can read the original message. Signal’s servers themselves
    never have access to the original message, only the encrypted version, and they
    never have the ability to decrypt it—only message recipients do.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于消息和通话是*端到端加密*的，Signal 服务无法访问它们的内容。这意味着，如果你在手机（你的端）上给我发送一条 Signal 消息并点击发送，Signal
    应用会为我加密消息，换句话说，会创建一条完全混乱的消息版本，只有我才能解密它。这条加密消息随后会传输到 Signal 的服务器，服务器将其转发到我的手机（我的端）。一旦消息到了我的手机，Signal
    应用就会解密它，这样我就能读取原始消息。Signal 的服务器本身永远无法访问原始消息，只有加密版本，并且它们永远没有能力解密——只有消息接收者才有能力解密。
- en: Signal servers don’t store metadata, the records of when you send messages and
    to whom. They also can’t access your list of contacts or even the name and avatar
    associated with your own phone number.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Signal 服务器不会存储元数据，即你发送消息的时间和对象记录。它们也无法访问你的联系人列表，甚至无法查看与你的电话号码关联的名字和头像。
- en: Signal invented a technology called *sealed sender* that uses cryptography to
    prevent anyone besides you and the recipient of your message from knowing whom
    you’re communicating with. Even if Signal secretly wanted to store your metadata
    (or if someone hacked Signal’s servers to monitor for metadata), they still wouldn’t
    have access to it.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Signal 发明了一种名为*密封发送者*的技术，利用加密技术防止除了你和消息接收者之外的任何人知道你在与谁通信。即使 Signal 秘密地想要存储你的元数据（或者有人黑客入侵了
    Signal 的服务器来监视元数据），它们仍然无法访问这些数据。
- en: Signal doesn’t know which phone numbers are part of which Signal groups, or
    any metadata about the group, such as its name or avatar.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Signal 并不知道哪些电话号码属于哪些 Signal 群组，或有关该群组的任何元数据，例如群组的名字或头像。
- en: Signal’s code is open source, which lets experts inspect it for flaws and backdoors,
    and its encryption protocol has been peer reviewed by cryptography experts.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Signal 的代码是开源的，这让专家们可以检查其中的缺陷和后门，且其加密协议已经得到加密专家的同行评审。
- en: Signal’s security protocols stand in stark contrast to those of other encrypted
    messaging apps. WhatsApp, for example, routinely shares metadata with law enforcement,
    like exactly which phone numbers a surveillance target communicates with and when
    the target has used them. WhatsApp can even share this data in real time, allowing
    it to be used as evidence against whistleblowers like Treasury Department employee
    Natalie Mayflower Sours Edwards, mentioned in [Chapter 1](chapter1.xhtml). When
    she was indicted in 2018 and accused of sharing a secret dataset to BuzzFeed journalist
    Jason Leopold, the evidence against her included real-time metadata from an encrypted
    messaging app. The metadata showed Edwards and Leopold exchanging hundreds of
    messages right as Leopold published multiple articles based on this dataset. Edwards
    and Leopold would have been better off if they had used Signal.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*The web page* [https://<wbr>signal<wbr>.org<wbr>/bigbrother<wbr>/](https://signal.org/bigbrother/)
    *lists the handful of times that Signal has been ordered to share data with law
    enforcement and how they responded. In all cases, Signal either didn’t share any
    data (because, as the organization says, “It’s impossible to turn over data that
    we never had access to in the first place”) or shared only the date that the target
    Signal account was created and the date that it most recently connected to the
    service.*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: For additional security, you can compare Signal *safety numbers* with another
    Signal user, allowing you to verify that the end-to-end encryption with that person
    is secure and isn’t being actively tampered with by the Signal service, your internet
    service provider, or anyone else. From a Signal conversation, you can tap on the
    name of the person you’re talking to at the top, then tap **View Safety Number**.
    This should show you your safety number, both as a number and as a QR code. If
    your safety number is the same as the other person’s, you can be sure that the
    end-to-end encryption is secure. If you’re physically in the same room, you can
    both use the safety number screen to scan each other’s QR codes to confirm. To
    confirm remotely, you can copy the safety number and paste it into a different
    messaging app (not Signal), then send it to the same person. If you confirm that
    your safety number matches, tap **Mark as Verified**. Once you’ve verified your
    safety number with a contact, Signal will make it clear that it’s verified and
    warn you if it ever changes—this could mean the encryption is under attack, but
    more likely it just means the person you’re talking to got a new phone, and you’ll
    have to verify them again.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Once Signal messages are on your device, they’re only as safe as your phone
    itself. Leak investigators searching your phone or your source’s phone will have
    access to all the messages on each device. To protect against device searches,
    always use Signal’s disappearing messages feature, which automatically deletes
    messages a set amount of time after you view them, unless you have a good reason
    to retain messages for a specific conversation. You can choose to delete messages
    anywhere between 30 seconds and 4 weeks after viewing, or set a custom time. I
    typically set disappearing messages to 4 weeks, change it to an hour or so if
    I’m sending secret information like a password, and then change it back to 4 weeks.
    In your Signal privacy settings, I recommend choosing to make all new conversations
    start with disappearing messages. You should also take steps to lock down your
    phone itself, like using a strong random passcode so that no one but you can easily
    unlock your device.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: Signal is not only very secure but also very easy to use. Any two people with
    the app installed can send each other encrypted text messages, share encrypted
    files, and make encrypted voice and video calls or group chats for multiple users.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 2-2: Install and Practice
    Using Signal</samp>'
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this exercise, you’ll install Signal on your phone and computer and practice
    using it.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: 'Start with your phone: open the iPhone App Store or the Android Play Store
    and download the Signal Private Messenger app. After you open the app, you’ll
    need to verify your phone number and set a PIN (save this PIN in your password
    manager). Signal will also request some permissions. In my opinion, it’s perfectly
    safe to grant all of them. Signal uses the Contacts permission to discover which
    of your contacts also use the app, but in such a way that it can’t access your
    contact list itself. (If you grant access to your contacts, the app will notify
    you when one of them creates a Signal account.)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: Next, download Signal on your computer from [*https://<wbr>signal<wbr>.org*](https://signal.org).
    After installing it, you’ll need to scan a QR code from your phone to set up your
    computer as a linked device. Keep in mind that your Signal messages will now be
    copied to both devices, so make sure to keep them both secure.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: To practice sending encrypted messages, get some friends to install Signal too.
    Send them messages, play with disappearing messages, and try out encrypted voice
    calls and video calls. If you have enough friends on Signal, start a Signal group.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Encrypting Messages with PGP</samp>
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In addition to communicating via secure messaging apps, you can also encrypt
    messages with PGP (“pretty good privacy”) encryption. This encryption method was
    first developed in 1991 to encrypt email. It has historically been very important
    in securely communicating with sources and other journalists; I used it extensively
    while reporting on the Snowden Archive. Compared to modern encrypted messaging
    apps like Signal, PGP is complicated and error-prone, so I recommend that you
    avoid it if you can and choose one of the better alternatives instead. However,
    you may find it useful in future investigations if one of your sources uses it.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: 'PGP works like this: a user creates a file on their computer called a *PGP
    key*, which can be split into two parts, a *public key* and a *secret key*. If
    you have a copy of this user’s public key, you can use it to encrypt a message
    so that it can be decrypted only with that secret key. You can then email this
    scrambled message to the PGP user with the secret key. If anyone else gets access
    to that email, the message is scrambled and they can’t read it. When the person
    with the secret key checks it, though, they can decrypt it and read the original
    message.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: People sometimes still send me PGP-encrypted email, and I use PGP to respond
    to them securely. You can find my PGP public key on my personal website, [*https://<wbr>micahflee<wbr>.com*](https://micahflee.com).
    I keep my PGP secret key on a USB device called a YubiKey, which looks kind of
    like a USB stick with a button on it. YubiKeys (and other security keys) are mainly
    used to lock down online accounts. Even if a hacker knows the username and password
    to my Google account, for example, they won’t be able to log in without first
    physically stealing my YubiKey, plugging it into their computer, and pressing
    its button while they try to log in. YubiKeys can also be used to securely store
    PGP secret keys.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Staying Anonymous Online with Tor and
    OnionShare</samp>
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tor and OnionShare are both important tools for working with sources who want
    to send you data anonymously and for conducting investigations where you need
    to remain anonymous yourself.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: Tor is a decentralized network of volunteer servers called *nodes.* It keeps
    you anonymous online by bouncing your internet connection through a series of
    these nodes. Tor Browser is a web browser that sends all web traffic through the
    Tor network. Using Tor Browser works much like using Chrome or Firefox. Let’s
    say you want to anonymously visit the Organized Crime and Corruption Reporting
    Project’s (OCCRP) website at [*https://<wbr>www<wbr>.occrp<wbr>.org*](https://www.occrp.org).
    You simply open Tor Browser (which you can download from [*https://<wbr>www<wbr>.torproject<wbr>.org*](https://www.torproject.org)),
    wait for it to connect to the Tor network, type **occrp.org** in the address bar,
    and hit ENTER, and the page will load.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*I’ve been a volunteer in the Tor community for a long time, attending the
    nonprofit’s physical gatherings around the world, sometimes running Tor nodes
    to contribute to the network, and developing software related to Tor.*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: Tor Browser operates more slowly than a normal browser, because it bounces your
    web traffic between three random Tor nodes around the world before sending it
    to the OCCRP website. No single node knows both your real IP address, which would
    reveal your location, and what website you’re visiting. This means you don’t need
    to trust the nodes to use them. Even if a Tor node is run by criminals or spies,
    they won’t be able to de-anonymize you, at least not without exploiting a vulnerability
    in the Tor network itself. When you close Tor Browser, everything about your browsing
    session gets deleted without leaving a trace on your local computer.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Since Tor allows users to be anonymous online, people routinely use it for hacking
    websites, creating accounts to spam or phish people, or engaging in similar activities.
    For this reason, plenty of websites (including Google) are often extremely suspicious
    of Tor traffic and make Tor users jump through additional hurdles like filling
    out CAPTCHAs or even blocking them altogether. Unfortunately, this is the price
    of online anonymity.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to allowing internet users to remain anonymous, Tor can keep servers
    themselves anonymous. These servers are called Tor *onion services* (sometimes
    referred to as the *dark web*) and have domain names ending in *.onion*. You can
    load onion services only by using Tor. Like Tor Browser, onion services also pick
    three random Tor nodes to route their traffic through. When a user loads an onion
    site in Tor Browser, it actually requires six hops through the Tor network: three
    on the Tor Browser side and three on the onion service side.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*The* .onion *domain name is derived from a cryptographic fingerprint of the
    public key that belongs to the onion service. The Tor protocol ensures that no
    one else can use that same name without knowing that onion service’s secret key.*'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: OnionShare, which I first developed in 2014 and have been adding features to
    ever since, is software that makes it easy for anyone to run onion services, allowing
    them to anonymously and securely send and receive files. It runs a web server
    directly on your computer, makes that server accessible to others as an onion
    service, and shows you a *.onion* address to send to someone else. When you start
    an OnionShare service, you can choose between Share mode, which allows others
    to download specific files from your computer, or Receive mode, which allows others
    to upload files to your computer.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: OnionShare also supports other modes. With Chat mode, for instance, you can
    spin up an anonymous chatroom. It doesn’t have as many features as a Signal group,
    but it keeps you significantly more anonymous. With Website mode, you can quickly
    host a *static website*—a simple website made up of HTML files and resources like
    images and JavaScript, but without any databases or code running on the server—as
    an onion service. If someone loads that address in Tor Browser, their connection
    bounces through the Tor network until it reaches your computer, then loads the
    website hosted by OnionShare.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 2-1](#fig2-1) shows the OnionShare software configured as an anonymous
    dropbox, allowing my URL recipient (such as a source) to anonymously and securely
    upload files directly to my computer.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '![This screenshot shows OnionShare with a Receive tab open. The server is started,
    and the OnionShare address is displayed.](Images/Figure2-1.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 2-1: OnionShare in Receive
    mode</samp>'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: For example, to use OnionShare to let a source send me data, I’d open OnionShare
    on my computer, connect to the Tor network, click **Receive Files**, and then
    click **Start Receive Mode**. The service would give me a URL like *http://<wbr>ic2kaoao3fspynexwxlajxhb3zwcwrjuf57ykfuq7tsrhzlveeamkrid<wbr>.onion<wbr>.*
    I would send that URL to my source and wait. My source would then open Tor Browser;
    load that URL, which would load a website hosted directly on my computer; and
    then upload their files. Because OnionShare uses Tor, I’d have no way of learning
    my source’s IP address, and my source would have no way of learning mine.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 2-2](#fig2-2) shows what that web page would look like for my source.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '![This screenshot shows OnionShare with a Receive tab open. The server is started,
    and the OnionShare address is displayed.](Images/Figure2-2.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 2-2: Using Tor Browser
    to access the OnionShare Receive mode site shown in [Figure 2-1](#fig2-1)</samp>'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: The URL I sent to my source starts with *http://<wbr>* and not *https://<wbr>*.
    HTTPS encrypts traffic between the web browser and the web server; normally, with
    just plain HTTP, anyone monitoring the network can spy on exactly what you’re
    doing, what files your uploading, and what passwords you’re submitting into forms.
    Onion services are an exception to this rule, though, since the connection between
    Tor Browser and an onion service is already end-to-end encrypted. It’s possible
    to add HTTPS to an onion service, but doing so would be redundant and unnecessary.
    Also notice that the domain name part of the URL in [Figure 2-2](#fig2-2) is 56
    random-looking letters and numbers followed by *.onion*. Unlike with normal domain
    names, you don’t get to choose onion service names. They all look like this.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: OnionShare runs a web server directly on your computer. This means third-party
    companies don’t have access to any of the files that are shared in it, but also
    that you have to time things right. If I sent that OnionShare link and then closed
    my laptop so it went to sleep, my source wouldn’t be able to load the website
    until I woke my computer up again. OnionShare works best when you’re working with
    people in real time. However, because it uses the Tor network, it’s really slow*.*
    It might take many hours or even days to transfer gigabytes of data. To transfer
    especially large datasets, consider using a non-Tor method like those described
    later in this chapter.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-95
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*For more information, read the detailed documentation for OnionShare at* [https://docs.onionshare.org](https://docs.onionshare.org)*.*'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: If you’re using OnionShare to send sensitive data, I recommend that you share
    OnionShare URLs only using encrypted messaging apps like Signal and avoid sending
    them over insecure communication channels like email or social media DMs. This
    will prevent anyone who has access to those insecure channels from loading the
    OnionShare URL first or modifying the OnionShare URL to trick your source into
    uploading documents to them, for example.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 2-3: Play with Tor and OnionShare</samp>'
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this exercise, you’ll install Tor Browser and OnionShare on your computer
    and practice using them. Download OnionShare from [*https://<wbr>onionshare<wbr>.org*](https://onionshare.org)
    and Tor Browser from [*https://<wbr>www<wbr>.torproject<wbr>.org*](https://www.torproject.org),
    and follow the instructions for your operating system.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Open Tor Browser, search for anything you like, and visit various websites to
    see how the online experience differs. The default Tor Browser search engine is
    DuckDuckGo, which works great over Tor. However, you’ll find that it’s frustrating
    to use Google, because it constantly forces you to prove you’re not a robot by
    filling out CAPTCHAs. Several websites have both *clearnet* versions (those accessible
    using normal web browsers) and *.onion* versions. If you’re using Tor Browser
    and visit a website that supports both, like [*https://<wbr>freedom<wbr>.press*](https://freedom.press),
    you’ll see the .onion available button in the top right of the address bar. Clicking
    it should bring you to the onion version of that site.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 2-3](#fig2-3) shows the Freedom of the Press Foundation’s website in
    Tor Browser with the .onion available button.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '![This screenshot shows https://freedom.press loaded in Tor Browser, with a
    “.onion available” button showing in the address bar.](Images/Figure2-3.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 2-3: The Freedom of
    the Press Foundation home page</samp>'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, try using OnionShare. Open a Share Files tab, browse for some files on
    your computer, and start the service. Then open Tor Browser, load the OnionShare
    URL, and download those files. Test out small files, large files, and different
    settings. Then try setting up an anonymous dropbox to receive files: open OnionShare,
    open a Receive Files tab, and start the service. In Tor Browser, load the OnionShare
    URL and upload files to your computer. Again, test out small files, large files,
    and different settings.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Communicating with My Tea Party Patriots
    Source</samp>
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This section describes a real-world example of how I gathered data from an
    anonymous source using several tools you’ve seen so far: Twitter DMs, a PGP-encrypted
    message, communicating via Signal, and receiving a dataset through OnionShare.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: 'In the summer of 2021, a journalist sent me a DM on Twitter, passing along
    a note from someone else. The journalist had no idea what the note said, because
    it was PGP-encrypted. The note looked something like this:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'I plugged in my YubiKey and used it to decrypt the PGP message. It simply said:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: interested in data?
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'signal: *[redacted phone number]*'
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: At the time, I didn’t publish my phone number directly on my social media bios
    or on my staff profile page on The Intercept’s website. If I had, this source
    could have just contacted me directly on Signal, which would have been much simpler.
    Nevertheless, using PGP ensured that all communication between us was end-to-end
    encrypted, and even though Twitter DMs were involved, Twitter didn’t have any
    communication metadata between my source and me.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: I opened Signal Desktop on my computer, typed in the phone number I’d found
    in the PGP-encrypted message, and turned on disappearing messages for the conversation.
    I said hello and that I was interested in data. At this point I had a secure communication
    channel with my new source.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: The source told me that they had hacked the Tea Party Patriots, a major US conservative
    organization that bills itself as one of the largest grassroots groups on the
    right. They wanted to send me a dataset that included membership lists, donation
    history, and petition data and asked how they should send it. I sent them an OnionShare
    link to upload the dataset directly to my computer.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: 'I later learned from this dataset that the Tea Party Patriots organization
    isn’t nearly as grassroots as it claims: three ultra-wealthy donors—two of them
    billionaires—provided the bulk of the group’s donations. I also learned that the
    group’s claim of being a network of “over 3 million patriots” was wildly exaggerated:
    only 144,000 members were marked “active” in the hacked database. (Read my analysis
    of this dataset at [*https://<wbr>theintercept<wbr>.com<wbr>/2021<wbr>/08<wbr>/05<wbr>/tea<wbr>-party<wbr>-patriots<wbr>-hacked<wbr>-billionaire<wbr>-donors*<wbr>/](https://theintercept.com/2021/08/05/tea-party-patriots-hacked-billionaire-donors/).)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Other Options for Acquiring Datasets
    from Sources</samp>
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, you’ll learn a couple more ways to communicate with sources
    when the skills you’ve learned so far don’t fit your needs.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Encrypted USB Drives</samp>
  id: totrans-119
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Some of your future sources may want to send you more data than is feasible
    to transfer over Tor. In that case, you can consider sending an encrypted USB
    drive through postal mail.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: First, your source encrypts a USB hard drive or a small USB stick using a strong
    passphrase, via the technologies covered in [Chapter 1](chapter1.xhtml), and then
    copies the dataset to the drive. Then they physically mail the USB drive to you.
    To remain anonymous, they can write your address on the package or envelope but
    leave the return address blank (at least in the US), attach the right amount of
    postage, and drop it in a public mailbox. Using an encrypted messaging app like
    Signal, your source can send you the encryption passphrase. When you receive the
    drive in the mail, you can use the passphrase to unlock the drive and access the
    dataset.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: If the drive gets intercepted in the mail, the data is encrypted and impossible
    to access without the passphrase. However, the postal service will know exactly
    which public mailbox it was mailed from, and if your source isn’t careful, they
    might leave handwriting, fingerprints, DNA, or other clues to their identity in
    the package.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind that sending an encrypted drive costs money, since you need to
    buy a hard drive and pay for postage, and the package might take a long time to
    arrive, so this isn’t the best option for time-sensitive data.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Virtual Private Servers</samp>
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A *virtual private server (VPS)* is a virtual computer on the internet, hosted
    by a company like Amazon Web Services (AWS) or DigitalOcean and normally running
    the Linux operating system, that your source can use to share their data. You’ll
    learn the details of how to set up and work with a VPS in [Chapter 4](chapter4.xhtml),
    but here we’ll discuss when they might be appropriate for a given investigation.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'The VPS option has a few downsides: it works only if your source has the necessary
    technical skills, it costs a small amount of money, and it’s easy for your source
    to make mistakes if they’re trying to remain anonymous. On the upside, a VPS allows
    your source to use extremely reliable tools to transfer large amounts of data.
    These tools also support resuming the transfer if it fails midway, and you can
    even use a VPS anonymously over Tor.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: It costs just a few dollars a month to rent a VPS—if you need to use it for
    only a day or two, it’s even cheaper—and you can specify how big its hard disk
    needs to be depending on how much data your source wants to send you. You can
    then enable your source to upload data to the server remotely using a technology
    called *SSH*, which stands for *Secure Shell*. Your source could encrypt the dataset
    before uploading it if they feel it’s sensitive.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this chapter, you’ve learned ways individual journalists can receive
    data from their sources. In the next section, I’ll introduce additional tools
    and techniques appropriate for established newsrooms.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Whistleblower Submission Systems</samp>
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As mentioned earlier, when Chelsea Manning tried to contact the *Washington
    Post* and the *New York Times* to leak the War Logs to the public, neither paper
    was receptive or even really prepared to accept leaked datasets. Today that’s
    no longer the case. Dozens of major newsrooms now run their own whistleblower
    submission systems, making it simple to securely and anonymously submit leaked
    datasets or other tips.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to your favorite news site and see if you can find its tips page, which
    explains to potential sources and whistleblowers how to contact the newsroom securely.
    Here are a few examples:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: 'The Intercept: [*https://<wbr>theintercept<wbr>.com<wbr>/source<wbr>/*](https://theintercept.com/source/)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Washington Post*: [*https://<wbr>www<wbr>.washingtonpost<wbr>.com<wbr>/anonymous<wbr>-news<wbr>-tips<wbr>/*](https://www.washingtonpost.com/anonymous-news-tips/)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*New York Times*: [*https://<wbr>www<wbr>.nytimes<wbr>.com<wbr>/tips*](https://www.nytimes.com/tips)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ProPublica: [*https://<wbr>www<wbr>.propublica<wbr>.org<wbr>/tips<wbr>/*](https://www.propublica.org/tips/)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'CNN: [*https://<wbr>www<wbr>.cnn<wbr>.com<wbr>/tips<wbr>/*](https://www.cnn.com/tips/)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Guardian*: [*https://<wbr>www<wbr>.theguardian<wbr>.com<wbr>/securedrop*](https://www.theguardian.com/securedrop)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Globe and Mail*: [*https://<wbr>sec<wbr>.theglobeandmail<wbr>.com<wbr>/securedrop<wbr>/*](https://sec.theglobeandmail.com/securedrop/)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The guidelines on these tips pages are all similar, instructing sources to securely
    contact the newsroom by either sending a message to a dedicated Signal phone number,
    physically mailing their documents using the postal service, or reaching out over
    the open source whistleblower submission software called *SecureDrop*.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: The late information activist Aaron Swartz, along with journalist Kevin Poulsen,
    developed a platform in 2013 called DeadDrop for sources to securely communicate
    with and send documents to journalists. After Swartz’s death, Poulsen handed the
    project over to the Freedom of the Press Foundation, which renamed it to SecureDrop.
    At the time, I was the chief technology officer for the Freedom of the Press Foundation
    and contributed a significant amount of code to the project.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: Like OnionShare, SecureDrop turns computers into anonymous dropboxes (also powered
    by Tor onion services) to enable file sharing. However, it’s designed for professional
    newsrooms. It runs on a dedicated server that’s always online and available for
    sources to use, and it forces more secure and paranoid behavior than OnionShare
    does—for example, it’s designed so that you can open documents sent through SecureDrop
    only in an air-gapped environment.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: SecureDrop’s increased security protects sources who are potentially risking
    their lives, but that security comes at a cost. The platform requires a significant
    amount of work to set up and maintain, including the ongoing daily work of checking
    it for new submissions. I spent years checking SecureDrop for The Intercept, and
    I know that it can be frustrating jumping through security hoops when the vast
    majority of submissions are nonsense or could have been sent in an email. But
    the effort is worth it if it protects just one genuine whistleblower.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: If you work with a newsroom or an organization that wants to accept datasets
    from sources or whistleblowers, create a tips page on your website and look into
    SecureDrop. You can learn more about the SecureDrop project at [*https://<wbr>securedrop<wbr>.org*](https://securedrop.org)
    and read detailed documentation at [*https://<wbr>docs<wbr>.securedrop<wbr>.org*](https://docs.securedrop.org).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Summary</samp>
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this chapter, you learned about the demise of WikiLeaks and the genesis of
    DDoSecrets, and you downloaded a copy of the BlueLeaks dataset using BitTorrent.
    You’ve seen some common tools for securely communicating with sources, like Signal,
    Tor, and OnionShare. You’ve also learned about a few other techniques for securely
    and anonymously transferring large amounts of data, as well as about tips pages
    and SecureDrop.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter marks the beginning of [Part II](part2.xhtml), where you’ll
    learn how to use the command line interface, a powerful text-based method of controlling
    your computer. This will prove essential for digging into datasets like BlueLeaks.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
