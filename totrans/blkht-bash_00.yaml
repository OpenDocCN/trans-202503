- en: <hgroup>
  prefs: []
  type: TYPE_NORMAL
- en: INTRODUCTION
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: </hgroup>
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/opener.jpg)'
  prefs: []
  type: TYPE_IMG
- en: What if the world’s most potent cyberweapon wasn’t a zero-day exploit but the
    oldest trick in the book? In this fast-evolving cybersecurity landscape, bash
    scripting has remained a foundational skill, providing much more than just a convenient
    way to interact with an operating system.
  prefs: []
  type: TYPE_NORMAL
- en: Written by Brian Fox in 1989, the bash shell is used on most versions of the
    Linux operating system, which runs an impressive share of the world’s infrastructure.
    You’ll find Linux across the vast network of servers that form the backbone of
    the internet, as well as orchestrating space missions, enabling secure financial
    transactions, and driving innovation in artificial intelligence.
  prefs: []
  type: TYPE_NORMAL
- en: Linux’s ubiquity has made bash scripting an essential skill for hackers hoping
    to master the art of *living off the land*, or using a system’s native tools and
    processes to execute attacks, which can enable them to blend in with legitimate
    activities and avoid detection. If penetration testers rely too heavily on an
    ever-growing arsenal of third-party tools, they’ll struggle to operate in restricted
    environments with limited tool access.
  prefs: []
  type: TYPE_NORMAL
- en: Bash scripting also enables hackers to automate the execution of command line
    tools. For example, it lets them chain multiple tools together, run them against
    many targets, or strategically schedule their execution. By writing scripts, hackers
    can develop powerful, efficient penetration-testing routines that fit their custom
    needs.
  prefs: []
  type: TYPE_NORMAL
- en: Whether you’re a penetration tester, a bug bounty hunter, a student taking your
    first steps into the field of cybersecurity, or a defender hoping to understand
    attacker techniques, this book will teach you to harness bash scripting at all
    stages of an offensive security engagement. You’ll learn how to write reusable
    offensive scripts, use the bash shell to maneuver through networks, and dive deep
    inside the Linux operating system.
  prefs: []
  type: TYPE_NORMAL
- en: What Is in This Book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This book begins by teaching you the foundations of bash syntax and scripting.
    It then applies those skills to each stage of a penetration test against a Linux-based
    target network, from initial access to data exfiltration. Along the way, you’ll
    explore the Linux operating system and enhance your bash hacking skills.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 1](chapter1.xhtml): Bash Basics **Provides a high-level overview
    of bash syntax, including assigning variables, using arithmetic operators, handling
    input and exit codes, and much more.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 2](chapter2.xhtml): Flow Control and Text Processing **Covers more
    advanced bash concepts, such as testing conditions, using loops, consolidating
    code into functions, and sending commands to the background. You’ll also learn
    some ways of customizing your bash environment for penetration testing.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 3](chapter3.xhtml): Setting Up a Hacking Lab **Walks you through
    building a lab to use throughout the rest of the book. You’ll rely on Kali Linux
    and a vulnerable Docker-based target environment to practice your bash hacking.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 4](chapter4.xhtml): Reconnaissance **Covers reconnaissance activities
    against a network from a black box point of view. You’ll combine hacking tools
    with bash scripting to automate information gathering.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 5](chapter5.xhtml): Vulnerability Scanning and Fuzzing **Explores
    ways of using bash to identify and exploit vulnerabilities. You’ll learn to write
    bash scripts for scanning and fuzzing tasks, crucial steps in any penetration
    test.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 6](chapter6.xhtml): Gaining a Web Shell **Dives into techniques
    for gaining a low-privileged foothold on a target system, with a particular focus
    on deploying web shells and performing OS command injections. You’ll also uncover
    various ways to upgrade limited shell environments, setting up a foundation for
    future attacks.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 7](chapter7.xhtml): Reverse Shells **Covers the establishment of
    reverse shells, an initial access technique that swaps the direction of the connection
    to remote servers. You’ll learn the theory behind how reverse shells work, then
    leverage them to gain stable access to a remote machine.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 8](chapter8.xhtml): Local Information Gathering **Explores ways
    of gathering information from a compromised Linux host without sending any packets
    across the network that could give your activities away. You’ll navigate the Linux
    file directory and permissions system, collect information about user sessions,
    explore installed software, and much more.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 9](chapter9.xhtml): Privilege Escalation **Discusses potential paths
    to privilege escalation, such as misconfigured permissions, shared resources,
    and other flaws.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 10](chapter10.xhtml): Persistence **Explores ways of making your
    access to a network resilient to environmental changes. You’ll steal credentials,
    modify service configurations, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 11](chapter11.xhtml): Network Probing and Lateral Movement **Discusses
    living-off-the-land approaches to reaching other servers on the target network.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 12](chapter12.xhtml): Defense Evasion and Exfiltration **Covers
    defensive security controls commonly seen in corporate environments. You’ll learn
    how to tamper with security tools and exfiltrate information from a system in
    evasive ways.'
  prefs: []
  type: TYPE_NORMAL
- en: The Scripting Exercises
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Throughout the chapters, 29 exercises prompt you to practice your newfound
    bash scripting skills. Some walk you through complete scripts, then encourage
    you to expand or improve upon them; others challenge you to write your own scripts
    from the ground up. Using bash, you’ll do exercises such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Organize the results of a scan by port number ([Chapter 4](chapter4.xhtml))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parse the output of web-scanning utilities ([Chapter 5](chapter5.xhtml))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build an interface for exploiting an OS command injection vulnerability ([Chapter
    6](chapter6.xhtml))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write an SSH brute-forcing utility that can attack user accounts ([Chapter 7](chapter7.xhtml))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recursively search the filesystem for readable logfiles ([Chapter 8](chapter8.xhtml))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maliciously modify scheduled task scripts ([Chapter 9](chapter9.xhtml))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a malicious package installer ([Chapter 10](chapter10.xhtml))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write a frequency-based port scanner ([Chapter 11](chapter11.xhtml))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scan compromised hosts for the presence of defensive tools ([Chapter 12](chapter12.xhtml)),
    and much, much more
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to Use This Book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We encourage you to actively experiment with the techniques we introduce throughout
    the book. Start by cloning the book’s GitHub repository, located at *[https://github.com/dolevf/Black-Hat-Bash](https://github.com/dolevf/Black-Hat-Bash)*.
    This repository is a treasure trove of scripts, categorized by chapter, that can
    help you apply what you’ve learned.
  prefs: []
  type: TYPE_NORMAL
- en: Note, however, that the techniques presented herein are intended for educational
    purposes only. Perform testing solely against systems for which you have explicit
    authorization to do so. To safely hone your skills, in [Chapter 3](chapter3.xhtml)
    we’ll guide you through setting up your own lab environment, where you can experiment
    without risk.
  prefs: []
  type: TYPE_NORMAL
