["```\nServerName  IPAddress  OperatingSystem  AvailableDriveSpace (GB)  Memory (GB)  UserProfilesSize (MB)  StoppedServices\nMYSERVER    x.x.x.x    Windows....      10                        4            50.4                   service1,service2,service3\n```", "```\nPS> $serversOuPath = 'OU=Servers,DC=powerlab,DC=local'\nPS> $servers = Get-ADComputer -SearchBase $serversOuPath -Filter *\nPS> $servers\n\nDistinguishedName : CN=SQLSRV1,OU=Servers,DC=Powerlab,DC=local\nDNSHostName       : SQLSRV1.Powerlab.local\nEnabled           : True\nName              : SQLSRV1\nObjectClass       : computer\nObjectGUID        : c288d6c1-56d4-4405-ab03-80142ac04b40\nSamAccountName    : SQLSRV1$\nSID               : S-1-5-21-763434571-1107771424-1976677938-1105\nUserPrincipalName :\n\nDistinguishedName : CN=WEBSRV1,OU=Servers,DC=Powerlab,DC=local\nDNSHostName       : WEBSRV1.Powerlab.local\nEnabled           : True\nName              : WEBSRV1\nObjectClass       : computer\nObjectGUID        : 3bd2da11-4abb-4eb6-9c71-7f2c58594a98\nSamAccountName    : WEBSRV1$\nSID               : S-1-5-21-763434571-1107771424-1976677938-1106\nUserPrincipalName :\n```", "```\nPS> $servers = Get-ADComputer -SearchBase $serversOuPath -Filter * |\nSelect-Object -ExpandProperty Name\nPS> $servers\nSQLSRV1\nWEBSRV1\n```", "```\nforeach ($server in $servers) {\n    Write-Host $server\n}\n```", "```\n$serversOuPath = 'OU=Servers,DC=powerlab,DC=local'\n$servers = Get-ADComputer -SearchBase $serversOuPath -Filter * | Select-Object -ExpandProperty Name\nforeach ($server in $servers) {\n    Write-Host $server\n}\n```", "```\nPS> C:\\Get-ServerInformation.ps1\nSQLSRV1\nWEBSRV1\n```", "```\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  wuauserv           Windows Update\n\n__GENUS              : 2\n__CLASS              : Win32_PhysicalMemory\n__SUPERCLASS         : CIM_PhysicalMemory\n__DYNASTY            : CIM_ManagedSystemElement\n__RELPATH            : Win32_PhysicalMemory.Tag=\"Physical Memory 0\"\n__PROPERTY_COUNT     : 30\n__DERIVATION         : {CIM_PhysicalMemory, CIM_Chip, CIM_PhysicalComponent, CIM_PhysicalElement...}\n__SERVER             : DC\n__NAMESPACE          : root\\cimv2\n__PATH               : \\\\DC\\root\\cimv2:Win32_PhysicalMemory.Tag=\"Physical Memory 0\"\n```", "```\n$output = [pscustomobject]@{\n    'ServerName'                  = $null\n    'IPAddress'                   = $null\n    'OperatingSystem'             = $null\n    'AvailableDriveSpace (GB)'    = $null\n    'Memory (GB)'                 = $null\n    'UserProfilesSize (MB)'       = $null\n    'StoppedServices'             = $null\n}\n```", "```\nPS> $output | Format-Table -AutoSize\n\nServerName IPAddress OperatingSystem AvailableDriveSpace (GB) Memory (GB) UserProfilesSize (MB) StoppedServices\n```", "```\n$serversOuPath = 'OU=Servers,DC=powerlab,DC=local'\n$servers = Get-ADComputer -SearchBase $serversOuPath -Filter * | Select-Object -ExpandProperty Name\nforeach ($server in $servers) {\n    $output = @{\n        'ServerName'                  = $server\n        'IPAddress'                   = $null\n        'OperatingSystem'             = $null\n        'AvailableDriveSpace (GB)'    = $null\n        'Memory (GB)'                 = $null\n        'UserProfilesSize (MB)'       = $null\n        'StoppedServices'             = $null\n    }\n    [pscustomobject]$output\n}\n```", "```\nPS> C:\\Get-ServerInformation.ps1 | Format-Table -AutoSize\n\nServerName UserProfilesSize (MB) AvailableDriveSpace (GB) OperatingSystem StoppedServices IPAddress Memory (GB)\n---------- --------------------- ------------------------ --------------- --------------- --------- -----------\nSQLSRV1\nWEBSRV1\n```", "```\nPS> Get-ChildItem -Path \\\\WEBSRV1\\c$\\Users -Recurse -File | Select-Object -Property *\n\nPSPath            : Microsoft.PowerShell.Core\\FileSystem::\\WEBSRV1\\c$\\Users\\Adam\\file.log\nPSParentPath      : Microsoft.PowerShell.Core\\FileSystem::\\\\WEBSRV1\\c$\\Users\\Adam\nPSChildName       : file.log\nPSProvider        : Microsoft.PowerShell.Core\\FileSystem\nPSIsContainer     : False\nMode              : -a----\nVersionInfo       : File:             \\\\WEBSRV1\\c$\\Users\\Adam\\file.log\n                    InternalName:\n                    OriginalFilename:\n                    FileVersion:\n                    FileDescription:\n                    Product:\n                    ProductVersion:\n                    Debug:            False\n                    Patched:          False\n                    PreRelease:       False\n                    PrivateBuild:     False\n                    SpecialBuild:     False\n                    Language:\nBaseName          : file\nTarget            :\nLinkType          :\nName              : file.log\nLength            : 8926\nDirectoryName     : \\\\WEBSRV1\\c$\\Users\\Adam\n--snip--\n```", "```\nPS> Get-ChildItem -Path '\\\\WEBSRV1\\c$\\Users\\' -File -Recurse | Measure-Object -Property Length -Sum\n\nCount    : 15\nAverage  :\nSum      : 600554\nMaximum  :\nMinimum  :\nProperty : Length\n```", "```\nGet-ServerInformation.ps1\n-------------------\n$serversOuPath = 'OU=Servers,DC=powerlab,DC=local'\n$servers = Get-ADComputer -SearchBase $serversOuPath -Filter * | Select-Object -ExpandProperty Name\nforeach ($server in $servers) {\n    $output = @{\n        'ServerName'                  = $null\n        'IPAddress'                   = $null\n        'OperatingSystem'             = $null\n        'AvailableDriveSpace (GB)'    = $null\n        'Memory (GB)'                 = $null\n        'UserProfileSize (MB)'        = $null\n        'StoppedServices'             = $null\n    }\n    $output.ServerName = $server\n    $output.'UserProfileSize (MB)' = (Get-ChildItem -Path '\\\\WEBSRV1\\c$\\Users\\' -File -Recurse |\n    Measure-Object -Property Length -Sum).Sum\n    [pscustomobject]$output\n}\n```", "```\nPS> C:\\Get-ServerInformation.ps1 | Format-Table -AutoSize\n\nServerName UserProfilesSize (MB) AvailableDriveSpace (GB) OperatingSystem StoppedServices IPAddress Memory (GB)\n---------- --------------------- ------------------------ --------------- --------------- --------- -----------\nSQLSRV1                   636245\nWEBSRV1                   600554\n```", "```\n$userProfileSize = (Get-ChildItem -Path \"\\\\$server\\c$\\Users\\\" -File |\nMeasure-Object -Property Length -Sum).Sum\n$output.'UserProfilesSize (MB)' = [int]($userProfileSize / 1MB)\n```", "```\nPS> Get-CimInstance -ComputerName sqlsrv1 -ClassName Win32_LogicalDisk\n\nDeviceID DriveType ProviderName VolumeName Size        FreeSpace   PSComputerName\n-------- --------- ------------ ---------- ----        ---------   --------------\nC:       3                                 42708496384 34145906688 sqlsrv1\n```", "```\nPS> (Get-CimInstance -ComputerName sqlsrv1 -ClassName Win32_LogicalDisk).FreeSpace\n34145906688\n```", "```\nPS> C:\\Get-ServerInformation.ps1 | Format-Table -AutoSize\n\nServerName UserProfilesSize (MB) AvailableDriveSpace (GB) OperatingSystem StoppedServices IPAddress Memory (GB)\n---------- --------------------- ------------------------ --------------- --------------- --------- -----------\nSQLSRV1                   636245          31.800853729248\nWEBSRV1                   603942         34.5973815917969\n```", "```\n$output.'AvailableDriveSpace (GB)' = [Math]::Round(((Get-CimInstance -ComputerName $server\n-ClassName Win32_LogicalDisk).FreeSpace / 1GB),1)\n\nServerName UserProfilesSize (MB) AvailableDriveSpace (GB) OperatingSystem StoppedServices IPAddress Memory (GB)\n---------- --------------------- ------------------------ --------------- --------------- --------- -----------\nSQLSRV1                   636245                     31.8\nWEBSRV1                   603942                     34.6\n```", "```\n$output.'PropertyName' = (Get-CimInstance -ComputerName ServerName \n-ClassName WMIClassName).WMIClassPropertyName\n```", "```\nGet-ServerInformation.ps1\n-------------------\n$serversOuPath = 'OU=Servers,DC=powerlab,DC=local'\n$servers = Get-ADComputer -SearchBase $serversOuPath -Filter * |\nSelect-Object -ExpandProperty Name\nforeach ($server in $servers) {\n    $output = @{\n        'ServerName'                  = $null\n        'IPAddress'                   = $null\n        'OperatingSystem'             = $null\n        'AvailableDriveSpace (GB)'    = $null\n        'Memory (GB)'                 = $null\n        'UserProfilesSize (MB)'       = $null\n        'StoppedServices'             = $null\n    }\n    $output.ServerName = $server\n    $output.'UserProfilesSize (MB)' = (Get-ChildItem -Path \"\\\\$server\\c$\\\n    Users\\\" -File | Measure-Object -Property Length -Sum).Sum / 1MB\n    $output.'AvailableDriveSpace (GB)' = [Math]::Round(((Get-CimInstance\n    -ComputerName $server -ClassName Win32_LogicalDisk).FreeSpace / 1GB),1)\n    $output.'OperatingSystem' = (Get-CimInstance -ComputerName $server\n    -ClassName Win32_OperatingSystem).Caption\n    [pscustomobject]$output\n}\n```", "```\nPS> C:\\Get-ServerInformation.ps1 | Format-Table -AutoSize\n\nServerName UserProfilesSize (MB) AvailableDriveSpace (GB) OperatingSystem                           StoppedServices IPAddress Memory (GB)\n---------- --------------------- ------------------------ ---------------                           --------------- --------- -----------\nSQLSRV1                   636245         31.8005790710449 Microsoft Windows Server 2016 Standard\nWEBSRV1                   603942         34.5973815917969 Microsoft Windows Server 2012 R2 Standard\n```", "```\nPS> Get-CimInstance -ComputerName sqlsrv1 -ClassName Win32_PhysicalMemory\n\nCaption              : Physical Memory\nDescription          : Physical Memory\nInstallDate          :\nName                 : Physical Memory\nStatus               :\nCreationClassName    : Win32_PhysicalMemory\nManufacturer         : Microsoft Corporation\nModel                :\nOtherIdentifyingInfo :\n--snip--\nCapacity             : 2147483648\n--snip--\n```", "```\nPS> (Get-CimInstance -ComputerName sqlsrv1 -ClassName Win32_PhysicalMemory |\nMeasure-Object -Property Capacity -Sum).Sum /1GB\n2\n```", "```\nGet-ServerInformation.ps1\n-------------------\n$serversOuPath = 'OU=Servers,DC=powerlab,DC=local'\n$servers = Get-ADComputer -SearchBase $serversOuPath -Filter * | Select-Object\n-ExpandProperty Name\nforeach ($server in $servers) {\n    $output = @{\n        'ServerName'                  = $null\n        'IPAddress'                   = $null\n        'OperatingSystem'             = $null\n        'AvailableDriveSpace (GB)'    = $null\n        'Memory (GB)'                 = $null\n        'UserProfilesSize (MB)'       = $null\n        'StoppedServices'             = $null\n    }\n $output.ServerName = $server\n    $output.'UserProfilesSize (MB)' = (Get-ChildItem -Path \"\\\\$server\\c$\\\n    Users\\\" -File | Measure-Object -Property Length -Sum).Sum / 1MB\n    $output.'AvailableDriveSpace (GB)' = [Math]::Round(((Get-CimInstance\n    -ComputerName $server -ClassName Win32_LogicalDisk).FreeSpace / 1GB),1)\n    $output.'OperatingSystem' = (Get-CimInstance -ComputerName $server\n    -ClassName Win32_OperatingSystem).Caption\n    $output.'Memory (GB)' = (Get-CimInstance -ComputerName $server -ClassName\n    Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum /1GB\n    [pscustomobject]$output\n}\n```", "```\nPS> C:\\Get-ServerInformation.ps1 | Format-Table -AutoSize\n\nServerName UserProfilesSize (MB) AvailableDriveSpace (GB) OperatingSystem                           StoppedServices IPAddress Memory (GB)\n---------- --------------------- ------------------------ ---------------                           --------------- --------- -----------\nSQLSRV1                   636245                     31.8 Microsoft Windows Server 2016 Standard                                        2\nWEBSRV1                   603942                     34.6 Microsoft Windows Server 2012 R2 Standard                                     2\n```", "```\nPS> Get-CimInstance -ComputerName SQLSRV1 -ClassName Win32_NetworkAdapterConfiguration\n\nServiceName    DHCPEnabled    Index    Description   PSComputerName\n-----------    -----------    -----    -----------   --------------\nkdnic          True           0        Microsoft...  SQLSRV1\nnetvsc         False          1        Microsoft...  SQLSRV1\ntunnel         False          2        Microsoft...  SQLSRV1\n```", "```\n   DHCPLeaseExpires             :\n   Index                        : 1\n   Description                  : Microsoft Hyper-V Network Adapter\n   DHCPEnabled                  : False\n   DHCPLeaseObtained            :\n   DHCPServer                   :\n   DNSDomain                    : Powerlab.local\n   DNSDomainSuffixSearchOrder   : {Powerlab.local}\n   DNSEnabledForWINSResolution  : False\n   DNSHostName                  : SQLSRV1\n   DNSServerSearchOrder         : {192.168.0.100}\n   DomainDNSRegistrationEnabled : True\n   FullDNSRegistrationEnabled   : True\n❶ IPAddress                     : {192.168.0.40... \n   IPConnectionMetric           : 20\n   IPEnabled                    : True\n   IPFilterSecurityEnabled      : False\n   --snip--\n```", "```\nGet-CimInstance -ComputerName SQLSRV1 -ClassName Win32_NetworkAdapterConfiguration\n-Filter \"IPEnabled = 'True'\" | Select-Object -Property *\n```", "```\nPS> (Get-CimInstance -ComputerName SQLSRV1 -ClassName Win32_NetworkAdapterConfiguration\n-Filter \"IPEnabled = 'True'\").IPAddress\n\n192.168.0.40\nfe80::e4e1:c511:e38b:4f05\n2607:fcc8:acd9:1f00:e4e1:c511:e38b:4f05\n```", "```\nIPAddress : {192.168.0.40, fe80::e4e1:c511:e38b:4f05, 2607:fcc8:acd9:1f00:e4e1:c511:e38b:4f05}\n```", "```\nPS> (Get-CimInstance -ComputerName SQLSRV1 -ClassName Win32_NetworkAdapterConfiguration\n-Filter \"IPEnabled = 'True'\").IPAddress[0]\n\n192.168.0.40\n```", "```\nGet-ServerInformation.ps1\n-------------------\n$serversOuPath = 'OU=Servers,DC=powerlab,DC=local'\n$servers = Get-ADComputer -SearchBase $serversOuPath -Filter * |\nSelect-Object -ExpandProperty Name\nforeach ($server in $servers) {\n    $output = @{\n        'ServerName'                  = $null\n        'IPAddress'                   = $null\n 'OperatingSystem'             = $null\n        'AvailableDriveSpace (GB)'    = $null\n        'Memory (GB)'                 = $null\n        'UserProfilesSize (MB)'       = $null\n        'StoppedServices'             = $null\n    }\n    $output.ServerName = $server\n    $output.'UserProfilesSize (MB)' = (Get-ChildItem -Path \"\\\\$server\\c$\\\n    Users\\\" -File | Measure-Object -Property Length -Sum).Sum / 1MB\n    $output.'AvailableDriveSpace (GB)' = [Math]::Round(((Get-CimInstance\n    -ComputerName $server -ClassName Win32_LogicalDisk).FreeSpace / 1GB),1)\n    $output.'OperatingSystem' = (Get-CimInstance -ComputerName $server\n    -ClassName Win32_OperatingSystem).Caption\n    $output.'Memory (GB)' = (Get-CimInstance -ComputerName $server -ClassName\n    Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum /1GB\n    $output.'IPAddress' = (Get-CimInstance -ComputerName $server -ClassName\n    Win32_NetworkAdapterConfiguration -Filter \"IPEnabled = 'True'\").IPAddress[0]\n    [pscustomobject]$output\n}\n```", "```\nPS> C:\\Get-ServerInformation.ps1 | Format-Table -AutoSize\n\nServerName UserProfilesSize (MB) AvailableDriveSpace (GB) OperatingSystem                          StoppedServices IPAddress     Memory (GB)\n---------- --------------------- ------------------------ ---------------                          --------------- ---------     -----------\nSQLSRV1                   636245                     31.8 Microsoft Windows Server 2016 Standard                   192.168.0.40  2\nWEBSRV1                   603942                     34.6 Microsoft Windows Server 2012 R2 Standard                192.168.0.70  2\n```", "```\nPS> (Get-Service -ComputerName sqlsrv1 | Where-Object { $_.Status -eq 'Stopped' }).DisplayName\nApplication Identity\nApplication Management\nAppX Deployment Service (AppXSVC)\n--snip--\n```", "```\nGet-ServerInformation.ps1\n-------------------\n$serversOuPath = 'OU=Servers,DC=powerlab,DC=local'\n$servers = Get-ADComputer -SearchBase $serversOuPath -Filter * |\nSelect-Object -ExpandProperty Name\nforeach ($server in $servers) {\n    $output = @{\n        'ServerName'                  = $null\n        'IPAddress'                   = $null\n        'OperatingSystem'             = $null\n        'AvailableDriveSpace (GB)'    = $null\n        'Memory (GB)'                 = $null\n        'UserProfilesSize (MB)'       = $null\n        'StoppedServices'             = $null\n    }\n    $output.ServerName = $server\n    $output.'UserProfilesSize (MB)' = (Get-ChildItem -Path \"\\\\$server\\c$\\\n    Users\\\" -File | Measure-Object -Property Length -Sum).Sum / 1MB\n    $output.'AvailableDriveSpace (GB)' = [Math]::Round(((Get-CimInstance\n    -ComputerName $server -ClassName Win32_LogicalDisk).FreeSpace / 1GB),1)\n    $output.'OperatingSystem' = (Get-CimInstance -ComputerName $server\n    -ClassName Win32_OperatingSystem).Caption\n    $output.'Memory (GB)' = (Get-CimInstance -ComputerName $server -ClassName\n    Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum /1GB\n    $output.'IPAddress' = (Get-CimInstance -ComputerName $server -ClassName\n    Win32_NetworkAdapterConfiguration -Filter \"IPEnabled = 'True'\").IPAddress[0]\n    $output.StoppedServices = (Get-Service -ComputerName $server |\n    Where-Object { $_.Status -eq 'Stopped' }).DisplayName\n    [pscustomobject]$output\n}\n```", "```\nPS> C:\\Get-ServerInformation.ps1 | Format-Table -AutoSize\n\nServerName UserProfilesSize (MB) AvailableDriveSpace (GB) OperatingSystem                           StoppedServices\n---------- --------------------- ------------------------ ---------------                           ---------------\nSQLSRV1                   636245                     31.8 Microsoft Windows Server 2016 Standard    {Application Identity,\n                                                                                                    Application Management,\n                                                                                                    AppX Deployment Servi...\nWEBSRV1                   603942                     34.6 Microsoft Windows Server 2012 R2 Standard {Application Experience,\n                                                                                                    Application Management,\n                                                                                                    Background Intellig...\n```", "```\nPS> C:\\Get-ServerInformation.ps1 \n\nServerName               : SQLSRV1\nUserProfilesSize (MB)    : 636245\nAvailableDriveSpace (GB) : 31.8\nOperatingSystem          : Microsoft Windows Server 2016 Standard\nStoppedServices          : {Application Identity, Applic... \nIPAddress                : 192.168.0.40\nMemory (GB)              : 2\n\nServerName               : WEBSRV1\nUserProfilesSize (MB)    : 603942\nAvailableDriveSpace (GB) : 34.6\nOperatingSystem          : Microsoft Windows Server 2012 R2 Standard\nStoppedServices          : {Application Experience, Application Management, \n                           Background Intelligent Transfer Service, Computer \n                           Browser...}\nIPAddress                : 192.168.0.70\nMemory (GB)              : 2\n```", "```\nGet-ServerInformation.ps1\n-------------------\n$serversOuPath = 'OU=Servers,DC=powerlab,DC=local'\n$servers = Get-ADComputer -SearchBase $serversOuPath -Filter * |\nSelect-Object -ExpandProperty Name\nforeach ($server in $servers) {\n $output = @{\n        'ServerName'                  = $null\n        'IPAddress'                   = $null\n        'OperatingSystem'             = $null\n        'AvailableDriveSpace (GB)'    = $null\n        'Memory (GB)'                 = $null\n        'UserProfilesSize (MB)'       = $null\n        'StoppedServices'             = $null\n    }\n    $cimSession = New-CimSession -ComputerName $server\n    $output.ServerName = $server\n    $output.'UserProfilesSize (MB)' = (Get-ChildItem -Path \"\\\\$server\\c$\\\n    Users\\\" -File | Measure-Object -Property Length -Sum).Sum\n    $output.'AvailableDriveSpace (GB)' = [Math]::Round(((Get-CimInstance\n    -CimSession $cimSession -ClassName Win32_LogicalDisk).FreeSpace / 1GB),1)\n    $output.'OperatingSystem' = (Get-CimInstance -CimSession $cimSession\n    -ClassName Win32_OperatingSystem).Caption\n    $output.'Memory (GB)' = (Get-CimInstance -CimSession $cimSession\n    -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum)\n    .Sum /1GB\n    $output.'IPAddress' = (Get-CimInstance -CimSession $cimSession -ClassName\n    Win32_NetworkAdapterConfiguration -Filter \"IPEnabled = 'True'\").IPAddress[0]\n    $output.StoppedServices = (Get-Service -ComputerName $server |\n    Where-Object { $_.Status -eq 'Stopped' }).DisplayName\n    Remove-CimSession -CimSession $cimSession\n    [pscustomobject]$output\n}\n```", "```\nGet-ServerInformation.ps1\n-------------------\n$serversOuPath = 'OU=Servers,DC=powerlab,DC=local'\n$servers = Get-ADComputer -SearchBase $serversOuPath -Filter * |\nSelect-Object -ExpandProperty Name\nforeach ($server in $servers) {\n    $output = @{\n        'ServerName'                  = $null\n        'IPAddress'                   = $null\n        'OperatingSystem'             = $null\n        'AvailableDriveSpace (GB)'    = $null\n        'Memory (GB)'                 = $null\n        'UserProfilesSize (MB)'       = $null\n        'StoppedServices'             = $null\n }\n    $getCimInstParams = @{\n        CimSession = New-CimSession -ComputerName $server\n    }\n    $output.ServerName = $server\n    $output.'UserProfilesSize (MB)' = (Get-ChildItem -Path \"\\\\$server\\c$\\\n    Users\\\" -File | Measure-Object -Property Length -Sum).Sum\n    $output.'AvailableDriveSpace (GB)' = [Math]::Round(((Get-CimInstance\n    @getCimInstParams -ClassName Win32_LogicalDisk).FreeSpace / 1GB),1)\n    $output.'OperatingSystem' = (Get-CimInstance @getCimInstParams -ClassName\n    Win32_OperatingSystem).Caption\n    $output.'Memory (GB)' = (Get-CimInstance @getCimInstParams -ClassName\n    Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum /1GB\n    $output.'IPAddress' = (Get-CimInstance @getCimInstParams -ClassName\n    Win32_NetworkAdapterConfiguration -Filter \"IPEnabled = 'True'\").IPAddress[0]\n    $output.StoppedServices = (Get-Service -ComputerName $server |\n    Where-Object { $_.Status -eq 'Stopped' }).DisplayName\n    Remove-CimSession -CimSession $getCimInstParams.CimSession\n    [pscustomobject]$output\n}\n```"]