- en: '**11**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**GRADIENTS**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](graphics/common-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In this chapter, the last of the quartet about decorative properties, I cover
    CSS gradients. A *gradient* in this context is the gradual transition between
    two or more colors—a design standard for many years and one that you might think
    would be fairly simple to translate into CSS, but which has a long and tortured
    history on the Web.
  prefs: []
  type: TYPE_NORMAL
- en: CSS gradients were first introduced in WebKit in 2008 and made their way into
    Safari 4\. The syntax they used, however, was completely different from the one
    you’ll see in the rest of this chapter and was deemed too complex by other browser
    vendors. Various other proposals were put forward (and even implemented) throughout
    the following years, until a final syntax was agreed on at the end of 2011\. This
    final syntax was rapidly adopted by all browsers, and it’s the one I’ll cover
    in this chapter. (Read “[Browser Support and Legacy Syntaxes](ch15.html#ch15leve1sec205)”
    on [page 131](ch11.html#page_131) to learn how to support older versions in legacy
    browsers.)
  prefs: []
  type: TYPE_NORMAL
- en: '**WARNING** *Graphical effects like gradients can be quite computationally
    taxing and will slow the rendering and performance of pages, especially in mobile
    browsers. That’s not to say you should avoid them, just that you should always
    evaluate performance against appearance when building your sites.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Linear Gradients**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A *linear gradient* is one that gradually transitions between colors over the
    length of a straight line connecting two points. At its simplest, a linear gradient
    changes proportionally between two colors along the full length of the line.
  prefs: []
  type: TYPE_NORMAL
- en: 'I’ll begin by showing the shortest possible syntax for a linear gradient, which
    is defined using the `linear-gradient()` value function on the `background-image`
    property:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[Figure 11-1](ch11.html#ch11fig1) shows the result.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](graphics/f11-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-1: A simple top-bottom, two-color linear gradient*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Each color that you want the gradient to pass through is known as a *color-stop*
    and is passed into the function in a comma-separated list of arguments. As you
    can see here, gradients require at least two color-stops: a start and an end.
    In this example, the gradient begins black and ends white, passing gradually through
    all the intermediate shades between the two values.'
  prefs: []
  type: TYPE_NORMAL
- en: '***Setting Gradient Direction***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The axis between the first and last color-stops is known as the *gradient line*.
    In the previous example, the gradient line begins at the top of the box and moves
    to the bottom, vertically. This is the default direction. To set a different gradient
    line, specify a target side or corner of the box by passing a new argument into
    the function before the list of color-stops. The argument is a string of keywords,
    beginning with `to` and followed by one or two direction keywords. For example,
    to define a black-to-white gradient running bottom to top, you use this value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To change the same gradient to run diagonally from the top-left corner to the
    bottom-right one, you use two directional keywords:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: For finer control over the direction of the gradient line, you can use an angle
    argument instead of the directional keywords. Angles can be declared using various
    units—in this chapter, I’ll stick with degrees (`deg`) because they’re the most
    commonly understood, but see “Angle Units” on [page 124](ch11.html#page_124) for
    more about alternative units.
  prefs: []
  type: TYPE_NORMAL
- en: 'The angle value sets the angle of the gradient line: `0deg` (or `360deg`) goes
    from bottom to top, `45deg` from bottom left to top right, `90deg` from left to
    right, and so on. Negative values make the gradient go counterclockwise: -`45deg`
    is the same as `315deg`, -`315deg` is the same as `45deg`, and so on. You get
    the idea.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, to create the same top-left to bottom-right gradient as in the
    previous code example, but using an angle value, you would use this code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The next code snippet shows three examples of the effects of different direction
    values: the first from right to left, the second from bottom left to top right,
    and the last an angle of 120 degrees (roughly, but not quite, top left to bottom
    right).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[Figure 11-2](ch11.html#ch11fig2) shows the results.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](graphics/f11-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-2: Three different direction values: left to right, bottom left
    to top right, and 120 degrees*'
  prefs: []
  type: TYPE_NORMAL
- en: '***Adding Extra Color-Stop Values***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'So far I’ve used a simple gradient with only two color-stops, but you can use
    more. (Because this book is printed in black and white, I’m limited by the palette
    that I can choose!) Each color you add is declared by simply adding a new color-stop
    in the comma-separated list, as in this example where I add a third black color-stop:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**ANGLE UNITS**'
  prefs: []
  type: TYPE_NORMAL
- en: A variety of angle units, used to represent angular measurement, are defined
    in the CSS3 Values and Units Module (*[http://www.w3.org/TR/css3-values/#angle/](http://www.w3.org/TR/css3-values/#angle/)*).
    The unit that most of us learn in school is degrees (`deg`), where a full circle
    has 360 degrees, and this is the unit I use throughout this chapter. Of the alternatives,
    one is gradians (`grad`), which are measured on a scale where a full turn around
    a circle is equal to 400 gradians. Another, radians (`rad`), is based on π (pi),
    where a full circle is 2π radians, or approximately 6.2832rad. Still another unit
    is the `turn`, where one full circle is equal to 1 turn, although as of this writing
    only Firefox and Internet Explorer 9+ support this.
  prefs: []
  type: TYPE_NORMAL
- en: '[Table 11-1](ch11.html#ch11table1) shows some equivalent values of the different
    angle units.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Table 11-1:** Equivalent Angle Values'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Degrees** | **Gradians** | **Radians** | **Turns** |'
  prefs: []
  type: TYPE_TB
- en: '| 60 | 66.66667 | 1.04720 | 0.16667 |'
  prefs: []
  type: TYPE_TB
- en: '| 90 | 100 | 1.5708 | 0.25 |'
  prefs: []
  type: TYPE_TB
- en: '| 240 | 266.66667 | 4.18879 | 0.66667 |'
  prefs: []
  type: TYPE_TB
- en: As you can see, degrees tend to provide the cleanest and most familiar values,
    so unless you’re doing something very mathematically specific, like calculus,
    you’ll usually use degrees.
  prefs: []
  type: TYPE_NORMAL
- en: The color-stops are processed in the order listed, so this example creates a
    gradient that goes from black to white then back to black. [Figure 11-3](ch11.html#ch11fig3)
    shows the result.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](graphics/f11-03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-3: A gradient with three color-stops*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Color-stops are evenly distributed along the length of the gradient, so, in
    this case, the white color-stop is exactly halfway between the two blacks, at
    the middle point of the gradient. You can alter this distribution by adding a
    length or percentage value after each color-stop to shift the point along the
    gradient line where a color-stop is positioned. For example, this code positions
    the white color-stop at 75 percent of the length of the gradient line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[Figure 11-4](ch11.html#ch11fig4) shows the result. Compare it to [Figure 11-3](ch11.html#ch11fig3)
    where no position is defined, and you’ll see that the white color-stop has moved
    further along the gradient line toward the bottom of the element.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](graphics/f11-04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-4: The second color-stop occurs three-quarters (or 75 percent) of
    the way down the length of the gradient.*'
  prefs: []
  type: TYPE_NORMAL
- en: You’re not limited to using only percentage values on color-stops; length values
    are also permitted. This next snippet shows three ways to use length and percentage
    values, with the result shown in [Figure 11-5](ch11.html#ch11fig5). I’ll walk
    through each after the code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![Image](graphics/f11-05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-5: Using different position values in the color-stops*'
  prefs: []
  type: TYPE_NORMAL
- en: In ➊, the final color-stop argument has a position of 75 percent so the color-stop
    begins there and continues as a solid color until the end. In ➋, the first color-stop
    has the position value, so a solid block of the inherited color (black) is displayed
    until the 50 percent mark of the gradient line, at which point the gradient begins
    to transition to the final color-stop value.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, ➌ has three color-stops. The second begins at 50 percent, so the first
    and second color-stops transition up to that point. The final color-stop is placed
    just one pixel farther along the gradient line, so there is a sudden shift to
    that color (with no transition) and the color continues to the end.
  prefs: []
  type: TYPE_NORMAL
- en: '***Repeating Linear Gradients***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Rather than create only a single gradient from one side of an element to another,
    you can repeat the same gradient until the element is filled using the `repeating-linear-gradient()`
    function. This function accepts the same fundamental set of values as `linear-gradient`
    except that a length or percentage value is required for the final color-stop.
    Here’s an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: This final color-stop value sets the point at which the gradient should end
    and then start repeating. This code creates a top-bottom gradient (the default)
    between white and black that covers 25 percent of the height of the box, meaning
    it repeats four times, as shown in [Figure 11-6](ch11.html#ch11fig6).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](graphics/f11-06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-6: A white-to-black repeating gradient*'
  prefs: []
  type: TYPE_NORMAL
- en: The next code examples use different values; [Figure 11-7](ch11.html#ch11fig7)
    shows the result, and I’ll explain each, in turn, after you’ve had a chance to
    look at the code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![Image](graphics/f11-07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-7: Different repeating linear gradients*'
  prefs: []
  type: TYPE_NORMAL
- en: • The first example (➊) uses three color-stops and sets the direction so the
    gradient goes from right to left. The gradient covers 25 percent of the element,
    so the black-white-black pattern is repeated four times.
  prefs: []
  type: TYPE_NORMAL
- en: • The second example (➋) uses an angle value of `45deg` so the gradient is diagonal
    and uses pixel units for the color-stops. Again the gradients are black-white-black,
    but they’re distributed unequally so the black-white covers 2px, whereas the white-black
    covers 8px.
  prefs: []
  type: TYPE_NORMAL
- en: '• The last example (➌) uses four color-stops: black-black over 2px and then
    white-white over 2px. The low length values prevent a gradual change between the
    two colors, creating the hard diagonal lines you see here.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Radial Gradients**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A *radial gradient* is a gradual transition between colors that moves out from
    a central point in all directions. At its simplest, a radial gradient gradually
    changes between two colors in a circular or elliptical shape. Radial gradients
    are defined with the `radial-gradient()` value function, and, as with linear gradients,
    the simplest way to create one is to pass two color values in as arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: This results in a simple, two-color, white-black gradient in an ellipse that
    extends to the farthest corner of its parent element, as shown in [Figure 11-8](ch11.html#ch11fig8).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](graphics/f11-08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-8: A simple two-color radial gradient*'
  prefs: []
  type: TYPE_NORMAL
- en: '***Using Radial Gradients***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'You can set the shape of a radial gradient by adding a keyword before the color-stops.
    The default is `ellipse`, but you can use the alternative `circle` like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The result shown in [Figure 11-9](ch11.html#ch11fig9) is more circular than
    [Figure 11-8](ch11.html#ch11fig8), although lacking a clearly defined edge. (You’ll
    learn how to set the extent of a radial gradient shortly.)
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](graphics/f11-09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-9: A circular radial gradient*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The default center of a radial gradient (from which the gradient radiates)
    is at the center of the element it’s applied to. You can change this point by
    adding a position argument to the `radial-gradient()` function. The values used
    to set this position are exactly the same as those used in `background-position`—that
    is, a length, percentage, or keywords. You add the position after the shape keyword
    (`circle`, in the example shown here), preceded by the word `at`. The position
    is set to the center-right of the element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also set the *extent* of a gradient—that is, the point where the gradient
    ends—using a length or position value or one of four extent keywords. The extent
    argument is placed immediately after the shape keyword. For example, this code
    creates a circular gradient, the extent of which is 50px, meaning it finishes
    50px from the center point:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: The four possible keywords that you can use when setting the extent are `closest-corner`,
    `closest-side`, `farthest-corner` (the default), and `farthest-side`. The next
    listing illustrates the differences among the keywords, with the result of each
    line shown in [Figure 11-10](ch11.html#ch11fig10). I’ll discuss each rule in turn.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '![Image](graphics/f11-10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-10: Comparing extent keywords for radial gradients*'
  prefs: []
  type: TYPE_NORMAL
- en: All four gradients produce the same circular shape. In examples ➊ and ➋, both
    gradients have the same center position and color-stops, but the extent of ➊ is
    set by the `closest-corner` keyword, making the extent of the gradient be the
    closest corner (the bottom left), whereas the extent of ➋ is the closest side
    (left, set with `closest-side`), so this second circle is much smaller than the
    previous one.
  prefs: []
  type: TYPE_NORMAL
- en: The gradients in examples ➌ and ➍ have the same center position (the bottom-left
    corner of the element) and each has four color-stop values (alternating black-white).
    The extent of example ➌ is the farthest corner (top-right, set with `farthest-corner`),
    whereas example ➍ has an extent of the farthest side (the right, and you’ve probably
    guessed by now that it’s set with `farthest-side`). Although subtle, you should
    be able to see that the extent of ➍ is more limited than that of ➌.
  prefs: []
  type: TYPE_NORMAL
- en: '***Using Multiple Color-Stop Values***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As with their linear counterparts, radial gradients can accept multiple color-stop
    values and length or percentage values for positioning control. Any such qualifiers
    are entered in a comma-separated list. The four examples in the following listing
    demonstrate some interesting variations. [Figure 11-11](ch11.html#ch11fig11) shows
    the results of each line.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '![Image](graphics/f11-11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-11: Different color-stop values for radial gradients*'
  prefs: []
  type: TYPE_NORMAL
- en: In example ➊, I’ve created a gradient with three color-stops (black-white-black)
    that radiates from the center of the box to its farthest side. The example at
    ➋ is similar, except that the color-stop begins at 25 percent along the length
    of the radius.
  prefs: []
  type: TYPE_NORMAL
- en: In example ➌, the gradient begins at the left side of the box and ends at the
    right side, with color-stops at 25 and 75 percent of the length. The example at
    ➍ uses five colors, but by specifying both the first and second color-stops to
    use the same color I’ve created the solid-white circle in the center.
  prefs: []
  type: TYPE_NORMAL
- en: '***Repeating Radial Gradients***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Just as the `linear-gradient()` function has `repeating-linear-gradient()`,
    a `repeating-radial-gradient()` can be used to repeat the supplied arguments until
    the limit specified in the final color-stop is reached. For example, the following
    code creates a circular gradient that repeats black-white every 20 percent until
    its extent is reached. The result is displayed in [Figure 11-12](ch11.html#ch11fig12).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '![Image](graphics/f11-12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-12: A repeating radial gradient*'
  prefs: []
  type: TYPE_NORMAL
- en: For some further demonstrations of what you can do with repeating radial gradients,
    see the next block of code. The result is shown in [Figure 11-13](ch11.html#ch11fig13).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '![Image](graphics/f11-13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-13: Patterns created with repeating radial gradients*'
  prefs: []
  type: TYPE_NORMAL
- en: The example at ➊ radiates from the top-right corner and passes through three
    color-stops over 15 percent of the box width, with the limit set by the `farthest-corner`
    keyword. In example ➋, I set the center of the gradient to the left side of the
    box and the limit to the farthest corner, using a white-white (solid) gradient
    for 10px and then a white-black gradient for 5px. Finally, with example ➌, I seem
    to have created a work of art! A white-black-white gradient repeats over a very
    low radius of 2px, creating the interference pattern you see here.
  prefs: []
  type: TYPE_NORMAL
- en: '**BROWSER SUPPORT AND LEGACY SYNTAXES**'
  prefs: []
  type: TYPE_NORMAL
- en: Although gradients have a checkered history, the good news is that the final
    syntax is well implemented by web browsers. Chrome, Firefox, IE10+, Safari 7+
    (including Mobile), and Android 4.4+ support all of the properties without a vendor
    prefix.
  prefs: []
  type: TYPE_NORMAL
- en: Older versions of WebKit (included in Safari 5 to 6.1 and Android 4.0 to 4.3)
    support a transitional syntax for linear gradients, in which the gradient direction
    is defined by where it comes *from* instead of where it goes *to.* This rule uses
    the `-webkit-` prefix. The following listing compares the old, transitional rule
    with the final one; the output from both is the same.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'If you need to support still older versions of WebKit (Android 3.0 and iOS
    4.3 and earlier), you’ll meet the original syntax, which was rejected by other
    browser vendors for being too complex. In this original syntax, both linear and
    radial gradients are defined with the `gradient()` value function, with differing
    arguments. This listing shows the simplest linear and radial gradient possible
    with this old syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Honestly, it would take too long to explain what’s going on here, especially
    for the radial syntax. My best advice is to not even consider using this original
    syntax and instead to provide a graceful fallback to a solid background color
    or an image instead. You’ll save yourself a lot of heartache that way.
  prefs: []
  type: TYPE_NORMAL
- en: '**Multiple Gradients**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Because gradients are applied with the `background-image` property, you can
    use CSS3’s multiple background values’ syntax (see [Chapter 8](ch08.html#ch08))
    to apply multiple gradients to an element using comma-separated values. This next
    listing shows two examples. The first uses linear gradients; the second uses radial
    gradients. [Figure 11-14](ch11.html#ch11fig14) shows the results of each example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '![Image](graphics/f11-14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11-14: Multiple gradient background values*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The example at left shows two linear gradients applied to an element: from
    top left to bottom right, and from top right to bottom left. The final color-stop
    has a value of `transparent` to allow the second gradient to show through below
    it. (Remember, if you don’t set transparency, the gradient will fill the rest
    of the box and hide the layer below it.) The example at right shows three radial
    gradients, each of which extends to the closest side, with the center of each
    at a different point. As with the first example, the last color-stop has a value
    of `transparent` to allow the layers below to show through.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Summary**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For all the historical problems with CSS gradients, the final syntax is quite
    elegant and capable of delivering a wide array of beautiful background effects.
    For a taste of what’s possible, see Lea Verou’s CSS3 Patterns Gallery at *[http://lea.verou.me/css3patterns/](http://lea.verou.me/css3patterns/)*
    for some effects that really push the envelope—although keep in mind my warning
    at the beginning of the chapter about performance, as some of these examples can
    be quite taxing on your mobile browser.
  prefs: []
  type: TYPE_NORMAL
- en: Also, as I write this, plans are afoot to extend the possibilities with a new
    gradient type, `conic`, which offers the possibility of even more exciting effects.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we’ve finished this short run of chapters that look at ways to decorate
    page elements, we’ll move on in the next chapters to cover a whole new field of
    expertise: transforming and animating page elements.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gradients: Browser Support**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '|  | **Chrome** | **Firefox** | **Safari** | **IE** |'
  prefs: []
  type: TYPE_TB
- en: '| Linear gradients | Yes | Yes | Yes | IE10 |'
  prefs: []
  type: TYPE_TB
- en: '| Repeating linear gradients | Yes | Yes | Yes | IE10 |'
  prefs: []
  type: TYPE_TB
- en: '| Radial gradients | Yes | Yes | Yes | IE10 |'
  prefs: []
  type: TYPE_TB
- en: '| Repeating radial gradients | Yes | Yes | Yes | IE10 |'
  prefs: []
  type: TYPE_TB
