- en: INTRODUCTION
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: '![image](../images/common01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: Welcome to *Absolute FreeBSD*! This book is a one-stop shop for system administrators
    who want to build, configure, and manage FreeBSD servers. It will also be useful
    for those folks who want to run FreeBSD on their desktops, embedded devices, server
    farms, and so on. By the time you finish this book, you should be able to use
    FreeBSD to provide network services. You should also understand how to manage,
    patch, and maintain your FreeBSD systems and have a basic understanding of networking,
    system security, and software management. We’ll discuss FreeBSD versions 11 and
    12, which are the most recent versions at the time this book is being released;
    however, most of this book applies to earlier and later versions as well.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到*Absolute FreeBSD*！本书是系统管理员的综合指南，适合那些希望构建、配置和管理FreeBSD服务器的人。对于那些希望在桌面、嵌入式设备、服务器农场等设备上运行FreeBSD的人来说，本书也同样有用。完成本书后，您应该能够使用FreeBSD提供网络服务。您还应该了解如何管理、修补和维护您的FreeBSD系统，并对网络、系统安全和软件管理有基本的了解。我们将讨论FreeBSD
    11和12版本，这些是本书发布时最新的版本；然而，本书的大部分内容同样适用于早期和更高版本。
- en: '**What Is FreeBSD?**'
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**什么是FreeBSD？**'
- en: '*FreeBSD* is a freely available Unix-like operating system popular with internet
    service providers, in appliances and embedded systems, and anywhere that reliability
    on commodity hardware is paramount. One day last week, FreeBSD miraculously appeared
    on the internet, fully formed, extruded directly from the mutant brain of its
    heroic creator’s lofty intellect. Just kidding—the truth is far more impressive.
    FreeBSD is a result of almost four decades of continuous development, research,
    and refinement. The story of FreeBSD begins in 1979, with BSD.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*FreeBSD* 是一种自由可用的类Unix操作系统，在互联网服务提供商、家电和嵌入式系统中非常流行，适用于任何对普通硬件可靠性要求极高的场合。就在上周的某一天，FreeBSD奇迹般地出现在互联网上，完全形成，直接从其英雄创造者的高远智慧中挤压出来。开玩笑的——事实上，真相更为令人印象深刻。FreeBSD是近四十年持续开发、研究和改进的结果。FreeBSD的故事始于1979年，与BSD有关。'
- en: '***BSD: FreeBSD’s Granddaddy***'
  id: totrans-5
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***BSD：FreeBSD的祖先***'
- en: Many years ago, AT&T needed a lot of specialized, custom-written computer software
    to run its business. It wasn’t allowed to compete in the computer industry, however,
    so it couldn’t sell its software. Instead, AT&T licensed various pieces of software
    and the source code for that software to universities at low, low prices. The
    universities could save money by using this software instead of commercial equivalents
    with pricey licenses, and university students with access to this nifty technology
    could read the source code to see how everything worked. In return, AT&T got exposure,
    some pocket change, and a generation of computer scientists who had cut their
    teeth on AT&T technology. Everyone got something out of the deal. The best-known
    software distributed under this licensing plan was Unix.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 多年前，AT&T需要大量定制的软件来支持其业务运行。然而，由于不能在计算机行业中竞争，AT&T不能出售其软件。因此，AT&T以低廉的价格将各种软件和其源代码授权给大学。大学通过使用这些软件代替价格高昂的商业软件节省了开支，而有机会接触这些技术的大学生可以查看源代码，了解其工作原理。作为回报，AT&T获得了曝光、一些零花钱，以及一代计算机科学家，他们从AT&T的技术中汲取了经验。每个人都从中受益。根据这种授权计划分发的最著名软件是Unix。
- en: Compared with modern operating systems, the original Unix had a lot of problems.
    Thousands of students had access to its source code, however, and hundreds of
    teachers needed interesting projects for their students. If a program behaved
    oddly, or if the operating system itself had a problem, the people who lived with
    the system on a day-to-day basis had the tools and the motivation to fix it. Their
    efforts quickly improved Unix and created many features we now take for granted.
    Students added the ability to control running processes, also known as *job control*.
    The Unix S51K filesystem made system administrators bawl like exhausted toddlers,
    so they replaced it with the Fast File System (FFS), whose features have spread
    into every modern filesystem. Many small, useful programs were written over the
    years, gradually replacing entire swaths of Unix.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 与现代操作系统相比，最初的 Unix 存在许多问题。然而，成千上万的学生有机会接触其源代码，而且成百上千的教师需要为学生提供有趣的项目。如果某个程序表现异常，或者操作系统本身出现问题，那么那些每天使用系统的人具备修复它的工具和动机。他们的努力迅速改善了
    Unix，并创造了许多我们现在认为理所当然的功能。学生们增加了控制正在运行的进程的能力，也就是 *作业控制*。Unix S51K 文件系统让系统管理员像精疲力竭的幼儿一样哭泣，因此他们用快速文件系统（FFS）替换了它，而
    FFS 的特性已经扩展到每一个现代文件系统。多年来，许多小型的、有用的程序被编写出来，逐渐取代了 Unix 中的整块功能。
- en: The Computer Systems Research Group (CSRG) at the University of California,
    Berkeley, participated in these improvements and also acted as a central clearinghouse
    for Unix code improvements. CSRG collected changes from other universities, evaluated
    them, packaged them, and distributed the compilation for free to anyone with a
    valid AT&T UNIX license. The CSRG also contracted with the Defense Advanced Research
    Projects Agency (DARPA) to implement various features in Unix, such as TCP/IP.
    The resulting collection of software came to be known as the *Berkeley Software
    Distribution*, or *BSD*.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 加利福尼亚大学伯克利分校的计算机系统研究小组（CSRG）参与了这些改进，并且还充当了 Unix 代码改进的中央清算中心。CSRG 收集了其他大学的修改，评估它们，打包后免费分发给任何持有有效
    AT&T UNIX 许可证的人。CSRG 还与国防高级研究计划局（DARPA）签订合同，以实现 Unix 中的各种功能，比如 TCP/IP。最终，所有的软件集合被称为
    *伯克利软件分发版*，或 *BSD*。
- en: 'BSD users took the software, improved it further, and then fed their enhancements
    back into BSD. Today, we consider this to be a fairly standard way for an open
    source project to run, but in 1979 it was revolutionary. BSD was also quite successful;
    if you check the copyright statement on an old BSD system, you’ll see this:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: BSD 用户拿到软件后，进一步改进了它，然后将他们的改进反馈到 BSD 中。今天，我们认为这是一个开放源代码项目运行的相当标准的方式，但在 1979 年，这种方式是革命性的。BSD
    也相当成功；如果你查看旧的 BSD 系统上的版权声明，你会看到这个：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Yep, 15 years of work—a lifetime in software development. How many other pieces
    of software are not only still in use, but still in active development, 15 years
    after work began? In fact, so many enhancements and improvements went into BSD
    that the CSRG found that over the years, it had replaced almost all of the original
    Unix with code created by the CSRG and its contributors. You had to look hard
    to find any original AT&T code.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 没错，15 年的工作——在软件开发中，这是一生的时间。还有哪些软件不仅依然在使用，而且在工作开始 15 年后，仍在积极开发？事实上，BSD 经历了如此多的增强和改进，以至于
    CSRG 发现，随着时间的推移，它几乎用 CSRG 及其贡献者创建的代码替代了原始的 Unix 代码。你需要仔细找，才能发现任何原始的 AT&T 代码。
- en: Eventually, the CSRG’s funding ebbed, and it became clear that the BSD project
    would end. After some political wrangling within the University of California,
    in 1992 the BSD code was released to the general public under what became known
    as the *BSD license*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，CSRG 的资金逐渐减少，显然 BSD 项目将会结束。经过加利福尼亚大学内部的一些政治斗争后，1992 年，BSD 代码在所谓的 *BSD 许可证*
    下公开发布给大众。
- en: '***The BSD License***'
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***BSD 许可证***'
- en: 'BSD code is available for anyone to use under what is probably the most liberal
    license in the history of software development. The license can be summarized
    as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: BSD 代码可以供任何人使用，依据的是可能是软件开发历史上最宽松的许可证。该许可证可以总结为以下几点：
- en: Don’t claim you wrote this.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要声称你写了这个。
- en: Don’t blame us if it breaks.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果它崩溃了，不要怪我们。
- en: Don’t use our name to promote your product.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要利用我们的名字来推广你的产品。
- en: 'This means that you can do almost anything you want with BSD code. (The original
    BSD license did require that users be notified if a software product included
    BSD-licensed code, but that requirement was later dropped.) There’s not even a
    requirement that you share your changes with the original authors! People were
    free to take BSD and include it in proprietary products, open source products,
    or free products—they could even print it out on punch cards and cover the lawn
    with it. You want to run off 10,000 BSD CDs and distribute them to your friends?
    Enjoy. Instead of *copyright*, the BSD license is sometimes referred to as *copycenter*,
    as in *Take this down to the copy center and run off a few for yourself*. Not
    surprisingly, companies such as Sun Microsystems jumped right on it: it was free,
    it worked, and plenty of new graduates had experience with the technology—including
    Bill Joy, one of Sun’s founders. One company, BSDi, was formed specifically to
    take advantage of BSD Unix.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着你几乎可以用BSD代码做任何你想做的事情。（原BSD许可证确实要求如果软件产品包含BSD授权的代码，用户必须被通知，但这个要求后来被取消了。）甚至没有要求你与原作者共享你的修改！人们可以自由地将BSD纳入专有产品、开源产品或免费产品——甚至可以将它打印在穿孔卡片上，铺满整个草坪。你想制作10,000份BSD光盘并分发给朋友？随便。BSD许可证有时被称为*复制中心*许可证，而不是*版权*，意思是*把这个拿到复印中心，自己复印几份*。毫不奇怪，像Sun
    Microsystems这样的公司立即抓住了这个机会：它是免费的、有效的，而且很多新毕业生都有使用这项技术的经验——其中包括Sun的创始人之一比尔·乔伊。有一家公司BSDi，就是专门为了利用BSD
    Unix而成立的。
- en: '***The AT&T/CSRG/BSDi Iron Cage Match***'
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***AT&T/CSRG/BSDi铁笼大战***'
- en: 'At AT&T, UNIX work continued apace even as the CSRG went on its merry way.
    AT&T took parts of the BSD Unix distribution, integrated them with its UNIX, and
    then relicensed the result back to the universities that provided those improvements.
    This worked well for AT&T until the company was broken up and the resulting companies
    were permitted to compete in the computer software business. AT&T had one particularly
    valuable property: a high-end operating system that had been extensively debugged
    by thousands of people. This operating system had many useful features, such as
    a variety of small but powerful commands, a modern filesystem, job control, and
    TCP/IP. AT&T started a subsidiary, Unix Systems Laboratories (USL), which happily
    started selling Unix to enterprises and charging very high fees for it, all the
    while maintaining the university relationship that had given it such an advanced
    operating system in the first place.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在AT&T，UNIX的工作持续进行，即便CSRG也在其自得其乐地进行着。AT&T将BSD Unix发行版的部分内容与其UNIX系统集成，并将修改后的结果重新授权给提供这些改进的大学。这对AT&T来说运作良好，直到公司被拆分，拆分后的公司被允许在计算机软件行业竞争。AT&T拥有一项特别有价值的资产：一款经过成千上万的人调试过的高端操作系统。这个操作系统具有许多有用的功能，如多种小而强大的命令、现代文件系统、作业控制和TCP/IP。AT&T成立了一家子公司——Unix
    Systems Laboratories（USL），并开始愉快地向企业销售Unix，并收取非常高的费用，同时保持与大学的关系，这也是最初赋予它如此先进操作系统的原因。
- en: Berkeley’s public release of the BSD code in 1992 was met with great displeasure
    from USL. Almost immediately, USL sued the university and the software companies
    that had taken advantage of the software, particularly BSDi. The University of
    California claimed that the CSRG had compiled BSD from thousands of third-party
    contributors unrelated to AT&T, and so it was the CSRG’s intellectual property
    to dispose of as it saw fit.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 伯克利大学在1992年公开发布BSD代码时，遭到了USL的强烈反对。几乎立即，USL将大学和那些利用该软件的软件公司起诉了，特别是BSDi。加利福尼亚大学声称，CSRG是从与AT&T无关的成千上万的第三方贡献者那里编译了BSD，因此这属于CSRG的知识产权，可以自行处置。
- en: This lawsuit motivated many people to grab a copy of BSD to see what all the
    fuss was about, while others started building products on top of it. One of these
    products was 386BSD, which would eventually be used as the core of FreeBSD 1.0.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这场诉讼促使许多人拿起一份BSD，看看究竟是什么引发了如此多的争议，而另一些人则开始在其基础上构建产品。其中之一就是386BSD，最终成为FreeBSD
    1.0的核心。
- en: In 1994, after two years of legal wrangling, the University of California lawyers
    proved that the majority of AT&T UNIX was actually taken in its entirety from
    BSD, rather than the other way around. To add insult to injury, AT&T had actually
    violated the BSD license by stripping the CSRG copyright from files it had assimilated.
    (Only a very special company can violate the world’s most generous software license!)
    A half-dozen files were the only sources of contention, and to resolve these outstanding
    issues, USL donated some of them to BSD while retaining some as proprietary information.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 1994年，在经历了两年的法律争斗后，加利福尼亚大学的律师证明，AT&T UNIX 的大部分内容实际上完全来自 BSD，而不是相反。更糟的是，AT&T
    实际上违反了 BSD 许可证，通过去除 CSRG 版权信息的方式剥夺了它所吸收的文件的版权。（只有非常特别的公司才能违反世界上最慷慨的软件许可证！）最终，争议的焦点仅在于六个文件，为了解决这些悬而未决的问题，USL
    将其中的一些文件捐赠给了 BSD，同时将一些保留为专有信息。
- en: Once the dust settled, a new version of BSD Unix was released to the world as
    BSD 4.4-Lite. A subsequent update, BSD 4.4-Lite2, is the grandfather of the current
    FreeBSD, as well as ancestor to every other BSD variant in use today.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦尘埃落定，新的 BSD Unix 版本作为 BSD 4.4-Lite 发布到了世界上。随后的更新版 BSD 4.4-Lite2 是当前 FreeBSD
    的“祖父”，也是今天所有 BSD 变体的先祖。
- en: '***The Birth of FreeBSD***'
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***FreeBSD 的诞生***'
- en: One early result of BSD was 386BSD, a version of BSD designed to run on the
    cheap 386 processor.^([1](footnote.xhtml#introfn1)) The 386BSD project successfully
    ported BSD to Intel’s 386 processor, but it stalled. After a period of neglect,
    a group of 386BSD users decided to branch out on their own and create FreeBSD
    so they could keep the operating system up to date. (Several other groups started
    their own branches off of 386BSD around the same time, of which only NetBSD remains.)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: BSD 的一个早期成果是 386BSD，这是一个旨在运行在廉价的 386 处理器上的 BSD 版本。^([1](footnote.xhtml#introfn1))
    386BSD 项目成功地将 BSD 移植到了英特尔的 386 处理器上，但项目停滞了。经过一段时间的忽视，一群 386BSD 用户决定独立发展，创建 FreeBSD，以便保持操作系统的更新。（大约在同一时期，其他几个小组也开始从
    386BSD 分支出来，其中只有 NetBSD 至今仍然存在。）
- en: 386BSD and FreeBSD 1 were derived from 1992’s BSD release, the subject of AT&T’s
    wrath. As a result of the lawsuit, all users of the original BSD were requested
    to base any further work on BSD 4.4-Lite2\. BSD 4.4-Lite2 was not a complete operating
    system—in particular, those few files AT&T had retained as proprietary were vital
    to the system’s function. (After all, if those files hadn’t been vital, AT&T wouldn’t
    have bothered!) The FreeBSD development team worked frantically to replace those
    missing files, and FreeBSD 2.0 was released shortly afterward. Development has
    continued ever since.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 386BSD 和 FreeBSD 1 源自1992年发布的 BSD 版本，这是 AT&T 愤怒的源头。由于这场诉讼，所有使用原始 BSD 的用户都被要求基于
    BSD 4.4-Lite2 进行后续工作。BSD 4.4-Lite2 并不是一个完整的操作系统——尤其是那些 AT&T 保留为专有的文件对系统的正常运行至关重要。（毕竟，如果这些文件不重要，AT&T
    根本就不会去管它们！）FreeBSD 开发团队紧急工作，替换了这些丢失的文件，很快就发布了 FreeBSD 2.0。从那时起，开发工作一直在持续进行。
- en: Today, FreeBSD is used across the internet by some of the most vital and visible
    internet-oriented companies. Netflix’s content delivery system runs entirely on
    FreeBSD. IBM, Dell/EMC, Juniper, NetApp, Sony and many other hardware companies
    use FreeBSD in embedded systems where you’d never even know it unless someone
    told you. The fact is, if a company needs to pump serious internet bandwidth,
    it’s probably running FreeBSD or one of its BSD relatives.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，FreeBSD 被一些最重要、最具影响力的互联网公司广泛应用。Netflix 的内容传输系统完全运行在 FreeBSD 上。IBM、Dell/EMC、Juniper、NetApp、Sony
    等众多硬件公司在嵌入式系统中使用 FreeBSD，除非有人告诉你，否则你根本不会察觉。事实上，如果一个公司需要处理大量的互联网带宽，那么它很可能在使用 FreeBSD
    或其 BSD 系列的某个变种。
- en: FreeBSD also finds its way into all sorts of embedded and dedicated-purpose
    devices. Do you have a PlayStation 4? Congratulations, you’re running FreeBSD.
    I hear a root shell is hard to get on one of them, though.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD 还广泛应用于各种嵌入式和专用设备中。你有 PlayStation 4 吗？恭喜，你正在运行 FreeBSD。不过，我听说在这些设备上获取
    root shell 比较困难。
- en: Like smog, spiders, and corn syrup, FreeBSD is all around you; you simply don’t
    see it because FreeBSD just works. The key to FreeBSD’s reliability is the development
    team and user community—which are really the same thing.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 就像雾霾、蜘蛛和玉米糖浆一样，FreeBSD 无处不在；你之所以看不见它，是因为 FreeBSD 就是这么好用。FreeBSD 稳定性的关键在于其开发团队和用户社区——它们实际上是同一个东西。
- en: '**FreeBSD Development**'
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**FreeBSD 开发**'
- en: 'There’s an old saying that managing programmers is like herding cats. Despite
    the fact that the FreeBSD development team is scattered across the world and speaks
    dozens of languages, for the most part, the members work well together as parts
    of the FreeBSD community. They’re more like a pride of lions than a collection
    of house cats. Unlike some other projects, all FreeBSD development happens in
    public. Three groups of people are responsible for FreeBSD’s progress: committers,
    contributors, and users.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 有句老话说，管理程序员就像是在赶猫。尽管FreeBSD开发团队分散在全球各地，且讲着数十种语言，但大多数情况下，成员们作为FreeBSD社区的一部分，能够很好地协作。他们更像是一群狮子，而不是一群家猫。与其他一些项目不同，FreeBSD的所有开发工作都在公开进行。负责FreeBSD进展的有三个群体：提交者、贡献者和用户。
- en: '***Committers***'
  id: totrans-33
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***提交者***'
- en: FreeBSD has about 500 developers, or committers. *Committers* have read-and-write
    access to the FreeBSD master source code repository and can develop, debug, or
    enhance any piece of the system. (The term *committer* comes from their ability
    to *commit* changes to the source code.) Because these commits can break the operating
    system in both subtle and obvious ways, committers carry a heavy responsibility.
    Committers are responsible for keeping FreeBSD working or, at worst, not breaking
    it as they add new features and evaluate patches from contributors. Most of these
    developers are volunteers; only a handful are actually paid to do this painstaking
    work, and most of those people are paid only as it relates to other work. For
    example, Intel employs committers to ensure that FreeBSD properly supports its
    network cards. FreeBSD has a high profile in the internet’s heavy-lifting crowd,
    so Intel needs its cards to work on FreeBSD.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD大约有500名开发者，或称提交者。*提交者*拥有FreeBSD主源代码库的读写权限，可以开发、调试或增强系统的任何部分。（“提交者”一词来源于他们能够*提交*代码更改。）由于这些提交可能会以微妙或明显的方式破坏操作系统，提交者肩负着沉重的责任。提交者负责保持FreeBSD的正常运行，或者至少在加入新功能和评估贡献者的补丁时，不会破坏系统。大多数开发者是志愿者；只有少数人是被支付报酬来做这项艰苦工作的，而且这些人通常与其他工作有关。例如，英特尔雇佣提交者来确保FreeBSD正确支持其网络卡。由于FreeBSD在互联网的重负载群体中有着很高的知名度，因此英特尔需要确保其卡片在FreeBSD上正常工作。
- en: To plug yourself into the beehive of FreeBSD development, consider subscribing
    to the mailing list *[FreeBSD-hackers@FreeBSD.org](mailto:FreeBSD-hackers@FreeBSD.org)*,
    which contains most of the technical discussion. Some of the technical talk is
    broken out into more specific mailing lists—for example, fine details of the networking
    implementation are discussed in *[FreeBSD-net@FreeBSD.org](mailto:FreeBSD-net@FreeBSD.org)*.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要将自己融入FreeBSD开发的“蜂巢”中，可以考虑订阅邮件列表* [FreeBSD-hackers@FreeBSD.org](mailto:FreeBSD-hackers@FreeBSD.org)*，其中包含了大部分的技术讨论。有些技术讨论被分拆到更具体的邮件列表中——例如，网络实现的细节会在*
    [FreeBSD-net@FreeBSD.org](mailto:FreeBSD-net@FreeBSD.org)*中讨论。
- en: Every few years, the committer team elects a small number of its members to
    serve as a core team, or *Core*. Core’s work is simultaneously vital, underrated,
    and misunderstood. Core is theoretically responsible for the overall management
    of FreeBSD, but in practice, it manages little other than resolving personality
    disputes and procedural conflicts among committers. Core also approves new committers
    and delegates responsibility for large parts of FreeBSD to individuals or groups.
    For example, it delegates authority over the ports and packages system to the
    ports management team. Core does not set architectural direction for FreeBSD,
    nor does it dictate processes or procedures; that’s up to the committers, who
    must agree en masse. Core does suggest, cajole, mediate, and inspire, however.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 每隔几年，提交者团队会选举少数成员组成核心团队，或者称为*Core*。Core的工作既至关重要，又常常被低估和误解。理论上，Core负责FreeBSD的整体管理，但实际上，它几乎不涉及其他事务，主要职责是解决提交者之间的个性冲突和程序冲突。Core还负责批准新的提交者，并将FreeBSD的许多部分的责任委托给个人或团队。例如，它将端口和软件包系统的管理权限委托给端口管理团队。Core不会为FreeBSD设定架构方向，也不会规定流程或程序；这些都由提交者们决定，他们必须集体达成一致。然而，Core会提出建议、劝导、调解并激励大家。
- en: Core also experiences the worst part of management. Some of the key functions
    of management in a company are oversight, motivation, and handling problems between
    people. Oversight is provided by the millions of users who will complain loudly
    when anything breaks or behaves unexpectedly, and FreeBSD committers are self-motivated.
    The ugly part of management is settling squabbles between two people, and that’s
    the part Core gets stuck with. The status one gets from saying “I’m in Core” is
    an insufficient reward for having to manage the occasional argument between two
    talented developers who’ve gotten on each other’s nerves. Fortunately such disagreements
    are rare and usually resolved quickly.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Core团队也经历了管理中的最艰难部分。公司管理的几个关键职能包括监督、激励和处理人员之间的问题。监督由成千上万的用户提供，他们在任何东西出故障或表现异常时都会大声抱怨，而FreeBSD的提交者则是自我激励的。管理中的棘手部分是解决两人之间的争执，这正是Core团队需要处理的部分。说“我是Core成员”所获得的地位，并不足以弥补需要管理两位才华横溢的开发人员之间偶尔的争吵，尤其是当他们已经互相惹恼的时候。幸运的是，这种争议很少，并且通常能很快解决。
- en: '***Contributors***'
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***贡献者***'
- en: In addition to the committer team, FreeBSD has thousands of contributors. *Contributors*
    don’t have to worry about breaking the main operating system source code repository;
    they submit their patches for consideration by committers. Committers evaluate
    contributor submissions and decide what to accept and what to reject. A contributor
    who submits many high-quality patches is often asked to become a committer themselves.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提交者团队，FreeBSD还有成千上万的贡献者。*贡献者*不需要担心破坏主操作系统源代码库；他们提交补丁供提交者考虑。提交者会评估贡献者的提交内容，决定接受什么，拒绝什么。提交许多高质量补丁的贡献者通常会被邀请成为提交者。
- en: For example, I spent several years contributing to FreeBSD whenever the urge
    struck me. Any time I feel that I’ve wasted my life, I can look at the FreeBSD
    website and see where my work was accepted by the committers and distributed to
    thousands of people. After I submitted the first edition of this book to the publisher,
    I spent my spare time submitting patches to the FreeBSD FAQ. Eventually, some
    members of the FreeBSD Documentation Project approached me and asked me to become
    a committer. As a reward, I got an email address and the opportunity to humiliate
    myself before thousands of people, once again demonstrating that no good deed
    goes unpunished.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，我曾花了好几年时间在FreeBSD项目中贡献代码，随心所欲地提交补丁。每当我觉得自己浪费了生命时，我会去看看FreeBSD的网站，看到我的工作被提交者接受并分发给成千上万的人。在我将这本书的第一版提交给出版社后，我在空闲时间向FreeBSD
    FAQ提交补丁。最终，FreeBSD文档项目的成员联系了我，并邀请我成为提交者。作为奖励，我得到了一个电子邮件地址，并有机会再次在成千上万的人面前出丑，证明了“好事不常有”的道理。
- en: If I had never contributed anything, I’d remain a user. Nothing’s wrong with
    that, either.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我从未做出任何贡献，我可能仍然是个用户。其实，这也没什么不对。
- en: '***Users***'
  id: totrans-42
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***用户***'
- en: '*Users* are the people who run FreeBSD systems. It’s impossible to realistically
    estimate the number of FreeBSD users. While organizations such as the BSDstats
    Project (*[http://www.bsdstats.org/](http://www.bsdstats.org/)*) make an effort,
    these projects are opt-in. They measure only folks who have installed FreeBSD
    and then installed the software that adds their system to the count. Most users
    download the whole of FreeBSD for free and never register, upgrade, or email a
    mailing list. We have no idea how many FreeBSD users are in the world.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*用户*是那些运行FreeBSD系统的人。实际估算FreeBSD用户的数量几乎是不可能的。尽管像BSDstats项目（*[http://www.bsdstats.org/](http://www.bsdstats.org/)）这样的组织付出了努力，但这些项目是自愿参与的。它们只衡量那些已安装FreeBSD并安装了将其系统添加到统计中的软件的人。大多数用户免费下载安装了完整的FreeBSD，并且从未注册、升级或加入邮件列表。我们无法知道全球有多少FreeBSD用户。'
- en: Since FreeBSD is by far the most popular open source BSD, that’s not an inconsiderable
    number of machines. And since one FreeBSD server can handle hundreds of thousands
    of internet domains, a disproportionate number of sites use FreeBSD as their supporting
    operating system. This means that there are hundreds of thousands, if not millions,
    of FreeBSD system administrators out in the world today.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 由于FreeBSD目前是最受欢迎的开源BSD系统，这意味着使用FreeBSD的机器数量相当庞大。而且，由于一台FreeBSD服务器能够处理成千上万个互联网域名，很多网站将FreeBSD作为其支持的操作系统。这意味着今天世界上有成千上万，甚至可能是百万计的FreeBSD系统管理员。
- en: '**Other BSDs**'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**其他BSD系统**'
- en: FreeBSD might be the most popular BSD, but it’s not the only one. BSD 4.4-Lite2
    spawned several different projects, each with its own focus and purpose. Those
    projects in turn had their own offspring, several of which thrive today.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD可能是最受欢迎的BSD，但它并不是唯一的。BSD 4.4-Lite2衍生出了几个不同的项目，每个项目都有自己的焦点和目标。这些项目又衍生出一些后代，其中有几个至今仍在蓬勃发展。
- en: '***NetBSD***'
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***NetBSD***'
- en: NetBSD is similar to FreeBSD in many ways, and NetBSD and FreeBSD share developers
    and code. NetBSD’s main goal is to provide a secure and reliable operating system
    that can be ported to any hardware platform with minimal effort. As such, NetBSD
    runs on Vixens, PocketPC devices, and high-end SPARC and Alpha servers. I ran
    NetBSD on my HP Jornada handheld computer.^([2](footnote.xhtml#introfn2))
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: NetBSD在许多方面与FreeBSD相似，NetBSD和FreeBSD共享开发人员和代码。NetBSD的主要目标是提供一个安全可靠的操作系统，可以以最小的努力移植到任何硬件平台。因此，NetBSD能够在Vixen、PocketPC设备以及高端SPARC和Alpha服务器上运行。我曾在我的HP
    Jornada手持电脑上运行NetBSD。^([2](footnote.xhtml#introfn2))
- en: '***OpenBSD***'
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***OpenBSD***'
- en: OpenBSD branched off from NetBSD in 1996 with the goal of becoming the most
    secure BSD. OpenBSD was the first to support hardware-accelerated cryptography,
    and its developers are rightfully proud of the fact that their default installation
    was largely immune to remote exploits for several years. The OpenBSD team has
    contributed several valuable pieces of software to the world, including the LibreSSL
    TLS library and the OpenSSH suite used by almost everyone from Linux to Microsoft.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD于1996年从NetBSD分支出来，目标是成为最安全的BSD。OpenBSD是第一个支持硬件加速加密的操作系统，且其开发者为他们的默认安装在数年内几乎免受远程攻击而感到自豪。OpenBSD团队为世界贡献了几项宝贵的软件，包括LibreSSL
    TLS库和OpenSSH套件，几乎每个从Linux到Microsoft的系统都在使用这些工具。
- en: '***DragonFly BSD***'
  id: totrans-51
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***DragonFly BSD***'
- en: DragonFly BSD forked from FreeBSD 4 in 2003\. It developed in a different direction
    than FreeBSD, with a new kernel messaging system. DragonFly BSD has very high
    performance and its HAMMER filesystem supports snapshots and fine-grained history.
    Check out *[http://www.dragonflybsd.org/](http://www.dragonflybsd.org/)* for more
    information.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: DragonFly BSD于2003年从FreeBSD 4分支出来。它的发展方向与FreeBSD不同，采用了一个新的内核消息系统。DragonFly BSD拥有非常高的性能，其HAMMER文件系统支持快照和精细化历史管理。欲了解更多信息，请访问*
    [http://www.dragonflybsd.org/](http://www.dragonflybsd.org/)*。
- en: '***macOS***'
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***macOS***'
- en: Apple’s macOS? That’s right. Apple incorporates large chunks of FreeBSD into
    its macOS on an ongoing basis. If you’re looking for a stable operating system
    with a friendly face and a powerful core, macOS is unquestionably for you. While
    FreeBSD makes an excellent desktop for a computer professional, I wouldn’t put
    it in front of a random user. I would put macOS in front of that same random user
    without a second thought, however, and I’d even feel that I was doing the right
    thing. But macOS includes many things that aren’t at all necessary for an internet
    server, and it runs only on Apple hardware, so I don’t recommend it as an inexpensive
    general-purpose server.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Apple的macOS？没错，Apple持续将大量FreeBSD的代码块集成到其macOS中。如果你在寻找一个稳定的操作系统，既有友好的界面又有强大的内核，macOS无疑适合你。虽然FreeBSD为计算机专业人士提供了一个极好的桌面环境，但我不会把它推荐给普通用户。然而，我毫不犹豫地会把macOS推荐给那些随机的用户，而且我会觉得自己做了正确的选择。但macOS包含了很多对互联网服务器完全没有必要的东西，并且只在Apple硬件上运行，因此我不推荐它作为一个经济实用的通用服务器。
- en: '***FreeBSD’s Children***'
  id: totrans-55
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***FreeBSD的后代***'
- en: Several projects have taken FreeBSD and built other projects or products on
    top of it. The award-winning FreeNAS transforms a commodity system into a network
    fileserver. The pfSense project transforms your system into a firewall with a
    nice web management interface. TrueOS gives FreeBSD a friendly face while supporting
    resource-intensive advanced features, like ZFS, while GhostBSD puts a friendly
    face on equipment with less computing oomph. Other projects like this appear from
    time to time; while not all are successful, I’m sure by the time this book comes
    out, we’ll have one or two more solid members of this group.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一些项目基于FreeBSD开发了其他项目或产品。屡获殊荣的FreeNAS将一台普通系统转变为网络文件服务器。pfSense项目将你的系统转变为带有漂亮网页管理界面的防火墙。TrueOS在支持资源密集型高级功能（如ZFS）的同时，还为FreeBSD增添了一个友好的界面，而GhostBSD则在硬件计算能力较弱的设备上提供了一个友好的界面。类似的其他项目不时出现，虽然并非所有都成功，但我敢肯定，在这本书出版时，我们会看到一两个更为成熟的项目加入这一群体。
- en: '**Other Unixes**'
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**其他Unix系统**'
- en: Several other operating systems derive from or emulate primordial Unix in one
    way or another. This list is by no means exhaustive, but I’ll touch on the high
    points.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 其他一些操作系统或多或少地从原始Unix派生或模仿。这个列表并不全面，但我会简要提到其中的一些亮点。
- en: '***Solaris***'
  id: totrans-59
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Solaris***'
- en: The best-known Unix might be Oracle Solaris. Solaris runs on high-end hardware
    that supports dozens of processors and gobs of disk. (Yes, *gobs* is a technical
    term, meaning *more than you could possibly ever need, and I know very well that
    you need more disk than I think you need*.) Solaris, especially early versions
    of Solaris, had strong BSD roots. Many enterprise-level applications run on Solaris.
    Solaris runs mainly on the SPARC hardware platform manufactured by Sun, which
    allows Sun to support interesting features, such as hot-swappable memory and mainboards.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最著名的Unix可能是Oracle Solaris。Solaris运行在支持数十个处理器和大量磁盘的高端硬件上。（是的，*gobs*是一个技术术语，意思是*比你可能需要的任何数量都多，而且我非常清楚你需要的磁盘比我认为你需要的要多*。）Solaris，尤其是早期版本的Solaris，具有强大的BSD根基。许多企业级应用程序都在Solaris上运行。Solaris主要运行在Sun制造的SPARC硬件平台上，这使得Sun能够支持一些有趣的功能，如热插拔内存和主板。
- en: The Oracle Corporation acquired Solaris when they bought Sun Microsystems in
    2009\. Oracle ceased Solaris development in 2016\. While there’s still an extensive
    installed base of Solaris systems and you can still get Solaris from Oracle, as
    of today, Oracle Solaris has no future.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle公司在2009年收购Sun Microsystems时获得了Solaris。Oracle于2016年停止了Solaris的开发。尽管Solaris系统仍然有广泛的安装基础，并且你仍然可以从Oracle获得Solaris，但截至今天，Oracle
    Solaris已经没有未来了。
- en: '***illumos***'
  id: totrans-62
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***illumos***'
- en: Several years before Oracle purchased Sun Microsystems, Sun open sourced the
    majority of Solaris and sponsored the OpenSolaris project to improve that codebase.
    OpenSolaris ran successfully until Oracle shut down source access and reclaimed
    all of the OpenSolaris resources.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在甲骨文（Oracle）收购Sun Microsystems之前，Sun公司将Solaris的大部分代码开源，并且赞助了OpenSolaris项目以改进该代码库。OpenSolaris成功运行了多年，直到Oracle关闭了源代码访问并收回了所有OpenSolaris资源。
- en: The OpenSolaris code was still available, though. The OpenSolaris community
    forked OpenSolaris into illumos (*[http://illumos.org/](http://illumos.org/)*).
    If you miss Solaris, you can still use a free, modern, Solaris-like operating
    system. FreeBSD includes two important features from OpenSolaris, the Zetabyte
    Filesystem (ZFS) and DTrace, a full-system tracing system.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，OpenSolaris的代码仍然是可以访问的。OpenSolaris社区将OpenSolaris分叉成了illumos (*[http://illumos.org/](http://illumos.org/)*)。如果你怀念Solaris，你仍然可以使用一个免费的、现代的、类似Solaris的操作系统。FreeBSD包括了OpenSolaris中的两个重要特性：Zetabyte文件系统（ZFS）和DTrace，一个全系统追踪系统。
- en: '***AIX***'
  id: totrans-65
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***AIX***'
- en: Another Unix contender is IBM’s entry, AIX. AIX’s main claim to fame is its
    journaling filesystem, which records all disk transactions as they happen and
    allows for fast recovery from a crash. It was also IBM’s standard Unix for many
    years, and anything backed by Big Blue shows up all over the place. AIX started
    life based on BSD, but AT&T has twiddled just about everything so that you won’t
    find much BSD today.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个Unix的竞争者是IBM的AIX。AIX的主要特点是其日志文件系统，它会记录所有磁盘事务并在发生时进行处理，从而允许在崩溃后快速恢复。多年来，它也是IBM的标准Unix系统，而任何由IBM支持的系统都会随处可见。AIX最初是基于BSD的，但AT&T几乎对一切都进行了修改，因此今天你几乎找不到BSD的痕迹了。
- en: '***Linux***'
  id: totrans-67
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Linux***'
- en: Linux is a close cousin of Unix, written from the ground up. Linux is similar
    to FreeBSD in many ways, though FreeBSD has a much longer heritage and is friendlier
    to commercial use than Linux. Linux includes a requirement that any user who distributes
    Linux must make his or her changes available to the end user, while BSD has no
    such restriction. Of course, a Linux fan would say, “FreeBSD is more vulnerable
    to commercial exploitation than Linux.” Linux developers believe in share-and-share-alike,
    while BSD developers offer a no-strings-attached gift to everyone. It all depends
    on what’s important to you.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Linux是Unix的一个近亲，从头开始编写。Linux在很多方面类似于FreeBSD，尽管FreeBSD有着更悠久的历史，并且比Linux更适合商业使用。Linux要求任何分发Linux的用户必须将自己所做的更改提供给最终用户，而BSD则没有这样的限制。当然，一位Linux爱好者会说，“FreeBSD更容易被商业化开发者利用，而Linux则不是。”Linux开发者相信共享精神，而BSD开发者则提供无条件赠送的礼物给大家。这一切都取决于你认为什么更重要。
- en: Many new Unix users have a perception of conflict between the BSD and Linux
    camps. If you dig a little deeper, however, you’ll find that most of the developers
    of these operating systems communicate and cooperate in a friendly and open manner.
    It’s just a hard fringe of users and developers that generate friction, much like
    different soccer teams’ hooligans or different *Star Trek* series’ fans.^([3](footnote.xhtml#introfn3))
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 许多新的Unix用户对BSD和Linux阵营之间的冲突有一定的看法。然而，如果你深入了解，你会发现这些操作系统的大多数开发者都以友好和开放的方式进行交流与合作。只是少数极端的用户和开发者制造了摩擦，类似于不同足球队的球迷暴徒或不同*星际迷航*系列的粉丝。^([3](footnote.xhtml#introfn3))
- en: '***Other Unixes***'
  id: totrans-70
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***其他Unix系统***'
- en: Many Unixes have come and gone, while others stagger on. Past contenders include
    Silicon Graphics’ IRIX, Hewlett-Packard’s HP/UX, Tru64 Unix, and the suicidal
    SCO Group’s UnixWare. Dig further and you’ll find older castoffs, including Apple’s
    A/UX and Microsoft’s Xenix. (Yes, Microsoft was a licensed Unix vendor, back in
    that age when dinosaurs watched the skies nervously and my dad hunted mammoth
    for all the tribal rituals.) Many high-end applications are designed to run best
    on one particular flavor of Unix. All modern Unixes have learned lessons from
    these older operating systems, and today’s Unixes and Unix-like operating systems
    are remarkably similar.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 许多Unix系统已经消失，其他的一些则继续挣扎。过去的竞争者包括Silicon Graphics的IRIX、Hewlett-Packard的HP/UX、Tru64
    Unix和自杀性的SCO Group的UnixWare。进一步挖掘，你会发现一些较老的遗弃产品，包括Apple的A/UX和Microsoft的Xenix。（没错，微软曾是一个获得许可的Unix供应商，那时恐龙还在紧张地看着天空，而我爸还在为部落仪式狩猎猛犸象。）许多高端应用程序被设计成最好运行在某个特定的Unix版本上。所有现代Unix系统都从这些老旧操作系统中吸取了经验教训，今天的Unix系统和类Unix系统非常相似。
- en: '**WHY UNIX-LIKE?**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么是类Unix？**'
- en: One thing to note is that FreeBSD, Linux, and so on are called *Unix-like* instead
    of *Unix*. The term *Unix* is a trademark of The Open Group. For an operating
    system to receive the right to call itself Unix, the vendor must prove that the
    OS complies with the current version of the Single Unix Specification. While FreeBSD
    generally meets the standard, continuous testing and recertification cost money,
    which the FreeBSD Project doesn’t have to spare. Certification as Unix also requires
    that someone sign a paper stating not only that he or she is responsible for FreeBSD’s
    conformance to the Single Unix Specification but that he or she will fix any deviations
    from the standard that are found in the future. FreeBSD’s development model makes
    this even more difficult—bugs are found and deviations are fixed, but there’s
    nobody who can sign a piece of paper that guarantees 100 percent standards compliance.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的一点是，FreeBSD、Linux等操作系统被称为*类Unix*，而不是*Unix*。*Unix*一词是The Open Group的商标。要获得“Unix”这一称号，操作系统的供应商必须证明其操作系统符合当前版本的单一Unix规范。虽然FreeBSD一般符合该标准，但持续的测试和再认证需要费用，而FreeBSD项目没有多余的资金。被认证为Unix还需要有人签署文件，声明他或她不仅对FreeBSD符合单一Unix规范负责，而且承诺将来会修复任何发现的标准偏差。FreeBSD的开发模式使得这一点更加困难——尽管会发现漏洞并修复偏差，但没有人能签署一份保证100%符合标准的文件。
- en: '**FreeBSD’s Strengths**'
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**FreeBSD的优势**'
- en: After all this, what makes FreeBSD unique?
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 经过这些介绍，是什么让FreeBSD与众不同？
- en: '***Portability***'
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***可移植性***'
- en: The FreeBSD Project’s goal is to provide a freely redistributable, stable, and
    secure operating system that runs on the computer hardware that people are most
    likely to have access to. People have ported FreeBSD to a variety of less popular
    platforms as well.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD项目的目标是提供一个可以自由分发、稳定且安全的操作系统，运行在最常见的计算机硬件上。人们还将FreeBSD移植到了多种不太流行的平台上。
- en: The best supported FreeBSD platform is the common 64-bit hardware developed
    by AMD, used by almost everyone, and even copied by Intel. FreeBSD also fully
    supports the older 32-bit computers, such as 486s and all the flavors of Pentiums.
    This book uses 64-bit commodity hardware, or *amd64*, as a reference platform.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 最受支持的FreeBSD平台是由AMD开发的常见64位硬件，几乎所有人都在使用，甚至Intel也在模仿。FreeBSD还完全支持较旧的32位计算机，如486和各种型号的奔腾。
    本书使用64位商用硬件，或称*amd64*，作为参考平台。
- en: FreeBSD runs well on several other hardware architectures but is not completely
    supported yet. These include 32-bit ARM processors and PowerPC. While these other
    platforms are not afterthoughts, they don’t receive the same level of attention
    that x86 and amd64 do. The 64-bit ARM platform is expected to become Tier 1 shortly
    after this book comes out, however.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD 在其他几种硬件架构上也能运行良好，但这些架构目前还不完全支持，包括 32 位 ARM 处理器和 PowerPC。虽然这些平台并非被忽视，但它们并没有像
    x86 和 amd64 那样得到同等的关注。然而，64 位 ARM 平台预计将在本书发布后不久成为一级支持平台。
- en: You can also load FreeBSD on certain older architectures, such as 64-bit SPARC.
    These platforms were once well supported but are on their way out.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以将 FreeBSD 安装到某些较旧的架构上，如 64 位 SPARC。这些平台曾经得到了很好的支持，但现在正逐渐退出市场。
- en: '***Power***'
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***性能***'
- en: Since FreeBSD runs adequately on 486 processors, it runs extremely well on modern
    computers. It’s rather nice to have an operating system that doesn’t demand 8
    cores and 12 gigs of RAM just to run the user interface. As a result, you can
    actually dedicate your hardware to accomplishing real work rather than tasks you
    don’t care about. If you choose to run a pretty graphical interface with all sorts
    of spinning gewgaws and fancy whistles, FreeBSD will support you, and it won’t
    penalize you if you choose otherwise. FreeBSD will also support you on the latest
    *n* -CPU hardware.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 FreeBSD 在 486 处理器上运行良好，因此在现代计算机上表现极为出色。拥有一个不需要 8 个核心和 12 GB 内存来运行用户界面的操作系统是相当不错的。因此，你可以真正将硬件资源用于完成实际工作，而不是那些你不关心的任务。如果你选择运行一个漂亮的图形界面，带有各种旋转的小饰品和花哨的铃声，FreeBSD
    会支持你，而且如果你选择其他方式，它也不会给你带来惩罚。FreeBSD 还会在最新的 *n* -CPU 硬件上为你提供支持。
- en: '***Simplified Software Management***'
  id: totrans-83
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***简化的软件管理***'
- en: FreeBSD also simplifies software management through the packaging system and
    the Ports Collection. Traditionally, running software on a Unix-like system required
    a great deal of expertise. Packages and ports simplify this considerably by automating
    and documenting the install, uninstall, and configuration processes for thousands
    of software packages.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD 还通过软件包系统和 Ports 集合简化了软件管理。传统上，在类似 Unix 的系统上运行软件需要大量的专业知识。软件包和 Ports
    大大简化了这一过程，通过自动化和记录数千个软件包的安装、卸载和配置过程。
- en: We discuss packages in [Chapter 15](ch15.xhtml#ch15) and ports in [Chapter 16](ch16.xhtml#ch16).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[第 15 章](ch15.xhtml#ch15)讨论软件包，在[第 16 章](ch16.xhtml#ch16)讨论 Ports。
- en: '***Customizable Builds***'
  id: totrans-86
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***可定制的构建***'
- en: FreeBSD provides a painless upgrade procedure, but it also lets you precisely
    customize the operating system for your hardware. Companies like Apple do exactly
    this, but they control both the hardware and the software; FreeBSD pulls off the
    same trick on commodity hardware.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD 提供了一个无痛的升级程序，但它也允许你根据硬件精确定制操作系统。像苹果这样的公司也在做这件事，但他们控制着硬件和软件；FreeBSD 在普通硬件上完成了同样的操作。
- en: '***Advanced Filesystems***'
  id: totrans-88
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***高级文件系统***'
- en: A *filesystem* is how information is stored on the physical disk—it’s what maps
    the file *My Resume* to a series of zeros and ones on a hard drive. FreeBSD includes
    two well-supported filesystems, UFS ([Chapter 11](ch11.xhtml#ch11)) and ZFS ([Chapter
    12](ch12.xhtml#ch12)). UFS has been around for multiple decades and is highly
    damage-resistant. ZFS is younger but includes features such as network replication
    and self-healing.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '*文件系统*是信息如何存储在物理磁盘上的方式——它将文件 *我的简历* 映射为硬盘上的一系列零和一。FreeBSD 包含两种广泛支持的文件系统，UFS（[第
    11 章](ch11.xhtml#ch11)）和 ZFS（[第 12 章](ch12.xhtml#ch12)）。UFS 已经存在了几十年，并且非常耐用。ZFS
    虽然较年轻，但包括了如网络复制和自我修复等功能。'
- en: '**Who Should Use FreeBSD?**'
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**谁应该使用 FreeBSD？**'
- en: 'While FreeBSD can be used as a powerful desktop or development machine, its
    history shows a strong bias toward network services: web, mail, file, and ancillary
    applications. FreeBSD is most famous for its strengths as an internet server,
    and it’s an excellent choice as an underlying platform for any network service.
    If major firms such as Netflix count on FreeBSD to provide reliable service, it
    will work as well for you.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 FreeBSD 可以用作强大的桌面或开发机器，但它的历史显示出明显的网络服务偏向：网页、邮件、文件和辅助应用程序。FreeBSD 因其在互联网服务器方面的优势而最为人知，作为任何网络服务的底层平台，它是一个非常出色的选择。如果像
    Netflix 这样的主要公司依赖 FreeBSD 提供可靠的服务，它同样会为你提供稳定的表现。
- en: If you’re thinking of running FreeBSD (or any Unix) on your desktop, you’ll
    need to understand how your computer works. FreeBSD is not your best choice if
    you need point-and-click simplicity. If that’s your goal, get a Mac so you can
    use the power of Unix when you need it and not worry about it the rest of the
    time. If you want to learn FreeBSD, though, running it on your desktop is the
    best way—as we’ll discuss later.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算在桌面上运行 FreeBSD（或任何 Unix），你需要了解你的计算机如何工作。如果你需要简单的点击操作，FreeBSD 可能不是最佳选择。如果这是你的目标，建议你购买一台
    Mac，这样你可以在需要时使用 Unix 的强大功能，而其余时间不必为此担心。不过，如果你想学习 FreeBSD，那么在桌面上运行它是最好的方法——我们稍后会讨论这一点。
- en: '**Who Should Run Another BSD?**'
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**谁应该运行另一个 BSD 系统？**'
- en: NetBSD and OpenBSD are FreeBSD’s closest competitors. Unlike competitors in
    the commercial world, this competition is mostly friendly. FreeBSD, NetBSD, and
    OpenBSD freely share code and developers; some people even maintain the same subsystems
    in multiple operating systems.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: NetBSD 和 OpenBSD 是 FreeBSD 最接近的竞争者。与商业世界的竞争者不同，这种竞争大多是友好的。FreeBSD、NetBSD 和 OpenBSD
    自由地共享代码和开发人员；有些人甚至在多个操作系统中维护相同的子系统。
- en: If you want to use old or oddball hardware, NetBSD is a good choice for you.
    For several years, I ran NetBSD on an ancient SGI workstation that I used as a
    Domain Name System (DNS) and fileserver. It did the job well until the hardware
    finally released a cloud of smoke and stopped working.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用旧的或不常见的硬件，NetBSD 是一个不错的选择。几年间，我曾在一台古老的 SGI 工作站上运行 NetBSD，将它作为域名系统（DNS）和文件服务器使用。它运行得非常好，直到硬件最终冒出一股烟雾并停止工作。
- en: OpenBSD has implemented an impressive variety of security features. Some of
    the tools are eventually integrated into FreeBSD, but that takes months or years.
    Some of the tools can never be duplicated in FreeBSD, however. If you have real
    security concerns and can use a Unix-like system without the feature set FreeBSD
    provides, consider OpenBSD. Take a look at my book *Absolute OpenBSD* (No Starch
    Press, 2013) for an introduction.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD 实现了令人印象深刻的多种安全功能。部分工具最终会被整合到 FreeBSD 中，但这需要几个月甚至几年时间。然而，有些工具永远无法在 FreeBSD
    中复制。如果你有真实的安全担忧，并且可以在没有 FreeBSD 提供的功能集的情况下使用类 Unix 系统，可以考虑 OpenBSD。你可以阅读我的书籍《Absolute
    OpenBSD》（No Starch Press，2013），了解更多介绍。
- en: If you’re just experimenting to see what’s out there, any BSD is good!
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只是想尝试看看有哪些 BSD 系统，任何一个 BSD 都可以！
- en: '**Who Should Run a Proprietary Operating System?**'
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**谁应该运行专有操作系统？**'
- en: Operating systems such as macOS, Windows, AIX, and their ilk are still quite
    popular, despite the open source operating systems gnawing at their market share.
    High-end enterprises are pretty tightly shackled to commercial operating systems.
    While this is slowly changing, you’re probably stuck with commercial operating
    systems in such environments. But slipping in an occasional FreeBSD machine to
    handle basic services, such as monitoring and department file serving, can make
    your life much easier at much lower cost. Companies like Dell/EMC/Isilon have
    built entire businesses using FreeBSD instead of commercial operating systems.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管开源操作系统在不断蚕食市场份额，像 macOS、Windows、AIX 等操作系统仍然非常流行。高端企业通常紧紧依赖于商业操作系统。虽然这种情况正在慢慢变化，但在这些环境中，你可能还是不得不依赖商业操作系统。不过，偶尔加入一台
    FreeBSD 机器来处理基本服务，比如监控和部门文件服务，可以大大简化工作，并且成本更低。像 Dell/EMC/Isilon 这样的公司就通过使用 FreeBSD
    而非商业操作系统建立了整个业务。
- en: Of course, if the software you need runs only on a proprietary operating system,
    your choice is pretty clear. Still, always ask a vendor whether a FreeBSD version
    is available; you might be pleasantly surprised.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果你需要的某个软件仅能在专有操作系统上运行，那么你的选择就非常明确了。尽管如此，始终向供应商询问是否有 FreeBSD 版本；你可能会感到惊喜。
- en: '**How to Read This Book**'
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**如何阅读本书**'
- en: Many computer books are thick and heavy enough to stun an ox, if you have the
    strength to lift them high enough. Plus, they’re either encyclopedic in scope
    or so painfully detailed that they’re difficult to actually read. Do you really
    need to reference a screenshot when you’re told to click OK or accept the license
    agreement? And when was the last time you actually sat down to read the encyclopedia?
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 许多计算机书籍厚重得足以让一头牛晕倒，前提是你有足够的力量将它们抬得足够高。而且，它们的内容要么是百科全书式的广泛覆盖，要么是详细到让人难以真正读完的程度。当你被告知点击“确定”或接受许可协议时，真的需要参考截图吗？你上次真的坐下来阅读百科全书是什么时候？
- en: '*Absolute FreeBSD* is a little different. It’s designed to be read once, from
    front to back. You can skip around if you want to, but each chapter builds on
    what comes before it. While this isn’t a small book, it’s smaller than many popular
    computer books. After you’ve read it once, it makes a decent reference.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*Absolute FreeBSD* 有些不同。它是设计为一次性从头到尾阅读的。你可以跳着读，但每一章都建立在前面的内容基础上。虽然这本书不小，但比许多流行的计算机书籍要小。读完一遍之后，它可以作为一个不错的参考书。'
- en: If you’re a frequent buyer of computer books, please feel free to insert all
    that usual crud about “read a chapter at a time for best learning” and so on.
    I’m not going to coddle you—if you picked up this book, you either have two brain
    cells to rub together or you’re visiting someone who does. (If it’s the latter,
    hopefully your host is smart enough to take this book away from you before you
    learn enough to become dangerous.)
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是计算机书籍的常客，欢迎随意插入一些通常的建议，比如“每次阅读一章以达到最佳学习效果”等等。我不会宠爱你——如果你拿起这本书，说明你要么有两颗脑细胞能互相碰撞，要么你正在拜访一个有这两颗脑细胞的人。（如果是后者，希望你的主人足够聪明，在你学到足够多的知识，变得有点危险之前，就把这本书拿走。）
- en: '**What Must You Know?**'
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你必须知道什么？**'
- en: This book is aimed at the new Unix administrator. Three decades ago, the average
    Unix administrator had kernel programming experience and was working on their
    master’s degree in computer science. Even a decade ago, they were already a skilled
    Unix user with real programming skills and most of a bachelor’s degree in comp
    sci. Today, Unix-like operating systems are freely available, computers are cheaper
    than food, and even 12-year-old children can run Unix, read the source code, and
    learn enough to intimidate older folks. As such, I don’t expect you to know a
    huge amount about Unix before firing it up.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向的是新的 Unix 管理员。三十年前，普通的 Unix 管理员有内核编程经验，并且正在攻读计算机科学硕士学位。即使是十年前，他们已经是熟练的 Unix
    用户，拥有一定的编程技能，并且大多拥有计算机科学学士学位。如今，类 Unix 操作系统已经可以免费获取，计算机比食物还便宜，甚至12岁的孩子也能运行 Unix，阅读源代码，并学到足以让年长者感到自愧不如的知识。因此，我并不指望你在启动系统之前就掌握大量
    Unix 知识。
- en: To use this book to its full potential, you need to have familiarity with some
    basic tasks, such as how to change directories, list files in a directory, and
    log in with a username and password. If you’re not familiar with basic commands
    and the Unix shell, I recommend you begin with a book like *UNIX System Administration
    Handbook* by Evi Nemeth and friends (Prentice Hall PTR, 2017). To make things
    easier on newer system administrators, I include the exact commands needed to
    produce the desired results. If you learn best by example, you should have everything
    you need right here.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分发挥本书的潜力，你需要熟悉一些基本任务，比如如何更改目录、列出目录中的文件，以及如何使用用户名和密码登录。如果你不熟悉基本命令和 Unix shell，建议你从
    Evi Nemeth 等人所著的《*UNIX 系统管理手册*》（Prentice Hall PTR，2017）这本书开始。为了方便新的系统管理员，我提供了产生所需结果的确切命令。如果你更喜欢通过示例学习，你应该在这里找到所有需要的内容。
- en: You’ll also need to know something about computer hardware—not a huge amount,
    mind you, but something. It helps to know how to recognize a SATA cable. Your
    need for this knowledge depends on the hardware you’re using, but if you’re interested
    enough to pick up this book and read this far, you probably know enough.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要了解一些计算机硬件知识——不需要太多，适量即可。了解如何识别 SATA 数据线是有帮助的。你对这些知识的需求取决于你所使用的硬件，但如果你有足够兴趣拿起这本书并读到这里，你大概已经了解得足够多了。
- en: '**For the New System Administrator**'
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**对于新手系统管理员**'
- en: If you’re new to Unix, the best way to learn is to eat your own dog food. No,
    I’m not suggesting that you dine with Rover. If you ran a dog food company, you’d
    want to make a product that your own dog eats happily. If your dog turns his nose
    up at your latest recipe, you have a problem. The point here is that if you work
    with a tool or create something, you should actually use it. The same thing applies
    to any Unix-like operating system, including FreeBSD.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Unix 新手，学习的最好方式就是亲自实践。不是的，我不是建议你和罗威尔一起吃饭。如果你经营一家狗粮公司，你肯定希望生产一种你自己的狗会开心吃的产品。如果你的狗对你最新的配方嗤之以鼻，那你就有问题了。这里的重点是，如果你使用某个工具或创造某样东西，你应该亲自去使用它。同样的道理也适用于任何类
    Unix 操作系统，包括 FreeBSD。
- en: '***Desktop FreeBSD***'
  id: totrans-111
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Desktop FreeBSD***'
- en: 'If you’re serious about learning FreeBSD, I suggest wiping out the operating
    system on your main computer and running FreeBSD instead. No, not a desktop-oriented
    FreeBSD derivative like TrueOS or GhostBSD: run raw FreeBSD. Yes, I know, now
    that dog food doesn’t sound so bad. But learning an operating system is like learning
    a language; total immersion is the quickest and most powerful way to learn. That’s
    what I did, and today I can make a Unix-like system do anything I want. I’ve written
    entire books on a FreeBSD laptop, using the open source text editor XEmacs and
    the LibreOffice.org business suite. I’ve also used FreeBSD to watch movies, rip
    and listen to MP3s, balance my bank accounts, process my email, and surf the web.
    The desktop in my lab has a dozen animated BSD daemons running around the window
    manager, and I occasionally take a break to zap them with my mouse. If this doesn’t
    count as a Stupid Desktop Trick, I don’t know what does.^([4](footnote.xhtml#introfn4))'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: Many Unix system administrators these days come from a Windows background. They’re
    beavering away in their little world when their manager swoops by and says, “You
    can handle one more system, can’t you? Glad to hear it! It’s a Unix box, by the
    way,” and then vanishes into the managerial ether. Once the new Unix administrator
    decides not to quit her job and start a fresh and exciting career as a whale necropsy
    technician, she tentatively pokes at the system. She learns that `ls` is like
    `dir` and that `cd` is the same on both platforms. She can learn the commands
    by rote, reading, and experience. What she can’t learn, coming from this background,
    is how a Unix machine *thinks*. Unix will not adjust to you; you must adjust to
    it. Windows and macOS require similar adjustments but hide them behind a glittering
    facade. With that in mind, let’s spend a little time learning how to think about
    Unix.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '***How to Think About Unix***'
  id: totrans-114
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: These days, most Unix systems come with pretty GUIs out of the box, but they’re
    just eye candy. No matter how graphically delicious the desktop looks, the real
    work happens on the command line. The Unix command line is actually one of Unix’s
    strengths, and it’s responsible for its unparalleled flexibility.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Unix’s underlying philosophy is *many small tools, each of which does a single
    job well*. My mail server’s local programs directory (*/usr/local/bin*) has 262
    programs in it. I installed every one of them, either directly or indirectly.
    Most are small, simple programs that do only one task. This array of small tools
    makes Unix extremely flexible and adaptable. Many commercial software packages
    try to do everything; they wind up with all sorts of capabilities but only mediocre
    performance in their core functions. Remember, at one time you needed to be a
    programmer to use a Unix system, let alone run one. Programmers don’t mind building
    their own tools. The Unix concept of pipes encouraged this.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '**Pipes**'
  id: totrans-117
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: People used to GUI environments, such as Windows and macOS, are probably unfamiliar
    with how Unix handles output and input. They’re used to clicking something and
    seeing either an OK message, an error, nothing, or (all too often) a pretty blue
    screen with nifty high-tech letters explaining in the language called *Geek* why
    the system crashed. Unix does things a little differently.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 习惯了图形界面环境（如 Windows 和 macOS）的人可能不太熟悉 Unix 如何处理输入和输出。他们习惯了点击某个东西并看到一个确认消息、错误、什么都没有，或者（更常见的是）一个漂亮的蓝色屏幕，上面用一种叫做
    *Geek* 的语言解释为什么系统崩溃了。Unix 做事情有些不同。
- en: 'Unix programs have three channels of communication, or *pipes*: standard input,
    standard output, and standard error. Once you understand how each of these pipes
    works, you’re a good way along to understanding the whole system.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Unix 程序有三种通信渠道，或称 *管道*：标准输入、标准输出和标准错误。一旦你理解了这些管道是如何工作的，你就离理解整个系统更进一步了。
- en: '*Standard input* is the source of information. When you’re at the console typing
    a command, the standard input is the data coming from the keyboard. If a program
    is listening to the network, the standard input is the network. Many programs
    can rearrange standard input to accept data from the network, a file, another
    program, the keyboard, or any other source.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*标准输入* 是信息的来源。当你在控制台输入命令时，标准输入就是来自键盘的数据。如果一个程序正在监听网络，那么标准输入就是网络。许多程序可以重新安排标准输入，以接受来自网络、文件、另一个程序、键盘或任何其他来源的数据。'
- en: The *standard output* is where the program’s output is displayed. This is frequently
    the console (screen). Network programs usually return their output to the network.
    Programs might send their output to a file, to another program, over the network,
    or anywhere else available to the computer.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '*标准输出* 是程序的输出显示的地方。通常这是控制台（屏幕）。网络程序通常将它们的输出返回到网络。程序可能将输出发送到文件、另一个程序、网络或计算机可以访问的任何其他地方。'
- en: Finally, *standard error* is where the program sends its error messages. Frequently,
    console programs return their errors to the console; others log errors in a file.
    If you set up a program incorrectly, it just might discard all error information.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，*标准错误* 是程序发送错误信息的地方。通常，控制台程序将错误信息返回给控制台；其他程序则将错误记录在文件中。如果你错误地设置了程序，它可能会丢弃所有错误信息。
- en: These three pipes can be arbitrarily arranged, a concept that’s perhaps the
    biggest hurdle for new Unix users and administrators. For example, if you don’t
    like the error messages appearing on the terminal, you can redirect them to a
    file. If you don’t want to repeatedly type a lot of information into a command,
    you can put the information into a file (so you can reuse it) and dump the file
    into the command’s standard input. Or, better still, you can run a command to
    generate that information and put it in a file, or just pipe (send) the output
    of the first command directly to the second, without even bothering with a file.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这三种管道可以任意排列，这个概念可能是新 Unix 用户和管理员面临的最大障碍。例如，如果你不喜欢在终端上显示的错误信息，你可以将它们重定向到文件。如果你不想重复输入很多信息，你可以把信息放入文件中（以便重用），然后将文件内容导入命令的标准输入。或者，更好的是，你可以运行一个命令生成这些信息并将其放入文件中，或者直接将第一个命令的输出通过管道发送到第二个命令，而根本不需要使用文件。
- en: '**Small Programs, Pipes, and the Command Line**'
  id: totrans-124
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**小程序、管道和命令行**'
- en: Taken to their logical extreme, these input/output pipes and the variety of
    tools seem overwhelming. When I saw a sysadmin type something like the following
    during my initial Unix training session, I gave serious consideration to changing
    careers.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将这些输入/输出管道及各种工具推向其逻辑极限，它们看起来可能令人不知所措。当我在最初的 Unix 培训课程中看到一个系统管理员输入类似以下的内容时，我曾认真考虑过要不要换个职业。
- en: '[PRE1]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Lines of incomprehensible text began spilling across the screen, and they kept
    coming. And worse still, my mentor kept typing as gibberish poured out! If you’re
    from a point-and-click computing environment, a long string of commands like this
    is definitely intimidating. What do all those funky words mean? And an ampersand?
    You want me to learn *what*?
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 一行行难以理解的文本开始在屏幕上滚动，而且源源不断。而更糟糕的是，我的导师还在输入，胡言乱语不停地冒出来！如果你来自一个点选式计算环境，那么像这样的长串命令绝对会让你感到害怕。那些奇怪的词是什么意思？还有一个和符号？你让我学*什么*？
- en: Think of learning to use the command line as learning a language. When learning
    a language, we start with simple words. As we increase our vocabulary, we also
    learn how to string the words together. We learn that placing words in a certain
    order makes sense, and that a different order makes no sense at all. You didn’t
    speak that well at three years old—give yourself some slack and you’ll get there.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Small, simple programs and pipes provide almost unlimited flexibility. Have
    you ever wished you could use a function from one program in another program?
    By using a variety of smaller programs and arranging the inputs and outputs as
    you like, you can make a Unix system behave in any manner that amuses you. Eventually,
    you’ll feel positively hogtied if you can’t just run a command’s output through
    `| sort -rnk 6 | less`.^([5](footnote.xhtml#introfn5))
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '**Everything Is a File**'
  id: totrans-130
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: You can’t be around Unix for very long before hearing that everything is a file.
    Programs, account information, and system configuration are all stored in files.
    Unix has no Windows-style registry; if you back up the files, you have the whole
    system.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: What’s more, the system identifies system hardware as files! Your CD-ROM drive
    is a file, */dev/cd0*. Serial ports appear as files like */dev/cuaa0*. Even virtual
    devices, such as packet sniffers and partitions on hard drives, are files.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: When you have a problem, keep this fact in mind. Everything is a file, or is
    in a file, somewhere on your system. All you have to do is find it!
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '**Notes on the Third Edition**'
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Absolute BSD* (No Starch Press, 2002) was my first technology book and was
    written when the various BSD operating systems had more in common than they wanted
    to admit. The second edition, *Absolute FreeBSD* (No Starch Press, 2007), came
    out after the BSDs had diverged, and detailed FreeBSD’s advances in the previous
    five years. With another decade of growth, FreeBSD has evolved to compete with
    the best commercial operating systems. You’ll find multiple top-tier filesystems.
    Disk management has changed to accommodate new partitioning methods. Virtualization
    is now a thing, and FreeBSD supports it as either a client or a host.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: This growth has driven changes in this book.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: We won’t discuss configuring mail, DNS, or web servers. You have more software
    choices for these tasks than ever before. Entire books have been written about
    those choices and how to use them. I’ve written some of those books. Those topics
    have been dropped to make space for FreeBSD-specific material, like ZFS and jails.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: Some of these new features are hugely complex. Complete coverage of ZFS would
    fill entire books—I know, because I’ve written those books, too. FreeBSD supports
    a whole bunch of special-purpose filesystems, each incredibly useful to the folks
    who need them and totally irrelevant to those who don’t. Rather than write a monster
    tome that nobody would actually read, I’ve elected to cover the material that
    every FreeBSD sysadmin *must* know. If you’re interested in deeper coverage of
    a particular topic, it’s available.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: Some subsystems are undergoing radical revision. I could wait to write this
    book until every FreeBSD subsystem has a stable interface, but then it would come
    out about . . . never. As I write this, the bhyve developers are actively rototilling
    their entire configuration system. Given the choice between glossing over a topic
    and providing flat-out wrong material, I’ve chosen to skip detail on bhyve. I
    hope to be able to delete this paragraph before this book goes to press.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: I’ve ruthlessly excised obsolete information from this edition. For example,
    modern disk drives don’t generally have to worry about write caching. If you discover
    that a piece of advice you remember using doesn’t appear in this book, please
    check FreeBSD’s information resources to see whether that advice is still applicable.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '**Contents of This Book**'
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Absolute FreeBSD*, 3rd Edition contains the following chapters.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 1: Getting More Help](ch01.xhtml#ch01)**'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: This chapter discusses the information resources the FreeBSD Project and its
    devotees provide for users. No one book can cover everything, but knowing how
    to use the many FreeBSD resources on the internet helps fill any gaps you find
    here.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 2: Before You Install](ch02.xhtml#ch02)**'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Getting FreeBSD installed isn’t that hard. Make poor choices during the install,
    though, and you’ll have a system that isn’t suited for your needs. The best way
    to avoid reinstalling is to think about your requirements and make all the decisions
    beforehand so that the actual install doesn’t require any thought.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 3: Installing](ch03.xhtml#ch03)**'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: This chapter gives you an overview of installing FreeBSD using different partitioning
    schemes and filesystems.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 4: Start Me Up! The Boot Process](ch04.xhtml#ch04)**'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: This chapter teaches you about the FreeBSD boot process and how to make your
    system start, stop, and reboot in different configurations.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 5: Read This Before You Break Something Else! (Backup and Recovery)](ch05.xhtml#ch05)**'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: Here we discuss how to back up your data on both a system-wide and a file-by-file
    level, and how to make your changes so that they can be easily undone.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 6: Kernel Games](ch06.xhtml#ch06)**'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: This chapter describes configuring the FreeBSD kernel. Unlike some other operating
    systems, you’re expected to tune FreeBSD’s kernel to best suit your purposes.
    This gives you tremendous flexibility and lets you optimize your hardware’s potential.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 7: The Network](ch07.xhtml#ch07)**'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: Here we discuss the TCP/IP protocol that underlies the modern internet, both
    version 4 and version 6.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 8: Configuring the Network](ch08.xhtml#ch08)**'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: FreeBSD doesn’t only shuffle packets crazy fast, but it also supports virtual
    LANs, link aggregation, and more. We’ll configure all of that here.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 9: Securing Your System](ch09.xhtml#ch09)**'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: This chapter teaches you how to make your computer resist attackers and intruders.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 10: Disks, Partitioning, and GEOM](ch10.xhtml#ch10)**'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: This chapter covers some of the details of working with hard drives in FreeBSD.
    Working with modern hardware means understanding multiple partitioning schemes,
    disk alignment, and FreeBSD’s disk management infrastructure.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 11: The Unix File System](ch11.xhtml#ch11)**'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: UFS has been FreeBSD’s standard filesystem for decades, and the concepts of
    UFS pervade the whole operating system. Whether you intend to use UFS or not,
    you must understand its essentials.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 12: The Z File System](ch12.xhtml#ch12)**'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: ZFS is a newer filesystem very popular on larger systems. If you’re managing
    large amounts of data, you’ll want ZFS.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 13: Foreign Filesystems](ch13.xhtml#ch13)**'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: Every sysadmin needs to mount disks over the network or use ISOs without burning
    them to CD. This chapter takes you through those duties, as well as introducing
    FreeBSD-specific filesystems like devfs.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 14: Exploring /etc](ch14.xhtml#ch14)**'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: This chapter describes the many configuration files in FreeBSD and how they
    operate.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 15: Making Your System Useful](ch15.xhtml#ch15)**'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: Here I describe the packages system that FreeBSD uses to manage add-on software.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 16: Customizing Software with Ports](ch16.xhtml#ch16)**'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes the prebuilt packages won’t cover everything you need. You can leverage
    FreeBSD’s package-building system to create your own software packages, tuned
    to meet your exact needs.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 17: Advanced Software Management](ch17.xhtml#ch17)**'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: This chapter discusses some of the finer points of running software on FreeBSD
    systems.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 18: Upgrading FreeBSD](ch18.xhtml#ch18)**'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: This chapter teaches you how to use FreeBSD’s upgrade process. The upgrade system
    is among the most remarkable and smooth of any operating system.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 19: Advanced Security Features](ch19.xhtml#ch19)**'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: Here we discuss some of the more interesting security features found in FreeBSD.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 20: Small System Services](ch20.xhtml#ch20)**'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: Here we discuss some of the small programs you’ll need to manage in order to
    use FreeBSD properly.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 21: System Performance and Monitoring](ch21.xhtml#ch21)**'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: This chapter covers some of FreeBSD’s performance-testing and troubleshooting
    tools and shows you how to interpret the results. We also discuss logging and
    FreeBSD’s SNMP implementation.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 22: Jails](ch22.xhtml#ch22)**'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: FreeBSD has a process-isolation subsystem, much like Linux and Solaris containers,
    called *jails*. We’ll cover the jail system and how you can leverage it for system
    security.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD 拥有一个类似于 Linux 和 Solaris 容器的进程隔离子系统，叫做 *jails*。我们将介绍 jail 系统，以及如何利用它提高系统安全性。
- en: '**[Chapter 23: The Fringe of FreeBSD](ch23.xhtml#ch23)**'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第23章：FreeBSD的边缘](ch23.xhtml#ch23)**'
- en: This chapter teaches you some of the more interesting tricks you can do with
    FreeBSD, such as running systems without disks and with tiny disks, as well as
    cloud-friendly features, like libxo.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将教你一些关于 FreeBSD 的有趣技巧，例如如何在没有磁盘或使用小磁盘的情况下运行系统，以及一些适合云环境的功能，比如 libxo。
- en: '**[Chapter 24: Problem Reports and Panics](ch24.xhtml#ch24)**'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第24章：问题报告与崩溃](ch24.xhtml#ch24)**'
- en: This chapter teaches you how to deal with those rare occasions when a FreeBSD
    system fails, how to debug problems, and how to create a useful problem report.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将教你如何处理 FreeBSD 系统出现故障的罕见情况，如何调试问题，以及如何创建一个有用的问题报告。
- en: You’ll also find an annotated bibliography, an afterword, and a really spiffy
    professionally prepared index.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 你还会找到一份注释书目、后记以及一份非常棒的专业编制索引。
- en: Okay, enough introductory stuff. Onward!
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，前言就到这里。接下来继续！
