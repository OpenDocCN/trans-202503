- en: '7'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: OPERATIONS SECURITY
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/common.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Known in military and government circles as OPSEC, operations security is a
    process you use to protect your information. Although we’ve discussed certain
    elements of operations security previously, such as using encryption to protect
    data, the entire operations security process encompasses much more.
  prefs: []
  type: TYPE_NORMAL
- en: Operations security involves not only putting security measures in place but
    also identifying what exactly you need to protect and what to protect it against.
    If you jump directly to implementing protections, you might fail to direct your
    efforts toward the most critical information. Moreover, when putting security
    measures in place, you should implement measures that are relative to the value
    of what you are protecting. If you apply the same level of security to everything,
    you may be overprotecting some resources that are not of high value and underprotecting
    resources of much greater value.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, I’ll discuss the US government’s guidelines for conducting
    operations security. I’ll then outline the origins of some of these concepts and
    talk about everyday uses for them as tools for protecting yourself and your organizations.
  prefs: []
  type: TYPE_NORMAL
- en: The Operations Security Process
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The operations security process laid out by the US government has five parts,
    as shown in [Figure 7-1](#ch7fig1).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/07fig01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-1: The operations security process*'
  prefs: []
  type: TYPE_NORMAL
- en: First, you identify the information that needs protection. You then analyze
    the threats and vulnerabilities that might impact it and develop methods of mitigating
    those threats and vulnerabilities. Although the process is relatively simple,
    it’s effective. Let’s go through these steps one by one.
  prefs: []
  type: TYPE_NORMAL
- en: '*Identification of Critical Information*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The first and most important step in the operations security process is to identify
    your most critical information assets. Any given business, individual, military
    operation, process, or project is bound to have at least a few critical items
    of information on which everything else depends. For a soft drink company, it
    might be their secret recipe. For an application vendor, it might be their source
    code, while for a military operation, it might be an attack timetable. You should
    be identifying the assets that would cause you the most harm if exposed.
  prefs: []
  type: TYPE_NORMAL
- en: '*Analysis of Threats*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The next step is to analyze any threats related to the critical information
    you identified. Remember from [Chapter 1](ch01.xhtml) that a threat is something
    that has the potential to cause you harm. Using your list of critical information,
    you might evaluate the harm caused if critical information were exposed, as well
    as who might exploit that exposure. This is the same process many military and
    government organizations use to classify information and determine who can see
    it.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if you own a software company, you might identify the proprietary
    source code of your product as critical information. Exposing this critical information
    could make the company vulnerable to attackers and competition. Attackers might
    be able to determine the scheme used to generate license keys and then develop
    a utility that allows them to pirate your software, costing revenue. Competitors
    might use exposed source code to copy your software’s proprietary features in
    their own applications, or they might copy large portions of your application
    and sell it themselves.
  prefs: []
  type: TYPE_NORMAL
- en: Repeat this step for each item of critical information, for each party that
    might take advantage of it if it were exposed, and for each use they might make
    of the information. As you can see, the more information assets you identify as
    critical, the more involved this step becomes. In some circumstances, you may
    find that only a limited number of parties can make use of the information and
    then only in a limited number of ways; in other cases, you may find the exact
    opposite. For example, a secret chocolate-chip cookie recipe, intended for mass
    production on an industrial food processing line, would be of use only to another
    organization operating in this type of industry. The same recipe composed and
    scaled for home use would be usable by anyone.
  prefs: []
  type: TYPE_NORMAL
- en: '*Analysis of Vulnerabilities*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Vulnerabilities are weaknesses that others can exploit to harm you. The third
    step in operations security is analyzing the vulnerabilities in the protections
    you’ve put in place to secure your information assets. You’ll do this by looking
    at how you interact with these assets and what areas an attacker might target
    to compromise them.
  prefs: []
  type: TYPE_NORMAL
- en: When analyzing the vulnerabilities affecting your source code, you might find
    that the security controls on the source code aren’t very rigorous and that it’s
    possible for anyone with access to the operating system or network shares to access,
    copy, delete, or alter it. This might make it possible for an attacker who has
    compromised the system to copy, tamper with, or entirely delete the source code.
    Or the vulnerability might render the files vulnerable to accidental alteration
    while the system is undergoing maintenance.
  prefs: []
  type: TYPE_NORMAL
- en: You might also find there are no policies in place that regulate where the source
    code should be stored, whether copies of it should exist on other systems or on
    backup media, or how it should be protected in general. These issues might create
    multiple vulnerabilities and could lead to serious security breaches.
  prefs: []
  type: TYPE_NORMAL
- en: '*Assessment of Risks*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Next, you decide what issues you need to address in the rest of the operations
    security process. As discussed in [Chapter 1](ch01.xhtml), risk occurs when you
    have a matching threat and vulnerability. In the software source code example,
    one of the threats was the potential exposure of the application source code.
    The vulnerabilities were poor controls on access to the source code and a lack
    of a policy dictating how exactly to control access. These two vulnerabilities
    could lead to the exposure of your critical information to your competitors or
    attackers.
  prefs: []
  type: TYPE_NORMAL
- en: Again, you need a matching threat and vulnerability to constitute a risk. If
    the confidentiality of your source code wasn’t a goal—for instance, if you were
    creating an open source project and the source code were freely available to the
    public—you wouldn’t have a risk. Likewise, if your source code were subject to
    stringent security requirements that made it nearly impossible to release in an
    unauthorized manner, you wouldn’t have a risk, either, as the vulnerability would
    not be present.
  prefs: []
  type: TYPE_NORMAL
- en: '*Application of Countermeasures*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Once you’ve discovered risks to your critical information, you can put measures
    in place to mitigate them. In operations security, these are called *countermeasures*.
    As discussed, to constitute a risk, you need a matching set of threats and vulnerabilities.
    When you construct a countermeasure for a risk, you need to mitigate either the
    threat or the vulnerability at the bare minimum.
  prefs: []
  type: TYPE_NORMAL
- en: In the source code example, the threat was that your source code might be exposed
    to your competitors or attackers, and the vulnerability was the poor set of security
    controls you had in place to protect it. In this instance, there is not much that
    you can do to protect yourself from the threat itself without changing the nature
    of your application entirely, so you can’t mitigate the threat. You can, however,
    put measures in place to mitigate the vulnerability.
  prefs: []
  type: TYPE_NORMAL
- en: For example, to mitigate this vulnerability, you can institute stronger measures
    to control access to the code and establish a set of rules for how to control
    access. Once you break the threat/vulnerability pair like this, you’ll no longer
    have a serious risk.
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to note that this is an *iterative* process, and you’ll likely
    need to repeat the cycle more than once to fully mitigate any issues. Each time
    you go through the cycle, you take into account the knowledge and experience you
    gained from your previous mitigation efforts, allowing you to adjust your solution
    for an even greater level of security. You’ll also need to revisit this process
    when your environment changes and new factors arise.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re familiar with risk management, you might have noticed that the operations
    security cycle lacks a step that evaluates the effectiveness of the countermeasures.
    I believe this step is implied throughout the entire operations security process.
    However, the process is certainly not set in stone, and you can include this step
    if you see the benefits of doing so.
  prefs: []
  type: TYPE_NORMAL
- en: Laws of Operations Security
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Kurt Haase, a former employee of the Nevada Operations Office of the Department
    of Energy, distilled the operations security process into three rules, called
    the *laws of OPSEC*. These laws are another way of thinking about the cycle discussed
    earlier, and while not necessarily the most *important* parts of the process,
    they do serve to highlight some of operation security’s main concepts.
  prefs: []
  type: TYPE_NORMAL
- en: '*First Law: Know the Threats*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The first law of operations security is “If you don’t know the threat, how do
    you know what to protect?”[¹](notes.xhtml#ch07fn1) In other words, you need to
    be aware of both the actual and potential threats facing your critical data. This
    law maps directly to the second step in the operations security process.
  prefs: []
  type: TYPE_NORMAL
- en: Ultimately, as discussed earlier, each piece of information could be susceptible
    to its own threat. Threats might even depend on your location. This is particularly
    true when it comes to cloud-based services. For example, even if you’ve enumerated
    all the threats facing your critical data for a location, you might encounter
    new threats if you replicate that data across multiple storage areas, in multiple
    countries. That’s because different parties may have easier access in one area,
    or the relevant laws may differ significantly from one location to another.
  prefs: []
  type: TYPE_NORMAL
- en: '*Second Law: Know What to Protect*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: “If you don’t know what to protect, how do you know you are protecting it?”[²](notes.xhtml#ch07fn2)
    This law of operations security points to the need to evaluate your information
    assets and determine what exactly you might consider to be your critical information.
    This second law maps to the first step in the operations security process.
  prefs: []
  type: TYPE_NORMAL
- en: Most government environments mandate the identification and classification of
    information. Each item of information—perhaps a document or file—is assigned a
    label, like *classified* or *top secret*, that identifies the sensitivity of its
    contents. Such labeling makes the task of identifying your critical information
    considerably easier, but unfortunately, few people outside the government use
    that system.
  prefs: []
  type: TYPE_NORMAL
- en: Some organizations in the business world might have information classification
    policies, but, in my experience, they usually implement such labeling sporadically.
    A few civilian industries, such as those that deal with data that has federally
    mandated requirements for protection, like financial or medical data, do classify
    information, but these are the exceptions rather than the rule.
  prefs: []
  type: TYPE_NORMAL
- en: '*Third Law: Protect the Information*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The third and last law of operations security is “If you are not protecting
    [the information], … THE DRAGON WINS!”[³](notes.xhtml#ch07fn3) This law addresses
    the necessity of the operations security process overall. If you don’t take steps
    to protect your information from the dragon (your adversaries or competitors),
    they win by default.
  prefs: []
  type: TYPE_NORMAL
- en: Cases of the “dragon” winning are unfortunately common. Security breaches show
    up constantly in the news and on websites that track breaches, such as Privacy
    Rights Clearinghouse (*[https://www.privacyrights.org/](https://www.privacyrights.org/)*).
    In many cases, a breach was the result of simple carelessness and noncompliance
    with the most basic security measures.
  prefs: []
  type: TYPE_NORMAL
- en: This is true for the breach of the California-based email marketing company
    SaverSpy discovered by a security researcher in September 2018\. The breach contained
    more than 43GB of user data, including the names, email addresses, physical addresses,
    and gender of more than 10 million Yahoo users.[⁴](notes.xhtml#ch07fn4)
  prefs: []
  type: TYPE_NORMAL
- en: I’d like to think that hackers broke into the system and stole this information
    in the dark of night. But in fact, the researcher discovered the data while sifting
    through compromised servers on Shodan,[⁵](notes.xhtml#ch07fn5) a search engine;
    it turned out the servers containing this data were wide open and unprotected
    on the internet. To add insult to injury, the database also contained a table
    with a ransom note from an attacker who had found the exposed servers earlier.
  prefs: []
  type: TYPE_NORMAL
- en: The operations security process would have quickly identified critical data
    sets such as these, giving you a much better chance of avoiding such a situation.
    The security measures needed to prevent breaches are neither complex nor expensive
    and can save you a great deal of reputational and financial damage in the long
    run.
  prefs: []
  type: TYPE_NORMAL
- en: Operations Security in Our Personal Lives
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The operations security process can be useful not only in both business and
    government but also in our personal lives. You may not consciously work through
    all the parts of the operations security cycle to protect your personal data,
    but you still use some of the methods discussed.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, if you’re going on vacation for several weeks and leaving behind
    an empty house, you might take steps to ensure some level of security while you’re
    gone. You might start by making the following list of indicators that the house
    is unoccupied and vulnerable:'
  prefs: []
  type: TYPE_NORMAL
- en: No lights on at night
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No noise coming from the house
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Newspapers building up in the driveway
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mail building up in the mailbox
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No car in the driveway
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No people coming and going
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You might then take steps to ensure that you don’t show your vulnerabilities
    so obviously to burglars or vandals. For example, you could set timers on your
    lights so that they turn on and off at various times throughout the house. You
    may also set a timer on the television or radio so that you can generate noise
    that makes it seem like someone is home. To solve the problem of mail and newspapers
    stacking up, you can suspend their delivery while you’re gone. To make the house
    appear occupied, you might also have a friend drop by every few days to water
    the plants and perhaps move a car in and out of the garage every now and then.
  prefs: []
  type: TYPE_NORMAL
- en: '**OPERATIONS SECURITY AND SOCIAL MEDIA**'
  prefs: []
  type: TYPE_NORMAL
- en: In the age of social networking tools, you see personal operations security
    violations on a disturbingly regular basis. Many of these tools are now equipped
    with location awareness functionality that allows our computers and portable devices
    to report our physical locations when we update our statuses.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, people often post that they’re going to lunch, leaving on vacation,
    and so on. In both instances, we’ve given the general public a very clear signal
    of when we might not be home or when we might be found at a particular location—a
    bad practice from an operational security standpoint.
  prefs: []
  type: TYPE_NORMAL
- en: Although you won’t enforce these OPSEC measures to your personal data as strictly
    as the US government, the process is the same. When it comes to your logical assets,
    taking these approaches is especially important.
  prefs: []
  type: TYPE_NORMAL
- en: Your personal information travels through a staggering number of computer systems
    and networks. Although you might take steps to mitigate security threats by being
    careful about where and how you share your personal information over the internet,
    or perhaps by shredding mail that contains sensitive information before throwing
    it away, you’re unfortunately not in control of all the ways your personal information
    might be exposed.
  prefs: []
  type: TYPE_NORMAL
- en: As you saw with the SaverSpy breach earlier in this chapter, you can’t always
    trust organizations to handle your information carefully. That said, if you make
    plans to secure your personal data before breaches occur, you can at least mitigate
    the issue to a certain extent. For instance, you can put monitoring services in
    place to watch your credit reports, and you can file fraud reports with these
    same agencies in the case of a breach. You can also watch your financial accounts
    carefully. Although such steps might not be complex or terribly difficult to carry
    out, they can make a big difference if implemented before the problem has occurred.
  prefs: []
  type: TYPE_NORMAL
- en: Origins of Operations Security
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Although the operations security process as implemented in the US government
    may be a recent idea, its foundational concepts are ancient. You can point to
    nearly any military or large commercial organization in any period in history
    and find the principles of operations security present. In this section, I’ll
    cover a few examples that were important to the development of modern operations
    security.
  prefs: []
  type: TYPE_NORMAL
- en: '*Sun Tzu*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Sun Tzu was a Chinese military general who lived in the sixth century BCE. For
    some, Sun Tzu’s work *The Art of War* is a kind of bible for conducting military
    operations. *The Art of War* has spawned countless spin-offs, many of which apply
    the principles it preaches to a variety of situations, including information security.
    The text documents some of the earliest examples of operations security principles.
    Let’s look at just a couple of these.
  prefs: []
  type: TYPE_NORMAL
- en: The first passage is, “If I am able to determine the enemy’s dispositions while
    at the same time I conceal my own, then I can concentrate and he must divide.”
    [⁶](notes.xhtml#ch07fn6) This is a simple admonition to discover information held
    by our opponents while protecting our own.
  prefs: []
  type: TYPE_NORMAL
- en: The second passage is, “(When) making tactical dispositions, the highest pitch
    you can attain is to conceal them; conceal your dispositions, and you will be
    safe from prying of the subtlest spies, from the machinations of the wisest brains.”
    [⁷](notes.xhtml#ch07fn7) Here, Sun Tzu is saying we should conduct our strategic
    planning in an area that is difficult for our opponents to observe—in this case,
    the highest point we can find. Again, he recommends protecting our planning activities
    so that they don’t leak to those that might oppose our efforts.
  prefs: []
  type: TYPE_NORMAL
- en: Although written a long time ago, both these passages agree closely with the
    laws of operations security that we discussed earlier in the chapter—namely, know
    the threats, know what to protect, and then protect it.
  prefs: []
  type: TYPE_NORMAL
- en: '*George Washington*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: George Washington, the first president of the United States, was an astute and
    skilled military commander who promoted good operational security practices. He
    is known in the operations security community for having said, “Even minutiae
    should have a place in our collection, for things of a seemingly trifling nature,
    when enjoined with others of a more serious cast, may lead to valuable conclusion,”[⁸](notes.xhtml#ch07fn8)
    which means that even small items of information, which are worthless individually,
    can be of great value in combination.
  prefs: []
  type: TYPE_NORMAL
- en: 'A modern example of this idea is the three main items of information that constitute
    an identity: a name, an address, and a Social Security number. Individually, these
    items are completely useless. You could take any one of them in isolation and
    put it up on a billboard for the world to see and not be any worse for having
    done so. In combination, however, these three items are sufficient for an attacker
    to steal your identity and use it for all manners of fraudulent activities.'
  prefs: []
  type: TYPE_NORMAL
- en: Washington is also quoted as having said, “For upon Secrecy, Success depends
    in most Enterprizes of the kind, and for want of it, they are generally defeated.”[⁹](notes.xhtml#ch07fn9)
    In this case, he was referring to an intelligence gathering program and the need
    to keep its activities secret. He is often considered to have been very well informed
    on intelligence issues and is credited with maintaining an extensive organization
    to execute such activities, long before any such formal capabilities existed.
  prefs: []
  type: TYPE_NORMAL
- en: '*Vietnam War*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: During the Vietnam War, the United States realized that information regarding
    troop movements, operations, and other military activities was being leaked to
    the enemy. Clearly, in most environments, military or otherwise, having our opponents
    gain knowledge of our activities is a bad thing, particularly when lives may be
    at stake. To stop the leak, authorities conducted a study, code-named Purple Dragon,[^(10)](notes.xhtml#ch07fn10)
    to discover its cause.
  prefs: []
  type: TYPE_NORMAL
- en: 'Ultimately, the study reached two main conclusions: first, in that environment,
    eavesdroppers and spies abounded, and second, the military needed a survey to
    reveal the extent of the information loss. The survey asked questions about the
    information itself and how vulnerable the information was. The team conducting
    these surveys and analyses coined the term *operations security* and its acronym
    *OPSEC*. Additionally, they saw the need for an operations security group to serve
    as a body that would espouse the principles of operations security to the different
    organizations within the government and work with them to get them established.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Business*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In the late 1970s and early 1980s, some of the operations security concepts
    used in military and government began to take root in the commercial world. Industrial
    espionage—spying on business competition to gain a competitive advantage—is an
    old practice, but as the concept became more structured in the military world,
    it became more structured in the business world as well. In 1980, Michael E. Porter,
    a professor at Harvard Business School, published a book titled *Competitive Strategy:
    Techniques for Analyzing Industries and Competitors*. This text, now nearing its
    60th printing, set the groundwork for what we now call competitive intelligence.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Competitive intelligence* is generally defined as conducting intelligence
    gathering and analysis to support business decisions. The counterpart of competitive
    intelligence, *competitive counterintelligence*, includes the operations security
    principles that were laid out by the government only a few years previously and
    is an active part of conducting business to this day. You can see these principles
    at work in many large corporations, as well as in groups such as the Strategic
    and Competitive Intelligence Professionals (SCIP)[^(11)](notes.xhtml#ch07fn11)
    professional organization and the Ecole de Guerre Economique (or Economic Warfare
    School), located in Paris.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Interagency OPSEC Support Staff*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: After the end of the Vietnam War, the group that conducted Purple Dragon and
    developed the government OPSEC principles tried to get support for an organization
    that would work with the various government agencies on operations security. They
    had little success in interesting the military institutions and were unable to
    gain official support from the US National Security Agency. Fortunately, through
    the efforts of the US Department of Energy and the US General Services Administration,
    they garnered sufficient backing to move forward. At this point, they drafted
    a document to put in front of then-first-term-President Ronald Reagan.
  prefs: []
  type: TYPE_NORMAL
- en: These efforts were delayed due to Reagan’s reelection campaign, but shortly
    afterward, in 1988, he signed the Interagency OPSEC Support Staff (IOSS) into
    being with the National Decision Security Directive 298.[^(12)](notes.xhtml#ch07fn12)
    Today, the IOSS is responsible for a wide variety of OPSEC awareness and training
    efforts, such as the Naval Operations Security poster shown in [Figure 7-2](#ch7fig2).[^(13)](notes.xhtml#ch07fn13)
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/07fig02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-2: OPSEC awareness poster*'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The origins of operational security stretches far back into recorded history.
    You can find such principles espoused in the writings of Sun Tzu in the sixth
    century BCE, in the words of George Washington, in writings from the business
    community, and in the US government’s methodologies. Although formalized operations
    security processes are a much more recent creation, the principles on which they
    are founded are ancient indeed.
  prefs: []
  type: TYPE_NORMAL
- en: The operations security process consists of five major steps. First, you start
    by identifying your most critical information so that you know what you need to
    protect. You then analyze your situation to determine what threats and vulnerabilities
    exist in your environment. Once you know your threats and vulnerabilities, you
    can attempt to determine what risks you might face. You have a risk whenever your
    threats and your vulnerabilities match. When you know the risks, you can plan
    countermeasures to mitigate your risks.
  prefs: []
  type: TYPE_NORMAL
- en: To summarize this process, you can also look to the laws of OPSEC penned by
    Kurt Haase. His three laws cover some of the high points of the process you might
    want to internalize.
  prefs: []
  type: TYPE_NORMAL
- en: You also use the operations security principles used in business and in government
    in your personal life, even though you may not do so in a formal manner. It’s
    important to identify your critical information and plan measures to protect it,
    especially with the sheer volume of personal information shared through systems
    and networks.
  prefs: []
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Why is it important to identify your critical information?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the first law of OPSEC?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the function of the IOSS?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What part did George Washington play in the creation of operations security?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the operations security process, what is the difference between assessing
    threats and assessing vulnerabilities?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why might you want to use information classification?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you have cycled through the entire operations security process, are you
    finished?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From where did the first formal OPSEC methodology arise?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the origin of operations security?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Define competitive counterintelligence.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
