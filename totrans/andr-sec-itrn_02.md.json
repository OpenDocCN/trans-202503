["```\n$ **pm list permissions**\nAll Permissions:\n\npermission:android.permission.REBOOT➊\npermission:android.permission.BIND_VPN_SERVICE➋\npermission:com.google.android.gallery3d.permission.GALLERY_PROVIDER➌\npermission:com.android.launcher3.permission.RECEIVE_LAUNCH_BROADCASTS➍\n--*snip*--\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest \n\n    package=\"com.example.app\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\" >\n\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n    --*snip*--\n    <application android:name=\"SampleApp\" ...>\n    --*snip*--\n    </application>\n</manifest>\n```", "```\n<package name=\"com.google.android.apps.translate\"\n         codePath=\"/data/app/com.google.android.apps.translate-2.apk\"\n         nativeLibraryPath=\"/data/app-lib/com.google.android.apps.translate-2\"\n         flags=\"4767300\" ft=\"1430dfab9e0\" it=\"142cdf04d67\" ut=\"1430dfabd8d\"\n         version=\"30000028\"\n         userId=\"10204\"➊\n         installer=\"com.android.vending\">\n\n    <sigs count=\"1\">\n        <cert index=\"7\" />➋\n    </sigs>\n    <perms>➌\n        <item name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n        <item name=\"android.permission.USE_CREDENTIALS\" />\n        <item name=\"android.permission.READ_SMS\" />\n        <item name=\"android.permission.CAMERA\" />\n        <item name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n        <item name=\"android.permission.INTERNET\" />\n        <item name=\"android.permission.MANAGE_ACCOUNTS\" />\n        <item name=\"android.permission.GET_ACCOUNTS\" />\n        <item name=\"android.permission.ACCESS_NETWORK_STATE\" />\n        <item name=\"android.permission.RECORD_AUDIO\" />\n    </perms>\n\n    <signing-keyset identifier=\"17\" />\n    <signing-keyset identifier=\"6\" />\n</package>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<permissions>\n    --*snip*--\n    <permission name=\"android.permission.INTERNET\" >➊\n        <group gid=\"inet\" />\n    </permission>\n\n    <permission name=\"android.permission.WRITE_EXTERNAL_STORAGE\" >➋\n        <group gid=\"sdcard_r\" />\n        <group gid=\"sdcard_rw\" />\n    </permission>\n\n    <assign-permission name=\"android.permission.MODIFY_AUDIO_SETTINGS\"\n                                                  uid=\"media\" />➌\n    <assign-permission name=\"android.permission.ACCESS_SURFACE_FLINGER\"\n                                                  uid=\"media\" />➍\n    --*snip*--\n</permissions>\n```", "```\n--*snip*-\n#define AID_ROOT              0  /* traditional unix root user */\n#define AID_SYSTEM         1000  /* system server */\n--*snip*--\n#define AID_SDCARD_RW      1015  /* external storage write access */\n#define AID_SDCARD_R       1028  /* external storage read access */\n#define AID_SDCARD_ALL     1035  /* access all users external storage */\n--*snip*--\n#define AID_INET           3003  /* can create AF_INET and AF_INET6 sockets */\n--*snip*--\n\nstruct android_id_info {\n    const char *name;\n    unsigned aid;\n};\n\nstatic const struct android_id_info android_ids[] = {\n    { \"root\",          AID_ROOT, },\n    { \"system\",        AID_SYSTEM, },\n    --*snip*--\n    { \"sdcard_rw\",     AID_SDCARD_RW, },➊\n    { \"sdcard_r\",      AID_SDCARD_R, },➋\n    { \"sdcard_all\",    AID_SDCARD_ALL, },\n    --*snip*--\n    { \"inet\",          AID_INET, },➌\n};\n```", "```\npid = fork();\n\nif (pid == 0) {\n    int err;\n    /* The child process */\n    err = setgroupsIntarray(gids);➊\n    err = setrlimitsFromArray(rlimits);➋\n    err = setresgid(gid, gid, gid);➌\n    err = setresuid(uid, uid, uid);➍\n    err = setCapabilities(permittedCapabilities, effectiveCapabilities);➎\n    err = set_sched_policy(0, SP_DEFAULT);➏\n    err = setSELinuxContext(uid, isSystemServer, seInfo, niceName);➐\n    enableDebugFeatures(debugFlags);➑\n}\n```", "```\n$ **ps**\nUSER      PID   PPID  VSIZE  RSS     WCHAN    PC         NAME\nroot       1     0     680    540   ffffffff 00000000 S /init➊\n--*snip*--\nroot       181   1     858808 38280 ffffffff 00000000 S zygote➋\n--*snip*--\nradio      1139  181   926888 46512 ffffffff 00000000 S com.android.phone\nnfc        1154  181   888516 36976 ffffffff 00000000 S com.android.nfc\nu0_a7      1219  181   956836 48012 ffffffff 00000000 S com.google.android.gms\n```", "```\n#ifdef CONFIG_ANDROID_PARANOID_NETWORK\n#include <linux/android_aid.h>\n\nstatic inline int current_has_network(void)\n{        return in_egroup_p(AID_INET) || capable(CAP_NET_RAW);➊}\n#else\nstatic inline int current_has_network(void)\n{        return 1;➋\n}\n#endif\n--*snip*--\nstatic int inet_create(struct net *net, struct socket *sock, int protocol,\n                                                     int kern)\n{\n        --*snip*--\n        if (!current_has_network())\n                 return -EACCES;➌\n        --*snip*--\n}\n```", "```\nservice vold /system/bin/vold\n    class core\n    socket vold stream 0660 root mount➊\n    ioprio be 2\n```", "```\n$ **ls -l /dev/socket**\n\nsrw-rw---- system   system             1970-01-18 14:26 adbd\nsrw------- system   system             1970-01-18 14:26 installd\nsrw-rw---- root     system             1970-01-18 14:26 netd\n--*snip*--\nsrw-rw-rw- root     root               1970-01-18 14:26 property_service\nsrw-rw---- root     radio              1970-01-18 14:26 rild\nsrw-rw---- root     mount              1970-01-18 14:26 vold➊\nsrw-rw---- root     system             1970-01-18 14:26 zygote\n```", "```\nint CommandListener::CryptfsCmd::runCommand(SocketClient *cli,\n                                                      int argc, char **argv) {\n    if ((cli->getUid() != 0) && (cli->getUid() != AID_SYSTEM)) {➊\n        cli->sendMsg(ResponseCode::CommandNoPermission,\n               \"No permission to run cryptfs commands\", false);\n        return 0;\n    }\n    --*snip*--\n}\n```", "```\nvoid SocketClient::init(int socket, bool owned, bool useCmdNum) {\n    --*snip*--\n    struct ucred creds;\n    socklen_t szCreds = sizeof(creds);\n    memset(&creds, 0, szCreds);\n\n    int err = getsockopt(socket, SOL_SOCKET, SO_PEERCRED, &creds, &szCreds);➊\n    if (err == 0) {\n        mPid = creds.pid;\n        mUid = creds.uid;\n        mGid = creds.gid;\n    }\n}\n```", "```\npublic int checkUidPermission(String permName, int uid) {\n    synchronized (mPackages) {\n        Object obj = mSettings.getUserIdLPr(➊UserHandle.getAppId(uid));\n        if (obj != null) {\n            GrantedPermissions gp = (GrantedPermissions)obj;➋\n            if (gp.grantedPermissions.contains(permName)) {\n                return PackageManager.PERMISSION_GRANTED;\n            }\n        } else {\n            HashSet<String> perms = mSystemPermissions.get(uid);➌\n            if (perms != null && perms.contains(permName)) {\n                return PackageManager.PERMISSION_GRANTED;\n            }\n        }\n    }\n    return PackageManager.PERMISSION_DENIED;\n}\n```", "```\npublic byte[] getStatistics() {\n    mContext.enforceCallingPermission(\n                android.Manifest.permission.BATTERY_STATS, null);\n    Parcel out = Parcel.obtain();\n    mStats.writeToParcel(out, 0);\n    byte[] data = out.marshall();\n    out.recycle();\n    return data;\n}\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest \n    package=\"android\" coreApp=\"true\" android:sharedUserId=\"android.uid.system\"\n    android:sharedUserLabel=\"@string/android_system_label\">\n    --*snip*-\n    <protected-broadcast android:name=\"android.intent.action.BOOT_COMPLETED\" />➊\n    <protected-broadcast android:name=\"android.intent.action.PACKAGE_INSTALL\" />\n    --*snip*--\n    <permission-group android:name=\"android.permission-group.MESSAGES\"\n        android:label=\"@string/permgrouplab_messages\"\n        android:icon=\"@drawable/perm_group_messages\"\n        android:description=\"@string/permgroupdesc_messages\"\n        android:permissionGroupFlags=\"personalInfo\"\n        android:priority=\"360\"/>➋\n    <permission android:name=\"android.permission.SEND_SMS\"\n        android:permissionGroup=\"android.permission-group.MESSAGES\"➌\n        android:protectionLevel=\"dangerous\"\n        android:permissionFlags=\"costsMoney\"\n        android:label=\"@string/permlab_sendSms\"\n        android:description=\"@string/permdesc_sendSms\" />\n    --*snip*--\n    <permission android:name=\"android.permission.NET_ADMIN\"\n        android:permissionGroup=\"android.permission-group.SYSTEM_TOOLS\"\n        android:protectionLevel=\"signature\" />➍\n    --*snip*--\n    <permission android:name=\"android.permission.MANAGE_USB\"\n        android:permissionGroup=\"android.permission-group.HARDWARE_CONTROLS\"\n        android:protectionLevel=\"signature|system\"➎\n        android:label=\"@string/permlab_manageUsb\"\n        android:description=\"@string/permdesc_manageUsb\" />\n    --*snip*--\n    <permission android:name=\"android.permission.WRITE_SECURE_SETTINGS\"\n        android:permissionGroup=\"android.permission-group.DEVELOPMENT_TOOLS\"\n        android:protectionLevel=\"signature|system|development\"➏\n        android:label=\"@string/permlab_writeSecureSettings\"\n        android:description=\"@string/permdesc_writeSecureSettings\" />\n    --*snip*--\n</manifest>\n```", "```\n<shared-user name=\"android.uid.system\" userId=\"1000\">\n<sigs count=\"1\">\n<cert index=\"4\" />\n</sigs>\n<perms>\n<item name=\"android.permission.MASTER_CLEAR\" />\n<item name=\"android.permission.CLEAR_APP_USER_DATA\" />\n<item name=\"android.permission.MODIFY_NETWORK_ACCOUNTING\" />\n--*snip*--\n<shared-user/>\n```", "```\n<package name=\"com.android.keychain\"\n         codePath=\"/system/app/KeyChain.apk\"\n         nativeLibraryPath=\"/data/app-lib/KeyChain\"\n         flags=\"540229\" ft=\"13cd65721a0\"\n         it=\"13c2d4721f0\" ut=\"13cd65721a0\"\n         version=\"19\"\n         sharedUserId=\"1000\">\n        <sigs count=\"1\">\n            <cert index=\"4\" />\n        </sigs>\n        <signing-keyset identifier=\"1\" />\n    </package>\n```", "```\nsystem    5901  9852  845708 40972 ffffffff 00000000 S com.android.settings\nsystem    6201  9852  824756 22256 ffffffff 00000000 S com.android.keychain\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest \n    package=\"com.example.app\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\" >\n    --*snip*--\n    <permission-tree\n        android:name=\"com.example.app.permission\"\n        android:label=\"@string/example_permission_tree_label\" />➊\n\n    <permission-group\n        android:name=\"com.example.app.permission-group.TEST_GROUP\"\n        android:label=\"@string/test_permission_group_label\"\n        android:description=\"@string/test_permission_group_desc\"/>➋\n\n    <permission\n        android:name=\"jcom.example.app.permission.PERMISSION1\"\n        android:label=\"@string/permission1_label\"\n        android:description=\"@string/permission1_desc\"\n        android:permissionGroup=\"com.example.app.permission-group.TEST_GROUP\"\n        android:protectionLevel=\"signature\" />➌\n        --*snip*--\n</manifest>\n```", "```\nPackageManager pm = getPackageManager();\nPermissionInfo permission = new PermissionInfo();\npermission.name = \"com.example.app.permission.PERMISSION2\";\npermission.labelRes = R.string.permission_label;\npermission.protectionLevel = PermissionInfo.PROTECTION_SIGNATURE;\nboolean added = pm.addPermission(permission);\nLog.d(TAG, \"permission added: \" + added);\n```", "```\n<service android:name=\".MyService\" android:exported=\"false\" >\n    <intent-filter>\n        <action android:name=\"com.example.FETCH_DATA\" />\n    </intent-filter>\n</service>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest \n    package=\"com.example.myapp\"\n    ... >\n    <permission android:name=\"com.example.permission.START_MY_ACTIVITY\"\n        android:protectionLevel=\"signature\"\n        android:label=\"@string/start_my_activity_perm_label\"\n        android:description=\"@string/start_my_activity_perm_desc\" />\n    <permission android:name=\"com.example.permission.USE_MY_SERVICE\"\n        android:protectionLevel=\"signature\"\n        android:label=\"@string/use_my_service_perm_label\"\n        android:description=\"@string/use_my_service_perm_desc\" />\n\n    --*snip*--\n    <activity android:name=\".MyActivity\"\n        android:label=\"@string/my_activity\"\n        android:permission=\"com.example.permission.START_MY_ACTIVITY\">➊\n        <intent-filter>\n        --*snip*--\n       </intent-filter>\n    </activity>\n    <service android:name=\".MyService\"\n        android:permission=\"com.example.permission.USE_MY_SERVICE\">➋\n        <intent-filter>\n        --*snip*--\n        </intent-filter>\n    </service>\n    --*snip*--\n</manifest>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest \n    package=\"com.android.email\"\n    android:versionCode=\"500060\" >\n        --*snip*--\n        <receiver\n            android:name=\".SecurityPolicy$PolicyAdmin\"\n            android:label=\"@string/device_admin_label\"\n            android:description=\"@string/device_admin_description\"\n            android:permission=\"android.permission.BIND_DEVICE_ADMIN\" >➊\n            <meta-data\n                android:name=\"android.app.device_admin\"\n                android:resource=\"@xml/device_admin\" />\n            <intent-filter>\n                <action\n                    android:name=\"android.app.action.DEVICE_ADMIN_ENABLED\" />\n            </intent-filter>\n        </receiver>\n        --*snip*--\n</manifest>\n```", "```\n<manifest \n        package=\"com.android.providers.contacts\"\n        android:sharedUserId=\"android.uid.shared\"\n        android:sharedUserLabel=\"@string/sharedUserLabel\">\n        --*snip*--\n        <provider android:name=\"ContactsProvider2\"\n           android:authorities=\"contacts;com.android.contacts\"\n           android:label=\"@string/provider_label\"\n           android:multiprocess=\"false\"\n           android:exported=\"true\"\n           android:readPermission=\"android.permission.READ_CONTACTS\"➊\n           android:writePermission=\"android.permission.WRITE_CONTACTS\">➋\n           --*snip*--\n           <path-permission\n                   android:pathPattern=\"/contacts/.*/photo\"\n                   android:readPermission=\"android.permission.GLOBAL_SEARCH\" />➌\n           <grant-uri-permission android:pathPattern=\".*\" />\n        </provider>\n        --*snip*--\n</manifest>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest \n    package=\"com.android.email\"\n    android:versionCode=\"500060\" >\n        <provider\n           android:name=\".provider.AttachmentProvider\"\n           android:authorities=\"com.android.email.attachmentprovider\"\n           android:grantUriPermissions=\"true\"➊\n           android:exported=\"true\"\n           android:readPermission=\"com.android.email.permission.READ_ATTACHMENT\"/>\n        --*snip*--\n</manifest>\n```", "```\npublic Intent getAttachmentIntent(Context context, long accountId) {\n    Uri contentUri = getUriForIntent(context, accountId);\n    Intent intent = new Intent(Intent.ACTION_VIEW);\n    intent.setDataAndType(contentUri, mContentType);\n    intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION |\n                    Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);\n    return intent;\n}\n```", "```\nprivate void setAlarm(long id, long millis) {\n    --*snip*--\n    Intent i = new Intent(this, MailboxAlarmReceiver.class);\n    i.putExtra(\"mailbox\", id);\n    i.setData(Uri.parse(\"Box\" + id));\n    pi = PendingIntent.getBroadcast(this, 0, i, 0);➊\n    mPendingIntents.put(id, pi);\n    AlarmManager am =\n            (AlarmManager)getSystemService(Context.ALARM_SERVICE);\n    m.set(AlarmManager.RTC_WAKEUP,\n          System.currentTimeMillis() + millis, pi);\n    --*snip*--\n}\n```"]