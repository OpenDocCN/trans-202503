- en: Chapter 1. What This Book’s About
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章：本书内容介绍
- en: You found this book! Okay, awesome. I was really hoping it would get to you.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你找到了这本书！太棒了。我真的希望它能够到你手中。
- en: 'Imagine someone tells you he’s discovered a new way of writing. Not a new language,
    like French or Japanese or Elvish, but a whole new *kind* of writing that makes
    your stories *actually happen*. If you described a maze, people could enter—and
    get lost in—that maze. If you wrote about a faraway planet where robot pirates
    fought ninja wizards, that planet would totally exist. Not only that, but you
    could write dialogue like `"Beep boop shiver me circuits"` or cast spells like
    `ninja_wizard.throw_flaming_ninja_stars`. Crazy, right? And that’s probably exactly
    what you’d say: that this is completely crazy and whoever thought of it has too
    much time on his hands. Too much imagination.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，有人告诉你，他发现了一种新的写作方式。不是一种新的语言，比如法语、日语或精灵语，而是一种全新的*写作方式*，可以让你的故事*真正发生*。如果你描述了一个迷宫，人们可以进入——并迷失在——这个迷宫里。如果你写一个遥远的星球，在那里机器人海盗与忍者巫师展开战斗，那么那个星球就会真实存在。不仅如此，你还可以写出像“`Beep
    boop shiver me circuits`”这样的对话，或者施展像`ninja_wizard.throw_flaming_ninja_stars`这样的魔法。疯了，对吧？这可能正是你会说的话：这完全疯了，任何想到这一点的人肯定有太多时间在手，太多想象力了。
- en: '![image with no caption](../Images/httpatomoreillycomsourcenostarchimages2159959.png.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![无说明文字的图片](../Images/httpatomoreillycomsourcenostarchimages2159959.png.jpg)'
- en: 'Well, it turns out there’s no such thing as too much imagination. So! Imagine
    me this: not only is this crazy new way of writing *real*, but you can learn how
    to do it. You could, with a little practice, figure out how to make your own worlds
    with your own rules. You’d be in charge, and you could do pretty much anything
    you could think of. Not only that, but if you got really good at it, people would
    come from all over to experience the worlds you built and use all the amazing
    things you created.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，事实证明并没有“想象力过多”这种事。那么！想象一下：不仅这种疯狂的新写作方式*是真实的*，而且你可以学会如何做到这一点。你只需要一点练习，就能弄明白如何创造你自己的世界和规则。你将成为主宰，你可以做几乎任何你能想到的事情。不仅如此，如果你做得非常好，人们将从四面八方来体验你创造的世界，并使用你创造的所有神奇事物。
- en: You can stop imagining (for now, at least). I’m telling you that this is true!
    And this book can help you do it. The pages you now hold in your hands are a guide
    to a *programming language* called *Ruby* that will let you do all these things,
    and all you need is your brain, a computer, and Ruby.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以暂时停止想象（至少现在可以）。我告诉你，这是真的！而这本书可以帮助你做到这一点。你现在手中拿着的页面是一本关于*编程语言*的指南，这种语言叫做*Ruby*，它将让你做所有这些事情，你所需要的只有大脑、一台计算机和Ruby。
- en: '*How can this be?* you might be thinking. *If something this cool and powerful
    existed, I definitely would have heard about it by now.*'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*这怎么可能？* 你可能在想。*如果有这么酷而强大的东西存在，我现在肯定早就听说过了。*'
- en: Which brings us to our next topic.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这引出了我们接下来的话题。
- en: Why Learn Programming (and Why Ruby)?
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么要学习编程（以及为什么是Ruby）？
- en: 'Learning to program sounded boring to me when I was younger. I thought programming
    and computers were all about math and logic—that there was no room to be creative
    or do anything interesting. All day long, people told me what to do: go to school,
    walk the dog, go to the dentist, do my homework. I figured programming would be
    more of the same, so I avoided it completely. Instead, I wrote stories about space
    travel, magic, and distant worlds where not only did amazing things happen, but
    I was in charge! I still write stories all the time, but even the best stories
    end when the reader turns the last page. As much as you want starships or ninja
    wizards to be real, writing stories about them doesn’t make that happen. So I
    did write a lot of stories, but I also had to go to the dentist.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我年轻的时候，学习编程对我来说听起来很无聊。我认为编程和计算机都与数学和逻辑有关——没有空间去发挥创造力或做任何有趣的事情。整天，人们都在告诉我该做什么：去学校、遛狗、看牙医、做作业。我觉得编程大概也只是这些事情的延续，所以我完全避免接触它。相反，我写关于太空旅行、魔法和遥远世界的故事，在那些世界里，不仅有惊人的事情发生，而且我是主角！我现在依然一直写故事，但即使是最棒的故事也会在读者翻完最后一页后结束。尽管你多么希望星际飞船或忍者巫师成为现实，写关于它们的故事并不能让它们发生。所以我确实写了很多故事，但我也不得不去看牙医。
- en: 'Then something very strange happened: I decided to give programming a try.
    I discovered that this thing I thought would be terribly dry and boring was exactly
    the opposite—it was challenging and fun. Suddenly, I was calling the shots! If
    I told the computer to make a puzzle game, it made a puzzle game. If I told it
    to make a website, it made a website. It made real things in the world that I
    could see, play with, and use. It was as if all the stories I had been writing
    for years could now come to life, and all it took was this little box and a language
    I could use to talk to it.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然后发生了一件非常奇怪的事：我决定尝试编程。我发现我原本以为会非常枯燥无味的事情，实际上完全相反——它既具有挑战性又很有趣。突然之间，我开始掌控一切！如果我让电脑做一个拼图游戏，它就做了一个拼图游戏。如果我让它做一个网站，它就做了一个网站。它创造出了我能看到、玩耍和使用的真实事物。就像我多年来一直在写的那些故事，现在可以活生生地呈现出来，而所有这一切只需要这个小小的框框和我能用来与它交流的语言。
- en: 'It’s true that some programming languages are hard, and some are downright
    confusing. Ruby is different: it was designed to make you happy—to be easy for
    *you* to read and understand, not just the computer. Ruby was built to help you
    tell stories that computers and human beings can both enjoy, and so instead of
    weird symbols or words like `static` and `void`, you get programs that look almost
    like English, with words like `unless`, `rescue`, `self`, and even `begin` and
    `end`.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 的确，一些编程语言很难，一些甚至令人困惑。但 Ruby 不一样：它的设计目的是让你开心——让*你*更容易阅读和理解，而不仅仅是让计算机理解。Ruby 的创建是为了帮助你编写既能被计算机也能被人类理解的故事，因此你不会看到像
    `static` 和 `void` 这样的奇怪符号或单词，取而代之的是像 `unless`、`rescue`、`self`，甚至 `begin` 和 `end`
    这样的词语，程序看起来几乎像英语一样。
- en: Just as with any programming language, learning Ruby will help you learn important
    skills, make cool things, and feel accomplished. But mostly, you’ll just have
    *fun*. And among programming languages, I think Ruby is the most fun.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何编程语言一样，学习 Ruby 会帮助你掌握重要的技能，制作很酷的东西，并且感觉到成就感。但最重要的是，你会玩得很*开心*。在编程语言中，我认为
    Ruby 是最有趣的。
- en: 'Let’s say you wanted to program the computer to say “Howdy!” If you wanted
    to do this in another language—for instance, Java—you might have to write something
    really complicated, like this:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想让电脑说“Howdy！”。如果你想用其他语言来实现——比如 Java——你可能需要写一些非常复杂的代码，像这样：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'That’s a lot of code to print one word. To do the same thing in Ruby, you just
    type:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 打印一个单词需要这么多代码。在 Ruby 中要做同样的事，你只需要输入：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: That’s it! Ruby puts the word right there on the screen. Simple, right? Ruby
    is all about making you a happy and productive programmer (oh yeah—you’re a programmer
    now), so it gets rid of a lot of complicated *syntax* (like `{` and `;`) and lets
    you avoid writing boring things like `public static void main` all over the place.
    And since Ruby can do pretty much all the stuff that trickier languages like Java
    can do, you’ll be able to build amazing things faster and with less effort.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！Ruby 会把字显示在屏幕上。简单吧？Ruby 旨在让你成为一个快乐高效的程序员（哦对了——你现在是程序员了），所以它去掉了很多复杂的*语法*（比如
    `{` 和 `;`），让你不必到处写像 `public static void main` 这样的无聊代码。而且由于 Ruby 几乎可以做所有像 Java
    这种更复杂语言能够做的事，你将能够更快、更省力地构建出令人惊叹的作品。
- en: Let’s get started!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: 'All Adults on Deck: Installing Ruby'
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 所有成人请注意：安装 Ruby
- en: All right—this is the part where you might want to grab your mom, dad, grandpa,
    grandma, aunt, uncle, teacher, or another local adult to help you install Ruby
    on your computer. Ruby is free, but you’ll need an Internet connection to download
    it if you don’t already have it.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 好的——这部分你可能需要叫上妈妈、爸爸、爷爷、奶奶、叔叔、阿姨、老师或其他成年人的帮助来在你的电脑上安装 Ruby。Ruby 是免费的，但如果你还没有它，你需要连接互联网来下载。
- en: The directions are a little different depending on which kind of computer you
    have, so ask your adult if you’re not sure!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 方向会根据你使用的计算机类型有所不同，所以如果你不确定，可以问一下大人！
- en: If you’re running Windows, skip ahead to [Installing on Windows](../Text/ch01.html#installing_on_windows
    "Installing on Windows").
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Windows，请跳转到 [Windows 上的安装](../Text/ch01.html#installing_on_windows
    "Installing on Windows")。
- en: Installing on Mac or Linux
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Mac 或 Linux 上安装
- en: First, let’s check to see if you already have Ruby installed. If you’re on a
    Mac or a computer running Linux, you can check to see which version of Ruby you
    have on the *command line*—this is where you’ll be typing your Ruby programs.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们来检查一下你是否已经安装了 Ruby。如果你使用的是 Mac 或运行 Linux 的电脑，你可以在*命令行*中检查你安装的 Ruby 版本——这也是你编写
    Ruby 程序的地方。
- en: The command line is probably very different from the way you usually use your
    computer (clicking icons and moving things with your mouse), but once you get
    used to it, the command line can be much faster and easier.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行的使用方式可能和你通常通过点击图标和用鼠标移动的方式非常不同，但一旦习惯了，命令行的使用会更快速、更高效。
- en: 'On a Mac or Linux computer, your command line is in an application called *Terminal*.
    Find your Terminal application and open it. You should see something like this:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac或Linux计算机上，你的命令行是在一个名为*Terminal*的应用程序中。找到并打开你的终端应用程序。你应该会看到类似以下内容：
- en: '![image with no caption](../Images/httpatomoreillycomsourcenostarchimages2159961.png.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![没有标题的图片](../Images/httpatomoreillycomsourcenostarchimages2159961.png.jpg)'
- en: 'Once you’ve got the Terminal open, go ahead and type the following line (you
    don’t need to type the dollar sign—just the `ruby -v` bit) and press ENTER:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦打开了终端，继续输入以下命令（你不需要输入美元符号——只需输入`ruby -v`部分）并按ENTER键：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If Ruby is installed, you’ll get back something like this:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Ruby已安装，你应该会看到类似以下内容的回应：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If you get this response and it includes `2.0.0`, you’re all set! Skip ahead
    to [Achievement Unlocked: Ruby Installed!](../Text/ch01.html#achievement_unlocked_ruby_installedexcla
    "Achievement Unlocked: Ruby Installed!"). If you get a number other than `2.0.0`
    (for instance, `1.9.3` or `1.8.7`), we’ll need to get you on version 2.0.0 (the
    version this book uses). If your computer is super fancy, you might already be
    on Ruby 2.1—the code in this book should work in Ruby 2.1, too. For maximum awesomeness
    and minimal errors, you should run all the examples using Ruby 2.0.0.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你收到这个响应并且包含`2.0.0`，那就万事大吉！跳到[成就解锁：Ruby安装完成！](../Text/ch01.html#achievement_unlocked_ruby_installedexcla
    "成就解锁：Ruby安装完成！")。如果你看到的版本不是`2.0.0`（比如`1.9.3`或`1.8.7`），我们需要将Ruby升级到2.0.0（本书使用的版本）。如果你的计算机非常先进，可能已经安装了Ruby
    2.1——本书中的代码在Ruby 2.1上也能正常工作。为了获得最佳效果和最少的错误，建议你使用Ruby 2.0.0来运行所有示例。
- en: 'If your computer says something like this:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的计算机显示类似以下内容：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: then you don’t have Ruby. No worries. Grab an adult and skip to [Appendix A](../Text/apa.html
    "Appendix A. Installing Ruby on Mac and Linux") for detailed step-by-step instructions.
    We’ll install it there! Come back to this chapter when you’re done.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有显示出来，那说明你的电脑上没有安装Ruby。别担心，找个成年人帮忙，并跳转到[附录 A](../Text/apa.html "附录 A. 在Mac和Linux上安装Ruby")，那里有详细的逐步说明。我们会在那儿安装Ruby！安装完毕后，回来继续本章节的内容。
- en: Installing on Windows
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Windows上安装
- en: 'If you’re on a PC running Windows, you can check if Ruby is installed by opening
    the *command prompt*. We’ll be using Windows 7 in this example. You can open the
    command prompt from the Start menu or by searching for *cmd.exe*; once you find
    it, double-click it to open the application. You should see something like this:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在运行Windows的PC上，可以通过打开*命令提示符*来检查是否已安装Ruby。我们在这个示例中使用的是Windows 7。你可以从开始菜单打开命令提示符，或者通过搜索*cmd.exe*找到它；找到后，双击它打开应用程序。你应该会看到类似以下内容：
- en: '![image with no caption](../Images/httpatomoreillycomsourcenostarchimages2159963.png.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![没有标题的图片](../Images/httpatomoreillycomsourcenostarchimages2159963.png.jpg)'
- en: 'Your command prompt—the little bit before the `>`—will probably be different
    from mine, but that’s okay! Type **`ruby -v`** and then press ENTER:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你的命令提示符——即`>`前面的部分——可能和我的不同，但没关系！输入**`ruby -v`**，然后按ENTER键：
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If you get a response that includes `2.0.0`, you’re all set! If you see a Ruby
    version other than 2.0.0, or if you get this error:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你收到包含`2.0.0`的响应，那就万事大吉！如果你看到的是除了2.0.0以外的Ruby版本，或者收到这个错误：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: then we’ll need to go ahead and install Ruby. Let’s get to it!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有安装，我们就需要继续安装Ruby。让我们开始吧！
- en: Using RubyInstaller
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用RubyInstaller
- en: 'The easiest way to install Ruby on Windows is to go to *[http://rubyinstaller.org/downloads/](http://rubyinstaller.org/downloads/)*
    and download Ruby 2.0.0-p481\. (Don’t worry if the number after the *p* on the
    installation website is a little higher than what’s shown here; that just means
    that version is very slightly newer, but it’s still Ruby 2.0 and should work great.)
    Once the download is finished, go to the folder where you saved the *.exe* file
    and double-click it to run the installer. Here’s what it will ask you to do:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上安装Ruby最简单的方法是访问*[http://rubyinstaller.org/downloads/](http://rubyinstaller.org/downloads/)*并下载Ruby
    2.0.0-p481。（如果安装网站上显示的*p*后面的数字稍微高于这里的数字，不用担心；这意味着该版本略微更新，但仍然是Ruby 2.0，应该能够正常工作。）下载完成后，前往你保存*.exe*文件的文件夹，双击运行安装程序。安装程序会要求你执行以下操作：
- en: When it prompts you for the language to use during installation, choose “English”
    (or whichever language you know best).
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当安装程序提示你选择安装时使用的语言时，选择“English”（或者你最熟悉的语言）。
- en: The installer will ask you to accept its license agreement. Check “I accept
    the License” and then click **Next**.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装程序会要求你接受其许可协议。勾选“我接受许可协议”后点击**下一步**。
- en: The installer will ask you where you’d like to install Ruby, defaulting to `C:\Ruby200`.
    This is great! You’ll also see a checkbox that says “Add Ruby executables to your
    PATH.” Make sure that box is checked, then click **Install**.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装程序会询问你希望将 Ruby 安装到哪里，默认位置是 `C:\Ruby200`。这很好！你还会看到一个复选框，上面写着“将 Ruby 可执行文件添加到
    PATH”。确保勾选了该框，然后点击**安装**。
- en: If all goes well, you should get a “Completing the Ruby Setup Wizard” screen.
    Click **Finish**, and you’re done!
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切顺利，你应该会看到“完成 Ruby 设置向导”屏幕。点击**完成**，然后你就完成了！
- en: 'Once the installer runs, close your command prompt, reopen it, and enter **`ruby
    -v`**; you should see your computer print a response with `ruby 2.0.0` in it.
    Mine looks like this (yours might be slightly different):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 安装程序运行完后，关闭命令提示符，重新打开它，并输入 **`ruby -v`**；你应该看到计算机打印出带有 `ruby 2.0.0` 的响应。我的显示是这样的（你的可能略有不同）：
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![image with no caption](../Images/httpatomoreillycomsourcenostarchimages2159965.png.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![没有标题的图片](../Images/httpatomoreillycomsourcenostarchimages2159965.png.jpg)'
- en: 'Achievement Unlocked: Ruby Installed!'
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 成就解锁：Ruby 安装完成！
- en: Perfect! Now that you’ve got Ruby installed, we can start learning our way around.
    In the next chapter, we’ll cover some Ruby basics and learn how to use Ruby interactively,
    meaning you’ll get to see Ruby run your code just by pressing the ENTER key. In
    the chapters that follow, you’ll learn the ins and outs of the Ruby language through
    a series of stories. Since Ruby programs are, after all, just stories you write
    for the computer to understand, and Ruby is all about writing code that’s nice
    for people and computers to read, I figure it only makes sense to use stories
    to show you how it all works. They’re pretty good stories, I think.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 完美！现在你已经安装了 Ruby，我们可以开始学习如何使用它了。在下一章中，我们将介绍一些 Ruby 基础知识，并学习如何互动式地使用 Ruby，也就是说，你只需按下
    ENTER 键，就能看到 Ruby 执行你的代码。在接下来的章节中，你将通过一系列故事了解 Ruby 语言的细节。毕竟，Ruby 程序就是你为计算机写的故事，而
    Ruby 的特点就是编写既适合人类又适合计算机阅读的代码，所以我认为通过故事来展示它的工作原理是非常合适的。我认为这些故事还挺不错的。
- en: You might be tempted to just read the code in this book and say to yourself,
    “Yup, this makes sense! I don’t need to run the code.” I thought that was true
    when I started programming, but boy, was I wrong. The only way to learn how to
    write code is, well, to write code, and you’re cheating yourself out of a lot
    of really cool knowledge if you only read these examples and never run a line
    of Ruby.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会忍不住想，只看本书中的代码并对自己说：“没错，这很有道理！我不需要运行这些代码。”我开始编程时也这么想过，但我错了。学习编写代码的唯一方法就是——写代码，如果你只是阅读这些示例，而从不运行任何
    Ruby 代码，那你就错过了很多真正酷的知识。
- en: 'One more word of advice before we set out on our adventure: you might have
    to read something more than once or run a piece of code a few times to really
    get it. That’s okay! Learning to program isn’t just a new way of writing—it’s
    a new way of thinking, too. It might be a little hard sometimes, but I promise
    that if you stick with it, you’ll get it. Believe me, there are people way less
    smart and enthusiastic than you who have learned how to program, and if they can
    do it, so can you.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始冒险之前，还有一句建议：你可能需要读几遍某些内容，或者多次运行代码才能真正理解。这没关系！学习编程不仅仅是写代码的新方式——它也是一种全新的思维方式。有时候可能会有点难，但我保证只要你坚持下去，你一定能掌握它。相信我，有些人比你聪明和热情的程度都要低，但他们也学会了编程，如果他们能做到，你也能。
- en: Putting on the Ruby Slippers
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 穿上 Ruby 套鞋
- en: 'Okay, so you’ve got your very own copy of Ruby, and you know that Ruby is a
    language you can use to tell computers to do anything you want. But you’re probably
    overflowing with questions: Where did Ruby come from? Who created it and why?
    What amazing things have been created with it? What *good* is Ruby? Well, question
    no more: I’ll give you all those answers (plus a few bonus ones).'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，你已经拥有了属于你自己的 Ruby 副本，并且知道 Ruby 是一种你可以用来指示计算机做任何事情的语言。但你可能有很多问题：Ruby 是从哪里来的？是谁创建的，为什么要创建它？用它创造了哪些惊人的东西？Ruby
    有什么*好处*？别再疑惑了：我会给你所有这些问题的答案（还有一些额外的答案）。
- en: While computers were invented about a bajillion years ago (the first devices
    you’d recognize as computers were created in the 1940s), Ruby was cooked up relatively
    recently, in 1993\. You might think that 1993 was a bajillion years ago, too,
    and in some ways, you’re right. The Internet only had about a hundred websites.
    Nobody had smartphones. In fact, most people’s phones were *connected to their
    walls by wires*. These were dark times.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然计算机大约在几百万年前就被发明了（你能识别为计算机的第一批设备是在 1940 年代制造的），但 Ruby 相对较晚才被创造出来，时间是在 1993
    年。你可能认为 1993 年也已经是几百万年前的事情了，某种程度上你是对的。那时互联网只有大约一百个网站。没有智能手机。事实上，大多数人的手机是*通过电线连接到墙上的*。那是黑暗的时代。
- en: But in the ancient world of the mid-1990s, a man named Yukihiro Matsumoto (or
    just “Matz” to his friends) was busy trying to invent the future. He was frustrated
    by programming languages that were designed to make life easy for computers but
    were hard for people to understand, read, remember, and use. Why wasn’t there
    a language that was built to be easy for *people* to use, a language that was
    clear, simple—and even fun?
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 但在 1990 年代中期的那个古老时代，一个名叫松本行弘（或者朋友们称他为“Matz”）的人正忙于尝试发明未来。他对那些旨在让计算机更容易使用，但却难以理解、阅读、记忆和使用的编程语言感到沮丧。为什么没有一种语言是为了让*人类*使用而设计的，一种清晰、简单，甚至是有趣的语言呢？
- en: 'Matz realized that his ideal programming language didn’t exist, so he created
    it. “I hope to see Ruby help every programmer in the world to be productive, and
    to enjoy programming, and to be happy,” Matz has said. “That is the primary purpose
    of the Ruby language.”^([[1](#ftn.ch01fn01)]) And that’s Ruby in a nutshell: a
    *fun* way for you to create games, websites, or anything you can imagine with
    just your brain and a computer. Matz has had such a positive influence on the
    language he created that Ruby programmers have a saying: “Matz is nice, so we
    are nice,” or MINSWAN. Remember MINSWAN when you’re learning Ruby and especially
    when you’re teaching it to others!'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Matz 意识到他理想中的编程语言并不存在，于是他创造了它。Matz 曾说：“我希望看到 Ruby 帮助全球的每一位程序员提高生产力，享受编程，并且感到快乐。这是
    Ruby 语言的主要目的。”^([[1](#ftn.ch01fn01)]) 这就是 Ruby 的精髓：一种*有趣*的方式，让你通过大脑和计算机创建游戏、网站，或者任何你能想象的东西。Matz
    对他创造的语言产生了如此积极的影响，以至于 Ruby 程序员们有一句话：“Matz 很友好，所以我们也很友好”，简称 MINSWAN。在你学习 Ruby，尤其是教别人时，记得
    MINSWAN！
- en: 'Which reminds me: there are a lot of amazing things you can create with Ruby.
    Over the last few years, Ruby has been used to build major websites like Twitter
    and Hulu, iPhone apps, and even NASA simulations. That’s right: you can use Ruby
    to explore space! People are using Ruby for more and more projects every day,
    and with all the cool new tools and ideas constantly coming from the Ruby community,
    your imagination’s really the only limit when it comes to building your own programs.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这让我想起：用 Ruby 可以创建许多令人惊叹的东西。在过去的几年里，Ruby 被用于构建像 Twitter 和 Hulu 这样的大型网站、iPhone
    应用，甚至是 NASA 的模拟。没错：你可以用 Ruby 来探索太空！每天都有越来越多的人使用 Ruby 来做各种项目，随着 Ruby 社区不断涌现出许多很酷的新工具和想法，你的想象力几乎是你在构建程序时唯一的限制。
- en: '![image with no caption](../Images/httpatomoreillycomsourcenostarchimages2159967.png.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![没有标题的图片](../Images/httpatomoreillycomsourcenostarchimages2159967.png.jpg)'
- en: These programs are written in *scripts*. This means that instead of having to
    do a long and boring process called *compiling*, you can just write a quick Ruby
    program, run it, and presto!
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这些程序是通过*脚本*编写的。这意味着，你不需要做一个长而乏味的过程叫做*编译*，你只需编写一个简单的 Ruby 程序，运行它，瞧！就完成了！
- en: Your website is up, your game is working, your starship is shooting lasers at
    a witch queen. But how do you run these Ruby scripts? For that, we’ll need to
    learn about the `ruby` command and a little program called *IRB*.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你的网站已经上线，游戏也在运行，你的宇宙飞船正在向女巫女王发射激光。那么如何运行这些 Ruby 脚本呢？为此，我们需要了解 `ruby` 命令和一个叫做
    *IRB* 的小程序。
- en: Getting to Know IRB
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 IRB
- en: In Ruby, you can print something to the screen just by typing the `puts` command.
    Let’s say we want to print out “Ruby is awesome!” Let’s give it a try—first we
    have to open IRB, a program for exploring Ruby.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ruby 中，你可以通过输入 `puts` 命令将内容打印到屏幕上。假设我们想打印出“Ruby 很棒！”。让我们试试—首先我们需要打开 IRB，这是一个用于探索
    Ruby 的程序。
- en: 'If you’re using Mac or Linux, open the terminal and type:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Mac 或 Linux，打开终端并输入：
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You only need to type **`irb`**, not the dollar sign; the dollar sign is my
    way of showing you that you should type something in the terminal.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需输入 **`irb`**，不需要输入美元符号；美元符号是我用来表示你在终端中应该输入的内容。
- en: If you’re using Windows, you can run IRB from the Start menu.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Windows，可以通过开始菜单运行 IRB。
- en: 'Once you have IRB open, you should see something like this:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你打开了 IRB，应该会看到类似这样的内容：
- en: '[PRE9]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: That’s IRB’s *prompt*, which is IRB’s way of telling you it’s ready for you
    to type something. It might look a bit different to you depending on your Ruby
    version, but it should end with a `>`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 那就是 IRB 的*提示符*，它告诉你 IRB 已经准备好等待你输入内容了。根据你的 Ruby 版本，它可能看起来稍有不同，但应该以 `>` 结尾。
- en: 'In this book, we’ll simplify that to look like this:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们会将它简化为如下形式：
- en: '[PRE10]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Whenever you see `>>`, we’ll be using IRB. If you type this after the `>>`
    (don’t forget the quotation marks—they’re very important!):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你看到 `>>` 时，我们就会使用 IRB。如果你在 `>>` 后输入内容（别忘了引号——它们非常重要！）：
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'when you press ENTER, you should see Ruby print out:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当你按下 ENTER 时，应该会看到 Ruby 打印出：
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Excellent! We’ve written a simple program to print some text to the screen.
    You’ll also see Ruby say something about “nil.” Don’t worry about this just yet;
    I’ll explain that part in a little while. (If you can’t wait: basically, this
    is Ruby telling you that it’s all done printing and has nothing else to give you.
    You’ll learn all about `nil` in [Chapter 7](../Text/ch07.html "Chapter 7. The
    Magic of Methods and Blocks").) The cool thing is, you’ve just written your very
    first Ruby program!'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们已经写了一个简单的程序，将一些文本打印到屏幕上。你还会看到 Ruby 输出一些关于“nil”的内容。暂时不用担心这个；稍后我会解释这一部分。（如果你迫不及待想了解：基本上，这是
    Ruby 告诉你它已经完成打印，没有其他内容要给你了。你将在[第 7 章](../Text/ch07.html "第 7 章：方法与代码块的魔力")中学习关于
    `nil` 的所有内容。）酷的是，你刚刚写了你人生中的第一个 Ruby 程序！
- en: IRB will continue to prompt you and wait for you to type things until you tell
    it to stop, which you can do at any time by typing `exit` (or just quitting your
    terminal program).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: IRB 会继续提示你，并等待你输入内容，直到你告诉它停止，你可以随时通过输入 `exit`（或直接退出终端程序）来停止。
- en: Using a Text Editor and the ruby Command
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用文本编辑器和 ruby 命令
- en: The other way of writing Ruby commands is as a script, which is just writing
    many lines and then running them all at once, instead of one at a time. To write
    a script, you’ll need a program called a *text editor*. (This is *not* something
    like Microsoft Word, which is a *word processor*; a word processor is great for
    writing stories or reports for school, but it’s terrible for writing programs.)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 写 Ruby 命令的另一种方式是作为脚本，这种方式就是写很多行代码，然后一次性运行，而不是一行一行地执行。要写一个脚本，你需要一个叫做*文本编辑器*的程序。（这*不是*像
    Microsoft Word 这样的*文字处理软件*；文字处理软件非常适合写故事或学校报告，但它对于写程序来说是糟糕的选择。）
- en: Note
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*You can download all the scripts that appear in this book at* [http://nostarch.com/rubywizardry/](http://nostarch.com/rubywizardry/).
    *But if you’re learning to program and following along with the story, try typing
    things out instead of just copying and pasting! You’ll learn a lot more.*'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '*你可以在这里下载本书中出现的所有脚本：* [http://nostarch.com/rubywizardry/](http://nostarch.com/rubywizardry/)。*但如果你正在学习编程并跟着书中的内容操作，尽量自己输入，而不是直接复制粘贴！你会学到更多。*'
- en: Mac
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Mac
- en: All Macs come with a text editor called TextEdit (you can find it in your *Applications*
    folder). It’s very simple to use and works great for writing Ruby programs. If
    you’re looking for something with a little more pizzazz, you can download a very
    nice free text editor called Sublime Text 2 from *[http://www.sublimetext.com/2](http://www.sublimetext.com/2)*
    (you’ll need OS X 10.6 or later).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 Mac 都带有一个叫做 TextEdit 的文本编辑器（你可以在 *应用程序* 文件夹中找到它）。它非常简单易用，非常适合写 Ruby 程序。如果你想要一些更有特色的东西，可以从
    *[http://www.sublimetext.com/2](http://www.sublimetext.com/2)* 下载一个非常棒的免费文本编辑器，叫做
    Sublime Text 2（你需要 OS X 10.6 或更高版本）。
- en: Linux
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux
- en: There are a number of good editors for Linux, but Gedit is one of my favorites.
    You can download it from *[https://wiki.gnome.org/Apps/Gedit](https://wiki.gnome.org/Apps/Gedit)*.
    Sublime Text 2 is also a very good editor for Linux and is available at *[http://www.sublimetext.com/2](http://www.sublimetext.com/2)*.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 有许多不错的编辑器，但 Gedit 是我最喜欢的之一。你可以从 *[https://wiki.gnome.org/Apps/Gedit](https://wiki.gnome.org/Apps/Gedit)*
    下载它。Sublime Text 2 也是 Linux 上非常好的编辑器，可以从 *[http://www.sublimetext.com/2](http://www.sublimetext.com/2)*
    获取。
- en: Windows
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows
- en: As I just mentioned, Microsoft Word is *not* good for writing programs. Notepad++,
    on the other hand, is a great free text editor for Windows that you can get from
    *[http://notepad-plus-plus.org/download/v6.6.7.html](http://notepad-plus-plus.org/download/v6.6.7.html)*.
    You can also use the Sublime Text 2 editor, available at *[http://www.sublimetext.com/2](http://www.sublimetext.com/2)*.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我刚才提到的，Microsoft Word对于编写程序来说*并不*理想。而Notepad++则是一个非常棒的Windows免费文本编辑器，你可以从*[http://notepad-plus-plus.org/download/v6.6.7.html](http://notepad-plus-plus.org/download/v6.6.7.html)*下载。你还可以使用Sublime
    Text 2编辑器，网址是*[http://www.sublimetext.com/2](http://www.sublimetext.com/2)*。
- en: Creating Your First Script
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建你的第一个脚本
- en: 'Once you’ve installed a text editor, open it and type the same thing you typed
    in IRB:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你安装了文本编辑器，打开它并输入你在IRB中输入的相同内容：
- en: '[PRE13]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Go ahead and save this file as awesome.rb in any folder you’d like (it’s a
    good idea to create a *ruby* folder now to put all your Ruby programs in). Then,
    open your terminal and change into the folder where you saved *awesome.rb*. Here’s
    how to do that with the `cd` command:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来将这个文件保存为awesome.rb到你喜欢的任何文件夹（现在创建一个*ruby*文件夹来存放所有的Ruby程序是个好主意）。然后，打开你的终端并切换到保存*awesome.rb*的文件夹。使用`cd`命令可以这样做：
- en: 'On Mac or Linux, your prompt (the bit to the left of the `$` on the command
    line) looks something like `/Users/`*`username`* `$`. If you saved *awesome.rb*
    in a folder called *ruby* in your home folder, you can get to that folder on the
    command line by entering:'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Mac或Linux上，你的提示符（命令行中`$`左边的部分）看起来像这样：`/Users/`*`username`*` $`。如果你把*awesome.rb*保存在名为*ruby*的文件夹里，可以通过在命令行输入以下命令来进入该文件夹：
- en: '[PRE14]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Don’t type the `$` part, just everything after it. Also, don’t literally type
    *`username`*; you should replace that with whatever you see in your prompt! (Mine
    is `/Users/eweinstein/`, but yours will be different.)
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不要输入`$`部分，只需输入其后的内容。另外，不要字面上输入*`username`*；你应该用你在提示符中看到的内容替代它！（我的提示符是`/Users/eweinstein/`，但你的会有所不同。）
- en: 'On Windows, your prompt (the bit to the left of the `>` on the command line)
    looks something like `C:\Users\`*`username`*. If you saved *awesome.rb* in a folder
    called *ruby* in your home folder, you can get to that folder on the command line
    by entering:'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上，你的提示符（命令行中`>`左边的部分）看起来像这样：`C:\Users\`*`username`*。如果你把*awesome.rb*保存在名为*ruby*的文件夹里，可以通过在命令行输入以下命令来进入该文件夹：
- en: '[PRE15]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Don’t type the `>` part, just everything after it. Also, don’t literally type
    *`username`*; you should replace that with whatever you see in your prompt.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不要输入`>`部分，只需输入其后的内容。同样，不要字面上输入*`username`*；你应该用你在提示符中看到的内容替代它。
- en: 'Once you’re in the *ruby* folder, enter:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你进入了*ruby*文件夹，输入：
- en: '[PRE16]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You should see Ruby print out:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到Ruby输出：
- en: '[PRE17]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: And that’s you running your first Ruby script. Nice work!
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样，你已经成功运行了第一个Ruby脚本。做得好！
- en: When to Use IRB and When to Use a Text Editor
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 何时使用IRB，何时使用文本编辑器
- en: So if we type the same thing into IRB and into our script file, and we get the
    same output, what’s the difference between the two? Basically, IRB will let you
    try out only one line of code at a time; every time you press the ENTER key, IRB
    will read, or *evaluate*, the code you wrote and spit out an answer. It’s a great
    way to try things out and see if they work.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将相同的内容输入到IRB和脚本文件中，并且得到相同的输出，那它们之间有什么区别呢？基本上，IRB每次只允许你尝试一行代码；每按一次ENTER键，IRB就会读取或*评估*你写的代码并给出一个答案。这是一个很好的尝试方式，可以检查代码是否有效。
- en: 'This means that every time you press ENTER, Ruby will interrupt you with the
    result of calculating each line, like this:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着每次按下ENTER键时，Ruby会中断你并返回计算每一行的结果，像这样：
- en: '[PRE18]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The code in bold is what you’ve typed; below it is the response you get from
    IRB when you press ENTER. We don’t always need all that noise! Sometimes we just
    want to know the final result of all our work. To do that, we can write this same
    code as a script. Just open your editor from earlier (for example, TextEdit if
    you’re on a Mac, Gedit if you’re using Linux, or Notepad++ for a PC running Windows)
    and type the following:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 粗体中的代码是你输入的内容；其下是你按下ENTER键后IRB返回的响应。我们不总是需要这么多信息！有时候，我们只想知道所有工作结果的最终输出。为了实现这一点，我们可以将相同的代码写成脚本。只需打开之前的编辑器（例如，如果你是Mac用户，使用TextEdit；如果是Linux用户，使用Gedit；或者在Windows上使用Notepad++），然后输入以下内容：
- en: '[PRE19]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Then save the script as script_example.rb, or any name you like with a *.rb*
    at the end (but no spaces allowed!), use `cd` to switch into the directory where
    you saved the script, and finally run the script with the `ruby` command:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将脚本保存为script_example.rb，或者任何你喜欢的名称，只要以*.rb*结尾（但不允许有空格！），使用`cd`切换到保存脚本的目录，最后通过`ruby`命令运行脚本：
- en: '[PRE20]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This way, we’ll just get the printed-out information we want, without having
    to type line by line:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们就能只输出我们想要的信息，而无需逐行输入：
- en: '[PRE21]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Not only is this easier to read, but we can now run the script over and over
    with **`ruby script_example.rb`** and do our calculations without retyping all
    the commands each time. We can save our program forever, change it, and build
    on it later.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这样不仅更容易阅读，而且我们现在可以通过**`ruby script_example.rb`**反复运行脚本，进行计算，而不必每次都重新输入所有命令。我们可以永久保存程序，修改它，并在之后继续构建。
- en: The Prompts Used in This Book
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书中使用的提示符
- en: 'Throughout the book, we’ll alternate between using IRB for small bits of code
    and running scripts for longer ones. Whenever you see the IRB prompt, which looks
    like this:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们会交替使用IRB来运行小段代码和使用脚本来运行较长的代码。每当你看到IRB提示符，它看起来是这样的：
- en: '[PRE22]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'that means you should be running the code using IRB; when you don’t see it,
    it means you should type the script in your text editor and run it using the `ruby`
    command. Here’s what an IRB example looks like:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着你应该使用IRB来运行代码；当你看不到它时，意味着你应该在文本编辑器中输入脚本并使用`ruby`命令来运行。下面是一个IRB示例：
- en: '[PRE23]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Let’s take a moment to talk about what each piece of this code does. The `>>`
    bit says, “We’re in IRB, which is a program that understands Ruby commands.” Remember,
    you don’t want to type `>>`; this just lets you know we’re using IRB. The `>>`
    in the book represents the IRB prompt on your own computer.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们花点时间来讲解这段代码的每一部分。`>>`部分表示，“我们在IRB中，IRB是一个理解Ruby命令的程序。”记住，你不需要输入`>>`；这只是让你知道我们正在使用IRB。书中的`>>`代表你自己电脑上的IRB提示符。
- en: The bold code that reads **`2 + 2`** is a command for you to enter—type these
    lines exactly, then press ENTER. When you see several bold lines at an IRB prompt,
    just type them one at a time, pressing ENTER after each line.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 以**`2 + 2`**为例，这是你需要输入的命令——完全输入这些行，然后按ENTER。当你看到IRB提示符下有几行加粗的代码时，只需逐行输入，每输入一行按一次ENTER。
- en: 'But the second line in this code begins with `=>`. This is what IRB spits back
    out in response after you press ENTER. (That means you don’t have to type these
    bits either.) If you get an error after typing a command instead of seeing the
    result shown in the book, make sure you’ve typed your Ruby commands *exactly*.
    Computers are very dumb: they do exactly what you *say* and not always what you
    *want*!'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 但是这段代码的第二行以`=>`开头。这是IRB在你按下ENTER后返回的结果。（这意味着你也不需要输入这些部分。）如果你在输入命令后遇到错误，而不是看到书中展示的结果，确保你输入的Ruby命令*完全正确*。计算机非常愚蠢：它们只会按你*说*的做，而不一定是你*想要*的！
- en: Other programs in the book are longer, so you’ll want to be able to change or
    improve them and fix mistakes. That means you’ll want to write them with a text
    editor. I’ll remind you of what to use for each example as we go. But remember,
    when you don’t see IRB’s `>>`, you’ll want to use a text editor.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 书中的其他程序较长，因此你希望能够修改或改进它们并修正错误。这意味着你需要用文本编辑器来编写它们。我会在每个示例中提醒你该使用什么编辑器。但记住，当你看不见IRB的`>>`时，你就需要使用文本编辑器。
- en: Once we jump into the story, you’ll hear about *Computing Contraptions*. These
    are imaginary versions of computers just like yours, and whenever you see characters
    in the story running Ruby on a Computing Contraption, they’re really just giving
    IRB and Ruby a spin, so you can follow along yourself at home.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们进入故事，你会听到关于*计算装置*的描述。这些是与你的计算机类似的虚拟计算机版本，每当你在故事中看到角色在计算装置上运行Ruby时，他们实际上是在使用IRB和Ruby，所以你也可以在家自己跟着操作。
- en: 'Finally, some of the scripts later in the book get pretty long. I’ll break
    those up into multiple sections and narrate each one. You’ll see numbered balls
    that look like this:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，本书后面的某些脚本会比较长。我会把它们分成多个部分并逐个讲解。你会看到像这样的编号球：
- en: ➊ ➋ ➌ ➍ ➎
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: ➊ ➋ ➌ ➍ ➎
- en: I’ll refer to those numbers in the text so you can walk through each of the
    examples step-by-step. You don’t type these into the computer; they’re just for
    reference!
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我会在文本中引用这些数字，这样你就可以一步步地跟着每个示例操作。你不需要把这些输入到电脑中；它们只是供参考！
- en: Again, don’t worry if you forget the differences between the IRB and Ruby script
    prompts—I’ll remind you as we go along!
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 再次提醒，如果你忘记了IRB和Ruby脚本提示符之间的区别，不用担心——我会在过程中提醒你！
- en: Into the Shiny Red Yonder
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进入闪亮的红色远方
- en: Don’t worry about understanding all the code you just saw in these examples.
    We’ve only just started learning Ruby, and I promise we’ll go through all of its
    secrets over the course of the next few chapters. We’ll cover how to handle text
    and numbers, how to help our programs make decisions based on information they
    get from the people using them, how to create our own Ruby commands, how to write
    scripts that will connect to websites on the Internet, and much more.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 不用担心理解你刚刚在这些例子中看到的所有代码。我们才刚开始学习 Ruby，我保证在接下来的几个章节中，我们将深入探讨它的所有秘密。我们将讲解如何处理文本和数字，如何帮助程序根据用户提供的信息做出决策，如何创建自己的
    Ruby 命令，如何编写可以连接到互联网网站的脚本，等等。
- en: I said earlier that writing Ruby is more like writing stories than writing instructions
    for a machine, so I’ll be using stories to teach you how Ruby works. In the pages
    that follow, I’ll introduce you to a few characters who will help explain everything
    you’d ever want to know about Ruby. Some will be expert Ruby programmers, and
    some, like you, will be brand new to the language. Many will have all sorts of
    problems that they think can’t be solved, but with a bit of hard work and some
    Ruby magic, they’ll find out that their troubles aren’t nearly as bad as they
    seem. Speaking of magic, there’ll be a bit of that, too—a king, a queen, a castle,
    an enchanted (possibly slightly haunted) forest, a wandering minstrel, some witches
    and wizards, a dragon or two, and a couple of kids a lot like you who have wandered
    into this crazy kingdom and have no choice but to explore . . .
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前说过，编写 Ruby 更像是写故事，而不是为机器编写指令，因此我将通过故事来教你 Ruby 是如何工作的。在接下来的页面中，我将介绍一些角色，他们将帮助解释你想了解的
    Ruby 知识。有些将是 Ruby 编程专家，有些像你一样是 Ruby 新手。许多人会遇到各种各样他们认为无法解决的问题，但通过一点努力和一些 Ruby 魔法，他们会发现这些问题并不像看起来那么严重。说到魔法，接下来也会有一点——一位国王、一位女王、一座城堡、一片被施了魔法（可能稍微有些鬼气）的森林、一位流浪的吟游诗人、一些巫师和魔法师、几条龙，当然，还有几位像你一样的小孩，他们迷失在这个疯狂的王国中，只能开始探索……
- en: '![image with no caption](../Images/httpatomoreillycomsourcenostarchimages2159969.png.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![没有标题的图片](../Images/httpatomoreillycomsourcenostarchimages2159969.png.jpg)'
- en: '* * *'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ^([[1](#ch01fn01)]) Google Tech Talks, Feb. 2008 (*[https://www.youtube.com/watch?v=oEkJvvGEtB4](https://www.youtube.com/watch?v=oEkJvvGEtB4)*).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: ^([[1](#ch01fn01)]) Google 技术讲座，2008年2月 (*[https://www.youtube.com/watch?v=oEkJvvGEtB4](https://www.youtube.com/watch?v=oEkJvvGEtB4)*).
