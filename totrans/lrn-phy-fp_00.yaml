- en: INTRODUCTION
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: '![Image](Images/common.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/common.jpg)'
- en: One of the best ways to learn something is to teach it. It is invaluable to
    have a person who is willing to listen to what we say, to read what we write,
    and to respond. Knowing that someone is listening or reading encourages us to
    spend time and effort creating something of quality. And if our writing incites
    a response, so much the better, for we have started a conversation that might
    challenge us to sharpen our understanding.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 学习某件事最好的方法之一就是教授它。拥有一个愿意倾听我们所说、阅读我们所写并给予回应的人是无价的。知道有人在倾听或阅读，会激励我们花时间和精力去创作有质量的东西。如果我们的写作能够引发回应，那就更好了，因为我们已经开始了一场可能挑战我们加深理解的对话。
- en: A pleasant and productive way to learn physics is to teach a computer how to
    do it. We admit up front that the computer is not as rich a listener as a person
    and cannot provide the depth or breadth of response to our writing that a person
    can. On the other hand, the computer is very attentive, willing to listen incessantly,
    and unwilling to accept statements unless they are expressed in clear language
    and make sense. The computer can provide us with a useful response because it
    will happily calculate what we ask it to calculate, and it will quickly tell us
    if what we just said makes no sense (and hopefully give us a clue about why it
    makes no sense).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 学习物理的一种愉快而富有成效的方式是教计算机如何做。我们承认，计算机不像人类那样丰富地倾听，也无法提供像人类那样深度和广度的回应。然而，计算机非常专注，愿意不停地倾听，不会接受除非表达清晰且有意义的陈述。计算机可以为我们提供有用的反馈，因为它会乐于计算我们要求它计算的内容，并会迅速告诉我们我们刚才说的是否有意义（并且希望能给我们提供一个提示，告诉我们为什么它没有意义）。
- en: This book is about learning basic theoretical physics by teaching a computer
    how to do it. We will spend a substantial amount of time with Newton’s second
    law. We will focus on the concept of the *state* of a physical system and see
    that Newton’s second law is the core rule for describing how the state changes
    in time. We will study basic electromagnetic theory, asking the computer to calculate
    electric and magnetic fields produced by charge and current distributions. The
    point is to deepen our understanding of physics by approaching it from a new angle,
    with a new language. The language we will use is precise and will help to clarify
    our thinking.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目的是通过教计算机如何做来学习基础理论物理。我们将花费相当多的时间在牛顿第二定律上。我们将重点关注物理系统的*状态*概念，并看到牛顿第二定律是描述状态随时间变化的核心规则。我们将研究基本的电磁理论，要求计算机计算由电荷和电流分布产生的电场和磁场。关键在于通过从一个新角度、用一种新语言来接近物理学，进而深化我们对物理学的理解。我们将使用精确的语言，这将有助于澄清我们的思维。
- en: Who This Book Is For
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书的读者对象
- en: This book arises from a course in computational physics I teach to second-year
    students of physics at Lebanon Valley College. I expect that you have had one
    year of introductory physics and at least one semester of calculus. No previous
    programming experience is required. The purpose of the book is to deepen your
    understanding of basic physics by exploring it in a new language. By using a formal
    language to express the ideas of physics, we will stretch our ability to formulate
    and communicate the ideas of physics as we also calculate quantities we are interested
    in and make graphs and animations.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书源于我在黎巴嫩山谷学院教授的计算物理课程，面向物理专业的二年级学生。我预计你已经学习过一年入门物理课程，并且至少有一个学期的微积分基础。不需要任何编程经验。本书的目的是通过用一种新语言探索物理学，从而加深你对基础物理学的理解。通过使用一种形式化语言表达物理学的思想，我们将提高自己表述和交流物理学思想的能力，同时计算我们感兴趣的量，制作图表和动画。
- en: Because the book begins with a self-contained introduction to the Haskell programming
    language for people who have not programmed before, it can be used as a supplement
    for introductory and intermediate courses in physics in which the instructor or
    student
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书为从未编程过的人提供了自包含的 Haskell 编程语言介绍，因此可以作为物理学入门和中级课程的补充教材，适合那些希望通过编程加深对物理学理解的学生。
- en: wishes to include a computational component, or
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 希望包含计算组件，或
- en: desires a deeper understanding of the structure of basic physical theories.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渴望深入理解基本物理理论的结构。
- en: The book is also appropriate for self-study by any student who wishes to deepen
    their understanding of physics by programming.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本书也适合任何希望通过编程加深物理学理解的学生进行自学。
- en: Why Functional Programming, and Why Haskell?
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么选择函数式编程，为什么是 Haskell？
- en: Many scientists, after learning their second programming language, develop the
    idea that all programming languages are more or less the same and that the difference
    between languages is mainly one of syntax. Scientists are busy people, and they
    have their work to do, so perhaps they can be excused for choosing not to dive
    into the sea of available programming languages to learn the more complex truth
    that languages can differ on a semantic level and can have profound effects on
    the way a person thinks about the problem they are writing code to solve. The
    style of programming called *functional programming* grows from a different branch
    of the programming language tree than object-oriented programming, and the two
    do not mix well together. Neither is clearly better for all applications.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 许多科学家在学习第二门编程语言后，产生了所有编程语言或多或少是相同的看法，认为语言之间的差异主要是语法上的差异。科学家们通常非常忙碌，他们有自己的工作要做，所以或许可以原谅他们选择不去深入了解那些可用的编程语言，去学习更加复杂的真理，即不同编程语言在语义层面上也可能有所不同，而且这种差异可能对人们思考他们正在编写代码解决的问题的方式产生深远的影响。被称为*函数式编程*的编程风格，源于编程语言树中的一个与面向对象编程不同的分支，这两者不太容易结合在一起。两者在所有应用中都没有明显的优劣之分。
- en: Physics can be encoded in any programming language. Why use a functional language
    instead of a more mainstream object-oriented language? Beauty and power are to
    be found more in verbs than in nouns. Newton found beauty and power not in the
    world per se, but in the description of how the world changes. Functional programming
    found beauty and power not in objects but in the functions that take objects as
    input and produce objects as output, and in the notion that such objects might
    themselves be functions. Haskell is a good programming language for learning physics
    for two reasons. First, Haskell is a functional programming language. This means
    that functions play a central role in the language, including functions that take
    other functions as arguments and return functions as results. Many physical ideas
    are naturally expressed in the language of higher-order functions. Second, Haskell’s
    type system provides a clean way to organize our thinking about the physical quantities
    and procedures of interest in physics. I know of no better way to clarify my thinking
    than expressing my ideas in functional language.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 物理学可以用任何编程语言来编码。为什么要使用函数式语言而不是更主流的面向对象语言？美丽和力量更多地体现在动词上，而非名词上。牛顿发现美丽和力量不在于世界本身，而在于描述世界如何变化的方式。函数式编程发现美丽和力量不在于对象，而在于那些以对象为输入并以对象为输出的函数，及其对象本身也可能是函数的概念。Haskell
    是学习物理的一个很好的编程语言，原因有二。首先，Haskell 是一种函数式编程语言。这意味着函数在语言中占据了核心地位，包括那些接受其他函数作为参数并返回函数作为结果的函数。许多物理思想自然可以用高阶函数的语言来表达。其次，Haskell
    的类型系统提供了一种清晰的方式来组织我们对物理中感兴趣的物理量和过程的思考。我不知道有什么比用函数式语言来表达我的想法更能澄清我的思路了。
- en: About This Book
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于本书
- en: This book is composed of three parts. The first part is an introduction to functional
    programming in general and Haskell in particular, aimed at people who have never
    programmed before. The second part shows how to use a functional language to express
    Newton’s second law, and consequently to solve mechanics problems. The third part
    aims at electromagnetic theory, showing how Faraday and Maxwell’s ideas can be
    expressed in functional language, and how problems that involve electric and magnetic
    fields can be solved. Throughout, we’ll see how functional language is close to
    mathematics; how it’s really a form of mathematics that computers can understand.
    Many of the deep ideas of physics that are so eloquently and succinctly expressed
    in mathematical language find beautiful expression in functional language as well.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本书由三部分组成。第一部分是对函数式编程的一般介绍，特别是对 Haskell 的介绍，面向从未编程过的人。第二部分展示了如何使用函数式语言表达牛顿第二定律，并进而解决力学问题。第三部分旨在阐述电磁理论，展示如何在函数式语言中表达法拉第和麦克斯韦的思想，并解决涉及电场和磁场的问题。在整个过程中，我们将看到函数式语言如何接近数学；它实际上是一种计算机可以理解的数学形式。许多在数学语言中清晰而简洁表达的物理学深刻思想，在函数式语言中也找到了美丽的表达。
- en: 'The book includes the following elements:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本书包括以下内容：
- en: '**[Part I: The Haskell Language](part01.xhtml)**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第一部分：Haskell 语言](part01.xhtml)**'
- en: '**[Chapter 1: Calculating with Haskell](ch01.xhtml)** This chapter is all about
    how to use Haskell as a calculator. Basic mathematical operations are built into
    Haskell, and these are immediately available to do calculations.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第1章：使用 Haskell 进行计算](ch01.xhtml)** 本章内容是关于如何将 Haskell 用作计算器。基本的数学运算已经内建于
    Haskell 中，可以立即用于进行计算。'
- en: '**[Chapter 2: Writing Basic Functions](ch02.xhtml)** Here we begin writing
    functions. Haskell functions are very much like mathematical functions. The simplest
    Haskell functions take a number as input and produce a number as output. As you
    might guess, functions play a central role in functional programming languages.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第2章：编写基本函数](ch02.xhtml)** 在这里，我们开始编写函数。Haskell 函数与数学函数非常相似。最简单的 Haskell
    函数接受一个数字作为输入，并产生一个数字作为输出。正如你可能猜到的那样，函数在函数式编程语言中发挥着核心作用。'
- en: '**[Chapter 3: Types and Entities](ch03.xhtml)** This chapter introduces the
    idea of types. The entities, such as numbers and functions, with which Haskell
    deals are classified into types; every entity has a type. Types guide our thinking
    about what can be done with an entity. Real numbers can be squared, for example,
    but it doesn’t always make sense to square a function.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第3章：类型和实体](ch03.xhtml)** 本章介绍了类型的概念。Haskell 处理的实体，如数字和函数，都是按类型分类的；每个实体都有一个类型。类型帮助我们思考可以对实体进行哪些操作。例如，实数可以被平方，但对函数进行平方通常是没有意义的。'
- en: '**[Chapter 4: Describing Motion](ch04.xhtml)** Here we look at how the motion
    of a particle in one dimension is described in Haskell. We introduce position,
    velocity, and acceleration, and we notice how these quantities are related by
    the notion of a derivative from calculus.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第4章：描述运动](ch04.xhtml)** 在这里，我们研究如何在 Haskell 中描述一维运动中的粒子运动。我们引入了位置、速度和加速度，并注意到这些量是通过微积分中的导数概念相互关联的。'
- en: '**[Chapter 5: Working with Lists](ch05.xhtml)** This chapter discusses lists
    in Haskell. Lists can be lists of numbers, lists of functions, or lists of more
    complicated things. After functions, lists are probably the most important structures
    in functional programming because they are used in the process of iteration (doing
    something over and over again).'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第5章：操作列表](ch05.xhtml)** 本章讨论了 Haskell 中的列表。列表可以是数字列表、函数列表，或更复杂对象的列表。在函数之后，列表可能是函数式编程中最重要的结构，因为它们用于迭代过程（反复执行某些操作）。'
- en: '**[Chapter 6: Higher-Order Functions](ch06.xhtml)** This chapter introduces
    higher-order functions, which are functions that take other functions as input
    or produce functions as output. Higher-order functions are central to the power
    and concision of functional languages. We give examples of how higher-order functions
    naturally appear in physics.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第6章：高阶函数](ch06.xhtml)** 本章介绍了高阶函数，它是接受其他函数作为输入或输出其他函数的函数。高阶函数是函数式编程语言的强大功能和简洁性的核心。我们举例说明了高阶函数如何自然地出现在物理学中。'
- en: '**[Chapter 7: Graphing Functions](ch07.xhtml)** This chapter shows how to graph
    a function such as the cosine function or a function that you define that takes
    numbers as input and produces numbers as output.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第7章：绘制函数图像](ch07.xhtml)** 本章展示了如何绘制函数的图像，例如余弦函数或你定义的函数，这些函数接受数字作为输入并生成数字作为输出。'
- en: '**[Chapter 8: Type Classes](ch08.xhtml)** Here we introduce type classes in
    Haskell. Type classes own functions that need to be able to work with some, but
    not all, types. Equality checking is such a function. We want to be able to check
    equality of numbers, equality of lists, and equality of other things. The equality
    checking function is owned by a type class.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第8章：类型类](ch08.xhtml)** 在这里，我们介绍了 Haskell 中的类型类。类型类拥有需要能够处理某些类型（而非所有类型）的函数。等式检查就是这样的一个函数。我们希望能够检查数字的相等性、列表的相等性，以及其他事物的相等性。等式检查函数由类型类拥有。'
- en: '**[Chapter 9: Tuples and Type Constructors](ch09.xhtml)** This chapter introduces
    tuples, a structure that holds two or more objects. This chapter also discusses
    type constructors, which are functions at the type level (in other words, functions
    that take a type as input and produce a type as output).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第9章：元组和类型构造器](ch09.xhtml)** 本章介绍了元组，一种包含两个或更多对象的结构。本章还讨论了类型构造器，它是类型级别的函数（换句话说，接受类型作为输入并产生类型作为输出的函数）。'
- en: '**[Chapter 10: Describing Motion in Three Dimensions](ch10.xhtml)** This chapter
    is similar in outlook to [Chapter 4](ch04.xhtml) in that it focuses on a particular
    need that physics has (in this case, a need for vectors) and shows how that need
    is satisfied in the Haskell language.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第10章：描述三维中的运动](ch10.xhtml)** 本章与[第4章](ch04.xhtml)类似，专注于物理学的特定需求（在本章中是对向量的需求），并展示了Haskell如何满足这一需求。'
- en: '**[Chapter 11: Creating Graphs](ch11.xhtml)** Here we return to the topic of
    making graphs, first broached in [Chapter 7](ch07.xhtml), and include more detail
    about how to make pleasing and informative graphs.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第11章：创建图形](ch11.xhtml)** 本章我们回到创建图形的主题，首次在[第7章](ch07.xhtml)提到，并且更详细地介绍了如何制作美观且信息丰富的图形。'
- en: '**[Chapter 12: Creating Stand-Alone Programs](ch12.xhtml)** In the beginning
    of the book, we interact with Haskell primarily through the GHCi interactive compiler.
    Later in the book, when we start doing animation, we make stand-alone programs.
    This chapter shows several ways to produce stand-alone programs.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第12章：创建独立程序](ch12.xhtml)** 在书的开头，我们主要通过GHCi交互式编译器与Haskell进行交互。后来在书中，当我们开始做动画时，我们制作独立程序。本章展示了几种创建独立程序的方法。'
- en: '**[Chapter 13: Creating 2D and 3D Animations](ch13.xhtml)** This chapter introduces
    animation, showing how to make simple 2D and 3D animations.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第13章：创建二维和三维动画](ch13.xhtml)** 本章介绍了动画，展示了如何制作简单的二维和三维动画。'
- en: '**[Part II: Newtonian Mechanics](part02.xhtml)**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第二部分：牛顿力学](part02.xhtml)**'
- en: '**[Chapter 14: Newton’s Second Law and Differential Equations](ch14.xhtml)**
    Here we introduce Newton’s first and second laws. We learn how to solve a limited
    class of mechanics problems in one spatial dimension. We also learn why some mechanics
    problems are easy to solve and others are difficult. It comes down to what the
    forces depend on. This chapter covers situations of increasing complexity, starting
    with constant forces and ending with forces that depend on time and the particle’s
    velocity. This chapter introduces the concept of differential equations, and we
    write code capable of solving a first-order differential equation.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第14章：牛顿第二定律与微分方程](ch14.xhtml)** 本章介绍了牛顿的第一定律和第二定律。我们学习如何在一维空间中解决有限类别的力学问题。我们还学习了为什么有些力学问题容易解决，而有些则难以解决。这归结于力依赖于什么。本章涵盖了不断增加复杂性的情况，从恒定力到依赖于时间和粒子速度的力。本章介绍了微分方程的概念，我们编写了能够求解一阶微分方程的代码。'
- en: '**[Chapter 15: Mechanics in One Dimension](ch15.xhtml)** This chapter continues
    the path of increasing complexity, looking at forces that depend on time, position,
    and velocity. Such situations lead to a second-order differential equation, which
    we solve by introducing state variables.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第15章：一维力学](ch15.xhtml)** 本章继续增加复杂性的路径，研究依赖于时间、位置和速度的力。这些情况导致了一个二阶微分方程，我们通过引入状态变量来求解。'
- en: '**[Chapter 16: Mechanics in Three Dimensions](ch16.xhtml)** Here we return
    to the vector setting first seen in [Chapter 10](ch10.xhtml), completing the theory
    of the mechanics of a single object. We show how to express and solve Newton’s
    second law for a single particle in three dimensions.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第16章：三维力学](ch16.xhtml)** 本章我们回到在[第10章](ch10.xhtml)首次看到的向量设置，完成了单个物体的力学理论。我们展示了如何在三维空间中表达和求解牛顿第二定律。'
- en: '**[Chapter 17: Satellite, Projectile, and Proton Motion](ch17.xhtml)** This
    chapter gives three extended examples, applying the ideas and tools developed
    in the previous chapter.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第17章：卫星、抛体和质子运动](ch17.xhtml)** 本章提供了三个扩展示例，应用前一章中开发的思想和工具。'
- en: '**[Chapter 18: A Very Short Primer on Relativity](ch18.xhtml)** This chapter
    shows what mechanics looks like if we embrace the ideas of special relativity
    in favor of those of Newton. We see that many of our tools survive the transition,
    enabling us to solve problems in relativity.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第18章：相对论简短入门](ch18.xhtml)** 本章展示了如果我们采纳特殊相对论的理念而不是牛顿理论，力学会是什么样子。我们看到，许多工具在转变后依然有效，使我们能够解决相对论中的问题。'
- en: '**[Chapter 19: Interacting Particles](ch19.xhtml)** This chapter introduces
    Newton’s third law, which is needed when we care about more than one object. We
    develop a theory of interacting particles and express the key ideas in Haskell.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第19章：相互作用的粒子](ch19.xhtml)** 本章介绍了牛顿第三定律，当我们关心不止一个物体时需要使用该定律。我们发展了一个相互作用粒子的理论，并用Haskell表达了关键概念。'
- en: '**[Chapter 20: Springs, Billiard Balls, and a Guitar String](ch20.xhtml)**
    This chapter gives three extended examples of interacting particles in which we
    use the ideas and tools of [Chapter 19](ch19.xhtml). Having dealt with the mechanics
    of arbitrarily many interacting particles in three dimensions, our treatment of
    Newtonian mechanics is complete.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第20章：弹簧、台球和吉他弦](ch20.xhtml)** 本章通过三个扩展示例，展示了相互作用粒子的问题，我们运用了[第19章](ch19.xhtml)中的思想和工具。在处理了三维空间中任意数量相互作用粒子的力学后，我们的牛顿力学讨论已完结。'
- en: '**[Part III: Electromagnetic Theory](part03.xhtml)**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第三部分：电磁理论](part03.xhtml)**'
- en: '**[Chapter 21: Electricity](ch21.xhtml)** This chapter looks at the old electric
    theory of Coulomb, in which electricity is simply a force on charged particles
    produced by other charged particles, similar in spirit to Newtonian gravity. Coulomb’s
    electricity does not use the electric field.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第21章：电学](ch21.xhtml)** 本章介绍了古老的库仑电学理论，其中电学仅仅是由其他带电粒子产生的对带电粒子的力，这与牛顿引力的精神相似。库仑电学不使用电场的概念。'
- en: '**[Chapter 22: Coordinate Systems and Fields](ch22.xhtml)** Here we introduce
    the key idea of a field, which is a function of space—a quantity that can have
    a different value at each position in space. This chapter also introduces Cartesian,
    cylindrical, and spherical coordinates for three-dimensional space.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第22章：坐标系与场](ch22.xhtml)** 本章引入了场的关键概念，场是空间的一个函数——一个在空间的每个位置可能具有不同值的量。本章还介绍了三维空间中的笛卡尔坐标、柱面坐标和球面坐标。'
- en: '**[Chapter 23: Curves, Surfaces, and Volumes](ch23.xhtml)** This chapter discusses
    how we can describe curves, surfaces, and volumes in the Haskell language.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第23章：曲线、曲面与体积](ch23.xhtml)** 本章讨论了我们如何在Haskell语言中描述曲线、曲面和体积。'
- en: '**[Chapter 24: Electric Charge](ch24.xhtml)** This chapter covers electric
    charge, the quantity responsible for electrical phenomena, and the different kinds
    of charge distributions.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第24章：电荷](ch24.xhtml)** 本章涵盖了电荷这一导致电气现象的物理量以及不同类型的电荷分布。'
- en: '**[Chapter 25: Electric Field](ch25.xhtml)** This chapter describes how electric
    charge produces an electric field, beginning our study of modern Faraday-Maxwell
    electromagnetic theory in which electric and magnetic fields play such a crucial
    role.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第25章：电场](ch25.xhtml)** 本章描述了电荷如何产生电场，开始了我们对现代法拉第-麦克斯韦电磁理论的学习，在该理论中，电场和磁场扮演着至关重要的角色。'
- en: '**[Chapter 26: Electric Current](ch26.xhtml)** This chapter discusses electric
    current and current distributions, paralleling the discussion of charge in [Chapter
    24](ch24.xhtml).'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第26章：电流](ch26.xhtml)** 本章讨论电流和电流分布，类似于[第24章](ch24.xhtml)中对电荷的讨论。'
- en: '**[Chapter 27: Magnetic Field](ch27.xhtml)** This chapter describes how current
    produces a magnetic field, paralleling [Chapter 25](ch25.xhtml) in that charge
    is to electric field as current is to magnetic field, at least in static situations.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第27章：磁场](ch27.xhtml)** 本章描述了电流如何产生磁场，与[第25章](ch25.xhtml)类似，电荷与电场的关系就像电流与磁场的关系，至少在静态情况下是如此。'
- en: '**[Chapter 28: The Lorentz Force Law](ch28.xhtml)** While [Chapters 24](ch24.xhtml)
    through [27](ch27.xhtml) deal with the aspect of electromagnetic theory in which
    charge creates fields, this chapter discusses the second aspect of electromagnetic
    theory, in which fields exert forces on charge. The Lorentz force law describes
    this second aspect.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第28章：洛伦兹力定律](ch28.xhtml)** [第24章](ch24.xhtml)到[第27章](ch27.xhtml)讨论了电磁理论中电荷如何产生场，而本章讨论了电磁理论的第二个方面，即场如何对电荷施加力。洛伦兹力定律描述了这一第二个方面。'
- en: '**[Chapter 29: The Maxwell Equations](ch29.xhtml)** This chapter presents the
    Maxwell equations, in which the first aspect of electromagnetic theory reaches
    its full sophistication, and we see how electric and magnetic fields are dynamic
    quantities, interacting and changing in time. Although there are many situations
    and applications we won’t discuss, the Maxwell equations and the Lorentz force
    law give a complete description of modern electromagnetic theory—a theory important
    not just for explaining electricity, magnetism, and light, but also for serving
    as the prototype for present-day theories of elementary particle physics.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第29章：麦克斯韦方程组](ch29.xhtml)** 本章介绍了麦克斯韦方程组，其中电磁理论的第一个方面达到了完整的复杂性，我们看到电场和磁场是动态的量，它们在相互作用并随时间变化。尽管有许多情况和应用我们不讨论，麦克斯韦方程和洛伦兹力定律提供了现代电磁理论的完整描述——这一理论不仅对于解释电、磁和光有重要意义，而且也为当今的基本粒子物理学理论提供了原型。'
- en: '**[Appendix: Installing Haskell](app.xhtml)** This appendix shows how to install
    the Haskell compiler and software libraries we will use.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**[附录：安装 Haskell](app.xhtml)** 本附录展示了如何安装我们将使用的 Haskell 编译器和软件库。'
- en: This book has been a labor of love, meaning that my motivation for writing it
    comes from a love of the ideas presented and a desire to share them. I hope that
    I have created a beautiful book, but even more than that, I hope that this book
    helps you to express beautiful ideas with beautiful code. Enjoy!
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是我满怀热情的劳动成果，意味着写作本书的动力源于我对其中思想的热爱以及分享这些思想的愿望。我希望我创造了一本美丽的书，但更重要的是，我希望这本书能帮助你用优美的代码表达出美丽的思想。享受其中！
