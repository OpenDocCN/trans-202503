- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Your system shouldn’t be a mystery. You should be able to make your software
    do what you want it to do without “magic” incantations or rituals. The key to
    attaining this power lies in understanding the fundamentals of what the software
    does and how it works, and that’s what this book is all about. You should never
    have to fight with a computer.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Linux is a great platform for learning because it doesn’t try to hide anything
    from you. In particular, you can find most system configuration details in easy-to-read
    plaintext files. The only tricky part is figuring out which parts are responsible
    for what and how they all fit together.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Who Should Read This Book?
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Your interest in learning how Linux works may have come from any number of sources.
    In the professional realm, operations and DevOps folks need to know nearly everything
    that you’ll find in this book. Linux software architects and developers should
    also know this material in order to make the best use of the operating system.
    Researchers and students, often running their own Linux systems, will also find
    that this book provides useful explanations for *why* things are set up the way
    they are.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: Then there are the tinkerers—people who just love to play around with their
    computers for fun, profit, or both. Want to know why certain things work while
    others don’t? Want to know what happens if you move something around? You’re probably
    a tinkerer.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although Linux is beloved by programmers, you don’t need to be a programmer
    to read this book; you need only basic computer-user knowledge. That is, you should
    be able to bumble around a GUI (especially the installer and settings interface
    for a Linux distribution) and know what files and directories (folders) are. You
    should also be prepared to check additional documentation on your system and on
    the web. The most important thing you need is to be ready and willing to play
    around with your computer.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: How to Read This Book
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Building the requisite knowledge is a challenge in tackling any technical subject.
    Explaining how software systems work can get *really* complicated. Too much detail
    can bog down readers and make important concepts difficult to grasp (the human
    brain just can’t process so many new ideas at once), but too little detail can
    leave readers in the dark and unprepared for later material.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: 'I’ve designed most chapters to tackle the most important material first: the
    basic information that you’ll need in order to progress. In places, I’ve simplified
    things in order to keep focus. As a chapter progresses, you’ll see much more detail,
    especially in the last few sections. Do you need to know those bits right away?
    In most cases, no; I note this where applicable. If your eyes start to glaze over
    when you’re faced with a lot of extra details about concepts you just learned,
    don’t hesitate to skip ahead to the next chapter or take a break. The nitty-gritty
    will still be there waiting for you.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: A Hands-on Approach
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: However you choose to proceed through this book, you should have a Linux machine
    in front of you, preferably one that you’re confident abusing with experiments.
    You might prefer to play around with a virtual installation—I used VirtualBox
    to test much of the material in this book. You also should have superuser (root)
    access, but try to use a regular user account most of the time. You’ll mostly
    work at the command line, in a terminal window or a remote session. If you haven’t
    worked much in that environment, no problem; Chapter 2 will bring you up to speed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你选择如何进行这本书的学习，你都应该有一台Linux机器在你面前，最好是一台你敢用实验折腾的机器。你也许会更喜欢通过虚拟安装进行操作——我使用了VirtualBox来测试本书中的大部分内容。你还应该拥有超级用户（root）权限，但大多数时候尽量使用普通用户帐户。你将主要在命令行界面工作，可以是在终端窗口或远程会话中。如果你在这个环境中没有太多经验，没问题；第二章会让你熟悉起来。
- en: 'Commands in this book typically look like this:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的命令通常如下所示：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Enter the text in bold; the nonbolded text that follows is what the machine
    spits back. The `$` is the prompt for a regular user account. If you see a `#`
    as a prompt, you need to be superuser. (More on that in Chapter 2.)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 输入粗体文本；后面的非粗体文本是机器返回的内容。`$`是普通用户帐户的提示符。如果你看到`#`作为提示符，你需要是超级用户。（第二章会对此做进一步介绍。）
- en: How This Book Is Organized
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书的组织结构
- en: I’ve grouped the book’s chapters into three basic parts. The first is introductory,
    giving a bird’s-eye view of the system and then offering hands-on experience with
    some tools you’ll need for as long as you run Linux. Next, you’ll explore each
    part of the system in more detail, from device management to network configuration,
    following the general order in which the system starts. Finally, you’ll get a
    tour of some pieces of a running system, learn some essential skills, and get
    some insight into the tools that programmers use.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我将本书的章节分为三个基本部分。第一部分是入门部分，提供系统的鸟瞰图，然后提供一些你在使用Linux时会需要的工具的实践经验。接下来，你将更详细地探索系统的每个部分，从设备管理到网络配置，按照系统启动的一般顺序。最后，你将参观运行中的系统的一些组件，学习一些基本技能，并了解程序员使用的工具。
- en: With the exception of Chapter 2, most of the early chapters heavily involve
    the Linux kernel, but you’ll work your way into user space as the book progresses.
    (If you don’t know what I’m talking about here, don’t worry; I’ll explain in Chapter
    1.)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 除了第二章，早期的大部分章节都涉及到Linux内核，但随着书本的进展，你会逐步进入用户空间。（如果你不明白我在说什么，别担心；我会在第一章解释。）
- en: 'The material is meant to be as distribution-agnostic as possible. Having said
    this, it can be tedious to cover all variations in systems software, so I’ve tried
    to cover the two major distribution families: Debian (including Ubuntu) and RHEL/Fedora/CentOS.
    I’ve also focused on desktop and server installations. A significant amount of
    material carries over into embedded systems, such as Android and OpenWRT, but
    it’s up to you to discover the differences on those platforms.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本书内容旨在尽可能不依赖于特定发行版。话虽如此，涵盖所有系统软件的变体可能会很繁琐，因此我尝试覆盖两大主要发行版系列：Debian（包括Ubuntu）和RHEL/Fedora/CentOS。我还集中讨论了桌面和服务器安装。大量内容也适用于嵌入式系统，如Android和OpenWRT，但你需要自己探索这些平台的差异。
- en: What’s New in the Third Edition?
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第三版新增了哪些内容？
- en: The second edition was published during a time of transition for Linux systems.
    Several traditional components were in the process of being replaced, which made
    handling some subjects tricky, because readers could encounter a wide variety
    of configurations. Now, however, those new pieces (systemd in particular) have
    near-universal adoption, so I’ve been able to streamline a fair amount of the
    discussion.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第二版是在Linux系统过渡时期发布的。几个传统组件正在被替换，这使得处理一些主题变得棘手，因为读者可能会遇到各种各样的配置。然而，现在这些新组件（特别是systemd）几乎得到了普遍采用，因此我能够简化讨论的内容。
- en: I’ve retained the emphasis on the kernel’s role in a Linux system. This material
    has proven popular, and you probably interact with the kernel more than you realize.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我保留了对内核在Linux系统中角色的强调。这部分内容已经证明很受欢迎，你可能比你意识到的更频繁地与内核交互。
- en: I’ve added a new chapter introducing virtualization. Although Linux has always
    been popular on virtual machines (such as cloud services), that type of virtualization
    lies outside the scope of this book, because the way the system operates on a
    virtual machine is almost the same as on “bare metal” hardware. So, the discussion
    here primarily focuses on deciphering the terminology you’ll encounter. However,
    containers have gained in popularity since the second edition was published, and
    they also fit here, because they basically consist of a bunch of Linux features
    like the ones described throughout the rest of the book. Containers make heavy
    use of cgroups, which also get new treatment in this third edition.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Other subjects (not necessarily related to containers) I happily expanded on
    are the Logical Volume Manager, the journald logging system, and IPv6 in the networking
    material.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Though I’ve added a significant amount of content, the book is still a reasonable
    size. I want to provide the information you need to get on the fast track, and
    that includes explaining certain details along the way that can be hard to grasp,
    but I don’t want you to have to become a weightlifter in order to pick up this
    book. Once you master the important subjects here, you should have no trouble
    seeking out and understanding more details.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: The first edition included historical information that I removed later to improve
    focus. If you’re interested in Linux and how it relates to the history of Unix,
    pick up Peter H. Salus’s *The Daemon, the Gnu, and the Penguin* (Reed Media Services,
    2008). It does a great job of explaining how the software we use has evolved over
    time.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: A Note on Terminology
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The names of certain operating system elements have caused a fair amount of
    debate historically—even the word *Linux* itself. Should it be “Linux,” or should
    it be “GNU/Linux” to reflect that the operating system also contains pieces from
    the GNU Project? Throughout this book, I’ve tried to use the most common, least
    awkward names possible.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
