- en: '## **B'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: '## **B'
- en: RESOURCES**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 资源**
- en: '![Image](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common.jpg)'
- en: This appendix contains information to help you get started with the projects.
    We cover how to find electronic components for purchase, how to power digital
    circuits, and how to set up a Raspberry Pi.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录包含帮助你开始项目的信息。我们介绍了如何寻找可购买的电子元件，如何为数字电路供电，以及如何设置树莓派。
- en: '**Buying Electronic Components for the Projects**'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**购买项目所需电子元件**'
- en: Working with electronics and programming in a hands-on way helps you learn the
    concepts in this book, but trying to obtain various components can be intimidating.
    This section helps you find the electronic components you’ll need for the projects.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 通过动手操作电子元件和编程，你能帮助你更好地理解本书中的概念，但获取各种组件可能让人感到有些吓人。本节将帮助你找到项目所需的电子元件。
- en: 'Here’s the full list of all the components used in the projects, in case you
    want to order everything at once:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是所有项目中使用的组件的完整清单，以防你想一次性购买所有材料：
- en: Breadboards (at least one 830-point breadboard. You can get by with only one
    breadboard if you plan to tear down each circuit between exercises. If you wish
    to keep your circuits intact, you need more than one.)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面包板（至少一个830点的面包板。如果你打算在每次练习之间拆解电路，使用一个面包板就足够了。如果你希望保持电路完整，您需要多个面包板。）
- en: 'Resistors (an assortment of resistors. Here are the specific values used: 47kΩ,
    10kΩ, 4.7kΩ, 1kΩ, 470Ω, 330Ω, 220Ω.)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电阻器（一组电阻器。这里是使用的具体数值：47kΩ，10kΩ，4.7kΩ，1kΩ，470Ω，330Ω，220Ω。）
- en: Digital multimeter
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字万用表
- en: 9-volt battery
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9伏电池
- en: 9-volt battery clip connector
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9伏电池夹连接器
- en: Pack of 5mm or 3mm red LEDs (light-emitting diodes)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一包5mm或3mm的红色LED（发光二极管）
- en: Two NPN BJT transistors, model 2N2222 in TO-92 packaging (also known as PN2222)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个NPN BJT晶体管，型号2N2222，TO-92封装（也称为PN2222）
- en: Jumper wires designed for use in a breadboard (both male-to-male and male-to-female)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适用于面包板的跳线（包括公对公和公对母）
- en: Pushbuttons or slide switches that fit in a breadboard
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按钮开关或滑动开关，适合面包板使用
- en: 7402 integrated circuit
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7402集成电路
- en: 7408 integrated circuit
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7408集成电路
- en: 7432 integrated circuit
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7432集成电路
- en: Two 7473 integrated circuits
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个7473集成电路
- en: 7486 integrated circuit
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7486集成电路
- en: 220μF electrolytic capacitor
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 220μF电解电容
- en: 10μF electrolytic capacitor
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10μF电解电容
- en: 5-volt power supply (See the section “Powering Digital Circuits” on [page 336](appb.xhtml#page_336)
    for details.)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 5伏电源（详情请参见[第336页](appb.xhtml#page_336)的“数字电路供电”部分。）
- en: Raspberry Pi and related items (See the section “Raspberry Pi” on [page 341](appb.xhtml#page_341)
    for details.)
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 树莓派及相关设备（详情请参见[第341页](appb.xhtml#page_341)的“树莓派”部分。）
- en: 'Recommended: Alligator clips (These can make it easier to connect a battery
    to a breadboard or your multimeter to a circuit.)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐：鳄鱼夹（这些可以使你更容易将电池连接到面包板或将万用表连接到电路。）
- en: 'Optional: Wire stripper (You may need one to strip away plastic from the ends
    of wires and expose the copper.)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选：剥线器（你可能需要一个剥线器来剥去电线末端的塑料，暴露出铜线。）
- en: Although this list calls out specific counts for certain components, for some
    parts, you probably want to buy a few more than the stated number in case of damage
    or in case you wish to experiment. I recommend a few spare transistors and one
    spare of each integrated circuit.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这个清单列出了某些元件的具体数量，但对于一些零件，你可能想多买一些以防损坏，或者如果你想做实验的话。我建议你准备一些备用的晶体管和每种集成电路的一个备用。
- en: '***7400 Part Numbers***'
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***7400零件编号***'
- en: Finding an appropriate 7400 series integrated circuit (IC) can be challenging,
    since these chips are identified with part numbers that include more detail than
    just the 74*xx* identifier. The 7400 series has a number of subfamilies, each
    with its own part numbering scheme. Plus, manufacturers add their own prefixes
    and suffixes to the part numbers. This can be confusing at first, so let’s look
    at an example. I recently wanted to purchase a 7408 IC, but the part number I
    actually ordered was an SN74LS08N. Let’s break down that part number in [Figure
    B-1](appb.xhtml#chBfig1).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找适合的7400系列集成电路（IC）可能会很有挑战性，因为这些芯片的零件编号比仅仅74*xx*标识符包含更多的细节。7400系列有许多子系列，每个子系列都有自己的零件编号方案。此外，制造商还会在零件编号前后添加自己的前缀和后缀。一开始可能会很混乱，所以让我们看一个例子。我最近想购买一个7408集成电路，但我实际订购的零件编号是SN74LS08N。让我们在[图B-1](appb.xhtml#chBfig1)中分解这个零件编号。
- en: '![image](../images/figB-1.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-1.jpg)'
- en: '*Figure B-1: Interpreting a 7400 series part number*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*图B-1：解读7400系列零件编号*'
- en: So the SN74LS08N is a 7408 AND gate manufactured by Texas Instruments, in the
    low-power Schottky subfamily, packaged in through-hole packaging. No need to worry
    about the details of “low-power Schottky,” other than to know that it’s a common
    subfamily of parts that works for our purposes.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，SN74LS08N是由德州仪器生产的7408与门，属于低功耗肖特基子系列，采用通孔封装。无需担心“低功耗肖特基”的细节，只需要知道这是一个常见的零件子系列，适用于我们的目的。
- en: For the projects in this book, you want to ensure that you use parts that are
    compatible with each other. The projects assume that you are using parts that
    are compatible with the original 7400 logic levels (5V). Considering what is readily
    available, I’d recommend that you buy parts in the LS or HCT series. So if you
    want a 7408, you could buy an SN74**LS**   08N or SN74**HCT**   08N. Generally
    speaking, you should be able to mix LS and HCT parts in the same circuit. The
    prefix letters, SN in this example, don’t matter when it comes to compatibility;
    you don’t need to buy parts from a specific manufacturer. The suffix does matter,
    since it indicates the package type. Be sure to get parts that fit on a breadboard—N
    parts work well.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的项目要求你确保所使用的零件相互兼容。项目假设你使用的零件兼容原始的7400逻辑电平（5V）。考虑到现有的零件，我建议你购买LS或HCT系列的零件。所以如果你需要7408，你可以购买SN74**LS**
    08N或SN74**HCT** 08N。一般来说，你应该能够在同一电路中混合使用LS和HCT系列的零件。前缀字母（例如此处的SN）对兼容性没有影响；你不需要购买特定厂商的零件。后缀则非常重要，因为它表示封装类型。确保购买适合面包板的零件——N系列的零件适用。
- en: '***Shopping***'
  id: totrans-34
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***购物***'
- en: If you happen to have a local electronics store nearby that can supply these
    parts, then I’d suggest you visit it. The store employees can help ensure that
    you get what you need. However, I’ve found that such stores are increasingly rare;
    you may not be able to get everything you need locally.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果附近恰好有一家能够提供这些零件的本地电子商店，我建议你去看看。店员可以帮助确保你得到需要的零件。然而，我发现这类商店越来越稀少；你可能无法在本地找到所有需要的零件。
- en: 'Your next option is to shop online. To make things easier for you, I’ve put
    together a web page with links to parts you need from various stores: *[https://www.howcomputersreallywork.com/parts](https://www.howcomputersreallywork.com/parts)/*.
    Or if you want to shop around yourself, [Table B-1](appb.xhtml#chBtab1) is a list
    of some of the popular stores where you can get parts; I’ve included notes on
    each. I’m not endorsing these shops in particular; you may find parts elsewhere.
    Of course, the status of these online stores could change after this book is published.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你的下一个选择是在线购物。为了方便你，我整理了一个网页，提供了来自不同商店的所需零件链接： *[https://www.howcomputersreallywork.com/parts](https://www.howcomputersreallywork.com/parts)/*。或者，如果你想自己挑选，[表
    B-1](appb.xhtml#chBtab1)列出了一些你可以购买零件的热门商店；我还为每个商店添加了备注。我并不特别推荐这些商店，你也许能在其他地方找到零件。当然，这些在线商店的状态可能会在本书出版后发生变化。
- en: '**Table B-1:** Shopping Online for Electronic Components'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 B-1：** 在线购买电子元件'
- en: '| **Store** | **Comments** |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| **商店** | **备注** |'
- en: '| --- | --- |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Adafruit*[https://www.adafruit.com](https://www.adafruit.com)*/ | Adafruit
    has a great selection of electronics parts; however, the last time I checked,
    they don’t carry individual 7400 series logic gates. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| Adafruit*[https://www.adafruit.com](https://www.adafruit.com)*/ | Adafruit提供了丰富的电子元件选择；不过，最后一次检查时，他们没有单独销售7400系列的逻辑门。
    |'
- en: '| Amazon*[https://www.amazon.com](https://www.amazon.com)*/ | Amazon carries
    popular items like the Raspberry Pi, but ordering integrated circuits often either
    isn’t an option or is costly. Some items are only available in packs of 50 or
    100, for example. You probably don’t need 100 transistors, but if you are a Prime
    member, it actually might be more cost-effective to buy 100 transistors from Amazon
    than to buy 5 from other stores, once you factor in shipping. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| Amazon*[https://www.amazon.com](https://www.amazon.com)*/ | Amazon销售流行商品，如树莓派，但集成电路的订购通常不可选或者价格较高。例如，一些商品只能按50或100个为一包出售。你可能不需要100个晶体管，但如果你是Prime会员，实际上从Amazon购买100个晶体管比从其他商店购买5个要更划算，尤其是考虑到运费。
    |'
- en: '| Digi-Key Electronics*[https://www.digikey.com](https://www.digikey.com)*/
    | Digi-Key is targeted at professionals rather than hobbyists, and the site can
    be a bit intimidating, but you can find integrated circuits here, including the
    7400 series logic circuits. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| Digi-Key Electronics*[https://www.digikey.com](https://www.digikey.com)*/
    | Digi-Key主要面向专业人士而非爱好者，网站可能会让人感到有些难以应对，但你可以在这里找到集成电路，包括7400系列的逻辑电路。 |'
- en: '| Mouser Electronics*[https://www.mouser.com](https://www.mouser.com)*/ | Mouser
    is similar to Digi-Key in that it targets professionals and carries integrated
    circuits. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| Mouser Electronics*[https://www.mouser.com](https://www.mouser.com)*/ | Mouser
    类似于 Digi-Key，主要面向专业人士，并销售集成电路。 |'
- en: '| SparkFun*[https://www.sparkfun.com](https://www.sparkfun.com)*/ | As with
    Adafruit, you can find lots of electronics here, but no 7400 logic gates, at least
    when I last checked. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| SparkFun*[https://www.sparkfun.com](https://www.sparkfun.com)*/ | 和 Adafruit
    一样，你可以在这里找到很多电子产品，但至少我上次检查时，找不到 7400 逻辑门。 |'
- en: '| Texas Instruments*[https://store.ti.com](https://store.ti.com)*/ | Texas
    Instruments manufactures 7400 series logic circuits, and they also sell them directly
    through their website. I’ve found that their prices are reasonable, and shipping
    options are good. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 德州仪器*[https://store.ti.com](https://store.ti.com)*/ | 德州仪器生产 7400 系列逻辑电路，并通过其官网直接销售这些产品。我发现他们的价格合理，且运输选项很好。
    |'
- en: A number of websites are dedicated to helping people find electronic parts.
    These sites provide a user interface that’s easy to navigate, and they allow for
    price comparison across multiple retailers. Two that I’ve found useful are Octopart
    (*[https://octopart.com](https://octopart.com)*) and Findchips (*[https://www.findchips.com](https://www.findchips.com)*).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 许多网站专门帮助人们找到电子零件。这些网站提供易于导航的用户界面，并允许跨多个零售商进行价格比较。我发现两个非常有用的网站是 Octopart (*[https://octopart.com](https://octopart.com)*)
    和 Findchips (*[https://www.findchips.com](https://www.findchips.com)*)。
- en: '**Powering Digital Circuits**'
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**为数字电路供电**'
- en: 7400 series logic chips need 5V, so using a 9-volt battery isn’t an option for
    powering these integrated circuits. Let’s look at some options for powering your
    7400 circuits.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 7400 系列逻辑芯片需要 5V 电压，因此使用 9 伏电池不能为这些集成电路供电。我们来看一下为你的 7400 电路供电的几种选项。
- en: '***USB Charger***'
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***USB 充电器***'
- en: Many smartphone chargers made since 2010 have a micro-USB connector. Around
    2016, USB Type-C (or just USB-C) connectors began to become more common. Fortunately,
    USB of either variety provides 5V DC. So a USB charger, like the one shown in
    [Figure B-2](appb.xhtml#chBfig2), is great for powering your 7400 series integrated
    circuits. If you’re like me, you may have a bunch of old micro-USB phone chargers
    around your home already.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 2010 年以来，许多智能手机充电器都配备了微型 USB 连接器。大约在 2016 年，USB Type-C（或称 USB-C）连接器开始变得更为普及。幸运的是，无论是
    USB 类型的哪种，都提供 5V 直流电。因此，像[图 B-2](appb.xhtml#chBfig2)中展示的 USB 充电器，都是为你的 7400 系列集成电路供电的好选择。如果你像我一样，家里可能已经有一堆旧的微型
    USB 手机充电器。
- en: '![image](../images/figB-2.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-2.jpg)'
- en: '*Figure B-2: A micro-USB phone charger*'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 B-2：一款微型 USB 手机充电器*'
- en: However, there’s a challenge; a micro-USB connector doesn’t plug into a breadboard,
    at least not without some help! A good option for using a USB charger with a breadboard
    is to buy a *micro-USB breakout board*, like the one shown in [Figure B-3](appb.xhtml#chBfig3).
    This lets you plug your USB charger into the breakout board, and the breakout
    board plugs into your breadboard. Adafruit, SparkFun, and Amazon all carry these.
    Some soldering may be required. These boards typically have five pins, but for
    this purpose, you only need to concern yourself with the VCC (5V) pin and GND
    (ground) pin. When connecting this to a breadboard, remember to orient the pins
    in such a way that they are not connected to each other, as shown in [Figure B-3](appb.xhtml#chBfig3).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，存在一个挑战；微型 USB 连接器不能直接插入面包板，至少没有一些额外的帮助！一个不错的选择是购买一个*微型 USB 分解板*，就像在[图 B-3](appb.xhtml#chBfig3)中展示的那样。这样你可以将
    USB 充电器插入分解板，分解板再插入面包板。Adafruit、SparkFun 和亚马逊都出售这些产品。可能需要一些焊接。这些板通常有五个引脚，但对于这个用途，你只需要关注
    VCC（5V）引脚和 GND（地）引脚。当将其连接到面包板时，记得调整引脚的方向，确保它们不会相互连接，正如[图 B-3](appb.xhtml#chBfig3)中所示。
- en: '![image](../images/figB-3.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-3.jpg)'
- en: '*Figure B-3: A micro-USB breakout board, inserted in breadboard (right)*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 B-3：插入面包板的微型 USB 分解板（右侧）*'
- en: '***Breadboard Power Supply***'
  id: totrans-56
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***面包板电源供应***'
- en: Another option is to buy a breadboard power supply, like DFRobot DFR0140 or
    YwRobot Power MB V2 545043\. These handy devices plug into your breadboard and
    are powered by a wall DC power supply with a 2.1mm barrel jack. The source DC
    supply should provide a voltage between 6V and 12V (be sure to verify the specific
    voltage allowed for the particular board you use). These 2.1mm DC power supplies
    are fairly common for powering consumer electronics—you may have several already—and
    this type of board just makes it easy to convert the voltage to 5V and connect
    it to a breadboard. [Figure B-4](appb.xhtml#chBfig4) shows one of these common
    DC power supplies with a 2.1mm barrel jack along with a breadboard power supply.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是购买一个面包板电源供应器，比如DFRobot DFR0140或YwRobot Power MB V2 545043。这些方便的设备插入你的面包板，并由一个带2.1mm圆柱插孔的墙面直流电源供电。该直流电源的电压应在6V到12V之间（确保验证你所使用的特定板子所允许的电压）。这些2.1mm直流电源在为消费电子产品供电时很常见——你可能已经有几个了——这种类型的电源板使得转换电压为5V并连接到面包板变得非常简单。[图B-4](appb.xhtml#chBfig4)展示了一个带有2.1mm圆柱插孔的常见直流电源和一个面包板电源。
- en: '![image](../images/figB-4.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-4.jpg)'
- en: '*Figure B-4: A 2.1mm barrel jack power supply and a breadboard power supply*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*图B-4：一个带2.1mm圆柱插孔的电源和一个面包板电源*'
- en: 'One word of caution: I’ve personally seen these boards experience a failure
    in their voltage regulator, causing the board to output a voltage higher than
    5V. When connecting one of these power supplies, don’t assume that the output
    voltage is actually 5V. Test the output voltage before connecting your circuit!
    Using a lower input DC voltage should help reduce this risk as well, so I’d recommend
    that you use a 9-volt or lower DC power supply, given an allowed range of 6V to
    12V. These boards also have the option to output 3.3V instead of 5V, controlled
    with a jumper setting on the board, so make sure the jumpers are in the correct
    place.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有一点需要注意：我个人曾见过这些电源板的电压调节器发生故障，导致板子输出的电压超过了5V。在连接这些电源时，不要假设输出电压一定是5V。在连接电路之前，务必测试输出电压！使用较低的输入直流电压有助于降低此风险，因此我建议你使用9伏或更低的直流电源，考虑到允许的电压范围是6V到12V。这些电源板也可以选择输出3.3V而不是5V，可以通过板上的跳线设置来控制，所以请确保跳线放置在正确的位置。
- en: '***Power from a Raspberry Pi***'
  id: totrans-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***来自树莓派的电源***'
- en: If you’re going to buy a Raspberry Pi for the projects starting in [Chapter
    8](ch08.xhtml), you’re in luck; it has the side benefit of doubling as a 5-volt
    power supply! The GPIO pins on the Pi have various functions, but for this purpose,
    all you need to know is that pin 6 is ground and pin 2 supplies 5V. You can connect
    those pins to your breadboard as your power supply. See [Figure 13-11](ch13.xhtml#ch13fig11)
    on [page 312](ch13.xhtml#page_312) for a GPIO pin diagram. There’s no need to
    even install any Raspberry Pi software, because as soon as the Pi powers on, the
    5-volt pin will turn on. Just connect your Pi to power. As a bonus, pin 1 can
    supply 3.3V if needed. To be clear, if you do this, you aren’t using any of the
    computing power of the Pi; it is just acting as a 5-volt power supply. There is
    a limit to how much current the Raspberry Pi can supply. The power adapter you
    use for the Pi will have a maximum current rating, and the Pi itself will draw
    some current, maybe 300mA when idle. This probably goes without saying, but if
    you go with this option, be careful that you connect your circuit properly; you
    don’t want to accidentally damage your Raspberry Pi! [Figure B-5](appb.xhtml#chBfig5)
    shows a Raspberry Pi being used as a power supply.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算为[第8章](ch08.xhtml)的项目购买一台树莓派，你真幸运；它还有一个附加好处，就是可以当作5伏电源使用！树莓派的GPIO引脚有多种功能，但对于这个用途，你只需要知道引脚6是地线，引脚2提供5V。你可以将这些引脚连接到你的面包板上，作为电源使用。请参阅[图13-11](ch13.xhtml#ch13fig11)和[第312页](ch13.xhtml#page_312)的GPIO引脚图。甚至无需安装任何树莓派软件，因为一旦树莓派开机，5伏引脚会自动启用。只需将树莓派连接到电源即可。作为额外的好处，引脚1还可以提供3.3V（如果需要的话）。需要澄清的是，如果你这样做，你并没有使用树莓派的计算能力；它只是充当一个5伏电源。树莓派提供的电流是有限的。你为树莓派使用的电源适配器会有一个最大电流额定值，而树莓派本身也会消耗一些电流，可能在空闲时为300mA左右。这可能是显而易见的，但如果你选择这个选项，请小心确保你的电路连接正确；你可不想不小心损坏你的树莓派！[图B-5](appb.xhtml#chBfig5)展示了树莓派作为电源使用的情况。
- en: '![image](../images/figB-5.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-5.jpg)'
- en: '*Figure B-5: Using a Raspberry Pi as a power supply*'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*图B-5：将树莓派用作电源*'
- en: '***AA Batteries***'
  id: totrans-65
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***AA电池***'
- en: You can also use AA batteries to power a digital circuit. A single AA battery
    supplies 1.5V, so three AA batteries can be connected in series to provide 4.5V.
    Although this voltage is less than the recommended voltage for 7400 series components,
    it should work for the circuits in this book, although your results may vary.
    You can buy a battery holder for three AA batteries and connect its output wires
    to your breadboard, as shown in [Figure B-6](appb.xhtml#chBfig6).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用AA电池为数字电路供电。单个AA电池提供1.5V电压，因此可以将三节AA电池串联连接，提供4.5V电压。虽然这个电压低于7400系列元件推荐的电压，但对于本书中的电路来说应该是可行的，尽管你的结果可能会有所不同。你可以购买一个适用于三节AA电池的电池座，并将其输出电线连接到你的面包板，如[图B-6](appb.xhtml#chBfig6)所示。
- en: '![image](../images/figB-6.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-6.jpg)'
- en: '*Figure B-6: Using three AA batteries to power a circuit on a breadboard*'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '*图B-6：使用三节AA电池为面包板上的电路供电*'
- en: '**Troubleshooting Circuits**'
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**电路故障排除**'
- en: Sometimes you build a circuit, expecting things to work a certain way, but the
    result is something else entirely. Maybe the circuit doesn’t appear to do anything,
    or maybe it behaves in a way you did not intend. Don’t worry, this happens to
    everyone who builds circuits! It’s easy to make a wiring mistake or to have a
    loose connection that throws everything off. Troubleshooting and diagnosing problems
    in a circuit is a valuable skill that can actually help you expand your understanding
    of how things work. Here I share some troubleshooting approaches that I use when
    my circuits don’t work as expected.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候你搭建电路时，预期电路按某种方式工作，但结果却完全不同。也许电路看起来什么都不做，或者它的行为与你的预期不一致。别担心，这种情况每个做电路的人都会遇到！接线错误或松动的连接很容易导致问题，打乱整个电路的工作。故障排除和诊断电路问题是一项非常有价值的技能，实际上能帮助你更好地理解事物的工作原理。在这里，我分享一些当我的电路不能正常工作时，我常用的故障排除方法。
- en: If any component in your circuit is too hot to touch, immediately disconnect
    the circuit from its power source. Wiring mistakes can lead to a component overheating.
    This often causes damage to the component if it’s left connected for more than
    a few seconds.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果电路中的任何元件过热到无法触摸的程度，请立即将电路与电源断开。接线错误可能导致元件过热。如果电路继续连接超过几秒钟，往往会损坏元件。
- en: Your primary tool for circuit troubleshooting is a multimeter. With a multimeter,
    you can easily check the voltage at various points around a circuit. Ask yourself,
    “What do I expect the voltage to be at this point or at that point in my circuit?”
    For 5-volt digital circuits, the expected voltages are usually going to be approximately
    0V or approximately 5V. If your meter shows an unexpected voltage anywhere in
    the circuit, ask yourself, “What things could influence this voltage?” and check
    those things.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你进行电路故障排除的主要工具是万用表。使用万用表，你可以轻松检查电路中各个点的电压。问问自己：“我预期电路中这个点或那个点的电压应该是多少？”对于5伏的数字电路，预期的电压通常是大约0V或大约5V。如果你的万用表显示电路中的某个点电压异常，问问自己，“是什么因素可能影响这个电压？”然后检查这些因素。
- en: For digital circuits, I usually take a “work backward” approach, starting with
    the component that is misbehaving. Confirm that its output voltage is wrong, and
    then check its inputs. Is one of those inputs also an unexpected voltage? If so,
    move back to the component that feeds that input, and check its output. Repeat
    until you find the source of the problem.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数字电路，我通常采取“逆向工作”的方法，从表现异常的元件开始。确认它的输出电压是否有问题，然后检查它的输入。是否有某个输入电压也不正常？如果是，回溯到为该输入提供电压的元件，检查其输出。重复此过程，直到找到问题的根源。
- en: When checking voltages, I’ve found that the simplest approach is to connect
    your black/negative/COM lead to a ground point in your circuit and leave it there.
    If there isn’t an obvious place to connect the lead to ground, just add a jumper
    wire to a ground point on the breadboard, then use an alligator clip to connect
    that jumper wire to your COM lead. With your COM lead anchored to ground, you
    can easily use your positive lead, usually colored red, to poke around at various
    points in the circuit and check voltages relative to ground.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查电压时，我发现最简单的方法是将黑色/负极/COM探头连接到电路中的接地点，并保持连接。如果没有明显的接地点，可以在面包板上的接地点加一个跳线，然后用鳄鱼夹将跳线连接到COM探头。将COM探头固定在地面后，你可以轻松地使用红色的正极探头，在电路的各个点进行测量，检查与地面相比的电压。
- en: The other thing I regularly check with a multimeter during troubleshooting is
    resistance. Sometimes I know the expected resistance between two points, and I
    want to verify that resistance value. If there’s more than one path connecting
    the points you are measuring, be sure you know the expected resistance so you
    can correctly interpret your measurement.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我在故障排除时经常使用万用表检查的另一项是电阻。有时我知道两个点之间预期的电阻值，并且希望验证这个电阻值。如果连接这两个点有多个路径，请确保你知道预期的电阻，以便正确解释你的测量结果。
- en: Usually I’m checking resistance to simply ensure that two points are connected,
    in which case I expect a resistance of approximately 0Ω. Conversely, sometimes
    I want to ensure that two points are *not* connected, and then I look for a very
    high resistance, an open circuit. Some meters also include a *continuity check*
    feature, where the meter emits an audible tone if two points are connected. If
    you are just checking for connectivity, sometimes this is preferable to checking
    resistance.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通常我检查电阻是为了确保两个点连接，这时我预期的电阻值大约是 0Ω。相反，有时我希望确保两个点*没有*连接，这时我会寻找一个非常高的电阻，即开路。一些万用表还包括*连续性检查*功能，当两个点连接时，万用表会发出声音。如果你只是检查连接性，有时这种方式比检查电阻更为方便。
- en: 'Some specific things to verify when troubleshooting:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 故障排除时需要验证的一些具体事项：
- en: '**Breadboard power**   Does your breadboard have the appropriate voltage along
    the long power columns? The positive voltage column should equal the voltage from
    your source (say, a 9-volt battery or a 5-volt supply). Be sure to check both
    sides of the breadboard if both sides are in use.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**面包板电源** 你的面包板在长电源列上是否有合适的电压？正电压列应该等于你的电源电压（例如，9伏电池或5伏电源）。如果两个面包板两边都在使用，一定要检查两侧的电压。'
- en: '**Breadboard connections**   Verify that your wiring on the breadboard is sound.
    Are wires fully inserted, or do you have loose connections? Double-check the alignment
    of connections on the breadboard; is your wire in the right row? Is anything extra
    connected in the row you are checking?'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**面包板连接** 验证面包板上的接线是否稳固。导线是否完全插入，还是有松动的连接？再次检查面包板上连接的对齐情况；导线是否插在正确的行？你检查的行中是否有多余的连接？'
- en: '**Resistors**   Are your resistors the correct values? If needed, remove each
    one from the circuit and verify with a multimeter.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**电阻器** 你的电阻器的数值是否正确？如有需要，逐一将它们从电路中取出，并使用万用表进行验证。'
- en: '**LEDs**   Are your LEDs oriented properly? The shorter lead should be connected
    closer to ground.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**LED灯** 你的 LED 是否正确安装？短引脚应该连接到地线。'
- en: '**Capacitors**   If your capacitor is polarized, ensure you have the positive
    and negative leads properly oriented. Also check the capacitance value.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**电容器** 如果你的电容器是有极性的，确保正负引脚正确连接。还要检查电容值。'
- en: '**Integrated circuits**   Are your ICs properly connected to ground and to
    positive voltage? Is the chip fully seated in the breadboard, placed across the
    gap in the center? Check that your IC is aligned correctly by looking for the
    notch. Are you using the right part number?'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**集成电路** 你的 IC 是否正确连接到地线和正电压？芯片是否完全插入面包板，并且位于中央的间隙中？通过检查缺口来确认 IC 是否正确对齐。你是否使用了正确的零件编号？'
- en: '**Digital input switches/buttons**   When using pull-down resistors, is one
    side of the switch connected to positive voltage, and the other side connected
    through a pull-down resistor to ground? Is the digital input pin on the related
    chip connected to the same side of the switch as the pull-down resistor?'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**数字输入开关/按钮** 使用下拉电阻时，开关的一侧是否连接到正电压，另一侧是否通过下拉电阻连接到地线？相关芯片上的数字输入引脚是否连接到与下拉电阻相同的一侧？'
- en: '**Raspberry Pi**'
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**树莓派**'
- en: The Raspberry Pi is a tiny, inexpensive computer. It was developed to promote
    teaching of computer science, and it has gained a following among technology enthusiasts.
    It’s our computer of choice for this book, so here we cover the basics of setting
    up and using a Raspberry Pi.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派是一款小巧、廉价的计算机。它的开发目的是促进计算机科学的教学，并且在技术爱好者中获得了广泛关注。它是我们本书中使用的计算机，所以在这里我们将介绍设置和使用树莓派的基本知识。
- en: '***Why Raspberry Pi***'
  id: totrans-87
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***为什么选择树莓派***'
- en: Before we go into the details of how to configure your Raspberry Pi, I’d like
    to explain why I chose the Raspberry Pi for this book. Some of the projects require
    a computer of some sort to interact with. Now, you may be saying to yourself,
    “I already own a computer; why do I need another?” Yes, since you are reading
    a book on computing you probably already own a computer, or maybe several! However,
    not everyone owns the same kind of computer, and some types of computing devices
    are better suited than others for education. Additionally, some of the projects
    in this book deal with low-level details of computing, so everyone following along
    needs the same kind of device.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在详细讲解如何配置你的Raspberry Pi之前，我想先解释一下为什么我选择Raspberry Pi作为本书的主要工具。一些项目需要某种计算机设备来进行交互。现在，你可能会想：“我已经有计算机了，为什么还需要一个？”是的，既然你正在阅读一本关于计算的书，你可能已经拥有计算机，甚至多台！然而，并不是每个人都拥有相同类型的计算机，有些类型的计算设备在教育方面比其他设备更为适合。此外，本书中的一些项目涉及计算机的底层细节，因此每个参与的人都需要使用相同类型的设备。
- en: The Raspberry Pi was a natural choice since it’s inexpensive (about $35) and
    designed with computer education in mind. My goal isn’t for you to switch to the
    Raspberry Pi as your primary computer or to make you a Raspberry Pi expert. Instead,
    we use the Raspberry Pi to learn core concepts that you can then apply to any
    computing device. The Raspberry Pi uses an ARM processor, and we’ll be running
    *Raspberry Pi OS* (previously called *Raspbian*) on it, a version of Linux optimized
    for the Raspberry Pi.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 选择Raspberry Pi是一个自然的决定，因为它价格低廉（大约$35）且专为计算机教育设计。我的目标不是让你把Raspberry Pi作为主力电脑，或者让你成为Raspberry
    Pi专家。相反，我们使用Raspberry Pi来学习一些核心概念，然后你可以将这些概念应用到任何计算设备上。Raspberry Pi使用ARM处理器，我们将运行*Raspberry
    Pi OS*（之前称为*Raspbian*），这是为Raspberry Pi优化的Linux版本。
- en: '***Parts Needed***'
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***所需配件***'
- en: 'First things first, you are going to need to obtain a Raspberry Pi and some
    accessories. Here’s what you need:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要获得一个Raspberry Pi和一些配件。以下是你需要的东西：
- en: '**Raspberry Pi.** These are usually about $35 and can be purchased online.
    At the time of this writing, the latest model is the Raspberry Pi 4 Model B, and
    the exercises in this book were tested with this version and with the Raspberry
    Pi 3 Model B+. If a newer model is released, it likely will be acceptable as well,
    given the Raspberry Pi’s track record of backward compatibility. The Raspberry
    Pi 4 Model B is available in multiple memory configurations (1GB, 2GB, 4GB, and
    8GB)—any of them are fine for this book.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Raspberry Pi**。这些设备通常售价约为$35，可以在线购买。本文撰写时，最新型号为Raspberry Pi 4 Model B，本书中的练习已在该版本和Raspberry
    Pi 3 Model B+上进行了测试。如果发布了新型号，考虑到Raspberry Pi具有向后兼容的良好记录，它也应该是可用的。Raspberry Pi
    4 Model B有多个内存配置（1GB、2GB、4GB和8GB），本书中的任何一个都适用。'
- en: '**USB-C power supply (only for Raspberry Pi 4).** The Raspberry Pi 4 uses a
    USB-C power supply. The power supply needs to provide 5V and at least 3A. Certain
    USB-C power supplies are incompatible with some Raspberry Pi 4 devices, so I recommend
    you purchase a USB-C power supply specifically designed for the Raspberry Pi 4.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**USB-C电源适配器（仅适用于Raspberry Pi 4）**。Raspberry Pi 4使用USB-C电源适配器。电源适配器需要提供5V，并且至少3A。某些USB-C电源适配器与一些Raspberry
    Pi 4设备不兼容，因此我建议你购买专为Raspberry Pi 4设计的USB-C电源适配器。'
- en: '**Micro-USB power supply (only for Raspberry Pi 3).** Unlike the Raspberry
    Pi 4, the Raspberry Pi 3 is powered by a micro-USB power adapter, like the ones
    that many smartphones use. If you have a smartphone charger already, it might
    work with the Pi. Just be sure that the connector is micro-USB. The standard voltage
    output from such chargers is 5V, but the maximum amount of current they supply
    varies. For the Raspberry Pi 3, it’s recommended that you use a power supply that
    can provide at least 2.5A. The current requirements vary depending on what you
    have connected to the Pi. So check your smartphone charger to see how much current
    it can supply; you may need to purchase a micro-USB power supply designed for
    the Pi.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Micro-USB电源适配器（仅适用于Raspberry Pi 3）**。与Raspberry Pi 4不同，Raspberry Pi 3使用micro-USB电源适配器供电，类似于许多智能手机所使用的适配器。如果你已经有智能手机充电器，它可能也适用于Raspberry
    Pi。只需确保连接器是micro-USB。此类充电器的标准电压输出为5V，但它们提供的最大电流不同。对于Raspberry Pi 3，建议使用能够提供至少2.5A电流的电源适配器。电流需求根据你连接到Raspberry
    Pi的设备而有所不同。因此，请检查你的智能手机充电器，看它能够提供多少电流；你可能需要购买专为Raspberry Pi设计的micro-USB电源适配器。'
- en: '**MicroSD card, 8GB or larger.** The Raspberry Pi doesn’t come with any storage,
    so you need to add it yourself via a microSD card. These cards are commonly used
    in smartphones and cameras, so you may have an extra one lying around already.
    The process of installing Raspberry Pi OS will erase existing data, so be sure
    to back up anything you have stored on your microSD card.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MicroSD 卡，8GB 或更大。** 树莓派没有自带存储器，因此你需要通过 microSD 卡来添加存储。这些卡片通常用于智能手机和相机，所以你可能已经有一张闲置的卡。安装树莓派操作系统的过程会清除已有的数据，请确保备份你在
    microSD 卡上存储的任何内容。'
- en: '**USB keyboard and USB mouse.** Any standard USB keyboard and USB mouse will
    do.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**USB 键盘和 USB 鼠标。** 任何标准的 USB 键盘和 USB 鼠标都可以使用。'
- en: '**Television or monitor that supports HDMI.** All modern televisions and many
    computer monitors support HDMI connections.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持 HDMI 的电视或显示器。** 所有现代电视和许多计算机显示器都支持 HDMI 连接。'
- en: '**HDMI cable.** The Raspberry Pi 3 uses a standard, full-sized HDMI cable,
    but the Raspberry Pi 4 has a micro-HDMI port. Assuming your display device accepts
    full-sized HDMI input, this means that for a Raspberry Pi 4 you need a micro-HDMI
    to HDMI cable or adapter.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HDMI 电缆。** 树莓派 3 使用标准的全尺寸 HDMI 电缆，但树莓派 4 有一个 micro-HDMI 端口。如果你的显示设备支持全尺寸
    HDMI 输入，那么树莓派 4 需要一个 micro-HDMI 到 HDMI 的电缆或适配器。'
- en: '**Optional: Raspberry Pi case.** This isn’t required, but it is nice to have.
    Note that the Raspberry Pi 3 and Raspberry Pi 4 have different physical layouts,
    so they need differently shaped cases.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可选：树莓派机箱。** 这不是必须的，但有的话会很不错。请注意，树莓派 3 和树莓派 4 的物理布局不同，因此它们需要不同形状的机箱。'
- en: See the “Shopping” section of “Buying Electronic Components” earlier in this
    appendix for help getting these parts.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅本附录中“购买电子组件”部分的“购物”小节，以获取如何购买这些零件的帮助。
- en: '***Setting Up a Raspberry Pi***'
  id: totrans-101
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***设置树莓派***'
- en: The Raspberry Pi website (*[https://www.raspberrypi.org](https://www.raspberrypi.org)*)
    contains detailed setup guides that walk through setting up a Raspberry Pi. I
    don’t cover all the details here since the online documentation already exists,
    and it changes over time. Instead let me give you a brief overview of the steps
    required.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派网站 (*[https://www.raspberrypi.org](https://www.raspberrypi.org)*) 提供了详细的设置指南，带你一步步完成树莓派的设置。我在这里不会覆盖所有细节，因为在线文档已经存在，并且随着时间变化会更新。让我为你简要概述一下所需的步骤。
- en: 'You have several options for installing Raspberry Pi OS on your Raspberry Pi.
    If you have a computer with a microSD card reader/writer, the simplest option
    is to use the *Raspberry Pi Imager*. Here’s how to use this tool to get going
    quickly with your Raspberry Pi:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 你有多种选择可以在树莓派上安装树莓派操作系统。如果你有一台带有 microSD 卡读写器的计算机，最简单的方式是使用 *树莓派镜像工具*。下面是使用这个工具快速启动树莓派的方法：
- en: Insert your microSD card into your computer.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的 microSD 卡插入计算机。
- en: Download the Raspberry Pi Imager from *[https://www.raspberrypi.org/downloads](https://www.raspberrypi.org/downloads)*.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 *[https://www.raspberrypi.org/downloads](https://www.raspberrypi.org/downloads)*
    下载树莓派镜像工具。
- en: Install and run the Raspberry Pi Imager on your computer.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的计算机上安装并运行树莓派镜像工具。
- en: 'Choose the operating system: Raspberry Pi OS (32-bit).'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择操作系统：树莓派操作系统（32 位）。
- en: Choose the SD card you want to use.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你想使用的 SD 卡。
- en: Click “Write” and Raspberry Pi OS will be copied to your microSD card.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“写入”，树莓派操作系统将被复制到你的 microSD 卡中。
- en: Remove the microSD card from your computer.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你的计算机中取出 microSD 卡。
- en: Insert the microSD card into the Raspberry Pi.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 microSD 卡插入树莓派。
- en: Connect the Raspberry Pi to a USB keyboard, USB mouse, and monitor or TV using
    HDMI, and finally to the power supply.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 HDMI 将树莓派连接到 USB 键盘、USB 鼠标以及显示器或电视，最后连接电源。
- en: The Raspberry Pi should boot into Raspberry Pi OS.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 树莓派应该会启动到树莓派操作系统。
- en: Another good option for installing Raspberry Pi OS is to use the Raspberry Pi
    *New Out of Box Software (NOOBS)*. To use NOOBS, download it from *[https://www.raspberrypi.org/downloads](https://www.raspberrypi.org/downloads)*
    and copy it to a blank microSD card. If you don’t have another computer available
    to do this, you can buy a microSD card with a copy of NOOBS preloaded. In either
    case, once you have NOOBS on the microSD card, insert the card into your Raspberry
    Pi and power it on. Follow the on-screen instructions to install Raspberry Pi
    OS.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 安装树莓派操作系统的另一种好方法是使用树莓派的*新盒子软件（NOOBS）*。要使用 NOOBS，请从 *[https://www.raspberrypi.org/downloads](https://www.raspberrypi.org/downloads)*
    下载它并复制到一张空白的 microSD 卡上。如果你没有其他电脑来进行这项操作，你也可以购买一张预加载了 NOOBS 的 microSD 卡。在任何一种情况下，一旦你将
    NOOBS 放到 microSD 卡上，插入树莓派并开启电源。按照屏幕上的指示来安装树莓派操作系统。
- en: '**NOTE**'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*At the time of this writing, a 64-bit version of Raspberry Pi OS is available
    as a beta release. However, the projects in this book were tested with the 32-bit
    Raspberry Pi OS, so I recommend that you stick with the 32-bit version for the
    projects*.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '*在撰写本书时，Raspberry Pi OS 的 64 位版本已经作为测试版发布。然而，本书中的项目是基于 32 位 Raspberry Pi OS
    测试的，因此我建议你在进行项目时使用 32 位版本*。'
- en: '***Using Raspberry Pi OS***'
  id: totrans-117
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用 Raspberry Pi OS***'
- en: Once your Raspberry Pi is set up, I recommend you take a little time to familiarize
    yourself with the user interface of Raspberry Pi OS. If you’ve used a Mac or a
    Windows PC before, the Raspberry Pi OS desktop environment should be somewhat
    familiar. You can open applications in windows, move those windows around, close
    them, and so forth.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的 Raspberry Pi 设置完成，我建议你花点时间熟悉一下 Raspberry Pi OS 的用户界面。如果你之前使用过 Mac 或 Windows
    PC，Raspberry Pi OS 的桌面环境应该会有些熟悉。你可以在窗口中打开应用程序，移动这些窗口，关闭它们，等等。
- en: That said, most of the projects in the book won’t require you to use any of
    the Pi’s graphical applications. Nearly everything can be done from a terminal,
    and most projects require at least some use of the terminal, so let’s take a minute
    to get familiar with it. From the Raspberry Pi OS desktop, you can open a terminal
    window by clicking **Raspberry** (icon in the upper-left corner) ▶ **Accessories**
    ▶ **Terminal** as shown in [Figure B-7](appb.xhtml#chBfig7).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，本书中的大多数项目并不需要你使用任何 Pi 的图形化应用程序。几乎所有的操作都可以通过终端完成，而且大多数项目至少需要使用终端，因此我们先花一点时间来熟悉它。从
    Raspberry Pi OS 的桌面上，你可以通过点击 **Raspberry**（左上角的图标）▶ **附件** ▶ **终端** 来打开一个终端窗口，如
    [图 B-7](appb.xhtml#chBfig7) 所示。
- en: '![image](../images/figB-7.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-7.jpg)'
- en: '*Figure B-7: Opening the Raspberry Pi terminal*'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 B-7：打开 Raspberry Pi 终端*'
- en: 'The terminal is a *command line interface (CLI)*, where everything you do is
    accomplished by typing in commands. Raspberry Pi OS, like all versions of Linux,
    has excellent support for the CLI, and you can do just about anything from a terminal
    if you know the right commands. By default, the terminal on Raspberry Pi OS runs
    a shell called *bash*. A *shell* is a user interface for an operating system,
    which can be either graphical (like the desktop) or command line based. The initial
    text in the bash command line should look something like this:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 终端是一个 *命令行界面（CLI）*，你在其中所做的一切操作都是通过输入命令来完成的。Raspberry Pi OS 和所有版本的 Linux 一样，都对
    CLI 提供了出色的支持。如果你知道正确的命令，你几乎可以从终端做任何事情。默认情况下，Raspberry Pi OS 的终端运行一个叫做 *bash* 的
    Shell。*Shell* 是操作系统的用户界面，可以是图形化的（如桌面）也可以是基于命令行的。bash 命令行中的初始文本应该像这样：
- en: '[PRE0]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let’s examine each part of that text string:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐个分析该文本字符串的各个部分：
- en: '**pi**   This is the username of the currently logged-on user. The default
    user’s name is “pi.”'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**pi**   这是当前登录用户的用户名。默认用户的名称是“pi”。'
- en: '**raspberrypi**   Separated from the username by an @ sign, this is the name
    of the computer.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**raspberrypi**   用@符号与用户名分隔，这是计算机的名称。'
- en: '**~**   This indicates the current directory (folder) you are working in. The
    ~ character has a special meaning; it refers to the current user’s home directory.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**~**   这表示你正在工作的当前目录（文件夹）。~ 字符有特别的含义，它指的是当前用户的主目录。'
- en: '**$**   The dollar sign is the CLI prompt, an indicator that you can type your
    commands here.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**$**   美元符号是 CLI 提示符，表示你可以在此处输入命令。'
- en: 'In this book, when I list commands that should be typed in a terminal, I prefix
    the line with a `$` prompt. As an example, this command lists the files in the
    current directory:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，当我列出应该在终端中输入的命令时，我会在命令前加上一个 `$` 提示符。例如，以下命令列出了当前目录中的文件：
- en: '[PRE1]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To run a command, you don’t need to type the dollar sign; just type the text
    following it, and then press ENTER. If you want to run a command that you previously
    entered, you can press the up arrow on the keyboard to cycle through previously
    issued commands.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行命令，你不需要输入美元符号；只需输入其后面的文本，然后按下 ENTER 键。如果你想运行之前输入过的命令，可以按键盘上的上箭头键浏览之前输入的命令。
- en: 'If you prefer to work in a terminal, you can set up your Raspberry Pi to boot
    directly to a command line rather than to the desktop: **Raspberry** ▶**Preferences**
    ▶**Raspberry Pi Configuration** ▶**System tab** ▶**Boot** ▶**To CLI**. Once you’ve
    made this configuration change, the next start of the system goes directly to
    the CLI rather than the desktop. While in a CLI-only environment, if you want
    to start the desktop environment, just run the following command:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更喜欢在终端中工作，你可以设置树莓派直接启动到命令行界面，而不是桌面环境：**Raspberry** ▶ **Preferences** ▶ **Raspberry
    Pi Configuration** ▶ **System tab** ▶ **Boot** ▶ **To CLI**。完成这个配置更改后，系统下次启动时会直接进入CLI，而不是桌面环境。如果你在CLI-only环境中，并且想要启动桌面环境，只需运行以下命令：
- en: '[PRE2]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As a terminal user, another option is to control your Raspberry Pi from a different
    computer or even from a phone by using *Secure Shell (SSH)* over the network.
    The end result of this approach is that your Pi can run anywhere on your network,
    even without a monitor or keyboard attached, and you can use the keyboard and
    monitor of another device to control it. To pull this off, you must enable SSH
    on the Pi (**Raspberry** ▶**Preferences** ▶**Raspberry Pi Configuration** ▶**Interfaces
    tab** ▶**SSH** ▶**Enable** ), and then run an SSH client application on a second
    device. I won’t include detailed steps for setting this up, but there are plenty
    of guides online for how to do this.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 作为终端用户，另一种选择是通过网络使用*安全外壳（SSH）*从另一台计算机甚至手机控制你的树莓派。这种方法的最终结果是，你的树莓派可以在网络中的任何地方运行，即使没有连接显示器或键盘，你也可以使用其他设备的键盘和显示器来控制它。要实现这一点，你必须在树莓派上启用SSH（**Raspberry**
    ▶ **Preferences** ▶ **Raspberry Pi Configuration** ▶ **Interfaces tab** ▶ **SSH**
    ▶ **Enable**），然后在第二台设备上运行SSH客户端应用。我不会提供详细的设置步骤，但网上有很多指南可以帮助你完成此操作。
- en: 'When you are finished working with your Pi for a while, you’ll want to shut
    it down gracefully to avoid data corruption, rather than just turning it off.
    From the desktop, you can shut down the system with **Raspberry** ▶ **Shutdown…**
    ▶ **Shutdown**. Or from a terminal, you can use this command to halt the system:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成使用树莓派一段时间后，你应该优雅地关闭它，以避免数据损坏，而不是直接关机。在桌面环境下，你可以通过**Raspberry** ▶ **Shutdown…**
    ▶ **Shutdown**来关闭系统。或者在终端中，你可以使用以下命令来停止系统：
- en: '[PRE3]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You’ll know the system has completely shut down when the attached monitor no
    longer displays anything and the activity light on the Raspberry Pi board stops
    blinking. You can then unplug your Pi.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 当你看到附加的显示器不再显示任何内容，并且树莓派板上的活动指示灯停止闪烁时，就说明系统已经完全关机。然后你可以拔掉树莓派的电源。
- en: '***Working with Files and Folders***'
  id: totrans-138
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***文件和文件夹操作***'
- en: The projects in this book regularly direct you to create or edit text files
    and then run some terminal commands on them. Let’s talk about working with files
    and folders in Raspberry Pi OS, both from a command line and from the graphical
    desktop. Operating systems organize the data on a storage device, like the microSD
    card in your Raspberry Pi, with a filesystem. A *file* is a container of data,
    and a *folder* (also known as a directory) is a container of files or other folders.
    The filesystem’s structure is a *hierarchy*, a tree of folders. On Linux systems,
    the root of that hierarchy is represented with */*. The root is the topmost folder—all
    other folders and files are “under” the root.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的项目通常会指导你创建或编辑文本文件，并在文件上运行一些终端命令。我们将讨论如何在树莓派操作系统中操作文件和文件夹，既可以通过命令行也可以通过图形桌面来操作。操作系统通过文件系统来组织存储设备上的数据，就像树莓派中的microSD卡。*文件*是数据的容器，*文件夹*（也称为目录）是文件或其他文件夹的容器。文件系统的结构是一个*层级*，一个文件夹的树状结构。在Linux系统中，这个层级的根是表示为*/*。根文件夹是最上层的文件夹，所有其他文件夹和文件都在根文件夹“之下”。
- en: 'A folder directly under the root folder would be represented like this: */<foldername>*.
    A text file in that folder would look something like this: */<foldername>/<filename>.txt*.
    Note the *.txt* file extension, the last part of the filename. It is convention
    to end a filename with a period followed by a few characters to indicate what
    kind of data is in the file. In the case of text files, “txt” is often used. The
    use of file extensions is not a requirement, but it is a common practice, helpful
    for keeping your data organized.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 根文件夹下的一个文件夹会像这样表示：*/<foldername>*。该文件夹中的一个文本文件可能是这样：*/<foldername>/<filename>.txt*。请注意*.txt*文件扩展名，它是文件名的最后部分。约定上，文件名通常以一个点号和一些字符结尾，用来表示文件中包含的数据类型。对于文本文件，通常使用“txt”。虽然使用文件扩展名并不是强制性的，但它是一个常见的做法，有助于整理数据。
- en: Every user in Raspberry Pi OS has a home folder to work in. The default user
    in Raspberry Pi OS is named pi, and the pi user’s home folder is located in */home/pi*.
    While you are logged on as the pi user, that same home folder can also be referred
    to with the ~ character. Let’s say you create a folder in your home folder called
    *pizza*. Its full path would be */home/pi/pizza*, or when logged in as pi, you
    can refer to it as *~/pizza*. Let’s try creating a *pizza* folder from a terminal
    window, using the mkdir command, short for “make directory.” Don’t forget to press
    ENTER after typing the command.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Raspberry Pi OS 中，每个用户都有一个用于工作的主文件夹。Raspberry Pi OS 的默认用户名为 pi，pi 用户的主文件夹位于
    */home/pi*。当你以 pi 用户身份登录时，该主文件夹也可以用 ~ 字符来表示。假设你在主文件夹中创建了一个名为 *pizza* 的文件夹，它的完整路径为
    */home/pi/pizza*，或者当以 pi 用户身份登录时，你可以将其称为 *~/pizza*。让我们尝试从终端窗口创建一个 *pizza* 文件夹，使用
    mkdir 命令，缩写自“make directory”。输入命令后不要忘记按回车键。
- en: '[PRE4]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'From a terminal, you can see your newly created folder by using the ls command:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中，你可以使用 ls 命令查看你新创建的文件夹：
- en: '[PRE5]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When you type ls and press ENTER, you should see the *pizza* folder alongside
    a set of other folders that were already present in your home folder, such as
    *Desktop*, *Downloads*, and *Pictures*.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 当你输入 ls 并按下回车键时，你应该会看到 *pizza* 文件夹，旁边还有一些已经存在于你的主文件夹中的其他文件夹，如 *Desktop*、*Downloads*
    和 *Pictures*。
- en: The terminal isn’t the only way to view the files in a folder. You can also
    use the File Manager application, which you can launch from **Raspberry** ▶**Accessories**
    ▶**File Manager**. As shown in [Figure B-8](appb.xhtml#chBfig8), the File Manager
    application opens with a default view of your home directory.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 终端并不是查看文件夹中文件的唯一方式。你还可以使用文件管理器应用程序，该应用程序可以通过 **Raspberry** ▶**Accessories**
    ▶**File Manager** 启动。如 [Figure B-8](appb.xhtml#chBfig8) 所示，文件管理器应用程序以默认视图打开，显示你的主目录。
- en: '![image](../images/figB-8.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-8.jpg)'
- en: '*Figure B-8: Raspberry Pi OS File Manager*'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '*Figure B-8: Raspberry Pi OS 文件管理器*'
- en: The left-hand side of File Manager shows the full filesystem hierarchy of folders,
    with the currently selected folder highlighted—*pi* in this case. The address
    bar at the top showing */home/pi* indicates the current folder. Now, try double-clicking
    the *pizza* folder; it should be empty. Let’s jump back to the terminal window
    and create some files in this folder. First, let’s change folders with the cd
    command (for change directory), so that our current folder is the *pizza* folder.
    Then let’s create two empty files using the touch command. Finally, we’ll list
    the contents of the directory with ls, expecting to see the two new filenames
    listed.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 文件管理器的左侧显示了完整的文件系统文件夹层次结构，当前选中的文件夹会被高亮显示——在此例中是 *pi*。顶部的地址栏显示 */home/pi*，表示当前文件夹。现在，尝试双击
    *pizza* 文件夹；它应该是空的。让我们回到终端窗口，在该文件夹中创建一些文件。首先，使用 cd 命令（change directory 变更目录）更改文件夹，使得当前文件夹为
    *pizza* 文件夹。然后，使用 touch 命令创建两个空文件。最后，我们使用 ls 命令列出目录内容，应该能看到这两个新文件名。
- en: '[PRE6]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note that when you changed to the *pizza* folder, your bash prompt should have
    changed as well. It should now include `~/pizza` before the `$`, indicating the
    current folder. Now look at the File Manager application window; it should also
    show the two new files under the *pizza* folder, as shown in [Figure B-9](appb.xhtml#chBfig9).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当你切换到 *pizza* 文件夹时，你的 bash 提示符也应已更改。现在它应该在 `$` 之前包含 `~/pizza`，表示当前文件夹。现在查看文件管理器应用程序窗口，它应该也会显示
    *pizza* 文件夹下的两个新文件，如 [Figure B-9](appb.xhtml#chBfig9) 所示。
- en: '![image](../images/figB-9.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-9.jpg)'
- en: '*Figure B-9: Raspberry Pi OS File Manager: files in the pizza folder*'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '*Figure B-9: Raspberry Pi OS 文件管理器：pizza 文件夹中的文件*'
- en: Now we have two empty files in the *pizza* folder. Let’s add text content to
    the files. First, we’ll edit *cheese.txt* using a command line text editor called
    `nano`.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在 *pizza* 文件夹中有两个空文件。让我们往文件中添加文本内容。首先，我们将使用一种命令行文本编辑器 `nano` 编辑 *cheese.txt*
    文件。
- en: '[PRE7]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: With the `nano` editor window open in the terminal, you can type text that will
    be saved to *cheese.txt*. Keep in mind that `nano` is a command line application—you
    can’t use the mouse. You need to use the arrow keys to move the cursor. Try typing
    some text, as shown in [Figure B-10](appb.xhtml#chBfig10).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 当终端中的 `nano` 编辑器窗口打开时，你可以输入将保存到 *cheese.txt* 的文本。请记住，`nano` 是一个命令行应用程序——你不能使用鼠标。你需要使用箭头键来移动光标。尝试输入一些文本，如
    [Figure B-10](appb.xhtml#chBfig10) 所示。
- en: '![image](../images/figB-10.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-10.jpg)'
- en: '*Figure B-10: Using nano to edit* cheese.txt'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '*Figure B-10: 使用 nano 编辑* cheese.txt'
- en: After typing in some text in `nano`, press CTRL-X to exit `nano`. The editor
    prompts you to save your work (“Save modified buffer?”). This may seem like an
    odd question, but don’t let the “buffer” term throw you off—`nano` is just asking
    if you want to save the text you entered to the file. Press Y, then hit ENTER
    to accept the suggested filename (*cheese.txt*).
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在`nano`中输入一些文本后，按下 CTRL-X 退出`nano`。编辑器会提示你保存工作（“保存已修改的缓冲区？”）。这看起来可能是个奇怪的问题，但不要让“缓冲区”这个术语困扰你——`nano`只是问你是否想将输入的文本保存到文件中。按
    Y，然后按 ENTER 接受建议的文件名（*cheese.txt*）。
- en: 'I often use `nano` since it works from a terminal, but you may prefer to edit
    your text files using a graphical text editor. The Raspberry Pi OS desktop environment
    includes a handy text editor which you can launch from **Raspberry** ▶**Accessories**
    ▶**Text Editor**. At the time of this writing, this opens an editor called Mousepad.
    Let’s try modifying *cheese.txt* further in this text editor. First, we need to
    open the file by performing the following within the text editor: **File** ▶**Open**
    ▶**Home** ▶**pizza** ▶**cheese.txt** ▶**Open** (button), as shown in [Figure B-11](appb.xhtml#chBfig11).'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常使用`nano`，因为它可以在终端中工作，但你也许更喜欢使用图形化文本编辑器编辑文件。Raspberry Pi OS 桌面环境中包含一个方便的文本编辑器，你可以通过**Raspberry**
    ▶**Accessories** ▶**Text Editor**来启动。写这本书时，启动的编辑器是 Mousepad。接下来，我们可以尝试在这个文本编辑器中进一步修改*cheese.txt*。首先，我们需要通过以下步骤在文本编辑器中打开文件：**File**
    ▶**Open** ▶**Home** ▶**pizza** ▶**cheese.txt** ▶**Open**（按钮），如[图 B-11](appb.xhtml#chBfig11)所示。
- en: '![image](../images/figB-11.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/figB-11.jpg)'
- en: '*Figure B-11: Opening* cheese.txt *in the text editor*'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 B-11：在文本编辑器中打开* cheese.txt'
- en: Once you have the file open in the text editor, you should see the text you
    typed earlier. You can edit the text as you wish. Then save your changes with
    **File** ▶**Save**.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在文本编辑器中打开了文件，你应该会看到你之前输入的文本。你可以根据需要编辑文本。然后通过**File** ▶**Save**保存更改。
- en: In addition to editing existing files, you can also use the text editor to create
    new files. Just launch a new editor window (**Raspberry** ▶**Accessories** ▶**Text
    Editor** ) and click **File** ▶**Save**. This will prompt you to save your file
    in the folder of your choice, with a name of your choosing. You can edit the text
    of your new file and save your changes as needed by using **File** ▶**Save** again.
    Or if you want to save an existing file with a new name, choose **File** ▶**Save
    As…** instead.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 除了编辑现有文件外，你还可以使用文本编辑器创建新文件。只需启动一个新的编辑器窗口（**Raspberry** ▶**Accessories** ▶**Text
    Editor**），然后点击**File** ▶**Save**。这将提示你将文件保存到你选择的文件夹中，并指定一个文件名。你可以编辑新文件的内容，并在需要时通过**File**
    ▶**Save**保存更改。如果你想用新名称保存现有文件，可以选择**File** ▶**Save As…**。
- en: 'If you prefer to use `nano` to create a new file, from a terminal window first
    change to the folder where you want to save your file (if needed), and then type
    nano filename, as shown in this example:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更喜欢使用`nano`创建新文件，首先在终端窗口中切换到你希望保存文件的文件夹（如果需要），然后输入`nano filename`，如下所示：
- en: '[PRE8]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Type your text, and when you exit `nano`, you’ll be prompted to save this new
    file.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 输入你的文本，当你退出`nano`时，它会提示你保存这个新文件。
- en: We’ve just covered ways to view, edit, and create text files in Raspberry Pi
    OS. If you want to remain in a terminal, `nano` is a good choice. If you prefer
    the desktop, then the text editor Mousepad should meet your needs. There are also
    other editors included with Raspberry Pi OS. Geany is a programmer’s text editor,
    and Thonny Python IDE is tailored for Python programming. Both are found under
    **Raspberry** ▶**Programming**. In this book’s projects, I’ll leave it up to you
    to decide which text editor you use.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚介绍了在 Raspberry Pi OS 中查看、编辑和创建文本文件的方法。如果你想留在终端中，`nano`是一个不错的选择。如果你更喜欢桌面环境，那么文本编辑器
    Mousepad 应该能满足你的需求。Raspberry Pi OS 还包含其他编辑器。Geany 是一款程序员使用的文本编辑器，而 Thonny Python
    IDE 则专为 Python 编程设计。两者都可以在**Raspberry** ▶**Programming**下找到。在本书的项目中，我会让你自行决定使用哪个文本编辑器。
- en: 'You may also wish to manage your files and folders in other ways—move files
    around, delete files, and so forth. You can do all of this from File Manager,
    or you can do it from a terminal window. Here are some commands you can use from
    a bash prompt to get you started:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过其他方式管理你的文件和文件夹——移动文件、删除文件等。你可以通过文件管理器完成所有这些操作，或者也可以通过终端窗口来完成。下面是一些你可以在
    bash 提示符下使用的命令，帮助你入门：
- en: '`**cd *folder***`   Change the current directory (folder).'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`**cd *folder***`   改变当前目录（文件夹）。'
- en: '`**mkdir *folder***`   Make a directory.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`**mkdir *folder***`   创建一个目录。'
- en: '`**rm *file***`   Delete a file.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`**rm *file***`   删除一个文件。'
- en: '`**rm -rf *folder***`   Delete a folder and its contents, including its subfolders.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`**rm -rf *folder***`   删除文件夹及其内容，包括子文件夹。'
- en: '`**mv *file file2***`   Rename a file.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`**mv *file file2***`   重命名文件。'
- en: '`**mv *file folder*/**`   Move a file from one location to another.'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`**mv *file folder*/**`   将文件从一个位置移动到另一个位置。'
- en: '`**cp *file folder*/**`   Copy a file from one location to another.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`**cp *file folder*/**`   将文件从一个位置复制到另一个位置。'
