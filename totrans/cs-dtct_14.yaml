- en: —15—
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Iterative Deepening Can Save Your Life
  prefs: []
  type: TYPE_NORMAL
- en: I know that look,” said Mavis. Frank looked up at the *TCP Flyer*’s captain
    in annoyance. He preferred to brood quietly, and this was the second interruption
    in 10 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: “What look?” he growled.
  prefs: []
  type: TYPE_NORMAL
- en: “That look,” she said, waving in Frank’s general direction. “You’re questioning
    your search and wondering if you spent too much time on dead ends.”
  prefs: []
  type: TYPE_NORMAL
- en: “Why would I be doing that?” Frank asked.
  prefs: []
  type: TYPE_NORMAL
- en: “I heard what the kid said,” Mavis explained. “You’re suddenly on a tight timeline,
    and we have at least another hour before we get back to Usb.”
  prefs: []
  type: TYPE_NORMAL
- en: Frank nodded. “If this piece of junk—”
  prefs: []
  type: TYPE_NORMAL
- en: “Hey, now. Just because you’re questioning your search doesn’t give you a reason
    to insult my ship.”
  prefs: []
  type: TYPE_NORMAL
- en: “Yeah. I suppose,” Frank mumbled by way of apology.
  prefs: []
  type: TYPE_NORMAL
- en: He had been running through the leads in his mind, wondering if one of them
    would have provided quicker answers. He knew the log entries were good leads—as
    good as he could hope to find in a case like this. But they’d been time-consuming.
    He’d spent almost a full day traveling between ports on the *TCP Flyer*.
  prefs: []
  type: TYPE_NORMAL
- en: With a grunt, Mavis lowered herself and sat next to Frank. “Iterative deepening?”
  prefs: []
  type: TYPE_NORMAL
- en: Frank shrugged. The thought had occurred to him. Iterative deepening was a cross
    between a pure depth-first search and a breadth-first search. The algorithm searched
    in rounds, each round being a depth-first search that was limited to a given path
    length.
  prefs: []
  type: TYPE_NORMAL
- en: “Never was a fan,” Frank admitted. He’d never been able to stomach repeating
    parts of the search over and over each iteration. So much of the work seemed to
    be wasted.
  prefs: []
  type: TYPE_NORMAL
- en: Mavis laughed. “You haven’t faced enough dead ends then.”
  prefs: []
  type: TYPE_NORMAL
- en: Frank raised an eyebrow. “You’re talking to a private investigator. I run into
    more dead ends than correct paths.”
  prefs: []
  type: TYPE_NORMAL
- en: “Ever lose a criminal because of one?” asked Mavis.
  prefs: []
  type: TYPE_NORMAL
- en: “A few times,” Frank admitted.
  prefs: []
  type: TYPE_NORMAL
- en: “Then you should appreciate iterative deepening,” said Mavis. “When I first
    saw it in action, I was annoyed by the restarts too. But it’s saved my life more
    than once.”
  prefs: []
  type: TYPE_NORMAL
- en: “Restarting a search over and over saved your life?” asked Frank.
  prefs: []
  type: TYPE_NORMAL
- en: “Limiting how far I could explore along the wrong path saved my life,” corrected
    Mavis.
  prefs: []
  type: TYPE_NORMAL
- en: “When did iterative deepening save your life?” asked Frank, unable to keep the
    skepticism from his voice.
  prefs: []
  type: TYPE_NORMAL
- en: Mavis stared out over the ocean. “Well . . . the first time was when I was just
    a kid. I was an apprentice on a cargo vessel called the *Void Star*. It was an
    amazing ship; it could carry anything. Anyway, we were lost in the middle of the
    Razor Ridges—a dense series of volcanic peaks that effectively form a giant maze—and
    we were running out of important provisions.”
  prefs: []
  type: TYPE_NORMAL
- en: “Water?” asked Frank.
  prefs: []
  type: TYPE_NORMAL
- en: “No,” answered Mavis. “We had at least two weeks’ worth of food and water. We
    were low on coffee, and that was bad news for the ship’s officers. After a single
    day without coffee, the first mate would get twitchy and sing depressing sea shanties.”
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0119-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: “That doesn’t sound too bad.”
  prefs: []
  type: TYPE_NORMAL
- en: “Without coffee, the man’s singing attracted every vicious bird in an eight-mile
    radius.”
  prefs: []
  type: TYPE_NORMAL
- en: Frank winced at the thought.
  prefs: []
  type: TYPE_NORMAL
- en: “Anyway,” continued Mavis, “coffee was vital for the ship. The captain estimated
    we had less than two days to find an island with a supply station. She knew there
    had to be one close by, but didn’t know exactly where. You see, we’d lost the
    map during an impromptu paper airplane contest. And with the dense fog throughout
    the ridges, we wouldn’t see the station until we were right on top of it.”
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0119-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: “We started off searching for an island with coffee. I was still green in those
    days and hadn’t heard of iterative deepening, so I boldly suggested a depth-first
    search. The captain just laughed and told me she’d never trust a depth-first search
    in the Razor Ridges—too many long dead ends.
  prefs: []
  type: TYPE_NORMAL
- en: “Well. She gridded off the sea into one-mile-square chunks. One mile was about
    as far as you could see through the fog, so we would need to be in the same grid
    square as the supply station to see it. Then we set about exploring with iterative
    deepening. We used a depth-first search, but limited it to a single one-cell step.
    We used a classic north, east, south, west ordering, backtracking to the starting
    location each time. We didn’t find anything in this first step, but at least we
    were efficient about it. Within a few hours, we had eliminated all neighboring
    grid squares.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0120-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Mavis shook her head. “No sign of the supply station at all. So we started over,
    doing another depth-first search from the original starting point. This time we
    explored two steps out and covered a lot more area. We ended up reexploring the
    neighboring squares in the process. Still no sign of a supply station, but we
    were able to eliminate all squares within two steps pretty quickly.”
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0121-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: “Why not just use breadth-first search?” asked Frank. “That’s what you were
    effectively doing anyway. Your search explored outward, farther and farther from
    the starting point.”
  prefs: []
  type: TYPE_NORMAL
- en: Mavis nodded. “Breadth-first search and iterative deepening have a lot in common.
    But you’re forgetting one key point. *We had lost our map*. It’s really difficult
    to track your unexplored states in breadth-first search when you don’t have a
    map. How do you remember your frontier? Iterative deepening allowed us to explore
    outward without having to explicitly remember all the unexplored states. We just
    followed a depth-limited path.”
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0122-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: “I guess so,” Frank agreed.
  prefs: []
  type: TYPE_NORMAL
- en: “Anyway, we were starting to run low on coffee at that point,” Mavis continued.
    “A group of volunteers, including the captain herself, switched to decaf. But
    we all knew that would only buy us a little time. We pushed on. We restarted the
    depth-first search again, this time allowing ourselves to venture out farther.”
  prefs: []
  type: TYPE_NORMAL
- en: “Did you find it with a search of length three?” asked Frank.
  prefs: []
  type: TYPE_NORMAL
- en: “Luckily, we did,” replied Mavis. “On that iteration we checked everything one,
    two, and three steps away. By that time, the quartermaster, who had absolutely
    no use for decaf, had resorted to reusing the same grounds for a 10th time, but
    the first mate was already singing ‘Sea Slugs on Deck.’ Fortunately, that was
    one of his more upbeat tunes.”
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0123-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Frank thought about it for a moment. “What if you had skipped the repeated work?
    What if you had just used depth-first search?”
  prefs: []
  type: TYPE_NORMAL
- en: “We would have gone down a long dead end and run out of coffee,” she replied.
    “Didn’t I start by telling you it saved my life?”
  prefs: []
  type: TYPE_NORMAL
- en: “Fair enough. But that’s a matter of luck. The nearest supply station could
    have been down a depth-first search of length five.”
  prefs: []
  type: TYPE_NORMAL
- en: “Ha! You know better than that, Frank. You can always find lucky or unlucky
    problems. Iterative deepening can help you hedge against really unlucky cases.
    It bounds how far you away you can go on any iteration.”
  prefs: []
  type: TYPE_NORMAL
- en: “Other algorithms do that too,” he countered.
  prefs: []
  type: TYPE_NORMAL
- en: Mavis scowled. “I didn’t say iterative deepening was the *only* algorithm that
    could have saved us. I said it was the one we used. And I have used it ever since.
  prefs: []
  type: TYPE_NORMAL
- en: “Once I even used it to track down an angry shoal of squid before they inked
    the capital’s harbor. Oh, it would have been a grand mess. Some days I wonder
    if I should have just let them do it. The king’s reaction would have been priceless.”
  prefs: []
  type: TYPE_NORMAL
- en: Frank thought for a long while, wondering if iterative deepening could have
    saved him time here. By cutting off the search sooner, he could have backtracked
    and followed up on the threads or the mysterious league. But then he wouldn’t
    have been following the highest-priority lead.
  prefs: []
  type: TYPE_NORMAL
- en: He shook his head. “I’ll stick with my usual searches,” he said finally.
  prefs: []
  type: TYPE_NORMAL
- en: Mavis nodded solemnly and looked out over the ocean. “Fair enough. But be careful,
    Frank. You don’t have much time and long dead ends can be costly. With any algorithm,
    you should at least think about how to protect yourself from running into the
    worst-case problems.”
  prefs: []
  type: TYPE_NORMAL
- en: '**POLICE ALGORITHMS 101: ITERATIVE DEEPENING**'
  prefs: []
  type: TYPE_NORMAL
- en: '***Excerpt from Professor Drecker’s Lecture***'
  prefs: []
  type: TYPE_NORMAL
- en: Iterative deepening is a modification of depth-first search that repeatedly
    performs limited depth-first searches. During iteration (or round) *k* of iterative
    deepening, the algorithm performs a depth-limited search with *max-depth = k*.
  prefs: []
  type: TYPE_NORMAL
- en: Consider again the example of searching for a suspect starting from city A.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0125-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We start with a depth-first search but cut it off after the first node, A. This
    corresponds to limiting ourselves to searching just the scene of the crime.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0125-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The next iteration restarts the depth-first search but allows it to explore
    one city away. We cover the close cities, visiting A, B, and D.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0126-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As the search progresses, we have to go farther and farther from the scene of
    the crime. We end up searching the nearby cities multiple times on different iterations
    of our search. In fact, we search A four times and B three times.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0126-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: While the repeated work increases computational cost, iterative deepening has
    advantages. It combines the lower memory requirements of depth-first search with
    the abilities of breadth-first search to find short paths and avoid getting stuck
    on some worst-case problems.
  prefs: []
  type: TYPE_NORMAL
