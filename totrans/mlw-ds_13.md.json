["```\nusage: Visualize shared hostnames between a directory of malware samples\n       [-h] target_path output_file malware_projection hostname_projection\n\npositional arguments:\n➊ target_path          directory with malware samples\n➋ output_file          file to write DOT file to\n➌ malware_projection   file to write DOT file to\n➍ hostname_projection  file to write DOT file to\n\noptional arguments:\n  -h, --help           show this help message and exit\n```", "```\nusage: Visualize shared image relationships between a directory of malware samples\n       [-h] target_path output_file malware_projection resource_projection\n\npositional arguments:\n➊ target_path          directory with malware samples\n➋ output_file          file to write DOT file to\n➌ malware_projection   file to write DOT file to\n➍ resource_projection  file to write DOT file to\n\noptional arguments:\n  -h, --help           show this help message and exit\n```", "```\nusage: listing_5_1.py [-h] [--jaccard_index_threshold THRESHOLD]\n                      target_directory output_dot_file\n\nIdentify similarities between malware samples and build similarity graph\n\npositional arguments:\n➊ target_directory      Directory containing malware\n➋ output_dot_file       Where to save the output graph DOT file\n\noptional arguments:\n  -h, --help            show this help message and exit\n➌ --jaccard_index_threshold THRESHOLD, -j THRESHOLD\n                        Threshold above which to create an 'edge' between\n                        samples\n```", "```\nusage: listing_5_2.py [-h] [-l LOAD] [-s SEARCH] [-c COMMENT] [-w]\n\nSimple code-sharing search system which allows you to build up a database of\nmalware samples (indexed by file paths) and then search for similar samples\ngiven some new sample\n\noptional arguments:\n  -h, --help            show this help message and exit\n➊ -l LOAD, --load LOAD Path to directory containing malware, or individual\n                        malware file, to store in database\n➋ -s SEARCH, --search SEARCH\n                        Individual malware file to perform similarity search\n                        on\n➌ -c COMMENT, --comment COMMENT\n                        Comment on a malware sample path\n➍ -w, --wipe           Wipe sample database\n```", "```\nShowing samples similar to WEBC2-GREENCAT_sample_E54CE5F0112C9FDFE86DB17E85A5E2C5\nSample name                                                      Shared code\n[*] WEBC2-GREENCAT_sample_55FB1409170C91740359D1D96364F17B       0.9921875\n[*] GREENCAT_sample_55FB1409170C91740359D1D96364F17B             0.9921875\n[*] WEBC2-GREENCAT_sample_E83F60FB0E0396EA309FAF0AED64E53F       0.984375\n    [comment] This sample was determined to definitely have come from the advanced persistent\n              threat group observed last July on our West Coast network\n[*] GREENCAT_sample_E83F60FB0E0396EA309FAF0AED64E53F             0.984375\n```", "```\nusage: Machine learning malware detection system [-h]\n                                         [--malware_paths MALWARE_PATHS]\n                                         [--benignware_paths BENIGNWARE_PATHS]\n                                         [--scan_file_path SCAN_FILE_PATH]\n                                         [--evaluate]\n\noptional arguments:\n  -h, --help            show this help message and exit\n➊ --malware_paths MALWARE_PATHS\n                        Path to malware training files\n➋ --benignware_paths BENIGNWARE_PATHS\n                        Path to benignware training files\n➌ --scan_file_path SCAN_FILE_PATH\n                        File to scan\n➍ --evaluate           Perform cross-validation\n```"]