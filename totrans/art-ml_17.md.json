["```\n> z <- qeLogit(ftrn,'V785')\n> z$testAcc\n[1] 0.205\n> z$baseAcc\n[1] 0.8998305\n```", "```\n> z <- qePCA(ftrn,'V785','qeLogit',pcaProp=0.8)\n> z$testAcc\n[1] 0.172\n```", "```\n# set up 5 image op layers\n> conv1 <- list(type='conv2d',filters=32,kern=3)\n> conv2 <- list(type='pool',kern=2)\n> conv3 <- list(type='conv2d',filters=64,kern=3)\n> conv4 <- list(type='pool',kern=2)\n> conv5 <- list(type='drop',drop=0.5)\n\n# note that qeNeural() by default sets up two hidden layers; these will\n# come after the convolutional ones\n> z <- qeNeural(ftrn,'V785',\n   conv=list(conv1,conv2,conv3,conv4,conv5),xShape=c(28,28))\n> z$testAcc\n[1] 0.075\n```", "```\nconv2 <- list(type='pool',kern=2)\n```", "```\nconv1 <- list(type='conv2d',filters=32,kern=3)\nconv2 <- list(type='pool',kern=2)\n```", "```\n> conv5 <- list(type='drop',drop=0.5)\n```", "```\n> z$model\nModel\nModel: \"sequential\"\n__\nLayer (type)                        Output Shape                    Param #\n===============================================================================\nconv2d (Conv2D)                     (None, 26, 26, 32)              320\n__\nmax_pooling2d (MaxPooling2D)        (None, 13, 13, 32)              0\n__\nconv2d_1 (Conv2D)                   (None, 11, 11, 64)              18496\n__\nmax_pooling2d_1 (MaxPooling2D)      (None, 5, 5, 64)                0\n__\ndropout (Dropout)                   (None, 5, 5, 64)                0\n__\nflatten (Flatten)                   (None, 1600)                    0\n__\ndense (Dense)                       (None, 100)                     160100\n__\ndense_1 (Dense)                     (None, 10)                      1010\n===============================================================================\nTotal params: 179,926\nTrainable params: 179,926\nNon-trainable params: 0\n_\n```", "```\n> h18f <- Augmentation(matrix(h18,nrow=28),flip_mode='vertical')\n> imageShow(matrix(h18f,nrow=28))\n```"]