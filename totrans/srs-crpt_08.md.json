["```\ndef compare_mac(x, y, n):\n    for i in range(n):\n        if x[i] != y[i]:\n            return False\n    return True\n```", "```\nfrom time import time\n\nMAC1 = '0123456789abcdef'\nMAC2 = '01X3456789abcdef'\nTRIALS = 100000\n\n# each call to verify_mac() will look at all eight bytes\nstart = time()\nfor i in range(TRIALS):\n    compare_mac(MAC1, MAC1, len(MAC1))\nend = time()\nprint('%0.5f' % (end-start))\n\n# each call to verify_mac() will look at three bytes\nstart = time()\nfor i in range(TRIALS):\n    compare_mac(MAC1, MAC2, len(MAC1))\nend = time()\nprint('%0.5f' % (end-start))\n```", "```\nint cmp_const(const void *a, const void *b, const size_t size) \n{\n  const unsigned char *_a = (const unsigned char *) a;\n  const unsigned char *_b = (const unsigned char *) b;\n  unsigned char result = 0;\n  size_t i;\n\n  for (i = 0; i < size; i++) {\n    result |= _a[i] ^ _b[i];\n  }\n\n  return result; /* returns 0 if *a and *b are equal, nonzero otherwise */\n}\n```"]