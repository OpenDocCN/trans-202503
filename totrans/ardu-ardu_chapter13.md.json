["```\n❶ #include <PS2Keyboard.h>\nPS2Keyboard keyboard;\n\nvoid setup()\n{\n    delay(1000);\n  ❷ keyboard.begin(4, 3);\n    Serial.begin(9600);\n    Serial.println(\"Keyboard Test:\");\n}\n\nvoid loop()\n{\n    if (keyboard.available())\n  ❸ {\n        // Read the next key:\n      ❹ char c = keyboard.read();\n        // Check for some of the special keys:\n        switch (c)\n        {\n            case PS2_ENTER: Serial.println(); break;\n            case PS2_TAB: Serial.print(\"[Tab]\"); break;\n            case PS2_ESC: Serial.print(\"[ESC]\"); break;\n            case PS2_PAGEDOWN: Serial.print(\"[PgDn]\"); break;\n            case PS2_PAGEUP: Serial.print(\"[PgUp]\"); break;\n            case PS2_LEFTARROW: Serial.print(\"[Left]\"); break;\n            case PS2_RIGHTARROW: Serial.print(\"[Right]\"); break;\n            case PS2_UPARROW: Serial.print(\"[Up]\"); break;\n            case PS2_DOWNARROW: Serial.print(\"[Down]\"); break;\n            case PS2_DELETE: Serial.print(\"[Del]\"); break;\n            // Otherwise, just print all normal characters\n          ❺ default: Serial.print(c); break;\n      }\n    }\n} \n```", "```\n❶ #include <Wire.h>\n#include <LiquidCrystal_PCF8574.h>\nLiquidCrystal_PCF8574 lcd(0x27);\n\nvoid setup()\n{\n    Wire.begin();\n  ❷ Wire.beginTransmission(0x27);\n    lcd.begin(16, 2);\n  ❸ lcd.setBacklight(255);\n}\n\nvoid loop()\n{\n    lcd.home();\n    lcd.clear();\n    lcd.setCursor(2, 0);\n    lcd.print(\"Hello, world!\");\n    delay(1000);\n    lcd.setCursor(2,1);\n    lcd.print(\"* Arduino *\");\n    delay(1000);\n} \n```", "```\n❶ #include <LiquidCrystal_PCF8574.h>\n#include <Wire.h>\nLiquidCrystal_PCF8574 lcd(0x27);\n#include <PS2Keyboard.h>\nPS2Keyboard keyboard;\n\nint xPosition = 0;\nint yPosition = 0;\n\nvoid setup()\n{\n    Wire.begin();\n    Wire.beginTransmission(0x27);\n    lcd.begin(16, 2);\n    lcd.setBacklight(255);\n    lcd.blink();\n    keyboard.begin(4, 3);\n}\n\nvoid loop()\n{\n  ❷ if (keyboard.available())\n    {\n        // Read the next key:\n        char c = keyboard.read();\n        // Check for some of the special keys:\n      ❸ if (c == PS2_ENTER)\n        {\n            xPosition = 0;\n            if (yPosition == 0)\n            {\n                yPosition = 1;\n            } else if (yPosition == 1)\n            {\n                yPosition = 0;\n            }\n            lcd.setCursor(xPosition, yPosition);\n      ❹ }\n        else if (c == PS2_TAB)\n        {\n            lcd.print(\"[Tab]\");\n      ❺ }\n        else if (c == PS2_ESC)\n        {\n            lcd.home();\n            lcd.clear();\n            xPosition = 0;\n            yPosition = 0;\n      ❻ }\n        else if (c == PS2_PAGEDOWN)\n        {\n            lcd.print(\"[PgDn]\");\n        }\n        else if (c == PS2_PAGEUP)\n        {\n            lcd.print(\"[PgUp]\");\n        }\n        else if (c == PS2_LEFTARROW)\n        {\n            lcd.print(\"[Left]\");\n        }\n        else if (c == PS2_RIGHTARROW)\n        {\n            lcd.print(\"[Right]\");\n        }\n        else if (c == PS2_UPARROW)\n        {\n            lcd.print(\"[Up]\");\n        }\n        else if (c == PS2_DOWNARROW)\n        {\n            lcd.print(\"[Down]\");\n        }\n else if (c == PS2_DELETE)\n        {\n            lcd.print(\"[Del]\");\n        }\n        else\n        {\n            // Otherwise, just print all normal characters\n          ❼ lcd.print(c);\n            xPosition++;\n          ❽ if (xPosition > 15)\n            {\n                xPosition = 0;\n              ❾ if (yPosition == 0)\n                {\n                    yPosition = 1;\n                }\n                else if (yPosition == 1)\n                {\n                    yPosition = 0;\n                }\n              ❿ lcd.setCursor(xPosition, yPosition);\n            }\n        }\n    }\n} \n```", "```\n// Project #39 - RGB LED tester\n\n❶ #include <Wire.h>\n#include <LiquidCrystal_PCF8574.h>\nLiquidCrystal_PCF8574 lcd(0x27);\n#include <PS2Keyboard.h>\nPS2Keyboard keyboard;\n\n#define red 11\n#define green 10\n#define blue 9\n\n❷ int readDigit()\n{\n    int _digit=−1;\n  ❸ do\n    {\n        if (keyboard.available())\n        {\n            // Read the next key:\n            char c = keyboard.read();\n            switch (c)\n            {\n                case '1' : _digit=_digit+2; break;\n                case '2' : _digit=_digit+3; break;\n                case '3' : _digit=_digit+4; break;\n                case '4' : _digit=_digit+5; break;\n                case '5' : _digit=_digit+6; break;\n                case '6' : _digit=_digit+7; break;\n                case '7' : _digit=_digit+8; break;\n                case '8' : _digit=_digit+9; break;\n                case '9' : _digit=_digit+10; break;\n                case '0' : _digit=0; break;\n                default: _digit=0; break;\n            }\n          ❹ lcd.print(c);\n        }\n  ❺ }\n    while(_digit==−1);\n    return _digit;\n}\n❻ int get3digit()\n{\n    int z;\n    z = readDigit()*100;\n    z = z + (readDigit()*10);\n    z = z + readDigit();\n    return z;\n}\n\nvoid setup()\n{\n  ❼ Wire.begin();\n    Wire.beginTransmission(0x27);\n    lcd.begin(16, 2);\n    lcd.setBacklight(255);\n    keyboard.begin(4, 3);\n    DDRB = B111111; // Set LED pins to output\n}\n\nvoid loop()\n{\n  ❽ int _red;\n    int _green;\n    int _blue;\n    int _delay;\n    lcd.home();\n    lcd.clear();\n    lcd.setCursor(1, 0);\n    lcd.print(\"R:\");\n    lcd.setCursor(4, 0);\n    _red = get3digit();\n\n    lcd.setCursor(8, 0);\n    lcd.print(\"G:\");\n    lcd.setCursor(11, 0);\n    _green = get3digit();\n\n    lcd.setCursor(1, 1);\n    lcd.print(\"B:\");\n    lcd.setCursor(4, 1);\n    _blue = get3digit();\n\n    lcd.setCursor(8, 1);\n    lcd.print(\"T:\");\n    lcd.setCursor(11, 1);\n  ❾ _delay = get3digit();\n    analogWrite(red, _red);\n    analogWrite(green, _green);\n    analogWrite(blue, _blue);\n    delay(_delay*1000);\n\n    analogWrite(red, 0);\n    analogWrite(green, 0);\n    analogWrite(blue, 0);\n} \n```", "```\n// Project #40 - Text capture device\n\n❶ char _text[100];\nint _counter = 0;\nint xPosition = 0;\nint yPosition = 1;\n\n#include <SD.h>\n#include <LiquidCrystal_PCF8574.h>\n#include <Wire.h>\nLiquidCrystal_PCF8574 lcd(0x27);\n#include <PS2Keyboard.h>\nPS2Keyboard keyboard;\n\n❷ void halt()\n{\n    do {} while (1);\n}\n\n❸ void saveText(boolean _halt)\n{\n    if (!SD.begin(10))\n    {\n        lcd.setCursor(1, 1);\n        lcd.print(\"SD card fail\");\n        halt();\n    }\n  ❹ File dataFile = SD.open(\"WRITING.TXT\", FILE_WRITE);\n    if (dataFile)\n    {\n        // Save and clear array\n        for (int i = 0; i < 100; i++)\n        {\n            dataFile.print(_text[i]);\n            _text[i] = \" \";\n        }\n        dataFile.close();\n    }\n  ❺ if (_halt == true)\n    {\n        File dataFile = SD.open(\"WRITING.TXT\", FILE_WRITE);\n        if (dataFile)\n        {\n            dataFile.println();\n            dataFile.println(\"-------------------------\");\n            dataFile.close();\n        }\n        lcd.setCursor(1, 1);\n        lcd.print(\"OK remove card\");\n        halt();\n    }\n}\n\nvoid setup()\n{\n  ❻ Wire.begin();\n    Wire.beginTransmission(0x27);\n    lcd.begin(16, 2);\n    lcd.setBacklight(255);\n    lcd.blink();\n    lcd.clear();\n    lcd.home();\n    lcd.print(\"Start typing:\");\n    lcd.setCursor(xPosition, yPosition);\n    keyboard.begin(4, 3);\n    pinMode(10, OUTPUT);\n}\n\nvoid loop()\n{\n  ❼ if (keyboard.available())\n    {\n        char c = keyboard.read();\n        if (c == PS2_ENTER)\n        {\n          ❽ _text[_counter] = '\\n';\n            _counter = _counter + 1;\n            xPosition = 0;\n            if (yPosition == 0)\n            {\n                yPosition = 1;\n            }\n            else if (yPosition == 1)\n            {\n                yPosition = 0;\n            }\n            lcd.setCursor(xPosition, yPosition);\n      }\n        else if (c == PS2_ESC)\n        {\n            lcd.home();\n            lcd.clear();\n            saveText(true);\n        }\n        else\n        {\n            _text[_counter] = c;\n          ❾ lcd.print(_text[_counter]);\n            _counter = _counter + 1;\n            if (_counter >= 99)\n            {\n              ❿ saveText(false);\n                _counter = 0;\n            }\n            xPosition++;\n            if (xPosition > 15)\n            {\n                xPosition = 0;\n                if (yPosition == 0)\n                {\n                    yPosition = 1;\n                }\n                else if (yPosition == 1)\n                {\n                    yPosition = 0;\n                }\n                lcd.setCursor(xPosition, yPosition);\n            }\n        }\n    }\n} \n```"]