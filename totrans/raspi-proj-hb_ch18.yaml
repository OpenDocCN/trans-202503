- en: '**18'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**18**'
- en: Digital Drum Set**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 数字鼓组
- en: In this project you’ll create a button-controlled digital drum set with just
    a breadboard circuit and a few buttons. Pressing different buttons will produce
    different drum sounds, including two drumbeat loops.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将使用一个面包板电路和几个按钮创建一个按钮控制的数字鼓组。按下不同的按钮会产生不同的鼓声，包括两个鼓点循环。
- en: '![image](../images/f0225-01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0225-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需组件**'
- en: Raspberry Pi
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派
- en: Breadboard
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 面包板
- en: Eight pushbuttons
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 八个按键
- en: Headphones, or monitor with speakers connected to the Pi via HDMI
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 耳机或通过HDMI连接到树莓派的带扬声器的显示器
- en: Jumper wires
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 跳线
- en: '**SOFTWARE REQUIRED**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需软件**'
- en: avconv
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: avconv
- en: This project uses samples from the Sonic Pi sample library, but you’re free
    to adapt it to use any sounds you want.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目使用Sonic Pi样本库中的样本，但你可以自由调整，使用任何你想要的声音。
- en: '**PREPARING THE AUDIO**'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**准备音频**'
- en: First you’ll need to configure the Raspberry Pi audio properly and get set up
    to use audio samples from Sonic Pi.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要正确配置树莓派的音频设置，并准备好使用来自Sonic Pi的音频样本。
- en: '**Configuring the Audio**'
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**配置音频**'
- en: First, plug your headphones or speakers into the Raspberry Pi audio jack. If
    your monitor has built-in speakers and is connected to the Pi with an HDMI cable,
    you don’t need to connect anything to the audio jack—you can listen to the sound
    through the monitor speakers.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，将耳机或扬声器插入树莓派的音频插孔。如果你的显示器内置扬声器并通过HDMI电缆连接到树莓派，则不需要连接任何东西到音频插孔——你可以通过显示器的扬声器收听声音。
- en: On the top-right corner of your desktop environment, right-click the audio symbol
    and select the audio source as shown in [Figure 18-1](ch18.xhtml#ch18fig1). Select
    Analog if you’re using headphones, or HDMI if you’re using a monitor with speakers.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在桌面环境的右上角，右键点击音频图标，选择音频源，如[图18-1](ch18.xhtml#ch18fig1)所示。如果你使用耳机，选择模拟；如果你使用带扬声器的显示器，通过HDMI连接，则选择HDMI。
- en: '![image](../images/f0226-01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0226-01.jpg)'
- en: '**FIGURE 18-1:** Selecting the audio source'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**图18-1：** 选择音频源'
- en: '**Getting the Audio Sample Files**'
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**获取音频样本文件**'
- en: '**NOTE**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*We won’t be covering Sonic Pi in this book, but if you want to explore it
    on your own, go to **Programming*** ▸ ***Sonic Pi** in the taskbar main menu to
    open the software and take a look around.*'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们在本书中不会详细讲解Sonic Pi，但如果你想自己探索它，可以在任务栏的主菜单中进入**编程** ▸ ***Sonic Pi**，打开软件并四处浏览。*'
- en: The Sonic Pi software comes installed in the Pi’s operating system and allows
    you to create your own digital music using code, but in this project you’ll just
    be using the Sonic Pi’s sample audio files.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Sonic Pi软件已安装在树莓派的操作系统中，它允许你使用代码创作数字音乐，但在这个项目中你只需要使用Sonic Pi的样本音频文件。
- en: In the terminal, enter the following commands to create a new folder called
    *Games_and_Toys* inside the *Projects* folder, and move into the new folder. You’ll
    save the samples here.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中，输入以下命令，在*Projects*文件夹内创建一个名为*Games_and_Toys*的新文件夹，并进入该文件夹。你将把样本保存在这里。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then enter the following to copy the Sonic Pi’s *samples* folder to the *Games_and_Toys*
    folder (note that there is a space between the final `/` and the period at the
    end):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然后输入以下命令，将Sonic Pi的*samples*文件夹复制到*Games_and_Toys*文件夹中（请注意，最后一个斜杠与句号之间有一个空格）：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, enter these commands to list the contents of the *samples* folder to
    check that they transferred correctly:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，输入以下命令列出*samples*文件夹的内容，检查它们是否正确传输：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If all went as planned, you should see a list of files like so:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，你应该能看到如下的文件列表：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You may notice these files have the unusual extension *.flac*. This format
    is used in Sonic Pi, but to use them with Python you need to convert them to *.wav*
    files. For that, you’ll use the avconv software. Enter the following command to
    install avconv:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到这些文件有一个不常见的扩展名*.flac*。这种格式在Sonic Pi中使用，但要在Python中使用它们，你需要将它们转换为*.wav*文件。为此，你将使用avconv软件。输入以下命令来安装avconv：
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then enter the following command, which will go through all the files in the
    *samples* folder and convert each *.flac* file into a *.wav* file:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然后输入以下命令，它将遍历*samples*文件夹中的所有文件，并将每个*.flac*文件转换为*.wav*文件：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, use the `ls` command to list the items in your *samples* folder and check
    that you now have *.wav* files to work with:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用`ls`命令列出*samples*文件夹中的项目，检查是否有*.wav*文件可以使用：
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You should have both a *.wav* and a *.flac* file for each sample. To remove
    the *.flac* files from your *samples* folder, enter the following command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个样本，你应该同时拥有*.wav*和*.flac*文件。要从*samples*文件夹中删除*.flac*文件，请输入以下命令：
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You can double-check that you have the correct files with the `ls` command again
    if you like.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你愿意，可以再次使用 `ls` 命令检查是否拥有正确的文件。
- en: 'You can play the sounds with the *omxplayer* software that’s installed on your
    operating system by default. To listen to the sample called *drum_snare_soft.wav*,
    enter the following at your command line:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过操作系统默认安装的*omxplayer*软件播放这些声音。要听一个名为*drum_snare_soft.wav*的样本，可以在命令行中输入以下命令：
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If you explore the samples files, you’ll see a wide variety of sounds, from
    guitar sounds to cow bell and drums. Choose eight different drum sounds to include
    in your drum set (or any other sounds that strike your fancy).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你浏览样本文件，你会看到各种各样的声音，从吉他声到牛铃声，再到鼓声。选择八种不同的鼓声来构成你的鼓组（或者选择其他你喜欢的声音）。
- en: 'The sounds we’ve chosen are as follows; the last two are drum beats, while
    the others refer to single drum sounds:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择的声音如下；最后两个是鼓点，其余的则是单一的鼓声：
- en: '*drum_cymbal_open.wav*'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*drum_cymbal_open.wav*'
- en: '*drum_heavy_kick.wav*'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*drum_heavy_kick.wav*'
- en: '*drum_snare_hard.wav*'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*drum_snare_hard.wav*'
- en: '*drum_cymbal_closed.wav*'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*drum_cymbal_closed.wav*'
- en: '*drum_roll.wav*'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*drum_roll.wav*'
- en: '*perc_snap.wav*'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*perc_snap.wav*'
- en: '*loop_amen_full.wav*'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*loop_amen_full.wav*'
- en: '*loop_mika.wav*'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*loop_mika.wav*'
- en: '**WIRING THE CIRCUIT**'
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**接线电路**'
- en: The circuitry for this project simply involves wiring eight pushbuttons to the
    Pi. Each pushbutton is associated with a different sound.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目的电路只涉及将八个按钮接到树莓派上。每个按钮都关联一个不同的声音。
- en: To wire the circuit, follow these instructions, using [Figure 18-2](ch18.xhtml#ch18fig2)
    as a reference.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要接线，请按照这些指示操作，使用[图18-2](ch18.xhtml#ch18fig2)作为参考。
- en: '![image](../images/f0228-01.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0228-01.jpg)'
- en: '**FIGURE 18-2:** The digital drum set circuit'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**图18-2：** 数字鼓组电路'
- en: Connect the GND pin to the breadboard GND rail.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 GND 引脚连接到面包板的 GND 导轨。
- en: Insert eight pushbuttons into the breadboard at equal distances over the center
    divide.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将八个按钮均匀插入面包板的中央分隔线上。
- en: 'Connect the bottom-left pushbutton leads to GND and the bottom-right leads
    to one of the following GPIO pins in turn: GPIO 2, 3, 14, 15, 17, 18, 22, and
    27.'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将左下角的按钮引脚连接到 GND，右下角的引脚依次连接到以下 GPIO 引脚之一：GPIO 2、3、14、15、17、18、22 和 27。
- en: '| **PUSHBUTTON** | **RASPBERRY PI** |'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **PUSHBUTTON** | **RASPBERRY PI** |'
- en: '| --- | --- |'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 1 | GPIO 2 |'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1 | GPIO 2 |'
- en: '| 2 | GPIO 3 |'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 2 | GPIO 3 |'
- en: '| 3 | GPIO 14 |'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 3 | GPIO 14 |'
- en: '| 4 | GPIO 15 |'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 4 | GPIO 15 |'
- en: '| 5 | GPIO 17 |'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 5 | GPIO 17 |'
- en: '| 6 | GPIO 18 |'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 6 | GPIO 18 |'
- en: '| 7 | GPIO 22 |'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 7 | GPIO 22 |'
- en: '| 8 | GPIO 27 |'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 8 | GPIO 27 |'
- en: '**WRITING THE SCRIPT**'
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**编写脚本**'
- en: 'Open **Python 3 (IDLE)** and go to **File** ▸ **New File** to create a new
    script. Copy the following code into the Python Editor and save the script as
    *digital_drum_set.py* inside the *Games_and_Toys* folder (remember that you can
    download all the scripts at *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*):'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 打开**Python 3 (IDLE)**，然后点击**文件** ▸ **新建文件**以创建一个新的脚本。将以下代码复制到 Python 编辑器中，并将脚本保存在*Games_and_Toys*文件夹内，命名为*digital_drum_set.py*（记得你可以从*[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*下载所有脚本）：
- en: '[PRE9]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As usual, you start your script by importing the necessary libraries ➊. The
    new library here is the `pygame.mixer`, used for loading and playing sounds. From
    `pygame.mixer` you also import the `Sound` module, used to create sound objects.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样，你从导入必要的库 ➊ 开始脚本。这里的新库是 `pygame.mixer`，用于加载和播放声音。从 `pygame.mixer` 中，你还导入了
    `Sound` 模块，用于创建声音对象。
- en: 'Then you initialize the Pygame mixer ➋ and create a dictionary that holds sounds
    ➌. In Python, a *dictionary* is a data structure used to store relationships between
    items. In this case, you’re associating a button with a specific sound. The basic
    structure of a dictionary is as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 然后初始化 Pygame 混音器 ➋ 并创建一个字典来存储声音 ➌。在 Python 中，*字典*是一种用于存储项之间关系的数据结构。在这里，你将按钮与特定的声音关联起来。字典的基本结构如下：
- en: '[PRE10]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The dictionary is enclosed by curly brackets, `{}`, and is composed of key/value
    pairs. You use a colon (`:`) to assign each key to its corresponding value, and
    you use commas (`,`) to separate each key/value pair.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 字典用大括号 `{}` 括起来，由键/值对组成。你使用冒号 (`:`) 将每个键与对应的值关联起来，使用逗号 (`,`) 来分隔每个键/值对。
- en: In this project, the keys are the buttons, and the values are the sounds. To
    create a sound object, you pass the sound file path as a string to the `Sound()`
    function. In this case, since the *samples* folder is inside the *Games_and_Toys*
    folder, you don’t need to provide an entire path, just the folder name followed
    by the sound filename. You’ll need to change the sound filenames in this script,
    highlighted in bold, to your chosen sound files.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，键是按钮，值是声音。要创建一个声音对象，你将声音文件路径作为字符串传递给`Sound()`函数。在这个例子中，由于*sample*文件夹位于*Games_and_Toys*文件夹内，因此你不需要提供完整路径，只需要提供文件夹名和声音文件名。你需要修改脚本中加粗的声音文件名，替换为你选择的声音文件。
- en: Next, assign each button to a sound effect ➍; this means that, when a pushbutton
    is pressed, the corresponding sound will play. Finally, the `pause()` function
    ➎ at the end of the script keeps the program running, so events can be detected.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将每个按钮分配一个音效 ➍；这意味着，当按下某个按钮时，对应的声音将会播放。最后，脚本结尾的`pause()`函数 ➎ 保持程序运行，以便能够检测事件。
- en: To run the script, press **F5** or go to **Run** ▸ **Run Module**.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行脚本，请按**F5**键或选择**运行** ▸ **运行模块**。
- en: Congratulations—you’ve just built your own digital drum set! Now, press the
    pushbuttons and compose your own music clips.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你——你已经成功打造了自己的数字鼓组！现在，按下按钮并创作属于你自己的音乐片段。
- en: '**TAKING IT FURTHER**'
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**进一步探索**'
- en: 'This was a cool project and so simple to build. We encourage you to extend
    this project by trying the following:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很酷的项目，而且非常简单。我们鼓励你通过尝试以下方法来扩展这个项目：
- en: Adding other sounds to your digital drum set
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你的数字鼓组添加其他声音
- en: Recording your own sounds or searching the web for free sounds
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 录制你自己的声音或在网上搜索免费的声音素材
- en: Building a digital piano, a digital guitar, or a hybrid music box with mixed
    sounds
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个数字钢琴、数字吉他或混合声音的音乐盒
