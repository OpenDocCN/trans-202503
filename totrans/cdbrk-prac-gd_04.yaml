- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: 'Simple substitution ciphers without spaces between words: Patristocrats'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 没有单词间空格的简单替换密码：Patristocrats
- en: '![](image_fi/502727c04/g04001.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/g04001.png)'
- en: 'The message shown in [Figure 4-1](#figure4-1) was sent to the *New York Post*
    by a copycat of the infamous Zodiac Killer (see [Chapter 6](c06.xhtml)) in 1994—about
    twenty-five years after the killer’s last original message had appeared.^([1](b06.xhtml#c04-endnote-1))
    It is encrypted with the substitution table provided in the same figure and decrypts
    to the following plaintext (which includes a few spelling mistakes): `THIS IS
    THE ZODIAC SPEUKING. I AM IN CONTROL. THO’ MASTERY, BE READY FOR MORE. YOURS TRLIY.`'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图4-1](#figure4-1)中显示的消息是由臭名昭著的黄道杀手的模仿者于1994年发送给*纽约邮报*的——大约是在杀手最后一条原始信息发布的二十五年后。（参见[第六章](c06.xhtml)）该信息使用了同一图中提供的替换表进行加密，并解密为以下明文（包括一些拼写错误）：`THIS
    IS THE ZODIAC SPEUKING. I AM IN CONTROL. THO’ MASTERY, BE READY FOR MORE. YOURS
    TRLIY.`
- en: How a Patristocrat, a simple substitution cipher without spaces, works
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个Patristocrat密码，作为一种没有空格的简单替换密码，如何运作
- en: As you will certainly have noticed, this Zodiac copycat cryptogram was encrypted
    with a monoalphabetic substitution cipher of the different-alphabet type. However,
    unlike the ciphertexts we saw in [Chapter 3](c03.xhtml), this one doesn’t contain
    spaces between the words. Crypto puzzle fans and members of the American Cryptogram
    Association typically use the term *Patristocrat* to refer to monoalphabetic substitution
    ciphers without spaces, especially ones that use Latin letters.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你肯定注意到的，这个黄道模仿者密码是用不同字母表类型的单字母替换密码加密的。然而，与我们在[第3章](c03.xhtml)中看到的密码不同，这个密码没有单词之间的空格。密码谜题爱好者和美国密码谜语协会的成员通常用*Patristocrat*这个术语来指代没有空格的单字母替换密码，特别是那些使用拉丁字母的密码。
- en: '![](image_fi/502727c04/f04001.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/f04001.png)'
- en: 'Figure 4-1: This message by an alleged murderer is encrypted in a monoalphabetic
    substitution cipher. It doesn’t contain spaces.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-1：这条疑似凶手的信息使用单字母替换密码进行加密，并且没有空格。
- en: It should be clear that the absence of spaces makes a Patristocrat more difficult
    to break than an Aristocrat cipher. However, Patristocrats are more difficult
    for the legitimate recipient to handle, too, because it is sometimes hard to correctly
    determine the word boundaries when decrypting the message. Ambiguities may appear.
    For instance, `YOUDONTGETMEAPARTOFTHEUNION` may mean “You don’t get me, a part
    of the union,” or “You don’t get me apart of the union.”
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 应该很明显，缺少空格使得Patristocrat密码比贵族密码更难破译。然而，Patristocrat密码对合法接收者来说也更难处理，因为在解密消息时，有时很难正确确定单词边界。可能会出现歧义。例如，`YOUDONTGETMEAPARTOFTHEUNION`可能意味着“你不了解我，联合的一部分”，或者“你不了解我，联合之外的一部分”。
- en: For this reason, we encounter Patristocrat ciphers a lot less in practice than
    ordinary simple substitution ciphers. Still, this kind of encryption is far from
    infrequent and therefore should be studied by everybody interested in codebreaking.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 正因如此，我们在实际应用中遇到Patristocrat密码的频率远低于普通的简单替换密码。然而，这种加密方式并非罕见，因此任何有意研究破译密码的人都应该学习它。
- en: How to detect a Patristocrat
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何检测一种Patristocrat密码
- en: If the text you are looking at has no pattern of word breaks, or if this patten
    is too regular (consisting, for instance, of groups of five characters), you may
    be dealing with a Patristocrat. A Patristocrat will generally have the same letter
    variety as other simple substitution cryptograms, which means that frequency analysis
    and the index of coincidence are helpful tools to detect it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到的文本没有单词间的分隔符，或者这种模式过于规律（例如，由五个字符一组组成），那么你可能正在处理一个Patristocrat密码。Patristocrat密码通常具有与其他简单替换密码相同的字母种类，这意味着频率分析和巧合指数是有效的工具来检测它。
- en: As an example, let’s look at a cryptogram published by the NSA. As many readers
    might know, the NSA is quite active on social media, publishing crypto puzzles
    on Facebook (NSAUSGov) and Twitter ([@NSAUSGov](http://www.twitter.com/@NSAUSGov)).
    If you’re interested in a career at this agency, solving these challenges might
    be a good way to get their attention. The ciphertext in [Figure 4-2](#figure4-2)
    is the first of four challenge ciphers that the NSA announced via Twitter in May
    2014\. Because each cipher was tweeted on a Monday, they are referred to as the
    “NSA Monday Challenges.”^([2](b06.xhtml#c04-endnote-2))
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，来看一下美国国家安全局（NSA）发布的一个密码谜题。如许多读者可能知道，NSA 在社交媒体上非常活跃，在 Facebook（NSAUSGov）和
    Twitter（[@NSAUSGov](http://www.twitter.com/@NSAUSGov)）上发布加密谜题。如果你对在该机构的职业生涯感兴趣，解决这些挑战可能是引起他们注意的好方法。图
    [Figure 4-2](#figure4-2) 中的密文是 NSA 于 2014 年 5 月通过 Twitter 发布的四个挑战密码中的第一个。因为每个密码都是在周一发布的，所以它们被称为“NSA
    周一挑战”^([2](b06.xhtml#c04-endnote-2))。
- en: '![](image_fi/502727c04/f04002.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/f04002.png)'
- en: 'Figure 4-2: First of the four NSA Monday Challenges in 2014'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-2：2014 年四个 NSA 周一挑战中的第一个
- en: 'Here’s a transcript of the first NSA Monday Challenge:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是第一个 NSA 周一挑战的文字记录：
- en: '`tpfccdlfdtte pcaccplircdt dklpcfrp?qeiq`'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`tpfccdlfdtte pcaccplircdt dklpcfrp?qeiq`'
- en: '`lhpqlipqeodf gpwafopwprti izxndkiqpkii`'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`lhpqlipqeodf gpwafopwprti izxndkiqpkii`'
- en: '`krirrifcapnc dxkdciqcafmd vkfpcadf.`'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`krirrifcapnc dxkdciqcafmd vkfpcadf.`'
- en: 'Don’t let the spaces confuse you. They separate blocks of twelve letters and
    do not correspond to the word separations in the plaintext. Here’s a frequency
    analysis:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 不要让空格搞混了视线。它们将字母分成十二个一组，并不对应于明文中的单词分隔。以下是频率分析结果：
- en: '![](image_fi/502727c04/g04002.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/g04002.png)'
- en: The frequencies are consistent with a simple substitution cipher. The index
    of coincidence of the ciphertext is 6.7%, which is exactly the expected value
    of an English text. So, it makes sense to assume that this first NSA Monday Challenge
    is a Patristocrat.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些频率与简单的替代密码一致。密文的重合指数为 6.7%，这恰好是英语文本的预期值。因此，假设第一个 NSA 周一挑战是一个 Patristocrat
    密码是合理的。
- en: How to break a Patristocrat
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何破解一个 Patristocrat 密码
- en: The first NSA Monday Challenge can be solved within seconds by a computer, using
    techniques such as hill climbing (see [Chapter 16](c16.xhtml)). To do so, you
    could use the cryptogram solver available as a part of Tyler Akins’ Cipher Tools
    at [https://rumkin.com/tools/cipher/](https://rumkin.com/tools/cipher/) or CrypTool
    2\. For those who prefer to solve cryptograms by hand, read on.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个 NSA 周一挑战可以通过计算机在几秒钟内解决，采用的方法如爬山算法（见 [第16章](c16.xhtml)）。为了实现这一点，你可以使用 Tyker
    Akins 的 Cipher Tools 中提供的密码解密工具，网址为 [https://rumkin.com/tools/cipher/](https://rumkin.com/tools/cipher/)
    或 CrypTool 2。如果你更喜欢手动解密密码，接着阅读。
- en: Frequency analysis using digraphs
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用双字母组合进行的频率分析
- en: 'Clearly, frequency analysis can be very helpful for breaking a Patristocrat,
    but we can use a few additional statistics in our analyses. The first involves
    *digraphs*, or consecutive letter pairs, that appear in the text. Here is a frequency
    analysis of digraphs in the first NSA Monday Challenge:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，频率分析对于破解一个 Patristocrat 密码非常有帮助，但我们可以在分析中使用一些额外的统计数据。第一个涉及到 *双字母组合*，即出现在文本中的连续字母对。以下是第一个
    NSA 周一挑战中的双字母组合频率分析：
- en: '![](image_fi/502727c04/g04003.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/g04003.png)'
- en: 'To make use of these statistics, we need a few further facts about the English
    language:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要利用这些统计数据，我们还需要了解一些关于英语语言的额外事实：
- en: The most frequent digraph in the English language is *EN*.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 英语中最常见的双字母组合是 *EN*。
- en: 'The digraph *ER* is frequent in both directions: *ER*/*RE*.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双字母组合 *ER* 在两个方向上都很常见：*ER*/*RE*。
- en: The most frequent digraph consisting of doubled letters is *LL*, followed by
    *TT* and *SS*.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由重复字母组成的最常见的双字母组合是 *LL*，其次是 *TT* 和 *SS*。
- en: The digraphs *AA* and *II* are very rare in English, although *A* and *I* are
    frequent standalone letters.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双字母组合 *AA* 和 *II* 在英语中非常罕见，尽管 *A* 和 *I* 是常见的独立字母。
- en: You can find more information about English digraphs in Appendix B.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在附录 B 中找到更多关于英语双字母（digraphs）的信息。
- en: You might initially assume that the most frequent digraph in the ciphertext
    corresponds to the most frequent one in the English language. However, this assumption
    doesn’t work very well for a ciphertext of only about a hundred letters. Nevertheless,
    knowledge of digraph frequencies can be helpful, as will become clear.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能最初会认为，密文中最频繁的双字母组合对应着英语中最常见的双字母组合。然而，这个假设对于只有大约一百个字母的密文来说效果并不好。尽管如此，了解双字母组合的频率仍然是有帮助的，后面会更加明确。
- en: Before we move on, let’s also perform a triple-letter (trigraph) analysis of
    the ciphertext. This analysis reveals that the trigraphs `PQE` and `PCA` appear
    twice, while all other groupings of three letters have a frequency of one. The
    most frequent trigraph in the English language is *THE*, followed by *AND*, *ING*,
    *ENT*, *ION*, *HER*, *FOR*, and *THA* (see Appendix B for additional trigraph
    statistics).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，让我们也对密文进行三字母组（trigraph）的分析。这个分析显示，三字母组`PQE`和`PCA`各出现了两次，而其他所有三字母组合的出现频率都为一次。英语中最常见的三字母组合是*THE*，接下来是*AND*、*ING*、*ENT*、*ION*、*HER*、*FOR*和*THA*（更多的三字母组统计见附录B）。
- en: Trigraph frequencies may be quite helpful for breaking longer ciphertexts, but
    they are not relevant here because only two trigraphs appear more than once in
    the challenge. For similar reasons, tetragraph (four-letter), pentagraph (five-letter),
    and hexagraph (six-letter) frequencies are of no use in this context, though,
    believe it or not, they all have been used by codebreakers. In general, a group
    of *n* letters is referred to as an *n-graph*.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 三字母组的频率可能对破解较长的密文非常有帮助，但在这里并不相关，因为在本挑战中只有两个三字母组出现了多次。出于类似的原因，四字母组、五字母组和六字母组的频率在这个情况下也没有用，尽管不可思议的是，它们曾被密码破译者使用过。一般来说，*n*个字母的组合被称为*n-graph*。
- en: 'Let’s now try to apply the statistics we have computed. As shown in our initial
    frequency analysis, the most frequent letter in the first NSA Monday Challenge
    ciphertext is `P` (12.5%), followed by `C` (11.54%) and `I` (10.58%). So, let’s
    assume that these letters stand for `E`, `T`, and `A`, the most frequent letters
    in the English language. There are several possibilities for how to map `P`, `C`,
    and `I` onto `E`, `T`, and `A`, starting with the following option:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们尝试应用我们已经计算出的统计数据。如我们在最初的频率分析中所示，第一个NSA Monday Challenge密文中最常见的字母是`P`（12.5%），接着是`C`（11.54%）和`I`（10.58%）。因此，我们假设这些字母分别代表英语中最常见的字母`E`、`T`和`A`。有几种方法可以将`P`、`C`和`I`映射到`E`、`T`和`A`，我们从以下选项开始：
- en: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
- en: '`* * T * * * * * A * * * * * * E * * * * * * * * * *`'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`* * T * * * * * A * * * * * * E * * * * * * * * * *`'
- en: 'We could check the plausibility of this assumption by taking a look at the
    resulting digraphs, either by hand or by using modern tools such as Cipher Tools
    or CrypTool 2, which produces the following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过手动检查或使用现代工具（如Cipher Tools或CrypTool 2）来验证这个假设的可信度，这些工具会生成如下结果：
- en: '![](image_fi/502727c04/g04004.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/g04004.png)'
- en: It is immediately clear that a few things don’t look plausible. For example,
    the digraph `AA` (which appears twice) and the digraph `AE` are not very common
    in English. We’re probably on the wrong track.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，有些东西看起来不太合理。例如，二字母组`AA`（出现了两次）和二字母组`AE`在英语中并不常见。我们可能走错了方向。
- en: 'We therefore try another assumption:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 因此我们尝试另一个假设：
- en: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
- en: '`* * A * * * * * T * * * * * * E * * * * * * * * * *`'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`* * A * * * * * T * * * * * * E * * * * * * * * * *`'
- en: 'This renders the following plaintext candidate:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这会生成如下的明文候选：
- en: '`*E*AA*******EA*AAE*T*A*****EA**E?**T***E**TE******E****E*E**TT*****T*E*TT**T**T*A*E*A****AT*A*******EA***`'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`*E*AA*******EA*AAE*T*A*****EA**E?**T***E**TE******E****E*E**TT*****T*E*TT**T**T*A*E*A****AT*A*******EA***`'
- en: Again, we have two `AA`s, which is not very likely. Moreover, the trigraph `AAE`
    appears in the plaintext but is very rare in the English language. Our guess was
    apparently wrong again.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再次遇到了两个`AA`，这种情况不太可能。而且，三字母组`AAE`出现在明文中，但在英语中非常罕见。显然，我们的猜测又错了。
- en: 'Now, let’s try a third assumption:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们尝试第三个假设：
- en: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
- en: '`* * T * * * * * E * * * * * * A * * * * * * * * * *`'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`* * T * * * * * E * * * * * * A * * * * * * * * * *`'
- en: 'This renders as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这会呈现如下结果：
- en: '`*A*TT*******AT*TTA*E*T*****AT**A?**E***A**EA******A****A*A**EE*****E*A*EE**E**E*T*A*T****TE*T*******AT***`'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`*A*TT*******AT*TTA*E*T*****AT**A?**E***A**EA******A****A*A**EE*****E*A*EE**E**E*T*A*T****TE*T*******AT***`'
- en: This is the best result so far, so let’s stick with it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是迄今为止最好的结果，所以我们就坚持这个。
- en: 'Examining the results further, it becomes apparent that the missing letter
    (a ciphertext `A`) in `AT*TTA` is probably a vowel. As `A` and `E` are already
    in use, this letter can only be `I`, `O`, `U`, or `Y`. If `I` is correct, we get
    the digraph `IT`, which is a frequent English word. Let’s try this:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步检查结果后，很明显，在`AT*TTA`中的缺失字母（一个密文中的`A`）很可能是一个元音字母。由于`A`和`E`已经被使用，这个字母只能是`I`、`O`、`U`或`Y`。如果`I`是正确的，我们就得到了二字母组`IT`，这是一个常见的英语单词。我们来试试这个：
- en: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
- en: '`I * T * * * * * E * * * * * * A * * * * * * * * * *`'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`I * T * * * * * E * * * * * * A * * * * * * * * * *`'
- en: 'This renders as the following:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以转化为以下内容：
- en: '`*A*TT*******ATITTA*E*T*****AT**A?**E***A**EA******A*I**A*A**EE*****E*A*EE**E**E*TIA*T****TE*TI******ATI**`'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`*A*TT*******ATITTA*E*T*****AT**A?**E***A**EA******A*I**A*A**EE*****E*A*EE**E**E*TIA*T****TE*TI******ATI**`'
- en: 'This looks good; it could be English, and there is nothing that shows up as
    a red flag. What can we try next? The string `ATI**` at the end might stand for
    `ATING`, as in `RATING` or `SKATING`. Let’s add `N` and `G` to our table:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来不错；它可能是英语，且没有什么明显的警告。接下来我们可以尝试什么呢？结尾的字符串`ATI**`可能代表`ATING`，例如`RATING`或`SKATING`。让我们在我们的表格中添加`N`和`G`：
- en: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
- en: '`I * T N * G * * E * * * * * * A * * * * * * * * * *`'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`I * T N * G * * E * * * * * * A * * * * * * * * * *`'
- en: 'We now get this:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在得到的是：
- en: '`*AGTTN*GN***ATITTA*E*TN*N**ATG*A?**E***A**EA***NG*A*IG*A*A**EE***N*E*A*EE**E**EGTIA*TN**NTE*TIG*N**GATING`'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`*AGTTN*GN***ATITTA*E*TN*N**ATG*A?**E***A**EA***NG*A*IG*A*A**EE***N*E*A*EE**E**EGTIA*TN**NTE*TIG*N**GATING`'
- en: '`AGTTN` and `GTIA` are not very likely in an English text. Moreover, the word
    `GATING` at the end doesn’t make much sense. *EN*, the most frequent English digraph,
    doesn’t appear at all in this plaintext candidate. Altogether, this means that
    our assumption concerning `N` and `G` is probably wrong.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`AGTTN`和`GTIA`在英语文本中不太常见。而且，结尾的单词`GATING`也不太合理。最常见的英语二元组`EN`在这个明文候选中完全没有出现。总体来说，这意味着我们对`N`和`G`的假设可能是错误的。'
- en: 'Perhaps the last five letters are not `ATING`, but `ATION`. There are many
    words with this ending, for instance, `STATION`, `RELATION`, and `FRUSTRATION`.
    Let’s check this guess:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 或许最后五个字母不是`ATING`，而是`ATION`。有很多以这个结尾的单词，例如`STATION`、`RELATION`和`FRUSTRATION`。让我们检查一下这个猜测：
- en: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
- en: '`I * T O * N * * E * * * * * * A * * * * * * * * * *`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`I * T O * N * * E * * * * * * A * * * * * * * * * *`'
- en: 'Here is our plaintext candidate:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的明文候选：
- en: '`*ANTTO*NO***ATITTA*E*TO*O**ATN*A?**E***A**EA***ON*A*IN*A*A**EE***O*E*A*EE**E**ENTIA*TO**OTE*TIN*O**NATION`'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`*ANTTO*NO***ATITTA*E*TO*O**ATN*A?**E***A**EA***ON*A*IN*A*A**EE***O*E*A*EE**E**ENTIA*TO**OTE*TIN*O**NATION`'
- en: 'This looks pretty good. `NATION` as the last word in an NSA cryptogram is quite
    plausible. The digraph `EN`, which we expect to be frequent, shows up once. Also,
    we can now guess several additional words: `O**NATION` probably means `OUR NATION`;
    `E**ENTIA*` could stand for `ESSENTIAL`; and `*ANTTO` most likely represents `WANT
    TO`. This gives us several more letters:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来不错。`NATION`作为NSA加密信息中的最后一个单词是相当合理的。我们预期频繁出现的二元组`EN`出现了一次。而且，我们现在可以猜测出几个额外的单词：`O**NATION`可能表示`OUR
    NATION`（我们的国家）；`E**ENTIA*`可能代表`ESSENTIAL`（必不可少的）；而`*ANTTO`很可能表示`WANT TO`（想要）。这给我们提供了更多的字母：
- en: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
- en: '`I * T O * N * * E * R * * L * A * S * W * U * * * *`'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`I * T O * N * * E * R * * L * A * S * W * U * * * *`'
- en: 'Here is our next plaintext candidate:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们下一个明文候选：
- en: '`WANTTO*NOWW*ATITTA*ESTOWOR*ATNSA?**E***A**EA***ON*A*IN*A*ASWEE**LORE*AREERSESSENTIALTO*ROTE*TIN*OURNATION`'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`WANTTO*NOWW*ATITTA*ESTOWOR*ATNSA?**E***A**EA***ON*A*IN*A*ASWEE**LORE*AREERSESSENTIALTO*ROTE*TIN*OURNATION`'
- en: 'Guessing the remaining letters is straightforward. Here’s the plaintext of
    the first NSA Monday Challenge:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 猜测剩余的字母很简单。以下是第一次NSA星期一挑战的明文：
- en: '`WANT TO KNOW WHAT IT TAKES TO WORK AT NSA? CHECK BACK EACH MONDAY IN MAY AS
    WE EXPLORE CAREERS ESSENTIAL TO PROTECTING OUR NATION.`'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`WANT TO KNOW WHAT IT TAKES TO WORK AT NSA? CHECK BACK EACH MONDAY IN MAY AS
    WE EXPLORE CAREERS ESSENTIAL TO PROTECTING OUR NATION.`'
- en: 'Here’s the substitution table (ciphertext letters marked with `?` are those
    for which the corresponding plaintext letter does not exist):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这是替代字母表（用`?`标记的密文字母表示对应的明文字母不存在）：
- en: '`Plaintext:` `A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`明文:` `A B C D E F G H I J K L M N O P Q R S T U V W X Y Z`'
- en: '`Ciphertext: P H Q G I ? M E A ? L N O F D X ? K S C V ? T Z W ?`'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`密文: P H Q G I ? M E A ? L N O F D X ? K S C V ? T Z W ?`'
- en: Word guessing
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 单词猜测
- en: 'Other techniques can help us decipher Patristocrats. Let’s look at the first
    NSA Monday Challenge (including the frequency chart) again:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 其他技术可以帮助我们解密"Patristocrats"。让我们再次查看第一次NSA星期一挑战（包括频率图）：
- en: '`tpfccdlfdtte pcaccplircdt dklpcfrp?qeiq lhpqlipqeodf gpwafopwprti izxndkiqpkii
    krirrifcapnc dxkdciqcafmd vkfpcadf.`'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`tpfccdlfdtte pcaccplircdt dklpcfrp?qeiq lhpqlipqeodf gpwafopwprti izxndkiqpkii
    krirrifcapnc dxkdciqcafmd vkfpcadf.`'
- en: '![](image_fi/502727c04/g04005.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/g04005.png)'
- en: One possibility is to start by guessing a word. This would be a lot easier if
    we knew the positions of the spaces, but this is not the case here. Still, word
    guessing may work. We know that the NSA is the sender of the message, so searching
    for the trigraph `NSA` seems like a good idea. This search won’t work, however,
    as this set of letters is hard to spot in the more than one hundred trigraphs
    we would have to check.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 一种可能性是从猜测一个单词开始。如果我们知道空格的位置，这将变得容易得多，但在这里并不是如此。不过，猜单词可能有效。我们知道NSA是消息的发送者，因此搜索三字母组合`NSA`似乎是个不错的主意。然而，这个搜索并不起作用，因为这个字母组合在我们需要检查的上百个三字母组合中很难被发现。
- en: 'Let’s assume that we know from some source that the word `CAREER` appears in
    the plaintext (after all, `CAREER` is a likely word in an NSA challenge cryptogram
    made to attract talented codebreakers). Now we can use it as a crib. The word
    `CAREER` contains the string `REER`, which has a letter pattern of type 1221\.
    If we search for this pattern in the ciphertext, we find two strings of this kind:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们知道某个来源提供的信息，表示单词`CAREER`出现在明文中（毕竟，`CAREER`是NSA为吸引有才华的破译者而制作的加密题目中的一个可能单词）。现在我们可以将它作为密码提示。单词`CAREER`包含字符串`REER`，它的字母模式是1221型。如果我们在密文中搜索这个模式，就会找到两个类似的字符串：
- en: '`KIIK`: This looks like a good candidate.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KIIK`：这看起来是一个不错的候选项。'
- en: '`IRRI`: There’s an `R` left of the first `I`, so the letter pattern is actually
    21221\. This doesn’t fit with `CAREER`.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IRRI`：第一个`I`左边有一个`R`，因此字母模式实际上是21221型。这与`CAREER`不匹配。'
- en: This means that `KIIK` is the only string that fits. If our guess is correct,
    `QPKIIK` stands for `CAREER`. The identified letters `A`, `C`, `E`, and `R` should
    be enough to determine the remaining letters. We leave the rest of the deciphering
    process to the reader.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着`KIIK`是唯一符合的字符串。如果我们的猜测是正确的，`QPKIIK`代表`CAREER`。已识别的字母`A`、`C`、`E`和`R`应该足以确定其余的字母。我们将解密的剩余部分留给读者。
- en: Success stories
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成功故事
- en: A prison message
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一条监狱消息
- en: The note depicted in [Figure 4-3](#figure4-3) was sent in 2012 by an inmate
    of a prison in Manchester, UK, to his sister.^([3](b06.xhtml#c04-endnote-3)) According
    to the sender of the message, the numbers represented a puzzle for his sister
    to solve. Police of course immediately suspected an encrypted message, so they
    asked British forensic linguist John Olsson to take a look at the note.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图4-3](#figure4-3)所示，2012年，一名英国曼彻斯特监狱的囚犯将这张纸条寄给了他的姐姐。^([3](b06.xhtml#c04-endnote-3))
    根据消息的发送者说，数字代表了一个谜题，让他的姐姐来解答。警方当然立即怀疑这是加密信息，于是他们请来了英国法医语言学家John Olsson来查看这张纸条。
- en: '![](image_fi/502727c04/f04003.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/f04003.png)'
- en: 'Figure 4-3: This encrypted message sent in 2012 by a British prison inmate
    doesn’t contain spaces.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-3：这份由2012年英国监狱囚犯发送的加密消息中没有空格。
- en: Olsson saw that the cryptogram contained twenty-three distinct numbers. A frequency
    analysis revealed that it was consistent with a simple substitution ciphertext.
    To break the cipher, Olsson first tried to guess words—a difficult task, as the
    message didn’t contain spaces. Following a systematic approach, Olsson analyzed
    840 letter combinations of various lengths in the ciphertext and checked each
    one to see if it could represent a certain word. The breakthrough came when he
    assumed that the sequence `38`, `9`, `5`, `10`, `3`, `5` stood for `PLEASE`—a
    guess that proved correct. Knowing five letters, Olsson could then identify all
    the others. Here are the first eight lines of the plaintext. (It contains many
    mistakes and unusual spellings.)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Olsson发现加密文本中包含二十三个不同的数字。频率分析显示，这与简单替换加密密文一致。为了破解这个密码，Olsson首先尝试猜测单词——这是一项艰难的任务，因为消息中没有空格。通过系统地分析Olsson分析了密文中840种不同长度的字母组合，并检查每个字母组合是否能够代表某个特定的单词。突破口出现在他假设`38`、`9`、`5`、`10`、`3`、`5`代表`PLEASE`时——这个猜测证明是正确的。在知道了五个字母之后，Olsson便能识别出所有其他字母。以下是明文的前八行。（它包含许多错误和不常见的拼写。）
- en: '`KOH C U M M A x I WID SA`'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`KOH C U M M A x I WID SA`'
- en: '`xY UNCLE PLEASE I`'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`xY UNCLE PLEASE I`'
- en: '`RUSH SHUD TAKE 2 DAYS 2`'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`RUSH SHUD TAKE 2 DAYS 2`'
- en: '`A WEK DA TASK IS TO BE`'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`A WEK DA TASK IS TO BE`'
- en: '`COMPLETED BY ANY ME-`'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`COMPLETED BY ANY ME-`'
- en: '`ANS NECERSSARY PLEASE`'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`ANS NECERSSARY PLEASE`'
- en: '`TASK STATEMENT FROM`'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`TASK STATEMENT FROM`'
- en: '`SHAKA THROUGH INDECEND-`'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`SHAKA THROUGH INDECEND-`'
- en: 'One potential way to interpret this plaintext is this:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一种可能的方式来解读这个明文是：
- en: '`Kohcumma and I would say, “Uncle, please don’t rush. Should take two days
    to a week.” The task is to be completed by any means necessary. Please task statement
    from Shaka through indecent . . .`'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`Kohcumma 和我会说：“叔叔，请别急。应该需要两天到一周。”任务必须通过任何手段完成。请从释迦那里获取任务声明，经过不雅的...`'
- en: The rest of the message is available online at Klaus’s blog.^([4](b06.xhtml#c04-endnote-4))
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 其余的信息可以在克劳斯的博客上找到。^[4](b06.xhtml#c04-endnote-4)
- en: The Cheltenham Number Stone
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 切尔滕纳姆数字石
- en: The British Government Communications Headquarters (GCHQ) is one of the most
    powerful surveillance organizations in the world, comparable to the American NSA.
    It is located in a large, round building (“The Doughnut”) on the outskirts of
    Cheltenham, UK. A side exit of this building leads to Hester’s Way Park, where
    a set of nine stone sculptures, the *Listening Stones*, created in 2004 by artist
    Gordon Young, are exhibited.^([5](b06.xhtml#c04-endnote-5))
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 英国政府通信总部（GCHQ）是世界上最强大的监控机构之一，与美国的NSA不相上下。它位于英国切尔滕纳姆郊区的一座大型圆形建筑（“甜甜圈”）内。该建筑的一侧出口通向赫斯特公园，公园内展示着由艺术家戈登·杨（Gordon
    Young）于2004年创作的九座石雕——*听石*。^[5](b06.xhtml#c04-endnote-5)
- en: Each of the *Listening Stones* has a set of carvings consisting of letters,
    numbers, or symbols. Two of these inscriptions are encrypted messages. Because
    one of these ciphertexts consists of numbers while the other is composed of letters,
    we refer to them as the “Number Stone” and the “Letter Stone,” respectively (though
    these are not their official names). The Letter Stone will be covered in Chapter
    16.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 每块*听石*上都有一组刻字，包括字母、数字或符号。其中有两块刻字包含加密信息。由于其中一块是由数字组成，而另一块则由字母构成，我们将它们分别称为“数字石”和“字母石”（尽管这不是它们的正式名称）。字母石将在第16章中介绍。
- en: '[Figure 4-4](#figure4-4) shows the Number Stone, which bears a cryptogram consisting
    of about 1,300 two-digit numbers, all between 01 and 66.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '[图4-4](#figure4-4)展示了数字石，它上面刻有大约1300个两位数的数字，范围从01到66。'
- en: '![](image_fi/502727c04/F04004.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/F04004.png)'
- en: 'Figure 4-4: The Number Stone is one of the *Listening Stones* created in 2004
    by British artist Gordon Young. The inscribed numbers represent an encrypted message.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-4：数字石是由英国艺术家戈登·杨（Gordon Young）于2004年创作的*听石*之一。上面刻的数字代表了一条加密信息。
- en: 'Here are the first hundred numbers of the message:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是信息的前一百个数字：
- en: '`23 02 13 22 25 33 02 14 33 25 02 21 16 26 10 03 06 33 04 13 21 16 01 15 26
    25 33 47 44 33 26 10 12 15 16 11 10 05 10 33 10 20 13 22 16 33 30 53 46 64 33
    46 33 42 51 57 54 37 53 64 33 54 64 33 54 63 33 30 53 51 43 33 40 43 33 64 53
    51 33 47 46 60 47 40 40 33 60 46 64 64 54 43 37 33 16 43 33 60 44 33`'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`23 02 13 22 25 33 02 14 33 25 02 21 16 26 10 03 06 33 04 13 21 16 01 15 26
    25 33 47 44 33 26 10 12 15 16 11 10 05 10 33 10 20 13 22 16 33 30 53 46 64 33
    46 33 42 51 57 54 37 53 64 33 54 64 33 54 63 33 30 53 51 43 33 40 43 33 64 53
    51 33 47 46 60 47 40 40 33 60 46 64 64 54 43 37 33 16 43 33 60 44 33`'
- en: 'In 2015, Klaus published an article about this cryptogram on his *Cipherbrain*
    blog.^([6](b06.xhtml#c04-endnote-6)) After only a few hours, a blog reader named
    Robert posted a (correct) solution in the comments section. It turned out that
    the creator of the message had used a simple substitution cipher. We don’t know
    exactly how Robert broke this ciphertext, but we assume that he used frequency
    analysis. Considering that the message is quite long, it was certainly possible
    to identify a few letters based solely on their frequency. In addition, the substitution
    table shows some regularities, as the letters of the alphabet are sorted using
    the artist’s name, Gordon Young, as the keyword. Here’s the table:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 2015年，克劳斯在他的*Cipherbrain*博客上发布了一篇关于这个密码图的文章。^[6](b06.xhtml#c04-endnote-6) 仅仅几个小时后，一位名叫罗伯特的博客读者就在评论区发布了解答（正确答案）。事实证明，信息的创建者使用了一种简单的替换密码。我们不知道罗伯特究竟是如何破解这个密文的，但我们猜测他使用了频率分析。考虑到这条信息相当长，仅凭字母出现的频率就能识别出一些字母是完全可能的。此外，替换表也显示出一些规律，因为字母表的顺序是用艺术家戈登·杨的名字作为关键字来排序的。以下是替换表：
- en: '`G O R D N Y U A B C E F H I J K L M P Q S T V W X Z`'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`G O R D N Y U A B C E F H I J K L M P Q S T V W X Z`'
- en: '`01 02 03 04 05 06 07 10 11 12 13 14 15 16 17 20 21 22 23 24 25 26 27 30 31
    32`'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`01 02 03 04 05 06 07 10 11 12 13 14 15 16 17 20 21 22 23 24 25 26 27 30 31
    32`'
- en: '`_ . , ’`'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`_ . , ’`'
- en: '`33 34 35 36`'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`33 34 35 36`'
- en: '`g o r d n y u a b c e f h I j k l m p q s t v w x z`'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`g o r d n y u a b c e f h I j k l m p q s t v w x z`'
- en: '`37 40 41 42 43 44 45 46 47 50 51 52 53 54 55 56 57 60 61 62 63 64 65 66 67
    70`'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`37 40 41 42 43 44 45 46 47 50 51 52 53 54 55 56 57 60 61 62 63 64 65 66 67
    70`'
- en: 'Here are the first lines of the plaintext:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是明文的前几行：
- en: '`POEMS OF SOLITARY DELIGHTS by`'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`孤独的快乐诗篇，由`'
- en: '`TACHIBANA AKEMI` `What a delight it`'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`立花明美` `真是令人高兴`'
- en: '`is When on the bamboo matting`'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`是当在竹席上时`'
- en: '`In my grassthatched hut,`'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`在我的草屋里，`'
- en: '`All on my own, I make myself at`'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`全凭我自己，我使自己处于`'
- en: '`ease. What a delight it is`'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '`轻松。多么令人愉快`'
- en: '`When, borrowing Rare writings`'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`当，借用稀有的文献`'
- en: '`from a friend, I open out The`'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`来自朋友的，我展开了`'
- en: '`first sheet. What a delight`'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`第一张纸。多么令人愉快`'
- en: '`it is When, spreading paper,`'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`它是当，铺开纸张时，`'
- en: '`I take my brush And find my`'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`我拿起我的画笔，找到我的`'
- en: '`hand Better than I thought.`'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`手 比我想象的要好。`'
- en: Challenges
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 挑战
- en: Rudyard Kipling’s encrypted message
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 拉迪亚德·吉卜林的加密信息
- en: Rudyard Kipling was the author of many famous tales, such as those found in
    *The* *Jungle Book* (1894). Within his considerable body of work are the *Just
    So Stories* (1902) for children, one of which is “How the First Letter Was Written.”
    The story’s original print included an illustration between two sequences of symbols
    ([Figure 4-5](#figure4-5)). These symbols are a message encrypted in a Patristocrat
    style. Can you break it?
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 拉迪亚德·吉卜林是许多著名故事的作者，比如《丛林之书》（1894年）中的故事。在他丰富的作品中，还有为儿童创作的《恰如其分的故事》（1902年），其中之一是《如何写下第一个字母》。故事的原版印刷中，包括了在两组符号之间的插图（[图4-5](#figure4-5)）。这些符号是以父权主义风格加密的信息。你能破解它吗？
- en: '![](image_fi/502727c04/f04005.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/f04005.png)'
- en: 'Figure 4-5: The symbols on the left and right of this illustration in a 1902
    Rudyard Kipling story represent a message encrypted in a substitution cipher.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-5：这幅插图中，1902年拉迪亚德·吉卜林故事左右两边的符号代表了一个用替换密码加密的信息。
- en: 'Hint: This is not as difficult as it appears! Look carefully, and you will
    see that the first word is `THIS`. For more hints, just as for everything in our
    Challenges sections, check out [https://codebreaking-guide.com/challenges/](https://codebreaking-guide.com/challenges/).'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 提示：这并不像看起来那么难！仔细看，你会发现第一个单词是`THIS`。更多提示，请参考我们的挑战部分，就像所有的内容一样，查看[https://codebreaking-guide.com/challenges/](https://codebreaking-guide.com/challenges/)。
- en: NSA’s second Monday Challenge
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NSA 第二次星期一挑战
- en: 'Earlier in this chapter, we introduced the first NSA Monday Challenge released
    in 2014\. Here’s the second one:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章早些时候，我们介绍了2014年发布的第一次NSA星期一挑战。这里是第二个：
- en: '`Rimfinnpeqcnvqauuagcrdokvdisndrdcrpigaisacpsdffaicvhakcfdqfpqdetrk`'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`Rimfinnpeqcnvqauuagcrdokvdisndrdcrpigaisacpsdffaicvhakcfdqfpqdetrk`'
- en: '`ilfa ecnpqacakqisacpfampoacfimannicfakdumfalddnraprf`'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`ilfa ecnpqacakqisacpfampoacfimannicfakdumfalddnraprf`'
- en: This cryptogram needs to be read backward. Apart from this, it’s an ordinary
    substitution cipher without spaces.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这个密码需要反向读取。除此之外，它是一个普通的无空格替换密码。
- en: Unsolved cryptograms
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未解密的密码
- en: Several unsolved cryptograms appear to be English texts encrypted with substitution
    ciphers without spaces. We’ll introduce three of them.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 几个未解的密码似乎是用无空格替换密码加密的英文文本。我们将介绍其中三个。
- en: The Dorabella cryptogram
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多拉贝拉密码
- en: The Dorabella cryptogram is extremely well known. It is covered in everything
    from David Kahn’s 1967 classic *The Codebreakers* (including the 1996 edition),^([7](b06.xhtml#c04-endnote-7))
    to Elonka’s “Famous Unsolved Codes and Ciphers” page,^([8](b06.xhtml#c04-endnote-8))
    to Klaus’s “Top 50 Unsolved Cryptograms” list.^([9](b06.xhtml#c04-endnote-9))
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 多拉贝拉密码是极为著名的。从大卫·卡恩1967年的经典著作*《破译者》*（包括1996年版）^([7](b06.xhtml#c04-endnote-7))，到伊隆卡的“著名未解密的代码和密码”页面^([8](b06.xhtml#c04-endnote-8))，再到克劳斯的“前50大未解密码”列表^([9](b06.xhtml#c04-endnote-9))，都涉及到这个密码。
- en: British composer Edward Elgar (1857–1934) not only created famous music pieces,
    such as the early twentieth-century march “Pomp and Circumstance,” but also was
    fond of cryptography. In 1897, when his wife Alice sent a thank-you letter to
    the Penny family, he included an encrypted note to his friend, the twenty-three-year-old
    Dora Penny ([Figure 4-6](#figure4-6)).^([10](b06.xhtml#c04-endnote-10)) This ciphertext
    is referred to as the Dorabella cryptogram, and despite analysis by many people
    (from amateurs to renowned codebreakers) for over a century, it has never been
    solved.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 英国作曲家爱德华·埃尔加（1857–1934年）不仅创作了著名的音乐作品，比如20世纪初的进行曲《荣耀与典礼》，而且还对密码学充满兴趣。1897年，当他的妻子爱丽丝给佩妮家族寄去感谢信时，他附上了一封加密的便条给他的朋友——23岁的多拉·佩妮（[图4-6](#figure4-6)）。^([10](b06.xhtml#c04-endnote-10))
    这段密文被称为多拉贝拉密码，尽管经过了一个多世纪许多人的分析（从业余爱好者到著名的密码破译者），它仍未被破解。
- en: '![](image_fi/502727c04/f04006.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/f04006.png)'
- en: 'Figure 4-6: The Dorabella cryptogram is one of the most famous unsolved crypto
    mysteries.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-6：多拉贝拉密码是最著名的未解加密谜团之一。
- en: The frequency distribution of the Dorabella cryptogram fits well with a monoalphabetic
    substitution cipher, but this has not led to the solution. There are many ways
    to explain this. Elgar might have deliberately avoided words containing Es. Others
    have suggested that the Dorabella cryptogram might encrypt a melody (i.e., musical
    notes), rather than a text. It is also possible that the plaintext is in a language
    other than English. Or, of course, the Dorabella cryptogram may not be a simple
    substitution cipher at all. If you want to dig deeper, check out Craig Bauer’s
    2017 book *Unsolved!*^([11](b06.xhtml#c04-endnote-11)) It provides a comprehensive
    analysis of the Dorabella cryptogram.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 多拉贝拉密码的频率分布与单字母替换密码非常吻合，但这并没有带来最终的解答。有许多方法可以解释这一点。埃尔加可能故意避免包含字母E的词汇。也有观点认为多拉贝拉密码可能加密的是旋律（即音符），而不是文本。也有可能明文使用的语言并非英语。或者，当然，多拉贝拉密码根本就不是一个简单的替换密码。如果你想深入了解，可以看看克雷格·鲍尔（Craig
    Bauer）2017年出版的《*未解之谜！*》^([11](b06.xhtml#c04-endnote-11))，它提供了对多拉贝拉密码的全面分析。
- en: The Chinese gold bars mystery
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 中国金条之谜
- en: 'Another well-known unsolved cryptogram is inscribed on seven Chinese gold bars,
    as described on the International Association for Cryptologic Research website
    in 1996.^([12](b06.xhtml#c04-endnote-12)) These gold bars were allegedly issued
    to a General Wang in Shanghai, China, in 1933\. They appear to represent metal
    certificates related to a bank deposit with a US bank. The gold bars bear pictures,
    Chinese writing, some form of script writing, and cryptograms in Latin letters.
    The Chinese writing discusses a transaction in excess of $300 million. The cryptograms
    consist of sixteen encrypted lines, some of which are repeated:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个著名的未解密码刻在七根中国金条上，正如1996年在国际密码学研究协会网站上所描述的^([12](b06.xhtml#c04-endnote-12))。这些金条据称是1933年由上海的一位王将军发放的。它们似乎代表与美国银行存款相关的金属证书。金条上刻有图片、中文文字、某种书写形式和拉丁字母密码。中文文字讨论了一笔超过3亿美元的交易。密码由十六行加密文字组成，其中有些是重复的：
- en: '`SKCDKJCDJCYQSZKTZJPXPWIRN`'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`SKCDKJCDJCYQSZKTZJPXPWIRN`'
- en: '`MQOLCSJTLGAJOKBSSBOMUPCE`'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`MQOLCSJTLGAJOKBSSBOMUPCE`'
- en: '`RHZVIYQIYSXVNQXQWIOVWPJO`'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`RHZVIYQIYSXVNQXQWIOVWPJO`'
- en: '`FEWGDRHDDEEUMFFTEEMJXZR`'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`FEWGDRHDDEEUMFFTEEMJXZR`'
- en: '`XLYPISNANIRUSFTFWMIY`'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`XLYPISNANIRUSFTFWMIY`'
- en: '`HFXPCQYZVATXAWIZPVE`'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`HFXPCQYZVATXAWIZPVE`'
- en: '`YQHUDTABGALLOWLS`'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`YQHUDTABGALLOWLS`'
- en: '`UGMNCBXCFLDBEY`'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`UGMNCBXCFLDBEY`'
- en: '`ABRYCTUGVZXUPB`'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '`ABRYCTUGVZXUPB`'
- en: '`JKGFIJPMCWSAEK`'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`JKGFIJPMCWSAEK`'
- en: '`KOWVRSRKWTMLDH`'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`KOWVRSRKWTMLDH`'
- en: '`HLMTAHGBGFNIV`'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`HLMTAHGBGFNIV`'
- en: '`MVERZRLQDBHQ`'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`MVERZRLQDBHQ`'
- en: '`VIOHIKNNGUAB`'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`VIOHIKNNGUAB`'
- en: '`GKJFHYXODIE`'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`GKJFHYXODIE`'
- en: '`ZUQUPNZN`'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`ZUQUPNZN`'
- en: It is difficult to know how to categorize this cryptogram, as it is unsolved.
    We are making a guess that it might be a Patristocrat, but of course, it might
    be some other system.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 很难知道如何对这个密码进行分类，因为它仍未解开。我们猜测它可能是一个“教父密码”（Patristocrat），但当然也可能是其他系统。
- en: 'There has been an update to this mystery since the publication of this book’s
    first edition: on December 10, 2020, we attempted to contact the owner of the
    bars but found the phone number disconnected. We had more luck contacting the
    listed attorney, Peter Bisno. He confirmed that he had seen the bars themselves
    and that they were “large,” around the size of television remote controls. He
    informed us that there had been some effort to contact banks about them in the
    1990s, but that it hadn’t gone anywhere and that he had dropped his research.
    He did not know anything more about the current location of the bars.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 自本书第一版出版以来，这个谜团有了新的进展：2020年12月10日，我们尝试联系金条的所有者，但发现电话号码已被断开。我们联系了列出的律师彼得·比斯诺（Peter
    Bisno），并取得了一些进展。他确认他曾见过这些金条，且它们“很大”，差不多有电视遥控器的大小。他告诉我们，曾在1990年代尝试联系银行了解这些金条，但没有结果，且他已停止了相关研究。他并不知道金条目前的具体所在。
- en: James Hampton’s notebook
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 詹姆斯·汉普顿的笔记本
- en: Another difficult-to-categorize unsolved crypto mystery is by US amateur artist
    James Hampton (1909–1964), who left behind an artwork known as *The Throne of
    the Third Heaven* *of the Nations’ Millennium General Assembly*. He created this
    massive, altar-like installation over several years, starting in 1950, out of
    cardboard, aluminum foil, and other cheap materials. Today, it is on display in
    the Smithsonian American Art Museum in Washington, DC. Hampton was also the author
    of manually encrypted notes, including a notebook with over a hundred pages of
    ciphertext ([Figure 4-7](#figure4-7)).^([13](b06.xhtml#c04-endnote-13)) None of
    his notes have ever been deciphered. Scans of all the pages are available online.^([14](b06.xhtml#c04-endnote-14))
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个难以分类的未解决密码学谜团是由美国业余艺术家詹姆斯·汉普顿（1909-1964年）创建的。他留下了一件作品，被称为*“第三天堂的宝座”*，在多年的时间里，从1950年开始，用纸板、铝箔和其他廉价材料制成了这个大型的、类似祭坛的装置。今天，它展示在华盛顿特区的史密森尼美国艺术博物馆。汉普顿还创作了手工加密的笔记，包括一本有上百页密文的笔记本（[图
    4-7](#figure4-7)）。^([13](b06.xhtml#c04-endnote-13)) 他的笔记从未被解密过。所有页面的扫描版已在网上公开。^([14](b06.xhtml#c04-endnote-14))
- en: '![](image_fi/502727c04/f04007.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c04/f04007.png)'
- en: 'Figure 4-7: The encrypted notebook of amateur artist James Hampton has never
    been deciphered.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-7：业余艺术家詹姆斯·汉普顿的加密笔记本从未被解密过。
