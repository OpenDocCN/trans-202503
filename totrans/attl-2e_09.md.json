["```\n$ make check\ncd src && make check\nmake[1]: Entering directory '/.../jupiter/src'\ncc -g -O0    -o jupiter main.c\n./jupiter | grep \"Hello from .*jupiter!\"\nHello from ./jupiter!\n*** All TESTS PASSED\nmake[1]: Leaving directory '/.../jupiter/src'\n$\n```", "```\n$ make check\n--snip--\nPASS: greptest.sh\n============================================================================\nTestsuite summary for Jupiter 1.0\n============================================================================\n# TOTAL: 1\n# PASS:    1\n# SKIP:    0\n# XFAIL: 0\n# FAIL:    0\n# XPASS: 0\n# ERROR: 0\n============================================================================\n$\n```", "```\n#                                               -*- Autoconf -*-\n# Process this file with autoconf to produce a configure script.\n\nAC_PREREQ([2.69])\nAC_INIT([Jupiter],[1.0],[jupiter-bugs@example.org])\nAM_INIT_AUTOMAKE\nLT_PREREQ([2.4.6])\nLT_INIT([dlopen])\nAC_CONFIG_SRCDIR([src/main.c])\nAC_CONFIG_HEADERS([config.h])\n\nAC_CONFIG_TESTDIR([tests])\nAC_CONFIG_FILES([tests/Makefile\n                 tests/atlocal])\n\n# Checks for programs.\nAC_PROG_CC\nAC_PROG_INSTALL\n--snip--\n```", "```\n➊ TESTSUITE = $(srcdir)/testsuite\n➋ TESTSOURCES = $(srcdir)/local.at $(srcdir)/testsuite.at\n➌ AUTOM4TE = $(SHELL) $(top_srcdir)/missing --run autom4te\n➍ AUTOTEST = $(AUTOM4TE) language=autotest\n\n➎ check-local: atconfig atlocal $(TESTSUITE)\n           $(SHELL) '$(TESTSUITE)' $(TESTSUITEFLAGS)\n\n➏ atconfig: $(top_builddir)/config.status\n           cd $(top_builddir) && $(SHELL) ./config.status tests/$@\n\n➐ $(srcdir)/package.m4: $(top_srcdir)/configure.ac\n           $(AM_V_GEN) :;{ \\\n             echo '# Signature of the current package.' && \\\n             echo 'm4_define([AT_PACKAGE_NAME], [$(PACKAGE_NAME)])' && \\\n             echo 'm4_define([AT_PACKAGE_TARNAME], [$(PACKAGE_TARNAME)])' && \\\n             echo 'm4_define([AT_PACKAGE_VERSION], [$(PACKAGE_VERSION)])' && \\\n             echo 'm4_define([AT_PACKAGE_STRING], [$(PACKAGE_STRING)])' && \\\n             echo 'm4_define([AT_PACKAGE_BUGREPORT], [$(PACKAGE_BUGREPORT)])'; \\\n             echo 'm4_define([AT_PACKAGE_URL], [$(PACKAGE_URL)])'; \\\n           } >'$(srcdir)/package.m4'\n➑ $(TESTSUITE): $(TESTSOURCES) $(srcdir)/package.m4\n           $(AM_V_GEN) $(AUTOTEST) -I '$(srcdir)' -o $@.tmp $@.at; mv $@.tmp $@\n```", "```\nSUBDIRS = common include libjup src tests\n```", "```\nasync_exec=@async_exec@\n```", "```\n--snip--\n  ------------------------------------------\n  Unable to find pthreads on this system.\n  Building a single-threaded version.\n  ------------------------------------------])\n       async_exec=no\n   fi\nfi\n\nAC_SUBST([async_exec])\nif test \"x${async_exec}\" = xyes; then\n    AC_DEFINE([ASYNC_EXEC], 1, [async execution enabled])\nfi\n--snip--\n```", "```\nAT_INIT\n```", "```\n$ touch tests/testsuite.at\n```", "```\n$ autoreconf -i\n--snip--\n$ ./configure\n--snip--\nconfig.status: creating tests/Makefile\nconfig.status: creating tests/atlocal\n--snip--\nconfig.status: executing tests/atconfig commands\n-------------------------------------------------\n\nJupiter Version 1.0\n--snip--\n$ make check\n--snip--\nMaking check in tests\nmake[1]: Entering directory '/.../jupiter/tests'\nmake    check-local\nmake[2]: Entering directory '/.../jupiter/tests'\n:;{ \\\n  echo '# Signature of the current package.' && \\\n  echo 'm4_define([AT_PACKAGE_NAME], [Jupiter])' && \\\n  echo 'm4_define([AT_PACKAGE_TARNAME], [jupiter])' && \\\n  echo 'm4_define([AT_PACKAGE_VERSION], [1.0])' && \\\n  echo 'm4_define([AT_PACKAGE_STRING], [Jupiter 1.0])' && \\\n  echo 'm4_define([AT_PACKAGE_BUGREPORT], [jupiter-bugs@example.org])'; \\\n  echo 'm4_define([AT_PACKAGE_URL], [])'; \\\n} >'tests/package.m4'\n/bin/bash ../missing --run autom4te --language=autotest \\\n    -I '.' -o testsuite.tmp testsuite.at\nmv testsuite.tmp testsuite\n/bin/bash './testsuite'\n## ----------------------- ##\n## Jupiter 1.0 test suite. ##\n## ----------------------- ##\n\n## ------------- ##\n## Test results. ##\n## ------------- ##\n\n0 tests were successful.\n--snip--\n$\n```", "```\n   $ make check\n   --snip--\n➊ make    check-TESTS\n   make[2]: Entering directory '/.../jupiter/src'\n   make[3]: Entering directory '/.../jupiter/src'\n   PASS: greptest.sh\n   ============================================================================\n   Testsuite summary for Jupiter 1.0\n   ============================================================================\n   # TOTAL: 1\n   # PASS:    1\n   # SKIP:    0\n   # XFAIL: 0\n   # FAIL:    0\n   # XPASS: 0\n   # ERROR: 0\n   --snip--\n➋ Making check in tests\n   make[1]: Entering directory '/.../jupiter/tests'\n   make    check-local\n   make[2]: Entering directory '/.../jupiter/tests'\n   /bin/bash './testsuite'\n   ## ----------------------- ##\n   ## Jupiter 1.0 test suite. ##\n   ## ----------------------- ##\n\n   ## ------------- ##\n   ## Test results. ##\n   ## ------------- ##\n\n   0 tests were successful.\n   --snip--\n   $\n```", "```\nAT_CHECK(commands, [status = '0'], [stdout], [stderr], [run-if-fail], [run-if-pass])\nAT_CHECK_UNQUOTED(commands, [status = '0'], [stdout], [stderr], [run-if-fail], [run-if-pass])\n```", "```\nAT_SETUP(test-group-name)\nAT_CLEANUP\n```", "```\nAT_SETUP([jupiter-execution])\nAT_CHECK([../src/jupiter],,[Hello from ../src/.libs/lt-jupiter!])\nAT_CLEANUP\n```", "```\nm4_include([jupiter.at])\n```", "```\n--snip--\nTESTSUITE = $(srcdir)/testsuite\nTESTSOURCES = $(srcdir)/local.at $(srcdir)/testsuite.at \\\n   $(srcdir)/jupiter.at\nAUTOM4TE = $(SHELL) $(top_srcdir)/missing --run autom4te\nAUTOTEST = $(AUTOM4TE) --language=autotest\n--snip--\n```", "```\n$ autoreconf -i\n--snip--\n$ ./configure\n--snip--\n$ make check\n--snip--\n/bin/bash './testsuite'\n## ----------------------- ##\n## Jupiter 1.0 test suite. ##\n## ----------------------- ##\n  1: jupiter-execution                                FAILED (jupiter.at:2)\n\n## ------------- ##\n## Test results. ##\n## ------------- ##\n\nERROR: 1 test was run,\n1 failed unexpectedly.\n## -------------------------- ##\n## testsuite.log was created. ##\n## -------------------------- ##\n\nPlease send `tests/testsuite.log' and all information you think might help:\n\n   To: <jupiter-bugs@example.org>\n   Subject: [Jupiter 1.0] testsuite: 1 failed\n\nYou may investigate any problem if you feel able to do so, in which\ncase the test suite provides a good starting point. Its output may\nbe found below `tests/testsuite.dir'.\n--snip--\n$\n```", "```\n$ cat tests/testsuite.dir/1/testsuite.log\n#                             -*- compilation -*-\n1\\. jupiter.at:1: testing jupiter-execution ...\n./jupiter.at:2: ../src/jupiter ➊\n--- /dev/null     2018-04-21 17:27:23.475548806 -0600 ➋\n+++ /.../jupiter/tests/testsuite.dir/at-groups/1/stderr 2018-06-01 16:08:04.391926296 -0600\n@@ -0,0 +1 @@\n+/.../jupiter/tests/testsuite.dir/at-groups/1/test-source: line 11: ../src/jupiter: ➌\n    No such file or directory\n--- -     2018-06-01 16:08:04.399436755 -0600 ➍\n+++ /.../jupiter/tests/testsuite.dir/at-groups/1/stdout 2018-06-01 16:08:04.395926314 -0600\n@@ -1 +1 @@\n-Hello from ../src/.libs/lt-jupiter!\n+\n./jupiter.at:2: exit code was 127, expected 0 ➎\n1\\. jupiter.at:1: 1\\. jupiter-execution (jupiter.at:1): FAILED (jupiter.at:2)\n$\n```", "```\n@@ -0,0 +1 @@\n```", "```\n+/.../jupiter/tests/testsuite.dir/at-groups/1/test-source: line 11: ../src/jupiter:\n  No such file or directory\n```", "```\n$ ../src/jupiter\nbash: ../src/jupiter: No such file or directory\n$\n```", "```\n$ bash abc.sh\nabc.sh: line 2: ../src/jupiter: No such file or directory\n$\n```", "```\n@@ -1,1 +1,1 @@\n```", "```\nAT_SETUP([jupiter-execution])\nAT_CHECK_UNQUOTED([\"${abs_top_builddir}\"/src/jupiter],,\n                  [Hello from ${abs_top_builddir}/src/.libs/lt-jupiter!\n])\nAT_CLEANUP\n```", "```\n$ make check\n--snip--\n/bin/bash './testsuite'\n## ----------------------- ##\n## Jupiter 1.0 test suite. ##\n## ----------------------- ##\n  1: jupiter-execution                               ok\n\n## ------------- ##\n## Test results. ##\n## ------------- ##\n\n1 test was successful.\n--snip--\n$\n```", "```\n--snip--\n    printf(\"Hello from %s!\\n\", (const char *)data);\n--snip--\n```", "```\nSUBDIRS = modules/hithere\n\nbin_PROGRAMS = jupiter\njupiter_SOURCES = main.c module.h\njupiter_CPPFLAGS = -I$(top_srcdir)/include\njupiter_LDADD = ../libjup/libjupiter.la -dlopen modules/hithere/hithere.la\n```", "```\n#define printf mock_printf\n#include \"print.c\"\n\n#include <stdarg.h>\n#include <string.h>\n\nstatic char printf_buf[512];\n\nint mock_printf(const char * format, ... )\n{\n    int rc;\n    va_list ap;\n    va_start(ap, format);\n    rc = vsnprintf(printf_buf, sizeof printf_buf, format, ap);\n    va_end(ap);\n    return rc;\n}\n\nint main(void)\n{\n    const char *args[] = { \"Hello\", \"test\" };\n    int rc = print_it(args);\n    return rc != 0 || strcmp(printf_buf, \"Hello from test!\\n\") != 0;\n}\n```", "```\nnoinst_LIBRARIES = libjupcommon.la\nlibjupcommon_la_SOURCES = jupcommon.h print.c\n\ncheck_PROGRAMS = test_print\ntest_print_SOURCES = test_print.c\n```", "```\nAT_SETUP([print])\nAT_CHECK([\"${abs_top_builddir}/common/test_print\"])\nAT_CLEANUP\n```", "```\nm4_include([jupiter.at])\nm4_include([print.at])\n```", "```\n--snip--\nTESTSUITE = $(srcdir)/testsuite\nTESTSOURCES = $(srcdir)/local.at $(srcdir)/testsuite.at \\\n  $(srcdir)/jupiter.at $(srcdir)/print.at\nAUTOM4TE = $(SHELL) $(top_srcdir)/missing --run autom4te\nAUTOTEST = $(AUTOM4TE) –language=autotest\n--snip--\n```", "```\n$ autoreconf -i\n--snip--\n$ ./configure\n--snip--\n$ make check\n--snip--\n/bin/bash './testsuite'\n## ----------------------- ##\n## Jupiter 1.0 test suite. ##\n## ----------------------- ##\n  1: jupiter-execution                                                 ok\n  2: print                                                             ok\n\n## ------------- ##\n## Test results. ##\n## ------------- ##\n\nAll 2 tests were successful.\n--snip--\n$\n```", "```\nEXTRA_DIST = testsuite.at local.at jupiter.at print.at \\\n  $(TESTSUITE) atconfig package.m4\n\nTESTSUITE = $(srcdir)/testsuite\nTESTSOURCES = $(srcdir)/local.at $(srcdir)/testsuite.at \\\n  $(srcdir)/jupiter.at $(srcdir)/print.at\n--snip--\n```", "```\n--snip--\ncheck-local: atconfig atlocal $(TESTSUITE)\n        $(SHELL) '$(TESTSUITE)' $(TESTSUITEFLAGS)\n\ninstallcheck-local: atconfig atlocal $(TESTSUITE)\n        $(SHELL) '$(TESTSUITE)' AUTOTEST_PATH='$(DESTDIR)$(bindir)' $(TESTSUITEFLAGS)\n--snip--\n```", "```\nAT_SETUP([jupiter-execution])\n\nset -x\nfind_jupiter()\n{\n jupiter=\"$(type -P jupiter)\"\n    LD_LIBRARY_PATH=\"$(dirname \"${jupiter}\")/../lib\" export LD_LIBRARY_PATH\n    compare=\"${jupiter}\"\n    if test \"x${jupiter}\" == x; then\n      jupiter=\"${abs_top_builddir}/src/jupiter\"\n      compare=\"$(dirname “${jupiter}”)/.libs/lt-jupiter\"\n    fi\n}\n\nfind_jupiter\nAT_CHECK_UNQUOTED([\"${jupiter}\"],,\n                  [Hello from ${compare}!\n])\nAT_CLEANUP\n```", "```\n--snip--\nset -x\nfind_jupiter()\n{\n  if test \"x${AUTOTEST_PATH}\" == \"x${at_testdir}\"; then\n    jupiter=\"${abs_top_builddir}/src/jupiter\"\n    compare=\"$(dirname \"${jupiter}\")/.libs/lt-jupiter\"\n  else\n    jupiter=\"${AUTOTEST_PATH}/jupiter\"\n    LD_LIBRARY_PATH=\"${AUTOTEST_PATH}/../lib\" export LD_LIBRARY_PATH\n    compare=\"${jupiter}\"\n  fi\n}\njupiter=$(find_jupiter)\n--snip--\n```", "```\nAT_INIT\n\nm4_define([FIND_JUPITER], [[set -x\nif test \"x${AUTOTEST_PATH}\" == \"x${at_testdir}\"; then\n  jupiter=\"${abs_top_builddir}/src/jupiter\"\n  compare=\"$(dirname ${jupiter})/.libs/lt-jupiter\"\nelse\n LD_LIBRARY_PATH=\"${AUTOTEST_PATH}/../lib\" export LD_LIBRARY_PATH\n  jupiter=\"${AUTOTEST_PATH}/jupiter\"\n  compare=\"${jupiter}\"\nfi]])\n```", "```\nAT_SETUP([jupiter-execution])\nFIND_JUPITER\nAT_CHECK_UNQUOTED([\"${jupiter}\"],,\n                  [Hello from ${compare}!\n])\nAT_CLEANUP\n```", "```\n   $ make install DESTDIR=$PWD/inst\n   --snip--\n   $ make check TESTSUITEFLAGS=-v\n   --snip--\n   Making check in tests\n   make[1]: Entering directory '/.../jupiter/tests'\n   make    check-local\n   make[2]: Entering directory\n     '/home/jcalcote/dev/book/autotools2e/book/sandbox/tests'\n   /bin/bash './testsuite' -v\n   ## ----------------------- ##\n   ## Jupiter 1.0 test suite. ##\n   ## ----------------------- ##\n   1\\. jupiter.at:1: testing jupiter-execution ...\n   ++ test xtests == xtests\n➊ ++ jupiter=/.../jupiter/src/jupiter\n   +++ dirname /.../jupiter/src/jupiter\n   ++ compare=/.../jupiter/src/.libs/lt-jupiter\n   ++ set +x\n   ./jupiter.at:3: \"${jupiter}\"\n   1\\. jupiter.at:1:    ok\n   --snip--\n   $ make installcheck DESTDIR=$PWD/inst TESTSUITEFLAGS=-v\n   --snip--\n   Making installcheck in tests\n   make[1]: Entering directory '/.../jupiter/tests'\n   /bin/bash './testsuite' AUTOTEST_PATH='/.../jupiter/inst/usr/local/bin' -v\n   ## ----------------------- ##\n   ## Jupiter 1.0 test suite. ##\n   ## ----------------------- ##\n   1\\. jupiter.at:1: testing jupiter-execution ...\n   ++ test x/.../jupiter/inst/usr/local/bin == xtests\n   ++ LD_LIBRARY_PATH=/.../jupiter/inst/usr/local/bin/../lib\n   ++ export LD_LIBRARY_PATH\n➋ ++ jupiter=/.../jupiter/inst/usr/local/bin/jupiter\n   ++ compare=/.../jupiter/inst/usr/local/bin/jupiter\n   ++ set +x\n   ./jupiter.at:3: \"${jupiter}\"\n   1\\. jupiter.at:1:    ok\n   --snip--\n   $\n```", "```\ninstallcheck-local: atconfig atlocal $(TESTSUITE)\n        $(SHELL) '$(TESTSUITE)' AUTOTEST_PATH='$(bindir)' $(TESTSUITEFLAGS)\n\nclean-local:\n        test ! -f '$(TESTSUITE)' || $(SHELL) '$(TESTSUITE)' --clean\n        rm -rf atconfig\n\natconfig: $(top_builddir)/config.status\n        cd $(top_builddir) && $(SHELL) ./config.status tests/$@\n```", "```\nAT_INIT\nAT_COLOR_TESTS\n\nm4_define([FIND_JUPITER], [set -x\nif test \"x${AUTOTEST_PATH}\" == \"x${at_testdir}\"; then\n--snip--\n```", "```\nERROR: All 2 tests were run,\n1 failed unexpectedly.\n```"]