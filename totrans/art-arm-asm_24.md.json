["```\n$ bash\n```", "```\n`commandName optionalCommandLineArguments optionalRedirection`\n```", "```\nbash --help\n```", "```\nbash script\n```", "```\n`command` \"`filename with spaces`\"\n```", "```\n`command` \"`argument containing` \\\"`quotes`\\\"\"\n```", "```\n`command` <`InputFile`\n```", "```\n`command` >`OutputFile`\n```", "```\n`command` >>`OutputFile`\n```", "```\n`command` 2>`ErrorOutput`\n```", "```\n`command` 1>`OutputFile`\n```", "```\n`command1` `OptionalCommand1Arguments` | `command2` `OptionalCommand2Arguments`\n```", "```\n./Listing1-5\n```", "```\nman `CommandName`\n```", "```\nman man\n```", "```\ncd `DirectoryPath`\n```", "```\ncd ~\n```", "```\nls -a\n```", "```\n$ ls -l\ntotal 3256\n-rw-r--r--@ 1 rhyde  staff   168089 Dec 29  20`xx` encoder.pdf\n-rw-r--r--@ 1 rhyde  staff  1492096 Dec 27  20`xx` mcp23017.png\n```", "```\nfile `pathname`\n```", "```\ncat `pathname`\n```", "```\nmore `pathname`\nless `pathname`\n```", "```\ntail `pathname`\n```", "```\ntail -n 20 x.txt\n```", "```\nmv `SourcePath DestinationPath`\n```", "```\nmv `OldName NewName`\n```", "```\ncp `SourcePath DestinationPath`\n```", "```\nrm `pathname`\n```", "```\nrm -R `DirectoryPath`\n```", "```\nrm -R `DirectoryPath/*`\n```", "```\nrm -R *\n```", "```\nmkdir `DirectoryPath`\n```", "```\necho hello, world!\n```", "```\nchmod `options pathname`\n```", "```\nlist=ls\n```", "```\n$list\n```", "```\nls\n```", "```\nexport `variable name`=`value`\n```", "```\nvalue1=\"`Value containing delimiters (spaces)`\"\nvalue2='`Another value with delimiters`'\n```", "```\naVariable=\"`Some text`\"\nvalue3=\"aVariable=$aVariable\"\nvalue4='aVariable=$aVariable'\necho $value3\necho $value4\n```", "```\naVariable=Some Text\naVariable=$aVariable\n```", "```\ndirListing=$(ls)\n```", "```\ncd $HOME/Pictures\nls\n```", "```\nbash lsPix\n```", "```\nchmod 755 lsPix\n```", "```\n#! /bin/bash\n```", "```\n./lsPix\n```", "```\n#!/bin/bash\n#\n# build\n#\n# Automatically builds an Art of ARM Assembly\n# example program from the command line.\n#\n# Usage:\n#\n#   build {options} fileName\n#\n# (no suffix on the filename.)\n#\n# options:\n#\n#   -c: Assemble .S file to object code only.\n#   -pie: On Linux, generate a PIE executable.\nfileName=\"\"\ncompileOnly=\" \"\npie=\"-no-pie\"\ncFile=\"c.cpp\"\nlib=\" \"\n```", "```\n❶ while [[$# -gt 0]]\ndo\n    key=\"$1\"\n    case $key in\n        -c)\n        compileOnly='-c'\n      ❷ shift\n        ;;\n        -pie)\n        pie='-pie'\n        shift\n        ;;\n        -math)\n        math='-lm'\n        shift\n        ;;\n        *)\n        fileName=\"$1\"\n        shift\n        ;;\n    esac\ndone\n```", "```\n# If -c option was provided, assemble only the .S\n# file and produce a .o output file.\n#\n# If -c not specified, compile both c.cpp and the .S\n# file and produce an executable:\nif [\"$compileOnly\" = '-c']; then\n    objectFile=\"-o $fileName\".o\n    cFile=\" \"\nelse\n    objectFile=\"-o $fileName\"\nfi\n```", "```\n# If the executable already exists, delete it:\nif test -e \"$fileName\"; then\n    rm \"$fileName\"\nfi\n# If the object file already exists, delete it:\nif test -e \"$fileName\".o; then\n    rm \"$fileName\".o\nfi\n```", "```\n# Determine what OS you're running under (Linux or Darwin [macOS]) and\n# issue the appropriate GCC command to compile/assemble the files:\nunamestr=$(uname)\n```", "```\nif [\"$unamestr\" = 'Linux']; then\n    gcc -D isLinux=1 $pie $compileOnly $objectFile  $cFile $fileName.S $math\nelif [\"$unamestr\" = 'Darwin']; then\n    gcc -D isMacOS=1  $compileOnly $objectFile $cFile  $fileName.S -lSystem $math\nfi\n```", "```\n*)\n    if[fileName = \"\"]\n    then\n        objectFile = \"$1\"\n    fi\n    fileName=\"$filename $1.S\"\n    shift\n    ;;\n```", "```\nif [\"$compileOnly\" = '-c']; then\ncFile=\" \"\nelse\n    objectFile=\"-o $fileName\"\nfi\n```", "```\nif [\"$unamestr\" = 'Linux']; then\n    gcc -D isLinux=1 $pie $compileOnly $objectFile  $cFile $fileName $math\nelif [\"$unamestr\" = 'Darwin']; then\n    gcc -D isMacOS=1  $compileOnly $objectFile $cFile  $fileName -lSystem $math\nfi\n```"]