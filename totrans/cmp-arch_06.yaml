- en: '**4**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**SWITCHES**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Image](../images/f0093-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Switching* one signal on and off in response to the state of another signal
    is a fundamental ingredient of computation. It’s what separates a limited machine
    like the Jacquard loom from a general-purpose machine such as Babbage’s Analytical
    Engine. Whereas the Jacquard loom can only ever perform a predetermined sequence
    of operations and can’t change that sequence in response to what’s happening,
    the Analytical Engine has instructions that can evaluate the state of a register
    and jump around the program in response to that evaluation. Switching makes this
    possible.'
  prefs: []
  type: TYPE_NORMAL
- en: From basic switches, we can build more sophisticated devices like logic gates,
    simple machines, and CPUs. As we saw in [Chapter 1](ch01.xhtml), the main type
    of switch used in today’s computers is the transistor. Transistors work through
    a mixture of fundamental physics ideas around directionality and specific implementation
    of those ideas that hinge on the properties of substances like silicon. If we
    jump straight to discussing transistors, however, these two threads can be hard
    to separate.
  prefs: []
  type: TYPE_NORMAL
- en: 'Accordingly, in this chapter we’ll first consider the fundamental physics ideas
    in a simpler directional system: water flowing through a pipe. We’ll see how a
    valve can start and stop the flow of water, then transfer what we’ve learned to
    electrical diodes made with vacuum tubes and semiconductors. We’ll then build
    more complex switches, starting again with a water analogy and applying it to
    the transistors found on modern silicon. Finally, we’ll explore how modern silicon
    chips are fabricated, so that you can understand computers right down to the grains
    of sand they’re made from.'
  prefs: []
  type: TYPE_NORMAL
- en: Directional Systems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A switch is a directional system: it takes an input and does something, causing
    an output. This feels fairly intuitive, but in physics you can take any equation
    describing a physical system, invert the direction of time, and it will still
    work. So why is it that when we drop a glass, its atoms don’t usually jump back
    up into place to form a new glass? The answer is *entropy*, or the organization
    of energy; the chemical and potential energy in the glass dissipates into the
    atmosphere as a tiny amount of heat. There actually *is* a small chance the glass
    would reconstitute itself, but energy is much more likely to spread out as heat
    than to concentrate into organized structures. At the start of the Big Bang, all
    the energy in the universe was in one very organized place, and ever since then
    it’s been spreading out more and becoming less organized.'
  prefs: []
  type: TYPE_NORMAL
- en: It’s entropy that enables us to experience the direction of time and the feeling
    of causation. The past was more organized than the future, so it’s easier for
    our brains to store information about the past than about the future. Because
    we have memory of the past, we can link it to what we see in the present and describe
    past events as causing present ones.
  prefs: []
  type: TYPE_NORMAL
- en: Entropy also enables us to build machines, including computers, in which we
    experience being able to cause sequences of events to occur in a given direction.
    To give the machine a very high probability of running in a given direction, rather
    than randomly switching between running backward and forward, we create it in
    a highly organized energy state, and set up the desired sequence of states so
    that each step uses up some of the organized energy and gives it off as heat.
    This is why computers have to use up energy organization and emit heat—to make
    their programs run in the right direction over time.
  prefs: []
  type: TYPE_NORMAL
- en: '*Water Valve*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A water valve found in everyday plumbing is a simple example of a directional
    system. For instance, there’s typically a valve positioned in the pipe that feeds
    water from the local supply into your home. It ensures that the water can travel
    only *into* your home through the pipe, and not *out* of your home. This prevents
    you from, for example, poisoning the rest of your street by pouring chemicals
    down your drain. The way this water valve works is shown in [Figure 4-1](ch04.xhtml#ch04fig1).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0095-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-1: A one-way water valve. When the water flow is forward-biased (left),
    it pushes open the valve and passes through. When reverse-biased (right), the
    water pushes the valve into the block, sealing it shut so nothing can flow.*'
  prefs: []
  type: TYPE_NORMAL
- en: Here, a gate mounted on a hinge is free to swing to the right, but it can’t
    swing to the left because its movement in this direction is blocked. If water
    pressure is applied from right to left, it simply pushes the gate shut even more
    firmly, so nothing can flow. We’ll call this flow direction *reverse-bias*. When
    pressure is applied from left to right, it pushes open the gate and allows current
    to flow. We’ll call this flow direction *forward-bias*.
  prefs: []
  type: TYPE_NORMAL
- en: The valve isn’t as simple as it first appears. Imagine the water is made of
    individual mass particles, pushing their way through. As a particle strikes the
    gate, some kinetic energy is transferred from the particle to the gate. After
    the particle passes through, the gate still has this energy. In the absence of
    any damping, the gate will bounce off the top of the pipe, then off the blocker
    on the bottom, and it will keep oscillating open and closed forever. A more realistic
    model includes damping, where the gate may begin to oscillate but its kinetic
    energy is quickly absorbed by the block and emitted out of the system as lost
    heat. A system must emit heat as the price for being one-way.
  prefs: []
  type: TYPE_NORMAL
- en: Meanwhile, the particle that passed through lost some of its velocity when it
    transferred energy to the gate. Because the output particles have less energy
    than the input particles, we’ll need to do work on them to add some energy back
    if we want to use them as input to a second valve with the same physics. Adding
    this energy compensates for the heat lost.
  prefs: []
  type: TYPE_NORMAL
- en: You could make current flow in the reverse-bias direction if you *really* work
    hard to push it. You’d need to push hard enough to smash the block. This would
    likely make a loud bang and permanently destroy the device. We’ll see similar
    behaviors in electrical analogs of the water valve, which we turn to next.
  prefs: []
  type: TYPE_NORMAL
- en: '*Heat Diode*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A *diode* is any electrical system that enables current to flow in one, forward-bias
    direction and not (easily) in the other, reverse-bias direction. The first diodes
    were vacuum tube heat diodes, built in the electromechanical (“diesel”) age; they’re
    easier to understand than modern ones, so we’ll start there.
  prefs: []
  type: TYPE_NORMAL
- en: 'A vacuum tube diode ([Figure 4-2](ch04.xhtml#ch04fig2)) looks a bit like an
    old-fashioned filament light bulb. Two external wires connect to the components:
    the *cathode* (something that emits electrons) and the *anode* (something that
    absorbs electrons). Here, the cathode is a metal core and the anode is a cylindrical
    wrapper around it, separated from it by a vacuum. The cathode is heated up by
    an external energy source.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0096-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-2: A vacuum tube diode*'
  prefs: []
  type: TYPE_NORMAL
- en: When a voltage is applied in the forward-bias direction, electrons flow into
    the cathode from outside. They are heated up by the heater, which gives them enough
    energy to fly out of the metal cathode and across the vacuum to be picked up by
    the anode. This is current flowing across the diode.
  prefs: []
  type: TYPE_NORMAL
- en: When a voltage is applied in the reverse-bias direction, electrons arrive at
    the anode from outside, but they don’t have enough energy to fly out of the metal
    and across the vacuum because the anode isn’t heated. Current doesn’t flow in
    this direction.
  prefs: []
  type: TYPE_NORMAL
- en: To create the directionality in this system, we have to do work on it by inserting
    energy in the form of heat. This heat energy is then dissipated into the outside
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: You could make current flow through the vacuum tube in the reverse-bias direction
    if you *really* work hard to push it. You would need a very high voltage to persuade
    electrons to jump off the anode. This is likely to make a loud bang and permanently
    destroy the device.
  prefs: []
  type: TYPE_NORMAL
- en: '*p-n Junction Diode*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Most diodes used today aren’t vacuum tubes, but are instead formed from *p-n
    junctions* on silicon, where *p* and *n* stand for positive and negative charge
    regions, respectively. To understand how p-n junctions work, we’ll need a quick
    crash course on semiconductor chemistry and physics.
  prefs: []
  type: TYPE_NORMAL
- en: '**A Semiconductor Crash Course**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Basic electronics divides materials into *insulators*, which don’t conduct electricity,
    and *conductors*, which do. *Semiconductors* are materials that in their normal
    states are insulators, but that can be coaxed into becoming conductors through
    a very small change. *Silicon (Si)*, element 14 of the periodic table, is a semiconductor.
    You can see a representation of a silicon atom in [Figure 4-3](ch04.xhtml#ch04fig3).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0097-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-3: A silicon (Si) atom has 14 electrons, 4 of which are visible and
    available for interactions in the outer shell.*'
  prefs: []
  type: TYPE_NORMAL
- en: A silicon atom has 14 positive protons and 14 negative electrons. The electrons
    come in three concentric shells. The innermost is a full shell of two electrons,
    the middle is a full shell of eight, and the outermost is a half-full shell, having
    four of eight electrons.
  prefs: []
  type: TYPE_NORMAL
- en: Quantum mechanics (a topic beyond the scope of this book) shows that atoms are
    in a low-energy state when their outermost shell is full. Informally, low-energy
    states are called *happy* and high-energy states *unhappy*. This anthropomorphism
    reflects the appearance of physical systems to “want” to move from unhappy to
    happy states. The “wanting” is a consequence of statistical physics, which shows
    that there are more ways to be happy than unhappy, so the system is more likely
    to find its way into a happy state.
  prefs: []
  type: TYPE_NORMAL
- en: Happy states are highly probable because moving into them is a directional system.
    When electrons move from an unhappy to a happy energy state, they give off the
    excess energy as a photon, usually lost as heat. To get the electron back to the
    high-energy state, you would need to find a similar or higher-energy photon and
    shoot it back at the atom, which is unlikely unless you work to make it happen.
    These probabilities function as a chemical force acting on the electrons, pushing
    them into configurations that have full outer shells.
  prefs: []
  type: TYPE_NORMAL
- en: The happiest state for a set of silicon atoms is thus for them to share electrons
    in their outer shells via covalent bonds. Each atom bonds to four neighbors by
    sharing an electron pair, ostensibly giving each atom a full outer shell of eight
    electrons. This can be drawn in 2D as a regular square grid of atoms, as in [Figure
    4-4](ch04.xhtml#ch04fig4).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0097-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-4: Silicon atoms form a crystal lattice, sharing electrons to fill
    their outer shells with eight electrons.*'
  prefs: []
  type: TYPE_NORMAL
- en: In the real, 3D world, however, the structure is tetrahedral, with the four
    neighbors positioned in different 3D directions, as in [Figure 4-5](ch04.xhtml#ch04fig5).
    This structure is called a *crystal lattice*, and it’s very strong and stable.
    (For carbon, the crystal form is called diamond. Silicon crystal has some similar
    properties, but it’s easier to work with and substantially cheaper to obtain.)
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0098-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-5: The silicon lattice is really 3D and tetrahedral.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Silicon crystal doesn’t conduct because all the electrons are happy to be where
    they are and don’t need to move around to lower their energy. However, we can
    make a silicon crystal conduct, like a metal, by adding just a very small number
    of different atoms into its lattice. This process is called *doping*. Consider
    doping with either of silicon’s neighbors on the periodic table: aluminum (Al),
    element 13, having three electrons in its outer shell, and phosphorus (P), element
    15, having five electrons in its outer shell. Doping with aluminum gives rise
    to a net shortage of electrons in the crystal, called *p-doping* (*p* for positive).
    Phosphorus gives rise to a net surplus of electrons in the crystal, called *n-doping*
    (*n* for negative). The doped crystals are still electrically neutral: they contain
    equal numbers of protons and electrons. The shortage and surplus have to do only
    with the chemical state of the atoms wanting to have full outer shells.'
  prefs: []
  type: TYPE_NORMAL
- en: In p-doping, some atoms will have “holes” in their outer shells where electrons
    are missing. In n-doping, some will have excess electrons that result in a fourth
    non-full shell appearing with only one electron in it (on top of the three full
    inner shells with two, eight, and eight electrons). Both types of doped silicon
    behave as metals. In n-doped silicon the excess electrons aren’t tightly bound
    into the stable structure, and circulate freely between different atoms. This
    means they can flow through the crystal, and that it has become a conductor. Similarly,
    holes may circulate through p-doped silicon, making it into a conductor. This
    works even if the number of doping atoms is tiny compared to the number of silicon
    atoms.
  prefs: []
  type: TYPE_NORMAL
- en: '**How a p-n Junction Works**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A p-n junction consists of a p-doped and an n-doped region next to one another,
    as in [Figure 4-6](ch04.xhtml#ch04fig6).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0099-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-6: A p-n junction in a high-energy state, made by doping two regions
    of silicon*'
  prefs: []
  type: TYPE_NORMAL
- en: Here we see the surplus electrons around the phosphorous atoms (element 15)
    in the n region and the shortage of electrons around the aluminum atoms (element
    13) in the p region. In this state, both regions are conductors, as they have
    either free electrons or holes, so current can flow across the junction.
  prefs: []
  type: TYPE_NORMAL
- en: When the junction is created, there’s no effect on the parts of the crystals
    that are far from the boundary where they touch. But in the region close to the
    boundary—called the *depletion zone*—something interesting happens almost instantly.
    In this zone, the excess electrons on the n-doped side experience a chemical force
    that attracts them across the boundary to complete the outer shells on the p-doped
    side, as in [Figure 4-7](ch04.xhtml#ch04fig7).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0099-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-7: A p-n junction in a low-energy state, when electrons cross near
    the junction, giving off energy in the process*'
  prefs: []
  type: TYPE_NORMAL
- en: 'This chemical force is strong enough to overcome some of the electrical force,
    which usually keeps the electrons close to the protons to which they were originally
    matched. The chemical and electrical forces balance each other out at a point
    where the electrons cross only in the depletion zone. (If they crossed any further,
    the electrical forces would become stronger than the chemical ones and push the
    electrons back again.) The chemical force is strong enough to produce a stable,
    low-energy state in which the atoms in the depletion zone have full outer shells.
    The atoms are also ionized, since they have differing numbers of protons and electrons:
    there’s a net positive charge in the n region and a net negative charge in the
    p region. Since this is a lower-energy state than the starting state, photons
    are emitted and lost in the form of heat as the electrons enter their new positions.
    And because all the atoms in the depletion region have full outer shells, the
    region acts as an insulator (like pure silicon), so current can’t flow across
    the junction.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The p-n junction functions like the water valve: in its high-energy state it’s
    like an open valve, enabling current to flow; in its low-energy state it’s like
    a closed valve, preventing current from flowing. Like the water currents pushing
    open the valve and lifting it against gravity, an electrical current flowing in
    the forward-bias does some work, adding energy back into the system and pushing
    it into its open, high-energy state. And like the water currents in reverse-bias
    pushing the valve firmly closed, an electrical current in reverse-bias pushes
    the system into the low-energy state, which doesn’t conduct. This works as follows.'
  prefs: []
  type: TYPE_NORMAL
- en: In forward-bias, extra electrons are pumped from outside into the n region.
    The depleted part of the n region is only *mildly unhappy* to receive them because
    they can bind to the shells of the element 15 ions, whose electrons were previously
    lost to the p region. They stop being ions and go back to being regular atoms.
    They’re unhappy to not have a full outer shell now that a new electron has started
    a new shell, but this is almost compensated for by their becoming electrically
    neutral. As such, only a bit of work is needed to overcome this mild unhappiness
    and shove the electrons in.
  prefs: []
  type: TYPE_NORMAL
- en: Something similar happens in the p region as electrons are pulled out by the
    forward-bias; it’s mildly unhappy because it loses its full shells, but it gains
    electric neutrality, which almost—but not quite—counters that loss.
  prefs: []
  type: TYPE_NORMAL
- en: To summarize, electrons have entered the n region and exited the p region, which
    means they’ve effectively flowed from the n side to the p side as current. We
    have now also returned the system to its original high-energy, conducting state,
    as in [Figure 4-6](ch04.xhtml#ch04fig6), because we’re back to having the original
    numbers of electrons on each side. We had to do some small work to overcome the
    atoms’ unhappiness about being changed, and this work is equal to the photons
    that were lost as heat when we moved from the high- to low-energy state. Almost
    immediately after this has happened, the system will fall back to the low-energy
    state again, emitting new photons as heat as it does so. We’ll need to continue
    to do work on the system to force further batches of electrons through it, and
    see that work come out as photon heat.
  prefs: []
  type: TYPE_NORMAL
- en: In reverse-bias, we try to pump electrons from outside into the p region side.
    In this case, the atoms in the p region depletion zone very strongly don’t want
    the electrons. They aren’t just mildly unhappy, but *very* unhappy to take them,
    because doing so would both spoil their full outer shells and also double-ionize
    them into 13^(2–) ions. So the incoming electrons don’t go there. Instead, the
    *undepleted* part of the p region will take them, because this area contains element
    13 atoms that are happy to be ionized into 13^– ions because this fills their
    outer shells. The effect of this is that the new electrons that arrive act to
    enlarge the depletion zone, as each newly ionized atom stops conducting because
    it has a full shell. This makes the p region even less conductive, the analog
    of the reverse-bias water current pressing on the valve to slam it shut even harder.
  prefs: []
  type: TYPE_NORMAL
- en: Something similar happens on the n side as we try to pump electrons out of this
    region. Here, the 15^+ ions *really* don’t want to give up electrons, as this
    would both destroy their nice full outer shells and also make them into more strongly
    charged 15^(2+) ions. So instead we end up pulling electrons out of the undepleted
    part of the N region. This makes the 15 atoms happy to have full shells, but turns
    them into insulators and again makes the depletion zone larger.
  prefs: []
  type: TYPE_NORMAL
- en: It’s possible to force electrons to enter these very unhappy states and then
    to cross the junction in reverse-bias, but only if very large forces are applied
    to them. The system will resist the forces for a long time, entering a very high-energy
    state, then eventually break down, releasing all of that energy as the electrons
    cross. This is likely to make a loud bang and permanently destroy the device.
  prefs: []
  type: TYPE_NORMAL
- en: In a *light-emitting diode (LED)*, the photons emitted when electrons cross
    the junction and fall into lower-energy states have frequencies that are visible
    as light. Here it’s especially clear that you have to do a small amount of work
    on the system by putting power in, in order to get the electrons to cross the
    junction and emit the photons. You may also see a larger emission of light and
    possibly sound and smoke if you try to force electricity backward through your
    LED.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0101-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-8: The diode symbol*'
  prefs: []
  type: TYPE_NORMAL
- en: Note that in this discussion we’ve deliberately considered the “flow of electrons”
    rather than “electric current,” to make it as simple as possible to follow the
    analogy of the flow of water. Due to a very unfortunate historical accident, “electric
    current” was defined as the *negation* of the “flow of electrons,” and is said
    to flow from anode to cathode rather than from cathode to anode. This is reflected
    in the diode symbol ([Figure 4-8](ch04.xhtml#ch04fig8)), where the arrow shows
    the direction in which current—not electrons—can flow. The bar at the tip of the
    arrow suggests that current flow in the opposite direction is blocked. Swapping
    the entrenched definition of current to reflect the flow of electrons would be
    about as hard as getting everyone in the UK to drive on the more sensible right
    side of the road.
  prefs: []
  type: TYPE_NORMAL
- en: Switching
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Directional systems are the building block for our next level of architectural
    structure: switches. A switch allows us to turn a flow on and off automatically
    using another flow. Once again, we’ll consider this general principle with a simple
    water example before transferring it to electronics.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Water Current Switch*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Consider two water valves placed in sequence, with both of their blocks replaced
    by a spring-loaded moving platform, as in [Figure 4-9](ch04.xhtml#ch04fig9).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0102-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-9: A water pressure switch*'
  prefs: []
  type: TYPE_NORMAL
- en: When the platform is up, the left valve can’t open to the right, nor can the
    right valve open to the left, so water can’t flow in either direction. We’ll call
    the region between the two valves the *base*, the water pipe entering from the
    left the *emitter*, and the water pipe exiting on the right the *collector*.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we were to connect a small additional pipe to the base (as shown in [Figure
    4-9](ch04.xhtml#ch04fig9)), we could then force a current of water through this
    pipe and into the base. This would push down the spring-loaded platform, allowing
    both valves to open, which in turn would allow water to flow in either direction
    along the main pipe. This creates a switch: by turning the current in the small
    pipe connected to the base on and off, we can control when current can flow along
    the main pipe.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the energy used in this system. We have to put energy into our switching
    current, which must come out somewhere. In this case, energy has gone into the
    spring, and when we stop piping water into the base this spring will bounce back
    up and give off heat as it damps down. Also note that the water we’ve piped into
    the base has to go somewhere: it joins the main water current from the emitter
    pipe and leaves through the collector pipe.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Electrical Tube Switch*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As the water switch extends the water valve, electrical tube switches extend
    electrical heat diodes by using one electrical current to control the flow of
    another electrical current. This works by inserting a metal grid in the middle
    of the vacuum between the cathode and anode in the heat diode, as shown in [Figure
    4-10](ch04.xhtml#ch04fig10).
  prefs: []
  type: TYPE_NORMAL
- en: Like the heat diode, the tube switch also looks like a filament light bulb.
    The added metal grid is connected to a third “base” wire. If you push electrons
    down this wire into the grid, they make the grid negatively charged. This prevents
    other electrons from jumping from the cathode to the anode, as negative charge
    repels negative charge. If you release the electrons from the base, then the tube
    behaves exactly as a heat diode and enables current to flow from the cathode to
    the anode.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0103-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-10: A vacuum tube switch*'
  prefs: []
  type: TYPE_NORMAL
- en: Electrical tube switches are confusingly known as *valves* in some contexts,
    though they’re analogous to water switches rather than to water valves. These
    are the switches used in early electrical computers such as ENIAC. They aren’t
    ideal for practical computing, however, because they require vacuums inside highly
    breakable glass bulbs, and also require messing around with heat, which can make
    them overheat and explode; as you can imagine, they need to be replaced frequently.
    Electrical tube switches are found in tube amps (or valve amps) for electric guitars,
    where they’re used for their analog qualities rather than the digital ones relevant
    to computing. (So you could build a computer out of old Marshall amp tubes—a nice
    project!)
  prefs: []
  type: TYPE_NORMAL
- en: '*p-n-p Transistor*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The *p-n-p transistor* is a better way to make electrical switches; it avoids
    many of the practical problems of vacuum tubes. Its design is based on the p-n
    junction diode. As the water current switch can be viewed as two mirror-image
    water valves stuck together with a base pipe attached to their center region,
    a p-n-p transistor can be viewed as two mirror-image p-n diodes stuck together
    to form a p-n-p sequence, with a base wire attached to the central n region. The
    transistor is shown in its high-energy state in [Figure 4-11](ch04.xhtml#ch04fig11).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0103-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-11: A p-n-p transistor in its high-energy state*'
  prefs: []
  type: TYPE_NORMAL
- en: The two junctions between p and n regions are analogous to the valve gates in
    the water switch. A switching electrical wire into the base (n) region between
    the boundaries is analogous to the switching water pipe into the base region between
    the water valves. The wire containing current entering from the left is the emitter,
    and the wire carrying it out on the right is the collector.
  prefs: []
  type: TYPE_NORMAL
- en: As water injected into the water valves’ base region pushes open the two valves,
    electrons injected into the base region open up both p-n junctions. The work done
    to push them into the base lifts the system into its higher-energy, conducting
    state, enabling electrons to flow across the transistor from the emitter to the
    collector. The transistor thus acts as an electrical switch, with the electrons
    pumped into the base switching on the flow of electrons from the emitter to the
    collector.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Like vacuum tubes, transistors have analog properties that can be used in
    audio amplifiers, such as transistor radios and more modern guitar amps. As with
    vacuum tubes, we’re interested only in their digital qualities here.*'
  prefs: []
  type: TYPE_NORMAL
- en: As with the water switch, there’s a cost to this process. It requires energy
    to inject current into the base and kick both junctions into their high-energy,
    conducting states. This energy is later given off as photons (heat) when both
    diodes fall back into their low-energy states, shown in [Figure 4-12](ch04.xhtml#ch04fig12).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0104-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-12: A p-n-p transistor in its low-energy state*'
  prefs: []
  type: TYPE_NORMAL
- en: Like the water switch, the injected base current also has to go somewhere, and
    its electrons flow out of the collector along with the main current from the emitter.
  prefs: []
  type: TYPE_NORMAL
- en: The standard symbol for a transistor, with E, C, and B meaning emitter, collector,
    and base, respectively, is shown in [Figure 4-13](ch04.xhtml#ch04fig13).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0104-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-13: The p-n-p transistor symbol*'
  prefs: []
  type: TYPE_NORMAL
- en: As with diodes, we’ve discussed transistors in terms of the “flow of electrons”
    rather than “electric current,” to preserve the water analogy. In fact, electric
    current flows from collector to emitter in our p-n-p transistor, whereas the electrons
    flow the other way around.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*It’s also possible to make n-p-n transistors that use the regions the other
    way around—that is, they work by pulling electrons out of the base to open the
    gates. Again, in this case, electrical current is said to flow into the base region
    to open the n-p-n transistor.*'
  prefs: []
  type: TYPE_NORMAL
- en: Early silicon chips used p-n-p transistors, but they’re inefficient because
    of the loss of electrons from the base into the collector. Modern chips use a
    modified device, a field-effect transistor, to improve this. We’ll again introduce
    this idea using its water analogy, then translate it to semiconductors.
  prefs: []
  type: TYPE_NORMAL
- en: '*Water Pressure Effect Switch*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In the water switch, water from the base is lost to the collector because it’s
    pushed into the switch and joins the main flow of water from the emitter. We can
    address this inefficiency by covering the end of the base pipe with a rubber membrane
    where it joins the base region, as in [Figure 4-14](ch04.xhtml#ch04fig14).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0105-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-14: A water pressure switch*'
  prefs: []
  type: TYPE_NORMAL
- en: The rubber can stretch, but it doesn’t allow water to flow through it. When
    work is done to pump water into the base pipe, the pressure created will stretch
    the membrane so it expands into the base region. This will displace the water
    in the base region and force it through both valves, again enabling a main water
    current to flow from the emitter to the collector. When the pressure on the base
    is released, the membrane will shrink back, releasing the pressure on the valves
    so they close and turn off the main water current.
  prefs: []
  type: TYPE_NORMAL
- en: The advantage of adding the membrane is that the water pumped into the base
    is no longer lost to the collector. No water leaves the base. The water in the
    base acts only to temporarily apply pressure on the valves. Less moving stuff
    means that less energy is wasted, so the system can run smoother and faster.
  prefs: []
  type: TYPE_NORMAL
- en: Work is needed to push water into the base. This is converted into potential
    energy to lift up the valves against gravity. Then it’s lost as heat as the valves
    close, bounce around, and damp down.
  prefs: []
  type: TYPE_NORMAL
- en: '*Field-Effect Transistors*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Field-effect transistors (FETs)* are the exact analog of water pressure switches,
    as p-n-p transistors are to water current switches. The FET improves on the p-n-p
    transistor by covering the end of the base wire with an electrical insulator (such
    as silicon oxide, SiO[2]) where it joins the n region, as in [Figure 4-15](ch04.xhtml#ch04fig15).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0106-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-15: A FET transistor in its low-energy state*'
  prefs: []
  type: TYPE_NORMAL
- en: The insulator allows an electrical *field* to transmit through it, but it doesn’t
    allow electrons to flow through it. This means an electron on one side can push
    away an electron on the other side, without the electron itself crossing over.
    When work is done to push electrons into the base wire, the negative charge accumulated
    in the base will push away electrons in the n region, forcing them through both
    p-n junctions, again enabling a main electron flow from the emitter to the collector.
    When the voltage on the base is released, the electrical field across the insulator
    will shrink back, releasing the voltage on the p-n junctions so they close and
    turn off the main electron flow.
  prefs: []
  type: TYPE_NORMAL
- en: The advantage of adding the insulator is that the electrons pumped into the
    base are no longer lost to the collector. No electrons leave the base. The electrons
    in the base act only to temporarily apply voltage rather than electron flow on
    the p-n junctions. Less moving stuff means that less energy is wasted and that
    the system can run smoother and faster.
  prefs: []
  type: TYPE_NORMAL
- en: Work is needed to push electrons into the base. This is converted into potential
    energy to raise the p-n junctions from their low- to high-energy states. Then
    it’s lost as heat as the junctions fall back to their low-energy states, giving
    off photons.
  prefs: []
  type: TYPE_NORMAL
- en: '*Clocks*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Often we want to automatically switch a signal on and off regularly over time.
    Such a signal is called a *clock*, and it can take the form of a binary input
    that oscillates in a square wave over time, as in [Figure 4-16](ch04.xhtml#ch04fig16).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0107-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-16: A square wave clock*'
  prefs: []
  type: TYPE_NORMAL
- en: Fast electrical clocks can be made from materials having *piezoelectric* properties,
    meaning that they mechanically oscillate in response to a voltage placed across
    them. These oscillations in turn change the material’s electrical resistance and
    create an oscillating voltage as a result. Quartz crystals and some ceramics have
    this property, with oscillations in the megahertz (MHz) to gigahertz (GHz) range
    depending on their exact structure and the voltage applied to them. These can
    be made into clock units by adding hardware to apply the required voltage across
    them and to rectify their signals into the square waves needed for clock signals.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll depend on clocks to drive the “sequential logic” structures in [Chapter
    6](ch06.xhtml). These are structures whose state can update at regular time intervals.
    Sequential logic structures, in turn, form subcomponents of CPUs. Physical clocks
    are thus very important to computation and can be found on motherboards in modern
    electrical computers, as [Figure 4-17](ch04.xhtml#ch04fig17) shows.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0107-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-17: A quartz crystal oscillator*'
  prefs: []
  type: TYPE_NORMAL
- en: These clocks can be bought for a few dollars on eBay to mount on a breadboard
    in your own projects (search for terms like “quartz crystal oscillator”).
  prefs: []
  type: TYPE_NORMAL
- en: Fabricating Transistors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Modern integrated circuits use FET transistors, created on silicon chips. A
    “chip” of silicon is a small, very thin slice, much like a potato chip (known
    as a “crisp” in the UK). Silicon is an abundant element that can be obtained as
    sand from the beach. Once purified, it can be formed into sausage-shaped lumps
    called ingots. Ingots are sliced like salami into large, very thin slices called
    wafers. Each wafer is later cut into many small, thin, square chips.
  prefs: []
  type: TYPE_NORMAL
- en: The process of creating transistors and wires and connecting them together on
    wafers is called *fabrication*. A wafer presents a two-dimensional surface on
    which transistors are laid out. Tiny metal wires are added to connect them together.
  prefs: []
  type: TYPE_NORMAL
- en: The same masking concept used for printing T-shirts and PCBs that we discussed
    in the introduction is used, albeit in miniature, to fabricate *application-specific
    integrated circuit (ASIC)* silicon chips. Unlike with PCBs, the components themselves—transistors—are
    fabricated along with the wiring. You design circuit layouts in a CAD program,
    using a fixed number of doping chemicals to form the different regions of each
    transistor, and copper to form wires connecting the transistors. You then print
    out one binary image for each chemical, onto a transparency, to show where its
    atoms will go onto the 2D silicon surface. This transparency is used to create
    a physical mask, which allows particles to pass through in the desired areas and
    blocks them in undesired areas.
  prefs: []
  type: TYPE_NORMAL
- en: You lay your mask on top of a blank wafer of silicon and pour atoms all over
    it. The atoms will pass through onto the wafer only in the allowed areas of your
    design. You allow this chemical layer to dry, and repeat the whole process for
    each chemical to build up the design. Usually the transistors are laid down first
    via masks that create the doped regions in the silicon surface itself. Further
    masks are used to build up metal wires connecting the transistors above the silicon
    surface. [Figure 4-18](ch04.xhtml#ch04fig18) shows a single FET transistor and
    its wires formed on a silicon chip.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0108-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-18: A single n-p-n FET transistor formed on a chip, shown as a cross
    section of the silicon surface, with chemical layers made in and on the surface*'
  prefs: []
  type: TYPE_NORMAL
- en: Fabrication is difficult and expensive. Rather than just “pouring” atoms onto
    the mask, they need more energy to smash their way into the silicon lattice, which
    may involve a particle accelerator. In addition to, or instead of, aluminum and
    phosphorus, many other chemicals are used for doping, such as germanium, boron,
    arsenic, gallium, lithium, indium, and the heavy metals antimony and bismuth.
    These other chemicals have similar properties to aluminum and phosphorus, but
    they’re easier to work with. Unlike T-shirt printing, fabrication can also make
    heavy use of subtractive processes, which use similar masks to apply chemicals
    that remove rather than add layers.
  prefs: []
  type: TYPE_NORMAL
- en: Traditional fabrication required the wires to not cross one another; they had
    to be laid out in 2D circuits, with the wires going around one another. This was
    a major driver for network theory algorithms research to find optimal layouts.
    Modern fabrication allows for limited crossing of wires, such as via 20 alternating
    layers of copper and insulators laid down by masks in a kind of 3D printing, as
    in [Figure 4-19](ch04.xhtml#ch04fig19).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0109-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-19: Some 3D copper wiring laid down above transistors in silicon*'
  prefs: []
  type: TYPE_NORMAL
- en: Most systems create FET transistors from a particular selection of chemicals,
    and so the devices are known as *MOSFETs (metal-oxide-semiconductor FETs)*. They
    typically use a particular style of masking sequence known as *CMOS (complementary
    metal-oxide semiconductor)*. A modern CMOS process might have around 300 masks
    applied in a specific sequence of additive and subtractive layers. In 2018, a
    fabrication plant cost around $5 billion to build, and producing one mask set
    cost around $5 million. You *really* don’t want to have any bugs in your circuit
    design by the time you send it to a fabrication plant, or you’ll need to pay another
    $5 million to redo the mask set.
  prefs: []
  type: TYPE_NORMAL
- en: Moore’s Law
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fabrication technologies have advanced rapidly throughout the transistor age,
    roughly doubling the amount of transistors that can be created per unit area of
    silicon every two years. As you saw earlier, this empirical observation is known
    as *Moore’s law*, after Intel’s Gordon Moore, who first noticed it. Early chips
    had a few thousand MOSFETs, with around 2,250 in the 4-bit Intel 4004 shown in
    [Figure 4-20](ch04.xhtml#ch04fig20), connected into circuits by non-overlapping
    copper wires. Modern chips have billions or even trillions of MOSFETs, connected
    by overlapping, 3D copper wires.
  prefs: []
  type: TYPE_NORMAL
- en: As transistors got smaller, they also got faster, being clocked at higher speeds,
    so until the 64-bit era “Moore’s law for clock speed” was often stated as a doubling
    of clock speed every two years.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/f0110-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 4-20: The layout of the 4-bit Intel 4004 processor chip, photographed
    with its designer, Federico Faggin*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some thought Moore’s law would last forever in both forms, but as we’ve seen
    in our study of directional systems, there are fundamental links between switching,
    computation, power consumption, and heat. The faster we switch transistors on
    and off, the more heat will be generated, as there is a relationship between clock
    frequency *f*, capacitance *C*, voltage *V*, and power usage *P*:'
  prefs: []
  type: TYPE_NORMAL
- en: '*P* = *CV*²*f*'
  prefs: []
  type: TYPE_NORMAL
- en: As a result, the two forms of Moore’s law have diverged since the start of the
    64-bit era. This was known as “hitting the power wall,” and it has been a major
    driver of recent changes to architecture that you’ll meet in [Chapter 15](ch15.xhtml).
    The original law, of doubling the density of transistors, has continued to hold;
    while there are more transistors needing to be powered, they’re also smaller,
    so each one uses less power and the total power use remains similar. Meanwhile,
    clock rates flattened out at around 3.5 GHz. You can already fry an egg on a 3.5
    GHz CPU. But if Moore’s law for clock speed had continued through the 64-bit era,
    CPU temperature would have reached that of the surface of the sun by 2010.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Switches are directional systems used to cause desired computations to happen.
    Directional systems must use up organized energy and emit heat. Modern electronic
    computers are built from FETs as switches, connected together by copper wires.
    The transistors and the wires are fabricated onto silicon chips by expensive and
    complex masking processes. Throughout the transistor age, Moore’s law has observed
    a doubling of transistor density every two years, made possible by advances in
    fabrication. This continues to hold, though increases in clock speeds ended in
    the 64-bit era due to energy and heat limits.
  prefs: []
  type: TYPE_NORMAL
- en: To make sense of large, complex networks of transistors, architects chunk them
    into higher-level structures, beginning with logic gates, which we’ll study in
    the next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Poor Man’s AND Gate**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Why can’t you use a single transistor as an AND gate? (Hint: Consider the energy,
    electrons, and heat going in and out. Also consider the water switch equivalent
    as a simpler case.)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Challenging**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Try to visit a fabrication plant. Some may have visitor tours, especially if
    you ask as an organized group such as a student society. They are not just in
    Silicon Valley; for example, there are several in the UK. For an international
    list, see *[https://en.wikipedia.org/wiki/List_of_semiconductor_fabrication_plants](https://en.wikipedia.org/wiki/List_of_semiconductor_fabrication_plants)*.
  prefs: []
  type: TYPE_NORMAL
- en: Further Reading
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For a beautiful book on the fundamental physics of computation, see Richard
    Feynman, *The Feynman Lectures on Computation* (Boca Raton: CRC Press, 2018).
    The book includes detailed but intuitive discussions of the links between energy,
    heat, information, and computation. It’s also the original source of the concept
    of quantum computing, which relies on these ideas.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Another beautiful read is Richard Feynman, “Lecture 46 on Rachet and Pawl,”
    in *The Feynman Lectures on Physics* (Boston: Addison–Wesley, 1964), *[https://www.feynmanlectures.caltech.edu/I_46.html](https://www.feynmanlectures.caltech.edu/I_46.html)*.
    This lecture explores the general physics of directional systems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For an animated look at how chips are manufactured, see Intel, “The Making of
    a Chip,” YouTube video, 2:41, May 25, 2012, *[https://www.youtube.com/watch?v=d9SWNLZvA8g](https://www.youtube.com/watch?v=d9SWNLZvA8g)*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you’re interested in the analog properties of tubes and transistors, including
    their use in audio amplifiers and digital switches, see Paul Horowitz and Winfield
    Hill, *The Art of Electronics* (Cambridge: Cambridge University Press, 1980).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
