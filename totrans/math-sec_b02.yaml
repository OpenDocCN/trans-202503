- en: Index
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please note that index links to approximate location of each term.
  prefs: []
  type: TYPE_NORMAL
- en: '**Page numbers referring to figures and tables are followed by an italicized
    *f* or *t*, respectively.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**'
  prefs: []
  type: TYPE_NORMAL
- en: A/B (blue/green) testing, [263](c13.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: ACLU (American Civil Liberties Union), [177](c10.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: '`add_edge` function, [33](c03.xhtml#Page_33)'
  prefs: []
  type: TYPE_NORMAL
- en: '`add_node` function, [33](c03.xhtml#Page_33)'
  prefs: []
  type: TYPE_NORMAL
- en: AEQD (azimuthal equidistance), [152](c08.xhtml#Page_152)–[153](c08.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: '`aeqd_to_wgs84` function, [152](c08.xhtml#Page_152)–[153](c08.xhtml#Page_153)'
  prefs: []
  type: TYPE_NORMAL
- en: AGP. *See* art gallery problem application
  prefs: []
  type: TYPE_NORMAL
- en: '`all_pairs_lowest_common_ancestor` function, [86](c05.xhtml#Page_86)'
  prefs: []
  type: TYPE_NORMAL
- en: '`all_shortest_paths` function, [118](c06.xhtml#Page_118)'
  prefs: []
  type: TYPE_NORMAL
- en: alpha parameter, [120](c06.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: Amazon Web Services (AWS), [261](c13.xhtml#Page_261)
  prefs: []
  type: TYPE_NORMAL
- en: American Civil Liberties Union (ACLU), [177](c10.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda
  prefs: []
  type: TYPE_NORMAL
- en: installing, [4](c01.xhtml#Page_4)–[8](c01.xhtml#Page_8)
  prefs: []
  type: TYPE_NORMAL
- en: Linux, [4](c01.xhtml#Page_4)–[6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: macOS, [8](c01.xhtml#Page_8), [8](c01.xhtml#Page_8)*f*
  prefs: []
  type: TYPE_NORMAL
- en: Windows, [6](c01.xhtml#Page_6)–[8](c01.xhtml#Page_8), [6](c01.xhtml#Page_6)*f*,
    [7](c01.xhtml#Page_7)*f*
  prefs: []
  type: TYPE_NORMAL
- en: installing Spyder IDE with, [10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebooks, [11](c01.xhtml#Page_11)–[12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: virtual environment setup, [9](c01.xhtml#Page_9), [63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: anomaly detection, [47](c04.xhtml#Page_47), [53](c04.xhtml#Page_53)
  prefs: []
  type: TYPE_NORMAL
- en: application state planning, [235](c12.xhtml#Page_235)–[236](c12.xhtml#Page_236)
  prefs: []
  type: TYPE_NORMAL
- en: '`apply` function, [70](c05.xhtml#Page_70), [168](c09.xhtml#Page_168)–[169](c09.xhtml#Page_169),
    [192](c10.xhtml#Page_192)'
  prefs: []
  type: TYPE_NORMAL
- en: apt-get, [11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: area metrics, [190](c10.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: areas of responsibility (AORs)
  prefs: []
  type: TYPE_NORMAL
- en: art gallery problem, [219](c11.xhtml#Page_219)–[223](c11.xhtml#Page_223), [220](c11.xhtml#Page_220)*f*,
    [225](c11.xhtml#Page_225)
  prefs: []
  type: TYPE_NORMAL
- en: emergency service planning scenario, [171](c09.xhtml#Page_171), [173](c09.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: art gallery problem (AGP) application, [209](c11.xhtml#Page_209)–[232](c11.xhtml#Page_232)
  prefs: []
  type: TYPE_NORMAL
- en: advanced features, [233](c12.xhtml#Page_233)–[256](c12.xhtml#Page_256)
  prefs: []
  type: TYPE_NORMAL
- en: graphics in Python, [245](c12.xhtml#Page_245)–[250](c12.xhtml#Page_250)
  prefs: []
  type: TYPE_NORMAL
- en: process parallelism, [241](c12.xhtml#Page_241)–[245](c12.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: running example application, [254](c12.xhtml#Page_254)–[255](c12.xhtml#Page_255)
  prefs: []
  type: TYPE_NORMAL
- en: saving and reloading data, [251](c12.xhtml#Page_251)–[254](c12.xhtml#Page_254)
  prefs: []
  type: TYPE_NORMAL
- en: state manager development, [237](c12.xhtml#Page_237)–[241](c12.xhtml#Page_241)
  prefs: []
  type: TYPE_NORMAL
- en: user interaction mapping, [234](c12.xhtml#Page_234)–[237](c12.xhtml#Page_237)
  prefs: []
  type: TYPE_NORMAL
- en: algorithm and data structures, [216](c11.xhtml#Page_216)–[231](c11.xhtml#Page_231)
  prefs: []
  type: TYPE_NORMAL
- en: area of responsibility, [219](c11.xhtml#Page_219)–[223](c11.xhtml#Page_223),
    [220](c11.xhtml#Page_220)*f*
  prefs: []
  type: TYPE_NORMAL
- en: complex polygons, [223](c11.xhtml#Page_223)–[225](c11.xhtml#Page_225), [224](c11.xhtml#Page_224)*f*
  prefs: []
  type: TYPE_NORMAL
- en: field of view and effective range, [229](c11.xhtml#Page_229)–[231](c11.xhtml#Page_231),
    [230](c11.xhtml#Page_230)*f*
  prefs: []
  type: TYPE_NORMAL
- en: greedy coloring, [218](c11.xhtml#Page_218), [218](c11.xhtml#Page_218)*f*
  prefs: []
  type: TYPE_NORMAL
- en: triangular tessellation, [216](c11.xhtml#Page_216)–[217](c11.xhtml#Page_217),
    [217](c11.xhtml#Page_217)*f*
  prefs: []
  type: TYPE_NORMAL
- en: weighted and budgeted coverages, [225](c11.xhtml#Page_225)–[229](c11.xhtml#Page_229),
    [225](c11.xhtml#Page_225)*f*, [228](c11.xhtml#Page_228)*f*, [229](c11.xhtml#Page_229)*f*
  prefs: []
  type: TYPE_NORMAL
- en: delivery pipeline, [257](c13.xhtml#Page_257)–[267](c13.xhtml#Page_267)
  prefs: []
  type: TYPE_NORMAL
- en: distributing with cloud microservices, [260](c13.xhtml#Page_260)–[264](c13.xhtml#Page_264),
    [261](c13.xhtml#Page_261)*f*
  prefs: []
  type: TYPE_NORMAL
- en: licensing with PyArmor, [264](c13.xhtml#Page_264)–[265](c13.xhtml#Page_265)
  prefs: []
  type: TYPE_NORMAL
- en: open source delivery, [265](c13.xhtml#Page_265)–[266](c13.xhtml#Page_266)
  prefs: []
  type: TYPE_NORMAL
- en: packaging with Python interpreters, [259](c13.xhtml#Page_259)–[260](c13.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: setup scripts, [258](c13.xhtml#Page_258)–[259](c13.xhtml#Page_259)
  prefs: []
  type: TYPE_NORMAL
- en: existing research on, [212](c11.xhtml#Page_212)–[214](c11.xhtml#Page_214), [213](c11.xhtml#Page_213)*f*,
    [214](c11.xhtml#Page_214)*f*
  prefs: []
  type: TYPE_NORMAL
- en: geometric and graph representations, [214](c11.xhtml#Page_214)–[216](c11.xhtml#Page_216),
    [215](c11.xhtml#Page_215)*f*
  prefs: []
  type: TYPE_NORMAL
- en: premise of, [209](c11.xhtml#Page_209)–[210](c11.xhtml#Page_210)
  prefs: []
  type: TYPE_NORMAL
- en: use cases, [211](c11.xhtml#Page_211)–[212](c11.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: '`assign_triangles` function, [221](c11.xhtml#Page_221)'
  prefs: []
  type: TYPE_NORMAL
- en: '`association` function, [195](c10.xhtml#Page_195)'
  prefs: []
  type: TYPE_NORMAL
- en: association matrices, [194](c10.xhtml#Page_194)–[197](c10.xhtml#Page_197), [194](c10.xhtml#Page_194)*f*
  prefs: []
  type: TYPE_NORMAL
- en: attribute characters, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: authority score
  prefs: []
  type: TYPE_NORMAL
- en: HITS algorithm, [80](c05.xhtml#Page_80)–[83](c05.xhtml#Page_83)
  prefs: []
  type: TYPE_NORMAL
- en: social network simulation, [104](c06.xhtml#Page_104), [106](c06.xhtml#Page_106)
  prefs: []
  type: TYPE_NORMAL
- en: updating authority scores, [81](c05.xhtml#Page_81)
  prefs: []
  type: TYPE_NORMAL
- en: AWS (Amazon Web Services), [261](c13.xhtml#Page_261)
  prefs: []
  type: TYPE_NORMAL
- en: '`axis` parameter, [71](c05.xhtml#Page_71), [167](c09.xhtml#Page_167)'
  prefs: []
  type: TYPE_NORMAL
- en: azimuthal equidistance (AEQD), [152](c08.xhtml#Page_152)–[153](c08.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: azimuth projection, [152](c08.xhtml#Page_152)
  prefs: []
  type: TYPE_NORMAL
- en: '**B**'
  prefs: []
  type: TYPE_NORMAL
- en: '`background` variable, [246](c12.xhtml#Page_246)'
  prefs: []
  type: TYPE_NORMAL
- en: bagging, [182](c10.xhtml#Page_182)
  prefs: []
  type: TYPE_NORMAL
- en: balanced exchange, [75](c05.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: Baran, Paul, [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: base stations (towers)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [142](c08.xhtml#Page_142)
  prefs: []
  type: TYPE_NORMAL
- en: gathering locations, [149](c08.xhtml#Page_149)–[150](c08.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: identifying, [144](c08.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: rogue, [143](c08.xhtml#Page_143)
  prefs: []
  type: TYPE_NORMAL
- en: betweenness centrality, [35](c03.xhtml#Page_35)–[38](c03.xhtml#Page_38), [35](c03.xhtml#Page_35)*f*,
    [57](c04.xhtml#Page_57)
  prefs: []
  type: TYPE_NORMAL
- en: biased random walks (biased walks), [97](c06.xhtml#Page_97), [100](c06.xhtml#Page_100),
    [104](c06.xhtml#Page_104), [111](c06.xhtml#Page_111)
  prefs: []
  type: TYPE_NORMAL
- en: BIM (building information modeling) programs, [211](c11.xhtml#Page_211)
  prefs: []
  type: TYPE_NORMAL
- en: Bledsoe, Woodrow Wilson, [176](c10.xhtml#Page_176), [179](c10.xhtml#Page_179)
  prefs: []
  type: TYPE_NORMAL
- en: blind spots, [211](c11.xhtml#Page_211), [232](c11.xhtml#Page_232)
  prefs: []
  type: TYPE_NORMAL
- en: '`blit` function, [247](c12.xhtml#Page_247), [250](c12.xhtml#Page_250)'
  prefs: []
  type: TYPE_NORMAL
- en: blue/green (A/B) testing, [263](c13.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: Booleans
  prefs: []
  type: TYPE_NORMAL
- en: defined, [18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: intersections, [153](c08.xhtml#Page_153)–[154](c08.xhtml#Page_154)
  prefs: []
  type: TYPE_NORMAL
- en: notation, [18](c02.xhtml#Page_18)–[19](c02.xhtml#Page_19), [21](c02.xhtml#Page_21)*t*
  prefs: []
  type: TYPE_NORMAL
- en: branch nodes, [84](c05.xhtml#Page_84)–[85](c05.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: Brandes, Ulrik, [36](c03.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: broadcast addresses, [60](c04.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: building information modeling (BIM) programs, [211](c11.xhtml#Page_211)
  prefs: []
  type: TYPE_NORMAL
- en: '**C**'
  prefs: []
  type: TYPE_NORMAL
- en: '`-c` (`--count`) option, [63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: C language, [92](c06.xhtml#Page_92), [216](c11.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: C++ language, [183](c10.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: '`capacity` attribute, [112](c06.xhtml#Page_112), [114](c06.xhtml#Page_114)'
  prefs: []
  type: TYPE_NORMAL
- en: capacity constraint, [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: '`cascaded_intersections` function, [155](c08.xhtml#Page_155), [157](c08.xhtml#Page_157)'
  prefs: []
  type: TYPE_NORMAL
- en: cell IDs (CIDs), [146](c08.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: cells, defined, [12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: centrality, [35](c03.xhtml#Page_35)–[38](c03.xhtml#Page_38), [51](c04.xhtml#Page_51)*f*
  prefs: []
  type: TYPE_NORMAL
- en: betweenness centrality, [35](c03.xhtml#Page_35)–[38](c03.xhtml#Page_38), [35](c03.xhtml#Page_35)*f*,
    [57](c04.xhtml#Page_57)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [35](c03.xhtml#Page_35)
  prefs: []
  type: TYPE_NORMAL
- en: degree centrality, [37](c03.xhtml#Page_37)–[38](c03.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: by protocol, [52](c04.xhtml#Page_52)–[61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: identifying unusual levels of traffic, [54](c04.xhtml#Page_54)–[57](c04.xhtml#Page_57)
  prefs: []
  type: TYPE_NORMAL
- en: neighbors and information exchange ratio, [57](c04.xhtml#Page_57)–[61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: port numbers subgraphs, [52](c04.xhtml#Page_52)–[54](c04.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: centroid, defined, [136](c07.xhtml#Page_136)
  prefs: []
  type: TYPE_NORMAL
- en: centroid location, [136](c07.xhtml#Page_136)–[137](c07.xhtml#Page_137), [137](c07.xhtml#Page_137)*f*
  prefs: []
  type: TYPE_NORMAL
- en: '`check_clicked_existing_vertex` function, [240](c12.xhtml#Page_240)'
  prefs: []
  type: TYPE_NORMAL
- en: '`check_clicked_within_room` function, [240](c12.xhtml#Page_240)'
  prefs: []
  type: TYPE_NORMAL
- en: '`choice` function, [103](c06.xhtml#Page_103)–[104](c06.xhtml#Page_104), [116](c06.xhtml#Page_116),
    [122](c06.xhtml#Page_122), [193](c10.xhtml#Page_193)'
  prefs: []
  type: TYPE_NORMAL
- en: chroma key filming (green-screen filming), [249](c12.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: Chvátal, Václav, [212](c11.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: Chvátal AGP theorem, [212](c11.xhtml#Page_212)–[213](c11.xhtml#Page_213)
  prefs: []
  type: TYPE_NORMAL
- en: Chvátal’s upper bound, [212](c11.xhtml#Page_212)–[213](c11.xhtml#Page_213)
  prefs: []
  type: TYPE_NORMAL
- en: CIDs (cell IDs), [146](c08.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: '`circle` function, [247](c12.xhtml#Page_247)'
  prefs: []
  type: TYPE_NORMAL
- en: '`city_gj` variable, [167](c09.xhtml#Page_167)'
  prefs: []
  type: TYPE_NORMAL
- en: '`city_shape` variable, [167](c09.xhtml#Page_167), [170](c09.xhtml#Page_170)'
  prefs: []
  type: TYPE_NORMAL
- en: '`clear_surface` function, [249](c12.xhtml#Page_249)'
  prefs: []
  type: TYPE_NORMAL
- en: cliques
  prefs: []
  type: TYPE_NORMAL
- en: analysis, [39](c03.xhtml#Page_39)–[40](c03.xhtml#Page_40), [39](c03.xhtml#Page_39)*f*,
    [61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [76](c05.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: identifying, [76](c05.xhtml#Page_76)–[78](c05.xhtml#Page_78), [78](c05.xhtml#Page_78)*f*
  prefs: []
  type: TYPE_NORMAL
- en: maximal cliques, [40](c03.xhtml#Page_40), [77](c05.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: closed chains, [129](c07.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: closeness, [35](c03.xhtml#Page_35), [38](c03.xhtml#Page_38), [52](c04.xhtml#Page_52)
  prefs: []
  type: TYPE_NORMAL
- en: cloud microservices, distributing with, [260](c13.xhtml#Page_260)–[264](c13.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: co-location, [138](c07.xhtml#Page_138)–[140](c07.xhtml#Page_140), [139](c07.xhtml#Page_139)*f*
  prefs: []
  type: TYPE_NORMAL
- en: common ancestors, [84](c05.xhtml#Page_84)–[86](c05.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: complete subgraphs, [39](c03.xhtml#Page_39)
  prefs: []
  type: TYPE_NORMAL
- en: '`complex` function, [150](c08.xhtml#Page_150)–[151](c08.xhtml#Page_151)'
  prefs: []
  type: TYPE_NORMAL
- en: computational geometry theory, [127](c07.xhtml#Page_127)–[140](c07.xhtml#Page_140).
    *See also* art gallery problem application
  prefs: []
  type: TYPE_NORMAL
- en: common operations, [132](c07.xhtml#Page_132)–[140](c07.xhtml#Page_140), [133](c07.xhtml#Page_133)*f*
  prefs: []
  type: TYPE_NORMAL
- en: centroid location, [136](c07.xhtml#Page_136)–[137](c07.xhtml#Page_137), [137](c07.xhtml#Page_137)*f*
  prefs: []
  type: TYPE_NORMAL
- en: co-location, [138](c07.xhtml#Page_138)–[140](c07.xhtml#Page_140), [139](c07.xhtml#Page_139)*f*
  prefs: []
  type: TYPE_NORMAL
- en: perimeter length, [137](c07.xhtml#Page_137)–[138](c07.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: tessellation, [133](c07.xhtml#Page_133)–[136](c07.xhtml#Page_136), [134](c07.xhtml#Page_134)*f*
  prefs: []
  type: TYPE_NORMAL
- en: defined, [127](c07.xhtml#Page_127)
  prefs: []
  type: TYPE_NORMAL
- en: facial recognition, [175](c10.xhtml#Page_175)–[205](c10.xhtml#Page_205)
  prefs: []
  type: TYPE_NORMAL
- en: location triangulation, [141](c08.xhtml#Page_141)–[160](c08.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: shapes, [128](c07.xhtml#Page_128)–[132](c07.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: line segments, [128](c07.xhtml#Page_128)–[129](c07.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: points, [128](c07.xhtml#Page_128)–[129](c07.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: polygons, [129](c07.xhtml#Page_129)–[132](c07.xhtml#Page_132), [130](c07.xhtml#Page_130)*f*,
    [131](c07.xhtml#Page_131)*f*
  prefs: []
  type: TYPE_NORMAL
- en: vertex order, [132](c07.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: Voronoi diagrams, [161](c09.xhtml#Page_161)–[174](c09.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: computer vision, [179](c10.xhtml#Page_179), [184](c10.xhtml#Page_184). *See
    also* facial recognition
  prefs: []
  type: TYPE_NORMAL
- en: '`concat` function, [70](c05.xhtml#Page_70)–[71](c05.xhtml#Page_71)'
  prefs: []
  type: TYPE_NORMAL
- en: concert security scenario, [132](c07.xhtml#Page_132)–[140](c07.xhtml#Page_140),
    [133](c07.xhtml#Page_133)*f*
  prefs: []
  type: TYPE_NORMAL
- en: centroid location, [136](c07.xhtml#Page_136)–[137](c07.xhtml#Page_137), [137](c07.xhtml#Page_137)*f*
  prefs: []
  type: TYPE_NORMAL
- en: co-location, [138](c07.xhtml#Page_138)–[140](c07.xhtml#Page_140), [139](c07.xhtml#Page_139)*f*
  prefs: []
  type: TYPE_NORMAL
- en: perimeter length, [137](c07.xhtml#Page_137)–[138](c07.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: tessellation, [133](c07.xhtml#Page_133)–[136](c07.xhtml#Page_136), [134](c07.xhtml#Page_134)*f*
  prefs: []
  type: TYPE_NORMAL
- en: conda utility, [4](c01.xhtml#Page_4)–[7](c01.xhtml#Page_7), [9](c01.xhtml#Page_9),
    [11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: connected components, [41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: connected graphs, [40](c03.xhtml#Page_40)–[41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: connectedness, [40](c03.xhtml#Page_40)–[41](c03.xhtml#Page_41), [41](c03.xhtml#Page_41)*f*
  prefs: []
  type: TYPE_NORMAL
- en: connections (edges), [i](f01.xhtml#Page_i)n graphs, [27](c03.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: conservation constraint, [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: constrained Delaunay triangulation, [214](c11.xhtml#Page_214), [216](c11.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: '`contains` function, [81](c05.xhtml#Page_81), [138](c07.xhtml#Page_138)–[139](c07.xhtml#Page_139)'
  prefs: []
  type: TYPE_NORMAL
- en: '`continue` keyword, [116](c06.xhtml#Page_116), [118](c06.xhtml#Page_118)'
  prefs: []
  type: TYPE_NORMAL
- en: '`controlled` variable, [239](c12.xhtml#Page_239)–[240](c12.xhtml#Page_240)'
  prefs: []
  type: TYPE_NORMAL
- en: convex hulls, [187](c10.xhtml#Page_187), [187](c10.xhtml#Page_187)*f*
  prefs: []
  type: TYPE_NORMAL
- en: '`coords` parameter, [216](c11.xhtml#Page_216)'
  prefs: []
  type: TYPE_NORMAL
- en: correlation ratio, [197](c10.xhtml#Page_197)–[198](c10.xhtml#Page_198)
  prefs: []
  type: TYPE_NORMAL
- en: '`correlation_ratio` function, [198](c10.xhtml#Page_198)'
  prefs: []
  type: TYPE_NORMAL
- en: '`create_using` function, [63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: cross-validation, [188](c10.xhtml#Page_188), [200](c10.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: '`cross_val_score` function, [200](c10.xhtml#Page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: cutset, [121](c06.xhtml#Page_121)–[122](c06.xhtml#Page_122)
  prefs: []
  type: TYPE_NORMAL
- en: cv2 library, [184](c10.xhtml#Page_184)
  prefs: []
  type: TYPE_NORMAL
- en: '`cv` parameter, [200](c10.xhtml#Page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: cycle of graphs, [32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: cyclic graphs, [32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: '**D**'
  prefs: []
  type: TYPE_NORMAL
- en: DAGs (directed acyclic graphs), [85](c05.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame` objects, [69](c05.xhtml#Page_69)–[73](c05.xhtml#Page_73), [76](c05.xhtml#Page_76),
    [81](c05.xhtml#Page_81), [88](c05.xhtml#Page_88), [107](c06.xhtml#Page_107), [150](c08.xhtml#Page_150),
    [167](c09.xhtml#Page_167)–[170](c09.xhtml#Page_170), [191](c10.xhtml#Page_191)–[193](c10.xhtml#Page_193),
    [195](c10.xhtml#Page_195)'
  prefs: []
  type: TYPE_NORMAL
- en: Data Manager service, [261](c13.xhtml#Page_261)*f*, [262](c13.xhtml#Page_262)
  prefs: []
  type: TYPE_NORMAL
- en: '`DataSaver` class, [227](c11.xhtml#Page_227)–[228](c11.xhtml#Page_228), [252](c12.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: DDoS (distributed denial-of-service) attacks, [38](c03.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: decision trees, [179](c10.xhtml#Page_179)–[182](c10.xhtml#Page_182), [180](c10.xhtml#Page_180)*f*,
    [201](c10.xhtml#Page_201)
  prefs: []
  type: TYPE_NORMAL
- en: degree centrality, [37](c03.xhtml#Page_37)–[38](c03.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: Delaunay triangulation, [216](c11.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: delivery pipeline, [257](c13.xhtml#Page_257)–[267](c13.xhtml#Page_267)
  prefs: []
  type: TYPE_NORMAL
- en: distributing with cloud microservices, [260](c13.xhtml#Page_260)–[264](c13.xhtml#Page_264),
    [261](c13.xhtml#Page_261)*f*
  prefs: []
  type: TYPE_NORMAL
- en: licensing with PyArmor, [264](c13.xhtml#Page_264)–[265](c13.xhtml#Page_265)
  prefs: []
  type: TYPE_NORMAL
- en: open source delivery, [265](c13.xhtml#Page_265)–[266](c13.xhtml#Page_266)
  prefs: []
  type: TYPE_NORMAL
- en: packaging with Python interpreters, [259](c13.xhtml#Page_259)–[260](c13.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: setup scripts, [258](c13.xhtml#Page_258)–[259](c13.xhtml#Page_259)
  prefs: []
  type: TYPE_NORMAL
- en: descriptive security analysis, [90](c05.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: '`detector` variable, [183](c10.xhtml#Page_183), [186](c10.xhtml#Page_186)'
  prefs: []
  type: TYPE_NORMAL
- en: deterministic FSMs, [95](c06.xhtml#Page_95), [97](c06.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: device tracking application, [148](c08.xhtml#Page_148)–[159](c08.xhtml#Page_159),
    [148](c08.xhtml#Page_148)*f*
  prefs: []
  type: TYPE_NORMAL
- en: geodesic polygons, [150](c08.xhtml#Page_150)–[153](c08.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: intersections, [153](c08.xhtml#Page_153)–[157](c08.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: mapping and comparing results, [157](c08.xhtml#Page_157)–[159](c08.xhtml#Page_159),
    [158](c08.xhtml#Page_158)*f*
  prefs: []
  type: TYPE_NORMAL
- en: reducing search area, [159](c08.xhtml#Page_159)
  prefs: []
  type: TYPE_NORMAL
- en: tower locations, [149](c08.xhtml#Page_149)–[150](c08.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: dictionary comprehensions, [15](c02.xhtml#Page_15)–[17](c02.xhtml#Page_17),
    [137](c07.xhtml#Page_137)
  prefs: []
  type: TYPE_NORMAL
- en: '`difference` function, [144](c08.xhtml#Page_144)'
  prefs: []
  type: TYPE_NORMAL
- en: '`DiGraph` objects, [38](c03.xhtml#Page_38), [42](c03.xhtml#Page_42), [42](c03.xhtml#Page_42)*f*,
    [52](c04.xhtml#Page_52), [63](c04.xhtml#Page_63), [108](c06.xhtml#Page_108), [115](c06.xhtml#Page_115)'
  prefs: []
  type: TYPE_NORMAL
- en: Dijkstra’s algorithm, [77](c05.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: '`dim` parameter, [51](c04.xhtml#Page_51)'
  prefs: []
  type: TYPE_NORMAL
- en: directed acyclic graphs (DAGs), [85](c05.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: directed graphs, [31](c03.xhtml#Page_31)–[32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: betweenness centrality, [36](c03.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: cliques, [40](c03.xhtml#Page_40), [76](c05.xhtml#Page_76)–[77](c05.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: creating in NetworkX, [33](c03.xhtml#Page_33)
  prefs: []
  type: TYPE_NORMAL
- en: degree centrality, [37](c03.xhtml#Page_37)–[38](c03.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: edge multiplicity, [43](c03.xhtml#Page_43)
  prefs: []
  type: TYPE_NORMAL
- en: HITS algorithm, [80](c05.xhtml#Page_80)
  prefs: []
  type: TYPE_NORMAL
- en: network analysis graphs, [63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: port numbers subgraphs, [52](c04.xhtml#Page_52)
  prefs: []
  type: TYPE_NORMAL
- en: resource allocation, [108](c06.xhtml#Page_108)–[109](c06.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: social network analysis, [73](c05.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: state machine graphs, [94](c06.xhtml#Page_94), [94](c06.xhtml#Page_94)*f*
  prefs: []
  type: TYPE_NORMAL
- en: directed preferential attachment (DPA), [114](c06.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: disconnected graphs, [40](c03.xhtml#Page_40)–[41](c03.xhtml#Page_41), [41](c03.xhtml#Page_41)*f*
  prefs: []
  type: TYPE_NORMAL
- en: discrete classification, [176](c10.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: '`DisplayAGP` class, [242](c12.xhtml#Page_242)–[243](c12.xhtml#Page_243)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Display` class, [246](c12.xhtml#Page_246)–[248](c12.xhtml#Page_248), [247](c12.xhtml#Page_247)*f*'
  prefs: []
  type: TYPE_NORMAL
- en: '`distance` function, [138](c07.xhtml#Page_138), [164](c09.xhtml#Page_164),
    [222](c11.xhtml#Page_222)'
  prefs: []
  type: TYPE_NORMAL
- en: distance metrics, [190](c10.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: distributed denial-of-service (DDoS) attacks, [38](c03.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: division of labor, [241](c12.xhtml#Page_241)
  prefs: []
  type: TYPE_NORMAL
- en: '`.__doc__` attribute, [237](c12.xhtml#Page_237)'
  prefs: []
  type: TYPE_NORMAL
- en: Docker, [262](c13.xhtml#Page_262)–[263](c13.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: docstrings, [236](c12.xhtml#Page_236)–[237](c12.xhtml#Page_237)
  prefs: []
  type: TYPE_NORMAL
- en: DPA (directed preferential attachment), [114](c06.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: '`draw` function, [34](c03.xhtml#Page_34), [247](c12.xhtml#Page_247)'
  prefs: []
  type: TYPE_NORMAL
- en: Drawn state, [235](c12.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: '`dtypes` property, [72](c05.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: '`DummyClassifier` class, [200](c10.xhtml#Page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: dummy classifiers, [199](c10.xhtml#Page_199)–[202](c10.xhtml#Page_202)
  prefs: []
  type: TYPE_NORMAL
- en: '`dump` function, [203](c10.xhtml#Page_203)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dumps` (dump string) function, [147](c08.xhtml#Page_147), [252](c12.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: '**E**'
  prefs: []
  type: TYPE_NORMAL
- en: edge attributes, [32](c03.xhtml#Page_32)–[33](c03.xhtml#Page_33), [43](c03.xhtml#Page_43),
    [50](c04.xhtml#Page_50), [226](c11.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: edge capacity, [112](c06.xhtml#Page_112)–[113](c06.xhtml#Page_113)
  prefs: []
  type: TYPE_NORMAL
- en: edge multiplicity, [32](c03.xhtml#Page_32), [42](c03.xhtml#Page_42)–[43](c03.xhtml#Page_43),
    [42](c03.xhtml#Page_42)*f*
  prefs: []
  type: TYPE_NORMAL
- en: edges (connections), [i](f01.xhtml#Page_i)n graphs, [27](c03.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: edges (sides; faces), [i](f01.xhtml#Page_i)n polygons, [129](c07.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: edge weight, [32](c03.xhtml#Page_32)–[33](c03.xhtml#Page_33), [43](c03.xhtml#Page_43),
    [52](c04.xhtml#Page_52)–[53](c04.xhtml#Page_53), [62](c04.xhtml#Page_62)–[63](c04.xhtml#Page_63),
    [73](c05.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: effective range
  prefs: []
  type: TYPE_NORMAL
- en: cellular networks, [144](c08.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: security sensors, [211](c11.xhtml#Page_211), [213](c11.xhtml#Page_213), [229](c11.xhtml#Page_229)–[230](c11.xhtml#Page_230)
  prefs: []
  type: TYPE_NORMAL
- en: Electronic Frontier Foundation, [177](c10.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: '`eliminate_small_areas` function, [155](c08.xhtml#Page_155)–[156](c08.xhtml#Page_156)'
  prefs: []
  type: TYPE_NORMAL
- en: emergency service planning scenario, [163](c09.xhtml#Page_163)–[173](c09.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: city shape, [164](c09.xhtml#Page_164)–[167](c09.xhtml#Page_167), [165](c09.xhtml#Page_165)*f*
  prefs: []
  type: TYPE_NORMAL
- en: distance function, [164](c09.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: generators, [167](c09.xhtml#Page_167)–[169](c09.xhtml#Page_169), [169](c09.xhtml#Page_169)*f*
  prefs: []
  type: TYPE_NORMAL
- en: Voronoi tessellation, [170](c09.xhtml#Page_170)–[173](c09.xhtml#Page_173), [171](c09.xhtml#Page_171)*f*,
    [172](c09.xhtml#Page_172)*f*
  prefs: []
  type: TYPE_NORMAL
- en: empirical mean (sample mean), [93](c06.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: ensemble classifiers, [201](c10.xhtml#Page_201)
  prefs: []
  type: TYPE_NORMAL
- en: ethics
  prefs: []
  type: TYPE_NORMAL
- en: facial recognition, [178](c10.xhtml#Page_178)–[179](c10.xhtml#Page_179)
  prefs: []
  type: TYPE_NORMAL
- en: social network analysis, [89](c05.xhtml#Page_89)
  prefs: []
  type: TYPE_NORMAL
- en: tracking, [144](c08.xhtml#Page_144)–[145](c08.xhtml#Page_145)
  prefs: []
  type: TYPE_NORMAL
- en: Euclidean distance, [164](c09.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: '`event` class, [237](c12.xhtml#Page_237)–[238](c12.xhtml#Page_238)'
  prefs: []
  type: TYPE_NORMAL
- en: '`exchange_ratios` function, [60](c04.xhtml#Page_60)'
  prefs: []
  type: TYPE_NORMAL
- en: exploratory analysis (unsupervised learning), [176](c10.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: '**F**'
  prefs: []
  type: TYPE_NORMAL
- en: face detector component, [183](c10.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: faces (edges), [i](f01.xhtml#Page_i)n polygons, [129](c07.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: Facial Identification Scientific Working Group (FISWG), [189](c10.xhtml#Page_189)
  prefs: []
  type: TYPE_NORMAL
- en: facial recognition, [175](c10.xhtml#Page_175)–[205](c10.xhtml#Page_205), [178](c10.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: data loading, [191](c10.xhtml#Page_191)–[193](c10.xhtml#Page_193)
  prefs: []
  type: TYPE_NORMAL
- en: data set, [177](c10.xhtml#Page_177)–[178](c10.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: decision tree classifiers, [179](c10.xhtml#Page_179)–[182](c10.xhtml#Page_182),
    [180](c10.xhtml#Page_180)*f*
  prefs: []
  type: TYPE_NORMAL
- en: defined, [175](c10.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: ethics of, [178](c10.xhtml#Page_178)–[179](c10.xhtml#Page_179)
  prefs: []
  type: TYPE_NORMAL
- en: facial statistics, [189](c10.xhtml#Page_189)–[190](c10.xhtml#Page_190), [189](c10.xhtml#Page_189)*f*
  prefs: []
  type: TYPE_NORMAL
- en: feature engineering, [193](c10.xhtml#Page_193)–[198](c10.xhtml#Page_198)
  prefs: []
  type: TYPE_NORMAL
- en: association matrices, [194](c10.xhtml#Page_194)–[196](c10.xhtml#Page_196), [194](c10.xhtml#Page_194)*f*
  prefs: []
  type: TYPE_NORMAL
- en: correlation ratio, [197](c10.xhtml#Page_197)–[198](c10.xhtml#Page_198)
  prefs: []
  type: TYPE_NORMAL
- en: mutual information classification, [196](c10.xhtml#Page_196)–[197](c10.xhtml#Page_197)
  prefs: []
  type: TYPE_NORMAL
- en: locating facial landmarks, [185](c10.xhtml#Page_185)–[188](c10.xhtml#Page_188),
    [187](c10.xhtml#Page_187)*f*
  prefs: []
  type: TYPE_NORMAL
- en: memory management, [190](c10.xhtml#Page_190)–[191](c10.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: model persistence, [203](c10.xhtml#Page_203)–[204](c10.xhtml#Page_204)
  prefs: []
  type: TYPE_NORMAL
- en: model training, [198](c10.xhtml#Page_198)–[203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: establishing baseline, [199](c10.xhtml#Page_199)–[200](c10.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: random forest, [201](c10.xhtml#Page_201)–[202](c10.xhtml#Page_202)
  prefs: []
  type: TYPE_NORMAL
- en: splitting data, [199](c10.xhtml#Page_199)
  prefs: []
  type: TYPE_NORMAL
- en: testing holdout images, [202](c10.xhtml#Page_202)–[203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: overview of, [176](c10.xhtml#Page_176)–[177](c10.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: processing image data, [184](c10.xhtml#Page_184)–[185](c10.xhtml#Page_185),
    [185](c10.xhtml#Page_185)*f*
  prefs: []
  type: TYPE_NORMAL
- en: proof of concept, [188](c10.xhtml#Page_188)–[204](c10.xhtml#Page_204)
  prefs: []
  type: TYPE_NORMAL
- en: representing facial geometry, [182](c10.xhtml#Page_182)–[184](c10.xhtml#Page_184),
    [182](c10.xhtml#Page_182)*f*
  prefs: []
  type: TYPE_NORMAL
- en: features, [i](f01.xhtml#Page_i)n databases, [71](c05.xhtml#Page_71)
  prefs: []
  type: TYPE_NORMAL
- en: field of view, [211](c11.xhtml#Page_211), [213](c11.xhtml#Page_213), [229](c11.xhtml#Page_229)–[231](c11.xhtml#Page_231),
    [230](c11.xhtml#Page_230)*f*
  prefs: []
  type: TYPE_NORMAL
- en: '`file_to_graph` function, [62](c04.xhtml#Page_62)'
  prefs: []
  type: TYPE_NORMAL
- en: '`find_cliques` function, [40](c03.xhtml#Page_40)'
  prefs: []
  type: TYPE_NORMAL
- en: finite state machines (FSMs), [93](c06.xhtml#Page_93)–[95](c06.xhtml#Page_95),
    [94](c06.xhtml#Page_94)*f*, [100](c06.xhtml#Page_100)–[101](c06.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: Fisk, Steve, [212](c11.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: FISWG (Facial Identification Scientific Working Group), [189](c10.xhtml#Page_189)
  prefs: []
  type: TYPE_NORMAL
- en: fitting classifiers, [200](c10.xhtml#Page_200), [203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: '`flip` function, [247](c12.xhtml#Page_247)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Floor` class, [234](c12.xhtml#Page_234)'
  prefs: []
  type: TYPE_NORMAL
- en: flow functions, [109](c06.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: '`font_color` function, [34](c03.xhtml#Page_34)'
  prefs: []
  type: TYPE_NORMAL
- en: '`format` parameter, [165](c09.xhtml#Page_165)'
  prefs: []
  type: TYPE_NORMAL
- en: freezing applications, [259](c13.xhtml#Page_259)–[260](c13.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: '`from_dict` function, [253](c12.xhtml#Page_253)–[254](c12.xhtml#Page_254)'
  prefs: []
  type: TYPE_NORMAL
- en: FSMs (finite state machines), [93](c06.xhtml#Page_93)–[95](c06.xhtml#Page_95),
    [94](c06.xhtml#Page_94)*f*, [100](c06.xhtml#Page_100)–[101](c06.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: functools library, [150](c08.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: '**G**'
  prefs: []
  type: TYPE_NORMAL
- en: GCP (Google Cloud Platform), [261](c13.xhtml#Page_261)
  prefs: []
  type: TYPE_NORMAL
- en: General Data Protection Regulation, [178](c10.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: General Game Playing (GGP), [98](c06.xhtml#Page_98)
  prefs: []
  type: TYPE_NORMAL
- en: '`Generator` objects, [40](c03.xhtml#Page_40)'
  prefs: []
  type: TYPE_NORMAL
- en: generators (seeds)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [162](c09.xhtml#Page_162)
  prefs: []
  type: TYPE_NORMAL
- en: gathering, [167](c09.xhtml#Page_167)–[169](c09.xhtml#Page_169), [169](c09.xhtml#Page_169)*f*
  prefs: []
  type: TYPE_NORMAL
- en: Voronoi tessellation, [162](c09.xhtml#Page_162)–[163](c09.xhtml#Page_163)
  prefs: []
  type: TYPE_NORMAL
- en: geocoding, [145](c08.xhtml#Page_145)
  prefs: []
  type: TYPE_NORMAL
- en: '`GeoDataFrame` class, [150](c08.xhtml#Page_150)'
  prefs: []
  type: TYPE_NORMAL
- en: '`GeoDataFrame` objects, [168](c09.xhtml#Page_168)–[169](c09.xhtml#Page_169)'
  prefs: []
  type: TYPE_NORMAL
- en: GeoJSON, [150](c08.xhtml#Page_150), [165](c09.xhtml#Page_165)–[167](c09.xhtml#Page_167)
  prefs: []
  type: TYPE_NORMAL
- en: geolocation, [145](c08.xhtml#Page_145), [149](c08.xhtml#Page_149)–[150](c08.xhtml#Page_150),
    [159](c08.xhtml#Page_159), [167](c09.xhtml#Page_167)
  prefs: []
  type: TYPE_NORMAL
- en: GeoPandas library, [150](c08.xhtml#Page_150), [169](c09.xhtml#Page_169)–[170](c09.xhtml#Page_170)
  prefs: []
  type: TYPE_NORMAL
- en: geovoronoi library, [163](c09.xhtml#Page_163), [170](c09.xhtml#Page_170)
  prefs: []
  type: TYPE_NORMAL
- en: '`get_front_face_detector` function, [183](c10.xhtml#Page_183)'
  prefs: []
  type: TYPE_NORMAL
- en: '`get_image_files` function, [191](c10.xhtml#Page_191)'
  prefs: []
  type: TYPE_NORMAL
- en: '`get_mods` function, [239](c12.xhtml#Page_239)'
  prefs: []
  type: TYPE_NORMAL
- en: '`get_shapely_circle` function, [153](c08.xhtml#Page_153)'
  prefs: []
  type: TYPE_NORMAL
- en: GGP (General Game Playing), [98](c06.xhtml#Page_98)
  prefs: []
  type: TYPE_NORMAL
- en: Gini impurity coefficient, [181](c10.xhtml#Page_181)
  prefs: []
  type: TYPE_NORMAL
- en: GIS Stack Exchange, [151](c08.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: GitHub, [xxiv](f07.xhtml#Page_xxii), [10](c01.xhtml#Page_10), [48](c04.xhtml#Page_48),
    [258](c13.xhtml#Page_258), [265](c13.xhtml#Page_265)
  prefs: []
  type: TYPE_NORMAL
- en: goal-oriented planning, [98](c06.xhtml#Page_98)
  prefs: []
  type: TYPE_NORMAL
- en: Google Cloud Platform (GCP), [261](c13.xhtml#Page_261)
  prefs: []
  type: TYPE_NORMAL
- en: Graph builder service, [261](c13.xhtml#Page_261)*f*, [262](c13.xhtml#Page_262)
  prefs: []
  type: TYPE_NORMAL
- en: graphic elements, [245](c12.xhtml#Page_245)–[250](c12.xhtml#Page_250)
  prefs: []
  type: TYPE_NORMAL
- en: '`Display` class, [246](c12.xhtml#Page_246)–[248](c12.xhtml#Page_248), [247](c12.xhtml#Page_247)*f*'
  prefs: []
  type: TYPE_NORMAL
- en: layers, [248](c12.xhtml#Page_248)–[250](c12.xhtml#Page_250)
  prefs: []
  type: TYPE_NORMAL
- en: '`Sprite` class, [248](c12.xhtml#Page_248)–[250](c12.xhtml#Page_250), [250](c12.xhtml#Page_250)*f*'
  prefs: []
  type: TYPE_NORMAL
- en: '`Surface` class, [246](c12.xhtml#Page_246)–[248](c12.xhtml#Page_248), [247](c12.xhtml#Page_247)*f*'
  prefs: []
  type: TYPE_NORMAL
- en: graphs, defined, [27](c03.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: graph theory, [27](c03.xhtml#Page_27)–[44](c03.xhtml#Page_44). *See also* art
    gallery problem application
  prefs: []
  type: TYPE_NORMAL
- en: creating graphs in NetworkX, [32](c03.xhtml#Page_32)–[34](c03.xhtml#Page_34),
    [34](c03.xhtml#Page_34)*f*
  prefs: []
  type: TYPE_NORMAL
- en: graph properties, [34](c03.xhtml#Page_34)–[43](c03.xhtml#Page_43)
  prefs: []
  type: TYPE_NORMAL
- en: centrality, [35](c03.xhtml#Page_35)–[38](c03.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: cliques, [39](c03.xhtml#Page_39)–[40](c03.xhtml#Page_40)
  prefs: []
  type: TYPE_NORMAL
- en: closeness, [35](c03.xhtml#Page_35)
  prefs: []
  type: TYPE_NORMAL
- en: connectedness, [40](c03.xhtml#Page_40)–[41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: edge multiplicity, [42](c03.xhtml#Page_42)–[43](c03.xhtml#Page_43)
  prefs: []
  type: TYPE_NORMAL
- en: graphs, defined, [27](c03.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: overview of, [31](c03.xhtml#Page_31)–[32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: uses for, [28](c03.xhtml#Page_28)–[31](c03.xhtml#Page_31), [28](c03.xhtml#Page_28)*f*,
    [30](c03.xhtml#Page_30)*f*, [31](c03.xhtml#Page_31)*f*
  prefs: []
  type: TYPE_NORMAL
- en: Graphviz, [33](c03.xhtml#Page_33)
  prefs: []
  type: TYPE_NORMAL
- en: '`greedy_color` function, [218](c11.xhtml#Page_218)'
  prefs: []
  type: TYPE_NORMAL
- en: greedy coloring, [212](c11.xhtml#Page_212)–[214](c11.xhtml#Page_214), [213](c11.xhtml#Page_213)*f*,
    [218](c11.xhtml#Page_218), [218](c11.xhtml#Page_218)*f*, [245](c12.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: Greek letters and functions, [22](c02.xhtml#Page_22), [22](c02.xhtml#Page_22)*t*
  prefs: []
  type: TYPE_NORMAL
- en: green-screen filming (chroma key filming), [249](c12.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: Guggenheim Museum, [214](c11.xhtml#Page_214), [214](c11.xhtml#Page_214)*f*.
    *See also* art gallery problem application
  prefs: []
  type: TYPE_NORMAL
- en: '**H**'
  prefs: []
  type: TYPE_NORMAL
- en: '`-h` (`--help`) option, [63](c04.xhtml#Page_63), [254](c12.xhtml#Page_254)'
  prefs: []
  type: TYPE_NORMAL
- en: '`handle_click` function, [240](c12.xhtml#Page_240)–[241](c12.xhtml#Page_241)'
  prefs: []
  type: TYPE_NORMAL
- en: '`handle_keydown` function, [238](c12.xhtml#Page_238)–[239](c12.xhtml#Page_239),
    [241](c12.xhtml#Page_241)'
  prefs: []
  type: TYPE_NORMAL
- en: '`handle_keyup` function, [239](c12.xhtml#Page_239)–[241](c12.xhtml#Page_241)'
  prefs: []
  type: TYPE_NORMAL
- en: hard classification, [203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: hardware parallelism, [263](c13.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: '`has_path` function, [110](c06.xhtml#Page_110)'
  prefs: []
  type: TYPE_NORMAL
- en: Hay, Andrew, [29](c03.xhtml#Page_29)
  prefs: []
  type: TYPE_NORMAL
- en: higher-order functions, [150](c08.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: histogram of oriented gradients (HOG), [183](c10.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: HITS (Hyperlink-Induced Topic Search), [80](c05.xhtml#Page_80)–[83](c05.xhtml#Page_83),
    [104](c06.xhtml#Page_104), [109](c06.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: '`hits` function, [81](c05.xhtml#Page_81)'
  prefs: []
  type: TYPE_NORMAL
- en: HNIs (home network identities), [146](c08.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: holdout sets
  prefs: []
  type: TYPE_NORMAL
- en: testing holdout images, [202](c10.xhtml#Page_202)–[203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: true, [192](c10.xhtml#Page_192)–[193](c10.xhtml#Page_193)
  prefs: []
  type: TYPE_NORMAL
- en: '`hole_p` variable, [224](c11.xhtml#Page_224)'
  prefs: []
  type: TYPE_NORMAL
- en: holes. *See* linear ring polygons
  prefs: []
  type: TYPE_NORMAL
- en: home network identities (HNIs), [146](c08.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: horizontal scaling, [262](c13.xhtml#Page_262)–[263](c13.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: hubs
  prefs: []
  type: TYPE_NORMAL
- en: defined, [80](c05.xhtml#Page_80)
  prefs: []
  type: TYPE_NORMAL
- en: HITS algorithm, [80](c05.xhtml#Page_80)–[83](c05.xhtml#Page_83)
  prefs: []
  type: TYPE_NORMAL
- en: social network simulation, [104](c06.xhtml#Page_104), [106](c06.xhtml#Page_106)
  prefs: []
  type: TYPE_NORMAL
- en: updating hub scores, [82](c05.xhtml#Page_82)
  prefs: []
  type: TYPE_NORMAL
- en: '`hub_send` function, [106](c06.xhtml#Page_106)'
  prefs: []
  type: TYPE_NORMAL
- en: Hyperlink-Induced Topic Search (HITS; Hubs and Authorities), [80](c05.xhtml#Page_80)–[83](c05.xhtml#Page_83),
    [104](c06.xhtml#Page_104), [109](c06.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: hypothesis testing, [200](c10.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: '**I**'
  prefs: []
  type: TYPE_NORMAL
- en: '`-i` (`--iface`) option, [63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: '`-i all` option, [64](c04.xhtml#Page_64)'
  prefs: []
  type: TYPE_NORMAL
- en: ICMP (Internet Control Message Protocol) packets, [49](c04.xhtml#Page_49)–[50](c04.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: IER (information exchange ratio), [59](c04.xhtml#Page_59)–[61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: IFD (information flow distance), [100](c06.xhtml#Page_100)–[104](c06.xhtml#Page_104)
  prefs: []
  type: TYPE_NORMAL
- en: imutils library, [184](c10.xhtml#Page_184), [236](c12.xhtml#Page_236)
  prefs: []
  type: TYPE_NORMAL
- en: in-degree centrality, [37](c03.xhtml#Page_37)–[38](c03.xhtml#Page_38), [54](c04.xhtml#Page_54)–[56](c04.xhtml#Page_56),
    [59](c04.xhtml#Page_59)–[60](c04.xhtml#Page_60), [78](c05.xhtml#Page_78), [85](c05.xhtml#Page_85),
    [113](c06.xhtml#Page_113), [115](c06.xhtml#Page_115), [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: '`in_degree` function, [55](c04.xhtml#Page_55), [79](c05.xhtml#Page_79)'
  prefs: []
  type: TYPE_NORMAL
- en: '`in_edges` function, [59](c04.xhtml#Page_59), [114](c06.xhtml#Page_114)'
  prefs: []
  type: TYPE_NORMAL
- en: Indicators of Compromise (IoCs), [47](c04.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: information entropy, [74](c05.xhtml#Page_74)
  prefs: []
  type: TYPE_NORMAL
- en: information exchange ratio (IER), [59](c04.xhtml#Page_59)–[61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: information flow distance (IFD), [100](c06.xhtml#Page_100)–[104](c06.xhtml#Page_104)
  prefs: []
  type: TYPE_NORMAL
- en: information flow game, [110](c06.xhtml#Page_110)–[124](c06.xhtml#Page_124)
  prefs: []
  type: TYPE_NORMAL
- en: edge capacity, [112](c06.xhtml#Page_112)–[113](c06.xhtml#Page_113)
  prefs: []
  type: TYPE_NORMAL
- en: game phases, [113](c06.xhtml#Page_113)–[117](c06.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: message movement phase, [115](c06.xhtml#Page_115)–[117](c06.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: network disruption phase, [117](c06.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: network evolution phase, [113](c06.xhtml#Page_113)–[115](c06.xhtml#Page_115)
  prefs: []
  type: TYPE_NORMAL
- en: game simulation, [118](c06.xhtml#Page_118)–[120](c06.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: improvements to player 2, [120](c06.xhtml#Page_120)–[124](c06.xhtml#Page_124),
    [124](c06.xhtml#Page_124)*f*
  prefs: []
  type: TYPE_NORMAL
- en: source and sink node selection, [117](c06.xhtml#Page_117)–[118](c06.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: weighted random choice, [111](c06.xhtml#Page_111)–[112](c06.xhtml#Page_112)
  prefs: []
  type: TYPE_NORMAL
- en: information propagation, [74](c05.xhtml#Page_74)–[76](c05.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: informed consent
  prefs: []
  type: TYPE_NORMAL
- en: facial recognition, [178](c10.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: tracking, [145](c08.xhtml#Page_145)
  prefs: []
  type: TYPE_NORMAL
- en: '`__init__` function, [249](c12.xhtml#Page_249)'
  prefs: []
  type: TYPE_NORMAL
- en: '`init` function, [246](c12.xhtml#Page_246)'
  prefs: []
  type: TYPE_NORMAL
- en: '`init_surface` function, [250](c12.xhtml#Page_250), [253](c12.xhtml#Page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: input alphabet, [94](c06.xhtml#Page_94)–[96](c06.xhtml#Page_96), [101](c06.xhtml#Page_101)–[102](c06.xhtml#Page_102),
    [113](c06.xhtml#Page_113)
  prefs: []
  type: TYPE_NORMAL
- en: instances, [i](f01.xhtml#Page_i)n decision trees, [180](c10.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: Internet Control Message Protocol (ICMP) packets, [49](c04.xhtml#Page_49)–[50](c04.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: interpreters
  prefs: []
  type: TYPE_NORMAL
- en: defined, [xxiii](f07.xhtml#Page_xxi)
  prefs: []
  type: TYPE_NORMAL
- en: packaging with, [259](c13.xhtml#Page_259)–[260](c13.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: '`intersection` function, [144](c08.xhtml#Page_144), [154](c08.xhtml#Page_154)'
  prefs: []
  type: TYPE_NORMAL
- en: intersections, finding, [153](c08.xhtml#Page_153)–[157](c08.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: '`intersects` function, [138](c07.xhtml#Page_138)'
  prefs: []
  type: TYPE_NORMAL
- en: IoCs (Indicators of Compromise), [47](c04.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: '`isinstance` function, [157](c08.xhtml#Page_157)'
  prefs: []
  type: TYPE_NORMAL
- en: '`items` function, [186](c10.xhtml#Page_186)'
  prefs: []
  type: TYPE_NORMAL
- en: '**J**'
  prefs: []
  type: TYPE_NORMAL
- en: joblib library, [203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: '`join` function, [244](c12.xhtml#Page_244)'
  prefs: []
  type: TYPE_NORMAL
- en: json library, [251](c12.xhtml#Page_251)
  prefs: []
  type: TYPE_NORMAL
- en: '`json` parameter, [168](c09.xhtml#Page_168)'
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebooks, [11](c01.xhtml#Page_11)–[12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: '**K**'
  prefs: []
  type: TYPE_NORMAL
- en: '`key_features` variable, [196](c10.xhtml#Page_196)'
  prefs: []
  type: TYPE_NORMAL
- en: '`key` parameter, [53](c04.xhtml#Page_53), [222](c11.xhtml#Page_222), [239](c12.xhtml#Page_239)–[240](c12.xhtml#Page_240)'
  prefs: []
  type: TYPE_NORMAL
- en: key space, [111](c06.xhtml#Page_111)–[112](c06.xhtml#Page_112)
  prefs: []
  type: TYPE_NORMAL
- en: kinetic information, [75](c05.xhtml#Page_75)–[76](c05.xhtml#Page_76), [78](c05.xhtml#Page_78)–[79](c05.xhtml#Page_79)
  prefs: []
  type: TYPE_NORMAL
- en: Klee, Victor, [212](c11.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: Kubernetes, [262](c13.xhtml#Page_262)–[263](c13.xhtml#Page_263), [266](c13.xhtml#Page_266)
  prefs: []
  type: TYPE_NORMAL
- en: '**L**'
  prefs: []
  type: TYPE_NORMAL
- en: '`-l` (`--load`) argument, [63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: '`labels` function, [34](c03.xhtml#Page_34)'
  prefs: []
  type: TYPE_NORMAL
- en: LACs (location area codes), [146](c08.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: lambda functions, [53](c04.xhtml#Page_53)
  prefs: []
  type: TYPE_NORMAL
- en: landmark detector component, [183](c10.xhtml#Page_183), [188](c10.xhtml#Page_188),
    [191](c10.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: layers, [i](f01.xhtml#Page_i)n graphics, [248](c12.xhtml#Page_248)–[250](c12.xhtml#Page_250)
  prefs: []
  type: TYPE_NORMAL
- en: LCA (lowest common ancestor), [84](c05.xhtml#Page_84)–[87](c05.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: leaf nodes, [85](c05.xhtml#Page_85), [180](c10.xhtml#Page_180)–[181](c10.xhtml#Page_181),
    [201](c10.xhtml#Page_201)
  prefs: []
  type: TYPE_NORMAL
- en: leave one out (LOO) algorithm, [188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189),
    [199](c10.xhtml#Page_199)–[200](c10.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: '`left_click` function, [241](c12.xhtml#Page_241)'
  prefs: []
  type: TYPE_NORMAL
- en: '`len` property, [50](c04.xhtml#Page_50)'
  prefs: []
  type: TYPE_NORMAL
- en: libpcap library, [47](c04.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: licensing, with PyArmor, [264](c13.xhtml#Page_264)–[265](c13.xhtml#Page_265)
  prefs: []
  type: TYPE_NORMAL
- en: linchpin employees, [109](c06.xhtml#Page_109)–[110](c06.xhtml#Page_110), [112](c06.xhtml#Page_112)
  prefs: []
  type: TYPE_NORMAL
- en: linear ring polygons (rings; holes)
  prefs: []
  type: TYPE_NORMAL
- en: art gallery problem, [223](c11.xhtml#Page_223)–[225](c11.xhtml#Page_225), [224](c11.xhtml#Page_224)*f*
  prefs: []
  type: TYPE_NORMAL
- en: overview of, [130](c07.xhtml#Page_130)–[131](c07.xhtml#Page_131), [131](c07.xhtml#Page_131)*f*
  prefs: []
  type: TYPE_NORMAL
- en: line segments
  prefs: []
  type: TYPE_NORMAL
- en: AGP algorithm, [218](c11.xhtml#Page_218)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [129](c07.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: overview of, [128](c07.xhtml#Page_128)–[129](c07.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: perimeter length, [138](c07.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: polygons, [129](c07.xhtml#Page_129)–[132](c07.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: Voronoi tessellation, [162](c09.xhtml#Page_162)–[164](c09.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: '`LineString` class, [129](c07.xhtml#Page_129)'
  prefs: []
  type: TYPE_NORMAL
- en: '`LineString` objects, [129](c07.xhtml#Page_129), [190](c10.xhtml#Page_190)'
  prefs: []
  type: TYPE_NORMAL
- en: link prediction theory, [100](c06.xhtml#Page_100)
  prefs: []
  type: TYPE_NORMAL
- en: Linux
  prefs: []
  type: TYPE_NORMAL
- en: installing Anaconda, [4](c01.xhtml#Page_4)–[6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: installing IDE without Anaconda, [11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebooks, [47](c04.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: network card in promiscuous mode, [63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: open source delivery, [266](c13.xhtml#Page_266)
  prefs: []
  type: TYPE_NORMAL
- en: packet capture library, [11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: list comprehensions
  prefs: []
  type: TYPE_NORMAL
- en: dictionary comprehensions vs., [16](c02.xhtml#Page_16)–[17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: emergency service planning scenario, [167](c09.xhtml#Page_167), [170](c09.xhtml#Page_170)
  prefs: []
  type: TYPE_NORMAL
- en: facial recognition, [193](c10.xhtml#Page_193), [197](c10.xhtml#Page_197)
  prefs: []
  type: TYPE_NORMAL
- en: finding intersections, [157](c08.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: identifying cliques, [77](c05.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: identifying most absorbent node, [59](c04.xhtml#Page_59)
  prefs: []
  type: TYPE_NORMAL
- en: identifying unusual levels of traffic, [54](c04.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: limitations of, [15](c02.xhtml#Page_15)
  prefs: []
  type: TYPE_NORMAL
- en: overview of, [14](c02.xhtml#Page_14)–[15](c02.xhtml#Page_15)
  prefs: []
  type: TYPE_NORMAL
- en: port numbers subgraphs, [52](c04.xhtml#Page_52)
  prefs: []
  type: TYPE_NORMAL
- en: '`load` function, [203](c10.xhtml#Page_203)–[204](c10.xhtml#Page_204), [227](c11.xhtml#Page_227),
    [246](c12.xhtml#Page_246)'
  prefs: []
  type: TYPE_NORMAL
- en: '`loads` function, [70](c05.xhtml#Page_70), [165](c09.xhtml#Page_165), [253](c12.xhtml#Page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: '`locate_landmarks` function, [186](c10.xhtml#Page_186), [188](c10.xhtml#Page_188),
    [191](c10.xhtml#Page_191)'
  prefs: []
  type: TYPE_NORMAL
- en: location area codes (LACs), [146](c08.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: '`locations` variable, [169](c09.xhtml#Page_169)'
  prefs: []
  type: TYPE_NORMAL
- en: location triangulation, [141](c08.xhtml#Page_141)–[160](c08.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: device tracking application, [148](c08.xhtml#Page_148)–[159](c08.xhtml#Page_159),
    [148](c08.xhtml#Page_148)*f*
  prefs: []
  type: TYPE_NORMAL
- en: geodesic polygons, [150](c08.xhtml#Page_150)–[153](c08.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: intersections, [153](c08.xhtml#Page_153)–[157](c08.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: mapping and comparing results, [157](c08.xhtml#Page_157)–[159](c08.xhtml#Page_159),
    [158](c08.xhtml#Page_158)*f*
  prefs: []
  type: TYPE_NORMAL
- en: reducing search area, [159](c08.xhtml#Page_159)
  prefs: []
  type: TYPE_NORMAL
- en: tower locations, [149](c08.xhtml#Page_149)–[150](c08.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: ethics of, [144](c08.xhtml#Page_144)–[145](c08.xhtml#Page_145)
  prefs: []
  type: TYPE_NORMAL
- en: network interface data, [142](c08.xhtml#Page_142)–[144](c08.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: OpenCellID API structure, [145](c08.xhtml#Page_145)–[148](c08.xhtml#Page_148),
    [147](c08.xhtml#Page_147)*f*
  prefs: []
  type: TYPE_NORMAL
- en: proof of concept, [148](c08.xhtml#Page_148)–[159](c08.xhtml#Page_159)
  prefs: []
  type: TYPE_NORMAL
- en: '`loc` function, [73](c05.xhtml#Page_73)'
  prefs: []
  type: TYPE_NORMAL
- en: logical statements, [18](c02.xhtml#Page_18)–[20](c02.xhtml#Page_20)
  prefs: []
  type: TYPE_NORMAL
- en: LOO (leave one out) algorithm, [188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189),
    [199](c10.xhtml#Page_199)–[200](c10.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: '`lookup_tower` function, [146](c08.xhtml#Page_146), [148](c08.xhtml#Page_148)–[149](c08.xhtml#Page_149)'
  prefs: []
  type: TYPE_NORMAL
- en: loose coupling, [253](c12.xhtml#Page_253)–[254](c12.xhtml#Page_254)
  prefs: []
  type: TYPE_NORMAL
- en: lowest common ancestor (LCA), [84](c05.xhtml#Page_84)–[87](c05.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: LucidChart, [234](c12.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: '**M**'
  prefs: []
  type: TYPE_NORMAL
- en: MAC (media access control) addresses, [48](c04.xhtml#Page_48)–[50](c04.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: machine learning (ML), [18](c02.xhtml#Page_18), [176](c10.xhtml#Page_176)–[204](c10.xhtml#Page_204)
  prefs: []
  type: TYPE_NORMAL
- en: macOS
  prefs: []
  type: TYPE_NORMAL
- en: installing Anaconda, [8](c01.xhtml#Page_8), [8](c01.xhtml#Page_8)*f*
  prefs: []
  type: TYPE_NORMAL
- en: network card in promiscuous mode, [63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: packet capture library, [47](c04.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: Maltego, [29](c03.xhtml#Page_29)–[30](c03.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: Markdown, [12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: Mastodon data, analysis of, [67](c05.xhtml#Page_67)–[90](c05.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: converting data to graph, [69](c05.xhtml#Page_69)–[73](c05.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: building graphs, [72](c05.xhtml#Page_72)–[73](c05.xhtml#Page_73), [74](c05.xhtml#Page_74)*f*
  prefs: []
  type: TYPE_NORMAL
- en: examining data, [69](c05.xhtml#Page_69)
  prefs: []
  type: TYPE_NORMAL
- en: structuring data, [69](c05.xhtml#Page_69)–[72](c05.xhtml#Page_72)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [67](c05.xhtml#Page_67)
  prefs: []
  type: TYPE_NORMAL
- en: proof of concept, [87](c05.xhtml#Page_87)–[88](c05.xhtml#Page_88)
  prefs: []
  type: TYPE_NORMAL
- en: research questions, [74](c05.xhtml#Page_74)–[87](c05.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: cliques and most influential users, [76](c05.xhtml#Page_76)–[78](c05.xhtml#Page_78),
    [78](c05.xhtml#Page_78)*f*
  prefs: []
  type: TYPE_NORMAL
- en: information propagation, [74](c05.xhtml#Page_74)–[76](c05.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: most influenced users, [78](c05.xhtml#Page_78)–[79](c05.xhtml#Page_79), [79](c05.xhtml#Page_79)*f*
  prefs: []
  type: TYPE_NORMAL
- en: node ancestry, [83](c05.xhtml#Page_83)–[87](c05.xhtml#Page_87), [84](c05.xhtml#Page_84)*f*,
    [86](c05.xhtml#Page_86)*f*
  prefs: []
  type: TYPE_NORMAL
- en: topic-based information exchange, [79](c05.xhtml#Page_79)–[83](c05.xhtml#Page_83),
    [82](c05.xhtml#Page_82)*f*
  prefs: []
  type: TYPE_NORMAL
- en: math conventions. *See* programming and math conventions
  prefs: []
  type: TYPE_NORMAL
- en: mathematical notation, [18](c02.xhtml#Page_18)–[22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: attribute characters, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: Boolean notation, [18](c02.xhtml#Page_18)–[20](c02.xhtml#Page_20), [19](c02.xhtml#Page_19)*t*
  prefs: []
  type: TYPE_NORMAL
- en: Greek letters and functions, [22](c02.xhtml#Page_22), [22](c02.xhtml#Page_22)*t*
  prefs: []
  type: TYPE_NORMAL
- en: overloaded symbols, [18](c02.xhtml#Page_18)*f*
  prefs: []
  type: TYPE_NORMAL
- en: set notation, [20](c02.xhtml#Page_20)–[22](c02.xhtml#Page_22), [21](c02.xhtml#Page_21)*t*
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib library, [32](c03.xhtml#Page_32)–[34](c03.xhtml#Page_34)
  prefs: []
  type: TYPE_NORMAL
- en: max-flow, min-cut theorem, [112](c06.xhtml#Page_112), [121](c06.xhtml#Page_121)–[122](c06.xhtml#Page_122)
  prefs: []
  type: TYPE_NORMAL
- en: maximal cliques, [40](c03.xhtml#Page_40), [77](c05.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: maximum area threshold, [219](c11.xhtml#Page_219)
  prefs: []
  type: TYPE_NORMAL
- en: '`max_iter` parameter, [81](c05.xhtml#Page_81)'
  prefs: []
  type: TYPE_NORMAL
- en: MCCs (mobile country codes), [146](c08.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: media access control (MAC) addresses, [48](c04.xhtml#Page_48)–[50](c04.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: membership rules, [20](c02.xhtml#Page_20), [21](c02.xhtml#Page_21)*t*
  prefs: []
  type: TYPE_NORMAL
- en: meshes, [218](c11.xhtml#Page_218), [220](c11.xhtml#Page_220), [220](c11.xhtml#Page_220)*f*,
    [225](c11.xhtml#Page_225)–[229](c11.xhtml#Page_229), [225](c11.xhtml#Page_225)*f*,
    [229](c11.xhtml#Page_229)*f*
  prefs: []
  type: TYPE_NORMAL
- en: metric space, [163](c09.xhtml#Page_163)–[164](c09.xhtml#Page_164), [167](c09.xhtml#Page_167)
  prefs: []
  type: TYPE_NORMAL
- en: MI (mutual information) classification, [196](c10.xhtml#Page_196)–[197](c10.xhtml#Page_197)
  prefs: []
  type: TYPE_NORMAL
- en: microservices, [261](c13.xhtml#Page_261)–[264](c13.xhtml#Page_264), [261](c13.xhtml#Page_261)*f*
  prefs: []
  type: TYPE_NORMAL
- en: Milgram, Stanley, [68](c05.xhtml#Page_68)
  prefs: []
  type: TYPE_NORMAL
- en: '`minimum_cut` function, [122](c06.xhtml#Page_122)'
  prefs: []
  type: TYPE_NORMAL
- en: minimum viable product (MVP), [210](c11.xhtml#Page_210), [257](c13.xhtml#Page_257)
  prefs: []
  type: TYPE_NORMAL
- en: '`min_samples_leaf` parameter, [201](c10.xhtml#Page_201)'
  prefs: []
  type: TYPE_NORMAL
- en: '`min_samples_split` parameter, [201](c10.xhtml#Page_201)'
  prefs: []
  type: TYPE_NORMAL
- en: ML (machine learning), [18](c02.xhtml#Page_18), [176](c10.xhtml#Page_176)–[204](c10.xhtml#Page_204)
  prefs: []
  type: TYPE_NORMAL
- en: mobile country codes (MCCs), [146](c08.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: mobile network codes (MNCs), [146](c08.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: model persistence, [203](c10.xhtml#Page_203)–[204](c10.xhtml#Page_204)
  prefs: []
  type: TYPE_NORMAL
- en: model training, [198](c10.xhtml#Page_198)–[203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: establishing baseline, [199](c10.xhtml#Page_199)–[200](c10.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: random forest, [201](c10.xhtml#Page_201)–[202](c10.xhtml#Page_202)
  prefs: []
  type: TYPE_NORMAL
- en: splitting data, [199](c10.xhtml#Page_199)
  prefs: []
  type: TYPE_NORMAL
- en: testing holdout images, [202](c10.xhtml#Page_202)–[203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: monetization, [258](c13.xhtml#Page_258)–[259](c13.xhtml#Page_259), [263](c13.xhtml#Page_263)–[266](c13.xhtml#Page_266)
  prefs: []
  type: TYPE_NORMAL
- en: Monte Carlo simulations, [91](c06.xhtml#Page_91)–[125](c06.xhtml#Page_125)
  prefs: []
  type: TYPE_NORMAL
- en: information flow game, [110](c06.xhtml#Page_110)–[124](c06.xhtml#Page_124)
  prefs: []
  type: TYPE_NORMAL
- en: overview of, [92](c06.xhtml#Page_92)–[93](c06.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: proof of concept, [109](c06.xhtml#Page_109)–[124](c06.xhtml#Page_124)
  prefs: []
  type: TYPE_NORMAL
- en: random walks and, [95](c06.xhtml#Page_95)–[97](c06.xhtml#Page_97), [96](c06.xhtml#Page_96)*f*,
    [99](c06.xhtml#Page_99)*f*
  prefs: []
  type: TYPE_NORMAL
- en: simulations, defined, [92](c06.xhtml#Page_92)
  prefs: []
  type: TYPE_NORMAL
- en: social network simulation, [100](c06.xhtml#Page_100)–[109](c06.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: most influenced users, [i](f01.xhtml#Page_i)dentifying, [78](c05.xhtml#Page_78)–[79](c05.xhtml#Page_79),
    [79](c05.xhtml#Page_79)*f*
  prefs: []
  type: TYPE_NORMAL
- en: most influential users, [i](f01.xhtml#Page_i)dentifying, [76](c05.xhtml#Page_76)–[78](c05.xhtml#Page_78),
    [78](c05.xhtml#Page_78)*f*
  prefs: []
  type: TYPE_NORMAL
- en: '`mp_agp_floorplan` function, [245](c12.xhtml#Page_245)'
  prefs: []
  type: TYPE_NORMAL
- en: '`mp_agp_solver` function, [244](c12.xhtml#Page_244)'
  prefs: []
  type: TYPE_NORMAL
- en: '`mp_solve_floors` function, [244](c12.xhtml#Page_244)'
  prefs: []
  type: TYPE_NORMAL
- en: multiclass classification, [179](c10.xhtml#Page_179)
  prefs: []
  type: TYPE_NORMAL
- en: '`MultiDiGraph` objects, [38](c03.xhtml#Page_38), [42](c03.xhtml#Page_42), [42](c03.xhtml#Page_42)*f*,
    [49](c04.xhtml#Page_49)–[50](c04.xhtml#Page_50), [53](c04.xhtml#Page_53), [58](c04.xhtml#Page_58),
    [62](c04.xhtml#Page_62)'
  prefs: []
  type: TYPE_NORMAL
- en: multiprocessing (processor parallelism), [243](c12.xhtml#Page_243)–[245](c12.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: mutual information (MI) classification, [196](c10.xhtml#Page_196)–[197](c10.xhtml#Page_197)
  prefs: []
  type: TYPE_NORMAL
- en: MVP (minimum viable product), [210](c11.xhtml#Page_210), [257](c13.xhtml#Page_257)
  prefs: []
  type: TYPE_NORMAL
- en: '**N**'
  prefs: []
  type: TYPE_NORMAL
- en: '`names` parameter, [167](c09.xhtml#Page_167)'
  prefs: []
  type: TYPE_NORMAL
- en: neighbors, [31](c03.xhtml#Page_31), [57](c04.xhtml#Page_57)–[61](c04.xhtml#Page_61),
    [58](c04.xhtml#Page_58)*f*
  prefs: []
  type: TYPE_NORMAL
- en: nested objects, [70](c05.xhtml#Page_70), [251](c12.xhtml#Page_251)
  prefs: []
  type: TYPE_NORMAL
- en: '`n_estimators` parameter, [201](c10.xhtml#Page_201)'
  prefs: []
  type: TYPE_NORMAL
- en: NetGear Ocuity cameras, [229](c11.xhtml#Page_229)
  prefs: []
  type: TYPE_NORMAL
- en: '`net_graph` objects, [50](c04.xhtml#Page_50), [58](c04.xhtml#Page_58), [60](c04.xhtml#Page_60)'
  prefs: []
  type: TYPE_NORMAL
- en: network analysis graphs, [45](c04.xhtml#Page_45)–[65](c04.xhtml#Page_65)
  prefs: []
  type: TYPE_NORMAL
- en: building, [47](c04.xhtml#Page_47)–[51](c04.xhtml#Page_51), [51](c04.xhtml#Page_51)*f*
  prefs: []
  type: TYPE_NORMAL
- en: centrality, [52](c04.xhtml#Page_52)–[61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: examining neighbors, [57](c04.xhtml#Page_57)–[61](c04.xhtml#Page_61), [58](c04.xhtml#Page_58)*f*
  prefs: []
  type: TYPE_NORMAL
- en: identifying unusual levels of traffic, [54](c04.xhtml#Page_54)–[57](c04.xhtml#Page_57),
    [56](c04.xhtml#Page_56)*f*
  prefs: []
  type: TYPE_NORMAL
- en: port numbers subgraphs, [52](c04.xhtml#Page_52)–[54](c04.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: identifying data for, [48](c04.xhtml#Page_48)–[49](c04.xhtml#Page_49)
  prefs: []
  type: TYPE_NORMAL
- en: network topology, [46](c04.xhtml#Page_46), [46](c04.xhtml#Page_46)*f*
  prefs: []
  type: TYPE_NORMAL
- en: packet analysis, [46](c04.xhtml#Page_46)–[51](c04.xhtml#Page_51), [51](c04.xhtml#Page_51)*f*
  prefs: []
  type: TYPE_NORMAL
- en: proof of concept, [61](c04.xhtml#Page_61)–[64](c04.xhtml#Page_64)
  prefs: []
  type: TYPE_NORMAL
- en: network interface cards (NICs), [48](c04.xhtml#Page_48)
  prefs: []
  type: TYPE_NORMAL
- en: NetworkX library
  prefs: []
  type: TYPE_NORMAL
- en: art gallery problem application, [236](c12.xhtml#Page_236)
  prefs: []
  type: TYPE_NORMAL
- en: betweenness centrality, [36](c03.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: centrality by protocol, [52](c04.xhtml#Page_52)–[53](c04.xhtml#Page_53), [58](c04.xhtml#Page_58)–[59](c04.xhtml#Page_59)
  prefs: []
  type: TYPE_NORMAL
- en: creating graphs in, [32](c03.xhtml#Page_32)–[34](c03.xhtml#Page_34), [34](c03.xhtml#Page_34)*f*
  prefs: []
  type: TYPE_NORMAL
- en: degree centrality, [38](c03.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: greedy coloring, [212](c11.xhtml#Page_212), [214](c11.xhtml#Page_214)–[215](c11.xhtml#Page_215)
  prefs: []
  type: TYPE_NORMAL
- en: network analysis graphs, [62](c04.xhtml#Page_62)–[63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: packet analysis, [50](c04.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: social network analysis, [70](c05.xhtml#Page_70), [75](c05.xhtml#Page_75), [80](c05.xhtml#Page_80)–[81](c05.xhtml#Page_81),
    [86](c05.xhtml#Page_86)–[88](c05.xhtml#Page_88)
  prefs: []
  type: TYPE_NORMAL
- en: social network evolution, [93](c06.xhtml#Page_93), [95](c06.xhtml#Page_95),
    [109](c06.xhtml#Page_109), [118](c06.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: NICs (network interface cards), [48](c04.xhtml#Page_48)
  prefs: []
  type: TYPE_NORMAL
- en: node ancestry, [83](c05.xhtml#Page_83)–[87](c05.xhtml#Page_87), [84](c05.xhtml#Page_84)*f*,
    [86](c05.xhtml#Page_86)*f*
  prefs: []
  type: TYPE_NORMAL
- en: node attributes, [32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: nodes. *See* vertices
  prefs: []
  type: TYPE_NORMAL
- en: Nominatim, [164](c09.xhtml#Page_164)–[165](c09.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: '`non_edges` function, [118](c06.xhtml#Page_118)'
  prefs: []
  type: TYPE_NORMAL
- en: nonsimple graphs (pseudographs), [32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: '`normalized` argument, [36](c03.xhtml#Page_36)'
  prefs: []
  type: TYPE_NORMAL
- en: Npcap library, [47](c04.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: '`number_of_cliques` function, [40](c03.xhtml#Page_40)'
  prefs: []
  type: TYPE_NORMAL
- en: NumPy library, [xxiii](f07.xhtml#Page_xxii), [55](c04.xhtml#Page_55)–[56](c04.xhtml#Page_56),
    [80](c05.xhtml#Page_80), [103](c06.xhtml#Page_103), [170](c09.xhtml#Page_170),
    [186](c10.xhtml#Page_186)
  prefs: []
  type: TYPE_NORMAL
- en: '**O**'
  prefs: []
  type: TYPE_NORMAL
- en: obfuscation, [264](c13.xhtml#Page_264)–[265](c13.xhtml#Page_265)
  prefs: []
  type: TYPE_NORMAL
- en: '`Obstacle` class, [235](c12.xhtml#Page_235)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Obstacle` objects, [251](c12.xhtml#Page_251), [253](c12.xhtml#Page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: '`obstacles` attribute, [253](c12.xhtml#Page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: '`only_poly1` variable, [155](c08.xhtml#Page_155)'
  prefs: []
  type: TYPE_NORMAL
- en: OpenCellID, [141](c08.xhtml#Page_141)–[160](c08.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: API structure, [145](c08.xhtml#Page_145)–[148](c08.xhtml#Page_148), [147](c08.xhtml#Page_147)*f*
  prefs: []
  type: TYPE_NORMAL
- en: device tracking application, [148](c08.xhtml#Page_148)–[159](c08.xhtml#Page_159),
    [148](c08.xhtml#Page_148)*f*
  prefs: []
  type: TYPE_NORMAL
- en: geodesic polygons, [150](c08.xhtml#Page_150)–[153](c08.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: intersections, [153](c08.xhtml#Page_153)–[157](c08.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: mapping and comparing results, [157](c08.xhtml#Page_157)–[159](c08.xhtml#Page_159),
    [158](c08.xhtml#Page_158)*f*
  prefs: []
  type: TYPE_NORMAL
- en: reducing search area, [159](c08.xhtml#Page_159)
  prefs: []
  type: TYPE_NORMAL
- en: tower locations, [149](c08.xhtml#Page_149)–[150](c08.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: network interface data, [142](c08.xhtml#Page_142)–[144](c08.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: proof of concept, [148](c08.xhtml#Page_148)–[159](c08.xhtml#Page_159)
  prefs: []
  type: TYPE_NORMAL
- en: open source delivery, [265](c13.xhtml#Page_265)–[266](c13.xhtml#Page_266)
  prefs: []
  type: TYPE_NORMAL
- en: open source intelligence (OSINT), [29](c03.xhtml#Page_29)–[30](c03.xhtml#Page_30),
    [30](c03.xhtml#Page_30)*f*
  prefs: []
  type: TYPE_NORMAL
- en: OpenStreetMap, [163](c09.xhtml#Page_163)–[164](c09.xhtml#Page_164), [168](c09.xhtml#Page_168)
  prefs: []
  type: TYPE_NORMAL
- en: optparse library, [62](c04.xhtml#Page_62)–[63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: '`osm` function, [168](c09.xhtml#Page_168)'
  prefs: []
  type: TYPE_NORMAL
- en: out-degree centrality, [37](c03.xhtml#Page_37)–[38](c03.xhtml#Page_38), [51](c04.xhtml#Page_51)–[54](c04.xhtml#Page_54),
    [57](c04.xhtml#Page_57)–[59](c04.xhtml#Page_59), [77](c05.xhtml#Page_77), [85](c05.xhtml#Page_85),
    [101](c06.xhtml#Page_101)–[103](c06.xhtml#Page_103), [113](c06.xhtml#Page_113),
    [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: '`out_degree` function, [53](c04.xhtml#Page_53)'
  prefs: []
  type: TYPE_NORMAL
- en: '`out_edges` function, [59](c04.xhtml#Page_59)'
  prefs: []
  type: TYPE_NORMAL
- en: outliers, [55](c04.xhtml#Page_55)–[56](c04.xhtml#Page_56), [60](c04.xhtml#Page_60),
    [181](c10.xhtml#Page_181)
  prefs: []
  type: TYPE_NORMAL
- en: '`overlaps` function, [138](c07.xhtml#Page_138)'
  prefs: []
  type: TYPE_NORMAL
- en: overloaded symbols, [18](c02.xhtml#Page_18), [18](c02.xhtml#Page_18)*f*
  prefs: []
  type: TYPE_NORMAL
- en: '**P**'
  prefs: []
  type: TYPE_NORMAL
- en: packaging, [259](c13.xhtml#Page_259)–[260](c13.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: packet analysis, [46](c04.xhtml#Page_46)–[51](c04.xhtml#Page_51), [51](c04.xhtml#Page_51)*f*
  prefs: []
  type: TYPE_NORMAL
- en: packet capture (pcap) files, [47](c04.xhtml#Page_47)–[48](c04.xhtml#Page_48),
    [50](c04.xhtml#Page_50), [61](c04.xhtml#Page_61)–[63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: '`packet` objects, [50](c04.xhtml#Page_50)'
  prefs: []
  type: TYPE_NORMAL
- en: packets, defined, [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: '`packets` variable, [50](c04.xhtml#Page_50)'
  prefs: []
  type: TYPE_NORMAL
- en: Pålsson, Mikael, [213](c11.xhtml#Page_213)
  prefs: []
  type: TYPE_NORMAL
- en: pandas library, [5](c01.xhtml#Page_5), [69](c05.xhtml#Page_69)–[72](c05.xhtml#Page_72),
    [81](c05.xhtml#Page_81), [88](c05.xhtml#Page_88), [150](c08.xhtml#Page_150), [167](c09.xhtml#Page_167)–[169](c09.xhtml#Page_169),
    [191](c10.xhtml#Page_191)–[192](c10.xhtml#Page_192)
  prefs: []
  type: TYPE_NORMAL
- en: parallel development, [263](c13.xhtml#Page_263)–[264](c13.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: parallelism
  prefs: []
  type: TYPE_NORMAL
- en: hardware parallelism, [263](c13.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: process parallelism, [241](c12.xhtml#Page_241)–[245](c12.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: processor parallelism, [243](c12.xhtml#Page_243)–[245](c12.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: threading parallelism, [241](c12.xhtml#Page_241)–[243](c12.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: '`partial` function, [151](c08.xhtml#Page_151)–[152](c08.xhtml#Page_152)'
  prefs: []
  type: TYPE_NORMAL
- en: partial functions, [151](c08.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: '`partition` function, [155](c08.xhtml#Page_155)'
  prefs: []
  type: TYPE_NORMAL
- en: path lengths
  prefs: []
  type: TYPE_NORMAL
- en: lowest common ancestor, [85](c05.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: returning list of average, [117](c06.xhtml#Page_117)–[119](c06.xhtml#Page_119)
  prefs: []
  type: TYPE_NORMAL
- en: self-loops, [32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: small-world phenomenon, [68](c05.xhtml#Page_68)
  prefs: []
  type: TYPE_NORMAL
- en: paths, defined, [31](c03.xhtml#Page_31)
  prefs: []
  type: TYPE_NORMAL
- en: PBX (Private Branch Exchange), [54](c04.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: pcap (packet capture) files, [47](c04.xhtml#Page_47)–[48](c04.xhtml#Page_48),
    [50](c04.xhtml#Page_50), [61](c04.xhtml#Page_61)–[63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: '`pcap_graph` function, [62](c04.xhtml#Page_62)'
  prefs: []
  type: TYPE_NORMAL
- en: perimeter length, [137](c07.xhtml#Page_137)–[138](c07.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: personally identifiable information, [178](c10.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: Phil’s Game Utilities (PGU) library, [250](c12.xhtml#Page_250)
  prefs: []
  type: TYPE_NORMAL
- en: physical penetration testing, [212](c11.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: pickled objects, [203](c10.xhtml#Page_203)–[204](c10.xhtml#Page_204)
  prefs: []
  type: TYPE_NORMAL
- en: pickle library, [203](c10.xhtml#Page_203)–[204](c10.xhtml#Page_204), [251](c12.xhtml#Page_251)
  prefs: []
  type: TYPE_NORMAL
- en: Pinellas County Sheriff’s Office, [177](c10.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: pip tool, [10](c01.xhtml#Page_10)–[12](c01.xhtml#Page_12), [258](c13.xhtml#Page_258)
  prefs: []
  type: TYPE_NORMAL
- en: planar straight-line graphs, [216](c11.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: '`player_one_turn` function, [115](c06.xhtml#Page_115)–[116](c06.xhtml#Page_116)'
  prefs: []
  type: TYPE_NORMAL
- en: png library, [236](c12.xhtml#Page_236)
  prefs: []
  type: TYPE_NORMAL
- en: points, defined, [128](c07.xhtml#Page_128)–[129](c07.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: '`Polygon` class, [129](c07.xhtml#Page_129)'
  prefs: []
  type: TYPE_NORMAL
- en: '`polygon_geojson` parameter, [165](c09.xhtml#Page_165)'
  prefs: []
  type: TYPE_NORMAL
- en: polygons, [129](c07.xhtml#Page_129)–[132](c07.xhtml#Page_132), [130](c07.xhtml#Page_130)*f*,
    [131](c07.xhtml#Page_131)*f*
  prefs: []
  type: TYPE_NORMAL
- en: complex, [130](c07.xhtml#Page_130), [132](c07.xhtml#Page_132), [134](c07.xhtml#Page_134)–[135](c07.xhtml#Page_135),
    [138](c07.xhtml#Page_138), [214](c11.xhtml#Page_214), [223](c11.xhtml#Page_223)–[225](c11.xhtml#Page_225),
    [224](c11.xhtml#Page_224)*f*
  prefs: []
  type: TYPE_NORMAL
- en: concave, [130](c07.xhtml#Page_130), [130](c07.xhtml#Page_130)*f*
  prefs: []
  type: TYPE_NORMAL
- en: converting `Point` objects to geodesic polygons, [150](c08.xhtml#Page_150)–[153](c08.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: convex, [130](c07.xhtml#Page_130), [130](c07.xhtml#Page_130)*f*, [132](c07.xhtml#Page_132),
    [136](c07.xhtml#Page_136), [187](c10.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: irregular, [130](c07.xhtml#Page_130), [133](c07.xhtml#Page_133)–[136](c07.xhtml#Page_136)
  prefs: []
  type: TYPE_NORMAL
- en: linear ring, [130](c07.xhtml#Page_130)–[131](c07.xhtml#Page_131), [131](c07.xhtml#Page_131)*f*,
    [223](c11.xhtml#Page_223)–[225](c11.xhtml#Page_225), [224](c11.xhtml#Page_224)*f*
  prefs: []
  type: TYPE_NORMAL
- en: orthogonal, [213](c11.xhtml#Page_213)–[214](c11.xhtml#Page_214)
  prefs: []
  type: TYPE_NORMAL
- en: regular, [130](c07.xhtml#Page_130)
  prefs: []
  type: TYPE_NORMAL
- en: simple, [130](c07.xhtml#Page_130)–[131](c07.xhtml#Page_131), [134](c07.xhtml#Page_134)*f*,
    [210](c11.xhtml#Page_210)
  prefs: []
  type: TYPE_NORMAL
- en: '`poly_shapes` variable, [170](c09.xhtml#Page_170), [172](c09.xhtml#Page_172)'
  prefs: []
  type: TYPE_NORMAL
- en: polytrees, [85](c05.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: population mean, [120](c06.xhtml#Page_120), [123](c06.xhtml#Page_123)–[124](c06.xhtml#Page_124)
  prefs: []
  type: TYPE_NORMAL
- en: port numbers subgraphs, [52](c04.xhtml#Page_52)–[54](c04.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: '`post_df` objects, [71](c05.xhtml#Page_71)–[73](c05.xhtml#Page_73), [76](c05.xhtml#Page_76),
    [107](c06.xhtml#Page_107)'
  prefs: []
  type: TYPE_NORMAL
- en: potential information, [75](c05.xhtml#Page_75)–[76](c05.xhtml#Page_76), [78](c05.xhtml#Page_78)
  prefs: []
  type: TYPE_NORMAL
- en: '`predict` function, [200](c10.xhtml#Page_200), [202](c10.xhtml#Page_202)'
  prefs: []
  type: TYPE_NORMAL
- en: predictive analytics, [91](c06.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: '`predict_proba` function, [203](c10.xhtml#Page_203)'
  prefs: []
  type: TYPE_NORMAL
- en: preferential attachment, [68](c05.xhtml#Page_68), [113](c06.xhtml#Page_113)–[114](c06.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: preventative security analysis, [90](c05.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: Private Branch Exchange (PBX), [54](c04.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: '`process_jpg` function, [184](c10.xhtml#Page_184), [186](c10.xhtml#Page_186)'
  prefs: []
  type: TYPE_NORMAL
- en: processor parallelism (multiprocessing), [243](c12.xhtml#Page_243)–[245](c12.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: process parallelism, [241](c12.xhtml#Page_241)–[245](c12.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: processor parallelism, [243](c12.xhtml#Page_243)–[245](c12.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: threading parallelism, [241](c12.xhtml#Page_241)–[243](c12.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: programming and math conventions, [13](c02.xhtml#Page_13)–[23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: mathematical notation, [18](c02.xhtml#Page_18)–[22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: attribute characters, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: Boolean notation, [18](c02.xhtml#Page_18)–[20](c02.xhtml#Page_20), [19](c02.xhtml#Page_19)*t*
  prefs: []
  type: TYPE_NORMAL
- en: Greek letters and functions, [22](c02.xhtml#Page_22), [22](c02.xhtml#Page_22)*t*
  prefs: []
  type: TYPE_NORMAL
- en: overloaded symbols, [18](c02.xhtml#Page_18), [18](c02.xhtml#Page_18)*f*
  prefs: []
  type: TYPE_NORMAL
- en: set notation, [20](c02.xhtml#Page_20)–[22](c02.xhtml#Page_22), [21](c02.xhtml#Page_21)*t*
  prefs: []
  type: TYPE_NORMAL
- en: syntactical constructs, [13](c02.xhtml#Page_13)–[18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: dictionary comprehensions, [15](c02.xhtml#Page_15)–[17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: list comprehensions, [14](c02.xhtml#Page_14)–[15](c02.xhtml#Page_15)
  prefs: []
  type: TYPE_NORMAL
- en: zipping and unpacking, [17](c02.xhtml#Page_17)–[18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: '`Proj` class, [151](c08.xhtml#Page_151)–[152](c08.xhtml#Page_152)'
  prefs: []
  type: TYPE_NORMAL
- en: project managers, [264](c13.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: proof of concept, [ix](f07.xhtml#Page_xvii)
  prefs: []
  type: TYPE_NORMAL
- en: facial recognition, [188](c10.xhtml#Page_188)–[204](c10.xhtml#Page_204)
  prefs: []
  type: TYPE_NORMAL
- en: location triangulation, [148](c08.xhtml#Page_148)–[159](c08.xhtml#Page_159)
  prefs: []
  type: TYPE_NORMAL
- en: minimum viable product vs., [210](c11.xhtml#Page_210)
  prefs: []
  type: TYPE_NORMAL
- en: network analysis graphs, [61](c04.xhtml#Page_61)–[64](c04.xhtml#Page_64)
  prefs: []
  type: TYPE_NORMAL
- en: social network analysis, [87](c05.xhtml#Page_87)–[88](c05.xhtml#Page_88)
  prefs: []
  type: TYPE_NORMAL
- en: social network evolution, [109](c06.xhtml#Page_109)–[124](c06.xhtml#Page_124)
  prefs: []
  type: TYPE_NORMAL
- en: Voronoi diagrams, [163](c09.xhtml#Page_163)–[173](c09.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: '`protocol_subgraph` function, [52](c04.xhtml#Page_52)–[55](c04.xhtml#Page_55)'
  prefs: []
  type: TYPE_NORMAL
- en: protocol subgraphs, [54](c04.xhtml#Page_54)–[56](c04.xhtml#Page_56), [56](c04.xhtml#Page_56)*f*
  prefs: []
  type: TYPE_NORMAL
- en: proxy networks, [35](c03.xhtml#Page_35)–[36](c03.xhtml#Page_36), [35](c03.xhtml#Page_35)*f*
  prefs: []
  type: TYPE_NORMAL
- en: pseudographs (nonsimple graphs), [32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: purity, [181](c10.xhtml#Page_181)
  prefs: []
  type: TYPE_NORMAL
- en: PyArmor, [264](c13.xhtml#Page_264)–[265](c13.xhtml#Page_265)
  prefs: []
  type: TYPE_NORMAL
- en: PyGame library, [236](c12.xhtml#Page_236)–[240](c12.xhtml#Page_240), [246](c12.xhtml#Page_246)–[250](c12.xhtml#Page_250)
  prefs: []
  type: TYPE_NORMAL
- en: events, [237](c12.xhtml#Page_237)–[239](c12.xhtml#Page_239)
  prefs: []
  type: TYPE_NORMAL
- en: graphic elements, [246](c12.xhtml#Page_246)–[247](c12.xhtml#Page_247), [247](c12.xhtml#Page_247)*f*
  prefs: []
  type: TYPE_NORMAL
- en: PyInstaller, [259](c13.xhtml#Page_259)–[260](c13.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: PyPi, [258](c13.xhtml#Page_258)–[259](c13.xhtml#Page_259), [266](c13.xhtml#Page_266)
  prefs: []
  type: TYPE_NORMAL
- en: Pyplot library, [32](c03.xhtml#Page_32)–[33](c03.xhtml#Page_33)
  prefs: []
  type: TYPE_NORMAL
- en: pyproj library, [150](c08.xhtml#Page_150)–[152](c08.xhtml#Page_152)
  prefs: []
  type: TYPE_NORMAL
- en: Pythagorean theorem, [18](c02.xhtml#Page_18), [18](c02.xhtml#Page_18)*f*, [164](c09.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: Python
  prefs: []
  type: TYPE_NORMAL
- en: environment setup, [3](c01.xhtml#Page_3)–[12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: hardware requirements, [3](c01.xhtml#Page_3)
  prefs: []
  type: TYPE_NORMAL
- en: installing Anaconda, [4](c01.xhtml#Page_4)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebooks, [11](c01.xhtml#Page_11)–[12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder IDE, [10](c01.xhtml#Page_10)–[11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: virtual environment setup, [9](c01.xhtml#Page_9)
  prefs: []
  type: TYPE_NORMAL
- en: virtualenv package manager, [10](c01.xhtml#Page_10)–[11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: interpreters, packaging with, [259](c13.xhtml#Page_259)–[260](c13.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: reasons for using, [xxii](f07.xhtml#Page_xx)–[xxiii](f07.xhtml#Page_xxi)
  prefs: []
  type: TYPE_NORMAL
- en: shortcomings of, [xxiii](f07.xhtml#Page_xxi)
  prefs: []
  type: TYPE_NORMAL
- en: '**Q**'
  prefs: []
  type: TYPE_NORMAL
- en: '`Queue` class, [244](c12.xhtml#Page_244)'
  prefs: []
  type: TYPE_NORMAL
- en: '**R**'
  prefs: []
  type: TYPE_NORMAL
- en: '`-r` (`--raw-out`) parameter, [63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: RA (resource allocation), [108](c06.xhtml#Page_108)–[109](c06.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: '`randint` function, [201](c10.xhtml#Page_201)'
  prefs: []
  type: TYPE_NORMAL
- en: '`RandomForestClassifier` class, [201](c10.xhtml#Page_201)'
  prefs: []
  type: TYPE_NORMAL
- en: '`RandomForestClassifier` objects, [202](c10.xhtml#Page_202)–[203](c10.xhtml#Page_203)'
  prefs: []
  type: TYPE_NORMAL
- en: random forests, [179](c10.xhtml#Page_179), [182](c10.xhtml#Page_182), [201](c10.xhtml#Page_201)–[203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: '`random_layout` function, [51](c04.xhtml#Page_51)'
  prefs: []
  type: TYPE_NORMAL
- en: random walks, [95](c06.xhtml#Page_95)–[104](c06.xhtml#Page_104), [117](c06.xhtml#Page_117)–[119](c06.xhtml#Page_119),
    [125](c06.xhtml#Page_125)
  prefs: []
  type: TYPE_NORMAL
- en: biased, [97](c06.xhtml#Page_97), [100](c06.xhtml#Page_100), [104](c06.xhtml#Page_104),
    [111](c06.xhtml#Page_111)
  prefs: []
  type: TYPE_NORMAL
- en: Monte Carlo simulations and, [97](c06.xhtml#Page_97)–[99](c06.xhtml#Page_99),
    [99](c06.xhtml#Page_99)*f*
  prefs: []
  type: TYPE_NORMAL
- en: social network simulation, [100](c06.xhtml#Page_100)–[104](c06.xhtml#Page_104)
  prefs: []
  type: TYPE_NORMAL
- en: state machines and, [96](c06.xhtml#Page_96)–[97](c06.xhtml#Page_97), [96](c06.xhtml#Page_96)*f*,
    [99](c06.xhtml#Page_99)*f*
  prefs: []
  type: TYPE_NORMAL
- en: uniformly, [96](c06.xhtml#Page_96)–[97](c06.xhtml#Page_97), [96](c06.xhtml#Page_96)*f*,
    [101](c06.xhtml#Page_101)–[104](c06.xhtml#Page_104), [117](c06.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: '`range` function, [16](c02.xhtml#Page_16)–[17](c02.xhtml#Page_17), [22](c02.xhtml#Page_22)'
  prefs: []
  type: TYPE_NORMAL
- en: '`RangeIndex` property, [71](c05.xhtml#Page_71)'
  prefs: []
  type: TYPE_NORMAL
- en: ratios
  prefs: []
  type: TYPE_NORMAL
- en: correlation ratio, [197](c10.xhtml#Page_197)–[198](c10.xhtml#Page_198)
  prefs: []
  type: TYPE_NORMAL
- en: facial recognition, [190](c10.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: information exchange ratio, [59](c04.xhtml#Page_59)–[61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: '`rdpcap` function, [50](c04.xhtml#Page_50), [62](c04.xhtml#Page_62)'
  prefs: []
  type: TYPE_NORMAL
- en: '`read_csv` function, [167](c09.xhtml#Page_167), [192](c10.xhtml#Page_192)'
  prefs: []
  type: TYPE_NORMAL
- en: '`read_weighted_edgelist` function, [63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: recursive functions, [31](c03.xhtml#Page_31)
  prefs: []
  type: TYPE_NORMAL
- en: Red Hat, [266](c13.xhtml#Page_266)
  prefs: []
  type: TYPE_NORMAL
- en: regression problems, [176](c10.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: repeated-sampling algorithms, [98](c06.xhtml#Page_98)
  prefs: []
  type: TYPE_NORMAL
- en: '`representative_point` function, [223](c11.xhtml#Page_223)'
  prefs: []
  type: TYPE_NORMAL
- en: residual information (RI) score, [75](c05.xhtml#Page_75)–[76](c05.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: '`resize` function, [184](c10.xhtml#Page_184)'
  prefs: []
  type: TYPE_NORMAL
- en: resource allocation (RA), [108](c06.xhtml#Page_108)–[109](c06.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: resource planning problems. *See* art gallery problem application; emergency
    service planning scenario
  prefs: []
  type: TYPE_NORMAL
- en: '`return_results` parameter, [195](c10.xhtml#Page_195)'
  prefs: []
  type: TYPE_NORMAL
- en: '`reverse` option, [53](c04.xhtml#Page_53)'
  prefs: []
  type: TYPE_NORMAL
- en: '`reverse` parameter, [59](c04.xhtml#Page_59), [137](c07.xhtml#Page_137)'
  prefs: []
  type: TYPE_NORMAL
- en: RI (residual information) score, [75](c05.xhtml#Page_75)–[76](c05.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: '`right_click` function, [241](c12.xhtml#Page_241)'
  prefs: []
  type: TYPE_NORMAL
- en: rings. *See* linear ring polygons
  prefs: []
  type: TYPE_NORMAL
- en: '`Room` class, [249](c12.xhtml#Page_249), [251](c12.xhtml#Page_251), [253](c12.xhtml#Page_253)–[254](c12.xhtml#Page_254)'
  prefs: []
  type: TYPE_NORMAL
- en: root node, [84](c05.xhtml#Page_84)–[85](c05.xhtml#Page_85), [180](c10.xhtml#Page_180)–[181](c10.xhtml#Page_181)
  prefs: []
  type: TYPE_NORMAL
- en: '`row_to_str` function, [167](c09.xhtml#Page_167)'
  prefs: []
  type: TYPE_NORMAL
- en: '`r_posts` objects, [76](c05.xhtml#Page_76)'
  prefs: []
  type: TYPE_NORMAL
- en: '**S**'
  prefs: []
  type: TYPE_NORMAL
- en: '`-s` (`--graph-out`) option, [63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: sample mean (empirical mean), [93](c06.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: sample size determination, [98](c06.xhtml#Page_98)
  prefs: []
  type: TYPE_NORMAL
- en: Saved state, [235](c12.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: '`save_file` function, [227](c11.xhtml#Page_227)'
  prefs: []
  type: TYPE_NORMAL
- en: '`save_graph` function, [62](c04.xhtml#Page_62)'
  prefs: []
  type: TYPE_NORMAL
- en: '`save_packet` function, [62](c04.xhtml#Page_62)'
  prefs: []
  type: TYPE_NORMAL
- en: '`save_project` function, [227](c11.xhtml#Page_227)–[228](c11.xhtml#Page_228)'
  prefs: []
  type: TYPE_NORMAL
- en: saving and reloading data, [251](c12.xhtml#Page_251)–[254](c12.xhtml#Page_254)
  prefs: []
  type: TYPE_NORMAL
- en: loading from JSON files, [252](c12.xhtml#Page_252)–[254](c12.xhtml#Page_254)
  prefs: []
  type: TYPE_NORMAL
- en: saving to dictionaries, [251](c12.xhtml#Page_251)–[252](c12.xhtml#Page_252)
  prefs: []
  type: TYPE_NORMAL
- en: scan codes, [239](c12.xhtml#Page_239)–[240](c12.xhtml#Page_240)
  prefs: []
  type: TYPE_NORMAL
- en: Scapy library, [47](c04.xhtml#Page_47), [50](c04.xhtml#Page_50), [62](c04.xhtml#Page_62)–[63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: scikit-learn, [xxiii](f07.xhtml#Page_xxi), [196](c10.xhtml#Page_196)–[197](c10.xhtml#Page_197),
    [199](c10.xhtml#Page_199)–[201](c10.xhtml#Page_201), [203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: SciPy library, [55](c04.xhtml#Page_55), [80](c05.xhtml#Page_80), [170](c09.xhtml#Page_170)
  prefs: []
  type: TYPE_NORMAL
- en: '`scored_neighbor_select` function, [106](c06.xhtml#Page_106)'
  prefs: []
  type: TYPE_NORMAL
- en: '`scores` parameter, [111](c06.xhtml#Page_111)'
  prefs: []
  type: TYPE_NORMAL
- en: '`screen` attribute, [249](c12.xhtml#Page_249)–[250](c12.xhtml#Page_250)'
  prefs: []
  type: TYPE_NORMAL
- en: '`seed` argument, [33](c03.xhtml#Page_33)–[34](c03.xhtml#Page_34)'
  prefs: []
  type: TYPE_NORMAL
- en: seeds. *See* generators
  prefs: []
  type: TYPE_NORMAL
- en: '`select_dtypes` function, [192](c10.xhtml#Page_192)'
  prefs: []
  type: TYPE_NORMAL
- en: self-looping, [31](c03.xhtml#Page_31)–[32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: '`Series` objects, [71](c05.xhtml#Page_71), [191](c10.xhtml#Page_191), [198](c10.xhtml#Page_198)'
  prefs: []
  type: TYPE_NORMAL
- en: '`setattr` function, [253](c12.xhtml#Page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: '`set_colorkey` function, [249](c12.xhtml#Page_249)'
  prefs: []
  type: TYPE_NORMAL
- en: '`set_file` method, [242](c12.xhtml#Page_242)'
  prefs: []
  type: TYPE_NORMAL
- en: set generator notation (SGN), [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: '`set_mode` function, [246](c12.xhtml#Page_246)'
  prefs: []
  type: TYPE_NORMAL
- en: set notation
  prefs: []
  type: TYPE_NORMAL
- en: overview of, [20](c02.xhtml#Page_20)–[22](c02.xhtml#Page_22), [21](c02.xhtml#Page_21)*t*
  prefs: []
  type: TYPE_NORMAL
- en: reserved sets, [21](c02.xhtml#Page_21), [21](c02.xhtml#Page_21)*t*
  prefs: []
  type: TYPE_NORMAL
- en: set generator notation, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: '`set_region_areas` function, [227](c11.xhtml#Page_227)'
  prefs: []
  type: TYPE_NORMAL
- en: setup scripts, [258](c13.xhtml#Page_258)–[259](c13.xhtml#Page_259)
  prefs: []
  type: TYPE_NORMAL
- en: setuptools library, [258](c13.xhtml#Page_258)
  prefs: []
  type: TYPE_NORMAL
- en: 7Zip, [252](c12.xhtml#Page_252)
  prefs: []
  type: TYPE_NORMAL
- en: SGN (set generator notation), [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: Shapely library
  prefs: []
  type: TYPE_NORMAL
- en: art gallery problem application, [216](c11.xhtml#Page_216), [219](c11.xhtml#Page_219),
    [222](c11.xhtml#Page_222)–[223](c11.xhtml#Page_223), [235](c12.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: computational geometry theory, [128](c07.xhtml#Page_128)–[129](c07.xhtml#Page_129),
    [131](c07.xhtml#Page_131)–[132](c07.xhtml#Page_132), [134](c07.xhtml#Page_134),
    [138](c07.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: emergency service planning scenario, [164](c09.xhtml#Page_164), [170](c09.xhtml#Page_170)
  prefs: []
  type: TYPE_NORMAL
- en: facial recognition, [183](c10.xhtml#Page_183), [188](c10.xhtml#Page_188), [190](c10.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: location triangulation, [144](c08.xhtml#Page_144), [148](c08.xhtml#Page_148)–[150](c08.xhtml#Page_150),
    [152](c08.xhtml#Page_152), [154](c08.xhtml#Page_154)
  prefs: []
  type: TYPE_NORMAL
- en: '`shape_to_np` function, [186](c10.xhtml#Page_186)'
  prefs: []
  type: TYPE_NORMAL
- en: shell layout, [58](c04.xhtml#Page_58), [58](c04.xhtml#Page_58)*f*
  prefs: []
  type: TYPE_NORMAL
- en: Shewchuk, Jonathan, [216](c11.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: '`shifted` variable, [239](c12.xhtml#Page_239), [241](c12.xhtml#Page_241)'
  prefs: []
  type: TYPE_NORMAL
- en: shoelace algorithm, [136](c07.xhtml#Page_136)
  prefs: []
  type: TYPE_NORMAL
- en: '`shortest_path_scores` function, [117](c06.xhtml#Page_117)–[119](c06.xhtml#Page_119)'
  prefs: []
  type: TYPE_NORMAL
- en: sides (edges), [i](f01.xhtml#Page_i)n polygons, [129](c07.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: signature detection, [47](c04.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: '`simple` function, [151](c08.xhtml#Page_151)'
  prefs: []
  type: TYPE_NORMAL
- en: simple graphs, [32](c03.xhtml#Page_32), [85](c05.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: single point of failure, [109](c06.xhtml#Page_109)–[110](c06.xhtml#Page_110)
  prefs: []
  type: TYPE_NORMAL
- en: sink node, [110](c06.xhtml#Page_110), [113](c06.xhtml#Page_113), [117](c06.xhtml#Page_117)–[119](c06.xhtml#Page_119),
    [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: six degrees of separation, [68](c05.xhtml#Page_68)
  prefs: []
  type: TYPE_NORMAL
- en: '`small_area` parameter, [157](c08.xhtml#Page_157)'
  prefs: []
  type: TYPE_NORMAL
- en: small-world experiments, [68](c05.xhtml#Page_68)
  prefs: []
  type: TYPE_NORMAL
- en: Snort, [48](c04.xhtml#Page_48)
  prefs: []
  type: TYPE_NORMAL
- en: Snow, John, [163](c09.xhtml#Page_163)
  prefs: []
  type: TYPE_NORMAL
- en: social network analysis (SNA), [67](c05.xhtml#Page_67)–[90](c05.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: cautions regarding, [89](c05.xhtml#Page_89)
  prefs: []
  type: TYPE_NORMAL
- en: converting data to graph, [69](c05.xhtml#Page_69)–[73](c05.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: building graphs, [72](c05.xhtml#Page_72)–[73](c05.xhtml#Page_73), [74](c05.xhtml#Page_74)*f*
  prefs: []
  type: TYPE_NORMAL
- en: examining data, [69](c05.xhtml#Page_69)
  prefs: []
  type: TYPE_NORMAL
- en: structuring data, [69](c05.xhtml#Page_69)–[72](c05.xhtml#Page_72)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [67](c05.xhtml#Page_67)
  prefs: []
  type: TYPE_NORMAL
- en: proof of concept, [87](c05.xhtml#Page_87)–[88](c05.xhtml#Page_88)
  prefs: []
  type: TYPE_NORMAL
- en: research questions, [74](c05.xhtml#Page_74)–[87](c05.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: cliques and most influential users, [76](c05.xhtml#Page_76)–[78](c05.xhtml#Page_78),
    [78](c05.xhtml#Page_78)*f*
  prefs: []
  type: TYPE_NORMAL
- en: information propagation, [74](c05.xhtml#Page_74)–[76](c05.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: most influenced users, [78](c05.xhtml#Page_78)–[79](c05.xhtml#Page_79), [79](c05.xhtml#Page_79)*f*
  prefs: []
  type: TYPE_NORMAL
- en: node ancestry, [83](c05.xhtml#Page_83)–[87](c05.xhtml#Page_87), [84](c05.xhtml#Page_84)*f*,
    [86](c05.xhtml#Page_86)*f*
  prefs: []
  type: TYPE_NORMAL
- en: topic-based information exchange, [79](c05.xhtml#Page_79)–[83](c05.xhtml#Page_83),
    [82](c05.xhtml#Page_82)*f*
  prefs: []
  type: TYPE_NORMAL
- en: small-world phenomenon, [68](c05.xhtml#Page_68)
  prefs: []
  type: TYPE_NORMAL
- en: social network evolution, [91](c06.xhtml#Page_91)–[125](c06.xhtml#Page_125)
  prefs: []
  type: TYPE_NORMAL
- en: finite state machines, [93](c06.xhtml#Page_93)–[95](c06.xhtml#Page_95), [94](c06.xhtml#Page_94)*f*
  prefs: []
  type: TYPE_NORMAL
- en: information flow game, [110](c06.xhtml#Page_110)–[124](c06.xhtml#Page_124)
  prefs: []
  type: TYPE_NORMAL
- en: edge capacity, [112](c06.xhtml#Page_112)–[113](c06.xhtml#Page_113)
  prefs: []
  type: TYPE_NORMAL
- en: game phases, [113](c06.xhtml#Page_113)–[117](c06.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: game simulation, [118](c06.xhtml#Page_118)–[120](c06.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: improvements to player 2, [120](c06.xhtml#Page_120)–[124](c06.xhtml#Page_124)
  prefs: []
  type: TYPE_NORMAL
- en: source and sink node selection, [117](c06.xhtml#Page_117)–[118](c06.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: weighted random choice, [111](c06.xhtml#Page_111)–[112](c06.xhtml#Page_112)
  prefs: []
  type: TYPE_NORMAL
- en: Monte Carlo simulations, [92](c06.xhtml#Page_92)–[93](c06.xhtml#Page_93), [97](c06.xhtml#Page_97)–[100](c06.xhtml#Page_100),
    [99](c06.xhtml#Page_99)*f*
  prefs: []
  type: TYPE_NORMAL
- en: proof of concept, [109](c06.xhtml#Page_109)–[124](c06.xhtml#Page_124)
  prefs: []
  type: TYPE_NORMAL
- en: random walks, [95](c06.xhtml#Page_95)–[97](c06.xhtml#Page_97), [96](c06.xhtml#Page_96)*f*,
    [99](c06.xhtml#Page_99)*f*
  prefs: []
  type: TYPE_NORMAL
- en: simulations, defined, [92](c06.xhtml#Page_92)
  prefs: []
  type: TYPE_NORMAL
- en: social network graphs, [29](c03.xhtml#Page_29), [39](c03.xhtml#Page_39)–[40](c03.xhtml#Page_40),
    [39](c03.xhtml#Page_39)*f*
  prefs: []
  type: TYPE_NORMAL
- en: social network simulation, [100](c06.xhtml#Page_100)–[109](c06.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: information flow distance, [100](c06.xhtml#Page_100)–[104](c06.xhtml#Page_104)
  prefs: []
  type: TYPE_NORMAL
- en: resource allocation, [108](c06.xhtml#Page_108)–[109](c06.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: topic-based influence, [104](c06.xhtml#Page_104)–[108](c06.xhtml#Page_108)
  prefs: []
  type: TYPE_NORMAL
- en: soft classifiers, [203](c10.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: '`sorted` function, [53](c04.xhtml#Page_53), [137](c07.xhtml#Page_137), [198](c10.xhtml#Page_198)'
  prefs: []
  type: TYPE_NORMAL
- en: source node, [36](c03.xhtml#Page_36), [73](c05.xhtml#Page_73), [78](c05.xhtml#Page_78),
    [110](c06.xhtml#Page_110), [113](c06.xhtml#Page_113), [117](c06.xhtml#Page_117)–[119](c06.xhtml#Page_119),
    [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: spaghetti models (storm path maps), [93](c06.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: sparse adjacency matrices, [80](c05.xhtml#Page_80)
  prefs: []
  type: TYPE_NORMAL
- en: '`spring_layout` function, [33](c03.xhtml#Page_33), [82](c05.xhtml#Page_82)–[83](c05.xhtml#Page_83)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Sprite` class, [248](c12.xhtml#Page_248)–[250](c12.xhtml#Page_250), [250](c12.xhtml#Page_250)*f*'
  prefs: []
  type: TYPE_NORMAL
- en: sprites, [248](c12.xhtml#Page_248)–[250](c12.xhtml#Page_250), [250](c12.xhtml#Page_250)*f*
  prefs: []
  type: TYPE_NORMAL
- en: Spyder IDE, [4](c01.xhtml#Page_4), [10](c01.xhtml#Page_10)–[11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: Stack Overflow, [153](c08.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: Ståhl, Joachim, [213](c11.xhtml#Page_213)
  prefs: []
  type: TYPE_NORMAL
- en: Stanford University, [98](c06.xhtml#Page_98), [125](c06.xhtml#Page_125)
  prefs: []
  type: TYPE_NORMAL
- en: Started state, [234](c12.xhtml#Page_234)–[235](c12.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: Start state, [234](c12.xhtml#Page_234)–[235](c12.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: state machines
  prefs: []
  type: TYPE_NORMAL
- en: finite state machines, [93](c06.xhtml#Page_93)–[95](c06.xhtml#Page_95), [94](c06.xhtml#Page_94)*f*,
    [100](c06.xhtml#Page_100)–[101](c06.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: state machine graphs, [30](c03.xhtml#Page_30), [31](c03.xhtml#Page_31)*f*
  prefs: []
  type: TYPE_NORMAL
- en: state managers
  prefs: []
  type: TYPE_NORMAL
- en: application state planning, [235](c12.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: development of, [237](c12.xhtml#Page_237)–[241](c12.xhtml#Page_241)
  prefs: []
  type: TYPE_NORMAL
- en: event driven nature of, [237](c12.xhtml#Page_237)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [235](c12.xhtml#Page_235), [237](c12.xhtml#Page_237)
  prefs: []
  type: TYPE_NORMAL
- en: Steiner points, [219](c11.xhtml#Page_219), [228](c11.xhtml#Page_228)–[229](c11.xhtml#Page_229)
  prefs: []
  type: TYPE_NORMAL
- en: stochastic FSMs, [95](c06.xhtml#Page_95), [97](c06.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: storm path maps (spaghetti models), [93](c06.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: '`strip` function, [70](c05.xhtml#Page_70)'
  prefs: []
  type: TYPE_NORMAL
- en: substates, [238](c12.xhtml#Page_238)
  prefs: []
  type: TYPE_NORMAL
- en: '`sum` function, [59](c04.xhtml#Page_59)'
  prefs: []
  type: TYPE_NORMAL
- en: Super Bowl XXXV, [176](c10.xhtml#Page_176)–[177](c10.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: supervised learning, [176](c10.xhtml#Page_176), [179](c10.xhtml#Page_179)
  prefs: []
  type: TYPE_NORMAL
- en: '`Surface` class, [246](c12.xhtml#Page_246)–[248](c12.xhtml#Page_248), [247](c12.xhtml#Page_247)*f*'
  prefs: []
  type: TYPE_NORMAL
- en: '`surface_size` attribute, [249](c12.xhtml#Page_249)'
  prefs: []
  type: TYPE_NORMAL
- en: sweep line algorithms, [154](c08.xhtml#Page_154)–[155](c08.xhtml#Page_155)
  prefs: []
  type: TYPE_NORMAL
- en: syntactical constructs, [13](c02.xhtml#Page_13)–[18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: dictionary comprehensions, [15](c02.xhtml#Page_15)–[17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: list comprehensions, [14](c02.xhtml#Page_14)–[15](c02.xhtml#Page_15)
  prefs: []
  type: TYPE_NORMAL
- en: zipping and unpacking, [17](c02.xhtml#Page_17)–[18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: '**T**'
  prefs: []
  type: TYPE_NORMAL
- en: '`target` parameter, [244](c12.xhtml#Page_244)'
  prefs: []
  type: TYPE_NORMAL
- en: TCP handshake graphs, [42](c03.xhtml#Page_42), [42](c03.xhtml#Page_42)*f*
  prefs: []
  type: TYPE_NORMAL
- en: TCP packets, [49](c04.xhtml#Page_49)–[50](c04.xhtml#Page_50), [61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: terminal states, [96](c06.xhtml#Page_96), [99](c06.xhtml#Page_99)–[100](c06.xhtml#Page_100)
  prefs: []
  type: TYPE_NORMAL
- en: '`term_subgraph` function, [106](c06.xhtml#Page_106)–[107](c06.xhtml#Page_107)'
  prefs: []
  type: TYPE_NORMAL
- en: tessellation, [133](c07.xhtml#Page_133)–[136](c07.xhtml#Page_136), [134](c07.xhtml#Page_134)*f*
  prefs: []
  type: TYPE_NORMAL
- en: art gallery problem, [214](c11.xhtml#Page_214), [216](c11.xhtml#Page_216)–[219](c11.xhtml#Page_219),
    [223](c11.xhtml#Page_223)–[224](c11.xhtml#Page_224), [226](c11.xhtml#Page_226)–[228](c11.xhtml#Page_228),
    [245](c12.xhtml#Page_245), [252](c12.xhtml#Page_252)
  prefs: []
  type: TYPE_NORMAL
- en: facial recognition, [189](c10.xhtml#Page_189)–[190](c10.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: Voronoi tessellation, [162](c09.xhtml#Page_162)–[173](c09.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: '`theil_u` parameter, [195](c10.xhtml#Page_195)'
  prefs: []
  type: TYPE_NORMAL
- en: Theil’s U, [195](c10.xhtml#Page_195)
  prefs: []
  type: TYPE_NORMAL
- en: '`Thread` class, [242](c12.xhtml#Page_242)'
  prefs: []
  type: TYPE_NORMAL
- en: threading parallelism, [241](c12.xhtml#Page_241)–[243](c12.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: three-color problem, [212](c11.xhtml#Page_212)–[213](c11.xhtml#Page_213)
  prefs: []
  type: TYPE_NORMAL
- en: tiles, [133](c07.xhtml#Page_133)
  prefs: []
  type: TYPE_NORMAL
- en: '`timeline` function, [88](c05.xhtml#Page_88)'
  prefs: []
  type: TYPE_NORMAL
- en: '`to_dict` function, [251](c12.xhtml#Page_251), [253](c12.xhtml#Page_253)–[254](c12.xhtml#Page_254)'
  prefs: []
  type: TYPE_NORMAL
- en: '`tol` parameter, [81](c05.xhtml#Page_81)'
  prefs: []
  type: TYPE_NORMAL
- en: topic-based influence, [104](c06.xhtml#Page_104)–[108](c06.xhtml#Page_108)
  prefs: []
  type: TYPE_NORMAL
- en: topic-based information exchange, [79](c05.xhtml#Page_79)–[83](c05.xhtml#Page_83),
    [82](c05.xhtml#Page_82)*f*
  prefs: []
  type: TYPE_NORMAL
- en: topography, [33](c03.xhtml#Page_33), [113](c06.xhtml#Page_113)
  prefs: []
  type: TYPE_NORMAL
- en: topological ordering, [85](c05.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: '`touches` function, [138](c07.xhtml#Page_138)'
  prefs: []
  type: TYPE_NORMAL
- en: towers (base stations). *See* base stations
  prefs: []
  type: TYPE_NORMAL
- en: '`transform` function, [151](c08.xhtml#Page_151)–[153](c08.xhtml#Page_153)'
  prefs: []
  type: TYPE_NORMAL
- en: transitions, [31](c03.xhtml#Page_31)*f*, [94](c06.xhtml#Page_94)–[96](c06.xhtml#Page_96),
    [99](c06.xhtml#Page_99)–[101](c06.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: travel graphs, [28](c03.xhtml#Page_28)–[29](c03.xhtml#Page_29), [29](c03.xhtml#Page_29)*f*,
    [32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: Triangle library, [216](c11.xhtml#Page_216), [219](c11.xhtml#Page_219), [223](c11.xhtml#Page_223)–[229](c11.xhtml#Page_229),
    [236](c12.xhtml#Page_236), [245](c12.xhtml#Page_245), [252](c12.xhtml#Page_252),
    [262](c13.xhtml#Page_262)
  prefs: []
  type: TYPE_NORMAL
- en: Triangle Solver service, [261](c13.xhtml#Page_261)*f*, [262](c13.xhtml#Page_262)
  prefs: []
  type: TYPE_NORMAL
- en: '`triangulate` function, [134](c07.xhtml#Page_134), [136](c07.xhtml#Page_136),
    [216](c11.xhtml#Page_216)–[217](c11.xhtml#Page_217), [219](c11.xhtml#Page_219),
    [221](c11.xhtml#Page_221), [223](c11.xhtml#Page_223)–[224](c11.xhtml#Page_224),
    [226](c11.xhtml#Page_226)–[227](c11.xhtml#Page_227)'
  prefs: []
  type: TYPE_NORMAL
- en: truth tables, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: '`ttest_ind` function, [123](c06.xhtml#Page_123)'
  prefs: []
  type: TYPE_NORMAL
- en: Twitter, [80](c05.xhtml#Page_80)
  prefs: []
  type: TYPE_NORMAL
- en: two-sample t-testing, [123](c06.xhtml#Page_123), [124](c06.xhtml#Page_124)*f*
  prefs: []
  type: TYPE_NORMAL
- en: '`type` function, [203](c10.xhtml#Page_203)'
  prefs: []
  type: TYPE_NORMAL
- en: '**U**'
  prefs: []
  type: TYPE_NORMAL
- en: UDP packets, [49](c04.xhtml#Page_49)–[50](c04.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: UML (Unified Modeling Language), [234](c12.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: unbalanced exchange, [75](c05.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: undirected graphs, [31](c03.xhtml#Page_31)–[32](c03.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: betweenness centrality, [36](c03.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: cliques, [39](c03.xhtml#Page_39)–[40](c03.xhtml#Page_40), [39](c03.xhtml#Page_39)*f*,
    [76](c05.xhtml#Page_76)–[77](c05.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: connected components, [41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: creating in NetworkX, [33](c03.xhtml#Page_33), [34](c03.xhtml#Page_34)*f*
  prefs: []
  type: TYPE_NORMAL
- en: degree centrality, [37](c03.xhtml#Page_37)
  prefs: []
  type: TYPE_NORMAL
- en: undirected preferential attachment (UPA), [114](c06.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: '`unicode` attribute, [239](c12.xhtml#Page_239)'
  prefs: []
  type: TYPE_NORMAL
- en: Unified Modeling Language (UML), [234](c12.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: '`uniform` argument, [200](c10.xhtml#Page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: uniformly random walks, [96](c06.xhtml#Page_96)–[97](c06.xhtml#Page_97), [96](c06.xhtml#Page_96)*f*,
    [101](c06.xhtml#Page_101)–[104](c06.xhtml#Page_104), [117](c06.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: uninstall functions, [257](c13.xhtml#Page_257)–[259](c13.xhtml#Page_259)
  prefs: []
  type: TYPE_NORMAL
- en: '`unique` function, [103](c06.xhtml#Page_103)'
  prefs: []
  type: TYPE_NORMAL
- en: University of Essex, [177](c10.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: University of Washington, [212](c11.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: unsupervised learning (exploratory analysis), [176](c10.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: unweighted graphs, [32](c03.xhtml#Page_32), [43](c03.xhtml#Page_43), [214](c11.xhtml#Page_214)
  prefs: []
  type: TYPE_NORMAL
- en: Unwired Labs, [142](c08.xhtml#Page_142), [147](c08.xhtml#Page_147)
  prefs: []
  type: TYPE_NORMAL
- en: UPA (undirected preferential attachment), [114](c06.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: '`urlencode` function, [165](c09.xhtml#Page_165)'
  prefs: []
  type: TYPE_NORMAL
- en: user interaction mapping, [234](c12.xhtml#Page_234)–[237](c12.xhtml#Page_237),
    [234](c12.xhtml#Page_234)*f*
  prefs: []
  type: TYPE_NORMAL
- en: application state planning, [235](c12.xhtml#Page_235)–[236](c12.xhtml#Page_236)
  prefs: []
  type: TYPE_NORMAL
- en: documentation, [236](c12.xhtml#Page_236)–[237](c12.xhtml#Page_237)
  prefs: []
  type: TYPE_NORMAL
- en: User Interface service, [261](c13.xhtml#Page_261)*f*, [262](c13.xhtml#Page_262)–[263](c13.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: '`user_to_series` function, [70](c05.xhtml#Page_70)'
  prefs: []
  type: TYPE_NORMAL
- en: '**V**'
  prefs: []
  type: TYPE_NORMAL
- en: vertex-coloring problem, [212](c11.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: '`vertex_list` attribute, [249](c12.xhtml#Page_249)'
  prefs: []
  type: TYPE_NORMAL
- en: vertices (nodes)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [129](c07.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: graph theory, [27](c03.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: vertex order, [132](c07.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: VirtualBox, [260](c13.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: virtual environment setup, [9](c01.xhtml#Page_9), [63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: virtualenv package manager, [10](c01.xhtml#Page_10)–[11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: Voice over IP (VoIP), [54](c04.xhtml#Page_54), [57](c04.xhtml#Page_57)
  prefs: []
  type: TYPE_NORMAL
- en: Voronoi diagrams, [161](c09.xhtml#Page_161)–[174](c09.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: emergency service planning scenario, [163](c09.xhtml#Page_163)–[173](c09.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: city shape, [164](c09.xhtml#Page_164)–[167](c09.xhtml#Page_167), [165](c09.xhtml#Page_165)*f*
  prefs: []
  type: TYPE_NORMAL
- en: distance function, [164](c09.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: generators, [167](c09.xhtml#Page_167)–[169](c09.xhtml#Page_169), [169](c09.xhtml#Page_169)*f*
  prefs: []
  type: TYPE_NORMAL
- en: tessellation, [170](c09.xhtml#Page_170)–[173](c09.xhtml#Page_173), [171](c09.xhtml#Page_171)*f*,
    [172](c09.xhtml#Page_172)*f*
  prefs: []
  type: TYPE_NORMAL
- en: limitations of, [173](c09.xhtml#Page_173)–[174](c09.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: proof of concept, [163](c09.xhtml#Page_163)–[173](c09.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: tessellation, [162](c09.xhtml#Page_162)–[163](c09.xhtml#Page_163), [162](c09.xhtml#Page_162)*f*
  prefs: []
  type: TYPE_NORMAL
- en: '`voronoi_regions_from_coords` function, [170](c09.xhtml#Page_170)'
  prefs: []
  type: TYPE_NORMAL
- en: Voronoi tessellation, [162](c09.xhtml#Page_162)–[163](c09.xhtml#Page_163), [162](c09.xhtml#Page_162)*f*,
    [170](c09.xhtml#Page_170)–[173](c09.xhtml#Page_173), [171](c09.xhtml#Page_171)*f*,
    [172](c09.xhtml#Page_172)*f*
  prefs: []
  type: TYPE_NORMAL
- en: '**W**'
  prefs: []
  type: TYPE_NORMAL
- en: '`weighted_choice` function, [106](c06.xhtml#Page_106), [111](c06.xhtml#Page_111)–[112](c06.xhtml#Page_112),
    [114](c06.xhtml#Page_114), [118](c06.xhtml#Page_118)'
  prefs: []
  type: TYPE_NORMAL
- en: weighted graphs, [32](c03.xhtml#Page_32)–[33](c03.xhtml#Page_33), [52](c04.xhtml#Page_52)–[53](c04.xhtml#Page_53),
    [55](c04.xhtml#Page_55), [62](c04.xhtml#Page_62)–[63](c04.xhtml#Page_63), [77](c05.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: weighted random choice, [95](c06.xhtml#Page_95), [97](c06.xhtml#Page_97), [106](c06.xhtml#Page_106),
    [111](c06.xhtml#Page_111)–[115](c06.xhtml#Page_115)
  prefs: []
  type: TYPE_NORMAL
- en: '`weight` parameter, [53](c04.xhtml#Page_53), [77](c05.xhtml#Page_77)'
  prefs: []
  type: TYPE_NORMAL
- en: WGS (world geodesic system), [152](c08.xhtml#Page_152)
  prefs: []
  type: TYPE_NORMAL
- en: '`wgs84_to_aeqd` function, [152](c08.xhtml#Page_152)'
  prefs: []
  type: TYPE_NORMAL
- en: '`where` function, [55](c04.xhtml#Page_55), [60](c04.xhtml#Page_60)'
  prefs: []
  type: TYPE_NORMAL
- en: WiGLE, [144](c08.xhtml#Page_144), [159](c08.xhtml#Page_159)
  prefs: []
  type: TYPE_NORMAL
- en: Windows
  prefs: []
  type: TYPE_NORMAL
- en: frozen delivery, [260](c13.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: installing Anaconda, [6](c01.xhtml#Page_6)–[8](c01.xhtml#Page_8), [6](c01.xhtml#Page_6)*f*,
    [7](c01.xhtml#Page_7)*f*
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebooks, [11](c01.xhtml#Page_11)–[12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: network card in promiscuous mode, [63](c04.xhtml#Page_63)–[64](c04.xhtml#Page_64)
  prefs: []
  type: TYPE_NORMAL
- en: packet capture library, [47](c04.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: setting up virtualenv, [10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder IDE, [11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: temp directory, [252](c12.xhtml#Page_252)
  prefs: []
  type: TYPE_NORMAL
- en: WinPcap library, [47](c04.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: WinPython, [11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: WireShark, [46](c04.xhtml#Page_46)–[47](c04.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: world geodesic system (WGS), [152](c08.xhtml#Page_152)
  prefs: []
  type: TYPE_NORMAL
- en: write once, read many (WORM) workflow, [62](c04.xhtml#Page_62)
  prefs: []
  type: TYPE_NORMAL
- en: '`write_weighted_edgelist` function, [62](c04.xhtml#Page_62)–[63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: '`wrpcap` function, [62](c04.xhtml#Page_62)'
  prefs: []
  type: TYPE_NORMAL
- en: '`wrs_connect` function, [114](c06.xhtml#Page_114), [116](c06.xhtml#Page_116)'
  prefs: []
  type: TYPE_NORMAL
- en: '`wrs_disconnect` function, [115](c06.xhtml#Page_115)–[116](c06.xhtml#Page_116)'
  prefs: []
  type: TYPE_NORMAL
- en: '**X**'
  prefs: []
  type: TYPE_NORMAL
- en: '`X_test` variable, [200](c10.xhtml#Page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: '`X_train` variable, [200](c10.xhtml#Page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Y**'
  prefs: []
  type: TYPE_NORMAL
- en: '`y_test` variable, [200](c10.xhtml#Page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: '`y_train` variable, [200](c10.xhtml#Page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Z**'
  prefs: []
  type: TYPE_NORMAL
- en: Zenmap, [46](c04.xhtml#Page_46), [46](c04.xhtml#Page_46)*f*
  prefs: []
  type: TYPE_NORMAL
- en: zero-sum games, [98](c06.xhtml#Page_98)
  prefs: []
  type: TYPE_NORMAL
- en: '`ZipFile` class, [252](c12.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: '`zip` function, [17](c02.xhtml#Page_17), [197](c10.xhtml#Page_197), [202](c10.xhtml#Page_202)'
  prefs: []
  type: TYPE_NORMAL
- en: '`zipf` variable, [252](c12.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: zipping and unpacking, [17](c02.xhtml#Page_17)–[18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: '`zscore` function, [55](c04.xhtml#Page_55)–[56](c04.xhtml#Page_56)'
  prefs: []
  type: TYPE_NORMAL
- en: Zychlinski, Shaked, [195](c10.xhtml#Page_195)
  prefs: []
  type: TYPE_NORMAL
