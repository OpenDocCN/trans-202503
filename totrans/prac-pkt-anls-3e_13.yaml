- en: '**13**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**13**'
- en: '**WIRELESS PACKET ANALYSIS**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**无线数据包分析**'
- en: '![image](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common.jpg)'
- en: The world of wireless networking is a bit different from that of traditional
    wired networking. Although we are still dealing with common communication protocols
    such as TCP and IP, the game changes a bit when moving to the lowest levels of
    the OSI model. Here, the data link layer is of special importance due to the nature
    of wireless networking and the physical layer. Instead of simple wired protocols
    such as Ethernet, which haven’t changed much over time, we have to consider the
    nuances of wireless protocols such as 802.11, which have evolved pretty quickly.
    This puts new restrictions on the data we access and how we capture it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 无线网络的世界与传统的有线网络有所不同。尽管我们仍然在处理像TCP和IP这样的常见通信协议，但在进入OSI模型的最低层时，情况有些变化。在这里，数据链路层由于无线网络和物理层的特性而显得尤为重要。与变化不大的以太网等简单有线协议不同，我们需要考虑像802.11这样的无线协议的细微差别，而这些协议发展得相当迅速。这给我们访问的数据以及如何捕获这些数据带来了新的限制。
- en: Given these extra considerations, it should come as no surprise that an entire
    chapter of this book is dedicated to packet capture and analysis on wireless networks.
    In this chapter, we will discuss exactly why wireless networks are unique when
    it comes to packet analysis and how to overcome any challenges. Of course, we
    will be doing this by looking at actual practical examples of wireless network
    captures.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这些额外的因素，本书专门有一章讲述如何在无线网络上进行数据包捕获和分析，这一点应该不足为奇。在本章中，我们将讨论为什么无线网络在数据包分析中是独特的，并且如何克服任何挑战。当然，我们将通过实际的无线网络捕获案例来进行分析。
- en: '**Physical Considerations**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**物理考虑**'
- en: The first thing to consider about capturing and analyzing data transmitted across
    a wireless network is the physical transmission medium. Until now, we haven’t
    considered the physical layer because we’ve been communicating over physical cabling.
    Now we’re communicating through invisible airwaves, with packets flying right
    by us.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获和分析通过无线网络传输的数据时，首先要考虑的是物理传输介质。直到现在，我们还没有考虑物理层，因为我们一直通过物理电缆进行通信。现在，我们通过看不见的无线电波进行通信，数据包就在我们身边飞过。
- en: '***Sniffing One Channel at a Time***'
  id: totrans-7
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***一次嗅探一个频道***'
- en: A consideration distinct to capturing traffic from a wireless local area network
    (WLAN) is that the wireless spectrum is a shared medium. Unlike wired networks,
    where each client has its own network cable connected to a switch, the wireless
    communication medium is the airspace clients share, which is limited in size.
    A single WLAN will occupy only a portion of the 802.11 spectrum. This allows multiple
    systems to operate in the same physical area on different portions of the spectrum.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获无线局域网（WLAN）流量时一个特别需要考虑的因素是无线频谱是一个共享介质。与有线网络不同，在有线网络中，每个客户端都有自己的网络电缆连接到交换机，而无线通信介质是客户端共享的空气空间，其大小有限。一个WLAN只会占用802.11频谱的一部分，这允许多个系统在同一个物理区域内操作，并使用频谱的不同部分。
- en: '**NOTE**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Wireless networking is based on the 802.11 standard, developed by the Institute
    of Electrical and Electronics Engineers (IEEE). Throughout this chapter, the terms*
    wireless network *and* WLAN *refer to networks that adhere to the 802.11 standard.
    The most popular versions of this standard are 802.11a, b, g, and n. Each offers
    a unique set of features and characteristics, with newer standards such as n offering
    faster speed. They all still use the same spectrum.*'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*无线网络基于由电气和电子工程师协会（IEEE）开发的802.11标准。本章中，术语* 无线网络 *和* WLAN *指的是遵循802.11标准的网络。这个标准的最流行版本包括802.11a、b、g和n。每个版本都有一套独特的功能和特性，像n这样的较新标准提供了更快的速度。它们都仍然使用相同的频谱。*'
- en: This separation of space is made possible by dividing the spectrum into operation
    channels. A *channel* is simply a portion of the 802.11 wireless spectrum. In
    the United States, 11 channels are available (more are allowed in some other countries).
    This is relevant because, just as a WLAN can operate on only one channel at a
    time, we can sniff packets on only one channel at a time, as illustrated in [Figure
    13-1](ch13.xhtml#ch13fig1). Therefore, if you are troubleshooting a WLAN operating
    on channel 6, you must configure your system to capture traffic seen on channel
    6.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 空间的分隔通过将频谱划分为操作频道来实现。*频道*只是 802.11 无线频谱的一部分。在美国，提供 11 个频道（在一些其他国家允许更多）。这很重要，因为，就像
    WLAN 只能在一个频道上操作一样，我们也只能在一个频道上嗅探数据包，正如[图 13-1](ch13.xhtml#ch13fig1)所示。因此，如果你正在故障排除一个在频道
    6 上运行的 WLAN，你必须配置系统以捕获频道 6 上的流量。
- en: '![image](../images/f296-01.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f296-01.jpg)'
- en: '*Figure 13-1: Sniffing wirelessly can be tedious, since it can be done on only
    one channel at a time.*'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 13-1：无线嗅探可能是繁琐的，因为它一次只能在一个频道上进行。*'
- en: 'Traditional wireless sniffing can only be done one channel at a time, with
    an exception: certain wireless scanning applications use a technique called *channel
    hopping* to change channels rapidly in order to collect data. One of the most
    popular tools of this type, Kismet (*[http://www.kismetwireless.net/](http://www.kismetwireless.net/)*),
    can hop up to 10 channels per second, a capability that makes it very effective
    at sniffing multiple channels at once.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的无线嗅探一次只能在一个频道上进行，但有一个例外：某些无线扫描应用使用一种叫做*频道跳跃*的技术，快速切换频道以收集数据。这个类型中最流行的工具之一，Kismet（*[http://www.kismetwireless.net/](http://www.kismetwireless.net/)*），每秒最多可以跳跃
    10 个频道，这使得它非常有效地同时嗅探多个频道。
- en: '***Wireless Signal Interference***'
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***无线信号干扰***'
- en: With wireless communications, we sometimes can’t rely on the integrity of the
    data being transmitted over the air. It’s possible that something will interfere
    with the signal. Wireless networks include some features to handle interference,
    but those features don’t always work. Therefore, when capturing packets over a
    wireless network, you must pay close attention to your environment to ensure that
    there are no significant sources of interference, such as big reflective surfaces,
    large rigid objects, microwaves, 2.4 GHz phones, thick walls, or high-density
    surfaces. These can cause packet loss, duplicated packets, and malformed packets.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在无线通信中，我们有时不能依赖于通过空气传输的数据的完整性。可能会有一些干扰信号的因素。无线网络包括一些处理干扰的功能，但这些功能并不总是有效。因此，在无线网络中捕获数据包时，你必须密切关注周围环境，确保没有显著的干扰源，比如大的反射面、大型刚性物体、微波炉、2.4
    GHz 的电话、厚墙或高密度的表面。这些都会导致数据包丢失、数据包重复和数据包格式错误。
- en: 'Interference between channels is also a concern. Although you can sniff only
    one channel at a time, this comes with a small caveat: several transmission channels
    are available in the wireless networking spectrum, but because space is limited,
    there is a slight overlap between channels, as illustrated in [Figure 13-2](ch13.xhtml#ch13fig2).
    This means that if there is traffic present on channel 4 and channel 5, and you
    are sniffing on one of these channels, you will likely capture packets from the
    other channel. Typically, networks that coexist in the same area are designed
    to use nonoverlapping channels of 1, 6, and 11, so you probably won’t encounter
    this problem. But just in case, you should understand why it happens.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 通道之间的干扰也是一个值得关注的问题。虽然你一次只能嗅探一个通道，但这有一个小的 caveat：无线网络频谱中有多个传输通道可用，但由于空间有限，通道之间存在轻微的重叠，正如[图
    13-2](ch13.xhtml#ch13fig2)所示。这意味着，如果频道 4 和频道 5 上有流量，而你正在嗅探其中一个频道，你很可能会捕获到另一个频道的数据包。通常，在同一地区共存的网络会设计为使用不重叠的频道
    1、6 和 11，所以你可能不会遇到这个问题。但为了以防万一，你应该理解其发生的原因。
- en: '![image](../images/f297-01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f297-01.jpg)'
- en: '*Figure 13-2: There is overlap between channels due to limited spectrum space.*'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 13-2：由于频谱空间有限，通道之间存在重叠。*'
- en: '***Detecting and Analyzing Signal Interference***'
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***检测和分析信号干扰***'
- en: Troubleshooting wireless signal interference isn’t something that can be done
    by looking at packets in Wireshark. If you are going to make a habit or a career
    out of troubleshooting WLANs, you will surely need to check for signal interference
    regularly. This task is done with a *spectrum analyzer*, a tool that displays
    data or interference across the spectrum.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 排查无线信号干扰并不是通过查看Wireshark中的数据包就能完成的。如果你打算经常或以此为职业来排查WLAN故障，你肯定需要定期检查信号干扰。这个任务是通过*频谱分析仪*来完成的，它能显示整个频谱的数据或干扰。
- en: Commercial spectrum analyzers can cost upward of thousands of dollars, but there
    is a great solution for common everyday use. MetaGeek makes a USB hardware device,
    the Wi-Spy, that monitors the entire 802.11 spectrum for signals. When paired
    with MetaGeek’s inSSIDer or Chanalyzer software, this hardware outputs the spectrum
    graphically to aid in the troubleshooting process. Sample output from Chanalyzer
    is shown in [Figure 13-3](ch13.xhtml#ch13fig3).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 商业级频谱分析仪的价格可能高达数千美元，但有一个适合日常使用的优秀解决方案。MetaGeek生产了一款USB硬件设备Wi-Spy，可以监控整个802.11频谱中的信号。当与MetaGeek的inSSIDer或Chanalyzer软件配合使用时，该硬件能够图形化显示频谱，以便帮助排除故障。Chanalyzer的示例输出显示在[图13-3](ch13.xhtml#ch13fig3)中。
- en: '![image](../images/f298-01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f298-01.jpg)'
- en: '*Figure 13-3: This Chanalyzer output shows four signals equally spaced along
    the Wi-Fi spectrum.*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-3：此Chanalyzer输出显示了在Wi-Fi频谱上均匀分布的四个信号。*'
- en: '**Wireless Card Modes**'
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**无线网卡模式**'
- en: Before we start sniffing wireless packets, we need to look at the different
    modes in which a wireless card can operate as it pertains to packet capture.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始嗅探无线数据包之前，我们需要了解无线网卡在数据包捕获方面可以操作的不同模式。
- en: 'Four wireless NIC modes are available:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 有四种无线网卡模式可供选择：
- en: '**Managed mode**   This mode is used when your wireless client connects directly
    to a wireless access point (WAP). In these cases, the driver associated with the
    wireless NIC relies on the WAP to manage the entire communication process.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**受管模式** 当你的无线客户端直接连接到无线接入点（WAP）时，使用此模式。在这种情况下，与无线网卡相关联的驱动程序依赖WAP来管理整个通信过程。'
- en: '**Ad hoc mode**   This mode is used when you have a wireless network setup
    in which devices connect directly to each other. In this mode, two wireless clients
    that want to communicate with each other share the responsibilities that a WAP
    would normally handle.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**临时模式** 当你有一个无线网络设置，设备直接相互连接时，就使用此模式。在这种模式下，两个想要通信的无线客户端共同承担无线接入点（WAP）通常负责的任务。'
- en: '**Master mode**   Some higher-end wireless NICs also support master mode. This
    mode allows the wireless NIC to work in conjunction with specialized driver software
    in order to allow the computer to act as a WAP for other devices.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**主模式** 一些高端无线网卡还支持主模式。该模式允许无线网卡与专用驱动程序配合工作，使计算机能够充当其他设备的无线接入点（WAP）。'
- en: '**Monitor mode**   This is the most important mode for our purposes. Monitor
    mode is used when you want your wireless client to stop transmitting and receiving
    data and instead only listen to the packets flying through the air. For Wireshark
    to capture wireless packets, your wireless NIC and accompanying driver must support
    monitor mode (also known as RFMON mode).'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**监控模式** 这是我们工作中最重要的模式。当你希望无线客户端停止发送和接收数据，而仅仅监听空中飞行的数据包时，就需要使用监控模式。为了让Wireshark能够捕获无线数据包，你的无线网卡及其驱动程序必须支持监控模式（也称为RFMON模式）。'
- en: Most users use wireless cards in only managed mode or ad hoc mode. A graphical
    representation of the way each mode operates is shown in [Figure 13-4](ch13.xhtml#ch13fig4).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数用户仅在受管模式或临时模式下使用无线网卡。每种模式的操作方式通过[图13-4](ch13.xhtml#ch13fig4)进行了图形化展示。
- en: '![image](../images/f299-01.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f299-01.jpg)'
- en: '*Figure 13-4: The different wireless card modes*'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-4：不同无线网卡模式*'
- en: '**NOTE**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*I’m often asked which wireless card I recommend for wireless packet analysis.
    I use and highly recommend products from ALFA network. Their products are regarded
    as some of the best on the market for ensuring you are capturing every possible
    packet, and they’re cost-effective and portable. ALFA’s products are available
    through most online computer hardware retailers.*'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '*我经常被问到推荐哪种无线网卡用于无线数据包分析。我使用并强烈推荐ALFA网络的产品。它们的产品被认为是市场上最好的之一，能够确保你捕获到每一个可能的数据包，而且价格实惠、便于携带。ALFA的产品可以通过大多数在线计算机硬件零售商购买。*'
- en: '**Sniffing Wirelessly in Windows**'
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**在Windows中进行无线嗅探**'
- en: Even if you have a wireless NIC that supports monitor mode, most Windows-based
    wireless NIC drivers won’t allow you to change into this mode. This means that
    you’ll only be able to capture packets to and from the wireless interface on the
    device you’re using to connect to the network. To capture packets between all
    devices on a channel, you’ll need extra hardware.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你拥有支持监视模式的无线网卡，大多数基于Windows的无线网卡驱动程序也不允许你切换到该模式。这意味着你只能捕获从你用来连接网络的设备的无线接口传输的包。要捕获在一个频道上所有设备之间的包，你需要额外的硬件。
- en: '***Configuring AirPcap***'
  id: totrans-39
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***配置AirPcap***'
- en: AirPcap from Riverbed Technologies (*[http://www.riverbed.com/](http://www.riverbed.com/)*)
    is designed to overcome the limitations that Windows places on wireless packet
    analysis. AirPcap is a small USB device that resembles a flash drive, as shown
    in [Figure 13-5](ch13.xhtml#ch13fig5). It is designed to capture wireless traffic
    from one or more specified channels. AirPcap uses the WinPcap driver and a special
    client configuration utility.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Riverbed Technologies的AirPcap（*[http://www.riverbed.com/](http://www.riverbed.com/)*)旨在克服Windows对无线数据包分析的限制。AirPcap是一款小型USB设备，类似于闪存驱动器，如[图13-5](ch13.xhtml#ch13fig5)所示。它设计用于从一个或多个指定频道捕获无线流量。AirPcap使用WinPcap驱动程序和一个特殊的客户端配置工具。
- en: '![image](../images/f300-01.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f300-01.jpg)'
- en: '*Figure 13-5: The AirPcap device is very compact, making it easy to tote along
    with a laptop.*'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-5：AirPcap设备非常紧凑，便于与笔记本电脑一起携带。*'
- en: 'The AirPcap configuration program (shown in [Figure 13-6](ch13.xhtml#ch13fig6))
    is simple to use, with only a few configurable options:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: AirPcap配置程序（如[图13-6](ch13.xhtml#ch13fig6)所示）使用起来非常简单，只有几个可配置选项：
- en: '**Interface**   You can select the device you are using for your capture here.
    Some advanced analysis scenarios may require you to use more than one AirPcap
    device to sniff simultaneously on multiple channels.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**接口** 你可以在这里选择用于捕获的设备。一些高级分析场景可能要求你使用多个AirPcap设备，分别在多个频道上同时嗅探。'
- en: '**Blink Led**   Clicking this button will make the LED lights on the AirPcap
    device blink. This is primarily used to identify the specific adapter you are
    using if you have multiple AirPcap devices.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**闪烁LED** 点击此按钮将使AirPcap设备上的LED灯闪烁。主要用于识别你正在使用的特定适配器，特别是当你有多个AirPcap设备时。'
- en: '**Channel**   In this field, you select the channel you want AirPcap to listen
    on.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**频道** 在此字段中，选择你希望AirPcap监听的频道。'
- en: '![image](../images/f301-01.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f301-01.jpg)'
- en: '*Figure 13-6: The AirPcap configuration program*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-6：AirPcap配置程序*'
- en: '**Extension Channel**   Here you can select an extension channel, a feature
    of 802.11n adapters allowing for the creation of wider channels.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**扩展频道** 在此，你可以选择一个扩展频道，这是802.11n适配器的一个功能，允许创建更宽的频道。'
- en: '**Include 802.11 FCS in Frames**   By default, some systems strip the last
    four checksum bits from wireless packets. This checksum, known as a frame check
    sequence (FCS), is used to ensure that packets have not been corrupted during
    transmission. Unless you have a specific reason to do otherwise, check this box
    to include the FCS checksums.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**在帧中包含802.11 FCS** 默认情况下，一些系统会从无线数据包中去除最后四位校验和。这种校验和，称为帧检验序列（FCS），用于确保数据包在传输过程中没有被损坏。除非你有特殊理由，否则勾选此框以包含FCS校验和。'
- en: '**Capture Type**   The three options here are 802.11 Only, 802.11 + Radio,
    and 802.11 + PPI. The 802.11 Only option includes the standard 802.11 packet header
    on all captured packets. The 802.11 + Radio option includes this header and prepends
    it with a radiotap header, which contains additional information about the packet,
    such as data rate, frequency, signal level, and noise level. The 802.11 + PPI
    option adds the Per-Packet Information Header, which contains additional information
    about 802.11n packets.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**捕获类型** 此处有三个选项：802.11仅、802.11 + 无线电和802.11 + PPI。802.11仅选项包含所有捕获数据包的标准802.11数据包头。802.11
    + 无线电选项包括此数据包头，并在其前面添加一个radiotap头，包含有关数据包的附加信息，例如数据速率、频率、信号强度和噪声水平。802.11 + PPI选项则添加了每包信息头，包含有关802.11n数据包的附加信息。'
- en: '**FCS Filter**   Even if you uncheck the Include 802.11 FCS in Frames box,
    this option lets you filter out packets that FCS determines are corrupted. Use
    the Valid Frames option to show only those packets that FCS thinks can be received
    successfully.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**FCS过滤器** 即使你取消勾选“在帧中包含802.11 FCS”框，此选项仍然允许你过滤掉被FCS判断为损坏的数据包。使用“有效帧”选项只显示FCS认为能够成功接收的数据包。'
- en: '**WEP Configuration**   This area (accessible on the Keys tab of the AirPcap
    Control Panel) allows you to enter WEP decryption keys for the networks you will
    be sniffing. To be able to interpret data encrypted by WEP, you will need to enter
    the correct WEP keys into this field. WEP keys are discussed in “Successful WEP
    Authentication” on [page 309](ch13.xhtml#page_309).'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**WEP配置**   这个区域（可以在AirPcap控制面板的“Keys”标签页中访问）允许你输入WEP解密密钥，用于你将要嗅探的网络。为了能够解读由WEP加密的数据，你需要在此字段中输入正确的WEP密钥。WEP密钥在《成功的WEP认证》一节中有详细讨论，详见[第309页](ch13.xhtml#page_309)。'
- en: '***Capturing Traffic with AirPcap***'
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用AirPcap捕获流量***'
- en: Once you have AirPcap installed and configured, the capture process should be
    familiar to you. Just start up Wireshark and select the AirPcap interface to start
    collecting packets from it ([Figure 13-7](ch13.xhtml#ch13fig7)).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你安装并配置了AirPcap，捕获过程应该对你来说很熟悉。只需启动Wireshark并选择AirPcap接口开始从中收集数据包（参见[图13-7](ch13.xhtml#ch13fig7)）。
- en: '![image](../images/f302-01.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f302-01.jpg)'
- en: '*Figure 13-7: Selecting the AirPcap interface to capture packets*'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-7：选择AirPcap接口来捕获数据包*'
- en: Remember that you will be capturing packets from whatever channel you selected
    in the AirPcap configuration utility. If you don’t see the packets you’re looking
    for, it’s probably because you’re looking on the wrong channel. Change the channel
    by stopping the active capture, selecting a new channel in the AirPcap configuration
    utility, and restarting the capture. You can’t actively capture packets while
    you attempt to change the channel.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，你将从在AirPcap配置工具中选择的频道捕获数据包。如果你没有看到你想要的数据包，可能是因为你选择了错误的频道。你可以通过停止当前的捕获，选择AirPcap配置工具中的新频道，然后重新启动捕获来更改频道。在更改频道时，你不能同时进行数据包捕获。
- en: If you need to verify what channel you’re capturing from within Wireshark, an
    easy way is to view wireless capture statistics. Do this by clicking **Wireless**
    ▶ **WLAN Traffic** from the main drop-down menu. The resulting window will show
    you the devices that were observed and information about them, including the 802.11
    channel, as shown in [Figure 13-8](ch13.xhtml#ch13fig8).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要验证在Wireshark中捕获的频道，可以通过查看无线捕获统计信息来轻松确认。方法是从主下拉菜单中点击**Wireless** ▶ **WLAN
    Traffic**。弹出的窗口将显示观察到的设备及其信息，包括802.11频道，如[图13-8](ch13.xhtml#ch13fig8)所示。
- en: '![image](../images/f302-02.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f302-02.jpg)'
- en: '*Figure 13-8: The Wireless LAN Statistics window indicates this data was captured
    by listening to channel 11.*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-8：无线LAN统计窗口显示数据是通过监听11频道捕获的。*'
- en: '**Sniffing Wirelessly in Linux**'
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**在Linux中无线嗅探**'
- en: Sniffing in Linux is simply a matter of enabling monitor mode on the wireless
    NIC and firing up Wireshark. Unfortunately, the procedure for enabling monitor
    mode differs with each model of wireless NIC, so I can’t offer definitive advice
    for doing this. In fact, some wireless NICs don’t require you to enable monitor
    mode. Your best bet is to do a quick Google search for your NIC model to determine
    whether you need to enable it and, if so, how.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中嗅探仅仅是启用无线网卡的监控模式并启动Wireshark的问题。不幸的是，启用监控模式的过程因每个无线网卡型号的不同而有所不同，因此我无法提供具体的操作建议。事实上，一些无线网卡根本不需要启用监控模式。最好的办法是通过快速的Google搜索查找你的网卡型号，确认是否需要启用监控模式，如果需要的话，查找具体的操作方法。
- en: 'One of the more common ways to enable monitor mode in Linux is through its
    built-in wireless extensions. You can access these wireless extensions with the
    `iwconfig` command. If you type `iwconfig` from the console, you should see results
    like this:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中启用监控模式的常见方法之一是通过其内建的无线扩展。你可以使用`iwconfig`命令访问这些无线扩展。如果你在终端中输入`iwconfig`，应该能看到类似这样的结果：
- en: '[PRE0]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The output from the `iwconfig` command shows that the `Eth1` interface can be
    configured wirelessly. This is apparent because it shows data for the 802.11g
    protocol ➋, whereas the interfaces `Eth0` and `Lo0` return the phrase `no wireless
    extensions` ➊.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`iwconfig`命令的输出显示，`Eth1`接口可以进行无线配置。这一点很明显，因为它显示了802.11g协议的数据➋，而`Eth0`和`Lo0`接口则返回了`no
    wireless extensions`的提示➊。'
- en: Along with all the wireless information this command provides, such as the wireless
    extended service set ID (ESSID) and frequency, notice that the second line under
    `Eth1` shows that the mode is currently set to managed. This is what we want to
    change.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 除了此命令提供的所有无线信息，如无线扩展服务集ID（ESSID）和频率外，请注意`Eth1`下的第二行显示当前模式已设置为管理模式。这是我们想要更改的设置。
- en: 'To change the `Eth1` interface to monitor mode, you must be logged in as the
    root user, either directly or via the switch user (`su`) command, as shown here:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要将`Eth1`接口更改为监控模式，你必须以root用户身份登录，无论是直接登录还是通过切换用户（`su`）命令，如下所示：
- en: '[PRE1]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once you’re root, you can type commands to configure the wireless interface
    options. To configure `Eth1` to operate in monitor mode, enter this:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你是root用户，你可以输入命令来配置无线接口选项。要将`Eth1`配置为监控模式，请输入以下命令：
- en: '[PRE2]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once the NIC is in monitor mode, running the `iwconfig` command again should
    reflect your changes. Now ensure that the `Eth1` interface is operational by entering
    the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦NIC进入监控模式，再次运行`iwconfig`命令应该能反映出你的更改。现在，通过输入以下命令来确保`Eth1`接口正常工作：
- en: '[PRE3]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We’ll also use the `iwconfig` command to change the channel we are listening
    on. Change the channel of the `Eth1` interface to channel 3 by entering this:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用`iwconfig`命令来更改我们监听的频道。通过输入以下命令将`Eth1`接口的频道更改为频道3：
- en: '[PRE4]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**NOTE**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*You can change channels on the fly as you are capturing packets, so don’t
    hesitate to do so at will. The `iwconfig` command can also be scripted to make
    the process easier.*'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '*你可以在捕获数据包时实时更改频道，所以不要犹豫，随时更改。`iwconfig`命令也可以编写成脚本，以简化这个过程。*'
- en: When you have completed these configurations, start Wireshark and begin your
    packet capture.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些配置后，启动Wireshark并开始数据包捕获。
- en: '**802.11 Packet Structure**'
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**802.11数据包结构**'
- en: '*80211beacon.pcapng*'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '*80211beacon.pcapng*'
- en: 'The primary difference between wireless and wired packets is the addition of
    the 802.11 header. This layer 2 header contains extra information about the packet
    and the medium by which it is transmitted. There are three types of 802.11 packets:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 无线数据包与有线数据包的主要区别在于增加了802.11头部。这个第二层头部包含有关数据包以及其传输媒介的额外信息。802.11数据包有三种类型：
- en: '**Management**   These packets are used to establish connectivity between hosts
    at layer 2\. Some important subtypes of management packets include authentication,
    association, and beacon packets.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**管理**   这些数据包用于在第二层建立主机之间的连接。一些重要的管理数据包子类型包括认证、关联和beacon数据包。'
- en: '**Control**   Control packets allow for delivery of management and data packets,
    and they are concerned with congestion management. Common subtypes include request-to-send
    and clear-to-send packets.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**控制**   控制数据包允许管理和数据数据包的传输，并且与拥塞管理相关。常见的子类型包括请求发送（request-to-send）和清除发送（clear-to-send）数据包。'
- en: '**Data**   These packets contain actual data and are the only types of packets
    that can be forwarded from the wireless network to the wired network.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据**   这些数据包包含实际数据，并且是唯一可以从无线网络转发到有线网络的数据包类型。'
- en: The type and subtype of a wireless packet determine its structure, so there
    are a large number of possible structures. We’ll examine one such structure by
    looking at a single packet in the file *80211beacon.pcapng*. This file contains
    an example of a management packet called a *beacon*, as shown in [Figure 13-9](ch13.xhtml#ch13fig9).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 无线数据包的类型和子类型决定了其结构，因此可能存在大量不同的结构。我们将通过查看文件*80211beacon.pcapng*中的一个数据包来研究其中一种结构。该文件包含一个称为*beacon*的管理数据包示例，如[图
    13-9](ch13.xhtml#ch13fig9)所示。
- en: A beacon is one of the most informative wireless packets you can find. It is
    sent as a broadcast packet from a WAP across a wireless channel to notify any
    listening wireless clients that the WAP is available and to define the parameters
    that must be set in order to connect to it. In our example file, you can see that
    this packet is defined as a beacon in the Type/Subtype field in the 802.11 header
    ➊.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: beacon是你能找到的最具信息性的无线数据包之一。它作为广播数据包从WAP通过无线信道发送，通知任何正在监听的无线客户端该WAP可用，并定义必须设置的参数以便连接到它。在我们的示例文件中，可以看到该数据包在802.11头部的类型/子类型字段中被定义为beacon
    ➊。
- en: 'A great deal of additional information is found in the 802.11 management frame
    header, including the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 802.11管理帧头中还包含大量附加信息，包括以下内容：
- en: '**Timestamp**   The time the packet was transmitted'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间戳**   数据包传输的时间'
- en: '**Beacon Interval**   The interval at which the beacon packet is retransmitted'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**Beacon间隔**   beacon数据包重新传输的间隔时间'
- en: '**Capabilities Information**   Information about the hardware capabilities
    of the WAP'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**能力信息**   有关WAP硬件能力的信息'
- en: '![image](../images/f305-01.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f305-01.jpg)'
- en: '*Figure 13-9: This is an 802.11 beacon packet.*'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-9：这是一个802.11 beacon数据包。*'
- en: '**SSID parameter set**   The SSID (network name) broadcast by the WAP'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**SSID参数设置**   WAP广播的SSID（网络名称）'
- en: '**Supported Rates**   The data transfer rates supported by the WAP'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**支持的速率**   WAP支持的数据传输速率'
- en: '**DS Parameter set**   The channel on which the WAP is broadcasting'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**DS参数集**   WAP广播的频道'
- en: The header also includes the source and destination addresses and vendor-specific
    information.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 标头还包括源和目的地址以及厂商特定信息。
- en: Based on this, we can determine quite a few things about the WAP transmitting
    the beacon in the example file. It is apparent that it is a D-Link device ➋ using
    the 802.11b standard `(B)` ➌ on channel 11 ➍.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 基于此，我们可以确定一些关于示例文件中广播信标的WAP的事情。显然，它是一个使用802.11b标准`(B)`的D-Link设备➋，运行在11频道➍。
- en: Although the exact contents and purpose of 802.11 management packets will change,
    the general structure remains similar to this example.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管802.11管理包的确切内容和目的会有所变化，但其基本结构仍与此示例相似。
- en: '**Adding Wireless-Specific Columns to the Packet List Pane**'
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**向数据包列表窗格添加无线特定列**'
- en: In previous chapters, we’ve leveraged Wireshark’s flexible interface to add
    situationally appropriate columns. Before we proceed with any additional wireless
    analysis, it will be helpful to add the following three columns to the Packet
    List pane.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们已经利用Wireshark灵活的界面添加了适应情况的列。在继续进行其他无线分析之前，添加以下三个列到数据包列表窗格会很有帮助。
- en: •     The Channel column, to show the channel on which the packet was collected
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: •     频道列，显示捕获数据包时所在的频道
- en: •     The Signal Strength column, to show the signal strength of a captured
    packet in dBm
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: •     信号强度列，显示捕获数据包的信号强度（单位：dBm）
- en: •     The Data Rate column, to show the throughput rate of a captured packet
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: •     数据速率列，显示捕获数据包的吞吐速率
- en: These indicators can be of great help when troubleshooting wireless connections.
    For instance, even if your wireless client software says you have excellent signal
    strength, doing a capture and checking these columns may show you a number that
    does not support this claim.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这些指示器在排查无线连接问题时非常有帮助。例如，即使你的无线客户端软件显示信号强度非常好，进行捕获并检查这些列可能会显示一个与此声明不符的数字。
- en: 'To add these columns to the Packet List pane, follow these steps:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要将这些列添加到数据包列表窗格，请按照以下步骤操作：
- en: Choose **Edit** ▶ **Preferences**.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**编辑** ▶ **首选项**。
- en: Navigate to the Columns section and click +.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到列部分并点击+。
- en: Type **Channel** in the Title field, select **Custom** in the Type drop-down
    list, and use the filter **wlan_radio.channel** in the Field Name box.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在标题字段中输入**Channel**，在类型下拉菜单中选择**Custom**，并在字段名称框中使用过滤器**wlan_radio.channel**。
- en: Repeat this process for the Signal Strength and Data Rate columns, titling them
    appropriately and selecting **wlan_radio.signal_dbm** and **wlan_radio.data_rate**,
    respectively, in the Field Name drop-down list. [Figure 13-10](ch13.xhtml#ch13fig10)
    shows what the Preferences window should look like after you have added all three
    columns.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对信号强度和数据速率列重复此过程，分别为它们命名，并在字段名称下拉列表中选择**wlan_radio.signal_dbm**和**wlan_radio.data_rate**。[图13-10](ch13.xhtml#ch13fig10)显示了在添加了所有三个列后，首选项窗口的样子。
- en: '![image](../images/f306-01.jpg)'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f306-01.jpg)'
- en: '*Figure 13-10: Adding the IEEE wireless-specific columns in the Packet List
    pane*'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图13-10：在数据包列表窗格中添加IEEE无线特定列*'
- en: Click **OK** to save your changes.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**保存更改。
- en: '**Wireless-Specific Filters**'
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**无线特定过滤器**'
- en: We discussed the benefits of capture and display filters in [Chapter 4](ch04.xhtml#ch04).
    Filtering traffic in a wired infrastructure is a lot easier since each device
    has its own dedicated cable. In a wireless network, however, all traffic generated
    by wireless clients coexists on shared channels, meaning that a capture of any
    one channel may contain traffic from dozens of clients. This section is devoted
    to some packet filters that can be used to help you find specific traffic.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[第4章](ch04.xhtml#ch04)中讨论了捕获和显示过滤器的好处。在有线基础设施中，过滤流量要容易得多，因为每个设备都有自己的专用电缆。然而，在无线网络中，无线客户端生成的所有流量都在共享频道上共存，这意味着对任何一个频道的捕获可能包含来自几十个客户端的流量。本节将介绍一些可以帮助你找到特定流量的包过滤器。
- en: '***Filtering Traffic for a Specific BSS ID***'
  id: totrans-115
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***为特定BSS ID过滤流量***'
- en: Each WAP in a network has a unique identifying name called its *basic service
    set identifier (BSS ID)*. This name is sent in every wireless management packet
    and data packet that the access point transmits.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 网络中的每个WAP都有一个唯一的标识名称，称为*基本服务集标识符（BSS ID）*。这个名称会在接入点传输的每个无线管理包和数据包中发送。
- en: Once you know the name of the BSS ID you want to examine, all you really need
    to do is find a packet that has been sent from that particular WAP. Wireshark
    shows the transmitting WAP in the Info column of the Packet List pane, so finding
    this information is typically easy.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你知道了想要检查的 BSS ID 名称，实际上你只需要找到从那个特定 WAP 发送的一个数据包。Wireshark 会在数据包列表窗格的“信息”列中显示发送的
    WAP，所以找到这一信息通常很容易。
- en: 'Once you have a packet from the WAP of interest, find its BSS ID field in the
    802.11 header. This is the address on which you will base your filter. After you
    have found the BSS ID MAC address, you can use this filter:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦从感兴趣的 WAP 获取到一个数据包，找到其 802.11 头部中的 BSS ID 字段。这是你用来设置过滤器的地址。在找到 BSS ID MAC
    地址后，你可以使用以下过滤器：
- en: '[PRE5]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: And you will see only the traffic flowing through the specified WAP.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你将看到仅通过指定 WAP 流动的流量。
- en: '***Filtering Specific Wireless Packet Types***'
  id: totrans-121
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***过滤特定无线数据包类型***'
- en: Earlier in this chapter, we discussed the different types of wireless packets
    you might see on a network. You’ll often need to filter based on these types and
    subtypes. This can be done with the filters `wlan.fc.type` for specific types
    and `wc.fc.type_subtype` for specific type or subtype combinations. For instance,
    to filter for a NULL data packet (a Type 2 Subtype 4 packet in hex), you could
    use the filter `wlan.fc.type_subtype == 0x24`. [Table 13-1](ch13.xhtml#ch13tab1)
    provides a quick reference to some common filters you might need when filtering
    on 802.11 packet types and subtypes.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章前面，我们讨论了你可能在网络上看到的不同类型的无线数据包。你经常需要根据这些类型和子类型进行过滤。这可以通过过滤器 `wlan.fc.type`
    来针对特定类型进行过滤，或者通过 `wlan.fc.type_subtype` 来针对特定类型或子类型组合进行过滤。例如，若要过滤 NULL 数据包（一个十六进制值为
    Type 2 Subtype 4 的数据包），可以使用过滤器 `wlan.fc.type_subtype == 0x24`。[表 13-1](ch13.xhtml#ch13tab1)
    提供了一个常用过滤器的快速参考，帮助你过滤 802.11 数据包类型和子类型。
- en: '**Table 13-1:** Wireless Types/Subtypes and Associated Filter Syntax'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 13-1：** 无线类型/子类型及其相关过滤器语法'
- en: '| **Frame type/subtype** | **Filter syntax** |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| **帧类型/子类型** | **过滤器语法** |'
- en: '| --- | --- |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Management frame | `wlan.fc.type == 0` |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| 管理帧 | `wlan.fc.type == 0` |'
- en: '| Control frame | `wlan.fc.type == 1` |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 控制帧 | `wlan.fc.type == 1` |'
- en: '| Data frame | `wlan.fc.type == 2` |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| 数据帧 | `wlan.fc.type == 2` |'
- en: '| Association request | `wlan.fc.type_subtype == 0x00` |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| 关联请求 | `wlan.fc.type_subtype == 0x00` |'
- en: '| Association response | `wlan.fc.type_subtype == 0x01` |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| 关联响应 | `wlan.fc.type_subtype == 0x01` |'
- en: '| Reassociation request | `wlan.fc.type_subtype == 0x02` |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| 重新关联请求 | `wlan.fc.type_subtype == 0x02` |'
- en: '| Reassociation response | `wlan.fc.type_subtype == 0x03` |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| 重新关联响应 | `wlan.fc.type_subtype == 0x03` |'
- en: '| Probe request | `wlan.fc.type_subtype == 0x04` |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| 探测请求 | `wlan.fc.type_subtype == 0x04` |'
- en: '| Probe response | `wlan.fc.type_subtype == 0x05` |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| 探测响应 | `wlan.fc.type_subtype == 0x05` |'
- en: '| Beacon | `wlan.fc.type_subtype == 0x08` |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| 信标 | `wlan.fc.type_subtype == 0x08` |'
- en: '| Disassociate | `wlan.fc.type_subtype == 0x0A` |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| 取消关联 | `wlan.fc.type_subtype == 0x0A` |'
- en: '| Authentication | `wlan.fc.type_subtype == 0x0B` |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| 认证 | `wlan.fc.type_subtype == 0x0B` |'
- en: '| Deauthentication | `wlan.fc.type_subtype == 0x0C` |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| 解除认证 | `wlan.fc.type_subtype == 0x0C` |'
- en: '| Action frame | `wlan.fc.type_subtype == 0x0D` |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| 动作帧 | `wlan.fc.type_subtype == 0x0D` |'
- en: '| Block ACK requests | `wlan.fc.type_subtype == 0x18` |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| 块确认请求 | `wlan.fc.type_subtype == 0x18` |'
- en: '| Block ACK | `wlan.fc.type_subtype == 0x19` |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| 块确认 | `wlan.fc.type_subtype == 0x19` |'
- en: '| Power save poll | `wlan.fc.type_subtype == 0x1A` |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| 节能轮询 | `wlan.fc.type_subtype == 0x1A` |'
- en: '| Request to send | `wlan.fc.type_subtype == 0x1B` |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| 请求发送 | `wlan.fc.type_subtype == 0x1B` |'
- en: '| Clear to send | `wlan.fc.type_subtype == 0x1C` |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| 清除发送 | `wlan.fc.type_subtype == 0x1C` |'
- en: '| ACK | `wlan.fc.type_subtype == 0x1D` |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| 确认 | `wlan.fc.type_subtype == 0x1D` |'
- en: '| Contention free period end | `wlan.fc.type_subtype == 0x1E` |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| 无争用期结束 | `wlan.fc.type_subtype == 0x1E` |'
- en: '| NULL data | `wlan.fc.type_subtype == 0x24` |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| NULL 数据 | `wlan.fc.type_subtype == 0x24` |'
- en: '| QoS data | `wlan.fc.type_subtype == 0x28` |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| QoS 数据 | `wlan.fc.type_subtype == 0x28` |'
- en: '| Null QoS data | `wlan.fc.type_subtype == 0x2C` |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| NULL QoS 数据 | `wlan.fc.type_subtype == 0x2C` |'
- en: '***Filtering a Specific Frequency***'
  id: totrans-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***过滤特定频率***'
- en: 'If you are examining a compilation of traffic that includes packets from multiple
    channels, it can be very useful to filter based on each individual channel. For
    instance, if you are expecting to have traffic present on only channels 1 and
    6, you can input a filter to show all channel 11 traffic. If you find any traffic,
    then you’ll know that something is wrong—perhaps a misconfiguration or a rogue
    device. To filter on a specific channel, use this filter syntax:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在检查包含来自多个频道的数据包的流量，基于每个单独的频道进行过滤会非常有用。例如，如果你预期只在频道1和6上有流量，你可以输入一个过滤器来显示所有频道11的流量。如果你发现有流量，那么你就知道可能出现了问题——可能是配置错误或恶意设备。要针对特定频道进行过滤，可以使用以下过滤器语法：
- en: '[PRE6]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This will show all traffic on channel 11\. You can replace the `11` value with
    the channel you wish to filter. There are hundreds of additional useful filters
    that you can use for wireless network traffic. You can view additional wireless
    capture filters on the Wireshark wiki at *[http://wiki.wireshark.org/](http://wiki.wireshark.org/)*.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示频道11上的所有流量。你可以将`11`值替换为你希望过滤的频道。你可以使用数百个其他有用的过滤器来过滤无线网络流量。你可以在Wireshark
    wiki上查看更多的无线捕获过滤器，网址为 *[http://wiki.wireshark.org/](http://wiki.wireshark.org/)*。
- en: '**Saving a Wireless Profile**'
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**保存无线配置文件**'
- en: It’s a fair bit of work to go through all the trouble of setting up specific
    columns and saving custom filters for wireless packet analysis. Instead of reconfiguring
    and removing columns and filters all the time, you can create and save a custom
    profile to quickly switch between configurations for wired and wireless analysis.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 配置特定的列并保存自定义过滤器以进行无线数据包分析确实需要一些工作。与其每次都重新配置和移除列与过滤器，你可以创建并保存一个自定义配置文件，快速在有线和无线分析配置之间切换。
- en: To save a custom profile, first configure wireless columns and filters to your
    liking. Then right-click the active profile listing at the bottom right of the
    screen and click **New**. Name the profile **Wireless** and click **OK**.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 要保存一个自定义配置文件，首先配置无线列和过滤器，使其符合你的喜好。然后，右键单击屏幕右下角的活动配置文件列表，点击**新建**。命名配置文件为**无线**，然后点击**确定**。
- en: '**Wireless Security**'
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**无线安全**'
- en: The biggest concern when deploying and administering a wireless network is the
    security of the data transmitted across it. With data flying through the air,
    free for the taking by anyone who knows how, it’s crucial that the data be encrypted.
    Otherwise, anyone with Wireshark and an AirPcap can see it.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 部署和管理无线网络时，最大的关注点是通过无线网络传输的数据的安全性。由于数据在空中飞行，任何知道如何的人都可以轻松截获，因此加密数据至关重要。否则，任何拥有Wireshark和AirPcap的人都可以看到这些数据。
- en: '**NOTE**'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*When another layer of encryption, such as SSL or SSH, is used, traffic will
    still be encrypted at that layer, and the user’s communication will still be unreadable
    by a person with a packet sniffer.*'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '*当使用另一层加密（如SSL或SSH）时，流量仍将在该层进行加密，且使用数据包嗅探器的人仍然无法读取用户的通信内容。*'
- en: The original preferred method for securing data transmitted over wireless networks
    was in accordance with the Wired Equivalent Privacy (WEP) standard. WEP was mildly
    successful for years until several weaknesses were uncovered in its encryption
    key management. To improve security, new standards were created. These include
    the Wi-Fi Protected Access (WPA) and the more secure WPA2 standards. Although
    WPA and WPA2 are fallible, they are considered more secure than WEP.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 用于保护通过无线网络传输的数据的最初首选方法是按照有线等效隐私（WEP）标准进行的。WEP在多年里略微成功，直到其加密密钥管理中暴露出多个弱点。为了提高安全性，创建了新的标准，其中包括Wi-Fi受保护访问（WPA）和更安全的WPA2标准。尽管WPA和WPA2也有缺陷，但它们被认为比WEP更安全。
- en: In this section, we’ll look at some WEP and WPA traffic, along with examples
    of failed authentication attempts.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将查看一些WEP和WPA流量，并展示失败的认证尝试示例。
- en: '***Successful WEP Authentication***'
  id: totrans-163
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***成功的WEP认证***'
- en: '*3e80211_WEPauth.pcapng*'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '*3e80211_WEPauth.pcapng*'
- en: The file *3e80211_WEPauth.pcapng* contains an example of a successful connection
    to a WEP-enabled wireless network. The security on this network is set up using
    a WEP key. This is a key you must provide to the WAP (the wireless access point)
    in order to authenticate to it and decrypt data sent from it. You can think of
    this WEP key as a wireless network password.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 文件*3e80211_WEPauth.pcapng*包含一个成功连接到启用了WEP的无线网络的示例。该网络的安全性是通过WEP密钥进行设置的。这是一个你必须提供给WAP（无线接入点）的密钥，用以进行认证并解密从该点发送的数据。你可以将这个WEP密钥看作是无线网络密码。
- en: As shown in [Figure 13-11](ch13.xhtml#ch13fig11), the capture file begins with
    a challenge from the WAP (28:c6:8e:ab:96:16) to the wireless client (ac:cf:5c:78:6c:9c)
    in packet 3 ➊. The purpose of this challenge is to determine whether the wireless
    client has the correct WEP key. You can see this challenge by expanding the 802.11
    header and its tagged parameters.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图13-11](ch13.xhtml#ch13fig11)所示，捕获文件从WAP（28:c6:8e:ab:96:16）向无线客户端（ac:cf:5c:78:6c:9c）发出的挑战开始，发生在数据包3
    ➊中。此挑战的目的是确定无线客户端是否拥有正确的WEP密钥。您可以通过展开802.11头部及其标记参数来查看此挑战。
- en: The wireless client responds, as shown in [Figure 13-12](ch13.xhtml#ch13fig12),
    by decrypting the challenge text ➊ with the WEP key and returning it to the WAP
    in packet 4\. The WEP key was provided by the user when attempting to connect
    to the wireless network.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 无线客户端做出响应，如[图13-12](ch13.xhtml#ch13fig12)所示，通过使用WEP密钥解密挑战文本 ➊，并将其返回给WAP，数据包4中发送。WEP密钥是用户在尝试连接到无线网络时提供的。
- en: '![image](../images/f310-01.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f310-01.jpg)'
- en: '*Figure 13-11: The WAP issues challenge text to the wireless client.*'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-11：WAP向无线客户端发出挑战文本。*'
- en: '![image](../images/f310-02.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f310-02.jpg)'
- en: '*Figure 13-12: The wireless client sends the unencrypted challenge text back
    to the WAP.*'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-12：无线客户端将未加密的挑战文本返回给WAP。*'
- en: The WAP responds to the wireless client in packet 5, as shown in [Figure 13-13](ch13.xhtml#ch13fig13).
    The response contains a notification that the authentication process was successful
    ➊.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: WAP在数据包5中响应无线客户端，如[图13-13](ch13.xhtml#ch13fig13)所示。响应中包含通知，表明认证过程已成功完成 ➊。
- en: '![image](../images/f311-01.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f311-01.jpg)'
- en: '*Figure 13-13: The WAP alerts the client that authentication was successful.*'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-13：WAP提醒客户端认证成功。*'
- en: Finally, after successful authentication, the client can transmit an association
    request, receive an acknowledgment, and complete the connection process, as shown
    in [Figure 13-14](ch13.xhtml#ch13fig14).
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在认证成功后，客户端可以传输关联请求，接收确认，并完成连接过程，如[图13-14](ch13.xhtml#ch13fig14)所示。
- en: '![image](../images/f311-02.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f311-02.jpg)'
- en: '*Figure 13-14: The authentication process is followed by a simple two-packet
    association request and response.*'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-14：认证过程后跟随简单的两数据包关联请求和响应。*'
- en: '***Failed WEP Authentication***'
  id: totrans-178
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***WEP认证失败***'
- en: '*3e80211_WEPauthfail.pcapng.*'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '*3e80211_WEPauthfail.pcapng.*'
- en: In our next example, a user enters a WEP key to connect to a WAP. After several
    seconds, the wireless client utility reports that it was unable to connect to
    the wireless network but fails to tell why. The resulting file is *3e80211_WEPauthfail.pcapng*.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的下一个示例中，用户输入WEP密钥以连接到WAP。几秒钟后，无线客户端工具报告无法连接到无线网络，但没有告知原因。生成的文件是*3e80211_WEPauthfail.pcapng*。
- en: As with the successful attempt, this communication begins with the WAP’s sending
    challenge text to the wireless client in packet 3\. In packet 4, the wireless
    client sends its response using the WEP key provided by the user.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 与成功的尝试一样，此通信始于WAP在数据包3中向无线客户端发送挑战文本。在数据包4中，无线客户端使用用户提供的WEP密钥发送其响应。
- en: At this point, we would expect to see a notification that the authentication
    was successful, but we see something different in packet 5, as shown in [Figure
    13-15](ch13.xhtml#ch13fig15) ➊.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们预计会看到认证成功的通知，但在数据包5中看到的是不同的内容，如[图13-15](ch13.xhtml#ch13fig15)所示 ➊。
- en: '![image](../images/f311-03.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f311-03.jpg)'
- en: '*Figure 13-15: This message tells us the authentication was unsuccessful.*'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-15：此消息告诉我们认证未成功。*'
- en: This message tells us that the wireless client’s response to the challenge text
    was incorrect and suggests that the WEP key the client used to decrypt the text
    must have also been incorrect. As a result, the connection process has failed.
    It must be reattempted with the proper WEP key.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 此消息告诉我们，无线客户端对挑战文本的响应不正确，提示客户端用于解密文本的WEP密钥也必定是错误的。因此，连接过程失败。必须使用正确的WEP密钥重新尝试连接。
- en: '***Successful WPA Authentication***'
  id: totrans-186
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***WPA认证成功***'
- en: '*3e80211_WPAauth.pcapng*'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '*3e80211_WPAauth.pcapng*'
- en: WPA uses a very different authentication mechanism than WEP, but it still relies
    on the user to enter a key into the wireless client to connect to the network.
    An example of a successful WPA authentication is found in the file *3e80211_WPAauth.pcapng*.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: WPA使用与WEP完全不同的认证机制，但它仍然依赖用户在无线客户端中输入密钥以连接到网络。一个成功的WPA认证示例可以在文件*3e80211_WPAauth.pcapng*中找到。
- en: The first packet in this file is a beacon broadcast from the WAP. Expand the
    802.11 header of this packet, look under tagged parameters, and expand the Vendor
    Specific heading, as shown in [Figure 13-16](ch13.xhtml#ch13fig16). You should
    see a section devoted to the WPA attributes of the WAP ➊. This lets us know the
    version and implementation of WPA that a WAP supports, if any.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件的第一个数据包是来自WAP的信标广播。展开该数据包的802.11头部，查看标签参数，并展开“Vendor Specific”标题，如[图 13-16](ch13.xhtml#ch13fig16)所示。你应该能看到一个部分，专门用于显示WAP的WPA属性
    ➊。这可以让我们知道WAP支持的WPA版本和实现情况（如果有的话）。
- en: '![image](../images/f312-01.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f312-01.jpg)'
- en: '*Figure 13-16: This beacon lets us know that the WAP supports WPA authentication.*'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 13-16：这个信标让我们知道WAP支持WPA认证。*'
- en: Once the beacon is received, the wireless client (ac:cf:5c:78:6c:9c) broadcasts
    a probe request in packet 2 that is received by the WAP (28:c6 :8e:ab:96:16),
    which responds in packet 3\. After that, authentication and association requests
    and responses are generated between the wireless client and WAP in packets 4 through
    7\. These are similar to the authentication and association packets we saw in
    the WEP example earlier, but no challenge and response occur here. That exchange
    happens next.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦信标被接收，无线客户端（ac:cf:5c:78:6c:9c）在数据包 2 中广播一个探测请求，该请求被WAP（28:c6:8e:ab:96:16）接收，并在数据包
    3 中作出回应。之后，认证和关联请求与响应在数据包 4 到 7 之间生成。这些类似于我们在早期WEP示例中看到的认证和关联数据包，但此时没有挑战和响应发生。那个交换接下来会发生。
- en: Things really start to pick up in packet 8\. This is where the WPA handshake
    begins, continuing through packet 11\. During the handshake, the WPA challenge
    and response take place, as shown in [Figure 13-17](ch13.xhtml#ch13fig17).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 真正开始加速的时刻是在数据包 8。此时WPA握手开始，持续到数据包 11。在握手过程中，WPA的挑战和响应发生，如[图 13-17](ch13.xhtml#ch13fig17)所示。
- en: '![image](../images/f313-01.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f313-01.jpg)'
- en: '*Figure 13-17: These packets are a part of the WPA handshake.*'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 13-17：这些数据包是WPA握手的一部分。*'
- en: There are two challenges and responses. Each can be matched with the other based
    on the Replay Counter field under the 802.1x Authentication header, as shown in
    [Figure 13-18](ch13.xhtml#ch13fig18). Notice that the Replay Counter value for
    the first two handshake packets is `1` ➊ and for the second two handshake packets
    is `2` ➋.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个挑战和响应。每个可以根据802.1x身份验证头下的重放计数器字段互相匹配，如[图 13-18](ch13.xhtml#ch13fig18)所示。注意，前两个握手数据包的重放计数器值为`1`
    ➊，而后两个握手数据包的重放计数器值为`2` ➋。
- en: '![image](../images/f313-02.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f313-02.jpg)'
- en: '*Figure 13-18: The Replay Counter field helps us pair challenges and responses.*'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 13-18：重放计数器字段帮助我们配对挑战和响应。*'
- en: After the WPA handshake is completed and authentication is successful, data
    begins transferring between the wireless client and the WAP.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在WPA握手完成且认证成功后，数据开始在无线客户端和WAP之间传输。
- en: '**NOTE**'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*This example is from a WAP using WPA with TKIP encryption. TKIP is just one
    method for encrypting data on WLANs. There are many other types of encryption,
    and different access points will support different techniques. A WAP using a different
    encryption method or WPA version will likely exhibit different characteristics
    at the packet level. You can read the RFC document relating to the technology
    being used to better decipher what the connection sequence should look like.*'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '*这个示例来自于使用TKIP加密的WPA的WAP。TKIP只是WLAN上加密数据的一种方法。还有许多其他类型的加密，不同的接入点将支持不同的技术。使用不同加密方法或WPA版本的WAP，在数据包层面上可能会表现出不同的特征。你可以阅读与所使用技术相关的RFC文档，以便更好地解读连接序列应如何呈现。*'
- en: '***Failed WPA Authentication***'
  id: totrans-202
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***WPA认证失败***'
- en: '*3e80211_WPAauthfail.pcapng*'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '*3e80211_WPAauthfail.pcapng*'
- en: As with WEP, we’ll look at what happens when a user enters a WPA key and the
    wireless client utility reports that it was unable to connect to the wireless
    network without indicating the problem. The resulting file is *3e80211_WPAauthfail.pcapng*.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 与WEP类似，我们将看看当用户输入WPA密钥并且无线客户端工具报告无法连接到无线网络，但没有指示问题时发生了什么。生成的文件是*3e80211_WPAauthfail.pcapng*。
- en: The capture file begins in a manner identical to the file showing a successful
    WPA authentication and includes probe, authentication, and association requests.
    The WPA handshake begins in packet 8, but in this case, there are eight handshake
    packets instead of the four we saw in the successful authentication attempt.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获文件的开始方式与显示成功WPA认证的文件相同，并包括探测、认证和关联请求。WPA握手从第8个数据包开始，但在这种情况下，握手数据包有八个，而不是我们在成功认证尝试中看到的四个。
- en: Packets 8 and 9 represent the first two packets seen in the WPA handshake. In
    this case, however, the challenge text the client sends back to the WAP is incorrect.
    As a result, the sequence is repeated in packets 10 and 11, 12 and 13, and 14
    and 15, as shown in [Figure 13-19](ch13.xhtml#ch13fig19). Each request and response
    can be paired using the Replay Counter value.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包8和9代表WPA握手中看到的前两个数据包。然而，在这种情况下，客户端发送回WAP的挑战文本是不正确的。因此，序列在数据包10和11、12和13以及14和15中重复，如[图13-19](ch13.xhtml#ch13fig19)所示。每个请求和响应可以通过重放计数器值进行配对。
- en: '![image](../images/f314-01.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f314-01.jpg)'
- en: '*Figure 13-19: The additional EAPoL (Extensible Authentication Protocol over
    LAN) packets here indicate the failed WPA authentication.*'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-19：此处额外的EAPoL（局域网扩展认证协议）数据包表明WPA认证失败。*'
- en: Once the handshake process has been attempted and failed four times, the communication
    is aborted. As shown in [Figure 13-20](ch13.xhtml#ch13fig20), the wireless client
    deauthenticates from the WAP in packet 16 ➊.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦握手过程尝试并失败四次，通信将被中止。如[图13-20](ch13.xhtml#ch13fig20)所示，无线客户端在第16个数据包中从WAP断开认证➊。
- en: '![image](../images/f315-01.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f315-01.jpg)'
- en: '*Figure 13-20: After failing the WPA handshake, the client deauthenticates.*'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '*图13-20：在WPA握手失败后，客户端断开认证。*'
- en: '**Final Thoughts**'
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**最终思考**'
- en: Although wireless networks are still considered somewhat insecure, unless a
    plethora of additional security mechanisms are piled on, that concern hasn’t slowed
    their deployment in various organizational environments. As communication without
    wires is the new norm, it’s crucial to be able to capture and analyze data on
    wireless networks, as well as wired ones. The skills and concepts taught in this
    chapter are by no means exhaustive, but they should provide a jump-start for understanding
    the intricacies of troubleshooting wireless networks with packet analysis.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管无线网络仍然被认为有些不安全，除非附加了大量额外的安全机制，否则这一担忧并没有减缓它们在各种组织环境中的部署。由于无线通信已经成为新常态，能够捕获并分析无线网络以及有线网络上的数据变得至关重要。本章所教授的技能和概念并非详尽无遗，但它们应该为理解使用数据包分析进行无线网络故障排除的复杂性提供一个起点。
