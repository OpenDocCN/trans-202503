- en: —24—
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Priority Queues for Investigations
  prefs: []
  type: TYPE_NORMAL
- en: Captain Donavan,” Notation blurted as she came into the office. “I’d like to
    personally apologize for conducting an unauthorized investigation outside of working
    hours. But this is *my* investigation as much as Frank’s, and if he’s briefing—”
  prefs: []
  type: TYPE_NORMAL
- en: “And how exactly did it become *your* investigation, Officer Notation?” interrupted
    the captain. “I thought I had assigned you to the counterfeit yo-yo case. Why
    were you at Crannock’s farm investigating stolen papers?”
  prefs: []
  type: TYPE_NORMAL
- en: “I was following a lead—” started Notation.
  prefs: []
  type: TYPE_NORMAL
- en: “You were following a lead?” interrupted the captain. “I didn’t see anything
    about an ArrayCart in any of your reports.”
  prefs: []
  type: TYPE_NORMAL
- en: “It occurred to me that morning,” explained Notation.
  prefs: []
  type: TYPE_NORMAL
- en: “You decided to pursue this lead instead of reporting it to the detective in
    charge of the investigation?”
  prefs: []
  type: TYPE_NORMAL
- en: Frank winced. The captain was obsessed with following the correct protocol for
    an investigation. On the captain’s personal list of horrendous violations, the
    failure to report a lead ranked somewhere above the use of heuristic data structures
    and right under the refusal to shower. From Notation’s near-panicked expression,
    he could tell she was thinking the same thing.
  prefs: []
  type: TYPE_NORMAL
- en: “I was already near the farm,” she said. “And—”
  prefs: []
  type: TYPE_NORMAL
- en: “What was the lead?” asked Frank.
  prefs: []
  type: TYPE_NORMAL
- en: Notation turned to him in surprise, either horror-struck that he’d interrupted
    the captain’s interrogation or because she’d simply forgotten he was there.
  prefs: []
  type: TYPE_NORMAL
- en: “I remembered something from the night of the theft,” she said. “I’d just finished
    my nightly report when I saw an odd cart out the window. I didn’t think anything
    of it at the time, because the fishmongers are always using strange carts. I figured
    it was the morning eel delivery.”
  prefs: []
  type: TYPE_NORMAL
- en: She turned to the captain, her eyes pleading. “It seemed like such a long shot,”
    she explained. “I figured it would be a dead end, that the cart was just a delivery.
    I didn’t want to report it until I knew more.”
  prefs: []
  type: TYPE_NORMAL
- en: “And then you joined Frank on the investigation for almost two full days,” said
    the captain.
  prefs: []
  type: TYPE_NORMAL
- en: “We’d found some promising leads,” offered Notation.
  prefs: []
  type: TYPE_NORMAL
- en: “Officer Notation,” the captain snapped. “I don’t care if you were being led
    by the ghost of a former police captain. Procedures exist for a reason. You didn’t
    follow them.”
  prefs: []
  type: TYPE_NORMAL
- en: Notation stared hard at the ground. “I understand, sir.”
  prefs: []
  type: TYPE_NORMAL
- en: “No,” said the captain. “I’m not sure you do. But you’ll have plenty of time
    to think about it. You’re on desk duty until further notice.”
  prefs: []
  type: TYPE_NORMAL
- en: Notation shuddered, but didn’t protest.
  prefs: []
  type: TYPE_NORMAL
- en: The captain turned to Frank. “And you have work to do, Frank,” he said, ending
    the meeting.
  prefs: []
  type: TYPE_NORMAL
- en: As she turned to leave, Notation’s eyes fixed on the portrait of King Fredrick
    hanging on the wall. She seemed lost in thought for a moment.
  prefs: []
  type: TYPE_NORMAL
- en: “Captain,” she said suddenly. “Do you have any priority queues?”
  prefs: []
  type: TYPE_NORMAL
- en: Frank took a moment to make the connection, but finally dredged up the faint
    memory. One of his professors had droned on in class about how King Fredrick had
    popularized priority queues.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0195-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Before he’d become king, Fredrick held audience to hear the complaints and concerns
    of the kingdom’s citizens. Due to his tight schedule and the abundance of the
    citizenry’s complaints, he had been forced to develop a prioritization scheme.
    A prince could only be expected to endure so many complaints at a time.
  prefs: []
  type: TYPE_NORMAL
- en: First Prince Fredrick had tried a complaint stack, hearing the most recent complaints
    first, but then he missed important older complaints. Then he tried a complaint
    queue, hearing the oldest complaints first, but then he missed important recent
    complaints. Finally, he’d employed a new data structure—the priority queue—which
    allowed him to hear the most important complaints first.
  prefs: []
  type: TYPE_NORMAL
- en: “Priority queues?” asked the captain, clearly thrown off by the sudden question.
    Almost nobody dared speak following a lecture from the captain. They simply shuffled
    humbly out of the office or, in some cases, spent the next few hours huddled in
    a dark broom closet.
  prefs: []
  type: TYPE_NORMAL
- en: '“Data structures,” explained Notation, apparently on autopilot. “They’re like
    regular queues: you enqueue and dequeue items. But they also require each item
    to have a priority score—a measure of importance. When you dequeue an item, the
    priority queue always gives you the next most important item.”'
  prefs: []
  type: TYPE_NORMAL
- en: Seeing blank stares from both the captain and Frank, Notation pressed on with
    an example. “If I inserted four items, with priorities 1, 2, 4, and 3, I would
    extract them in the order 4, 3, 2, 1.”
  prefs: []
  type: TYPE_NORMAL
- en: “I know what priority queues are,” said the captain. “We use them for storing
    the list of noise complaints. The louder noises get higher priority, so we are
    always addressing the worst cases first. I heard they use them for smell complaints
    near the sewage marshes as well. Although it seems like everything there would
    have an equally high priority—unbearable. But what’s your point?
  prefs: []
  type: TYPE_NORMAL
- en: “Do you have any?” Notation asked.
  prefs: []
  type: TYPE_NORMAL
- en: The captain shook his head, confusion still keeping his anger in check. “None
    to spare,” he said. “We’re using all of the priority queues we have—one for noise
    complaints, three for different types of crimes, one for the most wanted list,
    and one for vacation requests. Why?”
  prefs: []
  type: TYPE_NORMAL
- en: “Best-first search,” said Notation.
  prefs: []
  type: TYPE_NORMAL
- en: “Best-first search?” asked the Captain. “Frank told me that he was already using
    best-first search.”
  prefs: []
  type: TYPE_NORMAL
- en: “That’s right,” confirmed Frank.
  prefs: []
  type: TYPE_NORMAL
- en: “A priority queue would make it more efficient,” explained Notation. “Each time
    we find a new lead, we could put it into the priority queue with a score indicating
    how good a lead it is. Then, when we’re ready to explore the next lead, we take
    one off the priority queue. We’ll always get the next best lead.”
  prefs: []
  type: TYPE_NORMAL
- en: Frank sighed and shook his head. He knew the captain well enough to see how
    this was going to go. The captain excelled at his own brand of teaching moments.
    He wouldn’t yell or curse, but would calmly lead a new officer into realizing
    their own stupidity. “How were you doing it before?” asked the captain in a patient
    tone. This was not going to end well.
  prefs: []
  type: TYPE_NORMAL
- en: “I keep the leads in a notebook,” responded Notation. “Each time we’re ready
    to explore a new lead, I scan through the entire list of leads to find the best
    one.”
  prefs: []
  type: TYPE_NORMAL
- en: “And how many leads did you have?” asked the captain. “Let’s say on average.”
  prefs: []
  type: TYPE_NORMAL
- en: “On average?” Notation thought about this for a moment. “Between two and five,
    I guess.”
  prefs: []
  type: TYPE_NORMAL
- en: “You want me to use one of the department’s priority queues to help you scan
    through a list of two to five elements?” If the captain had used his customary
    growl, the question might have sounded less harsh. Instead, his calm patience
    made it excruciatingly clear how idiotic he found the whole discussion.
  prefs: []
  type: TYPE_NORMAL
- en: Notation flushed. “Well, priority queues aren’t that expensive . . .” she started,
    but trailed off.
  prefs: []
  type: TYPE_NORMAL
- en: “Look, Officer Notation,” said the captain. “I agree that priority queues are
    great for best-first search. After this meeting, I may order a whole new set,
    one for each detective. But you don’t need one right now. To start with, you don’t
    have enough leads. More importantly, *you aren’t even on this case*.”
  prefs: []
  type: TYPE_NORMAL
- en: Notation’s face had reddened progressively throughout the lecture, and it had
    now achieved the complexion of beet soup. She took a deep breath, looked the captain
    straight in the eye, and mumbled, “I understand, sir.”
  prefs: []
  type: TYPE_NORMAL
- en: Frank felt a surge of pity. Notation had made a classic rookie mistake, overoptimizing
    the solution. He had to hand it to her—the idea of using priority queues for tracking
    leads was perfectly reasonable. In fact, he’d been using a priority queue this
    entire time. However, her timing on the question couldn’t have been worse.
  prefs: []
  type: TYPE_NORMAL
- en: “Notation,” the captain continued, “you’ve got a lot of promise here. You’re
    bright, you’re driven, and you have good instincts. But you have to learn to follow
    orders. Don’t end up like Frank here.”
  prefs: []
  type: TYPE_NORMAL
- en: Notation opened her mouth as though to protest. Then she glanced at Frank, grimaced,
    and closed her mouth without a word of argument. She nodded curtly, snapped a
    salute, and strode from the office.
  prefs: []
  type: TYPE_NORMAL
- en: “And you, Frank, have work to do. Get going.”
  prefs: []
  type: TYPE_NORMAL
- en: Frank turned and followed Notation out, not bothering with even a nod.
  prefs: []
  type: TYPE_NORMAL
- en: _____________________
  prefs: []
  type: TYPE_NORMAL
- en: Frank waited until they had reached the stairs before speaking.
  prefs: []
  type: TYPE_NORMAL
- en: “You know . . . there’s a wizard in the Orb district that can make you an inexpensive
    priority queue. His name is Heaperous, actually. I think that’s how he got into
    data structures in the first place. With a name like Heaperous, I suppose it’s
    an inevitability. Anyway, the priority queue won’t be pretty, but it’ll work.
    He only works mornings, though, so you’ll have to wait ’til tomorrow.”
  prefs: []
  type: TYPE_NORMAL
- en: Notation stopped walking and gave him a suspicious look. “Why are you telling
    me this, Frank?”
  prefs: []
  type: TYPE_NORMAL
- en: Frank forced his face into his best sympathetic look. “I’ve been on the receiving
    end of many of the captain’s speeches. And, more importantly, I know how valuable
    a good data structure can be during an investigation.”
  prefs: []
  type: TYPE_NORMAL
- en: “If good data structures are so valuable, then why don’t *you* use a priority
    queue?” she shot back.
  prefs: []
  type: TYPE_NORMAL
- en: Frank shot her an irritated look. “Of course I use a priority queue. I’ve been
    using one since we started. Did you think I’ve been keeping all the clues in my
    head? I’m too old for that sort of thing.”
  prefs: []
  type: TYPE_NORMAL
- en: “What?” exclaimed Notation. “You’ve been using a priority queue this whole time?
    Why didn’t you say anything to the captain?”
  prefs: []
  type: TYPE_NORMAL
- en: Frank laughed at this. “You have a lot to learn about the captain, rookie. First
    off, you never interrupt him while he’s ranting about *anything*. I once saw a
    detective put on desk duty for a month because she derailed a rant about tofu.
    It wasn’t even a particularly good rant. He’d got stuck alternating between its
    squishy texture and its lack of taste.”
  prefs: []
  type: TYPE_NORMAL
- en: Notation stared at Frank, apparently at a loss for words.
  prefs: []
  type: TYPE_NORMAL
- en: “The point is,” Frank continued, “sometimes you need to take matters into your
    own hands. If a priority queue will help you, don’t wait for the requisition process.
    Just go out and buy one.”
  prefs: []
  type: TYPE_NORMAL
- en: Notation considered this advice. Finally, she nodded. “I guess that buying my
    own equipment won’t technically violate any policies. Thank you, Frank.”
  prefs: []
  type: TYPE_NORMAL
- en: The excitement on Notation’s face almost made Frank feel guilty. Any wizard
    shop in town could make a priority queue, and most would match Heaperous’s prices.
    But Heaperous’s shop in the Orb district was the farthest one still within city
    limits, and Frank needed to make sure Notation stayed out the way for a little
    while longer.
  prefs: []
  type: TYPE_NORMAL
- en: '**POLICE ALGORITHMS 101: PRIORITY QUEUES**'
  prefs: []
  type: TYPE_NORMAL
- en: '***Excerpt from Professor Drecker’s Lecture***'
  prefs: []
  type: TYPE_NORMAL
- en: Of all the data structures you’ll encounter during your career in the police
    force, I guarantee that priority queues will be the most valuable. Like stacks
    and queues, priority queues are data structures that allow you to insert data
    and later remove it in a specific order. Where stacks and queues enforce orderings
    determined by when an element was inserted, priority queues order the data by
    decreasing priority. The next element removed is the highest-priority element
    in the queue, regardless of when it was inserted.
  prefs: []
  type: TYPE_NORMAL
- en: Each item inserted into a priority queue must also have a priority, or score.
    This could be the value of the element itself or a value computed by a different
    function.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider this example of prioritizing noise complaints based on their severity.
    If you inserted the complaints in the following order:'
  prefs: []
  type: TYPE_NORMAL
- en: “The crowd at the Exponentiated Expresso” (score = 3)
  prefs: []
  type: TYPE_NORMAL
- en: “Crab’s Pinch sea shanty contest” (score = 6)
  prefs: []
  type: TYPE_NORMAL
- en: “Farmer Swinson’s rabbit” (score = 1)
  prefs: []
  type: TYPE_NORMAL
- en: “Farmer Swinson’s rooster” (score = 5)
  prefs: []
  type: TYPE_NORMAL
- en: “Farmer Swinson” (score = 7)
  prefs: []
  type: TYPE_NORMAL
- en: 'You would retrieve them from the priority queue as:'
  prefs: []
  type: TYPE_NORMAL
- en: “Farmer Swinson” (score = 7)
  prefs: []
  type: TYPE_NORMAL
- en: “Crab’s Pinch sea shanty contest” (score = 6)
  prefs: []
  type: TYPE_NORMAL
- en: “Farmer Swinson’s rooster” (score = 5)
  prefs: []
  type: TYPE_NORMAL
- en: “The crowd at the Exponentiated Expresso” (score = 3)
  prefs: []
  type: TYPE_NORMAL
- en: “Farmer Swinson’s rabbit” (score = 1)
  prefs: []
  type: TYPE_NORMAL
- en: Note that there are no guarantees that the data will be sorted within the priority
    queue, only that it is extracted in order. As you’ll see in later lectures, data
    structures called *heaps* are an efficient way of implementing priority queues
    that do *not* keep the data in fully sorted order.
  prefs: []
  type: TYPE_NORMAL
- en: The capital’s station uses a variety of priority functions. As you might expect,
    the queue most hotly debated is the vacation priority queue. This queue is ordered
    solely by the officer’s number of unused vacation days. Despite previous requests,
    no additional priority is given for the niceness of the vacation spot. Upcoming
    trips to glaciers, beaches, and swamps are treated equally. Instead, the queue
    prioritizes based on one measure of fairness. It helps to ensure that the next
    officer to go on vacation is the one who’s taken the fewest vacation days this
    year.
  prefs: []
  type: TYPE_NORMAL
