- en: 4. gongkai innovation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If the term *intellectual property* sounds like an oxymoron to you, you’re
    not alone. If I give you an apple and say, “This is your apple,” what that means
    is pretty clear. You can do what you want with that apple: you can eat it, sell
    it, or even use the seeds to plant an apple tree and make more apples, which you
    can then sell or use to feed your family. But if I hand you a phone and say, “This
    Apple iPhone is yours,” you own the collection of atoms in your hand, but you
    have extremely limited rights to the software, patents, and trademarks—the intellectual
    property—associated with that phone. Unlike with the fruit, you can’t take what’s
    inside your iPhone and use that knowledge as a seed to make more iPhones.'
  prefs: []
  type: TYPE_NORMAL
- en: Intellectual property works very differently in China, though. There, you could
    (and people do) use a phone as the seed for your own original works. Two experiences
    I had in China opened my eyes to the fact that there isn’t one true path for dealing
    with intellectual property.
  prefs: []
  type: TYPE_NORMAL
- en: '**I BROKE MY PHONE’S SCREEN, AND IT WAS AWESOME**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: My first story begins, as many of my adventures do, with stepping out of a taxi
    at the Futian border checkpoint going into China. It was May 2014, and I was heading
    to Shenzhen to hammer out production plans for the Novena open hardware laptop,
    which I’ll talk more about in [Chapter 7](ch07.xhtml#ch07). As I stepped out of
    the taxi, my hand caught on my backpack, sending my phone tumbling toward the
    concrete sidewalk. As the phone smashed into the ground, I heard the dry “thud”
    of a shattering touchscreen.
  prefs: []
  type: TYPE_NORMAL
- en: There is no better place in the world to break your phone’s screen than the
    border crossing into Shenzhen. Within an hour, I had a new screen installed by
    skilled hands in Hua Qiang Bei, for just $25—including parts and labor.
  prefs: []
  type: TYPE_NORMAL
- en: I originally planned to replace the screen myself. The phone still worked, so
    I hastily visited iFixit for details on how to replace the screen and then booked
    it to Hua Qiang Bei to purchase replacement parts and tools. The stall I visited
    quoted me about $120 USD for a new screen, but then the shop owner grabbed my
    phone out of my hands and launched a built-in self-test program by punching *#0*#
    into the dialer UI.
  prefs: []
  type: TYPE_NORMAL
- en: She confirmed that there were no bad pixels on my OLED display and that the
    digitizer was still functional, just cracked. She then offered to buy my broken
    OLED and digitizer module, but only if her shop could replace my screen. I said
    that would be fine as long as I could watch to make sure they didn’t swap out
    any other parts.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, they had no problem with that. In 20 minutes, they took my phone
    apart, removed the broken module, stripped the adhesive from the phone body, replaced
    the adhesive, fitted the phone with a “new” (presumably refurbished) module, and
    put it all back together. The process involved a hair dryer (used as a heat gun),
    copious amounts of contact cleaner (used to soften the adhesive), and a very long
    thumbnail (in lieu of a spudger/guitar pick). Unfortunately, I couldn’t take pictures
    of the process because the device I would have used to do so was in pieces in
    front of me.
  prefs: []
  type: TYPE_NORMAL
- en: This is the power of recycling and repair. Instead of paying $120 for a screen
    and throwing away a functional piece of electronics, I just paid the cost to replace
    the broken glass. I had assumed that the glass on the digitizer was inseparable
    from the OLED, but apparently those clever folks in Hua Qiang Bei found an efficient
    way to recycle those parts. After all, the bulk of the module’s cost was in the
    OLED display. The touchscreen sensor electronics, which were also grafted onto
    the module, were undamaged by the fall. Why waste perfectly good parts?
  prefs: []
  type: TYPE_NORMAL
- en: 'And so my phone had a broken screen for all of an hour, and it was fixed for
    less than the cost of shipping spare parts to Singapore (my country of residence).
    Experiences like this get me thinking: why aren’t there services like this in
    every country? What makes Shenzhen so unique that you can go from a broken screen
    to a fixed phone in half an hour for much less than the cost of a monthly phone
    bill? A multitude of factors contribute to this phenomenon, most of which can
    be traced to a group of people called the *shanzhai*.'
  prefs: []
  type: TYPE_NORMAL
- en: '**SHANZHAI AS ENTREPRENEURS**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The shanzhai of China originally became famous as the producers of knockoffs
    of products like the iPhone, so they’ve historically been dismissed by the popular
    press as simply “copycat barons.” But I think they may have something in common
    with teams like Hewlett and Packard or Jobs and Wozniak, back when they were working
    out of garages.
  prefs: []
  type: TYPE_NORMAL
- en: '**Who Are the Shanzhai?**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To understand why I think this, it helps to understand the cultural context
    of the word *shanzhai*. Shanzhai (山寨) comes from the Chinese words *mountain fortress*,
    but the literal translation is a bit misleading. The English term *fortress* connotes
    a large fortified structure or stronghold, perhaps conjuring imagery of castle
    turrets and moats. On the other hand, its denotation states that it is simply
    a fortified place, and this is closer to the original Chinese meaning, which refers
    to something like a cave or guerrilla-style hideout.
  prefs: []
  type: TYPE_NORMAL
- en: In its contemporary context, *shanzhai* is a historical allusion to the people
    who lived in such hideouts, like Song Jiang and his 108 bandits, a group of outlaws
    who lived in the 12th century. A friend of mine described Song Jiang as a sort
    of Robin Hood meets Che Guevara. He was a rebel and a soldier of fortune, yet
    selfless and kind to those in need. The tale is still popular today; my father
    instantly recognized it when I asked him about it.
  prefs: []
  type: TYPE_NORMAL
- en: Modern shanzhai innovators are rebellious, individualistic, underground, and
    self-empowered—just like Song Jiang. They’re rebellious in the sense that they
    are celebrated for their copycat products. They’re individualistic in the sense
    that they have a visceral dislike for the large companies. (Many shanzhai are
    former employees of large companies, both American and Asian, who departed because
    they were frustrated by the inefficiency of their employers.) They’re underground
    in the sense that once a shanzhai “goes legit” and does business directly through
    traditional retail channels, they no longer belong to the fraternity of the shanzhai.
    They’re self-empowered in the sense that they’re universally tiny operations,
    bootstrapped on minimal capital, and their attitude is, “If you can do it, then
    I can as well.”
  prefs: []
  type: TYPE_NORMAL
- en: An estimated 300 shanzhai organizations were operating in Shenzhen in 2009\.
    Shanzhai shops range from just a couple of folks to a few hundred employees. Some
    specialize in processes like tooling, PCB design, PCB assembly, or cell phone
    skinning, while others have broader capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Since the shanzhai are small, they have to be efficient to maximize output.
    One shop of under 250 employees can churn out over 200,000 mobile phones per month
    with a high mix of products, sometimes producing runs as short as a few hundred
    units. Collectively, shanzhai in the Shenzhen area produced an estimated 20 million
    phones per month in 2009\. That’s an economy approaching a billion dollars a month.
    Most of those phones sell into third-world and emerging markets like India, Africa,
    Russia, and southeast Asia.
  prefs: []
  type: TYPE_NORMAL
- en: '**More Than Copycats**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Significantly, the shanzhai’s product portfolio includes more than just copycat
    phones. They innovate and riff on designs to make original products as well. These
    original phones integrate wacky features like 7.1 stereo sound, dual SIM cards,
    a functional cigarette holder, a high-zoom lens, or a built-in UV LED for counterfeit
    money detection.
  prefs: []
  type: TYPE_NORMAL
- en: 'The shanzhai do to hardware what the web did to mashup compilations. Mobile
    phones that are also toy Ferraris and watch-phone combos (complete with camera!)
    are good examples: they don’t copy any single idea, but rather mix IP from multiple
    sources to create a new heterogeneous composition, such that the original source
    material is still distinctly recognizable in the final product. Also, like many
    web mashups, the result might seem nonsensical to a mass market (like the Ferrari
    phone) but is extremely relevant to a select long-tail market. In a way, some
    shanzhai products are just ahead of their time; the watch-phones I saw, for example,
    predated smartwatches by several years.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0124-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Top: The front and back sides of a phone made to look like a pack of cigarettes.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Bottom left: An Android-based smart watch, which unlike the Apple Watch includes
    a call-capable phone in the watch. Bottom right: A shanzhai-designed “baby iPhone,”
    running Android, shown next to an Apple iPhone 6 for scale*.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Community-Enforced IP Rules**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The shanzhai also employ a concept called the *open BOM*: when one shanzhai
    builds something new, they share the bill of materials and other design documents
    with the others. If the product is based on an existing product, any improvements
    they make are also shared. These rules are policed by word of mouth within the
    community to the extent that if someone is found cheating, they are ostracized
    by the shanzhai ecosystem.'
  prefs: []
  type: TYPE_NORMAL
- en: This system is viewed very positively in China. For example, I once heard a
    local say it was great that the shanzhai could not only clone an iPhone but also
    improve upon the original by giving the clone a user-replaceable battery. US law
    would call this activity illegal and infringing, but given the fecundity of mashup
    culture on the web, I can’t help but wonder if hardware mashup isn’t a bad thing.
    There’s definitely a perception in the United States that if it’s strange and
    it happens in China, it must be bad. This bias casts a long shadow over objective
    evaluation of a cultural phenomenon that could eventually be very relevant to
    the United States.
  prefs: []
  type: TYPE_NORMAL
- en: In a sense, the shanzhai are brethren of the classic Western notion of hacker-entrepreneurs,
    but with a distinctly Chinese twist. My personal favorite shanzhai story is about
    a chap who owns a three-story house that I am extraordinarily envious of. His
    bedroom is on top, the middle floor is a complete SMT manufacturing line, and
    the bottom floor is a retail outlet for the products produced a floor above and
    designed in his bedroom. Talk about a vertically integrated supply chain! Owning
    infrastructure like that would certainly disrupt the way I innovate. I could save
    on production costs, reduce my prototyping time, and aggressively turn inventory
    around, thereby reducing inventory capital requirements. And if my store were
    in a high-traffic urban location, I could also cut out the 20 to 50 percent minimum
    retail margin typically required by US retailers.
  prefs: []
  type: TYPE_NORMAL
- en: I have a theory that when the amount of knowledge and the scale of the markets
    in Shenzhen reach critical mass, the Chinese will stop being simply workers or
    copiers. They’ll take control of their destinies and, ultimately, become innovation
    leaders. These stories about the shanzhai and their mashups are just the tip of
    an iceberg with the potential to change the way business is done—perhaps not in
    the United States, but certainly in that massive, untapped market often referred
    to as “the rest of the world.”
  prefs: []
  type: TYPE_NORMAL
- en: '**THE $12 PHONE**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Mashup cell phones demonstrate the shanzhai’s innovation and willingness to
    experiment. But despite all the bells and whistles, those phones are quite affordable.
    One question you might ask, then, is how cheaply can you make a phone?
  prefs: []
  type: TYPE_NORMAL
- en: A short jaunt to the northeast corner of the Hua Qiang Bei electronics district
    brings you to the Mingtong Digital Mall. It’s a four-story maze packed with tiny
    shops hawking all manner of quirky phones with features useful in economies that
    lack the infrastructure of consistent electricity or cable networks. For instance,
    some phones can run for a month thanks to comically oversized batteries. Others
    have analog TV tuners, integral hand-crank chargers, and multiple user profiles,
    enabling a family or small village to share a single phone.
  prefs: []
  type: TYPE_NORMAL
- en: During a visit to the Hua Qiang Bei district in 2013, I paid $12 for a complete
    phone, featuring quad-band GSM, Bluetooth, MP3 playback, an OLED display, and
    a keypad for the UI. It’s nothing compared to a smartphone, but it’s useful if
    you’re going out and worried about your primary phone getting wet or stolen. And
    for a couple billion people, it may be the only phone they can afford.
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind this is the contract-free price. In countries that allow carriers
    to lock phones, such as the United States, phones are often given away or sold
    to buyers at a fraction of their cost in exchange for a subscription contract
    often worth several times the phone’s value. The fact that I paid $12 over the
    counter for a contract-free, nonpromotional, unlocked, new-in-box phone with a
    charger, protective silicone sleeve, and cable means that the phone’s production
    cost has to be somewhere below the retail price of $12\. Otherwise, the phone’s
    maker would be losing money. Rumors placed its cost below $10.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0127-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*My simple but functional $12 phone*'
  prefs: []
  type: TYPE_NORMAL
- en: This is a really amazing price point. That’s about the price of a large Domino’s
    cheese pizza, or a decent glass of wine in an urban US restaurant. It’s even cheap
    compared to an Arduino Uno. Admittedly, the comparison is a little unfair, but
    humor me and take a look at the specs for both, shown in [Table 1](ch04.xhtml#tab01).
  prefs: []
  type: TYPE_NORMAL
- en: '**Table 1:** Comparing the $12 Phone with an Arduino'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Spec** | **This phone** | **Arduino Uno** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Price | $12 | $29 |'
  prefs: []
  type: TYPE_TB
- en: '| CPU speed | 260 MHz, 32-bit | 16 MHz, 8-bit |'
  prefs: []
  type: TYPE_TB
- en: '| RAM | 8MiB | 2.5kiB |'
  prefs: []
  type: TYPE_TB
- en: '| Interfaces | USB, microSD, SIM | USB |'
  prefs: []
  type: TYPE_TB
- en: '| Wireless | Quadband GSM, Bluetooth | — |'
  prefs: []
  type: TYPE_TB
- en: '| Power | LiPo battery, includes adapter | External, no adapter |'
  prefs: []
  type: TYPE_TB
- en: '| Display | Two-color OLED | — |'
  prefs: []
  type: TYPE_TB
- en: How is it possible that this phone has better specs than an Arduino and costs
    less than half the price? I don’t have the answers, but I’m trying to learn them.
    Tearing down the phone yielded a few hints.
  prefs: []
  type: TYPE_NORMAL
- en: '**Inside the $12 Phone**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, there are no screws in this phone. The whole case snaps together.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0128-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*The back of the phone, after the cover is removed*'
  prefs: []
  type: TYPE_NORMAL
- en: There are (almost) no connectors on the inside. For shipping and storage, you
    get to flip a switch to hard-disconnect the battery. As best as I can tell, the
    battery also has no secondary protection circuit. Still, the phone features accoutrements
    such as a backlit keypad and decorative lights around the edge.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0129-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Everything from the display to the battery is soldered directly to the board.*'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0129-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*There are little decorative LEDs all over this PCB*.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0130-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*The Bluetooth antenna is the small length of wire on the bottom left.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The electronics consist of just two major ICs: the MediaTek MT6250DA and a
    Vanchip VC5276\. The MT6250 is rumored to sell in volume for under $2\. I was
    able to anecdotally confirm the price by buying a couple of pieces on cut tape
    from a retail broker for about $2.10 each.[*](footnote.xhtml#fn6) That beats the
    best price I’ve ever been able to get on an ATMega of the types used in an Arduino.
    With price competition like this, Western firms are suing to protect ground: Vanchip
    got into a bit of a legal tussle with RF Micro, and MediaTek has been subject
    to a few lawsuits of its own.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0130-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Two MediaTek MT6250 ICs*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Of course, you can’t just call up MediaTek and buy these chips. It’s extremely
    difficult to engage with them “going through the front door” to do a design. However,
    if you know a bit of Chinese and the right websites, you can download schematics,
    board layouts, and software utilities for something similar to this phone, possibly
    with some different parts ... for “free.” *Free* is in quotes because you could
    obtain the source code but not the unambiguous legal right to use it, as the source
    code was distributed without the explicit legal consent of the copyright holders.
    But anyone unconcerned or unfamiliar with such legal frameworks could build versions
    of this phone, with minimal cash investment. It feels like open source, but it’s
    not: it’s a different kind of open ecosystem.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Introducing Gongkai**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Welcome to the Galapagos of Chinese “open” source. I call it *gongkai* (公开),
    which is the Chinese transliteration of the English *open*, as applied to *open
    source*. There’s a literal translation for *open source* into Chinese (*kaiyuan*),
    but the only similarity between gongkai practices and Western open source practices
    is that both allow you to download source code; the legal and cultural frameworks
    that enable such sharing couldn’t be more different. It’s like convergent evolution,
    where two species may exhibit similar traits, but the genes and ancestry are totally
    different.
  prefs: []
  type: TYPE_NORMAL
- en: Gongkai refers to the fact that copyrighted documents, sometimes labeled “confidential”
    and “proprietary,” are made known to the public and shared overtly, but not necessarily
    according to the letter of the law. This copying isn’t a one-way flow of value,
    as it would be in the case of copied movies or music. Rather, these documents
    are the knowledge base someone would need to build a phone using the copyright
    owner’s chips, and sharing the documents promotes sales of their chips. There
    is ultimately a quid pro quo between the copyright holders and the copiers.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0132-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Comparing IP models. On the left, the Western “broadcast” model, with a single
    owner who controls and disseminates IP and is paid by society. On the right, the
    Chinese “network” model, where IP trades hands like a commodity, and payment is
    often in-kind or as favors*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This gray relationship between companies and entrepreneurs is just one manifestation
    of a much broader cultural gap between the East and the West. The West has a “broadcast”
    view of IP and ownership: good ideas and innovation are credited to a clearly
    specified set of authors or inventors, and society pays them a royalty for their
    initiative and good works. China has a “network” view of IP and ownership: one
    attains the far-reaching sight necessary to create good ideas and innovations
    by standing on the shoulders of others, and people trade these ideas as favors.
    In a system with such a loose attitude toward IP, sharing with the network is
    necessary, as tomorrow your friend could be standing on your shoulders, and you’ll
    be looking to them for favors.'
  prefs: []
  type: TYPE_NORMAL
- en: In the West, however, rule of law enables IP to be amassed over a long period
    of time, creating impenetrable monopoly positions. That’s good for the guys on
    top but tough for upstarts, causing a situation like the modern Western cell phone
    market. Companies like Apple and Google build amazing phones of outstanding quality,
    and startups can only hope to build an “appcessory” for their ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: 'I’ve reviewed business plans for over 100 hardware startups, and the foundations
    for most are overpriced chipsets built with antiquated process technologies. I’m
    no exception to this rule; the Novena uses a Freescale (now NXP after an acquisition)
    i.MX6 processor, which was neither the cheapest nor the fastest chip on the market
    when I designed the laptop. But it’s a chip with two crucial qualities: anyone
    can freely download almost complete documentation for it, and anyone can buy it
    on Digi-Key.'
  prefs: []
  type: TYPE_NORMAL
- en: Scarce documentation and supply for cutting-edge technology force Western hardware
    entrepreneurs to look primarily at Arduino, Beaglebone, and Raspberry Pi as starting
    points for their good ideas. Chinese entrepreneurs, on the other hand, churn out
    new phones at an almost alarming pace.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0133-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Every object pictured here is a phone.*'
  prefs: []
  type: TYPE_NORMAL
- en: Phone models change on a seasonal basis. Entrepreneurs experiment all the time,
    integrating wacky features into phones, such as cigarette lighters, extra-large
    battery packs (to charge a second phone), huge buttons (for the visually impaired),
    call-home buttons only (to give to children for emergencies), watch form factors,
    and so on. This works because small teams of engineers can obtain complete design
    packages for working phones—including the case, board, and firmware— allowing
    them to fork the design and focus only on changing the pieces they really care
    about.
  prefs: []
  type: TYPE_NORMAL
- en: As a hardware engineer, I want that.
  prefs: []
  type: TYPE_NORMAL
- en: I want to be able to fork existing cell phone designs. I saw the $12 phone,
    and I, too, wanted to use a 364 MHz 32-bit microcontroller with megabytes of integrated
    RAM and dozens of peripherals that costs $3 in single quantities. The Arduino
    Uno’s ATMega microcontroller, a 16 MHz 8-bit microcontroller with a few kilobytes
    of RAM and a smattering of peripherals, pales in comparison yet costs twice as
    much, at $6.
  prefs: []
  type: TYPE_NORMAL
- en: '**From Gongkai to Open Source**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: So, I decided to take my study of the phone one step further from a teardown,
    and attempt to make my own version—in the style of the shanzhai, but interpreted
    through Western eyes. That’s how Sean “xobs” Cross and I started a project we
    dubbed *Fernvale*. Sean has been my adventure partner on dozens of projects since
    we first met at Chumby, where I recognized his talent as a firmware engineer when
    he showed me how he ported Quake to chumby in his spare time. Sean has always
    marched to the beat of his own drum. Born in Germany to American parents, he studied
    cognitive science in college, and prior to working at Chumby, he spent six months
    wandering New Zealand and Australia, searching for adventure and work. At Chumby,
    he was easy to spot, thanks to his ponytail and kilt (actually, a Utilikilt).
  prefs: []
  type: TYPE_NORMAL
- en: After Chumby went out of business, Sean and I found ourselves washed up on the
    shores of Singapore, where I started a boutique hardware consulting firm called
    Sutajio Ko-Usagi, which is *bunniestudios* translated to Japanese and then romanized
    into English characters. Sean’s virtuoso coding abilities have been an excellent
    complement to my hardware design skills, and since then, we’ve completed several
    significant open source projects.
  prefs: []
  type: TYPE_NORMAL
- en: We figured at first we should at least try to go “through the front door” and
    inquire directly with the chipmakers about what it might take to get a proper
    Western-licensed embedded development kit (EDK) for the chips used in these shanzhai
    phones. Our inquiries were met with a cold shoulder. I was told the volumes for
    our little experiment were too small, or we’d have to enter minimum purchase agreements
    backed by a prohibitive cash deposit in the hundreds of thousands of dollars.
  prefs: []
  type: TYPE_NORMAL
- en: Even for people who jump through such hoops, these EDKs don’t include all the
    reference material the Chinese get to play with. The datasheets are incomplete,
    and you’re forced to use the companies’ proprietary OS ports. It feels like a
    case of the nice guys finishing last. Could we find a way to get ahead yet still
    play nice?
  prefs: []
  type: TYPE_NORMAL
- en: '**Engineers Have Rights, Too**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Thus, Fernvale had two halves: the technical task of reverse engineering and
    re-engineering the phone and the legal task of creating a general methodology
    for absorbing gongkai IP into the Western ecosystem. I’ll recount the technical
    task in [Chapter 9](ch09.xhtml#ch09) and focus on the legal task for the remainder
    of this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: 'After some research into the legal frameworks and challenges, I believed I’d
    found a path to repatriate some of the IP from gongkai into proper open source.
    I must, however, give a disclaimer: I’m not a lawyer. I’ll tell you my beliefs,
    but don’t construe them as legal advice.[*](footnote.xhtml#fn7)'
  prefs: []
  type: TYPE_NORMAL
- en: 'My basic idea with Fernvale was to exercise the right to reverse engineer in
    a careful, educated fashion to increase the likelihood that, if push came to shove,
    the courts would agree with my actions. But I also feel that shying away from
    reverse engineering simply because it’s controversial is a slippery slope: to
    have your rights, you must exercise them. If women didn’t vote and black people
    sat in the back of the bus because they were afraid of controversy, the United
    States would still be segregated and without universal suffrage. Although reverse
    engineering is a trivial issue compared to racial equality and universal suffrage,
    the precedent is clear: in order to have rights, you must be bold enough to stand
    up and assert them.'
  prefs: []
  type: TYPE_NORMAL
- en: DEALING WITH PATENTS AND OTHER LAWS
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Open source has two broad categories of IP issues to deal with: patents and
    copyrights. Patents present complex issues, and it seems the most practical approach
    is to essentially punt on the issue. For instance, nobody, as far as I know, checks
    their Linux commits for patent infringement before upstreaming them, and in fact,
    many corporations have similar policies at the engineering level.'
  prefs: []
  type: TYPE_NORMAL
- en: Why? Determining which patents apply and if a product infringes takes a huge
    amount of resources. Even after expending those resources, you can’t be 100 percent
    sure. Further, becoming very familiar with the body of patents amplifies the possibility
    that any infringement is willful, thus tripling damages. Finally, it’s not even
    clear where the liability for infringement lies, particularly in an open source
    context.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, Sean and I did our best not to infringe with Fernvale, but we couldn’t
    be 100 percent sure that no one would allege infringement. However, we did apply
    a license to our work that includes a “poison pill” clause for patent holders
    who might attempt to litigate. Poison pills make the entire body of open source
    work unavailable to any party who files a lawsuit alleging infringement of any
    part against any entity.[*](footnote.xhtml#fn8)
  prefs: []
  type: TYPE_NORMAL
- en: For copyrights, the issue is also extremely complex. The Coders’ Rights Project
    from the Electronic Frontier Foundation (EFF) has a Reverse Engineering FAQ^([†](footnote.xhtml#fn9))
    that’s a good read if you really want to dig into the issues. To sum it up, courts
    have found that reverse engineering to understand the ideas embedded in code and
    to achieve interoperability is fair use. As a result, anyone likely has the right
    to study the gongkai-style IP, understand it, produce a new work, and apply a
    Western-style Open IP license to it.
  prefs: []
  type: TYPE_NORMAL
- en: However, before I could attack the copyright issues for Fernvale, I had to make
    sure we wouldn’t bump into other laws that could impede our fair use rights. First,
    there’s the Digital Millennium Copyright Act (DMCA). The DMCA makes circumventing
    any encryption designed to enforce a copyright basically illegal, with only a
    few poorly tested exemptions allowed. Since none of the files or binaries Sean
    and I downloaded were encrypted or had access controlled by any technological
    measure, we didn’t have to do any circumvention. No circumvention, no DMCA problem.
  prefs: []
  type: TYPE_NORMAL
- en: All the files we obtained came from searches linking to public servers, so there
    would be no Computer Fraud and Abuse Act (CFAA) problems. None of the devices
    we used in the work came with shrink-wraps, click-throughs, or other end-user
    license agreements (EULAs), terms of use, or other agreements that could waive
    our rights.
  prefs: []
  type: TYPE_NORMAL
- en: DEALING WITH COPYRIGHTS
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'With the DMCA, CFAA, and EULA concerns set aside, we were finally able to address
    the core issue: what to do about copyrights.'
  prefs: []
  type: TYPE_NORMAL
- en: The cornerstone of our methodology hinged on decisions rendered on several occasions
    by courts stating that facts are not copyrightable. For example, Justice O’Connor
    wrote the following in *Feist Publications, Inc. v. Rural Telephone Service Co.,
    Inc.* (449 U.S. 340, 345, 349 (1991):[*](footnote.xhtml#fn10)
  prefs: []
  type: TYPE_NORMAL
- en: 'Common sense tells us that 100 uncopyrightable facts do not magically change
    their status when gathered together in one place. ... The key to resolving the
    tension lies in understanding why facts are not copyrightable: The sine qua non
    of copyright is originality.'
  prefs: []
  type: TYPE_NORMAL
- en: 'And:'
  prefs: []
  type: TYPE_NORMAL
- en: Notwithstanding a valid copyright, a subsequent compiler remains free to use
    the facts contained in another’s publication to aid in preparing a competing work,
    so long as the competing work does not feature the same selection and arrangement.
  prefs: []
  type: TYPE_NORMAL
- en: Based on this opinion, anyone has the right to extract facts from proprietary
    documentation and carefully re-express those facts in their own selection and
    arrangement. Just as the facts that “John Doe’s phone number is 555-1212” and
    “John Doe’s address is 10 Main St.” are not copyrightable, facts such as “The
    interrupt controller’s base address is 0xA0060000” and “Bit 1 controls status
    reporting of the LCD” aren’t copyrightable, either. Sean and I extracted such
    facts from datasheets and re-expressed them in our own header files where, as
    the legal owners of newly created expressive speech, we applied a proper open
    source license of our choice.
  prefs: []
  type: TYPE_NORMAL
- en: MAKING A PROGRAMMING LANGUAGE
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: But the situation was further complicated by hardware blocks we had absolutely
    no documentation for. In some cases, we couldn’t even learn what a block’s registers
    meant or how the blocks functioned from a datasheet. For these blocks, we isolated
    and extracted the code responsible for initializing their state. We then reduced
    this code into a list of address and data pairs, and expressed it in a custom
    scripting language we called *scriptic*. We invented our own language to avoid
    subconscious plagiarism—it’s too easy to read one piece of code and, from memory,
    code something almost exactly the same. By transforming the code into a new language,
    we were forced to consider the facts presented and express them in an original
    arrangement.
  prefs: []
  type: TYPE_NORMAL
- en: 'Scriptic is basically a set of assembler macros, and the syntax is very simple.
    Here is an example of a scriptic script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This script initializes the Phase Locked Loop (PLL, a circuit for generating
    clock waveforms) on the target chip for Fernvale, the MediaTek MT6260\. To contrast,
    here are the first few lines of the code snippet from which that scriptic code
    was derived:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The original code actually goes on for pages and pages, and even this snippet
    is surrounded by conditional statements, which we culled as they were irrelevant
    to initializing the PLL correctly.
  prefs: []
  type: TYPE_NORMAL
- en: Knowledge of our rights, a pool of documentation to extract facts from, and
    scriptic were tools in our armory. With them, Sean and I derived sufficient functionality
    for our Fernvale project to eventually boot a small, BSD-licensed, real-time operating
    system (RTOS) known as NuttX, running on our own custom hardware. I’ll go more
    into the gory details of how we did that in [Chapter 9](ch09.xhtml#ch09).
  prefs: []
  type: TYPE_NORMAL
- en: '**CLOSING THOUGHTS**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Rights atrophy and get squeezed out by competing interests if they aren’t vigorously
    exercised. Sean and I did Fernvale because we think it’s imperative to exercise
    our fair use rights to reverse engineer and create interoperable, open source
    solutions. For decades, engineers have sat on the sidelines and seen ever more
    expansive patent and copyright laws shrink their latitude to learn freely and
    to innovate. I’m sad that the formative tinkering I did as a child is no longer
    a legal option for the next generation of engineers.
  prefs: []
  type: TYPE_NORMAL
- en: The rise of the shanzhai and their amazing capabilities is a wake-up call. I
    see it as evidence that a permissive IP environment spurs innovation, especially
    at the grassroots level. If more engineers learn their fair use rights and exercise
    them vigorously and deliberately, perhaps this can catalyze a larger and much-needed
    reform of the patent and copyright system. Our Fernvale project is hopefully just
    a signpost pointing the way for much bigger efforts to bridge the gap between
    the gongkai and open source communities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Being able to cherry-pick the positive aspects of gongkai into the Western
    IP ecosystem is an important tool. Rule of law has its place, and an overly permissive
    system has its own problems. The next chapter explores some of the negative consequences
    of an overly permissive IP ecosystem: fake and counterfeit goods.'
  prefs: []
  type: TYPE_NORMAL
