["```\nmicah@trapdoor ~ % **cd** **`/Volumes/datasets`**\nmicah@trapdoor datasets % **mkdir Parler**\nmicah@trapdoor datasets % **cd Parler**\nmicah@trapdoor Parler %\n```", "```\nmicah@trapdoor Parler % **wget** **https://data.ddosecrets.com/Parler/Videos/ddosecrets-parler**\n**-listing.txt.gz**\n`--snip--`\nResolving data.ddosecrets.com (data.ddosecrets.com)... 172.67.75.15, 104.26.3.199, 104.26.2.199\nConnecting to data.ddosecrets.com (data.ddosecrets.com)|172.67.75.15|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 17790173 (17M) [application/octet-stream]\nSaving to: 'ddosecrets-parler-listing.txt.gz'\n\nddosecrets-parler-listin 100%[==================================>]  16.97M  29.1MB/s    in 0.6s \n`...` (29.1 MB/s) - 'ddosecrets-parler-listing.txt.gz' saved [17790173/17790173]\n```", "```\n**wget** **https://data.ddosecrets.com/Parler/Videos/metadata.tar.gz**\n```", "```\n-rw-r--r--  1 micah  staff    17M Mar 28  2021 ddosecrets-parler-listing.txt.gz\n-rw-r--r--  1 micah  staff    203M Mar 15  2021 metadata.tar.gz\n```", "```\n**gunzip ddosecrets-parler-listing.txt.gz**\n```", "```\n-rw-r--r--  1 user  staff    43M Mar 28  2021 ddosecrets-parler-listing.txt\n-rw-r--r--  1 user  staff    203M Mar 15  2021 metadata.tar.gz\n```", "```\n**cat ddosecrets-parler-listing.txt | wc -l**\n```", "```\n2021-01-12  18:31:54  77632730  0002bz1GNsUP\n2021-01-12  18:37:33  14586730  0003lx5cSwSB\n2021-01-12  18:37:33  822706    0004D2lOBGpr\n2021-01-12  18:37:33  17354739  000EyiYpWZqg\n2021-01-12  18:37:33  2318606   000SbGUM7vD4\n2021-01-12  18:37:33  5894269   000oDvV6Bcfd\n2021-01-12  18:37:36  20806361  0012uTuxv9qQ\n2021-01-12  18:37:34  45821231  0015NlY0yUB5\n`--snip--`\n```", "```\nmicah@trapdoor Parler % **mkdir videos**\nmicah@trapdoor Parler % **cd videos**\n```", "```\n**wget** **https://data.ddosecrets.com/Parler/Videos/0003lx5cSwSB**\n```", "```\n**file 0003lx5cSwSB**\n```", "```\n**mv 0003lx5cSwSB 0003lx5cSwSB.mp4**\n```", "```\n**tar -xvf metadata.tar.gz**\n```", "```\nx metadata/\nx metadata/.aws/\nx metadata/meta-00CnBY5xCdca.json\nx metadata/meta-0003lx5cSwSB.json\nx metadata/meta-0070HNolzi3z.json\nx metadata/meta-00BIFOMnOyi1.json\nx metadata/meta-0002bz1GNsUP.json\n`--snip--`\n```", "```\n**cat metadata/meta-0003lx5cSwSB.json**\n```", "```\n[{\n  \"SourceFile\": \"-\",\n  \"ExifToolVersion\": 12.00,\n  \"FileType\": \"MP4\",\n  \"FileTypeExtension\": \"mp4\",\n  \"MIMEType\": \"video/mp4\",\n  \"MajorBrand\": \"MP4 v2 [ISO 14496-14]\",\n  \"MinorVersion\": \"0.0.0\",\n  \"CompatibleBrands\": [\"mp42\",\"mp41\",\"iso4\"],\n  \"MovieHeaderVersion\": 0,\n  \"CreateDate\": \"2020:10:15 09:35:29\",\n  \"ModifyDate\": \"2020:10:15 09:35:29\",\n  \"TimeScale\": 48000,\n  \"Duration\": \"0:01:59\",\n`--snip--`\n```", "```\n{\"abolitionists\":[{\"first_name\":\"Frederick\",\"last_name\":\"Douglass\"},{\"first_name\":\"John\",\"last\n_name\":\"Brown\"},{\"first_name\":\"Harriet\",\"last_name\":\"Tubman\"}]}\n```", "```\n{\n    \"abolitionists\": [\n        {\n            \"first_name\": \"Frederick\",\n            \"last_name\": \"Douglass\"\n        },\n        {\n            \"first_name\": \"John\",\n            \"last_name\": \"Brown\"\n        },\n        {\n            \"first_name\": \"Harriet\",\n            \"last_name\": \"Tubman\"\n        }\n    ]\n}\n```", "```\n>>> **import json**\n```", "```\n>>> **json_data = '{\"first_name\": \"Frederick\", \"last_name\": \"Douglass\"}****'**\n```", "```\n>>> **type(json_data)**\n<class 'str'>\n```", "```\n>>> **obj = json.loads(json_data)**\n```", "```\n>>> **type(obj)**\n<class 'dict'>\n```", "```\n>>> **print(f\"Hello, Mr. {obj['last_name']}.\")**\nHello, Mr. Douglass.\n```", "```\n>>> **import json**\n>>> **with open(\"****`metadata/meta-HS34fpbzqg2b.json`****\") as f:**\n...      **json_data = f.read()**\n...\n>>> **obj = json.loads(json_data)**\n```", "```\n>>> **print(obj)**\n[{'SourceFile': '-', 'ExifToolVersion': 12.0, 'FileType': 'MOV', 'FileTypeExtension': 'mov',\n'MIMEType': 'video/quicktime', 'MajorBrand': 'Apple QuickTime (.MOV/QT)', 'MinorVersion':\n'0.0.0', 'CompatibleBrands': ['qt '], 'MediaDataSize': 139501464, 'MediaDataOffset': 36,\n`--snip--`\n```", "```\n>>> **len(obj)**\n1\n```", "```\n>>> **print(obj[0])**\n{'SourceFile': '-', 'ExifToolVersion': 12.0, 'FileType': 'MOV', 'FileTypeExtension': 'mov',\n'MIMEType': 'video/quicktime', 'MajorBrand': 'Apple QuickTime (.MOV/QT)', 'MinorVersion':\n'0.0.0', 'CompatibleBrands': ['qt '], 'MediaDataSize': 139501464, 'MediaDataOffset': 36,\n`--snip--`\n```", "```\n>>> **for key in obj[0]:**\n...     **print(key)**\n...\nSourceFile\nExifToolVersion\nFileType\n`--snip--`\nGPSLatitude\nGPSLongitude\nRotation\nGPSPosition\n```", "```\n>>> **print(obj[0][\"GPSLatitude\"])**\n38 deg 53' 26.52\" N\n>>> **print(obj[0][\"GPSLongitude\"])**\n77 deg 0' 28.44\" W\n```", "```\n>>> **json.loads(\"this isn't valid json\")**\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py\",\nline 346, in loads\n    return _default_decoder.decode(s) File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py\",\nline 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py\",\nline 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n```", "```\ntry:\n    obj = json.loads(json_data)\n    print(\"The JSON is valid\")\n    print(obj)\nexcept json.decoder.JSONDecodeError:\n    print(\"Invalid JSON\")\n```", "```\nwith open(\"`filename.json`\") as f:\n    json_data = f.read()\n```", "```\ntry:\n    obj = json.loads(json_data)\nexcept json.decoder.JSONDecodeError:\n    print(\"Invalid JSON\")\n    return\n```", "```\nmicah@trapdoor Parler % **grep -r GPSCoordinates metadata**\n```", "```\nmetadata/meta-31VC1ufihFpa.json:  \"GPSCoordinates\": \"22 deg 8' 0.60\\\" S, 51 deg 22' 4.80\\\" W\",\nmetadata/meta-ImUNiSXcoGKh.json:  \"GPSCoordinates\": \"0 deg 0\" 0.00\\\" N, 0 deg 0' 0.00\\\" E\",\nmetadata/meta-70Tv9tAQUKyL.json:  \"GPSCoordinates\": \"36 deg 10' 49.08\\\" N, 115 deg 26' 45.60\\\"\nW, 1922.566 m Above Sea Level\",\nmetadata/meta-P2w4QOgv5n9U.json:  \"GPSCoordinates\": \"26 deg 14' 46.32\\\" N, 80 deg 5' 38.76\\\" W,\n3.424 m Above Sea Level\",\n`--snip--`\n```", "```\nmicah@trapdoor Parler % **grep -r GPSCoordinates metadata | wc -l**\n64088\n```", "```\n**cat metadata/meta-HS34fpbzqg2b.json | jq**\n```", "```\n[\n  {\n    \"SourceFile\": \"-\",\n    \"ExifToolVersion\": 12,\n    \"FileType\": \"MOV\",\n    \"FileTypeExtension\": \"mov\",\n    \"MIMEType\": \"video/quicktime\",\n    \"MajorBrand\": \"Apple QuickTime (.MOV/QT)\",\n    \"MinorVersion\": \"0.0.0\",\n    \"CompatibleBrands\": [\n      \"qt  \"\n    ],\n`--snip--`\n    \"GPSLatitude\": \"38 deg 53' 26.52\\\" N\",\n    \"GPSLongitude\": \"77 deg 0' 28.44\\\" W\", \"Rotation\": 180,\n    \"GPSPosition\": \"38 deg 53' 26.52\\\" N, 77 deg 0' 28.44\\\" W\"\n  }\n]\n```", "```\nmicah@trapdoor Parler % **cat metadata/meta-HS34fpbzqg2b.json | jq \".[0].GPSPosition\"**\n\"38 deg 53' 26.52\\\" N, 77 deg 0' 28.44\\\" W\"\n```", "```\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n```", "```\n**import click**\n\n**@click.command()**\n**@click.argument(\"parler_metadata_path\")**\ndef main(**parler_metadata_path**):\n    **\"\"\"Filter Parler videos with GPS that were filmed Jan 6, 2021\"\"\"**\n    **print(f\"Parler metadata path: {parler_metadata_path}\")**\n\nif __name__ == \"__main__\":\n    main()\n```", "```\nmicah@trapdoor chapter-11 % **python3 exercise-11-2.py** **`/Volumes/datasets/Parler/metadata`**\nParler metadata path: /Volumes/datasets/Parler/metadata\n```", "```\nimport click\n**import os**\n**import json**\n\n@click.command()\n@click.argument(\"parler_metadata_path\")\ndef main(parler_metadata_path):\n    \"\"\"Filter Parler videos with GPS that were filmed Jan 6, 2021\"\"\"\n    **for filename in os.listdir(parler_metadata_path):**\n        **abs_filename =** **os.path.join(parler_metadata_path, filename)**\n        **if os.path.isfile(abs_filename) and abs_filename.endswith(\".json\"):**\n            **with open(abs_filename) as f:**\n                **json_data = f.read()**\n\n            **try:**\n                **metadata = json.loads(json_data)**\n                **print(f\"Successfully loaded JSON: {filename}\")**\n            **except json.decoder.JSONDecodeError:**\n                **print(f\"Invalid JSON: {filename}\")**\n                **continue**\n\nif __name__ == \"__main__\":\n    main()\n```", "```\nmicah@trapdoor chapter-11 % **python3 exercise-11-2.py** **`/Volumes/datasets/Parler/metadata`**\nSuccessfully loaded JSON: meta-gzK2iNatgLLr.json\nSuccessfully loaded JSON: meta-31VC1ufihFpa.json\nSuccessfully loaded JSON: meta-ZsZRse5JGx8j.json\n`--snip--`\n```", "```\nimport click\nimport os\nimport json\n\n@click.command()\n@click.argument(\"parler_metadata_path\")\ndef main(parler_metadata_path):\n    \"\"\"Filter Parler videos with GPS that were filmed Jan 6, 2021\"\"\"\n    **count = 0**\n\n    for filename in os.listdir(parler_metadata_path):\n        abs_filename = os.path.join(parler_metadata_path, filename) if os.path.isfile(abs_filename) and abs_filename.endswith(\".json\"):\n            with open(abs_filename) as f:\n                json_data = f.read()\n\n            try:\n                metadata = json.loads(json_data)\n            except json.decoder.JSONDecodeError:\n                print(f\"Invalid JSON: {filename}\")\n                continue\n\n            **if \"GPSCoordinates\" in metadata[0]:**\n                **print(f\"Found GPS coordinates: {filename}\")**\n                **count += 1**\n\n    **print(f\"Total videos with GPS coordinates: {count:,}\")**\n\nif __name__ == \"__main__\":\n    main()\n```", "```\nmicah@trapdoor chapter-11 % **python3 exercise-11-2.py** **`/Volumes/datasets/Parler/metadata`**\nFound GPS coordinates: meta-31VC1ufihFpa.json\nFound GPS coordinates: meta-ImUNiSXcoGKh.json\nFound GPS coordinates: meta-70Tv9tAQUKyL.json\n`--snip--`\nFound GPS coordinates: meta-1FMyKoVq53TV.json\nFound GPS coordinates: meta-Y0jO2wy1Z7RO.json\nFound GPS coordinates: meta-aZlkDfPojhxW.json\nTotal videos with GPS coordinates: 63,983\n```", "```\n\"CreateDate\": \"2020:12:28 17:25:47\",\n```", "```\nimport click\nimport os\nimport json\n\n@click.command()\n@click.argument(\"parler_metadata_path\")\ndef main(parler_metadata_path):\n    \"\"\"Filter Parler videos with GPS that were filmed Jan 6, 2021\"\"\"\n    count = 0\n\n    for filename in os.listdir(parler_metadata_path):\n        abs_filename = os.path.join(parler_metadata_path, filename)\n        if os.path.isfile(abs_filename) and abs_filename.endswith(\".json\"):\n            with open(abs_filename, \"rb\") as f:\n                json_data = f.read()\n\n            try:\n                metadata = json.loads(json_data)\n            except json.decoder.JSONDecodeError:\n                print(f\"Invalid JSON: {filename}\")\n                continue\n\n              **if (**\n                **\"GPSCoordinates\" in metadata[0]**\n                **and \"CreateDate\" in metadata[0]**\n                **and metadata[0][\"CreateDate\"].startswith(\"2021:01:06\")**\n            **):**\n                **print(f\"GPS + Jan 6: {filename}\")**\n                count += 1\n\n    **print(f\"Total videos with GPS coordinates, filmed Jan 6: {count:,}\")**\n\nif __name__ == \"__main__\":\n    main()\n```", "```\nmicah@trapdoor chapter-11 % **python3 exercise-11-2.py** **`/Volumes/datasets/Parler/metadata`**\nGPS + Jan 6: meta-xHkUeMHMFx3F.json\nGPS + Jan 6: meta-eGqmDWzz0oSh.json\nGPS + Jan 6: meta-WhQeLMyPWIrG.json\n`--snip--`\nGPS + Jan 6: meta-fhqU4rQ4ZFzO.json\nGPS + Jan 6: meta-pTbZXLmXGyyn.json\nGPS + Jan 6: meta-hL60MjItBhOW.json\nTotal videos with GPS coordinates, filmed Jan 6: 1,958\n```", "```\ndef gps_degrees_to_decimal(gps_coordinate):\n    parts = gps_coordinate.split()\n    degrees = float(parts[0])\n    minutes = float(parts[2].replace(\" ' \", \" \"))\n    seconds = float(parts[3].replace(' \" ', \" \"))\n    hemisphere = parts[4]\n    gps_decimal = degrees + (minutes / 60) + (seconds / 3600)\n    if hemisphere == \"W\" or hemisphere == \"S\":\n        gps_decimal *= -1\n    return gps_decimal\n```", "```\nimport math\n\ndef distance(x1, y1, x2, y2):\n    return math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n```", "```\nimport click\nimport os\nimport json\n**import math**\n\n**def gps_degrees_to_decimal(gps_coordinate):**\n    **parts = gps_coordinate.split()**\n    **degrees =** **float(parts[0])**\n    **minutes = float(parts[2].replace(\" ' \", \" \"))**\n    **seconds = float(parts[3].replace(' \" ', \" \"))**\n    **hemisphere = parts[4]**\n    **gps_decimal = degrees + (minutes / 60) +** **(seconds / 3600)**\n    **if hemisphere == \"W\" or hemisphere == \"S\":**\n        **gps_decimal *= -1**\n    **return gps_decimal**\n\n**def distance(x1, y1, x2, y2):**\n    **return math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)**\n\n**def was_video_filmed_in_dc(metadata):**\n    **dc_x = -77.0066**\n    **dc_y = 38.8941**\n    **x = gps_degrees_to_decimal(metadata[0][\"GPSLongitude\"])**\n    **y = gps_degrees_to_decimal(metadata[0][\"GPSLatitude\"])**\n    **return distance(dc_x, dc_y, x, y) <=** **0.25**\n\n@click.command()\n@click.argument(\"parler_metadata_path\")\ndef main(parler_metadata_path):\n  **\"\"\"Filter Parler videos that were filmed in Washington DC and on Jan 6, 2021\"\"\"**\n    count = 0\n\n    for filename in os.listdir(parler_metadata_path):\n      abs_filename = os.path.join(parler_metadata_path, filename) if os.path.isfile(abs_filename) and abs_filename.endswith(\".json\"):\n            with open(abs_filename, \"rb\") as f:\n                json_data = f.read()\n\n            try:\n                metadata = json.loads(json_data)\n            except json.decoder.JSONDecodeError:\n                print(f\"Invalid JSON: {filename}\")\n                continue\n\n            if (\n                **\"GPSLongitude\" in metadata[0]**\n                **and \"GPSLatitude\" in metadata[0]**\n                and \"CreateDate\" in metadata[0]\n                and metadata[0][\"CreateDate\"].startswith(\"2021:01:06\")\n                **and was_video_filmed_in_dc(metadata)**\n          ):\n                print(f\"**Found an insurrection video**: {filename}\")\n                count += 1\n\n    print(f\"Total videos **filmed in Washington DC on January 6**: {count:,}\")\n\nif __name__ == \"__main__\":\n    main()\n```", "```\ndistance(dc_x, dc_y, x, y) <= 0.25\n```", "```\nmicah@trapdoor chapter-11 % **python3 exercise-11-3.py** **`/Volumes/datasets/Parler/metadata`**\nFound an insurrection video: meta-QPsyYtwu4zJb.json\nFound an insurrection video: meta-Hcv3lzEsnWaa.json\nFound an insurrection video: meta-6dDTCsYzK3k3.json\n`--snip--`\nFound an insurrection video: meta-eLSgf3w5r4PI.json\nFound an insurrection video: meta-goL0HLdYn3Pb.json\nFound an insurrection video: meta-a7DW37R386K3.json\nTotal videos filmed in Washington DC on January 6: 1,202\n```", "```\n<?xml version=\"1.0\" ?>\n<kml  >\n    <Document id=\"1\">\n      <Placemark id=\"3\">\n            <name>New York City</name>\n            <description>The Big Apple</description>\n            <Point id=\"2\"> <coordinates>-74.006393,40.714172,0.0</coordinates>\n          </Point>\n      </Placemark>\n    </Document>\n</kml>\n```", "```\n**python3 -m pip install simplekml**\n```", "```\n>>> **import simplekml**\n>>> **kml = simplekml.Kml()**\n>>> **kml.newpoint(name=\"New York City\", description=\"The Big Apple\", coords=****[(-74.006393,**\n**40.714172)])**\n<simplekml.featgeom.Point object at 0x101241cc0>\n>>> **kml.save(\"example.kml\")**\n```", "```\nimport click\nimport os\nimport json\n**import simplekml**\n\n**def json_filename_to_parler_id(json_filename):**\n    **return json_filename.split(\"-\")[1].split(\".\")[0]**\n\ndef gps_degrees_to_decimal(gps_coordinate):\n    parts = gps_coordinate.split()\n    degrees = float(parts[0])\n    minutes = float(parts[2].replace(\" ' \", \" \"))\n    seconds = float(parts[3].replace(' \" ', \" \"))\n    hemisphere = parts[4]\n    gps_decimal = degrees + (minutes / 60) + (seconds / 3600)\n    if hemisphere == \"W\" or hemisphere == \"S\":\n        gps_decimal *= -1\n    return gps_decimal\n @click.command()\n@click.argument(\"parler_metadata_path\")\ndef main(parler_metadata_path):\n    **\"\"\"Create KML files of GPS coordinates from Parler metadata\"\"\"**\n    **kml_all = simplekml.Kml()**\n\n    for filename in os.listdir(parler_metadata_path):\n      abs_filename = os.path.join(parler_metadata_path, filename)\n        if os.path.isfile(abs_filename) and abs_filename.endswith(\".json\"):\n            with open(abs_filename) as f:\n                json_data = f.read()\n\n            try:\n                metadata = json.loads(json_data)\n            except json.decoder.JSONDecodeError:\n                print(f\"Invalid JSON: {filename}\")\n                continue\n\n              **if (**\n                **\"GPSLongitude\" in metadata[0]**\n                **and \"GPSLatitude\" in metadata[0]**\n                **and metadata[0][\"GPSLongitude\"] != \" \"**\n                **and metadata[0][\"GPSLatitude\"] != \" \"**\n            **):**\n                **name** **= json_filename_to_parler_id(filename)**\n                **description = f\"URL:** **https://data.ddosecrets.com/Parler/Videos/{name}\"**\n                **lon = gps_degrees_to_decimal(metadata[0][\"GPSLongitude\"])**\n                **lat = gps_degrees_to_decimal(metadata[0][\"GPSLatitude\"])**\n\n                **print(f\"Found a video with GPS coordinates: {filename}\")**\n                **kml_all.newpoint(name=name, description****=description, coords=[(lon, lat)])**\n\n    **kml_all.save(\"parler-videos-all.kml\")**\n\nif __name__ == \"__main__\":\n    main()\n```", "```\nmicah@trapdoor chapter-11 % **python3 exercise-11-4.py** **`/Volumes/datasets/Parler/metadata`**\nAdding point 2XpiJFsho2do to kml_all: -117.6683, 33.490500000000004\nAdding point bcHZhpDOFnXd to kml_all: -1.3391, 52.04648888888889\n`--snip--`\n```", "```\n<?xml version=\"1.0\" ?>\n<kml  >\n    <Document id=\"1\">\n        <Placemark id=\"3\">\n            <name>2XpiJFsho2do</name>\n            <description>URL:https://data.ddosecrets.com/Parler/Videos/2XpiJFsho2do</description>\n            <Point id=\"2\">\n                <coordinates>-117.6683,33.490500000000004,0.0</coordinates> </Point>\n        </Placemark>\n        <Placemark id=\"5\">\n            <name>bcHZhpDOFnXd</name>\n            <description>URL:https://data.ddosecrets.com/Parler/Videos/bcHZhpDOFnXd</description>\n            <Point id=\"4\">\n                <coordinates>-1.3391,52.04648888888889,0.0</coordinates>\n            </Point>\n        </Placemark>\n`--snip--`\n```", "```\n@click.command()\n@click.argument(\"parler_metadata_path\")\ndef main(parler_metadata_path):\n    \"\"\"Create KML files of GPS coordinates from Parler metadata\"\"\"\n    kml_all = simplekml.Kml()\n    **kml_january6 = simplekml.Kml()**\n\n    for filename in os.listdir(parler_metadata_path):\n        abs_filename = os.path.join(parler_metadata_path, filename)\n        if os.path.isfile(abs_filename) and abs_filename.endswith(\".json\"):\n            with open(abs_filename, \"rb\") as f:\n                json_data = f.read()\n\n            try:\n                metadata = json.loads(json_data)\n            except json.decoder.JSONDecodeError:\n                print(f\"Invalid JSON: {filename}\")\n                continue\n\n            if (\n                \"GPSLongitude\" in metadata[0]\n                and \"GPSLatitude\" in metadata[0]\n                and metadata[0][\"GPSLongitude\"] != \" \"\n                and metadata[0][\"GPSLatitude\"] != \" \"\n            ):\n                name = json_filename_to_parler_id(filename)\n                **description = f\"URL:** **https://data.ddosecrets.com/Parler/Videos/{name}<br>\"**\n                **for key in [** **\"CreateDate\",**\n                    **\"FileTypeExtension\",**\n                    **\"Duration\",**\n                    **\"Make\",**\n                    **\"Model\",**\n                    **\"Software\",**\n                **]:**\n                    **if key in metadata[0]:**\n                        **description += f\"{key}: {metadata[0][key]}<br>\"**\n                lon = gps_degrees_to_decimal(metadata[0][\"GPSLongitude\"])\n                lat = gps_degrees_to_decimal(metadata[0][\"GPSLatitude\"])\n\n                print(f\"Adding point {name} to kml_all: {lon}, {lat}\")\n                kml_all.newpoint(name=name, description=url, coords=[(lon, lat)])\n\n                **if \"CreateDate\" in metadata[0] and metadata[0][\"CreateDate\"].startswith(**\n                    **\"2021:01:06\"**\n                **):**\n                    **print(f\"Adding point {name} to kml_january6: {lon}, {lat}\")**\n                    **kml_january6.newpoint(**\n                        **name=****name, description=url, coords=[(lon, lat)]**\n                    **)**\n\n    kml_all.save(\"parler-videos-all.kml\")\n    **kml_january6.save(\"parler-videos-january6.kml\")**\n```", "```\nURL: https://data.ddosecrets.com/Parler/Videos/g09yZZCplavI\nCreateDate: 2021:01:06 20:08:25\nFileTypeExtension: mov\nDuration: 25.24 s\nMake: Apple\nModel: iPhone XS Max\nSoftware: 14.3\n```", "```\nmicah@trapdoor chapter-11 % **python3 exercise-11-4.py** **`/Volumes/datasets/Parler/metadata`**\nAdding point 2XpiJFsho2do to kml_all: -117.6683, 33.490500000000004\nAdding point bcHZhpDOFnXd to kml_all: -1.3391, 52.04648888888889\n`--snip--`\nAdding point VNYtKrEURiZs to kml_all: -97.0244, 33.1528\nAdding point VNYtKrEURiZs to kml_january6: -97.0244, 33.1528\nAdding point KptnQksS5Xr8 to kml_all: -77.0142, 38.8901\n`--snip--`\n```", "```\nURL: https://data.ddosecrets.com/Parler/Videos/ykAXApWbiZuM\nCreateDate: 2020:06:28 21:56:41\nFileTypeExtension: mov\nDuration: 0:06:51\nMake: Apple\nModel: iPhone 7 Plus\nSoftware: 13.5.1\n```", "```\n**wget** **https://data.ddosecrets.com/Parler/Videos/HS34fpbzqg2b**\n```", "```\n**exiftool HS34fpbzqg2b**\n```", "```\n`--snip--`\nFile Type Extension             : mov\n`--snip--`\nModel                           : iPhone XR\nSoftware                        : 14.2\nCreation Date                   : 2021:01:06 13:57:49-05:00\n`--snip--`\nGPS Position                    : 38 deg 53' 26.52\" N, 77 deg 0' 28.44\" W\n```", "```\nmicah@trapdoor videos % **exiftool HS34fpbzqg2b -json**\n[{\n  \"SourceFile\": \"HS34fpbzqg2b\",\n  \"ExifToolVersion\": 12.42, \"FileName\": \"HS34fpbzqg2b\",\n`--snip--`\n  \"GPSLatitude\": \"38 deg 53' 26.52\\\" N\",\n  \"GPSLongitude\": \"77 deg 0' 28.44\\\" W\",\n  \"Rotation\": 180,\n  \"GPSPosition\": \"38 deg 53' 26.52\\\" N, 77 deg 0' 28.44\\\" W\"\n}]\n```"]