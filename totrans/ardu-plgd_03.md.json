["```\n     /* Sketch for the Automatic Motor Reversal Project\n     */\n\n     //Identify pins that will not change\n     const int ledPin1 = 12; //LED1 in schematic\n     const int ledPin2 = 13; //LED2 in schematic\n     const int analog0 = A0;\n     const int analog1 = A1;\n     int analogValue0 = 0; //Identify variables for analog inputs\n     int analogValue1 = 0;\n     int analogdifference = 0;\n     int threshold = 100; //The threshold value calculated to stop the motor\n\n     int reading;\n     int state;\n     int previous = LOW;\n     int count = 0;\n     int numberstops = 250;\n     int time = 0; //The last time the motor reversed\n\n     //Amount of time to wait to get rid of the jitters when the motor reverses\n     int debounce = 400;\n\n➊   void setup() { //This is the setup routine\n     //Initializes pins as input or output\n       pinMode(analog0, INPUT);\n       pinMode(analog1, INPUT);\n       pinMode(ledPin1, OUTPUT);\n       pinMode(ledPin2, OUTPUT);\n       Serial.begin(9600); //Was used in setting up the parameters\n     }\n\n➋   void loop() { //This begins the processing section\n         //Enter an endless do-nothing loop after the counter reaches the limit\n         while(count > numberstops) {\n             digitalWrite(ledPin1, LOW);\n             digitalWrite(ledPin2, LOW);\n         }\n\n     analogValue0 = (analogRead(analog0)); //Read the analog values\n     analogValue1 = (analogRead(analog1));\n\n➌   //Setting up the analog difference\n     analogdifference = analogValue1 - analogValue0; //This is the voltage drop\n     //analogValue1 will be greater than analogValue0\n\n     //These were added to view what was happening on the serial monitor\n     Serial.print(\"count =      \");\n     Serial.println(count);\n     Serial.print(\"analogdifference =      \");\n     Serial.println(analogdifference);\n     Serial.println();\n     Serial.print(\"numberstops =      \");\n     Serial.println(numberstops);\n\n     //This comparator looks at the difference or drop across the resistor\n➍   if(analogdifference > threshold) {\n        reading = HIGH;\n     }\n     else {\n        reading = LOW;\n     }\n\n     //Toggles the output and includes the debounce\n➎   if(reading == HIGH && previous == LOW && millis() - time > debounce) {\n        if(state == HIGH) {\n           state = LOW;\n        }\n        else {\n           state = HIGH;\n        }\n        //Increments the counter each time the motor reverses\n➏   count++;\n        time = millis(); \n     }\n\n     //Writes the state to the output pins that drive the H-Bridge\n     digitalWrite(ledPin1, state);\n     digitalWrite(ledPin2, !state); previous = reading;\n  }\n```", "```\nint numberstops = 250;\n```", "```\nint numberstops = setNumber;\n```", "```\nint setNumber;\nint analogPin2 = A2;\nint analogValue2;\nsetNumber = analogRead(analogPin2);\n```"]