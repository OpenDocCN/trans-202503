- en: '**5**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**5**'
- en: '**WEB FONTS**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**WEB 字体**'
- en: '![Image](graphics/common-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/common-01.jpg)'
- en: The features covered in this chapter are the oldest in this book, having been
    introduced in CSS2 many years ago—only to be dropped from the 2.1 spec owing to
    a lack of implementation by browser makers. Now a new generation of browsers has
    revived interest in improving the typographical options available to web designers,
    and I, for one, welcome the return of these features in CSS3\. Chief among them
    is the ability to specify fonts that don’t already exist on the user’s system—by
    utilizing the `@font-face` method—which frees designers from the yoke of the standard
    palette of “web-safe” system fonts that have been used for many years. Surprisingly,
    this capability has been available in Internet Explorer since 1997!
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍的特性是本书中最古老的，早在多年前的 CSS2 中就已引入——但由于浏览器厂商未实现，后来从 2.1 规范中被删除。如今，新一代浏览器重新激起了对改善网页设计师可用排版选项的兴趣，我个人也欢迎这些特性在
    CSS3 中的回归。最重要的是能够指定用户系统中不存在的字体——通过使用 `@font-face` 方法——这使得设计师摆脱了多年来使用的“网页安全”系统字体的束缚。令人惊讶的是，这项功能自
    1997 年起就在 Internet Explorer 中可用！
- en: IE4 was the first browser to allow web fonts, but it did so with a proprietary
    format that prevented other browsers from following suit. Microsoft later submitted
    its format to the W3C for consideration as a standard, but in the meantime Firefox,
    Safari, and Chrome all backed a different set of formats (see “[Font Formats](ch05.html#ch05leve1sec56)”
    on [page 52](ch05.html#page_52)), so later versions of Internet Explorer eventually
    followed suit.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: IE4 是第一个允许使用网页字体的浏览器，但它使用了专有格式，这使得其他浏览器无法效仿。微软后来将其格式提交给 W3C，提议作为标准，但与此同时，Firefox、Safari
    和 Chrome 都支持不同的格式集（见 “[字体格式](ch05.html#ch05leve1sec56)” 在 [第 52 页](ch05.html#page_52)），因此后来版本的
    Internet Explorer 最终也跟随了这一做法。
- en: The CSS Fonts Module Level 3 (*[http://www.w3.org/TR/css3-fonts/](http://www.w3.org/TR/css3-fonts/)*)
    has Candidate Recommendation status, and most of the spec has already been implemented
    in modern browsers (with a couple of exceptions, which I’ll cover later), so you
    can consider these features safe to use.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: CSS 字体模块 Level 3 (*[http://www.w3.org/TR/css3-fonts/](http://www.w3.org/TR/css3-fonts/)*）已被列为候选推荐状态，大多数规范已在现代浏览器中实现（有一些例外，我稍后会提到），因此你可以认为这些特性是安全可用的。
- en: '**The @font-face Rule**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**@font-face 规则**'
- en: 'To display web fonts on your pages, you first need to define them by using
    the `@font-face` rule. This rule sets the name and type of the font and provides
    the browser with the location of the file to use. Here’s the basic syntax:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要在页面上显示网页字体，首先需要使用 `@font-face` 规则来定义它们。此规则设置字体的名称和类型，并为浏览器提供字体文件的位置。以下是基本语法：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: I’ll break this syntax down a little. First, I give the font a name with the
    `font-family` property (➊). This property is one you should be familiar with,
    although it serves a slightly different purpose inside the rule than it does when
    used in the declaration block for a regular selector; here, it’s used to declare
    a font name, not to refer to one. Just like the `font-family` property in CSS2.1,
    you can use multiple, space-separated words as long as you enclose them within
    single quotation marks.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我将稍微拆解一下这个语法。首先，我使用 `font-family` 属性（➊）为字体命名。这个属性你应该很熟悉，尽管在规则内部它的作用与在常规选择器的声明块中有所不同；在这里，它用于声明一个字体名称，而不是引用一个字体名称。就像在
    CSS2.1 中的 `font-family` 属性一样，你可以使用多个以空格分隔的单词，只要将它们用单引号括起来。
- en: '**NOTE**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*When you define your font’s name with* `*font-family*`*, you can use the same
    name multiple times—in fact, sometimes you need to. I’ll discuss why shortly,
    in “[Defining Different Faces](ch05.html#ch05leve1sec52)” on [page 49](ch05.html#page_49).*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*当你使用* `*font-family*` *定义字体名称时，你可以多次使用相同的名称——事实上，有时候你需要这么做。我稍后将在 “[定义不同的字体](ch05.html#ch05leve1sec52)”
    中讨论原因，见 [第 49 页](ch05.html#page_49)。*'
- en: 'Next is the `src` property (➋), which tells the browser the location of the
    font file. This property accepts a few different values: `local` (➌) uses the
    name of the source font to check if the font is already installed on the user’s
    machine; and `url` (➍) provides a path to the font if it’s not available locally.
    I’ve also included the optional `format` (➎) hint, used to specify the font type;
    in this example, I used OpenType, but more types are available, and I’ll discuss
    those later in “[Font Formats](ch05.html#ch05leve1sec56)” on [page 52](ch05.html#page_52).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是 `src` 属性（➋），它告诉浏览器字体文件的位置。该属性接受几种不同的值：`local`（➌）使用源字体的名称来检查字体是否已经安装在用户的机器上；`url`（➍）提供字体的路径，如果该字体在本地不可用的话。我还包括了可选的
    `format`（➎）提示，用于指定字体类型；在这个例子中，我使用了 OpenType，但还有更多类型，我将在 “[字体格式](ch05.html#ch05leve1sec56)”
    中讨论，位于[第 52 页](ch05.html#page_52)。
- en: I can supply many different values for the `src` property by separating the
    values with commas, as I’ve done in the code example. This utilizes the power
    of the cascade to allow different fall-back values, which will come in handy in
    a later example.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以为 `src` 属性提供许多不同的值，使用逗号分隔这些值，正如我在代码示例中所做的那样。这利用了级联的优势，允许不同的后备值，这在后续的例子中会派上用场。
- en: '**NOTE**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Remember that in a font stack the browser will use the first file it encounters
    that can be loaded, rather than reading through all files and choosing the most
    recent.*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*记住，在字体栈中，浏览器将使用它遇到的第一个可加载的文件，而不是逐个读取所有文件并选择最新的文件。*'
- en: 'To use the font I just defined, I need only call its name in the font stack,
    as I’d normally do:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用我刚定义的字体，我只需要像平常一样在字体栈中调用它的名称：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To illustrate a real-world example, I’ll apply the Chunk font (available to
    download for free from *[http://www.theleagueofmoveabletype.com/fonts/4-chunk/](http://www.theleagueofmoveabletype.com/fonts/4-chunk/)*)
    to an `h1` element using `@font-face`. Here’s the code I’ll use in my style sheet:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明一个现实世界的例子，我将使用 Chunk 字体（可以从 *[http://www.theleagueofmoveabletype.com/fonts/4-chunk/](http://www.theleagueofmoveabletype.com/fonts/4-chunk/)*
    免费下载）应用到一个 `h1` 元素上，使用 `@font-face` 规则。以下是我将在样式表中使用的代码：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The first step is to name my font; I’ve chosen `ChunkFive` (➊) because I can
    remember it easily, but I could use any name. Next I provide values to the `src`
    property: `local` (➋) uses the true name of the font, `ChunkFive`, to check if
    it’s available on my system. Following that I enter a relative path to the font
    file I want to use (➌), and finally, I assign an argument of `woff` to the `format`
    value (➍). I explain the WOFF format in “Font Formats” on [page 52](ch05.html#page_52).'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是给我的字体命名；我选择了 `ChunkFive`（➊），因为我容易记住它，但我可以使用任何名称。接下来，我为 `src` 属性提供值：`local`（➋）使用字体的真实名称
    `ChunkFive` 来检查它是否已安装在我的系统上。随后，我输入我想要使用的字体文件的相对路径（➌），最后，我将 `woff` 作为 `format`
    的值（➍）。我将在 “字体格式” 中解释 WOFF 格式，见[第 52 页](ch05.html#page_52)。
- en: '**NOTE**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*You can usually find a font’s true name by using a font management application
    or by right-clicking the font file to view the font information.*'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*通常可以通过使用字体管理应用程序或右键点击字体文件查看字体信息，来找到字体的真实名称。*'
- en: 'In the last line (➎), I include my newly defined font in the font stack using
    the name value I defined inside the `@font-face` rule and apply it to all `h1`
    elements with a `class` of `webfont`. To see how that displays, here’s a quick
    comparison using the following markup:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一行（➎），我使用在 `@font-face` 规则中定义的名称值，将新定义的字体加入字体栈，并将其应用到所有 `h1` 元素，且这些元素具有 `webfont`
    类。为了查看显示效果，这里有一个快速对比，使用以下标记：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can see the output in [Figure 5-1](ch05.html#ch05fig1).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [图 5-1](ch05.html#ch05fig1) 中看到输出结果。
- en: '![Image](graphics/f05-01.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图像](graphics/f05-01.jpg)'
- en: '*Figure 5-1: The ChunkFive font (the bottom row), called using the* `*@font-face*`
    *rule, compared to the page default font (the top row)*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-1：ChunkFive 字体（底部行），通过`*@font-face*`规则调用，与页面默认字体（顶部行）进行对比*'
- en: '***Defining Different Faces***'
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***定义不同的字体样式***'
- en: 'The `@font-face` syntax you’ve seen so far in this chapter is pretty straightforward,
    but it only defines one font face—that is, a single permutation of weight, slope,
    and so on. If you want to use a different face, such as a bolder weight or an
    italic type, you have to define each font face individually. To do this, you re-use
    the same name and add extra descriptors to the `@font-face` rule:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你在本章看到的 `@font-face` 语法非常简单，但它只定义了一个字体样式——也就是一种权重、倾斜等的排列方式。如果你想使用不同的样式，比如加粗的权重或斜体类型，你必须为每个字体样式单独定义。为此，你可以重复使用相同的名称并在
    `@font-face` 规则中添加额外的描述：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here, you can see that the first `@font-face` rule defines the font name as
    `Gentium Basic` (➊) and gives the URL of the regular font face (➋). The second
    `@font-face` rule uses the same font name (➌) but adds the `font-style` property
    with the `italic` value (➍), and the URL points at the font’s italic face (➎).
    The italic style is applied automatically and appropriately, without your having
    to define it in the CSS, as in this example markup:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到第一个`@font-face`规则将字体名称定义为`Gentium Basic`（➊），并给出了常规字体的URL（➋）。第二个`@font-face`规则使用相同的字体名称（➌），但添加了`font-style`属性并将其值设置为`italic`（➍），URL指向该字体的斜体字形（➎）。斜体样式会自动并恰当地应用，而不需要像此示例标记那样在CSS中额外定义：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The second `h1` element uses the italic font face defined in the previous rules
    (you can see the result in [Figure 5-2](ch05.html#ch05fig2)).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个`h1`元素使用了之前规则中定义的斜体字形（你可以在[图 5-2](ch05.html#ch05fig2)中看到结果）。
- en: '![Image](graphics/f05-02.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f05-02.jpg)'
- en: '*Figure 5-2: Gentium Basic Regular (top) and Italic (bottom) applied using*
    `*@font-face*`'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-2：使用`@font-face`应用的Gentium Basic常规字体（上）和斜体字体（下）*'
- en: 'You can define any number of variations of a font with this method by using
    different font properties in the `@font-face` rule: `font-weight` to set various
    weights, `font-variant` for small caps faces, and so on.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在`@font-face`规则中使用不同的字体属性来定义字体的多个变体：`font-weight`用于设置不同的字重，`font-variant`用于小型大写字形，等等。
- en: '***True vs. Artificial Font Faces***'
  id: totrans-37
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***真正的字体与人工字体***'
- en: One thing to be aware of when you use web fonts is that you must define a link
    to an appropriate file for each different font face you wish to use. If you don’t,
    browsers will attempt to re-create the face artificially, often with ugly results.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用网页字体时要注意的一点是，必须为你希望使用的每个不同字体字形定义一个适当文件的链接。如果没有，浏览器会尝试人为地重新创建字体字形，通常会产生难看的效果。
- en: 'For example, if you’re going to use an italic style in your page, you must
    be sure to also define an italic style in `@font-face`. Here’s an illustration
    of how *not* to define an italic weight:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你打算在页面中使用斜体样式，你必须确保在`@font-face`中也定义了斜体样式。下面是一个如何*不*定义斜体权重的示例：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You can see that my `@font-face` rule uses the regular face of the Gentium Basic
    font, but the `h1` element has an italic style declared on it. You can see the
    effect in [Figure 5-3](ch05.html#ch05fig3), which compares this method with the
    correctly defined method from the previous section.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，我的`@font-face`规则使用了Gentium Basic字体的常规字形，但`h1`元素声明了一个斜体样式。你可以在[图 5-3](ch05.html#ch05fig3)中看到该效果，该图将这种方法与上一节中正确定义的方法进行了比较。
- en: '![Image](graphics/f05-03.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f05-03.jpg)'
- en: '*Figure 5-3: Comparing an artificial italic (top) with a true italic font face
    (bottom)*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-3：比较人工斜体（上）和真正的斜体字体（下）*'
- en: As you can see, the two examples are quite different. The first is the selected
    Gentium Basic font slanted to fake an italic style (using the first code example);
    the characters are larger, slightly distorted, and spaced inconsistently. The
    second is the true italic font face (using the correct method), which uses characters
    designed specifically for this purpose.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，这两个示例差异很大。第一个是将选定的Gentium Basic字体倾斜，伪造斜体样式（使用第一个代码示例）；字符更大，稍微变形，并且间距不一致。第二个是正确的斜体字体（使用正确的方法），它使用专门为此目的设计的字符。
- en: 'The same applies for all the different font faces: bold, italic, bold italic,
    small caps, condensed, and so on.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的原则适用于所有不同的字体：粗体、斜体、粗斜体、小型大写字母、压缩字体等等。
- en: '**A “Bulletproof” @font-face Syntax**'
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**“防弹”@font-face语法**'
- en: I explained at the beginning of this chapter that the `@font-face` rule has
    been around for quite a while, having been implemented in Internet Explorer as
    far back as 1997\. This means that it carries with it some unfortunate legacy
    issues in older versions of IE. In addition, some historical issues around font
    formats can cause compatibility problems in older versions of other browsers.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我在本章开头解释过，`@font-face`规则已经存在相当长时间，从1997年起便在Internet Explorer中实现。这意味着它带有一些不幸的遗留问题，特别是在旧版本的IE中。此外，一些与字体格式相关的历史性问题也可能在旧版本的其他浏览器中引起兼容性问题。
- en: Because of these issues, you need a workaround to ensure that `@font-face` works
    correctly across all browsers. Before I introduce the fully crossbrowser “bulletproof”
    `@font-face` syntax, let me discuss briefly some of the problems it addresses.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些问题，你需要找到一种解决方法，确保`@font-face`在所有浏览器中都能正确工作。在介绍完全跨浏览器的“防弹”`@font-face`语法之前，让我简要讨论一下它解决的一些问题。
- en: '***Using Local Fonts***'
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用本地字体***'
- en: The `local()` value for the `src` property is used to check whether a user already
    has the defined font installed on his or her system—if the user does, the local
    copy can be applied rather than downloading a new copy. `local()` is a good idea,
    but it suffers from a few drawbacks. The first drawback, and not the least, is
    that `local()` isn’t supported by any versions of Internet Explorer below 9!
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`src` 属性中的 `local()` 值用于检查用户的系统中是否已经安装了指定的字体——如果用户已经安装了该字体，则可以应用本地副本，而无需重新下载。`local()`
    是一个不错的想法，但它也有一些缺点。第一个缺点，也是最重要的，就是`local()`在任何低于9版本的Internet Explorer中都不被支持！'
- en: Another drawback is that, in some cases, the `@font-face` rule doesn’t play
    nicely with font management software, displaying incorrect characters or opening
    a dialog to ask for permissions to use a font.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个缺点是，在某些情况下，`@font-face` 规则与字体管理软件兼容性差，可能会显示错误字符，或者弹出对话框请求权限使用字体。
- en: For these reasons, leaving the `local()` value out is generally safer.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些原因，通常省略 `local()` 值会更安全。
- en: '***Font Formats***'
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***字体格式***'
- en: The next problem comes in the shape of different, and competing, formats. When
    `@font-face` was originally implemented, it supported only Microsoft’s proprietary
    *Embedded OpenType (EOT)* format, and this is still the only font format that
    is supported in IE8 and below. To complicate this still further, IE9 causes the
    `@font-face` rule to break when the browser is put into compatibility mode; this
    is very much an edge case and becoming less relevant all the time, but it’s worth
    noting as we can fix it simply in our bulletproof syntax.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个问题是不同且互相竞争的格式。当`@font-face`最初被实现时，它只支持微软的专有*嵌入式开放类型（EOT）*格式，并且这是 IE8 及以下版本唯一支持的字体格式。更复杂的是，当浏览器进入兼容模式时，IE9
    会导致`@font-face`规则失效；这个问题非常特殊，且随着时间的推移变得越来越不相关，但值得注意的是，我们可以通过在防弹语法中简单修复它。
- en: The resurgence of interest in web fonts came about because modern browsers—first
    Safari and then Firefox and then others—allowed the use of the more common *TrueType*
    and *OpenType* formats. Unfortunately, many commercial font foundries wouldn’t
    allow their fonts to be used in this way as it makes illegal copying of their
    fonts a little easier (see “[Licensing Fonts for Web Use](ch05.html#ch05leve1sec58)”
    on [page 53](ch05.html#page_53)). For this reason, Mozilla consulted with some
    font makers and created the *Web Open Font Format (WOFF)*, which is now supported
    in all major browsers, including IE9 and above, with the exception of older versions
    of the stock Android browser (4.3 and below).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对网页字体的兴趣重新激增，原因是现代浏览器——最初是 Safari，然后是 Firefox，再后来是其他浏览器——允许使用更常见的*TrueType*和*OpenType*格式。不幸的是，许多商业字体厂商不允许以这种方式使用他们的字体，因为这会让他们的字体被非法复制变得更容易（详见
    “[网页字体授权](ch05.html#ch05leve1sec58)” 在[第53页](ch05.html#page_53)）。因此，Mozilla 与一些字体制造商进行了咨询，创建了*Web
    Open Font Format (WOFF)*，现在所有主流浏览器（包括 IE9 及以上版本）都支持此格式，除了旧版的安卓系统浏览器（4.3及以下）。
- en: Some browsers also accept the *Scalable Vector Graphics (SVG)* font type. This
    font type is a vector re-creation of the font and is considerably lighter in file
    size, making it ideal for mobile use. This format is really only useful, however,
    if you need to support older versions (4.1 and below) of Safari for iPhone.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一些浏览器还支持*可缩放矢量图形（SVG）*字体类型。这种字体类型是字体的矢量重建，文件大小大大减小，非常适合移动设备使用。然而，这种格式只有在你需要支持旧版
    iPhone Safari（4.1及以下版本）时才真的有用。
- en: '***The Final “Bulletproof” Syntax***'
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***最终的“防弹”语法***'
- en: 'For your chosen font to display the same in every browser on every platform,
    you should use code in this format:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保你选择的字体在所有浏览器和平台中显示一致，你应该使用以下格式的代码：
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Let me explain what’s happening here. The first font to be specified is the
    EOT (➊) for Internet Explorer 8 and below. This font is in a rule of its own,
    as the next rule contains the optional `format()` hint; this hint is unfamiliar
    to old IE8, and so the whole rule will be ignored. But the EOT font needs to be
    included again (➋) to deal with the IE9 compatibility problem. Next, the WOFF
    format is defined (➌) for the majority of browsers, followed by the TTF format
    (➍) for older browsers, including Android 4.3 and below (remember that browsers
    will ignore formats they don’t understand and therefore can’t load).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我来解释一下这里发生了什么。第一个指定的字体是为Internet Explorer 8及以下版本准备的EOT字体（➊）。这个字体有自己的规则，因为接下来的规则包含了可选的`format()`提示；这个提示对老版的IE8来说是陌生的，因此整个规则会被忽略。但是，为了处理IE9的兼容性问题，仍然需要再次包含EOT字体（➋）。接下来，定义了WOFF格式（➌），这是大多数浏览器使用的格式，之后是TTF格式（➍），用于较旧的浏览器，包括Android
    4.3及以下版本（请记住，浏览器会忽略它们无法识别的格式，因此无法加载这些格式）。
- en: As the IE9 compatibility problem is really becoming less important, you can
    leave out the second line (➋) at your discretion.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 由于IE9的兼容性问题变得不再那么重要，你可以根据自己的判断省略第二行（➋）。
- en: For this to work, the major requirement is that your chosen font be available
    in three different formats. To make this easier, I strongly recommend using the
    `@font-face` Generator by Font Squirrel (*[http://www.fontsquirrel.com/fontface/generator/](http://www.fontsquirrel.com/fontface/generator/)*).
    Simply upload the font file you want to use and `@font-face` Generator converts
    it into all the relevant formats—as well as generating the CSS you need to use
    in your pages. This tool is invaluable. Font Squirrel also has a library of fonts
    that are ready to use with `@font-face` embedding, saving you the task of converting.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让这个方法有效，主要的要求是你选择的字体必须有三种不同的格式。为了简化这一过程，我强烈建议使用Font Squirrel的`@font-face`生成器（*[http://www.fontsquirrel.com/fontface/generator/](http://www.fontsquirrel.com/fontface/generator/)*）。只需上传你想使用的字体文件，`@font-face`生成器会将其转换为所有相关格式，并生成你在页面中需要使用的CSS代码。这个工具非常有用。Font
    Squirrel还提供了一个可以直接用于`@font-face`嵌入的字体库，省去了你转换字体的麻烦。
- en: '**NOTE**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*For a full explanation of why the IE trick is required and how it works, read*
    [http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax/](http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax/).'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你想了解为什么需要使用IE技巧以及它是如何工作的，请阅读* [http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax/](http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax/)。'
- en: '**Licensing Fonts for Web Use**'
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**网页字体使用许可**'
- en: As mentioned previously in “Font Formats” on [page 52](ch05.html#page_52), many
    font foundries expressly forbid embedding their web fonts in your pages using
    `@font-face`. They forbid this because linked OpenType or TrueType fonts are easy
    to locate and download and can then be used illegally in both on- and offline
    applications. The WOFF file type was created in response to this; WOFF is a web-only
    format and can contain licensing information to help track down a copyright infringer.
    Many foundries have already committed to selling this format, and I hope many
    more will follow.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，在[第52页](ch05.html#page_52)的“字体格式”一节中，许多字体厂商明确禁止使用`@font-face`将他们的网页字体嵌入到你的页面中。他们之所以禁止，是因为链接的OpenType或TrueType字体容易被找到并下载，然后在在线和离线应用中非法使用。为此，创建了WOFF文件格式；WOFF是一种仅限网页使用的格式，并且可以包含许可信息，帮助追踪版权侵权者。许多字体厂商已经开始销售这种格式，我希望未来会有更多厂商跟进。
- en: In general, the best policy is to check that the font you choose has a license
    explicitly allowing you to use it for web embedding; don’t assume that because
    a font is free to download, it is free to use online. That said, many good-quality
    free fonts that do allow embedding are available online; some resources are given
    in Appendix B.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，最好的做法是检查你选择的字体是否有明确的许可证，允许你将其用于网页嵌入；不要假设某个字体是免费的下载，就意味着它可以免费在线使用。话虽如此，许多允许嵌入的高质量免费字体在线可用；一些资源在附录B中给出。
- en: While the licensing situation is in a state of flux, many web font service providers
    have created mechanisms to embed fonts legally in your pages. By adding JavaScript
    to your pages, the provider is authorized to serve the font files from their network,
    so you can call the font families in your stacks. The method is known as *Fonts
    as a Service (FaaS)*.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然字体许可的情况仍在变化，但许多网页字体服务提供商已经创建了合法嵌入字体的机制。通过在你的页面中添加JavaScript，提供商就被授权从他们的网络提供字体文件，这样你就可以在你的字体栈中调用这些字体。这个方法被称为*字体即服务（FaaS）*。
- en: Most FaaS providers are commercial, allowing a limited set of fonts for free
    but charging a monthly or annual fee for the majority. The two biggest players
    in this category are probably Fontdeck (*[http://fontdeck.com/](http://fontdeck.com/)*)
    and Typekit (*[https://typekit.com/](https://typekit.com/)*). Other providers
    supply only free fonts—Google Fonts (*[http://www.google.com/fonts/](http://www.google.com/fonts/)*)
    being a notable example of this. Each provider has its own way of including the
    licensed fonts on your site, usually through the inclusion of an external CSS
    or JS file, or both.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 FaaS 提供商是商业性的，允许免费使用有限的一组字体，但大多数字体需要支付月费或年费。这个领域中的两大主要玩家可能是 Fontdeck (*[http://fontdeck.com/](http://fontdeck.com/)*）和
    Typekit (*[https://typekit.com/](https://typekit.com/)*）。其他提供商只提供免费字体——Google
    Fonts (*[http://www.google.com/fonts/](http://www.google.com/fonts/)*）是一个显著的例子。每个提供商都有自己的方式将授权字体包含到你的网站中，通常是通过引入外部的
    CSS 或 JS 文件，或者两者都用。
- en: '**A Real-World Web Fonts Example**'
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**一个真实世界的网页字体示例**'
- en: Having discussed the intricacies and niceties of fonts, licensing, and multiple
    syntaxes, let’s see a real-world example of `@font-face` in action. I’ll use an
    example that compares text displayed in a standard sans-serif font (Arial) to
    the same text displayed in three different font families (all from Font Squirrel).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了字体的复杂性、许可和多种语法之后，让我们来看一个`@font-face`的实际示例。我将使用一个比较标准无衬线字体（Arial）和三种不同字体家族（均来自
    Font Squirrel）显示的相同文本的示例。
- en: 'Here’s the CSS for this example. Bear in mind that, for the sake of clarity,
    I’ve simplified this snippet to show only a single font format (WOFF), although
    the accompanying example file has the full code:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这是这个示例的 CSS。请记住，为了清晰起见，我简化了这个代码片段，仅展示了单一的字体格式（WOFF），虽然附带的示例文件包含了完整的代码：
- en: '[PRE8]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'I also left out some color and size adjustments to keep the code as readable
    as possible. Here’s the markup I used:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我还省略了一些颜色和大小的调整，以使代码尽可能易读。以下是我使用的标记：
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You can see the output in [Figure 5-4](ch05.html#ch05fig4).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[图 5-4](ch05.html#ch05fig4)中看到这个输出。
- en: '![Image](graphics/f05-04.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f05-04.jpg)'
- en: '*Figure 5-4: Text using “web-safe” fonts (left) and using different web fonts
    (right)*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-4：使用“网页安全”字体（左）和使用不同网页字体（右）的文本*'
- en: In the example on the right, I mixed three fairly distinctive font families—many
    designers will probably tell you mixing isn’t a good idea on a production site,
    but it works well to illustrate my point. Whatever you think of my font choices,
    I hope you’ll at least agree that the text looks more dynamic and enticing with
    those choices applied.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在右侧的示例中，我混合了三种相当独特的字体家族——许多设计师可能会告诉你，在生产站点中混合字体并不是一个好主意，但这在此示例中能很好地阐明我的观点。不论你对我的字体选择有何看法，我希望你至少能同意，在应用了这些字体选择后，文本看起来更加生动和诱人。
- en: Despite the long and winding route we’ve had to take to get a cross-browser
    syntax, using `@font-face` isn’t complicated; you’ll expend some overhead in the
    form of extra setup time to declare the font faces and variants you want to use,
    but after that you can call them in your font stacks and style them in exactly
    the same way as system fonts.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们为了获得跨浏览器语法走了很长的弯路，但使用`@font-face`并不复杂；你会在声明所需的字体面和变体时花费一些额外的设置时间，但之后你可以像使用系统字体一样在字体堆栈中调用它们并进行样式化。
- en: '**Controlling Font Loading**'
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**控制字体加载**'
- en: Web fonts are loaded as external assets and must be downloaded by the browser
    before they can be displayed. Before the file has loaded, no font at all will
    be visible on the elements the font is to be applied to. You may then see a slight
    “flash” that occurs as the font loads and is applied. This is known as the *Flash
    of Unstyled Text (FoUT)*.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 网页字体作为外部资源加载，必须先由浏览器下载，才能显示。在文件加载之前，应用字体的元素上将看不到任何字体。你可能会看到在字体加载并应用时出现轻微的“闪烁”现象。这就是所谓的*未样式化文本的闪烁（FoUT）*。
- en: Many FaaS providers offer ways to work around this problem using configuration
    files, but if you’re hosting your own fonts, you may want to investigate the Web
    Font Loader library (*[https://github.com/typekit/webfontloader/](https://github.com/typekit/webfontloader/)*),
    which provides an event system that allows you to control the appearance of your
    page dynamically as fonts are loaded.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 许多 FaaS 提供商提供了使用配置文件解决这个问题的方法，但如果你自己托管字体，你可能会想要研究 Web Font Loader 库 (*[https://github.com/typekit/webfontloader/](https://github.com/typekit/webfontloader/)*)，它提供了一个事件系统，允许你在字体加载时动态控制页面的显示。
- en: '**More Font Properties**'
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**更多字体属性**'
- en: The CSS3 Web Fonts Module doesn’t just re-introduce the `@font-face` rule; it
    also revives two other font properties that were first proposed for CSS2\. These
    properties are potentially quite useful for giving you granular control over your
    fonts—I say *potentially* because, as of this moment, they aren’t widely implemented.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3 Web 字体模块不仅重新引入了 `@font-face` 规则；它还恢复了两个最早为 CSS2 提出的字体属性。这些属性对于让你精确控制字体非常有用——我之所以说
    *有用*，是因为截至目前，它们并未广泛实现。
- en: '***font-size-adjust***'
  id: totrans-86
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***font-size-adjust***'
- en: 'The only drawback to using font stacks in CSS is that fonts can vary so much
    in size; your first choice font may look great at 16px, but if that font isn’t
    available, the next fallback may appear smaller or have different proportions
    and be harder to read at that size. To combat this, the `font-size-adjust` property
    lets you dynamically alter the `font-size` property to ensure a regular appearance
    no matter which font is used from the stack. The `font-size-adjust` property takes
    a single decimal value; here’s the syntax:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 使用字体堆栈（font stacks）在 CSS 中的唯一缺点是字体的大小差异可能非常大；你选择的第一种字体在16px下可能看起来很好，但如果该字体不可用，下一个备选字体可能会显得更小，或者有不同的比例，使得在相同的大小下更难阅读。为了解决这个问题，`font-size-adjust`
    属性允许你动态地调整 `font-size` 属性，以确保无论使用哪种字体，外观始终保持一致。`font-size-adjust` 属性接受一个小数值；以下是语法：
- en: '[PRE10]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The `*number*` value is the proportion of the total height that is occupied
    by a lowercase *x* character (known as the *x-height*). In other words, a font
    might be 16px high in total, but the height of the lowercase *x* might be half
    that (8px), which gives an x-height ratio of 0.5 (8 divided by 16):'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`*number*` 值是由小写 *x* 字符（即 *x-height*）所占的字体总高度的比例。换句话说，一种字体的总高度可能为 16px，但小写
    *x* 的高度可能只有一半（8px），这就给出了一个 x-height 比例为 0.5（8 除以 16）：'
- en: '[PRE11]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'By using `font-size-adjust`, you can ensure that no matter which font is displayed,
    the x-height always has the same value, and legibility does not suffer. To illustrate,
    consider the following code:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `font-size-adjust`，你可以确保无论显示哪种字体，x-height 始终保持相同的值，且可读性不受影响。为说明这一点，请考虑以下代码：
- en: '[PRE12]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, in the following three `h1` elements, all with the same values for `font-size`,
    I apply different values to them using their class names, which you can see in
    this markup:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在接下来的三个 `h1` 元素中，所有的 `font-size` 值相同，我通过它们的类名应用了不同的值，你可以在这段标记中看到：
- en: '[PRE13]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The first `h1` is rendered in the default Helvetica Neue font, the second in
    Impact, and the third also in Impact but with the `font-size-adjust` property
    applied using the value `0.517`, which is the x-height of Helvetica Neue. You
    can see the results in [Figure 5-5](ch05.html#ch05fig5).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个 `h1` 使用默认的 Helvetica Neue 字体渲染，第二个使用 Impact，第三个也使用 Impact，但应用了 `font-size-adjust`
    属性，值为 `0.517`，即 Helvetica Neue 的 x-height。你可以在[图 5-5](ch05.html#ch05fig5)中查看效果。
- en: '![Image](graphics/f05-05.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f05-05.jpg)'
- en: '*Figure 5-5: The effect of* `*font-size-adjust*` *on the Impact font (third
    line)*'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-5：* `*font-size-adjust*` *对 Impact 字体的影响（第三行）*'
- en: You can clearly see the difference between the Helvetica Neue (first line) and
    Impact (second line) fonts in the first two `h1` elements. (Of course, you are
    unlikely to ever use these two in the same font stack, but because they have quite
    different x-heights, they’re good for illustrative purposes.) As I mentioned,
    Helvetica Neue has an x-height ratio of 0.517, which means the lowercase *x* is
    about half the height of the font. By contrast, Impact has an x-height ratio of
    0.7, which means less contrast in height between upperand lowercase letters.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以清楚地看到在前两个 `h1` 元素中，Helvetica Neue（第一行）和 Impact（第二行）字体之间的差异。（当然，你不太可能在同一个字体堆栈中同时使用这两种字体，但由于它们的
    x-height 差异很大，因此它们非常适合用于说明。）如我所提到的，Helvetica Neue 的 x-height 比例为 0.517，这意味着小写的
    *x* 大约是字体高度的一半。相比之下，Impact 的 x-height 比例为 0.7，这意味着大写字母和小写字母之间的高度对比较小。
- en: 'The first two lines in the example are not adjusted in any way, so Impact’s
    lowercase characters in the second line are considerably taller than Helvetica
    Neue’s in the first line—the fonts have the same size, but their metrics are different.
    In the third line, however, I set the `font-size-adjust` value to `0.517` to match
    the x-height ratio of Helvetica Neue:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中的前两行没有做任何调整，因此第二行的 Impact 小写字母比第一行的 Helvetica Neue 要高得多——字体大小相同，但它们的度量标准不同。然而，在第三行，我将
    `font-size-adjust` 的值设置为 `0.517`，以匹配 Helvetica Neue 的 x-height 比例：
- en: '[PRE14]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This adjusts the font size so Impact displays at a smaller size—just over 18.6px,
    which is slightly more than half of the 36px height set by `font-size`. You can
    see this more clearly if I directly compare the two elements, as shown in [Figure
    5-6](ch05.html#ch05fig6). Here, the characters without *ascenders* (lines that
    rise above the x-height)—that is, *e*, *x*, *c*, and *n*—of the adjusted Impact
    font are the exact same height as those of the Helvetica Neue font.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这调整了字体大小，使得 Impact 字体显示为更小的尺寸——略高于 18.6px，约为 `font-size` 设置的 36px 高度的一半。通过直接比较这两个元素，你可以更清楚地看到这一点，如[图
    5-6](ch05.html#ch05fig6)所示。在这里，调整后的 Impact 字体中没有 *上升部分*（即超出 x 高度的部分）的字符——也就是说，*e*、*x*、*c*
    和 *n*——与 Helvetica Neue 字体的字符高度完全相同。
- en: '![Image](graphics/f05-06.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f05-06.jpg)'
- en: '*Figure 5-6: Characters from the Helvetica Neue font (left) compared to characters
    from the Impact font adjusted with* `*font-size-adjust*` *(right)*'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-6：左边为 Helvetica Neue 字体的字符，右边为使用 `*font-size-adjust*` 调整后的 Impact 字体的字符。*'
- en: 'Unfortunately, a font’s x-height ratio isn’t easily available; you can either
    use a graphics package to measure it manually or try to find an online resource.
    (I found a calculator made by the online fonts service, Fontdeck, which works
    with the fonts installed on your system: *[http://fontdeck.com/support/fontsizeadjust/](http://fontdeck.com/support/fontsizeadjust/)*.)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，字体的 x 高度比例并不容易获得；你可以使用图形软件手动测量，或者尝试找到一个在线资源。（我找到了一款由在线字体服务 Fontdeck 制作的计算器，它与系统中安装的字体兼容：*[http://fontdeck.com/support/fontsizeadjust/](http://fontdeck.com/support/fontsizeadjust/)*。）
- en: The major drawback of this property is that, at the time of writing, Firefox
    is the only browser that supports it.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性的主要缺点是，截至目前，Firefox 是唯一支持它的浏览器。
- en: '***font-stretch***'
  id: totrans-106
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***font-stretch***'
- en: 'Some font families contain condensed or expanded variants, and the `font-stretch`
    property allows access to these. Here’s the syntax:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一些字体家族包含压缩或扩展的变体，`font-stretch` 属性可以让你访问这些变体。语法如下：
- en: '[PRE15]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'According to the specification, the keyword value can be any one of the following:
    `normal` (the default), `ultra-condensed`, `extra-condensed`, `condensed`, `semi-condensed`,
    `semi-expanded`, `expanded`, `extra-expanded`, and `ultra-expanded`. Each keyword
    relates to a font variant within a family, such as Frutiger Condensed or Nova
    Ultra Expanded.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 根据规范，关键字值可以是以下之一：`normal`（默认值）、`ultra-condensed`、`extra-condensed`、`condensed`、`semi-condensed`、`semi-expanded`、`expanded`、`extra-expanded`
    和 `ultra-expanded`。每个关键字都与字体家族中的某个变体相关，如 Frutiger Condensed 或 Nova Ultra Expanded。
- en: 'In the following example, I use `font-stretch` to display two different faces
    of the font PT Sans, using the following code:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我使用 `font-stretch` 显示了两种不同的 PT Sans 字体样式，使用的代码如下：
- en: '[PRE16]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `h1` element is displayed twice, both times using the font PT Sans. In the
    second instance, I’ve used the `font-stretch` property with the value `condensed`,
    which tells the browser to display the PT Sans Condensed face. You can see the
    results in [Figure 5-7](ch05.html#ch05fig7).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`h1` 元素显示了两次，每次使用 PT Sans 字体。在第二次中，我使用了 `font-stretch` 属性，值为 `condensed`，这告诉浏览器显示
    PT Sans Condensed 字体。你可以在[图 5-7](ch05.html#ch05fig7)中看到结果。'
- en: '![Image](graphics/f05-07.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f05-07.jpg)'
- en: '*Figure 5-7: The second example uses the narrow font face because of the effect
    of the* `*font-stretch*` *property.*'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-7：第二个示例由于 `*font-stretch*` 属性的影响，使用了狭窄的字体样式。*'
- en: 'The `font-stretch` property is implemented in Firefox and IE9 and above, but
    you could also replicate the effect by using the `@font-face` rule (introduced
    at the beginning of this chapter) to specify a condensed or expanded face in your
    font stack:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-stretch` 属性已在 Firefox 和 IE9 及以上版本中实现，但你也可以通过使用 `@font-face` 规则（在本章开始时介绍）来复现这一效果，指定字体堆栈中的压缩或扩展样式：'
- en: '[PRE17]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '**OpenType Features**'
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**OpenType 特性**'
- en: Although web typography takes a great leap forward in CSS3, it still just scratches
    the surface of the possibilities of type. If you compare the options available
    to you in a browser with what’s available in a desktop publishing application
    such as Adobe InDesign, you’ll see that the latter is much richer than the former.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 CSS3 在网页排版上取得了巨大的进步，但它仍然仅仅触及了字体可能性的表面。如果你将浏览器中可用的选项与桌面出版应用程序（如 Adobe InDesign）中的选项进行比较，你会发现后者比前者要丰富得多。
- en: OpenType font formats are capable of much more than face or weight variations;
    they have a range of ligatures, swashes, special numeric characters, and much
    more. (If none of those terms makes any sense to you, I recommend Magnet Studio’s
    Beginners Guide to OpenType at *[http://www.magnetstudio.com/words/2010/opentype-guide/](http://www.magnetstudio.com/words/2010/opentype-guide/)*).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: OpenType 字体格式不仅支持字体或粗细变化，还具有多种连字、修饰、特殊数字字符等功能。（如果这些术语对你来说没有意义，我推荐你阅读 Magnet
    Studio 的《OpenType 初学者指南》，链接地址为 *[http://www.magnetstudio.com/words/2010/opentype-guide/](http://www.magnetstudio.com/words/2010/opentype-guide/)*）。
- en: '***Enabling Font Features***'
  id: totrans-120
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***启用字体特性***'
- en: 'Many browsers have implemented a property that allows you to explore the extra
    features afforded by OpenType and other similar formats. The new property is called
    `font-feature-settings`, and here’s its syntax:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 许多浏览器已经实现了一项功能，允许你探索 OpenType 和其他类似格式提供的额外特性。这个新属性叫做 `font-feature-settings`，下面是它的语法：
- en: '[PRE18]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The `*parameters*` value is a series of strings containing shorthand codes
    for each font feature, plus an optional binary value to enable or disable the
    feature. Here’s an example:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`*parameters*` 值是一个字符串序列，包含每个字体特性的简写代码，还可以加上一个可选的二进制值来启用或禁用该特性。下面是一个示例：'
- en: '[PRE19]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The first parameter is `dlig`, the short code for discretionary ligatures, plus
    the value of `on` to show it’s being enabled—the default state is on, so you can
    safely omit that value in this example.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数是 `dlig`，是可选连字的简写代码，值为 `on` 表示启用它——默认状态是启用的，因此在这个示例中，你可以安全地省略这个值。
- en: 'If you want to disable a feature, you use the alternative binary value, `off`;
    in the following example, I’m disabling the small caps OpenType feature:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想禁用某个特性，可以使用替代的二进制值 `off`；在以下示例中，我禁用了 OpenType 的小型大写字母特性：
- en: '[PRE20]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'You can, as I mentioned, have more than one parameter—just create a comma-separated
    list. The following example enables common ligatures and disables tabular numbers:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如我所提到的，你可以使用多个参数——只需创建一个逗号分隔的列表。下面的示例启用了常见的连字，并禁用了表格数字：
- en: '[PRE21]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Let’s look at some examples that show the advantage of using Open-Type features.
    In “[True vs. Artificial Font Faces](ch05.html#ch05leve1sec53)” on [page 50](ch05.html#page_50),
    I showed why you should always use a true italic font rather than letting the
    browser create one artificially. In this example, you’ll see that the same principle
    holds when using the small caps font variant. Here are the relevant style rules:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一些示例，展示使用 OpenType 特性的优势。在《[真正的字体与人工字体](ch05.html#ch05leve1sec53)》的 [第50页](ch05.html#page_50)中，我展示了为什么你应该始终使用真正的斜体字体，而不是让浏览器人为地创建斜体。在这个示例中，你会看到同样的原则适用于使用小型大写字体变体。以下是相关的样式规则：
- en: '[PRE22]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Here, I use two `h1` elements: I apply the `font-variant` property with the
    `small-caps` value to the first; for the second, I use `font-feature-settings`,
    with the parameter used to toggle small caps, `smcp`. You can see the difference
    in [Figure 5-8](ch05.html#ch05fig8).'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我使用了两个 `h1` 元素：第一个应用了带有 `small-caps` 值的 `font-variant` 属性；第二个使用了 `font-feature-settings`，并使用参数来切换小型大写字母（`smcp`）。你可以在
    [图5-8](ch05.html#ch05fig8) 中看到差异。
- en: '![Image](graphics/f05-08.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f05-08.jpg)'
- en: '*Figure 5-8: The lower example uses OpenType’s own small caps feature*'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-8：下方示例使用了 OpenType 的小型大写字母特性*'
- en: In the first `h1` element, which uses simulated small caps, the proportions
    are off; the difference between the large and small capitals is barely noticeable.
    Compare that with the second `h1` element, which has more obvious proportions
    and looks more pleasing to the eye.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个 `h1` 元素中，使用了模拟的小型大写字母，其比例不对；大写字母和小写字母之间的差异几乎无法察觉。与第二个 `h1` 元素相比，后者的比例更明显，视觉效果更加悦目。
- en: Now I’ll demonstrate the use of ligatures, which are used to join certain pairs
    of characters to make them appear more harmonious. As with kerning, most browsers
    automatically use common ligatures unless instructed not to, so, in this example,
    I’ll compare text with no ligatures, common ligatures, and discretionary—that
    is, more decorative—ligatures.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我将演示连字的使用，连字用于将某些字符对连接在一起，使其看起来更和谐。和字距调整一样，大多数浏览器会自动使用常见的连字，除非被特别指示不使用，所以在这个示例中，我将对比没有连字、常见连字和可选——也就是更多装饰性的——连字的文本。
- en: 'Here’s the code:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是代码：
- en: '[PRE23]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This code is applied to three `h1` elements. The first has the parameter string
    `"liga" off`, so common ligatures are disabled. The second uses the same parameter
    string except without the `off` value, so common ligatures are enabled. The third
    has the string `"dlig"`, which enables discretionary ligatures. [Figure 5-9](ch05.html#ch05fig9)
    compares the three.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码应用于三个`h1`元素。第一个使用参数字符串`"liga" off`，因此禁用了常见连字。第二个使用相同的参数字符串，只是不带`off`值，因此启用了常见连字。第三个使用字符串`"dlig"`，启用了任意连字。[图
    5-9](ch05.html#ch05fig9)对这三者进行了比较。
- en: '![Image](graphics/f05-09.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f05-09.jpg)'
- en: '*Figure 5-9: Comparing OpenType ligatures: (from top) none, common, and discretionary*'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-9：比较OpenType连字：（从上到下）无连字、常见连字和任意连字*'
- en: Pay attention to the character pairs *Th* and *ct*. In the first `h1` element,
    without ligatures, they are rendered as separate characters. In the second, with
    common ligatures, the *Th* pair is joined together at the point where the characters
    almost meet. In the third `h1` element, the ligatures are discretionary, so the
    *ct* pair is also joined with an extravagant flourish.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意字符对*Th*和*ct*。在第一个`h1`元素中，没有连字，它们作为独立字符呈现。在第二个元素中，启用了常见连字，*Th*字符对在字符几乎接触的地方被连接起来。在第三个`h1`元素中，连字是任意的，因此*ct*字符对也被连在一起，并且有着夸张的装饰。
- en: At the time of writing, `font-feature-settings` are implemented in IE10+ and
    in Chrome and Firefox with appropriate vendor prefixes. You can also get access
    to these properties in Safari, but in a slightly different way; read on to find
    out how.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，`font-feature-settings`已在IE10+、Chrome和Firefox中实现，并带有适当的厂商前缀。你也可以在Safari中访问这些属性，但方式稍有不同；继续阅读，了解如何实现。
- en: '**NOTE**'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*These features are all suggestions to the browser, not commands; some browsers
    will choose how fonts are rendered considering the platform and potential performance,
    and these feature suggestions may be ignored.*'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '*这些特性都是对浏览器的建议，而不是命令；一些浏览器会根据平台和潜在性能选择如何渲染字体，这些特性建议可能会被忽略。*'
- en: '***Font Feature Properties***'
  id: totrans-146
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***字体特性属性***'
- en: 'The individual features enabled or disabled by `font-feature-settings` are
    also specified to be implemented as individual properties, known as the `font-variant-*`
    properties. For example, to work with ligatures, you use the `font-variant-ligatures`
    property with a keyword value representing the ligatures you wanted to set; the
    following code disables discretionary ligatures:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-feature-settings`启用或禁用的各个特性也被指定为作为单独的属性实现，这些属性被称为`font-variant-*`属性。例如，要处理连字，使用`font-variant-ligatures`属性，并设置代表所需连字的关键字值；以下代码禁用了任意连字：'
- en: '[PRE24]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: You can also use `font-variant-position` for super- or subscript, `font-variant-caps`
    for titling capitalization, `font-variant-numeric` for numerical forms, and `font-variant-alternates`
    for swashes, ornaments, and so on.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用`font-variant-position`来设置上标或下标，使用`font-variant-caps`来设置标题大写，使用`font-variant-numeric`来设置数字样式，使用`font-variant-alternates`来设置连笔、装饰等。
- en: Chrome and Safari are the only browsers to support the `font-variant-*` properties
    currently, with the `-webkit-` prefix, and the examples in [Figures 5-7](ch05.html#ch05fig7),
    [5-8](ch05.html#ch05fig8), and [5-9](ch05.html#ch05fig9) should all work in Safari
    using these properties instead of `font-feature-settings`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，只有Chrome和Safari浏览器支持`font-variant-*`属性，并带有`-webkit-`前缀，[图 5-7](ch05.html#ch05fig7)、[5-8](ch05.html#ch05fig8)和[5-9](ch05.html#ch05fig9)中的示例应当在Safari中使用这些属性，而不是`font-feature-settings`。
- en: One other related property is `font-kerning`, which (fairly obviously) controls
    the kerning of a font. This accepts values of `normal`, where kerning is applied;
    `none`, where kerning is disabled; and `auto` (the default), which lets the browser
    make the decision of whether to kern.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个相关的属性是`font-kerning`，它（显而易见）控制字体的字距调整。它接受`normal`值，表示应用字距调整；`none`值，表示禁用字距调整；以及`auto`（默认值），允许浏览器决定是否进行字距调整。
- en: '[PRE25]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: In [Figure 5-10](ch05.html#ch05fig10), you can see this property in action.
    The upper heading has kerning disabled, whereas the lower has it applied. I’ve
    added some background lines to make it easier to see.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 5-10](ch05.html#ch05fig10)中，你可以看到这个属性的实际效果。上方的标题禁用了字距调整，而下方的启用了字距调整。我添加了一些背景线条以便更容易看到。
- en: '![Image](graphics/f05-10.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f05-10.jpg)'
- en: '*Figure 5-10: Text with kerning disabled (top) and enabled (bottom) using the*
    `*font-kerning*` *property*'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-10：使用`*font-kerning*`属性禁用（上）和启用（下）字距调整*'
- en: '**Summary**'
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: While `font-size-adjust` and `font-stretch` will surely come in handy in the
    future, for now `@font-face` is the killer feature of the Web Fonts Module. `@font-face`
    is not without its drawbacks, however, not least that every extra font you use
    adds to the page’s load time. Also be aware that misuse or overuse of different
    typefaces can lead to decreased legibility. Your site lives or dies on its content,
    so make sure your visitors can read it by choosing your fonts carefully and checking
    them closely across different browsers.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管`font-size-adjust`和`font-stretch`未来肯定会派上用场，但目前`@font-face`是Web字体模块的杀手级功能。然而，`@font-face`也并非没有缺点，尤其是每使用一种额外的字体都会增加页面加载时间。此外，要注意，错误使用或过度使用不同的字体可能导致可读性下降。你的网站的成败取决于其内容，因此请确保你的访客能轻松阅读，通过仔细选择字体并在不同浏览器上仔细检查。
- en: Despite those caveats, you can use this simple rule to amazing effect. In [Chapter
    6](ch06.html#ch06), I’ll show you some ways to further enhance your typography.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有这些警告，你仍然可以使用这个简单的规则来达到惊人的效果。在[第6章](ch06.html#ch06)中，我将展示一些进一步增强排版的技巧。
- en: '**Web Fonts: Browser Support**'
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Web字体：浏览器支持**'
- en: '|  | **Chrome** | **Firefox** | **Safari** | **IE** |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '|  | **Chrome** | **Firefox** | **Safari** | **IE** |'
- en: '| `@font-face` | Yes | Yes | Yes | Yes |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| `@font-face` | 是 | 是 | 是 | 是 |'
- en: '| `font-size-adjust` | No | Yes | No | No |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| `font-size-adjust` | 否 | 是 | 否 | 否 |'
- en: '| `font-stretch` | No | Yes | No | Yes |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| `font-stretch` | 否 | 是 | 否 | 是 |'
- en: '| `font-feature-settings` | Yes | Yes | No | IE10 |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| `font-feature-settings` | 是 | 是 | 否 | IE10 |'
- en: '| `font-variant-^([*](ch05.html#footnote21a))` | Yes* | No | Yes* | No |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| `font-variant-^([*](ch05.html#footnote21a))` | 是* | 否 | 是* | 否 |'
- en: '[*](ch05.html#footnote_21a) Requires vendor prefix'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[*](ch05.html#footnote_21a) 需要厂商前缀'
