["```\n// Listing 10-1\nvoid setup() \n{ pinMode(13, OUTPUT); // using onboard LED\n}\nvoid blinkSlow()\n{ for (int i = 0; i < 5; i++) { digitalWrite(13, HIGH); delay(1000); digitalWrite(13, LOW); delay(1000); }\n}\nvoid blinkFast()\n{ for (int i = 0; i < 5; i++) { digitalWrite(13, HIGH); delay(250); digitalWrite(13, LOW); delay(250); }\n}\nvoid loop()\n{ blinkSlow(); delay(1000); blinkFast(); delay(1000);\n}\n```", "```\n// Listing 10-2\n/*1 blinko.h - Library for flashing an Arduino's onboard LED connected to D13\n*/2 #ifndef blinko_h\n#define blinko_h3 #include \"Arduino.h\" // gives library access to standard types and constants // of the Arduino language4 class blinko // functions and variables used in the library\n{ public: blinko();    void slow();  void fast();\n};5 #endif\n```", "```\n// Listing 10-3\n/*1 blinko.cpp - Library for flashing an Arduino's onboard LED connected to D13\n*/2 #include “Arduino.h” // gives library access to standard types and constants // of the Arduino language\n#include \"blinko.h\"3 blinko::blinko()     // things to do when library is activated\n{\n\tpinMode(13, OUTPUT);\n}4 void blinko::slow()\n{\n\tfor (int i=0; i<5; i++)\n\t{ \t\tdigitalWrite(13, HIGH);\n\t\tdelay(1000);\n\t\tdigitalWrite(13, LOW);\n\t\tdelay(1000); \n\t}\n}4 void blinko::fast()\n{\n\tfor (int i=0; i<5; i++)\n\t{\n\t\t digitalWrite(13, HIGH); delay(250); \t\t digitalWrite(13, LOW);\n\t\t delay(250); \n\t}\n}\n```", "```\n// Listing 10-4\nblinko\t\tKEYWORD1\nslow\t\tKEYWORD2\nfast\t\tKEYWORD2\n```", "```\n// Listing 10-5, blinkotest.ino1 #include <blinko.h>2 blinko ArduinoLED;\nvoid setup() {\n}\nvoid loop(){3   ArduinoLED.slow();  // blink LED slowly, once every second delay(1000);4   ArduinoLED.fast();  // blink LED rapidly, four times per second delay(1000);\n}\n```", "```\n// Listing 10-6\nvoid setup() { pinMode(13, OUTPUT); // use onboard LED\n}\nvoid blinkType(int blinks, int duration)\n// blinks - number of times to blink the LED\n// duration – blink duration in milliseconds\n{ for (int i = 0; i < blinks; i++) { digitalWrite(13, HIGH); delay(duration); digitalWrite(13, LOW); delay(duration); }\n}\nvoid loop()\n{ // blink LED 10 times, with 250 ms duration blinkType(10, 250); delay(1000); // blink LED three times, with 1 second duration blinkType(3, 1000); delay(1000);\n}\n```", "```\n// Listing 10-7\n/* blinko2.h - Blinking the Arduino's onboard LED on D13 Accepts number of blinks and on/off delay\n*/\n#ifndef blinko2_h#define blinko2_h\n#include \"Arduino.h\"\nclass blinko2\n{ public: blinko2();    void blinkType(int blinks, int duration); 1   private: int blinks; int duration;\n};\n#endif\n```", "```\n// Listing 10-8\n/* blinko2.cpp - Blinking the Arduino's onboard LED on D13 Accepts number of blinks and on/off delay\n*/\n#include \"Arduino.h\" \n#include \"blinko2.h\"\nblinko2::blinko2() \n{1   pinMode(13, OUTPUT);\n}2 void blinko2::blinkType(3int blinks, 4int duration)\n{ for (int i=0; i<blinks; i++) { digitalWrite(13, HIGH); delay(duration); digitalWrite(13, LOW); delay(duration);   }\n}\n```", "```\n// Listing 10-9\n#include <blinko2.h>\nblinko2 ArduinoLED;\nvoid setup() {}\nvoid loop() \n{ ArduinoLED.blinkType(3,250); \n// blink LED three times, with a duration of 250 ms delay(1000); ArduinoLED.blinkType(10,1000); \n// blink LED 10 times, with a duration of 1 second delay(1000);\n}\n```", "```\nblinko2          KEYWORD1\nblinkType        KEYWORD2\n```", "```\n// Listing 10-10\n// display temperature from TMP36 sensor in C and F \nfloat temperature;\nfloat readC()\n{ float tempC; tempC = analogRead(0); tempC = tempC = (tempC * 5000) / 1024; tempC = tempC - 500; tempC = tempC / 10; return tempC;\n}\nfloat readF()\n{ float tempC; float tempF; tempC = analogRead(0); tempC = tempC = (tempC * 5000) / 1024; tempC = tempC - 500; tempC = tempC / 10; tempF = (tempC * 1.8) + 32; return tempF;\n}\nvoid setup()\n{ Serial.begin(9600);\n}\nvoid loop()\n{ Serial.print(\"Temperature in Celsius is: \"); temperature = readC(); Serial.println(temperature); Serial.print(\"Temperature in Fahrenheit is: \"); temperature = readF(); Serial.println(temperature); delay(1000);\n}\n```", "```\n// Listing 10-111 #ifndef ArduinoTMP36_h\n#define ArduinoTMP36_h\n#include \"Arduino.h\"\nclass ArduinoTMP36\n{2   public: ArduinoTMP36(); float readC(); float readF();3   private: float tempC; float tempF;\n};\n#endif\n```", "```\n// Listing 10-12\n#include \"Arduino.h\" \n#include \"ArduinoTMP36.h\"\nArduinoTMP36::ArduinoTMP36() \n{\n}\nfloat ArduinoTMP36::readC()\n{ float tempC; tempC = analogRead(0); tempC = tempC=(tempC*5000)/1024; tempC = tempC-500; tempC = tempC/10; return tempC;\n}\nfloat ArduinoTMP36::readF()\n{ float tempC; float tempF; tempC = analogRead(0); tempC = tempC=(tempC*5000)/1024; tempC = tempC-500; tempC = tempC/10; tempF = (tempC*1.8)+32; return tempF;\n}\n```", "```\nArduinoTMP36             KEYWORD1\nreadC                    KEYWORD2\nreadF                    KEYWORD2\n```", "```\n// Listing 10-131 #include <ArduinoTMP36.h>\nArduinoTMP36 thermometer;2 float temperature;\nvoid setup()\n{ Serial.begin(9600);\n}\nvoid loop()\n{ Serial.print(\"Temperature in Celsius is: \");3   temperature=thermometer.readC(); Serial.println(temperature); Serial.print(\"Temperature in Fahrenheit is: \");4   temperature=thermometer.readF(); Serial.println(temperature); delay(1000);\n}\n```"]