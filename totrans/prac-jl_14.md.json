["```\n@variables a b c φ z;\n 5-element Vector{Num}:\n a\n b\n c\n φ\n z\n```", "```\nRM = [cos(φ) -sin(φ); sin(φ) cos(φ)]\n```", "```\njulia> RM * [1, 0]\n2-element Vector{Num}:\n cos(φ)\n sin(φ)\n\njulia> RM * [0, 1]\n2-element Vector{Num}:\n -sin(φ)\n  cos(φ)\n\njulia> RM * [1, 1]\n2-element Vector{Num}:\n cos(φ) - sin(φ)\n cos(φ) + sin(φ)\n\njulia> RM * [0.5, 0]\n2-element Vector{Num}:\n 0.5cos(φ)\n 0.5sin(φ)\n\njulia> RM * [0.5, 0.6]\n2-element Vector{Num}:\n 0.5cos(φ) - 0.6sin(φ)\n 0.5sin(φ) + 0.6cos(φ)\n```", "```\njulia> substitute(RM * [1, 0], Dict(φ => π/2))\n2-element Vector{Num}:\n 6.123233995736766e-17\n 1.0\n```", "```\njulia> ex = a^2*z^2 + a^4*z^4;\n\njulia> substitute(ex, Dict(a => sqrt(b)))\n(z^2)*(sqrt(b)^2) + (z^4)*(sqrt(b)^4)\n\njulia> substitute(ex, Dict(a => b^(1//2)))\nb*(z^2) + (b^(2//1))*(z^4)\n```", "```\njulia> z^3 * z^5\nz^8\n\njulia> a^5/a^3\na^2\n```", "```\nfunction Jm(x, m::Int, N)\n    s = 0\n    for k in N:-1:0\n        s += (-1)^k * x^(2k + m) / (2^(2k + m)*factorial(k)*factorial(k + m))\n    end\n    return s\nend\n```", "```\njulia> J19 = Jm(z, 1, 9)\n(1//1917756584755200)*(z^17) + (1//1474560)*(z^9) +\n(1//29727129600)*(z^13) + (1//384)*(z^5) + (1//2)*z -\n(1//176947200)*(z^11) - (1//18432)*(z^7) - (1//6658877030400)*(z^15) -\n(1//690392370511872000)*(z^19) - (1//16)*(z^3)\n```", "```\njulia> substitute(J19, Dict(z => 1.2))\n0.4982890575672154\n\njulia> Jm(1.2, 1, 9)\n0.4982890575672155\n```", "```\njulia> using Latexify\n\njulia> latexify(J19)\nL\"\\begin{equation}\n\\frac{1}{1917756584755200} z^{17} + \\frac{1}{1474560} z^{9} - [etc.]\n\\end{equation}\n\"\n```", "```\njulia> Jm(z, 1, a)\nERROR: TypeError: non-boolean (Num) used in boolean context\n```", "```\njulia> Differential(z)(J19) |> expand_derivatives\n(1//2) + (13//29727129600)*(z^12) + (17//1917756584755200)*(z^16) +\n(5//384)*(z^4) + (1//163840)*(z^8) - (19//690392370511872000)*(z^18) -\n(11//176947200)*(z^10) - (3//16)*(z^2) - (7//18432)*(z^6) - (1//443925135360)*(z^14)\n```", "```\n   julia> using Plots, LaTeXStrings\n\n   julia> dnJ19 = [Differential(z)(J19) |> expand_derivatives];\n\n➊ julia> for ord in 2:10\n              push!(dnJ19, Differential(z)(dnJ19[ord-1]) |> expand_derivatives)\n          end\n\n   julia> plot(J19; lw=2, xrange=(0, 6), yrange=(-0.6, 0.6), legend=false,\n               xlabel=L\"x\", ylabel=L\"J_1, J_1^\\prime, J_1^{\\prime\\prime}, ...\")\n\n➋ julia> for ord in 1:10\n              plot!(dnJ19[ord]; linestyle=:auto)\n              gui()\n          end\n```", "```\n   julia> R = rand(5, 5)\n   5×5 Matrix{Float64}:\n    0.957982  0.206423  0.00489974  0.0881235  0.708827\n    0.301785  0.107707  0.524776    0.83413    0.771915\n    0.049844  0.031097  0.22972     0.415245   0.735899\n    0.438108  0.57943   0.144575    0.131095   0.103629\n    0.473649  0.237991  0.148043    0.0351828  0.724837\n\n   julia> row1Rview = @view R[1, :]\n   5-element view(::Matrix{Float64}, 1, :) with eltype Float64:\n    0.9579822727773696\n    0.20642276219972644\n    0.004899741566674942\n    0.0881235008776815\n    0.7088267041115207\n\n➊ julia> row1Rview .= 17;\n\n➋ julia> R\n   5×5 Matrix{Float64}:\n    17.0       17.0       17.0       17.0        17.0\n     0.301785   0.107707   0.524776   0.83413     0.771915\n     0.049844   0.031097   0.22972    0.415245    0.735899\n     0.438108   0.57943    0.144575   0.131095    0.103629\n     0.473649   0.237991   0.148043   0.0351828   0.724837\n\n   julia> @views row1RviewAgain = R[1, :];\n\n   julia> row1RviewAgain === row1Rview\n   true\n```", "```\njulia> A = [1 3; 2 4]\n2×2 Matrix{Int64}:\n 1  3\n 2  4\n\njulia> b = [1, 7]\n2-element Vector{Int64}:\n 1\n 7\n```", "```\njulia> 1 / 3 == 3 \\ 1\ntrue\n```", "```\njulia> A \\ b\n2-element Vector{Float64}:\n  8.5\n -2.5\n```", "```\njulia> A * [8.5, -2.5]\n2-element Vector{Float64}:\n 1.0\n 7.0\n```", "```\njulia> inv(A) * b\n2-element Vector{Float64}:\n  8.5\n -2.5\n\njulia> inv(A) == A^-1\ntrue\n```", "```\njulia> A * inv(A)\n2×2 Matrix{Float64}:\n 1.0  0.0\n 0.0  1.0\n```", "```\njulia> I22 = A * inv(A);\njulia> I22 * A == A * I22 == A\ntrue\n```", "```\njulia> tr(A) # Trace of A\n5\n\njulia> det(A) # Determinant of A\n-2.0\n```", "```\njulia> eigvecs(A) # Eigenvectors\n2×2 Matrix{Float64}:\n -0.909377  -0.565767\n  0.415974  -0.824565\n\njulia> eigvals(A) # Eigenvalues\n2-element Vector{Float64}:\n -0.3722813232690143\n  5.372281323269014\n```", "```\njulia> evec1 = eigvecs(A)[:,1];\n\njulia> eval1 = eigvals(A)[1];\n\njulia> A * evec1  - evec1 * eval1\n2-element Vector{Float64}:\n  0.0\n -5.551115123125783e-17\n```", "```\njulia> N = 3000;\n\njulia> G = rand(N, N);\n\njulia> sG = (G + G') / maximum(G + G');\n```", "```\n   julia> using BenchmarkTools\n\n   julia> @btime eigvals(G);\n     24.044 s (20 allocations: 69.58 MiB)\n\n   julia> @btime eigvals(sG);\n     4.612 s (14 allocations: 69.74 MiB)\n\n➊ julia> SsG = Symmetric(sG);\n\n   julia> SsG == sG\n   true\n\n   julia> typeof(SsG)\n   Symmetric{Float64, Matrix{Float64}}\n\n➋ julia> @btime eigvals(SsG);\n     4.481 s (14 allocations: 69.74 MiB)\n```", "```\n   julia> N = 3000;\n\n   julia> G = rand(N, N);\n\n➊ julia> UTt = UpperTriangular(G);\n\n   julia> typeof(UTt)\n   UpperTriangular{Float64, Matrix{Float64}}\n\n   julia> UT = Matrix(UTt);\n\n   julia> typeof(UT)\n   Matrix{Float64} (alias for Array{Float64, 2})\n\n➋ julia> UT == UTt\n   true\n```", "```\njulia> @btime eigvals(UT);\n  119.571 ms (18 allocations: 69.53 MiB)\n\njulia> @btime eigvals(UTt);\n  35.905 μs (2 allocations: 23.48 KiB)\n```", "```\njulia> N = 8000;\n\njulia> G = rand(N, N);\n\njulia> g = rand(N);\n\njulia> fG = factorize(G);\n\njulia> @btime G \\ g;\n  10.073 s (6 allocations: 488.40 MiB)\n\njulia> @btime fG \\ g;\n  37.942 ms (2 allocations: 62.55 KiB)\n```", "```\njulia> g = rand(3000)\n\njulia> @btime sG \\ g;\n  504.239 ms (6 allocations: 68.71 MiB)\n\njulia> @btime SsG \\ g;\n  556.492 ms (8 allocations: 70.18 MiB)\n\njulia> fSsG = factorize(SsG);\n\njulia> @btime fSsG \\ g;\n  6.161 ms (2 allocations: 23.48 KiB)\n```"]