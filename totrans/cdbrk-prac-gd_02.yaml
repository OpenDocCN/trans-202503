- en: '2'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Caesar cipher
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/g02001.png)![](image_fi/502727c02/f02001.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2-1: The message on this 1939 telegram is encrypted with a Caesar cipher.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The telegram depicted in [Figure 2-1](#figure2-1) (and provided to us by Karsten
    Hansky) was sent from St Leonards-on-Sea, United Kingdom, to Georgetown, British
    Guyana, in 1939.^([1](b06.xhtml#c02-endnote-1)) The message on this telegram is
    partially encrypted. In the following transcript, the ciphertext is printed in
    bold on the fourth line:'
  prefs: []
  type: TYPE_NORMAL
- en: '`CDE.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`BRG9.IDCH. STLEONARDSONSEA. 10\. 9th. 13.20.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ROBERTSON TREASURY GEORGETOWNBG.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`JKHQY GYULN QOOWE HAWNH EAOPL KODEX HAHQR.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`10.25AM.`'
  prefs: []
  type: TYPE_NORMAL
- en: The encryption method used here, called the Caesar cipher, is quite simple,
    so it will serve as a good starting point for our discussion of encryption techniques.
    We dedicate this chapter to it.
  prefs: []
  type: TYPE_NORMAL
- en: How the Caesar cipher works
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Caesar cipher shifts each letter of the alphabet by a certain number of
    characters. We can consider the cipher’s key to be a number that determines the
    shift offset.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the telegram shown in [Figure 2-1](#figure2-1), the key is 4, as visualized
    in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Plaintext:` `ABCDEFGHIJKLMNOPQRSTUVWXYZ`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Ciphertext: EFGHIJKLMNOPQRSTUVWXYZABCD`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a different way to represent this key. This diagram shows that `A` is
    replaced by `E`, `B` by `F`, `C` by `G`, `D` by `H`, and so on:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/g02002.png)'
  prefs: []
  type: TYPE_IMG
- en: 'When we apply the key to the encrypted telegram line in reverse, we get the
    following plaintext: `NOLUC KCYPR USSAI LEARL IESTP OSHIB LELUV`. If we put the
    blanks in the right places, the message might then say, `NO LUCK CYPRUS SAIL EARLIEST
    POSHIBLE LUV`.'
  prefs: []
  type: TYPE_NORMAL
- en: We still don’t know exactly what this message means. `POSHIBLE` is probably
    an incorrect spelling of `POSSIBLE`, while `CYPRUS` might refer to a ship of that
    name. `LUV` could be an acronym for the sender’s initials or simply an abbreviation
    for `LOVE`.
  prefs: []
  type: TYPE_NORMAL
- en: If we used the Caesar cipher with an alphabet of twenty-six letters, there would
    be twenty-five (useful) different keys. That’s because a shift of zero would not
    change the text, as every letter would shift to itself. A shift of twenty-six
    would do the same thing.
  prefs: []
  type: TYPE_NORMAL
- en: To apply a Caesar cipher, you can use a cipher disk or a cipher slide (see [Figure
    2-2](#figure2-2)). A Caesar cipher with the key 13, also referred to as ROT-13,
    is a *self-inverting cipher*—if you use it twice, you get the plaintext again.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/f02002.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2-2: A cipher disk or a cipher slide can be used to apply a Caesar cipher.'
  prefs: []
  type: TYPE_NORMAL
- en: ROT-13 is often used on geocaching websites to encrypt spoilers.
  prefs: []
  type: TYPE_NORMAL
- en: How to detect a Caesar cipher
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you want to check whether a certain cryptogram has been created with a Caesar
    cipher, counting the letters (i.e., performing a frequency analysis) is helpful.
    To see why this is the case, let’s first look at the letter frequencies in a typical
    English text:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/g02003.png)'
  prefs: []
  type: TYPE_IMG
- en: We see that `E` is the most frequent letter, and that it is surrounded by much
    less frequent ones. `R`, `S`, and `T` are three frequent letters in a row. The
    last five letters, `V`, `W`, `X`, `Y`, and `Z`, are all quite rare. If we apply
    a Caesar cipher to an English text, we’ll notice the bars of this diagram move
    by a certain number of steps. For instance, if `K` is the letter with the highest
    bar, we should see it surrounded by far less frequent letters on each side, indicating
    that it corresponds to `E`. We can use this fact to detect a Caesar cipher.
  prefs: []
  type: TYPE_NORMAL
- en: Look now at the following two newspaper ads, which were both published in the
    London newspaper *The Times* in 1853:^([2](b06.xhtml#c02-endnote-2))
  prefs: []
  type: TYPE_NORMAL
- en: '2 February 1853:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/g02004.png)'
  prefs: []
  type: TYPE_IMG
- en: '`CENERENTOLA.—N bnxm yt ywd nk dtz hfs wjfi ymnx fsi fr rtxy fscntzx yt mjfw
    ymfy fsi, bmjs dtz wjyzws, fsi mtb qtsl dtz wjrfns, mjwj. It bwnyj f kjb qnsjx
    ifwqnsl, uqjfxj. N mfaj gjjs ajwd kfw kwtr mfuud xnshj dtz bjsy fbfd.`'
  prefs: []
  type: TYPE_NORMAL
- en: '11 February 1853:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/g02005.png)'
  prefs: []
  type: TYPE_IMG
- en: '`CENERENTOLA.—Zsynq rd mjfwy nx xnhp mfaj n ywnji yt kwfrj fs jcuqfsfynts ktw
    dtz, gzy hfssty. Xnqjshj nx xfkjxy nk ymj ywzj hfzxj nx sty xzxujhyji: nk ny nx,
    fqq xytwnjx bnqq gj xnkkyji yt ymj gtyytr. It dtz wjrjrgjw tzw htzxns’x knwxy
    uwtutxnynts: ymnsp tk ny.`'
  prefs: []
  type: TYPE_NORMAL
- en: We assume that both ads were encrypted the same way. `CENERENTOLA` (Italian
    for “Cinderella”) is probably the pseudonym of the sender or recipient. As it
    is not encrypted, we can omit it from our examinations.
  prefs: []
  type: TYPE_NORMAL
- en: 'A good way to proceed is to perform a frequency count of the two cryptograms
    combined. We could count the letters manually or use computer assistance, such
    as with CrypTool 2 or a web-based tool such as [https://dcode.fr/en](https://dcode.fr/en).
    Here is a chart we made ourselves:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/g02006.png)'
  prefs: []
  type: TYPE_IMG
- en: We see in [Figure 2-3](#figure2-3) that `j` is the most frequently used letter
    and is surrounded by less frequent ones. The letters `w`, `x`, and `y` form a
    block of three consecutive letters of high frequency. `a`, `b`, `c`, `d`, and
    `e` make up five letters of low frequency in a row.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/f02003.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2-3: Comparing the letter frequencies of the CENERENTOLA ads with the
    letter frequencies of the English language suggests that we are dealing with a
    Caesar cipher.'
  prefs: []
  type: TYPE_NORMAL
- en: 'All in all, the frequency analysis of our ciphertexts looks very similar to
    the frequencies of the English language, except that the bars are all shifted
    by five steps (`A` = `F`, `B` = `G`, `C` = `H` . . .). This suggests that we are
    dealing with a Caesar cipher. In fact, by applying this exact five-step shift,
    we can derive the following plaintexts:'
  prefs: []
  type: TYPE_NORMAL
- en: '`CENERENTOLA.—I wish to try if you can read this and am most anxious to hear
    that and, when you return, and how long you remain, here. Do write a few lines
    darling, please. I have been very far from happy since you went away.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`CENERENTOLA.—Until my heart is sick have i tried to frame an explanation for
    you, but cannot. Silence is safest if the true cause is not suspected: If it is,
    all stories will be siffted to the bottom. Do you remember our cousin’s first
    proposition: think of it.`'
  prefs: []
  type: TYPE_NORMAL
- en: Apparently, these two messages were written by a romantic couple. This is no
    surprise, as encrypted newspaper ads were a popular means of secret communication
    between lovers in Victorian England.
  prefs: []
  type: TYPE_NORMAL
- en: How to break a Caesar cipher
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As should have become clear, a Caesar cipher is easily broken once identified.
    If you know the ciphertext letter that stands for, say, `E`, you can easily figure
    out the key.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, there are other ways to solve a Caesar cryptogram. We can try all
    possible keys, checking for a plaintext that makes sense. This approach is referred
    to as *brute-force* or *exhaustive key search*. As there are only twenty-five
    keys, a brute-force attack on a Caesar cipher isn’t too difficult. Let’s perform
    one on the following advertisement, published in the London *Standard* on May
    26, 1888:^([3](b06.xhtml#c02-endnote-3))
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/g02007.png)'
  prefs: []
  type: TYPE_IMG
- en: 'A frequency analysis of the ciphertext reveals that a Caesar cipher is very
    likely. To break it, let’s write the message’s first two words in the first row
    of a table, then fill in the table by shifting each letter by one in each subsequent
    row. When we reach `Z`, we’ll wrap back around to `A`. We recommend writing this
    table column-wise:'
  prefs: []
  type: TYPE_NORMAL
- en: '`0 URNYGU ORGGRE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`1 VSOZHV PSHHSF`'
  prefs: []
  type: TYPE_NORMAL
- en: '`2 WTPAIW QTIITG`'
  prefs: []
  type: TYPE_NORMAL
- en: '`3 XUQBJX RUJJUH`'
  prefs: []
  type: TYPE_NORMAL
- en: '`4 YVRCKY SVKKVI`'
  prefs: []
  type: TYPE_NORMAL
- en: '`5 ZWSDLZ TWLLWJ`'
  prefs: []
  type: TYPE_NORMAL
- en: '`6 AXTEMA UXMMXK`'
  prefs: []
  type: TYPE_NORMAL
- en: '`7 BYUFNB VYNNYL`'
  prefs: []
  type: TYPE_NORMAL
- en: '`8 CZVGOC WZOOZM`'
  prefs: []
  type: TYPE_NORMAL
- en: '`9 DAWHPD XAPPAN`'
  prefs: []
  type: TYPE_NORMAL
- en: '`10 EBXIQE YBQQBO`'
  prefs: []
  type: TYPE_NORMAL
- en: '`11 FCYYRF ZCRRCP`'
  prefs: []
  type: TYPE_NORMAL
- en: '`12 GDZKSG ADSSDQ`'
  prefs: []
  type: TYPE_NORMAL
- en: '`13 HEALTH BETTER`'
  prefs: []
  type: TYPE_NORMAL
- en: '`14 IFBMUI CFUUFS`'
  prefs: []
  type: TYPE_NORMAL
- en: '`. . .`'
  prefs: []
  type: TYPE_NORMAL
- en: It is immediately clear that line 13, `HEALTH BETTER`, is the correct one. This
    means the text used ROT-13\. Usually, creating such a table for only one word
    is enough.
  prefs: []
  type: TYPE_NORMAL
- en: Brute-forcing becomes even easier if we use CrypTool 2 to perform the twenty-five
    Caesar decryptions. The CrypTool 2 template “Caesar Brute-Force Analysis” provides
    the functionality we need for this purpose. Let’s apply it to the following ciphertext
    taken from Elonka’s *The Mammoth Book of Secret Codes and Cryptograms*:^([4](b06.xhtml#c02-endnote-4))
  prefs: []
  type: TYPE_NORMAL
- en: '`Devhqfh vkdushqv oryh, suhvhqfh vwuhqjwkhqv lw. Ehqmdplq Iudqnolq`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an excerpt from the twenty-five decryptions CrypTool 2 performs:'
  prefs: []
  type: TYPE_NORMAL
- en: '`1 Wxoajya odwnlajo hkra, lnaoajya opnajcpdajo ep. Xajfwiej Bnwjghej`'
  prefs: []
  type: TYPE_NORMAL
- en: '`2 Xypbkzb pexombkp ilsb, mobpbkzb pqobkdqebkp fq. Ybkgxjfk Coxkhifk`'
  prefs: []
  type: TYPE_NORMAL
- en: '`3 Yzqclac qfypnclq jmtc, npcqclac qrpclerfclq gr. Zclhykgl Dpylijgl`'
  prefs: []
  type: TYPE_NORMAL
- en: '`4 Zardmbd rgzqodmr knud, oqdrdmbd rsqdmfsgdmr hs. Admizlhm Eqzmjkhm`'
  prefs: []
  type: TYPE_NORMAL
- en: '`5 Absence sharpens love, presence strengthens it. Benjamin Franklin`'
  prefs: []
  type: TYPE_NORMAL
- en: '`6 Bctfodf tibsqfot mpwf, qsftfodf tusfohuifot ju. Cfokbnjo Gsbolmjo`'
  prefs: []
  type: TYPE_NORMAL
- en: '`7 Cdugpeg ujctrgpu nqxg, rtgugpeg uvtgpivjgpu kv. Dgplcokp Htcpmnkp`'
  prefs: []
  type: TYPE_NORMAL
- en: '`8 Devhqfh vkdushqv oryh, suhvhqfh vwuhqjwkhqv lw. Ehqmdplq Iudqnolq`'
  prefs: []
  type: TYPE_NORMAL
- en: '`. . .`'
  prefs: []
  type: TYPE_NORMAL
- en: 'It is not very difficult to see that line 5 is correct:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Absence sharpens love, presence strengthens it. Benjamin Franklin`'
  prefs: []
  type: TYPE_NORMAL
- en: Success stories
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A prison inmate’s cipher
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Our colleague Gary Klivans, a retired police captain from New York State, is
    a prominent expert on encryption methods used by gangs and prison inmates.^([5](b06.xhtml#c02-endnote-5))
    His fascinating 2016 book *Gang Secret Codes: Deciphered* is a must-read for everybody
    interested in codebreaking.^([6](b06.xhtml#c02-endnote-6)) As of 2023, Gary works
    as a forensics consultant specializing in gang codes. He is also a frequent writer
    and lecturer in the field of forensic codebreaking. Gary provided us with an undated
    encrypted message from a prison inmate, shown in [Figure 2-4](#figure2-4).^([7](b06.xhtml#c02-endnote-7))'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/f02004.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2-4: An encrypted message from a prison inmate. The plaintext proved
    quite interesting.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Every word in this message ends with `yp`. It was clear to Gary that these
    two-letter suffixes had no meaning and were included to confuse the codebreaker.
    Using frequency analysis (ignoring the `yp`’s), Gary saw that this cryptogram
    had most likely been created with a Caesar cipher. As `Z` is the most frequent
    letter, finding the solution was quite simple. Here’s the substitution table the
    prison inmate used (the key is 21):'
  prefs: []
  type: TYPE_NORMAL
- en: '`Plaintext:` `ABCDEFGHIJKLMNOPQRSTUVWXYZ`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Ciphertext: VWXYZABCDEFGHIJKLMNOPQRSTU`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Based on this table, the following plaintext can be retrieved:'
  prefs: []
  type: TYPE_NORMAL
- en: '`YOU''LL RECEIVE # MRR STRIPS MAKE SURE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`THAT YOUR HANDS ARE COMPLETELY DRY BEFORE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`YOU TOUCH THEM. DON’T RIP THEM AND MOST`'
  prefs: []
  type: TYPE_NORMAL
- en: '`IMPORTANTLY DO NOT GET THEM WET. TAKE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`# OR OF THEM FOLD THEM TOGETHER AS`'
  prefs: []
  type: TYPE_NORMAL
- en: '`SMALL AS POSSIBLE TIGHTLY SIR-RAN-WRAP`'
  prefs: []
  type: TYPE_NORMAL
- en: '`THEM TWICE. PUT THEM INSIDE OF A RUBBER`'
  prefs: []
  type: TYPE_NORMAL
- en: '`COMPRESS IT TWIST THE RUBBER AND TIE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`A KNOT. CUT THE EXCESS RUBBER OFF THEN`'
  prefs: []
  type: TYPE_NORMAL
- en: '`PUT IT INSIDE OF ANOTHER AND DO THE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`SAME THING. REPEAT THAT PROCESS # I TIMES`'
  prefs: []
  type: TYPE_NORMAL
- en: '`THE FINISHED PRODUCT SHOULD BE LAYERED WITH`'
  prefs: []
  type: TYPE_NORMAL
- en: '`#H COATS OF SIR-RAN-WRAP #I RUBBERS`'
  prefs: []
  type: TYPE_NORMAL
- en: '`THEN REPEAT THE SAME STEPS FOR THE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`OTHER # OR SO THERE WILL ONLY BE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`#H THINGS FOR ME TO SWALLOW.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`MAKE SURE THAT YOU USE HAND`'
  prefs: []
  type: TYPE_NORMAL
- en: '`SANITIZER BEFORE YOU COME IN`'
  prefs: []
  type: TYPE_NORMAL
- en: This message proved quite interesting. A prison inmate seems to be explaining
    to the recipient (perhaps his wife) how to pack drugs (`MRR STRIPS`) into a condom
    and Saran Wrap (`SIR-RAN-WRAP`). He advises this person to hand him these drug
    packages during a visit so that he can immediately swallow them, smuggling the
    drugs into his prison cell.
  prefs: []
  type: TYPE_NORMAL
- en: A spy’s encrypted sheet
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Brian Regan (not to be confused with the comedian of the same name) used to
    work as a master sergeant in the US Air Force. In 1999, he began trying to sell
    highly classified documents, videotapes, and storage media to foreign governments,
    hoping to receive over $10 million. In 2001, before he was able to succeed, he
    was arrested, convicted of espionage, and sentenced to life in prison.
  prefs: []
  type: TYPE_NORMAL
- en: 'Regan, who had been trained in cryptography, used several encryption methods
    to conceal banking codes, addresses, and other information. The FBI’s codebreaking
    unit, called the Cryptanalysis and Racketeering Records Unit (CRRU), was able
    to break most of Regan’s ciphertexts thanks to its master codebreaker, Dan Olson.
    The following was one of the easier ones:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/g02008.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As Olson found out (probably by brute force), this note is encrypted using
    a Caesar cipher with a key of 1\. The numbers are shifted by one, too. We can
    easily decrypt the first two lines:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Ciphertext: MM-56NVOAIPG CBIOIPG-TUS VCT-AV-533341011943418`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Plaintext:` `LL-45MUNZHOF BAHNHOF-STR UBS-ZU-422230900832307`'
  prefs: []
  type: TYPE_NORMAL
- en: 'This message refers to the Union Bank of Switzerland (UBS), located in a building
    named Münzhof at Bahnhofstrasse 45 in Zurich, Switzerland. (Regan evidently used
    the codename `LL` for this bank.) The number `422230900832307` is a bank account
    number. Lines 3 and 4 are encrypted in the same way:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Ciphertext: SS-CVOEFTQMBUA3CFSO-576795218837795`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Plaintext:` `RR-BUNDESPLATZ2BERN-465684107726684`'
  prefs: []
  type: TYPE_NORMAL
- en: Bundesplatz 2 in Bern, Switzerland, is the address of another major Swiss bank,
    Credit Suisse (codenamed `RR` by Regan). Once again, `465684107726684` is a bank
    account number.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to know more about the Brian Regan spy case, you should read the
    highly recommended 2016 book *The Spy Who Couldn’t Spell* by Yudhijit Bhattacharjee.^([8](b06.xhtml#c02-endnote-8))
  prefs: []
  type: TYPE_NORMAL
- en: An encrypted journal from the movie The Prestige
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The movie *The Prestige* (2006) is about two London stage magicians in the
    late nineteenth century who engage in a deadly rivalry. One magician, Alfred Borden,
    uses cryptography to protect his magic secrets. Excerpts from his journal can
    be seen several times during the movie. Here’s an example (shown about eight minutes
    into the film):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c02/g02009.png)'
  prefs: []
  type: TYPE_IMG
- en: Crypto enthusiasts soon found out that this journal contained real encrypted
    text.^([9](b06.xhtml#c02-endnote-9)) The cipher used turned out to be a Caesar
    cipher with the key 23, and the plaintext proved to contain numerous nonsense
    words. For instance, the line . . .
  prefs: []
  type: TYPE_NORMAL
- en: '`Dsulo 3 ug d ihz zhunt 1,000 ae`'
  prefs: []
  type: TYPE_NORMAL
- en: . . . decrypts to . . .
  prefs: []
  type: TYPE_NORMAL
- en: '`April 3 rd a few werkq 1,000 xb`'
  prefs: []
  type: TYPE_NORMAL
- en: We have no idea what `werkq` and `xb` were intended to mean.
  prefs: []
  type: TYPE_NORMAL
- en: Challenges
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For hints to help you solve all of the challenges in this book, along with the
    solutions, see [https://codebreaking-guide.com/challenges/](https://codebreaking-guide.com/challenges/).
  prefs: []
  type: TYPE_NORMAL
- en: Herbert Yardley’s first challenge
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Herbert Yardley (1889–1958) was a successful codebreaker working for the US
    Department of State. He is best known for his whistleblowing 1931 book, *The American
    Black Chamber*.^([10](b06.xhtml#c02-endnote-10)) A lesser-known book of his is
    the 1932 *Ciphergrams, which provides a collection of encryption puzzles (Yardley
    calls them “ciphergrams”) along with fictional background stories.^([11](b06.xhtml#c02-endnote-11))
    The first ciphergram (see [Figure 2-5](#figure2-5)) is encrypted using the Caesar
    cipher.*
  prefs: []
  type: TYPE_NORMAL
- en: '*![](image_fi/502727c02/f02005.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 2-5: One of Herbert Yardley’s ciphergrams. It is encrypted using the
    Caesar cipher.'
  prefs: []
  type: TYPE_NORMAL
- en: Can you solve it?
  prefs: []
  type: TYPE_NORMAL
- en: A series of newspaper advertisements from 1900
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here are four more newspaper advertisements we found in *The Agony Column*.^([12](b06.xhtml#c02-endnote-12))
    They were originally published in the British newspaper the *Evening Standard*
    in 1900.
  prefs: []
  type: TYPE_NORMAL
- en: '`ALICE R.P. Qcbufohizohs mci. I do not tcfush but hvwby of you jsfm aiqv and
    kcbrsf if we gvozzassh wbgwl cfgsjsb kssyg.` Tuesday, March 27, 1900'
  prefs: []
  type: TYPE_NORMAL
- en: '`ALICE R.P. How nice of you to remember. Will certainly meet you. Always thinking
    of you.` Thursday, March 29, 1900'
  prefs: []
  type: TYPE_NORMAL
- en: '`ALICE R.P. Am so looking forward to it. Kobhhc gssmci acfs hvob wqob hszzmci.
    Will zsh ybck in opcih twjs kssyg hwas.` Monday, April 2, 1900'
  prefs: []
  type: TYPE_NORMAL
- en: '`ALICE R.P. Gvozz kowh dcfhzobr rd ghohwcb hvifgrom twjs qzcqy gvcizr aiqv
    zwys gssmci.` Thursday, May 17, 1900'
  prefs: []
  type: TYPE_NORMAL
- en: As can be seen, the second ad is written completely in cleartext. The other
    three are partially encrypted with the Caesar cipher. Can you break these cryptograms?*
  prefs: []
  type: TYPE_NORMAL
