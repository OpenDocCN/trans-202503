["```\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    Serial.print(\"Hello \");\n    delay(1000);\n} \n```", "```\n// Project #49 - PC-to-Arduino remote control\n\n❶ void doSomething0()\n{\n    Serial.print(\"A0 value is: \");\n    Serial.println(analogRead(0));\n}\n\nvoid doSomething1()\n{\n    Serial.print(\"A1 value is: \");\n    Serial.println(analogRead(1));\n}\n\nvoid doSomething2()\n{\n    digitalWrite(13, HIGH);\n    Serial.println(\"LED On\");\n}\n\nvoid doSomething3()\n{\n    digitalWrite(13, LOW);\n    Serial.println(\"LED Off\");\n}\n\nvoid setup()\n{\n  ❷ Serial.begin(9600);\n    pinMode(13, HIGH);\n    digitalWrite(13,LOW);\n}\n\nvoid loop()\n{\n    char command;\n  ❸ if(Serial.available()) // If data received by Arduino serial\n    {\n command = Serial.read(); // Save the data\n      ❹ switch (command)\n        // Act on the received data:\n        {\n            case '0': doSomething0(); break;\n            case '1': doSomething1(); break;\n            case '2': doSomething2(); break;\n            case '3': doSomething3(); break;\n          ❺ default: Serial.println(\"Unrecognized command.\");\n        }\n    }\n} \n```", "```\n// Project #50 - Arduino-to-Arduino communication with RS232C - transmitter\n\n#include \"Adafruit_BMP085.h\"\nAdafruit_BMP085 bmp;\n\n❶ int temperature;\n\nvoid setup()\n{\n  ❷ Serial.begin(9600);\n    bmp.begin();\n}\n\nvoid loop()\n{\n  ❸ temperature = bmp.readTemperature();\n    Serial.print(\"Temp (C)= \");\n    Serial.print(temperature);\n    Serial.print(\"\\n\");\n    delay(1000);\n} \n```", "```\n// Project #50 - Arduino-to-Arduino communication with RS232 - receiver\n\n#include <LiquidCrystal_PCF8574.h>\n#include <Wire.h>\nLiquidCrystal_PCF8574 lcd(0x27);\n\nint length = 16;\nchar newLine = '\\n';\nchar buffer[16];\n\nvoid setup()\n{\n    Serial.begin(9600);\n    Wire.begin();\n    Wire.beginTransmission(0x27);\n    lcd.begin(16, 2);\n    lcd.setBacklight(255);\n    lcd.clear();\n}\n\nvoid loop()\n{\n    if (Serial.available())\n    {\n        lcd.home();\n        lcd.setCursor(0, 0);\n        Serial.readBytesUntil(newLine, buffer, length);\n        lcd.print(buffer);\n    }\n} \n```", "```\nSerial.begin(`speed`, SERIAL_`XYZ`) \n```", "```\nSerial.begin(4800, SERIAL_7N1) \n```"]