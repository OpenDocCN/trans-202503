["```\nroot@host01:~# kubectl get crds\nNAME                                                  CREATED AT\n...\nclusterinformations.crd.projectcalico.org             ...\n...\ninstallations.operator.tigera.io                      ...\n...\nvolumes.longhorn.io                                   ...\n```", "```\n---\napiVersion: operator.tigera.io/v1\nkind: Installation\nmetadata:\n  name: default\nspec:\n  calicoNetwork:\n    ipPools:\n    - blockSize: 26\n      cidr: 172.31.0.0/16\n...\n```", "```\n ---\n apiVersion: apiextensions.k8s.io/v1\n kind: CustomResourceDefinition\n metadata:\n➊ name: samples.bookofkubernetes.com\n spec:\n➋ group: bookofkubernetes.com\n   versions:\n  ➌ - name: v1\n       served: true\n       storage: true\n       schema:\n         openAPIV3Schema:\n           type: object\n           properties:\n             spec:\n               type: object\n               properties:\n                 value:\n                   type: integer\n➍ scope: Namespaced\n names:\n➎ plural: samples\n➏ singular: sample\n➐ kind: Sample\n     shortNames:\n    ➑ - sam\n```", "```\nroot@host01:~# kubectl apply -f /opt/crd.yaml\ncustomresourcedefinition...k8s.io/samples.bookofkubernetes.com created\n```", "```\n---\napiVersion: bookofkubernetes.com/v1\nkind: Sample\nmetadata:\n  namespace: default\n  name: somedata\nspec:\n  value: 123\n```", "```\nroot@host01:~# kubectl apply -f /opt/somedata.yaml \nsample.bookofkubernetes.com/somedata created\n```", "```\nroot@host01:~# kubectl get samples\nNAME       AGE\nsomedata   56s\nroot@host01:~# kubectl get sample\nNAME       AGE\nsomedata   59s\nroot@host01:~# kubectl get sam\nNAME       AGE\nsomedata   62s\n```", "```\nroot@host01:~# kubectl describe sample somedata\nName:         somedata\nNamespace:    default\n...\nAPI Version:  bookofkubernetes.com/v1\nKind:         Sample\nMetadata:\n  Creation Timestamp:  ...\n...\n  Resource Version:  9386\n  UID:               37cc58db-179f-40e6-a9bf-fbf6540aa689\nSpec:\n  Value:  123\nEvents:   <none>\n```", "```\n   #!/usr/bin/env python3\n   from kubernetes import client, config, watch\n   import json, os, sys\n\n   try:\n  ➊ config.load_incluster_config()\n   except:\n     print(\"In cluster config failed, falling back to file\", file=sys.stderr)\n  ➋ config.load_kube_config()\n\n➌ group = os.environ.get('WATCH_GROUP', 'bookofkubernetes.com')\n   version = os.environ.get('WATCH_VERSION', 'v1')\n   namespace = os.environ.get('WATCH_NAMESPACE', 'default')\n   resource = os.environ.get('WATCH_RESOURCE', 'samples')\n   api = client.CustomObjectsApi()\n\n   w = watch.Watch()\n➍ for event in w.stream(api.list_namespaced_custom_object,\n          group=group, version=version, namespace=namespace, plural=resource):\n➎ json.dump(event, sys.stdout, indent=2)\n    sys.stdout.flush()\n```", "```\n---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: watch\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: watch\n  template:\n    metadata:\n      labels:\n        app: watch\n    spec:\n      containers:\n      - name: watch\n        image: bookofkubernetes/crdwatcher:stable\n      serviceAccountName: watcher\n```", "```\n ---\n apiVersion: rbac.authorization.k8s.io/v1\n kind: ClusterRole\n metadata:\n   name: sample-reader\n   labels:\n  ➊ rbac.authorization.k8s.io/aggregate-to-view: \"true\"\n rules:\n➋ - apiGroups: [\"bookofkubernetes.com\"]\n    resources: [\"samples\"]\n    verbs: [\"get\", \"watch\", \"list\"]\n```", "```\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: watcher\n  namespace: default\n---\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: viewer\n  namespace: default\nsubjects:\n- kind: ServiceAccount\n name: watcher\n  namespace: default\nroleRef:\n  kind: ClusterRole\n  name: view\n  apiGroup: rbac.authorization.k8s.io\n```", "```\nroot@host01:~# kubectl apply -f /opt/sample-reader.yaml \nclusterrole.rbac.authorization.k8s.io/sample-reader created\nroot@host01:~# kubectl apply -f /opt/sa.yaml\nserviceaccount/watcher created\nrolebinding.rbac.authorization.k8s.io/viewer created\nroot@host01:~# kubectl apply -f /opt/watch.yaml \ndeployment.apps/watch created\n```", "```\nroot@host01:~# kubectl get pods\nNAME                     READY   STATUS    RESTARTS   AGE\nwatch-69876b586b-jp25m   1/1     Running   0          47s\n```", "```\nroot@host01:~# kubectl logs watch-69876b586b-jp25m\n{\n  \"type\": \"ADDED\",\n  \"object\": {\n    \"apiVersion\": \"bookofkubernetes.com/v1\",\n    \"kind\": \"Sample\",\n    \"metadata\": {\n...\n      \"creationTimestamp\": \"...\",\n...\n      \"name\": \"somedata\",\n      \"namespace\": \"default\",\n      \"resourceVersion\": \"9386\",\n      \"uid\": \"37cc58db-179f-40e6-a9bf-fbf6540aa689\"\n },\n    \"spec\": {\n      \"value\": 123\n    }\n  },\n...\n```", "```\nroot@host01:~# kubectl apply -f /etc/kubernetes/components/postgres-operator.yaml \ndeployment.apps/postgres-operator created\n```", "```\nroot@host01:~# kubectl get pods\nNAME                                 READY   STATUS    RESTARTS   AGE\npostgres-operator-5cdbff85d6-cclxf   1/1     Running   0          27s\n...\n```", "```\nroot@host01:~# kubectl get crd postgresqls.acid.zalan.do\nNAME                        CREATED AT\npostgresqls.acid.zalan.do   ...\n```", "```\n---\napiVersion: \"acid.zalan.do/v1\"\nkind: postgresql\nmetadata:\n  name: pgsql-cluster\n  namespace: default\nspec:\n  teamId: \"pgsql\"\n  volume:\n    size: 1Gi\n    storageClass: longhorn\n  numberOfInstances: 3\n  users:\n    dbuser:\n    - superuser\n    - createdb\n  databases:\n    defaultdb: dbuser\n  postgresql:\n    version: \"14\"\n```", "```\nroot@host01:~# kubectl apply -f /opt/pgsql.yaml \npostgresql.acid.zalan.do/pgsql-cluster created\n```", "```\nroot@host01:~# kubectl logs postgres-operator-5cdbff85d6-cclxf\n... level=info msg=\"Spilo operator...\"\n...\n... level=info msg=\"ADD event has been queued\" \n  cluster-name=default/pgsql-cluster pkg=controller worker=0\n... level=info msg=\"creating a new Postgres cluster\" \n  cluster-name=default/pgsql-cluster pkg=controller worker=0\n...\n... level=info msg=\"statefulset \n  \\\"default/pgsql-cluster\\\" has been successfully created\" \n  cluster-name=default/pgsql-cluster pkg=cluster worker=0\n...\n```", "```\nroot@host01:~# kubectl get sts\nNAME            READY   AGE\npgsql-cluster   3/3     2m39s\nroot@host01:~# kubectl get po\nNAME                                 READY   STATUS    RESTARTS   AGE\npgsql-cluster-0                      1/1     Running   0          2m40s\npgsql-cluster-1                      1/1     Running   0          2m18s\npgsql-cluster-2                      1/1     Running   0          111s\npostgres-operator-5cdbff85d6-cclxf   1/1     Running   0          4m6s\n...\n```", "```\nroot@host01:~# kubectl logs pgsql-cluster-0\n...\n... INFO: Lock owner: None; I am pgsql-cluster-0\n... INFO: trying to bootstrap a new cluster\n...\n... INFO: initialized a new cluster\n...\n... INFO: no action. I am (pgsql-cluster-0) the leader with the lock\nroot@host01:~# kubectl logs pgsql-cluster-1\n...\n... INFO: Lock owner: None; I am pgsql-cluster-1\n... INFO: waiting for leader to bootstrap\n... INFO: Lock owner: pgsql-cluster-0; I am pgsql-cluster-1\n...\n... INFO: no action. I am a secondary (pgsql-cluster-1) and following \n    a leader (pgsql-cluster-0)\n```", "```\nroot@host01:~# kubectl get svc\nNAME                   TYPE        CLUSTER-IP      ... PORT(S)    AGE\n...\npgsql-cluster          ClusterIP   10.101.80.163   ... 5432/TCP   6m52s\npgsql-cluster-config   ClusterIP   None            ... <none>     6m21s\npgsql-cluster-repl     ClusterIP   10.96.13.186    ... 5432/TCP   6m52s\n```", "```\nroot@host01:~# kubectl delete -f /opt/pgsql.yaml \npostgresql.acid.zalan.do \"pgsql-cluster\" deleted\n```", "```\nroot@host01:~# kubectl logs postgres-operator-5cdbff85d6-cclxf\n...\n... level=info msg=\"deletion of the cluster started\" \n  cluster-name=default/pgsql-cluster pkg=controller worker=0\n... level=info msg=\"DELETE event has been queued\" \n  cluster-name=default/pgsql-cluster pkg=controller worker=0\n...\n... level=info msg=\"cluster has been deleted\" \n  cluster-name=default/pgsql-cluster pkg=controller worker=0\n```"]