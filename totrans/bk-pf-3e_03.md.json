["```\npass in proto tcp on re1 from re1:network to re0:network \\\n                  port $ports keep state\n```", "```\npass out proto tcp on re0 from re1:network to re0:network \\\n                     port $ports keep state\n```", "```\npass proto tcp from re1:network to port $ports keep state\n```", "```\npass proto { tcp, udp } from $localnet to port $ports\n```", "```\n# sysctl net.inet.ip.forwarding=1\n```", "```\n# sysctl net.inet6.ip6.forwarding=1\n```", "```\nnet.inet.ip.forwarding=1\nnet.inet6.ip6.forwarding=1\n```", "```\ngateway_enable=\"YES\" #for ipv4\nipv6_gateway_enable=\"YES\" #for ipv6\n```", "```\n$ **ifconfig -a**\nlo0: flags=8049<UP,LOOPBACK,RUNNING,MULTICAST> mtu 33224\n        groups: lo\n        inet 127.0.0.1 netmask 0xff000000\n        inet6 ::1 prefixlen 128\n        inet6 fe80::1%lo0 prefixlen 64 scopeid 0x5\nxl0: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> mtu 1500\n        lladdr 00:60:97:83:4a:01\n        groups: egress\n        media: Ethernet autoselect (100baseTX full-duplex)\n        status: active\n        inet 194.54.107.18 netmask 0xfffffff8 broadcast 194.54.107.23\n        inet6 fe80::260:97ff:fe83:4a01%xl0 prefixlen 64 scopeid 0x1\nfxp0: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> mtu 1500\n        lladdr 00:30:05:03:fc:41\n        media: Ethernet autoselect (100baseTX full-duplex)\n        status: active\n        inet 194.54.103.65 netmask 0xffffffc0 broadcast 194.54.103.127\n        inet6 fe80::230:5ff:fe03:fc41%fxp0 prefixlen 64 scopeid 0x2\npflog0: flags=141<UP,RUNNING,PROMISC> mtu 33224\nenc0: flags=0<> mtu 1536\n```", "```\next_if = \"re0\" # macro for external interface - use tun0 or pppoe0 for PPPoE\nint_if = \"re1\" # macro for internal interface\nlocalnet = $int_if:network\n# ext_if IPv4 address could be dynamic, hence ($ext_if)\nmatch out on $ext_if inet from $localnet nat-to ($ext_if) # NAT, match IPv4 only\nblock all\npass from { self, $localnet }\n```", "```\next_if = \"re0\" # macro for external interface - use tun0 or pppoe0 for PPPoE\nint_if = \"re1\" # macro for internal interface\nlocalnet = $int_if:network\n# ext_if IP address could be dynamic, hence ($ext_if)\nnat on $ext_if inet from $localnet to any -> ($ext_if) # NAT, match IPv4 only\nblock all\npass from { self, $localnet } to any keep state\n```", "```\nclient_out = \"{ ftp-data, ftp, ssh, domain, pop3, auth, nntp, http,\\\n                https, 446, cvspserver, 2628, 5999, 8000, 8080 }\"\n```", "```\npass proto tcp from $localnet to port $client_out\n```", "```\npass in proto tcp to port ssh\n```", "```\npass in proto tcp to $ext_if port ssh\n```", "```\nudp_services = \"{ domain, ntp }\"\n```", "```\npass quick proto { tcp, udp } to port $udp_services\n```", "```\n$ **host nostarch.com**\n```", "```\nftpproxy_flags=\"\"\n```", "```\nftpproxy_enable=\"YES\"\nftpproxy_flags=\"\" # and put any command line options here\n```", "```\nanchor \"ftp-proxy/*\"\n```", "```\nnat-anchor \"ftp-proxy/*\"\nrdr-anchor \"ftp-proxy/*\"\n```", "```\npass in quick inet proto tcp to port ftp divert-to 127.0.0.1 port 8021\n```", "```\nrdr pass on $int_if inet proto tcp from any to any port ftp -> 127.0.0.1 port 8021\n```", "```\npass out inet proto tcp from $proxy to any port ftp\n```", "```\n$ **sudo pfctl -f /etc/pf.conf**\n```", "```\npass inet proto icmp\n```", "```\npass inet6 proto icmp6\n```", "```\npass inet proto icmp icmp-type $icmp_types from $localnet\npass inet6 proto icmp6 icmp6-type $icmp6_types from $localnet\npass inet proto icmp icmp-type $icmp_types to $ext_if\npass inet6 proto icmp6 icmp6-type $icmp6_types to $ext_if\n```", "```\nicmp_types = \"echoreq\"\nicmp6_types = \"echoreq\"\n```", "```\npass inet proto icmp icmp-type $icmp_types\npass inet6 proto icmp6 icmp6-type $icmp6_types\n```", "```\n# allow out the default range for traceroute(8):\n# \"base+nhops*nqueries-1\" (33434+64*3-1)\npass out on egress inet proto udp to port 33433:33626 # For IPv4\npass out on egress inet6 proto udp to port 33433:33626 # For IPv6\n```", "```\nicmp_types = \"{ echoreq, unreach }\"\n```", "```\npass inet proto icmp icmp-type $icmp_types\n```", "```\nicmp6_types = \"{ echoreq unreach timex paramprob }\"\n```", "```\npass inet6 proto icmp6 icmp6-type $icmp6_types\n```", "```\ntable <clients> persist { 192.168.2.0/24, !192.168.2.5 }\n```", "```\n192.168.2.0/24\n!192.168.2.5\n```", "```\ntable <clients> persist file \"/etc/clients\"\n```", "```\npass inet proto tcp from <clients> to any port $client_out\n```", "```\n$ **sudo pfctl -t clients -T add 192.168.1/16**\n```", "```\n$ **sudo pfctl -t clients -T show >/etc/clients**\n```", "```\n$ **sudo pfctl -t clients -T replace -f /etc/clients**\n```"]