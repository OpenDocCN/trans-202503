- en: '**5'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**5'
- en: LOGIC GATES**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑门**
- en: '![Image](../images/pg23_Image_2.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg23_Image_2.jpg)'
- en: In the previous chapter, you learned about Boolean algebra expressions and how
    to implement them using logic gates. In this chapter, you’ll learn how to implement
    logic gates in hardware using *transistors*, the solid-state electronic devices
    used to implement the on/off switches we’ve been discussing so far in this book.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章，你学习了布尔代数表达式以及如何使用逻辑门实现它们。在这一章，你将学习如何使用*晶体管*在硬件中实现逻辑门，晶体管是用来实现我们在本书中讨论的开关的固态电子设备。
- en: To help you to understand how transistors operate, we’ll start with a simple
    introduction to electronics. From there, you’ll learn how transistors can be connected
    in pairs to switch faster and use less electrical power. We’ll end the chapter
    with some practical considerations regarding the use of transistors to construct
    logic gates.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助你理解晶体管的工作原理，我们将从电子学的简单介绍开始。接下来，你将学习如何将晶体管成对连接，以实现更快的开关速度并减少电力消耗。我们将在本章的最后讨论一些关于使用晶体管构建逻辑门的实际注意事项。
- en: '**Crash Course in Electronics**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**电子学速成课程**'
- en: 'You don’t need to be an electrical engineer to understand how logic gates work,
    but some understanding of the basic concepts can be helpful. In this section,
    I provide a brief overview of the fundamental concepts of electronic circuits.
    We’ll begin with two definitions:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要成为电气工程师就能理解逻辑门的工作原理，但理解一些基本概念会有所帮助。在本节中，我将简要介绍电子电路的基本概念。我们将从两个定义开始：
- en: '**Current**   Refers to the movement of electrical charge. Electrical charge
    is measured in *coulombs (C)*. A flow of 1 C per second (1 C/s) is defined as
    1 *ampere (A)*, often abbreviated as *amp*. Current flows through an electrical
    circuit only if there is a completely connected path from one side of the power
    source to the other.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**电流** 指的是电荷的运动。电荷的单位是*库伦（C）*。1库伦每秒（1 C/s）的流动定义为1*安培（A）*，通常简写为*安*。电流只有在电路中从电源的一侧到另一侧有完全连接的路径时才会流动。'
- en: '**Voltage**   Also called *potential difference*, refers to the difference
    in electrical energy per unit charge between two points in an electrical circuit.
    One *volt (V)* is defined as the electrical difference between two points on a
    *conductor* (the medium the current flows through) when 1 A of current flowing
    through the conductor dissipates 1 watt (W) of power.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**电压** 也叫*电势差*，指的是电路中两个点之间每单位电荷的电能差。一*伏特（V）*定义为在导体（电流流经的介质）上两个点之间的电差，当1安培（A）的电流通过导体时，消耗1瓦特（W）的功率。'
- en: 'A computer is constructed from the following electronic components:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一台计算机由以下电子元件构成：
- en: Power sources that provide the electrical power
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供电力的电源
- en: Passive components that affect current flow and voltage levels but whose characteristics
    cannot be altered by another electronic component
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 影响电流流动和电压水平的无源元件，但其特性无法被其他电子元件改变
- en: Active components that switch between various combinations of the power source,
    passive components, and other active components under the control of one or more
    other electronic components
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在一个或多个电子元件的控制下，能够在电源、无源元件和其他有源元件的各种组合之间切换的有源元件
- en: Conductors that connect the other components
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接其他元件的导体
- en: Let’s look at how each of these electronic components works.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下这些电子元件如何工作。
- en: '***Power Supplies and Batteries***'
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***电源和电池***'
- en: In almost all countries, electrical power comes in the form of *alternating
    current (AC)*. For AC, a plot of the magnitude of the voltage versus time shows
    a sinusoidal wave shape. Computer circuits use *direct current (DC)* power, which,
    unlike AC, does not vary over time. A power supply is used to convert AC to DC,
    as shown in [Figure 5-1](ch05.xhtml#ch5fig1).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在几乎所有国家，电力以*交流电（AC）*的形式提供。对于交流电，电压大小与时间的关系图呈现正弦波形状。计算机电路使用*直流电（DC）*电源，直流电与交流电不同，不随时间变化。电源用于将交流电转换为直流电，如[图5-1](ch05.xhtml#ch5fig1)所示。
- en: '![Image](../images/pg114_Image_125.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg114_Image_125.jpg)'
- en: '*Figure 5-1: An AC/DC power supply*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-1：交流电/直流电电源*'
- en: Batteries also provide DC electrical power. When drawing circuits, we’ll use
    the symbol for a battery ([Figure 5-2](ch05.xhtml#ch5fig2)) to designate a DC
    power supply. The power supply in [Figure 5-2](ch05.xhtml#ch5fig2) provides 5
    V DC.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 电池也提供直流电电源。在绘制电路时，我们将使用电池符号（[图5-2](ch05.xhtml#ch5fig2)）来表示直流电源。[图5-2](ch05.xhtml#ch5fig2)中的电源提供5伏特直流电。
- en: '![Image](../images/pg115_Image_126.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg115_Image_126.jpg)'
- en: '*Figure 5-2: The circuit symbol for a 5 V DC power source*'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-2：5 V 直流电源的电路符号*'
- en: 'In the previous chapters, you’ve seen that everything that happens in a computer
    is based on a system of `1`s and `0`s. But how are these `1`s and `0`s physically
    represented? Computer circuits distinguish between two different voltage levels
    to provide logical `0`s and `1`s. For example, logical `0` may be represented
    by 0 V DC and logical `1` by 5 V DC. The reverse could also be implemented: 5
    V as logical `0` and 0 V as logical `1`. The only requirement is that the hardware
    design be consistent. Luckily, programmers don’t need to worry about the actual
    voltages used; that’s best left to the computer hardware engineers.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，你已经看到计算机中发生的一切都是基于 `1` 和 `0` 的系统。但这些 `1` 和 `0` 是如何在物理上表示的呢？计算机电路通过区分两个不同的电压水平来表示逻辑
    `0` 和逻辑 `1`。例如，逻辑 `0` 可能由 0 V 直流电表示，逻辑 `1` 由 5 V 直流电表示。反过来也可以实现：5 V 作为逻辑 `0`，0
    V 作为逻辑 `1`。唯一的要求是硬件设计的一致性。幸运的是，程序员不需要关心实际使用的电压；这最好交给计算机硬件工程师处理。
- en: '**NOTE**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Electronic devices are designed to operate reliably within a range of voltages.
    For example, a device designed to operate at a nominal 5 V typically has a tolerance
    of ±5%, or 4.75 to 5.25 V.*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*电子设备被设计成在一定范围的电压下可靠工作。例如，一个设计为工作在标称 5 V 的设备，通常有 ±5% 的公差，即 4.75 V 到 5.25 V。*'
- en: The components in a computer circuit constantly switch between the two voltage
    levels. Each voltage switch takes time, which limits how fast a given circuit
    can complete an operation. As you’ll see in the “Transistors” section on [page
    96](ch05.xhtml#ch05lev1sec2), speeding up the switching times uses more power,
    which creates heat. Excessive heat can damage the components, which limits the
    speed of calculations. The time-dependent characteristics of the circuit components
    are an important design consideration for computer hardware engineers. We’ll look
    at these characteristics in the next section.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机电路中的元件不断在两种电压水平之间切换。每次电压切换都需要时间，这限制了电路完成操作的速度。正如你将在“晶体管”一节中看到的，在[第 96 页](ch05.xhtml#ch05lev1sec2)，加快切换时间会消耗更多的电力，并产生热量。过多的热量可能损坏元件，进而限制计算速度。电路元件的时间依赖特性是计算机硬件工程师设计时需要重点考虑的因素。我们将在下一节详细讨论这些特性。
- en: '***Passive Components***'
  id: totrans-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***无源元件***'
- en: 'All electrical circuits have the following electromagnetic properties, which
    are distributed throughout the circuit:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 所有电路都具有以下电磁特性，这些特性分布在整个电路中：
- en: '**Resistance**   Impedes current flow, thus dissipating energy. The electrical
    energy is transformed into heat.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**电阻**   阻碍电流流动，从而消耗能量。电能转化为热能。'
- en: '**Capacitance**   Stores energy in an electric field. Voltage across a capacitance
    cannot change instantaneously.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**电容**   将能量储存在电场中。电容两端的电压不能瞬间变化。'
- en: '**Inductance**   Stores energy in a magnetic field. Current through an inductance
    cannot change instantaneously.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**电感**   将能量储存在磁场中。电流通过电感时不能瞬间变化。'
- en: It takes time for energy to be stored as an electric field, so *capacitance
    impedes time changes in voltage*. And it takes time for energy to be stored as
    a magnetic field, so *inductance impedes time changes in current*. These two properties
    are lumped together with resistance and called *impedance*. The impedance to changes
    slows down the switching that takes place in a computer, and the resistance consumes
    electrical power. We’ll be looking at the general timing characteristics of these
    properties in the remainder of this section, but will leave a discussion of power
    consumption to more advanced books on the topic.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 储能为电场需要时间，因此*电容器阻碍电压随时间变化*。储能为磁场也需要时间，因此*电感阻碍电流随时间变化*。这两种特性与电阻一起被统称为*阻抗*。阻抗对变化的阻碍减慢了计算机中发生的开关操作，而电阻则消耗电能。我们将在本节余下的部分讨论这些特性的基本时序特性，但对于功耗的讨论会留给更深入的书籍。
- en: 'To get a feel for the effects of each of these properties, we’ll consider the
    discrete electronic devices that are used to place these properties in a specific
    location in a circuit: resistors, capacitors, and inductors. These are part of
    a broader class of electronic components called *passive components*, which cannot
    be controlled electronically; they simply consume or store energy. [Figure 5-3](ch05.xhtml#ch5fig3)
    shows the circuit symbols for the passive electronic devices we’ll be discussing
    here.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了感受这些属性的影响，我们将考虑用于将这些属性放置在电路中特定位置的离散电子设备：电阻器、电容器和电感器。这些属于一种称为*无源元件*的广泛电子元件类别，它们不能被电子控制；它们只是消耗或储存能量。[图5-3](ch05.xhtml#ch5fig3)显示了我们将在此讨论的无源电子设备的电路符号。
- en: '![Image](../images/pg116_Image_127.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg116_Image_127.jpg)'
- en: '*Figure 5-3: Circuit symbols for passive devices*'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-3：无源设备的电路符号*'
- en: '**Switches**'
  id: totrans-35
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**开关**'
- en: 'A *switch* can be in one of two positions: open or closed. In the open position,
    there is no connection between the two ends, and no conduction occurs. When a
    switch is closed, the connection between the two ends is complete, thus conducting
    electricity. The symbol in [Figure 5-3](ch05.xhtml#ch5fig3)(a) typically indicates
    a switch that is activated manually. In the section “Transistors” on [page 96](ch05.xhtml#ch05lev1sec2),
    you’ll learn that a computer uses transistors for open/closed switches, which
    are controlled electronically, thus implementing the on/off logic that forms the
    basis of a computer.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '*开关*有两种位置：开和关。在开的位置，两个端点之间没有连接，不发生导电。当开关关闭时，两个端点之间的连接完成，从而导电。[图5-3](ch05.xhtml#ch5fig3)(a)中的符号通常表示手动操作的开关。在[第96页](ch05.xhtml#ch05lev1sec2)的“晶体管”部分中，您将了解到计算机使用晶体管作为开关来控制开关的开闭，从而实现计算机的开/关逻辑。'
- en: '**Resistors**'
  id: totrans-37
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**电阻器**'
- en: A *resistor* is used to limit the amount of current in a specific location in
    a circuit. By limiting the current flow into a capacitor or inductor, a resistor
    affects the time it takes for these other devices (discussed in “Capacitors” on
    [page 90](ch05.xhtml#ch05lev3sec3) and “Inductors” on [page 93](ch05.xhtml#ch05lev3sec4))
    to build up their energy storage. The amount of resistance is usually chosen in
    conjunction with the amount of capacitance or inductance to provide specific timing
    characteristics. Resistors are also used to limit current flowing through a device
    to nondestructive levels.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*电阻器*用于限制电路中特定位置的电流量。通过限制电流流入电容器或电感器，电阻器影响这些设备（在[第90页](ch05.xhtml#ch05lev3sec3)的“电容器”部分和[第93页](ch05.xhtml#ch05lev3sec4)的“电感器”部分讨论）的能量储存建立时间。电阻的大小通常与电容或电感的大小一起选择，以提供特定的时间特性。电阻器还用于将通过设备的电流限制到非破坏性的水平。'
- en: As it limits current flow, a resistor irreversibly transforms the electrical
    energy into heat. A resistor doesn’t store energy, unlike a capacitor or inductor,
    which can return the stored energy to the circuit at a later time.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它限制电流流动，电阻器会不可逆地将电能转化为热能。与电容器或电感器不同，电阻器不会储存能量，后者可以在稍后的时间将储存的能量返回电路。
- en: The relationship between voltage and current for a single resistor is given
    by *Ohm’s law*,
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 单个电阻器的电压与电流关系由*欧姆定律*给出，
- en: '![Image](../images/pg116_Image_128.jpg) where *V*(*t*) is the voltage difference
    across the resistor at time *t*, *I*(*t*) is the current flowing through it at
    time *t*, and *R* is the value of the resistor. Resistor values are specified
    in *ohms*.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![Image](../images/pg116_Image_128.jpg) 其中*V*(*t*)是时刻*t*电阻器两端的电压差，*I*(*t*)是时刻*t*流过电阻器的电流，*R*是电阻器的阻值。电阻器的阻值以*欧姆*为单位。'
- en: The circuit shown in [Figure 5-4](ch05.xhtml#ch5fig4) shows two resistors connected
    through a switch to a power supply, which supplies 5 V. The Greek letter Ω is
    used to indicate ohms, and kΩ indicates 10³ Ω. Since current can flow only in
    a closed path, no current flows until the switch is closed.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[图5-4](ch05.xhtml#ch5fig4)所示的电路图显示了两个电阻器通过开关连接到一个提供5伏电压的电源。希腊字母Ω用来表示欧姆，而kΩ表示10³欧姆。由于电流只能在闭合路径中流动，开关未闭合时电流不会流动。'
- en: '![Image](../images/pg117_Image_129.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg117_Image_129.jpg)'
- en: '*Figure 5-4: Two resistors in series with a power supply and switch*'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-4：两个串联电阻器与电源和开关*'
- en: 'In [Figure 5-4](ch05.xhtml#ch5fig4), both resistors are in the same path, so
    when the switch is closed, the same current, *I*, flows through each of them.
    Resistors that are in the same current flow path are said to be *connected in
    series*. To determine the amount of current flowing from the power supply, we
    need to compute the total resistance in the path of the current. In this example,
    this is the sum of the two resistors:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 5-4](ch05.xhtml#ch5fig4)中，两个电阻处于相同的路径上，因此当开关闭合时，相同的电流 *I* 会通过它们每一个。处于相同电流流动路径上的电阻称为*串联连接*。为了确定从电源流出的电流，我们需要计算电流路径中的总电阻。在这个例子中，这是两个电阻的总和：
- en: '![Image](../images/pg117_Image_130.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg117_Image_130.jpg)'
- en: Thus, the 5 V is applied across a total of 2.5 kΩ. Solving for *I*, and leaving
    out *t* because the power supply voltage doesn’t vary with time, we get
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，5 V 电压应用于总计 2.5 kΩ 的电阻。解出 *I*，并省略 *t* 因为电源电压不随时间变化，得到：
- en: '![Image](../images/pg117_Image_131.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg117_Image_131.jpg)'
- en: where mA is milliamps.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 mA 表示毫安。
- en: 'We can now determine the voltage difference between points A and B in the circuit
    in [Figure 5-4](ch05.xhtml#ch5fig4) by multiplying the resistor value and current:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以通过将电阻值和电流相乘来确定[图 5-4](ch05.xhtml#ch5fig4)中 A 点和 B 点之间的电压差：
- en: '![Image](../images/pg117_Image_132.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg117_Image_132.jpg)'
- en: 'Similarly, the voltage difference between points B and C is:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，B 点和 C 点之间的电压差为：
- en: '![Image](../images/pg117_Image_133.jpg) Thus, connecting the resistors in series
    serves as a *voltage divider*, dividing the 5 V between the two resistors: 2.0
    V across the 1.0 kΩ resistor and 3.0 V across the 1.5 kΩ resistor.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![Image](../images/pg117_Image_133.jpg) 因此，将电阻串联连接起到*电压分配器*的作用，将 5 V 电压分配到两个电阻上：1.0
    kΩ 电阻上的 2.0 V 和 1.5 kΩ 电阻上的 3.0 V。'
- en: '[Figure 5-5](ch05.xhtml#ch5fig5) shows the same two resistors *connected in
    parallel*.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-5](ch05.xhtml#ch5fig5)显示了两个电阻*并联连接*的情况。'
- en: '![Image](../images/pg118_Image_134.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg118_Image_134.jpg)'
- en: '*Figure 5-5: Two resistors in parallel*'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-5：两个电阻并联*'
- en: 'In [Figure 5-5](ch05.xhtml#ch5fig5), the full voltage of the power supply,
    5 V, is applied across points A and C when the switch is closed. Thus, each resistor
    has 5 V applied across it, and we can use Ohm’s law to compute the current through
    each one:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 5-5](ch05.xhtml#ch5fig5)中，当开关闭合时，电源的全部电压 5 V 被施加在 A 点和 C 点之间。因此，每个电阻两端都有
    5 V 电压，我们可以使用欧姆定律来计算流过每个电阻的电流：
- en: '![Image](../images/pg118_Image_135.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg118_Image_135.jpg)'
- en: 'The total current from the power supply when the switch is closed, *I[T]* =
    *I*[1] + *I*[2], is divided at point A to supply both resistors. It must equal
    the sum of the two currents through the resistors:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当开关闭合时，电源的总电流 *I[T]* = *I*[1] + *I*[2] 会在 A 点被分配到两个电阻上。它必须等于通过两个电阻的电流之和：
- en: '![Image](../images/pg118_Image_136.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg118_Image_136.jpg)'
- en: '**Capacitors**'
  id: totrans-61
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**电容器**'
- en: A *capacitor* stores energy in the form of an *electric field*, which is essentially
    the electric charge at rest. A capacitor initially allows current to flow into
    it. But instead of providing a continuous path for the current flow, it stores
    the electric charge, creating an electric field and causing the current flow to
    decrease over time.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*电容器*以*电场*的形式储存能量，本质上是静止的电荷。电容器最初允许电流流入。但它不会提供持续的电流流动路径，而是储存电荷，形成电场，并导致电流随着时间减少。'
- en: Since it takes time for the electric field to build up, capacitors are often
    used to smooth out rapid changes in voltage. When there is a sudden increase in
    current flow into a capacitor, the capacitor tends to absorb the electric charge.
    Then, when the current flow suddenly decreases, the stored electric charge is
    released from the capacitor.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于建立电场需要时间，电容器常用于平滑电压的快速变化。当电流突然增加并流入电容器时，电容器会吸收电荷。然后，当电流突然减少时，电容器会释放储存的电荷。
- en: The voltage across a capacitor changes with time according to
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 电容器两端的电压随着时间变化，遵循以下规律：
- en: '![Image](../images/pg119_Image_137.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg119_Image_137.jpg)'
- en: where *V*(*t*) is the voltage difference across the capacitor at time *t*, *I*(*t*)
    is the current flowing through it at time *t*, and *C* is the value of the capacitor
    in *farads* (F).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *V*(*t*) 是电容器在时间 *t* 时的电压差，*I*(*t*) 是时间 *t* 时流过电容器的电流，*C* 是电容器的电容值，以*法拉*（F）为单位。
- en: '**NOTE**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*In case you haven’t studied calculus, the* ∫ *symbol represents* integration,
    *which can be thought of as “infinitesimal summation.” This equation says that
    the voltage sums up as time increases from 0 to the current time,* t. *You’ll
    see a graphic view of this in [Figure 5-7](ch05.xhtml#ch5fig7).*'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你还没有学习微积分，* ∫ *符号表示* 积分，*可以看作是“无限小求和。”这个方程说明，电压随着时间从 0 增加到当前时刻 *t* 时会逐步累积。你将在
    [图 5-7](ch05.xhtml#ch5fig7) 中看到这个过程的图形视图。*'
- en: '[Figure 5-6](ch05.xhtml#ch5fig6) shows a 1.0 microfarad (μF) capacitor being
    charged through a 1.0 kΩ resistor.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-6](ch05.xhtml#ch5fig6) 显示了一个 1.0 微法（μF）电容器通过 1.0 kΩ 电阻充电的过程。'
- en: '![Image](../images/pg119_Image_138.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg119_Image_138.jpg)'
- en: '*Figure 5-6: A capacitor in series with a resistor*'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-6：电容器与电阻串联*'
- en: As you will see later in this chapter, this circuit is a rough simulation of
    the output of one transistor connected to the input of another. The output of
    the first transistor (which acts like the power supply plus resistor in [Figure
    5-6](ch05.xhtml#ch5fig6)) has resistance, and the input to the second transistor
    has capacitance. The switching behavior of the second transistor depends upon
    the voltage across the (equivalent) capacitor, *V[BC]*(*t*), reaching a threshold
    value.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你将在本章后面看到的，这个电路是一个粗略模拟，模拟的是一个晶体管的输出连接到另一个晶体管的输入。第一个晶体管的输出（它就像 [图 5-6](ch05.xhtml#ch5fig6)
    中的电源加电阻）具有电阻，第二个晶体管的输入具有电容。第二个晶体管的开关行为取决于（等效）电容器两端的电压 *V[BC]*(*t*) 达到阈值。
- en: 'Let’s look at the time it takes for the voltage across the capacitor to reach
    a threshold value. Assuming the voltage across the capacitor, *V[BC]*, is 0 V
    when the switch is first closed, current flows through the resistor and into the
    capacitor. The voltage across the resistor plus the voltage across the capacitor
    must be equal to the voltage that is available from the power supply. That is:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来看一下电容器两端电压达到阈值所需的时间。假设当开关第一次闭合时，电容器两端的电压 *V[BC]* 为 0 V，电流通过电阻流入电容器。电阻器两端的电压加上电容器两端的电压必须等于电源提供的电压。即：
- en: '![Image](../images/pg119_Image_139.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg119_Image_139.jpg)'
- en: 'Starting with the voltage across the capacitor, *V[BC]*, at 0 V, when the switch
    is first closed, the full 5.0 V of the power supply will appear across the resistor.
    Thus, the initial current flow in the circuit will be:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 从电容器两端电压 *V[BC]* 为 0 V 开始，当开关首次闭合时，电源的完整 5.0 V 将出现在电阻器两端。因此，电路中的初始电流将为：
- en: '![Image](../images/pg119_Image_140.jpg) This initial surge of current into
    the capacitor causes the voltage across the capacitor to build up toward the power
    supply voltage. The previous integral equation shows that this buildup decreases
    exponentially as the voltage across the capacitor approaches its final value.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![Image](../images/pg119_Image_140.jpg) 这种初始电流冲击电容器的过程导致电容器两端的电压逐渐升高，接近电源电压。前面的积分方程表明，随着电容器两端电压接近其最终值，电压的积累以指数方式减小。'
- en: As the voltage across the capacitor, *V[BC]*(*t*), increases, the voltage across
    the resistor, *V[AB]*(*t*), must decrease. When the voltage across the capacitor
    finally equals the voltage of the power supply, the voltage across the resistor
    is 0 V and the current flow in the circuit is zero. The rate of the exponential
    decrease in current flow is given by the product of the resistor value and the
    capacitor value, *RC*, called the *time constant*. For the values of *R* and *C*
    in this example, we get
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 随着电容器两端电压 *V[BC]*(*t*) 的增加，电阻器两端电压 *V[AB]*(*t*) 必须减少。当电容器两端的电压最终等于电源电压时，电阻器两端的电压为
    0 V，电路中的电流为零。电流流动的指数递减速率由电阻值与电容值的乘积 *RC* 给出，称为*时间常数*。对于本例中的 *R* 和 *C* 值，我们得到：
- en: '![Image](../images/pg120_Image_141.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg120_Image_141.jpg)'
- en: where s is seconds and ms is milliseconds.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 s 为秒，ms 为毫秒。
- en: 'Assuming the capacitor in [Figure 5-6](ch05.xhtml#ch5fig6) has 0 V across it
    when the switch is closed, the voltage that develops across the capacitor over
    time is given by:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 假设在 [图 5-6](ch05.xhtml#ch5fig6) 中，当开关闭合时电容器两端电压为 0 V，那么电容器两端随时间变化的电压由下式给出：
- en: '![Image](../images/pg120_Image_142.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg120_Image_142.jpg)'
- en: '[Figure 5-7](ch05.xhtml#ch5fig7) shows this graphically for the circuit in
    [Figure 5-6](ch05.xhtml#ch5fig6). The left y-axis shows voltage across the capacitor,
    while the right y-axis voltage is across the resistor. Note that the scales go
    in opposite directions.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-7](ch05.xhtml#ch5fig7) 显示了[图 5-6](ch05.xhtml#ch5fig6) 中电路的图形表示。左侧的 y 轴表示电容器两端的电压，而右侧的
    y 轴表示电阻器两端的电压。请注意，两个刻度方向相反。'
- en: '![Image](../images/pg120_Image_143.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg120_Image_143.jpg)'
- en: '*Figure 5-7: A capacitor charging over time*'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-7：电容器随时间充电*'
- en: At time *t* = 1.0 ms (one time constant), the voltage across the capacitor is
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在时间 *t* = 1.0 毫秒（一个时间常数）时，电容器两端的电压为：
- en: '![Image](../images/pg120_Image_144.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg120_Image_144.jpg)'
- en: which is more than the threshold voltage of the typical transistors used in
    a computer. You’ll learn more about this later in the chapter.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这超过了计算机中常用的典型晶体管的阈值电压。你将在本章稍后部分了解更多相关内容。
- en: 'After six time constants have passed, the voltage across the capacitor is:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 六个时间常数之后，电容器两端的电压为：
- en: '![Image](../images/pg121_Image_145.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg121_Image_145.jpg)'
- en: At this time, the voltage across the resistor is essentially 0 V and current
    flow is very low.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，电阻器两端的电压基本为 0 V，电流非常小。
- en: '**Inductors**'
  id: totrans-91
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**电感器**'
- en: An *inductor* stores energy in the form of a *magnetic field*, which is created
    by electric charge in motion. An inductor initially prevents the flow of electrical
    charge, requiring time for the magnetic field to build. By providing a continuous
    path for the flow of electrical charge (current), an inductor creates the magnetic
    field.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 一个*电感器*以*磁场*的形式储存能量，磁场是由运动中的电荷产生的。电感器最初会阻止电荷的流动，需要时间来建立磁场。通过提供电荷流动（电流）的连续路径，电感器创造出磁场。
- en: In a computer, inductors are mainly used in the power supply and the circuitry
    that connects the power supply to the CPU. If you have access to the inside of
    a computer, you can likely see a small (about 1 cm diameter) donut-shaped device
    with wire wrapped around it on the motherboard near the CPU. This is an inductor
    used to smooth the power supplied to the CPU.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机中，电感器主要用于电源以及将电源与 CPU 连接的电路。如果你能看到计算机内部，你可能会在主板上靠近 CPU 的位置看到一个小型的（大约 1 厘米直径）环状设备，绕着它有电线。这是一个电感器，用于平滑供给
    CPU 的电源。
- en: Although either an inductor or a capacitor can be used to smooth the power,
    the inductor does it by resisting current changes and the capacitor does it by
    resisting voltage changes. A discussion of which one, or both, to use for smoothing
    is beyond the scope of this book.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管电感器或电容器都可以用来平滑电源，但电感器是通过抵抗电流变化来实现的，而电容器则是通过抵抗电压变化来实现的。关于选择使用哪个，或者是否同时使用它们来平滑电源的问题，超出了本书的范围。
- en: The relationship between voltage *V*(*t*) at time *t* across an inductor and
    current flow through it, *I*(*t*), is given by
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在时间 *t* 时，电感器两端的电压 *V*(*t*) 与通过电感器的电流 *I*(*t*) 之间的关系为：
- en: '![Image](../images/pg121_Image_146.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg121_Image_146.jpg)'
- en: where *L* is the value of the inductor in *henrys (H)*.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *L* 是电感器的值，以*亨利 (H)* 为单位。
- en: '**NOTE**'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Again, we’re using some calculus here. The* dI*(*t*)/*dt *notation represents
    differentiation, which is the rate of change of* I*(*t*) with respect to time,*
    t*. This equation says that the voltage at time* t *is proportional to the rate
    of change of* I*(*t*) at that time. (You’ll see a graphic view of this shortly,
    in [Figure 5-9](ch05.xhtml#ch5fig9).)*'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '*再次，我们在这里使用了一些微积分。* dI*(*t*)/*dt *表示微分，即* I*(*t*) 随时间 *t* 变化的速率。这个方程表示，时间 *t*
    时的电压与该时刻 *I*(*t*) 的变化速率成正比。（你将在[图 5-9](ch05.xhtml#ch5fig9)中看到这个图形表示。）*'
- en: '[Figure 5-8](ch05.xhtml#ch5fig8) shows a 1.0 μH inductor connected in series
    with a 1.0 kΩ resistor.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-8](ch05.xhtml#ch5fig8) 显示了一个 1.0 μH 的电感器与一个 1.0 kΩ 的电阻器串联连接。'
- en: '![Image](../images/pg121_Image_147.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg121_Image_147.jpg)'
- en: '*Figure 5-8: An inductor in series with a resistor*'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-8：电感器与电阻器串联*'
- en: When the switch is open, no current flows through this circuit. When it closes,
    the inductor initially impedes the flow of current, and it takes time for a magnetic
    field to be built up in the inductor. Before the switch is closed, no current
    is flowing through the resistor, so the voltage across it, *V[BC]*, is 0 V. The
    voltage across the inductor, *V[AB]*, is the full 5 V of the power supply. As
    current begins to flow through the inductor, the voltage across the resistor,
    *V[BC]*(*t*), grows. This results in an exponentially decreasing voltage across
    the inductor. When the voltage across the inductor finally reaches 0 V, the voltage
    across the resistor is 5 V and current flow in the circuit is 5.0 mA.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当开关断开时，电流不会通过此电路。当开关闭合时，电感器最初会阻碍电流的流动，并且电感器中需要一定的时间来建立磁场。在开关关闭之前，电流未通过电阻器，因此电阻器两端的电压，*V[BC]*，为0V。电感器两端的电压，*V[AB]*，为电源的完整5V。随着电流开始流过电感器，电阻器两端的电压，*V[BC]*(*t*)，逐渐增大。这导致电感器两端的电压呈指数性下降。当电感器两端的电压最终达到0V时，电阻器两端的电压为5V，电路中的电流为5.0
    mA。
- en: The rate of the exponential voltage decrease is given by the time constant *L*/*R*.
    Using the values of *R* and *L* in [Figure 5-8](ch05.xhtml#ch5fig8), we get
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 指数电压下降的速率由时间常数*L*/*R*给出。使用[图5-8](ch05.xhtml#ch5fig8)中的*R*和*L*值，我们得到：
- en: '![Image](../images/pg122_Image_148.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg122_Image_148.jpg)'
- en: where ns is nanoseconds.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 其中ns为纳秒。
- en: When the switch is closed, the voltage that develops across the inductor over
    time is given by
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当开关闭合时，电感器两端随时间变化的电压由以下公式给出：
- en: '![Image](../images/pg122_Image_149.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg122_Image_149.jpg)'
- en: as shown in [Figure 5-9](ch05.xhtml#ch5fig9). The left y-axis shows voltage
    across the resistor for the circuit in [Figure 5-8](ch05.xhtml#ch5fig8), with
    the right y-axis voltage being across the inductor. Note that the scales go in
    opposite directions.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图5-9](ch05.xhtml#ch5fig9)所示，左侧的y轴显示了[图5-8](ch05.xhtml#ch5fig8)中电路的电阻器两端的电压，而右侧的y轴显示了电感器两端的电压。请注意，刻度的方向是相反的。
- en: '![Image](../images/pg122_Image_150.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg122_Image_150.jpg)'
- en: '*Figure 5-9: An inductor charging over time*'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-9：电感器随时间充电*'
- en: 'At time *t* = 1.0 ns (one time constant), the voltage across the inductor is:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在时间*t* = 1.0 ns（一个时间常数）时，电感器两端的电压为：
- en: '![Image](../images/pg122_Image_151.jpg) After about 6 ns (six time constants),
    the voltage across the inductor is essentially equal to 0 V. At this time, the
    full voltage of the power supply is across the resistor and a steady current of
    5.0 mA flows.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/pg122_Image_151.jpg)大约经过6纳秒（六个时间常数）后，电感器两端的电压基本等于0V。此时，电源的完整电压跨越电阻器，电流稳定为5.0
    mA。'
- en: The circuit in [Figure 5-8](ch05.xhtml#ch5fig8) shows how inductors can be used
    with a CPU power supply. The power supply in this circuit simulates the computer
    power supply, and the resistor simulates the CPU, which consumes the electrical
    energy from the power supply. The voltage produced by a power supply includes
    *noise*, which consists of small, high-frequency fluctuations added to the DC
    level. As shown in [Figure 5-9](ch05.xhtml#ch5fig9), the voltage supplied to the
    CPU, *V[BC]*(*t*), changes little over short periods of time. The inductor connected
    in series between the power supply and the CPU acts to smooth out the voltage
    that powers the CPU.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[图5-8](ch05.xhtml#ch5fig8)中的电路展示了电感器如何与CPU电源一起使用。此电路中的电源模拟计算机电源，而电阻器模拟CPU，CPU从电源中消耗电能。电源产生的电压包含*噪声*，即叠加在直流电平上的小型高频波动。如[图5-9](ch05.xhtml#ch5fig9)所示，提供给CPU的电压，*V[BC]*(*t*)，在短时间内变化不大。串联在电源与CPU之间的电感器作用是平滑电压，供电给CPU。'
- en: '***Power Consumption***'
  id: totrans-115
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***功率消耗***'
- en: An important part of hardware design is power consumption, especially in battery-powered
    devices. Of the three electromagnetic properties we’ve discussed here, resistance
    is the primary consumer of power.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件设计中一个重要的部分是功率消耗，尤其是在电池供电的设备中。在我们讨论的三种电磁属性中，电阻是主要的功率消耗者。
- en: '*Energy* is the ability to cause change, and *power* is a measure of how fast
    energy can be used to make that change. The basic unit of energy is the *joule
    (J)*. The basic unit of power is the *watt (W)*, which is defined as expending
    1 joule per second (J/s). For example, I have a backup battery that can store
    240 watt-hours (Wh). That means it can store enough energy to provide 240 watts
    for 1 hour, or 240 Wh *×* 3,600 s/h = 864,000 J. The units for volt and ampere
    are defined such that 1 W = 1 V *×* 1 A. This gives rise to the formula for power,'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '*能量*是引起变化的能力，而*功率*是衡量能量多快被用来产生变化的指标。能量的基本单位是*焦耳 (J)*。功率的基本单位是*瓦特 (W)*，它定义为每秒消耗1焦耳（J/s）。例如，我有一个备用电池，能存储240瓦时（Wh）的能量。这意味着它能储存足够的能量来提供240瓦特的功率持续1小时，或240
    Wh *×* 3,600秒/小时 = 864,000 J。伏特和安培的单位被定义为1 W = 1 V *×* 1 A。这导致了功率的公式，'
- en: '![Image](../images/pg123_Image_152.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg123_Image_152.jpg)'
- en: where *P* is the power used, *V* is the voltage across the component, and *I*
    is the current flowing through it.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，*P*是所用功率，*V*是组件两端的电压，*I*是流过它的电流。
- en: After a brief charging time, a capacitor prevents current flow. This equation
    shows that the power consumption of a capacitor then goes to zero. The energy
    used to charge the capacitor is stored in the form of an electrical field. Similarly,
    the voltage across an inductor goes to zero after a brief charging time, resulting
    in the amount of power consumed by the inductor going to zero. An inductor stores
    the charging energy in the form of a magnetic field.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在短暂的充电时间后，电容器会阻止电流流动。这个方程表明，电容器的功率消耗随后趋近于零。充电电容器所使用的能量以电场的形式储存。类似地，电感器两端的电压在短暂充电时间后趋近于零，导致电感器消耗的功率为零。电感器将充电能量以磁场的形式储存。
- en: However, a resistor doesn’t store energy. As long as there is a voltage difference
    across a resistor, current flows through it.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，电阻器并不存储能量。只要电阻器两端存在电压差，电流就会流过它。
- en: 'The power used by a resistor, *R*, is given by:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 电阻器使用的功率，*R*，由以下公式给出：
- en: '![Image](../images/pg123_Image_153.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg123_Image_153.jpg)'
- en: This power is converted to heat in the resistor. Since power consumption increases
    by the square of the current, a common hardware design goal is to reduce the amount
    of current flow.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这些功率在电阻器中转化为热量。由于功率消耗与电流的平方成正比，一个常见的硬件设计目标是减少电流流动的量。
- en: This section has been an idealized discussion of the passive components that
    computer engineers include in their designs. In the real world, each component
    includes elements of all three characteristics—resistance, capacitance, and inductance—that
    the hardware design engineer needs to take into account. These secondary effects
    are subtle and often troublesome in the design.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论了计算机工程师在其设计中包含的理想化的无源组件。在现实中，每个组件都包含电阻、电容和电感三个特性的元素，硬件设计工程师需要考虑这些。由于这些二次效应通常微妙且麻烦，设计时必须加以注意。
- en: The rest of this chapter is devoted to discussing the *active components*, which
    are controlled electronically and used to implement the switches that are the
    basis for a computer. As you will see, the active components include resistance
    and capacitance, which affect the design of the circuits they’re used in.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的其余部分将讨论*有源组件*，这些组件通过电子控制并用于实现构成计算机基础的开关。正如你将看到的，主动组件包括电阻和电容，它们影响所用电路的设计。
- en: '**Transistors**'
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**晶体管**'
- en: In previous chapters, I described a computer as a collection of two-state switches
    and discussed how data can be represented by the settings, `0` or `1`, of these
    switches. Then we moved on to look at how `0`s and `1`s can be combined using
    logic gates to implement logical functions. In this section, you’ll learn how
    transistors can be used to implement the two-state switches that make up a computer.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，我将计算机描述为一组双态开关，并讨论了如何通过这些开关的设置 `0` 或 `1` 来表示数据。接着，我们探讨了如何使用逻辑门将`0`和`1`组合起来，实现逻辑功能。在本节中，你将学习如何使用晶体管实现构成计算机的双态开关。
- en: A *transistor* is a device whose resistance can be controlled electronically,
    thus making it an active component. The ability to be controlled electronically
    is what distinguishes the switches made from transistors from the simple on/off
    switches you saw earlier in the chapter, which could be controlled mechanically.
    Before examining how a transistor can be used as a switch, let’s look at how we
    would implement a logic gate using mechanical on/off switches. We’ll use the NOT
    gate for this example.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '*晶体管*是一种其电阻可以通过电子方式控制的设备，因此它是一个有源元件。电子控制的能力使得晶体管构成的开关与本章前面提到的可以机械控制的简单开关不同。在研究晶体管如何作为开关之前，让我们先看看如何使用机械的开关实现逻辑门。我们将使用
    NOT 门作为示例。'
- en: '[Figure 5-10](ch05.xhtml#ch5fig10) shows two push-button switches connected
    in series between 5 V and 0 V.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-10](ch05.xhtml#ch5fig10)显示了两个按钮开关串联连接在 5 V 和 0 V 之间。'
- en: '![Image](../images/pg124_Image_154.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg124_Image_154.jpg)'
- en: '*Figure 5-10: A NOT gate made from two push-button switches*'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-10：由两个按钮开关组成的 NOT 门*'
- en: The top switch is normally closed. When its button is pushed (from the left
    side), the connection between the two small circles is broken, thus opening the
    circuit at this point. The bottom switch is normally open. When its button is
    pushed, a connection is made between the two small circles, thus completing the
    circuit at this point.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的开关是常闭的。当按下其按钮（从左侧）时，两个小圆圈之间的连接被断开，从而在此点上打开电路。下面的开关是常开的。当按下其按钮时，两个小圆圈之间建立连接，从而在此点上完成电路。
- en: 'We’ll let 5 V represent a `1` and 0 V a `0`. The input to this NOT gate, *x*,
    pushes the two buttons simultaneously. We will control *x* in the following way:
    when *x* = `1`, we’ll push the two buttons, and when *x* = `0`, we will not push
    the buttons. When the buttons are not pushed (*x* = `0`), the 5 V are connected
    to the output, ¬*x*, which represents `1`. When the buttons are pushed (*x* =
    `1`), the 5 V are disconnected and the 0 V, which represents `0`, are connected
    to the output. Thus, an input of `1` gets an output of `0` and an input of `0`
    gets an output of `1`.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将 5 V 代表 `1`，0 V 代表 `0`。这个 NOT 门的输入 *x* 同时按下两个按钮。我们将以以下方式控制 *x*：当 *x* = `1`
    时，我们按下这两个按钮；当 *x* = `0` 时，我们不按按钮。当按钮没有被按下时 (*x* = `0`)，5 V 会连接到输出端，¬*x*，表示 `1`。当按钮被按下时
    (*x* = `1`)，5 V 被断开，0 V 连接到输出端，表示 `0`。因此，输入 `1` 会得到输出 `0`，输入 `0` 会得到输出 `1`。
- en: Early computing devices used mechanical switches to implement their logic, but
    the results were very slow by today’s standards. Modern computers use transistors,
    which are electronic devices made from semiconductor materials that can be switched
    quickly between their conducting and non-conducting states under electronic control.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 早期的计算设备使用机械开关来实现其逻辑，但按照今天的标准，这些计算机的运算速度非常慢。现代计算机使用晶体管，晶体管是一种由半导体材料制成的电子设备，可以在电子控制下快速地在导通状态和非导通状态之间切换。
- en: Just as with the mechanically controlled push-button example, we use two different
    voltages to represent `1` and `0`. For example, we might use a high voltage, say
    +5 V, to represent `1` and a low voltage, say 0 V, to represent `0`. But transistors
    can be switched on or off electronically, which makes them much faster than the
    mechanical switches used in the original computers. Transistors also take up much
    less space and consume much less electrical power.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 就像使用机械控制的按钮开关的示例一样，我们使用两种不同的电压来表示 `1` 和 `0`。例如，我们可能使用高电压，例如 +5 V，来表示 `1`，使用低电压，例如
    0 V，来表示 `0`。但是，晶体管可以通过电子方式开关，这使得它们比最初计算机中使用的机械开关要快得多。晶体管还占用更少的空间，并且消耗更少的电力。
- en: 'In the following sections, we’ll look at two transistors commonly used in modern
    computers: the MOSFET switch and the CMOS switch.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将介绍现代计算机中常用的两种晶体管：MOSFET 开关和 CMOS 开关。
- en: '***MOSFET Switch***'
  id: totrans-138
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***MOSFET 开关***'
- en: The most commonly used switching transistor in today’s computer logic circuits
    is the *metal-oxide-semiconductor field-effect transistor (MOSFET)*. There are
    several types of MOSFET, which use different voltage levels and polarities. I’ll
    describe the behavior of the most common type, the *enhancement-mode MOSFET*,
    and leave the details of the other variations to more advanced books on the topic.
    The brief discussion here will help you understand the basics of how they work.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今计算机逻辑电路中，最常用的开关晶体管是*金属氧化物半导体场效应晶体管（MOSFET）*。MOSFET有多种类型，使用不同的电压等级和极性。我将描述最常见的类型——*增强型MOSFET*的行为，并将其他类型的详细内容留给更深入的书籍。在这里的简要讨论将帮助你理解它们的基本工作原理。
- en: The basic material in a MOSFET is typically silicon, which is a *semiconductor*,
    meaning it conducts electricity, but not very well. Its conductivity is improved
    by adding an impurity, a process called *doping*. Depending on the type of impurity,
    the electrical conductivity can be either the flow of electrons or the flow of
    lack of electrons (called *holes*). Since electrons have a negative electrical
    charge, the type that conducts electrons is called *N-type* and the type that
    conducts holes is called *P-type*. The main conduction path through a MOSFET is
    the *channel*, which is connected between the *source* and the *drain* terminals
    on the MOSFET. The *gate* is made from the opposite type of semiconductor and
    controls the conductivity through the channel.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: MOSFET的基本材料通常是硅，它是一种*半导体*，意味着它能够导电，但导电性不强。通过添加杂质（这一过程称为*掺杂*）可以改善其导电性。根据杂质的类型，电导率可以是电子流动或缺少电子的流动（称为*空穴*）。由于电子带负电荷，因此导电子的类型被称为*N型*，而导空穴的类型被称为*P型*。MOSFET的主要导电通道是*通道*，它连接在MOSFET的*源极*和*漏极*端子之间。*栅极*由相反类型的半导体材料构成，并控制通道中的导电性。
- en: '[Figure 5-11](ch05.xhtml#ch5fig11) shows the two basic types of MOSFET: N-channel
    and P-channel. Here, I’ve shown each MOSFET connected to a 5 V power source through
    a resistor.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[图5-11](ch05.xhtml#ch5fig11)展示了两种基本的MOSFET类型：N-channel和P-channel。在这里，我展示了每个MOSFET如何通过电阻连接到5
    V电源。'
- en: '![Image](../images/pg126_Image_155.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/pg126_Image_155.jpg)'
- en: '*Figure 5-11: The two basic types of MOSFETs*'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-11：两种基本类型的MOSFET*'
- en: These are simplified circuits, as the intention is just to provide context for
    discussing how MOSFETs work. Each MOSFET has three connection points, or *terminals*.
    The gate is used as the input terminal. Voltage applied to the gate, relative
    to the voltage applied to the source, controls current flow through the MOSFET.
    The drain is used as the output. The source of an N-channel MOSFET is connected
    to the lower voltage of the power supply, while the source of a P-channel is connected
    to the higher voltage.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是简化的电路，目的是提供讨论MOSFET工作原理的背景。每个MOSFET有三个连接点或*端子*。栅极作为输入端子，施加在栅极上的电压（相对于施加在源极上的电压）控制通过MOSFET的电流流动。漏极作为输出端子。N-channel
    MOSFET的源极连接到电源的低电压端，而P-channel的源极则连接到高电压端。
- en: After learning about complements in Boolean algebra, it probably does not surprise
    you that the two types of MOSFETs have complementary behavior. You’ll see in the
    following sections how we can connect them in complementary pairs that make for
    faster, more efficient switches than using only one type.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习了布尔代数中的补码之后，你可能不会对这两种类型的MOSFET具有互补的行为感到惊讶。你将在接下来的章节中看到我们如何将它们以互补对的方式连接，从而使得开关速度更快、效率更高，而不是仅使用一种类型。
- en: First, we’ll look at how each works as a single switching device, starting with
    the N-channel MOSFET.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将研究每种MOSFET作为单一开关设备的工作方式，从N-channel MOSFET开始。
- en: '**N-Channel MOSFET**'
  id: totrans-147
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**N-channel MOSFET**'
- en: In [Figure 5-11](ch05.xhtml#ch5fig11)(a), the drain of the N-channel MOSFET
    is connected to the 5 V side of the power supply through the resistor, R, and
    the source is connected to the 0 V side.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图5-11](ch05.xhtml#ch5fig11)(a)中，N-channel MOSFET的漏极通过电阻R与电源的5 V端连接，源极则连接到0
    V端。
- en: When the voltage applied to the gate is positive with respect to the source,
    the resistance between the drain and the source of the N-channel MOSFET decreases.
    When this voltage reaches a threshold value, typically in the range of 1 V, the
    resistance becomes very low, thus providing a good conduction path for current
    between the drain and the source. The resulting circuit is equivalent to [Figure
    5-12](ch05.xhtml#ch5fig12)(a).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: In [Figure 5-12](ch05.xhtml#ch5fig12)(a), current flows from the 5 V connection
    of the power supply to the 0 V connection through the resistor, R. The voltage
    at the drain will be 0 V. A problem with this current flow is that the resistor
    consumes power, simply converting it to heat. In a moment, you’ll see the reason
    we don’t want to increase the amount of resistance to limit the current flow to
    reduce power consumption.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg127_Image_156.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5-12: An N-channel MOSFET switch equivalent circuit: (a) switch closed,
    (b) switch open*'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: If the voltage applied to the gate is switched to be nearly the same as the
    voltage applied to the source—0 V in this example—the MOSFET turns off, resulting
    in the equivalent circuit shown in [Figure 5-12](ch05.xhtml#ch5fig12)(b). The
    drain is typically connected to another MOSFET’s gate, which draws current only
    briefly as it switches from one state to the other. After this brief switching
    of state, the connection of the drain to another MOSFET’s gate does not draw current.
    Since no current flows through the resistor, there is no voltage difference across
    it. Thus, the voltage at the drain will be 5 V.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: The resistor is said to be acting as the *pull-up device*, because when the
    MOSFET is turned off, the circuit is completed through the resistor, which acts
    to pull the voltage on the drain up to the higher voltage of the power supply.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '**P-Channel MOSFET**'
  id: totrans-155
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Now, let’s look at the P-channel MOSFET, shown in [Figure 5-11](ch05.xhtml#ch5fig11)(b).
    The drain is connected to the lower voltage (0 V) through a resistor, R, and the
    source is connected to the higher-voltage power supply (5 V). When the voltage
    applied to the gate is switched to be nearly the same as the voltage applied to
    the source, the MOSFET turns off. In this case, the resistor acts as a *pull-down
    device* to pull the voltage on the drain down to 0 V. [Figure 5-13](ch05.xhtml#ch5fig13)(a)
    shows the equivalent circuit.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: When the voltage applied to the gate is negative with respect to the source,
    the resistance between the drain and the source of the P-channel MOSFET decreases.
    When this voltage reaches a threshold value, typically in the range of –1 V, the
    resistance becomes very low, providing a good conduction path for current between
    the drain and the source. [Figure 5-13](ch05.xhtml#ch5fig13)(b) shows the resulting
    equivalent circuit when the gate is –5 V with respect to the source.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg128_Image_157.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5-13: A P-channel MOSFET switch equivalent circuit: (a) switch open,
    (b) switch closed*'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: The resistors in the MOSFET circuits in [Figures 5-11](ch05.xhtml#ch5fig11)
    present a couple of problems with both MOSFET types. We’ll look at those next.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '**Resistors in MOSFET Circuits**'
  id: totrans-161
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: The equivalent circuits in [Figures 5-12(a)](ch05.xhtml#ch5fig12) and [5-13(b)](ch05.xhtml#ch5fig13)
    show that the respective MOSFET in its on state acts like a closed switch, thus
    causing current to flow through the pull-up or pull-down resistor. The current
    flow through the resistor when the MOSFET is in its on state consumes power that
    is simply converted to heat.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the pull-up and pull-down resistors using power when a MOSFET
    is in its on state, there’s another problem with this hardware design. Although
    the gate of a MOSFET draws essentially no current to remain in either an on or
    an off state, a brief burst of current into the gate is required to change its
    state. That current is supplied by the device connected to the gate, probably
    from the drain of another MOSFET. I won’t go into details in this book, but the
    amount of current that can be supplied at the drain from this other MOSFET is
    largely limited by its pull-up or pull-down resistor. The situation is essentially
    the same as that in [Figures 5-6](ch05.xhtml#ch5fig6) and [5-7](ch05.xhtml#ch5fig7),
    where you saw that the time it takes to charge a capacitor is longer for higher
    resistance values.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: 'So, there’s a trade-off here: the larger the resistors, the lower the current
    flow, which reduces power consumption when the MOSFET is in the on state. But
    a larger resistor also reduces the amount of current available at the drain, thus
    increasing the amount of time it takes to switch a MOSFET connected to the drain.
    We’re left with a dilemma: small pull-up and pull-down resistors increase power
    consumption, but large resistors slow down the computer.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: '***CMOS Switch***'
  id: totrans-165
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We can solve this dilemma with *complementary metal-oxide semiconductor (CMOS)*
    technology. To see how this works, let’s eliminate the pull-up and pull-down resistors
    and connect the drains of a P-channel and an N-channel. The P-channel will replace
    the pull-up resistor in the N-channel circuit, and the N-channel will replace
    the pull-down resistor in the P-channel circuit. We’ll also connect the two gates,
    giving the circuit shown in [Figure 5-14](ch05.xhtml#ch5fig14).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg129_Image_158.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5-14: A CMOS inverter (NOT) circuit*'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 5-15](ch05.xhtml#ch5fig15)(a) shows the equivalent circuit with the
    gates at the higher power supply voltage of 5 V. The pull-up MOSFET (a P-channel)
    is off and the pull-down MOSFET (an N-channel) is on, so the drains are pulled
    down to the lower power supply voltage of 0 V. In [Figure 5-15](ch05.xhtml#ch5fig15)(b),
    the gates are at the lower power supply voltage of 0 V, which turns the P-channel
    MOSFET on and the N-channel MOSFET off. The P-channel MOSFET pulls the drains
    up to the higher power supply voltage of 5 V.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg129_Image_159.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5-15: A CMOS inverter equivalent circuit: (a) pull-up open and pull-down
    closed, (b) pull-up closed and pull-down open*'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: I summarize this behavior in [Table 5-1](ch05.xhtml#ch5tab1).
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '**Table 5-1:** The Truth Table for a Single CMOS'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '| **Gates** | **Drains** |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
- en: '| 0 V | 5 V |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
- en: '| 5 V | 0 V |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
- en: If we use the gates connection as the input, use the drains connection as the
    output, and let 5 V be logical `1` and 0 V be logical `0`, then the CMOS implements
    a NOT gate.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: 'The two main advantages of using CMOS circuits are:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: They consume very little power. Because of the switching speed difference between
    N-channel and P-channel MOSFETs, only a small amount of current flows during the
    switching period. Less current means less heat, which is often the limiting factor
    in chip design.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The circuit responds much faster. A MOSFET can supply the current at its output
    faster than a resistor can, charging the gate of the following MOSFET. This allows
    us to build faster computers.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Figure 5-16](ch05.xhtml#ch5fig16) shows an AND gate implemented with three
    CMOSs.'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg130_Image_160.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5-16: An AND gate using three CMOS transistors*'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: The truth table in [Table 5-2](ch05.xhtml#ch5tab2) shows the intermediate output
    from the first two CMOSs (point A in [Figure 5-16](ch05.xhtml#ch5fig16)).
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: '**Table 5-2:** The Truth Table for the AND Gate of [Figure 5-16](ch05.xhtml#ch5fig16)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: '| ***x*** | ***y*** | **A** | ***x ∧ y*** |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
- en: '| `0` | `0` | `1` | `0` |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
- en: '| `0` | `1` | `1` | `0` |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
- en: '| `1` | `0` | `1` | `0` |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
- en: '| `1` | `1` | `0` | `1` |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
- en: From the truth table, we see that the signal at point A is ¬(*x* ∧ *y*). The
    circuit from point A to the output is a NOT gate. The result at point A is called
    the *NAND* operation. It requires two fewer transistors than the AND operation.
    We’ll look at the implications of this in the next section.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: '**NAND and NOR Gates**'
  id: totrans-194
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As you learned in the previous section, the inherent design of transistors means
    that most circuits invert the signal. That is, for most circuits, a high voltage
    at the input produces a low voltage at the output, and vice versa. As a result,
    an AND gate will typically require a NOT gate at the output to achieve a true
    AND operation.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: 'You also learned that it takes fewer transistors to produce NOT(AND) than a
    regular AND. This combination is so common that it has been given a name: the
    *NAND gate*. And, of course, we have an equivalent with the OR gate, called the
    *NOR gate*:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 你还学到，使用NAND门生成NOT(AND)比普通的AND门需要更少的晶体管。这种组合非常常见，以至于它有了一个名字：*NAND门*。当然，我们还有一个与OR门等效的门，称为*NOR门*：
- en: '**NAND**   A binary operator that gives a result of `0` if and only if *both*
    operands are `1` and gives `1` otherwise. We’ll use ¬(*x* ∧ *y*) to designate
    the NAND operation. [Figure 5-17](ch05.xhtml#ch5fig17) shows the hardware symbol
    for the NAND gate along with a truth table showing its operation on inputs *x*
    and *y*.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**NAND**   一个二元运算符，只有在*两个*操作数都为`1`时才会返回`0`，否则返回`1`。我们将使用¬(*x* ∧ *y*)来表示NAND运算。[图5-17](ch05.xhtml#ch5fig17)展示了NAND门的硬件符号，并附有一个真值表，显示了其对输入*x*和*y*的操作。'
- en: '![Image](../images/pg131_Image_161.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg131_Image_161.jpg)'
- en: '*Figure 5-17: The NAND gate acting on two variables,* x *and* y'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-17：NAND门作用于两个变量，*x*和*y*'
- en: '**NOR**   A binary operator that gives a result of `0` if at least one of the
    two operands is `1` and gives `1` otherwise. We’ll use ¬(*x* ∨ *y*) to designate
    the NOR operation. [Figure 5-18](ch05.xhtml#ch5fig18) shows the hardware symbol
    for the NOR gate along with a truth table showing its operation on inputs *x*
    and *y*.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**NOR**   一个二元运算符，当至少一个操作数为`1`时，结果为`0`，否则结果为`1`。我们将使用¬(*x* ∨ *y*)来表示NOR运算。[图5-18](ch05.xhtml#ch5fig18)展示了NOR门的硬件符号，并附有一个真值表，显示了其对输入*x*和*y*的操作。'
- en: '![Image](../images/pg131_Image_162.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg131_Image_162.jpg)'
- en: '*Figure 5-18: The NOR gate acting on two variables,* x *and* y'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-18：NOR门作用于两个变量，*x*和*y*'
- en: Notice the small circle at the output of the NAND and NOR gates in [Figures
    5-17](ch05.xhtml#ch5fig17) and [5-18](ch05.xhtml#ch5fig18). This signifies *NOT*,
    just as with the NOT gate you saw in [Figure 4-3](ch04.xhtml#ch4fig3).
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 注意[图5-17](ch05.xhtml#ch5fig17)和[图5-18](ch05.xhtml#ch5fig18)中NAND门和NOR门输出端的小圆圈。这表示*NOT*，就像你在[图4-3](ch04.xhtml#ch4fig3)中看到的NOT门一样。
- en: Although in the previous chapter we explicitly showed NOT gates when inputs
    to gates are complemented, it’s common to simply use these small circles at the
    input to signify the complement. For example, [Figure 5-19](ch05.xhtml#ch5fig19)
    shows an OR gate with both inputs complemented.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在前一章中我们明确展示了当门的输入被补充时使用的NOT门，但通常会简单地在输入端使用这些小圆圈来表示补充。例如，[图5-19](ch05.xhtml#ch5fig19)显示了一个OR门，其两个输入都被补充。
- en: '![Image](../images/pg131_Image_163.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg131_Image_163.jpg)'
- en: '*Figure 5-19: An alternative way to draw a NAND gate*'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-19：NAND门的另一种绘制方式*'
- en: 'As the truth table shows, this is another way to implement a NAND gate. As
    you learned in [Chapter 4](ch04.xhtml), De Morgan’s law confirms this:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 如真值表所示，这是实现NAND门的另一种方式。正如你在[第4章](ch04.xhtml)中学到的，德摩根定律证明了这一点：
- en: '![Image](../images/pg132_Image_164.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg132_Image_164.jpg)'
- en: '**NAND as a Universal Gate**'
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**NAND作为通用门**'
- en: One of the interesting properties about NAND gates is that they can be used
    to build AND, OR, and NOT gates. This means the NAND gate can be used to implement
    any Boolean function. In this sense, you can think of the NAND gate as a *universal
    gate*. Recalling De Morgan’s law, it probably won’t surprise you that a NOR gate
    can also be used as a universal gate. But the physics of CMOS transistors is such
    that NAND gates are faster and take up less space, so they are almost always the
    preferred solution.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 关于NAND门的一个有趣特性是，它们可以用来构建AND、OR和NOT门。这意味着NAND门可以用于实现任何布尔函数。从这个角度看，你可以把NAND门看作是*通用门*。回想一下德摩根定律，NOR门也可以作为通用门，这应该不会让你感到惊讶。但由于CMOS晶体管的物理特性，NAND门更快且占用更少空间，因此几乎总是首选方案。
- en: Let’s go through how to use a NAND gate to build an AND, OR, or NOT gate. To
    build a NOT gate using a NAND gate, simply connect the signal to both inputs of
    the NAND gate, as shown in [Figure 5-20](ch05.xhtml#ch5fig20).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解如何使用NAND门构建AND、OR或NOT门。要使用NAND门构建NOT门，只需将信号连接到NAND门的两个输入端，如[图5-20](ch05.xhtml#ch5fig20)所示。
- en: '![Image](../images/pg132_Image_165.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/pg132_Image_165.jpg)'
- en: '*Figure 5-20: A NOT gate built from a NAND gate*'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '*图5-20：由NAND门构建的NOT门*'
- en: To make an AND gate, we can observe that the first NAND gate in [Figure 5-21](ch05.xhtml#ch5fig21)
    produces ¬(*x* ∧ *y*) and connect it to a NOT gate like the one in [Figure 5-20](ch05.xhtml#ch5fig20)
    to produce (*x* ∧ *y*).
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建AND门，我们可以观察到[图5-21](ch05.xhtml#ch5fig21)中的第一个NAND门产生¬(*x* ∧ *y*)，并将其连接到一个如[图5-20](ch05.xhtml#ch5fig20)所示的NOT门，从而产生(*x*
    ∧ *y*)。
- en: '![Image](../images/pg132_Image_166.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5-21: An AND gate built from two NAND gates*'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use De Morgan’s law to derive an OR gate. Consider the following:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg132_Image_167.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
- en: So, to implement OR, we need three NAND gates, as in [Figure 5-22](ch05.xhtml#ch5fig22).
    The two NAND gates at the *x* and *y* inputs are connected as NOT gates to produce
    ¬*x* and ¬*y*, which gives ¬(¬*x* ∧ ¬*y*) at the output of the third NAND gate.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg132_Image_168.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5-22: An OR gate built from three NAND gates*'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: 'It looks like we are creating more complexity to build circuits from NAND gates,
    but consider this function:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg133_Image_169.jpg)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
- en: Without knowing how logic gates are constructed, it would be reasonable to implement
    this function with the circuit shown in [Figure 5-23](ch05.xhtml#ch5fig23).
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg133_Image_170.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5-23:* F*(*w, x, y, z*) using two AND gates and one OR gate*'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: Although it might seem like we’re going in the wrong direction, let’s add some
    hardware to this circuit. The involution property states that ¬(¬*x*) = *x*, so
    we can add two NOT gates to each path, as shown in [Figure 5-24](ch05.xhtml#ch5fig24).
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg133_Image_171.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5-24:* F*(*w, x, y, z*) using two AND gates, one OR gate, and four
    NOT gates*'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: Comparing the two AND gate/NOT gate combinations that operate on the *w*, *x*,
    *y*, and *z* inputs with [Figure 5-17](ch05.xhtml#ch5fig17), we see that each
    is simply a NAND gate. They will produce ¬(*w* ∧ *x*) and ¬(*y* ∧ *z*) at the
    outputs of the two leftmost NOT gates.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: 'You saw from the application of De Morgan’s law in [Figure 5-19](ch05.xhtml#ch5fig19)
    that (¬*a*) ∨ (¬*b*) = ¬(*a* ∧ *b*). In other words, we can replace the combination
    of the two rightmost NOT gates and the OR gate with a single NAND gate:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg133_Image_172.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
- en: The resulting circuit, shown in [Figure 5-25](ch05.xhtml#ch5fig25), uses three
    NAND gates.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/pg133_Image_173.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5-25:* F*(*w, x, y, z*) using three NAND gates*'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: From simply viewing the logic circuit diagrams in [Figures 5-23](ch05.xhtml#ch5fig23)
    and [5-25](ch05.xhtml#ch5fig25), it may seem that we haven’t gained anything in
    this circuit transformation. But we saw in the previous section that a NAND gate
    (point A in [Figure 5-16](ch05.xhtml#ch5fig16)) requires two fewer transistors
    than an AND gate. Thus, the NAND gate implementation is less power-intensive and
    faster. The same is true of an OR gate.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: 'The conversion from an AND/OR/NOT gate design to one that uses only NAND gates
    is straightforward:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: Express the function as a minimal sum of products.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Convert the products (AND terms) and the final sum (OR) to NANDs.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a NAND gate for any product with only a single literal.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Everything I’ve said about NAND gates here applies to NOR gates. You simply
    apply De Morgan’s law to find the complement of everything. But as mentioned previously,
    NAND gates are typically faster and take up less space than NOR gates, so they
    are almost always the preferred solution.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: As with software, hardware design is an iterative process. Most problems do
    not have a unique solution, and you often need to develop several designs and
    analyze each one within the context of the available hardware. As the previous
    example shows, two solutions that look the same on paper may be very different
    at the hardware level.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: '**YOUR TURN**'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: 5.1     Design a NOT gate, an AND gate, and an OR gate using NOR gates.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: 5.2     Design a circuit using NAND gates that detects the “below” condition
    for two 2-bit integers, *x* and *y*, *F*(*x*, *y*) = 1\. It’s common to use below/above
    for unsigned integer comparisons and less than/greater than for signed integer
    comparisons.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: '**What You’ve Learned**'
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Basic electronics concepts**   Resistance, capacitance, and inductance affect
    the voltages and current flow in an electronic circuit.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: '**Transistors**   Semiconductor devices that can be used as electronically
    controlled switches.'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: '**MOSFET**   The most commonly used switching device for implementing logic
    gates in computers. Metal-oxide-semiconductor field-effect transistors come in
    N-channel and P-channel types.'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: '**CMOS**   N-channel and P-channel MOSFETs are paired in a complementary configuration
    to increase switching speed and reduce power consumption.'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: '**NAND and NOR gates**   These require fewer transistors than AND and OR gates
    because of the inherent electronic characteristics of transistors.'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you’ll learn how simple logic gates are connected in circuits
    to implement the complex operations needed to build a computer.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
