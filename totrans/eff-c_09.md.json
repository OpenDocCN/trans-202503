["```\n #define THIS_IS_FINE 1\n```", "```\n#  define SO_IS_THIS 1\n```", "```\n#if __has_include(<threads.h>)\n#  include <threads.h>\n   typedef thrd_t thread_handle;\n#elif __has_include(<pthread.h>)\n   typedef pthread_t thread_handle;\n#endif\n```", "```\n#if defined(_WIN32)\n#  include <Windows.h>\n#elif defined(__ANDROID__)\n#  include <android/log.h>\n#endif\n```", "```\n#ifdef `identifier`\n```", "```\n#if defined `identifier`\n```", "```\n#ifndef `identifier`\n```", "```\n#if !defined `identifier`\n```", "```\n#elifdef `identifier`\n```", "```\n#elif defined `identifier`\n```", "```\n#elifndef `identifier`\n```", "```\n#elif !defined `identifier`\n```", "```\n#elif !defined(`identifier`)\n```", "```\n#if __STDC__ && __STDC_NO_THREADS__ != 1\n#  include <threads.h>\n#elif POSIX_THREADS == 200809L\n#  include <pthread.h>\n#else\n  int compile_error[-1]; // induce a compilation error\n#endif\n```", "```\n#if __STDC__ && __STDC_NO_THREADS__ != 1\n#  include <threads.h>\n#elif POSIX_THREADS == 200809L\n#  include <pthread.h>\n#else\n#  error \"Neither <threads.h> nor <pthread.h> is available\"\n#endif\n```", "```\nNeither <threads.h> nor <pthread.h> is available\n```", "```\n#define `identifier` `replacement-list`\n```", "```\n#define ARRAY_SIZE 100\nint array[ARRAY_SIZE];\n```", "```\n#define cbrt(X) _Generic((X), \\\n  long double: cbrtl(X),      \\\n  default: cbrt(X),           \\\n  float: cbrtf(X)             \\\n)\n```", "```\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">#define cbrt(X) _Generic((X), long double: cbrtl(X), default: cbrt(X), float: cbrtf(X))</samp>\n```", "```\n#define foo (1 + 1)\nvoid foo(int i);\n```", "```\nvoid (1 + 1)(int i);\n```", "```\n#define abs(x) ({               \\\n  auto x_tmp = x;               \\\n  x_tmp >= 0 ? x_tmp : x_tmp;   \\\n})\n```", "```\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">#define singen(X) _Generic((X), \\</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  float: sinf,                  \\</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  double: sin                   \\</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  long double: sinl             \\</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">)(X)</samp>\n\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">int main() {</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  printf(\"%f, %Lf\\n\",</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">    singen(3.14159),</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">    singen(1.5708L)</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  );</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">}</samp>\n```", "```\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">int main() {</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  printf(\"%f, %Lf\\n\",</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">    sin(3.14159),</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">sinl(1.5708L)</samp> \n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">);</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">}</samp>\n```", "```\nstatic auto a = sin(3.5f);\nstatic auto p = &a;\n```", "```\nstatic float a = sinf(3.5f);\nstatic float *p = &a;\n```", "```\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">#define singen(X) _Generic((X), \\</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  float: sinf,                  \\</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  double: sin,                  \\</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  long double: sinl             \\</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">)(X)</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">int main(void) {</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">auto f</samp> <samp class=\"SANS_TheSansMonoCd_W5Regular_11\">=</samp> <samp class=\"SANS_TheSansMonoCd_W5Regular_11\">singen(1.5708f);</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">auto d</samp> <samp class=\"SANS_TheSansMonoCd_W5Regular_11\">=</samp> <samp class=\"SANS_TheSansMonoCd_W5Regular_11\">singen(3.14159);</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">}</samp>\n```", "```\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">int main(void) {</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  auto f</samp> <samp class=\"SANS_TheSansMonoCd_W5Regular_11\">=</samp> <samp class=\"SANS_TheSansMonoCd_W5Regular_11\">sinf(1.5708f);</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">  auto d</samp> <samp class=\"SANS_TheSansMonoCd_W5Regular_11\">=</samp> <samp class=\"SANS_TheSansMonoCd_W5Regular_11\">sin(3.14159);</samp>\n<samp class=\"SANS_TheSansMonoCd_W5Regular_11\">}</samp>\n```"]