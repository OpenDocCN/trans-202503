["```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nSwift is awesome!\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n ➊\n printAHaiku()➋\n {\n\n    print\n (\"Input and output,\"\n )\n\n    print\n (\"This function needs neither one\"\n )\n\n    print\n (\"To print a haiku\"\n )\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprintAHaiku\n ()\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nInput and output,\n\nThis function needs neither one\n\nTo print a haiku\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(➊\n guest: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➋\n guest),\"\n )\n\n    print\n (\"I'd love for you to come to my birthday party!\"\n )\n\n    print\n (\"It's going to be this Saturday at my house.\"\n )\n\n    print\n (\"I hope that you can make it!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\ninvite\n (guest: \"Cathy\"\n )\n\ninvite\n (guest: \"Meghan\"\n )\n\ninvite\n (guest: \"Maddie\"\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n Dear Meghan,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\nDear Maddie,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n invite(allGuests: ➊\n [String\n ]) {\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc invite(allGuests: [String]) {\n\n    for\n guest in\n allGuests {\n\n        invite\n (guest: guest)\n\n    }\n\n}\n\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\n➊\n let\n friends = [\"Cathy\"\n , \"Meghan\"\n , \"Maddie\"\n , \"Julia\"\n , \"Sophie\"\n , \"Asher\"\n ]\n\n➋\n invite\n (allGuests: friends\n )\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nDear Cathy,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n\n--*snip*\n --\n\nDear Asher,\n\nI'd love for you to come to my birthday party!\n\nIt's going to be this Saturday at my house.\n\nI hope that you can make it!\n\nLove, Brenna\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendMessage(guest: String\n ,➊\n rsvped: Bool\n ) {\n\n    print\n (\"Dear\n \\(\n guest),\"\n )\n\n  ➋\n if\n rsvped {\n\n        print\n (\"I'm so excited to see you this weekend!\"\n )\n\n    } else\n {\n\n        print\n (\"I hope that you can make it to my party.\"\n )\n\n        print\n (\"Can you let me know by tomorrow?\"\n )\n\n    }\n\n         print\n (\"We will have a huge slip and slide, so bring your bathing suit!\"\n )\n\n        print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nDear *guest*\n ,\n\nI'm so excited to see you this weekend!\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nDear *guest*\n ,\n\nI hope that you can make it to my party.\n\nCan you let me know by tomorrow?\n\nWe will have a huge slip and slide, so bring your bathing suit!\n\nLove, Brenna\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nsendMessage\n (guest: \"Julia\"\n , rsvped: true\n )\n\nsendMessage\n (guest: \"Asher\"\n , rsvped: false\n )\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (\"Swift is awesome!\"\n )\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nprint\n (inputString: \"Swift is awesome!\"\n )\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n sendThankYou(➊\n to guest: String\n , ➋\n for gift: String\n ) {\n\n    print\n (\"Dear\n \\(\n ➌\n guest),\"\n )\n\n    print\n (\"Thanks for coming to my party and for the\n \\(\n ➍\n gift).\"\n )\n\n    print\n (\"It was so great to see you!\"\n )\n\n    print\n (\"Love, Brenna\\n\"\n )\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nsendThankYou\n (to: \"Meghan\"\n , for: \"puzzle books\"\n )\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\n// This will not work\n\nsendThankYou\n (guest: \"Meghan\"\n , gift: \"puzzle books\"\n )\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBoxWithSides(➊\n _\n side1: Int\n , ➋\n _\n side2: Int\n , ➌\n _\n side3: Int\n ) {\n\n    print\n (\"The volume of this box is\n \\(\n side1 * side2 * side3).\"\n )\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nvolumeOfBoxWithSides\n (3\n , 4\n , 6\n )\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n volumeOfBox(_\n side1: Int\n , _\n side2: Int\n , _\n side3: Int\n ) ➊\n -> Int\n {\n\n    let\n volume = side1 * side2 * side3\n\n  ➋\n return\n volume\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nif\n volumeOfBox1\n > volumeOfBox2\n {\n\n    print\n (\"Box 1 is the bigger box.\"\n )\n\n} else\n if\n volumeOfBox1\n < volumeOfBox2\n {\n\n    print\n (\"Box 2 is the bigger box.\"\n )\n\n} else\n {\n\n    print\n (\"The boxes are the same size.\"\n )\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```", "```\nfunc\n averageOf(_\n scores:[Int\n ]) -> Int\n {\n\n  ➊\n var\n sum = 0\n\n  ➋\n for\n score in\n scores {\n\n        sum += score\n\n    }\n\n  ➌\n if\n scores.count\n > 0\n {\n\n     ➍\n return\n sum / scores.count\n\n    } else\n {\n\n     ➎\n return\n 0\n\n    }\n\n}\n```"]