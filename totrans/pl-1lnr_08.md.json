["```\nperl -le '$_ = \"foo\"; print'\n```", "```\nperl -ne '/foo/ && print'\n```", "```\nperl -ne 'if ($_ =~ /foo/) { print $_ }'\n```", "```\nperl -pe 's/foo/bar/'\n```", "```\nwhile (<>) {\n    # your program goes here (specified by -e)\n}\n```", "```\nperl -lne 'print scalar reverse'\n```", "```\nwhile (<>) {\n    print scalar reverse\n}\n```", "```\nwhile (<>) {\n    print scalar reverse $_\n}\n```", "```\nwhile (<>) {\n    # your program goes here (specified by -e)\n} continue {\n    print or die \"-p failed: $!\\n\";\n}\n```", "```\nperl -pe '$_ = reverse $_'\n```", "```\nwhile (<>) {\n    $_ = reverse $_;\n} continue {\n    print or die \"-p failed: $!\\n\";\n}\n```", "```\nperl -le '@vals = map { $_ * 2 } 1..10; print \"@vals\"'\n```", "```\nperl -alne 'print \"@{[map { $_ * 2 } @F]}\"'\n```", "```\nperl -le '@vals = grep { $_ > 5 } 1..10; print \"@vals\"'\n```", "```\nperl -alne 'print \"@{[grep { $_ eq reverse $_ } @F]}\"'\n```", "```\ncivic foo mom dad\nbar baz 1234321 x\n```", "```\ncivic mom dad\n1234321 x\n```", "```\nperl -lne 'print \"$. $_\"' *file*\n```", "```\nperl -pe '$_ = \"$. $_\"' *file*\n```", "```\nperl -pe '$_ = \"$. $_\"' *file1 file2*\n```", "```\nperl -pe '$_ = \"$. $_\"; close ARGV if eof' *file1 file2*\n```", "```\nperl -lne 'print \"$. $_\"' *file*\n```", "```\n3:9:0:7:1:2:4:3:8:4:1:0:0:1:... (goes on and on)\n```", "```\nperl -le '$/ = undef; open $f, \"<\", \"*file*\"; $contents = <$f>\"\n```", "```\n$/ = \\1024\n```", "```\nperl -e '$\\ = \". \"; print \"hello\"; print \"world\"'\n```", "```\nhello. world.\n```", "```\nperl -nle 'if (/She said: (.*)/) { print $1 }'\n```", "```\nperl -nle 'if (/(She|He) said: (.*)/) { print \"$1: $2\" }'\n```", "```\nperl -nle 'if (/(?:She|He) said: (.*)/) { print \"Someone said: $1\" }'\n```", "```\nperl -nle 'if (/(?<gender>She|He) said: (?<text>.*)/) {\n  print \"$+{gender}: $+{text}\"\n}'\n```", "```\nperl -le 'print 1, 2, 3'\n```", "```\nperl -le '$,=\":\"; print 1, 2, 3'\n```", "```\nperl -le '@data=(1,2,3); print @data'\n```", "```\nperl -le '@data=(1,2,3); print \"@data\"'\n```", "```\nperl -le '@data=(1,2,3); print \"@data\"'\n```", "```\nperl -le '@data=(1,2,3); $\" = \"-\"; print \"@data\"'\n```", "```\nperl -ane 'print $F[2]'\n```", "```\nperl -ane '$F[4] *= 2; print \"@F\"'\n```", "```\nperl -a -F: -ne 'print $F[0]' /etc/passwd\n```", "```\nperl -le 'print \"@ARGV\"' foo bar baz\n```", "```\nperl -nle 'BEGIN { @A = @ARGV }; ...' *file1 file2*\n```", "```\nperl -nle '\n  BEGIN { $ENV{PATH} .= \":/usr/local/yourprog/bin\" }\n  ...\n  system(\"yourprog ...\");\n'\n```", "```\nperl -le 'print \"$_: $ENV{$_}\" for keys %ENV'\n```"]