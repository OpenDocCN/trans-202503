["```\n#include <SPI.h>\n#include <Mirf.h>\n#include <MirfHardwareSpiDriver.h>\n```", "```\nconst int numberOfSends = 3;\nconst int buzzerPin = 5;\nconst int switchPin = 2;\n```", "```\nconst int buzzerVolume = 100; // Keep less than 153 for 3V!\nconst int buzzMinDuration = 20;\n```", "```\nbyte data[] = {0x54, 0x12, 0x01, 0x00};\n```", "```\nvoid setup()\n{\n  analogWrite(buzzerPin, 0);\n  pinMode(switchPin, INPUT_PULLUP);\n  Mirf.spi = &MirfHardwareSpi;\n  Mirf.init();\n\n  listenMode();\n  Mirf.payload = 4;\n  Mirf.config();\n}\n```", "```\nvoid loop()\n{ \n  if (!Mirf.isSending() && Mirf.dataReady())\n  {\n    Mirf.getData(data);\n    checkForBuzz();\n  }\n  if (digitalRead(switchPin) == LOW)\n  {\n          sendBuzz(); \n  }\n}\n```", "```\nvoid listenMode()\n{\n  Mirf.setRADDR((byte *)\"serv1\");\n}\nvoid sendMode()\n{\n  Mirf.setRADDR((byte *)\"clie1\");\n}\n```", "```\nvoid checkForBuzz()\n{\n  if (data[0]==0x54 && data[1]==0x12 && data[2]==0x01)\n  {\n    analogWrite(buzzerPin, buzzerVolume);\n    delay(buzzMinDuration);\n    analogWrite(buzzerPin, 0);\n  }\n}\n```"]