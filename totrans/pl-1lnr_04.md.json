["```\nperl -le 'print a..z'\n```", "```\nperl -le 'print (\"a\"..\"z\")'\n```", "```\nperl -le '$, = \",\"; print (\"a\"..\"z\")'\n```", "```\nperl -le '$alphabet = join \",\", (\"a\"..\"z\"); print $alphabet'\n```", "```\na,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\n```", "```\nperl -le 'print join \",\", (\"a\"..\"zz\")'\n```", "```\nperl -le 'print join \",\", \"aa\"..\"zz\"'\n```", "```\naa, ab, ..., az, ba, bb, ..., bz, ca, ..., zz\n```", "```\n@hex = (0..9, \"a\"..\"f\")\n```", "```\nperl -le '\n  $num = 255;\n  @hex = (0..9, \"a\"..\"f\");\n  while ($num) {\n    $s = $hex[($num % 16)].$s;\n    $num = int $num/16;\n  }\n  print $s\n'\n```", "```\nperl -le 'printf(\"%x\", 255)'\n```", "```\nperl -le '$num = \"ff\"; print hex $num'\n```", "```\nperl -le 'print map { (\"a\"..\"z\")[rand 26] } 1..8'\n```", "```\nperl -le 'print map { (\"a\"..\"z\", 0..9)[rand 36] } 1..8'\n```", "```\nperl -le 'print \"a\"x50'\n```", "```\nperl -e 'print \"a\"x1024'\n```", "```\nperl -le '@list = (1,2)x20; print \"@list\"'\n```", "```\n@months = split ' ', \"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\"\n```", "```\n@months = qw/Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec/\n```", "```\nperl -le 'print \"(\", (join \",\", @ARGV), \")\"' *val1 val2 val3*\n```", "```\nperl -le '\n  print \"INSERT INTO table VALUES (\", (join \",\", @ARGV), \")\"\n' val1 val2 val3\n```", "```\nINSERT INTO *table* VALUES (*val1,val2,val3*)\n```", "```\nperl -le 'print join \", \", map { ord } split //, \"hello world\"'\n```", "```\n104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100\n```", "```\nperl -le 'print join \", \", unpack(\"C*\", \"hello world\")'\n```", "```\nperl -le '\n  print join \", \", map { sprintf \"0x%x\", ord $_ } split //, \"hello world\"\n'\n```", "```\n0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64\n```", "```\nperl -le '\n  print join \", \", map { sprintf \"%o\", ord $_ } split //, \"hello world\"\n'\n```", "```\n150, 145, 154, 154, 157, 40, 167, 157, 162, 154, 144\n```", "```\nperl -le '\n  print join \", \", map { sprintf \"%#o\", ord $_ } split //, \"hello world\"\n'\n```", "```\n0150, 0145, 0154, 0154, 0157, 040, 0167, 0157, 0162, 0154, 0144\n```", "```\nperl -le '\n  @ascii = (99, 111, 100, 105, 110, 103);\n  print pack(\"C*\", @ascii)\n'\n```", "```\ncoding\n```", "```\nperl -le '\n  @ascii = (99, 111, 100, 105, 110, 103);\n  $str = join \"\", map chr, @ascii;\n  print $str\n'\n```", "```\nperl -le 'print map chr, 99, 111, 100, 105, 110, 103'\n```", "```\nperl -le 'print map chr, @ARGV' 99 111 100 105 110 103\n```", "```\nperl -le '@odd = grep {$_ % 2 == 1} 1..100; print \"@odd\"'\n```", "```\nperl -le '@odd = grep { $_ & 1 } 1..100; print \"@odd\"'\n```", "```\nperl -le '@even = grep {$_ % 2 == 0} 1..100; print \"@even\"'\n```", "```\nperl -le 'print length \"one-liners are great\"'\n```", "```\nperl -le '@array = (\"a\"..\"z\"); print scalar @array'\n```", "```\nperl -le '@array = (\"a\"..\"z\"); print $#array + 1'\n```", "```\nperl -le 'print scalar @ARGV' *.txt\n```", "```\nperl -le 'print scalar (@ARGV=<*.txt>)'\n```"]