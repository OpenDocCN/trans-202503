- en: '6'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Homophonic ciphers
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/g06001.png)'
  prefs: []
  type: TYPE_IMG
- en: Among the best-known cryptograms in the world are three ciphertexts published
    in an 1885 pamphlet titled *The Beale Papers*.^([1](b06.xhtml#c06-endnote-1))
    Referred to as the “Beale ciphers,” they were allegedly created by a Virginian
    buffalo hunter named Thomas Beale in the 1820s to conceal the location of a gold
    treasure buried somewhere in Bedford County, Virginia.
  prefs: []
  type: TYPE_NORMAL
- en: 'Although we and many other crypto experts believe that the whole Beale story
    is a mere hoax (Thomas Beale, let alone his treasure, probably never existed),
    the three ciphertexts are interesting to study. Messages #1 and #3 are unsolved
    and, therefore, covered in the “Unsolved cryptograms” section of this chapter.
    The second Beale cryptogram is solvable using the Declaration of Independence,
    a version of which is reproduced in the pamphlet.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The encrypted version of the second message reads as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`115, 73, 24, 807, 37, 52, 49, 17, 31, 62, 647, 22, 7, 15, 140, 47, 29, 107,
    79, 84, 56, 239, 10, 26, 811, 5, 196, 308, 85, 52, 160, 136, 59, 211, 36, 9, 46,
    316, 554, 122, 106, 95, 53, 58, 2, 42, 7, 35, 122, 53, 31, 82, 77, 250, 196, 56,
    96, 118, 71, 140, 287, 28, 353, 37, 1005, 65, 147, 807, 24, 3, 8, 12, 47, 43,
    59, 807, 45, 316, 101, 41, 78, 154, 1005, 122, 138, 191, 16, 77, 49, 102, 57,
    72, 34, 73, 85, 35, 371, 59, 196, 81, 92, 191, 106, 273, 60, 394, 620, 270, 220,
    106, 388, 287, 63, 3, 6, 191, 122, 43, 234, 400, 106, 290, 314, 47, 48, 81, 96,
    26, 115, 92, 158, 191, 110, 77, 85, 197, 46, 10, 113, 140, 353, 48, 120, 106,
    2, 607, 61, 420, 811, 29, 125, 14, 20, 37, 105, 28, 248, 16, 159, 7, 35, 19, 301,
    125, 110, 486, 287, 98, 117, 511, 62, 51, 220, 37, 113, 140, 807, 138, 540, 8,
    44, 287, 388, 117, 18, 79, 344, 34, 20, 59, 511, 548, 107, 603, 220, 7, 66, 154,
    41, 20, 50, 6, 575, 122, 154, 248, 110, 61, 52, 33, 30, 5, 38, 8, 14, 84, 57,
    540, 217, 115, 71, 29, 84, 63, 43, 131, 29, 138, 47, 73, 239, 540, 52, 53, 79,
    118, 51, 44, 63, 196, 12, 239, 112, 3, 49, 79, 353, 105, 56, 371, 557, 211, 505,
    125, 360, 133, 143, 101, 15, 284, 540, 252, 14, 205, 140, 344, 26, 811, 138, 115,
    48, 73, 34, 205, 316, 607, 63, 220, 7, 52, 150, 44, 52, 16, 40, 37, 158, 807,
    37, 121, 12, 95, 10, 15, 35, 12, 131, 62, 115, 102, 807, 49, 53, 135, 138, 30,
    31, 62, 67, 41, 85, 63, 10, 106, 807, 138, 8, 113, 20, 32, 33, 37, 353, 287, 140,
    47, 85, 50, 37, 49, 47, 64, 6, 7, 71, 33, 4, 43, 47, 63, 1, 27, 600, 208, 230,
    15, 191, 246, 85, 94, 511, 2, 270, 20, 39, 7, 33, 44, 22, 40, 7, 10, 3, 811, 106,
    44, 486, 230, 353, 211, 200, 31, 10, 38, 140, 297, 61, 603, 320, 302, 666, 287,
    2, 44, 33, 32, 511, 548, 10, 6, 250, 557, 246, 53, 37, 52, 83, 47, 320, 38, 33,
    807, 7, 44, 30, 31, 250, 10, 15, 35, 106, 160, 113, 31, 102, 406, 230, 540, 320,
    29, 66, 33, 101, 807, 138, 301, 316, 353, 320, 220, 37, 52, 28, 540, 320, 33,
    8, 48, 107, 50, 811, 7, 2, 113, 73, 16, 125, 11, 110, 67, 102, 807, 33, 59, 81,
    158, 38, 43, 581, 138, 19, 85, 400, 38, 43, 77, 14, 27, 8, 47, 138, 63, 140, 44,
    35, 22, 177, 106, 250, 314, 217, 2, 10, 7, 1005, 4, 20, 25, 44, 48, 7, 26, 46,
    110, 230, 807, 191, 34, 112, 147, 44, 110, 121, 125, 96, 41, 51, 50, 140, 56,
    47, 152, 540, 63, 807, 28, 42, 250, 138, 582, 98, 643, 32, 107, 140, 112, 26,
    85, 138, 540, 53, 20, 125, 371, 38, 36, 10, 52, 118, 136, 102, 420, 150, 112,
    71, 14, 20, 7, 24, 18, 12, 807, 37, 67, 110, 62, 33, 21, 95, 220, 511, 102, 811,
    30, 83, 84, 305, 620, 15, 2, 108, 220, 106, 353, 105, 106, 60, 275, 72, 8, 50,
    205, 185, 112, 125, 540, 65, 106, 807, 138, 96, 110, 16, 73, 33, 807, 150, 409,
    400, 50, 154, 285, 96, 106, 316, 270, 205, 101, 811, 400, 8, 44, 37, 52, 40, 241,
    34, 205, 38, 16, 46, 47, 85, 24, 44, 15, 64, 73, 138, 807, 85, 78, 110, 33, 420,
    505, 53, 37, 38, 22, 31, 10, 110, 106, 101, 140, 15, 38, 3, 5, 44, 7, 98, 287,
    135, 150, 96, 33, 84, 125, 807, 191, 96, 511, 118, 40, 370, 643, 466, 106, 41,
    107, 603, 220, 275, 30, 150, 105, 49, 53, 287, 250, 208, 134, 7, 53, 12, 47, 85,
    63, 138, 110, 21, 112, 140, 485, 486, 505, 14, 73, 84, 575, 1005, 150, 200, 16,
    42, 5, 4, 25, 42, 8, 16, 811, 125, 160, 32, 205, 603, 807, 81, 96, 405, 41, 600,
    136, 14, 20, 28, 26, 353, 302, 246, 8, 131, 160, 140, 84, 440, 42, 16, 811, 40,
    67, 101, 102, 194, 138, 205, 51, 63, 241, 540, 122, 8, 10, 63, 140, 47, 48, 140,
    288.`'
  prefs: []
  type: TYPE_NORMAL
- en: 'As can be seen, it consists of a series of numbers between `1` and `1005`.
    The encryption method used is quite simple: every number stands for a certain
    letter and several numbers may represent the same letter. Here’s an excerpt from
    the substitution table:'
  prefs: []
  type: TYPE_NORMAL
- en: '`A``: 24, 27, 28, 36, 45, 81, 83 . . .`'
  prefs: []
  type: TYPE_NORMAL
- en: '`B``: 9, 77, 90 . . .`'
  prefs: []
  type: TYPE_NORMAL
- en: '`C``: 21, 84, 92, 94 . . .`'
  prefs: []
  type: TYPE_NORMAL
- en: '`D``: 15, 52, 63 . . .`'
  prefs: []
  type: TYPE_NORMAL
- en: Using this excerpt, we can encrypt the plaintext string `ABC` in many different
    ways. For example, `24`, `9`, `21` is a valid encryption of `ABC`, as are `27`,
    `9`, `92` and `45`, `77`, `21`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The substitution table of the second Beale cryptogram was created with one
    of the versions of the Declaration of Independence. ¹Thomas ²Beale (³or ⁴whoever
    ⁵the ⁶real ⁷author ⁸was) ⁹numbered ^(10)each ^(11)word ^(12)of ^(13)it, ^(14)just
    ^(15)like ^(16)we ^(17)have ^(18)done ^(19)in ^(20)this ^(21)sentence. Afterward,
    he used each number as a potential replacement for the starting letter of the
    word to which it refers. For example, the message `WE ARE THE WORLD` can be encrypted
    to the following: `11 10`, `7 6 10`, `20 17 10`, `4 3 6 15 18`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'When we use the Declaration of Independence in the way we’ve described, the
    second Beale cryptogram decrypts to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`I have deposited in the county of Bedford, about four miles from Buford’s``,
    in an excavation or vault, six feet below the surface of the ground, the following
    articles, belonging jointly to the parties whose names are given in number three,
    herewith:`'
  prefs: []
  type: TYPE_NORMAL
- en: '`The first deposit consisted of ten hundred and fourteen pounds of gold, and
    thirty-eight hundred and twelve pounds of silver, deposited Nov. eighteen nineteen.
    The second was made Dec. eighteen twenty-one, and consisted of nineteen hundred
    and seven pounds of gold, and twelve hundred and eighty-eight of silver; also
    jewels, obtained in St. Louis in exchange to save transportation, and valued at
    thirteen thousand dollars.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`The above is securely packed in iron pots, with iron covers. The vault is
    roughly lined with stone, and the vessels rest on solid stone, and are covered
    with others. Paper number one describes the exact locality of the vault, so that
    no difficulty will be had in finding it.`'
  prefs: []
  type: TYPE_NORMAL
- en: Since the publication of the Beale pamphlet in 1885, countless treasure hunters
    have descended upon the Bedford, Virginia, area with pickaxes, shovels, and bulldozers
    at the ready. Many holes have been dug, but no treasure has been found. Although
    we believe the pamphlet was most likely a hoax, a Masonic fable, or simply a way
    to raise money for a failing newspaper, the story of the Beale cryptograms and
    their idea of unfound treasure remains one of the most famous cipher mysteries
    in the world.
  prefs: []
  type: TYPE_NORMAL
- en: How homophonic ciphers work
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Several ciphertext letters, numbers, or symbols that represent the same plaintext
    letter are called *homophones*. A cipher that substitutes letters and uses homophones
    is referred to as a *homophonic cipher*. The second Beale cryptogram is encrypted
    in a homophonic cipher. (It is also a book cipher, as will be shown in [Chapter
    14](c14.xhtml).)
  prefs: []
  type: TYPE_NORMAL
- en: 'Of course, one does not need a source text such as the Declaration of Independence
    to create a homophonic cipher. Instead, one can simply assign several ciphertext
    letters to a plaintext letter and list them in a table. Here is a seventeenth-century
    example^([2](b06.xhtml#c06-endnote-2)) in which multiple symbols could be used
    to encipher each letter of the alphabet in the top row:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/g06002.png)'
  prefs: []
  type: TYPE_IMG
- en: Homophonic ciphers have been used since the Middle Ages to beat frequency analysis.
  prefs: []
  type: TYPE_NORMAL
- en: The size of the alphabet used in a homophonic cipher may vary considerably.
    Some ciphers employ homophones only for the more frequent letters, as in the following
    eighteenth-century example:^([3](b06.xhtml#c06-endnote-3))
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/g06003.png)'
  prefs: []
  type: TYPE_IMG
- en: Most homophonic ciphers use a larger alphabet than this one. In our experience,
    homophonic ciphers usually use fifty to one hundred ciphertext letters to encrypt
    the original alphabet. Each ciphertext letter consists of a combination of letters,
    numbers, and symbols.
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, the number of homophones assigned to a letter would be proportional
    to its frequency in the respective language; the more frequent letters, such as
    *E* and *T*, should receive more homophones than the less frequent ones, like
    *Q* and *X*. However, experience shows that most homophonic ciphers used in practice
    were not constructed in such a sophisticated way.
  prefs: []
  type: TYPE_NORMAL
- en: How to detect a homophonic cipher
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To identify a homophonic cipher, it is often necessary to distinguish it from
    a simple substitution cipher. If there are spaces in the ciphertext, it could
    simply be an Aristocrat. If there are no spaces, we need to distinguish it from
    a Patristocrat.
  prefs: []
  type: TYPE_NORMAL
- en: 'There is one obvious difference between any simple substitution cipher and
    a homophonic cipher: the latter requires a larger ciphertext alphabet. If you
    encounter a ciphertext written in the standard alphabet or another alphabet with
    about twenty-six letters, you can assume that it is not a homophonic cipher (or,
    if nothing else, that the message will not contain very many homophones). If the
    alphabet contains, say, fifty letters, a homophonic cipher becomes much more likely.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 6-1](#figure6-1) shows a message that is partially encrypted in a homophonic
    cipher used by Benjamin Franklin, among others.^([4](b06.xhtml#c06-endnote-4))
    The ciphertext alphabet used here consists of numbers, the highest of which in
    this excerpt is 227\. This means that plenty of homophones can be assigned to
    each character, `A` through `Z`.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06001.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-1: A sample of a message encrypted with a homophonic cipher, recorded
    in the *Papers of the Continental Congress of the United States*.'
  prefs: []
  type: TYPE_NORMAL
- en: Some homophonic ciphers we have encountered use an alphabet that consists of
    both ordinary and invented letters. [Figure 6-2](#figure6-2) shows an example.
    It’s a challenge cipher message sent to the Zodiac Killer via a newspaper advertisement
    in 1969.^([5](b06.xhtml#c06-endnote-5)) We will come back to this cryptogram in
    the “Challenges” section of this chapter. An alphabet like this is ideal for a
    homophonic cipher with a few dozen homophones. However, it would be difficult
    to write the second Beale cryptogram this way, as inventing hundreds of different
    symbols is an arduous task.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06002.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-2: This 1969 newspaper advertisement, provided to us by Zodiac expert
    Dave Oranchak, shows a ciphertext that was meant to challenge the Zodiac Killer.
    It is encrypted in a homophonic cipher.'
  prefs: []
  type: TYPE_NORMAL
- en: The matter of how to distinguish a homophonic cipher from systems other than
    simple substitutions remains an issue. The Vigenère cipher and many other encryption
    methods described in this book typically use an alphabet consisting of about twenty-six
    letters, which separates them from homophonic ciphers. However, a homophonic cipher
    can easily be confused with a *nomenclator*, which is a hybrid of codes and ciphers
    and consists of a collection of names (see Chapter 7 for full details on nomenclators).
    Differentiating between these two methods is sometimes tricky, as many nomenclators
    include homophones. So, in a way, a nomenclator can be regarded as a generalization
    of a homophonic cipher.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, there is one important difference between nomenclators and homophonic
    ciphers: the former are encountered much more often in practice. In fact, in the
    course of history, the use of homophonic ciphers was much less common than the
    use of nomenclators. If you examine an original ciphertext (one that is not a
    manufactured puzzle) based on a large alphabet, the chances are extremely high
    that you are dealing with a nomenclator.'
  prefs: []
  type: TYPE_NORMAL
- en: 'There is another way to distinguish a homophonic cipher from a nomenclator:
    homophonic ciphers rarely use an alphabet of more than 200 letters. The second
    Beale cryptogram, with its over 1,000-letter alphabet, is an exception, possibly
    because it is also a book cipher (see [Chapter 14](c14.xhtml)). If you encounter
    a ciphertext that contains 1,000 or more distinct numbers or letter sequences,
    chances are that you are dealing with a nomenclator or a code. If the alphabet
    is smaller, a homophonic cipher becomes more likely.'
  prefs: []
  type: TYPE_NORMAL
- en: How to break a homophonic cipher
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Today, the best approach to solving a homophonic cipher—like for many other
    encryption systems—is the computer-based, computationally intensive method of
    hill climbing. Several software programs support this technique; enter “homophonic
    solver” in a search engine to find one. These programs can break some homophonic
    cryptograms within seconds (see [Chapter 16](c16.xhtml)).
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to solve a homophonic cipher without computer support, your chances
    of success heavily depend on whether the spaces between the words are visible.
    If they aren’t, the task becomes very difficult unless you have a very long ciphertext
    to analyze. If, however, the word boundaries are apparent, your chances are quite
    good as long as there aren’t too many homophones in play. We’ll demonstrate the
    breaking of a homophonic cipher with the following text, which you might encounter
    at a geocaching event:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/g06004.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here’s a transcript:'
  prefs: []
  type: TYPE_NORMAL
- en: '`U3EI0 RH84 MB9Y B3 0GN DEIYP1C DZEX5 KJB4 7ELN1SB XI5JY 3NK AP95U 1F40O HT
    XFHZSKC0F1 FK IHEL 3MF 0MJ13R TH9ZFM 3GN THH0DBEO KF40G 3OIH8CG 3OJ TFI5U0 ET054
    E7H83 F1J YP9HAN05I 3BYN B 4SCG0 EKL MBZY E9F1C 3OJ T5KXN BT05I USQ O81L4JL AN05IU
    RH8 MP99 4NEXG B DPX1SX DZBXJ MP3O E D9ERCIF8KL SK 0G5 XN13N4 HT 0O5 DPXKSX DZBXJ
    3G5IN PU E OB0 S1 3G5 9FM54 DBI0 HT 3GJ 4NE4 MB9Z FT 0OJ OB3 7JGSKL 0O5 7N1XG
    RH8 MPZ9 TS1L E UABZ9 D9BU3PX 7FQ XHK0ESKP1C T8I3O5I SKU0I8X3SF1U CFHL Z8XY`'
  prefs: []
  type: TYPE_NORMAL
- en: The ciphertext alphabet used here has thirty-six characters (`A`–`Z` and `0`–`9`).
    A plausible explanation for this is that it uses a homophonic cipher employing
    about ten homophones. Frequency analysis . . .
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/g06005.png)'
  prefs: []
  type: TYPE_IMG
- en: . . . shows that no letter makes up more than 5.4% of the ciphertext, despite
    the fact that several letters, especially *E*, *T*, *A*, *O*, and *I*, appear
    far more often in the English language. This might be because the author used
    homophones for the most frequent letters in order to make them harder to spot—which
    is exactly what a homophonic cipher is for.
  prefs: []
  type: TYPE_NORMAL
- en: As our cryptogram contains spaces (provided that these spaces mark the boundaries
    between the words correctly), we can make use of the frequency distribution of
    each word’s initial and final letters, which is different from the frequency distribution
    of all letters in a text. Before we take a closer look at our geocaching cryptogram,
    we need some statistics about the English language in general. [Figure 6-3](#figure6-3)
    (a) shows the frequency distribution of an ordinary English text. Next, let’s
    assume that, in an ordinary English text, there are two different representations
    of each of the letters *A*, *E*, *I*, *O*, and *T* (i.e., homophones). We’ll call
    these A1 and A2, E1 and E2, I1 and I2, O1 and O2, and T1 and T2\. We have chosen
    to focus on *A*, *E*, *I*, *O*, and *T* because they are the most frequent letters
    in English. If we replace each of these letters with the corresponding homophones
    and use the two representations of each letter roughly equally often, the frequency
    distribution of a typical English text will look as shown in [Figure 6-3](#figure6-3)
    (b).
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06003.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-3: Diagram (a) shows the letter frequencies in a typical English text,
    diagram (b) introduces homophones, and diagrams (c) and (d) display the same statistics
    for the frequencies of initial letters.'
  prefs: []
  type: TYPE_NORMAL
- en: To generate another reference statistic, let’s look solely at the initial letters
    of the words in a typical English text. [Figure 6-3](#figure6-3) (c) shows initial-letter
    frequencies without homophones, while [Figure 6-3](#figure6-3) (d) displays initial-letter
    frequencies after introducing the same A1/A2, E1/E2, and so on homophones as above.
  prefs: []
  type: TYPE_NORMAL
- en: 'Many of the differences between the overall letter frequencies with homophones
    (b) and initial frequencies with homophones (d) might be helpful for a codebreaker.
    However, for us, it is sufficient to know one specific difference: *T* is one
    of the most common letters in English (9%), and if we consider how often it is
    used as the initial letter of a word, it has an even higher frequency (14%). Because
    of this increase, there is a good chance that the *T* homophones have the highest
    initial-letter frequency in an English homophonic ciphertext. This may help us
    identify the plaintext `T` in a cryptogram of this kind.'
  prefs: []
  type: TYPE_NORMAL
- en: The situation is similar if we look at the frequency of the final letters in
    each word of an English text. In particular, *I* is a frequent letter in English
    in general, but it almost never appears at the end of a word. This may help us
    identify the plaintext `I` in a homophonic cryptogram.
  prefs: []
  type: TYPE_NORMAL
- en: With this background information, let’s return to the geocaching text. We need
    to take a look at the frequencies of the letters in total, of the initial letters,
    and of the final letters of each word. We have done this using CrypTool 2, which
    supports initial- and final-letter counting, and we have compiled the results
    in [Figure 6-4](#figure6-4). (We are not aware of a computer program that does
    this entire job automatically.)
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06004.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-4: The bars in this diagram show the frequencies of all letters (the
    middle bars), as well as the initial and final letters of each word in the ciphertext
    we are examining.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few observations:'
  prefs: []
  type: TYPE_NORMAL
- en: The ciphertext letter `3` is the most frequent initial letter. It is less common
    elsewhere in the text. So, `3` could be a homophone standing for `T`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There must be at least one more `T` homophone (otherwise, we would expect the
    ciphertext letter `3` to have an initial-letter frequency of about 15%). `E` appears
    to be a good candidate, because, like `3`, it has a very high initial-letter frequency
    despite lower overall and final-letter frequencies.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ciphertext letters `H` and `S` each have about the same overall and initial-letter
    frequencies but don’t appear as the final letter of a word. They could stand for
    the letter `I`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let’s now proceed with a letter-pair (digraph) frequency analysis. We will
    only consider digraphs without spaces between the letters. Here are all the digraphs
    that appear more than once. We used the website [http://dcode.fr/en](http://dcode.fr/en)
    for this analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Four appearances** | **Three appearances** | **Two appearances** |'
  prefs: []
  type: TYPE_TB
- en: '| 05 | KL, H8, 3O | FH, 0O, HT, AN, F1, OB, 40, O5, U3, G5, SX, XJ, 1L, YP,
    ZB, SK, EI, DP |'
  prefs: []
  type: TYPE_TB
- en: 'Here are a few digraph-related facts that might be helpful:'
  prefs: []
  type: TYPE_NORMAL
- en: The most frequent digraphs in the English language are *TH*, *HE*, and *IN*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The most frequent reversed digraph is *ER*/*RE*. (Unfortunately, no reversed
    digraph appears more than once in our ciphertext.)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Our cryptogram contains two words that consist of only one letter: `B` (which
    appears twice) and `E` (which appears three times). There are only two common
    English one-letter words: `A` and `I`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following two-letter words appear in the ciphertext: `B3`, `HT` (which
    appears three times), `FK`, `SK`, `BU`, `S1`, and `FT`. Frequent English two-letter
    words are `OF`, `TO`, `IN`, `IT`, `IS`, `BE`, `AS`, `AT`, and `SO`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do we proceed? We know that the ciphertext letters `B` and `E` (which both
    appear as one-letter words) stand for either `A` or `I` (the only common one-letter
    words in English). We also know that the letter `I` very rarely appears as the
    final letter of a word. Looking at the frequency chart, we see that the ciphertext
    letters `B` and `E` both appear at the end of a word several times. We can therefore
    conclude that neither `B` nor `E` decrypts to `I`, which means that both stand
    for `A`.
  prefs: []
  type: TYPE_NORMAL
- en: What else can we find out? As we discussed, the ciphertext letter `3` is a good
    candidate for the plaintext `T`. If so, the fourth word in the cryptogram (`B3`)
    is `AT`, which makes sense. Note that we find the digraph `3O` among the most
    frequent ones in the ciphertext. Does `3O` stand for `TH`, which is one of the
    most frequent digraphs in the English language? Probably.
  prefs: []
  type: TYPE_NORMAL
- en: Looking at the cryptogram, we see that the word `3OJ` appears twice. If our
    assumption that `3O` stands for `TH` is correct, then `3OJ` must stand for `THE`,
    as no other common three-letter word starts with `TH`. This means `J` decrypts
    to `E`.
  prefs: []
  type: TYPE_NORMAL
- en: The ciphertext contains the word `3GJ`, which decrypts to `T*E`. It is likely
    that `G`, like `O`, stands for `H`.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we know ciphertext equivalents of `A`, `E`, `H`, and `T`, we can guess
    others. For instance, the ciphertext word `MP3O`, which decrypts to `**TH`, might
    stand for `WITH`. The word `MP99` should be `WILL`. `MPZ9` probably has the same
    meaning, suggesting that `Z` and `9` are homophones. Now look at `MB9Y`, which
    must be `WAL*`. `WALK` is a good guess.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s skip the rest of this guessing exercise and provide the plaintext:'
  prefs: []
  type: TYPE_NORMAL
- en: '`START YOUR WALK AT THE PARKING PLACE NEAR BADENIA CREEK TEN MILES NORTH OF
    COOLINGTON ON ROAD TWO TWENTY FOLLOW THE FOOTPATH NORTH THROUGH THE FOREST AFTER
    ABOUT ONE KILOMETER TAKE A RIGHT AND WALK ALONG THE FENCE AFTER SIX HUNDRED METERS
    YOU WILL REACH A PICNIC PLACE WITH A PLAYGROUND IN THE CENTER OF THE PICNIC PLACE
    THERE IS A HAT IN THE LOWER PART OF THE REAR WALL OF THE HAT BEHIND THE BENCH
    YOU WILL FIND A SMALL PLASTIC BOX CONTAINING FURTHER INSTRUCTIONS GOOD LUCK`'
  prefs: []
  type: TYPE_NORMAL
- en: Success stories
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first Zodiac message (Z408)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Zodiac Killer was a serial killer who operated in Northern California in
    the late 1960s and early 1970s. He killed at least five people and severely injured
    two. In a series of taunting letters sent to local newspapers, he made fun of
    the police and announced his intent to engage in more murders and mayhem. The
    identity of the Zodiac Killer remains unknown. What makes this case interesting
    for codebreakers is that some of the killer’s letters contained encrypted messages.^([6](b06.xhtml#c06-endnote-6))
    Altogether, four cryptograms can be attributed to the Zodiac Killer.
  prefs: []
  type: TYPE_NORMAL
- en: The first Zodiac Killer cryptogram, also known as Z408 because of the number
    of characters it contains, can be seen in [Figure 6-5](#figure6-5). It was originally
    divided into three parts, each of which was sent to a different newspaper. The
    police consulted professional codebreakers but did not hear back quickly. With
    a sense of urgency, each of the newspapers published the cryptograms within a
    few days.
  prefs: []
  type: TYPE_NORMAL
- en: Donald and Bettye Harden, a puzzle-loving couple living in Salinas, California,
    read about Z408 in a newspaper and decided to try to decipher it. Bettye tested
    the assumption that the Zodiac Killer, perhaps a self-centered and pretentious
    person, would start the message with the plaintext word `I`, and that maybe the
    word `KILL` might appear in the text as well. Her guess that the first plaintext
    words were `I LIKE KILLING` was the breakthrough.
  prefs: []
  type: TYPE_NORMAL
- en: 'Bettye Harden soon found out that the Zodiac Killer had used a homophonic cipher
    to encrypt this message. Here’s the (rather gruesome) plaintext, spelling errors
    and all:'
  prefs: []
  type: TYPE_NORMAL
- en: '`I LIKE KILLING PEOPLE BECAUSE IT IS SO MUCH FUN IT IS MORE FUN THAN KILLING
    WILD GAME IN THE FORREST BECAUSE MAN IS THE MOST DANGEROUE ANAMAL OF ALL TO KILL
    SOMETHING GIVES ME THE MOST THRILLING EXPERENCE IT IS EVEN BETTER THAN GETTING
    YOUR ROCKS OFF WITH A GIRL THE BEST PART OF IT IS THAE WHEN I DIE I WILL BE REBORN
    IN PARADICE AND ALL THEI HAVE KILLED WILL BECOME MY SLAVES I WILL NOT GIVE YOU
    MY NAME BECAUSE YOU WILL TRY TO SLOI DOWN OR ATOP MY COLLECTIOG OF SLAVES FOR
    MY AFTERLIFE. EBEORIETEMETHHPITI`'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06005.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-5: The first message from the Zodiac Killer was broken by Donald and
    Bettye Harden.'
  prefs: []
  type: TYPE_NORMAL
- en: The Zodiac Killer’s second message (Z340)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Figure 6-6](#figure6-6) shows the second of the Zodiac Killer’s four messages,
    which had been sent to local newspapers. It was mailed on November 8, 1969\. This
    cryptogram consists of 340 characters and is therefore referred to as Z340\. Contrary
    to the aforementioned Z408, it wasn’t solved right away. Over the decades, Z340,
    which is long enough to allow for meaningful frequency analysis and other statistical
    examinations, became one of the most famous unsolved crypto mysteries in the world.
    In the first edition of this book, released on December 10, 2020, Z340 was even
    listed in the “Unsolved cryptograms” section of this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06006.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-6: The second encrypted message from the Zodiac Killer remained unsolved
    for decades.'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, on December 11, 2020, only one day after publication of the first
    edition, we received a message from our friend, Zodiac Killer expert Dave Oranchak.
    What he wrote was hard to believe: he claimed that Z340 had been solved! According
    to his message, this success had been achieved by a team of three experts consisting
    of Dave himself, Belgian codebreaking specialist Jarl Van Eycke, and Australian
    mathematician Sam Blake ([Figure 6-7](#figure6-7)).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/F06007.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-7: From left: Dave Oranchak, Jarl Van Eycke, and Sam Blake broke the
    Z340 message.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Of course, we were skeptical, as many bogus decipherments of this famous ciphertext
    had been published before. However, a video Dave published about the solution
    that he and his colleagues had found appeared to make sense.^([7](b06.xhtml#c06-endnote-7))
    Several cipher experts mentioned in our own book, including Nils Kopal,^([8](b06.xhtml#c06-endnote-8))
    Nick Pelling,^([9](b06.xhtml#c06-endnote-9)) Joachim von zur Gathen,^([10](b06.xhtml#c06-endnote-10))
    and George Lasry (via email), confirmed the correctness of Dave, Jarl, and Sam’s
    decipherment. To really clinch things, the FBI published an official statement
    via Twitter, saying, “A cipher attributed to the Zodiac Killer was recently solved
    by private citizens.”^([11](b06.xhtml#c06-endnote-11)) There could be no doubt:
    Z340 had been broken!'
  prefs: []
  type: TYPE_NORMAL
- en: 'Dave and Jarl had originally connected in 2014, which led to Jarl’s creation
    of the AZDecrypt software in 2015 to break homophonic ciphers. Then Dave and Sam
    connected in 2019 through Dave’s YouTube channel, *Let’s Crack Zodiac*. They jointly
    examined Z340 for months, suspecting that the Zodiac Killer had used a combination
    of two ciphers: a homophonic substitution similar to the one employed for Z408,
    and a transposition cipher (see [Chapter 9](c09.xhtml)).^([12](b06.xhtml#c06-endnote-12))^,
    ^([13](b06.xhtml#c06-endnote-13))'
  prefs: []
  type: TYPE_NORMAL
- en: 'As there is a mind-boggling quantity of possible transpositions that could
    be applied to a text of this length—in fact, the options are seemingly infinite—the
    three codebreakers had to limit their examinations to the most likely ones. So,
    they assumed that the message had been split up in a simple way—horizontally,
    vertically, or both. Among other possibilities, they considered the following:'
  prefs: []
  type: TYPE_NORMAL
- en: It might have been split into one horizontal section with two vertical sections.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It might have been split into two horizontal sections with three vertical sections.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In 2015, Jarl and an anonymous forum user nicknamed “daikon” had already discovered
    that the digraph frequencies of Z340 had some interesting statistical properties
    when every nineteenth symbol was read. This suggested that leaping through the
    ciphertext in steps of nineteen was a part of the process that led to the plaintext.
  prefs: []
  type: TYPE_NORMAL
- en: Even within these constraints, sifting through all the substitution and transposition
    candidates still meant searching for a needle in a gigantic haystack. Dave, Jarl,
    and Sam tested no fewer than 650,000 transposition variants. When at first they
    didn’t find anything close to a solution to Z340, they decided to shift their
    focus to re-examining the top 10% of the candidate transpositions, as scored by
    AZDecrypt. This time, they also gave the software more time to search.
  prefs: []
  type: TYPE_NORMAL
- en: The breakthrough came on December 3, 2020, when, in one of the numerous deciphering
    attempts, the expressions `HOPE YOU ARE, TRYING TO CATCH ME` and `THE GAS CHAMBER`
    appeared. When Dave configured these text fragments as cribs, AZDecrypt suddenly
    produced meaningful sentences.
  prefs: []
  type: TYPE_NORMAL
- en: An even more exciting development was that this plaintext candidate contained
    the phrase `THAT WASNT ME ON THE TV SHOW`, which Dave immediately recognized as
    an allusion to a man who had called in to a TV show pretending to be the perpetrator
    two weeks before the encrypted message was sent in 1969\. This strongly implied
    that they had the solution to the first nine lines of the ciphertext!
  prefs: []
  type: TYPE_NORMAL
- en: 'However, applying that technique to the rest of the message still didn’t result
    in a meaningful plaintext. The team needed two further breakthroughs to bring
    the whole plaintext into view. First, Dave discovered that in the last two lines,
    a few words were written backward, with no other transposition being used. Second,
    Jarl figured out a few mistakes or disrupted transpositions in the second section.
    Now, the successful codebreakers could finally determine the following plaintext
    (a few errors are corrected):'
  prefs: []
  type: TYPE_NORMAL
- en: '`I HOPE YOU ARE HAVING LOTS OF FUN IN TRYING TO CATCH ME THAT WASNT ME ON THE
    TV SHOW WHICH BRINGS UP A POINT ABOUT ME I AM NOT AFRAID OF THE GAS CHAMBER BECAUSE
    IT WILL SEND ME TO PARADICE ALL THE SOONER BECAUSE I NOW HAVE ENOUGH SLAVES TO
    WORK FOR ME WHERE EVERYONE ELSE HAS NOTHING WHEN THEY REACH PARADICE SO THEY ARE
    AFRAID OF DEATH I AM NOT AFRAID BECAUSE I KNOW THAT MY NEW LIFE IS DEATH LIFE
    WILL BE AN EASY ONE IN PARADICE`'
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, the plaintext does not contain any information that directly
    suggests the identity of the Zodiac Killer. During the deciphering process, it
    became clear that the message was divided into three sections. This means that
    the codebreakers’ hypothesis that the text was split up in a simple way proved
    correct. This is the kind of lucky guesswork one needs to break a difficult cipher!
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 6-8](#figure6-8) shows the homophonic cipher table the Zodiac Killer
    used. As one would expect, the number of homophones available for each letter
    is roughly proportional to the letter’s frequency. *E* and *T*, the most common
    letters in the English language, can be mapped to six different symbols, respectively.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06008.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-8: The substitution table used for Z340 represents a homophonic cipher.'
  prefs: []
  type: TYPE_NORMAL
- en: The transposition cipher that Z340 is based on is explained in [Figure 6-9](#figure6-9).
    As can be seen, the message needs to be divided into two large sections (of nine
    lines each) and one small section (of two lines). To decrypt the two large sections,
    one starts in each section’s upper-left-hand corner and works through the message
    with knight moves (two steps to the right, one step down). Once the right-hand
    edge of the section is reached, one repeats the pattern, starting with the second
    symbol in the first row. When all symbols in the upper-right-hand half of the
    block have been visited, the path continues in the lower-left-hand one. Note that
    in many cases, a leap of symbols (e.g., from the first symbol in the first line
    to the third symbol in the second line) is necessary, as suggested by “daikon”
    and Jarl.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06009.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-9: The transposition the Zodiac Killer used for the upper two blocks
    of Z340 is mainly based on knight moves (two steps to the right, one step down).'
  prefs: []
  type: TYPE_NORMAL
- en: In the third section, no knight moves are used. Instead, the message is written
    from left to right and top to bottom, with some words written backward. It seems
    possible that, in addition, the expressions `LIFE IS`, `LIFE WILL`, and `DEATH`
    need to be shifted elsewhere. To date, several possible suggestions have been
    made.^([14](b06.xhtml#c06-endnote-14))
  prefs: []
  type: TYPE_NORMAL
- en: Did the Zodiac Killer want Z340 to be deciphered? The phrase `THAT WASN’T ME
    ON THE TV SHOW` suggests that he did because it contains information he probably
    wanted to be known relatively quickly. This leads to the question of whether the
    killer underestimated the difficulty of his cipher. Could we extrapolate that
    he had never tried to solve such a system? What types of ciphers had he tried
    to solve in the past that would lead him to think this cipher was solvable with
    the technology of the time?
  prefs: []
  type: TYPE_NORMAL
- en: It goes without saying that Dave, Jarl, and Sam did a tremendous job in combing
    through countless potential substitution tables and transposition patterns to
    identify the correct one. In our opinion, this proved to be one of the greatest
    nonmilitary codebreaking successes in generations!
  prefs: []
  type: TYPE_NORMAL
- en: Ferdinand III’s letters
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ferdinand III (1608–57), a Holy Roman emperor from the House of Habsburg, played
    an important role in the Thirty Years’ War, one of the most devastating wars in
    Europe. When researching his life, historians such as Leopold Auer from Vienna
    repeatedly encountered encrypted letters. The system Ferdinand III used was based
    on numbers and simple geometric symbols arranged in pairs. As can be seen in [Figure
    6-10](#figure6-10), Ferdinand’s letters were a mixture of encrypted and cleartext
    passages, but they remained unsolved by historians.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06010.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-10: The first page of an encrypted letter written by Holy Roman Emperor
    Ferdinand III to his brother Leopold Wilhelm in 1640\. German philologist and
    historian Thomas Ernst broke it.'
  prefs: []
  type: TYPE_NORMAL
- en: Thomas Ernst, a German scientist who teaches in the United States, tried his
    luck on this mystery.^([15](b06.xhtml#c06-endnote-15)) Ernst had already made
    a name for himself in the 1990s when he deciphered the third book of the *Steganographia*
    by Johannes Trithemius (1462–1516) (see [Chapter 15](c15.xhtml)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parts of Ferdinand’s letter had already been transcribed: a mixture of the
    cleartext letters and words, combined with encrypted portions that were a jumble
    of numbers and symbols.'
  prefs: []
  type: TYPE_NORMAL
- en: 'As a scholar of languages and a historian, Ernst could easily read the emperor’s
    cleartext passages, which were a mixture of seventeenth-century German and Latin.
    On the remaining portions, Ernst tested several hypotheses. His central discovery
    was that each geometric symbol represented the number of lines or semicircles
    it consisted of. For example, a square, with its four sides, stood for the number
    `4`, a triangle for the number `3`, and so forth. Using these numbers, Ernst constructed
    the following transcript:'
  prefs: []
  type: TYPE_NORMAL
- en: '`1640, 20 July /`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Zifra 21 13 42 04 23 14 33 13 / 43 02 01`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Si haberemus 00 23 03 44 33 quam 13 20 34 / 44 33 were Ich eben der meinung
    wie E L vnd / were wol der rechte weg, aber eben das non habere / glaube Ich 33
    11 42 41 13 33 41 12 34 41 / 14 31 14 42 30 34 13 12 40 13 32 12 24 / ob E L zwar
    wenig Considerationes haben tam quo: / ad 41 13 41 44 23 44 33 quam 44 / 13 41
    44 23 44 33 / so habe Ich doch gar grosse Dann hoc quod scripsi quia me Vestigia
    / terrent, non intellexi tantum de 22 63 24 13 35 / 41 23 25 25 11 43 41 65 27,
    sunder von allen / 44 43 67 34 12 89 24 12 43 99 76 22 13 24 / 55 56 34 41 12
    43 46 48 47 E L schauen nuhr / was wir vor nuz von 13 66 31 77 12 88 43 99 55
    / gehabt haben Vnd noch haben. 12 32 12 43 20 12 24 / 32 senex fuit origo istius
    mali. 42 01 24 23 44 04 43 / 23 13 12 42 30 41 12 43 34 12 13 43 / fuit 43 14
    34 41 24 00 ruina in / 42 66 11 33 53 12 24 00 40 13 42 13 34 / 22 24 13 41 23
    01 43 41 in 21 12 23 63 73 / 13 42 13 34 65 55 32 44 43 41 01 42 31 / 12 24 wais
    schir nicht wie er 12 44 12 24 65 73`'
  prefs: []
  type: TYPE_NORMAL
- en: 'The second breakthrough occurred when he realized that the Habsburg motto “AEIOU”
    played a role in the cipher. One interpretation of the motto is “Austria erit
    in orbe ultima,” which translates to “Austria will exist until the end of the
    world.” From the “AEIOU” motto, Ernst derived the following mappings in Ferdinand’s
    cipher:'
  prefs: []
  type: TYPE_NORMAL
- en: '`A``: 01, 11`'
  prefs: []
  type: TYPE_NORMAL
- en: '`E``: 02, 12`'
  prefs: []
  type: TYPE_NORMAL
- en: '`I``: 03, 13`'
  prefs: []
  type: TYPE_NORMAL
- en: '`O``: 04, 14`'
  prefs: []
  type: TYPE_NORMAL
- en: 'When he looked at the sequence `21 13 42 04 23 04 33 03 43 02 01` at the beginning
    of the letter, he identified the following vowels: `I – O – O – I – E A`, where
    the dashes stood for missing consonants. The vowel pattern suggested an adjective
    that could only be `PICOLOMINEA`. Octavio Piccolomini, along with the emperor’s
    brother Leopold Wilhelm, was the chief commander of the imperial army at the time.
    `PICOLOMINEA` was encrypted without the double `C`. `Zifra PICCOLOMINEA` meant
    an enciphered letter with Piccolomini as the name of the cipher.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, Ernst guessed that the missing word in `fuit` `43 04 34 41 24 00` `ruina`
    was `NOSTRA` (Latin for `OUR`). He could then derive the remaining letters easily,
    constructing the following substitution table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **`A`** | **`B,W,P`** | **`C,K,Z`** | **`E`** | **`F`** | **`G`** | **`H`**
    | **`I/J`** | **`K`** | **`L`** | **`M`** | **`N`** | **`O`** | **`P`** | **`R`**
    | **`S`** | **`D,T`** | **`U/V`** | **`Z`** |'
  prefs: []
  type: TYPE_TB
- en: '| `00` `01`'
  prefs: []
  type: TYPE_NORMAL
- en: '`11` | `20` `21` | `42` | `02` `12` | `22` | `32` | `30` `31` | `03` `13` |
    `30` | `23` | `33` | `43` | `04` `14` | `21` | `24` | `34` | `40` `41` | `44`
    | `10` |'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the plaintext of the first part of the letter, according to Ernst’s
    decryption:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Zifra PICOLOMINEA`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Si haberemus ALIUM quam IPS`'
  prefs: []
  type: TYPE_NORMAL
- en: '`UM were Ich eben der Meinung wie E L Vnd`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Were Wol der rehte Weg, aber eben das non habere`'
  prefs: []
  type: TYPE_NORMAL
- en: '`glaube Ich MAC‹H›T IM DEST`'
  prefs: []
  type: TYPE_NORMAL
- en: '`O HOCHSIEDIGER`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ob E L zwar wenig Considerationes haben tam quo:`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ad TITULUM quam U`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ITULUM so habe Ich doch gar`'
  prefs: []
  type: TYPE_NORMAL
- en: '`grosse Dann hoc quod scripsi quia me Vestigia`'
  prefs: []
  type: TYPE_NORMAL
- en: '`terrent, non intellexi tantum de FRI`'
  prefs: []
  type: TYPE_NORMAL
- en: '`DLANT, sunder Von allen`'
  prefs: []
  type: TYPE_NORMAL
- en: '`UNSEREN FIR`'
  prefs: []
  type: TYPE_NORMAL
- en: '`STEN E L schauen Nuhr`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Was wir vor nuz von IH‹N›EN`'
  prefs: []
  type: TYPE_NORMAL
- en: '`gehabt haben Vnd noch haben. EGENBER`'
  prefs: []
  type: TYPE_NORMAL
- en: '`G senex fuit origo istius mali. CARL UON`'
  prefs: []
  type: TYPE_NORMAL
- en: '`LIECHTENS‹T›EIN senior`'
  prefs: []
  type: TYPE_NORMAL
- en: '`fuit NOSTRA ruina in`'
  prefs: []
  type: TYPE_NORMAL
- en: '`CAMERADICIS`'
  prefs: []
  type: TYPE_NORMAL
- en: '`FRIDLAND in BEL`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ICIS‹.› GUNDACK`'
  prefs: []
  type: TYPE_NORMAL
- en: '`[. . .]`'
  prefs: []
  type: TYPE_NORMAL
- en: 'It’s written in a difficult-to-understand mixture of old German and Latin,
    including abbreviations and spelling errors. Here is a rough annotated translation
    that Ernst has provided:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Zifra picolominea`'
  prefs: []
  type: TYPE_NORMAL
- en: '`If we had someone else [for the position of commander-in-chief] but him [field
    marshal Ottavio Piccolomini]`'
  prefs: []
  type: TYPE_NORMAL
- en: '`I would share your opinion,`'
  prefs: []
  type: TYPE_NORMAL
- en: '`and it would be the right way, but it is this not having`'
  prefs: []
  type: TYPE_NORMAL
- en: '`anyone else [no other viable choice for commander-in-chief] that makes him
    [Piccolomini]`'
  prefs: []
  type: TYPE_NORMAL
- en: '`even more high-handed.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`While you may have few reservations with regard`'
  prefs: []
  type: TYPE_NORMAL
- en: '`to another title [rewarding Piccolomini with an imperial princicipality],`'
  prefs: []
  type: TYPE_NORMAL
- en: '`I have quite a few [reservations].`'
  prefs: []
  type: TYPE_NORMAL
- en: '`That which haunts me are not just what Fridland`'
  prefs: []
  type: TYPE_NORMAL
- en: '`. . .`'
  prefs: []
  type: TYPE_NORMAL
- en: A postcard from Hawaii
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The cryptogram shown in [Figure 6-11](#figure6-11) was written on a postcard
    sent from Hawaii in 1886.^([16](b06.xhtml#c06-endnote-16)) It was provided to
    us by the National Cryptologic Museum in Maryland and solved by our colleague
    Armin Krauß, a very skilled German codebreaker. Armin knew that most encrypted
    postcards are encoded in simple substitution ciphers—but usually ones that include
    spaces, which is not the case here. That means this is a Patristocrat cipher,
    not Aristocrat. So, Armin suspected that one of the symbols represented the space
    character. After some analysis, Armin realized that there were, in fact, two symbols
    representing spaces (i.e., homophones): `T` and its upside-down version. Next,
    he identified that the one-letter word that appeared four times in the text was
    `I`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Armin then tried to identify `E`, the most frequent letter in the English language.
    However, none of the symbols appeared as frequently as one would expect if they
    stood for `E`, so he made another guess: perhaps two symbols stood for `E`. This
    hypothesis proved correct. Based on frequency analysis and some guessing, Armin
    saw that both `X` and the symbol that consists of three parallel horizontal lines
    stood for `E`. The rest of the decryption was routine. Here is the plaintext Armin
    recovered:'
  prefs: []
  type: TYPE_NORMAL
- en: '`FEBRUARY TWENTY-EIGHTH.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`THANKS FOR YOUR LETTER`'
  prefs: []
  type: TYPE_NORMAL
- en: '`WHICH I RECEIVED LAST W`'
  prefs: []
  type: TYPE_NORMAL
- en: '`EDNESDAY. I AM VERY GLAD`'
  prefs: []
  type: TYPE_NORMAL
- en: '`INDEED CHURCHILL HAS G`'
  prefs: []
  type: TYPE_NORMAL
- en: '`OT SOME WORK TO DO. YOU`'
  prefs: []
  type: TYPE_NORMAL
- en: '`R LETTER HAD SEVERAL`'
  prefs: []
  type: TYPE_NORMAL
- en: '`WISTAKES IN IT , BU`'
  prefs: []
  type: TYPE_NORMAL
- en: '`T I DARESAY MINE HA`'
  prefs: []
  type: TYPE_NORMAL
- en: '`S A NUMBER TOO. I SH`'
  prefs: []
  type: TYPE_NORMAL
- en: '`OT A BIG GOAT UP THE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`MOUNTAIN YESTERDAY , W`'
  prefs: []
  type: TYPE_NORMAL
- en: '`EIGHING ABOUT ONE HUN`'
  prefs: []
  type: TYPE_NORMAL
- en: '`DRED AND TMENTY POUNDS.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`DONT BEGIN YOUR LETT`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ER “MY DEAR”, BECAUSE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`IF ANY ONE GOT HOLD OF`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ONE, THEY MIGHT GUESS SOME`'
  prefs: []
  type: TYPE_NORMAL
- en: '`OF THE ALPHABET.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ALOHA OE.`'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06011.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-11: This 1886 postcard from Hawaii is encrypted with a letter substitution
    that includes homophones for the space character and `E`.'
  prefs: []
  type: TYPE_NORMAL
- en: Challenges
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A message to the Zodiac Killer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Earlier in this chapter, we introduced a Zodiac-style cipher message (see [Figure
    6-2](#figure6-2)) published by the police in California newspaper advertisements
    around the time of the Zodiac murders in the late 1960s. The message is encrypted
    with a simple homophonic cipher, and the plaintext contains a telephone number.
    Police hoped that the killer would succeed in deciphering the message and then
    call the number to demonstrate his superiority. The plan failed, but at least
    the cryptogram makes a nice cipher challenge. Can you solve it?
  prefs: []
  type: TYPE_NORMAL
- en: Edgar Allan Poe’s second challenge
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: American author Edgar Allan Poe had a long fascination with cryptology. His
    1843 short story “The Gold-Bug” is the most famous work of fiction that describes
    codebreaking. (The system broken in the story is a simple substitution cipher.)
    A few years earlier, in 1839, when Poe wrote for *Alexander’s Weekly Messenger*,
    he initiated a cryptography contest that challenged his readers to send him ciphertexts
    to break.^([17](b06.xhtml#c06-endnote-17)) As a result, his readers sent him simple
    substitution ciphertexts, which, as we know now, are fairly simple to solve. He
    made a similar call in 1841 in *Graham’s Magazine*, for which he received about
    a hundred cryptograms that he allegedly solved. To conclude the *Messenger* contest
    around 1840, he published two ciphertexts (supposedly submitted by a W.B. Tyler)
    that remained unsolved for over 150 years.
  prefs: []
  type: TYPE_NORMAL
- en: In 1985, Louis Renza, professor of English at Dartmouth College, proposed that
    this W.B. Tyler had never existed and that Poe had created the messages himself.
    Renza’s writings brought the two challenge ciphertexts to new public attention,
    and in the 1990s, the first of these messages was solved independently by Terence
    Whalen and John Hodgson (see [Chapter 9](c09.xhtml)).
  prefs: []
  type: TYPE_NORMAL
- en: The second ciphertext is depicted in [Figure 6-12](#figure6-12). In 2000, Canadian
    software engineer Gil Broza found the correct decryption, and it turned out that
    a homophonic cipher had been used.^([18](b06.xhtml#c06-endnote-18)) As you can
    guess from the fact that it took 160 years for the ciphertext to be solved, this
    cryptogram is not necessarily a beginner’s challenge!
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06012.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-12: This homophonic cryptogram left behind by Edgar Allan Poe was
    solved 160 years after its creation.'
  prefs: []
  type: TYPE_NORMAL
- en: For a transcript of this challenge and some hints, check out [http://codebreaking-guide.com/challenges/](http://codebreaking-guide.com/challenges/).
  prefs: []
  type: TYPE_NORMAL
- en: Unsolved cryptograms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Beale Papers #1 and #3'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As discussed earlier in this chapter, a nineteenth-century Virginian adventurer
    named Thomas Beale allegedly described a treasure and its location in three encrypted
    notes. This story is likely mere fiction, but the encrypted notes are worth studying.
    While the second message has been broken, the two other cryptograms have yet to
    be deciphered. Beale Paper #1 reportedly contains the location of the treasure,
    while #3 contains the names and residences of Beale’s associates and their families.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is Beale Paper #1, “The Locality of the Vault”:'
  prefs: []
  type: TYPE_NORMAL
- en: '`71, 194, 38, 1701, 89, 76, 11, 83, 1629, 48, 94, 63, 132, 16, 111, 95, 84,
    341, 975, 14, 40, 64, 27, 81, 139, 213, 63, 90, 1120, 8, 15, 3, 126, 2018, 40,
    74, 758, 485, 604, 230, 436, 664, 582, 150, 251, 284, 308, 231, 124, 211, 486,
    225, 401, 370, 11, 101, 305, 139, 189, 17, 33, 88, 208, 193, 145, 1, 94, 73, 416,
    918, 263, 28, 500, 538, 356, 117, 136, 219, 27, 176, 130, 10, 460, 25, 485, 18,
    436, 65, 84, 200, 283, 118, 320, 138, 36, 416, 280, 15, 71, 224, 961, 44, 16,
    401, 39, 88, 61, 304, 12, 21, 24, 283, 134, 92, 63, 246, 486, 682, 7, 219, 184,
    360, 780, 18, 64, 463, 474, 131, 160, 79, 73, 440, 95, 18, 64, 581, 34, 69, 128,
    367, 460, 17, 81, 12, 103, 820, 62, 116, 97, 103, 862, 70, 60, 1317, 471, 540,
    208, 121, 890, 346, 36, 150, 59, 568, 614, 13, 120, 63, 219, 812, 2160, 1780,
    99, 35, 18, 21, 136, 872, 15, 28, 170, 88, 4, 30, 44, 112, 18, 147, 436, 195,
    320, 37, 122, 113, 6, 140, 8, 120, 305, 42, 58, 461, 44, 106, 301, 13, 408, 680,
    93, 86, 116, 530, 82, 568, 9, 102, 38, 416, 89, 71, 216, 728, 965, 818, 2, 38,
    121, 195, 14, 326, 148, 234, 18, 55, 131, 234, 361, 824, 5, 81, 623, 48, 961,
    19, 26, 33, 10, 1101, 365, 92, 88, 181, 275, 346, 201, 206, 86, 36, 219, 324,
    829, 840, 64, 326, 19, 48, 122, 85, 216, 284, 919, 861, 326, 985, 233, 64, 68,
    232, 431, 960, 50, 29, 81, 216, 321, 603, 14, 612, 81, 360, 36, 51, 62, 194, 78,
    60, 200, 314, 676, 112, 4, 28, 18, 61, 136, 247, 819, 921, 1060, 464, 895, 10,
    6, 66, 119, 38, 41, 49, 602, 423, 962, 302, 294, 875, 78, 14, 23, 111, 109, 62,
    31, 501, 823, 216, 280, 34, 24, 150, 1000, 162, 286, 19, 21, 17, 340, 19, 242,
    31, 86, 234, 140, 607, 115, 33, 191, 67, 104, 86, 52, 88, 16, 80, 121, 67, 95,
    122, 216, 548, 96, 11, 201, 77, 364, 218, 65, 667, 890, 236, 154, 211, 10, 98,
    34, 119, 56,216, 119, 71, 218, 1164, 1496, 1817, 51, 39, 210, 36, 3, 19, 540,
    232, 22, 141, 617, 84, 290, 80, 46, 207, 411, 150, 29, 38, 46, 172, 85, 194, 39,
    261, 543, 897, 624, 18, 212, 416, 127, 931, 19, 4, 63, 96, 12, 101, 418, 16, 140,
    230, 460, 538, 19, 27, 88, 612, 1431, 90, 716, 275, 74, 83, 11, 426, 89, 72, 84,
    1300, 1706, 814, 221, 132, 40, 102, 34, 868, 975, 1101, 84, 16, 79, 23, 16, 81,
    122, 324, 403, 912, 227, 936, 447, 55, 86, 34, 43, 212, 107, 96, 314, 264, 1065,
    323, 428, 601, 203, 124, 95, 216,814, 2906, 654, 820, 2, 301, 112, 176, 213, 71,
    87, 96, 202, 35, 10, 2, 41, 17, 84, 221, 736, 820, 214, 11, 60, 760.`'
  prefs: []
  type: TYPE_NORMAL
- en: 'And here is Beale Paper #3, “Names and Residences”:'
  prefs: []
  type: TYPE_NORMAL
- en: '`317, 8, 92, 73, 112, 89, 67, 318, 28, 96, 107, 41, 631, 78, 146, 397, 118,
    98, 114, 246, 348, 116, 74, 88, 12, 65, 32, 14, 81, 19, 76, 121, 216, 85, 33,
    66, 15, 108, 68, 77, 43, 24, 122, 96, 117, 36, 211, 301, 15, 44, 11, 46, 89, 18,
    136, 68, 317, 28, 90, 82, 304, 71, 43, 221, 198, 176, 310, 319, 81, 99, 264, 380,
    56, 37, 319, 2, 44, 53, 28, 44, 75, 98, 102, 37, 85, 107, 117, 64, 88, 136, 48,
    154, 99, 175, 89, 315, 326,78, 96, 214, 218, 311, 43, 89, 51, 90, 75, 128, 96,
    33, 28, 103, 84, 65, 26, 41, 246, 84, 270, 98, 116, 32, 59, 74, 66, 69, 240, 15,
    8, 121, 20, 77, 89, 31, 11, 106, 81, 191, 224, 328, 18, 75, 52, 82, 117, 201,
    39, 23, 217, 27, 21, 84, 35, 54, 109, 128, 49, 77, 88, 1, 81, 217, 64, 55, 83,
    116, 251, 269, 311, 96, 54, 32, 120, 18, 132, 102, 219, 211, 84, 150, 219, 275,
    312, 64, 10, 106, 87, 75, 47, 21, 29, 37, 81, 44, 18, 126, 115, 132, 160, 181,
    203, 76, 81, 299, 314, 337, 351, 96, 11, 28, 97, 318, 238, 106, 24, 93, 3, 19,
    17, 26, 60, 73, 88, 14, 126, 138, 234, 286, 297, 321, 365, 264, 19, 22, 84, 56,
    107, 98, 123, 111, 214, 136, 7, 33, 45, 40, 13, 28, 46, 42, 107, 196, 227, 344,
    198, 203, 247, 116, 19, 8, 212, 230, 31, 6, 328, 65, 48, 52, 59, 41, 122, 33,
    117, 11, 18, 25, 71, 36, 45, 83, 76, 89, 92, 31, 65, 70, 83, 96, 27, 33, 44, 50,
    61,24, 112, 136, 149, 176, 180, 194, 143, 171, 205, 296, 87, 12, 44, 51, 89, 98,
    34, 41, 208, 173, 66, 9, 35, 16, 95, 8, 113, 175, 90, 56, 203, 19, 177, 183, 206,
    157, 200, 218, 260, 291, 305, 618, 951, 320, 18, 124, 78, 65, 19, 32, 124, 48,
    53, 57, 84, 96, 207, 244, 66, 82, 119, 71, 11, 86, 77, 213, 54, 82, 316, 245,
    303, 86, 97, 106, 212, 18, 37, 15, 81, 89, 16, 7, 81, 39, 96, 14, 43, 216, 118,
    29, 55, 109, 136, 172, 213,64, 8, 227, 304, 611, 221, 364, 819, 375, 128, 296,
    1, 18, 53, 76, 10, 15, 23, 19, 71, 84, 120, 134, 66, 73, 89, 96, 230, 48, 77,
    26, 101, 127, 936, 218, 439, 178, 171, 61, 226, 313, 215, 102, 18, 167, 262, 114,
    218, 66, 59, 48, 27, 19, 13, 82, 48, 162, 119, 34, 127, 139, 34, 128, 129, 74,
    63, 120, 11, 54, 61, 73, 92, 180, 66, 75, 101, 124, 265, 89, 96, 126, 274, 896,
    917, 434, 461, 235, 890, 312, 413, 328, 381, 96, 105, 217, 66, 118, 22, 77, 64,
    42, 12, 7, 55, 24, 83, 67, 97, 109, 121, 135, 181, 203, 219, 228, 256, 21, 34,
    77, 319, 374, 382, 675, 684, 717, 864, 203, 4, 18, 92, 16, 63, 82, 22, 46, 55,
    69, 74, 112, 134, 186, 175, 119, 213, 416, 312, 343, 264, 119, 186, 218, 343,
    417, 845, 951, 124, 209, 49, 617, 856, 924, 936, 72, 19, 28, 11, 35, 42, 40, 66,
    85, 94, 112, 65, 82, 115, 119, 236, 244, 186, 172, 112, 85, 6, 56, 38, 44, 85,
    72, 32, 47, 73, 96, 124, 217, 314, 319, 221, 644, 817, 821, 934, 922, 416, 975,
    10, 22,18, 46, 137, 181, 101, 39, 86, 103, 116, 138, 164, 212, 218, 296, 815,
    380, 412, 460, 495, 675, 820, 952.`'
  prefs: []
  type: TYPE_NORMAL
- en: If you find the treasure, please let us know.
  prefs: []
  type: TYPE_NORMAL
- en: The Zodiac Killer’s third message (Z13)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: On April 20, 1970, the Zodiac Killer sent his third cryptogram (today called
    Z13) to a newspaper. It consists of only thirteen letters.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/g06006.png)'
  prefs: []
  type: TYPE_IMG
- en: Allegedly, this short ciphertext contains the name of the killer. It is unsolved.
  prefs: []
  type: TYPE_NORMAL
- en: The Zodiac Killer’s fourth message (Z32)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The fourth and last message from the Zodiac Killer (Z32) consists of thirty-two
    letters and was sent on June 26, 1970\. Along with Z32, the killer sent a map
    of the San Francisco area and the following cleartext words: `The map coupled
    with this code will tell you where the bomb is set.`^([19](b06.xhtml#c06-endnote-19))'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/g06007.png)'
  prefs: []
  type: TYPE_IMG
- en: The solution is unknown.
  prefs: []
  type: TYPE_NORMAL
- en: The Scorpion cryptograms
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the 1990s, John Walsh, best known as the host of *America’s Most Wanted*,
    received a series of letters signed SCORPION.^([20](b06.xhtml#c06-endnote-20))
    Some of these messages contained encrypted messages and are usually referred to
    as the Scorpion cryptograms.^([21](b06.xhtml#c06-endnote-21)) Only two of these
    ciphertexts and a few pages of unencrypted text have so far been released. [Figure
    6-13](#figure6-13) shows one of the publicly circulated ciphertexts.
  prefs: []
  type: TYPE_NORMAL
- en: As can be seen, the sender of this note imitated the Zodiac Killer. The solution
    to the Scorpion cryptograms is unknown.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06013.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-13: The Scorpion cryptograms (of which this is only an excerpt) were
    created by a Zodiac Killer copycat.'
  prefs: []
  type: TYPE_NORMAL
- en: Henry Debosnys’s messages
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In 1882, a man named Henry Debosnys (1836–1883) settled in Essex County, New
    York.^([22](b06.xhtml#c06-endnote-22)) He soon started courting a widow named
    Elizabeth Wells, and after only a few weeks, the two married. A few months later,
    Elizabeth was found murdered, and Debosnys was arrested as the alleged perpetrator.
    It became clear that two earlier wives of Debosnys had also died at a young age
    under similarly strange circumstances. While in prison, Debosnys, who was a knowledgeable
    and well-educated man, created drawings, wrote poems, and also authored a few
    texts that appear to be encrypted (see [Figure 6-14](#figure6-14)). In 1883, he
    was condemned to death and subsequently hanged. The Adirondack History Museum
    in Elizabethtown, New York, has many interesting exhibits about the execution,
    as well as the actual ciphers created by Debosnys.
  prefs: []
  type: TYPE_NORMAL
- en: The story of Henry Debosnys has been best documented by Cheri Farnsworth in
    her 2010 book *Adirondack Enigma*.^([23](b06.xhtml#c06-endnote-23)) There are
    many open questions about this case, including more reliable information about
    the deaths of his two earlier wives.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c06/f06014.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-14: The cryptograms of condemned wife-murderer Henry Debosnys have
    never been solved.'
  prefs: []
  type: TYPE_NORMAL
- en: The four known cryptograms Debosnys left behind might shed light on these questions,
    but they have never been deciphered. Debosnys, an accomplished artist, used a
    large set of pictogram-style symbols to encode his messages, which suggests the
    application of a homophonic cipher. Although the Debosnys cryptograms are a spectacular
    crypto mystery, they have not received much attention in the international codebreaking
    community so far. Perhaps you, dear reader, might be able to solve them!
  prefs: []
  type: TYPE_NORMAL
