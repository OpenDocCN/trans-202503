- en: '5'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '5'
- en: 'PI SPY PART 1: HACKING WEBCAMS FOR SECRET SURVEILLANCE'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Pi 间谍第 1 部分：为秘密监控黑客摄像头
- en: IN THIS CHAPTER, YOU’LL USE THE RASPBERRY PI WITH A CLASSIC USB WEBCAM TO SPY
    FOR YOU. YOU’LL LEARN HOW TO SET UP THE WEBCAM WITH YOUR PI. THEN YOU’LL STREAM
    THE FEED FROM THE CAMERA TO A REMOTE DEVICE, LIKE YOUR PHONE, TO MAKE A CHEAP
    HOME-SURVEILLANCE SYSTEM. WITH THE WEBCAM, YOU CAN KEEP AN EYE ON YOUR PET, YOUR
    GARDEN, OR YOUR SIBLING. YOU CAN EVEN HIDE IT SOMEWHERE INCONSPICUOUS AND FIND
    OUT WHO KEEPS EATING ALL THE CHOCOLATE IN YOUR HOUSE!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将使用 Raspberry Pi 和经典的 USB 摄像头为您进行间谍监控。您将学习如何将摄像头与 Pi 配合使用。然后，您将把摄像头的实时画面传输到远程设备，比如您的手机，制作一个廉价的家庭监控系统。通过摄像头，您可以监控宠物、花园或您的兄弟姐妹。您甚至可以把它藏在一个不起眼的地方，找出是谁在偷吃家里的巧克力！
- en: WHAT YOU’LL NEED
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 您将需要的设备
- en: 'Here are the items you’ll need for this project:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是您在此项目中需要的物品：
- en: Raspberry Pi
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Raspberry Pi
- en: USB portable battery
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB 便携电池
- en: USB webcam
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB 摄像头
- en: Nowadays, most computers or computer monitors come with a built-in webcam, so
    the original USB models tend to be available online for a low cost. You might
    even find one hidden away at the back of a drawer. If you’re buying a webcam for
    this project, choose one from the list at *[https://elinux.org/RPi_USB_Webcams](https://elinux.org/RPi_USB_Webcams)*
    that’s proven to work with the Pi.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，大多数计算机或计算机显示器都配有内置摄像头，因此原始的 USB 型摄像头通常可以在网上低价购买。您甚至可能会在抽屉的角落找到一个。如果您购买摄像头用于此项目，建议选择来自
    *[https://elinux.org/RPi_USB_Webcams](https://elinux.org/RPi_USB_Webcams)* 的摄像头，它已被证明可以与
    Pi 配合使用。
- en: You’ll use a USB battery supply to provide power and make the spy camera portable—so
    it’s worth buying a branded battery. Even though they’re slightly more expensive,
    they’re of higher quality and will last longer than the budget options. You can
    hide the webcam in the shed or an empty cereal box in the house without having
    to worry about plugging it into a power socket. That way, a wire won’t be on display
    and give the game away.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 您将使用 USB 电池供电来为间谍摄像头提供电力，并使其便于携带——因此购买一个品牌电池是值得的。虽然它们略贵一些，但质量更高，使用寿命也比预算款更长。您可以将摄像头隐藏在棚子里或家里的一个空麦片盒中，无需担心插入电源插座。这样，电线就不会暴露出来，暴露了秘密。
- en: SETTING UP YOUR WEBCAM
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置您的摄像头
- en: You’ll start by attaching the webcam to your Pi and testing their compatibility.
    Boot up your Raspberry Pi and attach your monitor, keyboard, and mouse. You’ll
    remove these after you’ve completed the setup. Simply take the USB end of the
    webcam wire and plug it into one of the spare USB ports, as shown in [Figure 5-1](ch05.xhtml#ch05fig01).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先将摄像头连接到您的 Pi，并测试它们的兼容性。启动您的 Raspberry Pi，连接显示器、键盘和鼠标。完成设置后，您可以将这些设备移除。只需将摄像头线的
    USB 端插入其中一个备用 USB 端口，如[图 5-1](ch05.xhtml#ch05fig01)所示。
- en: Now check that the webcam is working using the following steps.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在通过以下步骤检查摄像头是否正常工作。
- en: '![Image](../images/05fig01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/05fig01.jpg)'
- en: '**FIGURE 5-1** Attaching the webcam'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 5-1** 安装摄像头'
- en: '**Recognize the webcam:** You can check that the Raspberry Pi has picked up
    the webcam by opening the terminal and entering the `ls` command. This command
    lists all the devices currently connected to the USB ports and looks something
    like this:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**识别摄像头：** 您可以通过打开终端并输入 `ls` 命令来检查 Raspberry Pi 是否识别到摄像头。此命令会列出所有当前连接到 USB
    端口的设备，输出类似于这样：'
- en: '[PRE0]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: My webcam is a Logic3, which you can see on the third line of the output. You
    can look for the brand name of your webcam or remove all other connected USB devices
    (except the keyboard) and see which device is still listed. If your webcam is
    not listed in the output, try restarting your Raspberry Pi and running the code
    again. If the webcam still doesn’t appear in the output, your model is probably
    incompatible and you’ll need another. The website provided earlier has a list
    of webcams that do and don’t work with the Pi.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我的摄像头是 Logic3，您可以在输出的第三行看到它。您可以查看您的摄像头品牌名称，或者移除所有其他连接的 USB 设备（除了键盘），看看哪些设备仍然列出。如果您的摄像头未列在输出中，请尝试重新启动
    Raspberry Pi 并重新运行代码。如果摄像头仍未显示在输出中，可能是您的型号不兼容，您需要更换一个。前面提供的网站列出了与 Pi 兼容和不兼容的摄像头。
- en: '**Install the webcam software:** Now you’ll install a program called *fswebcam*
    that will test that the camera is working correctly before moving on to the main
    project program. There’s nothing worse than typing your program and then finding
    it doesn’t work because the hardware is incompatible! Return to the terminal window
    and enter the following line to download and install the required software:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**安装摄像头软件：** 现在，你将安装一个名为*fswebcam*的程序，它将在继续主项目程序之前测试摄像头是否正常工作。没有什么比编写程序后发现硬件不兼容更糟糕的了！返回终端窗口，输入以下命令下载并安装所需的软件：'
- en: '[PRE1]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Take a test image:** Once the program has finished installing, you can test
    the webcam by taking an image. In the terminal, enter the following command to
    take a picture from the webcam and save it as an image file called *test*:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**拍摄测试图像：** 安装完程序后，你可以通过拍摄图像来测试摄像头。在终端中输入以下命令，从摄像头拍照并将其保存为名为*test*的图像文件：'
- en: '[PRE2]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To view the image, open your Pi *home* folder, find the *test.jpg* file, and
    double-click it. If it has taken a picture, the webcam is working correctly! [Figure
    5-2](ch05.xhtml#ch05fig02) shows the output to the terminal window when an image
    is successfully captured. If it hasn’t taken a picture, you might need to use
    a different webcam. Also, check that the webcam is connected and ensure that the
    code is correct.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要查看图像，打开你的Pi *home*文件夹，找到*test.jpg*文件，并双击它。如果已经拍照，说明摄像头工作正常！[图5-2](ch05.xhtml#ch05fig02)显示了图像成功捕获后终端窗口的输出。如果没有拍照，你可能需要使用不同的网络摄像头。另外，检查摄像头是否已连接，并确保代码正确无误。
- en: '![Image](../images/05fig02.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/05fig02.jpg)'
- en: '**FIGURE 5-2** Capturing the image from the webcam'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**图5-2** 从网络摄像头捕获图像'
- en: STREAMING A VIDEO FROM THE WEBCAM
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从网络摄像头流式传输视频
- en: Now that you know your webcam is installed and working correctly, you can write
    a short program to stream the image from the webcam to the Raspberry Pi. You’ll
    use a code package called *PyGame*, which is a set of Python modules designed
    for writing video games. However, it also includes computer graphics, videos,
    and sound libraries designed to be used with Python. You’ll borrow some functions
    and tools from PyGame to save you the trouble of writing them yourself.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道网络摄像头已经正确安装并工作，你可以编写一个简单的程序，将摄像头捕获的图像流传输到树莓派。你将使用一个名为*PyGame*的代码包，它是一个为编写视频游戏而设计的Python模块集。然而，它也包含了计算机图形、视频和声音库，专为与Python一起使用而设计。你将借用一些PyGame的函数和工具，以免自己编写这些功能。
- en: PyGame comes preinstalled on the Raspberry Pi operating system, so you don’t
    need to download it. Open a new Python file and save it as *pi_spy.py*. Then enter
    the code in [Listing 5-1](ch05.xhtml#ch05ex01), which is the first part of the
    code.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: PyGame在树莓派操作系统中预先安装，因此你不需要下载它。打开一个新的Python文件，并将其保存为*pi_spy.py*。然后输入[示例5-1](ch05.xhtml#ch05ex01)中的代码，这是代码的第一部分。
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**LISTING 5-1** The first part of the Pi spy code'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例5-1** Pi spy代码的第一部分'
- en: As with most programs, you begin by importing the required modules and PyGame
    libraries. First, you import the system module ❶, and then you import `pygame`.
    From `pygame`, you import the `pygame.camera` module ❷.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 和大多数程序一样，你首先需要导入所需的模块和PyGame库。首先，导入系统模块❶，然后导入`pygame`。从`pygame`中导入`pygame.camera`模块❷。
- en: Next, you initialize `pygame` and the camera commands ❸. This prepares `pygame`
    to run. The last line of code sets the size of the `pygame` window ❹. PyGame runs
    its programs in a separate window, and this line creates that window when you
    run the program. You can adjust the size by changing the width and height measurements,
    which are currently set to 320 × 240\. [Figure 5-3](ch05.xhtml#ch05fig03) shows
    that the window takes up only a small part of the screen. Some webcams will support
    higher resolutions. You’ll find several options at *[https://elinux.org/RPi_USB_Webcams](https://elinux.org/RPi_USB_Webcams)*.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，初始化`pygame`和摄像头命令❸。这为`pygame`的运行做好准备。代码的最后一行设置了`pygame`窗口的大小❹。PyGame将在一个单独的窗口中运行程序，这一行代码在运行程序时会创建该窗口。你可以通过调整当前设置为320
    × 240的宽度和高度来更改窗口的大小。[图5-3](ch05.xhtml#ch05fig03)显示窗口只占据了屏幕的一小部分。一些网络摄像头支持更高的分辨率。你可以在*[https://elinux.org/RPi_USB_Webcams](https://elinux.org/RPi_USB_Webcams)*找到几个选项。
- en: '![Image](../images/05fig03.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/05fig03.jpg)'
- en: '**FIGURE 5-3** The webcam window'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**图5-3** 网络摄像头窗口'
- en: Next, you’ll use PyGame to find the attached webcam and start it running. To
    do this, add the code in [Listing 5-2](ch05.xhtml#ch05ex02) to your program.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将使用PyGame找到连接的网络摄像头并启动它。为此，将[示例5-2](ch05.xhtml#ch05ex02)中的代码添加到你的程序中。
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**LISTING 5-2** The second part of the program: turning on the webcam'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**LISTING 5-2** 程序的第二部分：启动网络摄像头'
- en: First, you need PyGame to find the webcam by asking it to list available cameras.
    You create a variable to hold the results of the camera search ❶, which should
    return your single webcam. These results are stored in a list of one item, because
    there’s only one webcam.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要让PyGame通过请求列出可用的摄像头来找到网络摄像头。你创建一个变量来保存摄像头搜索的结果❶，这应该返回你的单个网络摄像头。结果将存储在一个包含一个项的列表中，因为这里只有一个网络摄像头。
- en: You then print the list of results ❷ to make sure your camera was found. If
    you have only one webcam connected to your Pi, it should be listed in position
    0\. Remember that list numbering always starts at 0 not 1.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你打印结果列表❷，以确保你的摄像头已经被找到。如果你只连接了一个网络摄像头，它应该列在位置0。记住，列表编号总是从0开始，而不是1。
- en: Then you set up the webcam and store the details in a variable named `webcam`
    so you can call it again more easily later in the program ❸. The name of the camera
    is pulled from the `cam_list` you got earlier by passing the list name with `[0]`,
    which tells Python to take the first item in the list held in position 0.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你设置网络摄像头并将详细信息存储在名为`webcam`的变量中，以便稍后可以更方便地再次调用它❸。摄像头的名称从你之前通过传递列表名`[0]`获得的`cam_list`中提取，这告诉Python从列表中位置0的第一个项目获取值。
- en: 'You also specify the dimensions of the webcam image. You can see that these
    dimensions are in parentheses, not square brackets, with a comma between values:
    this is a data type known as a *tuple*, and it’s like a list but with values that
    don’t change. Tuples are often referred to as *immutable*, which means that the
    data held inside them cannot be changed while the program is running. The code
    at ❸ changes the quality of the image displayed in the stream window. If you set
    the dimensions to 32 × 24, the video stream will look more pixelated, but the
    PyGame window remains the original size of 320 × 240\. To change it, you’d have
    to return to the code, edit the sizes, and then rerun the program.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你还指定了网络摄像头图像的尺寸。你可以看到这些尺寸在括号中，而不是方括号，值之间用逗号分隔：这是一种被称为*元组*的数据类型，它类似于列表，但其中的值是不可更改的。元组通常被称为*不可变*的，这意味着在程序运行时，元组内部的数据不能被更改。代码❸会改变显示在流窗口中的图像质量。如果你将尺寸设置为32
    × 24，视频流会看起来更像像素化的画面，但PyGame窗口保持原始的320 × 240大小。要更改它，你必须返回代码，编辑尺寸，然后重新运行程序。
- en: The last line of code tells the camera to start ❹, which turns it on.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的最后一行告诉摄像头开始工作❹，这会启动摄像头。
- en: Now for the final part of the program. Add the code in [Listing 5-3](ch05.xhtml#ch05ex03)
    to your program.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在进入程序的最后部分。将[Listing 5-3](ch05.xhtml#ch05ex03)中的代码添加到你的程序中。
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**LISTING 5-3** The final code for the Pi spy: streaming the video'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**LISTING 5-3** Pi间谍的最终代码：视频流'
- en: You begin by creating a `while` loop to keep the program running the instructions
    that follow ❶. The loop tells PyGame to keep pulling images from the webcam and
    displaying them onscreen.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你开始时创建一个`while`循环，以使程序继续运行后续的指令❶。该循环告诉PyGame不断从网络摄像头获取图像并在屏幕上显示。
- en: You then create a variable to store the image from the attached webcam ❷. The
    next line of code ❸ scales each image so it fits the screen size you entered earlier.
    In this case, it scales the image to 320 × 240 to match the dimensions you set
    at the start of the program in the `screen = pygame.display.set_mode((320,240),0)`
    variable. If you change either the window size or the scale, make sure those measurements
    match.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然后创建一个变量来存储从附加的网络摄像头获取的图像❷。下一行代码❸将每张图像缩放以适应之前输入的屏幕大小。在此情况下，它将图像缩放为320 × 240，以匹配在程序开始时`screen
    = pygame.display.set_mode((320,240),0)`变量中设置的尺寸。如果你更改了窗口大小或缩放比例，请确保这些尺寸匹配。
- en: To draw the video image on your screen, you use a PyGame function called `blit()`
    ❹. Your display is made up of millions of tiny dots called *pixels*, which can
    be turned on or off. When you display an image onscreen, your software manages
    which pixels are on or off as well as their colors. Pixels also make up your image.
    The video from your webcam is made up of lots of still images played together
    one after the other, similar to a flip book or animation. *Blitting* takes a full
    copy of the pixels from one of the images and copies them to the pixels on your
    screen, displaying the image. Then, when the program loops, the next image is
    captured from the webcam and saved. The pixels are updated using the `blit()`
    function to make a video.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要在屏幕上绘制视频图像，你可以使用PyGame中的`blit()`函数❹。你的显示屏由数百万个微小的点组成，这些点被称为*像素*，它们可以打开或关闭。当你在屏幕上显示一张图像时，软件会管理哪些像素是开着的，哪些是关着的，以及它们的颜色。像素还构成了你的图像。来自网络摄像头的视频由许多静态图像组成，这些图像一个接一个地播放，类似于翻页书或动画。*Blitting*操作会将某一图像的所有像素复制到屏幕上的像素，显示该图像。然后，当程序循环时，会从摄像头捕获下一张图像并保存。使用`blit()`函数更新像素，生成视频。
- en: The final line of code ❺ updates the PyGame window, displaying the webcam stream
    for you to watch. The program then loops again, collects a new image, blits it,
    and then displays it on your screen.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的最后一行❺更新了PyGame窗口，显示了网络摄像头的流视频，供你观看。程序然后再次循环，收集一张新图像，进行blitting，然后显示在你的屏幕上。
- en: Save your program and run it! Remember that pressing **F5** will save and execute
    the program. A small PyGame window will pop open, and you’ll see a live stream
    from the webcam.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 保存你的程序并运行！记住，按下**F5**将保存并执行程序。一个小的PyGame窗口将弹出，你会看到来自网络摄像头的实时视频流。
- en: LIVE STREAMING TO A DEVICE
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将实时视频流传输到设备
- en: So far, your Pi streaming video is from the same location as your Pi, which
    is fine if you’re sitting at your desk with your Pi and can watch the PyGame window.
    But say you want to spy at a different location. For example, what if you want
    to set up a webcam at a window that overlooks the front door of your house so
    you can see visitors approach? Or perhaps you want to hide the webcam in the kitchen
    and watch what your pets do when you leave them home alone. You could even use
    the webcam as a simple bedroom monitor. This next program shows you how to make
    a portable spy camera for such projects.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你的Pi的视频流来自与你的Pi同一位置，这没问题，如果你坐在桌前并能观看PyGame窗口。但假设你想在不同的地点进行监控。比如，你想在窗户旁安装一个摄像头，监控家门口的情况，以便看到访客接近？或者你可能想把摄像头藏在厨房，看看你离开时宠物们在做什么。你甚至可以把摄像头用作简单的卧室监视器。接下来的程序将教你如何为此类项目制作一个便携式间谍摄像头。
- en: 'Make sure your webcam is still plugged into the Pi USB port. Then you’ll need
    to download and configure a handy piece of software called *motion*, which enables
    you to stream images from your webcam to a particular device, like your phone
    or tablet. For this, you need to make sure your Raspberry Pi *and* the viewing
    device are connected to your home network. Follow these steps:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的摄像头仍然插在树莓派的USB端口上。接着，你需要下载并配置一款叫做*motion*的实用软件，它能让你将摄像头的图像流传输到某个设备上，比如你的手机或平板电脑。为此，你需要确保树莓派*和*观看设备都已连接到你的家庭网络。按照以下步骤操作：
- en: '**Install the software:** To download and install the *motion* program, open
    the terminal and enter the following command:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**安装软件：** 要下载并安装*motion*程序，请打开终端并输入以下命令：'
- en: '[PRE6]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Find your IP address:** To access the live stream from another device, you’ll
    need your Raspberry Pi’s IP address. An *IP address* identifies each device on
    a network. This is how your Pi, games console, and smart TV can all be online
    at the same time and not accidentally receive the wrong data. To find your Pi’s
    IP address in the terminal, enter the following:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**找到你的IP地址：** 要从其他设备访问实时视频流，你需要知道你的树莓派IP地址。*IP地址*是用来标识网络上每个设备的地址。就是这个地址使得你的树莓派、游戏机和智能电视能够同时在线，而不会意外收到错误的数据。在终端中查找你的树莓派IP地址，输入以下命令：'
- en: '[PRE7]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Or enter this:'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者输入以下命令：
- en: '[PRE8]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This command will list lots of data related to the network connections. Look
    for the line that begins with `wlan0`. On the second line, you’ll find the IP
    address, which begins with `inet` and looks like this: `192.168.1.751`. This is
    your Pi’s personal IP address. Write it down, because you’ll need it later.'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个命令会列出与网络连接相关的许多数据。查找以`wlan0`开头的行。在第二行，你会找到IP地址，前面有`inet`，并像这样显示：`192.168.1.751`。这是你的树莓派的个人IP地址。把它写下来，因为稍后你会用到它。
- en: '**Create a daemon to run the program:** In computing terms, a *daemon* is a
    program that runs in the background, doing its thing. You, the user, don’t need
    to control it directly. The webcam stream doesn’t require any user interaction
    and can run as a background process; so you’ll set it to run as a daemon by adding
    a line to the motion code file. In the terminal window, enter this command:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建守护进程以运行程序：** 在计算机术语中，*守护进程* 是一种在后台运行的程序，自动执行任务。您作为用户，无需直接控制它。网络摄像头流媒体不需要任何用户交互，可以作为后台进程运行；因此，您需要通过向
    motion 代码文件中添加一行来将其设置为守护进程。在终端窗口中输入以下命令：'
- en: '[PRE9]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This command opens a text file called *motion* that you can add instructions
    to. The motion software will recognize the *motion* file. At the bottom of the
    file, add the following line of code:'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该命令会打开一个名为 *motion* 的文本文件，您可以在其中添加指令。motion 软件会识别 *motion* 文件。在文件的底部，添加以下代码行：
- en: '[PRE10]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This code tells the daemon to start the webcam server and run it as a background
    process, as shown in [Figure 5-4](ch05.xhtml#ch05fig04). Press CTRL-X to exit,
    and then when prompted, press **Y** to save the file.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这段代码指示守护进程启动网络摄像头服务器，并将其作为后台进程运行，如[图 5-4](ch05.xhtml#ch05fig04)所示。按 CTRL-X 退出，系统会提示时，按
    **Y** 保存文件。
- en: '![Image](../images/05fig04.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/05fig04.jpg)'
- en: '**FIGURE 5-4** The webcam server window'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 5-4** 网络摄像头服务器窗口'
- en: '**Change settings in the configuration file:** Before you start the stream,
    you need to make a few more changes in the motion *configuration* file, *motion.conf*.
    Here you can add or alter the code to change the program’s behavior. This file
    is large and contains lots of settings, so let’s walk through it so you don’t
    get lost. Enter the following command in the terminal to open *motion.conf*:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更改配置文件中的设置：** 在开始流媒体之前，您需要在运动*配置*文件 *motion.conf* 中进行一些更改。在这里，您可以添加或修改代码来更改程序的行为。这个文件很大，包含很多设置，所以我们需要逐步讲解，以免让您迷失。请在终端中输入以下命令以打开
    *motion.conf*：'
- en: '[PRE11]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Configure these settings:'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 配置这些设置：
- en: '**Turn on the daemon:** To turn on the daemon, find the `daemon off` entry
    near the start of the file and change it to daemon on.'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**启动守护进程：** 要启动守护进程，请找到文件开头附近的 `daemon off` 项，并将其更改为 daemon on。'
- en: '**Adjust the quality:** Adjust the image quality of the stream to somewhere
    between 1 and 50, where 50 is the highest quality. A higher quality streams clearer
    images but will put more strain on the Raspberry Pi and your network. If the value
    is too high for the Pi to handle, it might crash. I recommend setting the quality
    to 20 to begin with. Then you can change it later if you want a clearer image.
    Locate the `Live Stream Server` section, find the `stream_quality` line, and set
    it to 20 so it reads as follows:'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**调整画质：** 将流媒体的图像质量调整为 1 到 50 之间，其中 50 为最高质量。更高的质量会呈现更清晰的图像，但会对树莓派和网络带来更大负担。如果该值过高，树莓派可能无法处理，从而导致崩溃。我建议初始设置为
    20。之后，如果您想要更清晰的图像，可以再做调整。找到 `Live Stream Server` 部分，找到 `stream_quality` 行，并将其设置为
    20，确保它显示如下：'
- en: '[PRE12]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**Adjust the frame rate:** Adjusting the *frame rate* affects the number of
    frames is displayed each second. The higher the number of frames is, the smoother
    the video will play. The lower the number is, the jerkier the image will appear.
    However, sometimes setting it too high can use up too much bandwidth and make
    the connection slow, especially if other people are using your network. Adjust
    the frame capture to around 25, which will give you a near-live stream with a
    delay of 0.2 seconds. Locate the setting `stream_maxrate` and set it to 50. Again,
    you can adjust these settings later to suit your network capability.'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**调整帧率：** 调整*帧率*会影响每秒显示的帧数。帧数越高，视频播放越流畅。帧数越低，图像会显得更加卡顿。然而，有时设置得太高会消耗过多带宽并导致连接变慢，尤其是在其他人也在使用您的网络时。将帧捕获设置为大约
    25，这将使您获得接近实时流的效果，延迟约为 0.2 秒。找到设置项 `stream_maxrate` 并将其设置为 50。同样，您可以稍后根据您的网络能力调整这些设置。'
- en: '**Change the size of the video displayed (optional):** If you’re viewing the
    feed on a smartphone or tablet, you might need to make the video window size smaller.
    In that case, locate the `width` and `height` entries in the configuration file
    and adjust the numbers to suit your device. You might have to experiment with
    a few numbers before you get the right size.'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**更改显示的视频大小（可选）：** 如果您在智能手机或平板电脑上查看视频，您可能需要将视频窗口大小调整得更小。在这种情况下，找到配置文件中的 `width`
    和 `height` 项，并调整数字以适应您的设备。您可能需要尝试几个不同的数字，直到找到合适的大小。'
- en: '**Final settings:** Set the `stream_localhost` line to off to stream the webcam
    images to your mobile device rather than just the Raspberry Pi, which is the local
    host. After completing these changes, press CTRL-X. You’ll be prompted to save
    the changes to the configuration file. Press **Y** to select *yes*. To change
    some of the settings shown in [Figure 5-5](ch05.xhtml#ch05fig05) again later,
    just open the file using the `sudo nano /etc/motion/motion.conf` command. Then
    make your required adjustments, exit, and save the file.'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**最终设置：** 将 `stream_localhost` 行设置为关闭，以便将摄像头图像流传输到你的移动设备，而不仅仅是树莓派（本地主机）。完成这些更改后，按
    CTRL-X。系统会提示你保存配置文件的更改。按 **Y** 选择 *是*。如果以后想要再次更改[图 5-5](ch05.xhtml#ch05fig05)中显示的一些设置，只需使用
    `sudo nano /etc/motion/motion.conf` 命令打开文件。然后进行所需的调整，退出并保存文件。'
- en: '![Image](../images/05fig05.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/05fig05.jpg)'
- en: '**FIGURE 5-5** The settings window'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 5-5** 设置窗口'
- en: '**Start motion:** To start the web server and capture a video feed, enter this
    command:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**启动运动检测：** 要启动网络服务器并捕获视频流，请输入以下命令：'
- en: '[PRE13]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**Access the video stream:** To access the video, open a browser window on
    the device you’re streaming to. In the address bar, enter the Raspberry Pi’s IP
    address (the one you wrote down earlier); at the end of the address, add the port
    number :8081. The complete address should look similar to `192.168.1.56:8081`.
    When you press ENTER, the browser should look up your Pi’s IP address and connect
    to it. The Pi and motion program will respond and start streaming the live video
    from the webcam to your device, as shown in [Figure 5-6](ch05.xhtml#ch05fig06).'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**访问视频流：** 要访问视频，打开你要流式传输到的设备上的浏览器窗口。在地址栏中，输入树莓派的 IP 地址（即你之前记录下来的地址）；在地址的末尾，添加端口号
    :8081。完整的地址应该类似于 `192.168.1.56:8081`。按下 ENTER 键后，浏览器会查找你树莓派的 IP 地址并与之连接。树莓派和运动程序将响应并开始将来自摄像头的实时视频流传输到你的设备，正如[图
    5-6](ch05.xhtml#ch05fig06)所示。'
- en: '![Image](../images/05fig06.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/05fig06.jpg)'
- en: '**FIGURE 5-6** Streaming live video to a browser'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 5-6** 向浏览器传输实时视频'
- en: Now you need to find somewhere you can hide your Pi and the camera to start
    spying; just make your camera has a clear view! You can remove the monitor, mouse,
    and keyboard and place your Raspberry Pi spy cam in a suitable location. Remember
    to ensure that your Raspberry Pi stays within range of your Wi-Fi signal so the
    images can be streamed to your mobile device.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你需要找到一个地方来隐藏你的树莓派和摄像头开始间谍活动；只要确保摄像头有清晰的视野！你可以移除显示器、鼠标和键盘，将树莓派间谍摄像头放置在一个合适的位置。记得确保树莓派处于
    Wi-Fi 信号范围内，这样图像才能传输到你的移动设备上。
- en: STOPPING AND RESTARTING MOTION
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 停止和重新启动运动检测
- en: 'Once you’ve finished using the web stream, you can return to your Raspberry
    Pi and reconnect the monitor, mouse, and keyboard. Then open the terminal and
    enter this command to stop the program and end the stream:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你完成了网页流的使用，你可以回到你的树莓派并重新连接显示器、鼠标和键盘。然后打开终端并输入以下命令来停止程序并结束流：
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: If you can’t access a monitor and keyboard, just remove the power from the Raspberry
    Pi to halt the stream.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你无法访问显示器和键盘，只需切断树莓派的电源以停止流。
- en: 'Sometimes your motion software might stall, and the video will stop streaming.
    If this occurs, the image will be static or frozen. In that case, restart the
    software by using the following command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你的运动软件可能会卡住，视频流会停止。如果发生这种情况，图像将变为静态或冻结。此时，通过以下命令重新启动软件：
- en: '[PRE15]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You should also restart anytime you adjust the configuration file settings.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你调整配置文件设置时，也应重新启动软件。
- en: If you’re using your webcam covertly, remember to make sure that no one is around
    before accessing your Pi and restarting the program. Otherwise, you’ll give away
    the location of your hidden camera.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在秘密使用你的摄像头，请记得在访问你的 Pi 并重新启动程序之前，确保周围没有人。否则，你会暴露隐藏摄像头的位置。
- en: WRAPPING UP
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: Now you have a compact spy camera to do with what you will. You’ll be using
    the Pi’s image capabilities again in [Chapter 11](ch11.xhtml#ch11) to set up a
    nature box that will take surreptitious photos of anything that triggers its sensors.
    For now, try playing with the settings to see what resolution, frame rate, and
    size work best for your system.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你拥有了一个紧凑的间谍摄像头，可以自由使用它。你将在[第 11 章](ch11.xhtml#ch11)中再次使用树莓派的图像能力，设置一个自然盒子，用来拍摄任何触发其传感器的物体的隐秘照片。现在，尝试调整设置，看看什么分辨率、帧率和大小最适合你的系统。
