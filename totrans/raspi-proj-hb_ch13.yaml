- en: '**13'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**13'
- en: Burglar Detector with Photo Capture**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**带有照片捕捉的防盗探测器**'
- en: This project will teach you to use the Raspberry Pi Camera Module v2, which,
    along with the PIR motion sensor, will detect and photograph trespassers. When
    the motion sensor detects movement, it triggers an event that takes a photo so
    you know who was in your house while you were out.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目将教您如何使用树莓派相机模块v2，该模块与PIR运动传感器一起工作，用来检测并拍摄闯入者。当运动传感器检测到运动时，它会触发拍照事件，让您知道在您不在家时是谁进入了您的家。
- en: '![image](../images/f0163-01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0163-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需部件**'
- en: Raspberry Pi
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派
- en: Breadboard
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 面包板
- en: Raspberry Pi Camera Module v2
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派相机模块v2
- en: PIR mot ion sensor HC-SR501
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: PIR运动传感器HC-SR501**
- en: Pushbut ton
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮
- en: Jumper wires
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 跳线
- en: '**INTRODUCING THE RASPBERRY PI CAMERA MODULE V2**'
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**介绍树莓派相机模块v2**'
- en: The Raspberry Pi Camera Module v2, shown in [Figure 13-1](ch13.xhtml#ch13fig1),
    features an 8 MP Sony IMX219 image sensor with a fixed-focus lens. It’s capable
    of 3280×2464 pixel static images and supports video with resolutions of 1080p
    at 30 frames, 720p at 60 frames, and 640×480 at 90 frames—all of which means it’s
    a pretty good camera for its size! You’ll just use the static image capabilities
    in this project.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图13-1](ch13.xhtml#ch13fig1)所示，树莓派相机模块v2配备了8百万像素的索尼IMX219图像传感器和固定焦距镜头。它支持3280×2464像素的静态图像，并支持1080p
    30帧、720p 60帧和640×480 90帧的视频分辨率——这些都意味着它是一个相当不错的相机，尤其是它的体积！在这个项目中，您只会使用它的静态图像功能。
- en: '![image](../images/f0164-01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0164-01.jpg)'
- en: '**FIGURE 13-1:** Raspberry Pi Camera Module v2'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13-1：** 树莓派相机模块v2'
- en: This camera is compatible with all Raspberry Pi models—1, 2, 3, and zero—and
    comes with a 15 cm ribbon cable that makes it easy to connect to the CSI port
    on the Raspberry Pi, designed to interface with cameras. If you want your camera
    to reach farther than 15 cm from your Pi, you should be able to find and purchase
    longer cables.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这款相机与所有树莓派型号（1、2、3和Zero）兼容，配有15厘米的排线，使其能够轻松连接到树莓派的CSI端口，该端口专为连接相机设计。如果您希望相机距离树莓派超过15厘米，您应该能够找到并购买更长的电缆。
- en: The Raspberry Pi Camera Module v2 is one of the most popular Raspberry Pi add-ons
    because it gives users an affordable way to take still photographs and record
    video in full HD. One interesting example of a Camera Module v2 project comes
    from the Naturebytes community, which provides kits to remotely capture wildlife
    photos. [Figure 13-2](ch13.xhtml#ch13fig2) shows the wildlife camera in action.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派相机模块v2是最受欢迎的树莓派附加组件之一，因为它为用户提供了以实惠的价格拍摄静态照片和录制全高清视频的方式。一个有趣的树莓派相机v2项目示例来自Naturebytes社区，该社区提供远程捕捉野生动物照片的套件。[图13-2](ch13.xhtml#ch13fig2)展示了这款野生动物相机的工作场景。
- en: '![image](../images/f0164-02.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0164-02.jpg)'
- en: '**FIGURE 13-2:** Raspberry Pi camera with PIR motion sensor pointed at a bird
    feeder'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13-2：** 配备PIR运动传感器的树莓派相机对准鸟食器'
- en: The Naturebytes kit is also equipped with a PIR motion sensor, so if a bird
    perches on the feeder in [Figure 13-2](ch13.xhtml#ch13fig2), it will trigger the
    camera to take a photo of the bird. You’ll use the same principles for this project’s
    burglar detector.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Naturebytes套件还配备了一个PIR运动传感器，因此如果一只鸟停在[图13-2](ch13.xhtml#ch13fig2)中的喂食器上，它将触发相机拍摄鸟的照片。您将在这个项目的防盗探测器中使用相同的原理。
- en: '**BUILDING THE BURGLAR DETECTOR**'
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建防盗探测器**'
- en: The burglar detector consists of a PIR motion sensor, a pushbutton, and a camera
    module you’ll connect to your Pi. You’ll use the built-in picamera library, which
    makes it simple to control the camera.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 防盗探测器由PIR运动传感器、按钮和您将连接到树莓派的相机模块组成。您将使用内置的picamera库，它使得控制相机变得非常简单。
- en: '**Enabling the Camera**'
  id: totrans-22
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**启用相机**'
- en: You need to enable your Pi’s camera software before you can use the camera module.
    In the desktop environment, go to the main menu and select **Preferences** ▸ **Raspberry
    Pi Configuration**. You should see a window like the one in [Figure 13-3](ch13.xhtml#ch13fig3).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用相机模块之前，您需要启用树莓派的相机软件。在桌面环境中，进入主菜单，选择**首选项** ▸ **树莓派配置**。您应该能看到类似于[图13-3](ch13.xhtml#ch13fig3)的窗口。
- en: '![image](../images/f0165-01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0165-01.jpg)'
- en: '**FIGURE 13-3:** Enabling the camera software'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13-3：** 启用相机软件'
- en: Select **Enabled** on the Camera row, then click **OK**, and you’re ready to
    go.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在相机行中选择**启用**，然后点击**确定**，就可以开始使用了。
- en: '**Connecting the Camera**'
  id: totrans-27
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**连接相机**'
- en: With the camera software enabled, shut down your Pi and then connect the camera
    to the CSI port. Make sure the camera is connected with the blue letters facing
    up and oriented as shown in [Figure 13-4](ch13.xhtml#ch13fig4). Then start up
    your Pi again.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 启用相机软件后，关闭你的 Pi，然后将相机连接到 CSI 端口。确保相机连接时，蓝色字母朝上，且按照 [图 13-4](ch13.xhtml#ch13fig4)
    中的方式对齐。然后再次启动你的 Pi。
- en: '![image](../images/f0166-01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0166-01.jpg)'
- en: '**FIGURE 13-4:** Connecting the Raspberry Pi camera to the CSI port'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13-4：** 将树莓派相机连接到 CSI 端口'
- en: '**WIRING THE CIRCUIT**'
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**电路连接**'
- en: '**NOTE**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Be careful when moving the camera. The ribbon is very fragile, and if it touches
    the GPIOs, they may permanently damage your camera. Try using some modeling clay
    or sticky tack to secure the camera.*'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*移动相机时要小心。排线非常脆弱，如果它接触到 GPIO，可能会永久性损坏相机。尽量使用一些模型粘土或粘性物质来固定相机。*'
- en: With the camera connected, follow these instructions to wire the rest of the
    circuit, using [Figure 13-5](ch13.xhtml#ch13fig5) as a reference.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 连接相机后，按照这些说明连接其余的电路，参考 [图 13-5](ch13.xhtml#ch13fig5)。
- en: Connect a GND pin to the breadboard GND rails.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 GND 引脚连接到面包板的 GND 导轨。
- en: Insert a pushbutton into the breadboard so that it straddles the center divide.
    Connect one lead to GND and the other lead on the same side of the button to GPIO
    2.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一个按钮插入面包板，使其横跨中心分隔。将一条引线连接到 GND，另一条引线连接到按钮同一侧的 GPIO 2。
- en: Wire the PIR motion sensor with the connections shown in the following table.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照下表所示连接 PIR 动作传感器。
- en: '| **PIR MOTION SENSOR** | **RASPBERRY PI** |'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **PIR 动作传感器** | **树莓派** |'
- en: '| --- | --- |'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| GND | GND |'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | GND |'
- en: '| OUT | GPIO 4 |'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| OUT | GPIO 4 |'
- en: '| VCC | 5 V |'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| VCC | 5 V |'
- en: '![image](../images/f0167-01.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0167-01.jpg)'
- en: '**FIGURE 13-5:** The burglar detector circuit'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 13-5：** 入室盗窃探测器电路'
- en: '**WRITING THE SCRIPT**'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**编写脚本**'
- en: 'To control the camera, you’ll use the built-in picamera library. It’s a very
    straightforward library, so this script will be a piece of cake. Here’s an overview
    of what the code should do:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制相机，你将使用内置的 picamera 库。这是一个非常简单的库，因此这个脚本将非常容易。下面是代码应该完成的任务概述：
- en: Initialize the camera.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化相机。
- en: Take a photo when the PIR motion sensor detects movement.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 PIR 动作传感器检测到运动时，拍摄照片。
- en: Save the photos in your *Desktop* folder.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将照片保存在 *Desktop* 文件夹中。
- en: Name the photos incrementally so you know what order they were taken in—for
    example, *image_1.jpg*, *image_2.jpg*, and so on.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为照片命名时使用递增的方式，以便知道它们拍摄的顺序——例如 *image_1.jpg*、*image_2.jpg*，依此类推。
- en: Stop the camera when the pushbutton is pressed. If you don’t include this feature,
    you won’t be able to exit the camera preview that pops up on your screen.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当按下按钮时停止相机。如果不包含这个功能，你将无法退出在屏幕上弹出的相机预览。
- en: '**Entering the Script**'
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**进入脚本**'
- en: Go to your *Projects* folder and create a new folder called *Cameras*. Then
    open **Python 3 (IDLE)** and go to **File** ▸ **New** to create a new script called
    *burglar_detector.py*, and copy the following code into it (remember that you
    can download all the scripts at *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 进入你的 *Projects* 文件夹，创建一个名为 *Cameras* 的新文件夹。然后打开 **Python 3 (IDLE)**，选择 **文件**
    ▸ **新建**，创建一个名为 *burglar_detector.py* 的新脚本，并将以下代码复制进去（记得你可以在 *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*
    下载所有脚本）。
- en: '**NOTE**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*You can’t name any of your files* picamera.py *because picamera is a Python
    library name and cannot be used.*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*你不能将任何文件命名为* picamera.py *，因为 picamera 是一个 Python 库的名称，不能使用。*'
- en: '[PRE0]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: First you import the libraries you need ➊; as we’ve said, the program uses the
    picamera library to control the camera. You should be familiar with all the other
    modules used here from previous projects. Then you create objects to refer to
    the pushbutton, the PIR motion sensor, and the camera ➋, and initialize the camera
    with `camera.start_preview()` ➌. Depending on how your camera is oriented, you
    might also need to rotate it 180 degrees with `camera.rotation = 180` so that
    it doesn’t take the photos upside down. If your image is upside down when you
    test this code, go back and set the rotation to `0` or comment out this line.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 首先导入所需的库 ➊；如我们所述，程序使用 picamera 库来控制相机。你应该对所有其他在此项目中使用的模块都很熟悉。然后，你创建对象来引用按钮、PIR
    动作传感器和相机 ➋，并使用 `camera.start_preview()` 初始化相机 ➌。根据相机的方向，你可能还需要用 `camera.rotation
    = 180` 将其旋转 180 度，这样拍摄的照片才不会是倒置的。如果你测试这段代码时照片倒过来，回过头来将旋转设置为 `0` 或注释掉这一行。
- en: Next, you initialize an `i` variable that starts at `0` ➍. The `take_photo()`
    function, defined at ➏, will use this variable to count and number the images,
    incrementing the number in the filename by one with each picture taken.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你初始化一个从`0`开始的`i`变量 ➍。定义在➏处的`take_photo()`函数将使用这个变量来计数并编号图像，每拍一张照片，文件名中的数字会递增。
- en: You then define the `stop_camera()` function that stops the camera with the
    `camera.stop_preview()` method ➎. At ➏, you define the `take_photo()` function
    we just mentioned, which takes a photo. For this, you use the `camera.capture()`
    method, specifying the directory you want to save the image to inside the parentheses.
    In this case, we’re saving the images in the *Desktop* folder and naming the images
    `image_%s.jpg`, where `%s` is replaced with the number we incremented earlier
    in `i`. If you want to save your files to a different folder, replace this directory
    with the path to your chosen folder.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 接着，你定义了`stop_camera()`函数，该函数使用`camera.stop_preview()`方法停止相机 ➎。在➏处，你定义了我们刚才提到的`take_photo()`函数，它用于拍照。在这个函数中，你使用了`camera.capture()`方法，并在括号内指定了你想要保存图像的目录。在此示例中，我们将图像保存到*Desktop*文件夹，并将图像命名为`image_%s.jpg`，其中`%s`会被先前在`i`中递增的数字替代。如果你想将文件保存到其他文件夹，只需将该目录替换为你选择的文件夹路径。
- en: You then impose a 10-second delay ➐, meaning the camera takes photos at 10-second
    intervals for as long as the PIR sensor detects movement. Feel free to increase
    or decrease the delay time, but be careful to not overload the Pi with tons of
    images by making the delay time too small.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你设置一个10秒的延迟 ➐，这意味着在PIR传感器检测到运动时，相机会以10秒的间隔拍摄照片。你可以随意增加或减少延迟时间，但要小心不要通过将延迟时间设置得太小，从而让Pi负担过重，生成大量图像。
- en: At ➑, you define the behavior to trigger the `stop_camera()` function when you
    press the pushbutton. This function stops the camera preview and exits the program.
    The `exit()` function pops up a window asking if you want to close the program;
    to close it, just click **OK**. Finally, you tell the camera to take a photo by
    triggering the `take_photo()` function when motion is detected ➒.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在➑处，你定义了一个行为，当按下按钮时触发`stop_camera()`函数。此函数停止相机预览并退出程序。`exit()`函数会弹出一个窗口，询问你是否要关闭程序；只需点击**OK**即可关闭。最后，当检测到运动时，你通过触发`take_photo()`函数来让相机拍照
    ➒。
- en: '**Running the Script**'
  id: totrans-62
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**运行脚本**'
- en: Press **F5** or go to **Run** ▸ **Run Module** to run the script. While the
    script is running, you should see a preview of what the camera sees on your screen.
    To shut down the camera preview, press the pushbutton and click **OK** in the
    window that pops up.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 按下**F5**键或前往**运行** ▸ **运行模块**来运行脚本。当脚本运行时，你应该能在屏幕上看到相机所看到的预览画面。要关闭相机预览，按下按钮并在弹出的窗口中点击**OK**。
- en: Congratulations! Your burglar detector is ready to catch some burglars. Place
    the burglar detector in a strategic place and come back later to check any saved
    photos. [Figure 13-6](ch13.xhtml#ch13fig6) shows a photo taken by our burglar
    detector, catching someone stealing a computer from our lab.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你的防盗探测器已准备好捕捉小偷了。将防盗探测器放置在一个战略位置，稍后回来查看保存的照片。[图13-6](ch13.xhtml#ch13fig6)展示了一张由我们的防盗探测器拍摄的照片，捕捉到了有人从我们的实验室偷电脑。
- en: '![image](../images/f0170-01.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0170-01.jpg)'
- en: '**FIGURE 13-6:** Picture taken with the burglar detector'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**图13-6：** 防盗探测器拍摄的照片'
- en: '**TAKING IT FURTHER**'
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**更进一步**'
- en: 'As you’ve seen, projects with cameras are fun! Here’s an idea on how to improve
    your security system: redesign your project so that, when the sensor detects motion,
    the Raspberry Pi takes a photo, sends you an email notification, and sounds an
    alarm. You should already know how to do all of this using the skills you’ve learned
    from [Projects 9](ch09.xhtml#ch09)–[12](ch12.xhtml#ch12).'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，带有相机的项目非常有趣！这里有一个改进你的安全系统的想法：重新设计你的项目，使得当传感器检测到运动时，Raspberry Pi不仅拍照，还会给你发送电子邮件通知，并发出警报。你应该已经掌握了如何使用从[项目9](ch09.xhtml#ch09)到[12](ch12.xhtml#ch12)中学到的技能来完成这些操作。
