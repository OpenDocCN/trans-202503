- en: '![](Images/chapterart.png)'
  prefs: []
  type: TYPE_IMG
- en: '5'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Recognizing Movie Posters
  prefs: []
  type: TYPE_NORMAL
- en: '![Alphabet-I](Images/Alphabet-I.png)n the last two chapters, you collected
    training images to create an ML system that could identify pictures of a certain
    object by learning to recognize the colors, shapes, and patterns that the training
    images had in common.'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you’ll use the same technique to train a model to recognize
    the style of a picture rather than its subject. For example, if you collect examples
    of watercolor paintings in one training bucket, and examples of pen drawings in
    another training bucket, you can train an ML model to recognize whether a picture
    is a watercolor or a pen drawing.
  prefs: []
  type: TYPE_NORMAL
- en: The most common example of how this technique is used in real life is in search
    engines. Image search engines can recognize the visual style of images, allowing
    you to filter image search results by type (clip art, line drawings, photos, and
    so on). These search engines use an ML model that has been trained with a lot
    of examples of pictures of different styles to be able to recognize the type of
    each search result.
  prefs: []
  type: TYPE_NORMAL
- en: Some people use ML systems to create entirely new pictures. This involves training
    a computer to recognize the patterns found in works of art of a certain style,
    and then letting the computer use what it has learned to generate new works of
    art in that style. In 2018, an AI system created a painting that was auctioned
    as a work of art for over $400,000\.
  prefs: []
  type: TYPE_NORMAL
- en: This sort of project is called *computational creativity* *and has been used
    to create all sorts of things. AI systems have composed new pieces of music and
    even invented recipes and meals.*
  prefs: []
  type: TYPE_NORMAL
- en: '*In this chapter, you’ll train an ML model that can recognize the genre of
    a work of art based only on a picture of it.'
  prefs: []
  type: TYPE_NORMAL
- en: Think about what posters for certain movie genres have in common. For example,
    thriller movie posters often have dark colors and large letters. Romance movie
    posters often have light colors and flowery letters. Science-fiction movie posters
    often have spaceships, stars, planets, and a black background.
  prefs: []
  type: TYPE_NORMAL
- en: We all learn these patterns, often without realizing it, so that we can recognize
    a movie’s genre just from seeing its poster (see [Figure 5-1](#figure5-1)).
  prefs: []
  type: TYPE_NORMAL
- en: In this project, you’ll train the computer to recognize what works of art in
    a particular genre have in common. For example, do posters for action movies have
    anything in common? The box art for racing video games? The cover art for rap
    albums? You’ll see whether a computer can learn to recognize these patterns so
    that it can identify the genre of a work of art, such as a book, based just on
    a picture of its cover or poster.
  prefs: []
  type: TYPE_NORMAL
- en: '![f05001](Images/f05001.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 5-1:](#figureanchor5-1) ML models can learn to recognize movie genres.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Build Your Project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Choose a type of art that can be grouped by genre and is represented by a graphical
    cover or poster.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, you could choose:'
  prefs: []
  type: TYPE_NORMAL
- en: Books, which are represented by book coversBooks, which are represented by book
    coversBooks, which are represented by book coversBooks, which are represented
    by book coversBooks, which are represented by book coversBooks, which are represented
    by book covers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Movies, which are represented by movie posters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Video games, which are represented by box art
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Music albums, which are represented by album covers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You’ll need to collect pictures of your chosen works of art to be the training
    examples for this project. Look for websites that group books, movies, games,
    or albums by genre. If you’ve chosen books, the website for a bookstore or library
    is a useful source of training examples. If you’ve chosen music albums or video
    games, retailer websites are good places to try.
  prefs: []
  type: TYPE_NORMAL
- en: Next, choose a few genres that you want to train the computer to be able to
    recognize. Training the computer will be easier if you choose genres that are
    very obviously different. For example, it’s easier to recognize the difference
    between the posters for action movies and romance movies than it is to recognize
    the difference between posters for action movies and adventure movies.
  prefs: []
  type: TYPE_NORMAL
- en: For the screenshots in this project, I trained an ML model to recognize three
    genres of movies—action, family, and drama—based on their movie posters.
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve chosen your type of art and genres, you can start training your
    model.
  prefs: []
  type: TYPE_NORMAL
- en: Train Your Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Create a new ML project, name it `Judge a book by its cover`, and set it to
    learn to recognize images.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Train**, as shown in [Figure 5-2](#figure5-2).![f05002](Images/f05002.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 5-2:](#figureanchor5-2) Train is the first phase of an ML project.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Add new label**, as shown in [Figure 5-3](#figure5-3), and enter the
    name of your first genre.![f05003](Images/f05003.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 5-3:](#figureanchor5-3) Click **Add new label** to create training
    buckets for your genres.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Open a second window in your web browser (usually by selecting **File**▶**New
    Window**) and arrange your two windows side by side, as shown in [Figure 5-4](#figure5-4).
    In your second window, search for pictures that match your first genre.![f05004](Images/f05004.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 5-4:](#figureanchor5-4) Arrange your two web browser windows side by
    side.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Drag a picture (of the book cover, movie poster, game box, or album cover) for
    your first genre and drop it in the training bucket in your project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You should see a thumbnail version of the picture in your training bucket, as
    shown in [Figure 5-5](#figure5-5). If you don’t, try dragging and dropping the
    picture again.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f05005](Images/f05005.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 5-5:](#figureanchor5-5) My first training example for recognizing action
    movies'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Repeat step 5 until you have at least 10 examples of works of that genre, as
    shown in [Figure 5-6](#figure5-6).![f05006](Images/f05006.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 5-6:](#figureanchor5-6) Training examples of action movie posters'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Repeat steps 3 through 6 for all of the genres that you want your model to be
    able to recognize, as shown in [Figure 5-7](#figure5-7).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Try to collect a similar number of examples for each genre. In other words,
    avoid having lots of examples in one bucket but hardly any in another bucket.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f05007](Images/f05007.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 5-7:](#figureanchor5-7) Training examples for recognizing different
    types of movie posters'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Back to project** in the top-left corner of the screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Learn & Test**, as shown in [Figure 5-8](#figure5-8).![f05008](Images/f05008.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 5-8:](#figureanchor5-8) Learn & Test is the second phase of an ML project.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Train new machine learning model**, as shown in [Figure 5-9](#figure5-9).![f05009](Images/f05009.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 5-9:](#figureanchor5-9) Click **Train new machine learning model**
    to start the training process.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The computer will use the examples that you’ve collected to look for patterns
    in the covers or posters from different genres. Training the model may take a
    few minutes, depending on how many examples you’ve collected, but you can move
    on to the next step of the project in your second web browser window while you
    wait.
  prefs: []
  type: TYPE_NORMAL
- en: Prepare Your Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You need to test whether your ML model is able to recognize a genre from a picture
    it hasn’t seen before. To test the model, you’ll save some new pictures that you
    haven’t used for training and then create a script in Scratch to test your model
    with them.
  prefs: []
  type: TYPE_NORMAL
- en: Search for more pictures of each genre you’ve chosen and save them to your computer.
    To save the photos, right-click the image and select **Save Picture** or **Save
    Image As**, as shown in [Figure 5-10](#figure5-10). x![f05010](Images/f05010.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 5-10:](#figureanchor5-10) Saving test photos to your computer'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Save these test photos in a folder on your computer, as shown in [Figure 5-11](#figure5-11).
    The more pictures you save, the more you can use to test your ML model.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f05011](Images/f05011.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 5-11:](#figureanchor5-11) Preparing test photos'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Back to project** in the top-left corner of the screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Make**, as shown in [Figure 5-12](#figure5-12).![f05012](Images/f05012.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 5-12:](#figureanchor5-12) Make is the third phase of an ML project.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Scratch 3**, and then click **Open in Scratch 3** to open a new window
    with Scratch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Click the cat sprite (**Sprite1**) in the sprites pane at the bottom right
    of the screen. Then, click the **Costumes** tab at the top left.*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**   Move your mouse pointer over the Choose a Costume icon in the bottom-left
    corner. Click **Upload Costume** and find the folder on your computer where you
    saved your downloaded test pictures.*   Select all of the test photos you saved
    in step 1 to upload them all at once as costumes for the cat sprite.*   Change
    the name of the *cat sprite from **Sprite1** by entering `test images` in the
    Sprite text box, shown in [Figure 5-13](#figure5-13).![f05013](Images/f05013.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 5-13:](#figureanchor5-13) Create a sprite to hold the test images.*
    **   You’ll need some button sprites for your Scratch project. Move your mouse
    pointer over the Choose a Sprite icon in the bottom-right corner.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To draw your own buttons, click **Paint** to access the drawing and coloring
    tools. Don’t worry if you make a mistake while painting—just click the blue undo
    arrow next to the costume name.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If you don’t like drawing, click **Choose a Sprite** and choose one from the
    Scratch Sprites Library, as shown in [Figure 5-14](#figure5-14).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Make one button for each of your genres.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f05014](Images/f05014.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 5-14:](#figureanchor5-14) Access the Sprites Library by clicking **Choose
    a Sprite**.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Rename your button sprites to match the genres, as shown in [Figure 5-15](#figure5-15).
    I named my three buttons action, family, and drama.![f05015](Images/f05015.png)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Figure 5-15:](#figureanchor5-15) Create buttons for each genre. *   Click
    the **Costumes** tab and select the Text tool (which looks like a T) to add labels
    to the buttons. Use the Fill tool to choose the label color. Make your labels
    match the names of the genres, as shown in [Figure 5-16](#figure5-16).*   Next,
    you’ll create three variables. Click the **Code** tab, click **Variables** in
    the Toolbox, and then click **Make a Variable**, as shown in [Figure 5-17](#figure5-17).![f05016](Images/f05016.png)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[Figure 5-16:](#figureanchor5-16) I’ve used the Text and Fill tools to add
    white labels to each of the buttons.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Two of the variables count how many times you agree or disagree with the computer’s
    decision. Name the first variable `agree` and the second variable `disagree`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The third variable stores the computer’s choice for the genre of the most recent
    picture. Name this variable `computer`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f05017](Images/f05017.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 5-17:](#figureanchor5-17) Click **Make a Variable** to create the project’s
    three variables. *   Make sure the checkboxes next to the `agree` and `disagree`
    variables are checked. This displays them on the Stage so you can see the score
    while you test your project. Uncheck the box next to the **computer** variable.*   Click
    the **test images** sprite (the sprite with your test pictures as costumes).*   Copy
    the scripts shown in [Figure 5-18](#figure5-18).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the `switch costume` block, use the drop-down arrow to set the costume to
    the first of your test photos (in [Figure 5-18](#figure5-18), my first test photo
    was called *image001*).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f05018](Images/f05018.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 5-18:](#figureanchor5-18) Code for recognizing the movie posters'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the first of your genre button sprites, as shown in [Figure 5-19](#figure5-19).![f05019](Images/f05019.png)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Figure 5-19:](#figureanchor5-19) Genre buttons *   Copy the scripts shown
    in [Figure 5-20](#figure5-20), changing the `action` block to match the label
    of your first genre button.![f05020](Images/f05020.png)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[Figure 5-20:](#figureanchor5-20) Code for the first genre button'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The computer will use this code when the user clicks the button to guess the
    genre. If the user’s choice matches what the model recognized, the `agree` count
    will increase by 1\. If it doesn’t match, the `disagree` count will increase instead.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the next genre button sprite and copy the same scripts from step 17, as
    shown in [Figure 5-21](#figure5-21). As before, match the genre to the label on
    the button. For my project, the second button was for family movies.![f05021](Images/f05021.png)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Figure 5-21:](#figureanchor5-21) Code for the second genre button *   Repeat
    step 17 until all of your genre buttons have a copy of the script, as shown in
    [Figure 5-22](#figure5-22).![f05022](Images/f05022.png)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[Figure 5-22:](#figureanchor5-22) Every genre button needs a copy of the script.**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Now it’s time to test your ML project!'
  prefs: []
  type: TYPE_NORMAL
- en: Test Your Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Try to find someone else to test your ML project, since it’s better for the
    person testing the project to not have seen the test pictures that you downloaded.
  prefs: []
  type: TYPE_NORMAL
- en: Once they click the Green Flag, Scratch will show them each test picture and
    ask them to decide what genre they think the work of art is. Your Scratch code
    will keep a count of how many times they agree with your ML model and how many
    times they disagree, as shown in [Figure 5-23](#figure5-23).
  prefs: []
  type: TYPE_NORMAL
- en: '![f05023](Images/f05023.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 5-23:](#figureanchor5-23) Testing your ML model'
  prefs: []
  type: TYPE_NORMAL
- en: Ask whoever tests your project to use *only* the picture to decide what to click,
    even if they recognize the work of art and know something about it already.
  prefs: []
  type: TYPE_NORMAL
- en: Review and Improve Your Project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this project, you trained an ML model to recognize the visual styles that
    are commonly found in images from different genres.
  prefs: []
  type: TYPE_NORMAL
- en: If your ML model performed badly, with a lot more disagrees than agrees, try
    adding more examples to your training buckets in the Train phase and then training
    a new ML model with them in the Learn & Test phase. In general, the more training
    examples an ML model has to learn from, the better the results.
  prefs: []
  type: TYPE_NORMAL
- en: What You Learned
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, you trained another ML model to recognize pictures. In the
    previous two chapters, you trained image recognition systems to recognize objects
    in a picture. This time, you used one to recognize the style, not the subject,
    of a picture.
  prefs: []
  type: TYPE_NORMAL
- en: You also saw that one way we commonly measure the effectiveness of an ML system
    is to compare the answers that it gives to test questions with the answers people
    give.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next chapter, you’ll learn about another useful image recognition application:
    handwriting recognition.***'
  prefs: []
  type: TYPE_NORMAL
