- en: '**12'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**12'
- en: SOFTWARE TEST DOCUMENTATION**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 软件测试文档**
- en: '![Image](Images/com.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/com.jpg)'
- en: This chapter covers software test documentation, focusing primarily on the Software
    Test Case (STC) and Software Test Procedure (STP) documents. As has been the case
    for the previous chapters, this discussion is based on IEEE Standards, specifically
    the IEEE Standard for Software and System Test Documentation (IEEE Std 829-2008,
    hereafter *Std 829*^([1](ch19_footnote.xhtml#ch12fn1))).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论软件测试文档，主要关注软件测试用例（STC）和软件测试程序（STP）文档。如前几章所述，本讨论基于IEEE标准，特别是IEEE软件和系统测试文档标准（IEEE
    Std 829-2008，以下简称*Std 829*^([1](ch19_footnote.xhtml#ch12fn1)))。
- en: 12.1 The Software Test Documents in Std 829
  id: totrans-4
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 12.1 标准829中的软件测试文档
- en: 'Std 829 actually describes many additional documents above and beyond the STC
    and STP, including:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 标准829实际上描述了许多超出STC和STP的附加文档，包括：
- en: Master Test Plan (MTP)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主测试计划（MTP）
- en: '*Level* Test Plan (LTP)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*级别* 测试计划（LTP）'
- en: '*Level* Test Design (LTD)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*级别* 测试设计（LTD）'
- en: '*Level* Test Case (LTC)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*级别* 测试用例（LTC）'
- en: '*Level* Test Procedure (LTPr)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*级别* 测试程序（LTPr）'
- en: '*Level* Test Log (LTL)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*级别* 测试日志（LTL）'
- en: Anomaly Report (AR)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常报告（AR）
- en: '*Level* Interim Test Status Report (LITSR)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*级别* 临时测试状态报告（LITSR）'
- en: '*Level* Test Report (LTR)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*级别* 测试报告（LTR）'
- en: Master Test Report (MTR)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主测试报告（MTR）
- en: Note that these are not actual document names—the word *level* is a placeholder
    for the scope or extent of software testing being documented. The scope could
    be at the level of *components* or *component integration*, apply to the entire
    *system*, or focus on *acceptance*. For example, *Level* Test Plan could refer
    to a Component (or Unit) Test Plan, Component Integration (or simply Integration)
    Test Plan, System (or System Integration) Test Plan, or an Acceptance Test Plan.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这些并非实际的文档名称——*级别* 只是表示软件测试文档范围或程度的占位符。范围可能是在*组件* 或*组件集成*的层次上，适用于整个*系统*，或专注于*验收*。例如，*级别*
    测试计划可能指代组件（或单元）测试计划、组件集成（或简单的集成）测试计划、系统（或系统集成）测试计划，或验收测试计划。
- en: '**NOTE**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Test levels are explained further in “Software Development Testing Levels”
    on [page 265](ch12.xhtml#page_265).*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*测试级别的详细解释请参见《软件开发测试级别》，见[第265页](ch12.xhtml#page_265)。*'
- en: 'In all, Std 829 defines 31 different document types, but these are the main
    ones. The majority of these documents exist to support software management activities.
    Because this is a book on personal software engineering rather than software project
    management, this chapter won’t go into detail on most of them. Instead, we’ll
    concentrate on those *level* test documents that pertain to actual software testing—specifically,
    the *Level* Test Case, *Level* Test Procedure, *Level* Test Log, and Anomaly Report
    document types. We will cover all four *level* classifications—component, component
    integration, system, and acceptance—though the latter two are the main test documents
    used in this chapter. The differences between the *level* test documents are relatively
    minor, so this chapter applies the umbrella names mentioned earlier: Software
    Test Cases and Software Test Procedures. Keep in mind, however, that while these
    are common software engineering terms, Std 829 refers only to the *level* test
    documents.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，标准829定义了31种不同的文档类型，但这些是主要的。大多数这些文档存在的目的是支持软件管理活动。因为这是一本关于个人软件工程的书，而不是软件项目管理书籍，所以本章不会详细讨论其中的大多数文档。相反，我们将重点讨论与实际软件测试相关的那些*级别*
    测试文档——具体而言，*级别* 测试用例、*级别* 测试程序、*级别* 测试日志和异常报告文档类型。我们将涵盖所有四种*级别* 分类——组件、组件集成、系统和验收——尽管后两者是本章中主要使用的测试文档。这些*级别*
    测试文档之间的差异相对较小，因此本章应用前面提到的总称：软件测试用例和软件测试程序。请记住，尽管这些是常见的软件工程术语，标准829仅涉及*级别* 测试文档。
- en: '***12.1.1 Process Support***'
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.1.1 过程支持***'
- en: Although this chapter focuses on software testing, Std 829 describes the testing
    process in far more general terms. In particular, the testing process also handles
    the verification and validation of each document step in the development process.
    Specifically, this means that the testing process tests the documentation as well
    as the actual software.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本章集中在软件测试上，标准829描述了更为一般的测试过程。特别是，测试过程还涉及开发过程中每个文档步骤的验证和确认。具体来说，这意味着测试过程不仅测试实际的软件，还测试文档本身。
- en: For the SyRS and SRS, the verification step ensures that the requirements actually
    satisfy customer needs (and *only* satisfy customer needs, without gold plating).
    For the SDD, the verification step ensures that the SDD covers all the requirements.
    For the STC, the verification step ensures that each requirement has one or more
    test cases that test the requirement. For the STP, the verification ensures that
    the set of test procedures fully covers all the test cases.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于SyRS和SRS，验证步骤确保需求真正满足客户需求（并且*仅*满足客户需求，不进行额外的无谓增加）。对于SDD，验证步骤确保SDD涵盖所有需求。对于STC，验证步骤确保每个需求都有一个或多个测试用例来测试该需求。对于STP，验证步骤确保测试程序集合完全覆盖所有测试用例。
- en: In addition to documentation, Std 829 discusses test procedures for verifying
    acquisitions (such as purchases of third-party libraries and computing hardware),
    administering RFPs (Requests for Proposals), and many other activities. These
    testing activities are very important. As noted previously, though, these are
    largely management activities rather than software development activities, so
    they’re mentioned only briefly here.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 除了文档，Std 829还讨论了验证采购（例如购买第三方库和计算硬件）、管理RFP（提案请求）以及许多其他活动的测试程序。这些测试活动非常重要。然而，如前所述，这些主要是管理活动，而非软件开发活动，因此在此仅简要提及。
- en: Std 829 states that testing needs to support the processes of management, acquisition,
    supply, development, operation, and maintenance. This chapter will concentrate
    on the development and operation processes (and, to a limited extent, the maintenance
    processes, which are largely an iteration of the development and operation processes).
    For more details on the other processes, see Std 829, IEEE/EIA Std 12207.0-1996
    [B21], and ISO-IEC-IEEE-29148-2011.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Std 829规定，测试需要支持管理、采购、供应、开发、运营和维护的流程。本章将重点讨论开发和运营流程（并在有限程度上讨论维护流程，后者在很大程度上是开发和运营流程的迭代）。有关其他流程的更多详细信息，请参见Std
    829、IEEE/EIA Std 12207.0-1996 [B21]和ISO-IEC-IEEE-29148-2011。
- en: Note that Std 829 allows you to combine and omit some of the testing documents.
    This means that you could have only a single document and still conform to Std
    829\. In reality, the final number of documents you create depends on the size
    of the project (large projects will require more documentation) and the turnaround
    you expect (fast projects will have fewer documents).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Std 829允许您合并和省略一些测试文档。这意味着您可以只创建一个文档，同时仍符合Std 829规范。实际上，您创建的最终文档数量取决于项目的规模（大型项目需要更多文档）和预期的周转速度（快速项目的文档较少）。
- en: '***12.1.2 Integrity Levels and Risk Assessment***'
  id: totrans-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.1.2 完整性等级和风险评估***'
- en: 'Std 829 defines four *integrity levels* that describe the importance or sensitivity
    to risk for a piece of software:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Std 829定义了四个*完整性等级*，描述了软件组件对风险的敏感性或重要性：
- en: '**Catastrophic (level 4)** This level means that the software must execute
    properly, or something disastrous could occur (such as death, irreparable harm
    to the system, environmental damage, or a huge financial loss). There are no workarounds
    for catastrophic system failures. An example is a braking failure in a software-controlled
    self-driving vehicle.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**灾难性（等级4）** 这一等级意味着软件必须正常执行，否则可能会发生灾难性的后果（例如死亡、系统的无法修复损坏、环境破坏或巨大的经济损失）。对于灾难性的系统故障没有应急措施。例如，软件控制的自动驾驶车辆中的刹车故障。'
- en: '**Critical (level 3)** This level means that software must execute properly,
    or there could be serious problems including permanent injury, major performance
    degradation, environmental damage, or financial loss. A partial workaround may
    be possible for a critical system failure. An example is the transmission-controlling
    software in the self-driving vehicle being unable to shift out of second gear.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**关键（等级3）** 这一等级意味着软件必须正常执行，否则可能会出现严重问题，包括永久性伤害、重大性能下降、环境破坏或经济损失。对于关键系统故障，可能存在部分应急措施。例如，自动驾驶车辆中负责传动控制的软件无法从二档换到空档。'
- en: '**Marginal (level 2)** This level means that the software must execute properly,
    or there may be (minor) incorrect results produced and some functionality lost.
    Workarounds to solve the problem are possible. Continuing with the self-driving-vehicle
    example, a software failure that prevents the infotainment center from operating
    is a marginal problem.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**边际性（2级）** 这一级别意味着软件必须正常执行，否则可能会产生（轻微的）错误结果并丧失一些功能。可以通过解决方法来解决问题。继续以自动驾驶汽车为例，阻止信息娱乐中心正常运行的软件故障就是一个边际性问题。'
- en: '**Negligible (level 1)** This level means that the software must execute properly,
    or else some minor functionality might not exist in the system (or the software
    might not be as “polished” as it should be). Negligible issues generally don’t
    require a workaround and can be safely ignored until an update comes along. An
    example is a spelling mistake on the touchscreen of the infotainment center in
    the self-driving vehicle.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**微不足道（1级）** 这一级别意味着软件必须正常执行，否则系统中可能会缺少某些次要功能（或者软件可能不像应有的那样“精致”）。微不足道的问题通常不需要解决方法，可以安全地忽略，直到更新发布为止。一个例子是自动驾驶汽车中信息娱乐中心触摸屏的拼写错误。'
- en: The higher the level, the greater the importance of the testing process; that
    is, level 4 (catastrophic) items demand higher-quality and more intensive testing
    than level 1 (negligible) items. Integrity levels, then, become the basis for
    determining the number, quality, and depth of test cases you create. For a feature
    in the program that could have catastrophic results in the event of a failure,
    you want a fair number of test cases that exercise that feature with considerable
    depth. For features that have negligible potential consequences, you might not
    have any test cases or only very shallow tests (such as a cursory review).^([2](ch19_footnote.xhtml#ch12fn2))
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 级别越高，测试过程的重要性就越大；也就是说，4级（灾难性）问题比1级（微不足道）问题需要更高质量和更密集的测试。因此，完整性级别成为决定测试用例数量、质量和深度的依据。对于在失败时可能导致灾难性后果的程序功能，你需要创建足够数量的测试用例，并对该功能进行深入测试。对于潜在后果微不足道的功能，可能不需要任何测试用例，或者只进行非常浅显的测试（例如草率的检查）。^([2](ch19_footnote.xhtml#ch12fn2))
- en: '*Risk assessment* is an attempt to determine where in your system failures
    are likely to occur, their expected frequency, and the associated costs. While
    risk assessment is predictive by its very nature (which means it won’t be perfect),
    you can often identify those parts of the program that are more likely to exhibit
    problems (such as complex sections of code, code produced by less experienced
    engineers, code from questionable sources like open source libraries found on
    the internet, and code using poorly understood algorithms). If you can categorize
    the likelihood of a problem as *likely*, *probable*, *occasional*, or *unlikely*,
    you can help identify the code that warrants more stringent testing (and, conversely,
    code that requires minimal testing).'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*风险评估* 是试图确定系统中哪些地方可能发生故障、其预期频率以及相关的成本。虽然风险评估本质上是预测性的（这意味着它不会是完美的），但你通常可以识别出那些更可能出现问题的程序部分（例如复杂的代码部分、经验较少的工程师编写的代码、来源可疑的代码，如来自互联网的开源库代码，以及使用理解不完全的算法的代码）。如果你能将问题的可能性分类为
    *可能*、*有可能*、*偶尔* 或 *不太可能*，你可以帮助识别出需要更严格测试的代码（反之亦然，哪些代码只需要最少的测试）。'
- en: You can combine the integrity level and risk assessment levels in a matrix to
    produce a risk assessment scheme, as shown in [Table 12-1](ch12.xhtml#ch12tab1).
    In this example, a value of 4 denotes extreme importance, and a value of 1 indicates
    little importance.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将完整性级别和风险评估级别结合在一个矩阵中，生成风险评估方案，如[表 12-1](ch12.xhtml#ch12tab1)所示。在这个示例中，值为4表示极其重要，值为1表示几乎不重要。
- en: '**Table 12-1:** Risk Assessment Scheme'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 12-1：** 风险评估方案'
- en: '| **Consequence** | **Likelihood** |  |  |  |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| **后果** | **可能性** |  |  |  |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '|  | Likely | Probable | Occasional | Unlikely |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '|  | 可能 | 有可能 | 偶尔 | 不太可能 |'
- en: '| Catastrophic | 4 | 4 | 3.5 | 3 |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 灾难性 | 4 | 4 | 3.5 | 3 |'
- en: '| Critical | 4 | 3.5 | 3 | 2.5 |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 严重 | 4 | 3.5 | 3 | 2.5 |'
- en: '| Marginal | 3 | 2.5 | 1.5 | 1 |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 边际性 | 3 | 2.5 | 1.5 | 1 |'
- en: '| Negligible | 2 | 1.5 | 1 | 1 |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 微不足道 | 2 | 1.5 | 1 | 1 |'
- en: Std 829 does not mandate using an integrity level or risk assessment scheme
    in your test documentation, though it does consider this to be best practice.
    If you do use an integrity level, Std 829 does not require that you use the IEEE-recommended
    scheme (you could, for example, use a finer-grained integrity level with values
    from 1 to 10). However, if you “roll your own” integrity level, the IEEE recommends
    that you document a mapping from your integrity levels to those suggested by the
    IEEE so that readers can easily compare them.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Std 829并不强制要求在测试文档中使用完整性层级或风险评估方案，尽管它认为这是最佳实践。如果使用完整性层级，Std 829也不要求使用IEEE推荐的方案（例如，您可以使用一个更精细的完整性层级，取值范围为1到10）。然而，如果您“自行设计”完整性层级，IEEE建议您记录从您的完整性层级到IEEE建议层级的映射，以便读者能够轻松进行对比。
- en: '***12.1.3 Software Development Testing Levels***'
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.1.3 软件开发测试层级***'
- en: 'In addition—and in contrast—to the integrity levels just described, the IEEE
    defines four testing levels, each of which generally describes the scope or extent
    of software testing being documented:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，与刚才描述的完整性层级相对，IEEE定义了四个测试层级，每个层级通常描述正在记录的软件测试的范围或程度：
- en: '**Component (also known as** ***unit*****)****^([3](ch19_footnote.xhtml#ch12fn3))**
    This level deals with subroutines, functions, modules, and subprograms at the
    lowest code level. *Unit testing*, for example, consists of testing individual
    functions and other small program units independent of the rest of the program.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**组件（也称为** ***单元*****)****^([3](ch19_footnote.xhtml#ch12fn3))** 这一层级处理最低代码层级的子程序、函数、模块和子程序。例如，*单元测试*包括独立于程序其余部分的测试单个函数和其他小的程序单元。'
- en: '**Component integration (also known as simply** ***integration*****)** This
    level is the point at which you begin combining individual units together to form
    a larger portion of the system, though not necessarily the whole system. Integration
    testing, for example, occurs when you combine (pretested) units to see if they
    play well together (that is, pass appropriate parameters, return appropriate function
    results, and so on).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**组件集成（也简称为** ***集成*****)** 这一层级是您开始将单独的单元组合在一起，形成系统的更大部分的地方，但不一定是整个系统。例如，集成测试发生在您将（已测试的）单元组合在一起，检查它们是否能良好协作（即，是否传递适当的参数、返回适当的函数结果等）。'
- en: '**System (also known as** ***system integration*****)** This level of testing
    is the ultimate form of integration testing—you’ve integrated all the program
    units together and formed the complete system. Unit testing, integration testing,
    and system integration testing are typically tests the developers perform before
    releasing a complete system outside the development group.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**系统（也称为** ***系统集成*****)** 这一测试层级是集成测试的最终形式——您已将所有程序单元整合在一起，形成完整的系统。单元测试、集成测试和系统集成测试通常是开发人员在将完整系统交给开发组外的人员之前执行的测试。'
- en: '**Acceptance (variants include** ***factory acceptance*** **and** ***site acceptance*****)**
    *Acceptance testing* *(AT)* is post-development. As its name implies, it refers
    to how the customer determines whether the system is acceptable. Depending on
    the system, there may be a couple of acceptance testing variants. *Factory acceptance
    testing (FAT)* occurs on systems prior to leaving the manufacturer (typically
    on the factory floor, hence the name). Even if a product is pure software, it
    can have a factory acceptance test where the customer’s representatives come to
    test the software under the watchful eye of the software development team. This
    allows the team to make quick changes to the system if the customer discovers
    minor errors during the FAT.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**验收（变体包括** ***工厂验收*** **和** ***现场验收*****)** *验收测试*（*AT*）是开发后的测试。顾名思义，它指的是客户如何确定系统是否可以接受。根据系统的不同，可能会有几种验收测试的变体。*工厂验收测试（FAT）*发生在系统离开制造商之前（通常在工厂车间进行，因此得名）。即使一个产品是纯软件，它也可以进行工厂验收测试，客户的代表会来，在软件开发团队的监督下测试软件。这允许团队在客户在FAT过程中发现小错误时迅速做出更改。'
- en: A *site acceptance test* *(SAT)* is performed at the customer’s site after the
    system is installed. For hardware-based systems, this ensures that the hardware
    is installed properly and the software is functioning as intended. For pure software
    systems, the SAT provides a final check (after a possible AT or FAT) that the
    software is usable by the system’s end users.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*现场验收测试* *(SAT)* 在系统安装后于客户现场进行。对于硬件系统，这确保硬件安装正确，软件按预期功能运行。对于纯软件系统，SAT提供了最终检查（可能是在AT或FAT之后），确保软件能够被系统的最终用户使用。'
- en: '**12.2 Test Plans**'
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**12.2 测试计划**'
- en: A software test plan is a document that describes the scope, organization, and
    activities associated with the testing process. This is largely a managerial overview
    of how the testing will take place, the resources testing will require, schedules,
    necessary tools, and objectives. This chapter won’t consider test plans in detail,
    as they are beyond the scope of this book; however, the following sections will
    present outlines provided in IEEE Std 829-2008 as a reference. For more details
    on these test plans, consult Std 829.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 软件测试计划是描述测试过程的范围、组织结构和相关活动的文档。这主要是对测试将如何进行、所需资源、时间表、必要工具和目标的管理概述。本章不会详细讨论测试计划，因为它们超出了本书的范围；然而，接下来的部分将提供IEEE
    Std 829-2008中提供的概要作为参考。如需了解更多关于这些测试计划的详细信息，请参阅Std 829。
- en: '***12.2.1 Master Test Plan***'
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.2.1 主测试计划***'
- en: The *Master Test Plan (MTP)* is an organization-wide top-level management document
    that tracks the testing process across a whole project (or set of projects). Software
    engineers are rarely involved directly with the MTP, which is largely an umbrella
    document that the QA (Quality Assurance) department uses to track quality aspects
    of a project. A project manager or project lead might be aware of the MTP—and
    might contribute to it during schedule and resource development—but the development
    team rarely sees the MTP except in passing.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '*主测试计划（MTP）* 是一份跨项目（或多个项目）跟踪测试过程的组织级高层管理文档。软件工程师通常不会直接参与MTP的工作，它更多是一个由QA（质量保证）部门使用的综合性文档，用于跟踪项目的质量方面。项目经理或项目负责人可能会了解MTP，并在日程和资源开发过程中有所贡献，但开发团队通常只在偶然的情况下看到MTP。'
- en: 'The following outline comes from Section 8 of IEEE Std 829-2008 (and uses the
    IEEE section numbers):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下大纲来自IEEE Std 829-2008第8节（并使用IEEE章节编号）：
- en: 1 Introduction
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 1 引言
- en: 1.1 Document Identifier
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1 文档标识符
- en: 1.2 Scope
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2 范围
- en: 1.3 References
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3 参考文献
- en: 1.4 System Overview and Key Features
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 1.4 系统概述与关键特性
- en: 1.5 Test Overview
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5 测试概述
- en: 1.5.1 Organization
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5.1 组织结构
- en: 1.5.2 Master Test Schedule
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5.2 主测试进度表
- en: 1.5.3 Integrity Level Schema
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5.3 完整性等级架构
- en: 1.5.4 Resources Summary
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5.4 资源摘要
- en: 1.5.5 Responsibilities
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5.5 职责
- en: 1.5.6 Tools, Techniques, Methods, and Metrics
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5.6 工具、技术、方法与度量标准
- en: 2 Details of the Master Test Plan
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 2 主测试计划详情
- en: 2.1 Test Processes Including Definition of Test Levels
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1 测试过程，包括测试等级的定义
- en: '2.1.1 Process: Management'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.1 过程：管理
- en: '2.1.1.1 Activity: Management of Test Effort'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.1.1 活动：测试工作管理
- en: '2.1.2 Process: Acquisition'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.2 过程：采购
- en: '2.1.2.1 Activity: Acquisition Support Test'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.2.1 活动：采购支持测试
- en: '2.1.3 Process: Supply'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.3 过程：供应
- en: '2.1.3.1 Activity: Planning Test'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.3.1 活动：规划测试
- en: '2.1.4 Process: Development'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.4 过程：开发
- en: '2.1.4.1 Activity: Concept'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.4.1 活动：概念
- en: '2.1.4.2 Activity: Requirements'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.4.2 活动：需求
- en: '2.1.4.3 Activity: Design'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.4.3 活动：设计
- en: '2.1.4.4 Activity: Implementation'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.4.4 活动：实施
- en: '2.1.4.5 Activity: Test'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.4.5 活动：测试
- en: '2.1.4.6 Activity: Install/Checkout'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.4.6 活动：安装/检查
- en: '2.1.5 Process: Operation'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.5 过程：操作
- en: '2.1.5.1 Activity: Operational Test'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.5.1 活动：操作测试
- en: '2.1.6 Process: Maintenance'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.6 过程：维护
- en: '2.1.6.1 Activity: Maintenance Test'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1.6.1 活动：维护测试
- en: 2.2 Test Documentation Requirements
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2 测试文档要求
- en: 2.3 Test Administration Requirements
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 2.3 测试管理要求
- en: 2.4 Test Reporting Requirements
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 2.4 测试报告要求
- en: 3 General
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 3 一般
- en: 3.1 Glossary
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 术语表
- en: 3.2 Document Change Procedures and History
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2 文档变更程序和历史
- en: Many of these sections contain information common to IEEE documents (for example,
    see the SRS and SDD samples in previous chapters). As the MTP is beyond the scope
    of this chapter, please consult Std 829 for specific descriptions of each section
    in this outline.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这些部分的许多内容是IEEE文档中常见的信息（例如，参见前几章中的SRS和SDD示例）。由于MTP超出了本章的范围，请参阅Std 829，以获取此大纲中每一节的具体描述。
- en: '***12.2.2* Level *Test Plan***'
  id: totrans-94
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.2.2* 级别* 测试计划***'
- en: 'A Level *Test Plan (LTP)* refers to a set of test plans based on the development
    state. As this chapter noted earlier, each document in the set generally describes
    the scope or extent of software test being documented: Component Test Plan (aka
    Unit Test Plan, or UTP), Component Integration Test Plan (aka Integration Test
    Plan, or ITP), System Test Plan (aka System Integration Test Plan, or SITP), and
    Acceptance Test Plan (ATP; may include a Factory Acceptance Test Plan [FATP] or
    Site Acceptance Test Plan [SATP]).^([4](ch19_footnote.xhtml#ch12fn4))'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 级别 *测试计划（LTP）* 是指基于开发状态的一组测试计划。正如本章前面所述，文档集中的每个文档通常描述了正在记录的软件测试的范围或程度：组件测试计划（也称为单元测试计划，或UTP）、组件集成测试计划（也称为集成测试计划，或ITP）、系统测试计划（也称为系统集成测试计划，或SITP）和验收测试计划（ATP；可能包括工厂验收测试计划
    [FATP] 或现场验收测试计划 [SATP]）。^([4](ch19_footnote.xhtml#ch12fn4))
- en: LTPs are also managerial/QA documents, but the development team (even to the
    level of individual software engineers) often has input on their creation and
    use, because these documents reference detailed features of the software design.
    These test plans are not guiding documents—that is, a software engineer wouldn’t
    necessarily reference these documents while actually testing the software—but
    they can’t be created without development team feedback. Like the MTP, LTPs provide
    a road map for the creation of the test case and test procedure documents (of
    primary interest to the development and testing teams) and outline how to perform
    the tests. LTPs provide a good high-level view of the testing process, especially
    for external organizations interested in its quality.^([5](ch19_footnote.xhtml#ch12fn5))
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: LTPs 也是管理/质量保证文档，但开发团队（甚至到个别软件工程师的层面）通常会参与其创建和使用，因为这些文档涉及软件设计的详细特性。这些测试计划不是指导性文档——也就是说，软件工程师在实际测试软件时不一定会参考这些文档——但没有开发团队的反馈，这些文档无法创建。与MTP类似，LTP为创建测试用例和测试过程文档提供了路线图（这些文档对开发和测试团队尤为重要），并概述了如何执行测试。LTP提供了测试过程的良好高层视图，尤其是对于对质量感兴趣的外部组织。^([5](ch19_footnote.xhtml#ch12fn5))
- en: 'Here is the LTP outline from Std 829:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是来自Std 829的LTP大纲：
- en: 1 Introduction
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 1 引言
- en: 1.1 Document Identifier
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1 文档标识符
- en: 1.2 Scope
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2 范围
- en: 1.3 References
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3 参考文献
- en: 1.4 Level in the Overall Sequence
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 1.4 在整体序列中的级别
- en: 1.5 Test Classes and Overall Test Conditions
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5 测试类别和整体测试条件
- en: 2 Details for This Level of Test Plan
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 2 本级测试计划的详细信息
- en: 2.1 Test Items and Their Identifiers
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1 测试项及其标识符
- en: 2.2 Test Traceability Matrix
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2 测试可追溯性矩阵
- en: 2.3 Features to Be Tested
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 2.3 测试的特性
- en: 2.4 Features Not to Be Tested
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 2.4 不测试的特性
- en: 2.5 Approach
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 2.5 方法
- en: 2.6 Item Pass/Fail Criteria
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 2.6 项目通过/失败标准
- en: 2.7 Suspension Criteria and Resumption Requirements
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 2.7 暂停标准和恢复要求
- en: 2.8 Test Deliverables
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 2.8 测试交付物
- en: 3 Test Management
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 3 测试管理
- en: 3.1 Planned Activities and Tasks; Test Progression
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 计划活动和任务；测试进度
- en: 3.2 Environmental/Infrastructure
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2 环境/基础设施
- en: 3.3 Responsibilities and Authority
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 3.3 职责和权限
- en: 3.4 Interfaces Among the Parties Involved
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 3.4 各方之间的接口
- en: 3.5 Resources and Their Allocation
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 3.5 资源及其分配
- en: 3.6 Training
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 3.6 培训
- en: 3.7 Schedules, Estimates, and Costs
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 3.7 日程安排、估算和成本
- en: 3.8 Risk(s) and Contingency(s)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 3.8 风险及应急措施
- en: 4 General
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 4 总则
- en: 4.1 Quality Assurance Procedures
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 4.1 质量保证程序
- en: 4.2 Metrics
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 4.2 指标
- en: 4.3 Test Coverage
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 4.3 测试覆盖范围
- en: 4.4 Glossary
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 4.4 术语表
- en: 4.5 Document Change Procedures and History
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 4.5 文档变更程序和历史
- en: You might notice that there is considerable overlap between the LTPs and the
    MTP. Std 829 states that if you are replicating information in a test plan that
    exists elsewhere, you can simply provide a reference to the containing document
    rather than duplicating the information in your LTP (or MTP). For example, you’re
    likely to have an overall Reverse Traceability Matrix (RTM) that includes traceability
    for all the tests. Rather than replicating that traceability information in section
    2.2 of an LTP, you would simply reference the RTM document that contains this
    information.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到，LTP和MTP之间有相当大的重叠。Std 829规定，如果你在测试计划中复制了其他地方存在的信息，你可以简单地引用包含该信息的文档，而不必在LTP（或MTP）中重复该信息。例如，你可能会有一个总体的逆向可追溯性矩阵（RTM），其中包括所有测试的可追溯性信息。与其在LTP的第2.2节中重复该可追溯性信息，不如直接引用包含该信息的RTM文档。
- en: '***12.2.3* Level *Test Design Documentation***'
  id: totrans-129
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.2.3* 级别 *测试设计文档***'
- en: 'The Level *Test Design (LTD)* documentation, as its name suggests, describes
    the design of the tests. Once again, there are four types of LTD documents, each
    generally describing the scope or extent of software testing being documented:
    Component Test Design (aka Unit Test Design, or UTD), Component Integration Test
    Design (aka Integration Test Design, or ITD), System Test Design (aka System Integration
    Test Design, or SITD), and Acceptance Test Design (ATD; this may include a Factory
    Acceptance Test Design [FATD] or a Site Acceptance Test Design [SATD]).'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '*测试设计（LTD）*文档，顾名思义，描述了测试的设计。再次强调，有四种类型的LTD文档，每种文档通常描述了软件测试的范围或程度：组件测试设计（又称单元测试设计，或UTD）、组件集成测试设计（又称集成测试设计，或ITD）、系统测试设计（又称系统集成测试设计，或SITD）和验收测试设计（ATD；这可能包括工厂验收测试设计[
    FATD ]或现场验收测试设计[SATD]）。'
- en: The main purpose of the LTD is to collect common information in one place that
    would be replicated throughout the test procedures. That means that this document
    could very easily be merged with your test procedures document (at the cost of
    some repetition in that document). This book will take that approach, merging
    pertinent items from the test design directly into the test cases and test procedures
    documents.^([6](ch19_footnote.xhtml#ch12fn6)) For that reason this section will
    present the IEEE recommended outline without additional commentary and save the
    details for the STC and STP documents.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: LTD的主要目的是将常见信息集中在一个地方，这些信息通常会在测试程序中重复。这意味着该文档很容易与测试程序文档合并（虽然这样会导致文档中有一些重复）。本书将采取这种方法，将相关项目直接合并到测试用例和测试程序文档中。^([6](ch19_footnote.xhtml#ch12fn6))
    因此，本节将呈现IEEE推荐的大纲，而不做额外的评论，详细内容会保留在STC和STP文档中。
- en: 1 Introduction
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 1 引言
- en: 1.1 Document Identifier
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1 文档标识符
- en: 1.2 Scope
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2 范围
- en: 1.3 References
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3 参考文献
- en: 2 Details of the Level Test Design
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 2 级别测试设计的详细信息
- en: 2.1 Features to Be Tested
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1 要测试的特性
- en: 2.2 Approach Refinements
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2 方法改进
- en: 2.3 Test Identification
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 2.3 测试标识
- en: 2.4 Feature Pass/Fail Criteria
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 2.4 特性通过/失败标准
- en: 2.5 Test Deliverables
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 2.5 测试交付物
- en: 3 General
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 3 一般
- en: 3.1 Glossary
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 术语表
- en: 3.2 Document Change Procedures and History
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2 文档变更程序和历史
- en: '**12.3 Software Review List Documentation**'
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**12.3 软件审查清单文档**'
- en: 'When you build the RTM starting with your requirements, one of the columns
    you usually create is the test/verification type column. Typically, a software
    requirement will have one of two associated verification types: *T* (for *test*)
    and *R* (for *review*).^([7](ch19_footnote.xhtml#ch12fn7)) Requirements marked
    *T* will have associated test cases and test procedures (see “[Updating the Traceability
    Matrix with Requirement Information](ch10.xhtml#lev-10.9)” on [page 222](ch10.xhtml#page_222)
    for details on creating test cases). Items marked *R* will need to be reviewed.
    This section describes how to create a Software Review List (SRL) document to
    track the review of the system (usually the source code) to verify those requirements.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 当你从需求开始构建RTM时，通常会创建的其中一列是测试/验证类型列。通常，一个软件需求会有两种相关的验证类型之一：*T*（表示*测试*）和 *R*（表示*审查*）。^([7](ch19_footnote.xhtml#ch12fn7))
    标记为*T*的需求将有相关的测试用例和测试程序（有关创建测试用例的详细信息，请参见“[使用需求信息更新可追溯矩阵](ch10.xhtml#lev-10.9)”第[222页](ch10.xhtml#page_222)）。标记为*R*的项将需要进行审查。本节描述了如何创建一个软件审查清单（SRL）文档，用于跟踪系统（通常是源代码）的审查，以验证这些需求。
- en: The SRL is relatively straightforward. The core of the document is simply a
    list of items, each of which you check off after you review it and are confident
    that the software properly supports the associated requirement.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: SRL相对简单。文档的核心只是一份项目清单，每个项目都在审查后打勾，确保软件正确支持相关需求。
- en: 'In theory, you could create *level* review list documentation at four separate
    levels: component, component integration, system, and acceptance (as is the case
    for other Std 829 *level* documents). In reality, however, a single SRL that is
    suitable for both system (integration) and acceptance use will suffice.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，你可以在四个独立的级别创建*级别*审查清单文档：组件、组件集成、系统和验收（如同其他Std 829*级别*文档的情况）。然而，在现实中，一个适用于系统（集成）和验收使用的单一SRL就足够了。
- en: '**NOTE**'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*The SRL document is not a part of Std 829 (or any other IEEE standards document,
    for that matter). Std 829 certainly allows you to use this document as part of
    your verification package, but the format presented in this section is not from
    the IEEE.*'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '*SRL 文档不是 Std 829（或任何其他 IEEE 标准文档）的一部分。Std 829 确实允许你将此文档作为验证包的一部分，但本节中所呈现的格式并非
    IEEE 标准格式。*'
- en: '***12.3.1 Sample SRL Outline***'
  id: totrans-151
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.3.1 示例 SRL 大纲***'
- en: 'Although the SRL is not a standard IEEE document, the following outline for
    it is somewhat similar to the SRS, STC, and STP recommended formats from the IEEE:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 SRL 不是标准的 IEEE 文档，但其大纲与 IEEE 推荐的 SRS、STC 和 STP 格式有些相似：
- en: 1 Introduction (once per document)
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 1 引言（每个文档中一次）
- en: 1.1 Document Identifier
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1 文档标识符
- en: 1.2 Document Change Procedures and History
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2 文档变更程序和历史
- en: 1.3 Scope
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3 范围
- en: 1.4 Intended Audience
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 1.4 目标读者
- en: 1.5 Definitions, Acronyms, and Abbreviations
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5 定义、缩略语和缩写
- en: 1.6 References
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 1.6 参考文献
- en: 1.7 Notation for Description
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 1.7 描述符号
- en: 2 General System Description
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 2 一般系统描述
- en: 3 Checklist (one per review item)
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 3 检查清单（每个审查项一个）
- en: 3.1 Review Identifier (Tag)
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 审查标识符（标签）
- en: 3.2 Discussion of Item to Review
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2 审查项讨论
- en: '***12.3.2 Sample SRL***'
  id: totrans-165
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.3.2 示例 SRL***'
- en: This sample SRL continues to use the DAQ DIP switch project from the previous
    chapters. Specifically, this SRL is based on the requirements from “(Selected)
    DAQ Software Requirements (from SRS)” on [page 219](ch10.xhtml#page_219) and the
    verification types detailed in “Requirements to Be Verified by Review” on [page
    223](ch10.xhtml#page_223).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例 SRL 继续使用前几章中的DAQ DIP开关项目。具体来说，该 SRL 基于“（已选）DAQ 软件需求（来自 SRS）”中的需求，参见 [第219页](ch10.xhtml#page_219)，以及在
    [第223页](ch10.xhtml#page_223) 中详细说明的“需通过审查验证的需求”。
- en: '**1 Introduction**'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**1 引言**'
- en: This Software Review List provides a software review checklist for those DAQ
    system requirements that are to be verified by review.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 本软件审查清单为那些需要通过审查验证的DAQ系统需求提供了软件审查检查表。
- en: '**1.1 Document Identifier**'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.1 文档标识符**'
- en: DAQ_SRL v1.0
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_SRL v1.0
- en: '**1.2 Document Change Procedures and History**'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.2 文档变更程序和历史**'
- en: All revisions should be noted here, by date and version number.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 所有修订应在此注明，包括日期和版本号。
- en: Mar 23, 2018—Version 1.0
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 2018年3月23日—版本 1.0
- en: '**1.3 Scope**'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.3 范围**'
- en: This SRL deals with those requirements in the DAQ DIP switch initialization
    project for which creating a formal test procedure would be difficult (or otherwise
    economically unviable) but whose correctness can be easily verified by reviewing
    the source code and the build system for the source code.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 本 SRL 处理的是那些在创建正式测试程序上会比较困难（或在经济上不可行），但其正确性可以通过审查源代码和构建系统轻松验证的DAQ DIP开关初始化项目中的需求。
- en: '**1.4 Intended Audience**'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.4 目标读者**'
- en: 'The *normal* audience for an SRL:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: SRL 的*正常*受众：
- en: This document is intended primarily for those individuals who will be testing/reviewing
    the DAQ DIP switch project. Project management and the development team may also
    wish to review this document.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档主要面向那些将测试/审查DAQ DIP开关项目的人员。项目管理和开发团队也可能希望审查此文档。
- en: 'The *real* audience for this SRL:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 该 SRL 的*实际*受众：
- en: This SRL is intended for readers of *Write Great Code, Volume 3*. It provides
    an example SRL that can serve as a template for SRLs they may need to create.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 本 SRL 适用于《编写优秀代码》第三卷的读者。它提供了一个示例 SRL，可作为他们可能需要创建的 SRL 模板。
- en: '**1.5 Definitions, Acronyms, and Abbreviations**'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.5 定义、缩略语和缩写**'
- en: 'DAQ: Data acquisition system'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 'DAQ: 数据采集系统'
- en: 'DIP: Dual inline package'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 'DIP: 双列直插封装'
- en: 'SDD: Software Design Document'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 'SDD: 软件设计文档'
- en: 'SRL: Software Review List'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 'SRL: 软件审查清单'
- en: 'SRS: Software Requirements Specification'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 'SRS: 软件需求规格说明书'
- en: '**1.6 References**'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.6 参考文献**'
- en: 'SDD: IEEE Std 1016-2009'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 'SDD: IEEE 标准 1016-2009'
- en: 'SRS: IEEE Std 830-1998'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 'SRS: IEEE 标准 830-1998'
- en: 'STC/STP: IEEE Std 829-2008'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 'STC/STP: IEEE 标准 829-2008'
- en: '**1.7 Notation for Description**'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.7 描述符号**'
- en: 'Review identifiers (*tags*) in this document shall take the form:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档中的审查标识符（*标签*）应采用以下形式：
- en: DAQ_SR_*xxx_yyy_zzz*
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_SR_*xxx_yyy_zzz*
- en: where *xxx_yyy* is a string of (possibly decimal) numbers taken from the corresponding
    requirement (for example, DAQ_SRS_*xxx_yyy*) and *zzz* is a (possibly decimal)
    numeric sequence that creates a unique identifier out of the whole sequence. Note
    that *zzz* values in SRL tags are usually numbered from 000 or 001 and usually
    increment by 1 for each additional review item sharing the same *xxx_yyy* string.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *xxx_yyy* 是从相应要求中提取的一串（可能是十进制）数字（例如，DAQ_SRS_*xxx_yyy*），*zzz* 是一个（可能是十进制）数字序列，它通过整个序列创建一个唯一的标识符。请注意，SRL
    标签中的 *zzz* 值通常从 000 或 001 开始编号，并且通常在每个共享相同 *xxx_yyy* 字符串的附加审查项中递增 1。
- en: '**2 General System Description**'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '**2 一般系统描述**'
- en: The purpose behind the DAQ DIP switch system is to initialize the DAQ system
    upon power-up. The DAQ DIP switch system is a small subset of the larger Plantation
    Productions DAQ system that is useful as an example within this book.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ DIP 开关系统的目的是在上电时初始化 DAQ 系统。DAQ DIP 开关系统是更大 Plantation Productions DAQ 系统的一小部分，在本书中作为示例使用。
- en: '**3 Checklist**'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**3 检查清单**'
- en: Check off each of the following items as it is verified during the review process.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查过程中，逐项勾选以下内容，确认每项已验证。
- en: '**3.1 DAQ_SR_700_000_000**'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.1 DAQ_SR_700_000_000**'
- en: Verify code is written for a Netburner MOD54415 evaluation board.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 验证代码是否为 Netburner MOD54415 评估板编写。
- en: '**3.2 DAQ_SR_700_000.01_000.1**'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.2 DAQ_SR_700_000.01_000.1**'
- en: Verify code is written for μC/OS.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 验证代码是否为 μC/OS 编写。
- en: '**3.3 DAQ_SR_702_001_000**'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.3 DAQ_SR_702_001_000**'
- en: Verify that software creates a separate task to handle serial port command processing.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 验证软件是否创建了一个单独的任务来处理串口命令处理。
- en: '**3.4 DAQ_SR_702_002_000**'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.4 DAQ_SR_702_002_000**'
- en: Verify that serial task priority is lower than USB and Ethernet task priorities
    (note that the higher the priority number, the lower the priority).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 验证串行任务的优先级是否低于 USB 和以太网任务的优先级（注意：优先级编号越高，优先级越低）。
- en: '**3.5 DAQ_SR_703_001_000**'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.5 DAQ_SR_703_001_000**'
- en: Same as DAQ_SRS_702_001, but doesn’t start an RS-232 task if DIP switch 1 is
    in the OFF position.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 与 DAQ_SRS_702_001 相同，但如果 DIP 开关 1 处于 OFF 位置，则不会启动 RS-232 任务。
- en: '**3.6 DAQ_SR_705_001_000**'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.6 DAQ_SR_705_001_000**'
- en: Verify that software creates a separate task to handle USB port command processing.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 验证软件是否创建了一个单独的任务来处理 USB 端口命令处理。
- en: '**3.7 DAQ_SR_705_002_000**'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.7 DAQ_SR_705_002_000**'
- en: Verify that a USB task has a higher priority than the Ethernet and serial protocol
    tasks.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 验证 USB 任务的优先级是否高于以太网和串行协议任务。
- en: '**3.8 DAQ_SR_706_001_000**'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.8 DAQ_SR_706_001_000**'
- en: Verify that software does not start the USB task if DIP switch 2 is in the OFF
    position.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 验证当 DIP 开关 2 处于 OFF 位置时，软件是否不会启动 USB 任务。
- en: '**3.9 DAQ_SR_716_001_000**'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.9 DAQ_SR_716_001_000**'
- en: Verify that the Ethernet listening task is started only if Ethernet communications
    are enabled.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 验证只有在启用以太网通信时，才会启动以太网监听任务。
- en: '**3.10 DAQ_SR_716_002_000**'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.10 DAQ_SR_716_002_000**'
- en: Verify that the Ethernet listening task has a priority lower than the USB task
    but higher than the serial task.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 验证以太网监听任务的优先级是否低于 USB 任务，但高于串行任务。
- en: '**3.11 DAQ_SR_719_000_000**'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.11 DAQ_SR_719_000_000**'
- en: Verify that software sets the unit test mode value to ON based on the DIP switch
    7 setting.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 验证软件是否根据 DIP 开关 7 设置将单元测试模式值设为 ON。
- en: '**3.12 DAQ_SR_720_000_000**'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.12 DAQ_SR_720_000_000**'
- en: Verify that software sets the unit test mode value to OFF based on the DIP switch
    7 setting.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 验证软件是否根据 DIP 开关 7 设置将单元测试模式值设为 OFF。
- en: '**3.13 DAQ_SR_723_000_000**'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.13 DAQ_SR_723_000_000**'
- en: Verify that the software provides a function to read the DIP switches.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 验证软件是否提供了读取 DIP 开关的功能。
- en: '**3.14 DAQ_SR_723_000.01_000**'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.14 DAQ_SR_723_000.01_000**'
- en: Verify that the system uses the DIP switch reading to initialize RS-232 (serial),
    USB, Ethernet, unit test mode, and debug mode on startup.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 验证系统是否使用 DIP 开关读取值来初始化启动时的 RS-232（串行）、USB、以太网、单元测试模式和调试模式。
- en: '**3.15 DAQ_SR_723_000.02_000**'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.15 DAQ_SR_723_000.02_000**'
- en: Verify that the startup code stores the DIP switch reading for later use by
    the software.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 验证启动代码是否存储了 DIP 开关读取值，以供软件后续使用。
- en: '**3.16 DAQ_SR_725_000_000**'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.16 DAQ_SR_725_000_000**'
- en: Verify that the command processor responds to a command when a complete line
    of text is received from the USB, RS-232, and Ethernet ports.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 验证当从 USB、RS-232 和以太网端口接收到完整的文本行时，命令处理器是否对命令做出响应。
- en: '**3.17 DAQ_SR_738_001_000**'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.17 DAQ_SR_738_001_000**'
- en: Verify that the system starts a new process (task) to handle command processing
    for each new Ethernet connection.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 验证系统是否在每个新的以太网连接上启动一个新的进程（任务）来处理命令。
- en: '**3.18 DAQ_SR_738_002_000**'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.18 DAQ_SR_738_002_000**'
- en: Verify that the Ethernet command processing tasks have a priority between the
    Ethernet listening task and the USB command task.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 验证以太网命令处理任务在以太网监听任务和 USB 命令任务之间的优先级。
- en: '***12.3.3 Adding SRL Items to the Traceability Matrix***'
  id: totrans-235
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.3.3 将 SRL 项目添加到可追溯性矩阵***'
- en: Once you’ve created an SRL, you’ll want to add all the *SR* tags to the RTM
    so you can trace the reviewed items back to the requirements, as well as to everything
    else in the RTM. To do so, just locate the requirement associated with each review
    item tag (this is trivial if you’re using the tag numbering this chapter recommends;
    the SRS tag number is incorporated into the SRL tag number) and add the SRL tag
    to the appropriate column in the same row of the RTM containing the requirement.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你创建了 SRL，你需要将所有的*SR*标签添加到 RTM 中，这样就可以将已审阅的项目追溯到需求，以及 RTM 中的其他所有内容。为此，只需定位与每个审阅项目标签相关联的需求（如果你使用本章推荐的标签编号，这很简单；SRS
    标签编号已包含在 SRL 标签编号中），并将 SRL 标签添加到 RTM 中相应行的适当列。
- en: When you’ve got both SRL and STC documents, there’s really no need to create
    separate columns in the RTM for both types, as they are mutually exclusive and
    the tag will differentiate them. (See “[A Sample Software Requirements Specification](ch10.xhtml#lev-10.4.5)”
    on [page 203](ch10.xhtml#page_203) for some additional commentary on this.)
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 当你拥有 SRL 和 STC 文档时，实际上无需在 RTM 中为两者创建单独的列，因为它们是互斥的，标签将区分它们。（有关更多详细说明，请参见 “[软件需求规格样本](ch10.xhtml#lev-10.4.5)”
    以及 [第203页](ch10.xhtml#page_203)的相关评论。）
- en: '**12.4 Software Test Case Documentation**'
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**12.4 软件测试用例文档**'
- en: For each item in the RTM whose requirement verification type is *T*, you’ll
    need to create a software test case. The *Software Test Case (STC)* document is
    where you’ll put the actual test cases.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 RTM 中每个需求验证类型为*T*的项目，您需要创建一个软件测试用例。*软件测试用例（STC）*文档是您放置实际测试用例的地方。
- en: 'As with all the 829 Std *level* documents, there are four levels in the *Level*
    Test Case documentation. The term *Software Test Case* generically refers to any
    one of these. As this chapter noted earlier, this is actually a set of test cases,
    where each document in the set type generally describes the scope or extent of
    software testing being documented: Component Test Cases (aka Unit Test Cases,
    or UTC), Component Integration Test Cases (aka Integration Test Cases, or ITC),
    System Test Cases (aka System Integration Test Cases, or SITC), and Acceptance
    Test Cases (ATC; may include Factory Acceptance Test Cases [FATC] and Site Acceptance
    Test Cases [SATC]).^([8](ch19_footnote.xhtml#ch12fn8))'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 与所有 829 标准*级别*文档一样，*级别*测试用例文档有四个级别。术语*软件测试用例*通常指其中任何一个。如本章前面所述，这实际上是一组测试用例，每个文档类型通常描述文档化的软件测试的范围或程度：组件测试用例（也称为单元测试用例，或
    UTC）、组件集成测试用例（也称为集成测试用例，或 ITC）、系统测试用例（也称为系统集成测试用例，或 SITC）和验收测试用例（ATC；可能包括工厂验收测试用例
    [FATC] 和现场验收测试用例 [SATC]）。^([8](ch19_footnote.xhtml#ch12fn8))
- en: 'The STC document lists all the individual test cases (tests) for a project.
    Here is the Std 829 outline for the *Level* Test Case documentation:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: STC 文档列出了项目的所有单个测试用例（测试）。以下是 Std 829 大纲，适用于*级别*测试用例文档：
- en: 1 Introduction (once per document)
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 1 引言（每个文档一次）
- en: 1.1 Document Identifier
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1 文档标识符
- en: 1.2 Scope
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2 范围
- en: 1.3 References
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3 参考文献
- en: 1.4 Context
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 1.4 上下文
- en: 1.5 Notation for Description
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5 描述的符号表示法
- en: 2 Details (once per test case)
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 2 详细信息（每个测试用例一次）
- en: 2.1 Test Case Identifier
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1 测试用例标识符
- en: 2.2 Objective
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2 目标
- en: 2.3 Inputs
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 2.3 输入
- en: 2.4 Outcome(s)
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 2.4 结果
- en: 2.5 Environmental Needs
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 2.5 环境需求
- en: 2.6 Special Procedural Requirements
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 2.6 特殊程序要求
- en: 2.7 Intercase Dependencies
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 2.7 测试用例间依赖关系
- en: 3 Global (once per document)
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 3 全局（每个文档一次）
- en: 3.1 Glossary
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 术语表
- en: 3.2 Document Change Procedures and History
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2 文档变更程序和历史
- en: In common practice, the Unit Test Cases and the Integration Test Cases are often
    combined into the same document (the differentiation between the two usually occurs
    at the level of test procedures). You will typically develop UTCs and ITCs from
    your source code and from the SDD (see [Figure 12-1](ch12.xhtml#ch12fig1), which
    is an extension of [Figure 9-1](ch09.xhtml#ch9fig1)).
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际应用中，单元测试用例和集成测试用例通常会合并到同一文档中（这两者的区分通常发生在测试过程级别）。你通常会根据源代码和软件设计文档（SDD）来开发单元测试用例（UTC）和集成测试用例（ITC）（见[图
    12-1](ch12.xhtml#ch12fig1)，它是[图 9-1](ch09.xhtml#ch9fig1)的扩展）。
- en: '![image](Images/fig12-1.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/fig12-1.jpg)'
- en: '*Figure 12-1: Unit and Integration Test Case sources*'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 12-1：单元和集成测试用例来源*'
- en: Often, the UTC and ITC (and test procedure) documents exist as software rather
    than as natural-language documents. Using an *automated test procedure*, a piece
    of software that runs all the unit and integration tests, is a software engineering
    best practice. By doing so, you can dramatically reduce the time it takes to run
    tests as well as the errors introduced in manually performed test procedures.^([9](ch19_footnote.xhtml#ch12fn9))
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，UTC 和 ITC（以及测试程序）文档作为软件存在，而不是自然语言文档。使用*自动化测试程序*，这是一种运行所有单元和集成测试的软件，是软件工程的最佳实践。通过这样做，你可以显著减少运行测试所需的时间以及人工执行测试程序时引入的错误。^([9](ch19_footnote.xhtml#ch12fn9))
- en: Unfortunately, it isn’t possible to create automated tests for every test case,
    so you’ll usually have a UTC/ITC document covering (at least) the test cases you
    must perform manually.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，并不是每个测试用例都能创建自动化测试，因此你通常会有一个UTC/ITC文档，涵盖（至少）你必须手动执行的测试用例。
- en: Many organizations—particularly those that embrace Agile development models
    and test-driven development (TDD)—forgo formal UTC and ITC documents. Informally
    written procedures and automated test procedures are far more common in these
    situations because the cost of creating and (especially) maintaining the documentation
    quickly gets out of hand. As long as the development team can provide *some* documentation
    that they are performing a fixed set of unit/integration tests (that is, they’re
    not doing ad hoc, “by the seat of the pants” tests that could differ on every
    test run), larger organizations tend to leave them be.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 许多组织——尤其是那些采用敏捷开发模型和测试驱动开发（TDD）方法的组织——放弃了正式的UTC和ITC文档。在这些情况下，非正式编写的程序和自动化测试程序更为常见，因为创建和（尤其是）维护文档的成本迅速失控。只要开发团队能够提供*一些*文档，证明他们正在执行一组固定的单元/集成测试（也就是说，他们没有进行随意的“临时”测试，这些测试每次执行可能都不同），较大的组织通常会选择不干涉。
- en: Regardless of whether it’s formal, informal, or automated, having a repeatable
    test procedure is key. *Regression tests*, which check to see if anything has
    broken, or regressed, since you’ve made changes to the code, require a repeatable
    testing process. Therefore, you need some kind of test case to ensure repeatability.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是正式的、非正式的还是自动化的，拥有可重复的测试程序是关键。*回归测试*，用于检查自从你对代码做出更改后，是否有任何东西发生了破坏或回归，需要一个可重复的测试过程。因此，你需要某种测试用例来确保可重复性。
- en: For unit/integration testing, the test data you generate will be a combination
    of black-box-generated test data and white-box-generated test data. *Black-box
    test data* generally comes from the system requirements (SyRS and SRS); you consider
    only the functionality of the system (which the requirements provide) when you
    create its input test data. When you generate *white-box test data*, on the other
    hand, you analyze the software’s source code. For example, ensuring that you execute
    every statement in the program at least once during testing—that is, achieving
    complete code coverage—requires careful analysis of the source code and, therefore,
    is a white-box test-data-generation technique.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单元/集成测试，你生成的测试数据将是黑盒生成的测试数据和白盒生成的测试数据的组合。*黑盒测试数据*通常来自系统需求（SyRS 和 SRS）；在创建输入测试数据时，你只考虑系统的功能（需求所提供）。另一方面，生成*白盒测试数据*时，你需要分析软件的源代码。例如，确保在测试过程中每个语句至少执行一次——即实现完全代码覆盖——需要仔细分析源代码，因此，这是一个白盒测试数据生成技术。
- en: '**NOTE**'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: 'Write Great Code, Volume 6: Testing, Debugging, and Quality Assurance *will
    consider the techniques for generating white-box and black-box test data in greater
    detail.*'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 《编写优秀代码，第六卷：测试、调试与质量保证》*将更详细地讨论生成白盒和黑盒测试数据的技术。*
- en: Once you get to the level of a system integration test or (even more importantly)
    an acceptance test, formal documentation for your test cases becomes mandatory.
    If you’re creating a custom system for a customer, or your software is subject
    to regulatory or legal restrictions (such as life-threatening environments in
    an autonomous vehicle), you’ll likely have to convince some overseer organization
    that you’ve put in your best effort during testing and prove that the system meets
    its requirements. This is where it’s essential to have formal documentation like
    that recommended by Std 829.^([10](ch19_footnote.xhtml#ch12fn10)) For this reason,
    most SITC and (most certainly) ATC documents derive their cases directly from
    the requirements (see [Figure 12-2](ch12.xhtml#ch12fig2)). So, with this motivation
    in hand, let’s return to the discussion of the *Level* Test Case document (see
    the outline at the beginning of this section).
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入系统集成测试或（更重要的）验收测试阶段，测试用例的正式文档就变得至关重要。如果您为客户创建定制系统，或者您的软件受制于监管或法律限制（如在自动驾驶汽车中的生命威胁环境），您可能需要说服某个监管机构证明您在测试过程中已尽最大努力，并证明系统满足其要求。正因为如此，许多SITC和（当然）ATC文档直接从需求中推导出测试用例（见[图12-2](ch12.xhtml#ch12fig2)）。因此，带着这个动机，让我们回到*级别*测试用例文档的讨论中（请参见本节开头的提纲）。
- en: '![image](Images/fig12-2.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/fig12-2.jpg)'
- en: '*Figure 12-2: SITC and ATC derivation*'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-2：SITC和ATC推导*'
- en: More often than not, the (F)ATC document is simply a subset of the SITC document.
    (If you have FATC documentation and SATC documentation, the site variant is often
    a subset of the FATC document.) The SITC document will contain test cases for
    every requirement. In the ATC documents, system architects may merge or eliminate
    test cases that are nearly or entirely redundant, or are of little interest to
    customers and end users.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，（F）ATC文档只是SITC文档的一个子集。（如果您有FATC文档和SATC文档，站点变体通常是FATC文档的子集。）SITC文档将包含每个需求的测试用例。在ATC文档中，系统架构师可能会合并或删除几乎完全冗余的测试用例，或者对客户和最终用户来说意义不大的测试用例。
- en: '***12.4.1 Introduction in the STC Document***'
  id: totrans-273
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.4.1 STC文档中的引言***'
- en: The introductory section of an STC (or any *Level* Test Case) document should
    include the following information.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: STC（或任何*级别*测试用例）文档的引言部分应包括以下信息。
- en: '**12.4.1.1 Document Identifier**'
  id: totrans-275
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.1.1 文档标识符**'
- en: The document identifier should be some unique name/number and should include
    the issuing date, author identification, status (for example, draft or final),
    approval signatures, and possibly a version number. A single ID name/number is
    imperative so you can reference the test case documentation in other documents
    (such as the STP and RTM).
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 文档标识符应是唯一的名称/编号，并应包括发行日期、作者标识、状态（例如草稿或最终版）、批准签名以及可能的版本号。一个唯一的ID名称/编号至关重要，这样您就可以在其他文档中引用测试用例文档（如STP和RTM）。
- en: '**12.4.1.2 Scope**'
  id: totrans-277
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.1.2 范围**'
- en: This section summarizes the software system and features to test.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 本节总结了需要测试的软件系统和功能。
- en: '**12.4.1.3 References**'
  id: totrans-279
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.1.3 参考文献**'
- en: This section should provide a list of all reference documents, internal and
    external, associated with the STC. Internal references would normally include
    documents such as the SyRS, SRS, SDD, RTM, and (if it exists) the MTP. External
    references would include standards like IEEE Std 829-2008 and any regulatory or
    legal documents that might apply.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 本节应提供与STC相关的所有参考文档的清单，包括内部和外部文档。内部参考文献通常包括如SyRS、SRS、SDD、RTM以及（如果存在）MTP等文档。外部参考文献包括标准，如IEEE
    Std 829-2008以及可能适用的任何监管或法律文档。
- en: '**12.4.1.4 Context**'
  id: totrans-281
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.1.4 上下文**'
- en: In this section you provide any context for the test cases that doesn’t appear
    in any other documentation. Examples might include naming automated test-generation
    software or internet-based tools used to generate or evaluate test cases.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您提供任何不出现在其他文档中的测试用例上下文。例如，可能包括命名用于生成或评估测试用例的自动化测试生成软件或基于互联网的工具。
- en: '**12.4.1.5 Notation for Description**'
  id: totrans-283
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.1.5 描述的符号**'
- en: This section should describe the tags (identifiers) you’ll apply to the test
    cases. For example, this chapter uses tags of the form *proj*_STC_*xxx*_*yyy*_*zzz*,
    so this section of the STC would explain what this means and how to generate STC
    tags.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 本节应描述您将应用于测试用例的标签（标识符）。例如，本章使用*proj*_STC_*xxx*_*yyy*_*zzz*格式的标签，因此STC的这一部分将解释这些标签的含义以及如何生成STC标签。
- en: '***12.4.2 Details***'
  id: totrans-285
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.4.2 详细信息***'
- en: You repeat the subsections contained herein for each test case in the STC.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在STC中为每个测试用例重复此部分。
- en: '**12.4.2.1 Test Case Identifier**'
  id: totrans-287
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.2.1 测试用例标识符**'
- en: The test case identifier is the tag associated with this particular test case.
    For example, this book uses tags of the form *DAQ_STC_002_000_001* where *DAQ*
    is the project ID (for the DAQ DIP switch project), *002_000* is from the SRS
    requirement tag, and *001* is a test-case-specific value to make this tag unique
    among all the others. The Swimming Pool Monitor (SPM) project from previous chapters
    might use tags like *POOL_STC_002_001* within the STC. Std 829 doesn’t require
    the use of this tag format, only that all test case tags be unique.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 测试用例标识符是与此特定测试用例相关联的标签。例如，本书使用的标签形式为*DAQ_STC_002_000_001*，其中*DAQ*是项目ID（针对DAQ
    DIP开关项目），*002_000*来自SRS需求标签，而*001*是特定于测试用例的值，用于使该标签在所有其他标签中唯一。前几章的游泳池监控器（SPM）项目可能会在STC中使用类似*POOL_STC_002_001*的标签。Std
    829并不要求使用此标签格式，只要求所有测试用例标签是唯一的。
- en: '**12.4.2.2 Objective**'
  id: totrans-289
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.2.2 目标**'
- en: This is a brief description of the focus or goal of this particular test case.
    (Note that a set of test cases can have the same objective, in which case this
    field could simply reference the objectives in a different test case.) This field
    is a good place to put risk assessment and integrity level information, if relevant.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对该特定测试用例目标或重点的简要描述。（请注意，一组测试用例可以具有相同的目标，在这种情况下，此字段可以仅引用另一个测试用例中的目标。）如果相关，您可以在此字段中放置风险评估和完整性级别信息。
- en: '**12.4.2.3 Input(s)**'
  id: totrans-291
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.2.3 输入**'
- en: This section lists all inputs and their relationships (in terms of timing, ordering,
    and the like) that a tester needs in order to perform this test case. Some inputs
    might be exact, and some may be approximate, in which case you must provide tolerances
    for the input data. If the input set is large, this section might simply reference
    an input file, database, or some other input stream that will provide the test
    data.^([11](ch19_footnote.xhtml#ch12fn11))
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 本节列出执行此测试用例所需的所有输入及其关系（例如时序、顺序等）。某些输入可能是精确的，某些则可能是近似的，在这种情况下，您必须为输入数据提供容差。如果输入集很大，本节可以仅引用输入文件、数据库或提供测试数据的其他输入流^[11](ch19_footnote.xhtml#ch12fn11)。
- en: '**12.4.2.4 Outcome(s)**'
  id: totrans-293
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.2.4 输出**'
- en: This section lists all expected output data values and behaviors such as response
    time, timing relationships, and order of output data. The test case should provide
    exact output data values if possible; if you can provide only approximate data
    values, the test case must also supply tolerances. If an output stream is large,
    then this section can reference externally supplied files or databases.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 本节列出了所有预期的输出数据值和行为，如响应时间、时序关系和输出数据的顺序。测试用例应尽可能提供精确的输出数据值；如果只能提供近似数据值，则测试用例还必须提供容差。如果输出流很大，则本节可以引用外部提供的文件或数据库。
- en: If the test is successful by virtue of the fact that it runs without crashing—that
    is, self-validating—then this section is unnecessary in the test case.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 如果测试能够成功运行且没有崩溃——也就是说，自我验证——那么在测试用例中这一部分就不需要了。
- en: '**12.4.2.5 Environmental Needs**'
  id: totrans-296
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.2.5 环境需求**'
- en: This section describes any preexisting software or data such as a known database
    that is needed for the test. It could also describe any internet sites referenced
    by their URLs that must be active in order to execute the test case. This could
    also include any special power requirements, such as requiring a UPS to be fully
    charged before testing power failures, or it could include other conditions such
    as the swimming pool being filled with water before running tests on the SPM system.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了测试所需的任何预先存在的软件或数据，例如已知的数据库。它还可以描述任何通过其网址引用的互联网站点，这些站点必须处于活动状态才能执行测试用例。这也可能包括任何特殊的电力需求，比如要求在测试电力故障之前UPS必须充满电，或者包括其他条件，比如在运行SPM系统测试之前，游泳池必须先注满水。
- en: '**12.4.2.5.1 Hardware Environmental Needs**'
  id: totrans-298
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '**12.4.2.5.1 硬件环境需求**'
- en: This section lists any hardware needed to run the test and specifies its configuration
    settings. It could also specify any special hardware such as a test fixture for
    the test operation. For example, a test fixture for the SPM might be a five-gallon
    bucket filled with water and a hose connected to the water feed valve that is
    part of the SPM.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 本节列出执行测试所需的任何硬件，并指定其配置设置。它还可以指定任何特殊硬件，例如测试操作所需的测试夹具。例如，SPM的测试夹具可能是一个装满水的五加仑桶，以及连接到水源阀门的软管，这些都是SPM的一部分。
- en: '**12.4.2.5.2 Software Environmental Needs**'
  id: totrans-300
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '**12.4.2.5.2 软件环境需求**'
- en: This section lists all software (and its versions/configurations) that would
    be needed to run the test. This could include operating systems/device drivers,
    dynamically linked libraries, simulators, code scaffolding (as in code drivers),^([12](ch19_footnote.xhtml#ch12fn12))
    and test tools.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 本节列出了运行测试所需的所有软件（及其版本/配置）。这可能包括操作系统/设备驱动程序、动态链接库、仿真器、代码脚手架（如代码驱动程序）、^([12](ch19_footnote.xhtml#ch12fn12))和测试工具。
- en: '**12.4.2.5.3 Other Environmental Needs**'
  id: totrans-302
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '**12.4.2.5.3 其他环境需求**'
- en: This is a catch-all section that lets you add information such as configuration
    specifics or anything else you feel the need to document. For example, for tests
    at a specific date or time, you’d need to consider Daylight Saving Time changes
    where a daily report may have 23 or 25 hours to report on, and so on.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个通用部分，可以让你添加配置信息或任何你认为需要记录的内容。例如，对于在特定日期或时间进行的测试，你需要考虑夏令时变更，在这种情况下，每日报告可能需要报告23或25小时的内容，等等。
- en: '**12.4.2.6 Special Procedural Requirements**'
  id: totrans-304
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.2.6 特殊程序要求**'
- en: This section lists any exceptional conditions or constraints on the test case.
    This could also include any special preconditions or postconditions. For example,
    one precondition on the SPM when testing to see if the software properly responds
    to a low pool condition is that the water level is below all three low-pool sensors.
    This should also list any postconditions, such as the bucket must not have overfilled.
    If you’re using an automated test procedure, this is a good place to specify the
    particular tool to use and how to employ it for the test.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 本节列出了测试用例的任何特殊条件或约束。这也可以包括任何特殊的前置条件或后置条件。例如，在测试软件是否能正确响应低池水位条件时，SPM的一个前置条件是水位低于所有三个低池传感器。此处还应列出任何后置条件，例如桶不得溢出。如果你使用自动化测试程序，这是指定特定工具及如何在测试中使用它的好地方。
- en: Note that this section should not duplicate steps that appear in the test procedure.
    Instead, it should provide guidance for properly writing the steps in the test
    procedure that will perform this test case.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，本节不应重复测试程序中已经出现的步骤。相反，它应为正确编写将执行该测试用例的测试程序步骤提供指导。
- en: '**12.4.2.7 Intercase Dependencies**'
  id: totrans-307
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.2.7 用例间依赖关系**'
- en: This section should list (by tag identifier) any test cases that must be executed
    immediately prior to the current one, so that appropriate system state conditions
    are in place before the current test is executed. Std 829 suggests that by sequencing
    the test cases in the order in which they must execute, you can reduce the need
    to state intercase dependencies. (Obviously, such dependencies should be clearly
    documented.) In general, however, you shouldn’t rely on such implicit dependency
    organization and should explicitly document any dependencies. In the STP, though,
    you *can* rely on the ordering of test steps. Having already clearly delineated
    the execution order in the STC will help reduce errors when you create the STP.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 本节应列出（按标签标识符）在当前测试之前必须执行的任何测试用例，以便在执行当前测试之前，系统状态条件已准备就绪。Std 829建议，通过按必须执行的顺序排列测试用例，你可以减少说明用例之间依赖关系的需求。（显然，这些依赖关系应该被清晰地记录。）然而，通常情况下，你不应依赖这种隐式的依赖关系组织方式，应该明确记录任何依赖关系。但在STP中，你*可以*依赖测试步骤的顺序。在STC中已经清晰地划定了执行顺序，这有助于减少创建STP时的错误。
- en: '**12.4.2.8 Pass/Fail Criteria**'
  id: totrans-309
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.2.8 通过/失败标准**'
- en: In Std 829, the IEEE recommends putting the pass/fail criteria in the *Level*
    Test Design documentation; they are not part of the Std 829 STC. However, it’s
    not a bad idea, especially in cases where you don’t have an LTD in your documentation
    set, to include pass/fail criteria for each test case.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在Std 829中，IEEE建议将通过/失败标准放入*级别*测试设计文档中；它们不是Std 829 STC的一部分。然而，特别是在文档集没有LTD的情况下，最好在每个测试用例中包含通过/失败标准。
- en: Note that if the pass/fail criterion is simply “All system outputs must match
    that specified by the Outcome(s) section,” then you can probably dispense with
    this section, but it wouldn’t hurt to explicitly state this default condition
    in the introduction section.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果通过/失败标准仅为“所有系统输出必须与结果部分规定的内容匹配”，那么你可能可以省略本节，但在引言部分明确说明这个默认条件也不会有什么坏处。
- en: '***12.4.3 General***'
  id: totrans-312
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.4.3 一般***'
- en: This section provides a brief introduction and discussion of the Glossary and
    Document Change Procedures and History sections.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了对词汇表和文档更改程序与历史部分的简要介绍和讨论。
- en: '**12.4.3.1 Glossary**'
  id: totrans-314
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.3.1 词汇表**'
- en: The Glossary section provides an alphabetical list of all terms used in the
    STC. It should include all acronyms along with their definitions. Although Std
    829 lists the glossary at the end of the outline, it usually appears near the
    beginning of the document, close to the References section.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 词汇表部分提供了STC中使用的所有术语的按字母顺序排列的列表。它应包括所有缩写词及其定义。尽管标准829在大纲的末尾列出了词汇表，但通常它出现在文档的开头，接近参考文献部分。
- en: '**12.4.3.2 Document Change Procedures and History**'
  id: totrans-316
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.4.3.2 文档更改程序与历史**'
- en: 'This section describes the process for creating, implementing, and approving
    changes to the STC. This could be nothing more than a reference to a Configuration
    Management Plan document that describes the document change procedures for all
    project documents or for all documents within an organization. The change history
    should contain a chronological list of the following information:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了创建、实施和批准STC更改的过程。这可能仅仅是一个对配置管理计划文档的引用，该文档描述了所有项目文档或所有组织内文档的更改程序。更改历史应包含以下信息的时间顺序列表：
- en: Document ID (each revision should have a unique ID, which can simply be a date
    affixed to the document ID)
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档ID（每个版本应有唯一的ID，可以简单地是附加到文档ID的日期）
- en: Version number (which you should number sequentially, starting with the first
    approved version of the STC)
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本号（你应该按顺序编号，从第一个批准版本的STC开始）
- en: A description of the changes made to the STC for the current version
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前版本STC所做更改的描述
- en: Authorship and role
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作者及其角色
- en: Often, the change history appears in the STC near the beginning of the document,
    or just after the cover page and near the document identifier.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 更改历史通常出现在STC文档的开头，或者在封面页后，靠近文档标识符的位置。
- en: '***12.4.4 A Sample Software Test Case Document***'
  id: totrans-323
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.4.4 一个软件测试案例文档示例***'
- en: Continuing with the theme of the past couple of chapters, this chapter will
    provide a sample STC for the Plantation Productions DAQ system DIP switch initialization
    design. This STC will serve as an acceptance test (pure functional test cases)
    built exclusively from the project SRS (see “(Selected) DAQ Software Requirements
    (from SRS)” on [page 219](ch10.xhtml#page_219)). The test cases appearing in this
    sample STC are all the requirements from this project SRS that have not been included
    in “Requirements to Be Verified by Review” on [page 223](ch10.xhtml#page_223)
    where the “verify by review” requirements are listed. Note, however, that for
    editorial/space reasons, this example will not provide test cases for every “verify
    by review” test requirement in that project SRS.^([13](ch19_footnote.xhtml#ch12fn13))
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 本章继续前几章的主题，提供了一个关于Plantation Productions DAQ系统DIP开关初始化设计的STC示例。这个STC将作为一个验收测试（纯功能测试用例），完全基于项目的SRS（见[第219页](ch10.xhtml#page_219)的“（选定的）DAQ软件需求（来自SRS）”）。出现在这个示例STC中的测试用例是所有未包含在“通过评审验证的需求”中的项目SRS要求，后者列出了“通过评审验证”的要求（见[第223页](ch10.xhtml#page_223)）。然而，请注意，出于编辑/空间原因，此示例不会为该项目SRS中的每个“通过评审验证”的测试要求提供测试用例。^([13](ch19_footnote.xhtml#ch12fn13))
- en: '| **Term** | **Definition** |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| **术语** | **定义** |'
- en: '| --- | --- |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| DAQ | Data acquisition system |'
  id: totrans-327
  prefs: []
  type: TYPE_TB
  zh: '| DAQ | 数据采集系统 |'
- en: '| SBC | Single-board computer |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| SBC | 单板计算机 |'
- en: '| Software Design Description (SDD) | Documentation of the design of the software
    system (IEEE Std 1016-2009)—that is, this document. |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| 软件设计描述（SDD） | 软件系统设计的文档（IEEE Std 1016-2009）——即本文件。 |'
- en: '| Software Requirements Specification (SRS) | Documentation of the essential
    requirements (functions, performance, design constraints, and attributes) of the
    software and its external interfaces (IEEE Std 610.12-1990). |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| 软件需求规格说明（SRS） | 软件及其外部接口的基本需求（功能、性能、设计约束和属性）文档（IEEE Std 610.12-1990）。 |'
- en: '| System Requirements Specification (SyRS) | A structured collection of information
    that embodies the requirements of the system (IEEE Std 1233-1998). A specification
    that documents the requirements to establish a design basis and the conceptual
    design for a system or subsystem. |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| 系统需求规格说明（SyRS） | 一个结构化的信息集合，体现了系统的需求（IEEE Std 1233-1998）。一个文档，记录了建立系统或子系统设计依据和概念设计的需求。
    |'
- en: '| Software Test Cases (STC) | Documentation that describes test cases (inputs
    and outcomes) to verify correct operation of the software based on various design
    concerns/requirements (IEEE Std 829-2009). |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| 软件测试用例（STC） | 描述测试用例（输入和结果）以验证软件在各种设计考虑/要求下的正确操作的文档（IEEE Std 829-2009）。 |'
- en: '| Software Test Procedures (STP) | Documentation that describes the step-by-step
    procedure to execute a set of test cases to verify correct operation of the software
    based on various design concerns/requirements (IEEE Std 829-2009). |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| 软件测试程序（STP） | 描述逐步执行一组测试用例，以验证软件在各种设计考虑/要求下的正确操作的文档（IEEE Std 829-2009）。 |'
- en: '**1 Introduction**'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '**1 引言**'
- en: Software Test Cases for DAQ DIP Switch Project
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ DIP 开关项目的软件测试用例
- en: '**1.1 Document Identifier (and Change History)**'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.1 文档标识符（及变更历史）**'
- en: 'Mar 22, 2018: DAQ_STC v1.0; Author: Randall Hyde'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 2018年3月22日：DAQ_STC v1.0；作者：Randall Hyde
- en: '**1.2 Scope**'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.2 范围**'
- en: This document describes only the DIP switch test cases in the DAQ system (for
    space/editorial reasons). For the full software design description, please see
    *[http://www.plantation-productions.com/Electronics/DAQ/DAQ.html](http://www.plantation-productions.com/Electronics/DAQ/DAQ.html)*.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档仅描述 DAQ 系统中的 DIP 开关测试用例（由于空间/编辑原因）。有关完整的软件设计描述，请参见 *[http://www.plantation-productions.com/Electronics/DAQ/DAQ.html](http://www.plantation-productions.com/Electronics/DAQ/DAQ.html)*。
- en: '**1.3 Glossary, Acronyms, and Abbreviations**'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.3 术语表、缩略语和缩写**'
- en: '**NOTE**'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*This is a very simple and short example to keep the book’s page count down.
    Please don’t use this as boilerplate; you should diligently pick out terms and
    abbreviations that your document uses and list them in this section.*'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '*这是一个非常简单且简短的示例，目的是减少书籍的页数。请不要将其作为模板使用；您应该仔细挑选出文档中使用的术语和缩写，并在本节中列出。*'
- en: '**1.4 References**'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.4 参考文献**'
- en: '| **Reference** | **Discussion** |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| **参考文献** | **讨论** |'
- en: '| --- | --- |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| DAQ STC | An example of a full STC for the Plantation Productions DAQ system
    can be found at *[http://www.plantation-productions.com/Electronics/DAQ/DAQ.html](http://www.plantation-productions.com/Electronics/DAQ/DAQ.html)*.
    |'
  id: totrans-346
  prefs: []
  type: TYPE_TB
  zh: '| DAQ STC | 一个完整的 Plantation Productions DAQ 系统的 STC 示例可以在 *[http://www.plantation-productions.com/Electronics/DAQ/DAQ.html](http://www.plantation-productions.com/Electronics/DAQ/DAQ.html)*
    找到。 |'
- en: '| IEEE Std 830-1998 | SRS documentation standard |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '| IEEE Std 830-1998 | SRS 文档标准 |'
- en: '| IEEE Std 829-2008 | STP documentation standard |'
  id: totrans-348
  prefs: []
  type: TYPE_TB
  zh: '| IEEE Std 829-2008 | STP 文档标准 |'
- en: '| IEEE Std 1012-1998 | Software verification and validation standard |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '| IEEE Std 1012-1998 | 软件验证和确认标准 |'
- en: '| IEEE Std 1016-2009 | SDD documentation standard |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| IEEE Std 1016-2009 | SDD 文档标准 |'
- en: '| IEEE Std 1233-1998 | SyRS documentation standard |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| IEEE Std 1233-1998 | SyRS 文档标准 |'
- en: '**1.5 Context**'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.5 背景**'
- en: 'The DAQ system of Plantation Productions, Inc., fulfilled a need for a well-documented
    digital data acquisition and control system that engineers could design into safety-critical
    systems such as nuclear research reactors. Although there are many COTS systems^([14](ch19_footnote.xhtml#ch12fn14))
    that could be used, they suffer from a couple of major drawbacks, including: they
    are usually proprietary, thus being difficult to modify or repair after purchase;
    they are often obsolete within 5 to 10 years without a way to repair or replace
    them; and they rarely have full support documentation (for example, SRS, SDD,
    STC, and STP) that an engineer can use to validate and verify the system.'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: Plantation Productions, Inc. 的 DAQ 系统满足了对一个有良好文档的数字数据采集和控制系统的需求，工程师可以将其设计到安全关键系统中，例如核研究反应堆。尽管有许多
    COTS 系统^([14](ch19_footnote.xhtml#ch12fn14)) 可以使用，但它们存在一些主要缺点，包括：通常是专有的，因此购买后难以修改或修复；通常在
    5 到 10 年内就会过时，且无法修复或更换；并且它们很少有完整的支持文档（例如 SRS、SDD、STC 和 STP），工程师可以使用这些文档来验证和确认系统。
- en: The DAQ system overcomes this problem by providing an open hardware and open
    source set of designs with full design documentation that is validated and verified
    for safety systems.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ 系统通过提供一套开放硬件和开源设计，解决了这个问题，配有完整的设计文档，并已针对安全系统进行了验证和验证。
- en: Although originally designed for a nuclear research reactor, the DAQ system
    is useful anywhere you need an Ethernet-based control system supporting digital
    (TTL-level) I/O, optically isolated digital inputs, mechanical or solid-state
    relay digital outputs, (isolated and conditioned) analog inputs (for example,
    ±10v and 4-20mA), and (conditioned) analog outputs (±10v).
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管最初设计用于核研究反应堆，DAQ系统在任何需要支持数字（TTL级）I/O、光隔离数字输入、机械或固态继电器数字输出、（隔离并调理的）模拟输入（例如，±10v和4-20mA）以及（调理后的）模拟输出（±10v）的以太网控制系统中都非常有用。
- en: '**1.6 Notation for Description**'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.6 描述的符号表示**'
- en: 'Test case identifiers (*tags*) in this document shall take the form:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档中的测试用例标识符（*标签*）应采取以下形式：
- en: DAQ_STC_*xxx*_*yyy*_*zzz*
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_STC_*xxx*_*yyy*_*zzz*
- en: where *xxx_yyy* is a string of (possibly decimal) numbers taken from the corresponding
    requirement (for example, DAQ_SRS_*xxx*_*yyy*) and *zzz* is a (possibly decimal)
    numeric sequence that creates a unique identifier out of the whole sequence. Note
    that *zzz* values in STC tags are usually numbered from 000 or 001 and usually
    increment by 1 for each additional test case item sharing the same *xxx_yyy* string.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*xxx_yyy*是对应要求中的（可能是十进制）数字串（例如，DAQ_SRS_*xxx*_*yyy*），*zzz*是（可能是十进制的）数字序列，用于从整个序列中创建唯一的标识符。请注意，STC标签中的*zzz*值通常从000或001开始，并且每添加一个新的测试用例项，通常会递增1，所有这些项共享相同的*xxx_yyy*字符串。
- en: '**2 Details (Test Cases)**'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '**2 细节（测试用例）**'
- en: '**2.1 DAQ_STC_701_000_000**'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.1 DAQ_STC_701_000_000**'
- en: 'Objective: Test command acceptance across RS-232.'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：测试通过RS-232接受命令。
- en: 'Inputs:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 输入：
- en: 1\. DIP switch 1 set to ON position.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. DIP开关1设置为ON位置。
- en: 2\. Type `help` command on serial terminal.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 在串行终端输入`help`命令。
- en: 'Outcome:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: 1\. Screen displays `help` message.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 屏幕显示`help`消息。
- en: 'Environmental Needs:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 环境需求：
- en: '**Hardware** Functioning (booted) DAQ system, PC with RS-232 port connected
    to DAQ'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬件** 正常运行的（已启动）DAQ系统，PC通过RS-232端口连接到DAQ'
- en: '**Software** Latest version of DAQ firmware installed'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '**软件** 已安装最新版的DAQ固件'
- en: '**External** Serial terminal emulator program running on PC'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '**外部** 串行终端仿真程序在PC上运行'
- en: 'Special Procedural Requirements:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊程序要求：
- en: '[None]'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '[无]'
- en: 'Intercase Dependencies:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 测试间依赖：
- en: '[None]'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '[无]'
- en: '**2.2 DAQ_STC_702_000_000**'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.2 DAQ_STC_702_000_000**'
- en: 'Objective: Test command acceptance with DIP switch 1 ON.'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：测试DIP开关1 ON时的命令接受。
- en: 'Inputs:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 输入：
- en: 1\. DIP switch 1 set to ON position.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. DIP开关1设置为ON位置。
- en: 2\. Type `help` command on serial terminal.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 在串行终端输入`help`命令。
- en: 'Outcome:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: 1\. Screen displays `help` message.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 屏幕显示`help`消息。
- en: 'Environmental Needs:'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 环境需求：
- en: '**Hardware** Functioning (booted) DAQ system, PC with RS-232 port connected
    to DAQ'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬件** 正常运行的（已启动）DAQ系统，PC通过RS-232端口连接到DAQ'
- en: '**Software** Latest version of DAQ firmware installed'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '**软件** 已安装最新版的DAQ固件'
- en: '**External** Serial terminal emulator program running on PC'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '**外部** 串行终端仿真程序在PC上运行'
- en: 'Special Procedural Requirements:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊程序要求：
- en: '[None]'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '[无]'
- en: 'Intercase Dependencies:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 测试间依赖：
- en: Same test as DAQ_STC_701_000_000
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 与DAQ_STC_701_000_000相同的测试
- en: '**2.3 DAQ_STC_703_000_000**'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.3 DAQ_STC_703_000_000**'
- en: 'Objective: Test command rejection with DIP switch 1 OFF.'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：测试DIP开关1 OFF时的命令拒绝。
- en: 'Inputs:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 输入：
- en: 1\. DIP switch 1 set to OFF position.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. DIP开关1设置为OFF位置。
- en: 2\. Type `help` command on serial terminal.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 在串行终端输入`help`命令。
- en: 'Outcome:'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: 1\. System ignores command, no response on terminal program.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 系统忽略命令，终端程序没有响应。
- en: 'Environmental Needs:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 环境需求：
- en: '**Hardware** Functioning (booted) DAQ system, PC with RS-232 port connected
    to DAQ'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬件** 正常运行的（已启动）DAQ系统，PC通过RS-232端口连接到DAQ'
- en: '**Software** Latest version of DAQ firmware installed'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '**软件** 已安装最新版的DAQ固件'
- en: '**External** Serial terminal emulator program running on PC'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '**外部** 串行终端仿真程序在PC上运行'
- en: 'Special Procedural Requirements:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊程序要求：
- en: '[None]'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '[无]'
- en: 'Intercase Dependencies:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 测试间依赖：
- en: '[None]'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '[无]'
- en: '**NOTE**'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*For space/editorial reasons, this sample has deleted several test cases at
    this point because they are very similar in content to the previous test cases.*'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '*由于空间/编辑原因，本示例在此删除了几个测试用例，因为它们的内容与之前的测试用例非常相似。*'
- en: '**2.4 DAQ_STC_709_000_000**'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.4 DAQ_STC_709_000_000**'
- en: 'Objective: Test Ethernet address with both DIP switches 5 and 6 OFF.'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：测试以太网地址，当DIP开关5和6都为OFF时。
- en: 'Inputs:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 输入：
- en: 1\. DIP switch 3 set to ON position (4 = don’t care).
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. DIP开关3设置为ON位置（4 = 不关心）。
- en: 2\. DIP switch 5 set to OFF position.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. DIP开关5设置为OFF位置。
- en: 3\. DIP switch 6 set to OFF position
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. DIP开关6设置为OFF位置
- en: 4\. Using an Ethernet terminal program, attempt connection to IP address 192.168.2.70,
    port 20560 (0x5050).
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 使用以太网终端程序，尝试连接到IP地址192.168.2.70，端口20560（0x5050）。
- en: 5\. Issue `help` command.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 发出`help`命令。
- en: 'Outcome:'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: 1\. Ethernet terminal connects to DAQ system.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 以太网终端连接到DAQ系统。
- en: 2\. Terminal program display DAQ `help` message.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 终端程序显示DAQ `help`信息。
- en: 'Environmental Needs:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 环境需求：
- en: '**Hardware** Functioning (booted) DAQ system, PC with Ethernet port connected
    to DAQ'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬件** 正常工作的（已启动的）DAQ系统，PC连接到DAQ的以太网端口'
- en: '**Software** Latest version of DAQ firmware installed'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '**软件** 安装了最新版本的DAQ固件'
- en: '**External** Ethernet terminal emulator program running on PC'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: '**外部**以太网终端仿真程序在PC上运行'
- en: 'Special Procedural Requirements:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊程序要求：
- en: '[None]'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '[无]'
- en: 'Intercase Dependencies:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 案例间依赖：
- en: Cases DAQ_STC_708_000_000 to DAQ_STC_718_001_000 are closely related and should
    be performed together.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 案例DAQ_STC_708_000_000到DAQ_STC_718_001_000紧密相关，应一同执行。
- en: '**NOTE**'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*For space/editorial reasons, this sample has deleted several test cases at
    this point because they are very similar in content to the previous test cases.*'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: '*由于空间/编辑原因，示例中删除了几个测试案例，因为它们与之前的测试案例内容非常相似。*'
- en: '**2.6 DAQ_STC_710_000_000**'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.6 DAQ_STC_710_000_000**'
- en: 'Objective: Test Ethernet address with DIP switches 5 ON and 6 OFF.'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：测试DIP开关5为ON和6为OFF时的以太网地址。
- en: 'Inputs:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 输入：
- en: 1\. DIP switch 3 set to ON position (4 = don’t care).
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. DIP开关3设置为ON位置（4 = 不关心）。
- en: 2\. DIP switch 5 set to ON position.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. DIP开关5设置为ON位置。
- en: 3\. DIP switch 6 set to OFF position.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. DIP开关6设置为OFF位置。
- en: 4\. Using an Ethernet terminal program, attempt connection to IP address 192.168.2.71,
    port 20560 (0x5050).
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 使用以太网终端程序，尝试连接到IP地址192.168.2.71，端口20560（0x5050）。
- en: 5\. Issue `help` command.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 发出`help`命令。
- en: 'Outcome:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: 1\. Ethernet terminal connects to DAQ system.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 以太网终端连接到DAQ系统。
- en: 2\. Terminal program displays DAQ `help` message.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 终端程序显示DAQ `help`信息。
- en: 'Environmental Needs:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 环境需求：
- en: '**Hardware** Functioning (booted) DAQ system, PC with Ethernet port connected
    to DAQ'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬件** 正常工作的（已启动的）DAQ系统，PC连接到DAQ的以太网端口'
- en: '**Software** Latest version of DAQ firmware installed'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: '**软件** 安装了最新版本的DAQ固件'
- en: '**External** Ethernet terminal emulator program running on PC'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '**外部**以太网终端仿真程序在PC上运行'
- en: 'Special Procedural Requirements:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊程序要求：
- en: '[None]'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '[无]'
- en: 'Intercase Dependencies:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 案例间依赖：
- en: Cases DAQ_STC_708_000_000 to DAQ_STC_718_001_000 are closely related and should
    be performed together.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 案例DAQ_STC_708_000_000到DAQ_STC_718_001_000紧密相关，应一同执行。
- en: '**2.7 DAQ_STC_711_000_000**'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.7 DAQ_STC_711_000_000**'
- en: 'Objective: Test Ethernet address with DIP switch 5 OFF and 6 ON.'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：测试DIP开关5为OFF和6为ON时的以太网地址。
- en: 'Inputs:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 输入：
- en: 1\. DIP switch 3 set to ON position (4 = don’t care).
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. DIP开关3设置为ON位置（4 = 不关心）。
- en: 2\. DIP switch 5 set to OFF position.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. DIP开关5设置为OFF位置。
- en: 3\. DIP switch 6 set to ON position.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. DIP开关6设置为ON位置。
- en: 4\. Using an Ethernet terminal program, attempt connection to IP address 192.168.2.72,
    port 20560 (0x5050).
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 使用以太网终端程序，尝试连接到IP地址192.168.2.72，端口20560（0x5050）。
- en: 5\. Issue `help` command.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 发出`help`命令。
- en: 'Outcome:'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: 1\. Ethernet terminal connects to DAQ system.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 以太网终端连接到DAQ系统。
- en: 2\. Terminal program displays DAQ `help` message.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 终端程序显示DAQ `help`信息。
- en: 'Environmental Needs:'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 环境需求：
- en: '**Hardware** Functioning (booted) DAQ system, PC with Ethernet port connected
    to DAQ'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬件** 正常工作的（已启动的）DAQ系统，PC连接到DAQ的以太网端口'
- en: '**Software** Latest version of DAQ firmware installed'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '**软件** 安装了最新版本的DAQ固件'
- en: '**External** Ethernet terminal emulator program running on PC'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '**外部**以太网终端仿真程序在PC上运行'
- en: 'Special Procedural Requirements:'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊程序要求：
- en: '[None]'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '[无]'
- en: 'Intercase Dependencies:'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 案例间依赖：
- en: Cases DAQ_STC_708_000_000 to DAQ_STC_718_001_000 are closely related and should
    be performed together.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 案例DAQ_STC_708_000_000到DAQ_STC_718_001_000紧密相关，应一同执行。
- en: '**2.8 DAQ_STC_712_000_000**'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.8 DAQ_STC_712_000_000**'
- en: 'Objective: Test Ethernet address with both DIP switches 5 and 6 ON.'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：测试DIP开关5和6都为ON时的以太网地址。
- en: 'Inputs:'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 输入：
- en: 1\. DIP switch 3 set to ON position (4 = don’t care).
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. DIP开关3设置为ON位置（4 = 不关心）。
- en: 2\. DIP switch 5 set to ON position.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. DIP开关5设置为ON位置。
- en: 3\. DIP switch 6 set to ON position.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. DIP开关6设置为ON位置。
- en: 4\. Using an Ethernet terminal program, attempt connection to IP address 192.168.2.73,
    port 20560 (0x5050).
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 使用以太网终端程序，尝试连接到IP地址192.168.2.73，端口20560（0x5050）。
- en: 5\. Issue `help` command.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 发出`help`命令。
- en: 'Outcome:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: 1\. Ethernet terminal connects to DAQ system.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 以太网终端连接到DAQ系统。
- en: 2\. Terminal program displays DAQ `help` message.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 终端程序显示DAQ `help`信息。
- en: 'Environmental Needs:'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 环境需求：
- en: '**Hardware** Functioning (booted) DAQ system, PC with Ethernet port connected
    to DAQ'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬件** 正常运行（已启动）的DAQ系统，带以太网端口并连接到DAQ的PC'
- en: '**Software** Latest version of DAQ firmware installed'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: '**软件** 安装了最新版本的DAQ固件'
- en: '**External** Ethernet terminal emulator program running on PC'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: '**外部** 在PC上运行的以太网终端仿真程序'
- en: 'Special Procedural Requirements:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊程序要求：
- en: '[None]'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: '[无]'
- en: 'Intercase Dependencies:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 案例间依赖关系：
- en: Cases DAQ_STC_708_000_000 to DAQ_STC_718_001_000 are closely related and should
    be performed together.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 案例DAQ_STC_708_000_000到DAQ_STC_718_001_000密切相关，应一起执行。
- en: '**NOTE**'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*For space/editorial reasons, this sample has deleted several test cases at
    this point because they are very similar in content to the previous test cases.*'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: '*出于篇幅/编辑原因，此示例在此删除了若干测试用例，因为它们与前面的测试用例内容非常相似。*'
- en: '**2.9 DAQ_STC_726_000_000**'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.9 DAQ_STC_726_000_000**'
- en: 'Objective: Test command acceptance from RS-232 port.'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：测试来自RS-232端口的命令接收。
- en: 'Inputs:'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 输入：
- en: 1\. DIP switch 1 set to ON position.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 1. DIP开关1设置为ON位置。
- en: 2\. Type `help` command on serial terminal.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 在串行终端输入`help`命令。
- en: 'Outcome:'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: 1\. Screen displays `help` message.
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 屏幕显示`help`消息。
- en: 'Environmental Needs:'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 环境需求：
- en: '**Hardware** Functioning (booted) DAQ system, PC with RS-232 port connected
    to DAQ'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬件** 正常运行（已启动）的DAQ系统，带RS-232端口并连接到DAQ的PC'
- en: '**Software** Latest version of DAQ firmware installed'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: '**软件** 安装了最新版本的DAQ固件'
- en: '**External** Serial terminal emulator program running on PC'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: '**外部** 在PC上运行的串行终端仿真程序'
- en: 'Special Procedural Requirements:'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊程序要求：
- en: '[None]'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: '[无]'
- en: 'Intercase Dependencies:'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 案例间依赖关系：
- en: Same test as DAQ_STC_701_000_000
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 与DAQ_STC_701_000_000相同的测试
- en: '**3 Test Case Document Change Procedure**'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: '**3 测试用例文档更改程序**'
- en: When making any modifications to this STC, the author of the change must make
    a new entry in section 1.1 of this STC document, listing (at a minimum) the date,
    document ID (DAQ_STC), version number, and authorship.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 在对本STC进行任何修改时，变更的作者必须在此STC文档的1.1节中做出新的条目，至少列出日期、文档ID（DAQ_STC）、版本号和作者。
- en: '***12.4.5 Updating the RTM with STC Information***'
  id: totrans-505
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.4.5 更新RTM以包含STC信息***'
- en: Due to software review and software test case (and analysis/other) verification
    methods being mutually exclusive, you need only a single column in the RTM to
    associate the tags for these objects with other items in the RTM. In the RTM of
    the official DAQ system (which has only test cases and software review items),
    the label for this column is simply *Software Test/Review Cases*. When you add
    both DAQ_SR_*xxx_yyy_zzz* and DAQ_STC_*xxx_yyy_zzz* items to this column, there
    is never any ambiguity as the tag clearly identifies which verification type you’re
    using. Of course, this assumes that you’re using the tag identifier format that
    this chapter suggests. You could use your own tag format that also differentiates
    review and test case items in the tag name.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 由于软件审核和软件测试用例（及分析/其他）验证方法是相互独立的，你只需要在RTM中使用单独的一列来关联这些对象的标签与RTM中的其他项。在官方DAQ系统的RTM中（该系统只有测试用例和软件审核项），该列的标签是*软件测试/审核用例*。当你将DAQ_SR_*xxx_yyy_zzz*和DAQ_STC_*xxx_yyy_zzz*项目添加到此列时，由于标签明确标识了你使用的验证类型，因此永远不会有歧义。当然，这假设你使用的是本章建议的标签标识符格式。你也可以使用自己的标签格式，只要它能在标签名称中区分审核和测试用例项。
- en: If you’re using this chapter’s STC tag format, locating the row in the RTM where
    you want to place the test case tag is very easy. Just locate the requirement
    with the tag DAQ_SRS_*xxx_yyy* and add the STC tag to the appropriate column in
    the same row. If you’re using a different tag format that doesn’t include requirement
    traceability directly in the tag name, you’ll have to determine the association
    manually (hopefully it’s contained within the test case).
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用本章的STC标签格式，在RTM中定位要放置测试用例标签的行非常简单。只需找到带有标签DAQ_SRS_*xxx_yyy*的需求，并将STC标签添加到同一行的适当列中。如果你使用的标签格式不同，且标签名称中不直接包含需求可追溯性，你需要手动确定关联关系（希望它能包含在测试用例中）。
- en: '**12.5 Software Test Procedure Documentation**'
  id: totrans-508
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**12.5 软件测试程序文档**'
- en: The *Software Test Procedure (STP)* specifies the steps for executing a collection
    of test cases, which, in turn, evaluate the quality of the software system. In
    one respect, the STP is an optional document; after all, if you execute all the
    test cases (in an appropriate order), you will fully test all the test cases.
    The purpose behind an STP is to streamline the testing process. More often than
    not, test cases overlap. Although they test different requirements, it may turn
    out that the inputs for multiple test cases are identical. In some cases, even
    the outcomes are identical. By merging such test cases into a single procedure,
    you can run a single test sequence that handles all test cases.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '*软件测试程序（STP）*指定了执行一组测试用例的步骤，这些测试用例反过来评估软件系统的质量。从某种意义上说，STP是一个可选文档；毕竟，如果你按适当的顺序执行所有的测试用例，你将全面测试所有测试用例。STP的目的是简化测试过程。实际上，测试用例通常是重叠的。尽管它们测试不同的需求，但可能多个测试用例的输入是相同的。在某些情况下，甚至输出也是相同的。通过将这些测试用例合并到一个程序中，你可以运行一个单一的测试序列来处理所有的测试用例。'
- en: Another reason for merging test cases into a single STP is the convenience of
    a common setup. Many test cases require (possibly elaborate) setup to ensure certain
    environmental conditions prior to execution. More often than not, multiple test
    cases require the same setup prior to their execution. By merging those test cases
    into a single procedure, you can perform the setup once for the entire set rather
    than repeating it for each and every test case.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 将测试用例合并为一个STP的另一个原因是为了方便共同的设置。许多测试用例在执行之前需要（可能是复杂的）设置，以确保特定的环境条件。往往，多个测试用例在执行之前需要相同的设置。通过将这些测试用例合并到一个程序中，你可以为整个测试集执行一次设置，而不是为每个测试用例重复设置。
- en: Finally, some test cases may have dependencies that require other test cases
    to execute prior to their execution. By putting these test cases in a test procedure,
    you can ensure that the test operation satisfies the dependencies.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，一些测试用例可能有依赖关系，需要在执行之前先执行其他测试用例。通过将这些测试用例放入测试程序中，你可以确保测试操作满足这些依赖关系。
- en: 'Std 829 defines a set of Level *Test Procedures (LTPr)*. As with all of the
    *level* test documents in Std 829 there are four variants of the LTPr, each variant
    being a document generally describing the scope or extent of software testing
    being documented: Component Test Procedures (aka Unit Test Procedures, or UTP),
    Component Integration Test Procedures (aka Integration Test Procedures, or ITP),
    System Test Procedures (aka System Integration Test Procedures, or SITP), and
    Acceptance Test Procedures (ATP; may include Factory Acceptance Test Procedures
    [FATP] or Site Acceptance Test Procedures [SATP]).^([15](ch19_footnote.xhtml#ch12fn15))'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 标准829定义了一组*级别测试程序（LTPr）*。和标准829中所有*级别*的测试文档一样，LTPr有四种变体，每种变体都是一个大致描述软件测试范围或程度的文档：组件测试程序（即单元测试程序，或UTP），组件集成测试程序（即集成测试程序，或ITP），系统测试程序（即系统集成测试程序，或SITP），以及验收测试程序（ATP；可能包括工厂验收测试程序[FATP]或现场验收测试程序[SATP]）。^([15](ch19_footnote.xhtml#ch12fn15))
- en: UTPs and ITPs are often automated test procedures or less formal documents,
    similar to their test case document counterparts; see “[Software Test Case Documentation](ch12.xhtml#lev-12.4)”
    on [page 274](ch12.xhtml#page_274) for an in-depth discussion.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: UTP和ITP通常是自动化的测试程序或较为非正式的文档，类似于它们的测试用例文档对应物；详细讨论请见[《软件测试用例文档》](ch12.xhtml#lev-12.4)，见[第274页](ch12.xhtml#page_274)。
- en: If you look back at [Figures 12-1](ch12.xhtml#ch12fig1) and [12-2](ch12.xhtml#ch12fig2),
    you can see that the STP (and all LTPrs) are derived directly from the STC (LTC)
    documentation. [Figure 12-1](ch12.xhtml#ch12fig1) applies to UTPs and ITPs. [Figure
    12-2](ch12.xhtml#ch12fig2) applies to SITPs and ATPs (noting that ATPs derive
    from test cases that come strictly from SyRS/SRS requirements, not from SDD elements).
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你回顾一下[图12-1](ch12.xhtml#ch12fig1)和[12-2](ch12.xhtml#ch12fig2)，你会看到，STP（以及所有的LTPr）直接来源于STC（LTC）文档。[图12-1](ch12.xhtml#ch12fig1)适用于UTP和ITP。[图12-2](ch12.xhtml#ch12fig2)适用于SITP和ATP（需要注意的是，ATPs来源于严格来自SyRS/SRS要求的测试用例，而不是来自SDD元素）。
- en: As is true for test case documentation, ATPs are usually a subset of the SITPs
    to the customer or end user. Likewise, if there are FATP and SATP documents, the
    SATP is often a subset of the FATP, with further refinement to end-user requirements.^([16](ch19_footnote.xhtml#ch12fn16))
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 和测试用例文档一样，ATPs通常是SITPs的一个子集，面向客户或最终用户。同样，如果存在FATP和SATP文档，SATP通常是FATP的一个子集，经过进一步细化以满足最终用户的需求。^([16](ch19_footnote.xhtml#ch12fn16))
- en: '***12.5.1 The IEEE Std 829-2009 Software Test Procedure***'
  id: totrans-516
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.5.1 IEEE Std 829-2009软件测试程序***  '
- en: 'The outline for the Std 829 STP is as follows:'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 'Std 829 STP的大纲如下：  '
- en: 1 Introduction
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '1 引言  '
- en: 1.1 Document Identifier
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '1.1 文档标识符  '
- en: 1.2 Scope
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: '1.2 范围  '
- en: 1.3 References
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: '1.3 参考文献  '
- en: 1.4 Relationship to Other Documents
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: '1.4 与其他文档的关系  '
- en: 2 Details
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: '2 详细信息  '
- en: 2.1 Inputs, Outputs, and Special Requirements
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '2.1 输入、输出和特殊要求  '
- en: 2.2 Ordered Description of the Steps to Be Taken to Execute the Test Cases
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: '2.2 执行测试用例步骤的有序描述  '
- en: 3 General
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: '3 一般  '
- en: 3.1 Glossary
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: '3.1 词汇表  '
- en: 3.2 Document Change Procedures and History
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '3.2 文档变更程序与历史  '
- en: '*12.5.2 Extended Outline for Software Test Procedure*'
  id: totrans-529
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*12.5.2 扩展的软件测试程序大纲*  '
- en: As is typical for IEEE standards, you’re allowed to augment this outline (adding,
    deleting, moving, and editing items, with appropriate justification). This flexibility
    is important in this particular case because there are a couple of things missing
    from this outline.
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: '像IEEE标准中典型的那样，您可以增强这个大纲（添加、删除、移动和编辑项目，前提是有适当的理由）。在这个特定的案例中，这种灵活性非常重要，因为这个大纲中缺少了一些内容。  '
- en: 'First of all, the introduction is missing Notation for Descriptions, which
    appears in the STC outline (“Software Test Case Documentation” on [page 274](ch12.xhtml#page_274)).^([17](ch19_footnote.xhtml#ch12fn17))
    Perhaps the authors of Std 829 were expecting very few test procedures to appear
    in Section 2 (“Details”) of the document. In practice, however, it’s common to
    have a large number of test procedures. There are some very good reasons for breaking
    a single large test procedure into a series of smaller ones:'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: '首先，引言中缺少描述符的符号表示法，这在STC大纲中有所提及（“软件测试用例文档”见[第274页](ch12.xhtml#page_274)）。^([17](ch19_footnote.xhtml#ch12fn17))
    也许IEEE Std 829的作者认为文档第2部分（“详细信息”）中的测试程序数量会很少。然而，实际上，测试程序的数量通常较多。将一个大型测试程序拆分成多个较小的程序有一些非常好的理由：  '
- en: Testing can take place in parallel. By assigning (independent) test procedures
    to multiple test teams, you can complete the testing faster.
  id: totrans-532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '测试可以并行进行。通过将（独立的）测试程序分配给多个测试团队，您可以更快地完成测试。  '
- en: Certain tests may tie up resources (for example, test equipment such as oscilloscopes,
    logic analyzers, test fixtures, and signal generators). By breaking up a large
    test procedure into smaller test procedures, you may be able to limit the time
    a testing team needs access to certain resources.
  id: totrans-533
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '某些测试可能会占用资源（例如，示波器、逻辑分析仪、测试夹具和信号发生器等测试设备）。通过将一个大型测试程序拆分为多个小的测试程序，您可能能够限制测试团队对某些资源的使用时间。  '
- en: It’s nice to be able to complete a test procedure within a single working day
    (or even between breaks in the day) so testers don’t lose focus when performing
    tests.
  id: totrans-534
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '能够在一个工作日内（甚至在白天的休息时间之间）完成一个测试程序是件不错的事情，这样测试人员在执行测试时就不会失去注意力。  '
- en: Organizing test procedures by their related activities (and by required setup
    prior to those activities) can streamline test procedures, reducing steps and
    making them more efficient to run.
  id: totrans-535
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按相关活动（以及活动前所需的设置）组织测试程序可以简化测试程序，减少步骤，并使它们运行得更高效。
- en: Many organizations require a testing team to rerun a test procedure from the
    beginning (a regression test) if any part of that test fails. Breaking a test
    procedure into smaller pieces makes rerunning test procedures far less expensive.
  id: totrans-536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '许多组织要求如果测试中的任何部分失败，测试团队必须从头开始重新执行测试程序（回归测试）。将测试程序分解为更小的部分可以使重新执行测试程序的成本大大降低。  '
- en: To be able to trace these test procedures back to the STC, to the SRS, and to
    other documentation in the RTM, you’re going to need test procedure identifiers
    (tags). Therefore, you should have a section to describe the notation you’re using
    for these tags.
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '为了能够追溯这些测试程序到STC、SRS以及RTM中的其他文档，您需要测试程序标识符（标签）。因此，您应该有一个部分来描述这些标签的符号表示法。  '
- en: 'Of course, the second thing missing from the IEEE outline is an entry for the
    test procedure identification in the *Details* section. To make traceability easier,
    it would also be nice to have a section in each test procedure where you list
    the associated test cases it covers. Finally, for my own purposes, I like to include
    the following information with each test procedure:'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: '当然，IEEE大纲中缺少的第二件事是*详细信息*部分中的测试程序标识符项。为了便于追溯，最好在每个测试程序中都有一个部分，列出它所涵盖的相关测试用例。最后，为了我自己的目的，我喜欢在每个测试程序中包含以下信息：  '
- en: Brief description
  id: totrans-539
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '简要描述  '
- en: Tag/identification
  id: totrans-540
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '标签/标识  '
- en: Purpose
  id: totrans-541
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '目的  '
- en: Traceability (test cases covered)
  id: totrans-542
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '可追溯性（涵盖的测试用例）  '
- en: Pass/fail criteria (as this may change with each procedure)
  id: totrans-543
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过/失败标准（因为这可能会随着每个程序的不同而变化）
- en: Any special requirements (for example, environmental) required to run this test
    procedure; this could include input/output files that must exist, among other
    things
  id: totrans-544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行此测试程序所需的任何特殊要求（例如，环境要求）；这可能包括必须存在的输入/输出文件等内容
- en: All setup required prior to running the test procedure
  id: totrans-545
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行测试程序前的所有设置要求
- en: Software version number when executing the test procedure
  id: totrans-546
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行测试程序时的软件版本号
- en: Procedure steps to execute the test procedure
  id: totrans-547
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行测试程序的步骤
- en: 'Incorporating these items produces the following extended outline for an arbitrary
    STP suitable for an SIT, AT, FAT, or SAT:'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些项目整合后，产生了适用于SIT、AT、FAT或SAT的任意STP的扩展大纲：
- en: 1 Table of Contents
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 1 目录
- en: 2 Introduction
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 2 引言
- en: 2.1 Document Identifier and Change History (moved)
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1 文档标识符和变更历史（已移动）
- en: 2.2 Scope
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2 范围
- en: 2.3 Glossary, Acronyms, and Abbreviations (moved)
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 2.3 术语表、缩略语和缩写（已移动）
- en: 2.4 References
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 2.4 参考文献
- en: 2.5 Notation for Descriptions
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 2.5 描述符号
- en: 2.6 Relationship to Other Documents (removed)
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 2.6 与其他文档的关系（已删除）
- en: 2.7 Instructions for Running the Tests (added)
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 2.7 执行测试的说明（已添加）
- en: 3 Test Procedures (name changed from *Details*)
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 3 测试程序（名称已更改为*详情*）
- en: '3.1 Brief Description (simple phrase), Procedure #1'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: '3.1 简要描述（简单短语），程序 #1'
- en: 3.1.1 Procedure Identification (Tag)
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.1 程序标识符（标签）
- en: 3.1.2 Purpose
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.2 目的
- en: 3.1.3 List of Test Cases Covered by This Procedure
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.3 本程序涵盖的测试用例列表
- en: 3.1.4 Special Requirements
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.4 特殊要求
- en: 3.1.5 Setup Required Prior to Running Procedure
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.5 执行程序前的设置要求
- en: 3.1.6 Software Version Number for This Execution
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.6 本次执行的软件版本号
- en: 3.1.7 Detailed Steps to Run the Procedure
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.7 执行程序的详细步骤
- en: 3.1.8 Sign-off on Test Procedure
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.8 测试程序签字确认
- en: '3.2 Brief Description (simple phrase), Procedure #2'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: '3.2 简要描述（简单短语），程序 #2'
- en: (Same subsections as previous section)
  id: totrans-569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （与前一节相同的小节）
- en: . . .
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: . . .
- en: '3.*n* Brief Description (simple phrase), Procedure #*n*'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: '3.*n* 简要描述（简单短语），程序 #*n*'
- en: (Same subsections as previous sections)
  id: totrans-572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （与前一节相同的小节）
- en: 4 General
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 4 总则
- en: 4.1 Document Change Procedures
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 4.1 文档变更程序
- en: 4.2 Attachments and Appendixes
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 4.2 附件和附录
- en: 5 Index
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 5 索引
- en: '***12.5.3 Introduction in the STP Document***'
  id: totrans-577
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.5.3 STP文档中的引言***'
- en: The following subsections describe the components of the STP introduction.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 以下小节描述了STP引言的组成部分。
- en: '**12.5.3.1 Document Identifier and Change History**'
  id: totrans-579
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.5.3.1 文档标识符和变更历史**'
- en: The document identifier should be some (organization-wide) unique name; this
    will typically include some project designation such as *DAQ_STP*, a creation/modification
    date, a version number, and authorship. A list of these identifiers (one for each
    revision to the document) would form the change history.
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 文档标识符应是某个（组织范围内）唯一的名称；这通常会包括某个项目标识，如*DAQ_STP*，创建/修改日期，版本号以及作者。一个标识符列表（每次文档修订的一个标识符）将构成变更历史。
- en: '**12.5.3.2 Scope**'
  id: totrans-581
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.5.3.2 范围**'
- en: The scope here has largely the same definition as that used for the STC (see
    “[Software Test Case Documentation](ch12.xhtml#lev-12.4)” on [page 274](ch12.xhtml#page_274)).
    Std 829 suggests describing the scope of the STP based on its focus and relationship
    to the STC and other test documentation. More often than not, you can get away
    with a simple reference to the Scope section in the STC.
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的范围基本上与用于STC的定义相同（请参见 “[软件测试用例文档](ch12.xhtml#lev-12.4)” 在 [第274页](ch12.xhtml#page_274)）。标准829建议根据STP的重点及其与STC和其他测试文档的关系来描述STP的范围。通常，你可以简单地引用STC中的范围部分。
- en: '**12.5.3.3 References**'
  id: totrans-583
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.5.3.3 参考文献**'
- en: As usual, provide a link to any external documents (such as the STC) that are
    relevant to the STP. Std 829 also suggests including links to the individual test
    cases covered by this procedure. That, however, would be meaningful only if the
    STP contained just a few test procedures. In this revised format, the STP will
    attach the test case links to the individual test procedures in Section 3 (“Test
    Procedures”). If you have a very large system consisting of multiple, independent
    applications, you will probably have separate STPs for each of those applications.
    You would want to provide links to those other STPs in this section of the STP
    document.
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，提供任何与STP相关的外部文档链接（例如STC）。标准829还建议包括与此过程相关的各个测试用例的链接。然而，只有当STP中只包含少量测试过程时，这才有意义。在这种修订后的格式中，STP将在第3节（“测试过程”）中将测试用例链接附加到各个测试过程。如果你有一个由多个独立应用程序组成的非常大的系统，你可能会为每个应用程序准备独立的STP。在STP文档的这一部分，你应提供指向其他STP的链接。
- en: '**12.5.3.4 Notation for Descriptions**'
  id: totrans-585
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.5.3.4 描述的符号表示法**'
- en: As in the STC, you would describe your STP tag format here. This book recommends
    using STP tags of the form *proj*_STP_*xxx*, where *proj* is some project-specific
    ID (such as *DAQ* or *POOL*) and *xxx* is some unique (possibly decimal) numeric
    sequence.
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 如同在STC中一样，你将在此描述你的STP标签格式。本书建议使用形如*proj*_STP_*xxx*的STP标签，其中*proj*是某个特定项目的ID（例如*DAQ*或*POOL*），*xxx*是某个唯一的（可能是十进制的）数字序列。
- en: Note that there is a many-to-one relationship from STC test cases to STP test
    procedures. Therefore, you cannot easily embed traceability information into the
    STP tags (there’s a similar situation with SDD tags; see “[SDD Traceability and
    Tags](ch11.xhtml#lev-11.4)” on [page 245](ch11.xhtml#page_245)). This is why it’s
    important to include the related STC tags with each test procedure, to facilitate
    traceability back to the corresponding test cases.
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，STC测试用例与STP测试过程之间是多对一的关系。因此，你不能轻易地将可追溯性信息嵌入STP标签中（在SDD标签中也存在类似情况；参见“[SDD可追溯性与标签](ch11.xhtml#lev-11.4)”[第245页](ch11.xhtml#page_245)）。因此，重要的是在每个测试过程中附加相关的STC标签，以便便于追溯回对应的测试用例。
- en: '**12.5.3.5 Relationship to Other Documents**'
  id: totrans-588
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.5.3.5 与其他文档的关系**'
- en: In the modified variant of the STP, I’ve removed this section. Std 829 suggests
    using it to describe the relationship of this STP to other test procedure documents—specifically,
    which test procedures must be performed before or after other test procedures.
    However, in the modified form all test procedures appear in the same document.
    Therefore, a description of the relationship between tests should accompany each
    individual test procedure. (This information appears in the “Special Requirements”
    section.)
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 在STP的修改版本中，我已删除此节。标准829建议使用它来描述此STP与其他测试过程文档的关系——具体而言，哪些测试过程必须在其他测试过程之前或之后执行。然而，在修改后的版本中，所有测试过程都出现在同一文档中。因此，测试之间的关系描述应随每个单独的测试过程一起出现。（这些信息出现在“特殊要求”部分。）
- en: 'This is one reason for including this section in the modified form of the STP:
    very large systems may contain multiple (and relatively independent) software
    applications. There would probably be separate STP documents for each of these
    applications. This section of the modified STP could describe the relationship
    of this STP to those others, including the order in which tests must execute these
    STPs.'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在STP的修改版本中包括此部分的原因之一：非常大的系统可能包含多个（且相对独立的）软件应用程序。每个应用程序可能都有单独的STP文档。修改后的STP的这一部分可以描述此STP与其他STP的关系，包括测试必须执行这些STP的顺序。
- en: '**12.5.3.6 Instructions for Running Tests**'
  id: totrans-591
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.5.3.6 测试运行说明**'
- en: This section should contain generic instructions to whomever will be running
    the tests. Usually the people running the tests are not the software developers.^([18](ch19_footnote.xhtml#ch12fn18))
    This section can provide insights into the software to be tested for those who
    have not lived with it on a daily basis from its inception.
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: 本节应包含对执行测试的人员的通用说明。通常，执行测试的人员并非软件开发人员。^([18](ch19_footnote.xhtml#ch12fn18))
    本节可以为那些从未日常使用软件并从头开始接触的人提供关于待测试软件的见解。
- en: One important piece of information that should appear here is what to do if
    a test procedure fails. Should the tester attempt to continue that test procedure
    (if possible) in hopes of finding additional problems? Should the tester immediately
    suspend testing operations until the development team resolves the issue? If a
    test has been suspended, what is the process for resuming the test? For example,
    most QA teams require, at the very least, rerunning the test procedure from the
    beginning.^([19](ch19_footnote.xhtml#ch12fn19)) Some QA teams may also require
    a meeting with development to determine a set of regression tests to run before
    resuming the test procedure from the point of failure.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 这里应该包含的一项重要信息是，如果测试程序失败，应怎么做。测试人员是否应该尝试继续该测试程序（如果可能），希望找到更多问题？测试人员是否应立即暂停测试，直到开发团队解决问题？如果测试已被暂停，恢复测试的过程是什么？例如，大多数QA团队至少要求重新从头开始运行测试程序^([19](ch19_footnote.xhtml#ch12fn19))。有些QA团队可能还要求与开发团队开会，确定一组回归测试，以便在从故障点恢复测试程序之前进行运行。
- en: This section should also discuss how to log any problems/anomalies that occur
    during testing and to describe how to bring the system back into a stable state
    or shut it down should a critical or catastrophic event occur.
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 本节还应讨论如何记录测试过程中出现的任何问题/异常，并描述在发生关键性或灾难性事件时，如何将系统恢复到稳定状态或将其关闭。
- en: This is also where you’ll describe how to log successful runs of a test procedure.
    A tester will usually log the date and time they begin a test, provide the name
    of the test engineer, and specify which test procedure they are executing. At
    the successful conclusion of a test, most test procedures require signatures by
    the test engineer, a possible QA or customer representative, and possibly other
    managerial or project-related personnel. This section should describe the process
    for obtaining these signatures and signing off on successful runs of a test procedure.
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 这里还应该描述如何记录测试程序的成功执行。测试人员通常会记录他们开始测试的日期和时间，提供测试工程师的姓名，并指定他们正在执行的测试程序。测试成功完成后，大多数测试程序要求测试工程师、可能的QA或客户代表，以及可能的其他管理人员或项目相关人员签字。本节应描述获取这些签名以及对测试程序成功执行进行签字确认的过程。
- en: '***12.5.4 Test Procedures***'
  id: totrans-596
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.5.4 测试程序***'
- en: This section of the document repeats for each individual test procedure for
    the system under test. This is a modification of the Std 829 STP, which describes
    only a single (or maybe a few) test procedures in the document. Presumably, there
    would be multiple STP documents if your system requires a large number of test
    procedures.
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档的这一部分会为每个单独的测试程序重复，针对系统下的每个测试程序进行描述。这是Std 829 STP的修改版，后者仅描述文档中的单个（或少数几个）测试程序。假设如果系统需要大量测试程序，可能会有多个STP文档。
- en: '**12.5.4.1 Brief Description (for Test Procedure #1)**'
  id: totrans-598
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.5.4.1 简要描述（用于测试程序 #1）**'
- en: 'This is the title of the test procedure. It should be a short phrase, such
    as *DIP Switch #1 Test*, that provides a quick and perhaps informal procedure
    identification.'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: '这是测试程序的标题。它应为简短的短语，如*DIP开关 #1 测试*，提供一个快速且可能是非正式的程序标识。'
- en: '**Procedure Identification**'
  id: totrans-600
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '**程序标识**'
- en: This is the unique identifier (tag) for this test procedure. Other documentation
    (such as the RTM) will reference this test procedure using its tag.
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 这是该测试程序的唯一标识符（标签）。其他文档（例如RTM）将通过其标签引用此测试程序。
- en: '**Purpose**'
  id: totrans-602
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '**目的**'
- en: 'This is an expanded description of this test procedure: why it exists, what
    it tests, and where it sits in the big picture.'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对该测试程序的扩展描述：它的存在目的、测试内容及其在大局中的位置。
- en: '**List of Test Cases Covered by This Procedure**'
  id: totrans-604
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '**本程序覆盖的测试用例列表**'
- en: This section provides reverse traceability back to the STC document. It is simply
    a list of all the test cases that this test procedure covers. Note that this set
    of test cases should be mutually exclusive of the sets found in other test procedures—no
    test case tag should ever appear in more than one test procedure. You want to
    preserve the many-to-one relationship from test cases to test procedures. This
    will help keep the RTM clean, meaning that you won’t have to attach multiple test
    procedures to the same row in the RTM.
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供回溯追踪到STC文档的能力。它仅仅是列出了此测试程序覆盖的所有测试用例。请注意，这些测试用例应与其他测试程序中的测试用例集互相独立——任何测试用例标签不应出现在多个测试程序中。你需要保持测试用例与测试程序之间的多对一关系。这有助于保持RTM的整洁，这样你就不需要将多个测试程序附加到RTM的同一行。
- en: Now, it is quite possible that multiple test procedures will provide inputs
    (and verify corresponding outcomes) that test the same test case. This isn’t a
    problem; just pick one procedure that will take credit for covering that test
    case and assign the test case to that procedure. When someone is tracing through
    the requirements and verifying that the test procedures test a particular requirement,
    they’re not going to care if the test procedures test that requirement multiple
    times; they’ll be interested only in determining that the requirement has been
    tested at least once somewhere in the test procedures.
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，很可能多个测试程序会提供输入（并验证相应的结果），这些输入测试的是同一个测试用例。这不是问题；只需选择一个程序来负责覆盖该测试用例，并将测试用例分配给该程序。当有人在追踪需求并验证测试程序是否覆盖了特定需求时，他们不会在乎测试程序是否多次测试同一需求；他们关心的只是确定该需求至少在测试程序中的某个地方被测试过一次。
- en: If you have a choice of test procedures with which to associate a given test
    case, it’s best to include that test case in a test procedure that also handles
    related test cases. Of course, in general, this type of association, whereby related
    test cases are put into the same test procedure, happens automatically. That’s
    because you don’t arbitrarily create test procedures and then assign test cases
    to them. Instead, you pick a set of (related) test cases and use them to generate
    a test procedure.
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有多个测试程序可供选择，以便将给定的测试用例与之关联，最好将该测试用例包含在一个也处理相关测试用例的测试程序中。当然，通常这种关联——即将相关的测试用例放入同一测试程序——是自动发生的。这是因为你不是随意创建测试程序并将测试用例分配给它们，而是选择一组（相关的）测试用例，并使用它们来生成测试程序。
- en: '**Special Requirements**'
  id: totrans-608
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '**特殊要求**'
- en: This section identifies anything external you’ll need for the test procedure
    in order to successfully execute the test. This includes databases, input files,
    existing directory paths, online resources (such as web pages), dynamically linked
    libraries and other third-party tools, and automated test procedures.
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 本节识别执行测试程序所需的任何外部资源，以便成功地执行测试。这包括数据库、输入文件、现有的目录路径、在线资源（如网页）、动态链接库及其他第三方工具，以及自动化测试程序。
- en: '**Setup Required Prior to Running Procedure**'
  id: totrans-610
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '**运行程序前需要的设置**'
- en: This section describes any processes or procedures to execute before you can
    run the test procedure. For example, a test procedure for autonomous vehicle software
    might require an operator to drive the vehicle to a specified starting point on
    a test track before starting the test. Other examples might be ensuring an internet
    or server connection is available. With the SPM, an example of setup could include
    ensuring that the test fixture (five-gallon bucket of water) is filled to some
    specified level.
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了在运行测试程序之前需要执行的任何过程或步骤。例如，一个针对自动驾驶车辆软件的测试程序可能要求操作员将车辆开到测试赛道上的指定起点，然后再开始测试。其他例子可能包括确保互联网或服务器连接可用。在SPM中，设置的一个例子可能包括确保测试夹具（五加仑水桶）被加满至某个指定的水位。
- en: '**Software Version Number for This Execution**'
  id: totrans-612
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '**此执行的软件下载版本号**'
- en: 'This is a “fill in the blank” field for the test procedure. It does not mandate
    a software version for running the test; rather, the tester enters the current
    software version number prior to the test’s execution. Note that this field has
    to be filled in for each test procedure. You cannot simply write this value down
    once for the whole STP. The reason is quite simple: during testing you may encounter
    defects that require you to suspend the test. Once the development team corrects
    those defects, the testing can resume, usually from the beginning of the test
    procedure. Because different procedures in an STP could have been run on different
    versions of the software, you need to identify which version of the software you’re
    using when running each procedure.^([20](ch19_footnote.xhtml#ch12fn20))'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 这是测试程序中的一个“填写空白”字段。它不要求指定运行测试的特定软件版本；而是测试人员在执行测试之前输入当前的软件版本号。请注意，这个字段必须为每个测试程序填写。你不能仅为整个STP写一次这个值。原因很简单：在测试过程中，可能会遇到需要暂停测试的缺陷。一旦开发团队修复了这些缺陷，测试通常会从测试程序的开始处恢复。由于STP中的不同程序可能是在不同的软件版本上运行的，因此你需要在运行每个程序时标明所使用的软件版本号。^([20](ch19_footnote.xhtml#ch12fn20))
- en: '**Detailed Steps Required to Run This Procedure**'
  id: totrans-614
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '**运行此程序所需的详细步骤**'
- en: 'This section contains steps that are necessary to execute the test procedure.
    There are two types of steps in a test procedure: actions and verifications. An
    *action* is a statement of work to be done, such as providing some input to the
    system. A *verification* involves checking some outcome/output and confirming
    that the system is operating correctly.'
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包含执行测试程序所必需的步骤。测试程序中有两种类型的步骤：操作和验证。*操作*是需要完成的工作项，例如向系统提供某些输入。*验证*则涉及检查某些结果/输出，并确认系统是否正常运行。
- en: You must number all procedure steps sequentially—typically starting from 1,
    though you could also use section numbers like 3.2.1 through 3.2.40 for a test
    procedure that has 40 steps. At the very least, each verification step should
    be preceded by three or so underline characters (___) or a box symbol (see [Figure
    12-3](ch12.xhtml#ch12fig3)) so that the tester can physically check off the step
    once they have successfully completed it. Some people prefer putting the checkbox
    on every item (that is, both actions and verifications) in the test procedure
    to ensure that the tester marks off each step as they complete it. Perhaps there
    should be lines on the actions and checkboxes on the verifications. However, this
    adds considerable menial work to the process, so consider carefully whether it’s
    important enough to do.
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: 必须对所有程序步骤进行连续编号——通常从1开始，虽然你也可以使用像3.2.1到3.2.40这样的章节编号，适用于具有40个步骤的测试程序。至少，每个验证步骤前应有大约三个下划线字符（___）或一个框符号（见[图12-3](ch12.xhtml#ch12fig3)），以便测试人员在成功完成步骤后可以勾选该步骤。有人倾向于在测试程序中的每个项目（即操作和验证）上都放置复选框，以确保测试人员在完成每个步骤时进行标记。也许可以在操作上使用横线，在验证上使用复选框。然而，这会给过程增加相当多的繁琐工作，因此请仔细考虑是否值得这样做。
- en: '![image](Images/fig12-3.jpg)'
  id: totrans-617
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/fig12-3.jpg)'
- en: '*Figure 12-3: Using a checkbox on a verify statement*'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-3：在验证语句上使用复选框*'
- en: 'Note that the detailed steps should include information (in appropriate positions)
    such as the following:'
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，详细步骤应包括以下信息（在适当的位置）：
- en: Any actions needed to start the procedure (obviously, these should appear in
    the first few steps of the procedure)
  id: totrans-620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动程序所需的任何操作（显然，这些应出现在程序的前几步中）
- en: A discussion of how to make measurements or observe outputs (don’t assume the
    tester is as familiar with the software as the developers are)
  id: totrans-621
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何进行测量或观察输出的讨论（不要假设测试人员对软件的熟悉程度与开发人员一样高）
- en: How to shut down the system at the conclusion of the test procedure to leave
    the system in a stable state (if this is necessary, it will obviously appear in
    the last steps of the procedure)
  id: totrans-622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在测试程序结束时关闭系统，并使系统保持稳定状态（如果需要，这显然会出现在程序的最后步骤中）
- en: Sign-off
  id: totrans-623
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 签署
- en: At the end of the test procedure there should be blank lines for the tester,
    observers, customer representatives, and possibly management personnel to sign
    off on the successful conclusion of the test procedure. A signature and date are
    the minimum information that should appear here. Each organization may mandate
    which signatures are necessary. At the very least (such as in a one-person shop),
    whoever executes the test procedure should sign and date it to affirm that it
    was run.
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试程序结束时，应留出空行供测试人员、观察员、客户代表和可能的管理人员签署，以确认测试程序的成功完成。签名和日期是应出现的最基本信息。每个组织可能会规定哪些签名是必需的。至少（例如在一人作业的情况下），执行测试程序的人应该签名并注明日期，以确认程序已执行。
- en: '***12.5.5 General***'
  id: totrans-625
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.5.5 一般规定***'
- en: The last section of an STP is a generic catch-all section where you can place
    information that doesn’t fit anywhere else.
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: STP的最后一部分是一个通用的“所有内容包含”部分，可以在这里放置无法归入其他部分的信息。
- en: '**12.5.5.1 Document Change Procedures**'
  id: totrans-627
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.5.5.1 文档变更程序**'
- en: Many organizations have set policies for changing test procedure documents.
    They could, for example, require customer approval before making official changes
    to an ATP. This section outlines the rules and necessary approval procedures and
    processes for making changes to the STP.
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 许多组织已制定了更改测试程序文档的政策。例如，他们可能要求在对ATP进行正式更改之前获得客户批准。本节概述了对STP进行更改所需遵循的规则及批准程序和流程。
- en: '**12.5.5.2 Attachments and Appendixes**'
  id: totrans-629
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.5.5.2 附件和附录**'
- en: It’s often useful to attach large tables, images, and other documentation directly
    to the LTP so that it is always available to a reader, as opposed to providing
    a link to a document that the reader cannot access.
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，将大型表格、图像和其他文档直接附加到LTP上是有用的，这样读者可以随时查看，而不是提供一个无法访问的文档链接。
- en: '***12.5.6 Index***'
  id: totrans-631
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.5.6 索引***'
- en: If desired, you can add an index at the end of the STP.
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，可以在STP的末尾添加索引。
- en: '***12.5.7 A Sample STP***'
  id: totrans-633
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.5.7 软件测试程序示例***'
- en: This section presents a shortened (for space/editorial purposes) example of
    an STP for the DAQ DIP switch project.
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 本节展示了DAQ DIP开关项目的一个简化（出于篇幅/编辑目的）的STP示例。
- en: '**1 Table of Contents**'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: '**1 目录**'
- en: '[Omitted for space reasons]'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: '[由于篇幅原因省略]'
- en: '**2 Introduction**'
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: '**2 引言**'
- en: '**2.1 Document Identifier**'
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.1 文档标识符**'
- en: 'Mar 22, 2018: DAQ_LTP, Version 1.0 Randall Hyde'
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: 2018年3月22日：DAQ_LTP，版本1.0 Randall Hyde
- en: '**2.2 Scope**'
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.2 范围**'
- en: This document describes some of the DIP switch test procedures in the DAQ system
    (shortened for space/editorial reasons).
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档描述了DAQ系统中一些DIP开关的测试程序（由于篇幅/编辑原因进行了简化）。
- en: '**2.3 Glossary, Acronyms, and Abbreviations**'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.3 术语表、缩写词和缩写**'
- en: '**NOTE**'
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*This is a very simple and short example to keep this book smaller. Please
    don’t use this as boilerplate; you should diligently pick out terms and abbreviations
    your document uses and list them in this section.*'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: '*这是一个非常简单且简短的示例，用以保持本书的简洁。请不要将其作为模板；你应当认真挑选出文档中使用的术语和缩写，并将它们列在此部分。*'
- en: '| **Term** | **Definition** |'
  id: totrans-645
  prefs: []
  type: TYPE_TB
  zh: '| **术语** | **定义** |'
- en: '| --- | --- |'
  id: totrans-646
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| DAQ | Data acquisition system |'
  id: totrans-647
  prefs: []
  type: TYPE_TB
  zh: '| DAQ | 数据采集系统 |'
- en: '| SBC | Single-board computer |'
  id: totrans-648
  prefs: []
  type: TYPE_TB
  zh: '| SBC | 单板计算机 |'
- en: '| Software Design Description (SDD) | Documentation of the design of the software
    system (IEEE Std 1016-2009)—that is, this document. |'
  id: totrans-649
  prefs: []
  type: TYPE_TB
  zh: '| 软件设计描述（SDD） | 软件系统设计的文档（IEEE Std 1016-2009）——也就是这本文档。 |'
- en: '| Software Requirements Specification (SRS) | Documentation of the essential
    requirements (functions, performance, design constraints, and attributes) of the
    software and its external interfaces (IEEE Std 610.12-1990). |'
  id: totrans-650
  prefs: []
  type: TYPE_TB
  zh: '| 软件需求规格说明书（SRS） | 记录软件及其外部接口的基本需求（功能、性能、设计约束和属性）的文档（IEEE Std 610.12-1990）。
    |'
- en: '| System Requirements Specification (SyRS) | A structured collection of information
    that embodies the requirements of the system (IEEE Std 1233-1998). A specification
    that documents the requirements to establish a design basis and the conceptual
    design for a system or subsystem. |'
  id: totrans-651
  prefs: []
  type: TYPE_TB
  zh: '| 系统需求规格说明书（SyRS） | 一个结构化的信息集合，体现了系统的需求（IEEE Std 1233-1998）。这是一个记录系统或子系统设计依据和概念设计需求的规范。
    |'
- en: '| Software Test Cases (STC) | Documentation that describes test cases (inputs
    and outcomes) to verify correct operation of the software based on various design
    concerns/requirements (IEEE Std 829-2009). |'
  id: totrans-652
  prefs: []
  type: TYPE_TB
  zh: '| 软件测试用例（STC） | 描述测试用例（输入和结果）以验证软件在各种设计问题/需求下正确操作的文档（IEEE Std 829-2009）。 |'
- en: '| Software Test Procedures (STP) | Documentation that describes the step-by-step
    procedure to execute a set of test cases to verify correct operation of the software
    based on various design concerns/requirements (IEEE Std 829-2009). |'
  id: totrans-653
  prefs: []
  type: TYPE_TB
  zh: '| 软件测试程序（STP） | 记录描述逐步执行一组测试用例以验证软件在各种设计问题/需求下的正确操作的文档（IEEE Std 829-2009）。
    |'
- en: '**2.4 References**'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.4 参考文献**'
- en: '| **Reference** | **Discussion** |'
  id: totrans-655
  prefs: []
  type: TYPE_TB
  zh: '| **参考** | **讨论** |'
- en: '| --- | --- |'
  id: totrans-656
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| DAQ STC | See “[A Sample Software Test Case Document](ch12.xhtml#lev-12.4.4)”
    on [page 281](ch12.xhtml#page_281). |'
  id: totrans-657
  prefs: []
  type: TYPE_TB
  zh: '| DAQ STC | 请参见“[软件测试用例文档示例](ch12.xhtml#lev-12.4.4)”在[第281页](ch12.xhtml#page_281)。
    |'
- en: '| DAQ STP | An example of a full STP for the Plantation Productions DAQ system
    can be found at *[http://www.plantation-productions.com/Electronics/DAQ/DAQ.html](http://www.plantation-productions.com/Electronics/DAQ/DAQ.html)*.
    |'
  id: totrans-658
  prefs: []
  type: TYPE_TB
  zh: '| DAQ STP | 适用于Plantation Productions DAQ系统的完整STP示例，请参见*[http://www.plantation-productions.com/Electronics/DAQ/DAQ.html](http://www.plantation-productions.com/Electronics/DAQ/DAQ.html)*。
    |'
- en: '| IEEE Std 830-1998 | SRS documentation standard |'
  id: totrans-659
  prefs: []
  type: TYPE_TB
  zh: '| IEEE Std 830-1998 | SRS文档标准 |'
- en: '| IEEE Std 829-2008 | STP documentation standard |'
  id: totrans-660
  prefs: []
  type: TYPE_TB
  zh: '| IEEE Std 829-2008 | STP文档标准 |'
- en: '| IEEE Std 1012-1998 | Software verification and validation standard |'
  id: totrans-661
  prefs: []
  type: TYPE_TB
  zh: '| IEEE Std 1012-1998 | 软件验证与确认标准 |'
- en: '| IEEE Std 1016-2009 | SDD documentation standard |'
  id: totrans-662
  prefs: []
  type: TYPE_TB
  zh: '| IEEE Std 1016-2009 | SDD文档标准 |'
- en: '| IEEE Std 1233-1998 | SyRS documentation standard |'
  id: totrans-663
  prefs: []
  type: TYPE_TB
  zh: '| IEEE Std 1233-1998 | SyRS文档标准 |'
- en: '**NOTE**'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*An additional reference that might make sense (not included here because it
    doesn’t exist for this simple project) is a link to any associated documentation
    for the DAQ system, such as programming manuals or schematics.*'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: '*一个可能有用的附加参考（由于该项目较简单，未包含此参考）是与DAQ系统相关的任何文档链接，例如编程手册或电路图。*'
- en: '**2.5 Notation for Descriptions**'
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.5 描述的符号说明**'
- en: 'Test procedure identifiers (*tags*) in this document shall take the form:'
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档中的测试程序标识符（*标签*）应采取以下形式：
- en: DAQ_STP_*xxx*
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_STP_*xxx*
- en: where *xxx* is a (possibly dotted decimal) numeric sequence that creates a unique
    identifier out of the whole sequence. Note that *xxx* values for STP tags are
    usually numbered from 000 or 001 and usually increment by 1 for each additional
    test case item sharing the same *xxx* string.
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*xxx*是一个（可能带小数点的）数字序列，通过整个序列创建一个唯一的标识符。请注意，STP标签的*xxx*值通常从000或001开始，每增加一个测试案例项时，*xxx*字符串通常递增1。
- en: '**2.6 Instructions for Running the Tests**'
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.6 执行测试的说明**'
- en: Execute each test procedure exactly as stated. If tester encounters an error
    or omission in the procedure, tester should redline (with red ink, which tester
    should use only for redlines) the procedure with the correct information and justify
    the redline in the test log (with date/timestamp and signature). All redlines
    within the test procedure(s) must be initialized by all signatories at the end
    of the test procedure.
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: 按照说明精确执行每个测试程序。如果测试人员在程序中遇到错误或遗漏，应使用红色墨水（仅限于标记修改时使用红色墨水）标出正确的信息，并在测试日志中对该修改进行说明（包括日期/时间戳和签名）。测试程序中的所有红线修改必须由所有签署人在测试程序末尾初始化。
- en: If tester discovers a defect in the software itself (that is, not simply a defect
    in the test procedure), the tester shall note the anomaly in a test log and create
    an Anomaly Report for the defect. If the defect is marginal or negligible in nature,
    the tester may continue with the test procedure, if possible, and attempt to find
    any other defects in the system on the same test procedure run. If the defect
    is critical or catastrophic in nature, or the defect is such that it is impossible
    to continue the test procedure, the tester shall immediately suspend the test
    and shut off power to the system. Once the defect is corrected, tester must restart
    the test procedure from the beginning of the procedure.
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: 如果测试人员发现软件本身存在缺陷（即不仅仅是测试程序中的缺陷），测试人员应在测试日志中记录该异常，并为该缺陷创建一个异常报告。如果缺陷是边际性的或可以忽略不计的，测试人员可以继续执行测试程序（如果可能的话），并尝试在同一测试程序运行中发现其他缺陷。如果缺陷是关键性的或灾难性的，或者缺陷使得无法继续执行测试程序，测试人员应立即暂停测试并关闭系统电源。一旦缺陷被修复，测试人员必须从程序开始重新启动测试程序。
- en: A test procedure succeeds if and only if the tester completes all steps without
    any failures.
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: 测试程序只有在测试人员完成所有步骤且没有任何失败时才能成功。
- en: '**3 Test Procedures**'
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: '**3 测试程序**'
- en: '**3.1 RS-232 (Serial Port) Operation**'
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.1 RS-232（串行端口）操作**'
- en: 3.1.1 DAQ_STP_001
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.1 DAQ_STP_001
- en: 3.1.2 Purpose
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.2 目的
- en: This test procedure tests the proper operation of DAQ commands sourced from
    the RS-232 port.
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: 本测试程序测试从RS-232端口发送的DAQ命令的正确操作。
- en: 3.1.3 Test Cases
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.3 测试案例
- en: DAQ_STC_701_000_000
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_STC_701_000_000
- en: DAQ_STC_702_000_000
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_STC_702_000_000
- en: DAQ_STC_703_000_000
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_STC_703_000_000
- en: DAQ_STC_726_000_000
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_STC_726_000_000
- en: 3.1.4 Special Requirements
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.4 特殊要求
- en: This test procedure requires a serial terminal emulator program running on a
    PC (for example, the *MTTY.exe* program that comes as part of the Netburner SDK;
    you could even use Hyperterm if you are masochistic). There should be a NULL modem
    cable between the PC’s serial port and the COM1 port on the Netburner.
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: 本测试程序要求在PC上运行一个串行终端仿真程序（例如，Netburner SDK的一部分，名为*MTTY.exe*的程序；如果你有强烈的自虐倾向，也可以使用Hyperterm）。PC的串行端口与Netburner的COM1端口之间应该连接一根NULL调制解调器电缆。
- en: 3.1.5 Setup Required Prior to Running
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.5 在执行前的设置要求
- en: Netburner powered up and running application software. Serial terminal program
    should be properly connected to the serial port on the PC that is wired to the
    Netburner.
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: Netburner已开机并运行应用软件。串行终端程序应与PC的串行端口正确连接，而该端口又连接到Netburner。
- en: 3.1.6 Software Version Number
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.6 软件版本号
- en: 'Version number: ____________'
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: 版本号： ____________
- en: 'Date: ____________'
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 日期： ____________
- en: 3.1.7 Detailed Steps
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.7 详细步骤
- en: 1\. Set DIP switch 1 to the ON position.
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 将DIP开关1设置为开启位置。
- en: '2\. Reset the Netburner and wait several seconds for it to finish rebooting.
    Note: Rebooting Netburner may produce information on the serial terminal. You
    can ignore this.'
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 重置 Netburner，并等待几秒钟，直到其完成重启。注意：重启 Netburner 时可能会在串行终端上产生信息，可以忽略这些信息。
- en: 3\. Press ENTER on the line by itself into the terminal emulator.
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 在终端仿真器的单独一行按下 ENTER 键。
- en: 4\. ______ Verify that the DAQ system responds with a newline without any other
    output
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. ______ 验证 DAQ 系统是否仅响应一个换行符且没有其他输出。
- en: 5\. Type `help`, then press ENTER on a line by itself.
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 输入 `help`，然后在单独的一行按下 ENTER 键。
- en: 6\. ______ Verify that the DAQ software responds with a help message (contents
    unimportant as long as it is obviously a help response).
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. ______ 验证 DAQ 软件是否响应帮助信息（内容不重要，只要明显是帮助响应）。
- en: 7\. Set DIP switch 1 to the OFF position.
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: 7\. 将 DIP 开关 1 设置为 OFF 位置。
- en: '8\. Reset the Netburner and wait several seconds for it to finish rebooting.
    Note: Rebooting Netburner may produce information on the serial terminal. You
    can ignore this.'
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: 8\. 重置 Netburner，并等待几秒钟，直到其完成重启。注意：重启 Netburner 时可能会在串行终端上产生信息，可以忽略这些信息。
- en: 9\. Type the help command into the serial terminal.
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: 9\. 在串行终端中输入帮助命令。
- en: 10\. ______ Verify that the DAQ system ignores the help command.
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
  zh: 10\. ______ 验证 DAQ 系统是否忽略了帮助命令。
- en: 3.1.8 Sign-off on Test Procedure
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1.8 测试程序签字确认
- en: 'Tester: _________________ Date: _________'
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: '测试员: _________________ 日期: _________'
- en: 'QA: _________________ Date: _________'
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: 'QA: _________________ 日期: _________'
- en: '**NOTE**'
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*In a full STP document, there would probably be additional test procedures
    here; the following test procedure ignores that possibility and continues tag
    numbering with DAQ_STP_002.*'
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: '*在完整的 STP 文档中，可能会有更多的测试程序；以下测试程序忽略了这一可能性，并继续以 DAQ_STP_002 标号编号。*'
- en: '**3.2 Ethernet Address Selection**'
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: '**3.2 以太网地址选择**'
- en: 3.2.1 DAQ_STP_002
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2.1 DAQ_STP_002
- en: 3.2.2 Purpose
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2.2 目的
- en: This test procedure tests the initialization of the Ethernet IP address based
    on DIP switches 5 and 6.
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: 此测试程序测试基于 DIP 开关 5 和 6 的以太网 IP 地址初始化。
- en: 3.2.3 Test Cases
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2.3 测试用例
- en: DAQ_STC_709_000_000
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_STC_709_000_000
- en: DAQ_STC_710_000_000
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_STC_710_000_000
- en: DAQ_STC_711_000_000
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_STC_711_000_000
- en: DAQ_STC_712_000_000
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: DAQ_STC_712_000_000
- en: 3.2.4 Special Requirements
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2.4 特殊要求
- en: This test procedure requires an Ethernet terminal emulator program running on
    a PC (*Hercules.exe* has been a good choice in the past). There should be an Ethernet
    (crossover or through a hub) cable between the PC’s Ethernet port and the Ethernet
    port on the Netburner.
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: 此测试程序需要在 PC 上运行一个以太网终端仿真器程序（*Hercules.exe* 过去是一个不错的选择）。PC 的以太网端口与 Netburner
    的以太网端口之间应有一根以太网（交叉或通过集线器）电缆连接。
- en: 3.2.5 Setup Required Prior to Running
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2.5 运行前的设置要求
- en: Netburner powered up and running application software. DIP switch 3 in the ON
    position. DIP switch 4 in the OFF position.
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: Netburner 已开启并运行应用软件。DIP 开关 3 在 ON 位置，DIP 开关 4 在 OFF 位置。
- en: 3.2.6 Software Version Number
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2.6 软件版本号
- en: 'Version number: _________'
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: '版本号: _________'
- en: 'Date: _________'
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: _________'
- en: 3.2.7 Detailed Steps
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2.7 详细步骤
- en: 1\. Set DIP switches 5 and 6 to the OFF position.
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 将 DIP 开关 5 和 6 设置为 OFF 位置。
- en: 2\. Reset the Netburner and wait several seconds for it to finish rebooting.
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 重置 Netburner，并等待几秒钟，直到其完成重启。
- en: 3\. From the Ethernet terminal program, attempt to connect to the Netburner
    at IP address 192.168.2.70, port 20560 (0x5050).
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 从以太网终端程序尝试连接到 IP 地址 192.168.2.70，端口 20560 (0x5050) 的 Netburner。
- en: 4\. Verify that the connection was successful.
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 验证连接是否成功。
- en: 5\. Enter a `help` command and press the ENTER key.
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 输入 `help` 命令并按下 ENTER 键。
- en: 6\. ______ Verify that the DAQ system responds with an appropriate help message.
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. ______ 验证 DAQ 系统是否以适当的帮助信息做出响应。
- en: 7\. Set DIP switch 5 to the ON position and 6 to the OFF position.
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: 7\. 将 DIP 开关 5 设置为 ON 位置，6 设置为 OFF 位置。
- en: 8\. Reset the Netburner and wait several seconds for it to finish rebooting.
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: 8\. 重置 Netburner，并等待几秒钟，直到其完成重启。
- en: 9\. From the Ethernet terminal program, attempt to connect to the Netburner
    at IP address 192.168.2.71, port 20560 (0x5050).
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: 9\. 从以太网终端程序尝试连接到 IP 地址 192.168.2.71，端口 20560 (0x5050) 的 Netburner。
- en: 10\. ______ Verify that the connection was successful.
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: 10\. ______ 验证连接是否成功。
- en: 11\. Enter a `help` command and press the ENTER key.
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: 11\. 输入 `help` 命令并按下 ENTER 键。
- en: 12\. ______ Verify that the DAQ system responds with an appropriate help message.
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: 12\. ______ 验证 DAQ 系统是否以适当的帮助信息做出响应。
- en: 13\. Set DIP switch 5 to the OFF position and 6 to the ON position.
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: 13\. 将 DIP 开关 5 设置为 OFF 位置，6 设置为 ON 位置。
- en: 14\. Reset the Netburner and wait several seconds for it to finish rebooting.
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: 14. 重置Netburner，并等待几秒钟直到其完成重启。
- en: 15\. From the Ethernet terminal program, attempt to connect to the Netburner
    at IP address 192.168.2.72, port 20560 (0x5050).
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: 15. 从以太网终端程序尝试连接到IP地址为192.168.2.72，端口为20560（0x5050）的Netburner。
- en: 16\. ______ Verify that the connection was successful.
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: 16. ______ 验证连接是否成功。
- en: 17\. Enter a `help` command and press the ENTER key.
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: 17. 输入`help`命令并按下ENTER键。
- en: 18\. ______ Verify that the DAQ system responds with an appropriate help message.
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: 18. ______ 验证DAQ系统是否响应适当的帮助信息。
- en: 19\. Set DIP switches 5 and 6 to the ON position.
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: 19. 将DIP开关5和6置于ON位置。
- en: 20\. Reset the Netburner and wait several seconds for it to finish rebooting.
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: 20. 重置Netburner，并等待几秒钟直到其完成重启。
- en: 21\. From the Ethernet terminal program, attempt to connect to the Netburner
    at IP address 192.168.2.73, port 20560 (0x5050).
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: 21. 从以太网终端程序尝试连接到IP地址为192.168.2.73，端口为20560（0x5050）的Netburner。
- en: 22\. ______ Verify that the connection was successful.
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: 22. ______ 验证连接是否成功。
- en: 23\. Enter a `help` command and press the ENTER key.
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: 23. 输入`help`命令并按下ENTER键。
- en: 24\. ______ Verify that the DAQ system responds with an appropriate help message.
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: 24. ______ 验证DAQ系统是否响应适当的帮助信息。
- en: 3.2.8 Sign-off on Test Procedure
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2.8 测试程序签署
- en: 'Tester: _________________ Date: _________'
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: '测试者: _________________ 日期: _________'
- en: 'QA: _________________ Date: _________'
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: 'QA: _________________ 日期: _________'
- en: '**NOTE**'
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*In a full STP document, there would probably be additional test procedures
    here.*'
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: '*在完整的STP文档中，这里可能会有更多的测试程序。*'
- en: '**4 General**'
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: '**4 一般**'
- en: '**4.1 Document Change Procedures**'
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: '**4.1 文档变更程序**'
- en: Whenever making changes to this document, add a new line to Section 2.1 listing,
    at a minimum, the date, project name (*DAQ_STP*), version number, and authorship.
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: 每次对本文档进行修改时，至少在2.1节列表中添加一行，列出日期、项目名称（*DAQ_STP*）、版本号和作者信息。
- en: '**4.2 Attachments and Appendixes**'
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: '**4.2 附件和附录**'
- en: '[In the interests of space, none are provided here; in a real STP, putting
    the schematic of the DAQ system would be a good idea.]'
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: '[为了节省空间，本文中未提供；在实际的STP中，提供DAQ系统的原理图会是个好主意。]'
- en: '**5 Index**'
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: '**5 索引**'
- en: '[Omitted for space reasons.]'
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: '[由于空间原因，已省略。]'
- en: '***12.5.8 Updating the RTM with STP Information***'
  id: totrans-760
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.5.8 使用STP信息更新RTM***'
- en: Because STP tags are very similar in nature to SDD tags, it should come as no
    surprise that the process for adding STP tags to the RTM is quite similar to that
    for adding SDD tags (see “[Updating the Traceability Matrix with Design Information](ch11.xhtml#lev-11.7)”
    on [page 259](ch11.xhtml#page_259)).
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: 因为STP标签与SDD标签在性质上非常相似，所以将STP标签添加到RTM的过程也与将SDD标签添加到RTM的过程非常相似（见[“使用设计信息更新可追溯性矩阵”](ch11.xhtml#lev-11.7)，[第259页](ch11.xhtml#page_259)）。
- en: 'The STP adds a single column to the RTM: the STP tag column. Unfortunately,
    the STP tag does not directly embed any traceability information, so you’ll have
    to extract that information from the STP to determine where to place STP tags
    in the RTM.'
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: STP在RTM中添加了一个新的列：STP标签列。不幸的是，STP标签并不直接嵌入任何可追溯性信息，因此你需要从STP中提取这些信息，以确定在RTM中放置STP标签的位置。
- en: As you may recall from “List of Test Cases Covered by This Procedure” on [page
    294](ch12.xhtml#page_294), each test procedure in an STP must include the list
    of test cases it covers. Though Std 829 does not require this, I strongly suggest
    that you include this section. If you’ve done that, you’ve already created the
    reverse traceability back to the requirements, which makes it easy to fill in
    the STP tags in the RTM. To do so, just locate each test case tag (listed in the
    current test procedure) and copy the test procedure’s STP tag into the STP tag
    column in the RTM (on the same row as the corresponding test case). Of course,
    because there are multiple test cases associated with a single test procedure,
    you’ll also have several copies of the same STP tag spread throughout the RTM
    (one per associated test case).
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: 如你在[第294页](ch12.xhtml#page_294)的“本程序涵盖的测试用例列表”中所看到的，每个STP中的测试程序必须包括其涵盖的测试用例列表。尽管标准829并未要求此项内容，但我强烈建议你添加这一部分。如果你已经做了这一点，那么你已经创建了反向可追溯性，回溯到需求中，这使得在RTM中填写STP标签变得更加容易。为此，只需定位每个测试用例标签（列在当前测试程序中），然后将测试程序的STP标签复制到RTM中的STP标签列（与对应测试用例在同一行）。当然，因为一个测试程序可能与多个测试用例相关联，所以你还会在RTM中多次复制相同的STP标签（每个相关的测试用例一个）。
- en: Should you ever want to easily trace your STP tags back to all the requirements
    in the RTM, particularly without having to look up the list in the STP, simply
    sort the RTM by the STP tag column. This will collect all the requirements (and
    everything else linked to that STP tag) into a contiguous group in the matrix
    and make it easy to identify everything associated with that tag.
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望轻松地将你的STP标签追溯到RTM中的所有需求，尤其是无需查阅STP列表，只需按STP标签列排序RTM即可。这将把所有需求（以及与该STP标签相关的所有内容）汇集到矩阵中的一个连续组中，方便识别与该标签相关的所有内容。
- en: If you choose some other method of specifying test cases in the test procedure
    that doesn’t involve incorporating the STC tags within the test procedures, then
    determining the placement of the STP tags in the RTM becomes a manual—and often
    laborious—process. That’s why I strongly recommend including STC tag numbers in
    a test procedure when you first create it.
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择一种不涉及在测试程序中嵌入STC标签的其他方法来指定测试用例，那么在RTM中确定STP标签的位置就成了一个手动——且往往非常繁琐——的过程。因此，我强烈建议在首次创建测试程序时就包含STC标签编号。
- en: 12.6 *Level* Test Logs
  id: totrans-766
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 12.6 *级别* 测试日志
- en: Although each test procedure contains a signature section where the tester (and
    any other desired personnel) can sign off on a successful test completion, a separate
    test log is needed to handle anomalies that occur during testing or to simply
    hold comments and concerns that the tester may have while running the test procedure.
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管每个测试程序都包含一个签名部分，测试人员（以及任何其他相关人员）可以在其中签署成功完成测试，但仍需要一个单独的测试日志来处理在测试过程中发生的异常，或仅仅记录测试人员在执行测试程序时的评论和疑虑。
- en: 'Perhaps the most important job of this Level *Test Log (LTL)* is to present
    a chronological view of the testing process. Whenever a tester begins running
    a test procedure, they should first log an entry stating the date, time, test
    procedure they are executing, and their name. Throughout the test’s execution,
    the tester can add entries to the test log (as necessary) indicating:'
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: 也许这个级别的*测试日志 (LTL)* 最重要的任务是呈现测试过程的时间顺序视图。每当测试人员开始执行测试程序时，他们应首先记录一个条目，说明日期、时间、执行的测试程序及其姓名。在测试执行过程中，测试人员可以根据需要向测试日志中添加条目，指示：
- en: Start of a test procedure (date/time)
  id: totrans-769
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试程序开始（日期/时间）
- en: End of a test procedure (date/time)
  id: totrans-770
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试程序结束（日期/时间）
- en: Anomalies/defects found (and whether the test was continued or suspended)
  id: totrans-771
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现的异常/缺陷（以及测试是否继续或暂停）
- en: Redlines/changes needed to the test procedure because of errors found in the
    procedure itself (for example, the test procedure could list an incorrect outcome;
    if the tester can show that the program output was correct even if it differs
    from the test procedure, they would redline the test procedure and add an appropriate
    justification to the test log)
  id: totrans-772
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于在测试程序本身中发现错误，需要对测试程序进行修改/变更（例如，测试程序可能列出了不正确的结果；如果测试人员能够证明即使程序输出与测试程序不同，输出也是正确的，他们会修改测试程序并在测试日志中添加适当的理由）
- en: Concerns about outcomes the program produces that the tester finds questionable
    (perhaps the test procedure doesn’t list any outcome, or the test procedure’s
    outcomes are questionable)
  id: totrans-773
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试人员对程序输出结果的担忧（也许测试程序没有列出任何结果，或者测试程序的结果令人质疑）
- en: Personnel changes (for example, if a tester changes in the middle of a test
    due to a break, shift change, or different experience needed)
  id: totrans-774
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人员变动（例如，如果测试人员在测试过程中因休息、轮班或需要不同的经验而更换）
- en: Any break period during the test procedure (for example, lunch break or end
    of the workday)
  id: totrans-775
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试程序中的任何休息期间（例如，午休或下班时间）
- en: 'Technically, all you need for a test log is a sheet of (preferably lined) paper.
    More often than not, STP creators add several sheets of lined paper to the end
    of the STP specifically for this test log. Some organizations simply maintain
    the test log electronically using a word processor or text editor (or even a specially
    written application). Of course, Std 829 outlines a formal recommendation for
    test logs:'
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，测试日志所需的仅仅是一张（最好是有行的）纸张。更多时候，STP创建者会在STP的末尾添加几张有行纸，专门用于记录测试日志。有些组织直接使用文字处理软件或文本编辑器（甚至是专门编写的应用程序）电子化维护测试日志。当然，Std
    829对测试日志提出了正式的建议：
- en: 1 Introduction
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: 1 引言
- en: 1.1 Document Identifier
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1 文档标识符
- en: 1.2 Scope
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2 范围
- en: 1.3 References
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3 参考资料
- en: 2 Details
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: 2 细节
- en: 2.1 Description
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1 描述
- en: 2.2 Activity and Event Entries
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2 活动和事件条目
- en: 3 General
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: 3 一般
- en: 3.1 Glossary
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 词汇表
- en: '*12.6.1 Introduction in the* Level *Test Logs Document*'
  id: totrans-786
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*12.6.1 在* Level *测试日志文档中的介绍*'
- en: In addition to introducing the subsections that follow, this section might also
    identify the organization that created the document and the current status.
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: 除了引入以下的小节外，本节还可能会识别创建该文档的组织和当前状态。
- en: '**12.6.1.1 Document Identifier**'
  id: totrans-788
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.6.1.1 文档标识符**'
- en: A unique identifier for this document; as with all Std 829 documents this should
    include, at the very least, the date, some descriptive name, a version number,
    and authorship. A change history (of the outline/format, not the specific log)
    might appear here as well.
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档的唯一标识符；与所有Std 829文档一样，至少应包括日期、一些描述性名称、版本号和作者信息。这里还可能会出现变更历史（仅限大纲/格式，而非具体日志）。
- en: '**12.6.1.2 Scope**'
  id: totrans-790
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.6.1.2 范围**'
- en: The Scope section summarizes the system and features that the associated test
    procedure tested. Generally, this would be a reference to the test procedure’s
    Scope section unless there was something special about this particular test run.
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: 范围部分总结了相关测试过程所测试的系统和功能。通常情况下，这将引用测试过程的范围部分，除非此次测试运行有特殊之处。
- en: '**12.6.1.3 References**'
  id: totrans-792
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.6.1.3 参考**'
- en: At the very least, this section should refer to the STP (and in particular,
    the specific test) document for which this test log was created.
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
  zh: 至少，本节应提及创建此测试日志的STP（特别是具体测试）文档。
- en: '***12.6.2 Details***'
  id: totrans-794
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.6.2 详情***'
- en: This section introduces the following subsections and is what most people would
    consider the actual “test log.”
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: 本节引入了以下小节，是大多数人认为的“测试日志”。
- en: '**12.6.2.1 Description**'
  id: totrans-796
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.6.2.1 描述**'
- en: 'This section (only one occurrence per test log) describes items that will apply
    to all test log entries. This could include the following:'
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
  zh: 本节（每个测试日志中仅出现一次）描述了适用于所有测试日志条目的内容。这可能包括以下内容：
- en: Identification of the test subject (for example, by version number)
  id: totrans-798
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别测试对象（例如，通过版本号）
- en: Identification of any changes made to the test procedure (for example, redlines)
    prior to this test
  id: totrans-799
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别在测试之前对测试过程所做的任何更改（例如，修订线）
- en: Date and time of the start of the test
  id: totrans-800
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试开始的日期和时间
- en: Date and time of the stop of the test
  id: totrans-801
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试结束的日期和时间
- en: Name of the tester running the test
  id: totrans-802
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行测试的测试员姓名
- en: Explanation for why testing was halted (if this should happen)
  id: totrans-803
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解释为何测试被暂停（如果发生此情况）
- en: '**12.6.2.2 Activities and Event Entries**'
  id: totrans-804
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.6.2.2 活动与事件条目**'
- en: 'This section of the test log records each event during the execution of the
    test procedure. This section (containing multiple entries) typically documents
    the following:'
  id: totrans-805
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分测试日志记录了测试过程执行期间的每个事件。此部分（包含多个条目）通常记录以下内容：
- en: Description of the test procedure execution (procedure ID/tag)
  id: totrans-806
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试过程执行的描述（过程ID/标签）
- en: All personnel observing/involved in the test run—including testers, support
    personnel, and observers—and the role of each participant
  id: totrans-807
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有观察/参与测试的人员——包括测试员、支持人员和观察员——以及每个参与者的角色
- en: The result of each test procedure execution (pass, fail, commentary)
  id: totrans-808
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个测试过程执行的结果（通过、失败、评论）
- en: A record of any deviations from the test procedure (for example, redlines)
  id: totrans-809
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录测试过程中偏离测试程序的任何情况（例如，修订线）
- en: A record of any defects or anomalies discovered during the test procedure (along
    with a reference to an associated Anomaly Report if one is generated)
  id: totrans-810
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录测试过程中发现的任何缺陷或异常（如果生成了异常报告，则附上相关报告的参考）
- en: '***12.6.3 Glossary***'
  id: totrans-811
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.6.3 术语表***'
- en: This section of the LTL documentation contains the usual glossary associated
    with all Std 829 documents.
  id: totrans-812
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分LTL文档包含与所有Std 829文档相关的常见术语表。
- en: '***12.6.4 A Few Comments on Test Logs***'
  id: totrans-813
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.6.4 关于测试日志的几点评论***'
- en: To be honest, the Std 829 outline is way too much effort for such a simple task.
    There are a few tips for managing the effort involved in this document.
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，Std 829大纲对于这样一个简单的任务来说实在是太繁琐了。关于如何管理此文档中涉及的工作量，有一些技巧。
- en: '**12.6.4.1 Overhead Management**'
  id: totrans-815
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.6.4.1 管理开销**'
- en: Almost all of the effort that would go into creating an Std 829 LTL outline-compliant
    document can be eliminated by simply attaching the test log directly to the end
    of the STP. The test log then inherits all the preface information from the STP,
    so all you need to document is the information that appears at the very beginning
    of “*Level* Test Logs” on [page 303](ch12.xhtml#page_303).
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有创建符合 Std 829 LTL 大纲要求的文档所需的工作，都可以通过将测试日志直接附加到 STP 的末尾来消除。测试日志继承了 STP 中的所有前言信息，因此你只需要记录出现在“*级别*测试日志”部分的内容，如
    [第303页](ch12.xhtml#page_303) 所示。
- en: 'Note that LTLs have four variants, as typical for all Std 829 level documents:
    Component Test Logs (aka Unit Test Logs), Component Integration Test Logs (aka
    Integration Test Logs), System Test Logs (aka System Integration Test Logs), and
    Acceptance Test Logs (possibly including Factory Acceptance Test Logs or Site
    Acceptance Test Logs).^([21](ch19_footnote.xhtml#ch12fn21))'
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，LTL 有四种变体，这是所有 Std 829 级别文档的典型特征：组件测试日志（也称为单元测试日志）、组件集成测试日志（也称为集成测试日志）、系统测试日志（也称为系统集成测试日志）和验收测试日志（可能包括工厂验收测试日志或现场验收测试日志）。^([21](ch19_footnote.xhtml#ch12fn21))
- en: In reality, it’s rare for there to be much in the way of Component or Component
    Integration Test Logs. Most frequently, the corresponding test procedures are
    automated tests. Even when they’re not, the development team usually runs these
    tests and immediately corrects any defects they find. Because these tests run
    frequently (often multiple times per day, particularly in teams using Agile-based
    methodologies), the overhead with documenting these test runs is far too much.
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，很少会有很多组件或组件集成测试日志。最常见的是，相应的测试程序是自动化测试。即使不是，开发团队通常也会运行这些测试并立即修复发现的任何缺陷。因为这些测试通常频繁运行（尤其是在使用敏捷方法的团队中，往往一天运行多次），所以记录这些测试运行的开销非常大。
- en: System Test Logs and Acceptance Test Logs are the variants of the LTL that testers
    (independent of the development team) run, and hence the ones that require the
    creation of actual test logs.
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: 系统测试日志和验收测试日志是测试人员（独立于开发团队）执行的 LTL 变体，因此需要创建实际的测试日志。
- en: '**12.6.4.2 Recordkeeping**'
  id: totrans-820
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.6.4.2 记录保存**'
- en: The test logs are different from the other Std 829 documents in a very fundamental
    sense. Most Std 829 documents are static documents; about the only thing you do
    with them is fill in details like software version numbers and check off verification
    steps. The basic structure of the document doesn’t change if you run the procedure
    over and over again. Ultimately, there is no reason to keep any old copies of
    the test procedure around (like runs of the test procedure that failed in the
    middle of execution). All you really need to show the customer is the last run
    of the test procedure where you successfully executed all steps and passed the
    entire procedure.
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: 测试日志与其他 Std 829 文档在根本上有所不同。大多数 Std 829 文档是静态文档；你做的几乎唯一的事情就是填写像软件版本号这样的详细信息，并勾选验证步骤。如果你重复运行程序，文档的基本结构不会改变。最终，没必要保留任何旧版的测试程序（例如，在执行过程中失败的测试运行）。你真正需要向客户展示的是最后一次成功执行所有步骤并通过整个程序的测试运行。
- en: The test logs, unlike the other documents you’ve seen in this chapter thus far,
    are *dynamic* documents. They will differ radically from test run to test run
    (even if nothing else changes, at least all the dates and timestamps will change).
    Furthermore, a test log isn’t a boilerplate document where you simply fill in
    a few blanks and check off some checkboxes. It’s essentially a blank slate that
    you create while actually running the test. If there are failures, or redlines,
    or commentary, the test log maintains the history of these events. Therefore,
    it is important to keep all your test logs, even the ones that recorded failed
    tests. It is highly improbable that any system will be perfect; there will be
    mistakes and defects you discover during testing. The test logs provide proof
    that you’ve found, corrected, and retested for these defects.
  id: totrans-822
  prefs: []
  type: TYPE_NORMAL
  zh: 测试日志，与本章之前提到的其他文档不同，是*动态*文档。它们在每次测试运行时都会发生显著变化（即使没有其他变化，至少所有日期和时间戳都会变化）。此外，测试日志不是一个模板文档，你只需填写一些空白并勾选一些复选框。它本质上是一个空白的页面，你在实际运行测试时创建它。如果有失败、红线或注释，测试日志会记录这些事件的历史。因此，保存所有测试日志非常重要，即使是记录了失败测试的日志。几乎没有任何系统是完美的；在测试过程中会发现错误和缺陷。测试日志提供了你已经发现、修正并重新测试这些缺陷的证据。
- en: If you throw away all the old test logs that document all the defects discovered
    along the way and present only perfect test logs, any reasonable customer is going
    to question what you’re hiding. Mistakes and defects are a normal part of the
    process. If you don’t show that you’ve found and corrected these mistakes, your
    customers will assume that you haven’t tested the system well enough to find the
    defects or that you’ve faked the test logs. Keep the old test logs! This proves
    you’ve done your QA due diligence for your product.
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你丢弃了所有记录发现的缺陷的旧测试日志，只展示完美的测试日志，那么任何理智的客户都会质疑你在隐藏什么。错误和缺陷是过程中的正常部分。如果你没有展示你已经发现并修正了这些错误，客户会认为你没有足够测试系统以发现缺陷，或者认为你伪造了测试日志。保留旧的测试日志！这证明你为你的产品做了质量保证的尽职调查。
- en: You could argue that keeping old test procedures to show redlines or interruptions
    in the test process is also important. However, any redline or interruption that
    appears on a test procedure document had better show up in the corresponding test
    log, so you don’t need to keep old test procedures that you’ve actually rerun.
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以争辩说，保留旧的测试程序以显示测试过程中出现的红线或中断也是很重要的。然而，任何出现在测试程序文档中的红线或中断最好也出现在相应的测试日志中，这样你就不需要保留那些你实际上已经重新执行过的旧测试程序。
- en: Note that this does not imply that all test procedures you’ve run should be
    perfect. If you have properly documented and justified redlines on a test procedure,
    yet the test execution ran successfully to its conclusion, there is no need to
    *rewrite* the test procedure and refill all the checkboxes to include a clean
    test procedure in your final documentation. If it was successful, even with redlines,
    leave it alone.^([22](ch19_footnote.xhtml#ch12fn22)) Redlines don’t indicate a
    failure of the software system; they are a defect, of course, but in the test
    procedure itself rather than the software. The goal of the test procedure is to
    test the software, not the test procedure. If minor changes to the test procedure
    are all you have, redline them and move on.
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这并不意味着你执行过的所有测试程序都应该是完美的。如果你已经适当记录并解释了测试程序中的红线，并且测试执行成功地完成了，那么就没有必要*重新编写*测试程序，并重新填写所有复选框来在最终文档中包含一个干净的测试程序。如果测试是成功的，即使有红线，也不要做任何修改。^([22](ch19_footnote.xhtml#ch12fn22))
    红线并不意味着软件系统的失败；当然，它们是缺陷，但它们出现在测试程序本身，而不是软件上。测试程序的目标是测试软件，而不是测试程序。如果测试程序只有轻微的变更，就把它标记为红线并继续进行。
- en: 'In many organizations, as I’ve said before, if any verification step in a test
    procedure fails, then after any defects are corrected, the entire procedure must
    be run from the beginning (a full regression test). For some test procedures or
    in some organizations, there may be a process in place to temporarily suspend
    a test procedure, update the software, and then resume the test procedure upon
    resolving the defect. In such cases, you can treat the verification failure step
    as though it were a redline: document the original failure in the test log, document
    the fact that the development team repaired the defect, and then document the
    correct operation of the software (at the failed verification step) with the new
    version of the software.^([23](ch19_footnote.xhtml#ch12fn23))'
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多组织中，正如我之前所说的，如果测试程序中的任何验证步骤失败，那么在缺陷修复后，整个程序必须从头开始执行（即完全回归测试）。对于一些测试程序或某些组织，可能有一种流程，可以暂时中止测试程序，更新软件，然后在解决缺陷后恢复测试程序。在这种情况下，你可以将验证失败的步骤视为红线：在测试日志中记录原始的失败，记录开发团队修复缺陷的事实，然后记录软件的新版本在失败的验证步骤中正确运行的情况。^([23](ch19_footnote.xhtml#ch12fn23))
- en: '**12.6.4.3 Paper vs. Electronic Logs**'
  id: totrans-827
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.6.4.3 纸质日志与电子日志**'
- en: Some people prefer creating electronic test logs; some organizations or customers
    demand paper test logs (filled in with pens, not pencils). The problem with electronic
    logs (especially if you create them using a word processor rather than an application
    program specifically designed to log test procedure runs) is that they are easily
    faked. Of course, no great programmer would ever fake a test log. However, there
    are less-than-great programmers in this world who have faked a test log. Unfortunately,
    the actions of those few have sullied the reputations of all software engineers.
    Therefore, it’s best to create test logs that are not easily faked, which often
    means using paper.
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人喜欢创建电子测试日志；有些组织或客户要求纸质测试日志（填写时使用钢笔，而非铅笔）。电子日志的问题在于（尤其是当你使用文字处理软件而不是专门设计的测试过程记录应用程序时），它们很容易被伪造。当然，没有优秀的程序员会伪造测试日志。然而，这个世界上确实有一些水平不高的程序员伪造过测试日志。不幸的是，这些少数人的行为污损了所有软件工程师的声誉。因此，最好是创建不容易伪造的测试日志，而这通常意味着使用纸质日志。
- en: Someone *could* fake paper logs; however, it’s a lot more work and usually more
    obvious. Ultimately, customers are probably going to want hard copies of the test
    logs; when they want them in electronic form, they’ll probably want scanned images
    of the hardcopy logs. They will be expecting you to maintain those paper logs
    in storage for legal reasons.
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: 有人*可能*伪造纸质日志；然而，这需要更多的工作，并且通常更容易被察觉。最终，客户可能会希望获得测试日志的纸质副本；当他们需要电子版时，他们可能希望得到纸质日志的扫描图像。出于法律原因，他们会期望你将这些纸质日志存档保存。
- en: Perhaps the best solution is to use a software application specifically designed
    for creating test logs, one that automatically logs the entries to a database
    (making it a bit more difficult to fake the data). For the customer, you would
    print a report from the database to provide a hardcopy (or generate a PDF report
    if they wanted an electronic copy).
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
  zh: 也许最好的解决方案是使用专门为创建测试日志而设计的软件应用程序，该应用程序自动将条目记录到数据库中（使伪造数据变得更困难）。对于客户，你可以从数据库中打印报告提供纸质副本（或者如果客户需要电子副本，则生成PDF报告）。
- en: Regardless of how testers generate the original test log, most organizations
    will require them to eventually create a paper test log, and then the testers,
    observers, and other personnel associated with the test run will have to sign
    and date it to certify that the information is correct and accurate. This is a
    legal document at this point; someone attempting to fake any data could land in
    serious legal jeopardy.
  id: totrans-831
  prefs: []
  type: TYPE_NORMAL
  zh: 无论测试人员如何生成原始测试日志，大多数组织都会要求他们最终创建纸质测试日志，然后测试人员、观察员和其他与测试运行相关的人员必须签名并注明日期，以证明信息的正确性和准确性。此时，这已成为一份法律文件；任何试图伪造数据的人都可能面临严重的法律风险。
- en: '**12.6.4.4 Inclusion in the RTM**'
  id: totrans-832
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.6.4.4 纳入到RTM中**'
- en: Normally, test logs don’t appear in the traceability matrix. However, there
    is no reason you couldn’t include them there. There is a one-to-many relationship
    between test procedures (and, therefore, STPs) and test logs. Thus, if you assign
    a unique identifier (tag) to each test report, you can add that identifier to
    an appropriate column in the RTM.
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，测试日志不会出现在可追溯性矩阵中。然而，完全没有理由不能将它们包含在其中。测试过程（因此，也包括STP）与测试日志之间存在一对多的关系。因此，如果你为每个测试报告分配一个唯一标识符（标签），你可以将该标识符添加到RTM中的适当列中。
- en: 'Because test logs have a many-to-one relationship to test procedures, it wouldn’t
    be a bad idea to model the tag ID on the others that this book presents. For example,
    use something such as: proj_TL_*xxx*_*yyy* where *xxx* comes from the test procedure
    tag (for example, *005* from *DAQ_STP_005*) and *yyy* is a (possibly decimal)
    numeric sequence that creates a unique tag for the test log.'
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: 由于测试日志与测试过程之间存在多对一关系，因此可以参考本书中呈现的其他标签ID来建模。例如，可以使用类似以下格式的标签：proj_TL_*xxx*_*yyy*，其中*xxx*来自测试过程标签（例如，*005*来自*DAQ_STP_005*），而*yyy*是一个（可能是十进制的）数字序列，用以为测试日志创建唯一的标签。
- en: '**12.7 Anomaly Reports**'
  id: totrans-835
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**12.7 异常报告**'
- en: When a tester, a development team member, a customer, or anyone else using the
    system discovers a software defect, the proper way to document it is with an *Anomaly
    Report (AR)*, also known as a *Bug Report* or *Defect Report*. All too often an
    AR consists of someone telling a programmer, “Hey, I found a problem in your code.”
    The programmer then runs off to their machine to correct the problem and there’s
    no documentation to track the anomaly. This is very unfortunate, because tracking
    defects in a system is very important to maintaining the quality of that system.
  id: totrans-836
  prefs: []
  type: TYPE_NORMAL
  zh: 当测试人员、开发团队成员、客户或其他任何使用系统的人发现软件缺陷时，正确的文档记录方式是通过*异常报告（AR）*，也叫*缺陷报告*。常见的情况是，异常报告只是某人告诉程序员：“嘿，我在你的代码里发现了问题。”然后程序员跑到自己的机器上修复问题，然而并没有文档来追踪异常。这是非常不幸的，因为追踪系统中的缺陷对于维护系统质量至关重要。
- en: 'The AR is the formal way to track system defects. Among other things, it captures
    the following information:'
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
  zh: 异常报告是跟踪系统缺陷的正式方式。它捕获以下信息：
- en: Date and time of defect occurrence
  id: totrans-838
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺陷发生的日期和时间
- en: The person who discovered the defect (or at least, who recorded the defect report
    in response to some user’s complaint)
  id: totrans-839
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现缺陷的人（或至少是响应某用户投诉记录缺陷报告的人）
- en: A description of the defect
  id: totrans-840
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺陷的描述
- en: A procedure for reproducing the defect in the system (assuming the issue is
    deterministic and is easy enough to reproduce)
  id: totrans-841
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在系统中重现缺陷的过程（假设问题是确定性的，并且足够容易重现）
- en: The impact the defect has on the system (for example, catastrophic, critical,
    marginal, negligible)
  id: totrans-842
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺陷对系统的影响（例如，灾难性、关键性、边际性、可忽略）
- en: The importance of the defect to end users (economic and social impact) so management
    can assign a priority to correcting it
  id: totrans-843
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺陷对最终用户的重要性（经济和社会影响），以便管理层可以为其分配修复优先级
- en: Any possible workarounds to the defect (so users can continue using the system
    while the development team works on correcting the defect)
  id: totrans-844
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对缺陷的任何可能的临时解决方案（以便用户在开发团队修复缺陷时仍能继续使用系统）
- en: A discussion of what it might take to correct the defect (including recommendations
    and conclusions concerning the defect)
  id: totrans-845
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对如何修复缺陷的讨论（包括有关缺陷的建议和结论）
- en: Current status of the anomaly (for example, “new anomaly,” “development team
    is working on correction,” “in testing,” “corrected in software version *xxx.xxx*”)
  id: totrans-846
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常的当前状态（例如，“新异常”，“开发团队正在修复中”，“正在测试”，“在软件版本*xxx.xxx*中修复”）
- en: 'Naturally, Std 829 has a suggested outline for Anomaly Reports. However, most
    organizations use defect-tracking software to record defects or anomalies. If
    you aren’t willing to spend the money on a commercial product, there are many
    open source products freely available, such as Bugzilla. Most of these products
    use a database organization that is reasonably compatible with the recommendations
    from Std 829:'
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: 自然，Std 829 为异常报告提供了建议的大纲。然而，大多数组织使用缺陷追踪软件来记录缺陷或异常。如果你不愿意花钱购买商业产品，有许多开源产品是免费的，例如
    Bugzilla。这些产品中的大多数使用的数据库结构合理地与 Std 829 的建议兼容：
- en: 1 Introduction
  id: totrans-848
  prefs: []
  type: TYPE_NORMAL
  zh: 1 引言
- en: 1.1 Document Identifier
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1 文档标识符
- en: 1.2 Scope
  id: totrans-850
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2 范围
- en: 1.3 References
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3 参考资料
- en: 2 Details
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
  zh: 2 详情
- en: 2.1 Summary
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1 摘要
- en: 2.2 Date Anomaly Discovered
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2 发现缺陷的日期
- en: 2.3 Context
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
  zh: 2.3 上下文
- en: 2.4 Description of Anomaly
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
  zh: 2.4 异常描述
- en: 2.5 Impact
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: 2.5 影响
- en: 2.6 Originator’s Assessment of Urgency (see IEEE 1044-1993 [B13])
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: 2.6 发起人对紧急性的评估（参见 IEEE 1044-1993 [B13]）
- en: 2.7 Description of Corrective Action
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: 2.7 整改措施描述
- en: 2.8 Status of the Anomaly
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
  zh: 2.8 异常状态
- en: 2.9 Conclusions and Recommendations
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: 2.9 结论与建议
- en: 3 General
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: 3 总则
- en: 3.1 Document Change Procedures and History
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 文档变更程序与历史
- en: '***12.7.1 Introduction in the Anomaly Reports Document***'
  id: totrans-864
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.7.1 异常报告文档中的引言***'
- en: The following subsections describe the components of the AR introduction.
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: 以下子节描述异常报告引言的组成部分。
- en: '**12.7.1.1 Document Identifier**'
  id: totrans-866
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.1.1 文档标识符**'
- en: This is a unique name that other reports can reference (such as test logs and
    test reports).
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个独特的名称，其他报告可以引用它（例如测试日志和测试报告）。
- en: '**12.7.1.2 Scope**'
  id: totrans-868
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.1.2 范围**'
- en: The Scope section gives a brief description of anything that doesn’t appear
    elsewhere in the AR.
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
  zh: 范围部分简要描述了异常报告中没有出现的任何内容。
- en: '**12.7.1.3 References**'
  id: totrans-870
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.1.3 参考资料**'
- en: References include links to other relevant documents, such as test logs and
    test procedures.
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料包括指向其他相关文档的链接，例如测试日志和测试程序。
- en: '***12.7.2 Details***'
  id: totrans-872
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.7.2 详细信息***'
- en: This section introduces the subsections that follow.
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍后续的子节。
- en: '**12.7.2.1 Summary**'
  id: totrans-874
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.2.1 总结**'
- en: Here you give a brief description of the anomaly.
  id: totrans-875
  prefs: []
  type: TYPE_NORMAL
  zh: 在此简要描述异常。
- en: '**12.7.2.2 Date Anomaly Discovered**'
  id: totrans-876
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.2.2 异常发现日期**'
- en: List the date (and time, if possible/appropriate) when the anomaly was discovered.
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
  zh: 列出异常发现的日期（如可能/适当，提供时间）。
- en: '**12.7.2.3 Context**'
  id: totrans-878
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.2.3 背景**'
- en: Software version and installation/configuration information goes in the Context
    section. This section should also refer to relevant test procedures and test logs,
    if appropriate, which should help to identify this anomaly. If no such test procedure
    exists for this anomaly, consider suggesting an addition to some test procedure
    that would catch it.
  id: totrans-879
  prefs: []
  type: TYPE_NORMAL
  zh: 软件版本和安装/配置信息应在背景部分中提供。本节还应提及相关的测试程序和测试日志（如果适用），这应有助于识别此异常。如果此异常没有现有的测试程序，考虑建议在某些测试程序中增加内容，以捕捉此类异常。
- en: '**12.7.2.4 Description of Anomaly**'
  id: totrans-880
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.2.4 异常描述**'
- en: 'Provide an in-depth description of the defect including (if possible) how to
    reproduce it. The description might include the following information:'
  id: totrans-881
  prefs: []
  type: TYPE_NORMAL
  zh: 提供缺陷的详细描述，包括（如果可能）如何复现该缺陷。描述可能包括以下信息：
- en: Inputs
  id: totrans-882
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入
- en: Actual results
  id: totrans-883
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际结果
- en: Outcome(s) (particularly, the outcomes that vary from the test procedure)
  id: totrans-884
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果（特别是，与测试程序中预期结果不同的结果）
- en: Procedure step of failure
  id: totrans-885
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 故障的过程步骤
- en: Environment
  id: totrans-886
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境
- en: Was the defect repeatable?
  id: totrans-887
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺陷是否可重复？
- en: Any tests executed immediately prior to failure than might have affected results
  id: totrans-888
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 故障发生前执行的任何测试，这些测试可能影响结果
- en: Tester(s)
  id: totrans-889
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试者
- en: Observer(s)
  id: totrans-890
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 观察者
- en: '**12.7.2.5 Impact**'
  id: totrans-891
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.2.5 影响**'
- en: Describe the impact this defect will have on system users. Describe any possible
    workarounds, such as changing the documentation or modifying the use of the system.
    If possible, estimate cost and time to repair this defect and the risk associated
    with leaving it in place. Estimate the risk associated with fixing it, which could
    impact other system features.
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: 描述此缺陷对系统用户的影响。描述任何可能的解决方法，例如更改文档或修改系统的使用方式。如果可能，估算修复该缺陷的成本和时间，以及留下该缺陷所带来的风险。估算修复该缺陷的风险，这可能会影响其他系统功能。
- en: '**12.7.2.6 Originator’s Assessment of Urgency**'
  id: totrans-893
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.2.6 提出者对紧急性的评估**'
- en: State the level of urgency for a speedy repair. The integrity levels and risk
    assessment scale from “Integrity Levels and Risk Assessment” on [page 263](ch12.xhtml#page_263)
    are probably a good minimum mechanism for stating the urgency of repair.
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: 说明修复的紧急程度。建议使用“完整性等级与风险评估”中的完整性等级和风险评估尺度，具体见[第263页](ch12.xhtml#page_263)，这可能是描述修复紧急程度的最小机制。
- en: '**12.7.2.7 Description of Corrective Action**'
  id: totrans-895
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.2.7 修正措施说明**'
- en: This section describes the time needed to determine the reason for the defect;
    an estimate of the time, cost, and risk associated with repairing it; and an estimate
    of the effort required to retest the system. Include any necessary regression
    tests to ensure that nothing else is broken by the fix.
  id: totrans-896
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述确定缺陷原因所需的时间；修复缺陷的时间、成本和风险估算；以及重新测试系统所需的努力估算。包括任何必要的回归测试，以确保修复不会破坏其他内容。
- en: '**12.7.2.8 Status of the Anomaly**'
  id: totrans-897
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.2.8 异常状态**'
- en: List the status of the current defect. Std 829 recommends statuses such as “open,”
    “approved for resolution,” “assigned for resolution,” “fixed,” and “tested with
    the fix confirmed.”
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
  zh: 列出当前缺陷的状态。Std 829 推荐的状态包括“未解决”、“已批准修复”、“已分配解决”、“已修复”和“已测试并确认修复”。
- en: '**12.7.2.9 Conclusions and Recommendations**'
  id: totrans-899
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.2.9 结论与建议**'
- en: This section should provide commentary as to why the defect occurred and recommend
    possible changes to the development process to prevent similar defects in the
    future. This section might also suggest additional requirements, test cases, and
    (modifications to) test procedures to catch the anomaly in the future; this is
    particularly important if testing discovered the anomaly by accident rather than
    by running specific test procedure steps to catch this particular defect.
  id: totrans-900
  prefs: []
  type: TYPE_NORMAL
  zh: 本节应提供关于缺陷发生原因的评论，并建议可能的开发过程改进，以防止未来发生类似缺陷。本节还可能建议额外的需求、测试用例和（修改后的）测试程序，以在未来捕捉该异常；这在测试过程中意外发现异常时尤为重要，而不是通过运行特定的测试程序步骤来捕捉该缺陷。
- en: '**12.7.2.10 General**'
  id: totrans-901
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.2.10 一般信息**'
- en: This is the usual end-of-document section in Std 829 documents providing a change
    history (to the AR format, not to a specific AR) and change procedures. Std 829
    does not recommend a glossary.
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Std 829 文档中的通常结尾部分，提供了变更历史（针对 AR 格式，而不是特定 AR）和变更程序。Std 829 不推荐使用术语表。
- en: '***12.7.3 A Few Comments on Anomaly Reports***'
  id: totrans-903
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.7.3 关于异常报告的几点评论***'
- en: It is worthwhile to bear the following points in mind when dealing with Anomaly
    Reports.
  id: totrans-904
  prefs: []
  type: TYPE_NORMAL
  zh: 处理异常报告时，牢记以下几点是值得的。
- en: '**12.7.3.1 ARs Don’t Go in the RTM**'
  id: totrans-905
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.3.1 ARs 不会进入 RTM**'
- en: The purpose of the traceability matrix is to be able to trace requirements of
    designs and tests to ensure that the system successfully meets all requirements.
    While one could argue that test logs belong in the RTM, most people don’t bother
    to put them there because they normally attach test logs directly to the completed
    test procedures.
  id: totrans-906
  prefs: []
  type: TYPE_NORMAL
  zh: 可追溯性矩阵的目的是能够追踪设计和测试的需求，以确保系统成功地满足所有需求。虽然有人可能会争辩说测试日志应该放入 RTM，但大多数人并不愿意将它们放进去，因为他们通常会将测试日志直接附加到完成的测试程序上。
- en: Anomalies, on the other hand, aren’t something whose existence you’re trying
    to prove; indeed, in a perfect world you’re trying to *disprove* the existence
    of anomalies. This doesn’t mean you discard ARs. Just as with test logs, it’s
    very important to keep all the old ARs around—they provide valuable proof that
    you’ve done your due diligence when testing the system. More importantly, you
    want to keep ARs for regression purposes. Sometimes long after a defect has been
    discovered and corrected, it finds its way into the system again. Having a historical
    record of ARs makes it possible to go back and examine the original cause and
    its solution.
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: 异常报告（ARs），另一方面，并不是你试图证明其存在的东西；事实上，在一个完美的世界里，你试图*反驳*异常的存在。这并不意味着你要丢弃 ARs。就像测试日志一样，保留所有旧的
    ARs 是非常重要的——它们提供了你在测试系统时已尽职尽责的宝贵证据。更重要的是，你需要保留 ARs 以备回归测试使用。有时，在一个缺陷被发现并修正之后，它可能会再次出现在系统中。拥有
    ARs 的历史记录可以让你回溯并检查最初的原因及其解决方案。
- en: '**12.7.3.2 Electronic vs. Paper ARs**'
  id: totrans-908
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.7.3.2 电子 ARs 与纸质 ARs**'
- en: As this chapter noted earlier, most organizations use a defect-tracking system
    to capture and track ARs. Although Std 829 doesn’t specifically suggest or require
    paper documents (indeed, Std 829 points out that you can use software to track
    anomalies), the outline form tends to suggest a hardcopy format. But given that
    most organizations use defect-tracking software, why bother with hardcopy ARs?
    The main reason is portability in the “you can carry it with you” sense. While
    using the defect-tracking system makes a lot of sense for system integration,
    factory acceptance tests, and other tests done at the development site where there
    is easy access to the tracker, in some cases it may not be available or accessible
    at an installation during a site acceptance test.^([24](ch19_footnote.xhtml#ch12fn24))
    In such situations, creating ARs on paper and then entering them into the defect-tracking
    system when possible is probably the best approach.
  id: totrans-909
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章之前提到的，大多数组织使用缺陷跟踪系统来捕捉和跟踪 ARs。尽管 Std 829 并没有特别建议或要求纸质文档（实际上，Std 829 指出你可以使用软件来跟踪异常），但其大纲形式通常暗示着硬拷贝格式。但考虑到大多数组织使用缺陷跟踪软件，为什么还要使用纸质
    ARs 呢？主要原因是便携性，即“你可以随身携带”。虽然在系统集成、工厂验收测试以及其他在开发站点进行的测试中，使用缺陷跟踪系统非常合理，因为可以方便地访问该跟踪器，但在某些情况下，在现场验收测试期间，它可能在安装现场不可用或无法访问。^([24](ch19_footnote.xhtml#ch12fn24))
    在这种情况下，创建纸质 ARs 并在可能时将其录入缺陷跟踪系统，可能是最佳的做法。
- en: '**12.8 Test Reports**'
  id: totrans-910
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**12.8 测试报告**'
- en: When testing is completed, a test report summarizes the results. As for many
    of the other test documents, Std 829 describes a wide variety of test reports
    you can produce. Std 829 defines *Level* Interim Test Status Reports (LITSR),
    *Level* Test Reports (LTR), and Master Test Reports (MTR). Of course, you can
    substitute *Component*, *Component Integration*, *System*, and *Acceptance* in
    place of *Level* (with the usual common names as well).
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: 测试完成后，测试报告总结了测试结果。对于许多其他测试文档，Std 829 描述了你可以生成的各种测试报告。Std 829 定义了*级别*中期测试状态报告（LITSR）、*级别*测试报告（LTR）和主测试报告（MTR）。当然，你可以用*组件*、*组件集成*、*系统*和*验收*代替*级别*（当然也可以使用常见的名称）。
- en: A very large organization might need to produce interim test reports so management
    can figure out what’s going on in an equally large system. For more information
    on LITSRs, refer to IEEE Std 829-2008; they are, quite frankly, documentation
    for documentation’s sake for most projects, but large governmental contracts might
    explicitly require them.
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常大的组织可能需要生成中期测试报告，以便管理层了解一个同样庞大的系统的情况。有关 LITSR 的更多信息，请参阅 IEEE Std 829-2008；坦率地说，它们对于大多数项目来说只是为了文档而生成文档，但大型政府合同可能会明确要求它们。
- en: '*Level* and Master Test Reports vary according to the size of the project.
    Most small to medium-sized systems with (typically) a single software application
    and, therefore, a single STP, will have a single test report, if any at all.'
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
  zh: '*级别* 和主测试报告的格式根据项目的大小而有所不同。大多数小型到中型系统（通常只有一个软件应用程序，因此只有一个STP）将只有一个测试报告，如果有的话。'
- en: Once a system grows to the size that it contains several major software applications,
    there will usually be a test report for each major application and then an MTR
    as a summary of the results from the individual test reports. The MTR, then, provides
    an *executive-level review* of all the tests.
  id: totrans-914
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦系统发展到包含多个主要软件应用程序的规模，通常会为每个主要应用程序准备一个测试报告，然后有一个MTR作为对各个测试报告结果的总结。因此，MTR提供了一个*高层次的回顾*，对所有测试进行了汇总。
- en: '***12.8.1 Brief Mention of the Master Test Report***'
  id: totrans-915
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***12.8.1 简要提及主测试报告***'
- en: As the MTR is generally not a document that individual developers will deal
    with, this section will simply present the Std 829-suggested outline without further
    comment and then concentrate on LTRs.
  id: totrans-916
  prefs: []
  type: TYPE_NORMAL
  zh: 由于MTR通常不是个别开发人员处理的文档，本节将简要展示Std 829建议的大纲，而不作进一步评论，随后集中讨论LTRs。
- en: 1 Introduction
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: 1 引言
- en: 1.1 Document Identifier
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1 文档标识符
- en: 1.2 Scope
  id: totrans-919
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2 范围
- en: 1.3 References
  id: totrans-920
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3 参考文献
- en: 2 Details of the Master Test Report
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
  zh: 2 主测试报告的详细信息
- en: 2.1 Overview of All Aggregate Test Results
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1 所有汇总测试结果概述
- en: 2.2 Rationale for Decisions
  id: totrans-923
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2 决策依据
- en: 2.3 Conclusions and Recommendations
  id: totrans-924
  prefs: []
  type: TYPE_NORMAL
  zh: 2.3 结论与建议
- en: 3 General
  id: totrans-925
  prefs: []
  type: TYPE_NORMAL
  zh: 3 一般事项
- en: 3.1 Glossary
  id: totrans-926
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 术语表
- en: 3.2 Document Change Procedures and History
  id: totrans-927
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2 文档变更程序和历史
- en: For more information on the MTR, see IEEE Std 829-2008.
  id: totrans-928
  prefs: []
  type: TYPE_NORMAL
  zh: 关于MTR的更多信息，请参见IEEE Std 829-2008。
- en: '*12.8.2* Level *Test Reports*'
  id: totrans-929
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*12.8.2* 级别 *测试报告*'
- en: 'Although you could have component/unit test reports and component integration
    test reports, most organizations leave unit and integration testing to the development
    department, as upper management generally doesn’t care about the low-level details.
    Thus, the most common Level *Test Reports (LTRs)* you’ll see will be System (Integration)
    Test Reports and Acceptance Test Reports, typically Factory Acceptance Test Reports
    and Site Acceptance Test Reports. Std 829 outlines LTRs as follows:'
  id: totrans-930
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你可能有组件/单元测试报告和组件集成测试报告，但大多数组织将单元测试和集成测试交由开发部门处理，因为高层管理通常不关心这些低级细节。因此，你最常见的级别
    *测试报告 (LTRs)* 将是系统（集成）测试报告和验收测试报告，通常是工厂验收测试报告和现场验收测试报告。Std 829对LTRs的定义如下：
- en: 1 Introduction
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: 1 引言
- en: 1.1 Document Identifier
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1 文档标识符
- en: 1.2 Scope
  id: totrans-933
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2 范围
- en: 1.3 References
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3 参考文献
- en: 2 Details
  id: totrans-935
  prefs: []
  type: TYPE_NORMAL
  zh: 2 详细信息
- en: 2.1 Overview of Test Results
  id: totrans-936
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1 测试结果概述
- en: 2.2 Detailed Test Results
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2 详细测试结果
- en: 2.3 Rationale for Decisions
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
  zh: 2.3 决策依据
- en: 2.4 Conclusions and Recommendations
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
  zh: 2.4 结论与建议
- en: 3 General
  id: totrans-940
  prefs: []
  type: TYPE_NORMAL
  zh: 3 一般事项
- en: 3.1 Glossary
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 术语表
- en: 3.2 Document Change Procedures and History
  id: totrans-942
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2 文档变更程序和历史
- en: Sections 1 (“Introduction”) and 3 (“General”) are the same as for most other
    Std 829 test documents in this chapter. The core of the test report is in Section
    2 (“Details”). The following subsections describe its contents.
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: 第1节（“引言”）和第3节（“一般事项”）与本章中大多数其他Std 829测试文档相同。测试报告的核心部分在第2节（“详细信息”）。以下小节描述了其内容。
- en: '**12.8.2.1 Overview of the Test Results**'
  id: totrans-944
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.8.2.1 测试结果概述**'
- en: This section is a summary of the test activities. It would briefly describe
    the features covered by the tests, testing environment, software/hardware version
    numbers, and any other general information about the test. The overview should
    also mention if there was anything special about the testing environment that
    would yield different results if the test were conducted in a different environment,
    like a factory.
  id: totrans-945
  prefs: []
  type: TYPE_NORMAL
  zh: 本节是对测试活动的总结。它将简要描述测试覆盖的功能、测试环境、软件/硬件版本号以及其他与测试相关的常规信息。概述还应提到测试环境是否有任何特殊之处，如果测试在不同环境（如工厂）中进行，会得到不同的结果。
- en: '**12.8.2.2 Detailed Test Result**'
  id: totrans-946
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.8.2.2 详细测试结果**'
- en: Summarize all the results in this section. List all anomalies discovered and
    their resolution. If the resolution to a defect has been deferred, be sure to
    provide justification and discuss the impact that defect will have on the system.
  id: totrans-947
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中总结所有的测试结果。列出所有发现的异常及其解决方案。如果某个缺陷的解决方案已被推迟，务必提供合理的解释，并讨论该缺陷对系统的影响。
- en: If there were any deviations from the test procedure, explain and justify those
    deviations. Describe any changes (redlines) to the test procedures.
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有任何偏离测试程序的情况，需说明并为这些偏离提供理由。描述任何对测试程序的更改（红线）。
- en: This section should also provide a confidence level in the testing process.
    For example, if the testing process focuses on code coverage, this section should
    describe the estimated percentage of code coverage that the testing processing
    achieved.
  id: totrans-949
  prefs: []
  type: TYPE_NORMAL
  zh: 本节还应提供对测试过程的信心水平。例如，如果测试过程侧重于代码覆盖率，本节应描述测试过程中所实现的代码覆盖率的估算百分比。
- en: '**12.8.2.3 Rationale for Decisions**'
  id: totrans-950
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.8.2.3 决策依据**'
- en: If the team had to make any decisions during the testing process such as deviations
    from test procedures or failure to correct known anomalies, this section should
    provide the rationale for those decisions. This section might also justify any
    conclusions reached (in the next section).
  id: totrans-951
  prefs: []
  type: TYPE_NORMAL
  zh: 如果团队在测试过程中做出了任何决策，比如偏离测试程序或未能修正已知的异常情况，本节应提供这些决策的理由。本节还可以为得出的任何结论提供解释（在下一节中）。
- en: '**12.8.2.4 Conclusions and Recommendations**'
  id: totrans-952
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**12.8.2.4 结论与建议**'
- en: This section should state any conclusions emanating from the test processing.
    This section should discuss the product’s fitness for release/production use,
    and recommend possibilities such as disabling certain, possibly known, anomalous
    features to allow early release of the system. This section could also recommend
    stalling the release pending further development and possible debugging.
  id: totrans-953
  prefs: []
  type: TYPE_NORMAL
  zh: 本节应陈述测试过程得出的任何结论。本节应讨论产品是否适合发布/生产使用，并推荐可能的方案，例如禁用某些可能已知的异常功能，以便提前发布系统。此节也可以建议推迟发布，等待进一步的开发和可能的调试。
- en: '**12.9 Do You Really Need All of This?**'
  id: totrans-954
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**12.9 你真的需要所有这些吗？**'
- en: IEEE Std 829-2008 describes a huge volume of documentation. Do you really need
    to create all this documentation for the next “killer app” you’re developing by
    yourself in your home office? Of course not. Except for the largest (government-sponsored)
    applications, the vast majority of the documentation described in Std 829 is complete
    overkill. For normal projects, you’ll probably want to have the STC, SRL, and
    STP documents.^([25](ch19_footnote.xhtml#ch12fn25)) Test logs will simply be an
    appendix to the STP. Anomaly Reports would be entries in your defect-tracking
    system (from which you can produce hardcopy reports).
  id: totrans-955
  prefs: []
  type: TYPE_NORMAL
  zh: IEEE Std 829-2008描述了大量文档。你真的需要为你在家办公自己开发的下一个“杀手级应用”创建所有这些文档吗？当然不需要。除了最大的（政府资助的）应用程序外，Std
    829中描述的绝大多数文档都是过度的。对于普通项目，你可能只需要STC、SRL和STP文档。^[25](ch19_footnote.xhtml#ch12fn25)测试日志将仅作为STP的附录。异常报告将是你缺陷跟踪系统中的条目（你可以从中生成纸质报告）。
- en: You can also reduce the size of your STC and STP documents by using automated
    testing. You probably can’t eliminate all manual tests, but you can get rid of
    many of them.
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过使用自动化测试来减少STC和STP文档的大小。你可能无法消除所有手动测试，但可以去除其中的许多。
- en: Test reports are easy enough to eliminate in smaller projects. The test log
    at the end of the STP will likely serve as a reasonable alternative unless you
    have multiple levels of management demanding full documentation.
  id: totrans-957
  prefs: []
  type: TYPE_NORMAL
  zh: 在较小的项目中，测试报告是完全可以省略的。STP末尾的测试日志可能作为一个合理的替代方案，除非你有多个管理层要求完整的文档。
- en: Agile development methodologies might seem like a good alternative for reducing
    the cost of all this documentation. However, keep in mind that developing, validating,
    verifying, and maintaining all those automated test procedures also has an associated—and
    often equivalent—cost.
  id: totrans-958
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷开发方法似乎是减少所有这些文档成本的一个不错选择。然而，请记住，开发、验证、验证和维护所有这些自动化测试程序也有相应的——而且往往是等同的——成本。
- en: '**12.10 For More Information**'
  id: totrans-959
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**12.10 获取更多信息**'
- en: Dingeldein, Tirena. “5 Best Free and Open Source Bug Tracking Software for Cutting
    IT Costs.” September 6, 2019\. *[https://blog.capterra.com/top-free-bug-tracking-software/](https://blog.capterra.com/top-free-bug-tracking-software/)*.
  id: totrans-960
  prefs: []
  type: TYPE_NORMAL
  zh: Dingeldein, Tirena. “降低IT成本的5款最佳免费开源错误跟踪软件。”2019年9月6日。*[https://blog.capterra.com/top-free-bug-tracking-software/](https://blog.capterra.com/top-free-bug-tracking-software/)*。
- en: 'IEEE. “IEEE Std 829-2008: IEEE Standard for Software and System Test Documentation.”
    July 18, 2008\. *[http://standards.ieee.org/findstds/standard/829-2008.html](http://standards.ieee.org/findstds/standard/829-2008.html)*.
    This is expensive ($160 US when I last checked), but this is the gold standard.
    It’s more readable than the SDD standard, but still heavy reading.'
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
  zh: IEEE. “IEEE Std 829-2008：软件和系统测试文档的IEEE标准。”2008年7月18日。*[http://standards.ieee.org/findstds/standard/829-2008.html](http://standards.ieee.org/findstds/standard/829-2008.html)*。这很昂贵（我最后一次检查时是160美元），但这是黄金标准。它比SDD标准更易读，但仍然是阅读负担。
- en: Peham, Thomas. “7 Excellent Open Source Bug Tracking Tools Unveiled by Usersnap.”
    May 8, 2016\. *[https://usersnap.com/blog/open-source-bug-tracking/](https://usersnap.com/blog/open-source-bug-tracking/)*.
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
  zh: Peham, Thomas. “7款用户推荐的优秀开源缺陷追踪工具。”2016年5月8日。 *[https://usersnap.com/blog/open-source-bug-tracking/](https://usersnap.com/blog/open-source-bug-tracking/)*。
- en: 'Plantation Productions, Inc. “Open Source/Open Hardware: Digital Data Acquisition
    & Control System.” n.d. *[http://www.plantation-productions.com/Electronics/DAQ/DAQ.html](http://www.plantation-productions.com/Electronics/DAQ/DAQ.html)*.
    This is where you’ll find the DAQ Data Acquisition Software Review, Software Test
    Case, Software Test Procedures, and Reverse Traceability Matrix.'
  id: totrans-963
  prefs: []
  type: TYPE_NORMAL
  zh: Plantation Productions, Inc. “开源/开硬件：数字数据采集与控制系统。”无日期。 *[http://www.plantation-productions.com/Electronics/DAQ/DAQ.html](http://www.plantation-productions.com/Electronics/DAQ/DAQ.html)*。在这里你可以找到DAQ数据采集软件评审、软件测试用例、软件测试流程以及反向可追溯性矩阵。
- en: 'Software Testing Help. “15 Best Bug Tracking Software: Top Defect/Issue Tracking
    Tools of 2019.” November 14, 2019\. *[http://www.softwaretestinghelp.com/popular-bug-tracking-software/](http://www.softwaretestinghelp.com/popular-bug-tracking-software/)*.'
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
  zh: Software Testing Help. “2019年最佳缺陷追踪软件：顶级缺陷/问题追踪工具。”2019年11月14日。 *[http://www.softwaretestinghelp.com/popular-bug-tracking-software/](http://www.softwaretestinghelp.com/popular-bug-tracking-software/)*。
- en: Wikipedia. “Bug Tracking System.” Last modified April 4, 2020\. [*https://en.wikipedia.org/wiki/Bug_tracking_system*](https://en.wikipedia.org/wiki/Bug_tracking_system).
  id: totrans-965
  prefs: []
  type: TYPE_NORMAL
  zh: Wikipedia. “缺陷追踪系统。”最后修改于2020年4月4日。 [*https://en.wikipedia.org/wiki/Bug_tracking_system*](https://en.wikipedia.org/wiki/Bug_tracking_system)。
