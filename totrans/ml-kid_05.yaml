- en: '![](Images/chapterart.png)'
  id: totrans-0
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/chapterart.png)'
- en: '7'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Insulting a Computer
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 侮辱计算机
- en: '![Alphabet-I](Images/Alphabet-I.png)n this chapter, we’ll look at how computers
    can be trained to recognize different tones and emotion in written text, a technique
    known as *sentiment analysis**.*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '![Alphabet-I](Images/Alphabet-I.png) 在本章中，我们将探讨如何训练计算机识别书面文本中的不同语气和情感，这种技术称为*情感分析*。'
- en: '*Imagine you need to write a few sentences to say that you are going to the
    zoo tomorrow.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*想象你需要写几句话，说明你明天要去动物园。*'
- en: Think about what you might write if you’re super happy and excited about going.
    You love the zoo, and you can’t wait to go. What sorts of words would you use?
    Would your excitement affect the way you write the sentences?
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 想想，如果你对去动物园感到非常开心和兴奋，你会写什么？你喜欢动物园，迫不及待想去。你会使用什么样的词汇？你的兴奋会影响你写句子的方式吗？
- en: Now think of what you might write if you’re angry about having to go. You hate
    zoos, there are other things that you’d rather be doing tomorrow, and you’re annoyed
    that someone is making you go. How might that show up in your writing? Would your
    annoyance make you use different sorts of words than you would if you were happy
    about going? Would you phrase your sentences differently?
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在想想，如果你因为不得不去而生气时会写什么。你讨厌动物园，明天有其他事情你更想做，而且你很生气有人让你去。那这种情绪会如何体现在你的写作中？你的烦恼是否会让你使用和你高兴时不同的词汇？你会以不同的方式表达句子吗？
- en: Both of these paragraphs would have the same basic meaning (that you are going
    to the zoo tomorrow), but their tone and sentiment would be different. Computers
    can be trained to recognize the patterns in how we write when we’re annoyed compared
    with how we write when we’re happy. With enough examples of text demonstrating
    different emotions and sentiment, you can train an ML model to identify the emotion
    or tone in a new piece of writing based on patterns in vocabulary and grammar
    that the computer learns to recognize.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这两段文字的基本含义相同（即你明天要去动物园），但它们的语气和情感会有所不同。计算机可以通过训练来识别我们在烦恼时和高兴时写作方式中的模式。通过足够多的情感和情绪示例文本，你可以训练一个机器学习模型，根据计算机学习识别的词汇和语法模式，识别新写作中的情感或语气。
- en: ML systems that are trained to recognize sentiment and emotion in text can be
    used to understand how people feel about things. For example, businesses use sentiment
    analysis to find out what people think about their products or services by pointing
    their ML model at millions of blogs, forums, newsgroups, and social media posts—far
    more than they could ever read themselves. Sentiment analysis tells them how much
    of that feedback seems positive and how much seems negative, and what the most
    common complaints and criticisms are.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 经过训练的机器学习系统可以识别文本中的情感和情绪，用于了解人们对事物的感受。例如，企业利用情感分析来了解人们对其产品或服务的看法，方法是将他们的机器学习模型指向数百万篇博客、论坛、新闻组和社交媒体帖子——这是他们自己无法阅读的数量。情感分析可以告诉他们反馈中有多少看起来是正面的，多少看起来是负面的，以及最常见的投诉和批评是什么。
- en: Sentiment analysis isn’t just applied to massive amounts of text across the
    whole internet, though. Companies will often use it to help sort and prioritize
    customer support letters and emails, replying first to the letters and emails
    that sound the angriest or most annoyed.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 情感分析不仅仅应用于互联网上大量的文本。公司通常会利用它来帮助分类和优先处理客户支持信件和电子邮件，首先回复那些看起来最生气或最烦恼的信件和邮件。
- en: Similarly, companies use sentiment analysis on their own internal discussions
    as a way of estimating how happy their employees are and if there are any issues
    or concerns that need attention.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，公司也会在内部讨论中使用情感分析，作为估算员工幸福感的方式，并看看是否有需要关注的问题或顾虑。
- en: 'In this chapter, you’ll train an ML model to recognize the sentiment expressed
    by two different types of text: compliments and insults.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将训练一个机器学习模型，来识别两种不同类型文本所表达的情感：赞美和侮辱。
- en: Build Your Project
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建你的项目
- en: In this project, you’ll create a character that reacts to a message you type
    (see [Figure 7-1](#figure7-1)). If you give the character a compliment, it will
    look happy. If you insult it, it will look sad.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将创建一个角色，它会对你输入的消息做出反应（见[图 7-1](#figure7-1)）。如果你给角色一个赞美，它会显得很开心。如果你侮辱它，它会显得很伤心。
- en: '![f07001](Images/f07001.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![f07001](Images/f07001.png)'
- en: '[Figure 7-1:](#figureanchor7-1) Recognizing compliments and insults'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 7-1:](#figureanchor7-1) 识别赞美和侮辱'
- en: Prepare Your Game
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准备你的游戏
- en: First, start by designing your character. For my screenshots, I drew a simple
    face. You can draw anything you like, as long as you can tell if it is happy or
    sad. You could make an animal, a robot, an alien, or anything else you can think
    of.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，开始设计你的角色。对于我的截图，我绘制了一个简单的面孔。你可以画任何你喜欢的，只要能够看出它是开心还是难过。你可以画一个动物、机器人、外星人，或者任何你能想到的东西。
- en: Go to [https://machinelearningforkids.co.uk/scratch3/](https://machinelearningforkids.co.uk/scratch3/)
    to start a new Scratch project.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [https://machinelearningforkids.co.uk/scratch3/](https://machinelearningforkids.co.uk/scratch3/)
    开始一个新的 Scratch 项目。
- en: Click the **Costumes** tab, as shown in [Figure 7-2](#figure7-2).![f07002](Images/f07002.png)
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**服装**标签，如[图 7-2](#figure7-2)所示。![f07002](Images/f07002.png)
- en: '[Figure 7-2:](#figureanchor7-2) Designing a character in the Costumes tab'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-2:](#figureanchor7-2) 在服装标签中设计角色'
- en: Move your mouse pointer over the cat face icon at the bottom left of the screen
    to see the choices for adding a costume, as shown in [Figure 7-3](#figure7-3).![f07003](Images/f07003.png)
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标指针移到屏幕左下角的猫脸图标上，查看添加服装的选项，如[图 7-3](#figure7-3)所示。![f07003](Images/f07003.png)
- en: '[Figure 7-3:](#figureanchor7-3) Adding a new costume'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-3:](#figureanchor7-3) 添加新服装'
- en: If you’d like to draw your own character, click **Paint**. For my screenshots,
    I drew a simple green alien character by drawing a few colored circles and adding
    some hair (see [Figure 7-4](#figure7-4)).
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你想绘制自己的角色，点击**绘画**。对于我的截图，我通过绘制几个彩色圆圈并加上一些头发，画了一个简单的绿色外星人角色（见[图 7-4](#figure7-4)）。
- en: If you’d prefer not to draw the character yourself, you have a few other options.
    If your computer has a webcam and you want to use a photo of your face, click
    **Camera**. Or, to use a picture you’ve saved on the computer (such as one you
    downloaded from the internet), click **Upload Costume**. To pick a costume from
    the Scratch Costume Library instead, click **Choose a Costume**.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你不想自己绘制角色，可以选择其他几种方式。如果你的电脑有摄像头，并且想使用你的面部照片，点击**相机**。或者，如果你想使用已保存的图片（例如从互联网下载的图片），点击**上传服装**。如果你想从
    Scratch 服装库中选择一个服装，点击**选择服装**。
- en: No matter which choice you make, you should see the character on the canvas
    after this step.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论你选择哪种方式，完成此步骤后，你应该能够在画布上看到角色。
- en: '![f07004](Images/f07004.png)'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f07004](Images/f07004.png)'
- en: '[Figure 7-4:](#figureanchor7-4) Drawing your character'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-4:](#figureanchor7-4) 绘制你的角色'
- en: Right-click the character costume in the costume pane and click **duplicate**,
    as shown in [Figure 7-5](#figure7-5). You’ll need three copies of it.![f07005](Images/f07005.png)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服装面板中右击角色服装，点击**复制**，如[图 7-5](#figure7-5)所示。你需要三个副本。![f07005](Images/f07005.png)
- en: '[Figure 7-5:](#figureanchor7-5) Duplicating a costume'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-5:](#figureanchor7-5) 复制服装'
- en: Rename each copy of the character by clicking it in the costume pane and then
    typing the new name in the **Costume** text box above the canvas, as shown in
    [Figure 7-6](#figure7-6). Name them `waiting`, `feeling happy`, and `feeling sad`.![f07006](Images/f07006.png)
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击服装面板中的角色服装，然后在画布上方的**服装**文本框中输入新名称来重命名每个角色副本，如[图 7-6](#figure7-6)所示。分别命名为`waiting`、`feeling
    happy`和`feeling sad`。![f07006](Images/f07006.png)
- en: '[Figure 7-6:](#figureanchor7-6) Renaming your character costumes'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-6:](#figureanchor7-6) 重命名你的角色服装'
- en: Click each character costume in the costume pane and draw an expression that
    matches its name, as shown in [Figure 7-7](#figure7-7).
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击服装面板中的每个角色服装，并绘制一个与其名称匹配的表情，如[图 7-7](#figure7-7)所示。
- en: The `feeling happy` costume should look happy. If it’s a face, you could make
    it smile. If it’s an animal, you could change the position of its tail or ears.
    Or you could just draw the character holding up a sign that says how it feels.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`feeling happy` 服装应该看起来开心。如果是脸部，你可以让它微笑。如果是动物，你可以改变尾巴或耳朵的位置。或者，你也可以画出角色举着写有其感受的标语牌。'
- en: The `feeling sad` costume should look sad. If it’s a face, you could draw a
    frown or tears.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`feeling sad` 服装应该看起来很难过。如果是脸部，你可以画一个皱眉或眼泪。'
- en: The `waiting` costume will be used while your character is waiting for you to
    say something to it, so it should be neither happy nor sad.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`waiting` 服装将在角色等待你与其对话时使用，因此它既不应该看起来开心，也不应该看起来难过。'
- en: '![f07007](Images/f07007.png)'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f07007](Images/f07007.png)'
- en: '[Figure 7-7:](#figureanchor7-7) Adding expressions to the different character
    costumes'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-7:](#figureanchor7-7) 为不同的角色服装添加表情'
- en: Save your Scratch project by clicking **File**▶**Save to your computer**.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**文件**▶**保存到你的计算机**来保存你的 Scratch 项目。
- en: Code Your Game Without ML
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在没有机器学习的情况下编写游戏
- en: It’s useful to see the difference ML makes by trying to code this AI project
    without it first. But you can skip this part if you’d rather go straight to using
    ML.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用 ML 之前，尝试不使用 ML 编写这个 AI 项目，了解 ML 带来的差异是很有用的。但如果你更愿意直接使用 ML，可以跳过这部分。
- en: Click the **Code** tab, as shown in [Figure 7-8](#figure7-8).![f07008](Images/f07008.png)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代码**选项卡，如[图 7-8](#figure7-8)所示。![f07008](Images/f07008.png)
- en: '[Figure 7-8:](#figureanchor7-8) The Code tab'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-8:](#figureanchor7-8) 代码选项卡'
- en: Copy the script shown in [Figure 7-9](#figure7-9).![f07009](Images/f07009.png)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制[图 7-9](#figure7-9)中显示的脚本。![f07009](Images/f07009.png)
- en: '[Figure 7-9:](#figureanchor7-9) Coding the project without ML'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-9:](#figureanchor7-9) 编写没有 ML 的项目代码'
- en: Save your project, using **File**▶**Save to your computer**.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**文件**▶**保存到你的计算机**来保存你的项目。
- en: Test your project by clicking the Green Flag icon. Your character will ask you
    to say something to it. Type `I like you` or `You are nice`, and your character
    will look happy. If you type anything else, your character will look sad.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击绿色旗标图标来测试你的项目。你的角色会要求你对它说些什么。输入`I like you` 或 `You are nice`，你的角色会看起来很高兴。如果你输入其他任何内容，你的角色会看起来很伤心。
- en: Now type `You are lovely`. Why doesn’t your character look happy?
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在输入`You are lovely`。为什么你的角色看起来不高兴？
- en: What would you need to change about your code so it would recognize “I like
    you” and “You are nice” *and* “You are lovely” as compliments?
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你需要对代码做出什么改变才能让它识别“我喜欢你”和“你很好”*以及*“你很可爱”作为赞美呢？
- en: Do you think you can write a script that includes *every possible way* of phrasing
    every possible compliment and insult?
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你认为你能写出一个脚本，涵盖*所有可能的方式*来表达每一种可能的赞美和侮辱吗？
- en: In Chapter 1, I said that ML is not the only way to create an AI system. Here
    you’ve created an AI program using a *rules-based* approach. You can see why,
    although rules-based techniques like this are still used for some very simple
    AI projects, ML is the preferred approach for more complicated projects. We’ll
    train our project that way next, and later in the chapter we’ll see how the ML
    code performs compared to the rules-based code.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一章中，我提到过，机器学习（ML）并不是创建 AI 系统的唯一方式。在这里，你通过*基于规则*的方法创建了一个 AI 程序。你可以看到，尽管像这样的基于规则的技术仍然用于一些非常简单的
    AI 项目，但对于更复杂的项目，ML 是首选方法。接下来我们将按照这种方式训练我们的项目，稍后在本章中我们将看到 ML 代码与基于规则的代码相比的表现。
- en: Train Your Model
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练你的模型
- en: To train the computer to recognize compliments and insults, you’ll collect examples
    of both and use them to train an ML model.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了训练计算机识别赞美和侮辱，你需要收集两者的示例，并用它们来训练一个 ML 模型。
- en: Create a new ML project, name it `Make me happy`, and set it to learn to recognize
    text in your preferred language.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 ML 项目，命名为`Make me happy`，并设置为学习识别你所选语言中的文本。
- en: Click **Train**, as shown in [Figure 7-10](#figure7-10).![f07010](Images/f07010.png)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**训练**，如[图 7-10](#figure7-10)所示。![f07010](Images/f07010.png)
- en: '[Figure 7-10:](#figureanchor7-10) Train is the first phase of an ML project.'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-10:](#figureanchor7-10) 训练是 ML 项目的第一阶段。'
- en: Click **Add new label**, as shown in [Figure 7-11](#figure7-11). Name this training
    bucket `compliments`. Then, create a second training bucket and name it `insults`.![f07011](Images/f07011.png)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加新标签**，如[图 7-11](#figure7-11)所示。将此训练桶命名为`compliments`。然后，创建第二个训练桶并将其命名为`insults`。![f07011](Images/f07011.png)
- en: '[Figure 7-11:](#figureanchor7-11) Prepare two training buckets using **Add
    new label**.'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-11:](#figureanchor7-11) 使用**添加新标签**准备两个训练桶。'
- en: Click **Add example** **in the **compliments** bucket, as shown in [Figure 7-12](#figure7-12),
    and type the best compliment that you can think of.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加示例** **在**`compliments`**桶中，如[图 7-12](#figure7-12)所示，并输入你能想到的最好的赞美词。
- en: Repeat this step to add at least five examples of compliments that will make
    your character happy. These are the examples your ML model will use to learn what
    a compliment looks like, so try to think of a wide variety.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重复此步骤，至少添加五个可以让你的角色高兴的赞美示例。这些是你的 ML 模型将用来学习什么是赞美的示例，所以尽量考虑多种不同的方式。
- en: '![f07012](Images/f07012.png)'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f07012](Images/f07012.png)'
- en: '[Figure 7-12:](#figureanchor7-12) Training examples for recognizing compliments**'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-12:](#figureanchor7-12) 用于识别赞美的训练示例'
- en: '***   Click **Add example** in the **insults** bucket, as shown in [Figure
    7-13](#figure7-13), and type the meanest, cruelest insult that you can think of.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*** 点击**添加示例**在**侮辱**桶中，如[图 7-13](#figure7-13)所示，并输入你能想到的最恶毒、最残忍的侮辱。'
- en: Repeat this step to add at least *five* examples of insults that will make your
    character sad. Again, these are the examples that your ML model will use to learn
    what an insult looks like, so try to come up with several variations.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重复这个步骤，至少添加*五个*让你的角色感到难过的侮辱性示例。同样，这些是你的机器学习模型用来学习侮辱是什么样子的示例，因此尽量想出几个不同的变体。
- en: '![f07013](Images/f07013.png)'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f07013](Images/f07013.png)'
- en: '[Figure 7-13:](#figureanchor7-13) Training examples for recognizing insults
    *   Click **Back to project** in the top-left corner of the screen.*   Click **Learn
    & Test**.*   Click **Train new machine learning model**, as shown in [Figure 7-14](#figure7-14).![f07014](Images/f07014.png)'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-13:](#figureanchor7-13) 识别侮辱的训练示例 *   点击屏幕左上角的**返回项目**。*   点击**学习与测试**。*   点击**训练新机器学习模型**，如[图
    7-14](#figure7-14)所示。![f07014](Images/f07014.png)'
- en: '[Figure 7-14:](#figureanchor7-14) Training a new ML model'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-14:](#figureanchor7-14) 训练一个新的机器学习模型'
- en: The computer will use the examples you’ve just created to learn how to recognize
    compliments and insults.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 计算机将使用你刚刚创建的示例来学习如何识别称赞和侮辱。
- en: To do so, it will look for patterns in the examples you’ve written. It will
    learn from both the words you chose and the way you phrased the sentences. Then,
    it will use these patterns to recognize the meaning of messages we’ll send to
    it in the next steps.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为此，它将查找你写的示例中的模式。它将从你选择的词汇和你组织句子的方式中学习。然后，它会使用这些模式来识别我们将在下一步发送给它的消息的含义。
- en: Training the model might take a minute, but you’ll notice that it’s much quicker
    than the image classifiers that you have been training in the previous chapters.
    Learning to recognize patterns in text is much easier for computers than learning
    to recognize patterns in images.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 训练模型可能需要一分钟，但你会发现它比你在前几章中训练的图像分类器要快得多。计算机学习文本中的模式比学习图像中的模式要容易得多。
- en: Test your ML model by typing a compliment or insult into the **Test** box, as
    shown in [Figure 7-15](#figure7-15).
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在**测试**框中输入称赞或侮辱来测试你的机器学习模型，如[图 7-15](#figure7-15)所示。
- en: It’s important that you test it with examples you have not included in the training
    buckets. You’re testing how well the computer can recognize new examples that
    it’s never seen before, not how well it remembers the examples you’ve already
    given it.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要的是，你要用那些没有包含在训练桶中的示例来测试它。你在测试计算机如何识别它从未见过的新示例，而不是测试它如何记住你已经给它的示例。
- en: If your model gets things wrong, go back to the Train phase and add more examples.
    Then, come back to the Learn & Test phase and train a new ML model.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你的模型出现错误，返回训练阶段并添加更多示例。然后，返回学习与测试阶段，训练一个新的机器学习模型。
- en: Keep going until you’re happy with how the computer performs. In the next chapter,
    you’ll learn better ways to test ML models, but for now, simply trying out the
    model a few times is a good start.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 继续进行，直到你对计算机的表现满意。在下一章，你将学习更好的机器学习模型测试方法，但现在，简单地尝试几次模型就是一个很好的开始。
- en: '![f07015](Images/f07015.png)'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f07015](Images/f07015.png)'
- en: '[Figure 7-15:](#figureanchor7-15) Testing is an important part of ML.**'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-15:](#figureanchor7-15) 测试是机器学习的重要部分。**'
- en: '**### Code Your Game with ML'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**### 用机器学习编写你的游戏'
- en: Now that you have an ML model that can recognize compliments and insults, you’ll
    modify your earlier project to use your ML model instead of the rules you used
    before.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了一个能够识别称赞和侮辱的机器学习模型，你将修改之前的项目，使用你的机器学习模型，而不是之前使用的规则。
- en: Click **Back to project** in the top-left corner of the screen.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕左上角的**返回项目**。
- en: Click **Make**, as shown in [Figure 7-16](#figure7-16).![f07016](Images/f07016.png)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**制作**，如[图 7-16](#figure7-16)所示。![f07016](Images/f07016.png)
- en: '[Figure 7-16:](#figureanchor7-16) Once you’re happy with your ML model, it’s
    time to make something with it!'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-16:](#figureanchor7-16) 一旦你对你的机器学习模型满意，就该用它制作一些东西了！'
- en: Click **Scratch 3**, and then click **Open in Scratch 3** to open a new window
    with Scratch.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Scratch 3**，然后点击**在 Scratch 3 中打开**，以在新窗口中打开 Scratch。
- en: You should see new blocks representing your ML model in the Toolbox, as shown
    in [Figure 7-17](#figure7-17).
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该会在工具箱中看到代表你机器学习模型的新积木，如[图 7-17](#figure7-17)所示。
- en: '![f07017](Images/f07017.png)'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f07017](Images/f07017.png)'
- en: '[Figure 7-17:](#figureanchor7-17) Scratch will open with a new set of blocks
    for your project.'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-17:](#figureanchor7-17) Scratch 会打开一个包含新积木集的项目。'
- en: Open your saved project by clicking **File**▶**Load from your computer**, as
    shown in [Figure 7-18](#figure7-18).![f07018](Images/f07018.png)
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**文件**▶**从电脑加载**来打开你保存的项目，如[图 7-18](#figure7-18)所示。![f07018](Images/f07018.png)
- en: '[Figure 7-18:](#figureanchor7-18) Open the rules-based project you worked on
    earlier.'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-18:](#figureanchor7-18) 打开你之前创建的基于规则的项目。'
- en: If you created the rules-based script earlier, update it to match [Figure 7-19](#figure7-19).
    If you skipped the rules-based approach to the project, create the whole script
    shown in [Figure 7-19](#figure7-19).![f07019](Images/f07019.png)
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你之前创建了基于规则的脚本，请更新它以匹配[图 7-19](#figure7-19)。如果你跳过了基于规则的项目方法，请创建[图 7-19](#figure7-19)中显示的整个脚本。![f07019](Images/f07019.png)
- en: '[Figure 7-19:](#figureanchor7-19) Coding the project using ML'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[图 7-19:](#figureanchor7-19) 使用机器学习编码的项目'
- en: In this script, your character will ask you to say something to it. The script
    uses your ML model to recognize whether the message you type is a compliment or
    an insult. It will display one of the costumes you’ve drawn based on what it’s
    recognized, making it look like your character is reacting to whether you’re complimenting
    or insulting it!
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个脚本中，你的角色会要求你对它说些什么。这个脚本使用你的机器学习模型来识别你输入的消息是赞美还是侮辱。它会根据识别的结果展示你绘制的其中一套服装，让它看起来像是你的角色在对你是赞美还是侮辱做出反应！
- en: If you coded this project earlier without ML, compare this script with the previous
    one. Can you see how ML makes it easier to create a project that can react to
    a wider variety of possible messages?
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你之前没有使用机器学习编写这个项目，比较一下这个脚本和之前的版本。你能看到机器学习如何让创建一个能够对更多种类的消息做出反应的项目变得更加容易吗？
- en: Test Your Game
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试你的游戏
- en: It’s time to test your project. Click the Green Flag and try typing a few messages.
    Even if you type something you didn’t use for training, hopefully the character
    will correctly react to your message. If it doesn’t, you can always go back to
    the Train phase to add more examples and then train a new ML model.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候测试你的项目了。点击绿色旗帜，尝试输入一些信息。即使你输入了训练中没有使用的内容，希望角色也能正确反应你的消息。如果没有，你总是可以回到训练阶段，添加更多示例，然后重新训练一个新的机器学习模型。
- en: You’ve successfully created a character that has learned to recognize and react
    to compliments and insults you give it!
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经成功创建了一个能够识别并对你给予的赞美或侮辱做出反应的角色！
- en: Review and Improve Your Project
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审查并改进你的项目
- en: Let’s look at a few ways you could improve this project.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看你可以改进这个项目的几种方法。
- en: Using Speech Input Instead of Typing
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用语音输入代替打字
- en: What about changing your project so that you can say your compliments and insults
    aloud instead of typing them?
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，怎样改进你的项目，使你可以通过说出赞美和侮辱而不是输入文字呢？
- en: You’ll need a microphone on your computer to be able to use speech input, and
    you’ll need to add the Speech to Text extension from the Scratch Extensions Library.
    To access the Extensions Library, click the Add Extension icon (it looks like
    two blocks with a plus sign, +) at the bottom of the Toolbox. This library contains
    additional blocks you can use in your projects.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要在计算机上连接麦克风才能使用语音输入，并且你需要从 Scratch 扩展库中添加语音转文本扩展。要访问扩展库，请点击工具箱底部的“添加扩展”图标（看起来像两个带加号的模块，+）。这个库包含了你可以在项目中使用的额外模块。
- en: Find and click the **Speech to Text** extension to add those blocks to your
    Toolbox, and then update your script to look like [Figure 7-20](#figure7-20).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 找到并点击**语音转文本**扩展，将这些模块添加到你的工具箱中，然后更新你的脚本，使其像[图 7-20](#figure7-20)所示。
- en: '![f07020](Images/f07020.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![f07020](Images/f07020.png)'
- en: '[Figure 7-20:](#figureanchor7-20) The Make me happy project using speech recognition'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 7-20:](#figureanchor7-20) 使用语音识别的“让我开心”项目'
- en: '*Speech recognition* *is another application of ML. For this improvement, you
    aren’t training the speech ML model yourself, you’re using a model that someone
    else has trained for you. But the basic principle behind how the speech blocks
    were created is similar to how you created the typed examples of compliments and
    insults.*'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '*语音识别* *是机器学习的另一个应用。在这个改进中，你不是自己训练语音机器学习模型，而是使用别人为你训练好的模型。但是语音模块创建的基本原理与创建打字版的赞美和侮辱示例类似。*'
- en: '*What else could you do to improve your project?'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*你还可以做些什么来改进你的项目？*'
- en: Recognizing Speech That Isn’t a Compliment or Insult
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 识别不是赞美或侮辱的语音
- en: Type `What is the time?` to your character. It might think that this question
    is a compliment and look happy. Or it might identify it as an insult and look
    sad.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 对你的角色说`What is the time?`。它可能认为这个问题是赞美并表现得很高兴，或者它可能把这个问题识别为侮辱并表现得很难过。
- en: Neither of those reactions is really the right thing to do. You could update
    your code so that it doesn’t react at all when it gets messages that aren’t a
    compliment or an insult.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种反应都不是正确的做法。你可以更新代码，使它在收到既不是赞美也不是侮辱的消息时完全不做反应。
- en: When you tested your ML model in the Learn & Test phase, you may have noticed
    the confidence score showing how confident the computer is that it has recognized
    the message.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在“学习与测试”阶段测试ML模型时，你可能注意到置信度分数显示了计算机对识别消息的信心有多大。
- en: Try typing `What is the time?` again now, as shown in [Figure 7-21](#figure7-21).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在再次输入`What is the time?`，如[图 7-21](#figure7-21)所示。
- en: '![f07021](Images/f07021.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![f07021](Images/f07021.png)'
- en: '[Figure 7-21:](#figureanchor7-21) Testing the confidence in classifying “What
    is the time?”'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 7-21:](#figureanchor7-21) 测试“What is the time?”分类的置信度'
- en: You should see that this message gets a very low confidence score. This is the
    ML model’s way of telling you that it didn’t recognize the text. It’s saying that
    in all of the training examples you’ve given it, it hasn’t seen anything like
    that before, so it wasn’t able to recognize whether the message was a compliment
    or insult.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到这个消息的置信度分数非常低。这是ML模型告诉你它没有识别出该文本的方式。它在说，在你给它的所有训练样本中，它没有见过类似的内容，因此无法识别该消息是赞美还是侮辱。
- en: My ML model had a confidence score of 0 in its classifying of “What is the time?”
    Your ML model might have scored a bit higher, depending on how you trained it.
    For example, if you included a lot of questions like “What is wrong with you?”
    in your insults bucket, your ML model might have 10 percent confidence that “What
    is the time?” is an insult, just because it is a question. That would still be
    useful information, as it’s telling you that there’s a 90 percent chance that
    the message isn’t an insult. It’s saying that the message had some similarities
    to patterns that it recognizes from the insults it learned from, but that it isn’t
    able to *confidently* identify the message as an insult.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我的ML模型在对“What is the time?”的分类中给出的置信度分数为0。你的ML模型可能得分稍高，具体取决于你如何训练它。例如，如果你在侮辱类别中包括了很多像“你怎么了？”这样的句子，那么你的ML模型可能会对“What
    is the time?”有10%的置信度认为它是侮辱，单单因为它是一个问题。这仍然是有用的信息，因为它告诉你有90%的可能性这个消息不是侮辱。它在说，这个消息在某些方面与它从侮辱中学到的模式相似，但它不能*自信*地确定这个消息是侮辱。
- en: Experiment with different test sentences that aren’t compliments or insults
    to see what sort of confidence scores you get. Compare these with the confidence
    scores you get when you test your ML model on messages that really are compliments
    and insults.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试不同的测试句子，这些句子既不是赞美也不是侮辱，看看你能得到什么样的置信度分数。将这些与测试ML模型时得到的关于真实赞美和侮辱的置信度分数进行比较。
- en: What sort of confidence score does your ML model give when it correctly recognizes
    an actual compliment or insult?
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的ML模型正确识别出一个真实的赞美或侮辱时，它给出的置信度分数是多少？
- en: You can use the confidence score in your Scratch project, as shown in [Figure
    7-22](#figure7-22).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在你的Scratch项目中使用置信度分数，如[图 7-22](#figure7-22)所示。
- en: '![f07022](Images/f07022.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![f07022](Images/f07022.png)'
- en: '[Figure 7-22:](#figureanchor7-22) Using confidence scores in your code'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 7-22:](#figureanchor7-22) 在代码中使用置信度分数'
- en: This script will make the character react only if the ML model is at least 70
    percent confident that it has recognized the message you give it. Otherwise, the
    script will ignore the message.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本只有在ML模型至少有70%的置信度确认它识别了你给出的消息时才会让角色做出反应。否则，脚本会忽略该消息。
- en: You’ll need to change the `70` to a percentage that works for your ML model,
    based on your own testing.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要将`70`更改为适合你ML模型的百分比，具体取决于你自己的测试。
- en: Is there anything else you could do to improve your project?
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他什么方法可以改进你的项目吗？
- en: Learning from Mistakes
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从错误中学习
- en: When someone is using an ML system, they’ll often know if the computer has made
    a mistake. One way to improve your ML project is to let it learn from those mistakes.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 当有人使用ML系统时，他们通常会知道计算机是否犯了错误。改进ML项目的一种方式是让它从这些错误中学习。
- en: Give the user a way to tell the project if the ML model makes a mistake. It
    could be a button to click, or a text box where they type “yes” or “no” in response
    to being asked, “Did I get that right?”
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 给用户一个方式来告诉项目ML模型是否犯了错误。可以是一个按钮，或者是一个文本框，用户在其中输入“yes”或“no”，以回答“我做对了吗？”这个问题。
- en: The script shown in [Figure 7-23](#figure7-23) will ask if the ML model is correct.
    If you type “no,” the text the computer didn’t recognize correctly will be added
    to the training examples. After every five new training examples, a new ML model
    is trained.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 7-23](#figure7-23) 中显示的脚本将询问机器学习（ML）模型是否正确。如果你输入“no”，计算机未正确识别的文本将被添加到训练示例中。每新增五个训练示例，就会训练一个新的
    ML 模型。'
- en: '![f07023](Images/f07023.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![f07023](Images/f07023.png)'
- en: '[Figure 7-23:](#figureanchor7-23) An example of learning from mistakes'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 7-23：](#figureanchor7-23) 从错误中学习的一个示例'
- en: Training your model to learn from mistakes will make it smarter the longer you
    use it. Think of how you’d like to tell your character when it has misunderstood
    you, and use a script like this so it can learn from your feedback.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 训练你的模型从错误中学习，随着使用时间的推移，它会变得更加智能。想想当你的角色误解了你时，你希望如何告诉它，并使用类似这样的脚本，这样它就可以从你的反馈中学习。
- en: What You Learned
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你学到了什么
- en: In this chapter, you learned about *sentiment analysis*, the use of ML to recognize
    the tone and emotion in text. You learned how businesses and organizations use
    sentiment analysis to get valuable insight and feedback from customers on the
    internet, prioritize customer service responses, and measure employee satisfaction.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了*情感分析*，即使用机器学习识别文本中的语气和情感。你了解到企业和组织如何使用情感分析从互联网上获取客户的宝贵反馈和见解，优先处理客户服务响应，并衡量员工满意度。
- en: You discovered that ML is a much better approach to building AI systems for
    complex projects than a simple rules-based method. You also learned how confidence
    scores can tell you how sure an ML model is of the predictions it’s making, and
    saw how you could improve your ML models by helping them learn from their mistakes.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 你发现，与简单的基于规则的方法相比，机器学习在为复杂项目构建 AI 系统时是一个更好的选择。你还学习了如何通过置信度得分来判断机器学习模型对其预测的确定性，并看到了如何通过帮助模型从错误中学习来改善它们。
- en: In the next chapter, you’ll use an approach similar to sentiment analysis to
    train a model to recognize different styles of writing.****
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将使用类似于情感分析的方法来训练一个模型，识别不同的写作风格。****
