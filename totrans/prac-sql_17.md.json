["```\n1 CREATE OR REPLACE VIEW nevada_counties_pop_2019 AS\n  2 SELECT county_name,\n state_fips,\n           county_fips,\n           pop_est_2019\n    FROM us_counties_pop_est_2019\n    WHERE state_name = 'Nevada';\n```", "```\nSELECT *\nFROM nevada_counties_pop_2019\nORDER BY county_fips\nLIMIT 5;\n```", "```\n geo_name     | state_fips | county_fips | pop_2010\n------------------+------------+-------------+----------\n Churchill County | 32         | 001         |   24909\n Clark County     | 32         | 003         | 2266715\n Douglas County   | 32         | 005         |   48905\n Elko County      | 32         | 007         |   52778\n Esmeralda County | 32         | 009         |     873\n```", "```\n1 CREATE OR REPLACE VIEW county_pop_change_2019_2010 AS\n  2 SELECT c2019.county_name,\n           c2019.state_name,\n           c2019.state_fips,\n           c2019.county_fips,\n           c2019.pop_est_2019 AS pop_2019,\n           c2010.estimates_base_2010 AS pop_2010,\n         3 round( (c2019.pop_est_2019::numeric - c2010.estimates_base_2010)\n               / c2010.estimates_base_2010 * 100, 1 ) AS pct_change_2019_2010\n  4 FROM us_counties_pop_est_2019 AS c2019\n        JOIN us_counties_pop_est_2010 AS c2010\n    ON c2019.state_fips = c2010.state_fips\n       AND c2019.county_fips = c2010.county_fips;\n```", "```\nSELECT county_name,\n       state_name,\n       pop_2019,\n     1 pct_change_2019_2010\nFROM county_pop_change_2019_2010\n2 WHERE state_name = 'Nevada'\nORDER BY county_fips\nLIMIT 5;\n```", "```\n county_name     state_name  pop_2019  pct_change_2019_2010\n----------------  ----------  --------  --------------------\nChurchill County  Nevada         24909                   0.1\nClark County      Nevada       2266715                  16.2\nDouglas County    Nevada         48905                   4.1\nElko County       Nevada         52778                   7.8\nEsmeralda County  Nevada           873                  11.4\n```", "```\n1 DROP VIEW nevada_counties_pop_2019;\n\n2 CREATE MATERIALIZED VIEW nevada_counties_pop_2019 AS\n    SELECT county_name,\n state_fips,\n           county_fips,\n           pop_est_2019\n    FROM us_counties_pop_est_2019\n    WHERE state_name = 'Nevada';\n```", "```\nREFRESH MATERIALIZED VIEW nevada_counties_pop_2019;\n```", "```\nemp_id first_name last_name  salary   dept_id\n------ ---------- --------- --------- -------\n     1 Julia      Reyes     115300.00       1\n     2 Janet      King       98000.00       1\n     3 Arthur     Pappas     72700.00       2\n     4 Michael    Taylor     89500.00       2\n```", "```\nCREATE OR REPLACE VIEW employees_tax_dept WITH (security_barrier)1 AS\n     SELECT emp_id,\n            first_name,\n            last_name,\n            dept_id\n     FROM employees\n   2 WHERE dept_id = 1\n   3 WITH LOCAL CHECK OPTION;\n```", "```\nemp_id first_name last_name dept_id\n------ ---------- --------- -------\n     1 Julia      Reyes           1\n     2 Janet      King            1\n```", "```\n1 INSERT INTO employees_tax_dept (emp_id, first_name, last_name, dept_id)\nVALUES (5, 'Suzanne', 'Legere', 1);\n\n2 INSERT INTO employees_tax_dept (emp_id, first_name, last_name, dept_id)\nVALUES (6, 'Jamil', 'White', 2);\n\n3 SELECT * FROM employees_tax_dept ORDER BY emp_id;\n\n4 SELECT * FROM employees ORDER BY emp_id;\n```", "```\nemp_id first_name last_name dept_id\n------ ---------- --------- -------\n     1 Julia      Reyes           1\n     2 Janet      King            1\n     5 Suzanne    Legere          1\n```", "```\nemp_id first_name last_name  salary   dept_id\n------ ---------- --------- --------- -------\n     1 Julia      Reyes     115300.00       1\n     2 Janet      King       98000.00       1\n     3 Arthur     Pappas     72700.00       2\n     4 Michael    Taylor     89500.00       2\n     5 Suzanne    Legere                    1\n```", "```\nUPDATE employees_tax_dept\nSET last_name = 'Le Gere'\nWHERE emp_id = 5;\n\nSELECT * FROM employees_tax_dept ORDER BY emp_id;\n```", "```\nemp_id first_name last_name dept_id\n------ ---------- --------- -------\n     1 Julia      Reyes           1\n     2 Janet      King            1\n     5 Suzanne    Le Gere         1\n```", "```\nDELETE FROM employees_tax_dept\nWHERE emp_id = 5;\n```", "```\npercent change = (New Number â€“ Old Number) / Old Number\n```", "```\n1 CREATE OR REPLACE FUNCTION\n2 percent_change(new_value numeric,\n               old_value numeric,\n               decimal_places integer 3DEFAULT 1)\n4 RETURNS numeric AS\n5 'SELECT round(\n       ((new_value - old_value) / old_value) * 100, decimal_places\n);'\n6 LANGUAGE SQL\n7 IMMUTABLE\n8 RETURNS NULL ON NULL INPUT;\n```", "```\nSELECT percent_change(110, 108, 2);\n```", "```\n percent_change\n----------------\n           1.85\n```", "```\nSELECT c2019.county_name,\n       c2019.state_name,\n       c2019.pop_est_2019 AS pop_2019,\n 1 percent_change(c2019.pop_est_2019,\n                      c2010.estimates_base_2010) AS pct_chg_func,\n     2 round( (c2019.pop_est_2019::numeric - c2010.estimates_base_2010)\n           / c2010.estimates_base_2010 * 100, 1 ) AS pct_change_formula\nFROM us_counties_pop_est_2019 AS c2019\n    JOIN us_counties_pop_est_2010 AS c2010\nON c2019.state_fips = c2010.state_fips\n   AND c2019.county_fips = c2010.county_fips\nORDER BY pct_chg_func DESC\nLIMIT 5;\n```", "```\n county_name    state_name  pop_2019 pct_chg_func pct_chg_formula\n--------------- ------------ -------- ------------ ---------------\nMcKenzie County North Dakota    15024        136.3           136.3\nLoving County   Texas             169        106.1           106.1\nWilliams County North Dakota    37589         67.8            67.8\nHays County     Texas          230191         46.5            46.5\nWasatch County  Utah            34091         44.9            44.9\n```", "```\nALTER TABLE teachers ADD COLUMN personal_days integer;\n\nSELECT first_name,\n       last_name,\n       hire_date,\n       personal_days\nFROM teachers;\n```", "```\nfirst_name last_name hire_date  personal_days\n---------- --------- ---------- -------------\nJanet      Smith     2011-10-30\nLee        Reynolds  1993-05-22\nSamuel     Cole      2005-08-01\nSamantha   Bush      2011-10-30\nBetty      Diaz      2005-08-30\nKathleen   Roush     2010-10-22\n```", "```\nCREATE OR REPLACE PROCEDURE update_personal_days()\nAS 1$$\n2 BEGIN\n    UPDATE teachers\n    SET personal_days =\n      3 CASE WHEN (now() - hire_date) >= '10 years'::interval\n                  AND (now() - hire_date) < '15 years'::interval THEN 4\n             WHEN (now() - hire_date) >= '15 years'::interval\n                  AND (now() - hire_date) < '20 years'::interval THEN 5\n             WHEN (now() - hire_date) >= '20 years'::interval\n                  AND (now() - hire_date) < '25 years'::interval THEN 6\n             WHEN (now() - hire_date) >= '25 years'::interval THEN 7\n             ELSE 3\n        END;\n  4 RAISE NOTICE 'personal_days updated!';\nEND;\n5 $$\n6 LANGUAGE plpgsql;\n```", "```\nCALL update_personal_days();\n```", "```\nfirst_name last_name hire_date  personal_days\n---------- --------- ---------- -------------\nJanet      Smith     2011-10-30             3\nLee        Reynolds  1993-05-22             7\nSamuel     Cole      2005-08-01             5\nSamantha   Bush      2011-10-30             3\nBetty      Diaz      2005-08-30             5\nKathleen   Roush     2010-10-22             4\n```", "```\nCREATE EXTENSION plpython3u;\n```", "```\nCREATE OR REPLACE FUNCTION trim_county(input_string text)\n1 RETURNS text AS $$\n    import re2\n  3 cleaned = re.sub(r' County', '', input_string)\n    return cleaned\n$$\n4 LANGUAGE plpython3u;\n```", "```\nSELECT county_name,\n       trim_county(county_name)\nFROM us_counties_pop_est_2019\nORDER BY state_fips, county_fips\nLIMIT 5;\n```", "```\n county_name     trim_county\n----------------  -------------\n Autauga County   Autauga\n Baldwin County   Baldwin\n Barbour County   Barbour\n Bibb County      Bibb\n Blount County    Blount\n```", "```\n1 CREATE TABLE grades (\n    student_id bigint,\n    course_id bigint,\n    course text NOT NULL,\n    grade text NOT NULL,\nPRIMARY KEY (student_id, course_id)\n);\n\n2 INSERT INTO grades\nVALUES\n    (1, 1, 'Biology 2', 'F'),\n    (1, 2, 'English 11B', 'D'),\n    (1, 3, 'World History 11B', 'C'),\n    (1, 4, 'Trig 2', 'B');\n\n3 CREATE TABLE grades_history (\n    student_id bigint NOT NULL,\n    course_id bigint NOT NULL,\n    change_time timestamp with time zone NOT NULL,\n    course text NOT NULL,\n    old_grade text NOT NULL,\n    new_grade text NOT NULL,\nPRIMARY KEY (student_id, course_id, change_time)\n);\n```", "```\nCREATE OR REPLACE FUNCTION record_if_grade_changed()\n  1 RETURNS trigger AS\n$$\nBEGIN\n  2 IF NEW.grade <> OLD.grade THEN\n    INSERT INTO grades_history (\n        student_id,\n        course_id,\n        change_time,\n        course,\n        old_grade,\n        new_grade)\n    VALUES\n        (OLD.student_id,\n         OLD.course_id,\n         now(),\n         OLD.course,\n       3 OLD.grade,\n       4 NEW.grade);\n    END IF;\n  5 RETURN NULL;\nEND;\n$$ LANGUAGE plpgsql;\n```", "```\n1 CREATE TRIGGER grades_update\n2 AFTER UPDATE\n  ON grades\n3 FOR EACH ROW\n4 EXECUTE PROCEDURE record_if_grade_changed();\n```", "```\nstudent_id course_id      course       grade\n---------- --------- ----------------- -----\n         1         1 Biology 2         F\n         1         2 English 11B       D\n         1         3 World History 11B C\n         1         4 Trig 2            B\n```", "```\nUPDATE grades\nSET grade = 'C'\nWHERE student_id = 1 AND course_id = 1;\n```", "```\nSELECT student_id,\n       change_time,\n       course,\n       old_grade,\n       new_grade\nFROM grades_history;\n```", "```\nstudent_id          change_time           course      old_grade new_grade\n---------- ----------------------------- ---------    --------- ---------\n         1 2023-09-01 15:50:43.291164-04 Biology 2    F         C\n```", "```\nCREATE TABLE temperature_test (\n    station_name text,\n    observation_date date,\n    max_temp integer,\n    min_temp integer,\n    max_temp_group text,\nPRIMARY KEY (station_name, observation_date)\n);\n```", "```\nCREATE OR REPLACE FUNCTION classify_max_temp()\n    RETURNS trigger AS\n$$\nBEGIN\n  1 CASE\n       WHEN NEW.max_temp >= 90 THEN\n           NEW.max_temp_group := 'Hot';\n       WHEN NEW.max_temp >= 70 AND NEW.max_temp < 90 THEN\n           NEW.max_temp_group := 'Warm';\n       WHEN NEW.max_temp >= 50 AND NEW.max_temp < 70 THEN\n           NEW.max_temp_group := 'Pleasant';\n       WHEN NEW.max_temp >= 33 AND NEW.max_temp < 50 THEN\n           NEW.max_temp_group := 'Cold';\n       WHEN NEW.max_temp >= 20 AND NEW.max_temp < 33 THEN\n           NEW.max_temp_group := 'Frigid';\n       WHEN NEW.max_temp < 20 THEN\n           NEW.max_temp_group := 'Inhumane';\n       ELSE NEW.max_temp_group := 'No reading';\n    END CASE;\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n```", "```\nCREATE TRIGGER temperature_insert\n  1 BEFORE INSERT\n    ON temperature_test\n  2 FOR EACH ROW\n  3 EXECUTE PROCEDURE classify_max_temp();\n```", "```\nINSERT INTO temperature_test\nVALUES\n    ('North Station', '1/19/2023', 10, -3),\n    ('North Station', '3/20/2023', 28, 19),\n    ('North Station', '5/2/2023', 65, 42),\n    ('North Station', '8/9/2023', 93, 74),\n    ('North Station', '12/14/2023', NULL, NULL);\n\nSELECT * FROM temperature_test ORDER BY observation_date;\n```", "```\nstation_name  observation_date max_temp min_temp max_temp_group\n------------- ---------------- -------- -------- --------------\nNorth Station 2023-01-19             10       -3 Inhumane\nNorth Station 2023-03-20             28       19 Frigid\nNorth Station 2023-05-02             65       42 Pleasant\nNorth Station 2023-08-09             93       74 Hot\nNorth Station 2023-12-14                         No reading\n```"]