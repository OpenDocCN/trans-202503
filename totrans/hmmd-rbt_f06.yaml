- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The idea of building robots can seem daunting, but you don’t need to be an engineer,
    scientist, or wizard to get started. You need only some basic know-how and an
    open mind. Throughout this book, I’ll provide the knowledge you need to begin
    building robots. In exchange, I’m counting on you to be creative, inquisitive,
    and determined.
  prefs: []
  type: TYPE_NORMAL
- en: Robots come in many different types. Some robots, called *humanoids*, are smart
    and humanlike. These are the kinds you typically see in movies and are probably
    most familiar with. Other robots are more abstract and sculptural. *BEAM robots*,
    for example, are small sculptural robots built on the principle of Biology, Electronics,
    Aesthetics, and Mechanisms. These robots perform simple actions using basic recycled
    electronic components. Between those two extremes is an entire universe of different
    types of robots—too many to name here.
  prefs: []
  type: TYPE_NORMAL
- en: The robots you’ll be making in this book are closer in spirit to BEAM robots.
    In fact, I like to call them “bots” because, like the word *bot*, these robots
    themselves are a bit abbreviated, so you can think of the bots described here
    as bare-bones starting points for future robotic exploration.
  prefs: []
  type: TYPE_NORMAL
- en: 'All of the bots in this book adhere to the same basic set of rules:'
  prefs: []
  type: TYPE_NORMAL
- en: They are quick and easy to build with readily available materials.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They are easy to understand and don’t require a microcontroller or computer
    programming.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They are mobile and autonomous (that is, self-driving).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They are expandable, allowing you to incorporate more complex electronic controls
    later.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Are Bots Alive?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: No, but they pretend to be. Hold on to your hats as I delve into some theory.
  prefs: []
  type: TYPE_NORMAL
- en: 'Think about this: fallen leaves blowing in the wind are almost perfectly random,
    and pistons moving in an engine are almost perfectly mechanical. An object begins
    taking on living attributes when it has *predictable unpredictability*—that is,
    not totally random and not totally mechanized. To understand how this works, let’s
    take a detour into the world of video games.'
  prefs: []
  type: TYPE_NORMAL
- en: A gaming concept called a *core mechanic* is a behavior that a player performs
    over and over again during gameplay. An example of this is continuously pressing
    the “fire” button on a controller. Another is making a character jump from platform
    to platform repeatedly.
  prefs: []
  type: TYPE_NORMAL
- en: With each bot you’ll build, the core mechanic is the essence of its main behavior.
    It could be driving forward or backward, spinning in circles, rolling, or jumping.
    Each bot will have one predictable behavior that seems to come before all the
    others.
  prefs: []
  type: TYPE_NORMAL
- en: Yet, as I’ve mentioned, predictability alone does not make an object seem alive.
    Something that simply spins in circles isn’t very lifelike. What gives bots the
    illusion of being alive? Unpredictable behavior. A bot’s personality comes from
    occasional deviations from its core mechanic. For instance, if a bot drives in
    circles, it’s easy to think of it as a machine, but if that same bot tips over
    and then rights itself, you find yourself thinking it’s clumsy. In this way, it
    transforms from being a machine that performs a repetitive task to one that has
    personality.
  prefs: []
  type: TYPE_NORMAL
- en: Some thought experiments may help you understand this concept. What would make
    a flock of birds seem robotic? What would it take to make an elevator seem like
    a living organism?
  prefs: []
  type: TYPE_NORMAL
- en: How Should Bots Behave?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If the goal is to make a robot seem alive, what creature should it behave like?
    Some people like to make bots that act like humans or other living beings. This
    is a mistake. Bots should be allowed to be themselves and behave however they
    want. If a bot spins in place three times and then jumps forward, it should be
    allowed to move like that even though it’s not a natural movement for an animal.
    In other words, bots should imitate the *idea* of living things. They don’t have
    to be a substitute for any existing lifeform.
  prefs: []
  type: TYPE_NORMAL
- en: Put another way, a bot should not act like a zebra any more than a zebra should
    act like a bot. The bot should behave like it’s alive without mirroring any particular
    lifeform. A bot can be inspired or informed by living creatures, but it should
    not seek to replicate any directly. Why try to repeat something that already does
    what it does? It’s a disservice to the robot race to force bots to try to repeat
    “actual” living behaviors. Bots should develop their own. After all, what makes
    bots interesting is their ability to develop behaviors that organic creatures
    do not and often cannot.
  prefs: []
  type: TYPE_NORMAL
- en: In Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A successful bot is a mechanical device that is quickly and easily built and
    understood. It’s mobile and autonomous, and it has potential for evolution. It
    has predictable behavior that occasionally changes unpredictably, and it should
    be allowed to be itself (and not a zebra).
  prefs: []
  type: TYPE_NORMAL
- en: Obviously, this definition alone doesn’t actually teach you how to build a bot.
    Fret not; you’re getting there. But first, let’s review all the tools and techniques
    you’ll need to get started.
  prefs: []
  type: TYPE_NORMAL
