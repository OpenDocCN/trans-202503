- en: '18'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A VERY SHORT PRIMER ON RELATIVITY
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/common.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Albert Einstein was fascinated with the electromagnetic theory that we’ll discuss
    in [Part III](part03.xhtml) of this book. An effort to understand it led him to
    new ideas about space and time, collectively called *special relativity*, which
    he published in 1905, and which modified the ideas of Newtonian mechanics that
    had been in place for more than 200 years.
  prefs: []
  type: TYPE_NORMAL
- en: Special relativity departs from Newtonian physics in several ways, the most
    significant conceptual departure being the non-universality of time—that is, the
    idea that clocks in different patterns of motion evolve at different rates. The
    subject of special relativity deserves an entire course for one to develop insight
    and intuition into relativistic kinematics and dynamics, but here we’ll only scratch
    the surface.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we’ll go beyond Newtonian mechanics to show how the theory
    of special relativity makes different predictions for the motion of a particle,
    especially when the particle is moving very fast. The framework of [Figure 16-2](ch16.xhtml#ch16fig2),
    in which we transform from forces to a differential equation to a state-update
    function and finally to a list of states, still works well. It’s just that Newton’s
    second law needs to be replaced with a relativistic law of motion to compute special
    relativity’s prediction for the motion of a particle experiencing forces. The
    relativistic law will transform the forces into a differential equation different
    from the one that Newton’s second law produces. The remaining steps of solving
    the differential equation are the same in relativity as they are in Newtonian
    mechanics. At the end of the chapter, we’ll show some examples where Newtonian
    mechanics and relativity make different predictions. Let’s begin by getting specific
    about how special relativity departs from Newtonian mechanics.
  prefs: []
  type: TYPE_NORMAL
- en: A Little Theory
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In special relativity, the net force acting on a particle is still the vector
    sum of all of the forces acting on the particle.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/e0330-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: There are no new forces in relativity. The theory of special relativity claims
    that net force is close to, but not quite equal to, mass times acceleration, as
    Newton’s second law says. The difference is more noticeable as objects move faster
    and closer to the speed of light. However, there is a version of Newton’s second
    law that continues to hold in relativity. Net force is still the rate of change
    of momentum with respect to time. Equation 16.1 needs to be replaced by
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/e0330-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: where **p**(*t*) is the momentum of the object under consideration.
  prefs: []
  type: TYPE_NORMAL
- en: The relationship between velocity and momentum is different in special relativity
    than in Newtonian mechanics. In Newtonian mechanics, the momentum of a particle
    is its mass times its velocity, **p**(*t*) = *m***v**(*t*). In relativistic physics,
    the momentum of a particle is
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/e0330-03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: where *c* = 299,792,458 m/s, the speed of light in vacuum. We can algebraically
    invert this equation to give an expression for velocity in terms of momentum.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/e0330-04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Acceleration is still the rate of change of velocity with respect to time, so
    by taking a time derivative of the previous equation and substituting net force
    for the time derivative of momentum, we arrive at a relativistic expression for
    acceleration in terms of net force.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/e0330-05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 18.1 is the relativistic replacement for Equation 16.5\. You can see
    that if the ratio of particle velocity to light velocity is much smaller than
    1, the right side of this equation reduces to net force divided by mass, and we
    regain the original form of Newton’s second law. This means that for something
    like a baseball traveling through the air, Newton’s second law is basically sound.
    But if it were hit close to the speed of light, we’d need relativity.
  prefs: []
  type: TYPE_NORMAL
- en: If Equation 18.1 seems too complicated and ugly to be correct, you should know
    that special relativity has its own notation that makes equations like Equation
    18.1 appear much nicer. Relativity’s notation uses 4-vectors because spacetime
    has four dimensions. The vectors of Newtonian mechanics we are using in this book
    are called 3-vectors because space has three dimensions. From the perspective
    of relativity, 3-vectors are based on an arbitrary division of space-time into
    a particular three-dimensional space and a particular one-dimensional time. Some
    quantities that we think of as distinct, like momentum and energy, come together
    in relativity to form the 4-vector that Taylor and Wheeler call *momenergy*.^([1](footnote.xhtml#ch18fn1))
    It’s only when we cast the newer ideas of relativity in the older notation of
    Newtonian mechanics that they appear so complicated. Nevertheless, although there
    is a different notation that can be used for special relativity, it gives the
    same results as the notation we use in this book.
  prefs: []
  type: TYPE_NORMAL
- en: A Replacement for Newton’s Second Law
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In [Chapters 16](ch16.xhtml) and [17](ch17.xhtml), we used the function `newtonSecondPS`
    to produce a differential equation that expresses Newton’s second law. The function
    `relativityPS`, which we’ll write next, produces the differential equation that
    special relativistic dynamics prescribes, and therefore it serves as a replacement
    for `newtonSecondPS`. Fortunately, we can use the same data type for particle
    state, namely `ParticleState`, that we have been using throughout the previous
    chapters.
  prefs: []
  type: TYPE_NORMAL
- en: The key difference between `newtonSecondPS` and `relativityPS` is in the expression
    we return for acceleration. We want to use Equation 18.1 instead of net force
    divided by mass. The function `relativityPS` assumes SI units, so velocity is
    expressed in meters per second. Relativity is more elegantly expressed in natural,
    or geometrized, units in which *c* = 1, implying that one second is interchangeable
    with 299,792,458 meters. Exercise 18.2 asks you to write a similar function that
    does not assume SI units.
  prefs: []
  type: TYPE_NORMAL
- en: Here is `relativityPS`, which we include in the `Mechanics3D` module that includes
    all of the code in [Chapters 16](ch16.xhtml), [17](ch17.xhtml), and [18](ch18.xhtml)
    that is not part of a stand-alone program.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The `let` clause introduces local variables for the net force, the speed of
    light, the mass and velocity contained in the state, the velocity `u` expressed
    in units of the speed of light, and the acceleration determined by Equation 18.1\.
    The time derivative of the state is then prepared and returned in the body of
    the `let` construction.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s now look at the first of two examples comparing Newtonian mechanics to
    special relativity theory.
  prefs: []
  type: TYPE_NORMAL
- en: Response to a Constant Force
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s contrast the predictions of special relativity with those of Newtonian
    mechanics. The first situation we’ll explore is the motion of a particle, initially
    at rest, that experiences a constant force for some extended time period.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 18-1](ch18.xhtml#ch18fig1) shows a graph of velocity as a function
    of time for a 1-kg object experiencing a 10-N force. This is close to the gravitational
    force acting on a 1-kg object at the surface of the earth (a 1-*g* acceleration).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/332fig01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 18-1: Comparison of Newtonian and relativistic response to a constant
    force. A mass of 1 kg experiences a constant force of 10 N.*'
  prefs: []
  type: TYPE_NORMAL
- en: For the first few months, there is little difference in velocity between the
    relativistic prediction and that of Newtonian mechanics. However, as the velocity
    gets closer to that of light, we do see a difference, with the relativistic curve
    predicting a velocity asymptotically approaching, but never reaching, that of
    light, while the Newtonian velocity increases linearly and eventually exceeds
    that of light. As there is very strong experimental evidence that objects with
    mass cannot travel faster than light, the Newtonian prediction is clearly incorrect.
  prefs: []
  type: TYPE_NORMAL
- en: '[Listing 18-1](ch18.xhtml#ch18list1) shows the code that produced the graph.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*Listing 18-1: Code to produce the graph “Response to a constant force”*'
  prefs: []
  type: TYPE_NORMAL
- en: Several local variables are defined in the beginning of the code, such as the
    number of seconds in a year, the speed of light in meters per second, a numerical
    method, an initial state, and so on. The first five local variables are used in
    both the Newtonian and relativistic calculations. The lists `newtonStates` and
    `relativityStates` are infinite lists of states for the Newtonian and relativistic
    theories, respectively. In comparing their definitions, we see that they use the
    same numerical method, the same forces (a single 10-N force in the x-direction),
    and the same initial state. The only difference is that we replaced `newtonSecondPS`
    with `relativityPS` as the function that produces the differential equation we’re
    solving.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the lists `newtonTVs` and `relativityTVs` are lists of time-velocity
    pairs suitable for plotting. The definitions of these two lists are almost identical.
    In each case, the code uses a list comprehension along with the `takeWhile` function
    to produce a finite list. The predicate `tle1yr` asks whether the time associated
    with a state is less than or equal to one year. You were asked to write this function
    in Exercise 16.7.
  prefs: []
  type: TYPE_NORMAL
- en: The code places several labels on the graph using the `customLabel` function,
    which I first introduced in [Chapter 11](ch11.xhtml) and repeat here for convenience.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Proton in a Magnetic Field
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As a second example contrasting the predictions of special relativity with those
    of Newtonian mechanics, let’s look at the motion of a charged particle in a magnetic
    field. While our first example of special relativity took place in one spatial
    dimension, this example takes place in two. [Figure 18-2](ch18.xhtml#ch18fig2)
    shows trajectories of a proton in a 1-Tesla magnetic field pointing in the z-direction
    (perpendicular to the plane of the circular trajectories).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/334fig01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 18-2: Proton in a magnetic field*'
  prefs: []
  type: TYPE_NORMAL
- en: The proton has a speed 4/5 that of light. Both the Newtonian theory and the
    relativistic theory predict circular motion, but the radii of the circles are
    different. We see from the graphs that relativity predicts a larger radius compared
    with the Newtonian theory. The relativistic radius turns out to be bigger by a
    factor of ![Image](Images/e0334-01.jpg), a factor that shows up in many places
    in relativity. In this case, the relativistic radius is 5/3 times that of the
    Newtonian radius.
  prefs: []
  type: TYPE_NORMAL
- en: '[Listing 18-2](ch18.xhtml#ch18list2) shows the code that produced the trajectories.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '*Listing 18-2: Code to produce the graph “Proton in a 1-T magnetic field”*'
  prefs: []
  type: TYPE_NORMAL
- en: The first four local variables, which are used in the predictions of both theories,
    define the speed of light, a numerical method, a list of forces, and an initial
    state.
  prefs: []
  type: TYPE_NORMAL
- en: How can we choose an appropriate time step for the numerical method? Guessing
    can work, but a time step that is much too large usually gives unintelligible
    results, and a time step that is much too small may result in very little motion,
    or a calculation that takes a very long time, depending on what you ask of the
    computer. The key is that we want the time step to be small compared with the
    important time scales of the situation. The important time scales of a situation
    can be found from dimensional analysis. Using dimensional analysis, multiplying
    or dividing relevant parameters to produce a quantity with dimensions of time,
    we can find one or more characteristic time scales. The relevant parameters in
    this situation are the proton charge, the proton mass, the 1-T magnetic field,
    and the initial velocity of 4*c*/5.
  prefs: []
  type: TYPE_NORMAL
- en: The only way to form a quantity with dimensions of time from these parameters
    is to divide the proton mass by the product of the proton charge with the magnetic
    field. This combination of parameters produces a time of *m[p]*/(*q[p] B*) = 1.04
    × 10^(–8) s. To make the time step small compared with the relevant time scale
    of the problem, we should divide this time by 100 or 1,000\. Therefore, a time
    step of 10^(–10) s would be a good first guess.
  prefs: []
  type: TYPE_NORMAL
- en: The lists `newtonStates` and `relativityStates` are, as in the constant force
    example from earlier, infinite lists of states for the Newtonian and relativistic
    cases, respectively. The lists `newtonXYs` and `relativityXYs` are lists of (x,
    y) pairs suitable for plotting. Since we end up with circular motion, it’s aesthetically
    pleasing to use the same scale for the x-axis that we use for the y-axis. This
    can be achieved with the `Aspect (Ratio 1)` option in the list of options.
  prefs: []
  type: TYPE_NORMAL
- en: The speeds in the relativistic and Newtonian calculations are the same, but
    since the relativistic circle is bigger, the period of the proton’s motion (the
    time to go around the circle once) is larger in the relativistic theory. However,
    this fact is not apparent in the graph. Because of this, and also to show a technique
    for animating two separate motions, we’ll make an animation for these protons.
  prefs: []
  type: TYPE_NORMAL
- en: Since the motion takes place in two dimensions, we’ll use `gloss` for the animation.
    What we’re animating here is not the interaction between two protons, which would
    be one physical problem consisting of multiple particles, and the kind of thing
    we’ll discuss in the next chapter. Rather, we’re interested in an animation that
    shows the independent motion of the two protons at the same time. Up to now, the
    state space for every animation we have written has been the same as the state
    space for the underlying physical situation. For a single particle in three dimensions,
    that state space is `ParticleState`. Now we want to animate two particles, each
    of which uses the state space `ParticleState`. This means that the state space
    for the animation needs to be `(ParticleState,ParticleState)` so the animation
    can keep track of both particles.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following state-update function for animation combines two state-update
    functions: one for the Newtonian theory and one for the relativistic.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The local variable `stN` represents the incoming (not-yet-updated) state for
    the Newtonian calculation, while `stR` is the analogous state for the relativistic
    calculation.
  prefs: []
  type: TYPE_NORMAL
- en: The initial state for the animation combines the initial states for the two
    situations (Newtonian and relativistic), which are the same.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The display function produces a blue disk for the Newtonian calculation and
    a red disk for the relativistic calculation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[Listing 18-3](ch18.xhtml#ch18list3) shows the main program for the animation.
    This, and all of the other stand-alone programs, are not part of the `Mechanics3D`
    module. It uses a time-scale factor of 10^(–8), an animation rate of 20 frames/second,
    and the three functions we just defined.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '*Listing 18-3: Stand-alone program for 2D animation of proton motion in a magnetic
    field*'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this chapter, we introduced special relativity as a different, more modern
    theory of mechanics, which our methods are capable of treating if we replace Newton’s
    second law with the appropriate relativistic recipe for creating a differential
    equation from a list of forces. Solving a mechanics problem using relativity is
    still a process of transforming information through a sequence of four representations,
    starting with one-body forces, then a differential equation, then a state-update
    function, and finally a list of states. The relativity law, Equation 18.1, appears
    in this process as the means to transform a list of forces acting on an object
    into a differential equation. A numerical method still transforms a differential
    equation into a state-update function, and we still use iteration to produce a
    list of states as the solution to a mechanics problem. We were able to use the
    same `ParticleState` data type that we used for Newtonian mechanics. We developed
    ideas and tools to solve any single-particle mechanics problem using the laws
    of special relativity. This is the last chapter to focus on a single particle.
    In the next chapter, we’ll discuss multiple interacting particles.
  prefs: []
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Exercise 18.1.** What time step is being used in the calculations of [Figure
    18-1](ch18.xhtml#ch18fig1)?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise 18.2.** The function `relativityPS` we wrote to do the dynamics
    for relativity assumed that velocities would be given in SI units. However, this
    may not always be convenient. We may want to use natural units instead, in which
    *c* = 1\. Let’s write a function that takes a value of *c* as input, there-by
    allowing us to use SI units, natural units, or whatever other units we might want.'
  prefs: []
  type: TYPE_NORMAL
- en: Use Equation 18.1 to write the function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '**Exercise 18.3.** Explore the relativistic harmonic oscillator by comparing
    it to a Newtonian harmonic oscillator. The only force is a linear restoring force
    chosen with a spring constant that will give a Newtonian period of 1 second. Use
    a mass of 1 kg, an initial position of 0, and an initial velocity of 4/5*c* in
    whatever direction you like. (The motion will be one dimensional.) Use one of
    the examples in this chapter as a template for your code. Plot velocity versus
    time for the Newtonian result and the relativistic result. Your results should
    look something like [Figure 18-3](ch18.xhtml#ch18fig3).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/338fig01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 18-3: The relativistic harmonic oscillator*'
  prefs: []
  type: TYPE_NORMAL
