- en: '5'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Selecting
  prefs: []
  type: TYPE_NORMAL
- en: There are few useful things you can do in Inkscape without first selecting some
    object or objects. Of all Inkscape operations, selecting has, by far, the greatest
    number of methods, tools, dialogs, and shortcuts available. You need to know a
    good portion of them to be able to work efficiently—and at least a few to be able
    to work in Inkscape at all.
  prefs: []
  type: TYPE_NORMAL
- en: By itself, selecting or deselecting objects does not change the document in
    any way. Therefore, none of the techniques described in this chapter are undoable
    actions, and none require your document to be saved.
  prefs: []
  type: TYPE_NORMAL
- en: 5.1 The Selection Cue
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As you probably know by now, Inkscape's selection is just a list of objects,
    which may include anything—from no objects (empty selection, nothing selected)
    to all the objects in the document. Selection is local to the editing window;
    if you open a second window with the same document ([3.6](c03.xhtml#section3.6)),
    that window will have its own independent list of selected objects. Selected objects
    can be anywhere on the canvas, in any layer or group; multiple selected objects
    don't have to be children of the same parent. The only thing you *cannot* do is
    select an object and its ancestor at the same time ([5.10](#section5.10)).
  prefs: []
  type: TYPE_NORMAL
- en: On the canvas, each selected object is marked by the selection cue. By default,
    this cue is a dashed frame around an object, showing that object's bounding box
    ([4.3](c04.xhtml#section4.3)). This frame is drawn on top of all objects using
    a contrasting color, so it is visible on any background.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can switch to a different selection cue: a small diamond-shaped mark in
    the bottom left corner of each object''s bounding box, as shown in [Figure 5-1](#fig5-1).
    To change the type of the selection cue or to turn it off altogether, go to the
    **Tools ▶ Selector** subpage of the **Preferences** dialog.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](06/selcue.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5-1: The two possible types of selection cues'
  prefs: []
  type: TYPE_NORMAL
- en: Also, you can control which tools display the selection cue and which do not.
    For this, look for checkboxes labeled Show selection cue on each tool's page in
    thePreferences dialog. By default, every tool shows the selection cue, except
    for the Measure, Eraser, Tweak, Calligraphy, and Paint bucket tools—that is, those
    tools where the cue is not very useful or may be a distraction. (Of course, the
    selection is still there whether the cue is displayed or not—it remains the same
    no matter how you switch tools.)
  prefs: []
  type: TYPE_NORMAL
- en: 5.2 Selection and the Status Bar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A lot of things happen throughout the program when you select or deselect objects.
    Inkscape instantly redirects all its attention to the new selection. It redraws
    the selection cues, scrolls the canvas if necessary to show the selected objects
    ([3.12](c03.xhtml#section3.12)), and updates various displays and indicators all
    over the interface.
  prefs: []
  type: TYPE_NORMAL
- en: One of the most important sources of hints in Inkscape, the status bar, displays
    as much information about a selection as would reasonably fit into it. For a single
    selected object, it tells you the type of object, lists certain additional properties
    for some of the types (such as the number of nodes for paths, font family and
    size for text objects), names the layer in which this object resides, and gives
    some useful advice, as shown in [Figure 5-2](#fig5-2).
  prefs: []
  type: TYPE_NORMAL
- en: '![](06/statusbar-single.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5-2: Status bar: a single selected object'
  prefs: []
  type: TYPE_NORMAL
- en: For multiple selected objects, Inkscape tells you how many are selected and
    lists their types ([Figure 5-3](#fig5-3)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](06/statusbar-multiple.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5-3: Status bar: multiple selected objects'
  prefs: []
  type: TYPE_NORMAL
- en: If objects in more than one layer are selected, Inkscape gives you the number
    of objects and their layers along with the object types ([Figure 5-4](#fig5-4)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](06/statusbar-multiple-layers.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5-4: Status bar: multiple selected objects of multiple types in multiple
    layers'
  prefs: []
  type: TYPE_NORMAL
- en: To the left of the status bar message area is the current layer indicator ([4.9.3](c04.xhtml#section4.9.3)).
    Since selected objects can be in different layers, this widget is not directly
    connected to the selection. However, when you select a single object by clicking,
    Inkscape assumes that you now want to work in that object's layer—so it makes
    that layer current, which the indicator reflects.
  prefs: []
  type: TYPE_NORMAL
- en: Further to the left is the *selected style indicator*, which always reflects
    the style of the current selection (if many objects with different styles are
    selected, it displays their averaged style or says "Different" if the styles cannot
    be averaged). I discuss this important widget in detail in [8.2](c08.xhtml#section8.2).
  prefs: []
  type: TYPE_NORMAL
- en: 5.3 Subselection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Some tools allow a finer-grained type of selection so as to work on part of
    a selected object rather than an entire object. This selected part of a selected
    object is sometimes called the *subselection*.
  prefs: []
  type: TYPE_NORMAL
- en: One example is the Text tool. You can select an entire text object, but then
    you can select a *fragment* of text inside that object by using Shift with arrow
    keys, or by dragging with the mouse, just like you do in a text editor ([15.1.1](c15.xhtml#section15.1.1)).
    That selected part of the text is the text subselection.
  prefs: []
  type: TYPE_NORMAL
- en: Another example is the Gradient tool. A gradient can have many stops ([10.5](c10.xhtml#section10.5)),
    and the tool can select one or more of those stops at a time. Naturally, gradient
    stops are visible only for selected objects—so if you select a stop, you're creating
    a subselection within the regular object selection.
  prefs: []
  type: TYPE_NORMAL
- en: When you change subselection, some things in Inkscape behave the same as when
    you change selection. In particular, the selected style indicator in the status
    bar ([Figure 8-2](c08.xhtml#fig8-2)) displays the style of the subselection—that
    is, the style of the selected text fragment and not the entire text, or the style
    of the selected gradient stop and not the entire object. Also, any style-setting
    commands (such as clicking a color on the palette, or pasting a style by pressing
    Shift-Ctrl-V) will apply to the subselection if it is present. In other words,
    subselection allows you to deal with parts of your objects almost as though they
    were objects in their own right.
  prefs: []
  type: TYPE_NORMAL
- en: '5.4 Selecting by Clicking: the Selector'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You may know already that the topmost tool in the toolbar is the Selector and
    that clicking an object with that tool selects that object. Of course, there is
    much more to the Selector tool than that, but let's look at this simple action
    in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: First, note that clicking an object *deselects* any previous selection. Also,
    with the Selector tool, you can not only select objects but also *drag* the selected
    objects in any direction. Combined, these two features make it easy and natural
    to move objects around—almost without thinking about "selection" at all. You see
    an object, you click and drag it to where you want it. The click selects it, deselecting
    anything else, and the drag moves it.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, this behavior can be annoying. Especially if you use a tablet with
    a pen instead of a mouse, you may find it too easy to nudge an object accidentally
    when all you wanted to do was to select it by clicking. To make this less of a
    problem, go to the **Input/Output ▶ Input Devices** page of the **Preferences**
    dialog and adjust the**Click/drag threshold** value. This is the allowed "slippage"
    of the mouse, the default being 4 screen pixels; if you click and drag an object
    by less than this many pixels, your action is still considered a click and the
    object does not move. Increase this value if you often end up accidentally moving
    objects instead of clicking them; conversely, decrease it if you find that objects
    annoyingly "stick" more than you like when you really want to move them.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before you click anything, however, you want to be sure that you''re clicking
    in the right place and that your click will not be wasted. Inkscape tries to be
    helpful: it changes your mouse cursor, by appending a cross-with-arrows icon to
    it, when you are over a clickable area of an object—as opposed to an empty canvas
    where the cursor is a plain arrow.'
  prefs: []
  type: TYPE_NORMAL
- en: Play with this cursor-changing capability a little. You will discover that objects
    with no fill cannot be selected by clicking inside them and that fully transparent
    objects are not selectable by clicking at all (although you can select them with
    the rubber band, as you'll see in the next section). In Outline mode ([3.14](c03.xhtml#section3.14)),
    you can select an object only by clicking its outline.
  prefs: []
  type: TYPE_NORMAL
- en: As you can imagine, this changing cursor is less helpful in complex drawings
    where the entire canvas is often covered with objects. However, if you separate
    background objects into a layer and lock that layer ([4.9](c04.xhtml#section4.9)),
    those objects, now unselectable, will no longer change the cursor—so you can again
    sense the foreground objects by moving your mouse over them.
  prefs: []
  type: TYPE_NORMAL
- en: Also, you will notice that every clickable object has an invisible margin several
    pixels wide on all sides. Clicking in that margin still selects the object. This
    is handy for selecting small objects that would otherwise be almost impossible
    to click upon accurately. On the downside, this also explains why it's sometimes
    difficult to select the bottom object in a stack even if that bottom object protrudes
    a little from under the top one.
  prefs: []
  type: TYPE_NORMAL
- en: If you don't like the size of this clickable margin, you can change it on theInput/Output ▶ Input
    Devices page of the Preferences dialog. This is the Grab sensitivity value, the
    default being 8 screen pixels. Note that both this value and theClick/drag threshold
    are in screen pixels, which means they do not depend on zoom; of course, you will
    find it easier to perform small moves and select small objects when you're zoomed
    in.
  prefs: []
  type: TYPE_NORMAL
- en: '5.5 Selecting by Clicking: Other Tools'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the principles of Inkscape's user interface is consistency. Unless there's
    a reason to do otherwise, all tools and modes strive to behave the same. This
    means that many tools, just like the Selector, can select an object by clicking
    it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Clicking to select works in the following tools: Node ([12.5](c12.xhtml#section12.5)),
    all of the shape tools ([Chapter 11](c11.xhtml#ch11)), Text ([Chapter 15](c15.xhtml#ch15)),
    Connector ([1.2](c01.xhtml#section1.2)), Gradient ([10.1](c10.xhtml#section10.1)),
    and Mesh ([10.7](c10.xhtml#section10.7)) tools. The tools that *cannot* select
    by clicking are different for a reason—in those tools, a single click is reserved
    for a different function specific to that tool.'
  prefs: []
  type: TYPE_NORMAL
- en: Unlike the Selector, all these tools directly select individual objects even
    when they are inside groups (in other words, in these tools a simple click is
    equivalent to Ctrl-click in Selector, [5.10](#section5.10)). This makes sense;
    all of these tools work on individual objects of various types, so in most cases,
    selecting a group is not what you really want to do. For example, if you select
    a group with the Node tool, you would not be able to do anything useful with it—a
    group has no path nodes to edit. That's why this tool always directly selects
    the *path* you clicked, whether it's grouped or not.
  prefs: []
  type: TYPE_NORMAL
- en: Also, unlike the Selector, other tools don't change the cursor over selectable
    objects. The only exception is the Text tool that switches to the text insertion
    cursor when over an editable text object ([15.1](c15.xhtml#section15.1)).
  prefs: []
  type: TYPE_NORMAL
- en: 5.6 Adding to a Selection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A selection can contain more than one object. If you’ve already made the effort
    to select some objects, and then want to select some other objects as well, can
    you do so without starting the selection all over again?
  prefs: []
  type: TYPE_NORMAL
- en: To *add* another object to the current selection, Shift-click it. Conversely,
    if you Shift-click an already selected object, it will be*removed* from selection.
    This shortcut works as a toggle that inverts the selected status of the object
    that you Shift-click.
  prefs: []
  type: TYPE_NORMAL
- en: 5.7 Selecting with the Rubber Band
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another way to select multiple objects in the Selector is by dragging *around*
    them. Imagine a rectangle surrounding all the objects you want to select and drag
    from one corner of that rectangle to the opposite corner. (The exact direction
    of the drag—top left to bottom right versus top right to bottom left, for example—does
    not matter.) This rectangle (shown in [Figure 5-5](#fig5-5)), which is visible
    while you're dragging, is called the *rubber band* or *marquee*.
  prefs: []
  type: TYPE_NORMAL
- en: '![](06/marquee2.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5-5: Using the rubber band (mouse drag) to select multiple objects'
  prefs: []
  type: TYPE_NORMAL
- en: Selecting by rubber band is *not a toggle*; once you start a new rubber band,
    any previous selection is deselected. This is why, logically, single-clicking
    on empty space (not an object) deselects anything—it's just a zero-sized rubber
    band that deselects the old selection without creating a new one.
  prefs: []
  type: TYPE_NORMAL
- en: The rubber band selects fully enclosed objects in all visible and unlocked layers—in
    other words, across the z-order stack of the entire document, not the current
    layer only. (For this reason, selecting by rubber band does not change the current
    layer, even if it resulted in selecting a single object in a layer different from
    the current one.) Also, the rubber band selects those objects that you cannot
    select by clicking—those that are underneath others, those without fill and stroke,
    and those that are fully transparent (have zero opacity). However, objects that
    are hidden or locked ([4.1](c04.xhtml#section4.1)) still cannot be selected.
  prefs: []
  type: TYPE_NORMAL
- en: In short, if an object's bounding box is completely inside the rubber band rectangle
    and that object is at all selectable, it *will* get selected.
  prefs: []
  type: TYPE_NORMAL
- en: It's tempting to assume that, as with clicking, dragging the rubber band with
    Shift would give you a toggle behavior. This is not quite the case, however. Shift-dragging
    with the Selector tool works like simple dragging except that it *always* creates
    a rubber band, even if you start from an object and not from an empty canvas,
    and *then* adds (not toggles) enclosed objects to selection. Without Shift, dragging
    from a (selectable) object will select and move that object, but pressing Shift
    and dragging *forces* the rubber band—which makes it a lot more useful in complex
    drawings where empty canvas may be hard to come by.
  prefs: []
  type: TYPE_NORMAL
- en: 5.8 Touch Selection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Touch selection is a close relative of the rubber band. In the Selector tool,
    with no previous selection, drag from an empty canvas with Alt. You will see a
    red trail left by your mouse cursor—the *touch path*. After you release mouse
    button, all objects *touched by* (not included in) this trail will become selected
    ([Figure 5-6](#fig5-6)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](06/touchsel.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5-6: Using touch selection (Alt-drag). Objects that will be selected
    after you release the mouse are marked with darker gray.'
  prefs: []
  type: TYPE_NORMAL
- en: This means you can literally "paint" over the objects you want to select, which
    is convenient when the objects you need are close together but their bounding
    boxes are too big (or too intertwined with other objects) to use the rubber band.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike the rubber band, touch selection does not select completely transparent
    objects or those obscured by others—that is, objects that you cannot really "touch."
    In fact, touch selection behaves exactly as if it were a series of Shift-clicks
    along the touch path so that each touched object gets one such click.
  prefs: []
  type: TYPE_NORMAL
- en: 'If there is a selection, Alt-drag has a different function: it moves the selection
    regardless of where you drag ([6.1](c06.xhtml#section6.1)). What if you already
    have something selected and want to *add* to it with touch selection? Use Shift-Alt-drag:
    just like Shift forces the rubber band even if you start from an object, with
    touch selection, it forces the touch path even if you have a previous selection.
    The touched objects are then *added* to the selection.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you touch-select objects so you can then delete them, the Delete mode of
    the Eraser tool ([14.4](c14.xhtml#section14.4)) performs both functions at once:
    drag over objects, and they''ll be deleted once you release the mouse. You don''t
    need to hold Alt in the Eraser tool.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.9 Selecting Objects from Underneath
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the common problems with selecting objects in complex drawings is that
    some objects obscure others. Even if the top object is partially transparent and
    you can see another object underneath, simply clicking it will still select the
    top object.
  prefs: []
  type: TYPE_NORMAL
- en: If the bounding box of the bottom object is smaller than that of the top one,
    you can Shift-drag a rubber band around the small bottom object, and this will
    select it without selecting the top object. However, this is not always possible.
  prefs: []
  type: TYPE_NORMAL
- en: 5.9.1 Alt-click
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To select objects that aren’t at the top of the z-order, use Alt-click, which
    *selects under* the currently selected object. This means that the result of an
    Alt-click depends on the current selection; if nothing is selected, or if you
    Alt-click outside the current selection, the result is the same as if you simply
    clicked without Alt.
  prefs: []
  type: TYPE_NORMAL
- en: If, however, you click a selected object and there are other objects underneath
    it, Alt-click will deselect the selected object and instead select the object
    immediately beneath it. The next Alt-click will select a still deeper object,
    and so on. When you reach the bottommost object at the click point, the next Alt-click
    again selects the topmost one.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine you have three stacked objects, numbered 1, 2, 3, from bottom to top.
    With nothing selected, Alt-clicking them selects the topmost one, 3\. The next
    Alt-click selects 2, then 1, then 3 again, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Shift-Alt-click differs from Alt-click in the same way that Shift-click differs
    from a simple click: it adds to the selection or removes from it without unselecting
    it completely. So, in our 1, 2, 3 stack of objects, the first Shift-Alt-click
    selects 3; after another Shift-Alt-click, you will have 2 and 3 selected; one
    more Shift-Alt-click adds the bottommost object to the selection as well. So,
    after three Shift-Alt-clicks, you will have 1, 2, and 3 all selected. Further
    Shift-Alt-clicks will toggle the selected status of 3 while keeping 1 and 2 selected.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.9.2 Alt-scroll [1.1]
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have a mouse with a scroll wheel, there’s another way to select underneath
    an object. Rotating the wheel with Alt selects objects in the stack under the
    mouse cursor, one by one in turn, one object per notch. Rotating forward goes
    from top to bottom in the stack; rotating backward goes from bottom to top. Thus,
    in the 1-2-3 stack example from the previous section, Alt-scrolling forward over
    it will select objects in the order 3, 2, 1, 3, 2,... and Alt-scrolling backward
    will select 1, 2, 3, 1, 2,....
  prefs: []
  type: TYPE_NORMAL
- en: To make this even more intuitive, Inkscape temporarily adjusts the opacity of
    all the objects in the stack while you Alt-scroll, overriding any opacity they
    might naturally have ([Figure 5-7](#fig5-7)). Once you start rotating, all the
    objects in the stack become semitransparent, except for the newly selected object,
    which becomes fully opaque. This way, you can see at once where in the stack you
    are and how much you need to scroll to get to the object you need.
  prefs: []
  type: TYPE_NORMAL
- en: '![](06/alt-scroll.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5-7: Using Alt-scroll wheel (rotating forward) to select one from a
    stack of objects'
  prefs: []
  type: TYPE_NORMAL
- en: If you add Shift to Alt-scrolling, Inkscape will no longer deselect the object
    it had selected at the previous notch of wheel rotation. This way, you can add
    the entire stack of objects under the cursor simply by pressing Shift-Alt and
    rotating all the way up or down until you exhaust the stack. This is more convenient
    than Shift-Alt-clicking because there's no back-and-forth toggling of the top
    object once you reach the bottom.
  prefs: []
  type: TYPE_NORMAL
- en: Another difference between Alt-clicking and Alt-scrolling is that the latter
    ignores grouping and always selects individual objects, whether they are grouped
    or not. To do the same with clicking, you will need to add the Ctrl key to the
    mix, as you will see in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: 5.10 Selecting in Groups
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Grouping is a boon when you want to treat a collection of objects as a whole:
    simply click any object in a group (with the Selector tool) and the entire group
    gets selected. However, quite often you want to select and edit an object inside
    a group without ungrouping it. For this, simply Ctrl-click an object in a group.'
  prefs: []
  type: TYPE_NORMAL
- en: Ctrl-clicking ignores *any* grouping, no matter how many levels deep it is.
    For example, if object A is a member of group B, which, in turn, is a member of
    top-level group C, then Ctrl-clicking A will select A, cutting right through both
    levels of grouping. There's no way to select group B by Ctrl-clicking—it will
    always select the lowest-level nongroup object.
  prefs: []
  type: TYPE_NORMAL
- en: The only way to select group B, which is inside group C, is by *entering* group
    C ([4.9.1](c04.xhtml#section4.9.1)). Entering C makes it a temporary layer. Once
    in that layer, you can select B with a simple click.
  prefs: []
  type: TYPE_NORMAL
- en: You can combine Ctrl-click with Alt (select under). Logically, Ctrl-Alt-click
    does the same thing as Alt-click, except that it disregards any grouping and browses
    through the z-order stack of objects at the click point as if they were all ungrouped.
    (As for Alt-scrolling, it already disregards grouping, so adding Ctrl to it has
    no effect.)
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, you can combine Ctrl-click with Shift to add an object to selection
    or remove it from selection. Finally, you can Shift-Ctrl-Alt-click, which means
    "Add to selection the topmost nonselected object in the z-order stack at this
    point, ignoring grouping; if all objects at this point are selected, deselect
    the topmost one."
  prefs: []
  type: TYPE_NORMAL
- en: The only limit to the power of selecting by clicking with various modifiers
    is that you cannot have both an object and a group that contains that object selected
    at the same time. So, for example, if you Ctrl-click an object inside a group
    and then Shift-click (without Ctrl!) another object of the same group, thus trying
    to add the group to the selection, the group becomes selected, but the first selected
    object is deselected. Having both a group and an object inside that group selected
    at the same time would lead to all kinds of paradoxes, so Inkscape does its best
    to prevent this from happening.
  prefs: []
  type: TYPE_NORMAL
- en: 5.11 Selecting with Keyboard Shortcuts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Generally, selecting is a task for a mouse or pen—because, in most cases, it
    is done by indicating some points or areas on the screen. However, you can also
    use keyboard shortcuts for two very common selection operations: selecting the
    *next* or *previous object* (Tab or Shift-Tab) and selecting *all objects* (Ctrl-A).'
  prefs: []
  type: TYPE_NORMAL
- en: Here, *next* and *previous* actually refer to the z-order of objects inside
    the document (see [4.4](c04.xhtml#section4.4)). When you press Tab, you select
    the object immediately*above* the currently selected object in the z-order (or
    above the topmost selected object, if several objects are selected). Correspondingly,
    Shift-Tab selects the object immediately *below* the (bottommost) selected object.
  prefs: []
  type: TYPE_NORMAL
- en: If nothing is selected, Tab selects the bottommost object in the current layer,
    and Shift-Tab selects the topmost one. Since objects are typically added to the
    top of the current layer's z-order, pressing Shift-Tab with no previous selection
    is therefore a convenient shortcut for selecting the most recently added (drawn,
    pasted, imported) object.
  prefs: []
  type: TYPE_NORMAL
- en: You can change some aspects of this behavior on theBehavior ▶ Selecting page
    of the Preferences dialog ([Figure 5-8](#fig5-8)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](06/prefs-selecting.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5-8: The Selecting page of the Preferences dialog'
  prefs: []
  type: TYPE_NORMAL
- en: By default, these keys are limited to the current layer (which may be a group
    that you have entered, [4.9.1](c04.xhtml#section4.9.1)). That is, once you reach
    the topmost object of the layer by pressing Tab, another Tab takes you back to
    the bottommost object in the same layer; pressing Ctrl-A selects all objects only
    in the current layer. The Preferences dialog describes this behavior as Select
    only within current layer. The Select in current layer and sublayers option works
    the same except it enters inside the sublayers of the current layer ([4.9.1](c04.xhtml#section4.9.1)),
    and Select in all layers allows Tab or Shift-Tab to cross the boundaries of layers
    and Ctrl-A to select all objects in the entire document. Another way to select
    all objects in all layers, regardless of preferences, is by pressing Ctrl-Alt-A.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can uncheck the two checkboxes, Ignore hidden objects and layers and Ignore
    locked objects and layers, to allow the keyboard shortcuts to select those objects
    that are hidden or locked. If you also choose Select in all layers, you will be
    able to reach inside a hidden or locked layer ([4.9](c04.xhtml#section4.9)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5.12 Selecting by Properties [1.1]
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A number of commands in the Edit ▶ Select Same menu let you select all objects
    in the document that are the same—according to some parameter—as the currently
    selected object. For the selection criteria, you can use the same fill color,
    the same stroke color, both fill and stroke color, stroke style (including color,
    width, dash pattern, [Chapter 9](c09.xhtml#ch9)), or the object type (rectangle,
    text, group, and so on).
  prefs: []
  type: TYPE_NORMAL
- en: 5.13 Selecting by Searching
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Searching for objects is typically only needed in complex documents—but when
    you do need it, you'll be glad Inkscape can do it. This chapter on selection is
    the best place to discuss searching simply because it is, in essence, yet another
    way to select objects. Even though Inkscape's Find/Replace dialog can do replacing
    (that is, modifying) as well as searching, you still need to search (that is,
    select) before you can replace.
  prefs: []
  type: TYPE_NORMAL
- en: To open the Find/Replace dialog ([Figure 5-9](#fig5-9)), press Ctrl-F or use
    **Edit ▶ Find/Replace** from the menu.
  prefs: []
  type: TYPE_NORMAL
- en: '![](06/find.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5-9: The Find/Replace dialog'
  prefs: []
  type: TYPE_NORMAL
- en: To search, type your query in the **Find** field, check the options, then click
    **Find**.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing the Text option applies only to text objects ([Chapter 15](c15.xhtml#ch15))
    by searching within their text content. Otherwise, you can search in the Properties
    (detailed below) of all kinds of objects.
  prefs: []
  type: TYPE_NORMAL
- en: Default search includes all of the document; you can limit it to the Current
    layer or to Selection. The latter option is useful for a multistage search—for
    example, if you want to find text objects that contain both "day" and "night",
    search for "day" first and then search for "night" within the selection.
  prefs: []
  type: TYPE_NORMAL
- en: Search can be Case sensitive (off by default) or require Exact match (by default,
    partial matches will be selected too, such as a text object with the word "selected"
    when you search for "select").
  prefs: []
  type: TYPE_NORMAL
- en: You can choose to apply search to objects that are hidden and/or locked (individually
    or by being in hidden/locked layers).
  prefs: []
  type: TYPE_NORMAL
- en: You can search in the ID attributes of all objects ([4.1](c04.xhtml#section4.1)),
    which are unique for each SVG element (though not very meaningful, unless you
    edit them yourself).
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also search within the Style of objects. As this is a simple text field,
    to use this feature, you need to have at least some idea of how style is encoded
    in SVG (see [A.8](b01.xhtml#sectionA.8)). When in doubt, you can always check
    the `style` attribute of an object in the XML Editor ([4.10](c04.xhtml#section4.10)).
    Here are a few examples:'
  prefs: []
  type: TYPE_NORMAL
- en: Finding all red-filled objects
  prefs: []
  type: TYPE_NORMAL
- en: This is possible, but only for one specific red color. You need to know how
    to convert that color to the RRGGBB form. Hovering your mouse over a color on
    the palette ([8.5](c08.xhtml#section8.5)) in the selected style indicator ([8.6](c08.xhtml#section8.6))
    will give you the color's RRGGBB in the tool tip. For example, if you're searching
    for the bright red fill (`#ff0000`), in an object's style string the color is
    preceded by the name of the property, `fill`, separated by a colon. So your search
    string will be`fill:#ff0000`.
  prefs: []
  type: TYPE_NORMAL
- en: Finding all objects without stroke or fill
  prefs: []
  type: TYPE_NORMAL
- en: Search for `stroke:none` or `fill:none`.
  prefs: []
  type: TYPE_NORMAL
- en: Finding all fully transparent objects
  prefs: []
  type: TYPE_NORMAL
- en: Search for `opacity:0;` (note the separator semicolon at the end; without it,
    it will also find all*partially* transparent objects—for example, those with `opacity:0.5;`
    in their style).
  prefs: []
  type: TYPE_NORMAL
- en: Separately, you can search text objects by the name of the font they use (even
    though it's usually also in the `style` attribute).
  prefs: []
  type: TYPE_NORMAL
- en: More generally, you can search for a string in the value or name of any attribute.
    For example, all objects that you export to bitmap using selection export get
    the attribute`inkscape:export-filename`, which stores the filename of the bitmap
    export file. So searching for this attribute will select all objects in the document
    that were ever exported (following which you can, for example, export them all
    again, see [18.6](c18.xhtml#section18.6)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, you can limit your search to specific Object types: uncheck the default
    **All types** and select which types you are interested in.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.14 Following Links
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As you will see in the following chapters, objects in Inkscape can be linked
    to each other in various ways. You will often want to follow such links to find
    the object to which your current selected object is linked. Inkscape has a universal
    keyboard shortcut for this, Shift-D. Depending on what kind of object is selected,
    pressing Shift-D will select:'
  prefs: []
  type: TYPE_NORMAL
- en: The original of a clone ([16.4](c16.xhtml#section16.4)), if a clone is selected.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The path to which the selected text-on-path object is attached ([15.2.4](c15.xhtml#section15.2.4)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The path to which the selected linked offset object is attached ([12.4](c12.xhtml#section12.4)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some document objects may be stored in the`defs` (see [A.4](b01.xhtml#sectionA.4)),
    in which case, you can reference them from the document, but they are not visible
    anywhere on the canvas. If your onscreen clone, text-on-path, or linked offset
    refers to an object in `defs`, Shift-D will fail with an error message in the
    status bar.
  prefs: []
  type: TYPE_NORMAL
- en: 5.15 Deselecting and Inverting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In almost any tool, context, or mode, pressing Escape will deselect the current
    selection. If you have a subselection, typically pressing Escape once will deselect
    the subselection and the second Escape will deselect the regular selection.
  prefs: []
  type: TYPE_NORMAL
- en: Another way to deselect is by clicking the empty canvas (or a locked object
    with nothing underneath it). This, however, works only in Selector and in those
    tools where a simple click selects objects ([5.5](#section5.5)). In complex drawings
    where accessing empty canvas may be difficult, Escape is by far the most convenient
    way to deselect.
  prefs: []
  type: TYPE_NORMAL
- en: Also, by default Inkscape deselects when you switch the current layer (see [4.9](c04.xhtml#section4.9)).
    You can disable this on the Behavior ▶ Selecting page of the Preferences dialog.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, it's easier to identify things you do *not* want to select. Inkscape
    makes this easy—just select the objects you don't need and do **Edit ▶ Invert
    Selection**. What was selected loses selection; what wasn't selected (within the
    current layer) becomes selected.
  prefs: []
  type: TYPE_NORMAL
- en: 5.16 Selection Miscellany
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you undo an action, your current selection is usually (but not always)
    deselected; whether this happens depends on what kind of action you're undoing.
    A similar problem is that selection is often lost after an extension ([Chapter 19](c19.xhtml#ch19))
    is run. Moreover, if an extension opens a configuration dialog and you check the
    Live preview checkbox in it, you cannot change selection (or do anything else
    on the canvas) while that dialog is open.
  prefs: []
  type: TYPE_NORMAL
- en: Inkscape's powerful command line interface has a special parameter for selecting
    objects, `--select` ([C.6](b03.xhtml#sectionC.6)). To use it, you need to know
    the IDs of the objects you want to select. This makes it possible to script fully
    automated Inkscape editing sessions where a single command loads a document, selects
    some objects, performs some actions on them, saves the document, and quits—all
    without any user interaction.
  prefs: []
  type: TYPE_NORMAL
