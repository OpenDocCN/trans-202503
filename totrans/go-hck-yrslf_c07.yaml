- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Stealing and Cracking Passwords
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 偷窃与破解密码
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: In Chapter 6, you learned how an attacker can create malware to infect your
    computer and see your files, keystrokes, screen, webcam video, and more. In this
    chapter, you’ll see how an attacker can use that same malware to steal the encrypted
    passwords of all users on a Windows computer. Then you’ll find out how hackers
    *crack* those passwords, or recover them in their unencrypted, plaintext form.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在第六章中，你学习了攻击者如何创建恶意软件来感染你的计算机并查看你的文件、按键记录、屏幕、摄像头视频等内容。在本章中，你将看到攻击者如何使用相同的恶意软件窃取
    Windows 计算机上所有用户的加密密码。然后你将了解黑客如何*破解*这些密码，或将它们恢复为未加密的明文形式。
- en: If an attacker cracks your password, they may be able to hack into any other
    account, website, or device where you’ve used that password—even if you’ve added
    extra characters to make it “unique” for those other accounts. Weak passwords
    are one of the easiest ways for black hat hackers to break into an organization’s
    network or into your personal accounts. If your password is strong enough, however,
    even if an attacker steals the encrypted password, they won’t be able to crack
    it.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果攻击者破解了你的密码，他们可能能够黑入任何你使用过该密码的账户、网站或设备——即使你已经添加了额外的字符，使其在其他账户中显得“独特”。弱密码是黑帽黑客最容易突破组织网络或你的个人账户的方式之一。然而，如果你的密码足够强大，即使攻击者窃取了加密密码，他们也无法破解它。
- en: Password Hashes
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 密码哈希
- en: Modern computer systems and secure websites encrypt passwords with a cryptographic
    hash function before storing them. Unlike the codes you encounter in spy movies,
    which are meant to be decoded on the receiving end, a *cryptographic hash function*
    encrypts your password in a way that cannot be reversed or decrypted. The hashed
    version of the password is known as a *password hash*. Hashes can be viewed as
    long strings of hexadecimal digits, as in [Listing 7-1](#listing7-1).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现代计算机系统和安全网站在存储密码之前，会使用加密哈希函数对密码进行加密。与间谍电影中出现的代码不同，那些代码是为了在接收端解码的，而*加密哈希函数*以一种无法反向或解密的方式加密你的密码。密码的哈希版本称为*密码哈希*。哈希值可以看作是由十六进制数字组成的长字符串，如[示例
    7-1](#listing7-1)所示。
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Listing 7-1: Hashed versions of five passwords'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 7-1：五个密码的哈希版本
- en: When you log in to a computer or website, the only way for it to check whether
    you entered the correct password is to run the same hash function on the characters
    you entered and then compare the result with the password hash stored in its database.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当你登录到计算机或网站时，唯一的方式来检查你输入的密码是否正确，就是对你输入的字符运行相同的哈希函数，然后将结果与存储在数据库中的密码哈希进行比较。
- en: 'There are lots of different types of hash functions, but they have several
    things in common:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数有很多不同的类型，但它们有几个共同点：
- en: The same input text will always produce the same hash value in a particular
    hash function; this is necessary so that your stored password hash can be tested
    against the hash of the password you enter when you return to a site.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相同的输入文本总是会在特定的哈希函数中生成相同的哈希值；这是必要的，以便当你返回到网站时，可以将存储的密码哈希与输入的密码哈希进行比对。
- en: Every hash from a particular hash function will be the same length, no matter
    how long the input text might be. Since a one-word password and a five-word password
    will produce the same number of hash characters, the hash function hides the length
    of your password.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从特定哈希函数生成的每个哈希值都会有相同的长度，无论输入文本的长度是多少。由于一个单词的密码和五个单词的密码会产生相同数量的哈希字符，因此哈希函数隐藏了密码的长度。
- en: Changing just one character in the input will cause lots of characters in the
    hash to change, so adding even a single character to a password changes the hash
    completely.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅更改输入中的一个字符，就会导致哈希中的大量字符发生变化，因此，即使只添加一个字符到密码中，也会完全改变哈希。
- en: Stealing Windows Password Hashes
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 偷窃 Windows 密码哈希
- en: In this section, we’ll use your Kali Linux VM to steal password data from your
    Windows 10 VM. First, we’ll create several usernames and passwords in the Windows
    10 VM. Next, we’ll use the Meterpreter remote access trojan to break back into
    the Windows VM. Then, we’ll use the Mimikatz tool in Metasploit to steal the password
    hashes from the Windows 10 victim machine.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用你的 Kali Linux 虚拟机从 Windows 10 虚拟机窃取密码数据。首先，我们将在 Windows 10 虚拟机中创建几个用户名和密码。接下来，我们将使用
    Meterpreter 远程访问特洛伊木马重新进入 Windows 虚拟机。然后，我们将使用 Metasploit 中的 Mimikatz 工具窃取 Windows
    10 受害机的密码哈希。
- en: Creating Windows Users
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Windows 用户
- en: First, let’s add some users to the Windows 10 VM so we can later steal their
    password hashes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们来为 Windows 10 虚拟机添加一些用户，以便以后窃取它们的密码哈希值。
- en: Open your Windows 10 VM in VirtualBox (logging in with `IEUser` and `Passw0rd!`).
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 VirtualBox 中打开你的 Windows 10 虚拟机（使用 `IEUser` 和 `Passw0rd!` 登录）。
- en: Enter `cmd` into the Windows search bar, right-click the **Command Prompt**
    app, and click **Run as administrator**. Click **Yes** when Windows asks if you
    want to allow this app to make changes to your device.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Windows 搜索栏中输入 `cmd`，右键点击 **命令提示符** 应用，然后点击 **以管理员身份运行**。当 Windows 提示是否允许此应用对设备进行更改时，点击
    **是**。
- en: 'Create a new user account with the same command we used during the Sticky Keys
    hack back in Chapter 2:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用我们在第二章的 Sticky Keys 黑客攻击中使用的相同命令，创建一个新用户帐户：
- en: '[PRE1]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This command adds a user called *ironman* with the password *Jarvis*.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此命令添加一个名为 *ironman* 的用户，密码为 *Jarvis*。
- en: 'Now add several more user accounts with passwords of different complexity and
    length:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在添加几个更多的用户帐户，密码的复杂度和长度各不相同：
- en: '[PRE2]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After the last command, Windows will warn you that the password is longer than
    14 characters (which was the limit for password length on Windows machines before
    the year 2000!). Enter `Y` to let Windows know you still want to use the long
    password.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在执行完最后一个命令后，Windows 会警告你密码超过了 14 个字符（这是 2000 年之前 Windows 机器上对密码长度的限制！）。输入 `Y`
    以告知 Windows 你仍然想使用这个长密码。
- en: 'Finally, create a hard passphrase (made up of at least four words, plus a number
    or special symbol) for a username with your name—but make sure it’s a fake passphrase
    that you’re not using on any real accounts, since we’ll be trying to crack it.
    Here’s mine:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，为一个使用你名字的用户名创建一个强密码（由至少四个单词组成，加上一个数字或特殊符号），但请确保这是一个假的密码，不用于任何真实账户，因为我们将尝试破解它。以下是我的示例：
- en: '[PRE3]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You may think a passphrase like this is too hard to type every time you log
    in, but it’s actually easier to remember and harder to guess than most of the
    passwords you’ve added.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能觉得这样的密码每次登录时打字很麻烦，但实际上它比你添加的大多数密码更容易记住，也更难猜测。
- en: Hacking Back into Windows 10 with Meterpreter
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Meterpreter 反向攻击 Windows 10
- en: Next we need to hack back into the Windows 10 VM from Kali.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要从 Kali 中反向攻击进入 Windows 10 虚拟机。
- en: Start your Kali VM (logging in with username and password `kali`) and open the
    Metasploit app by clicking the Kali menu button and selecting **08 - Exploitation
    Tools**▶**Metasploit Framework**.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动你的 Kali 虚拟机（用用户名和密码 `kali` 登录），点击 Kali 菜单按钮，选择 **08 - Exploitation Tools**▶**Metasploit
    Framework** 打开 Metasploit 应用。
- en: 'At the `msf6` command prompt, enter the following command to start your Kali
    web server again:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `msf6` 命令提示符下，输入以下命令以再次启动 Kali Web 服务器：
- en: '[PRE4]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The web server will serve the *10.0.9.x/share* folder containing your Windows
    malware in case you need to download it again.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Web 服务器将提供包含你 Windows 恶意软件的 *10.0.9.x/share* 文件夹，以防你需要重新下载它。
- en: 'Enter the following four commands in Metasploit to listen for the Meterpreter
    trojan to phone home:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Metasploit 中输入以下四个命令，监听 Meterpreter 木马回拨：
- en: '[PRE5]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Remember to change `10.0.9.x` to your Kali VM’s IP address (enter `ip` `addr`,
    or `ip` `a` for short, to see the IP address).
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记得将 `10.0.9.x` 替换为你 Kali 虚拟机的 IP 地址（输入 `ip` `addr` 或 `ip` `a` 来查看 IP 地址）。
- en: 'Switch back to your Windows 10 VM. Turn off your Windows Defender real-time
    virus protection: enter `virus` into the Windows search bar, open **Virus & threat
    protection settings**, click **Manage settings**, and slide the toggle under Real-time
    protection to **Off**.'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换回你的 Windows 10 虚拟机。关闭 Windows Defender 的实时病毒保护：在 Windows 搜索栏中输入 `virus`，打开
    **病毒和威胁防护设置**，点击 **管理设置**，然后将实时保护下的开关滑动到 **关闭**。
- en: 'Enter the following command into an administrator command prompt in the Windows
    10 VM to disable the Windows Firewall as well:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Windows 10 虚拟机的管理员命令提示符中输入以下命令，禁用 Windows 防火墙：
- en: '[PRE6]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Windows will respond with `Ok.`.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Windows 会回应 `Ok.`。
- en: Find the Meterpreter trojan executable file you created in Chapter 6. This file
    should still be in your *Downloads* or *Documents* folder. If Windows Defender
    has removed it, open the Edge browser, go to *http://<10.0.9.4>/share/* (substitute
    your Kali VM’s IP address if it’s different from *10.0.9.4*), and download the
    trojan again. Check your Virus & threat protection settings again to make sure
    real-time protection is turned off. Then double-click the trojan to run it.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到你在第六章创建的 Meterpreter 木马可执行文件。这个文件应该仍然在你的 *下载* 或 *文档* 文件夹中。如果 Windows Defender
    已将其移除，打开 Edge 浏览器，访问 *http://<10.0.9.4>/share/*（如果你的 Kali 虚拟机 IP 地址与 *10.0.9.4*
    不同，请替换为你的 Kali 虚拟机 IP 地址），并重新下载木马。再次检查你的病毒和威胁保护设置，确保实时保护已关闭。然后双击木马文件运行它。
- en: 'Switch back to your Kali VM, and you should see a Meterpreter session opened:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换回您的Kali虚拟机，您应该看到一个Meterpreter会话已经打开：
- en: '[PRE7]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Escalating Privileges
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提升权限
- en: Stealing Windows passwords requires administrator- or system-level privileges,
    a higher level of access than the IEUser account that you used to run the Meterpreter
    trojan. Thanks to Metasploit, we’ll be able to raise our access level with another
    exploit. This process is known as *privilege escalation*.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 窃取Windows密码需要管理员或系统级别的权限，这比您用于运行Meterpreter木马的IEUser帐户权限要高。借助Metasploit，我们将通过另一个漏洞利用提升权限。这个过程被称为*权限提升*。
- en: We’ll use a Metasploit exploit of the Windows `fodhelper` vulnerability to get
    system-level access. Windows uses a program called *fodhelper.exe* (the *fod*
    is short for “features on demand”) to manage regional settings like the keyboard
    layout for your language of choice. This app is a good target for hackers because
    it runs with higher privileges to be able to change language settings across multiple
    apps, such as your web browser, word processor, and desktop.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Metasploit对Windows `fodhelper`漏洞的利用来获得系统级访问权限。Windows使用一个名为*fodhelper.exe*的程序（*fod*是“按需功能”的缩写）来管理区域设置，例如您选择的语言的键盘布局。这个应用程序是黑客的一个好目标，因为它以更高的权限运行，能够跨多个应用程序（如您的网页浏览器、文字处理器和桌面）更改语言设置。
- en: 'In your Kali VM, make sure you’re at the `msf6` command prompt, not interacting
    with a Meterpreter session. If you see the `meterpreter >` command prompt, enter
    `background` to return to the regular `msf6` command prompt:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Kali虚拟机中，确保您处于`msf6`命令提示符下，而不是与Meterpreter会话进行交互。如果您看到`meterpreter >`命令提示符，请输入`background`以返回到常规的`msf6`命令提示符：
- en: '[PRE8]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'From the `msf6` prompt, enter the five commands shown in bold:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`msf6`提示符下，输入粗体显示的五个命令：
- en: '[PRE9]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Change the `set` `SESSION` command to match your session number (if it isn’t
    1) and change the `LHOST` IP address to match that of your Kali machine.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改`set` `SESSION`命令以匹配您的会话编号（如果不是1的话），并将`LHOST`的IP地址更改为与您的Kali机器匹配。
- en: The last command, `exploit`, might take a couple of tries. If you get a message
    stating `no` `session` `was` `created`, use the up arrow and press enter to run
    the `exploit` command again. When it succeeds, you’ll see `Meterpreter` `session`
    `2` `opened`, meaning that the exploit has opened a second session. Your command
    prompt will change back to `meterpreter >` to indicate that you’re interacting
    with a new Meterpreter session.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后的命令`exploit`可能需要尝试几次。如果收到消息提示`no` `session` `was` `created`，请使用向上箭头并按回车键重新运行`exploit`命令。当成功时，您会看到`Meterpreter`
    `session` `2` `opened`，这意味着漏洞利用成功打开了第二个会话。您的命令提示符将返回到`meterpreter >`，表明您正在与一个新的Meterpreter会话进行交互。
- en: Privilege escalation is the highest-level, most technically challenging hack
    you’ll perform in this book, and it might take several tries. If you keep seeing
    “no session created” messages, check your Windows 10 VM to make sure Windows Defender’s
    Virus & threat protection settings are still turned off. If you’re still stuck,
    try rerunning the hack from the beginning. And, at some point in the next five
    years, there’s a good chance Windows will fix the `fodhelper` vulnerability and
    you’ll have to try a different exploit. Check the book’s website at [https://www.nostarch.com/go-hck-yourself/](https://www.nostarch.com/go-hck-yourself/)
    for updates or do a web search for “Metasploit privilege escalation” on the latest
    version of Windows.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 权限提升是您在本书中执行的最具技术挑战的黑客攻击，可能需要多次尝试。如果您不断看到“no session created”的消息，请检查您的Windows
    10虚拟机，确保Windows Defender的病毒和威胁防护设置仍然关闭。如果仍然卡住，请尝试从头开始重新运行攻击。并且，在未来五年内，Windows有很大的可能性修复`fodhelper`漏洞，那时您将不得不尝试不同的漏洞利用。请访问本书网站[https://www.nostarch.com/go-hck-yourself/](https://www.nostarch.com/go-hck-yourself/)获取更新，或在最新版本的Windows上搜索“Metasploit权限提升”。
- en: 'Enter `getsystem` in Meterpreter to get system-level access to the Windows
    10 VM:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Meterpreter中输入`getsystem`以获取Windows 10虚拟机的系统级访问权限：
- en: '[PRE10]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Check that you’ve got system-level access by entering `getuid`:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入`getuid`检查是否获得了系统级访问权限：
- en: '[PRE11]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Meterpreter will respond that your user ID is `NT` `Authority\System`, indicating
    that you now have system-level access.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Meterpreter会回应您的用户ID是`NT` `Authority\System`，这表明您现在拥有系统级访问权限。
- en: Stealing Password Hashes with Mimikatz
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Mimikatz窃取密码哈希
- en: Now that we have system-level privileges, we’re ready to steal the password
    hashes. We’ll use Mimikatz, a hacking tool that can access Windows passwords from
    multiple locations, including directly from the memory of the computer while it’s
    running. The Mimikatz module in Metasploit is named `kiwi` (the New Zealander
    who wrote Mimikatz, Benjamin Delpy, calls himself the Gentil Kiwi).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经获得了系统级别的权限，我们就准备好窃取密码哈希了。我们将使用 Mimikatz，一种能够从多个位置访问 Windows 密码的黑客工具，包括在计算机运行时直接从内存中访问密码。Metasploit
    中的 Mimikatz 模块名为`kiwi`（编写 Mimikatz 的新西兰人 Benjamin Delpy 自称为 Gentil Kiwi）。
- en: 'Enter `use` `kiwi` at the Meterpreter prompt to load the Mimikatz tools:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Meterpreter 提示符下输入`use` `kiwi`以加载 Mimikatz 工具：
- en: '[PRE12]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The Mimikatz startup screen will appear in your Meterpreter console. Now we
    can dump the password hashes for all users from the Windows 10 VM, like so:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Mimikatz 启动屏幕将在你的 Meterpreter 控制台中显示。现在我们可以像这样转储 Windows 10 虚拟机中所有用户的密码哈希：
- en: '[PRE13]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Mimikatz will answer by listing all the users and Windows password hashes it
    can find:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Mimikatz 会通过列出它可以找到的所有用户和 Windows 密码哈希来回应：
- en: '[PRE14]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The password hashes use the *New Technology LAN Manager (NTLM) format*, one
    of the ways that Windows computers store login information, including password
    hashes. We’ll select this type of password hash later when we crack the passwords.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 密码哈希使用*新技术局域网管理器（NTLM）格式*，这是 Windows 计算机存储登录信息的一种方式，包括密码哈希。我们稍后会选择这种密码哈希格式来破解密码。
- en: To crack the password hashes, we need to gather them in a text document. Highlight
    the usernames and NTLM hashes, right-click the selection, and choose **Copy**
    (you can’t use ctrl-C to copy in the Metasploit console; that’s the command to
    quit or close a running process in a terminal window).
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了破解密码哈希，我们需要将其收集到一个文本文件中。高亮选择用户名和 NTLM 哈希，右键点击选择内容，并选择**复制**（在 Metasploit 控制台中不能使用
    ctrl-C 复制；这是退出或关闭终端窗口中运行的进程的命令）。
- en: Open the Mousepad Text Editor by clicking the Kali menu button and selecting
    **Favorites**▶**Text Editor**. Press ctrl-V to paste the text you copied from
    Meterpreter into Mousepad.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 Kali 菜单按钮并选择**收藏夹**▶**文本编辑器**来打开 Mousepad 文本编辑器。按 ctrl-V 将从 Meterpreter
    复制的文本粘贴到 Mousepad 中。
- en: Click **File**▶**New** to open a second Mousepad window. Copy and paste just
    the usernames and password hashes into this new document in the format `username``:``hash`,
    with one username and hash value per line, separated by a colon, as shown in [Figure
    7-1](#figure7-1). Make sure there are no extra spaces.![f07001](image_fi/502000c07/f07001.png)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**文件**▶**新建**以打开第二个 Mousepad 窗口。将用户名和密码哈希值按`用户名``:``哈希`的格式复制并粘贴到这个新文档中，每行一个用户名和哈希值，用冒号分隔，如[图7-1](#figure7-1)所示。确保没有额外的空格。![f07001](image_fi/502000c07/f07001.png)
- en: 'Figure 7-1: Copying and pasting the usernames and NTLM hash values into a new
    text file'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7-1：将用户名和 NTLM 哈希值复制并粘贴到新的文本文件中
- en: Skip any users without hash values or any of the accounts Windows created, like
    sshd, Guest, and DefaultAccount. You’re interested only in real user and admin
    accounts, like IEUser, Administrator, and the user accounts you created earlier
    in the chapter.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 跳过没有哈希值的用户或任何 Windows 创建的帐户，如sshd、Guest和DefaultAccount。你只需要关注真正的用户和管理员帐户，例如IEUser、Administrator以及你在本章早些时候创建的用户帐户。
- en: Save the file as *Windows_hashes.txt* in your *Documents* folder.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为*Windows_hashes.txt*，存放在你的*文档*文件夹中。
- en: Cracking Passwords
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 破解密码
- en: Now that we have a document of usernames and password hashes stolen from the
    Windows VM, we’re ready to begin cracking the passwords. Hackers take a few different
    approaches to password cracking. A *dictionary attack* uses a list of common passwords,
    hashing each one to see if it matches the hash you’re trying to crack. Dictionary
    attacks are fast, but they only help with relatively simple passwords. A *brute-force
    attack* systematically tries every combination of characters to find even highly
    complex passwords up to a certain length. This makes brute-force attacks very
    thorough, but extremely slow. A *mask attack* is a special type of brute-force
    attack we use when we know part of the password and have to brute-force just a
    few characters.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了从 Windows 虚拟机窃取的用户名和密码哈希文档，我们可以开始破解密码了。黑客有几种不同的密码破解方法。*字典攻击*使用常见密码的列表，逐一哈希每个密码，看看是否与要破解的哈希匹配。字典攻击速度很快，但仅对相对简单的密码有效。*暴力破解攻击*系统地尝试每一种字符组合，即使是高度复杂的密码也能破解，直到达到一定长度。这使得暴力破解攻击非常彻底，但极为缓慢。*掩码攻击*是一种特殊的暴力破解攻击，当我们知道密码的一部分并且只需要暴力破解几个字符时，会使用这种攻击。
- en: We’ll try out a few approaches to password cracking. As you’ll see, the internet
    and Kali Linux have resources that make short work of cracking passwords. First,
    you’ll search a free online password database to crack common password hashes.
    Then, you’ll use one of Kali’s many password-cracking tools, John the Ripper,
    to crack more of the hashes. You’ll start with a password dictionary attack for
    the easier passwords, and you’ll finish with a mask attack.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将尝试几种密码破解方法。正如你所看到的，互联网和 Kali Linux 都有资源可以轻松破解密码。首先，你将搜索一个免费的在线密码数据库来破解常见的密码哈希。然后，你将使用
    Kali 中的许多密码破解工具之一——John the Ripper，来破解更多的哈希。你将首先使用字典攻击来破解较简单的密码，然后使用掩码攻击完成破解。
- en: Free Online Password Databases
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 免费在线密码数据库
- en: Hashes.com is a web service that allows you to search for passwords in a database
    of *billions* of previously cracked hashes. Every time you hash a particular password,
    you get the same hash, so the database can store each password with its hash.
    When you search for a hash, the database returns the unencrypted password (if
    that password is in the database).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Hashes.com 是一个网络服务，允许你在一个包含 *数十亿* 已破解哈希的数据库中搜索密码。每次你对一个特定的密码进行哈希处理时，你都会得到相同的哈希值，因此数据库可以存储每个密码及其哈希值。当你搜索哈希时，数据库会返回未加密的密码（如果该密码存在于数据库中）。
- en: In your Kali VM, open the Firefox browser and go to [https://hashes.com/decrypt/hash/](https://hashes.com/decrypt/hash/).
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 Kali 虚拟机中，打开 Firefox 浏览器并访问 [https://hashes.com/decrypt/hash/](https://hashes.com/decrypt/hash/)。
- en: Paste the usernames and password hashes from your *Windows_hashes.txt* file
    into the Hashes text box. Then remove the usernames so that only the hashes appear
    in the box, as shown in [Figure 7-2](#figure7-2).
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将来自 *Windows_hashes.txt* 文件的用户名和密码哈希粘贴到 Hashes 文本框中。然后删除用户名，只保留哈希值，如 [图 7-2](#figure7-2)
    所示。
- en: 'Click **Submit & Search** to search the Hashes.com database. After a few moments,
    you should see a list of cracked passwords:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **提交并搜索** 以搜索 Hashes.com 数据库。片刻之后，你应该会看到一份已破解密码的列表：
- en: '[PRE15]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![f07002](image_fi/502000c07/f07002.png)'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![f07002](image_fi/502000c07/f07002.png)'
- en: 'Figure 7-2: Hashes.com takes your NTLM hashes as input and outputs any cracked
    passwords it finds in its database.'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7-2：Hashes.com 接收你的 NTLM 哈希作为输入，并输出它在数据库中找到的任何已破解密码。
- en: Hashes.com found five of the passwords! Because it keeps adding new passwords
    to its database, it may be able to crack more of the simple passwords we will
    use over the course of this book.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Hashes.com 找到了五个密码！由于它不断向数据库中添加新密码，它可能能够破解我们在本书中使用的更多简单密码。
- en: We’ve been able to recover at least five passwords from our Windows VM using
    a free online lookup tool—and an attacker may need only *one* username and password
    to be able to hack into a network, company, or government agency. That’s why it’s
    important for *every user* in an organization to choose longer, harder-to-guess
    passwords.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经通过一个免费的在线查找工具从我们的 Windows 虚拟机中恢复了至少五个密码——攻击者可能只需要 *一个* 用户名和密码就能入侵网络、公司或政府机构。这就是为什么组织中的
    *每个用户* 都应该选择更长、更难猜测的密码。
- en: John the Ripper
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: John the Ripper
- en: John the Ripper, often abbreviated to JtR or simply John, is one of the oldest
    tools for cracking passwords; it’s been over 20 years since the first version
    of John was released. John is included in Kali Linux under the Kali menu button’s
    05 - Password Attacks menu.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: John the Ripper，通常缩写为 JtR 或简直接称为 John，是最古老的密码破解工具之一；自从第一版 John 发布已经超过 20 年。John
    被包含在 Kali Linux 中，位于 Kali 菜单下的 05 - 密码攻击菜单中。
- en: 'John runs from the command line terminal, but there’s another version of John,
    called Johnny, with a graphical user interface (GUI) that’s easier to work with.
    Johnny isn’t included in the most recent versions of Kali. To install it, open
    a new terminal window and type the following two commands:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: John 运行于命令行终端，但还有一个版本的 John，叫做 Johnny，具有更易操作的图形用户界面（GUI）。Johnny 并未包含在 Kali 的最新版本中。要安装它，请打开一个新的终端窗口并输入以下两个命令：
- en: '[PRE16]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You may have to enter your password (`kali`) after the first command. After
    installation, Johnny will usually appear on the 05 - Password Attacks menu below
    John, but you can also run it from the terminal by typing `johnny`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在输入第一个命令后，你可能需要输入你的密码（`kali`）。安装完成后，Johnny 通常会出现在 05 - 密码攻击菜单中，但你也可以通过输入 `johnny`
    在终端中运行它。
- en: We’ll use two methods in Johnny to crack more of our stolen Windows passwords.
    We’ll try a dictionary attack to crack common passwords and a mask attack to crack
    passwords with variations. Everything you do in Johnny can also be done from the
    terminal with John; after you use Johnny, you can look up commands for John and
    try them to understand the overall process.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Johnny中的两种方法来破解更多被盗的Windows密码。我们将尝试字典攻击来破解常见密码，并使用掩码攻击来破解具有变化的密码。你在Johnny中做的每一项操作，也可以通过终端中的John来完成；在使用Johnny之后，你可以查找John的命令并尝试它们，理解整个过程。
- en: A Dictionary Attack
  id: totrans-94
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 字典攻击
- en: We’ll begin by trying a dictionary attack. Also called a *wordlist attack*,
    a *dictionary attack* tests a list of words against the hashes we’re trying to
    crack. John the Ripper will hash each password in a long list of common passwords
    we provide, comparing each hash value to our Windows hashes. If it finds a match,
    we’ve cracked that password.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先尝试字典攻击。字典攻击，也叫*字典攻击*，是通过将我们要破解的哈希与提供的常见密码列表中的每个密码进行比对。如果找到了匹配项，我们就破解了该密码。
- en: Kali has several built-in wordlists, including the RockYou wordlist. RockYou
    was a company that lost 32 million users’ passwords in a famous 2009 breach involving
    a poorly protected web application. The list of plaintext passwords exposed by
    RockYou is still one of the best free wordlists for checking the security of a
    password.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Kali包含几个内置的字典文件，包括RockYou字典。RockYou是一家公司，在2009年因一个保护不力的Web应用程序而泄露了3200万个用户的密码。这份由RockYou泄露的明文密码列表仍然是检查密码安全性的最佳免费字典之一。
- en: 'To access the RockYou wordlist, enter the following command in the terminal
    window:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要访问RockYou字典文件，在终端窗口中输入以下命令：
- en: '[PRE17]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This command will extract the wordlist as *rockyou.txt* in the */usr/share/wordlists*
    folder so that it can be used as a dictionary in John and Johnny.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该命令将提取单词列表并保存为*rockyou.txt*文件，放置在*/usr/share/wordlists*文件夹中，以便在John和Johnny中作为字典使用。
- en: Open Johnny by clicking the Kali menu button and selecting **05 - Password Attacks**▶**johnny**.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击Kali菜单按钮并选择**05 - 密码攻击**▶**johnny**来打开Johnny。
- en: Click **Open password file**▶**Open password file (PASSWD format)**. Find the
    *Windows_hashes.txt* file we created earlier, as shown in [Figure 7-3](#figure7-3),
    and select it to load the password hash file.![f07003](image_fi/502000c07/f07003.png)
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**打开密码文件**▶**打开密码文件（PASSWD格式）**。找到我们之前创建的*Windows_hashes.txt*文件，如[图7-3](#figure7-3)所示，并选择它以加载密码哈希文件。![f07003](image_fi/502000c07/f07003.png)
- en: 'Figure 7-3: Opening the *Windows_hashes.txt* password file in Johnny'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7-3：在Johnny中打开*Windows_hashes.txt*密码文件
- en: 'Click **Options** on the left in Johnny and then click the **Wordlist** tab
    under Attack mode in the Options window. Type `/usr/share/wordlists/rockyou.txt`
    into the Wordlist file: text box, as shown in [Figure 7-4](#figure7-4).![f07004](image_fi/502000c07/f07004.png)'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Johnny中点击左侧的**选项**，然后在选项窗口中的攻击模式下点击**字典**选项卡。在“字典文件:”文本框中输入`/usr/share/wordlists/rockyou.txt`，如[图7-4](#figure7-4)所示。![f07004](image_fi/502000c07/f07004.png)
- en: 'Figure 7-4: Loading the *rockyou.txt* wordlist through Johnny'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7-4：通过Johnny加载*rockyou.txt*字典文件
- en: 'Still in the Options window, under Session details, select **NT** from the
    Current hash format: drop-down list, as shown in [Figure 7-5](#figure7-5). This
    tells Johnny that the password hashes are in NTLM format.![f07005](image_fi/502000c07/f07005.png)'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仍在选项窗口中，在会话详情下，从当前哈希格式：下拉列表中选择**NT**，如[图7-5](#figure7-5)所示。这告诉Johnny，密码哈希采用NTLM格式。![f07005](image_fi/502000c07/f07005.png)
- en: 'Figure 7-5: Choosing *NT* as the input password hash format'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7-5：选择*NT*作为输入密码哈希格式
- en: Click **Passwords** on the left and then click **Start new attack** at the top.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧的**密码**，然后点击顶部的**开始新攻击**。
- en: Almost instantly, Johnny will display several cracked passwords, as shown in
    [Figure 7-6](#figure7-6). (If you don’t see any, make sure you changed the current
    hash format to NT in step 5.)
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎瞬间，Johnny将显示几个破解的密码，如[图7-6](#figure7-6)所示。（如果没有显示，请确保在步骤5中已将当前哈希格式更改为NT。）
- en: '![f07006](image_fi/502000c07/f07006.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![f07006](image_fi/502000c07/f07006.png)'
- en: 'Figure 7-6: It takes Johnny almost no time to crack five or six passwords using
    the hashes we captured.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-6：Johnny几乎不费时间就使用我们捕获的哈希值破解了五六个密码。
- en: It took us a few minutes to capture the password hashes, but less than a second
    to crack the first five or six passwords using a dictionary attack with the RockYou
    wordlist. That’s all the work a malicious hacker needs to do to get your passwords
    if you’using simple one- or two-word passwords with just a few numbers and symbols.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们花了几分钟来捕获密码哈希，但用了不到一秒钟的时间，就通过使用 RockYou 字典进行字典攻击破解了前五六个密码。这就是恶意黑客需要做的全部工作，如果你使用的是简单的一到两个单词密码，并加上一些数字和符号的话。
- en: The RockYou wordlist contained several of the passwords we set up for our users.
    The other passwords were complex enough that they didn’t appear in the list. Let’s
    see how to crack one or two more passwords using another option in Johnny—a mask
    attack.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: RockYou 字典中包含了我们为用户设置的多个密码。其他一些密码复杂到没有出现在该字典列表中。让我们看看如何使用 Johnny 中的另一种选项——掩码攻击，破解一两个密码。
- en: A Mask Attack
  id: totrans-113
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 掩码攻击
- en: A *mask attack* starts with partial information, like an old password, and adds
    characters to try cracking similar passwords. There’s a good chance that you or
    someone you know is reusing an old password by adding digits or symbols to the
    end, like *badpassword20!*. This behavior is more common than you’d think, and
    it makes many passwords susceptible to mask attacks.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '*掩码攻击* 从部分信息开始，比如一个旧密码，并通过添加字符来尝试破解类似的密码。你或你认识的人很有可能通过在旧密码后添加数字或符号来重用密码，比如
    *badpassword20!*。这种行为比你想象的更为常见，这使得许多密码容易受到掩码攻击。'
- en: 'Mask attacks are also effective if an attacker gains access to a fragment of
    someone’s password. Imagine Kara, one of our Windows users, has a job at CatCo
    Worldwide Media. While passing by Kara’s desk, a snoopy co-worker sees a sticky
    note Kara has thrown in the trash. It’s torn, but it looks like it might have
    part of a password written on it: *SuperGir* (see [Figure 7-7](#figure7-7)).'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果攻击者获得了某人密码的一部分，掩码攻击同样有效。想象一下 Kara，我们的 Windows 用户之一，在 CatCo Worldwide Media
    工作。一天，在经过 Kara 的桌子时，一个爱打听的同事看到 Kara 丢弃在垃圾桶里的便签。虽然它被撕破了，但看起来上面写着她密码的一部分：*SuperGir*（见
    [图 7-7](#figure7-7)）。
- en: Social engineers call this *dumpster diving*—literally looking through someone’s
    trash for useful information, like bank statements, credit card offers, or passwords
    scribbled on the back of an envelope or on a sticky note like this one.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 社会工程师称这种行为为 *垃圾桶翻找*——字面意思就是在某人垃圾中寻找有用的信息，比如银行对账单、信用卡优惠或写在信封背面或便签上的密码。
- en: '![f07007](image_fi/502000c07/f07007.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![f07007](image_fi/502000c07/f07007.png)'
- en: 'Figure 7-7: Kara’s torn sticky note with what looks like part of her password'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-7：Kara 撕破的便签，上面似乎写着她密码的一部分
- en: In Johnny, we can add wildcard characters to the end of *SuperGir* to try to
    guess what the rest of Kara’s password might be. A *wildcard* is a placeholder
    that can be replaced by any one of a group of letters, numbers, or symbols. We
    can use the wildcard characters *?u* for uppercase letters, ?l for lowercase letters,
    *?d* for digits (0–9), *?s* for special symbols, or *?a* for all printable characters
    (letters, numbers, punctuation, and special characters).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Johnny 中，我们可以在 *SuperGir* 后面添加通配符字符，尝试猜测 Kara 的密码的其余部分是什么。*通配符* 是一个占位符，可以被字母、数字或符号中的任何一个替代。我们可以使用通配符字符
    *?u* 代表大写字母，?l 代表小写字母，*?d* 代表数字（0–9），*?s* 代表特殊符号，或者 *?a* 代表所有可打印字符（字母、数字、标点符号和特殊字符）。
- en: 'We can use the part of the password that we know (*SuperGir*), plus some wildcard
    characters, to create a mask. A *mask* decreases the number of password combinations
    we have to try by filling in the characters that we know already (in this case,
    the first eight characters: *SuperGir*). We don’t know whether Kara’s password
    ends in numbers, letters, or special characters based on the sticky note, so let’s
    use a mask of *SuperGir?a* to start.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用我们已知的密码部分（*SuperGir*），加上一些通配符字符，来创建一个掩码。*掩码* 通过填入我们已经知道的字符（在这个例子中是前八个字符：*SuperGir*），减少我们需要尝试的密码组合数量。我们不知道
    Kara 的密码是否以数字、字母或特殊字符结尾，所以我们可以用 *SuperGir?a* 作为掩码来开始。
- en: 'In Johnny, click **Options** on the left, click the **Mask** tab, and enter
    `SuperGir?a` into the Mask: text box.'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在 Johnny 中，点击左侧的 **Options**，点击 **Mask** 标签，并在 Mask: 文本框中输入 `SuperGir?a`。'
- en: Click **Start new attack** at the top. Then, to see if Kara’s password was cracked,
    click **Passwords** on the left. You should see that a single wildcard character
    after SuperGir wasn’t able to crack the password.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部的 **Start new attack**。然后，点击左侧的 **Passwords**，查看是否破解了 Kara 的密码。你应该会看到，SuperGir
    后面的单个通配符字符并未能够破解密码。
- en: Go back to the **Mask** tab, enter two wildcard characters, `SuperGir?a?a`,
    and try it again.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回**掩码**标签页，输入两个通配符字符，`SuperGir?a?a`，然后再次尝试。
- en: Still nothing? Enter a third wildcard character, `SuperGir?a?a?a`, as shown
    in [Figure 7-8](#figure7-8). Then click **Start new attack** again.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还是没有结果？输入第三个通配符字符，`SuperGir?a?a?a`，如[图 7-8](#figure7-8)所示。然后再次点击**开始新攻击**。
- en: '![f07008](image_fi/502000c07/f07008.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![f07008](image_fi/502000c07/f07008.png)'
- en: 'Figure 7-8: Using a mask attack—putting wildcard characters after the partial
    password found on a sticky note—to crack Kara’s password'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-8：使用掩码攻击——在便签上找到的部分密码后添加通配符字符——来破解卡拉的密码
- en: This time, the progress bar at the bottom of the window in [Figure 7-8](#figure7-8)
    should change to show that Johnny was able to crack one additional password. Click
    **Passwords** again. Now, next to *kara*, you’ll see her password, *SuperGirl7!*,
    as shown in [Figure 7-9](#figure7-9).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，窗口底部的进度条在[图 7-8](#figure7-8)中应该会改变，显示约翰尼成功破解了一个额外的密码。再次点击**密码**。现在，在*kara*旁边，你将看到她的密码*SuperGirl7!*，如[图
    7-9](#figure7-9)所示。
- en: '![f07009](image_fi/502000c07/f07009.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![f07009](image_fi/502000c07/f07009.png)'
- en: 'Figure 7-9: The password mask `SuperGir?a?a?a` was able to crack Kara’s password
    (*SuperGirl7!*) in less than a second!'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-9：密码掩码`SuperGir?a?a?a`成功破解了卡拉的密码(*SuperGirl7!*)，不到一秒钟！
- en: Even though we had only part of Kara’s password, we were able to use a mask
    attack to guess her complete password. It took Johnny less than a second to try
    the thousands of possibilities, from *SuperGir000* to *SuperGirl7!*, one by one.
    That means that if you reuse a password by changing only numbers and symbols at
    the beginning, middle, or end, a hacker who finds one of your old passwords can
    guess your current password in seconds using Johnny or a similar tool.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们只有卡拉密码的一部分，我们仍然可以使用掩码攻击来猜测她的完整密码。约翰尼只用了不到一秒钟就尝试了成千上万种可能性，从*SuperGir000*到*SuperGirl7!*，一一尝试。这意味着，如果你只是改变密码的数字和符号（例如在开头、中间或结尾），一个黑客如果发现你以前的密码，就可以在几秒钟内使用约翰尼或类似的工具猜出你当前的密码。
- en: You can also use a mask attack for Peter’s password. Enter a few wildcard characters—starting
    with `SpidermanRu?a`, then `SpidermanRu?a?a`, and so on—until you crack the full
    password. The last round may take five or six minutes to run, as each added character
    increases the complexity exponentially (3 wildcards take less than a second, 4
    wildcards take three to four seconds, 5 wildcards take five to six minutes, 6
    wildcards take almost nine hours, and 14 wildcards would take thousands of years!).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用掩码攻击来破解彼得的密码。输入一些通配符字符——从`SpidermanRu?a`开始，然后是`SpidermanRu?a?a`，以此类推，直到破解完整密码。最后一轮可能需要五到六分钟，因为每增加一个字符，破解的复杂度会呈指数级增加（3个通配符不到一秒，4个通配符需要三到四秒，5个通配符需要五到六分钟，6个通配符需要近九小时，而14个通配符则需要几千年！）。
- en: The exponential increase in the time it takes to crack longer passwords is exactly
    why everyone should use long passwords. No matter how many years we run Johnny,
    we’re not likely to crack our long passphrase, the final password you created.
    Long passwords are one of the tricks we can use to keep hackers out of our accounts.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 破解更长密码所需时间的指数增长正是为什么每个人都应该使用长密码的原因。无论我们运行约翰尼多少年，都不太可能破解我们设置的长密码，即你创建的最终密码。长密码是我们可以用来防止黑客进入账户的技巧之一。
- en: Using Safer Passwords
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用更安全的密码
- en: You can make your passwords too hard for even pros to crack with just a couple
    of changes. First, generally the longer a password is, the safer it will be. To
    make a strong passphrase, pick four or more random, unrelated words and string
    them together. To make your passphrase almost uncrackable, add a few numbers or
    special characters.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过几个小变化让密码变得如此复杂，以至于连专业人士也难以破解。首先，一般来说，密码越长，它就越安全。要创建一个强密码短语，可以选择四个或更多随机、无关的单词并将它们串联在一起。为了让密码短语几乎无法破解，可以添加一些数字或特殊字符。
- en: In addition to the regular keyboard special characters like *!*, *@*, *#*, and
    *$*, you can add a special character from a language or alphabet different from
    your own. Even if you use a shorter password instead of a passphrase, adding a
    special character from another language can make it much harder to crack.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 除了常规键盘特殊字符如 *!*、*@*、*#* 和 *$*，你还可以添加来自不同语言或字母表的特殊字符。即使你使用的是较短的密码，而不是一个密码短语，添加来自其他语言的特殊字符也能让密码变得更难破解。
- en: Let’s look at how to do this in different operating systems.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看如何在不同操作系统中实现这一操作。
- en: Windows Hold down the ALT key while typing numbers on the numeric keypad and
    then release it. For example, hold down the ALT key while typing 0214 on your
    numeric keypad; when you release the alt key, the character `Ö` will appear (a
    capital *O* with an umlaut). Search online for a list of “Windows alt codes” to
    find a character you want to use. Note that some keyboards may require you to
    use the left ALT key specifically. On a laptop without a numeric keypad, you can
    press the Windows key plus the period key (Windows-.) to insert an emoji or other
    symbol.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Windows 上，按住 ALT 键并同时在数字小键盘上输入数字，然后松开 ALT 键。例如，按住 ALT 键并在数字小键盘上输入 0214；当你松开
    ALT 键时，字符 `Ö`（一个带有变音符号的大写 *O*）将会出现。可以在网上搜索“Windows ALT 代码”来查找你想要使用的字符。注意，某些键盘可能需要你专门使用左侧的
    ALT 键。在没有数字小键盘的笔记本上，你可以按 Windows 键加上句点键（Windows-.）来插入表情符号或其他符号。
- en: Linux Press ctrl-shift-U; release (you’ll see an underlined *u* onscreen); enter
    the Unicode hexadecimal value for the character you want, like `d6` (or `00d6`
    for systems that require four digits) for the `Ö` character, and then press the
    spacebar or enter. Search online for “Unicode character codes” to find more options.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Linux 上，按 ctrl-shift-U；松开（屏幕上会看到一个带下划线的 *u*）；输入你想要的字符的 Unicode 十六进制值，例如 `d6`（或者对于需要四个数字的系统，输入
    `00d6`）来得到 `Ö` 字符，然后按空格键或回车键。可以在网上搜索“Unicode 字符代码”来找到更多选项。
- en: macOS Press CONTROL-COMMAND-SPACEBAR to bring up the Character Viewer. Enter
    `u+d6` to show the `Ö` character. To insert the character, either press the down
    arrow to select it and then press ENTER or simply click it with your mouse. The
    same Unicode character codes that work for Linux will work on macOS in the Character
    Viewer; just add `u+` before the hexadecimal code.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 macOS 上，按 CONTROL-COMMAND-SPACEBAR 打开字符查看器。输入 `u+d6` 来显示 `Ö` 字符。要插入该字符，可以按下方向键选择它然后按
    ENTER，或者直接用鼠标点击它。Linux 上的相同 Unicode 字符代码也适用于 macOS 的字符查看器，只需在十六进制代码前加上 `u+`。
- en: iPhone or Android Press and hold the O on the virtual keyboard until a pop-up
    appears with the `Ö` character and other options. You can’t access all Unicode
    characters without installing an app or choosing an alternate keyboard layout,
    but a long press on most vowels and a few consonants will give you enough options
    to make your password stronger.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: iPhone 或 Android：在虚拟键盘上按住字母 O，直到弹出窗口出现 `Ö` 字符和其他选项。你无法在不安装应用或选择备用键盘布局的情况下访问所有
    Unicode 字符，但大多数元音字母和一些辅音字母的长按会为你提供足够的选项，以增强你的密码强度。
- en: Of course, you might not remember more than one or two long passwords with special
    characters like this. A password manager can lessen the burden by setting long,
    random passwords for most of your accounts and safely storing them for you. Additionally,
    you should turn on two-factor authentication whenever it’s offered. With this
    feature, even if an attacker cracks one of your passwords, they may not be able
    to gain access to your account. We’ll look more closely at these tools in Chapter
    11.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你可能无法记住超过一个或两个带有特殊字符的长密码。密码管理器可以减轻负担，通过为大多数账户设置长且随机的密码并安全地保存它们。另外，你应当在提供两步验证的情况下启用它。通过这一功能，即便攻击者破解了你的某个密码，他们也可能无法访问你的账户。我们将在第11章中更详细地介绍这些工具。
- en: The Takeaway
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重点总结
- en: In this chapter, you learned how attackers steal Windows password hashes over
    the web using Mimikatz in Metasploit. Once an attacker has access to your computer
    through malware they’ve tricked you into installing, they can (and often do) look
    around your system for passwords or other sensitive data. Then you saw how hackers
    can easily crack many password hashes with a free online password database or
    a dictionary attack in John the Ripper. You also learned how to crack more complex
    passwords using a mask attack by adding a few wildcard characters to an old or
    incomplete password.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了攻击者如何通过 Mimikatz 和 Metasploit 在网络上窃取 Windows 密码哈希。一旦攻击者通过恶意软件侵入你的计算机，他们就可以（并且通常会）搜索系统中的密码或其他敏感数据。然后你看到了黑客如何通过免费在线密码数据库或在
    John the Ripper 中进行字典攻击轻松破解许多密码哈希。你还学会了如何通过掩码攻击破解更复杂的密码，即在旧密码或不完整密码中添加一些通配符字符。
- en: 'Finally, you learned some techniques to keep yourself safe from the password
    hacks covered in this chapter. Here’s a short summary of dos and don’ts that can
    change your password habits for life:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你学到了一些保护自己免受本章密码攻击的技巧。以下是一些可以终生改变你密码习惯的做与不做的简短总结：
- en: '*Don’t* use the same password across multiple accounts.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*不要*在多个账户之间使用相同的密码。'
- en: '*Don’t* reuse a password by adding numbers or symbols to the end (or middle
    or beginning).'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*不要*通过在密码的末尾（或中间、开头）添加数字或符号来重复使用密码。'
- en: '*Don’t* write passwords down or store them in plaintext documents or spreadsheets.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*不要*将密码写下来，或将其存储在明文文档或电子表格中。'
- en: '*Do* use long passphrases with one or more special characters.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*请*使用包含一个或多个特殊字符的长密码短语。'
- en: '*Do* use a password manager and multifactor authentication.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*请*使用密码管理器和多因素认证。'
- en: These tips will make your online life easier and *much* more secure than the
    average person’s. However, an attacker doesn’t have to access your computer to
    steal your password; they can steal passwords and other information from web applications
    and servers over the internet. In the next chapter, we’ll learn how by hacking
    into a vulnerable web server in our virtual lab.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这些建议将使你的在线生活比普通人更轻松，*也更*安全。然而，攻击者不必访问你的计算机就能窃取密码；他们可以通过互联网从网页应用和服务器中窃取密码和其他信息。在下一章中，我们将学习如何通过攻击一个脆弱的Web服务器，在我们的虚拟实验室中进行实际操作。
- en: First, though, check [Listing 7-2](#listing7-2) to see if you successfully cracked
    the passwords from the beginning of the chapter!
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，首先请查看[清单 7-2](#listing7-2)，看看你是否成功破解了章节开始时的密码！
- en: '[PRE18]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Listing 7-2: Cracked passwords from [Listing 7-1](#listing7-1)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 清单 7-2：来自[清单 7-1](#listing7-1)的破解密码
