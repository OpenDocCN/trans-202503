- en: <samp class="SANS_Dogma_OT_Bold_B_11">APPENDIX</samp>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <samp class="SANS_Dogma_OT_Bold_B_11">COMPRESSING AND INSTALLING ARDUINO LIBRARIES</samp>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../images/opener-img.png)'
  prefs: []
  type: TYPE_IMG
- en: Once you’ve created a new Arduino library, you can store and distribute it by
    saving the library files as a ZIP file. Future users who obtain the ZIP file can
    then easily install the library.
  prefs: []
  type: TYPE_NORMAL
- en: In this appendix, you’ll learn how to make a ZIP file in Windows, macOS, and
    Linux as part of the process of collating Arduino library files for installation.
    You’ll then learn how to install an Arduino library received as a ZIP file into
    the Arduino IDE.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Compressing Files into a ZIP File</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, you’ll learn how to compress custom Arduino library files into
    a ZIP file, which not only enables easy distribution but also puts them in the
    required format for fast installation into the Arduino IDE. Skip to the appropriate
    section for your OS.
  prefs: []
  type: TYPE_NORMAL
- en: This section is based on the example Arduino library called *blinko*. However,
    in your own projects, you’d substitute this with your own library name.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Windows 7 and Newer</samp>
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To create a ZIP file for an Arduino library with Windows, first place the custom
    Arduino library files you want to compress, along with the example sketch (stored
    in its own folder, as are all sketches), in one location. [Figure A-1](#figA-1)
    shows an example of the library files together.
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF THE FOLDER CONTAINING THE ARDUINO LIBRARY FILES READY FOR
    CONVERSION TO A ZIP FILE](../images/figA-1.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-1: Arduino library
    files in the Downloads folder</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: Select all the files, right-click the highlighted files, and select **Compress
    to Zip file**, as shown in [Figure A-2](#figA-2).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF THE PROPERTIES MENU SHOWING THE COMPRESS TO ZIP FILE OPTION](../images/figA-2.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-2: Compressing the
    library files</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: A new file will appear in the folder, with name editing enabled. Change the
    library name to *blinko.zip*, then press ENTER, as shown in [Figure A-3](#figA-3).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF CHANGING THE NAME OF THE LIBRARY ZIP FILE](../images/figA-3.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-3: Changing the name
    of the library ZIP file</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: You now have a library ZIP file that you can easily distribute to others or
    install yourself.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">macOS 10 or Newer</samp>
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To create a ZIP file with macOS, first place the custom Arduino library files
    you want to compress, along with the example sketch (stored in its own folder,
    as are all sketches), in one location. [Figure A-4](#figA-4) shows an example
    of the library files together.
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF THE FOLDER CONTAINING THE ARDUINO LIBRARY FILES READY FOR
    CONVERSION TO A ZIP FILE](../images/figA-4.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-4: The Arduino library
    files in the Downloads folder</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: Select all the files, right-click the files, and select **Compress 4 Items**,
    as shown in [Figure A-5](#figA-5).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF THE PROPERTIES MENU SHOWING THE COMPRESS TO ZIP FILE OPTION](../images/figA-5.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-5: Compressing the
    library files</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: A new file called *Archive.zip* will appear in the folder, as shown in [Figure
    A-6](#figA-6).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF THE LIBRARY ZIP FILE IN THE FINDER WINDOW](../images/figA-6.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-6: The</samp> <samp
    class="SANS_Futura_Std_Book_11">Archive.zip</samp> <samp class="SANS_Futura_Std_Book_Oblique_I_11">file
    in the Downloads folder</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the *Archive.zip* folder and change the name to *blinko.zip*, as shown
    in [Figure A-7](#figA-7).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF THE RENAMED LIBRARY ZIP FILE IN THE FFNDER WINDOW](../images/figA-7.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-7: Renaming</samp>
    <samp class="SANS_Futura_Std_Book_11">Archive.zip</samp> <samp class="SANS_Futura_Std_Book_Oblique_I_11">to</samp>
    <samp class="SANS_Futura_Std_Book_11">blinko.zip</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: You now have a library ZIP file that you can easily distribute to others or
    install yourself.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Ubuntu 20.04 LTS
    and Newer</samp>
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To create a ZIP file with Ubuntu Linux, first place the custom Arduino library
    files you want to compress, along with the example sketch (stored in its own folder,
    as are all sketches), in one location. [Figure A-8](#figA-8) shows an example
    of the library files together.
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF THE FOLDER CONTAINING THE ARDUINO LIBRARY FILES READY FOR
    CONVERSION TO A ZIP FILE](../images/figA-8.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-8: Blinko Arduino
    library files</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: Select all the files, right-click the files, and select **Compress**, as shown
    in [Figure A-9](#figA-9).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF THE PROPERTIES MENU SHOWING THE COMPRESS TO ZIP FILE OPTION](../images/figA-9.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-9: Compressing the
    library files</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: A new window will appear, prompting you for an archive name. Enter *blinko*
    for the name and click the .zip radio button, and then click **Create**, as shown
    in [Figure A-10](#figA-10).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF ENTERING THE NAME OF THE LIBRARY ZIP FILE](../images/figA-10.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-10: Setting the ZIP
    filename</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: Once the compression is complete, you will find your new ZIP file in the same
    folder along with the library files. You now have a library ZIP file that you
    can easily distribute to others or install yourself.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Installing Your New Library</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can now install your library using the ZIP file method. Open the Arduino
    IDE and select **Sketch**➧**Include Library** ![](../images/arr.png) **Add .ZIP
    Library**. A file dialog will open. Navigate to your ZIP file and select it for
    installation.
  prefs: []
  type: TYPE_NORMAL
- en: Once the library has been installed and you’ve restarted the Arduino IDE, you
    will see your library listed when you select **Sketch** ![](../images/arr.png)
    **Include Library**, as shown in [Figure A-11](#figA-11).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF THE ARDUINO IDE’S LIBRARY MENU SHOWING THE INSTALLED BLINKO
    LIBRARY](../images/figA-11.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-11: An Arduino library,
    now available in the IDE</samp>'
  prefs: []
  type: TYPE_NORMAL
- en: You can now easily access the sketch you have installed, such as the *blinko*
    library, by selecting **File** ![](../images/arr.png) **Examples** ![](../images/arr.png)
    **blinko**, as shown in [Figure A-12](#figA-12).
  prefs: []
  type: TYPE_NORMAL
- en: '![A SCREENSHOT OF THE ARDUINO IDE’S LIBRARY EXAMPLE SKETCH MENU SHOWING THE
    INSTALLED BLINKO EXAMPLE](../images/figA-12.png)'
  prefs: []
  type: TYPE_IMG
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure A-12: The Arduino IDE’s
    library example sketch menu showing the blinko example sketch</samp>'
  prefs: []
  type: TYPE_NORMAL
