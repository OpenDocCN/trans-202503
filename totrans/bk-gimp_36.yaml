- en: Appendix F. Batch Processing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At some point, you may want to edit several images simultaneously to, for example,
    convert them from one format to another, change their size, or apply a filter.
    If you want to do the same thing to dozens of images, repeating the process over
    and over would be tedious and time consuming. Thankfully, computers excel at automating
    repetitive processes. Remember: If you’re doing something repetitive on a computer,
    there’s probably a better—and faster—way to do it!'
  prefs: []
  type: TYPE_NORMAL
- en: Automatically applying changes to a series of images, one after another, is
    called *batch processing*. Here, we’ll discuss three ways to transform multiple
    images at the same time. The first one is done from a command line and can be
    used only in rather simple situations. The second one uses a plug-in, but it works
    only for a small set of simple operations. The last one uses an independent application.
  prefs: []
  type: TYPE_NORMAL
- en: F.1 GIMP Batch Mode
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The command line is used for typing textual commands and gives users full access
    to all the capabilities of their operating system. Many graphical interfaces are
    complicated ways to access simple textual commands. To use the command line, you
    open a terminal window in which you type commands. A *terminal* is a text-only
    window in a graphical interface. Type a command, and after you press ![](httpatomoreillycomsourcenostarchimages1453866.png.jpg),
    you get results or answers. Some commands are interactive and ask questions and
    display answers. Others simply execute what you ask.
  prefs: []
  type: TYPE_NORMAL
- en: The capabilities of the command line have a lot to do with the *shell*, the
    interactive program that opens a terminal window in which you type commands in
    GNU/Linux. The shell accepts a command language with many capabilities. Certain
    shell commands can be used to apply the same process to several files (in our
    case, image files), including a command to call another command over and over,
    on all the files in a folder, or on a subset of files using just one command with
    a *wildcard*. Wildcards are symbols that can stand in for one or more characters.
  prefs: []
  type: TYPE_NORMAL
- en: Mac OS X users enjoy exactly the same capabilities because Mac is a Unix-based
    system. With Windows, however, the command language is rather poor, so the usefulness
    of the command line is more limited than in GNU/Linux or on a Mac.
  prefs: []
  type: TYPE_NORMAL
- en: When you work with GIMP from the command line, you use options and arguments.
    The *options* specify actions or parameters. The *arguments* are the names of
    the files to which the actions are applied.
  prefs: []
  type: TYPE_NORMAL
- en: 'When using GIMP in batch mode from the command line, you need to specify the
    following options: `-b` for batch processing and `-i` for running without the
    user interface. The `-b` option needs an argument, which is the command to execute.
    A complete call has the following form:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The command is written using the Script-Fu language, presented in [Scheme](ch21s03.html#scheme
    "Scheme"). If you want to write a short script on the command line one line at
    a time, you can use the following form instead:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: and then type the script on the following lines.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also define a new Script-Fu function and call it from the command line.
    In this context, the `file-glob` plug-in is useful: Given an encoded pattern that
    specifies the files, it returns the list of filenames matching this pattern. To
    see an example, look at *[http://www.gimp.org/tutorials/Basic_Batch/](http://www.gimp.org/tutorials/Basic_Batch/)*.'
  prefs: []
  type: TYPE_NORMAL
- en: F.2 David’s Batch Processor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Calling GIMP from the command line and controlling it using the Script-Fu language
    might be daunting unless you have some experience in programming. David’s Batch
    Processor, also called DBP, is an alternative for people less inclined to write
    code. For Debian and Ubuntu GNU/Linux distributions, David’s Batch Processor plug-in
    is included in the package called `gimp-plugin-registry`. Otherwise, visit *[http://members.ozemail.com.au/~hodsond/dbp.html](http://members.ozemail.com.au/~hodsond/dbp.html)*
    to download the plug-in. Once it’s installed, you can access the plug-in via **Image:
    Filters > Batch > Batch Process**. Its dialog is shown in [Figure F-1](apfs02.html#dbp_dialogcomma_input_tab
    "Figure F-1. The DBP dialog, Input tab").'
  prefs: []
  type: TYPE_NORMAL
- en: This dialog contains nine tabs. The first one is where you select the files
    to process, the next six tabs are where you specify the various processes to apply
    to these files, the eighth tab is where you change the filenames and specify global
    changes to the images, and the ninth tab is where you specify the final format
    and a few other global parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '![The DBP dialog, Input tab](httpatomoreillycomsourcenostarchimages1457606.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure F-1. The DBP dialog, Input tab
  prefs: []
  type: TYPE_NORMAL
- en: The INPUT tab is fairly self-explanatory. Clicking ADD FILES opens the file
    manager window. You can select several files at the same time by pressing ![](httpatomoreillycomsourcenostarchimages1453844.png.jpg)
    or ![](httpatomoreillycomsourcenostarchimages1453922.png.jpg) when clicking the
    filenames. When you click ADD, all the selected files are added to the list. Once
    the list has files, you can select and remove files or clear the whole list.
  prefs: []
  type: TYPE_NORMAL
- en: The tool dialog is inactive while the file manager window is open, which is
    unusual behavior for a GIMP dialog. After the file manager window is closed, you
    can make adjustments on the tool dialog tabs. On each transformation tab, the
    ENABLE box must be checked for the transformation to be active. The TURN tab ([Figure F-2](apfs02.html#dbp_dialogcomma_turn_tab
    "Figure F-2. The DBP dialog, Turn tab")) lets you rotate the images only by a
    multiple of 90°.
  prefs: []
  type: TYPE_NORMAL
- en: The BLUR tab ([Figure F-3](apfs02.html#dbp_dialogcomma_blur_tab "Figure F-3. The
    DBP dialog, Blur tab")) applies a Gaussian blur with the specified radius.
  prefs: []
  type: TYPE_NORMAL
- en: '![The DBP dialog, Turn tab](httpatomoreillycomsourcenostarchimages1457608.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure F-2. The DBP dialog, Turn tab
  prefs: []
  type: TYPE_NORMAL
- en: '![The DBP dialog, Blur tab](httpatomoreillycomsourcenostarchimages1457610.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure F-3. The DBP dialog, Blur tab
  prefs: []
  type: TYPE_NORMAL
- en: '![The DBP dialog, Colour tab](httpatomoreillycomsourcenostarchimages1457612.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure F-4. The DBP dialog, Colour tab
  prefs: []
  type: TYPE_NORMAL
- en: 'The COLOUR tab ([Figure F-4](apfs02.html#dbp_dialogcomma_colour_tab "Figure F-4. The
    DBP dialog, Colour tab")) transforms the colors in several ways: level equalization;
    adjusting brightness, contrast, and saturation; inverting colors; and converting
    to grayscale. This tab is useful if you want to correct a systematic color distortion
    in a series of photographs, for example.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The RESIZE tab ([Figure F-5](apfs02.html#dbp_dialogcomma_resize_tab "Figure F-5. The
    DBP dialog, Resize tab")) does what its name implies. You can choose between relative
    resizing, where the sliders change by a scaling factor, and absolute resizing,
    where you choose the final width and height. The FIT drop-down menu, shown in
    [Figure F-5](apfs02.html#dbp_dialogcomma_resize_tab "Figure F-5. The DBP dialog,
    Resize tab"), lets you choose how the new dimensions are applied:'
  prefs: []
  type: TYPE_NORMAL
- en: 'EXACTLY: The dimensions chosen are used, regardless of how the aspect changes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'PADDED: The aspect is maintained, and the resulting empty space is filled with
    the background color.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'INSIDE: The aspect is maintained, and the image may be smaller than the specified
    dimensions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![The DBP dialog, Resize tab](httpatomoreillycomsourcenostarchimages1457614.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure F-5. The DBP dialog, Resize tab
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![The DBP dialog, Crop tab](httpatomoreillycomsourcenostarchimages1457616.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure F-6. The DBP dialog, Crop tab
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![The DBP dialog, Sharpen tab](httpatomoreillycomsourcenostarchimages1457618.png.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure F-7. The DBP dialog, Sharpen tab
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'OUTSIDE: Same idea, but the image can be larger than the specified dimensions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The CROP tab ([Figure F-6](apfs02.html#dbp_dialogcomma_crop_tab "Figure F-6. The
    DBP dialog, Crop tab")) is where you crop the images. You can specify the origin
    (top-left corner, for example) of the cropping rectangle, as well as its width
    and height.
  prefs: []
  type: TYPE_NORMAL
- en: 'The SHARPEN tab ([Figure F-7](apfs02.html#dbp_dialogcomma_sharpen_tab "Figure F-7. The
    DBP dialog, Sharpen tab")) works the same as the **Image: Filters > Enhance >
    Unsharp Mask** filter and has the same parameters. See [17.3 The Enhance Filters](ch17s03.html
    "17.3 The Enhance Filters").'
  prefs: []
  type: TYPE_NORMAL
- en: Be careful when using the RENAME tab ([Figure F-8](apfs02.html#dbp_dialogcomma_rename_tab
    "Figure F-8. The DBP dialog, Rename tab"))—it’s easy to accidentally invert your
    file- naming scheme. This tab lets you choose how the new files will be named,
    but it won’t overwrite existing files. Attempts to overwrite the originals are
    ignored.
  prefs: []
  type: TYPE_NORMAL
- en: '![The DBP dialog, Rename tab](httpatomoreillycomsourcenostarchimages1457620.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure F-8. The DBP dialog, Rename tab
  prefs: []
  type: TYPE_NORMAL
- en: 'You can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Choose a target folder (directory) different from the source folder.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Append a prefix or a suffix to all filenames to prevent replacing existing files
    and to label the files with the new characteristics (thumb, gray, improved, etc.).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This tab also lets you make final transformations to the image, depending on
    the output format:'
  prefs: []
  type: TYPE_NORMAL
- en: Flatten the image (merge into one layer).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Convert it to grayscale.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Convert it to indexed mode, with or without dithering, with a specified number
    of colors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that you can convert to both grayscale and indexed mode.
  prefs: []
  type: TYPE_NORMAL
- en: The OUTPUT tab ([Figure F-9](apfs02.html#dbp_dialogcomma_output_tab "Figure F-9. The
    DBP dialog, Output tab")) is mainly used to select the output format and its parameters.
    The available output formats are shown in [Figure F-10](apfs02.html#available_output_formats
    "Figure F-10. Available output formats"), and [Figure F-9](apfs02.html#dbp_dialogcomma_output_tab
    "Figure F-9. The DBP dialog, Output tab") shows the parameters for PNG. For BMP,
    MIFF, PAT, TIFF, and XCF, no parameters are available.
  prefs: []
  type: TYPE_NORMAL
- en: When you’ve selected all the actions you want to perform and set all the parameters,
    click TEST to preview the result for the first picture, or click START and go
    grab a beverage while GIMP processes your images.
  prefs: []
  type: TYPE_NORMAL
- en: '![The DBP dialog, Output tab](httpatomoreillycomsourcenostarchimages1457622.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure F-9. The DBP dialog, Output tab
  prefs: []
  type: TYPE_NORMAL
- en: '![Available output formats](httpatomoreillycomsourcenostarchimages1457624.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure F-10. Available output formats
  prefs: []
  type: TYPE_NORMAL
- en: F.3 ImageMagick
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ImageMagick is a free software project (with an Apache-like license) that supports
    about 100 image formats and format conversions. ImageMagick is also capable of
    doing a number of sophisticated things to images. For more details, check out
    its home page (*[http://www.imagemagick.org/](http://www.imagemagick.org/)*).
  prefs: []
  type: TYPE_NORMAL
- en: Calling ImageMagick
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ImageMagick is normally called from a terminal or command line, but its functionalities
    can also be accessed from other programs. When using it to process many files,
    you’ll find the *filename globbing* facilities of GNU/Linux extremely useful.
    For example, the command
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: converts all the files in the current folder with a `.jpg` suffix to a single
    GIF animation called `animation.gif`. The asterisk is a wildcard, which matches
    any character or string. The Windows command language does not support globbing,
    but ImageMagick adds support, so you can use the same commands in Windows.
  prefs: []
  type: TYPE_NORMAL
- en: ImageMagick contains 10 different programs, the most useful being `convert`,
    which we used in the previous example. Among the myriads of possible usages, we
    describe just a few to give you a taste of this powerful application. These examples
    use GNU/Linux shell notation, but Windows users can refer to the detailed page
    *[http://www.imagemagick.org/Usage/windows/](http://www.imagemagick.org/Usage/windows/)*.
    But this first example is given in both notations.
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose we have a folder with a lot of photographs—called `img001`, `img002`,
    and so on— in TIFF format, and we want to convert all of them to the PNG format.
    The input files do not have a file extension, so we have to tell the `convert`
    command what their format is. We do this with the prefix `tiff:`. With GNU/Linux,
    here is how we write it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: With Windows and the DOS shell, we write it as
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The caret is used to continue the command on the next line.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another solution is to use the `mogrify` command, which does not check whether
    the target files already exist and happily overwrites files when asked. The following
    command would work in both GNU/Linux and Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: But avoiding this command is best because accidentally erasing files is very
    easy.
  prefs: []
  type: TYPE_NORMAL
- en: Building Thumbnails
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of ImageMagick’s main purposes is to generate thumbnails. ImageMagick makes
    generating uniform-looking thumbnails for a whole set of images easy. You can
    use thumbnails on a web page, for example, as links to the actual images. Because
    thumbnails are normally small images, say 200 × 200 at most, generate them in
    GIF format, which compresses well. At this size, the limitation to 256 colors
    is not a problem.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following example generates the thumbnail image `thumbnail.gif` from the
    source image `image.jpg`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The command is written here on four successive lines, but, in fact, you type
    it on one line only.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `-define` option is not necessary, but it may accelerate the process if
    the source image is very large. The JPEG library must enlarge the (compressed)
    image when it loads, and this option sets the approximate size that the image
    is enlarged to. The `-auto-orient` option uses the EXIF information provided by
    the camera and rotates the image if necessary. The `-thumbnail` option sets the
    final dimensions of the thumbnail and can be used to discard any useless information
    from the image, such as comments. The aspect ratio is maintained: The resulting
    thumbnail is 90 pixels high, but its width is 250 pixels or less. Finally, the
    `-unsharp` option is used to sharpen the image because resizing always results
    in a slight blur.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To generate thumbnails for several images at the same time, you could use the
    `mogrify` command, but calling `convert` in a loop is safer. One challenge of
    generating thumbnails from source images is getting thumbnails with names like
    `img0567.jpg.gif`. `mogrify` can solve the problem with its `-format` option.
    If you need to use `convert`, with GNU/Linux you can use the shell capabilities
    for discarding a file extension:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The notation `${i%jpg}gif` discards the `jpg` extension from the filename and
    replaces it with the `gif` extension, which also tells ImageMagick which conversion
    to perform.
  prefs: []
  type: TYPE_NORMAL
- en: Many other additions could be made to the simple example just given. Review
    *[http://www.imagemagick.org/Usage/thumbnails/](http://www.imagemagick.org/Usage/thumbnails/)*.
  prefs: []
  type: TYPE_NORMAL
- en: Labels and Transformations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'ImageMagick can be used to add labels to images:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'In this example, a fixed label with a khaki background is added to the bottom
    center of the image. If you want to label many images, use the following example
    (with the GNU/Linux shell):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Here, the images are labeled with their name minus the extension, and the labeled
    image name is prefixed with `labeled-`.
  prefs: []
  type: TYPE_NORMAL
- en: Use ImageMagick to perform many of the transformations that GIMP does but on
    lots of images consecutively. For example, decide which transformations you want
    to perform, as well as the parameter values. Then you can use the `convert` command
    with many options and parameters to reproduce the GIMP transformation over and
    over. Test it on the first image. Then embed this command in a loop, start it,
    and have a beverage while the computer works.
  prefs: []
  type: TYPE_NORMAL
- en: Once again, the ImageMagick website is an invaluable source of really sophisticated
    examples.
  prefs: []
  type: TYPE_NORMAL
