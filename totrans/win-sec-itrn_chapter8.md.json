["```\nPS> **$path = \"\\BaseNamedObjects\\ABC\\QRS\\XYZ\\OBJ\"**\n❶ PS> **$os = New-NtMutant $path -CreateDirectories**\n❷ PS> **Enable-NtTokenPrivilege SeChangeNotifyPrivilege**\nPS> **Test-NtObject $path**\nTrue\n\nPS> **$sd = New-NtSecurityDescriptor -EmptyDacl**\n❸ PS> **Set-NtSecurityDescriptor \"\\BaseNamedObjects\\ABC\\QRS\" $sd Dacl**\nPS> **Test-NtObject $path**\n❹ True\n\n❺ PS> **Disable-NtTokenPrivilege SeChangeNotifyPrivilege**\nPS> **Test-NtObject $path**\nFalse\n\n❻ PS> **Test-NtObject \"OBJ\" -Root $os[1]**\nTrue \n```", "```\nfunction Get-FastTraverseCheck {\n    Param(\n      ❶ $TokenFlags,\n        $SecurityDescriptor,\n        $AccessMask\n    )\n\n  ❷ if ($SecurityDescriptor.DaclNull) {\n        return $true\n    }\n  ❸ if (($TokenFlags -band \"IsFiltered, IsRestricted\") -ne 0) {\n        return $false\n    }\n    $sid = Get-Ntsid -KnownSid World\n    foreach($ace in $SecurityDescriptor.Dacl) {\n      ❹ if ($ace.IsInheritedOnly -or !$ace.IsAccessGranted($AccessMask)) {\n            continue\n        }\n      ❺ if ($ace.IsDeniedAce) {\n            return $false\n        }\n      ❻ if ($ace.IsAllowedAce -and $ace.Sid -eq $sid) {\n            return $true\n        }\n    }\n  ❼ return $false\n} \n```", "```\nPS> **$token = Get-NtToken -Pseudo -Primary**\nPS> **$token.Flags**\nVirtualizeAllowed, IsFiltered, NotLow\n\nPS> **$token.ElevationType**\nLimited \n```", "```\nPS> **$sd = New-NtSecurityDescriptor -EmptyDacl**\n❶ PS> **$m = New-NtMutant -Access ModifyState, ReadControl -SecurityDescriptor $sd**\n❷ PS> **Use-NtObject($m2 = Copy-NtObject -Object $m) {**\n    **$m2.GrantedAccess**\n**}**\nModifyState, ReadControl\n\nPS> **$mask = Get-NtAccessMask -MutantAccess ModifyState**\n❸ PS> **Use-NtObject($m2 = Copy-NtObject -Object $m -DesiredAccessMask $mask) {**\n    **$m2.GrantedAccess**\n**}**\nModifyState\n\n❹ PS> **Use-NtObject($m2 = Copy-NtObject -Object $m -DesiredAccess GenericAll) {**\n    **$m2.GrantedAccess**\n**}**\nCopy-NtObject : (0xC0000022) - {Access Denied}\nA process has requested access to an object, ... \n```", "```\nPS> **$m = New-NtMutant -Access ModifyState**\nPS> **Use-NtObject($m2 = Copy-NtObject -Object $m -DesiredAccess GenericAll) {**\n    **$m2.GrantedAccess**\n**}**\nModifyState, Delete, ReadControl, WriteDac, WriteOwner, Synchronize\n\nPS> **Use-NtObject($m2 = Copy-NtObject -Object $m -NoRightsUpgrade) {**\n    **Use-NtObject($m3 = Copy-NtObject -Object $m2 -DesiredAccess GenericAll) {}**\n**}**\nCopy-NtObject : (0xC0000022) - {Access Denied}\nA process has requested access to an object, ... \n```", "```\nPS> **$type = New-NtType -Name \"Sandbox\" -GenericRead 0x20000** \n**-GenericAll 0x1F0001**\nPS> **$sd = New-NtSecurityDescriptor -NullDacl -Owner \"SY\" -Group \"SY\"** \n**-Type $type**\nPS> **Set-NtSecurityDescriptorIntegrityLevel $sd Medium -Policy NoReadUp**\nPS> **Get-NtGrantedAccess -SecurityDescriptor $sd -Access 0x20000 -PassResult**\nStatus               Granted Access Privileges\n------               -------------- ----------\nSTATUS_SUCCESS       GenericRead    NONE\n\nPS> **Use-NtObject($token = Get-NtToken -Duplicate -IntegrityLevel Low) {**\n    **Get-NtGrantedAccess -SecurityDescriptor $sd -Access 0x20000**\n**-Token $token -PassResult**\n**}**\nStatus               Granted Access Privileges\n------               -------------- ----------\nSTATUS_ACCESS_DENIED None           NONE \n```", "```\nPS> **Invoke-NtToken -Current -IntegrityLevel Low {**\n    **Get-NtHandle -ProcessId $pid**\n**}**\nGet-NtHandle : (0xC0000022) - {Access Denied}\nA process has requested access to an object, ... \n```", "```\nPS> **Use-NtObject($token = Get-NtToken) {**\n    **$token.IsSandbox**\n**}**\nFalse\n\nPS> **Use-NtObject($token = Get-NtToken -Duplicate -IntegrityLevel Low) {**\n    **$token.IsSandbox**\n**}**\nTrue \n```", "```\nPS> **Use-NtObject($ps = Get-NtProcess -FilterScript {$_.IsSandboxToken}) {**\n **$ps | ForEach-Object {Write-Host \"$($_.ProcessId) $($_.Name)\"}**\n**}**\n7128 StartMenuExperienceHost.exe\n7584 TextInputHost.exe\n4928 SearchApp.exe\n7732 ShellExperienceHost.exe\n1072 Microsoft.Photos.exe\n7992 YourPhone.exe \n```", "```\nPS> **Get-Command Get-Accessible* | Format-Wide**\nGet-AccessibleAlpcPort                       Get-AccessibleDevice\nGet-AccessibleEventTrace                     Get-AccessibleFile\nGet-AccessibleHandle                         Get-AccessibleKey\nGet-AccessibleNamedPipe                      Get-AccessibleObject\nGet-AccessibleProcess                        Get-AccessibleScheduledTask\nGet-AccessibleService                        Get-AccessibleToken\nGet-AccessibleWindowStation                  Get-AccessibleWnf \n```", "```\nPS> **Get-AccessibleObject -Path \"\\\"**\nTokenId Access                     Name\n------- ------                     ----\nC5856B9 GenericExecute|GenericRead    \\ \n```", "```\nPS> **Get-AccessibleObject -Path \\ | Format-NtSecurityDescriptor -Summary**\n<Owner> : BUILTIN\\Administrators\n<Group> : NT AUTHORITY\\SYSTEM\n<DACL>\nEveryone: (Allowed)(None)(Query|Traverse|ReadControl)\nNT AUTHORITY\\SYSTEM: (Allowed)(None)(Full Access)\nBUILTIN\\Administrators: (Allowed)(None)(Full Access)\nNT AUTHORITY\\RESTRICTED: (Allowed)(None)(Query|Traverse|ReadControl) \n```", "```\nPS> **Get-AccessibleObject -Path \"\\\" -Recurse**\nWARNING: Couldn't access \\PendingRenameMutex - Status: STATUS_ACCESS_DENIED\nWARNING: Couldn't access \\ObjectTypes - Status: STATUS_ACCESS_DENIED\n`--snip--` \n```", "```\nPS> **Get-AccessibleObject -Path \\ -ProcessName explorer.exe -Recurse** \n```", "```\nPS> **Get-AccessibleObject -Path \\ -TypeFilter Mutant -Access GenericAll -Recurse** \n```", "```\nPS> **$key = Get-NtKey HKLM\\Software -Win32Path -Access ReadControl**\nPS> **Get-NtGrantedAccess -Object $key**\nQueryValue, EnumerateSubKeys, Notify, ReadControl \n```", "```\n❶ PS> **$access = Get-NtAccessMask -SectionAccess MapWrite -AsGenericAccess**\n❷ PS> **$objs = Use-NtObject($token = Get-NtToken -Duplicate** \n**-IntegrityLevel Low) {**\n  ❸ **Get-AccessibleObject -Win32Path \"\\\" -Recurse -Token $token**\n**-TypeFilter Section -Access $access**\n**}**\nPS> **$objs | ForEach-Object {**\n  ❹ **Use-NtObject($sect = Get-NtSection -Path $_.Name) {**\n      **Use-NtObject($map = Add-NtSection $sect -Protection ReadWrite** \n**-ViewSize 4096) {**\n         **Write-Host \"$($sect.FullPath)\"**\n         **Out-HexDump -ShowHeader -ShowAscii -HideRepeating -Buffer $map |** \n**Out-Host**\n      **}**\n    **}**\n**}**\n\\Sessions\\1\\BaseNamedObjects\\windows_ie_global_counters\n00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F  - 0123456789ABCDEF\n-------------------------------------------------------------------\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  - ................\n-> REPEATED 1 LINES\n00 00 00 00 00 00 00 00 00 00 00 00 1C 00 00 00  - ................\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  - ................\n`--snip--` \n```"]