- en: '**INDEX**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**A**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: About text field, Trainer generator dialog, [9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: accessing memory
  prefs: []
  type: TYPE_NORMAL
- en: in injected DLL, [145–146](ch07.xhtml#page_145)
  prefs: []
  type: TYPE_NORMAL
- en: for writing and reading, [122–124](ch06.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: Action Message Format (AMF), [169](ch08.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: actor functions, [216](ch10.xhtml#page_216)
  prefs: []
  type: TYPE_NORMAL
- en: actuation, [216](ch10.xhtml#page_216), [223](ch11.xhtml#page_223)
  prefs: []
  type: TYPE_NORMAL
- en: Address column
  prefs: []
  type: TYPE_NORMAL
- en: Event Properties dialog, [55](ch03.xhtml#page_55)
  prefs: []
  type: TYPE_NORMAL
- en: OllyDbg disassembler pane, [27](ch02.xhtml#page_27)
  prefs: []
  type: TYPE_NORMAL
- en: addresses, memory. *See* memory addresses
  prefs: []
  type: TYPE_NORMAL
- en: Address Space Layout Randomization (ASLR), [128](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: bypassing in injected DLL, [146–147](ch07.xhtml#page_146)
  prefs: []
  type: TYPE_NORMAL
- en: bypassing in production, [128–130](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: disabling for bot development, [128](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: in Process Explorer, [56](ch03.xhtml#page_56), [57](ch03.xhtml#page_57)
  prefs: []
  type: TYPE_NORMAL
- en: Adobe AIR hooking, [169](ch08.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: '`decode()` function, [172–173](ch08.xhtml#page_172), [174–175](ch08.xhtml#page_174)'
  prefs: []
  type: TYPE_NORMAL
- en: '`encode()` function, [171–172](ch08.xhtml#page_171), [174–175](ch08.xhtml#page_174)'
  prefs: []
  type: TYPE_NORMAL
- en: placing hooks, [173–175](ch08.xhtml#page_173)
  prefs: []
  type: TYPE_NORMAL
- en: RTMP, assessing, [169–170](ch08.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: '*Adobe AIR.dll*, [173–175](ch08.xhtml#page_173)'
  prefs: []
  type: TYPE_NORMAL
- en: airlog tool, [170](ch08.xhtml#page_170)
  prefs: []
  type: TYPE_NORMAL
- en: alignment
  prefs: []
  type: TYPE_NORMAL
- en: in numeric data, [68](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: of variables, in data structures, [70–71](ch04.xhtml#page_70)
  prefs: []
  type: TYPE_NORMAL
- en: ambient light, adding, [190–192](ch09.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: AMF (Action Message Format), [169](ch08.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: anti-cheat software, [245–246](ch12.xhtml#page_245)
  prefs: []
  type: TYPE_NORMAL
- en: anti-cheat rootkit, defeating, [261–262](ch12.xhtml#page_261)
  prefs: []
  type: TYPE_NORMAL
- en: binary validation, defeating, [259–261](ch12.xhtml#page_259)
  prefs: []
  type: TYPE_NORMAL
- en: bot footprints, managing, [250–256](ch12.xhtml#page_250)
  prefs: []
  type: TYPE_NORMAL
- en: ESEA Anti-Cheat toolkit, [247](ch12.xhtml#page_247)
  prefs: []
  type: TYPE_NORMAL
- en: GameGuard toolkit, [248–249](ch12.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: heuristics, defeating, [262–263](ch12.xhtml#page_262)
  prefs: []
  type: TYPE_NORMAL
- en: PunkBuster toolkit, [246–247](ch12.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: screenshots, defeating, [258](ch12.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: signature-based detection, evading, [256–257](ch12.xhtml#page_256)
  prefs: []
  type: TYPE_NORMAL
- en: VAC toolkit, [247–248](ch12.xhtml#page_247)
  prefs: []
  type: TYPE_NORMAL
- en: Warden toolkit, [249–250](ch12.xhtml#page_249)
  prefs: []
  type: TYPE_NORMAL
- en: anti-crowd-control hacks, [218](ch10.xhtml#page_218)
  prefs: []
  type: TYPE_NORMAL
- en: anti-debugging techniques, [251](ch12.xhtml#page_251), [255–256](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: arithmetic instructions, [90–92](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: A* search algorithm, [234](ch11.xhtml#page_234)
  prefs: []
  type: TYPE_NORMAL
- en: cost, [233](ch11.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: creating node, [234–237](ch11.xhtml#page_234)
  prefs: []
  type: TYPE_NORMAL
- en: creating path list, [239–240](ch11.xhtml#page_239)
  prefs: []
  type: TYPE_NORMAL
- en: score, [234](ch11.xhtml#page_234)
  prefs: []
  type: TYPE_NORMAL
- en: uses for, [240–241](ch11.xhtml#page_240)
  prefs: []
  type: TYPE_NORMAL
- en: writing search function, [237–239](ch11.xhtml#page_237)
  prefs: []
  type: TYPE_NORMAL
- en: ASLR. *See* Address Space Layout Randomization (ASLR)
  prefs: []
  type: TYPE_NORMAL
- en: Asm2Clipboard plug-in, [42](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: assembly code
  prefs: []
  type: TYPE_NORMAL
- en: copying, [42](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: tracing, [32–33](ch02.xhtml#page_32)
  prefs: []
  type: TYPE_NORMAL
- en: viewing and navigating in OllyDbg, [27–29](ch02.xhtml#page_27)
  prefs: []
  type: TYPE_NORMAL
- en: assembly language, [78](ch04.xhtml#page_78). *See also* x86 assembly language
  prefs: []
  type: TYPE_NORMAL
- en: assembly patterns, searching for, [19–21](ch01.xhtml#page_19)
  prefs: []
  type: TYPE_NORMAL
- en: '`AStarNode` class, [234–236](ch11.xhtml#page_234)'
  prefs: []
  type: TYPE_NORMAL
- en: AT&T syntax, [80](ch04.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: autocombo, [219](ch10.xhtml#page_219)
  prefs: []
  type: TYPE_NORMAL
- en: autododge, [219](ch10.xhtml#page_219)
  prefs: []
  type: TYPE_NORMAL
- en: autokite bots, [244](ch11.xhtml#page_244)
  prefs: []
  type: TYPE_NORMAL
- en: automatic healer, [218](ch10.xhtml#page_218), [225–228](ch11.xhtml#page_225),
    [230–232](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: autonomous bots, [221–222](ch11.xhtml#page_221). *See also* control theory;
    state machines
  prefs: []
  type: TYPE_NORMAL
- en: cavebots, [241–243](ch11.xhtml#page_241)
  prefs: []
  type: TYPE_NORMAL
- en: complex hypothetical state machine, [228–230](ch11.xhtml#page_228)
  prefs: []
  type: TYPE_NORMAL
- en: error correction, [230–232](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: healer state machine, [225–228](ch11.xhtml#page_225)
  prefs: []
  type: TYPE_NORMAL
- en: pathfinding with search algorithms, [232–234](ch11.xhtml#page_232)
  prefs: []
  type: TYPE_NORMAL
- en: warbots, [243–244](ch11.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: autoreload, [219](ch10.xhtml#page_219)
  prefs: []
  type: TYPE_NORMAL
- en: autosnipe bots, [244](ch11.xhtml#page_244)
  prefs: []
  type: TYPE_NORMAL
- en: autowall bots, [244](ch11.xhtml#page_244)
  prefs: []
  type: TYPE_NORMAL
- en: '**B**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ban waves, [246](ch12.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: Bigger Than scan type, Cheat Engine, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: binary arithmetic instructions, [90](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: binary validation, [248](ch12.xhtml#page_248), [259–261](ch12.xhtml#page_259)
  prefs: []
  type: TYPE_NORMAL
- en: bits, EFLAGS register, [84](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: Blue Screen of Death (BSOD), [256](ch12.xhtml#page_256)
  prefs: []
  type: TYPE_NORMAL
- en: bots. *See also* autonomous bots; extrasensory perception (ESP) hacks
  prefs: []
  type: TYPE_NORMAL
- en: anti-crowd-control hacks, [218](ch10.xhtml#page_218)
  prefs: []
  type: TYPE_NORMAL
- en: anti-debugging techniques, [251](ch12.xhtml#page_251), [255–256](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: automatic healer, [218](ch10.xhtml#page_218), [225–228](ch11.xhtml#page_225),
    [230–232](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: detecting debuggers, [251–254](ch12.xhtml#page_251)
  prefs: []
  type: TYPE_NORMAL
- en: detecting visual cues, [205–206](ch10.xhtml#page_205)
  prefs: []
  type: TYPE_NORMAL
- en: disabling ASLR for development, [128](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: emulating keyboard, [211–215](ch10.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: footprints, managing, [250–256](ch12.xhtml#page_250)
  prefs: []
  type: TYPE_NORMAL
- en: game updates, dealing with, [101–104](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: intercepting network traffic, [206–211](ch10.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: monitoring memory, [204–205](ch10.xhtml#page_204)
  prefs: []
  type: TYPE_NORMAL
- en: obfuscation, [251](ch12.xhtml#page_251), [255–256](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: sending packets, [215–217](ch10.xhtml#page_215)
  prefs: []
  type: TYPE_NORMAL
- en: spell trainers, [219](ch10.xhtml#page_219)
  prefs: []
  type: TYPE_NORMAL
- en: branching, [92–94](ch04.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: breakpoints, [30](ch02.xhtml#page_30), [34](ch02.xhtml#page_34), [38](ch02.xhtml#page_38)
  prefs: []
  type: TYPE_NORMAL
- en: Breakpoints window, OllyDbg, [26](ch02.xhtml#page_26)
  prefs: []
  type: TYPE_NORMAL
- en: BSOD (Blue Screen of Death), [256](ch12.xhtml#page_256)
  prefs: []
  type: TYPE_NORMAL
- en: '`BYTE` data type, [67](ch04.xhtml#page_67)'
  prefs: []
  type: TYPE_NORMAL
- en: bytes, machine code, [78](ch04.xhtml#page_78)
  prefs: []
  type: TYPE_NORMAL
- en: '**C**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: C++, [66](ch04.xhtml#page_66)
  prefs: []
  type: TYPE_NORMAL
- en: callee, [94–95](ch04.xhtml#page_94)
  prefs: []
  type: TYPE_NORMAL
- en: caller, [94–95](ch04.xhtml#page_94)
  prefs: []
  type: TYPE_NORMAL
- en: '`callHook()` function, [154](ch08.xhtml#page_154)'
  prefs: []
  type: TYPE_NORMAL
- en: call hooking, [153–156](ch08.xhtml#page_153). *See also* Adobe AIR hooking
  prefs: []
  type: TYPE_NORMAL
- en: calling conventions, [95](ch04.xhtml#page_95)
  prefs: []
  type: TYPE_NORMAL
- en: for call hooks, [155](ch08.xhtml#page_155)
  prefs: []
  type: TYPE_NORMAL
- en: '`__cdecl`, [95](ch04.xhtml#page_95), [155](ch08.xhtml#page_155)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__fastcall`, [95](ch04.xhtml#page_95)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__stdcall`, [95](ch04.xhtml#page_95)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__thiscall`, [95](ch04.xhtml#page_95), [217](ch10.xhtml#page_217)'
  prefs: []
  type: TYPE_NORMAL
- en: for trampoline functions, [168](ch08.xhtml#page_168)
  prefs: []
  type: TYPE_NORMAL
- en: for VF table hooks, [156–158](ch08.xhtml#page_156)
  prefs: []
  type: TYPE_NORMAL
- en: '`CALL` instruction, [94–95](ch04.xhtml#page_94)'
  prefs: []
  type: TYPE_NORMAL
- en: call stack
  prefs: []
  type: TYPE_NORMAL
- en: overflow, [255–256](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: viewing, [30](ch02.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: x86 assembly language, [86–88](ch04.xhtml#page_86)
  prefs: []
  type: TYPE_NORMAL
- en: Call stack window, OllyDbg, [26](ch02.xhtml#page_26)
  prefs: []
  type: TYPE_NORMAL
- en: capacity of `std::vector`, [109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: casting spells. *See* spells
  prefs: []
  type: TYPE_NORMAL
- en: cavebots, [241–243](ch11.xhtml#page_241)
  prefs: []
  type: TYPE_NORMAL
- en: '`__cdecl` convention, [95](ch04.xhtml#page_95), [155](ch08.xhtml#page_155)'
  prefs: []
  type: TYPE_NORMAL
- en: Changed Value scan type, Cheat Engine, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: characters. *See also* enemies
  prefs: []
  type: TYPE_NORMAL
- en: health bars, monitoring with bots, [204–205](ch10.xhtml#page_204)
  prefs: []
  type: TYPE_NORMAL
- en: pausing execution when health drops, [39–42](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: player health, finding with OllyDbg, [99–101](ch05.xhtml#page_99)
  prefs: []
  type: TYPE_NORMAL
- en: '`char` data type, [67](ch04.xhtml#page_67)'
  prefs: []
  type: TYPE_NORMAL
- en: Cheat Engine, [3](ch01.xhtml#page_3), [5–6](ch01.xhtml#page_5)
  prefs: []
  type: TYPE_NORMAL
- en: automatically locating string addresses with, [102](ch05.xhtml#page_102)
  prefs: []
  type: TYPE_NORMAL
- en: cheat tables, [7–8](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: correct address, determining, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: first scan, running, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: installing, [4](ch01.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: Lua scripting environment, [18–22](ch01.xhtml#page_18)
  prefs: []
  type: TYPE_NORMAL
- en: memory modification, [8–11](ch01.xhtml#page_8)
  prefs: []
  type: TYPE_NORMAL
- en: next scan, running, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: pointer scanning with, [14–18](ch01.xhtml#page_14)
  prefs: []
  type: TYPE_NORMAL
- en: scan types, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: '`std::list`, determining whether data is stored in, [112–113](ch05.xhtml#page_112)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::map`, determining whether data is stored in, [117](ch05.xhtml#page_117)'
  prefs: []
  type: TYPE_NORMAL
- en: trainer generator, [9–11](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: VF tables, [78](ch04.xhtml#page_78)
  prefs: []
  type: TYPE_NORMAL
- en: zoom factor, finding, [197](ch09.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: cheat tables, Cheat Engine, [7–8](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: Cheat Utility plug-in, [42–43](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: '`CheckRemoteDebuggerPresent()` function, [251](ch12.xhtml#page_251)'
  prefs: []
  type: TYPE_NORMAL
- en: classes, [74–78](ch04.xhtml#page_74)
  prefs: []
  type: TYPE_NORMAL
- en: class instances, [76](ch04.xhtml#page_76)
  prefs: []
  type: TYPE_NORMAL
- en: '`CloseHandle()` function, [122](ch06.xhtml#page_122), [138](ch07.xhtml#page_138)'
  prefs: []
  type: TYPE_NORMAL
- en: closing mutexes, [59–60](ch03.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: '`CMP` instruction, [92](ch04.xhtml#page_92)'
  prefs: []
  type: TYPE_NORMAL
- en: code caves, [134](ch07.xhtml#page_134)
  prefs: []
  type: TYPE_NORMAL
- en: loading DLLs, [143–146](ch07.xhtml#page_143)
  prefs: []
  type: TYPE_NORMAL
- en: thread hijacking, [138–142](ch07.xhtml#page_138)
  prefs: []
  type: TYPE_NORMAL
- en: thread injection, [134–138](ch07.xhtml#page_134)
  prefs: []
  type: TYPE_NORMAL
- en: code injection, [133–134](ch07.xhtml#page_133)
  prefs: []
  type: TYPE_NORMAL
- en: bypassing ASLR in production, [128–130](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: DLLs, [142–146](ch07.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: with thread hijacking, [138–142](ch07.xhtml#page_138)
  prefs: []
  type: TYPE_NORMAL
- en: with thread injection, [134–138](ch07.xhtml#page_134)
  prefs: []
  type: TYPE_NORMAL
- en: code patches, creating, [31–32](ch02.xhtml#page_31)
  prefs: []
  type: TYPE_NORMAL
- en: column configurations, Process Monitor, [51](ch03.xhtml#page_51)
  prefs: []
  type: TYPE_NORMAL
- en: combat, automating, [243–244](ch11.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: command line plug-in, OllyDbg, [43–44](ch02.xhtml#page_43)
  prefs: []
  type: TYPE_NORMAL
- en: command syntax, x86 assembly language, [79–81](ch04.xhtml#page_79)
  prefs: []
  type: TYPE_NORMAL
- en: Comment column, OllyDbg disassembler pane, [28](ch02.xhtml#page_28)
  prefs: []
  type: TYPE_NORMAL
- en: complex hypothetical state machine, [228–230](ch11.xhtml#page_228)
  prefs: []
  type: TYPE_NORMAL
- en: conditional breakpoints, [34](ch02.xhtml#page_34), [38](ch02.xhtml#page_38)
  prefs: []
  type: TYPE_NORMAL
- en: conditional statements, [93](ch04.xhtml#page_93)
  prefs: []
  type: TYPE_NORMAL
- en: constant ratio of health, adjusting for, [230–231](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: control-critical routines, timing, [254](ch12.xhtml#page_254)
  prefs: []
  type: TYPE_NORMAL
- en: control flow hacks, [31](ch02.xhtml#page_31)
  prefs: []
  type: TYPE_NORMAL
- en: control flow manipulation, [149–150](ch08.xhtml#page_149). *See also* Adobe
    AIR hooking; Direct3D hooking
  prefs: []
  type: TYPE_NORMAL
- en: call hooking, [153–156](ch08.xhtml#page_153)
  prefs: []
  type: TYPE_NORMAL
- en: IAT hooking, [160–165](ch08.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: jump hooking, [165–169](ch08.xhtml#page_165)
  prefs: []
  type: TYPE_NORMAL
- en: NOPing, [150–152](ch08.xhtml#page_150)
  prefs: []
  type: TYPE_NORMAL
- en: VF table hooking, [156–160](ch08.xhtml#page_156)
  prefs: []
  type: TYPE_NORMAL
- en: control theory, [222](ch11.xhtml#page_222)
  prefs: []
  type: TYPE_NORMAL
- en: combining with state machines, [225](ch11.xhtml#page_225)
  prefs: []
  type: TYPE_NORMAL
- en: complex hypothetical state machine, [228–230](ch11.xhtml#page_228)
  prefs: []
  type: TYPE_NORMAL
- en: error correction, [230–232](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: healer state machine, [225–228](ch11.xhtml#page_225)
  prefs: []
  type: TYPE_NORMAL
- en: control windows, OllyDbg, [25–26](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: cooldowns, displaying enemy, [200–201](ch09.xhtml#page_200)
  prefs: []
  type: TYPE_NORMAL
- en: copying assembly code, [42](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: copy-on-write protection, [126](ch06.xhtml#page_126)
  prefs: []
  type: TYPE_NORMAL
- en: corpses, bot behavior toward, [229](ch11.xhtml#page_229), [240](ch11.xhtml#page_240)
  prefs: []
  type: TYPE_NORMAL
- en: correct address, determining in Cheat Engine, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: CPU window, OllyDbg, [26–30](ch02.xhtml#page_26), [40](ch02.xhtml#page_40)
  prefs: []
  type: TYPE_NORMAL
- en: crashing debuggers, [255](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: '`CreateRemoteThread()` function, [129](ch06.xhtml#page_129), [130](ch06.xhtml#page_130),
    [134](ch07.xhtml#page_134), [138](ch07.xhtml#page_138)'
  prefs: []
  type: TYPE_NORMAL
- en: '`CreateToolhelp32Snapshot()` function, [120](ch06.xhtml#page_120), [141](ch07.xhtml#page_141)'
  prefs: []
  type: TYPE_NORMAL
- en: creature data, knowing structure behind, [106–107](ch05.xhtml#page_106)
  prefs: []
  type: TYPE_NORMAL
- en: critical game information, displaying, [198–201](ch09.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: crowd-control attacks, [218](ch10.xhtml#page_218)
  prefs: []
  type: TYPE_NORMAL
- en: cryptographic functions, hooking, [170](ch08.xhtml#page_170)
  prefs: []
  type: TYPE_NORMAL
- en: CS register, [85](ch04.xhtml#page_85)
  prefs: []
  type: TYPE_NORMAL
- en: C-style operators, OllyDbg, [34–35](ch02.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: custom behaviors for cavebots, scripting, [243](ch11.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: '**D**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: dark environments, lighting up, [190–192](ch09.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: data modification instructions, [89](ch04.xhtml#page_89)
  prefs: []
  type: TYPE_NORMAL
- en: data structures, [71–73](ch04.xhtml#page_71)
  prefs: []
  type: TYPE_NORMAL
- en: data types, [66](ch04.xhtml#page_66)
  prefs: []
  type: TYPE_NORMAL
- en: classes and VF tables, [74–78](ch04.xhtml#page_74)
  prefs: []
  type: TYPE_NORMAL
- en: numeric data, [67–69](ch04.xhtml#page_67)
  prefs: []
  type: TYPE_NORMAL
- en: OllyDbg, [36](ch02.xhtml#page_36)
  prefs: []
  type: TYPE_NORMAL
- en: string data, [69–71](ch04.xhtml#page_69)
  prefs: []
  type: TYPE_NORMAL
- en: unions, [73–74](ch04.xhtml#page_73)
  prefs: []
  type: TYPE_NORMAL
- en: '`DBG_RIPEXCEPTION` handlers, checking for, [253](ch12.xhtml#page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: debugging. *See also* OllyDbg
  prefs: []
  type: TYPE_NORMAL
- en: anti-debugging techniques, [255–256](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: debug drivers, checking for, [254](ch12.xhtml#page_254)
  prefs: []
  type: TYPE_NORMAL
- en: debug strings, printing, [253](ch12.xhtml#page_253)
  prefs: []
  type: TYPE_NORMAL
- en: detecting debuggers, [251–254](ch12.xhtml#page_251)
  prefs: []
  type: TYPE_NORMAL
- en: Process Monitor, [52–53](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: '`__declspec(naked)` convention, [168](ch08.xhtml#page_168)'
  prefs: []
  type: TYPE_NORMAL
- en: '`decode()` function, hooking, [172–173](ch08.xhtml#page_172), [174–175](ch08.xhtml#page_174)'
  prefs: []
  type: TYPE_NORMAL
- en: Decreased Value By scan type, Cheat Engine, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: Decreased Value scan type, Cheat Engine, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: dependencies, DLL, [145](ch07.xhtml#page_145)
  prefs: []
  type: TYPE_NORMAL
- en: dependency loading, [160](ch08.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: depositor, [242](ch11.xhtml#page_242)
  prefs: []
  type: TYPE_NORMAL
- en: destination operand, [80](ch04.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: detection, avoiding. *See* anti-cheat software
  prefs: []
  type: TYPE_NORMAL
- en: '`device->SetRenderState()` function, [192](ch09.xhtml#page_192)'
  prefs: []
  type: TYPE_NORMAL
- en: Dijkstra’s algorithm, [233–234](ch11.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: Direct3D [9](ch01.xhtml#page_9), [176](ch08.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: Direct3D hooking, [175–176](ch08.xhtml#page_175). *See also* extrasensory perception
    (ESP) hacks
  prefs: []
  type: TYPE_NORMAL
- en: detecting visual cues in games, [205–206](ch10.xhtml#page_205)
  prefs: []
  type: TYPE_NORMAL
- en: drawing loop, [176–177](ch08.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: finding devices, [177–181](ch08.xhtml#page_177)
  prefs: []
  type: TYPE_NORMAL
- en: optional fixes for stability, [184](ch08.xhtml#page_184)
  prefs: []
  type: TYPE_NORMAL
- en: writing hook for `EndScene()`, [182–183](ch08.xhtml#page_182)
  prefs: []
  type: TYPE_NORMAL
- en: writing hook for `Reset()`, [183–184](ch08.xhtml#page_183)
  prefs: []
  type: TYPE_NORMAL
- en: directional lighthacks, [190–191](ch09.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: disabling ASLR, [128](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: disassembler pane, OllyDbg, [27–29](ch02.xhtml#page_27), [42](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: Disassembly column, OllyDbg disassembler pane, [28](ch02.xhtml#page_28)
  prefs: []
  type: TYPE_NORMAL
- en: '`dispatchPacket()` function, [210](ch10.xhtml#page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: display base, [27](ch02.xhtml#page_27)
  prefs: []
  type: TYPE_NORMAL
- en: DLL (dynamic link library), injecting, [142–146](ch07.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: '`DllMain()` entry point, [144–145](ch07.xhtml#page_144)'
  prefs: []
  type: TYPE_NORMAL
- en: DLLs option, Process Explorer pane, [57](ch03.xhtml#page_57)
  prefs: []
  type: TYPE_NORMAL
- en: Domain Name System (DNS) cache scans, [248](ch12.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: DOS header, [160–161](ch08.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: '`DrawIndexedPrimitive()` function, [194](ch09.xhtml#page_194), [195](ch09.xhtml#page_195),
    [196](ch09.xhtml#page_196), [200](ch09.xhtml#page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: drawing loop, Direct3D, [176–177](ch08.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: DS register, [85](ch04.xhtml#page_85)
  prefs: []
  type: TYPE_NORMAL
- en: dump pane, OllyDbg, [29–30](ch02.xhtml#page_29)
  prefs: []
  type: TYPE_NORMAL
- en: '`DWORD` data type, [67](ch04.xhtml#page_67), [145–146](ch07.xhtml#page_145)'
  prefs: []
  type: TYPE_NORMAL
- en: dynamically allocated memory, [6](ch01.xhtml#page_6), [11](ch01.xhtml#page_11),
    [12](ch01.xhtml#page_12)
  prefs: []
  type: TYPE_NORMAL
- en: dynamic link library (DLL), injecting, [142–146](ch07.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: dynamic lure, [242–243](ch11.xhtml#page_242)
  prefs: []
  type: TYPE_NORMAL
- en: dynamic structures, [105](ch05.xhtml#page_105)
  prefs: []
  type: TYPE_NORMAL
- en: '`std::list` class, [110–113](ch05.xhtml#page_110)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::map` class, [114–118](ch05.xhtml#page_114)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::string` class, [105–108](ch05.xhtml#page_105)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::vector` class, [108–110](ch05.xhtml#page_108)'
  prefs: []
  type: TYPE_NORMAL
- en: '**E**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: EAX register, [81](ch04.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: EBP register, [83](ch04.xhtml#page_83)
  prefs: []
  type: TYPE_NORMAL
- en: EBX register, [82](ch04.xhtml#page_82)
  prefs: []
  type: TYPE_NORMAL
- en: ECX register, [82](ch04.xhtml#page_82), [157](ch08.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: EDI register, [83](ch04.xhtml#page_83)
  prefs: []
  type: TYPE_NORMAL
- en: EDX register, [82](ch04.xhtml#page_82)
  prefs: []
  type: TYPE_NORMAL
- en: EFLAGS register, [84](ch04.xhtml#page_84), [92](ch04.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: EIP register, [83](ch04.xhtml#page_83), [139](ch07.xhtml#page_139)
  prefs: []
  type: TYPE_NORMAL
- en: emulating keyboard, [211–215](ch10.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: '`enableLightHackDirectional()` function, [190–191](ch09.xhtml#page_190)'
  prefs: []
  type: TYPE_NORMAL
- en: '`encode()` function, hooking, [171–172](ch08.xhtml#page_171), [174–175](ch08.xhtml#page_174)'
  prefs: []
  type: TYPE_NORMAL
- en: '`EndScene()` function'
  prefs: []
  type: TYPE_NORMAL
- en: jump hooking, [178–181](ch08.xhtml#page_178)
  prefs: []
  type: TYPE_NORMAL
- en: stability of, [184](ch08.xhtml#page_184)
  prefs: []
  type: TYPE_NORMAL
- en: writing hook for, [182–183](ch08.xhtml#page_182)
  prefs: []
  type: TYPE_NORMAL
- en: '`endSceneTrampoline()` function, [181](ch08.xhtml#page_181)'
  prefs: []
  type: TYPE_NORMAL
- en: enemies. *See also* extrasensory perception (ESP) hacks
  prefs: []
  type: TYPE_NORMAL
- en: cooldowns, displaying, [200–201](ch09.xhtml#page_200)
  prefs: []
  type: TYPE_NORMAL
- en: critical game information, displaying, [198–201](ch09.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: predicting movements of, [241](ch11.xhtml#page_241)
  prefs: []
  type: TYPE_NORMAL
- en: texture, changing, [195–196](ch09.xhtml#page_195)
  prefs: []
  type: TYPE_NORMAL
- en: entropy, [5](ch01.xhtml#page_5), [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: Environment tab, Process Explorer Properties dialog, [58](ch03.xhtml#page_58)
  prefs: []
  type: TYPE_NORMAL
- en: error correction, [230–232](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: ESEA (E-Sports Entertainment Association), [247](ch12.xhtml#page_247)
  prefs: []
  type: TYPE_NORMAL
- en: ESEA Anti-Cheat toolkit, [247](ch12.xhtml#page_247)
  prefs: []
  type: TYPE_NORMAL
- en: ESI register, [83](ch04.xhtml#page_83)
  prefs: []
  type: TYPE_NORMAL
- en: ESP hacks. *See* extrasensory perception (ESP) hacks
  prefs: []
  type: TYPE_NORMAL
- en: ESP register, [83](ch04.xhtml#page_83)
  prefs: []
  type: TYPE_NORMAL
- en: ES register, [85](ch04.xhtml#page_85)
  prefs: []
  type: TYPE_NORMAL
- en: Euclidean distance heuristic, [236](ch11.xhtml#page_236)
  prefs: []
  type: TYPE_NORMAL
- en: event class filters, Process Monitor, [51–52](ch03.xhtml#page_51)
  prefs: []
  type: TYPE_NORMAL
- en: event log, Process Monitor, [52–53](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: Event Properties dialog, [54–55](ch03.xhtml#page_54)
  prefs: []
  type: TYPE_NORMAL
- en: Exact Value scan type, Cheat Engine, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: exception handlers, checking for, [253](ch12.xhtml#page_253)
  prefs: []
  type: TYPE_NORMAL
- en: execute protection, [125–128](ch06.xhtml#page_125)
  prefs: []
  type: TYPE_NORMAL
- en: Execute until return button, OllyDbg, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: experience-tracking HUD, [200](ch09.xhtml#page_200)
  prefs: []
  type: TYPE_NORMAL
- en: exponent, `float` data type, [68](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: expressions, OllyDbg, [36–37](ch02.xhtml#page_36)
  prefs: []
  type: TYPE_NORMAL
- en: accessing memory contents with, [36](ch02.xhtml#page_36)
  prefs: []
  type: TYPE_NORMAL
- en: elements evaluated by, [35–36](ch02.xhtml#page_35)
  prefs: []
  type: TYPE_NORMAL
- en: expression engine, [33–36](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: pausing execution when health of character drops, [39–42](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: pausing execution when name of player is printed, [37–38](ch02.xhtml#page_37)
  prefs: []
  type: TYPE_NORMAL
- en: supported data types, [36](ch02.xhtml#page_36)
  prefs: []
  type: TYPE_NORMAL
- en: extrasensory perception (ESP) hacks, [189–190](ch09.xhtml#page_189)
  prefs: []
  type: TYPE_NORMAL
- en: background knowledge, [190](ch09.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: floor spy hacks, [201–202](ch09.xhtml#page_201)
  prefs: []
  type: TYPE_NORMAL
- en: HUDs, [198–201](ch09.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: lighthacks, [190–192](ch09.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: loading-screen HUDs, [201](ch09.xhtml#page_201)
  prefs: []
  type: TYPE_NORMAL
- en: pick-phase HUDs, [201](ch09.xhtml#page_201)
  prefs: []
  type: TYPE_NORMAL
- en: range hacks, [201](ch09.xhtml#page_201)
  prefs: []
  type: TYPE_NORMAL
- en: wallhacks, [192–197](ch09.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: zoomhacks, [197–198](ch09.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: '**F**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: false positives, VAC toolkit, [248](ch12.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: '`__fastcall` convention, [95](ch04.xhtml#page_95)'
  prefs: []
  type: TYPE_NORMAL
- en: feedback loop, [222](ch11.xhtml#page_222)
  prefs: []
  type: TYPE_NORMAL
- en: file accesses, inspecting in Process Explorer, [60](ch03.xhtml#page_60)
  prefs: []
  type: TYPE_NORMAL
- en: Filesystem event class filter, [52](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: FILO (first-in-last-out), [86](ch04.xhtml#page_86)
  prefs: []
  type: TYPE_NORMAL
- en: filters, event class, [51–52](ch03.xhtml#page_51)
  prefs: []
  type: TYPE_NORMAL
- en: '`findItem()` function, [116–117](ch05.xhtml#page_116)'
  prefs: []
  type: TYPE_NORMAL
- en: '`findSequence()` function, [175](ch08.xhtml#page_175)'
  prefs: []
  type: TYPE_NORMAL
- en: first-in-last-out (FILO), [86](ch04.xhtml#page_86)
  prefs: []
  type: TYPE_NORMAL
- en: first-person shooter (FPS), [xxii](ch00.xhtml#page_xxii), [246](ch12.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: first scan, running in Cheat Engine, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: flags, process access, [121](ch06.xhtml#page_121)
  prefs: []
  type: TYPE_NORMAL
- en: '`float` data type, [67–68](ch04.xhtml#page_67)'
  prefs: []
  type: TYPE_NORMAL
- en: floor spy hacks, [201–202](ch09.xhtml#page_201)
  prefs: []
  type: TYPE_NORMAL
- en: fog of war, [189](ch09.xhtml#page_189). *See also* extrasensory perception (ESP)
    hacks
  prefs: []
  type: TYPE_NORMAL
- en: footprints, managing, [250–256](ch12.xhtml#page_250)
  prefs: []
  type: TYPE_NORMAL
- en: Found intermodular calls window, OllyDbg, [40](ch02.xhtml#page_40)
  prefs: []
  type: TYPE_NORMAL
- en: FPS (first-person shooter), [xxii](ch00.xhtml#page_xxii), [246](ch12.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: FPU registers, [29](ch02.xhtml#page_29)
  prefs: []
  type: TYPE_NORMAL
- en: Frame column, Event Properties window, [54](ch03.xhtml#page_54)
  prefs: []
  type: TYPE_NORMAL
- en: frames, in Direct3D drawing loop, [176](ch08.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: Freeze interval, Trainer generator dialog, [9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: freezing
  prefs: []
  type: TYPE_NORMAL
- en: addresses, [8](ch01.xhtml#page_8)
  prefs: []
  type: TYPE_NORMAL
- en: main thread, [141](ch07.xhtml#page_141)
  prefs: []
  type: TYPE_NORMAL
- en: frontier, [233](ch11.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: FS register, [85](ch04.xhtml#page_85)
  prefs: []
  type: TYPE_NORMAL
- en: function calls, x86 assembly language, [94–95](ch04.xhtml#page_94)
  prefs: []
  type: TYPE_NORMAL
- en: function flowchart, OllyFlow, [45](ch02.xhtml#page_45)
  prefs: []
  type: TYPE_NORMAL
- en: function names, finding for IAT hooking, [163](ch08.xhtml#page_163)
  prefs: []
  type: TYPE_NORMAL
- en: '**G**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`GameActuators` class, [225](ch11.xhtml#page_225)'
  prefs: []
  type: TYPE_NORMAL
- en: game automation state machine, [223–224](ch11.xhtml#page_223)
  prefs: []
  type: TYPE_NORMAL
- en: GameGuard toolkit, [248–249](ch12.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: game updates, determining new addresses after, [101–104](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: general registers, [81–82](ch04.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: generic memory functions, [123–124](ch06.xhtml#page_123)
  prefs: []
  type: TYPE_NORMAL
- en: '`getAddressforNOP()` function, [152](ch08.xhtml#page_152)'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetAsyncKeyState()` function, [196](ch09.xhtml#page_196)'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetExitCodeThread()` function, [129](ch06.xhtml#page_129)'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetModuleFileName()` function, [144](ch07.xhtml#page_144)'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetModuleHandle()` function, [129–130](ch06.xhtml#page_129), [134](ch07.xhtml#page_134),
    [144](ch07.xhtml#page_144), [146–147](ch07.xhtml#page_146)'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetSystemTimeAsFileTime()` function, [258](ch12.xhtml#page_258)'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetThreadContext()` function, [139](ch07.xhtml#page_139), [142](ch07.xhtml#page_142)'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetTickCount()` function, [254](ch12.xhtml#page_254)'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetWindowThreadProcessId()` function, [120](ch06.xhtml#page_120)'
  prefs: []
  type: TYPE_NORMAL
- en: goal state, [238](ch11.xhtml#page_238)
  prefs: []
  type: TYPE_NORMAL
- en: Go To button, OllyDbg, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: greedy best-first search algorithm, [233–234](ch11.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: GS register, [85](ch04.xhtml#page_85)
  prefs: []
  type: TYPE_NORMAL
- en: guard protection, [126](ch06.xhtml#page_126)
  prefs: []
  type: TYPE_NORMAL
- en: '**H**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: halting problem, [250](ch12.xhtml#page_250)
  prefs: []
  type: TYPE_NORMAL
- en: handle manipulation options, Process Explorer, [59–60](ch03.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: handler functions, [208](ch10.xhtml#page_208)
  prefs: []
  type: TYPE_NORMAL
- en: handles, [56](ch03.xhtml#page_56), [121](ch06.xhtml#page_121), [210–211](ch10.xhtml#page_210),
    [252](ch12.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: Handles option, Process Explorer pane, [57](ch03.xhtml#page_57)
  prefs: []
  type: TYPE_NORMAL
- en: Handles window, OllyDbg, [26](ch02.xhtml#page_26)
  prefs: []
  type: TYPE_NORMAL
- en: hardware breakpoints, checking for, [252–253](ch12.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: hash validation, [247](ch12.xhtml#page_247)
  prefs: []
  type: TYPE_NORMAL
- en: heads-up display (HUD), [198–201](ch09.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: healer state machine, [225–228](ch11.xhtml#page_225), [230–232](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: health of characters
  prefs: []
  type: TYPE_NORMAL
- en: health bars, monitoring with bots, [204–205](ch10.xhtml#page_204)
  prefs: []
  type: TYPE_NORMAL
- en: health bars of enemies, displaying, [150–152](ch08.xhtml#page_150)
  prefs: []
  type: TYPE_NORMAL
- en: pausing execution upon drop in, [39–42](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: heap data, [16](ch01.xhtml#page_16)
  prefs: []
  type: TYPE_NORMAL
- en: heuristics, [233](ch11.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: defeating, [262–263](ch12.xhtml#page_262)
  prefs: []
  type: TYPE_NORMAL
- en: Euclidean distance, [236](ch11.xhtml#page_236)
  prefs: []
  type: TYPE_NORMAL
- en: Manhattan distance, [235](ch11.xhtml#page_235)
  prefs: []
  type: TYPE_NORMAL
- en: Hex dump column, OllyDbg disassembler pane, [27–28](ch02.xhtml#page_27)
  prefs: []
  type: TYPE_NORMAL
- en: hidden data, displaying, [198–201](ch09.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: Hidden option, Process Explorer pane, [57](ch03.xhtml#page_57)
  prefs: []
  type: TYPE_NORMAL
- en: hooking, [42](ch02.xhtml#page_42), [149](ch08.xhtml#page_149), [153](ch08.xhtml#page_153).
    *See also* Adobe AIR hooking; Direct3D hooking; extrasensory perception (ESP)
    hacks
  prefs: []
  type: TYPE_NORMAL
- en: call, [153–156](ch08.xhtml#page_153)
  prefs: []
  type: TYPE_NORMAL
- en: detecting visual cues in games, [205–206](ch10.xhtml#page_205)
  prefs: []
  type: TYPE_NORMAL
- en: IAT, [160–165](ch08.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: intercepting network traffic, [206–211](ch10.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: jump, [165–169](ch08.xhtml#page_165)
  prefs: []
  type: TYPE_NORMAL
- en: prewritten libraries, [169](ch08.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: signature-based detection, evading, [257](ch12.xhtml#page_257)
  prefs: []
  type: TYPE_NORMAL
- en: VF table, [156–160](ch08.xhtml#page_156)
  prefs: []
  type: TYPE_NORMAL
- en: zoomhacks, [198](ch09.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: hotkeys
  prefs: []
  type: TYPE_NORMAL
- en: Patches window, OllyDbg, [32](ch02.xhtml#page_32)
  prefs: []
  type: TYPE_NORMAL
- en: Process Explorer, [57](ch03.xhtml#page_57)
  prefs: []
  type: TYPE_NORMAL
- en: Process Monitor, [52](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: for trainer, setting up, [10](ch01.xhtml#page_10)
  prefs: []
  type: TYPE_NORMAL
- en: hourly experience, finding, [200](ch09.xhtml#page_200)
  prefs: []
  type: TYPE_NORMAL
- en: HTTP (HyperText Transfer Protocol), [169](ch08.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: HTTPS (HTTP Secure), [169](ch08.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: HUD (heads-up display), [198–201](ch09.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: '**I**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: IAT (import address table) hooking, [160–165](ch08.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: '`IDIV` instruction, [92](ch04.xhtml#page_92)'
  prefs: []
  type: TYPE_NORMAL
- en: '`IMAGE_DOS_HEADER` structure, [161](ch08.xhtml#page_161)'
  prefs: []
  type: TYPE_NORMAL
- en: '`IMAGE_IMPORT_DESCRIPTOR` structure, [162](ch08.xhtml#page_162)'
  prefs: []
  type: TYPE_NORMAL
- en: '`IMAGE_OPTIONAL_HEADER` structure, [161](ch08.xhtml#page_161)'
  prefs: []
  type: TYPE_NORMAL
- en: Image tab, Process Explorer Properties dialog, [57–58](ch03.xhtml#page_57)
  prefs: []
  type: TYPE_NORMAL
- en: '`IMAGE_THUNK_DATA` structure, [162](ch08.xhtml#page_162)'
  prefs: []
  type: TYPE_NORMAL
- en: immediate value, [80](ch04.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: import address table (IAT) hooking, [160–165](ch08.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: import descriptors, [162](ch08.xhtml#page_162)
  prefs: []
  type: TYPE_NORMAL
- en: '`IMUL` arithmetic instruction, [90–91](ch04.xhtml#page_90)'
  prefs: []
  type: TYPE_NORMAL
- en: Increased Value By scan type, Cheat Engine, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: Increased Value scan type, Cheat Engine, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: index registers, [83](ch04.xhtml#page_83)
  prefs: []
  type: TYPE_NORMAL
- en: infinite loops, causing unavoidable, [255](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: in-game actions, bots for
  prefs: []
  type: TYPE_NORMAL
- en: anti-crowd-control hacks, [218](ch10.xhtml#page_218)
  prefs: []
  type: TYPE_NORMAL
- en: automatic healer, [218](ch10.xhtml#page_218), [225–228](ch11.xhtml#page_225),
    [230–232](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: emulating keyboard, [211–215](ch10.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: sending packets, [215–217](ch10.xhtml#page_215)
  prefs: []
  type: TYPE_NORMAL
- en: spell trainers, [219](ch10.xhtml#page_219)
  prefs: []
  type: TYPE_NORMAL
- en: in-game events, logging, [50–52](ch03.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: instructions, [79](ch04.xhtml#page_79)
  prefs: []
  type: TYPE_NORMAL
- en: arithmetic, [90–92](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: branching, [92–94](ch04.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: data modification, [89](ch04.xhtml#page_89)
  prefs: []
  type: TYPE_NORMAL
- en: function calls, [94–95](ch04.xhtml#page_94)
  prefs: []
  type: TYPE_NORMAL
- en: jump, [92–94](ch04.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: '`int` data type, [67](ch04.xhtml#page_67)'
  prefs: []
  type: TYPE_NORMAL
- en: Intel syntax, [80](ch04.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: interrupt handlers, checking for, [252](ch12.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: iterator, [120](ch06.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: '**J**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`jumpHookCallback()` function, [168](ch08.xhtml#page_168)'
  prefs: []
  type: TYPE_NORMAL
- en: jump hooking, [165–169](ch08.xhtml#page_165), [178–181](ch08.xhtml#page_178)
  prefs: []
  type: TYPE_NORMAL
- en: jump instructions, x86 assembly language, [92–94](ch04.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: '**K**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: kernel-mode rootkit, GameGuard toolkit, [249](ch12.xhtml#page_249)
  prefs: []
  type: TYPE_NORMAL
- en: keyboard, emulating, [211–215](ch10.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: '`KEYEVENTF_KEYUP` flag, [212](ch10.xhtml#page_212)'
  prefs: []
  type: TYPE_NORMAL
- en: kiting, [222](ch11.xhtml#page_222), [240–241](ch11.xhtml#page_240)
  prefs: []
  type: TYPE_NORMAL
- en: '**L**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: libraries, hooking, [169](ch08.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: lighthacks, [190–192](ch09.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: '`list` class, [110–111](ch05.xhtml#page_110)'
  prefs: []
  type: TYPE_NORMAL
- en: '`listItem` class, [110–111](ch05.xhtml#page_110)'
  prefs: []
  type: TYPE_NORMAL
- en: little-endian ordering, [67](ch04.xhtml#page_67)
  prefs: []
  type: TYPE_NORMAL
- en: loader lock, [144](ch07.xhtml#page_144)
  prefs: []
  type: TYPE_NORMAL
- en: loading-screen HUDs, [201](ch09.xhtml#page_201)
  prefs: []
  type: TYPE_NORMAL
- en: '`LoadLibrary()` function, [143–144](ch07.xhtml#page_143)'
  prefs: []
  type: TYPE_NORMAL
- en: Location column, Event Properties window, [54](ch03.xhtml#page_54)
  prefs: []
  type: TYPE_NORMAL
- en: logging events, Process Monitor, [50–52](ch03.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: Log window, OllyDbg, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: '`long` data type, [67](ch04.xhtml#page_67)'
  prefs: []
  type: TYPE_NORMAL
- en: '`long long` data type, [67](ch04.xhtml#page_67)'
  prefs: []
  type: TYPE_NORMAL
- en: looting, [229](ch11.xhtml#page_229), [241–243](ch11.xhtml#page_241)
  prefs: []
  type: TYPE_NORMAL
- en: Lua scripting environment, Cheat Engine, [18–22](ch01.xhtml#page_18)
  prefs: []
  type: TYPE_NORMAL
- en: lure mode, [242](ch11.xhtml#page_242)
  prefs: []
  type: TYPE_NORMAL
- en: '**M**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: machine code, [78](ch04.xhtml#page_78)
  prefs: []
  type: TYPE_NORMAL
- en: main loop
  prefs: []
  type: TYPE_NORMAL
- en: Direct3D drawing loop, [176–177](ch08.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: syncing with, [164–165](ch08.xhtml#page_164)
  prefs: []
  type: TYPE_NORMAL
- en: mana, avoiding wasted, [219](ch10.xhtml#page_219)
  prefs: []
  type: TYPE_NORMAL
- en: Manhattan distance heuristic, [235](ch11.xhtml#page_235)
  prefs: []
  type: TYPE_NORMAL
- en: mantissa, `float` data type, [68](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: massively multiplayer online role-playing games (MMORPGs), [xxi–xxii](ch00.xhtml#page_xxi),
    [198](ch09.xhtml#page_198), [248](ch12.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: massive online battle arena (MOBA), [xxii](ch00.xhtml#page_xxii), [189](ch09.xhtml#page_189),
    [197](ch09.xhtml#page_197), [201](ch09.xhtml#page_201), [206](ch10.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: '`memcpy()` function, [136](ch07.xhtml#page_136)'
  prefs: []
  type: TYPE_NORMAL
- en: memory, [65–66](ch04.xhtml#page_65)
  prefs: []
  type: TYPE_NORMAL
- en: classes and VF tables, [74–78](ch04.xhtml#page_74)
  prefs: []
  type: TYPE_NORMAL
- en: data structures, [71–73](ch04.xhtml#page_71)
  prefs: []
  type: TYPE_NORMAL
- en: numeric data, [67–69](ch04.xhtml#page_67)
  prefs: []
  type: TYPE_NORMAL
- en: string data, [69–71](ch04.xhtml#page_69)
  prefs: []
  type: TYPE_NORMAL
- en: unions, [73–74](ch04.xhtml#page_73)
  prefs: []
  type: TYPE_NORMAL
- en: memory access
  prefs: []
  type: TYPE_NORMAL
- en: in injected DLL, [145–146](ch07.xhtml#page_145)
  prefs: []
  type: TYPE_NORMAL
- en: for writing and reading, [122–124](ch06.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: memory addresses, [4](ch01.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: accessing with OllyDbg expressions, [36](ch02.xhtml#page_36)
  prefs: []
  type: TYPE_NORMAL
- en: correct, determining in Cheat Engine, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: freezing, [8](ch01.xhtml#page_8)
  prefs: []
  type: TYPE_NORMAL
- en: new, determining after game updates, [101–104](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: rebasing at runtime, [128–129](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: static, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: memory-based lighthacks, [192](ch09.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: memory dump
  prefs: []
  type: TYPE_NORMAL
- en: of class data, [76](ch04.xhtml#page_76)
  prefs: []
  type: TYPE_NORMAL
- en: of code cave, [137](ch07.xhtml#page_137)
  prefs: []
  type: TYPE_NORMAL
- en: of data structures, inspecting, [70–71](ch04.xhtml#page_70)
  prefs: []
  type: TYPE_NORMAL
- en: of numeric data, inspecting, [68–69](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: of string data, inspecting, [70](ch04.xhtml#page_70)
  prefs: []
  type: TYPE_NORMAL
- en: memory forensics, [97–98](ch05.xhtml#page_97)
  prefs: []
  type: TYPE_NORMAL
- en: new addresses, determining after game updates, [101–104](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: player health, finding with OllyDbg, [99–101](ch05.xhtml#page_99)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of data, deducing, [98–99](ch05.xhtml#page_98)
  prefs: []
  type: TYPE_NORMAL
- en: '`std::list` class, [110–113](ch05.xhtml#page_110)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::map` class, [114–118](ch05.xhtml#page_114)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::string` class, [105–108](ch05.xhtml#page_105)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::vector` class, [108–110](ch05.xhtml#page_108)'
  prefs: []
  type: TYPE_NORMAL
- en: memory manipulation, [119](ch06.xhtml#page_119)
  prefs: []
  type: TYPE_NORMAL
- en: accessing memory, [122–124](ch06.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: address space layout randomization, [128–130](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: memory protection, [124–128](ch06.xhtml#page_124)
  prefs: []
  type: TYPE_NORMAL
- en: process identifier, obtaining, [120–122](ch06.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: Memory map window, OllyDbg, [26](ch02.xhtml#page_26)
  prefs: []
  type: TYPE_NORMAL
- en: memory modification, [8–11](ch01.xhtml#page_8)
  prefs: []
  type: TYPE_NORMAL
- en: memory monitoring with bots, [204–205](ch10.xhtml#page_204)
  prefs: []
  type: TYPE_NORMAL
- en: memory offset, [80](ch04.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: memory on write breakpoint, [208](ch10.xhtml#page_208)
  prefs: []
  type: TYPE_NORMAL
- en: memory pointer, [11](ch01.xhtml#page_11)
  prefs: []
  type: TYPE_NORMAL
- en: memory protection, [124–128](ch06.xhtml#page_124), [151](ch08.xhtml#page_151)
  prefs: []
  type: TYPE_NORMAL
- en: memory scanning, [3](ch01.xhtml#page_3), [98](ch05.xhtml#page_98). *See also*
    Cheat Engine; pointer scanning
  prefs: []
  type: TYPE_NORMAL
- en: basic, [4–5](ch01.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: importance of, [4](ch01.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: memory modification, [8–11](ch01.xhtml#page_8)
  prefs: []
  type: TYPE_NORMAL
- en: new addresses, determining after game updates, [101–104](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: optimization of code, [22](ch01.xhtml#page_22)
  prefs: []
  type: TYPE_NORMAL
- en: player health, finding with OllyDbg, [99–101](ch05.xhtml#page_99)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of data, deducing, [98–99](ch05.xhtml#page_98)
  prefs: []
  type: TYPE_NORMAL
- en: MMORPGs (massively multiplayer online role-playing games), [xxi–xxii](ch00.xhtml#page_xxi),
    [198](ch09.xhtml#page_198), [248](ch12.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: mnemonics, [78](ch04.xhtml#page_78)
  prefs: []
  type: TYPE_NORMAL
- en: MOBA (massive online battle arena), [xxii](ch00.xhtml#page_xxii), [189](ch09.xhtml#page_189),
    [197](ch09.xhtml#page_197), [201](ch09.xhtml#page_201), [206](ch10.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: modifying memory values, [8–11](ch01.xhtml#page_8)
  prefs: []
  type: TYPE_NORMAL
- en: '`Module32First()` function, [144](ch07.xhtml#page_144), [174](ch08.xhtml#page_174)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Module32Next()` function, [144](ch07.xhtml#page_144), [174](ch08.xhtml#page_174)'
  prefs: []
  type: TYPE_NORMAL
- en: Module column, Event Properties window, [54](ch03.xhtml#page_54)
  prefs: []
  type: TYPE_NORMAL
- en: Modules window, OllyDbg, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: monitoring memory with bots, [204–205](ch10.xhtml#page_204)
  prefs: []
  type: TYPE_NORMAL
- en: monsters, kiting, [240–241](ch11.xhtml#page_240)
  prefs: []
  type: TYPE_NORMAL
- en: mouse movements, emulating, [215](ch10.xhtml#page_215), [240](ch11.xhtml#page_240)
  prefs: []
  type: TYPE_NORMAL
- en: '`MOV` instruction, [89](ch04.xhtml#page_89)'
  prefs: []
  type: TYPE_NORMAL
- en: multiclient patching, [30](ch02.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: mutexes, closing, [59–60](ch03.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: '### **N**'
  prefs: []
  type: TYPE_NORMAL
- en: named pipes, locating, [60](ch03.xhtml#page_60)
  prefs: []
  type: TYPE_NORMAL
- en: name of specific player, pausing execution when printed, [37–38](ch02.xhtml#page_37)
  prefs: []
  type: TYPE_NORMAL
- en: Names window, OllyDbg, [29](ch02.xhtml#page_29)
  prefs: []
  type: TYPE_NORMAL
- en: near calls, [153–154](ch08.xhtml#page_153)
  prefs: []
  type: TYPE_NORMAL
- en: near function call, [39](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: .NET processes, [59](ch03.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: Network event class filter, [52](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: new addresses, determining after game updates, [101–104](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: next scan, running in Cheat Engine, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: nodes, [233](ch11.xhtml#page_233), [234–238](ch11.xhtml#page_234)
  prefs: []
  type: TYPE_NORMAL
- en: no-operation (NOP) commands, [31](ch02.xhtml#page_31), [32](ch02.xhtml#page_32)
  prefs: []
  type: TYPE_NORMAL
- en: NOPing, [150–152](ch08.xhtml#page_150)
  prefs: []
  type: TYPE_NORMAL
- en: lighthacks, [192](ch09.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: zoomhacks, [197–198](ch09.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: '`NtQueryVirtualMemory()` function, [246](ch12.xhtml#page_246), [257](ch12.xhtml#page_257),
    [259](ch12.xhtml#page_259)'
  prefs: []
  type: TYPE_NORMAL
- en: '`NtWriteVirtualMemory()` function, [261–262](ch12.xhtml#page_261)'
  prefs: []
  type: TYPE_NORMAL
- en: null terminator, [70](ch04.xhtml#page_70)
  prefs: []
  type: TYPE_NORMAL
- en: numeric data types, [67–69](ch04.xhtml#page_67)
  prefs: []
  type: TYPE_NORMAL
- en: numeric operators, OllyDbg, [34–35](ch02.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: '**O**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: obfuscation, [251](ch12.xhtml#page_251), [255–256](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: observing game events
  prefs: []
  type: TYPE_NORMAL
- en: detecting visual cues, [205–206](ch10.xhtml#page_205)
  prefs: []
  type: TYPE_NORMAL
- en: intercepting network traffic, [206–211](ch10.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: monitoring memory, [204–205](ch10.xhtml#page_204)
  prefs: []
  type: TYPE_NORMAL
- en: obstacles, searches disrupted by, [233–234](ch11.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: offset, [54](ch03.xhtml#page_54)
  prefs: []
  type: TYPE_NORMAL
- en: OllyDbg, [23–24](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: assembly code, [27–29](ch02.xhtml#page_27), [32–33](ch02.xhtml#page_32)
  prefs: []
  type: TYPE_NORMAL
- en: call stack, viewing, [30](ch02.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: code patches, creating, [31–32](ch02.xhtml#page_31)
  prefs: []
  type: TYPE_NORMAL
- en: command line for, [43–44](ch02.xhtml#page_43)
  prefs: []
  type: TYPE_NORMAL
- en: control windows, [25–26](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: CPU window, [26–30](ch02.xhtml#page_26)
  prefs: []
  type: TYPE_NORMAL
- en: crashing debuggers, [255](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: dealing with game updates, [104](ch05.xhtml#page_104)
  prefs: []
  type: TYPE_NORMAL
- en: debugger buttons and functions, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: expression engine, [33–37](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: memory, viewing and searching, [29–30](ch02.xhtml#page_29)
  prefs: []
  type: TYPE_NORMAL
- en: memory dump of numeric data, [68–69](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: memory dump of string data, [70](ch04.xhtml#page_70)
  prefs: []
  type: TYPE_NORMAL
- en: packet parser, finding, [207–208](ch10.xhtml#page_207)
  prefs: []
  type: TYPE_NORMAL
- en: Patches window, [31–32](ch02.xhtml#page_31)
  prefs: []
  type: TYPE_NORMAL
- en: patching `if()` statements, [46–47](ch02.xhtml#page_46)
  prefs: []
  type: TYPE_NORMAL
- en: pausing execution when health of character drops, [39–42](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: pausing execution when name of player is printed, [37–38](ch02.xhtml#page_37)
  prefs: []
  type: TYPE_NORMAL
- en: plug-ins, [42–46](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: register contents, viewing and editing, [29](ch02.xhtml#page_29)
  prefs: []
  type: TYPE_NORMAL
- en: Run trace window, [32–33](ch02.xhtml#page_32)
  prefs: []
  type: TYPE_NORMAL
- en: supported data types, [36](ch02.xhtml#page_36)
  prefs: []
  type: TYPE_NORMAL
- en: translating code cave assembly to shellcode, [135–136](ch07.xhtml#page_135)
  prefs: []
  type: TYPE_NORMAL
- en: user interface, [24–26](ch02.xhtml#page_24)
  prefs: []
  type: TYPE_NORMAL
- en: zoom limitation code, finding, [198](ch09.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: OllyFlow plug-in, [45–46](ch02.xhtml#page_45)
  prefs: []
  type: TYPE_NORMAL
- en: opcodes, [78](ch04.xhtml#page_78)
  prefs: []
  type: TYPE_NORMAL
- en: '`OpenProcess()` function, [121–122](ch06.xhtml#page_121)'
  prefs: []
  type: TYPE_NORMAL
- en: '`OpenThread()` function, [142](ch07.xhtml#page_142)'
  prefs: []
  type: TYPE_NORMAL
- en: operands
  prefs: []
  type: TYPE_NORMAL
- en: binary arithmetic instructions, [90](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: '`IDIV` instruction, [92](ch04.xhtml#page_92)'
  prefs: []
  type: TYPE_NORMAL
- en: '`MOV` instruction, [89](ch04.xhtml#page_89)'
  prefs: []
  type: TYPE_NORMAL
- en: syntax, [80–81](ch04.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: unary arithmetic instructions, [90](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: operations, [79](ch04.xhtml#page_79)
  prefs: []
  type: TYPE_NORMAL
- en: operators, using in OllyDbg expression engine, [34–35](ch02.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: optimizing memory code, [22](ch01.xhtml#page_22)
  prefs: []
  type: TYPE_NORMAL
- en: ordering, little-endian, [67](ch04.xhtml#page_67)
  prefs: []
  type: TYPE_NORMAL
- en: order of variables, in data structures, [70–71](ch04.xhtml#page_70)
  prefs: []
  type: TYPE_NORMAL
- en: '`OutputDebugString()` function, [253](ch12.xhtml#page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: '### **P**'
  prefs: []
  type: TYPE_NORMAL
- en: packets
  prefs: []
  type: TYPE_NORMAL
- en: intercepting, [206–211](ch10.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: sending, [215–217](ch10.xhtml#page_215)
  prefs: []
  type: TYPE_NORMAL
- en: packing, [251](ch12.xhtml#page_251)
  prefs: []
  type: TYPE_NORMAL
- en: padding, [68](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: page protection, [125–126](ch06.xhtml#page_125)
  prefs: []
  type: TYPE_NORMAL
- en: pages, [124](ch06.xhtml#page_124)
  prefs: []
  type: TYPE_NORMAL
- en: parsing packets, [206–211](ch10.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: Patches window, OllyDbg, [26](ch02.xhtml#page_26), [31–32](ch02.xhtml#page_31)
  prefs: []
  type: TYPE_NORMAL
- en: patching, multiclient, [30](ch02.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: patching `if()` statements, [46–47](ch02.xhtml#page_46)
  prefs: []
  type: TYPE_NORMAL
- en: Path column, Event Properties dialog, [55](ch03.xhtml#page_55)
  prefs: []
  type: TYPE_NORMAL
- en: pathfinding with search algorithms, [232–234](ch11.xhtml#page_232). *See also*
    A* search algorithm
  prefs: []
  type: TYPE_NORMAL
- en: path list, A* search algorithm, [239–240](ch11.xhtml#page_239)
  prefs: []
  type: TYPE_NORMAL
- en: Pause button, OllyDbg, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: pausing execution, [37–38](ch02.xhtml#page_37), [39–42](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: pausing threads, [184](ch08.xhtml#page_184)
  prefs: []
  type: TYPE_NORMAL
- en: PEB (process environment block) structure, [146](ch07.xhtml#page_146)
  prefs: []
  type: TYPE_NORMAL
- en: '`PeekMessage()` function, [184](ch08.xhtml#page_184)'
  prefs: []
  type: TYPE_NORMAL
- en: PE header, [160–161](ch08.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: pick-phase HUDs, [201](ch09.xhtml#page_201)
  prefs: []
  type: TYPE_NORMAL
- en: PID (process identifier), [120–122](ch06.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: pipes, locating named, [60](ch03.xhtml#page_60)
  prefs: []
  type: TYPE_NORMAL
- en: Play button, OllyDbg, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: player health, finding with OllyDbg, [99–101](ch05.xhtml#page_99)
  prefs: []
  type: TYPE_NORMAL
- en: player versus player (PvP) combat, [243–244](ch11.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: plug-ins, OllyDbg, [42–46](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: pointer chains, [11–12](ch01.xhtml#page_11)
  prefs: []
  type: TYPE_NORMAL
- en: pointer path, [11](ch01.xhtml#page_11)
  prefs: []
  type: TYPE_NORMAL
- en: Pointerscanner Scanoptions dialog, Cheat Engine, [14–16](ch01.xhtml#page_14)
  prefs: []
  type: TYPE_NORMAL
- en: pointer scanning, [11](ch01.xhtml#page_11)
  prefs: []
  type: TYPE_NORMAL
- en: basics of, [12–14](ch01.xhtml#page_12)
  prefs: []
  type: TYPE_NORMAL
- en: with Cheat Engine, [14–18](ch01.xhtml#page_14)
  prefs: []
  type: TYPE_NORMAL
- en: pointer chains, [11–12](ch01.xhtml#page_11)
  prefs: []
  type: TYPE_NORMAL
- en: rescanning, [17–18](ch01.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: Pong, [46–47](ch02.xhtml#page_46)
  prefs: []
  type: TYPE_NORMAL
- en: Popup trainer on keypress field, Trainer generator dialog, [9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: predicting enemy movements, [241](ch11.xhtml#page_241)
  prefs: []
  type: TYPE_NORMAL
- en: prewritten hooking libraries, [169](ch08.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: '`printf()` call, [72](ch04.xhtml#page_72), [73–74](ch04.xhtml#page_73), [75](ch04.xhtml#page_75)'
  prefs: []
  type: TYPE_NORMAL
- en: printing debug strings, [253](ch12.xhtml#page_253)
  prefs: []
  type: TYPE_NORMAL
- en: '`Process32First()` function, [120](ch06.xhtml#page_120)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Process32Next()` function, [120–121](ch06.xhtml#page_120)'
  prefs: []
  type: TYPE_NORMAL
- en: process access flags, [121](ch06.xhtml#page_121)
  prefs: []
  type: TYPE_NORMAL
- en: '`PROCESS_ALL_ACCESS` flag, [121](ch06.xhtml#page_121)'
  prefs: []
  type: TYPE_NORMAL
- en: Process and thread activity event class filter, [52](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: '`PROCESS_CREATE_THREAD` flag, [121](ch06.xhtml#page_121)'
  prefs: []
  type: TYPE_NORMAL
- en: process environment block (PEB) structure, [146](ch07.xhtml#page_146)
  prefs: []
  type: TYPE_NORMAL
- en: Process Explorer, [49–50](ch03.xhtml#page_49), [55–56](ch03.xhtml#page_55)
  prefs: []
  type: TYPE_NORMAL
- en: configuring colors, [56](ch03.xhtml#page_56)
  prefs: []
  type: TYPE_NORMAL
- en: handle manipulation options, [59–60](ch03.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: hotkeys, [57](ch03.xhtml#page_57)
  prefs: []
  type: TYPE_NORMAL
- en: Properties dialog, [57–59](ch03.xhtml#page_57)
  prefs: []
  type: TYPE_NORMAL
- en: user interface and controls, [56–57](ch03.xhtml#page_56)
  prefs: []
  type: TYPE_NORMAL
- en: process handles, obtaining, [121](ch06.xhtml#page_121)
  prefs: []
  type: TYPE_NORMAL
- en: process identifier (PID), [120–122](ch06.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: '`processInput()` function, [215–216](ch10.xhtml#page_215)'
  prefs: []
  type: TYPE_NORMAL
- en: '`processKeyboardInput()` function, [216](ch10.xhtml#page_216)'
  prefs: []
  type: TYPE_NORMAL
- en: Process Monitor, [49–50](ch03.xhtml#page_49)
  prefs: []
  type: TYPE_NORMAL
- en: configuring columns in, [51](ch03.xhtml#page_51)
  prefs: []
  type: TYPE_NORMAL
- en: debugging, [53–55](ch03.xhtml#page_53)
  prefs: []
  type: TYPE_NORMAL
- en: event class filters, [51–52](ch03.xhtml#page_51)
  prefs: []
  type: TYPE_NORMAL
- en: high-score file, finding, [55](ch03.xhtml#page_55)
  prefs: []
  type: TYPE_NORMAL
- en: hotkeys, [52](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: inspecting events in event log, [52–53](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: logging in-game events, [50–52](ch03.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: Process Monitor Filter dialog, [50](ch03.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: Processname field, Trainer generator dialog, [9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: '`processNextPacket()` function, [210](ch10.xhtml#page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: processor registers, [81–86](ch04.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: Process profiling event class filter, [52](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: '`PROCESS_VM_OPERATION` flag, [121](ch06.xhtml#page_121), [122](ch06.xhtml#page_122)'
  prefs: []
  type: TYPE_NORMAL
- en: '`PROCESS_VM_READ` flag, [121](ch06.xhtml#page_121)'
  prefs: []
  type: TYPE_NORMAL
- en: '`PROCESS_VM_WRITE` flag, [121](ch06.xhtml#page_121)'
  prefs: []
  type: TYPE_NORMAL
- en: Properties dialog, Process Explorer, [57–59](ch03.xhtml#page_57)
  prefs: []
  type: TYPE_NORMAL
- en: protection, memory, [124–128](ch06.xhtml#page_124), [151](ch08.xhtml#page_151)
  prefs: []
  type: TYPE_NORMAL
- en: PunkBuster toolkit, [246–247](ch12.xhtml#page_246), [257](ch12.xhtml#page_257)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of data, deducing, [98–99](ch05.xhtml#page_98)
  prefs: []
  type: TYPE_NORMAL
- en: PvP (player versus player) combat, [243–244](ch11.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: '**R**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: range hacks, [201](ch09.xhtml#page_201)
  prefs: []
  type: TYPE_NORMAL
- en: reading from game memory, [119](ch06.xhtml#page_119)
  prefs: []
  type: TYPE_NORMAL
- en: accessing memory, [122–124](ch06.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: address space layout randomization, [128–130](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: memory protection, [124–128](ch06.xhtml#page_124)
  prefs: []
  type: TYPE_NORMAL
- en: process identifier, obtaining, [120–122](ch06.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: '`ReadProcessMemory()` function, [122–124](ch06.xhtml#page_122)'
  prefs: []
  type: TYPE_NORMAL
- en: read protection, [125–128](ch06.xhtml#page_125)
  prefs: []
  type: TYPE_NORMAL
- en: Real Time Messaging Protocol (RTMP)
  prefs: []
  type: TYPE_NORMAL
- en: assessing, [169–170](ch08.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: '`decode()` function, hooking, [172–173](ch08.xhtml#page_172), [174–175](ch08.xhtml#page_174)'
  prefs: []
  type: TYPE_NORMAL
- en: '`encode()` function, hooking, [171–172](ch08.xhtml#page_171), [174–175](ch08.xhtml#page_174)'
  prefs: []
  type: TYPE_NORMAL
- en: intercepting packets, [207](ch10.xhtml#page_207)
  prefs: []
  type: TYPE_NORMAL
- en: real-time strategy (RTS), [xxii](ch00.xhtml#page_xxii), [197](ch09.xhtml#page_197),
    [201](ch09.xhtml#page_201), [206](ch10.xhtml#page_206), [243](ch11.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: rebasing addresses at runtime, [128–129](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: reconnaissance, [49–50](ch03.xhtml#page_49)
  prefs: []
  type: TYPE_NORMAL
- en: Process Explorer, [55–60](ch03.xhtml#page_55)
  prefs: []
  type: TYPE_NORMAL
- en: Process Monitor, [50–55](ch03.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: '`recv()` function, [207–208](ch10.xhtml#page_207)'
  prefs: []
  type: TYPE_NORMAL
- en: red-black tree, [114–115](ch05.xhtml#page_114)
  prefs: []
  type: TYPE_NORMAL
- en: References window, OllyDbg, [26](ch02.xhtml#page_26), [28–29](ch02.xhtml#page_28),
    [40](ch02.xhtml#page_40), [100](ch05.xhtml#page_100)
  prefs: []
  type: TYPE_NORMAL
- en: refiller, [242](ch11.xhtml#page_242)
  prefs: []
  type: TYPE_NORMAL
- en: registers, processor, [81–86](ch04.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: registers pane, OllyDbg, [29](ch02.xhtml#page_29)
  prefs: []
  type: TYPE_NORMAL
- en: Registry event class filter, [51](ch03.xhtml#page_51)
  prefs: []
  type: TYPE_NORMAL
- en: Rescan pointerlist window, Cheat Engine, [17–18](ch01.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: responsive hacks, [203](ch10.xhtml#page_203)
  prefs: []
  type: TYPE_NORMAL
- en: anti-crowd-control hacks, [218](ch10.xhtml#page_218)
  prefs: []
  type: TYPE_NORMAL
- en: automatic healer, [218](ch10.xhtml#page_218), [225–228](ch11.xhtml#page_225),
    [230–232](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: detecting visual cues, [205–206](ch10.xhtml#page_205)
  prefs: []
  type: TYPE_NORMAL
- en: emulating keyboard, [211–215](ch10.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: intercepting network traffic, [206–211](ch10.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: monitoring memory, [204–205](ch10.xhtml#page_204)
  prefs: []
  type: TYPE_NORMAL
- en: sending packets, [215–217](ch10.xhtml#page_215)
  prefs: []
  type: TYPE_NORMAL
- en: spell trainers, [219](ch10.xhtml#page_219)
  prefs: []
  type: TYPE_NORMAL
- en: rootkits
  prefs: []
  type: TYPE_NORMAL
- en: defeating anti-cheat, [261–262](ch12.xhtml#page_261)
  prefs: []
  type: TYPE_NORMAL
- en: GameGuard toolkit, [248–249](ch12.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: root node, [113–114](ch05.xhtml#page_113)
  prefs: []
  type: TYPE_NORMAL
- en: RTMP. *See* Real Time Messaging Protocol
  prefs: []
  type: TYPE_NORMAL
- en: RTS (real-time strategy), [xxii](ch00.xhtml#page_xxii), [197](ch09.xhtml#page_197),
    [201](ch09.xhtml#page_201), [206](ch10.xhtml#page_206), [243](ch11.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: runtime flexibility, [229](ch11.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: Run trace window, OllyDbg, [26](ch02.xhtml#page_26), [32–33](ch02.xhtml#page_32)
  prefs: []
  type: TYPE_NORMAL
- en: '**S**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: SBD. *See* signature-based detection (SBD)
  prefs: []
  type: TYPE_NORMAL
- en: scan code, [214](ch10.xhtml#page_214)
  prefs: []
  type: TYPE_NORMAL
- en: scan types, Cheat Engine, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: scan value, [4](ch01.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: score, [234](ch11.xhtml#page_234)
  prefs: []
  type: TYPE_NORMAL
- en: screenshots, [247](ch12.xhtml#page_247), [258](ch12.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: scripting custom behaviors for cavebots, [243](ch11.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: scripting engine, Cheat Engine, [18–22](ch01.xhtml#page_18)
  prefs: []
  type: TYPE_NORMAL
- en: search algorithms, [232–234](ch11.xhtml#page_232). *See also* A* search algorithm
  prefs: []
  type: TYPE_NORMAL
- en: Security tab, Process Explorer Properties dialog, [58](ch03.xhtml#page_58)
  prefs: []
  type: TYPE_NORMAL
- en: segment registers, [84–86](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: '`send()` function, [216–217](ch10.xhtml#page_216)'
  prefs: []
  type: TYPE_NORMAL
- en: sending packets, [215–217](ch10.xhtml#page_215)
  prefs: []
  type: TYPE_NORMAL
- en: '`SendInput()` function, [211–212](ch10.xhtml#page_211), [215](ch10.xhtml#page_215)'
  prefs: []
  type: TYPE_NORMAL
- en: '`SendMessage()` function, [213–215](ch10.xhtml#page_213)'
  prefs: []
  type: TYPE_NORMAL
- en: sensors, of a system, [222](ch11.xhtml#page_222)
  prefs: []
  type: TYPE_NORMAL
- en: Set/Change hotkey screen, Cheat Engine, [10](ch01.xhtml#page_10)
  prefs: []
  type: TYPE_NORMAL
- en: '`SetLight()` member function, [192](ch09.xhtml#page_192)'
  prefs: []
  type: TYPE_NORMAL
- en: '`SetProcessIsCritical()` function, [256](ch12.xhtml#page_256)'
  prefs: []
  type: TYPE_NORMAL
- en: shellcode, [134](ch07.xhtml#page_134), [135–136](ch07.xhtml#page_135), [138–141](ch07.xhtml#page_138)
  prefs: []
  type: TYPE_NORMAL
- en: '`short` data type, [67](ch04.xhtml#page_67)'
  prefs: []
  type: TYPE_NORMAL
- en: sign, `float` data type, [68](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: signature-based detection (SBD)
  prefs: []
  type: TYPE_NORMAL
- en: ESEA Anti-Cheat toolkit, [247](ch12.xhtml#page_247)
  prefs: []
  type: TYPE_NORMAL
- en: evading, [256–257](ch12.xhtml#page_256)
  prefs: []
  type: TYPE_NORMAL
- en: PunkBuster toolkit, [246–247](ch12.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: signatures, [246](ch12.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: single-instance limitation, [59–60](ch03.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: skillshots, [232](ch11.xhtml#page_232)
  prefs: []
  type: TYPE_NORMAL
- en: '`Sleep()` function, [164–165](ch08.xhtml#page_164), [227](ch11.xhtml#page_227)'
  prefs: []
  type: TYPE_NORMAL
- en: Smaller Than scan type, Cheat Engine, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: source operand, [80](ch04.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: Source window, OllyDbg, [26](ch02.xhtml#page_26)
  prefs: []
  type: TYPE_NORMAL
- en: spawning threads, [129](ch06.xhtml#page_129)
  prefs: []
  type: TYPE_NORMAL
- en: spells
  prefs: []
  type: TYPE_NORMAL
- en: anti-crowd-control hacks, [218](ch10.xhtml#page_218)
  prefs: []
  type: TYPE_NORMAL
- en: complex hypothetical state machine, [228–230](ch11.xhtml#page_228)
  prefs: []
  type: TYPE_NORMAL
- en: spell trainers, [219](ch10.xhtml#page_219)
  prefs: []
  type: TYPE_NORMAL
- en: SS register, [85](ch04.xhtml#page_85)
  prefs: []
  type: TYPE_NORMAL
- en: stack frame, [87–89](ch04.xhtml#page_87)
  prefs: []
  type: TYPE_NORMAL
- en: stack overflow, [255–256](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: stack pane, OllyDbg, [30](ch02.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: stack trace, Process Monitor, [54–55](ch03.xhtml#page_54)
  prefs: []
  type: TYPE_NORMAL
- en: state machines, [223–224](ch11.xhtml#page_223)
  prefs: []
  type: TYPE_NORMAL
- en: automated healer, [225–228](ch11.xhtml#page_225)
  prefs: []
  type: TYPE_NORMAL
- en: combining with control theory, [225](ch11.xhtml#page_225)
  prefs: []
  type: TYPE_NORMAL
- en: complex hypothetical, [228–230](ch11.xhtml#page_228)
  prefs: []
  type: TYPE_NORMAL
- en: error correction, [230–232](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: Lua functions, adding, [229–230](ch11.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: runtime flexibility, [229](ch11.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: static addresses, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: '`__stdcall` convention, [95](ch04.xhtml#page_95)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::list` class, [110–113](ch05.xhtml#page_110)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::map` class, [114–118](ch05.xhtml#page_114)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::string` class, [105–108](ch05.xhtml#page_105)'
  prefs: []
  type: TYPE_NORMAL
- en: '`std::vector` class, [108–110](ch05.xhtml#page_108)'
  prefs: []
  type: TYPE_NORMAL
- en: Step into button, OllyDbg, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: Step over button, OllyDbg, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: stochastic systems, [230](ch11.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: string data, [21](ch01.xhtml#page_21), [69–71](ch04.xhtml#page_69), [100–101](ch05.xhtml#page_100)
  prefs: []
  type: TYPE_NORMAL
- en: string operators, OllyDbg, [35](ch02.xhtml#page_35)
  prefs: []
  type: TYPE_NORMAL
- en: Strings tab, Process Explorer Properties dialog, [58](ch03.xhtml#page_58)
  prefs: []
  type: TYPE_NORMAL
- en: struct member alignment, [71](ch04.xhtml#page_71)
  prefs: []
  type: TYPE_NORMAL
- en: structures, data, [71–73](ch04.xhtml#page_71)
  prefs: []
  type: TYPE_NORMAL
- en: subregisters, [83](ch04.xhtml#page_83)
  prefs: []
  type: TYPE_NORMAL
- en: '`SuspendThread()` function, [142](ch07.xhtml#page_142), [184](ch08.xhtml#page_184)'
  prefs: []
  type: TYPE_NORMAL
- en: syncing with game threads, [164–165](ch08.xhtml#page_164)
  prefs: []
  type: TYPE_NORMAL
- en: systems, controlling behavior of, [222](ch11.xhtml#page_222)
  prefs: []
  type: TYPE_NORMAL
- en: '**T**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: targets, selecting, [240](ch11.xhtml#page_240)
  prefs: []
  type: TYPE_NORMAL
- en: TCP/IP tab, Process Explorer Properties dialog, [58](ch03.xhtml#page_58)
  prefs: []
  type: TYPE_NORMAL
- en: TEB (thread environment block), [146](ch07.xhtml#page_146)
  prefs: []
  type: TYPE_NORMAL
- en: templates
  prefs: []
  type: TYPE_NORMAL
- en: for changing memory protection, [127](ch06.xhtml#page_127)
  prefs: []
  type: TYPE_NORMAL
- en: memory access functions, [123–124](ch06.xhtml#page_123), [145–146](ch07.xhtml#page_145)
  prefs: []
  type: TYPE_NORMAL
- en: '`TEST` instruction, [92](ch04.xhtml#page_92)'
  prefs: []
  type: TYPE_NORMAL
- en: text strings, [21](ch01.xhtml#page_21), [69–71](ch04.xhtml#page_69), [100–101](ch05.xhtml#page_100)
  prefs: []
  type: TYPE_NORMAL
- en: texture of enemies, changing, [195–196](ch09.xhtml#page_195)
  prefs: []
  type: TYPE_NORMAL
- en: '`__thiscall` convention, [95](ch04.xhtml#page_95), [156–158](ch08.xhtml#page_156),
    [217](ch10.xhtml#page_217)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Thread32First()` function, [141](ch07.xhtml#page_141)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Thread32Next()` function, [141](ch07.xhtml#page_141)'
  prefs: []
  type: TYPE_NORMAL
- en: thread environment block (TEB), [146](ch07.xhtml#page_146)
  prefs: []
  type: TYPE_NORMAL
- en: threads
  prefs: []
  type: TYPE_NORMAL
- en: hijacking, [138–142](ch07.xhtml#page_138)
  prefs: []
  type: TYPE_NORMAL
- en: injection, [134–138](ch07.xhtml#page_134)
  prefs: []
  type: TYPE_NORMAL
- en: spawning, [129](ch06.xhtml#page_129)
  prefs: []
  type: TYPE_NORMAL
- en: Threads tab, Process Explorer Properties dialog, [58](ch03.xhtml#page_58)
  prefs: []
  type: TYPE_NORMAL
- en: Threads window, OllyDbg, [26](ch02.xhtml#page_26)
  prefs: []
  type: TYPE_NORMAL
- en: thunks, [162–163](ch08.xhtml#page_162)
  prefs: []
  type: TYPE_NORMAL
- en: timing control-critical routines, [254](ch12.xhtml#page_254)
  prefs: []
  type: TYPE_NORMAL
- en: Title field, Trainer generator dialog, [9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: toggling z-buffering, [195](ch09.xhtml#page_195)
  prefs: []
  type: TYPE_NORMAL
- en: Trace into button, OllyDbg, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: Trace over button, OllyDbg, [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: tracing with OllyDbg, [32–33](ch02.xhtml#page_32), [39–42](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: trainer generator, Cheat Engine, [9–11](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: trampoline functions, [165–168](ch08.xhtml#page_165), [181](ch08.xhtml#page_181)
  prefs: []
  type: TYPE_NORMAL
- en: traversals
  prefs: []
  type: TYPE_NORMAL
- en: IAT hooking, [162](ch08.xhtml#page_162)
  prefs: []
  type: TYPE_NORMAL
- en: VF tables, [156](ch08.xhtml#page_156)
  prefs: []
  type: TYPE_NORMAL
- en: '**U**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: unary arithmetic instructions, [90](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: unavoidable infinite loops, causing, [255](ch12.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: Unchanged Value scan type, Cheat Engine, [7](ch01.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: unions, [73–74](ch04.xhtml#page_73)
  prefs: []
  type: TYPE_NORMAL
- en: Unix syntax, [80](ch04.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: Unknown Initial Value scan type, Cheat Engine, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: updates, determining new addresses after, [101–104](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: user interface, Process Explorer, [56–57](ch03.xhtml#page_56)
  prefs: []
  type: TYPE_NORMAL
- en: user-mode rootkit, GameGuard toolkit, [248–249](ch12.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: '**V**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: VAC toolkit, [247–248](ch12.xhtml#page_247)
  prefs: []
  type: TYPE_NORMAL
- en: Value Between scan type, Cheat Engine, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: Value Type directive, Cheat Engine, [6](ch01.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: VF (virtual function) tables
  prefs: []
  type: TYPE_NORMAL
- en: class instances and, [76–78](ch04.xhtml#page_76)
  prefs: []
  type: TYPE_NORMAL
- en: finding Direct3D devices, [177–181](ch08.xhtml#page_177)
  prefs: []
  type: TYPE_NORMAL
- en: hooking, [156–160](ch08.xhtml#page_156), [182–183](ch08.xhtml#page_182)
  prefs: []
  type: TYPE_NORMAL
- en: traversals, [156](ch08.xhtml#page_156)
  prefs: []
  type: TYPE_NORMAL
- en: '`VirtualAllocEx()` function, [136–137](ch07.xhtml#page_136), [138](ch07.xhtml#page_138)'
  prefs: []
  type: TYPE_NORMAL
- en: virtual functions, classes with, [75–76](ch04.xhtml#page_75)
  prefs: []
  type: TYPE_NORMAL
- en: '`VirtualProtectEx()` function, [126–128](ch06.xhtml#page_126)'
  prefs: []
  type: TYPE_NORMAL
- en: '`VirtualProtect()` function, [127](ch06.xhtml#page_127)'
  prefs: []
  type: TYPE_NORMAL
- en: '**W**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`WaitForSingleObject()` function, [129](ch06.xhtml#page_129), [138](ch07.xhtml#page_138)'
  prefs: []
  type: TYPE_NORMAL
- en: wallhacks, [192](ch09.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: creating for Direct3D, [194–197](ch09.xhtml#page_194)
  prefs: []
  type: TYPE_NORMAL
- en: rendering with z-buffering, [193–194](ch09.xhtml#page_193)
  prefs: []
  type: TYPE_NORMAL
- en: warbots, [243–244](ch11.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: Warden toolkit, [249–250](ch12.xhtml#page_249)
  prefs: []
  type: TYPE_NORMAL
- en: waypoints, [222](ch11.xhtml#page_222), [229](ch11.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: '`wchar_t` data type, [67](ch04.xhtml#page_67)'
  prefs: []
  type: TYPE_NORMAL
- en: window handle, fetching, [120](ch06.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: Windows window, OllyDbg, [26](ch02.xhtml#page_26)
  prefs: []
  type: TYPE_NORMAL
- en: '`WM_CHAR` messages, [213–214](ch10.xhtml#page_213)'
  prefs: []
  type: TYPE_NORMAL
- en: '`WORD` data type, [67](ch04.xhtml#page_67)'
  prefs: []
  type: TYPE_NORMAL
- en: '`WriteProcessMemory()` function, [122–124](ch06.xhtml#page_122), [136–137](ch07.xhtml#page_136),
    [138](ch07.xhtml#page_138)'
  prefs: []
  type: TYPE_NORMAL
- en: write protection, [125–128](ch06.xhtml#page_125)
  prefs: []
  type: TYPE_NORMAL
- en: writing to game memory, [119](ch06.xhtml#page_119)
  prefs: []
  type: TYPE_NORMAL
- en: accessing memory, [122–124](ch06.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: address space layout randomization, [128–130](ch06.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: code caves, [136–137](ch07.xhtml#page_136)
  prefs: []
  type: TYPE_NORMAL
- en: memory protection, [124–128](ch06.xhtml#page_124)
  prefs: []
  type: TYPE_NORMAL
- en: process identifier, obtaining, [120–122](ch06.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: '**X**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: x86 assembly language, [78–79](ch04.xhtml#page_78)
  prefs: []
  type: TYPE_NORMAL
- en: arithmetic instructions, [90–92](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: branching instructions, [92–94](ch04.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: call stack, [86–88](ch04.xhtml#page_86)
  prefs: []
  type: TYPE_NORMAL
- en: command syntax, [79–81](ch04.xhtml#page_79)
  prefs: []
  type: TYPE_NORMAL
- en: data modification instructions, [89](ch04.xhtml#page_89)
  prefs: []
  type: TYPE_NORMAL
- en: function calls, [94–95](ch04.xhtml#page_94)
  prefs: []
  type: TYPE_NORMAL
- en: jump instructions, [92–94](ch04.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: NOPing, [150–152](ch08.xhtml#page_150)
  prefs: []
  type: TYPE_NORMAL
- en: processor registers, [81–86](ch04.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: x86 Windows memory protection attributes, [125–126](ch06.xhtml#page_125)
  prefs: []
  type: TYPE_NORMAL
- en: '**Z**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: z-buffering, [192–195](ch09.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: zoom factor, [197](ch09.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: zoomhacks, [197–198](ch09.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
