- en: '3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: HOT GLUE NIGHT-LIGHT
  prefs: []
  type: TYPE_NORMAL
- en: IN THIS PROJECT, YOU’LL CREATE A TINY, CUSTOMIZED LIGHT BY USING A HOT GLUE
    GUN, A SILICONE ICE CUBE OR BAKING MOLD, AND AN LED. THEN YOU’LL WRITE A PROGRAM
    TO MAKE THE LIGHT FLASH ON AND OFF OR FADE IN AND OUT. YOU’LL TAKE THIS PROJECT
    FURTHER BY ADDING A LIGHT SENSOR TO MAKE A NIGHT-LIGHT THAT TURNS ON AUTOMATICALLY
    IN THE DARK AND TURNS OFF AS THE SUN COMES UP.
  prefs: []
  type: TYPE_NORMAL
- en: Hot glue is a type of plastic adhesive that’s runny when hot, so it’s ideal
    for filling up any shape and drying quickly into that shape. Silicone molds are
    heat resistant, which prevents the glue from sticking to the mold, making it easy
    to pop out the glue when it’s set. [Figure 3-1](ch03.xhtml#ch03fig01) shows a
    completed light.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/03fig01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-1** R2-D2 glue gun light'
  prefs: []
  type: TYPE_NORMAL
- en: WHAT YOU’LL NEED
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here are the items you’ll need for this project:'
  prefs: []
  type: TYPE_NORMAL
- en: Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Glue gun
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Glue sticks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Silicone mold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LEDs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Female-to-female wires
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Breadboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Photoresistor (LDR)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Resistor (between 220 and 330 ohms)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 0.1 uF capacitor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose any shape of mold that suits your fancy! Recently, I made a green R2-D2
    LED and a red Death Star. I also located some Avengers molds, so I created a green
    Hulk fist that pulses, a blue Captain America shield, and a red Iron Man face.
  prefs: []
  type: TYPE_NORMAL
- en: Just make sure the mold is silicone so it’s heat resistant. In addition, you
    should know that photoresistors are also called *light-dependent resistors* *(LDRs)*
    or *photocells*.
  prefs: []
  type: TYPE_NORMAL
- en: '**WARNING**'
  prefs: []
  type: TYPE_NORMAL
- en: '*The glue gun will get very hot. Never touch the end of the gun or the glue
    until it has cooled down. Also, be wary of dripping glue: don’t get it on your
    shoes, clothes, or the floor. Consider putting newspaper down on your build surface
    first to protect it.*'
  prefs: []
  type: TYPE_NORMAL
- en: BUILDING THE CUSTOM NIGHT-LIGHT
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The custom night-light build has two stages. First, you’ll physically make the
    light. Second, you’ll code a program to give the light its instructions. Let’s
    get started.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to construct the light:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Prepare the glue gun:** Slide a glue stick into the glue gun, plug it in,
    and let it heat up for a few minutes. A small amount of glue will usually drip
    from the end when it’s ready to use.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Prepare the mold:** Place your silicone mold onto a stable surface. You might
    want to place some paper or a dust cover underneath the mold to protect the surface.
    Ensure that the mold is dust free and dry.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Prepare the LED:** Pick up the LED and look at the two wires, also called
    *legs*. Notice that one is slightly longer than the other, as shown in [Figure
    3-2](ch03.xhtml#ch03fig02). The longer leg is the positive leg; the shorter leg
    is negative. This detail is important to remember when you’re attaching the LED
    to the molded figure. If you wire the legs the wrong way, the circuit won’t close
    and current won’t flow through the LED, meaning the LED won’t light up.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Image](../images/03fig02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-2** LED legs'
  prefs: []
  type: TYPE_NORMAL
- en: Because you need to access the legs when the glue is set, check where you want
    the LED to sit in the mold before you add the hot glue. Do you want the legs to
    stick straight out, or maybe bend downward or outward? Your placement of the LED
    will depend on your mold’s shape. You want your LED, including the legs, approximately
    halfway into the mold. Too far in, and the LED will stick out; not in far enough,
    and it won’t remain securely in the glue. Roughly estimate where to place the
    LED.
  prefs: []
  type: TYPE_NORMAL
- en: '**Add the resistor:** Wrap one end of the resistor around the LED’s longer
    positive leg. The resistor prevents the LED from overheating and burning out.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Add glue to the mold:** When you know where you want to place your LED, take
    it out of the mold. Then, using the preheated glue gun, begin to slowly squeeze
    the glue into the mold. When the mold is about 80 percent full, gently push the
    LED into the glue, holding it by the legs. Once the glue has settled, you might
    need to add a little more glue until the mold is full. Hold on to the LED, but
    don’t get hot glue on your fingers. [Figure 3-3](ch03.xhtml#ch03fig03) shows a
    good position for the LED.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Image](../images/03fig03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-3** Filling the mold with hot glue'
  prefs: []
  type: TYPE_NORMAL
- en: '**Position and hold the LED:** When the mold is full, put the glue gun down.
    Continue to hold the LED so it’s positioned exactly where you want it while the
    glue dries.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After a few minutes, the glue will begin to turn a whitish color. At this point,
    you can let go of the LED and let the glue set for about 15 minutes. Then gently
    touch the glue. If it’s no longer sticky, carefully peel the mold away from the
    glue. If the glue figure doesn’t come out easily, you might need to leave it alone
    for a few more minutes so it can completely set.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Wire up the LED:** When the glue has totally set and cooled down, take two
    female-to-female jumper wires and attach one to each of the LED’s legs. The positive
    leg has the resistor wrapped around it, so attach the wire to the end of the resistor.
    Attach the wire from the positive, *longer* leg to GPIO pin 18, which is physical
    pin number 12 on the Pi. Connect the *shorter*, negative leg to any one of the
    ground pins on the Pi: you can choose from physical number 9, 14, 20, 30, 34,
    or 39\. [Figure 3-4](ch03.xhtml#ch03fig04) shows the wiring for hooking up the
    LED, the positive leg is the straight leg.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Image](../images/03fig04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-4** Wiring diagram for the LED'
  prefs: []
  type: TYPE_NORMAL
- en: Coding the Night-Light
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Now it’s time to add the software. Here are the steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Plug in and boot up your Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Load Python either by opening the terminal and entering sudo idle3 or by clicking
    the Pi icon and selecting **Start** ▶ **Programming** ▶ **Python 3**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the IDLE window, select **File** ▶ **New File**, as shown in [Figure 3-5](ch03.xhtml#ch03fig05).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Image](../images/03fig05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-5** Opening a new file in IDLE'
  prefs: []
  type: TYPE_NORMAL
- en: Enter the simple code in [Listing 3-1](ch03.xhtml#ch03ex01) to make the LED
    flash on and off.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**LISTING 3-1** Flashing the LED'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Let’s look at how this code works. First, you import the LED class from the
    `gpiozero` library, which contains commands to help you control the LED. You also
    import the `sleep()` function. A *function* consists of code that performs a particular
    task but is represented by a single word (or two) that acts as the function name.
    When you call that function name in your code, Python runs the instructions in
    the function, sparing you from having to enter all those lines again. You can
    name the function whatever you desire, although it’s best to use a word that describes
    what the function does. For example, in the previous chapter, when we used the
    code `print ("hello")`, the word `print` is a function. The IDLE editor colors
    all function names light purple, making them easy to identify. The `print()` function
    contains several code lines that display in the IDLE window the text inside the
    parentheses. You’ll use the `print()` function a lot in many of the chapters.
  prefs: []
  type: TYPE_NORMAL
- en: The `sleep()` function adds a delay between instructions. This means you can
    flash the LED on and off at different speeds. If you use a lower delay value,
    the LED flashes faster. Then you tell the Pi which pin the LED is connected to,
    which is pin 18 ❶.
  prefs: []
  type: TYPE_NORMAL
- en: 'You create a *loop* that repeats the instructions indented below it forever
    unless you stop the program ❷. Finally, you add the instructions to the loop:
    turn the LED on ❸, wait for 1 second ❹, turn the LED off, and wait for 1 second.
    The LED will flash forever.'
  prefs: []
  type: TYPE_NORMAL
- en: Running Your Program
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To run the program and make the LED flash, press **F5** on your keyboard. You
    should be prompted to save the file. Name and save your program: your LED mold
    should then come to life! To end the program, close the Python window by clicking
    the **X**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Modify: Fading the LED'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You can modify your program so the LED fades in and out, also known as *pulsing*,
    instead of flashing on and off. Open a new Python file and add the code in [Listing
    3-2](ch03.xhtml#ch03ex02). This program gradually makes the LED brighter, and
    then it fades out.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**LISTING 3-2** Fading the LED'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here you import the `PWMLED` class to enable you to pulse the LED, set the
    GPIO pin number you’re using for the LED, and then set the pulse. You also add
    a pause, which ensures that the program continuously runs and reduces the load
    on the CPU, making it run faster. Normally, the program runs once and then the
    GPIO pins are reset. The `pause()` instruction ensures that the signal to the
    GPIO program is not stopped: the program continues to run so the LED flashes until
    you exit the program.'
  prefs: []
  type: TYPE_NORMAL
- en: Save this code and run it to see the difference!
  prefs: []
  type: TYPE_NORMAL
- en: BUILDING THE LED NIGHT-LIGHT
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s level up the night-light project. You’ll add a photoresistor to make a
    simple night-light to add atmosphere to your room, as shown in [Figure 3-6](ch03.xhtml#ch03fig06).
    A *photoresistor* is a sensor that measures the amount of light in the room and
    returns a value. This value can trigger the light to turn on or off, depending
    on how dark it is.
  prefs: []
  type: TYPE_NORMAL
- en: 'Light readings are *analog*, which means they can be any value, not just on
    or off. Think of the sun rising or setting: it doesn’t just appear in the morning;
    instead, the light gradually increases. Computers, on the other hand, are *digital*,
    meaning they understand only on or off values. Computers use millions of tiny
    switches that can be turned on or off (like a light switch).'
  prefs: []
  type: TYPE_NORMAL
- en: However, if you have a dimmer switch, you can adjust the light to different
    levels of brightness. You’ll use a similar technique here.
  prefs: []
  type: TYPE_NORMAL
- en: When light hits the photoresistor, it creates a small electrical charge. You’ll
    store this charge in a *capacitor*, which is a small device designed to store
    electrical charge. You can then use the amount of charge stored in the capacitor
    to indicate how much light was detected.
  prefs: []
  type: TYPE_NORMAL
- en: If the capacitor is fully charged, the reading will be a value of 1, meaning
    the room is fully lit and you don’t need the night-light on. A reading of 0.4
    means that the room is lit about 40 percent and that it’s dark enough for your
    Pi to turn on the light.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/03fig06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-6** An Ironman night-light'
  prefs: []
  type: TYPE_NORMAL
- en: Wiring Your Night-Light
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You need to keep your LED light attached to GPIO pin 18\. [Figure 3-7](ch03.xhtml#ch03fig07)
    shows the wiring diagram for reference.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to wire the light:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Add the new parts:** Place the legs of the photoresistor into your breadboard,
    leaving at least one line of space between the legs. Add the capacitor to the
    breadboard, with one of the legs in the same row as the right leg of the photoresistor,
    as shown in [Figure 3-7](ch03.xhtml#ch03fig07).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Image](../images/03fig07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-7** Adding the capacitor and the photoresistor to the breadboard'
  prefs: []
  type: TYPE_NORMAL
- en: '**Add the wires:** Add wire 1 in line with the left leg of the photoresistor.
    Add wire 2 in line with the right leg of the photoresistor and the left leg of
    the capacitor. Place wire 3 in line with the left leg of the capacitor. These
    wires are shown in [Figure 3-7](ch03.xhtml#ch03fig07).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Connect to your Raspberry Pi:** Connect wire 1 to the first physical pin,
    the 3V3 pin, which provides the power. Connect wire 2 to GPIO pin 4: this is the
    fourth physical pin on the left. Connect wire 3 to the ground pin, GND. I recommend
    you use the nearest ground pin, number 6.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Coding the Night-Light
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To code the night-light, start a new Python file and then add the program in
    [Listing 3-3](ch03.xhtml#ch03ex03).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**LISTING 3-3** Coding the night-light'
  prefs: []
  type: TYPE_NORMAL
- en: You import the `LightSensor` and `LED` classes from the `gpiozero` library to
    help you control the photoresistor and LED, respectively ❶. Then you import the
    `time` module so you can add a short pause between each light reading ❷. To begin
    with, you’ll set the value to 2\. This will enable you to test the program by
    placing your hand over the photoresistor. When you use the program as a night-light,
    you can increase the time delay. Because a sunset can take several minutes, taking
    a reading every second would be pointless; reaching the required light level could
    take 45 minutes, and your Pi would have to take more than 2700 readings, using
    up processing time and power.
  prefs: []
  type: TYPE_NORMAL
- en: At ❸ you tell the program that the photoresistor is attached to GPIO 4\. Then
    you tell the program that the LED is attached to GPIO pin 18 ❹.
  prefs: []
  type: TYPE_NORMAL
- en: You create a `while True` loop to make the program continuously take light readings
    and check the value so it doesn’t miss the sunset ❺.You print the light reading
    value to the screen and add a short pause of 2 seconds. You might be interested
    in the light value readings, and seeing them onscreen will make it easier for
    you to test if the program is working correctly.
  prefs: []
  type: TYPE_NORMAL
- en: You then use a conditional to check whether the light reading is less than or
    equal to the value 0.4 (remember that 0 is no light and 1 is full sunlight) ❻.
    A *conditional* is an instruction that tells the program to run certain commands
    only *if* something is true. This `if` statement tells the program that if the
    value is less than or equal to 0.4, it’s getting dark, so the program should print
    an optional warning message and turn on the night-light. You can adjust the light
    level to match your environment. For example, if you live in a city, you might
    need to set the value higher to account for streetlights.
  prefs: []
  type: TYPE_NORMAL
- en: The `else` statement is another conditional that tells the computer that if
    the reading is above 0.4, it should turn off the LED ❼.
  prefs: []
  type: TYPE_NORMAL
- en: Running Your Program
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To run the program and test your photoresistor, press **F5** on your keyboard.
    This will prompt you to save your file with a recognizable name, and then it will
    run. Test your night-light by placing a cloth or your fingers over the sensor
    to block the light: this should trigger your night-light to turn on.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can adjust the sensitivity by reducing or increasing the value on line
    8 of the program. For example, try changing the line to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This line will trigger the light only when it’s very dark. To end the program,
    close the Python window by clicking the **X**.
  prefs: []
  type: TYPE_NORMAL
- en: The light in your room and the type of LED you’re using will determine the best
    values for you to use. Experiment with photoresistor values to find the one most
    appropriate for your environment.
  prefs: []
  type: TYPE_NORMAL
- en: WRAPPING UP
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You now have a working, custom-built night-light. Here are a few ideas for
    improving your light:'
  prefs: []
  type: TYPE_NORMAL
- en: Create more LED creatures and add them to your collection.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use different-colored LEDs to make different-colored lights.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add glitter to the glue before the glue sets to make it sparkle.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use a small coin-style battery to make the feature portable by placing the battery
    between the LED legs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reverse the light value so the LED light is an alarm and flashes when the light
    value is above 0.80.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
