- en: '**Footnotes**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Chapter 1: The IOS Security Model**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch01.html#fn_01) *[https://developer.apple.com/appstore/resources/approval/guidelines.html](https://developer.apple.com/appstore/resources/approval/guidelines.html)*[2.](ch01.html#fn_02)
    *[http://www.macworld.com/article/1152835/iphone_flashlight_tethering.html](http://www.macworld.com/article/1152835/iphone_flashlight_tethering.html)*[3.](ch01.html#fn_03)
    This description is, of course, slightly simplified; there are also sticky bits,
    setuid bits, and so forth. Since iOS doesn’t use DAC as its primary access control
    mechanism, though, I won’t get into those topics in this book.[4.](ch01.html#fn_04)
    You can find a good summary of the default iOS sandbox policies at *[https://media.blackhat.com/bh-us-11/DaiZovi/BH_US_11_DaiZovi_iOS_Security_WP.pdf](https://media.blackhat.com/bh-us-11/DaiZovi/BH_US_11_DaiZovi_iOS_Security_WP.pdf)*[5.](ch01.html#fn_05)
    It seems, however, that most jailbreak users are motivated by the ability to perform
    the digital equivalent of putting spinning hubcaps on your car.[6.](ch01.html#fn_06)
    *[http://theiphonewiki.com/wiki/XCon](http://theiphonewiki.com/wiki/XCon)*[7.](ch01.html#fn_07)
    *[http://www.cultofmac.com/82097/ibooks-1-2-1-tries-to-run-jailbreak-code-to-detect-jailbroken-iphones/](http://www.cultofmac.com/82097/ibooks-1-2-1-tries-to-run-jailbreak-code-to-detect-jailbroken-iphones/)*[8.](ch01.html#fn_08)
    *[http://theiphonewiki.com/wiki/Bypassing_Jailbreak_Detection](http://theiphonewiki.com/wiki/Bypassing_Jailbreak_Detection)*[9.](ch01.html#fn_09)
    *[http://stackoverflow.com/questions/4165138/detect-udid-spoofing-on-the-iphone-at-runtime/](http://stackoverflow.com/questions/4165138/detect-udid-spoofing-on-the-iphone-at-runtime/)*[10.](ch01.html#fn_10)
    *[http://phonegap.com/](http://phonegap.com/)*[11.](ch01.html#fn_11) *[http://arstechnica.com/apple/2011/11/safari-charlie-discovers-security-flaw-in-ios-gets-booted-from-dev-program/](http://arstechnica.com/apple/2011/11/safari-charlie-discovers-security-flaw-in-ios-gets-booted-from-dev-program/)*[12.](ch01.html#fn_12)
    *[http://reverse.put.as/wp-content/uploads/2011/06/syscan11_breaking_ios_code_signing.pdf](http://reverse.put.as/wp-content/uploads/2011/06/syscan11_breaking_ios_code_signing.pdf)*[13.](ch01.html#fn_13)
    *[http://www.cc.gatech.edu/~klu38/publications/security13.pdf](http://www.cc.gatech.edu/~klu38/publications/security13.pdf)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 2: Objective-C for the Lazy**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch02.html#fn_14) *[http://developer.apple.com/library/mac/#releasenotes/ObjectiveC/RN-TransitioningToARC/Introduction/Introduction.html](http://developer.apple.com/library/mac/#releasenotes/ObjectiveC/RN-TransitioningToARC/Introduction/Introduction.html)*[2.](ch02.html#fn_15)
    *[https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Protocols/NSCoding_Protocol/Reference/Reference.html](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Protocols/NSCoding_Protocol/Reference/Reference.html)*[3.](ch02.html#fn_16)
    *[https://github.com/rentzsch/jrswizzle/](https://github.com/rentzsch/jrswizzle/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 3: IOS Application Anatomy**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch03.html#fn_17) *[http://www.macroplant.com/iexplorer/](http://www.macroplant.com/iexplorer/)*[2.](ch03.html#fn_18)
    Erica Utilities has a number of other useful tools for working with jailbroken
    devices; you can check out the list at *[http://ericasadun.com/ftp/EricaUtilities/](http://ericasadun.com/ftp/EricaUtilities/)*.[3.](ch03.html#fn_19)
    *[https://developer.apple.com/library/Mac/documentation/Cocoa/Reference/Foundation/Classes/NSBundle_Class/Reference/Reference.html](https://developer.apple.com/library/Mac/documentation/Cocoa/Reference/Foundation/Classes/NSBundle_Class/Reference/Reference.html)*[4.](ch03.html#fn_20)
    Note that not all directories that can exist in this directory tree will exist
    for every application; some are created on the fly only when certain APIs are
    used by the app.[5.](ch03.html#fn_21) *[http://developer.apple.com/library/ios/#documentation/FileManagement/Conceptual/DocumentInteraction_TopicsForIOS](http://developer.apple.com/library/ios/#documentation/FileManagement/Conceptual/DocumentInteraction_TopicsForIOS)*[6.](ch03.html#fn_22)
    *[http://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/iPhoneAppProgrammingGuide.pdf](http://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/iPhoneAppProgrammingGuide.pdf)*
    ([page 69](ch05.html#page_69))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 4: Building Your Test Platform**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch04.html#fn_23) *[http://www.portswigger.net](http://www.portswigger.net)*[2.](ch04.html#fn_24)
    I generally consider Chrome a more secure daily browser, but the self-contained
    nature of Firefox does let you tweak proxy settings more conveniently.[3.](ch04.html#fn_25)
    *[http://getfoxyproxy.org](http://getfoxyproxy.org)*[4.](ch04.html#fn_26) *[http://www.stunnel.org/](http://www.stunnel.org/)*[5.](ch04.html#fn_27)
    *[https://github.com/iSECPartners/dnsRedir/](https://github.com/iSECPartners/dnsRedir/)*[6.](ch04.html#fn_28)
    *[https://github.com/iSECPartners/tcpprox/](https://github.com/iSECPartners/tcpprox/)*[7.](ch04.html#fn_29)
    *[http://www.trailofbits.com/resources/ios4_security_evaluation_paper.pdf](http://www.trailofbits.com/resources/ios4_security_evaluation_paper.pdf)*[8.](ch04.html#fn_30)
    *[http://clang-analyzer.llvm.org/](http://clang-analyzer.llvm.org/)*[9.](ch04.html#fn_31)
    *[http://clang.llvm.org/docs/AddressSanitizer.html](http://clang.llvm.org/docs/AddressSanitizer.html)*[10.](ch04.html#fn_32)
    *[http://blog.chromium.org/2012/04/fuzzing-for-security.html](http://blog.chromium.org/2012/04/fuzzing-for-security.html)*[11.](ch04.html#fn_33)
    *[https://pypi.python.org/pypi/watchdog/](https://pypi.python.org/pypi/watchdog/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 5: Debugging with lldb and Friends**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch05.html#fn_34) *[http://lldb.llvm.org/](http://lldb.llvm.org/)*[2.](ch05.html#fn_35)
    For a detailed resource on debugging in Xcode, I recommend *iOS 7 Programming:
    Pushing the Limits*; see *[http://iosptl.com/](http://iosptl.com/)*.[3.](ch05.html#fn_36)
    If you’d like further insight into assembly on iOS and ARM, check out Ray Wenderlich’s
    tutorial at *[http://www.raywenderlich.com/37181/ios-assembly-tutorial/](http://www.raywenderlich.com/37181/ios-assembly-tutorial/)*.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 6: Black-Box Testing**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch06.html#fn_37) *[http://blog.iphone-dev.org/](http://blog.iphone-dev.org/)*[2.](ch06.html#fn_38)
    *[http://iclarified.com/](http://iclarified.com/)*[3.](ch06.html#fn_39) *[https://github.com/stefanesser/dumpdecrypted](https://github.com/stefanesser/dumpdecrypted)*[4.](ch06.html#fn_40)
    Traditionally, this has been done with the GNU Debugger, gdb. However, gdb hasn’t
    been included with Xcode since version 4, and most versions in Cydia are broken.
    This method of using lldb should work for the foreseeable future ... I think.[5.](ch06.html#fn_41)
    *[https://developer.apple.com/library/mac/#documentation/DeveloperTools/Conceptual/MachORuntime/Reference/reference.html](https://developer.apple.com/library/mac/#documentation/DeveloperTools/Conceptual/MachORuntime/Reference/reference.html)*[6.](ch06.html#fn_42)
    Unless you disable PIE. You can do this with the removePIE tool; see *[https://github.com/peterfillmore/removePIE/](https://github.com/peterfillmore/removePIE/)*.[7.](ch06.html#fn_43)
    *[http://sourceforge.net/projects/machoview/](http://sourceforge.net/projects/machoview/)*[8.](ch06.html#fn_44)
    This is how it appears in `xxd(1)`, which is what I usually use for quick-and-dirty
    editing. Your editor may vary. If in doubt, check with MachOView first and then
    develop whatever scripts you may require.[9.](ch06.html#fn_45) *[http://stevenygard.com/projects/class-dump/](http://stevenygard.com/projects/class-dump/)*[10.](ch06.html#fn_46)
    *[http://code.google.com/p/networkpx/wiki/class_dump_z](http://code.google.com/p/networkpx/wiki/class_dump_z)*[11.](ch06.html#fn_47)
    *[http://www.cycript.org/](http://www.cycript.org/)*[12.](ch06.html#fn_48) *[https://github.com/limneos/weak_classdump/](https://github.com/limneos/weak_classdump/)*[13.](ch06.html#fn_49)
    *[https://www.hex-rays.com/products/ida/](https://www.hex-rays.com/products/ida/)*[14.](ch06.html#fn_50)
    *[http://www.hopperapp.com/](http://www.hopperapp.com/)*[15.](ch06.html#fn_51)
    *[https://github.com/iSECPartners/ios-ssl-kill-switch/](https://github.com/iSECPartners/ios-ssl-kill-switch/)*[16.](ch06.html#fn_52)
    *[http://iphonedevwiki.net/index.php/MobileSubstrate](http://iphonedevwiki.net/index.php/MobileSubstrate)*[17.](ch06.html#fn_53)
    *[http://iphonedevwiki.net/index.php/Theos/Getting_Started](http://iphonedevwiki.net/index.php/Theos/Getting_Started)*[18.](ch06.html#fn_54)
    *[http://gitweb.saurik.com/ldid.git](http://gitweb.saurik.com/ldid.git)*[19.](ch06.html#fn_55)
    *[http://iphonedevwiki.net/index.php/Logos](http://iphonedevwiki.net/index.php/Logos)*[20.](ch06.html#fn_56)
    *[http://www.macports.org/](http://www.macports.org/)*[21.](ch06.html#fn_57) *[http://brew.sh/](http://brew.sh/)*[22.](ch06.html#fn_58)
    *[http://www.saurik.com/id/7/](http://www.saurik.com/id/7/)*[23.](ch06.html#fn_59)
    *[https://github.com/iSECPartners/ios-ssl-kill-switch/blob/master/Tweak.xm](https://github.com/iSECPartners/ios-ssl-kill-switch/blob/master/Tweak.xm)*[24.](ch06.html#fn_60)
    *[https://github.com/iSECPartners/Introspy-iOS/](https://github.com/iSECPartners/Introspy-iOS/)*[25.](ch06.html#fn_61)
    *[https://github.com/iSECPartners/Introspy-Analyzer/](https://github.com/iSECPartners/Introspy-Analyzer/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 7: IOS Networking**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch07.html#fn_62) *[https://developer.apple.com/DOCUMENTATION/Cocoa/Conceptual/URLLoadingSystem/URLLoadingSystem.pdf](https://developer.apple.com/DOCUMENTATION/Cocoa/Conceptual/URLLoadingSystem/URLLoadingSystem.pdf)*[2.](ch07.html#fn_63)
    *[https://developer.apple.com/library/mac/#documentation/Foundation/Reference/NSURLConnectionDelegate_Protocol](https://developer.apple.com/library/mac/#documentation/Foundation/Reference/NSURLConnectionDelegate_Protocol)*[3.](ch07.html#fn_64)
    *[https://developer.apple.com/library/ios/#documentation/cocoa/conceptual/URLLoadingSystem/Articles/RequestChanges.html](https://developer.apple.com/library/ios/#documentation/cocoa/conceptual/URLLoadingSystem/Articles/RequestChanges.html)*[4.](ch07.html#fn_65)
    *https://developer.apple.com/library/ios/#documentation/Foundation/Reference/NSURLConnectionDataDelegate_protocol/Reference/Reference.html#//apple_ref/occ/intfm/NSURLConnectionDataDelegate/connection:willSendRequest:redirectResponse:*[5.](ch07.html#fn_66)
    *[https://bug665814.bugzilla.mozilla.org/attachment.cgi?id=540839](https://bug665814.bugzilla.mozilla.org/attachment.cgi?id=540839)*[6.](ch07.html#fn_67)
    *[https://docs.google.com/presentation/d/11eBmGiHbYcHR9gL5nDyZChu_-lCa2GizeuOfaLU2HOU/edit?pli=1#slide=id.g1d134dff_1_222](https://docs.google.com/presentation/d/11eBmGiHbYcHR9gL5nDyZChu_-lCa2GizeuOfaLU2HOU/edit?pli=1#slide=id.g1d134dff_1_222)*[7.](ch07.html#fn_68)
    *[https://github.com/AFNetworking/AFNetworking](https://github.com/AFNetworking/AFNetworking)*[8.](ch07.html#fn_69)
    *[https://github.com/pokeb/asi-http-request](https://github.com/pokeb/asi-http-request)*[9.](ch07.html#fn_70)
    *[https://developer.apple.com/library/prerelease/ios/documentation/MultipeerConnectivity/Reference/MultipeerConnectivityFramework/index.html](https://developer.apple.com/library/prerelease/ios/documentation/MultipeerConnectivity/Reference/MultipeerConnectivityFramework/index.html)*[10.](ch07.html#fn_71)
    *[https://nabla-c0d3.github.io/blog/2014/08/20/multipeer-connectivity-follow-up/](https://nabla-c0d3.github.io/blog/2014/08/20/multipeer-connectivity-follow-up/)*[11.](ch07.html#fn_72)
    *[https://developer.apple.com/library/ios/#qa/qa2009/qa1652.html](https://developer.apple.com/library/ios/#qa/qa2009/qa1652.html)*[12.](ch07.html#fn_73)
    *[https://developer.apple.com/library/mac/#documentation/CoreFoundation/Reference/CFSocketStreamRef/Reference/reference.html](https://developer.apple.com/library/mac/#documentation/CoreFoundation/Reference/CFSocketStreamRef/Reference/reference.html)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 8: Interprocess Communication**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch08.html#fn_74) *[https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSURL_Class/index.html#//apple_ref/doc/uid/20000301-SW21](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSURL_Class/index.html#//apple_ref/doc/uid/20000301-SW21)*[2.](ch08.html#fn_75)
    *[http://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/iPhoneAppProgrammingGuide.pdf](http://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/iPhoneAppProgrammingGuide.pdf)*
    ([page 99](ch06.html#page_99))[3.](ch08.html#fn_76) *[https://github.com/bengottlieb/Twitter-OAuth-iPhone](https://github.com/bengottlieb/Twitter-OAuth-iPhone)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 9: IOS-Targeted Web Apps**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch09.html#fn_77) *[https://www.webkit.org/](https://www.webkit.org/)*[2.](ch09.html#fn_78)
    *[http://developer.apple.com/library/ios/documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html](http://developer.apple.com/library/ios/documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html)*[3.](ch09.html#fn_79)
    *[https://github.com/apache/cordova-ios/blob/master/CordovaLib/Classes/Public/CDVURLProtocol.m](https://github.com/apache/cordova-ios/blob/master/CordovaLib/Classes/Public/CDVURLProtocol.m)*[4.](ch09.html#fn_80)
    *[http://www.andreas-kurtz.de/2014/09/malicious-apps-ios8.html](http://www.andreas-kurtz.de/2014/09/malicious-apps-ios8.html)*[5.](ch09.html#fn_81)
    *[http://docs.phonegap.com/en/1.9.0/guide_whitelist_index.md.html](http://docs.phonegap.com/en/1.9.0/guide_whitelist_index.md.html)*[6.](ch09.html#fn_82)
    *[https://github.com/shazron/KeychainPlugin](https://github.com/shazron/KeychainPlugin)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 10: Data Leakage**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch10.html#fn_83) *[https://developer.apple.com/library/ios/#documentation/System/Conceptual/ManPages_iPhoneOS/man3/asl.3.html](https://developer.apple.com/library/ios/#documentation/System/Conceptual/ManPages_iPhoneOS/man3/asl.3.html)*[2.](ch10.html#fn_84)
    *[http://www.cocoanetics.com/2011/03/accessing-the-ios-system-log/](http://www.cocoanetics.com/2011/03/accessing-the-ios-system-log/)*[3.](ch10.html#fn_85)
    *[https://github.com/Atrac613/UIPasteboardSniffer-iOS](https://github.com/Atrac613/UIPasteboardSniffer-iOS)*[4.](ch10.html#fn_86)
    *[https://developer.apple.com/library/mac/documentation/Cocoa/Reference/WebKit/Classes/WebArchive_Class/Reference/Reference.html](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/WebKit/Classes/WebArchive_Class/Reference/Reference.html)*[5.](ch10.html#fn_87)
    *[http://developer.apple.com/library/ios/#documentation/uikit/reference/UIResponder_Class/Reference/Reference.html](http://developer.apple.com/library/ios/#documentation/uikit/reference/UIResponder_Class/Reference/Reference.html)*[6.](ch10.html#fn_88)
    *[https://developer.apple.com/library/ios/documentation/cocoa/reference/foundation/Classes/NSURLCache_Class/Reference/Reference.html#//apple_ref/occ/instm/NSURLCache/setDiskCapacity](https://developer.apple.com/library/ios/documentation/cocoa/reference/foundation/Classes/NSURLCache_Class/Reference/Reference.html#//apple_ref/occ/instm/NSURLCache/setDiskCapacity):*[7.](ch10.html#fn_89)
    *[https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/URLLoadingSystem/Concepts/CachePolicies.html#//apple_ref/doc/uid/20001843-BAJEAIEE](https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/URLLoadingSystem/Concepts/CachePolicies.html#//apple_ref/doc/uid/20001843-BAJEAIEE)*[8.](ch10.html#fn_90)
    It’s rather out of character for me to not file bugs, but Apple’s bug tracker,
    RADAR, is so breathtakingly, insultingly useless that no reasonable person should
    have to use it. Instead, I recommend visiting *[http://fixradarorgtfo.com/](http://fixradarorgtfo.com/)*
    and filing this single RADAR bug: “Fix Radar or GTFO (duplicate of rdar://10993759).”[9.](ch10.html#fn_91)
    *[http://developer.apple.com/library/ios/#documentation/uikit/reference/UITextInputTraits_Protocol/Reference/UITextInputTraits.html](http://developer.apple.com/library/ios/#documentation/uikit/reference/UITextInputTraits_Protocol/Reference/UITextInputTraits.html)*[10.](ch10.html#fn_92)
    The *en* prefix will be different for different locales, but this is what it is
    for an English-speaking device.[11.](ch10.html#fn_93) *[https://www.owasp.org/index.php/OWASP_iGoat_Project](https://www.owasp.org/index.php/OWASP_iGoat_Project)*[12.](ch10.html#fn_94)
    For more details on the circumstances under which these events are triggered,
    visit *[http://www.cocoanetics.com/2010/07/understanding-ios-4-backgrounding-and-delegate-messaging/](http://www.cocoanetics.com/2010/07/understanding-ios-4-backgrounding-and-delegate-messaging/)*.[13.](ch10.html#fn_95)
    *http://developer.apple.com/library/ios/#documentation/UIKit/Reference/UIView_Class/UIView/UIView.html#//apple_ref/occ/instp/UIView/alpha*[14.](ch10.html#fn_96)
    Check out a good example of creating a Storyboard application with state preservation
    at *[http://www.techotopia.com/index.php/An_iOS_6_iPhone_State_Preservation_and_Restoration_Tutorial](http://www.techotopia.com/index.php/An_iOS_6_iPhone_State_Preservation_and_Restoration_Tutorial)*.[15.](ch10.html#fn_97)
    Using CCCrypt or, ideally, RNCryptor: *[https://github.com/rnapier/RNCryptor](https://github.com/rnapier/RNCryptor)*[16.](ch10.html#fn_98)
    Available at *[https://github.com/iSECPartners/SecureNSCoder](https://github.com/iSECPartners/SecureNSCoder)*[17.](ch10.html#fn_99)
    *[http://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/iPhoneAppProgrammingGuide.pdf](http://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/iPhoneAppProgrammingGuide.pdf)*
    ([page 112](ch07.html#page_112))'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 11: Legacy Issues and Baggage from C**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch11.html#fn_100) The term *format string attack* was popularized by Tim
    Newsham’s paper of the same name; see *[http://www.thenewsh.com/~newsham/format-string-attacks.pdf](http://www.thenewsh.com/~newsham/format-string-attacks.pdf)*.[2.](ch11.html#fn_101)
    Yes, `%n` works. Xcode might complain about it, but manual builds, such as those
    performed with the `xcodebuild` command line utility, work fine.[3.](ch11.html#fn_102)
    You can find more details on exploiting format strings to gain code execution
    in Scut’s paper on the topic; see *[https://crypto.stanford.edu/cs155/papers/formatstring-1.2.pdf](https://crypto.stanford.edu/cs155/papers/formatstring-1.2.pdf)*.[4.](ch11.html#fn_103)
    Todd C. Miller, maintainer of `sudo`, discusses the merits of these functions
    further at *[http://www.sudo.ws/todd/papers/strlcpy.html](http://www.sudo.ws/todd/papers/strlcpy.html)*.[5.](ch11.html#fn_104)
    *[https://developer.apple.com/library/ios/documentation/Security/Conceptual/SecureCodingGuide/Articles/BufferOverflows.html](https://developer.apple.com/library/ios/documentation/Security/Conceptual/SecureCodingGuide/Articles/BufferOverflows.html)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 12: Injection Attacks**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch12.html#fn_105) *[https://superevr.com/blog/2011/xss-in-skype-for-ios/](https://superevr.com/blog/2011/xss-in-skype-for-ios/)*[2.](ch12.html#fn_106)
    You can download Google Toolbox for Mac at *[https://code.google.com/p/google-toolbox-for-mac/](https://code.google.com/p/google-toolbox-for-mac/)*.[3.](ch12.html#fn_107)
    *[http://support.apple.com/kb/HT6441](http://support.apple.com/kb/HT6441)*[4.](ch12.html#fn_108)
    *[http://www.raywenderlich.com/553/how-to-chose-the-best-xml-parser-for-your-iphone-project](http://www.raywenderlich.com/553/how-to-chose-the-best-xml-parser-for-your-iphone-project)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 13: Encryption and Authentication**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch13.html#fn_109) *[http://developer.apple.com/library/ios/#samplecode/GenericKeychain/Introduction/Intro.html](http://developer.apple.com/library/ios/#samplecode/GenericKeychain/Introduction/Intro.html)*[2.](ch13.html#fn_110)
    *[https://www.trailofbits.com/resources/ios4_security_evaluation_slides.pdf](https://www.trailofbits.com/resources/ios4_security_evaluation_slides.pdf)*[3.](ch13.html#fn_111)
    *[https://github.com/iSECPartners/R2B2](https://github.com/iSECPartners/R2B2)*[4.](ch13.html#fn_112)
    *[https://github.com/granoff/Lockbox](https://github.com/granoff/Lockbox)*[5.](ch13.html#fn_113)
    *[http://useyourloaf.com/blog/2010/4/3/keychain-group-access.html](http://useyourloaf.com/blog/2010/4/3/keychain-group-access.html)*[6.](ch13.html#fn_114)
    iOS generates the file public and file private keys using D. J. Bernstein’s Curve25519,
    an Elliptic Curve Diffie-Hellman algorithm *([http://cr.yp.to/ecdh.html](http://cr.yp.to/ecdh.html)).*[7.](ch13.html#fn_115)
    Please disregard this if you are in fact a cryptographer.[8.](ch13.html#fn_116)
    I see this *all the time*. No one should ever switch from a secure default to
    ECB mode, but I still come across this problem every month or two.[9.](ch13.html#fn_117)
    *[https://github.com/rnapier/RNCryptor](https://github.com/rnapier/RNCryptor)*[10.](ch13.html#fn_118)
    *[http://robnapier.net/blog/rncryptor-hmac-vulnerability-827](http://robnapier.net/blog/rncryptor-hmac-vulnerability-827)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 14: Mobile Privacy Concerns**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[1.](ch14.html#fn_119) *[http://developer.apple.com/library/ios/#documentation/AdSupport/Reference/ASIdentifierManager_Ref/ASIdentifierManager.html](http://developer.apple.com/library/ios/#documentation/AdSupport/Reference/ASIdentifierManager_Ref/ASIdentifierManager.html)*[2.](ch14.html#fn_120)
    *[http://www.w3.org/TR/tracking-dnt/](http://www.w3.org/TR/tracking-dnt/)*[3.](ch14.html#fn_121)
    *[http://www.w3.org/2011/tracking-protection/drafts/tracking-dnt.html](http://www.w3.org/2011/tracking-protection/drafts/tracking-dnt.html)*[4.](ch14.html#fn_122)
    *[http://www.pskl.us/wp/wp-content/uploads/2010/09/iPhone-Applications-Privacy-Issues.pdf](http://www.pskl.us/wp/wp-content/uploads/2010/09/iPhone-Applications-Privacy-Issues.pdf)*[5.](ch14.html#fn_123)
    *[http://www.apple.com/iphone-5s/features/](http://www.apple.com/iphone-5s/features/)*[6.](ch14.html#fn_124)
    *[https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/8_AddingNewApps/AddingNewApps.html](https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/8_AddingNewApps/AddingNewApps.html)*'
  prefs: []
  type: TYPE_NORMAL
