- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Attacks in the Cloud
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 云中的攻击
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: You’ve heard the term *cloud computing*, either listed as a tech product feature
    or in commercials. You might have used cloud storage to save photos or documents
    to the internet. So you can understand why black hats who want access to these
    files would attack your cloud storage.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该听说过*云计算*这个词，可能是在作为技术产品的功能或广告中提到过。你可能使用过云存储，将照片或文档保存在互联网上。那么你可以理解，为什么那些想要访问这些文件的黑帽攻击者会攻击你的云存储。
- en: But these brief descriptions don’t explain what cloud computing means. In this
    chapter, we’ll discuss how cloud computing works and the basic setup of cloud
    computer services. We’ll examine how attackers target the cloud and steal the
    information or services hosted there. Then we’ll explore what you can do to better
    secure your cloud accounts, as well as be more informed when choosing a service
    to use. In this chapter’s exercise, you’ll use some of the same techniques adversaries
    use to perform an attack called *SQL injection*; that way, you’ll gain a better
    understanding of how they work. By the end of this chapter, you’ll know how the
    cloud operates and what you can do to protect your cloud storage from attackers.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 但是这些简要的描述并没有解释云计算的真正含义。在本章中，我们将讨论云计算如何工作以及云计算服务的基本设置。我们将研究攻击者如何针对云计算并窃取其中托管的信息或服务。然后，我们将探讨你可以做些什么来更好地保护你的云账户，并在选择要使用的服务时更加了解。通过本章的练习，你将使用一些对手用来执行攻击的技术，叫做*SQL注入*；通过这种方式，你将更好地理解它们是如何工作的。在本章结束时，你将了解云计算的运作方式以及如何保护你的云存储免受攻击。
- en: How Cloud Computing Works
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 云计算如何工作
- en: The term *cloud computing* can be confusing because it’s used in many different
    contexts, especially when it’s used to market products. At its most basic, cloud
    computing just means *using someone else’s computer to do something*. At first,
    that definition might seem impossibly vague. But that’s sort of the point; cloud
    computing encompasses a range of services and systems, some of which you might
    not even know about.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*云计算*这个词可能会令人困惑，因为它在许多不同的上下文中使用，尤其是在用来营销产品时。从最基本的定义来看，云计算就是*使用别人的计算机做某事*。一开始，这个定义可能显得模糊不清，但这也正是关键所在；云计算涵盖了一系列服务和系统，其中一些你可能甚至不知道。'
- en: One example of a cloud service you’re probably familiar with is website hosting.
    As discussed previously, when you go to a website, you’re reaching out to a server
    that hosts that web page. Theoretically, this means that anyone who wants to have
    a website has to have their own web server, which they set up and maintain. But
    in reality, tons of companies provide web hosting services so you can have a website
    on the internet without having to own a web server. Some of these services, such
    as Wix, Google, and Squarespace, offer additional cloud services, such as database
    storage, marketing ads to other websites, and even website-building tools.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能熟悉的一个云服务例子是网站托管。如前所述，当你访问一个网站时，你实际上是向一个托管该网页的服务器发出请求。理论上，这意味着任何想要拥有网站的人都必须拥有自己的Web服务器，并自行设置和维护。但在现实中，很多公司提供网站托管服务，让你可以在互联网上拥有自己的网站，而不必拥有Web服务器。其中一些服务，如Wix、Google和Squarespace，提供额外的云服务，如数据库存储、向其他网站投放营销广告，甚至是网站建设工具。
- en: One main advantage of a cloud service is that you don’t have to maintain the
    equipment and systems required to use a certain piece of hardware or software.
    If I wanted to host a website that sells the t-shirt designs I doodled on the
    back of my napkin at lunch, it would be difficult for me to raise the money necessary
    for all the equipment required for a modern website to operate effectively, never
    mind the know-how to set it up and run it. Instead, the cloud service allows me
    to use its equipment and expertise. This reduces the overall cost of the service,
    which is split between the service’s users.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 云服务的一个主要优势是你不需要维护使用某些硬件或软件所需的设备和系统。如果我想要托管一个销售我在午餐时随便在餐巾纸上涂鸦的T恤设计的网站，我会很难筹集到为现代网站有效运营所需的所有设备资金，更别提如何设置和运行它的技术知识了。相反，云服务允许我使用它的设备和专业知识。这减少了服务的整体成本，而这些成本会在服务的用户之间分摊。
- en: A downside of using a cloud service is that you have limited control over how
    you can operate the equipment. Using the website service as an example, the service
    offers you no control over what type of web server the company is using. You also
    have limited control over the features the service provides. If it doesn’t offer
    a particular service—for example, an online store for your website—it can be difficult
    to get the service to add that feature. You’re limited by your contract for the
    services too. For example, you might have a contract that allows only 100 visitors
    to your website a day. If more than 100 visitors browse to your site, either you’ll
    pay a premium price or the additional visitors might be unable to access the page.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用云服务的一个缺点是你对设备的操作控制有限。以网站服务为例，该服务并不让你控制公司使用什么类型的网络服务器。你对服务提供的功能也有很大限制。如果它不提供某项服务——例如，你的网站没有在线商店——那么让服务提供商增加这个功能可能会很困难。你也受限于服务合同。例如，你可能有一个合同，只允许每天最多
    100 个访问者访问你的网站。如果超过 100 个访问者浏览你的网站，你要么支付更高的费用，要么这些额外的访问者可能无法访问页面。
- en: As the internet has expanded and the number of network-connected devices has
    grown, so too have the offers of cloud services. Understanding how each service
    works can be confusing. One way of categorizing cloud systems is to describe what
    type of service they offer. Typically, we label these as the service name followed
    by *as a service*. For example, you might have *AaaS*, which could mean *Application
    as a Service* or *Analytics as a Service*. As you can see, cloud computing encompasses
    so many features and functions, even the acronyms have multiple definitions. In
    fact, people sometimes use the acronym *XaaS* to mean *Anything as a Service**,*
    which shows how widespread cloud services can be.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 随着互联网的发展和网络连接设备数量的增加，云服务的提供也在不断增加。了解每种服务如何工作可能会让人感到困惑。对云系统进行分类的一种方式是描述它们提供的服务类型。通常，我们会将这些服务标记为服务名称后跟
    *as a service*。例如，你可能会遇到 *AaaS*，它可能代表 *应用程序即服务* 或 *分析即服务*。正如你所看到的，云计算涵盖了如此多的功能和特性，甚至缩写都有多种定义。实际上，人们有时使用
    *XaaS* 来表示 *任何即服务*，这显示了云服务的广泛性。
- en: For simplicity, let’s look at the three main services we usually associate with
    the cloud.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简单起见，让我们看一下通常与云相关的三种主要服务。
- en: Software as a Service
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 软件即服务
- en: '*Software as a Service (SaaS)* is software hosted on someone else’s system
    that users can access through a network connection, typically by logging in through
    a web portal.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*软件即服务（SaaS）* 是托管在他人系统上的软件，用户可以通过网络连接访问，通常是通过网页登录门户进行登录。'
- en: A great example of SaaS is Microsoft Office 365\. This product allows you to
    access Microsoft Office applications, like Word or PowerPoint, through a website
    rather than installing the applications on your computer.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: SaaS的一个很好的例子是微软 Office 365。这个产品让你通过网站访问 Microsoft Office 应用程序，如 Word 或 PowerPoint，而不需要将这些应用程序安装到你的计算机上。
- en: 'SaaS has a few advantages: it gives you access to the latest software updates
    as well as the ability to use the software from many different systems. Also,
    SaaS often provides integration with other cloud offerings. For example, Office
    365 integrates with OneDrive, which is Microsoft’s cloud storage service.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: SaaS 有几个优点：它可以让你访问最新的软件更新，并且可以在许多不同的系统上使用该软件。此外，SaaS 通常与其他云服务提供集成。例如，Office
    365 与 OneDrive 集成，OneDrive 是微软的云存储服务。
- en: Platform as a Service
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 平台即服务
- en: '*Platform as a Service (PaaS)* includes all the infrastructure, tools, hardware,
    and software needed to run a service. A web hosting platform is one example of
    PaaS. Another example is email services, like Gmail or Outlook. The platform in
    this case is an email system, which requires a server, website portal access,
    applications and protocols, and more to operate. Just like with SaaS, but on a
    larger scale, you get access to the entire platform without having to manage the
    systems required to run it.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*平台即服务（PaaS）* 包括运行服务所需的所有基础设施、工具、硬件和软件。网站托管平台就是PaaS的一个例子。另一个例子是电子邮件服务，如 Gmail
    或 Outlook。在这种情况下，平台是电子邮件系统，它需要服务器、网站门户访问、应用程序和协议等来运行。就像SaaS一样，只不过规模更大，你可以访问整个平台，而无需管理运行所需的系统。'
- en: PaaS doesn’t give you as much freedom as SaaS, because you’re essentially limited
    by what the cloud provider runs. You have limited choice in the type of hardware
    or software to use as part of the platform. The trade-off is easier-to-manage
    options along with more robust features than you might have if you ran your own
    applications or hardware.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: PaaS不像SaaS那样给你那么多自由，因为你基本上受到云提供商运行的服务的限制。你对使用什么类型的硬件或软件作为平台的一部分选择有限。权衡是，你将获得更容易管理的选项，并且比自己运行应用程序或硬件时拥有更多强大的功能。
- en: Infrastructure as a Service
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基础设施即服务
- en: Running software or even a platform is fine for small projects, but what if
    you need a large amount of resources to run multiple different types of platforms
    at once? This is where *Infrastructure as a Service (IaaS)* comes into play. IaaS
    provides all the resources needed to maintain the services you or your company
    provide to customers. Again, that description may seem vague, but this is because
    IaaS typically covers large-scale operations that include multiple components
    working together. Let’s look at an example of a conventional IaaS setup.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 运行软件甚至平台适合小型项目，但如果你需要大量资源来同时运行多个不同类型的平台怎么办？这时*基础设施即服务（IaaS）*就派上用场了。IaaS提供所有必要的资源，用于维护你或你的公司为客户提供的服务。这个描述可能看起来有些模糊，因为IaaS通常涉及大规模的运营，其中多个组件协同工作。让我们来看一个传统IaaS设置的例子。
- en: Let’s say you create a video game that includes a multiplayer feature. The feature
    lets players join the same game to build forts to defend against attacking monsters.
    You’re a small indie developer, so you mainly focus on creating the game and its
    art design. However, you know you’ll need a lot of systems to run the multiplayer
    component, so you hire an IaaS company to provide the necessary systems.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你创建了一款包含多人功能的视频游戏。这个功能允许玩家加入同一个游戏，共同建造堡垒防御攻击的怪物。你是一个小型独立开发者，所以你主要专注于游戏的开发和艺术设计。然而，你知道你需要大量系统来运行多人组件，因此你雇佣了一家IaaS公司来提供必要的系统。
- en: The IaaS company will provide not only the servers for you to host your game,
    but also the equipment necessary for players to connect to the servers when they
    want to play the game. In addition, the IaaS will provide storage to hold all
    the players’ data when they’re not playing so they can retain their game items.
    The IaaS might also provide help desk staff in case players have trouble accessing
    a game or a server crashes.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS公司不仅会为你提供托管游戏所需的服务器，还会提供玩家在游戏时连接服务器所需的设备。此外，IaaS还会提供存储，用于保存玩家在不玩游戏时的数据，以便他们能够保留游戏物品。如果玩家在访问游戏时遇到问题，或者服务器崩溃，IaaS还可能提供帮助台工作人员。
- en: An IaaS provides lots of equipment and expertise designed to manage an essential
    service within a company. Another popular form of IaaS, known as a *managed service
    provider (MSP)*, provides most of the technical equipment for a company, such
    as desktops, servers, and routers, as well as management in the form of technicians
    and help desk staff.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS提供大量设备和专业技术，旨在管理公司内部的核心服务。另一种流行的IaaS形式，称为*托管服务提供商（MSP）*，为公司提供大部分技术设备，如桌面电脑、服务器和路由器，并且提供技术人员和帮助台工作人员来进行管理。
- en: IaaS gives you the least flexibility when it comes to what sorts of systems
    are available and how much control you have over them. In the multiplayer game
    example, you, as the game’s owner, wouldn’t necessarily be able to tweak operations
    related to how the systems are run, such as how often servers are patched, what
    type of security is in place, or how systems are recovered should they break or
    crash. Be sure to pay particular attention to the contract you sign with an IaaS,
    because the IaaS will be a major component of how you work.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS在可用系统的种类以及你对这些系统的控制权方面提供的灵活性最少。在多人游戏的例子中，作为游戏的拥有者，你不一定能调整与系统运行相关的操作，比如服务器打补丁的频率、使用的安全类型，或者当系统崩溃或故障时如何恢复。签署IaaS合同时要特别注意，因为IaaS将是你工作方式中的一个重要组成部分。
- en: '[Figure 7-1](#figure7-1) shows some examples of services provided at the various
    levels of cloud offerings.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[图7-1](#figure7-1)展示了在不同云服务层级提供的一些服务示例。'
- en: '![f07001](image_fi/501287c07/f07001.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![f07001](image_fi/501287c07/f07001.png)'
- en: 'Figure 7-1: Application examples by cloud levels'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-1：按云层级划分的应用示例
- en: Security as a Service
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安全即服务
- en: Another field in cloud computing is *Security as a Service (SECaaS)*, which
    provides cybersecurity services to protect clients from attacks. Security as a
    Service can include a number of different components. Some are limited in scope,
    such as vulnerability scanning services, and others are full-security services
    with personnel on call in the event of an attack. One example, known as *managed
    detection and response (MDR),* attempts to detect attacks happening in real time
    and respond to them in a way that prevents further damage. The service can also
    include ongoing security work, such as penetration testing or forensics.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算中的另一个领域是*安全即服务（SECaaS）*，它提供网络安全服务，保护客户免受攻击。安全即服务可以包括多个不同的组件。有些服务范围有限，例如漏洞扫描服务，而其他服务则是全面的安全服务，提供在发生攻击时随时待命的人员支持。一个例子是*托管检测与响应（MDR）*，它试图实时检测攻击并作出响应，以防止进一步的损害。该服务还可以包括持续的安全工作，如渗透测试或取证。
- en: Attacking the Cloud
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 攻击云计算
- en: Many of the attacks discussed in previous chapters are effective against cloud
    infrastructure. For example, social engineering, discussed in Chapter 3, and authentication
    attacks, discussed in Chapter 5, are very strong attacks against cloud services.
    Because many cloud services offer websites through which a client can interact
    with the service (for example, a Gmail account or Office 365 application), social
    engineering can help a black hat gain access to that account information and log
    in as the user. It can also be more difficult to detect these malicious logins,
    because the cloud application is so widely accessible that checking for typical
    indicators of malicious activity, like the time of day or location of the login
    attempt, might not work.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 许多在前几章中讨论的攻击方法对云基础设施仍然有效。例如，第3章讨论的社会工程学攻击和第5章讨论的身份验证攻击，对云服务来说是非常强大的攻击手段。由于许多云服务提供网站，客户可以通过这些网站与服务进行互动（例如Gmail帐户或Office
    365应用程序），社会工程学攻击可以帮助黑客获取帐户信息并以用户身份登录。由于云应用程序的可访问性极广，因此检查诸如登录时间或登录尝试位置等典型的恶意活动指示器可能不起作用，从而使这些恶意登录更加难以被检测。
- en: Another example of an attack that works against cloud computing is the man-in-the-middle
    attack, introduced in Chapter 6. If an adversary can intercept network traffic
    between the client and their cloud service provider, they can manipulate the traffic
    to access the service or steal the data that is being transferred. Setting up
    a fake page that looks like the cloud service login page is one way that an attacker
    can create this man-in-the-middle scenario.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种针对云计算的攻击是中间人攻击，这在第6章中有介绍。如果攻击者能够拦截客户端与云服务提供商之间的网络流量，他们可以操控流量来访问服务或窃取正在传输的数据。攻击者可以通过设置一个看起来像云服务登录页面的假页面来创建这种中间人攻击场景。
- en: Malware is also a viable option for attack. Many adversaries have targeted cloud
    services with malware because of the amount of resources they can exploit. *Crypto-mining
    malware*, which illegally mines cryptocurrency, like Bitcoin, is one example.
    Crypto-mining takes a lot of CPU resources and power, so adversaries sometimes
    attempt to use cloud service resources to mine cryptocurrency. This kind of attack
    can be tricky to detect, because many crypto-mining programs are disguised as
    legitimate applications running in the cloud environment.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件也是一种有效的攻击手段。许多攻击者通过恶意软件攻击云服务，因为它们可以利用大量的资源。例如，非法挖掘加密货币（如比特币）的*加密挖矿恶意软件*就是一个例子。加密挖矿需要大量的CPU资源和电力，因此攻击者有时会试图利用云服务的资源来挖掘加密货币。这类攻击很难被发现，因为许多加密挖矿程序伪装成在云环境中运行的合法应用程序。
- en: Most cloud attacks aim to gain access to the infrastructure the cloud provider
    runs. One way to do this is to look for exploits in the client-facing systems
    the cloud service provides, and then use those exploits to access the private,
    internal resources. We often refer to these exploits as *web application attacks*;
    we’ll take a closer look at them next.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数云攻击的目标是获得云服务提供商运行的基础设施的访问权限。实现这一点的一种方式是寻找云服务提供的客户端系统中的漏洞，然后利用这些漏洞访问私人内部资源。我们通常将这些漏洞称为*Web应用攻击*；接下来我们将仔细了解这些攻击。
- en: Web Application Attacks
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Web应用攻击
- en: Many cloud services have a client interface that you can access through a website
    or other online application. This interface allows you to interact with the features
    you paid for. It also provides a perfect place for adversaries to attack. Because
    the application must remain available for clients to use, it can be difficult
    to stop an attacker from accessing it, too. Some web applications are open to
    the public as well, meaning anyone, at any time, can access them.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 许多云服务具有客户端接口，您可以通过网站或其他在线应用程序访问此接口。此接口允许您与您付费的功能进行互动，同时也为攻击者提供了一个理想的攻击目标。由于应用程序必须保持可供客户端使用，因此阻止攻击者访问它可能是很困难的。有些网络应用程序对公众开放，意味着任何人、任何时间都可以访问它们。
- en: Also, web applications are often connected to resources inside the internal
    network. This enables outside users to access data that isn’t usually available
    to the outside, such as user profiles or personal information. It also creates
    a way for adversaries to gain access to the inside network and steal that data.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，网络应用程序通常与内部网络中的资源连接。这使得外部用户能够访问通常对外部不可用的数据，如用户个人资料或个人信息。它还为攻击者提供了一个方式，可以通过这些外部云服务访问内部网络，并窃取这些数据。
- en: As discussed in Chapter 6, private networks usually send connections from the
    outside network to the DMZ. This allows users to access cloud services and other
    resources without having access to the internal network. When a user needs access
    to the data stored on the internal network, the cloud service in the DMZ accesses
    those resources on the user’s behalf.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 正如第六章所讨论的，私有网络通常将来自外部网络的连接发送到DMZ（隔离区）。这允许用户访问云服务和其他资源，而无需访问内部网络。当用户需要访问存储在内部网络上的数据时，DMZ中的云服务代表用户访问这些资源。
- en: Yet there are many ways that an adversary can attack the internal network through
    external cloud services. One of the main goals of these attacks is to gain *arbitrary
    code execution*, which is the ability to execute whatever commands or code you
    want on a system. Usually, only accounts with the highest privileges can do this,
    but there are often ways to bypass the restrictions in place. Once a black hat
    can run their own code, they can fully infiltrate the system by either installing
    a backdoor or creating an account.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，攻击者仍有许多方法可以通过外部云服务攻击内部网络。这些攻击的主要目标之一是获得*任意代码执行*的能力，即在系统上执行任何命令或代码的能力。通常，只有具有最高权限的帐户才能执行此操作，但通常也有方法绕过现有的限制。一旦黑帽攻击者能够运行自己的代码，他们就可以通过安装后门或创建账户的方式完全渗透系统。
- en: Let’s look at some of the most common examples of web application attacks to
    determine the general structure of this type of attack and how they work.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一些最常见的网络应用程序攻击实例，来确定此类攻击的一般结构及其工作原理。
- en: Buffer Overflows
  id: totrans-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 缓冲区溢出
- en: A *buffer overflow* *attack* attempts to fill a computer’s memory so that either
    the system crashes or the attacker gains access to normally unauthorized parts
    of the system. To understand how this attack works, you first need to know how
    memory allocation works. A system uses memory to store all of its information.
    Normally, a system only has a set amount of memory, which it allocates in blocks
    to its functions. Applications, such as those cloud services use, are given a
    set number of blocks of memory to use. Unused memory is known as a *buffer*.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*缓冲区溢出* *攻击*尝试填满计算机的内存，从而使系统崩溃或攻击者获得对系统通常未经授权部分的访问权限。要理解这种攻击是如何工作的，首先需要了解内存分配是如何运作的。系统使用内存来存储所有信息。通常，系统只有一定量的内存，并将其分配给各个功能模块。像云服务所使用的应用程序会分配一固定数量的内存块。未使用的内存称为*缓冲区*。'
- en: When attackers commit a buffer overflow attack, they intentionally try to overflow
    the memory buffer allocated to the application. For example, if an application
    were given five blocks of memory, the adversary could attempt to inject six blocks
    of data into it to overflow the allocated space. [Figure 7-2](#figure7-2) illustrates
    this process; the word *excessive* is larger than the space allocated in section
    A.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当攻击者发起缓冲区溢出攻击时，他们故意试图溢出分配给应用程序的内存缓冲区。例如，如果一个应用程序分配了五个内存块，攻击者可能会尝试将六个数据块注入其中，超出已分配的空间。[图
    7-2](#figure7-2)展示了这一过程；单词*excessive*的大小超过了A部分分配的空间。
- en: '![f07002](image_fi/501287c07/f07002.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![f07002](image_fi/501287c07/f07002.png)'
- en: 'Figure 7-2: Buffer overflow example (image modified from the original covered
    under the Attribution-ShareAlike 2.0 Generic [CC BY-SA 2.0] license, [https://creativecommons.org/licenses/by-sa/2.0/](https://creativecommons.org/licenses/by-sa/2.0/))'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-2：缓冲区溢出示例（图片修改自原图，原图受[知识共享署名-相同方式共享 2.0 通用版](https://creativecommons.org/licenses/by-sa/2.0/)许可保护）
- en: Once the buffer is breached, a few different events can happen. Some systems
    will cause an error and crash because they can’t store all the data provided to
    them. Another option is that the data overflows into the next block.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦缓冲区被突破，可能会发生几种不同的事件。一些系统会因为无法存储提供给它们的所有数据而导致错误并崩溃。另一种选择是数据溢出到下一个内存块。
- en: Often, attackers place commands at the end of a long string of data that they
    submit to the application. If the memory overflows the buffer and runs into a
    memory block allocated to administrative functions, the system command might be
    executed using a high level of privilege. This could result in the adversary executing
    any code they want to on the system.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，攻击者会在提交给应用程序的数据的末尾添加命令。如果内存溢出并覆盖分配给管理功能的内存块，系统命令可能会使用高级别权限执行。这可能导致攻击者在系统上执行他们想要的任何代码。
- en: The best way to manage a buffer overflow is to use a feature called *input validation*.
    When a user sends data to the system to be committed to memory, input validation
    code first checks to ensure the data will fit and arrives in the proper format.
    If the input is unacceptable, the system drops it before it commits it fully to
    memory. This stops the buffer overflow attack before it can begin. Another technique
    that application developers can use is called *fuzzing*. Fuzzinggenerates random
    inputs of various lengths and automatically applies them to the input fields on
    a website or cloud application. This allows a cloud service to ensure that input
    validation is in place and that no exploits, like a buffer overflow, will occur.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 管理缓冲区溢出的最佳方法是使用一种名为 *输入验证* 的功能。当用户向系统发送数据以存储到内存中时，输入验证代码首先检查数据是否适合，并且以正确的格式到达。如果输入不可接受，系统会在完全提交到内存之前丢弃它。这可以在缓冲区溢出攻击开始之前将其阻止。开发人员还可以使用另一种技术，称为
    *模糊测试*。模糊测试会生成不同长度的随机输入，并自动将其应用到网站或云应用程序的输入字段中。这使得云服务可以确保输入验证到位，并且不会发生缓冲区溢出等漏洞。
- en: SQL Injection
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: SQL 注入
- en: '*Structured Query Language (SQL)* is a programming language used to access
    or manipulate the data stored in databases. Web applications sometimes use SQL
    databases to store information that the website’s users can access. For example,
    a website that has a login feature might use a SQL database to store its users’
    account information, including their passwords. When a user logs in to the website,
    the web application creates a custom SQL query and sends it to the database to
    retrieve the user’s information. [Figure 7-3](#figure7-3) shows how this works.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*结构化查询语言（SQL）* 是一种用于访问或操作存储在数据库中的数据的编程语言。Web 应用程序有时使用 SQL 数据库存储网站用户可以访问的信息。例如，一个具有登录功能的网站可能会使用
    SQL 数据库存储用户的账户信息，包括他们的密码。当用户登录网站时，Web 应用程序会创建一个自定义 SQL 查询，并将其发送到数据库以检索用户的信息。[图
    7-3](#figure7-3)展示了这一过程是如何工作的。'
- en: '![f07003](image_fi/501287c07/f07003.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![f07003](image_fi/501287c07/f07003.png)'
- en: 'Figure 7-3: An example of a normal SQL login'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-3：正常 SQL 登录示例
- en: Sometimes, using a SQL query to access a database means that a user can use
    the password input field to send any values of their choosing directly to the
    database for processing. For this reason, it’s possible for an attacker to inject
    a text string other than a username and password into the database—say, their
    own SQL queries, which would allow them to execute commands on the database. As
    a result, they could create new accounts with administrator privileges, change
    the passwords on existing accounts to let them log in to the accounts using the
    new passwords, and mine the database for personal information, such as credit
    card numbers. The black hat can even delete the database! [Figure 7-4](#figure7-4)
    shows an example of a SQL injection.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，使用 SQL 查询访问数据库意味着用户可以利用密码输入字段将他们选择的任何值直接发送到数据库进行处理。因此，攻击者可能会将用户名和密码之外的文本字符串注入到数据库中——比如他们自己的
    SQL 查询，这会允许他们在数据库上执行命令。结果，他们可能会创建具有管理员权限的新账户，修改现有账户的密码，让他们使用新密码登录这些账户，并挖掘数据库中的个人信息，如信用卡号。黑帽黑客甚至可以删除数据库！[图
    7-4](#figure7-4)展示了 SQL 注入的一个示例。
- en: '![f07004](image_fi/501287c07/f07004.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![f07004](image_fi/501287c07/f07004.png)'
- en: 'Figure 7-4: An example of a SQL attack'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-4：SQL 攻击示例
- en: The top section shows how a normal SQL query is created from a username and
    password. The bottom section shows a standard query used to determine whether
    a service is susceptible to SQL injection. This query essentially tells the database
    to look for any user and return that information (the password field gets nullified
    by the */ syntax), indicating to the attacker that the service is susceptible
    to this type of attack.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 上半部分展示了如何通过用户名和密码创建正常的 SQL 查询。下半部分展示了用于确定服务是否容易受到 SQL 注入攻击的标准查询。该查询基本上告诉数据库查找任何用户并返回该信息（密码字段通过
    */ 语法被置为 null），从而向攻击者指示该服务易受这种攻击类型的影响。
- en: That said, you won’t often see this succeed in modern systems, because most
    services have recognized and mitigated the attack. As with buffer overflows, the
    best way to defeat this attack is to use input validation to remove malicious
    SQL queries before they’re sent to the database. Still, it’s an excellent example
    of how an adversary can use the backend infrastructure to attack a cloud service.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，你在现代系统中很少会看到这种攻击成功，因为大多数服务已经识别并缓解了这种攻击。像缓冲区溢出一样，击败这种攻击的最佳方法是使用输入验证，删除发送到数据库之前的恶意
    SQL 查询。不过，它仍然是一个很好的例子，展示了对手如何利用后端基础设施攻击云服务。
- en: XML Injection
  id: totrans-58
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: XML 注入
- en: '*Extensible Markup Language (XML)* is a set of rules used to create dynamic
    documents that web servers can read to populate web pages. For example, let’s
    say you’re on sparklekitten.net, shopping for all those cool Sparkle Kitten products.
    When you click an item, the web server can send an XML request to a database with
    price information. The database sends that information using XML, which the web
    server then populates into the web page, giving you the latest product price.
    XML is beneficial, because it works no matter what type of web server or database
    you’re running; if both understand XML, they can communicate with each other.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*可扩展标记语言 (XML)* 是一组用于创建动态文档的规则，web 服务器可以读取这些文档来填充网页。例如，假设你在 sparklekitten.net
    上，正在购物，挑选那些酷炫的 Sparkle Kitten 产品。当你点击一个商品时，web 服务器可以向数据库发送一个包含价格信息的 XML 请求。数据库使用
    XML 发送该信息，web 服务器随后将其填充到网页中，给你提供最新的产品价格。XML 很有用，因为无论你使用什么类型的 web 服务器或数据库，只要它们都支持
    XML，它们就可以相互通信。'
- en: Adversaries use XML’s flexibility to their advantage. In an XML injection attack,
    the black hat creates their own XML document and sends it to the web server. The
    web server accepts the XML document and updates the site using the malicious input
    from the attacker. An XML injection attack can behave differently depending on
    how the document is written. For example, it’s possible to create a user with
    full administrator privileges using XML injection.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对手利用 XML 的灵活性来为自己谋取利益。在 XML 注入攻击中，黑客创建自己的 XML 文档并将其发送到 web 服务器。web 服务器接受该 XML
    文档，并使用攻击者的恶意输入更新网站。XML 注入攻击的表现可能因文档的编写方式而异。例如，使用 XML 注入有可能创建一个拥有完整管理员权限的用户。
- en: Often, attackers use other exploits to get the web server to validate the XML
    document. Like with SQL injection, they might use a field in the web page to inject
    the XML information into the application’s backend. That means you can use input
    validation to defend against these attacks too. If the system can recognize the
    XML information, it can remove it from the input or reject it outright.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者通常会使用其他漏洞来让 web 服务器验证 XML 文档。与 SQL 注入类似，他们可能会利用网页中的一个字段，将 XML 信息注入到应用程序的后端。这意味着你也可以使用输入验证来防御这些攻击。如果系统能够识别
    XML 信息，就可以将其从输入中移除，或者直接拒绝该输入。
- en: Defending the Cloud
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 防御云服务
- en: Cloud services can be more secure than systems you own and run. The reason is
    that cloud providers can spend more money on security than smaller companies can.
    Also, because cloud providers service multiple paying clients, they can afford
    to maintain several security services, including hardware, software, and personnel,
    without having to charge any one client the full cost of those services. It’s
    also in the best interest of the cloud provider to have a high level of security,
    because its entire business is based on making sure its clients can use its service
    securely and consistently.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 云服务比你拥有和运行的系统可能更安全。原因在于云服务提供商可以在安全性上花费比小型公司更多的资金。此外，由于云服务提供商为多个付费客户提供服务，他们能够负担得起维护多个安全服务，包括硬件、软件和人员，而无需让任何一个客户承担这些服务的全部费用。对于云服务提供商来说，确保安全性也是其最大利益，因为其整个业务是建立在确保客户能够安全、稳定地使用其服务的基础上的。
- en: However, you can’t always rely on a cloud provider to have the security you
    need. Before signing up for a cloud service, carefully examine its terms of service
    to determine what level of security the cloud provider will maintain. The terms
    should also tell you what you, as the client, are responsible for. Many cloud
    providers keep compliance reports, such as a SOC II report, that you can request.
    These reports not only show what security features they have in place, but also
    provide proof that those features are functional.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你不能总是依赖云服务提供商提供所需的安全性。在注册云服务之前，仔细检查其服务条款，以确定云服务提供商将保持的安全级别。这些条款还应该告知你作为客户端的责任。许多云服务提供商会保留合规报告，例如
    SOC II 报告，你可以请求查看。这些报告不仅展示他们所具备的安全功能，还提供了这些功能有效运行的证明。
- en: One of the weakest points of cloud security is at the publicly accessible client
    portals. Many of the attacks discussed so far begin at the web page that the client
    uses to interact with the cloud service. Administrators must frequently test these
    portals to ensure they’re secure. One way to do that is to use fuzzing, as discussed
    in “Buffer Overflows” on page 130\. You should also add cloud applications and
    connections to the monitoring you’re doing for the systems on your network. For
    example, many cloud services allow you to integrate with third-party applications,
    such using a Facebook login to log in to your account, or with systems that you
    control on your internal network, such as a customer database. Monitoring what
    access your cloud service has to other applications, systems, or accounts can
    help ensure that a black hat hasn’t taken control of your cloud account or used
    the cloud service to gain access to your internal systems.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 云安全的一个薄弱点是公开可访问的客户端门户。到目前为止讨论的许多攻击都始于客户端用来与云服务交互的网页。管理员必须经常测试这些门户，以确保它们的安全性。实现这一点的一个方法是使用模糊测试，正如在第130页的“缓冲区溢出”中所讨论的那样。你还应该将云应用和连接添加到你为网络上的系统进行的监控中。例如，许多云服务允许你与第三方应用进行集成，比如使用
    Facebook 登录来登录你的账户，或者与系统进行集成，这些系统你可以控制在你的内部网络中，比如客户数据库。监控你的云服务对其他应用、系统或账户的访问，可以帮助确保黑客没有控制你的云账户，或利用云服务访问你的内部系统。
- en: It’s also important for cloud service users to have proper training. This preparation
    will help ensure that a user doesn’t fall prey to a social engineering attack.
    Using multi-factor authentication can protect the cloud service too. Many attackers
    will give up and move on to easier victims rather than taking the time to break
    through multi-factor authentication.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于云服务用户来说，接受适当的培训同样重要。这种准备有助于确保用户不会成为社会工程攻击的受害者。使用多因素认证也可以保护云服务。许多攻击者会放弃，转而寻找更容易的受害者，而不是花时间突破多因素认证。
- en: 'Exercise: Performing SQL Injection on the Damn VulnerableWeb Application'
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习：对 Damn Vulnerable Web Application 进行 SQL 注入攻击
- en: To better understand the principles of SQL injection, let’s perform the attack.
    We’ll target the *Damn Vulnerable Web Application* *(DVWA**),* an intentionally
    defenseless application designed for testing various weaknesses.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解 SQL 注入的原理，让我们进行一次攻击。我们将以*Damn Vulnerable Web Application*（*DVWA*）为目标，这是一个有意设置防御漏洞的应用，旨在测试各种弱点。
- en: Before you can load the DVWA, you’ll need a platform to run it on. Because the
    DVWA is, well, vulnerable, it’s best to run it as a virtual machine or container.
    For this exercise, we’ll use the service Docker to do this. Docker is a platform
    for running containers, which are essentially software packages designed to run
    regardless of where they’re executed.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在您加载 DVWA 之前，您需要一个运行平台。由于 DVWA 存在漏洞，最好将其作为虚拟机或容器运行。为了完成本练习，我们将使用 Docker 服务。Docker
    是一个运行容器的平台，容器本质上是设计成可以在任何地方运行的软件包。
- en: Installing Docker and the DVWA
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 Docker 和 DVWA
- en: To sign up for a free account and install Docker, visit [https://www.docker.com/](https://www.docker.com/),
    as shown in [Figure 7-5](#figure7-5). Click the **Get Started** button in the
    upper-right corner, which should take you through the process of downloading and
    installing the Docker Desktop application. The standard installation will work
    for our purposes.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 若要注册一个免费帐户并安装 Docker，请访问[https://www.docker.com/](https://www.docker.com/)，如[图
    7-5](#figure7-5)所示。点击右上角的**开始使用**按钮，按照流程下载并安装 Docker Desktop 应用程序。标准安装即可满足我们的需求。
- en: Once you’ve installed Docker, you can decide to go through the tutorial or get
    started right away.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 安装好 Docker 后，您可以选择通过教程进行学习，或者直接开始使用。
- en: '![f07005](image_fi/501287c07/f07005.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![f07005](image_fi/501287c07/f07005.png)'
- en: 'Figure 7-5: The Docker home page'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-5：Docker 首页
- en: 'Next, you’ll need to download and launch the DVWA using Docker. To do this,
    access the command line by going to your Start menu and entering **Command Prompt**
    on Windows or opening the Terminal application on macOS. Then run the following
    command:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要使用 Docker 下载并启动 DVWA。为此，请通过进入开始菜单并在 Windows 上输入**命令提示符**，或在 macOS 上打开终端应用程序来访问命令行。然后运行以下命令：
- en: '[PRE0]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This command should create the container housing the DVWA. Once the command
    is finished running, the output should look like this:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令应创建包含 DVWA 的容器。命令运行完成后，输出应如下所示：
- en: '[PRE1]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: With the DVWA successfully installed, you can open the application. Click the
    Docker icon in the task bar and then click **Dashboard**, as shown in [Figure
    7-6](#figure7-6).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功安装 DVWA 后，您可以打开该应用程序。点击任务栏中的 Docker 图标，然后点击**仪表板**，如[图 7-6](#figure7-6)所示。
- en: '![f07006](image_fi/501287c07/f07006.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![f07006](image_fi/501287c07/f07006.png)'
- en: 'Figure 7-6: Selecting Dashboard from the Docker menu'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-6：从 Docker 菜单中选择仪表板
- en: You should see the DVWA listed as a container you can select. When you highlight
    the container, it should show several icons that provide different options. Click
    the first one, **Open in Browser**, as shown in [Figure 7-7](#figure7-7), to launch
    the DVWA.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能看到 DVWA 列为一个可以选择的容器。当您高亮该容器时，它应显示多个图标，提供不同的选项。点击第一个**在浏览器中打开**，如[图 7-7](#figure7-7)所示，以启动
    DVWA。
- en: '![f07007](image_fi/501287c07/f07007.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![f07007](image_fi/501287c07/f07007.png)'
- en: 'Figure 7-7: Select Open in Browser to open the DVWA container'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-7：选择“在浏览器中打开”以打开 DVWA 容器
- en: 'A browser window opens to a login page for the DVWA. Use the following default
    credentials to log in:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一个浏览器窗口将打开，进入 DVWA 的登录页面。使用以下默认凭据登录：
- en: '[PRE2]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: A screen like the one shown in [Figure 7-8](#figure7-8) appears. Here you can
    create a database to use for your DVWA scenarios. Click the **Create/Reset Database**
    button at the bottom to begin. You’ll have to log in again once you do.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 出现如[图 7-8](#figure7-8)所示的屏幕。在这里，您可以创建一个数据库，以便在 DVWA 场景中使用。点击底部的**创建/重置数据库**按钮开始操作。操作后，您需要重新登录。
- en: '![f07008](image_fi/501287c07/f07008.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![f07008](image_fi/501287c07/f07008.png)'
- en: 'Figure 7-8: Creating a database for the DVWA'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-8：为 DVWA 创建数据库
- en: Now that you’ve finished setting up the DVWA, we can do some SQL injection.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经完成了 DVWA 的设置，我们可以进行一些 SQL 注入实验了。
- en: Listing Users
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列出用户
- en: Once the installation is done, various attacks should automatically be listed
    on the left side of the main page. Click **SQL Injection** to go to a page with
    a User ID field and a Submit button, as shown in [Figure 7-9](#figure7-9).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，页面左侧应自动列出各种攻击。点击**SQL 注入**，进入一个包含用户 ID 字段和提交按钮的页面，如[图 7-9](#figure7-9)所示。
- en: '![f07009](image_fi/501287c07/f07009.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![f07009](image_fi/501287c07/f07009.png)'
- en: 'Figure 7-9: The SQL Injection field'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-9：SQL 注入字段
- en: 'To start the injection, let’s try something simple. Enter **1** in the field
    and press ENTER. A red error text pop-up should appear with the following text:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始注入，让我们尝试一个简单的操作。请输入**1**在字段中并按回车键。此时应弹出一个红色错误文本，显示以下内容：
- en: '[PRE3]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This error already indicates that the application is vulnerable: instead of
    displaying *User Not Found* or a similar message, it shows the first and last
    name of the user with the ID of *1*. Let’s see if we can find more users. Enter
    the following into the User ID field and press ENTER:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这个错误已经表明应用程序存在漏洞：它没有显示*用户未找到*或类似的消息，而是显示了 ID 为*1*的用户的名字和姓氏。让我们看看能否找到更多用户。输入以下内容到用户
    ID 字段并按 ENTER 键：
- en: '[PRE4]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let’s break down this input. The SQL language evaluates every query to either
    true or false. The `or` operator displays a record if any of the conditions separated
    by that operator are true. Because `sparklekitten` won’t be an entry in the User
    ID field, this condition will be false, but because 1 always equals 1, this condition
    will be true. By SQL’s logic, this input will essentially produce all the User
    ID entries in the database, because the 1=1 is true and the `or` operator refers
    to either condition; SQL query believes every entry meets the requirements of
    the query and sends every username as a result. By entering this input, you should
    get the following output:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来分解这个输入。SQL 语言将每个查询评估为真或假。`or` 运算符会在其分隔的条件之一为真时显示记录。因为 `sparklekitten` 不会出现在用户
    ID 字段中，这个条件将为假，但因为 1 永远等于 1，这个条件将为真。按照 SQL 的逻辑，这个输入实际上会返回数据库中所有的用户 ID 记录，因为 1=1
    为真，而 `or` 运算符指的是任一条件；SQL 查询认为每个条目都符合查询要求，结果会返回每个用户名。输入这个内容后，你应该会看到如下输出：
- en: '[PRE5]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see, there are five users in the database.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，数据库中有五个用户。
- en: Finding Database Table Names
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找数据库表名
- en: Now that you know running SQL commands from the User ID input field works, you
    can use SQL queries to find more information about the database. For example,
    let’s find all the names of the tables in the database. A *table* is like an Excel
    spreadsheet; it stores data in columns and rows. If you find the name of a table,
    you can make queries specific to that table.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道从用户 ID 输入字段运行 SQL 命令是有效的，你可以使用 SQL 查询来查找更多数据库信息。例如，找出数据库中所有表的名称。*表*就像 Excel
    表格一样，它以列和行的形式存储数据。如果你找到了一个表的名称，你可以针对该表进行特定的查询。
- en: 'To find a table name, use the following query:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找表名，请使用以下查询：
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This command allows us to run a SQL query that asks to select two results from
    the `information_schema` table: `null` and `table_name`. The `null` value will
    return nothing. We use `null` because we know there are two fields (first name
    and surname), and we have to have two results. The real focus is the table name;
    this query finds the table names in the `information_schema` table. In SQL databases,
    the *information schema* table holds the names of all the tables in the database,
    so we’re essentially asking the database to return a list of every table. We should
    get a long list of names, most of which are standard tables created for running
    the SQL database. In the following output, only the two at the top are important
    for our purposes: `guestbook` and `users`.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令允许我们运行一个 SQL 查询，要求从 `information_schema` 表中选择两个结果：`null` 和 `table_name`。`null`
    值不会返回任何内容。我们使用 `null` 是因为我们知道有两个字段（名字和姓氏），因此必须返回两个结果。真正的重点是表名；这个查询会找到 `information_schema`
    表中的表名。在 SQL 数据库中，*信息架构*表保存了数据库中所有表的名称，因此我们实际上是要求数据库返回每个表的列表。我们应该会得到一个很长的表名列表，其中大多数是为运行
    SQL 数据库而创建的标准表。在以下输出中，只有顶部的两个表名对我们很重要：`guestbook` 和 `users`。
- en: '[PRE7]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Because we’re trying to find information about users, let’s focus there. Now
    that we know the table name for users, we can query it for more information. Try
    the following query to see if you find anything of interest before continuing
    with the exercise:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们试图查找有关用户的信息，所以我们将重点关注这部分。现在我们知道了用户表的名称，我们可以查询它以获取更多信息。尝试以下查询，看看在继续练习之前是否能找到任何感兴趣的内容：
- en: '[PRE8]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This line asks for all the column names in the `users` table. The `concat` command
    asks for the table name and column name from any table named `users`. The `0x0a`
    syntax represents a newline so the table name and column name are printed separately,
    making them easier to read.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这行请求获取 `users` 表中所有列的名称。`concat` 命令要求从名为 `users` 的任何表中获取表名和列名。`0x0a` 语法表示换行，因此表名和列名会分开显示，便于阅读。
- en: When you enter this query, the output should contain several lines showing the
    names of the columns in the table.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当你输入这个查询时，输出应该包含几行，显示表中的列名称。
- en: Finding Passwords
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找密码
- en: 'One column in particular is of interest to our goal in this exercise:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次练习中，有一列特别值得关注：
- en: '[PRE9]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This output indicates that a `password` column exists. That seems promising!
    Use the following query to see what the database stores in that field:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这个输出表明存在一个 `password` 列。这看起来很有希望！使用以下查询查看数据库在该字段中存储了什么：
- en: '[PRE10]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This query asks for the `first_name` column, the `last_name` column, the `user`
    column, and the `password` column in the `users` table. The output should show
    all of this information, giving us the password for the admin account for this
    database. Congratulations! You just got access to the database using SQL injection.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这个查询请求的是 `first_name` 列、`last_name` 列、`user` 列和 `password` 列，来自 `users` 表。输出应显示所有这些信息，给我们提供这个数据库管理员账户的密码。恭喜！你刚刚通过
    SQL 注入获得了数据库访问权限。
- en: This scenario is designed to be easily exploitable, but performing SQL injection
    on other sites won’t be so straightforward. Nevertheless, you should now recognize
    how simple coding mistakes can lead to large vulnerabilities. By shaping standard
    SQL queries and learning information about the names of tables in the database,
    you discovered a lot of useful information, including passwords. Once you have
    the passwords, you’ll likely gain access to the database.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这个场景设计得容易被利用，但在其他网站上执行 SQL 注入就没有这么简单了。不过，你现在应该能认识到，简单的编码错误可能会导致严重的安全漏洞。通过构造标准的
    SQL 查询并学习数据库中表的名称，你发现了很多有用的信息，包括密码。一旦获得了密码，你很可能就能访问数据库。
- en: There are many other exploits in the DVWA. I highly encourage you to experiment
    with it and read the resources it provides about various attacks. By doing so,
    you’ll learn a lot about how black hats operate.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: DVWA 中还有许多其他的漏洞。我强烈建议你尝试使用它，并阅读它提供的关于各种攻击的资源。通过这样做，你将学到很多关于黑帽攻击者如何操作的知识。
- en: Conclusion
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: When it comes to cloud services, the main factor to remember is that you’re
    using a service that to some extent is controlled and owned by another person
    or group. This makes security tricky because you might not have a lot of control
    over how the service is secured or maintained. It also means that in general you
    must use the internet to access the cloud service. This opens cloud computing
    up to many dangerous attacks, such as web application attacks like buffer overflows
    or SQL injection.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在涉及云服务时，记住的主要因素是，你正在使用一个在某种程度上由其他人或团体控制和拥有的服务。这使得安全性变得复杂，因为你可能没有太多控制权来确保服务的安全或维护。这也意味着，通常情况下，你必须通过互联网访问云服务。这使得云计算容易受到许多危险的攻击，例如缓冲区溢出或
    SQL 注入等 Web 应用攻击。
- en: To maintain your system’s security, you need to research a cloud service before
    using it to ensure that it takes security seriously and follows best practices,
    such as those previously discussed in this book. You also need to carefully monitor
    how the cloud service is integrated with your systems to verify that a black hat
    isn’t using the cloud service to gain access to your internal systems. Taking
    these precautions will go a long way toward making sure you can use cloud services
    with peace of mind.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 为了维护系统的安全性，你需要在使用云服务之前进行调研，确保它注重安全并遵循最佳实践，比如本书中之前讨论过的那些。你还需要仔细监控云服务如何与你的系统集成，以验证黑帽攻击者是否利用云服务来访问你的内部系统。采取这些预防措施将大大有助于确保你可以安心使用云服务。
