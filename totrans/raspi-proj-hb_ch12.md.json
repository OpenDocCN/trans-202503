["```\npi@raspberrypi:~ $ sudo apt update\npi@raspberrypi:~ $ sudo apt install build-essential python-dev\n```", "```\npi@raspberrypi:~ $ cd ~/Desktop\npi@raspberrypi:~/Desktop $ mkdir Libraries\npi@raspberrypi:~/Desktop $ cd Libraries\npi@raspberrypi:~/Desktop/Libraries $\n```", "```\npi@raspberrypi:~/Desktop/Libraries $ git clone https://github.com/\nadafruit/Adafruit_Python_DHT.git\n```", "```\npi@raspberrypi:~/Desktop/Libraries $ cd Adafruit_Python_DHT\npi@raspberrypi:~/Desktop/Libraries/Adafruit_Python_DHT $ sudo python\nsetup.py install\n```", "```\n  #import necessary libraries\n➊ import Adafruit_DHT\n  import time\n\n  #comment and uncomment the lines below depending on your sensor\n  #sensor = Adafruit_DHT.DHT11\n➋ sensor = Adafruit_DHT.DHT22\n  #sensor = Adafruit_DHT.AM2302\n\n  #DHT pin connects to GPIO 4\n  sensor_pin = 4\n\n  #create a variable to control the while loop\n  running = True\n\n  #new .txt file created with header\n➌ file = open('sensor_readings.txt', 'w')\n➍ file.write('time and date, temperature, humidity\\n')\n\n  #loop forever\n  while running:\n      try:\n          #read the humidity and temperature\n       ➎ humidity, temperature = Adafruit_DHT.read_retry(sensor,\n  sensor_pin)\n\n          #uncomment the line below to convert to Fahrenheit\n       ➏ #temperature = temperature * 9/5.0 + 32\n\n          #sometimes you won't get a reading and\n          #the results will be null\n          #the next statement guarantees that\n          #it only saves valid readings\n       ➐ if humidity is not None and temperature is not None:\n              #print temperature and humidity\n              print('Temperature = ' + str(temperature) +\n  ', Humidity = ' + str(humidity))\n              #save time, date, temperature and humidity in .txt file\n           ➑ file.write(time.strftime('%H:%M:%S %d/%m/%Y') + ', ' +\n                  str(temperature) + ', ' + str(humidity) + '\\n')\n          else:\n              print('Failed to get reading. Try again!')\n          #wait 10s between each sensor reading\n       ➒ time.sleep(10)\n      #if KeyboardInterrupt triggered, stop loop and close .txt file\n      except KeyboardInterrupt:\n          print ('Program stopped')\n          running = False\n       ➓ file.close()\n```"]