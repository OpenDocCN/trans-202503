["```\nimport React from \"react\";\n\nexport default function App() {\n    const getElement = (weather: string): JSX.Element => {\n        const element = <h1>The weather is {weather}</h1>;\n        return element;\n    };\n    return getElement(\"sunny\");\n} \n```", "```\nimport React from \"react\";\n\nexport default function App() {\n\n    interface WeatherProps {\n        weather: string;\n    }\n\n    const clickHandler = (text: string): void => {\n        alert(text);\n    };\n\n    const WeatherComponent = (props: WeatherProps): JSX.Element => {\n        const text = `The weather is ${props.weather}`;\n        return (<h1 onClick={() => clickHandler(text)}>{text}</h1>);\n    };\n\n    return (<WeatherComponent weather=\"sunny\" />);\n} \n```", "```\nimport React from \"react\";\n\nexport default function App() {\n    interface WeatherProps {\n        weather: string;\n    }\n\n type WeatherState = {\n        count: number;\n    };\n\n    class WeatherComponent extends React.Component<WeatherProps, WeatherState> {\n        constructor(props: WeatherProps) {\n            super(props);\n            this.state = {\n                count: 0\n            };\n        }\n\n        componentDidMount() {\n            this.setState({count: 1});\n        }\n\n        clickHandler(): void {\n            this.setState({count: this.state.count + 1});\n        }\n\n        render() {\n            return (\n                <h1 onClick={() => this.clickHandler()}>\n                    The weather is {this.props.weather}, and the counter shows{\" \"}\n                    {this.state.count}\n                </h1>\n            );\n        }\n    }\n\n    return (<WeatherComponent weather=\"sunny\" />);\n} \n```", "```\nimport React, {useState,useEffect} from \"react\";\n\nexport default function App() {\n\n    interface WeatherProps {\n        weather: string;\n    }\n\n    const WeatherComponent = (props: WeatherProps): JSX.Element => {\n\n        const [count, setCount] = useState(0);\n        useEffect(() => {setCount(1)},[]);\n\n        return (\n            <h1 onClick={() => setCount(count + 1)}>\n                The weather is {props.weather},\n                and the counter shows {count}\n            </h1>\n        );\n    };\n\n    return (<WeatherComponent weather=\"sunny\" />);\n} \n```", "```\nconst [**count**, **setCount**] = useState(**0**);\n```", "```\nimport React, {useState, createContext, useContext} from \"react\";\n\nexport default function App() {\n    const ThemeContext = createContext(\"\");\n\n    const ContextComponent = (): JSX.Element => {\n\n        const [theme, setTheme] = useState(\"dark\");\n\n        return (\n            <div>\n                <ThemeContext.Provider value={theme}>\n                    <button onClick={() => setTheme(theme == \"dark\" ? \"light\" : \"dark\")}>\n                        Toggle theme\n                    </button>\n                    <Headline />\n </ThemeContext.Provider>\n            </div>\n        );\n    };\n\n    const Headline = (): JSX.Element => {\n        const theme = useContext(ThemeContext);\n        return (<h1 className={theme}>Current theme: {theme}</h1>);\n    };\n\n    return (<ContextComponent />);\n} \n```", "```\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\" />\n        **<title>Weather Component</title>**\n        **<script src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>**\n        **<script src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>**\n        **<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>**\n    </head>\n    <body>\n        <div id=\"root\"></div>\n\n        <script type=\"text/babel\">\n            function App() {\n\n                **const WeatherComponent = (props) => {**\n\n                    const [count, setCount] = **React.useState**(0);\n                    **React.useEffect**(() => {\n                        setCount(1);\n                    }, []);\n\n                    return (\n                        <h1 onClick={() => setCount(count + 1)}>\n                            The weather is {props.weather}, \n                            and the counter shows {count}\n                        </h1>\n                    );\n                };\n                return (<WeatherComponent weather=\"sunny\" />);\n          }\n\n            const container = document.getElementById(\"root\");\n            const root = ReactDOM.createRoot(container);\n            root.render(<App />);\n        </script>\n    </body>\n</html> \n```", "```\nimport {routeHello, routeAPINames, routeWeather} from \"./routes.js\";\nimport express, {Request, Response} from \"express\";\n\n**import path from \"path\";**\n\nconst server = express();\nconst port = 3000;\n\n`--snip--`\n**server.get(\"/components/weather\", function (req: Request, res: Response): void {**\n    **const filePath = path.join(process.cwd(), \"public\", \"weather.html\");**\n    **res.setHeader(\"Content-Type\", \"text/html\");**\n    **res.sendFile(filePath);**\n**});**\n\nserver.listen(port, function (): void {\n    console.log(\"Listening on \" + port);\n}); \n```", "```\n$ **npx tsc**\n```", "```\n$ **node index.js**\nListening on 3000 \n```"]