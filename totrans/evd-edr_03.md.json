["```\n2: kd> **bp nt!PspCallProcessNotifyRoutines**\n2: kd> **g**\nBreakpoint 0 hit\nnt!PspCallProcessNotifyRoutines: fffff803`4940283c 48895c2410      mov      qword ptr [rsp+10h],rbx\n1: kd> **k**\n # Child-SP          RetAddr                Call Site\n00 ffffee8e`a7005cf8 fffff803`494ae9c2      nt!PspCallProcessNotifyRoutines\n01 ffffee8e`a7005d00 fffff803`4941577d      nt!PspInsertThread+0x68e\n02 ffffee8e`a7005dc0 fffff803`49208cb5      nt!NtCreateUserProcess+0xddd\n03 ffffee8e`a7006a90 00007ffc`74b4e664      nt!KiSystemServiceCopyEnd+0x25\n04 000000d7`6215dcf8 00007ffc`72478e73      ntdll!NtCreateUserProcess+0x14\n05 000000d7`6215dd00 00007ffc`724771a6      KERNELBASE!CreateProcessInternalW+0xfe3\n06 000000d7`6215f2d0 00007ffc`747acbb4      KERNELBASE!CreateProcessW+0x66\n07 000000d7`6215f340 00007ff6`f4184486      KERNEL32!CreateProcessWStub+0x54\n08 000000d7`6215f3a0 00007ff6`f4185b7f      cmd!ExecPgm+0x262\n09 000000d7`6215f5e0 00007ff6`f417c9bd      cmd!ECWork+0xa7\n0a 000000d7`6215f840 00007ff6`f417bea1      cmd!FindFixAndRun+0x39d\n0b 000000d7`6215fce0 00007ff6`f418ebf0      cmd!Dispatch+0xa1\n0c 000000d7`6215fd70 00007ff6`f4188ecd      cmd!main+0xb418\n0d 000000d7`6215fe10 00007ffc`747a7034      cmd!__mainCRTStartup+0x14d\n0e 000000d7`6215fe50 00007ffc`74b02651      KERNEL32!BaseThreadInitThunk+0x14\n0f 000000d7`6215fe80 00000000`00000000      ntdll!RtlUserThreadStart+0x21\n```", "```\nNTSTATUS DriverEntry(PDRIVER_OBJECT pDriverObj, PUNICODE_STRING pRegPath)\n{\n    NTSTATUS status = STATUS_SUCCESS;\n    `--snip--`\n\n    status = ❶ PsSetCreateProcessNotifyRoutineEx2(\n        PsCreateProcessNotifySubsystems,\n        (PVOID)ProcessNotifyCallbackRoutine,\n        FALSE\n    );\n\n    `--snip--`\n} ❷ void ProcessNotifyCallbackRoutine(\n      PEPROCESS pProcess,\n      HANDLE hPid,\n      PPS_CREATE_NOTIFY_INFO pInfo)\n{\n      if (pInfo)\n      {\n          `--snip--`\n      }\n}\n```", "```\n1: kd> **dq nt!PspCreateProcessNotifyRoutine**\nfffff803`49aec4e0  ffff9b8f`91c5063f ffff9b8f`91df6c0f\nfffff803`49aec4f0  ffff9b8f`9336fcff ffff9b8f`9336fedf\nfffff803`49aec500  ffff9b8f`9349b3ff ffff9b8f`9353a49f\nfffff803`49aec510  ffff9b8f`9353acdf ffff9b8f`9353a9af\nfffff803`49aec520  ffff9b8f`980781cf 00000000`00000000\nfffff803`49aec530  00000000`00000000 00000000`00000000\nfffff803`49aec540  00000000`00000000 00000000`00000000\nfffff803`49aec550  00000000`00000000 00000000`00000000\n```", "```\n1: kd> **dx ((void**[0x40])&nt!PspCreateProcessNotifyRoutine)**\n**.Where(a => a != 0)**\n**.Select(a => @$getsym(@$getCallbackRoutine(a).Function))**\n  [0]         : nt!ViCreateProcessCallback (fffff803`4915a2a0)\n  [1]         : cng!CngCreateProcessNotifyRoutine (fffff803`4a4e6dd0)\n  [2]         : WdFilter+0x45e00 (fffff803`4ade5e00)\n  [3]         : ksecdd!KsecCreateProcessNotifyRoutine (fffff803`4a33ba40)\n  [4]         : tcpip!CreateProcessNotifyRoutineEx (fffff803`4b3f1f90)\n  [5]         : iorate!IoRateProcessCreateNotify (fffff803`4b95d930)\n  [6]         : CI!I_PEProcessNotify (fffff803`4a46a270)\n  [7]         : dxgkrnl!DxgkProcessNotify (fffff803`4c116610)\n  [8]         : peauth+0x43ce0 (fffff803`4d873ce0)\n```", "```\ntypedef struct _PS_CREATE_NOTIFY_INFO {\n  SIZE_T              Size;\n  union {\n    ULONG Flags;\n    struct {\n      ULONG FileOpenNameAvailable : 1;\n      ULONG IsSubsystemProcess : 1;\n      ULONG Reserved : 30;\n    };\n  };\n  HANDLE              ParentProcessId;\n  CLIENT_ID           CreatingThreadId;\n  struct _FILE_OBJECT *FileObject;\n  PCUNICODE_STRING    ImageFileName;\n  PCUNICODE_STRING    CommandLine;\n  NTSTATUS            CreationStatus;\n} PS_CREATE_NOTIFY_INFO, *PPS_CREATE_NOTIFY_INFO;\n```", "```\nNTSTATUS DriverEntry(PDRIVER_OBJECT pDriverObj, PUNICODE_STRING pRegPath)\n{\n    NTSTATUS status = STATUS_SUCCESS;\n    `--snip--`\n\n  ❶ status = PsSetCreateThreadNotifyRoutine(ThreadNotifyCallbackRoutine);\n    `--snip--`\n}\n\nvoid ThreadNotifyCallbackRoutine(\n    HANDLE hProcess,\n    HANDLE hThread,\n    BOOLEAN bCreate)\n{\n  ❷ if (bCreate)\n    {\n        `--snip--`\n    }\n}\n```", "```\nvoid ThreadNotifyCallbackRoutine(\n    HANDLE hProcess,\n    HANDLE hThread,\n    BOOLEAN bCreate)\n{\n    if (bCreate)\n    {\n      ❶ if (PsGetCurrentProcessId() != hProcess)\n        {\n            `--snip--`\n        }\n    }\n}\n```", "```\n0:000> **?? @$peb->ProcessParameters->CommandLine.Buffer**\nwchar_t * 0x000001be`2f78290a\n \"C:\\Windows\\System32\\rundll32.exe ieadvpack.dll,RegisterOCX payload.exe\"\n```", "```\nvoid main()\n{\n    STARTUPINFOW si;\n    ZeroMemory(&si, sizeof(si));\n    si.cb = sizeof(si);\n\n    PROCESS_INFORMATION pi;\n    ZeroMemory(&pi, sizeof(pi));\n\n    if (!CreateProcessW(\n        L\"C:\\\\Windows\\\\System32\\\\cmd.exe\",\n        **L\"These are my sensitive arguments\",**\n        NULL, NULL, FALSE, 0,\n        NULL, NULL, &si, &pi))\n    {\n        WaitForSingleObject(pi.hProcess, INFINITE);\n    }\n\n    return;\n}\n```", "```\nvoid main()\n{\n    `--snip--`\n\n    if (CreateProcessW(\n        L\"C:\\\\Windows\\\\System32\\\\cmd.exe\",\n        L\"These are my sensitive arguments\",\n        NULL, NULL, FALSE,\n        **CREATE_SUSPENDED,**\n        NULL, NULL, &si, &pi))\n    {\n        `--snip--`\n\n        **LPCWSTR szNewArguments = L\"Spoofed arguments passed instead\";**\n        SIZE_T ulArgumentLength = wcslen(szNewArguments) * sizeof(WCHAR);\n\n        if (**WriteProcessMemory(**\n **pi.hProcess,**\n **pParameters.CommandLine.Buffer,**\n **(PVOID)szNewArguments,**\n **ulArgumentLength,**\n **&ulSize)**) {\n                  **ResumeThread(pi.hThread);**\n            }\n      }\n\n `--snip--`\n}\n```", "```\nBOOL CreateProcessW(\n  LPCWSTR                lpApplicationName,\n  LPWSTR                 lpCommandLine,\n  LPSECURITY_ATTRIBUTES  lpProcessAttributes,\n  LPSECURITY_ATTRIBUTES  lpThreadAttributes,\n  BOOL                   bInheritHandles,\n  DWORD                  dwCreationFlags,\n  LPVOID                 lpEnvironment,\n  LPCWSTR                lpCurrentDirectory,\n  LPSTARTUPINFOW         lpStartupInfo,\n  LPPROCESS_INFORMATION  lpProcessInformation\n);\n```", "```\ntypedef struct _STARTUPINFOEXA {\n  STARTUPINFOA                 StartupInfo;\n  LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList;\n} STARTUPINFOEXA, *LPSTARTUPINFOEXA;\n```", "```\nVoid SpoofParent() {\n    PCHAR szChildProcess = **\"notepad\"**;\n    DWORD dwParentProcessId = ❶ 7648;\n    HANDLE hParentProcess = NULL;\n    STARTUPINFOEXA si;\n    PROCESS_INFORMATION pi;\n    SIZE_T ulSize;\n\n    memset(&si, 0, sizeof(STARTUPINFOEXA));\n    si.StartupInfo.cb = sizeof(STARTUPINFOEXA);\n\n  ❷ hParentProcess = OpenProcess(\n        PROCESS_CREATE_PROCESS,\n        FALSE,\n        dwParentProcessId);\n\n  ❸ InitializeProcThreadAttributeList(NULL, 1, 0, &ulSize);\n    si.lpAttributeList =\n      ❹ (LPPROC_THREAD_ATTRIBUTE_LIST)HeapAlloc(\n            GetProcessHeap(),\n            0, ulSize);\n    InitializeProcThreadAttributeList(si.lpAttributeList, 1, 0, &ulSize);\n\n  ❺ UpdateProcThreadAttribute(\n        si.lpAttributeList,\n        0,\n        PROC_THREAD_ATTRIBUTE_PARENT_PROCESS, &hParentProcess,\n        sizeof(HANDLE),\n        NULL, NULL);\n\n    CreateProcessA(NULL,\n        szChildProcess,\n        NULL, NULL, FALSE,\n        EXTENDED_STARTUPINFO_PRESENT,\n        NULL, NULL,\n        &si.StartupInfo, &pi);\n    CloseHandle(hParentProcess);\n    DeleteProcThreadAttributeList(si.lpAttributeList);\n}\n```", "```\n12.67045498 Process Name: notepad.exe\n12.67045593 Process ID: 7892\n12.67045593 Parent Process Name: vmtoolsd.exe\n12.67045593 Parent Process ID: 7028\n12.67045689 Creator Process Name: ppid-spoof.exe\n12.67045784 Creator Process ID: 7708\n```", "```\n0: kd> **dt nt!_EPROCESS SeAuditProcessCreationInfo @$proc**\n  +0x5c0 SeAuditProcessCreationInfo : _SE_AUDIT_PROCESS_CREATION_INFO\n0: kd> **dt (nt!_OBJECT_NAME_INFORMATION *) @$proc+0x5c0**\n0xffff9b8f`96880270\n  +0x000 Name              : _UNICODE_STRING \"\"\n```", "```\n1: kd> **dt (nt!_OBJECT_NAME_INFORMATION *) @$proc+0x5c0**\nBreakpoint 0 hit\n0xffff9b8f`995e6170\n  +0x000 Name             : _UNICODE_STRING\n\"\\Device\\HarddiskVolume2\\Windows\\System32\\notepad.exe\"\n```", "```\n0: kd> **dt nt!_EPROCESS ImageFileName @$proc**\n   +0x5a8 ImageFileName : [15]   \"THFA8.tmp\"\n```", "```\n1: kd> **dt nt!_PEB ProcessParameters @$peb**\n   +0x020 ProcessParameters : 0x000001c1`c9a71b80 _RTL_USER_PROCESS_PARAMETERS\n1: kd> **dt nt!_RTL_USER_PROCESS_PARAMETERS ImagePathName poi(@$peb+0x20)**\n   +0x060 ImagePathName : _UNICODE_STRING \"C:\\WINDOWS\\system32\\notepad.exe\"\n```", "```\n1: kd> **!peb**\nPEB at 0000002d609b9000\n    InheritedAddressSpace:    No\n    ReadImageFileExecOptions:  No\n    BeingDebugged:            No\n    ImageBaseAddress:         00007ff60edc0000\n    NtGlobalFlag:             0\n    NtGlobalFlag2:            0\n    Ldr                       00007ffc74c1a4c0\n    Ldr.Initialized:          Yes\n    Ldr.InInitializationOrderModuleList:  000001c1c9a72390 . 000001c1c9aa7f50\n    Ldr.InLoadOrderModuleList:            000001c1c9a72500 . 000001c1c9aa8520\n    Ldr.InMemoryOrderModuleList:          000001c1c9a72510 . 000001c1c9aa8530\n                    Base Module\n          ❶ 7ff60edc0000 C:\\WINDOWS\\system32\\notepad.exe\n```", "```\n1: kd> **dt nt!_EPROCESS ImageFilePointer @$proc**\n   +0x5a0 ImageFilePointer : (null)\n```", "```\n1: kd> **dt nt!_EPROCESS Minimal PicoCreated @$proc**\n   +0x460 PicoCreated   : 0y0\n   +0x87c Minimal       : 0y0\n```", "```\n0: kd> **!vad**\nVAD              Commit\nffffa207d5c88d00 7 Mapped   NO_ACCESS              Pagefile section, shared commit 0x1293\nffffa207d5c89340 6 Mapped   Exe EXECUTE_WRITECOPY  \\Windows\\System32\\notepad.exe\nffffa207dc976c90 4 Mapped   Exe EXECUTE_WRITECOPY  \\Windows\\System32\\oleacc.dll\n```", "```\n0: kd> **!vad**\nVAD              Commit\nffffa207d5c96860 2 Mapped      NO_ACCESS          Pagefile section, shared commit 0x1293\nffffa207d5c967c0 6 Mapped Exe  EXECUTE_WRITECOPY  \\Users\\dev\\AppData\\Local\\Temp\\THF53.tmp\nffffa207d5c95a00 9 Mapped Exe  EXECUTE_WRITECOPY  \\Windows\\System32\\gdi32full.dll\n```", "```\n2: kd> **dt nt!_EPROCESS ImageFilePointer @$proc**\n   +0x5a0 ImageFilePointer : 0xffffad8b`a3664200 _FILE_OBJECT\n2: kd> **dt nt!_FILE_OBJECT DeletePending 0xffffad8b`a3664200**\n   +0x049 DeletePending : 0 ' '\n```", "```\nvoid ProcessCreationNotificationCallback(\n    PEPROCESS pProcess,\n    HANDLE hPid,\n    PPS_CREATE_NOTIFY_INFO psNotifyInfo)\n{\n    if (pNotifyInfo)\n    {\n      ❶ if (!pNotifyInfo->FileObject && !pNotifyInfo->IsSubsystemProcess)\n        {\n            PUNICODE_STRING pPebImage = NULL;\n            PUNICODE_STRING pPebImageNtPath = NULL; PUNICODE_STRING pProcessImageNtPath = NULL;\n\n         ❷ GetPebImagePath(pProcess, pPebImage);\n            CovertPathToNt(pPebImage, pPebImageNtPath);\n\n         ❸ CovertPathToNt(psNotifyInfo->ImageFileName, pProcessImageNtPath);\n\n            if (RtlCompareUnicodeString(pPebImageNtPath, pProcessImageNtPath, TRUE))\n            {\n                `--snip--`\n            }\n        }\n    }\n\n    `--snip--`\n}\n```"]