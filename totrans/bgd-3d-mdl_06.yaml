- en: '**7'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**7**'
- en: SPRINGS, SCREWS, AND OTHER ADVANCED MODELING**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**弹簧、螺丝及其他高级建模**'
- en: '![Images](Images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Images](Images/common.jpg)'
- en: In this chapter, you’ll learn some tricks for modeling geometrically complex
    shapes. You’ll learn how to use the *Coil* and *Thread* tools, which are commonly
    used to make springs and screws. You’ll also learn about a way to model complex
    geometry using *surfaces*, which you’ll use to design a 20-sided die.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习一些建模几何复杂形状的技巧。你将学习如何使用*线圈*和*螺纹*工具，这些工具通常用于制作弹簧和螺丝。你还将学习如何使用*表面*来建模复杂几何体，这将用于设计一个
    20 面的骰子。
- en: '**Modeling a Coil**'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**建模一个线圈**'
- en: The Coil tool creates helical, or spiral-shaped, forms. These could also be
    made with a sweep on a 3D spiral path, but the Coil tool is a lot easier to use.
    To make a hollow tube for a heat exchange coil, you might use two coils—one for
    a New Body and one for a Cut.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 线圈工具创建螺旋形或螺旋状的形态。你也可以通过在 3D 螺旋路径上使用扫掠来创建这些形状，但使用线圈工具要简单得多。要制作用于热交换线圈的空心管，你可能需要使用两个线圈——一个用于新体积，另一个用于切割。
- en: To get started, select **Coil** from the **Create** drop-down menu. The software
    then asks you to choose a plane, which you should make perpendicular to the axis
    of the coil. The centerpoint of the coil’s cross-section will start at this plane.
    Draw a circle, like the one shown in [Figure 7-1](ch07.xhtml#ch07fig1), to specify
    the central axis and diameter of the coil.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，选择**创建**下拉菜单中的**线圈**。软件会要求你选择一个平面，应该使其垂直于线圈的轴线。线圈截面的中心点将从这个平面开始。绘制一个圆圈，如[图
    7-1](ch07.xhtml#ch07fig1)所示，以指定线圈的中心轴线和直径。
- en: '![Images](Images/07fig01.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![Images](Images/07fig01.jpg)'
- en: '*Figure 7-1: Select a point for the coil’s center axis and then draw a circle
    to specify the diameter.*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-1：选择一个点作为线圈的中心轴线，然后绘制一个圆圈来指定直径。*'
- en: After you’ve set the circle’s diameter, the Coil dialog should pop up, and Fusion
    360 should display a model with the default parameters.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在你设置了圆圈的直径后，线圈对话框应该会弹出，Fusion 360 应该会显示一个带有默认参数的模型。
- en: Make sure the circle you just drew is selected as the profile. In the **Type**
    field, choose what kind of dimensions you want to use to create the coil. The
    default setting asks you to specify the coil’s revolution and height. The software
    will use these dimensions to calculate the coil’s *pitch*, or the distance along
    the axis needed for the coil to make a full revolution. You may want to switch
    the type if, for instance, you don’t care how many revolutions the coil makes
    but do care about the specific pitch.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你刚绘制的圆圈被选为轮廓。在**类型**字段中，选择你希望使用的维度来创建线圈。默认设置要求你指定线圈的旋转数和高度。软件将使用这些维度来计算线圈的*步距*，即沿轴线所需的距离，令线圈完成一整圈。如果你不关心线圈转了多少圈，而关心具体的步距，可能需要切换类型。
- en: Select **Revolution and Height** and then specify how many turns the coil should
    make in the **Revolutions** field. In the **Height** field, specify the coil’s
    nominal height, which is the distance from the centerpoint of the topmost cross-section
    to the centerpoint of the bottommost cross-section. Note that it is not asking
    you for the coil’s overall height. If your coil needed to be exactly 100 mm tall,
    you would subtract the *Section Size* value, which is the diameter of the cross-section,
    from the Height value. In the **Rotation** field, set the coil to turn either
    clockwise or counterclockwise.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**旋转数和高度**，然后在**旋转数**字段中指定线圈应该旋转多少圈。在**高度**字段中，指定线圈的名义高度，即从最上方截面中心点到最下方截面中心点的距离。请注意，这不是要求你提供线圈的总高度。如果你的线圈需要恰好
    100 毫米高，你需要从高度值中减去*截面大小*，即截面的直径。在**旋转**字段中，设置线圈顺时针或逆时针旋转。
- en: You already set the diameter when you drew the circle, but you can change it
    in the Diameter field. If you want the diameter to gradually increase or decrease,
    you can use the Angle field to give it a conical shape. Use **Section** to set
    the shape of the coil’s cross-section. You can choose to make it a circle, square,
    in-facing triangle, or out-facing triangle.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当你绘制圆圈时已经设置了直径，但你可以在直径字段中进行更改。如果你希望直径逐渐增大或减小，可以使用角度字段让其呈现锥形。使用**截面**来设置线圈截面的形状。你可以选择将其设为圆形、方形、内向三角形或外向三角形。
- en: By default, that cross-section will center itself on the diameter you select,
    but if you wanted your coil to fit around an existing part with that diameter,
    you would set the Section Position field to Outside and choose the part. If you
    wanted it to fit inside a cylinder with that diameter, you would change the field
    to Inside.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Take a few minutes to tweak the various parameters and watch how the model changes
    in response. [Figure 7-2](ch07.xhtml#ch07fig2) shows the dimensions I chose.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](Images/07fig02.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-2: Play around with your coil’s dimensions to get a feel for what
    the parameters do.*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: That’s it—you’ve created a coil! Fusion 360 makes it as easy as that.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Modeling a Screw Using the Thread Tool
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Although modeling a screw might seem easy, you’ll encounter difficulties if
    you try to do it with the tools you already know. That’s because the spiral-shaped
    ridge that runs along a screw’s body, called the *thread*, has very specific dimensions
    tailored to the screw’s purpose. For example, an orthopedic bone screw will have
    a completely different kind of thread than a machine screw. When modeling screws,
    you must define a thread’s major diameter, minor diameter, thread pitch, and thread
    angle, and it’s important to get it all right.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: On a traditional two-dimensional technical drawing, it’s rare for a drafter
    to bother drawing the threads of a screw. Instead, the drafter will just specify
    the thread type—for example, 6 g M4×25 mm—so the manufacturer knows what kind
    of tap or screw to use. If you’re planning to buy threaded inserts and screws
    for your project, you’ll probably want to do the same. But if you want to print
    all your parts with a 3D printer, you’ll have to model the threads exactly as
    you want them to look. In the early days of 3D CAD, that meant precisely sketching
    the cross-section of each thread and modeling it with a helix feature similar
    to the Coil tool.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately for your sanity and patience, Fusion 360 gives you a tool that lets
    you skip all of that. The Thread tool contains a library of just about every thread
    commonly in use today. All you have to do is create a cylinder to put the threads
    on.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: To see how it works, you’ll model an M4×25 mm screw. This is a very common screw;
    there are probably even a few of them in whatever computer you’re using to run
    Fusion 360.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '***Creating the Body of the Screw***'
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Your screw model will have a variable length, so start by creating a Length
    parameter of 25 mm (**Modify** ▸ **Change Parameters** ▸ **New User Parameter**).
    Then draw a new sketch like the one shown in [Figure 7-3](ch07.xhtml#ch07fig3)
    and set the fx: 25.00 dimension to the Length user parameter you made. The “fx:”
    in the dimension designates that the value has been calculated with a user parameter.
    Make the screw head 4 mm long and 3.5 mm wide.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](Images/07fig03.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7-3: Create a sketch like this using your Length user parameter.*'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: I’ve used the measurements of a standard socket-head cap screw, but the 1.5
    mm dimension is completely arbitrary; when you add the threads, the software should
    automatically resize the width of the cylinder to fit the specifications of the
    threads. Once your sketch looks like that, revolve it around the bottom line to
    create a new body.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用的是标准六角螺丝头的测量值，但1.5毫米的尺寸完全是任意的；当你添加螺纹时，软件应该会自动调整圆柱的宽度，以符合螺纹的规格。你的草图看起来像这样时，将它围绕底线旋转，创建一个新的实体。
- en: Like everything else on a standard fastener, this screw has a specific socket
    size, designed to fit a specific bit. We’ll use a 3 mm hex socket, as shown in
    [Figure 7-4](ch07.xhtml#ch07fig4).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 和标准紧固件上的其他所有部分一样，这个螺丝有一个特定的插座尺寸，设计用于配合特定的螺丝刀头。我们将使用一个3毫米的六角插座，如[图7-4](ch07.xhtml#ch07fig4)所示。
- en: '![Images](Images/07fig04.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig04.jpg)'
- en: '*Figure 7-4: Draw an inscribed polygon for the socket head.*'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7-4：为螺丝头绘制一个内接多边形。*'
- en: To model that, create a new sketch on the top of the head. In the **Sketch**
    menu, choose the **Polygon** option. This lets you create a polygon with any number
    of equal sides, like the one in [Figure 7-4](ch07.xhtml#ch07fig4). In the case
    of this hex cap screw, you’ll need six sides. *Circumscribed* defines it by the
    diameter of an imaginary circle that touches the midpoints of each edge, while
    *Inscribed* defines it by the diameter of an imaginary circle that touches the
    vertices. Choose **Circumscribed** and make the diameter 3 mm.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行建模，在螺丝头的顶部创建一个新的草图。在**草图**（Sketch）菜单中选择**多边形**（Polygon）选项。这样你就可以创建任何边数相等的多边形，就像[图7-4](ch07.xhtml#ch07fig4)所示的那样。对于这个六角螺丝头，你需要六个边。*外接*定义为一个假想圆的直径，该圆接触每条边的中点，而*内接*定义为一个假想圆的直径，该圆接触每个顶点。选择**外接**并将直径设置为3毫米。
- en: '***Modeling the Thread***'
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***建模螺纹***'
- en: Now you can create the threads themselves by choosing **Thread** from the **Create**
    menu. You should see the dialog shown in [Figure 7-5](ch07.xhtml#ch07fig5).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以通过选择**线程**（Thread）从**创建**（Create）菜单中创建螺纹了。你应该会看到[图7-5](ch07.xhtml#ch07fig5)所示的对话框。
- en: '![Images](Images/07fig05.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig05.jpg)'
- en: '*Figure 7-5: Choose your Thread dialog options based on the fastener type you
    require.*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7-5：根据所需的紧固件类型选择螺纹对话框选项。*'
- en: Select the face of the cylinder and then check **Modeled** to make the threads
    appear there. (If you leave the Modeled option unchecked, Fusion 360 will just
    store the thread information for a later technical drawing.) Because we want the
    threads to span the full length of the cylinder, check **Full Length**.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 选择圆柱的面，然后勾选**已建模**（Modeled）以显示螺纹。（如果你不勾选已建模选项，Fusion 360将仅存储螺纹信息，以供后续技术图纸使用。）因为我们希望螺纹覆盖圆柱的整个长度，所以勾选**全长**（Full
    Length）。
- en: The rest of the options allow you to pick a specific kind of thread. For the
    **Thread Type**, choose **ISO Metric Profile**. Set **Size** to 4.0 mm and **Designation**
    to M4×0.5\. The Class setting determines how much tolerance to give. We’ll use
    6 g here. Finally, because this is a standard screw, set **Direction** to **Right
    Hand**. Almost all fasteners use right-hand threads, which you tighten by turning
    clockwise, but you might occasionally have a need for left-hand threads, which
    you tighten by turning counterclockwise.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 其余的选项允许你选择特定类型的螺纹。对于**螺纹类型**，选择**ISO公制轮廓**。将**尺寸**设置为4.0毫米，**规格**设置为M4×0.5。**等级**设置决定了容差的大小。我们这里使用6g。最后，因为这是一个标准螺丝，将**方向**（Direction）设置为**右旋**（Right
    Hand）。几乎所有的紧固件都使用右旋螺纹，通过顺时针旋转来拧紧，但有时你可能需要使用左旋螺纹，通过逆时针旋转来拧紧。
- en: Your model should now look like a real screw, with built-in threads. As a final
    step, give the screw’s tip a *revolved cut* to make it easier to insert. I gave
    mine a 45-degree cut that starts 1.5 mm from the center axis, but this is one
    of the few parts of a fastener without rigid specifications, so you can make the
    dimensions whatever you’d like. In the end, your model should look something like
    the one shown in [Figure 7-6](ch07.xhtml#ch07fig6).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的模型应该看起来像一个真正的螺丝，带有内置的螺纹。作为最后一步，给螺丝的尖端做一个*旋转切割*，这样可以更容易插入。我给我的螺丝做了一个45度的切割，起始点距离中心轴1.5毫米，但这是紧固件中少数没有严格规格的部分，所以你可以根据自己的需求调整尺寸。最终，你的模型应该像[图7-6](ch07.xhtml#ch07fig6)所示那样。
- en: '![Images](Images/07fig06.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig06.jpg)'
- en: '*Figure 7-6: Your model should have a revolved cut at the end to make it easier
    to insert.*'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7-6：你的模型应该在末端有一个旋转切割，便于插入。*'
- en: Congratulations! You’ve finished modeling your first screw.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经完成了第一个螺丝的建模。
- en: Modeling a 20-Sided Die
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 建模一个20面骰子
- en: Unfortunately, Fusion 360 can’t offer a dedicated tool for every complicated
    design. In this section, you learn how to model a die with 20 sides by using Surfaces,
    as well as the geometrical concept of golden rectangles, to break the task into
    manageable steps.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，Fusion 360无法为每个复杂的设计提供专用工具。在本节中，你将学习如何使用曲面工具以及黄金矩形的几何概念，通过分解任务为可管理的步骤来建模一个20面骰子。
- en: Called regular icosahedrons or, colloquially, d20s, these dice are popular in
    tabletop role-playing games like *Dungeons & Dragons*. The die consists of 20
    identical equilateral triangles joined so that the vertices all touch the same
    imaginary sphere. Five faces meet at each vertex, as shown in [Figure 7-7](ch07.xhtml#ch07fig7).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这些骰子被称为正二十面体或口语中常叫做d20，它们在像*龙与地下城*这样的桌面角色扮演游戏中非常受欢迎。骰子由20个相同的等边三角形组成，这些三角形连接起来，使得所有的顶点都触及同一个假想的球面。每个顶点处有五个面相交，如[图7-7](ch07.xhtml#ch07fig7)所示。
- en: '![Images](Images/07fig07.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig07.jpg)'
- en: '*Figure 7-7: You’ll be modeling this 20-sided (d20) die.*'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7-7：你将建模这个20面（d20）骰子。*'
- en: In geometric terms, the die is quite complex; even using a formula to calculate
    the length of the triangles’ edges would be tricky for people who aren’t math
    whizzes. Fortunately, we can express the geometry in a far simpler way using golden
    rectangles.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从几何学角度来看，骰子的结构相当复杂；即使使用公式来计算三角形边缘的长度，对于不擅长数学的人来说也会很棘手。幸运的是，我们可以通过黄金矩形将几何形状表达得更加简单。
- en: Golden rectangles have dimensions that follow the golden ratio, meaning that
    their lengths are approximately 1.618 times their widths. [Figure 7-8](ch07.xhtml#ch07fig8)
    shows three interlocking golden rectangles placed perpendicular to one another.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 黄金矩形的尺寸遵循黄金比例，这意味着它们的长度大约是宽度的1.618倍。[图7-8](ch07.xhtml#ch07fig8)展示了三个互相交错的黄金矩形，彼此垂直放置。
- en: '![Images](Images/07fig08.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig08.jpg)'
- en: '*Figure 7-8: A 20-sided die formed by three golden rectangles*'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7-8：由三个黄金矩形构成的20面骰子*'
- en: When arranged like this, the rectangles’ corners form the 12 vertices of the
    die. The die has 20 sides with 3 corners each, equaling 60\. Since 5 sides share
    the same vertex, there are 12 vertices in total.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当矩形按这种方式排列时，矩形的角点形成了骰子的12个顶点。骰子有20个面，每个面有3个角，总共是60个角点。由于5个面共享同一个顶点，因此总共有12个顶点。
- en: When you draw lines between the corners of the rectangle nearest to one another,
    you form the die’s edges. For modeling purposes, we can use those edges to create
    surfaces for each of the 20 faces. You can then stitch the surfaces together to
    create a single solid body.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在最接近的矩形角点之间画线时，你就形成了骰子的边缘。为了建模的目的，我们可以利用这些边缘为每个20个面创建曲面。然后你可以将这些曲面拼接在一起，形成一个整体的实体。
- en: To work with surfaces, switch to the **Patch** workspace, which gives you access
    to tools in the Create and Modify drop-down menus that you haven’t seen yet. Otherwise,
    this workspace looks the same as the Model workspace.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用曲面工具，切换到**修补**工作空间，在这里你可以访问创建和修改下拉菜单中你尚未见过的工具。除此之外，这个工作空间与模型工作空间看起来是一样的。
- en: Use the sketch tools you’re already familiar with to draw the three golden rectangles—one
    on each of the existing planes. Make sure they’re oriented the way they appear
    in [Figure 7-9](ch07.xhtml#ch07fig9). Give them each a height of 10 mm and a width
    of 16.18 mm.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用你已经熟悉的草图工具，在每个现有平面上绘制三个黄金矩形。确保它们的朝向与[图7-9](ch07.xhtml#ch07fig9)中所示一致。每个矩形的高度设为10毫米，宽度设为16.18毫米。
- en: '![Images](Images/07fig09.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig09.jpg)'
- en: '*Figure 7-9: Draw three perpendicular golden rectangles.*'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7-9：画出三个垂直的黄金矩形。*'
- en: Next, we need to draw lines connecting the corners of the rectangles to form
    the edges of the die’s faces. To do that, we first need to create construction
    planes to sketch them on. From the **Construct** drop-down, choose the **Plane
    Through Three Points** option. Select three points that will make up the vertices
    of a single triangular face, as shown in [Figure 7-10](ch07.xhtml#ch07fig10).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要绘制连接矩形角点的线，以形成骰子面的边缘。为此，我们首先需要创建构造平面，在其上进行草图绘制。从**构造**下拉菜单中选择**三点平面**选项。选择三个点，这三个点将构成一个三角形面上的顶点，如[图7-10](ch07.xhtml#ch07fig10)所示。
- en: '![Images](Images/07fig10.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig10.jpg)'
- en: '*Figure 7-10: Create a construction plane that touches the three vertices of
    a triangular face.*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7-10：创建一个触及三角形面三个顶点的构造平面。*'
- en: Now draw a new sketch on the plane you just created. Use lines to connect the
    same three points you selected for the plane itself. You should end up with an
    equilateral triangle like the one in [Figure 7-11](ch07.xhtml#ch07fig11).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在你刚刚创建的平面上绘制一个新的草图。使用线条连接与平面本身相同的三个点。你应该会得到一个等边三角形，像[图 7-11](ch07.xhtml#ch07fig11)所示。
- en: '![Images](Images/07fig11.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig11.jpg)'
- en: '*Figure 7-11: Draw a sketch that connects the three points to form a triangle.*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-11：绘制一个连接三点形成三角形的草图。*'
- en: Now you’re ready to make your first surface. Surfaces have no thickness, so
    they’re not solid bodies like the features you’ve used so far in this book. Although
    they have no actual substance on their own, you can connect multiple surfaces
    to create a solid body.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以开始创建第一个表面了。表面没有厚度，因此它们不像你到目前为止在本书中使用的那些实体那样是实心的。虽然它们本身没有实际的物质，但你可以将多个表面连接在一起，创建一个实体。
- en: To model your first surface, select **Patch** from the **Create** menu. This
    should open the dialog shown in [Figure 7-12](ch07.xhtml#ch07fig12).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要建模第一个表面，从**创建**菜单中选择**Patch**。这将打开[图 7-12](ch07.xhtml#ch07fig12)所示的对话框。
- en: '![Images](Images/07fig12.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig12.jpg)'
- en: '*Figure 7-12: Use the Patch feature to create a surface from the three lines
    of the triangle.*'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-12：使用Patch功能根据三角形的三条线创建一个表面。*'
- en: Use the three lines of the triangle you just drew as *boundary edges*. Select
    **Enable Chaining**. Ignore the Interior Rails/Points option; you won’t need these
    for this project. Set the Continuity drop-down menu to **Connected** and the Operation
    drop-down menu to **New Body**.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 使用你刚刚绘制的三角形的三条线作为*边界边*。选择**启用链式连接（Enable Chaining）**。忽略“内部轨道/点（Interior Rails/Points）”选项；这个项目不需要这些。将连续性下拉菜单设置为**连接（Connected）**，将操作下拉菜单设置为**新体（New
    Body）**。
- en: Once you click OK, you should have a single triangular surface—one side of the
    die. Now, repeat that process 19 more times to generate all of the faces. (Yes,
    it’s a little tedious.)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 点击确定后，你应该会得到一个单一的三角形表面——骰子的一面。现在，重复这个过程19次，生成所有面。（是的，这有点繁琐。）
- en: If you lose track of which points you’re supposed to connect, reference [Figure
    7-8](ch07.xhtml#ch07fig8). All edges should be equal in length, so if you end
    up with an edge of a different length, you’ve connected the wrong points. In the
    end, you should have a shape composed of 20 individual faces, as shown in [Figure
    7-13](ch07.xhtml#ch07fig13).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你忘记了需要连接的点，参考[图 7-8](ch07.xhtml#ch07fig8)。所有边应该是等长的，所以如果你得到的某条边长度不同，说明你连接错了点。最终，你应该得到一个由20个单独面构成的形状，如[图
    7-13](ch07.xhtml#ch07fig13)所示。
- en: The model now *looks* like a d20, but it’s not really a solid body yet. As noted,
    the surfaces have no thickness. If you tried to export this as an STL file for
    3D printing, Fusion 360 wouldn’t let you—there just isn’t anything there to convert
    into a mesh.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在模型*看起来*像一个d20，但它还不是真正的实体。正如所提到的，表面没有厚度。如果你尝试将其导出为STL文件进行3D打印，Fusion 360不会允许你——因为它没有任何可以转换为网格的东西。
- en: Fusion 360 provides the *Stitch* feature to turn multiple surfaces into a single
    solid body. For this feature to work, the surfaces must come together to form
    an airtight body. If you had only made 19 of the 20 faces, the Stitch feature
    would fail because of the missing face.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Fusion 360提供了*缝合（Stitch）*功能，可以将多个表面转换为一个单一的实心体。为了使此功能生效，表面必须连接起来，形成一个密封的体。如果你只制作了19个面，缝合功能会失败，因为缺少了一个面。
- en: '![Images](Images/07fig13.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig13.jpg)'
- en: '*Figure 7-13: Keep creating triangular surfaces until you have all 20 faces.*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-13：继续创建三角形表面，直到你得到所有20个面。*'
- en: Since you’ve got all 20 faces, go ahead and choose **Stitch** from the **Modify**
    menu; then select all of the surfaces, as shown in [Figure 7-14](ch07.xhtml#ch07fig14).
    After you select all 20 surfaces and click OK, Fusion 360 should “stitch” together
    the surfaces and turn the set into a solid body.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你已经得到了所有20个面，接下来从**修改**菜单中选择**缝合（Stitch）**；然后选择所有表面，如[图 7-14](ch07.xhtml#ch07fig14)所示。选择完所有20个表面并点击确定后，Fusion
    360应该会“缝合”这些表面，并将其转化为一个实心体。
- en: '![Images](Images/07fig14.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/07fig14.jpg)'
- en: '*Figure 7-14: Use the Stitch feature to convert your surfaces into a solid
    body.*'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-14：使用缝合功能将你的表面转换为一个实心体。*'
- en: The final step is to add fillets to the edges, because nobody wants a d20 with
    sharp corners. To do that, switch back to the **Model** workspace. Then, use the
    **Fillet** tool by selecting all the edges and setting a radius of 1 mm. When
    you’re done, your die should look like the one in [Figure 7-15](ch07.xhtml#ch07fig15).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是给边缘添加倒角，因为没有人想要一个有尖角的 d20。为此，切换回 **模型** 工作区。然后，使用 **倒角** 工具，选择所有边缘并设置半径为
    1 毫米。完成后，你的骰子应该和 [图 7-15](ch07.xhtml#ch07fig15) 中的样子一样。
- en: '![Images](Images/07fig15.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![Images](Images/07fig15.jpg)'
- en: '*Figure 7-15: Your finished d20 should look like this.*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-15：你完成的 d20 应该是这个样子。*'
- en: '**Exercises**'
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**练习**'
- en: Try your hand at the following exercises to get some practice with a couple
    of minor tools Fusion 360 has to offer.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试做以下练习，借此练习 Fusion 360 提供的一些小工具。
- en: '***Changing the Size of Your d20***'
  id: totrans-82
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***改变 d20 的大小***'
- en: When you started modeling the d20, I gave you the dimensions of your golden
    rectangles. I chose those dimensions to make the math easy, but you may want your
    d20 to be a different size—with, say, a distance of 75 mm between two opposing
    faces. Of course, you could figure out how the dimensions of the rectangles relate
    to the distance between the faces of the die and then change the rectangles’ dimensions
    accordingly, but it’s far easier to just resize the final model.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始建模 d20 时，我给了你黄金矩形的尺寸。我选择这些尺寸是为了简化数学计算，但你可能希望你的 d20 有不同的大小，例如两个对面之间的距离为 75
    毫米。当然，你可以计算出矩形的尺寸如何与骰子的两面之间的距离相关，然后相应地调整矩形的尺寸，但直接调整最终模型的大小要简单得多。
- en: If you measure the distance between opposite parallel faces using the Measure
    tool from the Inspect menu, you’ll find that it’s something like 15.114974 mm.
    (This will differ very slightly between faces, because 1:1.618 is actually just
    an approximation of the golden ratio. Like pi, the golden ratio is an irrational
    number and continues infinitely past the decimal point. For real-world use, 1:1.618
    works fine.)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 **检查** 菜单中的 **测量** 工具测量对面平行面之间的距离，你会发现它大约是 15.114974 毫米。（这个值在不同的面之间会有非常小的差异，因为
    1:1.618 实际上只是黄金比例的一个近似值。像 π 一样，黄金比例是一个无理数，小数点后会无限延续。对于实际应用，1:1.618 是足够准确的。）
- en: We want the distance between opposite faces to be 75 mm, so about 4.961967 times
    what it is now. To make that happen, choose the **Scale** feature from the **Modify**
    menu and select the model. Keep **Scale Type** set to **Uniform**, as shown in
    [Figure 7-16](ch07.xhtml#ch07fig16), and set the **Scale Factor** to **4.961967**.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望对面之间的距离为 75 毫米，因此它大约是现在大小的 4.961967 倍。为了实现这一目标，从 **修改** 菜单中选择 **缩放** 功能并选择模型。保持
    **缩放类型** 设为 **均匀**，如 [图 7-16](ch07.xhtml#ch07fig16) 所示，然后将 **缩放因子** 设置为 **4.961967**。
- en: '![Images](Images/07fig16.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![Images](Images/07fig16.jpg)'
- en: '*Figure 7-16: Scale the model to make it 75 mm between opposite faces.*'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-16：缩放模型，使对面之间的距离为 75 毫米。*'
- en: Click **OK** to resize the d20\. Measure the opposite faces again. The distance
    should be almost exactly 75 mm (by any reasonable tolerance).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **确定** 来调整 d20 的大小。再次测量对面的距离，应该几乎完全是 75 毫米（在任何合理的公差范围内）。
- en: '***Inscribing Numbers***'
  id: totrans-89
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***刻上数字***'
- en: If you want to actually 3D print your giant d20 to impress the dungeon master
    at your next D&D session, you have to add numbers, or else you’ll find it pretty
    difficult to use. To add them, choose the **Text** option from the **Sketch**
    menu and position your text; then extrude it as with any other sketch to cut lightly
    into the face. I did this to the “20” shown in [Figure 7-17](ch07.xhtml#ch07fig17).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想实际 3D 打印你的巨型 d20 来在下次 D&D 游戏中给地下城主留下深刻印象，你需要添加数字，否则你会发现它很难使用。要添加数字，从 **草图**
    菜单中选择 **文本** 选项并定位文本；然后像处理任何其他草图一样将其挤出，以轻微切割到面上。我在 [图 7-17](ch07.xhtml#ch07fig17)
    中对“20”进行了这个操作。
- en: '![Images](Images/07fig17.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![Images](Images/07fig17.jpg)'
- en: '*Figure 7-17: Add numbers to the faces of the die by extruding the text.*'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7-17：通过挤出文本将数字添加到骰子的面上。*'
- en: Repeat that process for all 20 numbers. Statistically, it doesn’t matter how
    you number the faces—all sides of the die have an equal chance of coming up—but
    there is a convention for doing so. Pick a random side, and place 1 there. Then,
    on the opposite side, place 20\. On a face adjacent to 20, place 2\. Then opposite
    that, place 19\. Adjacent to 19, place 3, and so on. In the end, the sum of any
    two opposite faces should always equal 21.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 重复该过程直到所有20个数字都完成。从统计学角度来看，标记面朝向并不重要——骰子的每一面都有相等的机会出现——但还是有一个约定俗成的方法来进行标记。选择一个随机的面，放置数字1。然后，在对面放置数字20。接着，在与20相邻的面上放置数字2。然后在与2相对的面上放置数字19。与19相邻的面放置数字3，以此类推。最终，任何一对相对的面之和应该总是等于21。
- en: '**Summary**'
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: The modeling in this chapter ranged from trivial to pretty darn difficult, but
    hopefully you’ve learned that even projects that seem overwhelmingly complex at
    first glance can be broken down into manageable steps. With the skills you’ve
    picked up so far in this book, you should be able to create 3D models of just
    about anything you can imagine, as long as you take the time to think through
    how you’ll approach it step by step.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的建模难度从简单到相当复杂不等，但希望你已经学会，即使是看起来一开始非常复杂的项目，也能分解为可管理的步骤。凭借你目前在本书中学到的技能，只要你花时间逐步思考如何着手，你应该能够创建出几乎任何你能想象的3D模型。
- en: Now you know how to use all of the most important modeling tools. In [Chapter
    8](ch08.xhtml#ch08), you’ll learn how to create technical drawings, which will
    be useful if you’d like your models to be built. In [Chapter 9](ch09.xhtml#ch09),
    you’ll learn how to make nice-looking renders of your models for presentation
    purposes.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何使用所有最重要的建模工具。在[第8章](ch08.xhtml#ch08)中，你将学习如何制作技术图纸，如果你希望你的模型被建造出来，这将非常有用。在[第9章](ch09.xhtml#ch09)中，你将学习如何为展示目的制作漂亮的渲染图。
