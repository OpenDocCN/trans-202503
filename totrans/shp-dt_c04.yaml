- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Network Filtration
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 网络滤波
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: We’ve explored many ways to analyze network data by measuring geometric properties.
    In this chapter, we’ll introduce network filtration for weighted networks, which
    tracks geometric properties and network metrics over threshold values imposed
    on the network. Then we’ll examine how network data can be transformed into a
    higher-dimensional topological object called a *simplicial complex*, and we’ll
    explore higher-dimensional versions of the network metrics we’ve previously considered.
    From there, we’ll return to graph comparisons using a tool from topology related
    to filtrations.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经探索了许多通过测量几何属性来分析网络数据的方法。在本章中，我们将介绍加权网络的网络滤波，它跟踪网络上的几何属性和网络度量随阈值的变化。接下来，我们将研究如何将网络数据转换为一个更高维的拓扑对象，称为*单纯形复形*，并探索我们之前考虑过的网络度量的高维版本。之后，我们将使用与滤波相关的拓扑工具回到图比较的讨论。
- en: Graph Filtration
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图滤波
- en: 'In the previous chapters, we reviewed different network metrics, including
    different measures of centrality, entropy, spectral radius, diameter, and many
    others. There’s an interesting way to understand topological properties of weighted
    networks: *graph filtration*, a method of creating a series of weighted networks
    by iteratively removing edges below a certain threshold (for instance, all edges
    with weights lower than 0.2, 0.4, or 0.6). By creating a series of thresholded
    graphs, it’s possible to identify persistent network metrics, or local and global
    network metrics that persist across a wide range of filtration values. This gives
    us features that can be plotted or tracked across filtrations. This is one of
    the core ideas of topological data analysis (TDA).'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们回顾了不同的网络度量指标，包括不同的中心性度量、熵、谱半径、直径等许多内容。有一种有趣的方法可以理解加权网络的拓扑属性：*图滤波*，这是一种通过反复删除低于某一阈值的边（例如，所有权重低于0.2、0.4或0.6的边）来创建一系列加权网络的方法。通过创建一系列阈值图，我们可以识别持久的网络度量，或在广泛的滤波值范围内持续存在的局部和全局网络度量。这为我们提供了可以绘制或跟踪的特征。这个概念是拓扑数据分析（TDA）的核心思想之一。
- en: To explore this further, let’s say we’re examining longitudinal educational
    or risk behavior outcomes of adolescents based on adolescent friendship or informal
    social ties within a community. Imagine we have weighted social networks with
    high degree metrics for each vertex, where edges are weighted by hours spent with
    friends over a normal week. The first group of friends might spend a couple of
    hours together playing soccer on the weekend. The second group might study together
    once or twice a week and see each other in classes. The third group might play
    sports often, do homework together after dinner or in the mornings before school,
    and stay over at each other’s homes often. As we filter hours spent together,
    the degree metrics will drop for the first two groups of friends in a network.
    The last group will retain a high degree metric over the filtration, as they spend
    more time together. This persistence of degree will likely shed light on the strength
    of whatever social ties we’re examining in our study.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步探索，假设我们正在基于青少年在社区中的友谊或非正式社交关系，研究青少年的纵向教育或风险行为结果。假设我们有加权社交网络，每个顶点都有高的度数度量，其中边的权重是根据青少年与朋友在正常一周中相处的时间来加权的。第一组朋友可能会在周末花几个小时一起踢足球。第二组朋友可能每周一起学习一两次，并在课堂上见面。第三组朋友可能经常一起运动、一起做饭后作业或早晨上学前做作业，并且经常住在彼此家里。当我们过滤相处的时间时，前两组朋友的度数度量将在网络中过滤掉。最后一组则会在滤波过程中保持较高的度数度量，因为他们在一起度过的时间更多。这种度数的持久性很可能会揭示出我们研究中的社交关系的强度。
- en: Let’s examine how we can implement graph filtrations by decomposing and exploring
    two small example social networks, Graph 1 and Graph 2\. First, we’ll load the
    two networks into R and explore the structures of the full networks with the script
    in [Listing 4-1](#listing4-1).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过分解和探索两个小的示例社交网络，图1和图2，来研究如何实现图滤波。首先，我们将把这两个网络加载到R中，并使用[Listing 4-1](#listing4-1)中的脚本探索完整网络的结构。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Listing 4-1: A script that loads two different network structures for filtration'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Listing 4-1：加载两个不同网络结构以进行滤波的脚本
- en: The script in [Listing 4-1](#listing4-1) should load two different networks,
    Graph 1 and Graph 2, which have different connectivity patterns but the same number
    of vertices. It should also plot both networks with edge weights given in the
    plots. Let’s compare the networks, shown in [Figure 4-1](#figure4-1).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 4-1](#listing4-1) 中的脚本应该加载两个不同的网络，图 1 和图 2，这两个网络有不同的连接模式，但具有相同数量的顶点。它还应该绘制这两个网络，图中的边权已给出。让我们对比这两个网络，如[图
    4-1](#figure4-1)所示。'
- en: '![](image_fi/503083c04/f04001_m.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c04/f04001_m.png)'
- en: 'Figure 4-1: Plots of the two example networks'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-1：两个示例网络的图示
- en: '[Figure 4-1](#figure4-1) suggests that Graph 1 is a sparsely connected network
    with mostly large edge weights (perhaps a sample of students in the same class
    showing up for a service activity over the course of a weekend), whereas Graph
    2 is a densely connected network with a mixture of different edge weights (perhaps
    a friendship network within a sports team). We’d expect higher hub scores and
    other centrality measures in Graph 2, but a filtration might change those metrics
    more quickly than we’d expect them to change in Graph 1.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 4-1](#figure4-1) 表明，图 1 是一个稀疏连接的网络，边权大多数较大（可能是同一班级的学生在周末参加服务活动的一个样本），而图
    2 是一个密集连接的网络，边权具有不同的混合（可能是一个运动队中的友谊网络）。我们预计图 2 中的枢纽得分和其他中心性指标较高，但过滤操作可能会比在图 1
    中预期的更快速地改变这些指标。'
- en: 'Let’s create filtrations of the networks; this will allow us to explore a few
    centrality metrics on these networks. We can do this by adding the following code
    to the script in [Listing 4-1](#listing4-1):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建网络的过滤操作，这将使我们能够探索这些网络的一些中心性指标。我们可以通过向[清单 4-1](#listing4-1)中的脚本添加以下代码来实现：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The previous code filters Graph 1 and Graph 2 by edge weight, using increasing
    intervals of 0.2\. This yields a series of five networks in each graph filtration,
    which can be further examined by applying network metrics to each sequence of
    filtered graphs.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码通过边权对图 1 和图 2 进行了过滤，使用了逐步增加的 0.2 的区间。这为每个图的过滤产生了五个网络序列，可以通过对每个过滤图应用网络度量来进一步检查这些网络。
- en: 'Let’s examine the degree centrality of each vertex across the filtration of
    Graph 1 by adding the following to our script:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过向脚本中添加以下内容，检查图 1 过滤后的每个顶点的度中心性：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This code calculates degree centrality across filtrations of Graph 1, which
    should yield a dataset containing the information in [Table 4-1](#table4-1).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码计算图 1 过滤操作中的度中心性，应该会生成一个包含[表 4-1](#table4-1)中信息的数据集。
- en: 'Table 4-1: Degree Centrality Across Graph 1 Filtrations'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 表 4-1：图 1 过滤后的度中心性
- en: '| **Column1** | **d1** | **d12** | **d14** | **d16** | **d18** |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| **Column1** | **d1** | **d12** | **d14** | **d16** | **d18** |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| **V1** | 3 | 2 | 2 | 1 | 0 |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| **V1** | 3 | 2 | 2 | 1 | 0 |'
- en: '| **V2** | 2 | 1 | 1 | 1 | 1 |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| **V2** | 2 | 1 | 1 | 1 | 1 |'
- en: '| **V3** | 3 | 3 | 3 | 2 | 1 |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| **V3** | 3 | 3 | 3 | 2 | 1 |'
- en: '| **V4** | 3 | 3 | 3 | 1 | 1 |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| **V4** | 3 | 3 | 3 | 1 | 1 |'
- en: '| **V5** | 2 | 2 | 2 | 2 | 1 |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| **V5** | 2 | 2 | 2 | 2 | 1 |'
- en: '| **V6** | 1 | 1 | 1 | 1 | 0 |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| **V6** | 1 | 1 | 1 | 1 | 0 |'
- en: '[Table 4-1](#table4-1) shows that vertices 1, 3, and 4 have high degree centralities;
    however, vertices 3 and 4 retain these high degree centrality values across much
    more of the filtration than vertex 1, suggesting they are more important to the
    network, despite having the same centrality metric on the unfiltered network (column
    1).'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 4-1](#table4-1) 显示，顶点 1、3 和 4 具有较高的度中心性；然而，顶点 3 和 4 在更大范围的过滤操作中保持了这些较高的度中心性值，而顶点
    1 则较少，表明它们对网络更为重要，尽管在未过滤网络（列 1）中的中心性指标相同。'
- en: 'Now, let’s add some code to calculate degree centrality across Graph 2’s filtration:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们添加一些代码来计算图 2 过滤后的度中心性：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This code calculates degree centrality across the filtration of Graph 2, yielding
    a table similar to that obtained by Graph 1’s filtration and centrality calculation.
    [Table 4-2](#table4-2) summarizes the findings from the Graph 2 filtration and
    centrality calculation.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码计算图 2 过滤后的度中心性，产生一个类似于图 1 过滤和中心性计算结果的表格。[表 4-2](#table4-2) 总结了图 2 过滤和中心性计算的结果。
- en: 'Table 4-2: Degree Centrality Across Graph 2 Filtrations'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 表 4-2：图 2 过滤后的度中心性
- en: '| **Column1** | **d2** | **d22** | **d24** | **d26** | **d28** |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| **Column1** | **d2** | **d22** | **d24** | **d26** | **d28** |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| **V1** | 4 | 3 | 3 | 3 | 3 |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| **V1** | 4 | 3 | 3 | 3 | 3 |'
- en: '| **V2** | 4 | 4 | 3 | 2 | 1 |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| **V2** | 4 | 4 | 3 | 2 | 1 |'
- en: '| **V3** | 4 | 4 | 3 | 2 | 1 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| **V3** | 4 | 4 | 3 | 2 | 1 |'
- en: '| **V4** | 5 | 4 | 3 | 0 | 0 |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| **V4** | 5 | 4 | 3 | 0 | 0 |'
- en: '| **V5** | 3 | 3 | 1 | 1 | 0 |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| **V5** | 3 | 3 | 1 | 1 | 0 |'
- en: '| **V6** | 4 | 4 | 3 | 2 | 1 |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| **V6** | 4 | 4 | 3 | 2 | 1 |'
- en: As [Table 4-2](#table4-2) shows, there are relatively high degree centrality
    measures in the unfiltered Graph 2; however, the pattern changes by vertex after
    the filtration begins. Some vertices, like vertex 1, retain a high degree centrality
    throughout the filtration. Others, such as vertex 4, retain a high degree centrality
    and then drop to 0\. Others still, like vertex 6, show a slow degradation of degree
    centrality over the full filtration. This may be informative in a study of social
    ties within a subgroup of interest. A high degree of informal social ties, represented
    by a high centrality degree, has been linked to positive educational attainment,
    career achievement, and resilience to life adversity in young adults.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如[表 4-2](#table4-2)所示，未过滤的图 2 中存在较高的度中心性度量；然而，随着过滤过程的开始，顶点的模式发生了变化。某些顶点，如顶点
    1，在整个过滤过程中保持较高的度中心性。其他顶点，如顶点 4，先保持较高的度中心性，然后降到 0。还有一些顶点，如顶点 6，在整个过滤过程中度中心性缓慢下降。这些信息可能对研究某个兴趣子群体中的社会关系有帮助。高程度的非正式社会关系，由较高的中心度表示，已被证明与年轻人在教育成就、职业成就以及应对生活困境方面的韧性有关。
- en: 'Degree centrality is only one example of metrics that we can calculate across
    a filtration; we can also calculate other local metrics such as betweenness centrality
    or triadic closure. In addition, we can calculate global metrics, such as the
    spectral radius or the Euler characteristic, across a filtration. Let’s add the
    following to [Listing 4-1](#listing4-1) to calculate the diameter of each filtration
    of Graph 1:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 度中心性只是我们可以在过滤过程中计算的一个指标；我们还可以计算其他局部指标，如介数中心性或三元闭合。此外，我们还可以计算全局指标，如谱半径或欧拉特征，通过过滤过程计算图的整体特征。让我们在[清单
    4-1](#listing4-1)中添加以下内容，以计算图 1 每个过滤过程的直径：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The sequence of diameters calculated across the filtration of Graph 1 by this
    code is 2.1, 2.9, 2.9, 1.6, and 0.9\. Let’s calculate the diameters for Graph
    2’s filtration:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通过此代码计算的图 1 过滤过程中直径的序列是 2.1、2.9、2.9、1.6 和 0.9。接下来，让我们计算图 2 的过滤过程中的直径：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The sequence of diameters calculated across the filtration of Graph 2 by this
    code is 0.9, 1.2, 1.6, 2.4, and 1.7\. This is different than Graph 1’s diameter
    sequence, suggesting that the diameter is generally smaller until later in the
    filtration sequence. This metric’s filtration might be useful in assessing a community’s
    overall level and depth of informal social ties, a measure of community resources
    available to residents in need. [Figure 4-2](#figure4-2) shows the diameter plots
    across both filtrations to compare the two networks.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通过此代码计算的图 2 过滤过程中的直径序列是 0.9、1.2、1.6、2.4 和 1.7。这与图 1 的直径序列不同，表明在过滤过程的早期，图 2 的直径通常较小，直到过滤序列后期才变大。这个指标的过滤过程可能有助于评估一个社区的整体水平和非正式社会关系的深度，这是衡量居民在需要时可用的社区资源的一个指标。[图
    4-2](#figure4-2)展示了两者过滤过程中的直径变化图，以便比较这两个网络。
- en: '![](image_fi/503083c04/f04002.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c04/f04002.png)'
- en: 'Figure 4-2: A plot of graph diameter metrics across filtrations of Graph 1
    and Graph 2'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-2：图 1 和图 2 的过滤过程中图直径指标的变化图
- en: As we can see in [Figure 4-2](#figure4-2), Graph 1 has a larger graph diameter
    than Graph 2 early in the filtration, but this relationship switches after a filtration
    value of 0.4\. This suggests that there is greater eccentricity in Graph 1 early
    in the filtrations but greater eccentricity in Graph 2 later in the filtration.
    Remember that eccentricity is the maximum distance from one point to another in
    the network.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[图 4-2](#figure4-2)中看到的，图 1 在过滤初期的图直径大于图 2，但这种关系在过滤值为 0.4 后发生了反转。这表明，图
    1 在过滤初期具有更大的偏心性，而图 2 在过滤后期表现出更大的偏心性。请记住，偏心性是网络中从一个点到另一个点的最大距离。
- en: Graph filtration tracking as we’ve plotted in [Figure 4-2](#figure4-2) can be
    helpful in distinguishing similar graphs with different connectivity patterns
    or weights. Dynamic networks, in which weights can change over time, could be
    a use case of graph filtrations. In addition, they are quite useful in comparison
    among networks with the same vertices but potentially different weights (such
    as patient groups in brain imaging studies); in fact, brain imaging studies are
    one of the applications for which graph filtration was developed. Higher eccentricity
    values suggest longer pathways to relay neural signals; stronger edge weights
    represent stronger connections between two areas of the brain. Strong edges with
    low eccentricity suggest a functional module activated in a particular task given
    to the patient groups on which imaging was performed.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在[图4-2](#figure4-2)中绘制的图过滤跟踪，可以帮助区分具有不同连接模式或权重的相似图。动态网络，其中权重可能随时间变化，可能是图过滤的一个应用场景。此外，图过滤在比较具有相同顶点但可能具有不同权重的网络（例如脑成像研究中的患者组）时非常有用；事实上，脑成像研究是图过滤方法发展的应用之一。较高的偏心值表示传递神经信号的路径较长；较强的边权表示大脑两个区域之间的连接更强。强边且偏心值较低表明在特定任务下，患者组的大脑中激活了一个功能模块。
- en: Although graph filtration is a relatively new concept, it has mainly been confined
    to biological network data, including networks based on brain imaging studies.
    However, the graph filtration method is widely applicable to weighted network
    data, and its tool set lends itself to further development in other fields. If
    you want to explore this topic in more depth, look through the references at the
    end of this book and play around with graph filtrations on their own data. For
    now, let’s turn our attention to a topological view of graphs, which allows us
    to extend the relationships captured in graphs to other types of interactions
    between people or things.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管图过滤是一个相对较新的概念，但它主要局限于生物网络数据，包括基于脑成像研究的网络。然而，图过滤方法广泛适用于加权网络数据，其工具集也适合在其他领域进一步发展。如果你想更深入地探讨这个话题，可以查阅本书末尾的参考文献，并尝试在自己的数据上应用图过滤。目前，让我们将注意力转向图的拓扑视角，这使我们能够将图中捕捉到的关系扩展到人与人或物与物之间的其他类型互动。
- en: From Graphs to Simplicial Complexes
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从图到单纯复形
- en: Graphs can be considered topological objects that have defined global properties
    we can leverage in our analyses, and it’s possible to turn a graph into a higher-dimensional
    version of a graph, called a *simplicial complex*, by considering three-way, four-way,
    and *n*-way interactions by individuals and vertices in the graph. Let’s consider
    three colleagues who often collaborate on academic papers but have never published
    with all three names on a paper. We’ll create a simple graph for the three colleagues,
    shown in [Figure 4-3](#figure4-3).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图可以被视为具有定义全局属性的拓扑对象，我们可以在分析中利用这些属性，通过考虑图中个体和顶点之间的三方、四方和*n*方互动，将图转化为一个更高维度的图，称为*单纯复形*。让我们考虑三位同事，他们经常合作撰写学术论文，但从未与所有三位同事的名字一起发表过论文。我们将为这三位同事创建一个简单的图，如[图4-3](#figure4-3)所示。
- en: '![](image_fi/503083c04/f04003.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c04/f04003.png)'
- en: 'Figure 4-3: A simplicial complex showing two-way interactions among three colleagues'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-3：展示三位同事之间双向互动的单纯复形
- en: Now let’s imagine a paper where all three colleagues participate and have their
    names on the paper. This is a three-way interaction, rather than three two-way
    interactions, and we’d end up with a filled-in triangle rather than three sets
    of two-way arrows, as shown in [Figure 4-4](#figure4-4).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们想象一篇论文，所有三位同事都参与其中并且他们的名字出现在论文上。这是一个三方互动，而不是三组二方互动，我们最终会得到一个填充的三角形，而不是三组二向箭头，如[图4-4](#figure4-4)所示。
- en: '![](image_fi/503083c04/f04004.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c04/f04004.png)'
- en: 'Figure 4-4: A simplicial complex showing three-way interactions among three
    colleagues'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-4：展示三位同事之间三方互动的单纯复形
- en: '[Figure 4-4](#figure4-4) uses a triangle to represent a three-way connection
    among colleagues, similar to how the arrows between two colleagues represented
    two-way connections. This can be generalized to tetrahedra for four-way interactions
    and more exotic shapes to represent higher *n*-way interactions. There’s no limit
    as to how high of a number *n* can be, but computational issues will come into
    play at some point as we work our way up to *n*-way interactions in a simplicial
    complex. Analyses involving email chains, co-authors on papers, or conference
    calls are common applications that extend social network analysis and graphs into
    the analysis of simplicial complexes. Depending on the size of the network and
    the size of the *n*-way interactions, simplicial complex representations of individuals
    and mutual interactions can become very complicated across values of *n*. Analyzing
    these structures can involve a lot of computing power and tools that extend network
    metrics. However, because graphs are topological objects, many theorems and tools
    of topology can be successfully applied to them without transformations or other
    hassles. This, in turn, allows for other areas of math, including partial differential
    equations and probability theory, to be applied and developed on graphs.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 4-4](#figure4-4)使用一个三角形来表示同事之间的三向连接，类似于之前用箭头表示同事之间的双向连接。这个概念可以推广到四面体用于四向交互，甚至更复杂的形状来表示更高的*n*向交互。*n*的数值没有上限，但当我们向*n*向交互的单纯形复形展开时，计算问题会逐渐显现。涉及电子邮件链、论文合著者或电话会议的分析是常见的应用，这些应用将社交网络分析和图形扩展到单纯形复形的分析中。根据网络的大小和*n*向交互的规模，个体和相互作用的单纯形复形表示可能会随着*n*的值变化变得非常复杂。分析这些结构可能需要大量的计算能力和扩展网络度量的工具。然而，由于图形是拓扑对象，拓扑学的许多定理和工具可以成功应用于它们，而无需进行转换或其他麻烦的操作。这反过来又使得包括偏微分方程和概率论在内的其他数学领域能够应用和发展于图形之上。'
- en: 'Just as we could filter a weighted graph, we also can filter simplicial complexes.
    The filtration process for simplicial complexes varies depending on how the simplicial
    complex is built. In most topological data analysis algorithms, we start with
    a point cloud of data within a space where a distance metric can be defined. Points
    are included in a simplicial complex if they share either mutual *n*-way overlapping
    sets with each other (*Čech complex*) or pairwise overlapping sets (*Vietoris–Rips
    complex*). By sequentially increasing or decreasing the value of the distance
    metric, we obtain a filtration of simplicial complexes. In practice, the Vietoris–Rips
    complex is easier to compute and underlies many common topological data analysis
    packages. This leads us to a very new and emerging part of network analytics:
    extensions of network tools to simplicial complexes.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们可以对加权图进行过滤一样，我们也可以对单纯形复形进行过滤。单纯形复形的过滤过程取决于单纯形复形的构建方式。在大多数拓扑数据分析算法中，我们从一个数据点云开始，该点云位于可以定义距离度量的空间中。当点之间共享互相的*n*向重叠集（*Čech复形*）或成对重叠集（*Vietoris–Rips复形*）时，这些点会被纳入单纯形复形。通过顺序地增大或减小距离度量的值，我们获得了单纯形复形的过滤。在实践中，*Vietoris–Rips复形*更容易计算，并且是许多常见拓扑数据分析包的基础。这引领我们进入网络分析的一个全新且新兴的领域：将网络工具扩展到单纯形复形。
- en: Many of the tools introduced in the previous chapters have simplicial complex
    analogs, including eccentricity, shortest path algorithms, centrality metrics
    (Katz centrality, eigenvector centrality, closeness centrality, and so on), triadic
    closure, and many more. Typically, simplicial complexes of network data are built
    by computing maximal cliques within the network (though it’s possible to define
    a distance metric and apply the process defined in the prior paragraph to build
    simplicial complexes from network data as well). *Maximal cliques* of a network
    include the highest *n*-way mutual edges among groups of vertices. These maximal
    cliques correspond to an (*n* – 1)-simplicial complex. The *flag complex* of the
    graph involves building the graph’s simplicial complex by computing the graph’s
    maximal cliques. From this complex, it’s possible to define quantities at each
    simplicial complex level, which can be combined into a total metric across levels.
    This means we can glean more information about the overall structure of the network
    and its components at various levels of a simplicial complex.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Let’s return to Farrelly’s social network introduced in prior chapters and look
    at an extension of degree centrality, dubbed *topological dimension*. We can define
    topological dimension as a weighted degree centrality, weighting each vertex by
    the dimension of the cliques in which it resides, which involves summing across
    a vertex’s cliques of different dimensions. For instance, a vertex in a maximal
    two-clique and a maximal three-clique within the network would have a topological
    dimension of 5\. A vertex in a maximal five-clique and no other cliques would
    also have a topological dimension of 5\. However, the former vertex might have
    a degree of 3, connecting to one other vertex in the two-clique and two other
    vertices in the three-clique; the latter would have a degree of 4, connecting
    to the four other vertices in the five-clique.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: In [Listing 4-2](#listing4-2), we have a script that calculates the maximal
    cliques and the topological dimension of vertices within Farrelly’s social network.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Listing 4-2: A script that calculates topological dimension across vertices
    in Farrelly’s social network'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: This script results in a topological dimension calculation based on the flag
    complex of the graph. It first calculates the flag complex from the maximal cliques;
    it then stores the information of each clique, such that we can cycle through
    each clique to see which vertices belong to each clique. Converting this information
    to a binary indicator matrix allows us to multiply the dimension of the clique
    and the indicator matrix, resulting in a vector containing the topological dimension
    of each vertex. [Table 4-3](#table4-3) shows the topological dimension and degree
    of each vertex in the author’s network dataset.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 4-3: Topological Dimension and Degree Summary for Vertices in Farrelly’s
    Social Network'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '| **Vertex** | **Degree** | **Topological dimension** |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 1 | 2 | 3 |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 2 | 3 |'
- en: '| 2 | 1 | 2 |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 1 | 2 |'
- en: '| 3 | 5 | 11 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 5 | 11 |'
- en: '| 4 | 2 | 3 |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 2 | 3 |'
- en: '| 5 | 4 | 7 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 4 | 7 |'
- en: '| 6 | 3 | 6 |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 3 | 6 |'
- en: '| 7 | 8 | 18 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 8 | 18 |'
- en: '| 8 | 3 | 4 |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 3 | 4 |'
- en: '| 9 | 3 | 4 |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 3 | 4 |'
- en: '| 10 | 3 | 6 |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 10 | 3 | 6 |'
- en: '| 11 | 3 | 5 |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 11 | 3 | 5 |'
- en: '| 12 | 1 | 2 |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 12 | 1 | 2 |'
- en: '| 13 | 4 | 8 |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| 13 | 4 | 8 |'
- en: '| 14 | 4 | 7 |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 14 | 4 | 7 |'
- en: '| 15 | 4 | 8 |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 4 | 8 |'
- en: '| 16 | 2 | 4 |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 16 | 2 | 4 |'
- en: '| 17 | 2 | 4 |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 17 | 2 | 4 |'
- en: '| 18 | 3 | 6 |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 18 | 3 | 6 |'
- en: '| 19 | 2 | 4 |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 19 | 2 | 4 |'
- en: '| 20 | 1 | 2 |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 20 | 1 | 2 |'
- en: '[Table 4-3](#table4-3) shows a distinct difference between degree, which includes
    only the vertices and edges of the author’s network in its calculation, and the
    topological dimension, which includes higher-order interactions. For instance,
    vertices 9 and 10 both have a degree of 3; however, their topological dimensions
    differ, with vertex 9 having a score of 4 and vertex 10 having a score of 6\.
    The importance of vertex 10 to the overall network structure is larger than the
    importance of vertex 9 to the overall network structure. Without considering higher-order
    interactions within the network, we would not be able to distinguish between the
    two vertices with respect to this metric.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[表4-3](#table4-3)展示了度数与拓扑维度之间的显著区别，度数仅在计算中考虑了作者网络的顶点和边，而拓扑维度则包括了更高阶的交互作用。例如，顶点9和10的度数都是3；然而，它们的拓扑维度不同，顶点9的得分为4，顶点10的得分为6。顶点10在整个网络结构中的重要性大于顶点9。如果不考虑网络中的更高阶交互作用，我们将无法在这个度量上区分这两个顶点。'
- en: For weighted networks, it’s possible to combine these simplicial-complex-based
    metrics with graph filtration, yielding a sequence of metrics over the filtration
    based on the simplicial complex of the network. You’ll see this when we discuss
    a tool called *persistent homology* in the next section of this chapter. You could
    do the same with the Euler characteristic or the topological dimension or a yet-to-be-developed
    simplicial complex extension of network metrics.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对于加权网络，可以将这些基于单纯形复形的度量与图滤波结合起来，产生基于网络的单纯形复形的度量序列。当我们在本章的下一部分讨论一个名为*持久同源性*的工具时，你将会看到这一点。你也可以用欧拉示性数、拓扑维度或尚未开发的单纯形复形扩展的网络度量来做同样的事。
- en: Simplicial complex extensions of network metrics are a very new area of study
    within network science, and few packages or open source functions exist to calculate
    the simplicial analogs of network metrics. However, it is hoped that this example
    and some of the papers on this topic will spark the addition of simplex-based
    metric within network science packages. Perhaps you will take up the challenge
    and contribute functions to the igraph package or other open source network science
    tools.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 网络度量的单纯形复形扩展是网络科学中的一个全新研究领域，目前几乎没有计算网络度量单纯形类比的包或开源函数。然而，希望这个例子以及一些相关论文能够激发在网络科学包中加入基于单纯形的度量。也许你会接受这个挑战，向igraph包或其他开源网络科学工具贡献函数。
- en: The next tools we look at will involve a bit more topology than we’ve encountered
    so far, so first let’s explore another topological concept that’s useful in graph
    analytics and in understanding simplicial complexes.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们要介绍的工具涉及的拓扑学内容将比我们之前遇到的更多，所以首先让我们探索一个在图分析和理解单纯形复形中都非常有用的拓扑学概念。
- en: Introduction to Homology
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 同源性简介
- en: The basic topological premise of our next set of tools involves counting different
    dimensions of holes in an object or dataset. Consider a piece of paper with a
    hole in the middle of it or a basketball with a sphere of air inside it. These
    are holes of different dimensions, and each hole separates connected pieces of
    an object from other pieces of itself. When these holes exist in manifolds or
    functions, we can systematically study them and classify objects or spaces based
    on the number and dimension of these holes.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们下一个工具集的基本拓扑学前提是涉及计算对象或数据集中的不同维度的孔。想象一张纸的中间有个洞，或者一个篮球内部有一团空气。这些是不同维度的孔，每个孔将一个物体的连通部分与它的其他部分分开。当这些孔出现在流形或函数中时，我们可以系统地研究它们，并根据这些孔的数量和维度对物体或空间进行分类。
- en: '*Homology* is the counting of varying-dimensional holes (connected components,
    circles, spheres, voids, and so on) within a given object or space, usually to
    classify that object or space. For low-dimensional spaces, this is fairly straightforward;
    you can actually build a physical model of the space and count the holes. However,
    there are also variants of homology that allow topologists to distinguish between
    different types of objects and spaces that may be higher dimensional or strangely
    shaped without requiring a physical model.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '*同调*是对一个物体或空间中不同维度孔洞（连通成分、圆圈、球体、空洞等）进行计数，通常用于对该物体或空间进行分类。对于低维空间，这个过程相当直接；你实际上可以构建空间的物理模型并计数孔洞。然而，也有一些同调变体，允许拓扑学家区分不同类型的物体和空间，即使它们是高维或形状奇特的，也无需物理模型。'
- en: Numbers corresponding to holes in each dimension create a handy collection of
    values, called *Betti numbers*, that organize the number and type of hole within
    a given object or space such that each object can be classified and studied alongside
    other objects whose numbers match. If you’re familiar with algebraic topology,
    this is a standard procedure for the classification of abstract mathematical structures.
    Commonly, these numbers are stored in a vector. It’s a bit abstract, but we’ll
    go through some simple examples.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 对应于每个维度中孔洞的数字形成了一组有用的数值，称为*贝蒂数*，它们组织了给定物体或空间中的孔洞数量和类型，以便可以将每个物体与其他具有相同贝蒂数的物体进行分类和研究。如果你熟悉代数拓扑学，这是一种标准的抽象数学结构分类程序。通常，这些数字存储在一个向量中。虽然这有点抽象，但我们将通过一些简单的示例来解释。
- en: Examples of Betti Numbers
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 贝蒂数的示例
- en: Many sports involve using a ball, but not all balls are the same, topologically
    speaking. Basketballs and baseballs are both round balls in three-dimensional
    space. Basketballs are usually bigger than baseballs, but if there were a child’s
    toy basketball of the same size as a baseball, one might look at them and think
    they are quite similar.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 很多运动都涉及到使用球，但从拓扑学的角度来看，并不是所有的球都是相同的。篮球和棒球都是三维空间中的圆形球体。篮球通常比棒球大，但如果有一个大小和棒球相同的儿童玩具篮球，可能会觉得它们非常相似。
- en: '![](image_fi/503083c04/f04005.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c04/f04005.png)'
- en: 'Figure 4-5: An example baseball and basketball, which look similar but are
    topologically distinct'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-5：一个例子，展示了看起来相似但拓扑上不同的棒球和篮球
- en: Topologically, though, they are quite distinct. These two balls differ in second
    Betti numbers, which count three-dimensional voids in an object. A vector of Betti
    numbers is an infinite sequence of numbers representing the number of holes in
    each dimension, starting with connected components on the zeroth number position
    and moving to circles (first number position), voids (second number position),
    and higher-dimensional voids (starting from the third position and going to infinite
    position). In practice, most datasets don’t have many holes past the first Betti
    number, so we can fill the rest of the vector with zeros. The hollow basketball
    has a hole past the first Betti number because it contains a void, giving a vector
    of Betti numbers (1, 0, 1, 0, . . .), while the solid baseball has no holes of
    any dimension, corresponding to a Betti number vector of (1, 0, 0, 0, . . .).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 然而从拓扑学角度来看，它们是完全不同的。这两个球在第二贝蒂数上有所不同，第二贝蒂数用于计算物体中的三维空洞。贝蒂数向量是一个无限的数字序列，表示每个维度中的孔洞数，起始位置为零维的连通成分，接着是圆圈（第一维度位置）、空洞（第二维度位置）以及更高维度的空洞（从第三维度开始，直到无限维度）。实际上，大多数数据集在第一个贝蒂数之后没有太多孔洞，因此我们可以用零填充贝蒂数向量的其余部分。空心篮球在第一个贝蒂数之后有一个孔，因为它包含一个空洞，因此其贝蒂数向量为（1，0，1，0，...），而实心棒球在任何维度上都没有孔，对应的贝蒂数向量为（1，0，0，0，...）。
- en: Some objects have more than one hole in a given dimension. For instance, imagine
    gluing a second basketball to the outer surface of the basketball in [Figure 4-5](#figure4-5).
    This object would obviously have another void, yielding a Betti number vector
    of (1, 0, 2, 0, . . .). A donut, or *torus*, has a vector of (1, 2, 1, 0, . .
    .), as it has two open circles defining the ends of the tube, which form a void
    when connected at the ends. [Figure 4-6](#figure4-6) shows the classical construction
    of a torus from a sheet of paper.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 有些物体在给定维度上有多个孔。例如，假设在[图 4-5](#figure4-5)中将一个第二个篮球粘贴到篮球的外表面上。这个物体显然会有另一个空洞，产生一个贝蒂数向量（1，0，2，0，...）。一个甜甜圈，或称为*环面*，具有（1，2，1，0，...）的向量，因为它有两个开口的圆圈定义了管道的两端，这两个圆圈连接后形成了一个空洞。[图
    4-6](#figure4-6)展示了从纸片构建环面的经典方法。
- en: '![](image_fi/503083c04/f04006.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c04/f04006.png)'
- en: 'Figure 4-6: The construction of a torus from a sheet of paper connected at
    the edges'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-6：通过连接边缘的纸片构造一个环面
- en: It’s fairly easy to classify objects and spaces that can be easily visualized
    in three dimensions. However, many datasets used in the industry involve more
    than three dimensions, and comparisons and classifications of these objects require
    algorithms that can discern the Betti numbers associated with those objects; among
    these are genomics datasets (which can involve million-dimensional spaces), video
    sequences, and multivariate time series.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些能够轻松在三维中可视化的对象和空间，分类相对容易。然而，许多行业中使用的数据集涉及的不止三维，比较和分类这些对象需要能够辨别与这些对象相关的 Betti
    数字的算法；其中包括基因组数据集（可能涉及百万维空间）、视频序列和多元时间序列。
- en: The Euler Characteristic
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 欧拉示性数
- en: One of the topology-based metrics shows up both in the analysis of networks
    and in their higher-dimensional simplicial complex cousins, and it ties back to
    the notion of curvature introduced in prior chapters. The *Euler characteristic*,
    often given the notation of χ, provides a single number to summarize a topological
    space and is a topological invariant, meaning that the topological quantity being
    calculated does not change as the space is continuously deformed (stretched, twisted,
    or otherwise manipulated without tearing the space). The Euler characteristic
    can be defined using Betti numbers; technically, computing the Euler characteristic
    this way involves an alternating sum of Betti numbers (zeroth Betti number – first
    Betti number + second Betti number – third Betti number + fourth Betti number
    . . . up until the highest Betti number that exists).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一种基于拓扑的度量出现在网络分析和其更高维单纯复形的类似体中，它与前面章节引入的曲率概念相关。*欧拉示性数*，通常用符号 χ 表示，提供了一个数字来概括拓扑空间，并且是一个拓扑不变量，意味着所计算的拓扑量在空间连续变形（拉伸、扭曲或以其他方式操作而不撕裂空间）时不会发生变化。欧拉示性数可以通过
    Betti 数字定义；从技术上讲，通过这种方式计算欧拉示性数涉及 Betti 数字的交替求和（零次 Betti 数字 – 一次 Betti 数字 + 二次
    Betti 数字 – 三次 Betti 数字 + 四次 Betti 数字……直到存在的最高 Betti 数字）。
- en: The Euler characteristic can also be defined through the dimensions of the simplicial
    complex (number of vertices – number of edges + number of triangles – number of
    mutual 4-way interactions + . . .). However, vertices included in an edge aren’t
    counted in the number of vertices. A triangle that makes up part of a mutual four-way
    interaction won’t be counted either.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 欧拉示性数也可以通过单纯复形的维度来定义（顶点数量 – 边的数量 + 三角形的数量 – 互相四向互动的数量 + ……）。然而，包含在边中的顶点不计入顶点数量。作为互相四向互动一部分的三角形也不计算在内。
- en: 'However, there is an easy way to obtain the largest pieces of a network or
    its higher-dimensional simplicial complex using an igraph function related to
    maximal cliques (as mentioned earlier). Maximal *k* – cliques denote and count
    the *k* – 1 simplices of the full simplicial complex derived from the network.
    They’re a convenient way to build the full simplicial complex and keep track of
    the pieces involved at each *n*-way interaction. Let’s add to the script in [Listing
    4-2](#listing4-2) to count the maximal cliques in the author’s network:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有一种简单的方法可以使用与最大团体相关的 igraph 函数来获得网络或其更高维单纯复形的最大部分（如前所述）。最大 *k* 团体表示并计数从网络中派生的完整单纯复形的
    *k* – 1 维单纯形。它们是构建完整单纯复形并跟踪每个 *n* 维互动中涉及的部分的方便方式。让我们在 [Listing 4-2](#listing4-2)
    的脚本中添加代码，来计算作者网络中的最大团体：
- en: '[PRE7]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This code creates a table summarizing the maximal cliques in the network that
    we previously computed. The result should yield 11 two-cliques (one-simplices,
    or edges), 6 three-cliques (two-simplices, or triangles), and 1 four-clique (three-simplices,
    or a mutual four-way interaction). We can plug these values into the Euler characteristic
    formula:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码创建了一个表，总结了我们之前计算的网络中的最大团体。结果应当产生 11 个二团体（一维单纯形或边），6 个三团体（二维单纯形或三角形），以及 1
    个四团体（三维单纯形或四方互动）。我们可以将这些值代入欧拉示性数公式：
- en: χ = 0 vertices – 11 edges + 6 triangles – 1 tetrahedron
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: χ = 0 个顶点 – 11 条边 + 6 个三角形 – 1 个四面体
- en: This gives a χ of –6\. Recent studies have shown that most real-world networks
    have negative Euler characteristics. There’s a very interesting reason that network
    data tends toward negative Euler characteristics related to the curvature of the
    network. Negative curvature in graphs is associated with the robustness of the
    network; biological networks with highly negative curvature can often withstand
    loss of function within parts of the network without adverse effects on the organism.
    The *Gauss–Bonnet theorem* relates the Euler characteristic, defined through homology,
    and the curvature of the object, including the manifold’s curvature and the curvature
    of the manifold’s boundary. There have been some recent attempts to link network
    analytics tools such as homology and Forman–Ricci curvature for a deeper study
    into network properties. This is a deep result in a branch of mathematics called
    *differential geometry* that connects an object’s local geometry to its global
    topology, and it’s a newer area of study in network science. Now that we know
    network topology and geometry are related to each other, let’s look at a topological
    tool called *persistent homology*.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这给出了一个χ值为-6。最近的研究表明，大多数真实世界的网络具有负欧拉特征。网络数据趋向于负欧拉特征有一个非常有趣的原因，这与网络的曲率有关。图中的负曲率与网络的鲁棒性相关；具有高度负曲率的生物网络通常能够承受网络部分功能的丧失，而不会对有机体产生不利影响。*高斯–博内定理*将通过同调定义的欧拉特征与物体的曲率相关联，包括流形的曲率和流形边界的曲率。最近有一些尝试将网络分析工具如同调和福尔曼–里奇曲率结合起来，深入研究网络特性。这是数学中的一个深刻结果，属于*微分几何*分支，连接了物体的局部几何与其全局拓扑，它是网络科学中的一个较新的研究领域。现在我们知道，网络拓扑和几何是相互关联的，接下来让我们看看一个叫做*持久同调*的拓扑工具。
- en: Persistent Homology
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 持久同调
- en: One of the most common topology-based algorithms used in data analysis today
    is persistent homology, which has been applied in genomics, healthcare, economics,
    energy, psychometrics, and many other fields. In essence, the idea of the persistent
    homology algorithm is to build a point cloud from the data, filter it into a series
    of simplicial complexes based on different thresholds of the data (akin to an
    MRI), and track topological features, such as holes or voids, appearing and disappearing
    in each slice. For instance, consider the three slices of cheese in [Figure 4-7](#figure4-7),
    each containing holes in the shape of circles; these circles affect the first
    Betti numbers of the datasets.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 今天数据分析中最常用的拓扑基础算法之一是持久同调，它已被应用于基因组学、医疗保健、经济学、能源、心理测量学以及许多其他领域。本质上，持久同调算法的思想是根据数据的不同阈值，从数据构建一个点云，将其过滤成一系列单纯复形（类似于MRI），并追踪在每个切片中出现和消失的拓扑特征，如孔或空隙。例如，考虑[图4-7](#figure4-7)中的三个奶酪切片，每个切片中都有圆形的孔；这些圆形影响数据集的第一个贝蒂数。
- en: '![](image_fi/503083c04/f04007.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c04/f04007.png)'
- en: 'Figure 4-7: Three slices of a cheese block containing holes in different places'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-7：包含不同位置孔的三个奶酪切片
- en: In [Figure 4-7](#figure4-7) one hole appears in all three slices, another appears
    in only the middle slice, and one appears in two slices. Holes and voids can be
    of different sizes in real data, and as we move across slices, holes might grow
    or shrink in diameter. Persistent homology algorithms have thresholds for both
    the lifetime of a feature and the minimum size considered for measuring a hole.
    In our example, we have features that are likely noise (either too small a radius
    or only appearing in one slice of our cheese) and features that are likely real
    features in the dataset (such as the void appearing in all three slices). Let’s
    unpack this intuition.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图4-7](#figure4-7)中，所有三个切片中都有一个孔，另一个只出现在中间的切片中，还有一个出现在两个切片中。实际数据中的孔和空隙可以有不同的大小，当我们穿越切片时，孔的直径可能会增大或缩小。持久同调算法对特征的寿命和测量孔的最小大小有阈值。在我们的例子中，我们有一些可能是噪声的特征（要么是半径太小，要么只出现在一片奶酪中），还有一些可能是真实数据集中的特征（例如，出现在所有三个切片中的空隙）。让我们来解读一下这个直觉。
- en: Say we want to compare two datasets to see whether they are collected from the
    same distribution or shape. This is common when matching image data. While image
    data rarely comes with cheese holes, circles come up in image data quite frequently
    in the form of eyes.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想比较两个数据集，以查看它们是否来自相同的分布或形状。这在匹配图像数据时很常见。虽然图像数据很少有奶酪孔，但圆形在图像数据中经常出现，通常表现为眼睛。
- en: Technically speaking, by varying the distances used to build the simplicial
    complex from the point cloud data (or filtering), you can track various Betti
    numbers through the filtration and assign each hole in the data an importance
    score, with important features lasting over longer filtration distances (longer
    *persistence*, in the parlance of persistent homology). In [Figure 4-7](#figure4-7),
    the hole that appears in all three slices would be considered the most important
    feature, and the hole that appears in only the second slice might be a result
    of noise in the data. These features can then be plotted on a *barcode* or *persistence
    diagram* that tracks these features’ lifetimes (distance scale over which they
    exist in the filtration). We’ll explore barcodes and persistence diagrams in the
    following example analysis.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，通过改变用于构建单纯复形的距离（或过滤），可以在过滤过程中跟踪不同的贝蒂数，并为数据中的每个孔洞分配一个重要性分数，其中重要特征在较长的过滤距离下持续存在（在持久同调的术语中，这被称为*持久性*）。在[图4-7](#figure4-7)中，出现在所有三个切片中的孔洞被视为最重要的特征，而仅出现在第二个切片中的孔洞可能是数据中的噪声。然后，这些特征可以绘制在*条形码*或*持久性图*上，以跟踪这些特征的生命周期（它们在过滤中存在的距离尺度）。我们将在接下来的示例分析中探讨条形码和持久性图。
- en: In practice, datasets are usually examined only for low-dimensional holes and
    features due to computational issues, and the zeroth (connected components) and
    first (circles) Betti numbers are used most commonly unless you are explicitly
    computing high-dimensional shape data. The example in [Figure 4-7](#figure4-7)
    is connected in all three slices, so it has a zeroth Betti number of 1 across
    all slices. However, circles appear and disappear through the filtration, giving
    a barcode that looks like [Figure 4-8](#figure4-8).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，由于计算问题，数据集通常仅检查低维的孔洞和特征，除非明确计算高维形状数据，否则最常使用零阶（连接成分）和一阶（圆形）贝蒂数。[图4-7](#figure4-7)中的示例在所有三个切片中都是连接的，因此它在所有切片中的零阶贝蒂数为1。然而，圆形在过滤过程中出现并消失，形成类似于[图4-8](#figure4-8)的条形码。
- en: '![](image_fi/503083c04/f04008.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c04/f04008.png)'
- en: 'Figure 4-8: A diagram plotting the persistence of features (holes) captured
    in the box of [Figure 4-7](#figure4-7)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-8：绘制在[图4-7](#figure4-7)框中的特征（孔洞）持久性的图示
- en: The barcode shows the time at which features appear and disappear. For instance,
    in [Figure 4-8](#figure4-8), we can see a feature that appears at time 2 and disappears
    at time 3 (our bottom cheese hole in [Figure 4-7](#figure4-7)). The sequence of
    connected components across the data slices has a curious relationship with another
    machine learning method, single-linkage hierarchical clustering, in which clusters
    at each height level correspond to the connected components at that particular
    slice. When both techniques use the same distance metric, the results are actually
    identical; however, the persistent homology approach will give more information
    than single-linkage hierarchical clustering’s dendrogram regarding the structure
    of the data. This means that machine learning practitioners can choose the technique
    that fits the problem best, as these two options come with their own plots and
    statistical tests. For instance, with a nontechnical audience, single-linkage
    hierarchical clustering might be preferable, as dendrograms and heatmaps are more
    familiar to biologists or social scientists.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 条形码显示了特征出现和消失的时间。例如，在[图4-8](#figure4-8)中，我们可以看到一个特征在时间2出现并在时间3消失（这是[图4-7](#figure4-7)中的底部奶酪孔）。数据切片中连接成分的序列与另一种机器学习方法——单链接层次聚类——有着奇特的关系，其中每个高度层级的簇对应于该特定切片中的连接成分。当两种技术使用相同的距离度量时，结果实际上是相同的；然而，持久同调方法将提供比单链接层次聚类的树状图更多的关于数据结构的信息。这意味着机器学习从业者可以选择最适合问题的技术，因为这两种方法各自都有自己的图表和统计测试。例如，对于非技术受众，单链接层次聚类可能更为可取，因为树状图和热图对于生物学家或社会科学家来说更为熟悉。
- en: Comparison of Networks with Persistent Homology
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持久同调下的网络比较
- en: Within the realm of network analytics, persistent homology can be a useful way
    to compare network structures to see if different networks have the same underlying
    geometry. Let’s explore this further with an application to simulated networks.
    In neuroscience, it’s common to translate fMRI or PET data into a network structure,
    where different regions of the brain are translated to vertices and connected
    to other regions of the brain based on activity patterns (sequential activation
    of an area, for instance, or co-activation of multiple regions during one task).
    Often, outcomes of interest involve comparing groups of patients, either healthy
    patients against a group of patients with a particular neurological or psychological
    disorder or two disease groups, to understand differences in the brain activation
    patterns across disorders.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络分析领域，持久同调可以是比较网络结构的有用方法，以判断不同的网络是否具有相同的基本几何形状。让我们进一步探索这个问题，并应用于模拟网络。在神经科学中，通常将fMRI或PET数据转化为网络结构，其中大脑的不同区域转化为顶点，并根据活动模式（例如，某个区域的顺序激活，或在同一任务中多个区域的共同激活）将其连接到大脑的其他区域。研究中常见的目标是比较不同组的患者，无论是健康患者与患有特定神经或心理疾病的患者之间，还是两组患病群体之间，以了解在不同疾病间大脑激活模式的差异。
- en: We’ll explore the use of persistent homology in the comparison of two such networks.
    Because fMRI data isn’t readily available as open source, we’ll simulate networks
    in igraph that are approximately the size of brain imaging networks; this will
    demonstrate how this methodology would be applied to imaging data that has been
    transformed to network data.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将探讨在比较这两种网络时，持久同调的应用。由于fMRI数据并不容易作为开源数据获取，我们将在igraph中模拟大约与脑成像网络相当规模的网络；这将演示如何将这种方法应用于已经转化为网络数据的成像数据。
- en: The igraph package allows you to simulate many types of network data, including
    Erdös–Renyi graphs, scale-free graphs, and Watts–Strogatz graphs. We’ll create
    each of these types of graphs using the script in [Listing 4-3](#listing4-3).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: igraph包允许你模拟多种类型的网络数据，包括Erdös–Renyi图、无标度图和Watts–Strogatz图。我们将使用[列表 4-3](#listing4-3)中的脚本来创建这些类型的图。
- en: '[PRE8]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Listing 4-3: A script that simulates three different types of network structures
    for statistical comparison'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 4-3：一个模拟三种不同类型网络结构的脚本，用于统计比较
- en: '[Listing 4-3](#listing4-3) creates three different types of networks that can
    later be compared via persistent homology; it also visualizes the networks, which
    should yield something similar (but probably not identical) to [Figure 4-9](#figure4-9).'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 4-3](#listing4-3)创建了三种不同类型的网络，这些网络可以通过持久同调进行比较；它还可视化这些网络，结果应与[图 4-9](#figure4-9)类似（但可能不完全相同）。'
- en: '![](image_fi/503083c04/f04009_m.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c04/f04009_m.png)'
- en: 'Figure 4-9: Plots of the three simulated network types'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-9：三种模拟网络类型的绘图
- en: '[Figure 4-9](#figure4-9) shows very different types of graphs. The scale-free
    graph in the middle includes a hub with many vertices connected to the hub but
    not to other vertices. The Erdös–Renyi graph on the left and the Watts–Strogatz
    graph on the right have many more interconnections, but the Watts–Strogatz model
    seems to have more structure connecting vertices into cliques, rather than randomly
    connecting vertices.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 4-9](#figure4-9)显示了非常不同类型的图。中间的无标度图包括一个包含许多与中心节点连接但不与其他节点连接的顶点的中心节点。左侧的Erdös–Renyi图和右侧的Watts–Strogatz图有更多的相互连接，但Watts–Strogatz模型似乎具有更多的结构，将顶点连接成团体，而不是随机连接顶点。'
- en: 'Let’s apply persistent homology to these networks and compare the distance
    between persistence diagrams among these networks by adding the following to [Listing
    4-3](#listing4-3); again, your results may vary given the simulation of each network
    type:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将持久同调应用于这些网络，并通过添加以下内容到[列表 4-3](#listing4-3)来比较这些网络之间持久性图的距离；请注意，由于每种网络类型的模拟不同，您的结果可能会有所不同：
- en: '[PRE9]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This addition derives an adjacency matrix from each of the simulated graphs
    and computes a persistence diagram from this adjacency matrix, which is then compared
    through the distances between the zeroth homology groups. This script should produce
    three persistence diagrams that look like [Figure 4-10](#figure4-10) (note they
    won’t be identical, as each run will produce something slightly different).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 该补充部分从每个模拟的图中推导出一个邻接矩阵，并从该邻接矩阵计算一个持久性图，然后通过零阶同调群之间的距离进行比较。这个脚本应该生成三个持久性图，看起来像[图
    4-10](#figure4-10)（注意它们不会完全相同，因为每次运行都会生成稍微不同的结果）。
- en: '![](image_fi/503083c04/f04010_m.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c04/f04010_m.png)'
- en: 'Figure 4-10: Persistence diagram plot for the three simulated network types
    (from top to bottom: Erdös–Renyi, scale-free, and Watts–Strogatz)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 4-10](#figure4-10) shows varying topological features found in each
    of the network types. The Watts–Strogatz network and Erdös–Renyi graphs both produce
    many large zeroth homology features (the dots), while the scale-free graph has
    a variety of zeroth homology feature sizes. The scale-free graph does not have
    higher-order homology features, while the other two graphs have first homology
    features (the triangles), albeit very near the diagonal line (suggesting that
    they may be noise). A point directly on the diagonal line is a feature that is
    in only one slice of the data; the farther from the diagonal line a point lies,
    the longer it has existed in the data. With respect to our three simulated networks,
    it’s hard to tell if the scale-free and Watts–Strogatz graphs differ significantly
    from the Erdös–Renyi graph just by looking at the persistence diagrams.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: 'We can add to our script to derive a null distribution for the Erdös–Renyi
    persistence diagram and use a special distance metric, Wasserstein distance, to
    statistically test the structural differences between the Erdös–Renyi persistence
    diagram and the scale-free and Watts–Strogatz persistence diagrams:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This script creates a null distribution of Erdös–Renyi persistence diagrams
    from the same distribution that the original persistence diagram was constructed
    from; your results may vary, given the random component to the simulation piece.
    Quantiles of our null distribution give a confidence interval of (0.91, 8.36),
    which includes quite a bit smaller distances than the distances computed between
    the persistence diagrams of the Erdös–Renyi graph and the Watts–Strogatz graph
    (23.59) and between the persistence diagrams of the Erdös–Renyi graph and the
    scale-free graph (39.78). Thus, we can conclude that the structures of the Watts–Strogatz
    graph and the scale-free graph are not random. There is a significant structural
    component to each of these graphs.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: This type of simulation can be very useful in testing differences between persistence
    diagrams of brain networks derived from fMRI and PET imaging studies, and it’s
    easy to implement in R. This methodology can also be applied to other networks
    with a hypothesized underlying structure, such as social networks or power grids.
    Many other types of network analysis tools can also be used to compare graph structures,
    such as local and global metrics (including graph radius and diameter, degree
    distributions, clustering graph coefficients, and so on), and many of these comparisons
    haven’t been explored much yet.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we filtered weighted networks to understand how network metrics
    change as edges are removed based on their weights. Then, we built simplicial
    complexes from network data to leverage several topological tools, including an
    extension of the degree metric, the Euler characteristic, and a filtration-based
    algorithm called persistent homology that can be used to compare networks. In
    the next chapter, we’ll transition from network science to distance geometry as
    we explore how different measurement choices impact supervised and unsupervised
    learning algorithms.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们过滤了加权网络，以了解在根据边权重移除边的过程中，网络度量如何变化。然后，我们从网络数据中构建了简单复形，以利用多个拓扑工具，包括度量的扩展、欧拉示性数以及一种基于过滤的算法——持久同调，这些工具可用于比较网络。
    在下一章中，我们将从网络科学转向距离几何，探索不同的测量选择如何影响监督学习和无监督学习算法。
