- en: '10'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Gradients, Meshes, and Patterns
  prefs: []
  type: TYPE_NORMAL
- en: Gradients are important in vector graphics because they are the cheapest and
    most universal way to depart from the lifeless flat look of solid color fills.
    Designers can create amazingly complex and photorealistic art using nothing but
    carefully laid out gradients. For all their versatility, gradients are relatively
    simple to create and edit, render quickly, and they are almost universally supported
    in SVG software—none of which is quite true, for example, for SVG filters such
    as blur ([17.1](c17.xhtml#section17.1)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Basically, a *gradient* is a smooth transition between two or more colors.
    *Color* also includes a level of opacity; this means that you can, for example,
    make a gradient from opaque red to transparent red, with semitransparent red shades
    in between. SVG supports two types of gradients: *linear* (along a line) and *elliptic*,
    or*radial* (away from a center, with possibly unequal *axes* and a noncentral*focus
    point*).'
  prefs: []
  type: TYPE_NORMAL
- en: After the plain linear and elliptic gradients, this chapter describes the *mesh
    gradients* that are much more powerful and flexible—even though, unfortunately,
    they are not supported by other SVG software at the moment. Finally, I discuss
    *patterns* that paint an object with repeated copies of another object; patterns
    have many similarities to gradients in the user interface.
  prefs: []
  type: TYPE_NORMAL
- en: 10.1 Creating Gradients
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Gradient tool (G or Ctrl-F1) is where you create new gradients on objects.
    It is also the most natural place to *edit* existing gradients—although, once
    created, an object's gradient handles are also visible (so they can be dragged
    and colored) in the Node tool ([12.5](c12.xhtml#section12.5)), all shape tools
    ([Chapter 11](c11.xhtml#ch11)), and the Dropper tool ([8.8](c08.xhtml#section8.8)).
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new gradient is easy. Just make sure you have the object (or objects)
    selected and start dragging on the canvas—from the selected object or from any
    point nearby. You will see an actual gradient appearing and following your mouse
    as you drag, and you will also see a system of *handles* (small on-canvas controls)
    connected by lines.
  prefs: []
  type: TYPE_NORMAL
- en: You don't need to drag *on* the selected objects—gradient handles can very well
    lie completely outside the object they apply to. You can select any number of
    objects and paint them all with the same gradient (more precisely, with multiple
    but coinciding gradients) with a single drag. Another way to quickly create a
    gradient that spans the entire object is to double-click that object with the
    Gradient tool.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use the most common object selection shortcuts, you don''t need to switch
    to the Selector tool: click to select, Alt-click to select under, and Shift-click
    to add to selection all work in the Gradient tool as well.'
  prefs: []
  type: TYPE_NORMAL
- en: You can apply a gradient to the *fill* of an object, its *stroke*, or both ([8.2](c08.xhtml#section8.2)).
    In Inkscape, a stroke gradient shows a pink connecting line between the handles,
    while a fill gradient has a blue line, as shown in [Figure 10-1](#fig10-1).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-fillstroke.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-1: Different gradients on the fill and stroke of an object'
  prefs: []
  type: TYPE_NORMAL
- en: If you are creating a gradient on an object that had flat color paint before,
    the initial gradient will go from the fully opaque to the fully transparent color
    of the object *on which you started the drag*. For example, if you have a yellow
    rectangle selected and start your drag on that rectangle, you will fill the object
    with a gradient going from opaque yellow to transparent yellow. You can, however,
    fill it with an opaque-blue-to-transparent-blue gradient if you have a blue-filled
    object somewhere and start dragging from it. To put it another way, the gradient
    you create applies to selected objects, but the color it uses may come from any
    object, selected or not, from which you start your drag. (If that's not what you
    wanted, don't worry—it's very easy to change gradient colors once it's created.)
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, if the object where you started your drag already had some gradient,
    the tool will redraw it for the selected object, preserving the colors of that
    gradient (that is, preserving the *gradient definition*, [10.2](#section10.2)).
    If you start dragging from an empty space, not from any object, the color or gradient
    of the *topmost selected* object will be used for the new gradient.
  prefs: []
  type: TYPE_NORMAL
- en: Of the many ways to *remove* gradients from an object, the easiest is to make
    sure none of the gradient handles are selected (all are white, not blue; if some
    are blue, press Escape once) and click any color on the palette (or Shift-click
    to remove gradient from stroke). The object will be filled or stroked by the flat
    color, replacing any gradient it had before.
  prefs: []
  type: TYPE_NORMAL
- en: When you transform (that is, move, scale, rotate, or skew, [Chapter 6](c06.xhtml#ch6))
    an object that uses gradients on fill or stroke, all the gradient handles are
    transformed along with the object, so the gradient stays firmly put in place.
    However, the third Affect button on the Selector tool controls bar ([6.11](c06.xhtml#section6.11))
    can change that. If you uncheck this button (checked by default), gradients will
    remain fixed *relative to the canvas*, no matter how you transform the objects
    that use them. This can be useful, for example, if you want to scale an object
    up or down so that its size matches exactly the elliptic gradient it uses.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s now look in more detail at the two types of gradients Inkscape can create:
    linear and elliptic.'
  prefs: []
  type: TYPE_NORMAL
- en: 10.1.1 Linear Gradients
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A linear gradient goes along a straight line segment, and both ends of the segment
    (as well as, possibly, some points in the middle) have certain colors and opacities
    assigned to them. The transitions between color areas on the object are always
    perpendicular to the gradient line. This is the default kind of gradient that
    the Gradient tool creates; the linear gradient mode of the tool corresponds to
    the first toggle button on the tool's controls bar ([Figure 10-2](#fig10-2)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-linear.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-2: Creating linear gradients by dragging and double-clicking'
  prefs: []
  type: TYPE_NORMAL
- en: 'A linear gradient has two freely draggable handles: a square at the start and
    a circle at the end of the gradient line. By dragging them around, you can change
    the direction and length of the gradient. The gradient repaints itself in real
    time as you drag a handle.'
  prefs: []
  type: TYPE_NORMAL
- en: With Ctrl pressed, drawing a new gradient or dragging a handle of an existing
    one makes the gradient line *snap* to angle increments, by default every 15 degrees
    (you can change this value in the Behavior ▶ Steps page of the Preferences dialog,
    compare [6.3](c06.xhtml#section6.3)). Double-clicking an object in linear gradient
    mode creates a horizontal linear gradient that goes through the center of the
    object's bounding box.
  prefs: []
  type: TYPE_NORMAL
- en: 10.1.2 Elliptic Gradients
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To switch the Gradient tool to create *elliptic gradients* instead of linear,
    click the second toggle button in the tool's controls bar (above the canvas).
    Now, if you drag on canvas with some objects selected, an elliptic gradient will
    be created on those objects, as shown in [Figure 10-3](#fig10-3).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-elliptic.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-3: Creating elliptic gradients by dragging and double-clicking'
  prefs: []
  type: TYPE_NORMAL
- en: An elliptic gradient has at least three draggable handles—the *center* (square
    handle) and the two perpendicular *radii* (circular handles). These handles let
    you move, stretch, squeeze, or rotate the gradient; you can make it into anything
    from a circle to a narrow ellipse, rotated at any angle. Moving the center handle
    moves the entire gradient (all handles); moving the radii stretches and rotates
    the gradient without moving the center. The two radii always remain perpendicular.
    As with a linear gradient, dragging a radius with Ctrl pressed *snaps* it to 15-degree
    angle increments.
  prefs: []
  type: TYPE_NORMAL
- en: When you start dragging to create a new gradient, you mark its center and are
    dragging out one of the radii. The other radius is created to be equal to half
    of the selected object's height—that is, if you start dragging from the center
    of the object and drag horizontally to the right edge of its bounding box, the
    ellipse will be neatly inscribed into the bounding box. You can achieve the same
    effect simply by double-clicking an object.
  prefs: []
  type: TYPE_NORMAL
- en: 'An elliptic gradient also has a fourth, normally hidden, handle: the*focus*.
    This is the point with the color and opacity of the gradient''s central stop.
    Normally, it is merged together with the central handle and moves with it, keeping
    the gradient perfectly symmetric. To separate the focus—visualized by an X-shaped
    handle—from the center, drag away from the central handle with Shift. This creates
    an asymmetric, or *eccentric*, gradient ([Figure 10-4](#fig10-4)). To merge the
    focus back, just drag it close enough to the central handle and it will snap.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-ellifocus.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-4: Creating an eccentric elliptic gradient by moving the focus'
  prefs: []
  type: TYPE_NORMAL
- en: 10.2 Gradient Definition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A gradient has a set of *stops*, each with its own color and transparency value.
    The minimum number of stops is the two *end stops*: the ends of the gradient line
    (linear) or the center and edge of an ellipse (elliptic). However, a gradient
    can also have any number of *middle stops* positioned somewhere between the end
    stops. For example, you may have a single middle stop at 0.5 of the gradient,
    which means it will always be exactly in the middle between the end stops. The
    complete list of a gradient''s stops with their colors, transparencies, and relative
    positions is called the *gradient definition*.'
  prefs: []
  type: TYPE_NORMAL
- en: Gradient definitions are document-wide resources. This means that any gradient
    you create or edit adds its definition to the list of all gradient definitions
    in your document. After that, you can assign that definition to any other gradient
    in this document, which means that gradient will take the colors and the relative
    positions of the middle stops from the definition (but the gradient's end handles
    will not move). The same gradient definition can be used by both linear and elliptic
    gradients. Use the drop-down list in the controls bar of the Gradient tool to
    view and select gradient definitions in the document ([Figure 10-5](#fig10-5)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-definition.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-5: Choosing a gradient definition'
  prefs: []
  type: TYPE_NORMAL
- en: The same list of gradient swatches is also available in the Fill and Stroke
    dialog as well as in the Paint Servers dialog ([10.9](#section10.9)). When you
    have one or more objects with gradients selected, choosing a definition from the
    list assigns it to all selected gradients.
  prefs: []
  type: TYPE_NORMAL
- en: You can *reverse* the color definition of the selected object's gradient by
    pressing Shift-R or clicking the Reverse direction button on the controls bar.
    For example, if you have an elliptic gradient with opaque blue in the center and
    transparent yellow at the edge, after pressing Shift-R you will have transparent
    yellow in the center and opaque blue at the edge. With a linear gradient, this
    is equivalent to rotating the gradient line by 180 degrees, but an elliptic gradient
    can't be reversed simply by moving its handles, which makes Shift-R indispensable.
  prefs: []
  type: TYPE_NORMAL
- en: 10.2.1 Sharing Gradient Definitions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When copy-and-pasting or duplicating an object with a gradient, the object's
    copy automatically gets a *copy of the original gradient*, so that modifying it
    does not affect the source object's gradient definition. This behavior is controlled
    by thePrevent sharing of gradient definitions checkbox on the Tools ▶ Gradient
    page of the Preferences dialog. It is checked by default; if you uncheck it, copy-and-pasting,
    duplicating, pasting style, and explicit assignment of an existing gradient definition
    to an object will result in a *shared* gradient definition. When two objects share
    a gradient definition, changing the colors/opacities or middle stop positions
    of the gradient on one object affects *all* the objects that use the same definition.
    However, moving the end handles always affects only a single gradient because
    these nodes' positions are not part of a gradient definition.
  prefs: []
  type: TYPE_NORMAL
- en: Another setting that affects sharing of gradient definitions during object duplication
    is the lock button on the Gradient tool's controls bar. If it is pressed, the
    next duplication of an object with a gradient will result in a shared gradient,
    so that editing a gradient in one of the objects affects the other object as well.
    If you unpress the button, editing one of the shared gradients immediately breaks
    the link to the other (and pressing the button again will not restore it).
  prefs: []
  type: TYPE_NORMAL
- en: The Clean Up Document command in the File menu removes, among other things,
    any leftover unused gradient definitions that may be lingering in your document.
    It's a good way to tidy things up and reduce the document size (sometimes significantly).
  prefs: []
  type: TYPE_NORMAL
- en: 10.3 Gradient Repeat
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As you've seen, gradient handles don't need to coincide with the edges of the
    object they apply to; they can be positioned absolutely anywhere on the canvas,
    and the object will just display whatever part of the gradient happens to fall
    within its limits. But what about those parts of the object that are not covered
    by the gradient—those that lie beyond the ends of a linear gradient or outside
    the edge of an elliptic one?
  prefs: []
  type: TYPE_NORMAL
- en: By default, these areas are painted by the flat color and transparency of the
    first or last gradient stop. For example, if you have a small elliptic gradient
    with semitransparent white at the radii, the rest of the object outside the gradient
    will be the same semitransparent white. However, this is not the only possibility.
  prefs: []
  type: TYPE_NORMAL
- en: Select an object with a gradient (but make sure none of the handles are selected)
    and in the **Repeat** list in the controls bar of the Gradient tool, select either
    **Reflected** or **Direct** instead of the default**None**. These options force
    the gradient to repeat itself indefinitely, either unchanged (direct) or with
    an inversion of every second copy (reflected). This is an easy way to create various
    striped patterns on objects, as shown in [Figure 10-6](#fig10-6).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-repeat.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-6: Using the gradient Repeat option'
  prefs: []
  type: TYPE_NORMAL
- en: 10.4 Gradient Handles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Handles are the on-canvas controls that correspond to the gradient stops. In
    the Gradient tool, they can be not only dragged around but also *selected* and
    *painted*, much the same as selected objects are painted.
  prefs: []
  type: TYPE_NORMAL
- en: 10.4.1 Selecting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Selected handles are blue; unselected ones are white. The simplest way to select
    a handle is by clicking it; you can also Shift-click to add a handle to selection
    or remove it from selection, or Shift-drag around multiple nodes to select them
    with a rubber band (compare [5.7](c05.xhtml#section5.7)). After you have created
    a new gradient by dragging, the handle you've been dragging remains selected.
  prefs: []
  type: TYPE_NORMAL
- en: Similar to the Selector, in the Gradient tool you can also select handles with
    the keyboard. Tab and Shift-Tab select the *next* and *previous* handle (or first
    and last, if none were selected before); Ctrl-A selects *all* handles (in all
    selected objects); and Escape deselects any handles (but leaves the objects selected;
    a second Escape deselects objects).
  prefs: []
  type: TYPE_NORMAL
- en: 10.4.2 Painting Gradient Stops
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can assign any color or opacity level to the selected gradient handle or
    handles using all the same methods you would use to change the style of an object
    ([8.1](c08.xhtml#section8.1)). When a handle is selected, the palette, the Fill
    and Stroke dialog, the color gestures and commands in the selected style indicator
    ([8.2](c08.xhtml#section8.2)), the Paste Style command, and even the Dropper tool
    all work on the selected handle, not the selected object. [Figure 10-7](#fig10-7)
    shows an example.
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-paint.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-7: Assigning color to selected gradient handles'
  prefs: []
  type: TYPE_NORMAL
- en: 'Unlike an object, a gradient stop does not have fill or stroke (even though
    the gradient itself can apply to fill or stroke). Therefore, when you have one
    or more stops selected, the style indicator in the status bar shows the color
    of the stop in*both* the fill and stroke swatches; this may not be perfectly logical,
    but it is handy. The opacity of a gradient stop is indicated by the master opacity
    control (labeledO: in the status bar). The displayed stroke *width*, however,
    is always that of the object (if it has stroke), not the stop, since a stop cannot
    have a stroke.'
  prefs: []
  type: TYPE_NORMAL
- en: It is convenient to use the Dropper tool if you want one end of the gradient
    to blend smoothly into other objects; make sure the corresponding handle is selected,
    switch to Dropper, and click the area into which you want it to blend. Note that
    by switching to the Dropper tool, you leave the Gradient tool, but this is not
    a problem; like many other tools, Dropper displays gradient handles and even preserves
    handle selection. You cannot select objects in Dropper, but you can switch gradient
    handle selection.
  prefs: []
  type: TYPE_NORMAL
- en: When *multiple* gradient handles are selected, the selected style indicator
    displays the *averaged* color and opacity of the selected stops, marked with a
    (this is the same behavior as for multiple selected objects, [8.4.1](c08.xhtml#section8.4.1)).
  prefs: []
  type: TYPE_NORMAL
- en: When at least one handle is selected, the Copy command (Ctrl-C) copies to the
    clipboard the style (both color and opacity) of the single selected handle, or
    the averaged style of several selected handles. This means you can copy and paste
    style between gradient stops—select a handle, copy, select some other handle(s),
    and paste style (Shift-Ctrl-V). If you select several handles, this allows you
    to quickly average their colors and opacities by copying and then pasting their
    averaged style back onto them.
  prefs: []
  type: TYPE_NORMAL
- en: By the way, if you want to change the opacity of *all* stops in a gradient by
    the same amount, you don't need to tweak the opacity of each stop separately.
    Instead, simply adjust the master opacity of the object that is using the gradient
    ([8.3](c08.xhtml#section8.3)).
  prefs: []
  type: TYPE_NORMAL
- en: 10.4.3 Moving, Merging, and Snapping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can *move* the selected gradient handles by directly dragging them with
    the mouse or by using the arrow keys with all the regular modifiers (Shift for
    10 times the standard 2 px displacement, Alt for pixel-size displacement, Shift-Alt
    for 10 pixels displacement; see [6.5.1](c06.xhtml#section6.5.1)). Naturally, the
    end stop handles (gradient ends in a linear, center and radii in an elliptic)
    can be moved arbitrarily, whereas the middle handles can be moved only along the
    gradient line. (Don't confuse the *middle* handles with the *center* handle of
    an elliptic gradient; the latter, despite being in the center of an ellipse, represents
    an *end stop* of the gradient definition.)
  prefs: []
  type: TYPE_NORMAL
- en: If you select multiple objects, all of them that have gradients (linear or elliptic,
    on fill or on stroke) will display their handles, and you can edit any of them
    simultaneously. This opens up interesting possibilities. For example, you can
    select the ends of all linear gradients and move them all in parallel. Or you
    can press Ctrl-A to select all stops in all gradients and use arrow keys to move
    the entire ensemble of gradients as a whole.
  prefs: []
  type: TYPE_NORMAL
- en: What's more, any number of end stop handles (but not middle stops) can be*merged*.
    Just move one handle close enough to another, and it will snap to it and merge.
    (The status bar will report the merged status of such a handle—for example,Gradient
    point shared by 2 gradients.) When you drag such a merged handle, that affects
    all the gradients to which it belongs. To separate a merged handle, drag away
    from it with Shift.
  prefs: []
  type: TYPE_NORMAL
- en: For example, you can merge the centers of two objects' elliptic gradients, merge
    an elliptic handle with another object's linear handle, merge all three elliptic
    handles of multiple objects, or merge the gradients on fill and stroke of the
    same object, as shown in [Figure 10-8](#fig10-8).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-merge.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-8: Merging gradient handles'
  prefs: []
  type: TYPE_NORMAL
- en: When you drag to create a new gradient with several objects selected, you get
    what looks and acts like a single gradient applied to multiple objects—but it's
    actually many gradients with their handles merged together.
  prefs: []
  type: TYPE_NORMAL
- en: 'If two handles have different colors or opacities, they will remain different
    after you merge them. However, if you assign some color or opacity to a merged
    handle, it will apply to all the stops merged at this handle, equalizing their
    styles. If you want to change the style of one of the merged handles without unmerging
    it, this is possible if the merged handles belong to different objects: simply
    deselect everything (both handles and objects) and select only the object whose
    handle you want to repaint.'
  prefs: []
  type: TYPE_NORMAL
- en: When dragged, any handle of an object's gradient *snaps* obeying the snap bar
    toggles ([7.3](c07.xhtml#section7.3)). In particular, the gradient handles as
    a snappable are controlled by the master toggle of the second family (Snap nodes,
    paths, and handles). The snap targets for gradient handles are controlled by the
    individual toggles in the first and second families; you can snap to edges, corners,
    centers, or midpoints of the bounding boxes, to paths and path intersections,
    and to cusp or smooth nodes on paths. Of course, you can also snap to grid or
    guides when they are present and enabled.
  prefs: []
  type: TYPE_NORMAL
- en: Also, when dragging a handle or when creating a gradient, holding Ctrl snaps
    the gradient angle to horizontal, vertical, and 15-degree increments in between
    (see [Figure 10-9](#fig10-9)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-snap.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-9: Snapping gradient handles'
  prefs: []
  type: TYPE_NORMAL
- en: 10.5 Multistage Gradients
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A gradient that has at least one middle stop between the end stops is called*multistage*
    because it contains more than one color transition. In such a gradient, each middle
    stop has its own color and transparency, but its position is limited to somewhere
    in between the end stops. In Inkscape, a middle stop is represented by a diamond-shaped
    handle, as shown in [Figure 7 in the color insert](c15b.xhtml#ill-fig7).
  prefs: []
  type: TYPE_NORMAL
- en: 10.5.1 Creating Middle Stops
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To add a middle stop in a gradient, double-click or Ctrl-Alt-click anywhere
    on the gradient line. The new stop will automatically get the color and transparency
    of the clicked point, so the appearance of the gradient does not change.
  prefs: []
  type: TYPE_NORMAL
- en: You can *drag and drop* a color from the palette onto the gradient line. Dropping
    a color on an existing handle changes the color of that stop; dropping it anywhere
    else on the gradient line *creates* a new stop with that color.
  prefs: []
  type: TYPE_NORMAL
- en: When two or more adjacent handles are selected, pressing Insert adds new stops
    in the middles of all selected stop intervals (much the same as it does for nodes
    in the Node tool,[12.5.3](c12.xhtml#section12.5.3)). The "plus" button on the
    Gradient tool's controls bar has the same effect. New handles added in this way
    are included in the handle selection, so pressing Insert repeatedly adds more
    and more handles; if you start with two handles selected and press Insert *n*
    times, you will end up with 2^(*n*) handles.
  prefs: []
  type: TYPE_NORMAL
- en: To delete all selected stops, simply press Delete. You can also delete individual
    stops (selected or not) by Ctrl-Alt-clicking them. Or select a stop and click
    the "minus" button on the controls bar.
  prefs: []
  type: TYPE_NORMAL
- en: Deleting is not limited to middle stops; you can delete an end stop as well,
    so that the nearest intermediate stop becomes the new end stop of the gradient.
    When you delete an end handle of a linear gradient or a radii handle of an elliptic
    gradient, the behavior depends on how you did it; if you Ctrl-Alt-clicked the
    end node, the closest remaining handle moves up to its place so the gradient span
    stays the same, but if you selected the node and pressed Delete, the gradient
    shortens. If you delete the central handle of an elliptic, its nearest handle
    always moves in to become the new center. Finally, if you delete an end handle
    of a two-stop gradient, the gradient disappears and the object becomes painted
    with the flat color and opacity of the last remaining stop.
  prefs: []
  type: TYPE_NORMAL
- en: Pressing Ctrl-L with some intermediate stops selected *simplifies* the selected
    portion of the gradient, removing those stops that can be removed without too
    much change in the look of the gradient (compare [12.3](c12.xhtml#section12.3)).
    In particular, new stops created by double-clicking or pressing Insert initially
    do not change the appearance of the gradient, and simplifying will delete all
    redundant stops that weren't moved or repainted since creation. You may need to
    press Ctrl-L repeatedly to delete all unneeded stops.
  prefs: []
  type: TYPE_NORMAL
- en: 10.5.2 Moving Middle Stops
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Naturally, you can move a middle stop's handle along the gradient line (either
    by dragging or with arrow keys) no further than its neighboring handles. Dragging
    a middle handle with Ctrl snaps it to 1/10 fractions of the available range—that
    is, it will snap to 1/10, 2/10, 3/10, and so on of the span between its neighbors.
    The Offset field on the controls bar displays and lets you edit the position of
    the selected stop within the gradient (between 0 and 1).
  prefs: []
  type: TYPE_NORMAL
- en: Two or more middle stops may *coincide*. If they have different colors, the
    gradient in that point will have a sharp color boundary. For example, add two
    middle stops, paint one green and the other blue, and then drag the green one
    all the way to the blue one to create a sharp green-blue boundary in the gradient.
  prefs: []
  type: TYPE_NORMAL
- en: Dragging multiple selected handles with Alt moves them in a soft "rubbery" manner.
    The handle that you grab and drag moves all the way, but all other selected handles
    lag behind, the more so the farther they are from the handle you drag. The selected
    part of the gradient, instead of moving rigidly as a whole, smoothly reshapes
    as you drag (compare the node sculpting feature in the Node tool, [12.5.7.2](c12.xhtml#section12.5.7.2)).
  prefs: []
  type: TYPE_NORMAL
- en: Why is this useful? One gradient feature Inkscape (and SVG in general) lacks
    is*profiles*, which means any transition between two colors is always linear and
    cannot accelerate or decelerate (that is, it cannot shift more toward one of its
    end stops). However, Alt-dragging of middle stops makes it easy to *approximate*such
    nonlinear profiles. If you have a two-stop gradient that you want to shape according
    to a curved profile, select both ends of the gradient, press Insert several times
    to add a number of intermediate handles, then Alt-drag a handle in the middle
    to smoothly reshape the gradient, as shown in [Figure 10-10](#fig10-10).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-alt.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-10: Approximating a profiled gradient by dragging middle stops with
    Alt'
  prefs: []
  type: TYPE_NORMAL
- en: 10.6 Gradient Tips and Examples
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you want to "fade out" or "feather" the edge of an object, you don't have
    to apply a color-to-transparent gradient to it (indeed, often you *can't*, for
    example, if it's a bitmap that can have no fill). You could use a mask ([18.3](c18.xhtml#section18.3));
    however, if the background under the object is a solid color, a collection of
    overlay objects (*shaders*) of the same color as the background with an opaque-to-transparent
    gradient may often be easier to create and maintain. This method works equally
    well for multiple objects that need to be feathered as a group, for different
    feathering on different sides, for objects that already have different gradient
    fills, or for bitmaps or pattern-filled objects.
  prefs: []
  type: TYPE_NORMAL
- en: In [Figure 10-11](#fig10-11), four gradient shaders are put over the edges of
    a bitmap to feather it out on a white background.
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-feathering.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-11: Feathering the edge of a rectangular object with linear gradient
    shaders'
  prefs: []
  type: TYPE_NORMAL
- en: 'When using shaders, you don''t need to move the gradient handles to put the
    gradient where you need it. Instead, just transform the entire shader object with
    that gradient. In [Figure 10-12](#fig10-12), the Gradient tool was used only twice:
    to create opaque-to-transparent elliptic gradients on two ellipses, one white
    and one black. Then, a total of 29 clones (linked copies) of these shader ellipses,
    variously scaled and rotated, all with various reduced master opacity levels,
    were used to add depth to the cartoon face.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-cartoon.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-12: Adding depth to a cartoon with elliptic gradient shaders'
  prefs: []
  type: TYPE_NORMAL
- en: One problem with black (or any other dark-colored) shaders is that they may
    not look soft enough—too blunt at the edges, especially when fully opaque. This
    is the result of the default gradient profile being linear. You can try to fix
    the problem by adding mid stops and "profiling" them by Alt-dragging ([10.5.2](#section10.5.2)).
    Another trick is to blur the shader a bit ([17.1](c17.xhtml#section17.1)) so that
    its edges become less pronounced.
  prefs: []
  type: TYPE_NORMAL
- en: However, perhaps the simplest workaround for this problem is drawing a gradient
    not from opaque black to transparent black (which is the default), but from opaque
    black to transparent *white* (or, if you will be using the shader on some other
    light color, to the transparent version of that light color), as shown in [Figure 10-13](#fig10-13).
    This changes the perceived gradient profile drastically, making its edges a lot
    smoother and more natural. On the downside, this may make the center of the elliptic
    gradient a little too sharp, which you can often fix simply by scaling the shader
    object up somewhat.
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-pseudoprofile.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-13: A better gradient profile for a dark shader by using a fully
    transparent light color at the edge'
  prefs: []
  type: TYPE_NORMAL
- en: Using gradients in design often involves *overlaying* several objects with semitransparent
    gradients. [Figure 8 in the color insert](c15b.xhtml#ill-fig8) demonstrates a
    colored water drop (or a glass button), which is in fact a group of six objects
    with various elliptic gradients.
  prefs: []
  type: TYPE_NORMAL
- en: The Tweak tool's color modes ([8.9](c08.xhtml#section8.9)) can paint or randomize
    colors not only in flat-color fills or strokes but in gradients, too. For gradients,
    the tool takes into account not only the position of the object with the gradient,
    but also the position of each gradient stop relative to the tool's brush.
  prefs: []
  type: TYPE_NORMAL
- en: For example, you can re-color only the blue end of an object with a blue-red
    gradient simply by painting over that blue end with a brush small enough not to
    touch the red. Color tweaking does not *create* gradients on objects that used
    flat color before, nor does it add stops, but it paints the stops of the existing
    gradients in the drawing.
  prefs: []
  type: TYPE_NORMAL
- en: Let's give it a try. Take a simple opaque-black to transparent-black gradient,
    add a lot of middle stops by repeatedly pressing Insert, then randomize the lightness
    of the stops by stroking over the object with a Tweak brush in Jitter Colors mode,
    with only the L channel enabled. Then, repeat the same for two more copies of
    the smooth original gradient, and overlay them all on top of each other with a
    little rotation. The resulting texture is a quite believable misty seascape, as
    shown in [Figure 10-14](#fig10-14).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-tweak.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-14: Randomizing a gradient with the Tweak tool'
  prefs: []
  type: TYPE_NORMAL
- en: 10.7 Mesh Gradients [1.1]
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Similar to plain old-style gradients, *mesh gradients*, or simply *meshes*,
    also create smooth transitions between two or more colors. However, in a mesh,
    the points that carry these colors—analogous to gradient stops of a linear or
    elliptic gradient—are not positioned on the same straight line. Instead, the color
    *nodes* can be placed anywhere inside or outside the object. Also, the nodes are
    connected into a grid-like or conical *mesh*, whose segments are Bézier curves,
    similar to those used in paths ([Chapter 12](c12.xhtml#ch12)). The areas delineated
    by segments are called *mesh patches*.
  prefs: []
  type: TYPE_NORMAL
- en: Each mesh node has a color/opacity of its own; moving the nodes around, adding
    new nodes (and therefore multiplying segments and patches), as well as reshaping
    the connecting segments, affects how the color transitions between them stretch
    and bend. All this machinery allows you, with some skill, to create realistic
    approximations of various objects and effects quickly and efficiently. When tracing
    photos, you will even be able to do this, to an extent, automatically by picking
    the colors from under the meshed object ([10.7.5](#section10.7.5)).
  prefs: []
  type: TYPE_NORMAL
- en: Mesh gradients are a relatively recent addition to Inkscape. I would be happy
    to say they are an addition to the SVG standard as well, but alas, this is not
    quite the case yet. Mesh gradients were in a draft of SVG 2.0 and extensively
    developed by the working group of the standard. Inkscape provided the first and
    by far the most advanced implementation of this new feature. However, browser
    vendors were reluctant to support it at all.
  prefs: []
  type: TYPE_NORMAL
- en: Understandably, Chrome or Firefox have rather more clout in the tech world than
    Inkscape; for SVG in particular, browser support is critical for survival. As
    a result, in order to speed up its adoption, the SVG working group decided to
    drop this feature from the upcoming SVG 2.0 standard. Meshes may be reinstated
    in a future version of SVG; meanwhile, Inkscape has no plans of discontinuing
    its support of mesh gradients even though this feature is currently not standard
    SVG.
  prefs: []
  type: TYPE_NORMAL
- en: 10.7.1 When to Use Mesh Gradients?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A mesh gradient is a curious hybrid of bitmap and vector graphics. Like a bitmap,
    it is a grid of colored points—sometimes lots of them. Like a vector gradient,
    it allows you significant freedom in placing these points and smoothly interpolates
    colors between them. A perfect use case for mesh gradients is therefore something
    that is too organic, amorphous, or freeform for plain geometric gradients—but
    still smooth, without too much texture or fine details.
  prefs: []
  type: TYPE_NORMAL
- en: 'This class of mesh-friendly imagery includes all kinds of (mostly) smooth objects
    with soft, subtle color changes, curvilinear shades and highlights: clothes and
    drapery, faces and bodies, fruits and flowers, tree trunks and tree leaves, tableware,
    cars, ships, and sails. Also, as you''ll see below, meshes are handy when you
    include a bitmap image in your drawing and need to retouch it to mask out some
    details.'
  prefs: []
  type: TYPE_NORMAL
- en: While definitely more powerful than plain gradients, meshes in Inkscape are
    also much more complex and, as of yet, not as convenient to use. Many of the things
    that make working with regular gradients much easier (such as coloring with the
    Tweak tool or Alt-dragging multiple nodes) don't yet work in the Mesh Gradient
    tool. Hopefully the UI will keep improving in future versions.
  prefs: []
  type: TYPE_NORMAL
- en: Another thing to keep in mind is that mesh gradients, as of now, are an Inkscape-only
    feature not supported by other SVG software. If you plan to export your final
    artwork as bitmap or PDF, this shouldn't bother you much. If you plan to share
    your work in SVG format, your best bet is to convert the mesh to bitmap ([18.6.4](c18.xhtml#section18.6.4))
    inside the SVG document.
  prefs: []
  type: TYPE_NORMAL
- en: 10.7.2 Creating a Mesh
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To create a mesh on a path ([Chapter 12](c12.xhtml#ch12)), a shape ([Chapter 11](c11.xhtml#ch11)),
    or even a text object ([Chapter 15](c15.xhtml#ch15)), switch to the Mesh Gradient
    tool via the toolbar button and double-click the object ([Figure 10-15](#fig10-15)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/mesh-create.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-15: Creating a mesh gradient on a pear-shaped path'
  prefs: []
  type: TYPE_NORMAL
- en: By default, the tool creates the simplest possible rectangular mesh with one
    patch and four nodes in the corners of the object's bounding box. You can change
    the initial number of patches using the Rows and Columns values on the controls
    bar (they affect only newly created meshes but not those that already exist).
    The nodes are initially colored, in checkerboard order, with the object's original
    color (for example, yellow) and opaque white.
  prefs: []
  type: TYPE_NORMAL
- en: Just as with linear or elliptic gradients, you can create a mesh gradient on
    an object's fill or stroke. This is controlled by a switch on the controls bar.
  prefs: []
  type: TYPE_NORMAL
- en: 10.7.2.1 Rectangular or Conical?
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Another switch on the controls bar offers a choice of a *rectangular* or *conical*
    mesh. A conical mesh, with a central point and radial segments, sounds like a
    great idea for (roughly) circular or otherwise centrally symmetric objects. In
    fact, when you create a mesh on a polygon or star ([11.5](c11.xhtml#section11.5)),
    Inkscape will create a conical mesh, with the corresponding number of radii, regardless
    of the rectangular/conical switch on the controls bar.
  prefs: []
  type: TYPE_NORMAL
- en: However, a conical mesh is not a different mesh type; under the hood, it is
    still a rectangular mesh, only bent into a circle, with all nodes on one of the
    sides gathered into the same central point. One of the radii of a conical mesh
    is therefore a seam that can be opened up, as shown in [Figure 10-16](#fig10-16).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/mesh-conical.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-16: The anatomy of a conical mesh gradient'
  prefs: []
  type: TYPE_NORMAL
- en: When editing a conical mesh, you will want to avoid disheveling the seam or
    the central point. That's not hard to do; just remember to select the nodes on
    the seam and the central node by dragging around them, not by clicking—so that
    you select *all* the overlapped nodes in that location (a simple click selects
    only one of the coinciding nodes).
  prefs: []
  type: TYPE_NORMAL
- en: Note that in the initial conical mesh created by Inkscape, different nodes in
    the center have different (alternating) colors, which gives this area its characteristic
    conical appearance. If you want to edit the colors while keeping them different,
    you will have to move them apart, apply the colors, and then merge the nodes back.
    Otherwise, if you select all the central nodes by dragging around them and apply
    the color, you will get a plain symmetric color peak (similar to an elliptic gradient)
    instead of a cone ([Figure 10-17](#fig10-17)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/mesh-conical-center.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-17: The center of a conical mesh: cone or peak'
  prefs: []
  type: TYPE_NORMAL
- en: 10.7.3 Shaping a Mesh
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Mesh nodes are, in many ways, similar to path nodes ([12.1](c12.xhtml#section12.1)).
    The biggest difference is that only the corner nodes of a mesh have two handles
    and two segments attached to them (like non-end nodes on a path); the edge nodes
    of a mesh have three handles/segments, and the inner nodes have four. This proliferation
    of controls makes editing complex meshes difficult. You can select and move multiple
    nodes, but you cannot elastically Alt-drag them (compare [12.5.7.2](c12.xhtml#section12.5.7.2)),
    which would be the most appropriate for the "mesh cloth," nor does the Tweak tool
    ([12.6](c12.xhtml#section12.6)) work on mesh nodes.
  prefs: []
  type: TYPE_NORMAL
- en: In a mesh, you want the nodes—the carriers of the colors—to be positioned where
    you have your tinted spots, the peak highlights and shadows on your object. However,
    the shape of the segments connecting the nodes is no less important than the position
    of the nodes, because the segments form the "force field" that bends and stretches
    the tints. It is best to minimize mesh node editing by making sure that the new
    nodes are *created* more or less where you will need them and that the newly added
    segments *already* stick to the shape of the object you're modeling with your
    mesh.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you are subdividing a mesh, new segments are created by *interpolating*
    between the adjacent existing segments. This gives us an optimal strategy: start
    with a minimal four-node single-patch mesh ([Figure 10-15](#fig10-15), left),
    but before adding any more nodes, shape this outer frame to match the overall
    shape of the modeled object (in my case, a pear). Since the outside of a mesh
    is always fully transparent (see [Figure 10-16](#fig10-16), left), you need to
    place the outer nodes close enough to the object''s path but on the outside, as
    shown in [Figure 10-18](#fig10-18).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/mesh-shape.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-18: Shaping the outer edge of the mesh before adding any more nodes'
  prefs: []
  type: TYPE_NORMAL
- en: Unlike paths (compare [12.5.5](c12.xhtml#section12.5.5)), there is no smooth
    node type for meshes, so you will need to drag the nodes and their handles manually
    to make them smooth and shape the segments. You can select multiple nodes and
    drag them at once; note that the handles of a selected node become oriented triangles
    pointing to their mother node (this makes disentangling a complex mesh a little
    easier, since there are no lines connecting a node and its handles). You can also
    switch a segment (after you select its end nodes) to a straight line and back
    to a curve using the two buttons on the controls bar.
  prefs: []
  type: TYPE_NORMAL
- en: Since reshaping even a simple mesh is such a hassle, you may be glad to learn
    than when you create a mesh on an ellipse ([11.4](c11.xhtml#section11.4)), Inkscape
    automatically shapes it to match the elliptic shape ([Figure 10-19](#fig10-19),
    left; note that this is a rounded rectangular mesh, not a conical mesh). Thus,
    if your object is roughly circular or elliptic (such as a plate or a drop of liquid),
    it may make sense to create it as an ellipse first, make a mesh on it, and then,
    if necessary, convert it to a path and reshape it within its elliptical mesh.
    One problem with this approach is that the Node tool shows both path nodes and
    mesh nodes (that look quite similar) at the same time; to hide the mesh nodes,
    uncheck **Enable gradient editing** on the **Preferences** page for the Node tool
    (this affects both gradient and mesh nodes).
  prefs: []
  type: TYPE_NORMAL
- en: 10.7.4 Subdividing a Mesh
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once you have shaped your object more or less as you want it to be *and* shaped
    the default single-patch mesh to cling to the object ([Figure 10-18](#fig10-18)),
    you may start subdividing the mesh to add more points and patches. Now, the interpolatedsegments
    and points will follow the mesh's outer shape—like meridians and parallels on
    a globe—so, in most cases, they will require only minimal editing. All that remains
    to do is assign colors to the mesh nodes to create the shading and tints you envision.
  prefs: []
  type: TYPE_NORMAL
- en: 'Subdividing the mesh is pretty easy. You can do it semi-automatically by selecting
    two or more nodes and pressing Insert or Shift-I: this adds a node (and corresponding
    segments) halfway between (each pair of) selected nodes. For example, if you select
    all four nodes (Ctrl-A) of a single-patch mesh and press Insert, you end up with
    a 2×2 patch mesh with nine nodes in total. Now, if you press Ctrl-A again (to
    add the newly created nodes to selection) and then Insert again, each segment
    will be bisected once more, producing 4×4 patches and 25 nodes ([Figure 10-19](#fig10-19)).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/mesh-subdivide-ins.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-19: Subdividing a shaped mesh using the Insert key'
  prefs: []
  type: TYPE_NORMAL
- en: Such indiscriminate doubling up of the mesh is a decent strategy if you don't
    have a good idea of the best locations for the nodes (for example, when creating
    a bitmap retouching patch, [10.7.5.1](#section10.7.5.1)). If you do know where
    the peak highlights, shadows, and tinted spots are going to be, aim for them using
    manual subdivision. Double-clicking a segment in any point adds a node in that
    point and runs a new chain of segments through that point. For example, if you
    want a highlight in point A, first double-click the top segment in point B so
    you have a segment running through A, then double-click in A to create an intersection,
    as shown in [Figure 10-20](#fig10-20).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/mesh-subdivide-manual.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-20: Subdividing a shaped mesh by manual creation of nodes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that adding nodes (with either method) does not change how the mesh looks:
    Inkscape interpolates not only positions and segment shapes but also colors—so
    that new nodes get exactly the color that the mesh had in this point anyway. It''s
    now up to you to sculpt the color transitions by applying color to the new nodes.'
  prefs: []
  type: TYPE_NORMAL
- en: 10.7.5 Coloring Mesh Nodes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Don't get overexcited with subdividing your mesh before you start actually coloring
    it; it is better to start minimally and add new nodes only when you see that you
    can't get the coloring right without it. Nothing beats seeing how a pretty minimal
    mesh can produce an amazingly lifelike interplay of colors and shades.
  prefs: []
  type: TYPE_NORMAL
- en: Before you get to coloring, however, I recommend that you switch the mesh for
    the default Coons interpolation to Bicubic on the controls bar. The Coons interpolation
    is linear, which makes the mesh look unnaturally angular; the Bicubic interpolation
    is much smoother.
  prefs: []
  type: TYPE_NORMAL
- en: Actual painting of the mesh nodes works the same as with gradient stops ([10.4.2](#section10.4.2)).
    Select one or mode nodes (click, Shift-click, rubberband drag) and assign a color
    from a palette, or adjust the existing color via the Fill and Stroke dialog (again,
    I recommend the Wheel tab as the most natural). You can also drag-and-drop color
    from the palette onto a node (selected or not).
  prefs: []
  type: TYPE_NORMAL
- en: 'From here on, working with a mesh is basically a repeated cycle of: select
    a node; adjust its color; deselect the node and the object (to hide the mesh,
    as it''s hard to see how your colors look with the mesh sitting on top); select
    the object again; and repeat. Infrequently, you may also need to add a node by
    subdividing or move nodes by a little bit. Just invest enough time into this and
    you will be amazed by how lifelike your object emerges ([Figure 9 in the color
    insert](c15b.xhtml#ill-fig9)).'
  prefs: []
  type: TYPE_NORMAL
- en: Several points are worth noting in [Figure 10-20](#fig10-20). Point A retains
    the original yellow color I assigned to all nodes at first; it is much easier
    to start with such an average color and then create slight deviations from it.
    Points B and C are the two main highlights; they are painted a very light (almost
    white) shade of the pear's yellow. Point D adds a green accent, and points E,
    F, and G contribute some redness. Naturally, the points on the right and bottom
    of the pear are painted darker to create the overall shading, but there are local
    exceptions to this; in particular, the edge nodes from E1 to E2 and from E3 to
    E4 (note that they lie outside the actual shape) are made pure white to create
    the "dissolving edge" effect as when the object is in front of a brightly lit
    background (such as a window).
  prefs: []
  type: TYPE_NORMAL
- en: 10.7.5.1 Patching a Bitmap with a Mesh
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Meshes are an easy way to create a photo retouching patch—an object that perfectly
    blends in with a bitmap but covers something on the bitmap image that you don't
    need. Let's suppose you want to mask out the craquelure on one of Mona Lisa's
    cheeks. Start by drawing a rounded object over an area. Create a rectangular mesh
    on it and subdivide it a few times with Insert ([10.7.4](#section10.7.4)). For
    best results, the mesh's outer nodes should be outside the object's area; for
    this, just select all the nodes of the path (not the mesh) in the Node tool and
    scale the path down by pressing < a few times ([12.5.7.3](c12.xhtml#section12.5.7.3)),
    as shown in [Figure 10 in the color insert](c15b.xhtml#ill-fig10).
  prefs: []
  type: TYPE_NORMAL
- en: Now, all you need to do is select all mesh nodes in the Mesh Gradient tool and
    click the Pick colors button on the controls bar. For each selected node, Inkscape
    looks up the background (that is, bitmap) color at this point and assigns that
    color to the node. The patch is still visible in close-up because its smoothness
    contrasts with the craquelure texture of the rest of the face—but if you zoom
    out a little, it blends in perfectly! While it may be possible to achieve a similar
    effect with other tools (plain gradients, Dropper tool, blur), only mesh gradients
    make retouching so delightfully easy.
  prefs: []
  type: TYPE_NORMAL
- en: 10.8 Patterns
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A *pattern* is a paint type ([8.2](c08.xhtml#section8.2)) where an object''s
    fill or stroke consists of repeated copies of a *tile*. The tile can be anything:
    a single object or a group of objects, using any style properties or Inkscape
    techniques (for example, a tile may itself be recursively painted with a pattern).
    This universality makes patterns a very rich and flexible feature. In another
    respect, however, patterns in SVG are limited: they can tile only in a simple
    rectangular grid with no rotations or reflections (compare the clone tiler, [16.6](c16.xhtml#section16.6),
    which can arrange clones using 17 different planar symmetry types).'
  prefs: []
  type: TYPE_NORMAL
- en: You cannot have both a gradient and a pattern on an object; they are two alternative
    paint types. If you want a transparency gradient on an object with a pattern,
    read [10.6](#section10.6) on shaders or [18.3](c18.xhtml#section18.3) on masks.
  prefs: []
  type: TYPE_NORMAL
- en: 10.8.1 Creating Patterns
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Unlike gradients or meshes, patterns don't have a dedicated creation tool in
    Inkscape. Instead, just select the object or objects that you want to turn into
    a tile and choose **Object ▶ Pattern ▶ Objects to Pattern** from the menu, or
    press Alt-I.
  prefs: []
  type: TYPE_NORMAL
- en: The selected objects do not disappear and don't visibly change; however, you'll
    notice that instead of the original object(s), you now have a single *rectangle*
    selected. This rectangle is filled with the pattern made out of your object(s),
    and it has exactly the size and position of their bounding box, which means that
    exactly one copy of the pattern fits into the rectangle. If you now drag the rectangle
    sizing handle (using the Rectangle or Node tool), you will see the other tiles
    as well, as [Figure 10-21](#fig10-21) demonstrates.
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-pattern.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-21: Creating a pattern from objects'
  prefs: []
  type: TYPE_NORMAL
- en: Now you can easily assign the new pattern to any object by choosing Copy and
    Paste Style from this rectangle (which you can then delete if no longer needed),
    or by choosing it from the pattern list in the Fill and Stroke dialog, as shown
    in [Figure 10-22](#fig10-22).
  prefs: []
  type: TYPE_NORMAL
- en: '![](11/gradient-pattern-fillstroke.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10-22: The pattern paint in the Fill and Stroke dialog'
  prefs: []
  type: TYPE_NORMAL
- en: SVG allows you to set margins around tiles in a pattern to space them apart.
    Inkscape does not yet support doing this via the UI, but a simpler approach is
    to add to the original objects, before you turn them into a pattern, a transparent
    rectangle extending beyond the edges of the other objects and thus adding separation
    between the pattern's tiles. It is not possible to make pattern tiles overlap.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to extract the tile objects back from a pattern in order to edit
    them, select an object with that pattern and use the **Object ▶ Pattern ▶ Pattern
    to Objects** command (but make a copy of the patterned object first if you don't
    want to lose it).
  prefs: []
  type: TYPE_NORMAL
- en: 10.8.2 Editing Patterns
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you are in the Node tool or a shape tool, each object with a pattern fill
    displays three editing handles that allow you to move, scale, and rotate the pattern
    within the object ([Figure 10-21](#fig10-21)). As with gradients, these handles
    can be anywhere on the canvas, not necessarily on the object itself. Clicking
    a scale or rotate handle (but, for some reason, not the move handle) selects it,
    and you can then move it with the arrow keys.
  prefs: []
  type: TYPE_NORMAL
- en: X-shaped handle
  prefs: []
  type: TYPE_NORMAL
- en: Positioned in the top-left corner of one of the tiles (the "origin" tile). Dragging
    this handle *moves* the pattern in any direction.
  prefs: []
  type: TYPE_NORMAL
- en: Square handle
  prefs: []
  type: TYPE_NORMAL
- en: Positioned in the bottom-right corner of the origin tile. Dragging this handle
    *scales* the pattern. To make the scaling uniform (that is, to preserve the width/height
    ratio of the tiles), drag with Ctrl.
  prefs: []
  type: TYPE_NORMAL
- en: Round handle
  prefs: []
  type: TYPE_NORMAL
- en: Positioned in the top-right corner of the origin tile. Dragging this handle
    *rotates* the pattern around the X-shaped handle as an axis. Drag with Ctrl to
    snap the rotation angle to 15-degree steps.
  prefs: []
  type: TYPE_NORMAL
- en: 10.8.3 Patterns in Art
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Aesthetically, the problem with patterns is the same as their main advantage:*repetitiveness*.
    Patterns may be necessary or at least acceptable in technical illustrations, but
    artistic drawings are rarely improved by an annoyingly repetitive rectangular
    pattern.
  prefs: []
  type: TYPE_NORMAL
- en: If you use a pattern in your artwork but don't want it to look too oppressively
    regular, you may want to scale the pattern up (so that fewer copies of it fit
    into the patterned object) and/or rotate it away from horizontal/vertical. A more
    radical approach is to tile not a single object but a random scattering of several
    copies (or clones) of it; this way, it may take the viewer some effort to notice
    any regularity at all (that's how the stock polka dot patterns were made, [10.8.4](#section10.8.4)).
  prefs: []
  type: TYPE_NORMAL
- en: 10.8.4 Stock Patterns
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Objects to Pattern command is not the only way to add patterns to your document.
    Inkscape comes with a selection of simple *stock patterns* that you can reuse
    in your documents.
  prefs: []
  type: TYPE_NORMAL
- en: Select an object and switch it to pattern paint by clicking the **Pattern**
    button on the corresponding tab of the **Fill and Stroke** dialog. You will see
    a drop-down list ([Figure 10-22](#fig10-22)) that contains your document's custom
    patterns, if any, at the top, and then a set of stock Inkscape patterns after
    a separator. To use any of the patterns, simply select it from the list.
  prefs: []
  type: TYPE_NORMAL
- en: 'There is a selection of plain Stripes with different ratios of stripe width
    to gap width, in the range from 4:1 to 1:64\. For example, the Stripes 1:2 pattern
    has gaps twice as wide as the stripes. All stripes patterns exist in two versions:
    with black stripes and with white stripes (gaps are always transparent).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are two Checkerboard patterns with black and white odd squares (even squares
    are transparent).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Packed Circles option is a dense hexagonal pattern of black circles with
    transparent gaps.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Polka Dots is a scattering of dots randomly but evenly distributed to mask the
    regularity of the repeating pattern. This pattern has three size variants (small,
    medium, and large dots) and two color variants (black and white dots).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wavy is a pattern of wavy lines with transparent gaps between them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Camouflage is a green-toned protective pattern such as that used by the military.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ermine is the traditional heraldic pattern, originating from a stylized representation
    of stoat furs with black tails.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The three bitmap patterns, Sand, Cloth, andOld Paint, are based on seamless
    photographic tiles and allow you to add some natural texture to your drawing.
    All of them are grayscale, so you can make objects with these textures semitransparent
    and overlay them on other colored objects to texturize them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stock patterns are stored in the file inkscape/paint/patterns.svg in Inkscape's
    data folder that you can look up in Preferences, System page. You can add your
    own patterns to this file or replace it with any other SVG file containing the
    stock patterns you need.
  prefs: []
  type: TYPE_NORMAL
- en: 10.8.5 Hatches [1.1]
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Hatches are an alternative mechanism that SVG offers for painting an object
    with repeated copies of something. Hatches are more limited than patterns in that
    they can't use *any* object as a tile but only a path fragment—which is used to,
    well, hatch the object that refers to this hatch as fill or stroke paint.
  prefs: []
  type: TYPE_NORMAL
- en: Hatches are a new feature in SVG 2.0 (still not finalized, as of this writing)
    and are not universally supported in browsers. Inkscape can render SVG hatches,
    but it doesn't offer on-canvas handles and other conveniences for editing them.
    It's not a feature I would recommend anyone use; I am mentioning hatches only
    because Inkscape comes with a number of stock hatches you can browse and apply
    from the Paint Servers dialog ([10.9](#section10.9)).
  prefs: []
  type: TYPE_NORMAL
- en: 10.9 The Paint Servers Dialog [1.1]
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Remember that paint ([8.2](c08.xhtml#section8.2)) is anything that is used to
    draw an object's fill or stroke. Of all the paint types, some are simple (such
    as no paint or flat color paint) and some are complex (such as a gradient or pattern).
    In SVG, complex paints are defined not in the objects that use them but separately—which
    is why you can, for example, share gradient definitions between objects ([10.2](#section10.2)).
    Such complex paints are called *paint servers* because they provide their paint
    to any number of users (that is, objects).
  prefs: []
  type: TYPE_NORMAL
- en: Inkscape has a Paint Servers dialog (from the Object menu) that lets you review
    the paint servers and apply them to a selected object's fill or stroke. It's not
    something you couldn't do with other tools and dialogs; the primary value of this
    dialog is that it shows each paint as a thumbnail, making comparisons easier.
    You can view the paint servers (gradients, mesh gradients, patterns, and hatches)
    defined in theCurrent document, or you can review the stock Patterns and Hatches
    supplied with the program.
  prefs: []
  type: TYPE_NORMAL
