- en: '**Security**'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**安全**'
- en: '**20'
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**20**'
- en: Ultrasonic Soaker**
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**超声波浸泡器**'
- en: In this project we’ll use an ultrasonic sensor to trigger a toy water pistol.
    You could set this up to soak unsuspecting victims when they venture into forbidden
    territory!
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将使用超声波传感器来触发一个玩具水枪。你可以设置这个装置，让它在未经察觉的人进入禁区时进行喷水！
- en: '![Image](../images/p0168-01.jpg)![Image](../images/p0169-01.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/p0168-01.jpg)![Image](../images/p0169-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需部件**'
- en: '**Arduino board**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**Arduino 板**'
- en: '**Breadboard**'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**面包板**'
- en: '**Jumper wires**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**跳线**'
- en: '**HC-SR04 ultrasonic sensor**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**HC-SR04 超声波传感器**'
- en: '**WLtoys V959-18 Water Jet Pistol**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**WLtoys V959-18 水射流手枪**'
- en: '**LIBRARY REQUIRED**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需库**'
- en: '**NewPing**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**NewPing**'
- en: '**HOW IT WORKS**'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: 'For our soaker, we’ll use the WLtoys V959-18 Water Jet Pistol ([Figure 20-1](ch20.xhtml#ch20fig1))
    attachment for RC helicopters, which is inexpensive and widely available online.
    The pistol has a small reservoir to hold water and a mini-pump that shoots the
    water through a nozzle at the front. The pistol has only two wires: red is positive
    power and white is ground. It requires only a little current, which lets us trigger
    the pump using the current supplied by the Arduino.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的浸泡器，我们将使用 WLtoys V959-18 水射流手枪（[图 20-1](ch20.xhtml#ch20fig1)）附件，这是一种便宜且在网上广泛可得的
    RC 直升机配件。该手枪配有一个小水槽，用于储存水，并且有一个小型水泵，通过前面的喷嘴将水射出。手枪只有两根电线：红色是正电源，白色是接地。它只需要一点电流，这使得我们能够通过
    Arduino 提供的电流来触发水泵。
- en: '**FIGURE 20-1:** The WLtoys V959-18 Water Jet Pistol'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 20-1：** WLtoys V959-18 水射流手枪'
- en: '![Image](../images/f20-01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f20-01.jpg)'
- en: '**NOTE**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Remember that water and electricity do not mix well, so try to keep your Arduino
    away from the water jet to minimize the chance of water short-circuiting your*
    *Arduino board.*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*记住水和电不相容，所以尽量将你的 Arduino 远离水喷射口，以减少水短路你* *Arduino 板*的风险。'
- en: As we discussed in Project 13, the ultrasonic sensor sends out a burst of ultrasound
    and listens for the echo that bounces off an object to determine its distance.
    Here, the ultrasonic sensor looks for a bounceback that indicates an object is
    less than 15 centimeters away, in which case the Arduino sends power to the soaker
    to squirt water on our victims.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在第 13 项中讨论的，超声波传感器会发出一束超声波，并监听从物体反射回来的回声，以确定物体的距离。在这里，超声波传感器寻找一个回波，表示物体距离小于
    15 厘米，这时 Arduino 会向浸泡器提供电力，向我们的目标喷射水。
- en: '**THE BUILD**'
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**组装**'
- en: Add the ultrasonic sensor module ([Figure 20-2](ch20.xhtml#ch20fig2)) to your
    breadboard and connect VCC to +5V, Trig to Arduino pin 12, Echo to Arduino pin
    13, and GND to GND, as shown in the following table.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将超声波传感器模块（[图 20-2](ch20.xhtml#ch20fig2)）添加到你的面包板上，并将 VCC 连接到 +5V，Trig 连接到 Arduino
    引脚 12，Echo 连接到 Arduino 引脚 13，GND 连接到 GND，具体连接如下表所示。
- en: '| **ULTRASONIC SENSOR** | **ARDUINO** |'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **超声波传感器** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| VCC | +5V |'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| VCC | +5V |'
- en: '| Trig | Pin 12 |'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Trig | 引脚 12 |'
- en: '| Echo | Pin 13 |'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Echo | 引脚 13 |'
- en: '| GND | GND |'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | GND |'
- en: '**FIGURE 20-2:** The ultrasonic sensor'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 20-2：** 超声波传感器'
- en: '![Image](../images/f20-02.jpg)'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f20-02.jpg)'
- en: Connect the pistol’s red power wire to Arduino pin 3 and its white wire to Arduino
    GND via the breadboard power rail. Connect the power rails of the breadboard to
    Arduino power. The pistol comes with a small pipette to help you fill the reservoir.
    [Figure 20-3](ch20.xhtml#ch20fig3) shows where to fill the reservoir.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将手枪的红色电源线连接到 Arduino 引脚 3，将白色电线通过面包板的电源轨连接到 Arduino GND。将面包板的电源轨连接到 Arduino
    电源。手枪配有一根小移液管，帮助你填充水槽。[图 20-3](ch20.xhtml#ch20fig3)展示了如何填充水槽。
- en: '**FIGURE 20-3:** Use the pipette provided to fill the reservoir shown with
    water through the opening at the top.'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 20-3：** 使用提供的移液管通过顶部的开口向显示的水槽中加入水。'
- en: '![Image](../images/f20-03.jpg)'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f20-03.jpg)'
- en: Once you’ve confirmed that your setup matches the circuit diagram in [Figure
    20-4](ch20.xhtml#ch20fig4), upload the code in “[The Sketch](ch20.xhtml#ch00lev1sec84)”
    on [page 172](ch20.xhtml#page_172) to your Arduino, making sure to add the NewPing
    library to the Arduino IDE.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦确认你的设置与[图 20-4](ch20.xhtml#ch20fig4)中的电路图相匹配，将 “[The Sketch](ch20.xhtml#ch00lev1sec84)”
    中的代码上传到你的 Arduino，确保将 NewPing 库添加到 Arduino IDE 中。
- en: '**FIGURE 20-4:** The circuit diagram for the ultrasonic soaker'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 20-4：** 超声波浸泡器的电路图'
- en: '![Image](../images/f20-04.jpg)'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f20-04.jpg)'
- en: '**THE SKETCH**'
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**程序代码**'
- en: Before entering the sketch, download the NewPing library from *[http://www.nostarch.com/arduinohandbook2/](http://www.nostarch.com/arduinohandbook2/)*.
    The sketch calls on the NewPing library and defines the Arduino pin connections.
    Arduino pin 12 is connected to the sensor’s trigger pin and sends out an ultrasonic
    signal, and Arduino pin 13, connected to the sensor’s Echo pin, receives the returning
    signal. The Arduino converts the time between sending and receiving the signal
    into distance. The soaker is attached to Arduino pin 3, and a loop checks the
    distance to the detected object. If the distance is less than 15 centimeters,
    power is sent to pin 3 and the soaker shoots water at your unsuspecting friends!
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入草图之前，下载 NewPing 库，链接为 *[http://www.nostarch.com/arduinohandbook2/](http://www.nostarch.com/arduinohandbook2/)*。草图会调用
    NewPing 库并定义 Arduino 引脚连接。Arduino 引脚 12 连接到传感器的触发引脚，并发送超声波信号，Arduino 引脚 13 连接到传感器的
    Echo 引脚，并接收返回的信号。Arduino 将发送和接收信号之间的时间转换为距离。喷水器连接到 Arduino 引脚 3，循环检查检测到的物体的距离。如果距离小于
    15 厘米，则会向引脚 3 发送电源，喷水器会向毫无防备的朋友们喷射水！
- en: '#include <NewPing.h>   // This calls the NewPing library'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '#include <NewPing.h>   // 调用 NewPing 库'
- en: '#define trigPin 12     // Trig pin attached to Arduino 12'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '#define trigPin 12      // Trig 引脚连接到 Arduino 12'
- en: '#define echoPin 13     // Echo pin attached to Arduino 13'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '#define echoPin 13      // Echo 引脚连接到 Arduino 13'
- en: '#define soakerPin 3'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '#define soakerPin 3'
- en: '#define MAX_DISTANCE 500'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '#define MAX_DISTANCE 500'
- en: NewPing sonar(trigPin, echoPin, MAX_DISTANCE);
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: NewPing sonar(trigPin, echoPin, MAX_DISTANCE);
- en: void setup() {
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: void setup() {
- en: Serial.begin(9600);
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.begin(9600);
- en: pinMode(soakerPin, OUTPUT);
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: pinMode(soakerPin, OUTPUT);
- en: '}'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: void loop() {
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: void loop() {
- en: int distance;
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: int distance;
- en: distance = sonar.ping_cm();
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: distance = sonar.ping_cm();
- en: Serial.print(distance);
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.print(distance);
- en: Serial.println(" cm");
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println(" cm");
- en: if (distance <= 15) { // If distance is less than 15
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: if (distance <= 15) { // 如果距离小于 15
- en: digitalWrite(soakerPin, HIGH); // Soaker shoots water
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: digitalWrite(soakerPin, HIGH); // 喷水器射水
- en: delay(250);
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: delay(250);
- en: digitalWrite(soakerPin, LOW);  // Short pulse of water
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: digitalWrite(soakerPin, LOW);  // 短暂的水脉冲
- en: '}'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: else {
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: else {
- en: digitalWrite(soakerPin, LOW);  // Soaker will remain off
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: digitalWrite(soakerPin, LOW);  // 喷水器将保持关闭
- en: '}'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: delay(500);
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: delay(500);
- en: '}'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '**TROUBLESHOOTING**'
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**故障排除**'
- en: '**Q.** *The ultrasonic soaker does not shoot.*'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**Q.** *超声波喷水器没有射水。*'
- en: • Make sure the connections match the setup for the ultrasonic sensor by rechecking
    this chapter’s tables and the circuit diagram in [Figure 20-4](ch20.xhtml#ch20fig4).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: • 通过重新检查本章表格和 [图 20-4](ch20.xhtml#ch20fig4) 中的电路图，确保连接与超声波传感器的设置匹配。
- en: • Remember that the water will shoot only when the sensor detects someone or
    something in front of it.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: • 记住，只有当传感器检测到有人或物体在前方时，水才会喷出。
- en: • Make sure you have added power to the breadboard power rails.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: • 确保你已为面包板的电源轨提供电源。
- en: • Check that the water jet is working correctly by disconnecting it from the
    circuit and then connecting the wires to +5V and GND on the Arduino directly.
    You should hear the buzz of the pump motor; if you don’t, your component may be
    faulty.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: • 通过将水喷射器从电路中断开，再直接将电线连接到 Arduino 的 +5V 和 GND 上，检查水射流是否正常工作。你应该能听到泵电机的嗡嗡声；如果没有听到，可能是你的组件有问题。
- en: '**21'
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**21'
- en: Fingerprint Scanner**
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 指纹扫描仪**
- en: In this project we’ll use a fingerprint sensor, a servomotor, and some LEDs
    to create a cool biometric entry system.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将使用指纹传感器、舵机和一些 LED，制作一个酷炫的生物识别进入系统。
- en: '![Image](../images/p0174-01.jpg)![Image](../images/p0175-01.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/p0174-01.jpg)![Image](../images/p0175-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需部件**'
- en: '**Arduino board**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**Arduino 板**'
- en: '**Breadboard**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**面包板**'
- en: '**Jumper wires**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**跳线**'
- en: '**Red LED**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色 LED**'
- en: '**Green LED**'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**绿色 LED**'
- en: '**2 220-ohm resistors**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**2 个 220 欧姆电阻**'
- en: '**Tower Pro SG90 9g servomotor**'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**Tower Pro SG90 9g 舵机**'
- en: '**Optical fingerprint sensor (ZFM-20 Series)**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**光学指纹传感器 (ZFM-20 系列)**'
- en: '**LIBRARIES REQUIRED**'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需库**'
- en: '**Adafruit_Fingerprint**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**Adafruit_Fingerprint**'
- en: '**Servo**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**舵机**'
- en: '**SoftwareSerial**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**SoftwareSerial**'
- en: '**NOTE**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*The software we’re using in this project operates only on Windows.*'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们在这个项目中使用的软件仅支持 Windows。*'
- en: '**HOW IT WORKS**'
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: Biometric identification is used to identify a person from a specific biological
    characteristic that remains the same even over a long period of time, such as
    a fingerprint or iris pattern. Since fingerprints are unique to each person, they’re
    often used to help identify individuals for purposes like criminal investigations
    and security authentication. In this project, we’ll use a fingerprint sensor to
    read a fingerprint and, if it matches a print on record with the right security
    clearance, allow access by moving a servomotor.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 生物识别技术用于通过特定的生物特征来识别一个人，这些生物特征即使在很长时间内也保持不变，例如指纹或虹膜图案。由于指纹对每个人都是独一无二的，它们通常用于帮助识别个人，例如在刑事调查和安全身份验证中。在本项目中，我们将使用指纹传感器读取指纹，并且如果它与记录中具有适当安全权限的指纹匹配，则通过移动伺服电机允许访问。
- en: The sensor we’ll use is the ZFM-20 Series Fingerprint Identification Module
    (see [Figure 21-1](ch21.xhtml#ch21fig1)) but will generally be referred to as
    an *optical fingerprint sensor module*. The sensor takes a photograph of a fingerprint,
    adds it to the module’s database, and then checks the scanned fingerprint for
    a match. It can hold up to 162 fingerprints. The sensor is available online and
    from retailers such as Adafruit, which has also created a specific Arduino library
    for the module that we’ll use in the sketch.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的传感器是ZFM-20系列指纹识别模块（见[图21-1](ch21.xhtml#ch21fig1)），但通常称为*光学指纹传感器模块*。该传感器拍摄指纹的照片，将其添加到模块的数据库中，然后检查扫描的指纹是否匹配。它最多可以存储162个指纹。该传感器可以在线购买，也可以从如Adafruit等零售商处购买，Adafruit还为该模块创建了一个专门的Arduino库，我们将在草图中使用。
- en: '**FIGURE 21-1:** The ZFM-20 Series Fingerprint Identification Module is an
    optical fingerprint sensor.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**图21-1：** ZFM-20系列指纹识别模块是一个光学指纹传感器。'
- en: '![Image](../images/f21-01.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f21-01.jpg)'
- en: '**PREPARING THE FINGERPRINT SENSOR**'
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**准备指纹传感器**'
- en: To use the sensor, we must first get the SFG Demo software, available to download
    from *[http://www.adafruit.com/datasheets/SFGDemoV2.0.rar](http://www.adafruit.com/datasheets/SFGDemoV2.0.rar)*.
    The SFG Demo software is a simple, free program that connects your PC to the Fingerprint
    ID module via an Arduino so you can control it, add or delete fingerprints, and
    assign an ID for each one.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用传感器，首先需要获取SFG Demo软件，可以从*[http://www.adafruit.com/datasheets/SFGDemoV2.0.rar](http://www.adafruit.com/datasheets/SFGDemoV2.0.rar)*下载。SFG
    Demo软件是一个简单的免费程序，通过Arduino将您的PC与指纹识别模块连接，您可以控制它，添加或删除指纹，并为每个指纹分配一个ID。
- en: Download the *SFGDemoV2.0.rar* file and unzip to a destination of your choice.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载*SFGDemoV2.0.rar*文件并解压到您选择的目标位置。
- en: Once you have unzipped the *.rar* file, double-click the *SFGDemo.exe* file
    to run the program, and you’ll see the screen shown in [Figure 21-2](ch21.xhtml#ch21fig2).
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦解压了*.rar*文件，双击*SFGDemo.exe*文件运行程序，您将看到[图21-2](ch21.xhtml#ch21fig2)所示的界面。
- en: '**FIGURE 21-2:** The SFGDemo control screen'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图21-2：** SFGDemo控制界面'
- en: '![Image](../images/f21-02.jpg)'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f21-02.jpg)'
- en: Now you need to connect the fingerprint sensor module to your PC via the Arduino.
    The connections for the module to Arduino are shown in the following table.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您需要通过Arduino将指纹传感器模块连接到PC。模块与Arduino的连接如下表所示。
- en: '| **FINGERPRINT SENSOR** | **ARDUINO** |'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **指纹传感器** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| GND (black wire) | +5V |'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND（黑线） | +5V |'
- en: '| RX (white wire) | Pin 0 (RX) |'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| RX（白线） | Pin 0（RX） |'
- en: '| TX (green wire) | Pin 1 (TX) |'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| TX（绿线） | Pin 1（TX） |'
- en: '| +5V (red wire) | +5V |'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| +5V（红线） | +5V |'
- en: You’ll be using the Arduino as a bypass to connect the fingerprint scanner to
    your PC via the USB cable, so you need to load a blank sketch to get the Arduino
    to connect to the PC without carrying out a function. The easiest way to do this
    is to open the latest version of the Arduino IDE and upload the default sketch,
    shown next.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将使用Arduino作为中介，通过USB电缆将指纹扫描仪连接到PC，因此需要加载一个空白的草图，使Arduino能够连接到PC，而无需执行任何功能。最简单的方法是打开最新版本的Arduino
    IDE并上传默认的草图，如下所示。
- en: void setup() {
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: void setup() {
- en: '// put your setup code here, to run once:'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: // 在此处输入您的设置代码，只执行一次：
- en: '}'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: void loop() {
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: void loop() {
- en: '// put your main code here, to run repeatedly:'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: // 在此处输入您的主代码，将重复执行：
- en: '}'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: Next, connect the Arduino to your PC and in the SFGDemo program, select the
    **Open Device** button. From the **Com Port** drop-down menu that opens, choose
    the port your Arduino is connected to and click **OK**. You’ll see a message indicating
    that your module is connected and recognized, as shown in [Figure 21-3](ch21.xhtml#ch21fig3).
    Here my module is connected to the Arduino through com port 4, but you might need
    to use a different port.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，连接Arduino到你的PC，并在SFGDemo程序中选择**打开设备**按钮。在弹出的**COM端口**下拉菜单中，选择Arduino连接的端口并点击**确定**。你会看到一个消息，表示你的模块已连接并被识别，如[图21-3](ch21.xhtml#ch21fig3)所示。这里我的模块通过COM端口4连接到Arduino，但你可能需要使用不同的端口。
- en: '**FIGURE 21-3:** When the device is connected correctly, the program shows
    the message “Open Device Success!”'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图21-3：** 当设备连接正确时，程序会显示“设备打开成功！”的消息。'
- en: '![Image](../images/f21-03.jpg)'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f21-03.jpg)'
- en: Next, you’ll add a fingerprint to the database. Click **Enroll** on the SFGDemo
    control screen. When you see the message “Waiting for fingerprint,” press a finger
    firmly against the fingerprint sensor module window and wait a few seconds. When
    the print is registered, you’ll see the message “Success!” (as shown in [Figure
    21-4](ch21.xhtml#ch21fig4)).
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你将向数据库添加一个指纹。在SFGDemo控制屏幕上点击**注册**。当你看到消息“等待指纹”时，牢牢地把手指按在指纹传感器模块窗口上，并等待几秒钟。当指纹注册成功时，你将看到“成功！”的消息（如[图21-4](ch21.xhtml#ch21fig4)所示）。
- en: '**FIGURE 21-4:** The module has successfully captured a fingerprint and shows
    a preview of the print in the top-left window.'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图21-4：** 模块成功捕捉到指纹，并在左上角窗口中显示指纹预览。'
- en: '![Image](../images/f21-04.jpg)'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f21-04.jpg)'
- en: Now you’ll test whether the module recognizes the fingerprint you just recorded.
    Click the **Match** button on the SFGDemo control screen. When prompted, press
    your finger against the window firmly for a few seconds. If the demo finds a match,
    you’ll see the “Pass!” message shown in [Figure 21-5](ch21.xhtml#ch21fig5).
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你将测试模块是否能识别你刚刚录入的指纹。在SFGDemo控制屏幕上点击**匹配**按钮。当提示时，将你的手指紧紧按在窗口上几秒钟。如果演示找到匹配的指纹，你将看到[图21-5](ch21.xhtml#ch21fig5)所示的“通过！”消息。
- en: '**FIGURE 21-5:** The fingerprint matches and a “Pass!” message displays in
    the information panel of the SFGDemo control panel.'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图21-5：** 指纹匹配成功，且“SFGDemo控制面板”信息面板中显示“通过！”的消息。'
- en: '![Image](../images/f21-05.jpg)'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f21-05.jpg)'
- en: Now you need to check that the module recognizes your fingerprint when it’s
    attached to the Arduino and not the PC. Close the SFGDemo program and, from the
    resources you downloaded from *[https://www.nostarch.com/arduinohandbook2/](https://www.nostarch.com/arduinohandbook2/)*,
    add the Adafruit Fingerprint Sensor library to your IDE. If you need a refresher
    on adding libraries, check out the library section at the start of this book.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你需要检查模块是否能够识别当它连接到Arduino而不是PC时的指纹。关闭SFGDemo程序，然后从你下载的资源中，*[[https://www.nostarch.com/arduinohandbook2/](https://www.nostarch.com/arduinohandbook2/)]*，将Adafruit指纹传感器库添加到你的IDE中。如果你需要回顾如何添加库，请查阅本书开头的库部分。
- en: Once you’ve added the Adafruit Fingerprint Sensor library, open the IDE and
    select **Files** ▸ **Examples** ▸ **Adafruit-fingerprint-sensor-master** ▸ **Fingerprint**
    to choose the library fingerprint sketch shown in [Figure 21-6](ch21.xhtml#ch21fig6).
    Upload this sketch to your Arduino.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你添加了Adafruit指纹传感器库，打开IDE并选择**文件** ▸ **示例** ▸ **Adafruit-fingerprint-sensor-master**
    ▸ **Fingerprint**，选择如[图21-6](ch21.xhtml#ch21fig6)所示的库指纹草图。将此草图上传到你的Arduino。
- en: '**FIGURE 21-6:** The fingerprint demo sketch from the Adafruit Fingerprint
    Sensor library'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图21-6：** 来自Adafruit指纹传感器库的指纹演示草图'
- en: '![Image](../images/f21-06.jpg)'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f21-06.jpg)'
- en: '**NOTE**'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Your sensor may come with six wires, two of which aren’t necessary for the
    demo.*'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*你的传感器可能附带六根线，其中两根线对于演示是不必要的。*'
- en: Once you’ve uploaded the fingerprint sketch to your Arduino, disconnect from
    the PC. You now need to change your module/ Arduino pin setup. Instead of connecting
    the module to the TX and RX pins, change these connections to pins 2 and 3 on
    the Arduino, respectively, as shown in the following table. This keeps the TX
    and RX serial communication free to use the Arduino IDE Serial Monitor in the
    next step.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传指纹草图到你的Arduino后，断开与PC的连接。接下来，你需要更改模块/Arduino的引脚设置。将模块连接到TX和RX引脚的连接，分别更改为Arduino的引脚2和引脚3，如下表所示。这可以保持TX和RX串口通信空闲，以便在下一步中使用Arduino
    IDE的串口监视器。
- en: '|  **FINGERPRINT SENSOR**  | **ARDUINO** |'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '|  **指纹传感器**  | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| GND (black wire) | +5V |'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND（黑色电线） | +5V |'
- en: '| TX (green wire) | Pin 2 |'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| TX（绿色电线） | 引脚2 |'
- en: '| RX (white wire) | Pin 3 |'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| RX（白色电线） | 引脚3 |'
- en: '| +5V (red wire) | +5V |'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| +5V（红色电线） | +5V |'
- en: Now, reconnect your Arduino to the PC and open the Arduino IDE. Open the Serial
    Monitor of the IDE. When you press your finger to the module window, you should
    see something like [Figure 21-7](ch21.xhtml#ch21fig7).
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将你的Arduino重新连接到PC，并打开Arduino IDE。打开IDE的串口监视器。当你将手指按在模块窗口时，你应该看到类似[图21-7](ch21.xhtml#ch21fig7)的内容。
- en: '**FIGURE 21-7:** The module processes are displayed in the Arduino IDE serial
    screen.'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图21-7：** 模块过程显示在Arduino IDE串口屏幕上。'
- en: '![Image](../images/f21-07.jpg)'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f21-07.jpg)'
- en: '**THE BUILD**'
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建**'
- en: Now that you know the module is working as expected, you’ll use what you’ve
    learned to create the fingerprint entry system.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道模块正常工作，你将利用学到的内容创建指纹录入系统。
- en: The fingerprint module should now be connected to the Arduino, but if you’re
    starting at this point, follow the connections given in step 10 before proceeding.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在指纹模块应该已经连接到Arduino，如果你是从这一点开始，请按照步骤10中给出的连接进行操作，然后继续。
- en: Connect the servomotor to the GND and +5V power rails on the breadboard and
    connect the signal pin to Arduino pin 9, as shown in the following table.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将舵机电机连接到面包板的GND和+5V电源轨，并将信号引脚连接到Arduino的引脚9，如下表所示。
- en: '| **SERVO** | **ARDUINO** |'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **舵机** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Signal (yellow wire) | Pin 9 |'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 信号（黄色电线） | 引脚9 |'
- en: '| Positive power (red wire) | Breadboard +5V rail |'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 正电源（红色电线） | 面包板+5V电源轨 |'
- en: '| Negative power (black wire) | Breadboard GND rail |'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 负极电源（黑色电线） | 面包板GND电源轨 |'
- en: Insert the LEDs into the breadboard so that the shorter, negative leg is connected
    to the GND power rail of the breadboard and the positive, longer leg is connected
    to Arduino pins 7 and 8 via a 220-ohm resistor, as shown in the following table.
    The resistors should straddle the center of the breadboard, as shown in [Figure
    21-8](ch21.xhtml#ch21fig8).
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将LED插入面包板，使得短的负极腿连接到面包板的GND电源轨，长的正极腿通过220欧姆电阻连接到Arduino的7号和8号引脚，如下表所示。电阻应该跨越面包板的中心，如[图21-8](ch21.xhtml#ch21fig8)所示。
- en: '| **LEDS** | **ARDUINO** |'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **LED** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Green LED (positive, longer leg) | Pin 7 via 220-ohm resistor |'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 绿色LED（正极，长腿） | 通过220欧姆电阻连接到引脚7 |'
- en: '| Red LED (positive, longer leg) | Pin 8 via 220-ohm resistor |'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红色LED（正极，长腿） | 通过220欧姆电阻连接到引脚8 |'
- en: '| Negative power of both LEDs (shorter leg) | Breadboard GND rail |'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 两个LED的负极（短脚） | 面包板GND电源轨 |'
- en: '**FIGURE 21-8:** The LEDs are connected to the Arduino pins via 220-ohm resistors.'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图21-8：** LED通过220欧姆电阻连接到Arduino引脚。'
- en: '![Image](../images/f21-08.jpg)'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f21-08.jpg)'
- en: Connect the power rails of the breadboard to +5V and GND on the Arduino, and
    then check that your circuit matches [Figure 21-9](ch21.xhtml#ch21fig9).
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将面包板的电源轨连接到Arduino的+5V和GND，然后检查你的电路是否与[图21-9](ch21.xhtml#ch21fig9)匹配。
- en: Upload the code in “[The Sketch](ch21.xhtml#ch00lev1sec89)” on [page 183](ch21.xhtml#page_183).
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传[第183页](ch21.xhtml#page_183)中的“[草图](ch21.xhtml#ch00lev1sec89)”代码。
- en: '**FIGURE 21-9:** The circuit diagram for the fingerprint scanner'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图21-9：** 指纹扫描仪的电路图'
- en: '![Image](../images/f21-09.jpg)'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Image](../images/f21-09.jpg)'
- en: '**THE SKETCH**'
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**草图**'
- en: The sketch first calls on the Servo, SoftwareSerial, and Adafruit_ Fingerprint
    libraries. The LED and servo pins are defined as 7, 8, and 9, respectively, and
    pins 2 and 3 are defined for serial connection to the fingerprint sensor module.
    The fingerprint library handles the functionality of the module, and the sketch
    has a series of steps to read and store a fingerprint.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 草图首先调用了Servo、SoftwareSerial和Adafruit_Fingerprint库。LED和舵机的引脚分别定义为7、8和9，引脚2和3则定义为与指纹传感器模块的串口连接。指纹库处理模块的功能，草图中有一系列步骤来读取和存储指纹。
- en: The sensor automatically scans every 5 seconds and reads the fingerprint when
    it is pressed to the window. If the fingerprint matches one in the module memory
    (which we stored earlier in the project), the red LED will turn off, the green
    LED will light, and the servomotor will turn 180 degrees. This state will continue
    for 5 seconds, and the setup will reset and wait for another valid entry.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器每5秒自动扫描，并在手指按压到窗口时读取指纹。如果指纹与模块内存中的某个指纹匹配（我们在项目中提前存储了该指纹），红色LED将熄灭，绿色LED会亮起，舵机将旋转180度。这个状态将持续5秒钟，之后系统将重置并等待下一个有效的录入。
- en: // Fingerprint Sensor Library reproduced with kind permission
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: // 指纹传感器库已获许可转载
- en: // from Adafruit Industries
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: // 来自Adafruit Industries
- en: /***************************************************
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: This is an example sketch for our optical Fingerprint sensor
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: Designed specifically to work with the Adafruit BMP085 Breakout
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '----> [http://www.adafruit.com/products/751](http://www.adafruit.com/products/751)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: These displays use TTL Serial to communicate, 2 pins are required to
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: interface
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: Adafruit invests time and resources providing this open source code,
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: please support Adafruit and open-source hardware by purchasing
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: products from Adafruit!
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: Written by Limor Fried/Ladyada for Adafruit Industries.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: BSD license, all text above must be included in any redistribution
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: '****************************************************/'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '#include <Servo.h>'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: '#include <Adafruit_Fingerprint.h>'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '#if ARDUINO >= 100'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: '#include <SoftwareSerial.h>'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '#else'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: '#include <NewSoftSerial.h>'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '#endif'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: int getFingerprintIDez();
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: int ledaccess = 7; // Green LED pin
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: int leddeny = 8; // Red LED pin
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: int servoPin = 9; // Servo pin
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: Servo doorLock;
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '// Pin #2 is IN from sensor (GREEN wire)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: '// Pin #3 is OUT from arduino (WHITE wire)'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '#if ARDUINO >= 100'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: SoftwareSerial mySerial(2, 3); // Pins for the fingerprint sensor
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: '#else'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: NewSoftSerial mySerial(2, 3);
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: '#endif'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: void setup() {
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: doorLock.attach(servoPin); // We define the servo pin
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: pinMode(ledaccess, OUTPUT); // Green LED pin set as an ouput
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: pinMode(leddeny, OUTPUT); // Red LED pin set as an output
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: pinMode(servoPin, OUTPUT); // Servo pin set as an output
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: Serial.begin(9600); // Start sending messages to the Serial Monitor
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: Serial.println("fingertest");
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: finger.begin(57600); // Set data rate for the sensor serial port
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: // Start the module and checking for fingerprint
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: if (finger.verifyPassword()) {
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: Serial.println("Found fingerprint sensor!");
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: Serial.println("Did not find fingerprint sensor :(");
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: while (1);
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: Serial.println("Waiting for valid finger...");
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: void loop() {
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: int ID = getFingerprintIDez(); // Get the fingerprint ID#
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: // Reset the device to the test state
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: digitalWrite(ledaccess, HIGH);
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: digitalWrite(leddeny, HIGH);
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: doorLock.write(0);
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: if (ID >= 0) { // Valid ID. Unlocked state
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: // Enable the access LED, turn off the deny LED
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: digitalWrite(ledaccess, HIGH);
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: digitalWrite(leddeny, LOW);
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: // Unlock the servo
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: doorLock.write(180);
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: else if (ID == -3) { // ID doesn't match any registed print
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: // Locked state
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: // Enable the deny LED, turn off the access LED
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: digitalWrite(ledaccess, LOW);
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: digitalWrite(leddeny, HIGH);
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: delay(5000);
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: uint8_t getFingerprintID() {
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: uint8_t p = finger.getImage();
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: switch (p) {
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: 'case FINGERPRINT_OK: // Sensor takes a photo when a finger is'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: // placed on the module window
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: Serial.println("Image taken");
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: break;
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: 'case FINGERPRINT_NOFINGER:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: Serial.println("No finger detected");
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: return p;
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: 'case FINGERPRINT_PACKETRECIEVEERR:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: Serial.println("Communication error");
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: return p;
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: 'case FINGERPRINT_IMAGEFAIL:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: Serial.println("Imaging error");
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: return p;
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: 'default:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: Serial.println("Unknown error");
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: return p;
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: p = finger.image2Tz(); // OK success! We have a fingerprint and
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: p = finger.image2Tz(); // 成功！我们获得了指纹，且
- en: // now check that it can be read
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: // 现在检查是否能读取
- en: switch (p) {
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: switch (p) {
- en: 'case FINGERPRINT_OK:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 'case FINGERPRINT_OK:'
- en: Serial.println("Image converted");
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("图像转换完成");
- en: break;
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: break;
- en: 'case FINGERPRINT_IMAGEMESS:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 'case FINGERPRINT_IMAGEMESS:'
- en: Serial.println("Image too messy");
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("图像太混乱");
- en: return p;
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: return p;
- en: 'case FINGERPRINT_PACKETRECIEVEERR:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 'case FINGERPRINT_PACKETRECIEVEERR:'
- en: Serial.println("Communication error");
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("通信错误");
- en: return p;
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: return p;
- en: 'case FINGERPRINT_FEATUREFAIL:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 'case FINGERPRINT_FEATUREFAIL:'
- en: Serial.println("Could not find fingerprint features");
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("无法找到指纹特征");
- en: return p;
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: return p;
- en: 'case FINGERPRINT_INVALIDIMAGE:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 'case FINGERPRINT_INVALIDIMAGE:'
- en: Serial.println("Could not find fingerprint features");
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("无法找到指纹特征");
- en: return p;
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: return p;
- en: 'default:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '默认:'
- en: Serial.println("Unknown error");
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("未知错误");
- en: return p;
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: return p;
- en: '}'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: p = finger.fingerFastSearch(); // OK converted! It's valid, so
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: p = finger.fingerFastSearch(); // 成功转换！它有效，所以
- en: // check it against module memory
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: // 与模块内存进行比对
- en: if (p == FINGERPRINT_OK) {
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: if (p == FINGERPRINT_OK) {
- en: Serial.println("Found a print match!");
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("找到了指纹匹配！");
- en: '} else if (p == FINGERPRINT_PACKETRECIEVEERR) {'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (p == FINGERPRINT_PACKETRECIEVEERR) {'
- en: Serial.println("Communication error");
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("通信错误");
- en: return p;
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: return p;
- en: '} else if (p == FINGERPRINT_NOTFOUND) {'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '} else if (p == FINGERPRINT_NOTFOUND) {'
- en: Serial.println("Did not find a match"); // No match found,
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("未找到匹配"); // 未找到匹配，
- en: // back to the start
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: // 返回起始位置
- en: return p;
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: return p;
- en: '} else {'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: Serial.println("Unknown error");
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("未知错误");
- en: return p;
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: return p;
- en: '}'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '// We found a match! So the following will run:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: // 我们找到匹配了！接下来将执行：
- en: 'Serial.print("Found ID #"); Serial.print(finger.fingerID);'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 'Serial.print("找到ID #"); Serial.print(finger.fingerID);'
- en: Serial.print(" with confidence of "); Serial.println(finger.confidence);
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.print(" 匹配置信度为 "); Serial.println(finger.confidence);
- en: return finger.fingerID;
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: return finger.fingerID;
- en: '}'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '// Returns -1 if failed, otherwise returns ID #'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '// 如果失败，返回 -1，否则返回 ID #'
- en: int getFingerprintIDez() {
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: int getFingerprintIDez() {
- en: int p = finger.getImage();
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: int p = finger.getImage();
- en: if (p != FINGERPRINT_OK) return -1;
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: if (p != FINGERPRINT_OK) return -1;
- en: p = finger.image2Tz();
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: p = finger.image2Tz();
- en: if (p != FINGERPRINT_OK) return -2;
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: if (p != FINGERPRINT_OK) return -2;
- en: p = finger.fingerFastSearch();
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: p = finger.fingerFastSearch();
- en: if (p != FINGERPRINT_OK) ; {
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: if (p != FINGERPRINT_OK) ; {
- en: Serial.println("No match found");
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.println("未找到匹配");
- en: return -3;
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: return -3;
- en: '}'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: // Found a match!
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: // 找到匹配！
- en: 'Serial.print("Found ID #"); Serial.print(finger.fingerID);'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 'Serial.print("找到ID #"); Serial.print(finger.fingerID);'
- en: Serial.print(" with confidence of "); Serial.println(finger.confidence);
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: Serial.print(" 匹配置信度为 "); Serial.println(finger.confidence);
- en: return finger.fingerID;
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: return finger.fingerID;
- en: '}'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '**TROUBLESHOOTING**'
  id: totrans-312
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**故障排除**'
- en: '**Q.** *The code compiles, but the fingerprint sensor does not light up or
    function.*'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '**Q.** *代码能编译，但指纹传感器没有亮起或无法工作。*'
- en: • Make sure that your wiring matches the tables on [page 181](ch21.xhtml#page_181)
    and [page 182](ch21.xhtml#page_182). This code will work only with the fingerprint
    sensor I’ve used in this project.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: • 确保你的接线与[第181页](ch21.xhtml#page_181)和[第182页](ch21.xhtml#page_182)中的表格一致。此代码仅适用于我在本项目中使用的指纹传感器。
- en: '• If your sensor has six wires instead of the expected four and the wire colors
    don’t match as described, it is the first four pins you need: GND, TX, RX, and
    +5V. The other two connections are not used in this project, so you can remove
    these wires.'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: • 如果你的传感器有六根线，而不是预期的四根，而且线的颜色与描述不符，实际上你需要的是前四根引脚：GND、TX、RX 和 +5V。其他两根连接线在本项目中不会使用，所以可以移除这些线。
- en: • If your module still does not light up, check the data sheet for the actual
    pin configuration and reconnect the wires according to that.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: • 如果你的模块仍然无法亮起，请查看数据手册中的实际引脚配置，并按照该配置重新连接线。
- en: • Remember you need to set up the module first and test it as described in “[Preparing
    the Fingerprint Sensor](ch21.xhtml#ch00lev1sec87)” on [page 176](ch21.xhtml#page_176).
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: • 请记得首先设置模块并按照[“准备指纹传感器”](ch21.xhtml#ch00lev1sec87)中描述的步骤进行测试，见[第176页](ch21.xhtml#page_176)。
- en: '**Q.** *The LEDs do not light up as expected.*'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '**Q.** *LED灯没有按预期亮起。*'
- en: • Ensure the LEDs are firmly inserted into the breadboard and the resistors
    line up with the connections to the Arduino.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: • 确保LED灯牢固插入面包板，并且电阻与Arduino连接端口对齐。
- en: • Remember to connect power to the breadboard rails.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: • 请记得将电源连接到面包板的电源轨道。
- en: '**Q.** *The servomotor does not move as expected.*'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '**Q.** *伺服电机没有按预期移动。*'
- en: • Double-check that the wiring matches the servo connections shown in [Figure
    21-9](ch21.xhtml#ch21fig9).
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: • 仔细检查接线是否与[图21-9](ch21.xhtml#ch21fig9)中的伺服连接一致。
- en: • The module, servo, and LEDs combined draw a fair amount of power from your
    battery pack, and while the Arduino can still function at a lower voltage, the
    servomotor cannot. Change to fresh batteries.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: • 该模块、伺服电机和LED灯会消耗相当大的电量，虽然Arduino可以在较低电压下继续工作，但伺服电机则无法正常运作。请更换新电池。
