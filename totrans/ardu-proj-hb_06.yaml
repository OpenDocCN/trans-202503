- en: '**PART 5**'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**第 5 部分**'
- en: '![image](../images/common-01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common-01.jpg)'
- en: '**NUMERIC COUNTERS**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**数字计数器**'
- en: 'PROJECT 16: ELECTRONIC DIE'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目 16：电子骰子
- en: '**BOARD GAMES ARE PERILOUS ENOUGH WITHOUT ARGUMENTS OVER NUMBER READINGS FROM
    FALLEN OR LOST DICE. THE PERFECT SOLUTION: AN ELECTRONIC DIE.**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**桌面游戏已经够危险了，别再争论掉落或丢失的骰子的数字了。完美的解决方案：电子骰子。**'
- en: '![image](../images/f0134-01.jpg)![image](../images/f0135-01.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0134-01.jpg)![image](../images/f0135-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需部件**'
- en: • Arduino board
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: • Arduino 板
- en: • Breadboard
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: • 面包板
- en: • Jumper wires
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: • 跳线
- en: • 8 220-ohm resistors
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: • 8 个 220 欧姆电阻
- en: • Seven-segment LED display
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: • 七段 LED 显示器
- en: • 74HC595 shift register
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: • 74HC595 移位寄存器
- en: • Momentary tactile four-pin pushbutton
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: • 瞬时触觉四脚按钮
- en: '**HOW IT WORKS**'
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: In this project we’ll create a die using a seven-segment LED display. When the
    pushbutton is pressed, a pulse is sent to the Arduino, and the LED “shakes” and
    displays a random digit between 1 and 6.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将使用七段 LED 显示器创建一个骰子。当按钮被按下时，会向 Arduino 发送一个脉冲，LED 会“摇动”并显示一个 1 到 6
    之间的随机数字。
- en: This project uses a 74HC595 *shift register*, a small integrated circuit (IC)
    and sequential logic counter that allows the Arduino to make more connections
    than it usually can with the pins it has, by “shifting” and storing data. The
    shift register has 16 pins; at one end you’ll find a dot or semicircle, which
    marks pin 1 on the left. The pins are then numbered counterclockwise from here.
    [Figure 16-1](ch16.xhtml#ch16fig1) shows the pinout, and [Table 16-1](ch16.xhtml#ch16tab1)
    describes the function of each pin.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目使用 74HC595 *移位寄存器*，这是一种小型集成电路（IC）和顺序逻辑计数器，允许 Arduino 通过“移位”和存储数据来比通常的引脚更多地进行连接。移位寄存器有
    16 个引脚；在一端，您会看到一个点或半圆标记，表示引脚 1 在左侧。然后，按逆时针方向对引脚编号。[图 16-1](ch16.xhtml#ch16fig1)
    显示了引脚排列，[表 16-1](ch16.xhtml#ch16tab1) 描述了每个引脚的功能。
- en: '**FIGURE 16-1:**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 16-1：**'
- en: Pinout of the 74HC595 shift register
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 74HC595 移位寄存器的引脚排列
- en: '![image](../images/f16-01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f16-01.jpg)'
- en: '**TABLE 16-1:**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 16-1：**'
- en: 74HC595 shift register pins
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 74HC595 移位寄存器引脚
- en: '| **SHIFT REGISTER PINS** | **CONNECTIONS** | **PIN FUNCTION** |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| **移位寄存器引脚** | **连接** | **引脚功能** |'
- en: '| --- | --- | --- |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Pins 1–7, 15 | Q0–Q7 | Output pins |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 1–7，15 | Q0–Q7 | 输出引脚 |'
- en: '| Pin 8 | GND | Ground, VSS |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 8 | GND | 地线，VSS |'
- en: '| Pin 9 | Q7 | Serial out |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 9 | Q7 | 串行输出 |'
- en: '| Pin 10 | MR | Master Reclear, active low |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 10 | MR | 主复位，低有效 |'
- en: '| Pin 11 | SH_CP | Shift register clock pin (CLOCK pin) |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 11 | SH_CP | 移位寄存器时钟引脚（时钟引脚） |'
- en: '| Pin 12 | ST_CP | Storage register clock pin (LATCH pin) |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 12 | ST_CP | 存储寄存器时钟引脚（锁存引脚） |'
- en: '| Pin 13 | OE | Output Enable, active low |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 13 | OE | 输出使能，低有效 |'
- en: '| Pin 14 | DS | Serial data input (DATA pin) |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 14 | DS | 串行数据输入（数据引脚） |'
- en: '| Pin 16 | VCC | Positive power |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 16 | VCC | 正电源 |'
- en: The wire attached to Arduino pin 2 is connected to our pushbutton and, when
    pressed, will create a pulse. To use the die, push the button to make the digit
    on the die shake and display a random digit.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到 Arduino 引脚 2 的线与我们的按钮相连，按下时会产生一个脉冲。为了使用骰子，按下按钮使骰子上的数字摇动并显示一个随机数字。
- en: '**THE BUILD**'
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建过程**'
- en: Insert the seven-segment LED into your breadboard, making sure it straddles
    the center break; otherwise, the pins opposite each other will connect and short-circuit.
    Connect pin 3 to the GND rail, and connect 220-ohm resistors to the remaining
    pins except pin 8, which is not used. The resistors are needed to prevent the
    segment LEDs from burning out. See [Figure 16-2](ch16.xhtml#ch16fig2) for this
    setup.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将七段 LED 插入面包板，确保它跨越中心断开区域；否则，相对的引脚将连接并短路。将引脚 3 连接到 GND 电源轨，并将 220 欧姆电阻连接到其余引脚，除了引脚
    8，它未使用。电阻是必要的，以防止段式 LED 被烧毁。有关此设置，请参见 [图 16-2](ch16.xhtml#ch16fig2)。
- en: '**FIGURE 16-2:**'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 16-2：**'
- en: Connecting the seven-segment LED
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 连接七段 LED
- en: '![image](../images/f16-02.jpg)'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f16-02.jpg)'
- en: Insert the 74HC595 shift register into the breadboard with the semicircle marker
    of the IC on the left side. The bottom left-hand pin should be pin 1\. Your IC
    needs to straddle the center break, as shown in [Figure 16-3](ch16.xhtml#ch16fig3).
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 74HC595 移位寄存器插入面包板时，IC 的半圆标记应在左侧。左下角的引脚应该是引脚 1。您的 IC 需要跨越中间的断开区域，如 [图 16-3](ch16.xhtml#ch16fig3)
    所示。
- en: '**FIGURE 16-3:**'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 16-3：**'
- en: The 74HC595 shift register should straddle the breadboard center break.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 74HC595 移位寄存器应跨越面包板的中心断开区域。
- en: '![image](../images/f16-03.jpg)'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f16-03.jpg)'
- en: Carefully make the connections shown in the following table between the seven-segment
    LED display and the 74HC595 shift register.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 小心连接七段LED显示器和74HC595移位寄存器之间的连接，如下表所示。
- en: '| **SEVEN-SEGMENT LED DISPLAY** | **SHIFT REGISTER** | **ARDUINO** |'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **七段数码管显示** | **移位寄存器** | **Arduino** |'
- en: '| --- | --- | --- |'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Pin 1 (E)[*](ch16.xhtml#fn01) | Pin 4 |  |'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 1 (E)[*](ch16.xhtml#fn01) | 引脚 4 |  |'
- en: '| Pin 2 (D)[*](ch16.xhtml#fn01) | Pin 3 |  |'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 2 (D)[*](ch16.xhtml#fn01) | 引脚 3 |  |'
- en: '| Pin 3 |  | GND |'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 3 |  | GND |'
- en: '| Pin 4 (C)[*](ch16.xhtml#fn01) | Pin 2 |  |'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 4 (C)[*](ch16.xhtml#fn01) | 引脚 2 |  |'
- en: '| Pin 5 (DP)[*](ch16.xhtml#fn01) | Pin 7 |  |'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 5 (DP)[*](ch16.xhtml#fn01) | 引脚 7 |  |'
- en: '| Pin 6 (B)[*](ch16.xhtml#fn01) | Pin 1 |  |'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 6 (B)[*](ch16.xhtml#fn01) | 引脚 1 |  |'
- en: '| Pin 7 (A)[*](ch16.xhtml#fn01) | Pin 15 |  |'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 7 (A)[*](ch16.xhtml#fn01) | 引脚 15 |  |'
- en: '| Pin 8 |  | Not used |'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 8 |  | 不使用 |'
- en: '| Pin 9 (F)[*](ch16.xhtml#fn01) | Pin 5 |  |'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 9 (F)[*](ch16.xhtml#fn01) | 引脚 5 |  |'
- en: '| Pin 10 (G)[*](ch16.xhtml#fn01) | Pin 6 |  |'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 10 (G)[*](ch16.xhtml#fn01) | 引脚 6 |  |'
- en: '[*](ch16.xhtml#fn_01) These pins require a 220-ohm resistor between the seven-segment
    LED display and the 74HC595 shift register.'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[*](ch16.xhtml#fn_01) 这些引脚需要一个220欧姆的电阻，在七段LED显示器和74HC595移位寄存器之间连接。'
- en: Now connect the remaining shift register pins to the Arduino as shown in the
    following table.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将剩余的移位寄存器引脚按下表所示连接到Arduino。
- en: '| **SHIFT REGISTER** | **ARDUINO** |'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **移位寄存器** | **Arduino** |'
- en: '| --- | --- |'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Pin 9 | Not used |'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 9 | 不使用 |'
- en: '| Pin 10 | +5V |'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 10 | +5V |'
- en: '| Pin 11 | Pin 12 |'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 11 | 引脚 12 |'
- en: '| Pin 12 | Pin 8 |'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 12 | 引脚 8 |'
- en: '| Pin 13 | GND |'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 13 | GND |'
- en: '| Pin 14 | Pin 11 |'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 14 | 引脚 11 |'
- en: '| Pin 16 | +5V |'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引脚 16 | +5V |'
- en: '| Pulse | Pin 2 |'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 脉冲 | 引脚 2 |'
- en: Insert the pushbutton into the breadboard with the pins straddling the center
    break, as shown in [Figure 16-4](ch16.xhtml#ch16fig4). Connect one side to pin
    2 on the Arduino and the other side to GND.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将按钮插入面包板，使引脚跨越中间断点，如[图 16-4](ch16.xhtml#ch16fig4)所示。一侧连接到Arduino的引脚2，另一侧连接到GND。
- en: '**FIGURE 16-4:**'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 16-4：**'
- en: The pushbutton should also straddle the breadboard center break.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按钮也应跨越面包板的中心断点。
- en: '![image](../images/f16-04.jpg)'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f16-04.jpg)'
- en: Confirm that your setup matches the circuit diagram in [Figure 16-5](ch16.xhtml#ch16fig5),
    and upload the code in “[The Sketch](ch16.xhtml#ch16lev1sec03)” on [page 140](ch16.xhtml#page_140).
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认你的设置与[图 16-5](ch16.xhtml#ch16fig5)中的电路图一致，并上传代码“[草图](ch16.xhtml#ch16lev1sec03)”到[第140页](ch16.xhtml#page_140)。
- en: '**FIGURE 16-5:**'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 16-5：**'
- en: The circuit diagram for the electronic die
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 电子骰子的电路图
- en: '![image](../images/f16-05.jpg)'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f16-05.jpg)'
- en: '**THE SKETCH**'
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**草图**'
- en: The sketch first sets the pins to control the 74HC595 chip that drives the seven-segment
    LED. When the seven-segment LED display is powered up, the dot is lit. When you
    press the pushbutton, the LEDs light in a short, rotating animation to signify
    that the die is shaking. After a moment a random number between 1 and 6 will be
    displayed. Press the button again to generate your next roll of the die.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 草图首先设置引脚以控制驱动七段LED的74HC595芯片。当七段LED显示器通电时，点亮一个小点。当按下按钮时，LED会以短暂的旋转动画点亮，表示骰子正在摇动。片刻后，1到6之间的随机数将显示出来。再次按下按钮即可生成下一次骰子的结果。
- en: '[PRE0]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'PROJECT 17: ROCKET LAUNCHER'
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目 17：火箭发射器
- en: '**IN THIS PROJECT WE’LL CREATE A PROGRAMMABLE COUNTDOWN TIMER THAT WE’LL USE
    TO LAUNCH A ROCKET BY IGNITING A FUSE WHEN THE COUNTDOWN REACHES 0.**'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**在这个项目中，我们将创建一个可编程倒计时计时器，当倒计时达到0时，点燃引线发射火箭。**'
- en: '![image](../images/f0143-01.jpg)![image](../images/f0144-01.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0143-01.jpg)![image](../images/f0144-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需材料**'
- en: • Arduino board
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: • Arduino板
- en: • Breadboard
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: • 面包板
- en: • Jumper wires
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: • 跳线
- en: • Four-digit, seven-segment serial display
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: • 四位数七段串行显示器
- en: • Piezo buzzer
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: • 蜂鸣器
- en: • 2 momentary tactile four-pin pushbutton
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: • 2 个短按式触觉四脚按钮
- en: • 50k-ohm potentiometer
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: • 50k欧姆电位器
- en: • 3 LEDs (red, green, yellow)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: • 3 个LED（红色、绿色、黄色）
- en: • 3 220-ohm resistors
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: • 3 个220欧姆电阻
- en: '**LIBRARIES REQUIRED**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需库**'
- en: • SoftwareSerial
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: • SoftwareSerial
- en: We’ll use a four-digit, seven-segment serial display that has a built-in integrated
    circuit to control the LEDs and can be connected to the Arduino with only three
    wires. When choosing your display, make sure it has an RX input so you’ll be able
    to control it with only one wire.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个四位数的七段串行显示器，它内置集成电路用于控制LED，只需要三根线即可连接到Arduino。在选择显示器时，请确保它具有RX输入，这样你只需要一根线就能控制它。
- en: '**HOW IT WORKS**'
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**工作原理**'
- en: 'You could use a timer like this to set off anything that requires power, like
    a servomotor, LED, or alarm. You’ll use a potentiometer to select the duration
    of your countdown (anywhere from 5 to 60 seconds). The LED screen will display
    the digits so you can see what you are setting the countdown to. We’ll include
    two pushbuttons: an Arm button and a Launch button. Once you’ve chosen the duration
    of your countdown, press the Arm button to ready the timer. The red LED light
    shows that it’s armed. (The Arm button is a safety feature to prevent you from
    accidentally setting off the launcher.) Once you’ve armed the rocket, press the
    Launch button to start the countdown. The green LED light signifies that it’s
    ready, and the countdown begins.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用像这样的定时器来触发任何需要电力的设备，比如伺服电机、LED 或报警器。你将使用电位计来选择倒计时的持续时间（从 5 秒到 60 秒不等）。LED
    屏幕将显示数字，让你可以看到倒计时设置的时间。我们将包括两个按钮：Arm 按钮和 Launch 按钮。一旦你选择了倒计时的时间，按下 Arm 按钮来准备定时器。红色
    LED 灯显示定时器已准备好。（Arm 按钮是一个安全功能，防止你不小心启动发射器。）当火箭准备好后，按下 Launch 按钮开始倒计时。绿色 LED 灯表示它已准备好，倒计时开始。
- en: As the timer counts down, the piezo buzzer beeps every second. When the counter
    reaches five seconds, the timer beeps increasingly quickly until launch. When
    the timer reaches 0, power is sent through pin 7 to whatever output you have there—in
    this case, it lights the yellow LED. You could connect this timer to a buzzer,
    a servomotor to unlock a door, or even a fuse to ignite a rocket. I’ll show you
    how to make your own simple ignition for a fuse later in this project.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当定时器倒计时时，蜂鸣器每秒发出一声。倒计时到五秒时，蜂鸣器的鸣叫逐渐加速，直到发射。当定时器到达 0 时，电源通过引脚 7 传输到你连接的任何输出设备——在这个例子中，它点亮了黄色
    LED。你可以将这个定时器连接到蜂鸣器、伺服电机来解锁门，甚至是连接到火箭引信。稍后我将向你展示如何制作一个简单的引信点燃器。
- en: '**THE BUILD**'
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建过程**'
- en: Connect the seven-segment serial display RX pin to Arduino pin 3, connect VCC
    to +5V, and connect GND to Arduino GND via the breadboard, as shown in [Figure
    17-1](ch17.xhtml#ch17fig1). You might need to strip back some of the wire to make
    the connection.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将七段串行显示器的 RX 引脚连接到 Arduino 引脚 3，将 VCC 连接到 +5V，并通过面包板将 GND 连接到 Arduino 的 GND，如[图
    17-1](ch17.xhtml#ch17fig1)所示。你可能需要剥掉一些电线以便连接。
- en: '| **SEVEN-SEGMENT SERIAL DISPLAY** | **ARDUINO** |'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **七段串行显示器** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| RX | Pin 3 |'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| RX | 引脚 3 |'
- en: '| VCC | +5V |'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| VCC | +5V |'
- en: '| GND | GND |'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | GND |'
- en: '**FIGURE 17-1:**'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 17-1：**'
- en: Connecting the seven-segment display to the Arduino
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将七段显示器连接到 Arduino
- en: '![image](../images/f17-01.jpg)'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f17-01.jpg)'
- en: Insert the potentiometer into the breadboard and connect the left pin to +5V,
    the center pin to Arduino pin A0, and the right pin to GND, as shown in [Figure
    17-2](ch17.xhtml#ch17fig2).
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将电位计插入面包板，将左侧针脚连接到 +5V，中间针脚连接到 Arduino 引脚 A0，右侧针脚连接到 GND，如[图 17-2](ch17.xhtml#ch17fig2)所示。
- en: '| **POTENTIOMETER** | **ARDUINO** |'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **电位计** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Left pin | +5V |'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 左侧针脚 | +5V |'
- en: '| Center pin | A0 |'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 中间针脚 | A0 |'
- en: '| Right pin | GND |'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 右针脚 | GND |'
- en: '**FIGURE 17-2:**'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 17-2：**'
- en: Placing the potentiometer into the breadboard
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将电位计放入面包板
- en: '![image](../images/f17-02.jpg)'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f17-02.jpg)'
- en: Connect the red wire of the piezo buzzer to Arduino pin 4 and the black wire
    to GND, as shown in [Figure 17-3](ch17.xhtml#ch17fig3).
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将蜂鸣器的红线连接到 Arduino 引脚 4，将黑线连接到 GND，如[图 17-3](ch17.xhtml#ch17fig3)所示。
- en: '| **PIEZO** | **ARDUINO** |'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **蜂鸣器** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Red wire | Pin 4 |'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 红线 | 引脚 4 |'
- en: '| Black wire | GND |'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 黑线 | GND |'
- en: '**FIGURE 17-3:**'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 17-3：**'
- en: Connecting the piezo buzzer
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 连接蜂鸣器
- en: '![image](../images/f17-03.jpg)'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f17-03.jpg)'
- en: Insert the two pushbuttons into your breadboard, with pins A and B on one side
    of the center break and pins D and C on the other, following the configuration
    in [Figure 17-4](ch17.xhtml#ch17fig4).
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将两个按钮插入面包板，其中 A 和 B 引脚在中心断开的同一侧，C 和 D 引脚在另一侧，按照[图 17-4](ch17.xhtml#ch17fig4)中的配置。
- en: '**FIGURE 17-4:**'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图 17-4：**'
- en: The pin connections of the pushbutton
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按钮的针脚连接
- en: '![image](../images/f17-04.jpg)'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f17-04.jpg)'
- en: Next, we’ll connect the pushbuttons, as shown in [Figure 17-5](ch17.xhtml#ch17fig5).
    To create the Arm button, connect pin C of the first pushbutton to GND and pin
    D to Arduino pin 5\. To create the Launch button, connect pin C of the other pushbutton
    to GND and pin D to Arduino pin 6.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将连接按钮，如[图 17-5](ch17.xhtml#ch17fig5)所示。要创建 Arm 按钮，将第一个按钮的 C 引脚连接到 GND，D
    引脚连接到 Arduino 引脚 5。要创建 Launch 按钮，将另一个按钮的 C 引脚连接到 GND，D 引脚连接到 Arduino 引脚 6。
- en: '| **PUSHBUTTONS** | **ARDUINO** |'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| **按钮** | **ARDUINO** |'
- en: '| --- | --- |'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Arm pin C | GND |'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Arm pin D | Pin 5 |'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Launch pin C | GND |'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Launch pin D | Pin 6 |'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '**FIGURE 17-5:**'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Connecting the pushbuttons and LEDs
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![image](../images/f17-05.jpg)'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Insert the red LED into the breadboard with the shorter, negative leg connected
    to pin B of the Arm button. Connect the other leg to a 220-ohm resistor, and connect
    the other side of the resistor to +5V. Then insert the green LED with the negative
    leg connected to pin B of the Launch button, and the positive leg connected to
    +5V via a 220-ohm resistor.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| **RESISTORS** | **ARDUINO** |'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Negative legs | GND |'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Positive legs | +5V via 220-ohm resistor |'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: Connect the igniter. We’re using a yellow LED as our igniter indicator for now.
    Insert it into the breadboard with the negative leg connected to GND and the positive
    leg connected to Arduino pin 7 via a 220-ohm resistor. (See “[Create a Working
    Fuse](ch17.xhtml#ch17lev1sec03)” on [page 149](ch17.xhtml#page_149) to learn how
    to make your own fuse igniter.)
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| **IGNITER** | **ARDUINO** |'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Negative leg | GND |'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Positive leg | Pin 7 via 220-ohm resistor |'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: When the countdown reaches 0, pin 7 is set to `HIGH` and triggers the igniter.
    Instead of actually igniting a fuse, we light the yellow LED to represent the
    ignition.
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Confirm that your setup matches the circuit diagram in [Figure 17-6](ch17.xhtml#ch17fig6),
    and upload the code in “[The Sketch](ch17.xhtml#ch17lev1sec04)” on [page 151](ch17.xhtml#page_151).
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**FIGURE 17-6:**'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The circuit diagram for the rocket launcher
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![image](../images/f17-06.jpg)'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**CREATE A WORKING FUSE**'
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Instead of using an LED to indicate ignition, you can create a working fuse
    using a simple Christmas tree light. Be sure to wear eye protection when creating
    your fuse. These instructions are for entertainment purposes and should be carried
    out only by an adult.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '**WARNING**'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '*There may be restrictions to launching a hobby rocket or firework in your
    country or state, so please check beforehand. It is your responsibility to keep
    project use within the law.*'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: Using a hobby drill, apply light pressure to the top of the glass casing on
    a Christmas light to cut it off (see [Figure 17-7](ch17.xhtml#ch17fig7)).
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**FIGURE 17-7:**'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Cutting the tip with a hobby drill
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![image](../images/f17-07.jpg)'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Cut near the tip of the glass casing and the top should pop off easily ([Figure
    17-8](ch17.xhtml#ch17fig8)).
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**FIGURE 17-8:**'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Popping off the tip
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![image](../images/f17-08.jpg)'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Now cut off the head of a wooden match (make sure you don’t ignite it!) and
    gently insert the match head into the open bulb, taking care not to damage the
    filament ([Figure 17-9](ch17.xhtml#ch17fig9)).
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**FIGURE 17-9:**'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Inserting a match head into the bottom half of the bulb
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![image](../images/f17-09.jpg)'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Finally, connect the bulb wires to your ignition wires. When power is sent to
    the bulb, the filament will heat up and ignite the match head ([Figure 17-10](ch17.xhtml#ch17fig10)),
    creating enough energy to ignite a fuse.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**FIGURE 17-10:**'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**图17-10：**'
- en: After the fuse has been lit
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点燃引信后
- en: '![image](../images/f17-10.jpg)'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![image](../images/f17-10.jpg)'
- en: '**THE SKETCH**'
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**程序代码**'
- en: The sketch first defines each component and its connection to the Arduino. The
    SoftwareSerial library controls the four-digit, seven-segment serial LED display,
    while the analog input from the potentiometer changes the time displayed from
    5 to 60 seconds. When pressed, the Arm button acts as a digital switch and safety
    feature to allow the Launch button to be pressed. If the Arm button is pushed
    during countdown, the countdown aborts and the display resets.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 程序首先定义了每个组件及其与Arduino的连接。SoftwareSerial库控制四位七段串行LED显示器，而来自电位器的模拟输入则将显示的时间从5秒到60秒进行调整。按下Arm按钮时，它充当数字开关和安全功能，允许按下Launch按钮。如果在倒计时期间按下Arm按钮，倒计时会中止，显示器会重置。
- en: The `tone` commands in the sketch pulse the piezo buzzer in time to the countdown
    to create a beep. When the countdown reaches 0, the igniter pin (in this case,
    connected to an LED) is set to `HIGH` and turns on the LED.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 程序中的`tone`命令按倒计时的节奏脉冲驱动压电蜂鸣器发出“哔”声。当倒计时到达0时，引信针脚（在此情况下连接到LED）被设置为`HIGH`，并点亮LED。
- en: '[PRE1]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
