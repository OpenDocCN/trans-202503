- en: C
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Command Line
  prefs: []
  type: TYPE_NORMAL
- en: Unlike most vector editors—but like the majority of open source software—Inkscape
    has a powerful command line interface. With it, you can perform tasks such as
    exporting, document modifications, queries, and so on from scripts or from a command
    line prompt without using Inkscape's graphical user interface (GUI). In most cases,
    after Inkscape completes a task as specified in the command line parameters, it
    simply quits without showing the GUI at all. This makes it run faster and consume
    fewer resources, as no time or memory is wasted on creating and destroying the
    GUI.
  prefs: []
  type: TYPE_NORMAL
- en: In this appendix, I explain and provide examples of Inkscape’s most common command
    line parameters. I also introduce the language of actions, available via the `--actions`
    parameter, that allows you to write complex document-processing scenarios. Since
    the program’s command line interface has been thoroughly revised in recent versions,
    I also point out the most important changes to help you migrate old scripts that
    are likely to break with Inkscape 1.0.
  prefs: []
  type: TYPE_NORMAL
- en: C.1 Command Line Executable
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'On Windows, command line utilities and GUI applications are two different types
    of programs. A single executable cannot run both as a GUI application and as a
    command line application. That''s why Inkscape on Windows contains, in its bin
    folder, two executable files: inkscape.exe and inkscape.com.'
  prefs: []
  type: TYPE_NORMAL
- en: inkscape.exe is the GUI application to run when you need to work in Inkscape
    interactively. If you try to use it for command line tasks, you will see no output
    in the console (command prompt window), which makes the query parameters ([C.5](b03.xhtml#sectionC.5))
    unusable. Also, inkscape.exe will return asynchronously (immediately), possibly
    before a complex action, such as an export, has finished.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: inkscape.com is best used for scripting and command line tasks. It displays
    proper output in the console and returns synchronously. However, if you run it
    for the GUI, you will always get a parasite command line window in the background
    that cannot be closed without closing the GUI window.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On Linux or macOS, there's a single executable called simply inkscape that is
    used both for the GUI and the command line. In the examples in this appendix,
    I use `inkscape` as the name of the executable. Also, I use forward slashes (`/`)
    in filename paths, which work on all platforms including Windows.
  prefs: []
  type: TYPE_NORMAL
- en: C.2 Getting Help
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To get a complete list of the command line parameters known to your version
    of Inkscape, run it with the `--help` parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The parameters, or *options*, have names starting with `--`, such as `--help`.
    Some of them can have values separated by `=`, such as `--export-fileid=file.pdf`.
    Use spaces to separate command line parameters. A more detailed reference is available
    from Inkscape's UI in Help ▶ Command Line Options (this opens a web browser and
    fetches the page from the internet) or by typing `man inkscape` on the command
    line (Linux only).
  prefs: []
  type: TYPE_NORMAL
- en: A very useful parameter (especially if you want to report a bug or request a
    feature from Inkscape developers) is `--version`, which prints the version number
    as well as revision and build date of your copy of Inkscape. You can also query
    Inkscape with `--system-data-directory` or `--user-data-directory`; these parameters
    print the values labeled, respectively, Inkscape data and User config on the System
    page of the Preferences dialog.
  prefs: []
  type: TYPE_NORMAL
- en: C.3 Opening Documents
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The simplest use of the command line is to list, without any parameter names,
    the filepaths of the documents you want to open in the GUI. For example, entering
    the following will start Inkscape’s GUI and load two SVG documents and one PDF
    document (automatically imported) into three Inkscape windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'You can specify some import options for opening non-SVG files. The most common
    are `--pdf-page`, which selects the page to import from a PDF document, and `--pdf-poppler`,
    which switches to the Poppler import method ([B.3.1](b02.xhtml#sectionB.3.1)).
    For example, here''s how to open page 5 from a book chapter in PDF:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If you have a script or program that generates an SVG file and prints it to
    the console, use the `|` character to *pipe* that document to Inkscape with the
    `--pipe` parameter, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: C.4 Export
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One of the most common Inkscape tasks is exporting SVG documents into other
    formats. Via the command line, Inkscape can export bitmaps to PNG ([18.6](c18.xhtml#section18.6))
    and vectors to PS (PostScript), EPS, PDF, EMF, WMF, and XAML ([Appendix B](b02.xhtml#chB)).
    Inkscape determines the format to use based on the filename extension you provide
    on the command line; if you want to specify the format explicitly, add `--export-type`
    with the required type (valid values are `svg`, `png`, `ps`, `eps`, `pdf`, `emf`,
    `wmf`, `xaml`). For example, exporting to PDF is as simple as entering the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This is equivalent to
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: This will load file.svg and create the PDF file; no GUI is loaded, and after
    completing the export, Inkscape quits. If you want to force overwriting the export
    file, add `--export-overwrite`.
  prefs: []
  type: TYPE_NORMAL
- en: You can specify multiple input files and multiple export types (separated by
    commas) in `--export-type`. For example, the following
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'creates four files: file.png, file.pdf, file2.png, file2.pdf.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also export a document to SVG—for example, you can use Inkscape to
    convert a PDF file to SVG or to extract an element from one SVG file and save
    it as an SVG of its own. If you add `--export-plain-svg`, the document will be
    saved as plain SVG instead of Inkscape SVG ([1.4](c01.xhtml#section1.4)). If you
    add `--vacuum-defs`, the resulting SVG will not have any unused definitions in
    `defs` ([A.4](b01.xhtml#sectionA.4)). For example, this will convert one page
    from a PDF file into plain SVG:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[1.1]'
  prefs: []
  type: TYPE_NORMAL
- en: 'In older versions, Inkscape had separate parameters for each exported format:
    `--export-png`, `--export-pdf`, `--export-ps`, `--export-eps`, and so on. They
    all took a value of the filename. Now, `--export-filename` has replaced these.
    The `--export-plain-svg` remains but is now a Boolean switch instead of a filename
    parameter.'
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the export formats it supports natively, Inkscape includes a
    number of output extensions ([19.4.2](c19.xhtml#section19.4.2)) for less common
    formats. You can use these extensions via the command line, too. The `--export-extension`
    parameter takes as its value the unique ID of the extension, which you can look
    up in its .inx file ([19.4.1](c19.xhtml#section19.4.1)). For example, Inkscape
    1.1 includes an extension for exporting to the HPGL format used by plotters. In
    the share\inkscape\extensions\hpgl_output.inx file, you can find its ID, which
    is `org.ekips.output.hpgl_output`. Now, running
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: converts file.svg into HPGL format, creating a file named file.hpgl.
  prefs: []
  type: TYPE_NORMAL
- en: C.4.1 Export Area
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By default, Inkscape exports the document''s page ([2.3](c02.xhtml#section2.3)),
    and objects falling outside the page are invisible in export. Add `--export-area-drawing`
    to make the export cover all visible objects of the document, regardless of its
    page size. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: The only exception is EPS, where the drawing is exported by default; with this
    format, use `--export-area-page` to export the page. Even then, due to the limitations
    of EPS, the export area will be clipped to the actual objects in the page if they
    do not reach to the page edges.
  prefs: []
  type: TYPE_NORMAL
- en: 'When exporting from SVG, you can export a single object out of a document,
    so that the exported file covers that object''s bounding box and nothing else.
    The object is specified by its `id` attribute ([A.9](b01.xhtml#sectionA.9)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: For PNG export, if other objects overlap with the exported object's bounding
    box and are visible, they will also show in the exported file. For SVG export,
    all other objects are still present in the file even when they are outside the
    exported page area. To suppress the other objects and make a rendering of only
    the chosen object, add `--export-id-only`. For PDF, PS, and EPS, this is the only
    possible mode—other objects are always dropped when you specify`--export-id`.
  prefs: []
  type: TYPE_NORMAL
- en: 'For PNG export, you can also provide the export area explicitly by specifying
    its two corner points. For example, the following exports the area that spans
    from point 0, 0 to point 200, 100 (in px units):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Also for PNG export, no matter which method you use for specifying the area,
    you can*snap* that area to the pixel grid—that is, round it outward to the nearest
    whole coordinates in`px` units—by adding `--export-area-snap`. This is useful
    when you export at the default 96 dpi and want your objects drawn to the pixel
    grid ([7.2](c07.xhtml#section7.2)) always to be crisp in the exported bitmap regardless
    of the area you are exporting.
  prefs: []
  type: TYPE_NORMAL
- en: C.4.2 Export Size and Resolution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For PNG export, you can specify the size of the exported bitmap or its resolution
    (by default 96 dpi). For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The first line exports file.svg at the resolution of 600 dpi, so that a document
    page 3 inches wide exports to a bitmap 1800 pixels wide. The other two examples
    explicitly set the pixel size of the export, and the resolution is calculated
    to match this requirement (overriding `--export-dpi` if it is also present).
  prefs: []
  type: TYPE_NORMAL
- en: If only `--export-width` or `--export-height` is present, Inkscape calculates
    the other dimension at the same resolution. However, with command line export,
    you can also get a PNG file where the vertical resolution is not equal to the
    horizontal resolution (something you can't do from the GUI,[18.6.1.2](c18.xhtml#section18.6.1.2)).
    For example, you can export a 1000 by 1000 pixel area into a distorted PNG file
    of 2000 by 500 pixels with`--export-width=2000 --export-height=500`.
  prefs: []
  type: TYPE_NORMAL
- en: The `--export-dpi` parameter also affects export to vector formats (PS, EPS,
    PDF) whenever Inkscape needs to rasterize some of the file’s features (such as
    filters and mesh gradients for PS and PDF, or transparency for PS).
  prefs: []
  type: TYPE_NORMAL
- en: C.4.3 Export Background (PNG Only)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Areas that have no objects in them appear to be transparent in all export formats.
    However, in PNG export (but not PDF, PS, or EPS), you can specify any background
    color or opacity to be applied during export. For example, if you want a solid
    opaque black background, enter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: The syntax for the background color is the same as in SVG; in particular, you
    can use the `#RRGGBB` format. The background opacity (defaulted to fully opaque)
    is given either as a floating-point number from 0.0 to 1.0 or as an integer from
    1 to 255; for example, `--export-background-opacity=0.5` is equivalent to `--export-background-opacity=128`.
  prefs: []
  type: TYPE_NORMAL
- en: C.4.4 Color Mode (PNG Only) [1.1]
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For PNG export, you can set the exported file''s color mode with the `--export-png-color-mode`
    option that takes one of the following values: `Gray_1`, `Gray_2`, `Gray_4`, `Gray_8`,
    `Gray_16`,`RGB_8`, `RGB_16`, `GrayAlpha_8`, `GrayAlpha_16`, `RGBA_8`, or `RGBA_16`
    ([18.6.1.5](c18.xhtml#section18.6.1.5)).'
  prefs: []
  type: TYPE_NORMAL
- en: C.4.5 Export Hints (PNG Only)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Every time you export a single selected object to PNG via the GUI ([18.6](c18.xhtml#section18.6)),
    the export filename and resolution are recorded into the export hint attributes
    added to the corresponding element. If you then save the document with those hints,
    you can use them for command line export to PNG as well. For example, if you write:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Inkscape exports only the object with the `text2035` ID to the same file with
    the same resolution it had when most recently exported from the GUI. Note that
    there's no`--export-filename` because the filename is taken from the export hint.
  prefs: []
  type: TYPE_NORMAL
- en: C.4.6 Vector Export Options
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For exporting to PDF, PS, and EPS, you can set these options:'
  prefs: []
  type: TYPE_NORMAL
- en: '`--export-dpi` ([C.4.2](b03.xhtml#sectionC.4.2)) sets the resolution for rasterized
    objects, such as filters and mesh gradients.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--export-ignore-filters` suppresses the filtered objects’ rasterization, which
    are exported without filters applied.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--export-ps-level` gives the level (version) of the PostScript format to use;
    it can be 2 or 3 (default).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--export-pdf-version` gives the version of PDF to use; it can be 1.4 or 1.5
    (default).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--export-text-to-path` converts all text objects to paths (this is also available
    for exporting to SVG).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For example, the following converts all text objects to paths on export:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: The resulting vector file neither needs nor embeds any fonts.
  prefs: []
  type: TYPE_NORMAL
- en: C.5 Querying
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Because SVG is a text-based format, it’s tempting to generate or edit SVG documents
    with simple scripts. In such a script, you may need to specify the bounding boxes
    of some SVG objects—for example, to check whether the text inserted into SVG from
    a database fits into the provided space, or to create a background rectangle or
    frame for a specific object. In general, however, calculating the bounding box
    of an object in SVG is extremely complex—you would need to reimplement a lot of
    Inkscape's code to take into account everything that may affect an object's bounding
    box. Even when you're writing an Inkscape extension ([Chapter 19](c19.xhtml#ch19)),
    the `inkex` Python library that comes with Inkscape can calculate bounding boxes
    for paths but not for texts.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fortunately, Inkscape itself comes to the rescue. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: This asks Inkscape to provide the width (in px units) of the object with the`id="text1256"`.
    Inkscape loads the document, finds that object, prints its width back to the console,
    and quits.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, you can use `--query-height`, `--query-x`, and `--query-y` parameters
    to find the dimensions and coordinates of an object's bounding box. The `--query-id`
    parameter can contain a comma-separated list of `id`s.
  prefs: []
  type: TYPE_NORMAL
- en: 'Such Inkscape calls are reasonably fast because they don''t load the GUI and
    don''t render the document. However, if you need multiple bounding box numbers
    for multiple objects, using these parameters may cause a delay. In that case,
    it is better use the `--query-all` parameter, which returns all bounding box numbers
    for all objects in a document:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Each line is a comma-separated list of the object ID, X, Y, width, and height.
    Parsing such a line in your script should be easy.
  prefs: []
  type: TYPE_NORMAL
- en: C.6 Actions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Inkscape's command line is not limited to GUI-less export, conversion, and querying
    tasks. You can script a number of regular editing tasks as well using the `--actions`
    parameter, which lets you list any number of actions for Inkscape to perform sequentially.
  prefs: []
  type: TYPE_NORMAL
- en: Each action more or less corresponds to a command that you choose from a menu
    when editing a document in the GUI. An action has a *name* and, optionally, one
    or more *arguments*. On the command line, use a colon (`:`) to separate the name
    and the arguments, a comma (`,`) to separate arguments of a single action, and
    a semicolon (`;`) to separate actions in the list. You can also include spaces
    in a string, but then the string must be enclosed in double quotation marks (`"`...`"`)
    and can’t contain additional quotation marks.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a complete list of actions your version of Inkscape supports, run Inkscape
    with `--action-list`. Here''s the top of that list, showing some actions that
    correspond to some command line parameters for export:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'C.6.1 Example: Changing CSS Property'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s look at a practical example. Imagine you want to open file.svg, select
    all text objects, paint them red (`#FF0000`), and save the result. Here''s how
    you do this via actions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Let’s break this string into parts at each semicolon and look at the individual
    actions:'
  prefs: []
  type: TYPE_NORMAL
- en: '`file-open` opens the file given in its argument—in this case, `file.svg`.
    You could also drop this action and simply provide `file.svg` on the command line
    after the `--actions` parameter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`select-by-element` selects all objects with the given element name—in this
    case, `text`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`object-set-property` sets a CSS property ([8.1](c08.xhtml#section8.1)) on
    selected objects. Two arguments provide the name of the property (`fill`) and
    the value (`#FF0000`). This has the effect of painting all texts red (unless they
    have `tspan`s with their own `fill` inside, which would override that).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`export-filename` prepares the export of the result by specifying the filename
    (and, from its extension, the SVG export format). There''s currently no `file-save`
    action, which may be for the better; it is safer to save (that is, export) the
    result of your changes into a different file instead of overwriting the original.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`export-do` (without arguments) performs the actual export.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: After this command finishes, you will have, in the current folder, the fileout.svg
    file that is identical to file.svg except all of its text objects now have a red
    fill color.
  prefs: []
  type: TYPE_NORMAL
- en: C.6.2 Shell Mode
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Inkscape''s shell mode is an easy way to explore the actions. If you run Inkscape
    with `--shell`, it enters an interactive mode where you can type actions with
    their arguments (as well as verbs) at Inkscape''s prompt and have these actions
    performed at once. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Sequences of commands that you tested and found working in the interactive shell
    mode can then be reused in a script.
  prefs: []
  type: TYPE_NORMAL
- en: When typing action names or filenames, press Tab to autocomplete. Inkscape's
    shell mode remembers the history of your commands across sessions.
  prefs: []
  type: TYPE_NORMAL
