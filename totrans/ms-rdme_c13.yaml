- en: '13'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Working with Managers
  prefs: []
  type: TYPE_NORMAL
- en: Building a working relationship with your manager will help you grow your career,
    reduce stress, and even ship reliable software. Working with your manager requires
    mutual understanding. You must understand what your manager needs so you can help
    them. Likewise, your manager must understand your needs so they can help you.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter will help you build an effective relationship with your manager.
    We’ll give you a short overview of the management profession: what your manager
    does and how they do it. We’ll then discuss common management processes. Engineers
    often encounter abbreviations like 1:1s, PPPs, and OKRs, as well as terms like
    performance reviews, without knowing what they are, why they exist, or how they
    work. We’ll give you a primer and show you how to get the most from them. We’ll
    finish with tips to “manage up” and with a section on handling bad managers. By
    the end, you’ll have a toolkit to build a productive relationship.'
  prefs: []
  type: TYPE_NORMAL
- en: What Managers Do
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Managers always seem to be in meetings, but it’s not obvious what they are actually
    *doing*. Engineering managers work on people, product, and process. Managers build
    teams, coach and grow engineers, and manage interpersonal dynamics. Engineering
    managers also plan and coordinate product development. They might also weigh in
    on technical aspects of product development—code reviews and architecture—but
    good engineering managers rarely write code. Finally, managers iterate on team
    processes to keep them effective. Managers “manage” all of this by working with
    higher-level executives or directors (“up”), with other managers (“sideways”),
    and with their team (“down”).
  prefs: []
  type: TYPE_NORMAL
- en: Managers manage up through relationships and communication with higher-level
    executives. Managers are the conduit between rank-and-file engineers and the executives
    making business decisions at the top. Upward management is crucial for getting
    resources (money and engineers) and making sure your team is recognized, appreciated,
    and heard.
  prefs: []
  type: TYPE_NORMAL
- en: 'Managers manage sideways by working with other managers. A manager has two
    teams: the collection of individuals they manage and their peer managers. This
    pool of peer managers works together to keep teams aligned on shared goals. Relationship
    maintenance, clear communication, and collaborative planning ensure that teams
    work together effectively.'
  prefs: []
  type: TYPE_NORMAL
- en: Managers manage down by tracking the progress of ongoing projects; setting expectations
    and giving feedback; providing visibility into relative priorities; hiring and,
    if necessary, firing; and maintaining team morale.
  prefs: []
  type: TYPE_NORMAL
- en: Communication, Goals, and Growth Processes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Managers create processes to keep teams and individuals running smoothly. We
    covered the most common team-focused process framework, Agile, in Chapter 12\.
    This section introduces you to processes you’ll use to maintain your relationship
    with your manager.
  prefs: []
  type: TYPE_NORMAL
- en: One-on-ones (1:1s) and progress-plans-problems (PPP) reports are used for communication
    and updates, while objectives and key results (OKRs) and performance reviews manage
    goals and growth. These processes are most useful when you know what they are
    and how to use them.
  prefs: []
  type: TYPE_NORMAL
- en: 1:1s
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Your manager should schedule a weekly or biweekly 1:1 meeting with you. *One-on-ones*
    are a dedicated time for you and your manager to discuss critical topics, address
    big-picture concerns, and build a productive long-term relationship. One-on-ones
    are a well-known practice, but they’re often run poorly as status check-ins or
    troubleshooting sessions.
  prefs: []
  type: TYPE_NORMAL
- en: You should set the agenda and do a lot of the talking in 1:1s. Prior to the
    meeting, share a bullet-point agenda with your manager. Keep a 1:1 document that
    contains past agendas and notes. Share your document with your manager and update
    it before and after each 1:1\. Your manager can add their own items if they have
    topics to discuss, but your manager’s agenda should take a back seat to yours.
  prefs: []
  type: TYPE_NORMAL
- en: 'We hit on two important points, so we’re going to stop and restate them: you
    set the agenda in a 1:1, and 1:1s are not for status updates. These two points
    alone can make the difference between hours and hours of wasted time and very
    productive and important conversations. Use the following prompts as topics for
    discussion:'
  prefs: []
  type: TYPE_NORMAL
- en: Big picture What questions do you have about the company’s direction? What questions
    do you have about organizational changes?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Feedback What could we be doing better? What do you think of the team’s planning
    process? What is your biggest technical concern? What do you wish you could do
    that you can’t? What is your biggest problem? What is the company’s biggest problem?
    What roadblocks are you or others on the team encountering?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Career What career advice does your manager have for you? What can you improve
    on? What skills do you wish you had? What are your long-term goals, and how do
    you feel you’re tracking in them?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Personal What’s new in your life? What personal issues should your manager be
    aware of?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One-on-ones create mutual understanding and connection. It’s normal to talk
    a bit about seemingly irrelevant topics—your cat, your manager’s love of colorful
    sneakers, the weather. You are working on building a relationship that’s deeper
    than an exchange of code for salary. Personal and off-topic conversations are
    important, but don’t let every 1:1 become a social visit.
  prefs: []
  type: TYPE_NORMAL
- en: If you haven’t received a 1:1 invitation, ask if your manager conducts them.
    Not all do, but it’s common. If your manager doesn’t do 1:1s, ask them how they
    prefer for you to discuss typical 1:1 topics. Some managers prefer “lazy” 1:1s;
    they leave it up to individuals to set up a time to talk. If no meeting is scheduled,
    managers assume there’s nothing to discuss. You should have something to talk
    about most weeks; that’s a long list we just gave you.
  prefs: []
  type: TYPE_NORMAL
- en: If your manager repeatedly cancels your 1:1s, you need to speak to them about
    it. Part of their job is to manage their team, and part of management is investing
    time with you. Being “too busy” is not an excuse. If they can’t find time to conduct
    a 1:1 with you, the issue should be addressed. Calling out repeated 1:1 cancellations
    can be a valuable signal for a manager. Such a conversation need not (should not!)
    be a confrontation; it’s the type of feedback your manager wants and needs.
  prefs: []
  type: TYPE_NORMAL
- en: You can set up 1:1s with people other than your manager, too. Reach out to those
    who you think you could learn from. In fact, 1:1s with senior engineers are particularly
    helpful if your company does not have a formal mentoring program; 1:1s are also
    a good way to get familiar with different parts of the organization. Again, make
    sure you have an agenda so you don’t fall back on “status check-in” 1:1s.
  prefs: []
  type: TYPE_NORMAL
- en: PPPs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A *PPP* is a commonly used status update format. A status update isn’t meant
    to account for your time; it’s meant to help your manager find problems, areas
    where you need context, and opportunities to connect you with the right people.
    Updates also surface topics for 1:1 discussion and help you reflect on where you’ve
    been, where you’re going, and what stands in the way.
  prefs: []
  type: TYPE_NORMAL
- en: 'As the name implies, PPPs have a section for each of the P’s (progress, plans,
    and problems). Each section should have three to five bullet points in it, and
    each bullet point should be short, just one to three sentences. Here’s an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '**2022-07-02**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Progress**'
  prefs: []
  type: TYPE_NORMAL
- en: Debugged performance issue with notification service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Code review up for email templating in notification service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spam detection service design circulated and milestone 0 service written
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Plans**'
  prefs: []
  type: TYPE_NORMAL
- en: Add metrics and monitoring to spam detection service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Work with tools team to support PyPI artifacts in secure build environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Help onboard new hire—doing a code walk-through of spam detection service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Work with database administrator to add index to preemptively fix performance
    issue on notification service before load increases for the holiday
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Problems**'
  prefs: []
  type: TYPE_NORMAL
- en: Having trouble getting team to code review my PRs—several pending
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Redis stability is an issue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interview load feels high—averaging four per week
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Share PPPs with your manager and anyone else who is interested—usually via email,
    Slack, or a wiki. Updates happen periodically, usually weekly or monthly, depending
    on the organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'PPP updates are easy if you keep a log of past PPPs. Every time a new PPP is
    due, create a new entry. Look at your problems from the last PPP and ask yourself,
    have any problems been solved? Are any problems persisting? Solved problems go
    in the progress section of the new PPP. Persisting problems stay in the problems
    section. Next, look at your plans section from the previous PPP: Have you finished
    any of your planned work? If so, add it to the progress section of the new PPP.
    If not, are you planning on working on the task before the next PPP, or was there
    a problem that impeded progress on your planned work? Update the plans or problems
    section accordingly. Finally, look at your upcoming work and calendar. Update
    the plans section with any new work you are expecting to do before the next PPP
    is due. The whole process should take less than five minutes.'
  prefs: []
  type: TYPE_NORMAL
- en: OKRs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The *OKR framework* is a way for companies to define goals and measure their
    success. In the OKR framework, companies, teams, and individuals all define goals
    (objectives) and attach metrics (key results) to each objective. Each objective
    has three to five key results, which are metrics that signal progress toward the
    objective.
  prefs: []
  type: TYPE_NORMAL
- en: 'An engineer working on stabilizing an order service might define their OKRs
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: Objective Stabilize order service
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Key result 99.99 percent uptime as measured by health check
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Key result 99th-percentile latency (P99) < 20 ms
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Key result 5XX error rate below 0.01 percent of responses
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Key result Support team can execute regional failover in less than five minutes
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ideally, OKRs flow from the top of the company, through teams, all the way to
    each individual. Each individual’s OKRs contribute to the goals of their team,
    and each team’s OKRs contribute to the goals of the company. The engineer’s OKR,
    shown previously, might feed into a team OKR to improve stability, which might
    feed into a company OKR to improve customer satisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: 'Don’t make the key results a to-do list. They should spell out not how to *do*
    something but rather how you’ll *know* when something is done. There are many
    ways to reach an objective, and your OKRs should not box you into a particular
    plan. A silly example sometimes helps illustrate this point better: if your objective
    is to make it to Grandma’s birthday party, the key result is “be in Los Angeles
    by the 20th,” not “drive down I-5 on the 19th.” Taking the scenic route down the
    1 or flying are perfectly acceptable alternative ways to make it to Los Angeles,
    and a well-formulated OKR gives us freedom to choose the right method at the time
    we need to make that choice, not when we set the OKR.'
  prefs: []
  type: TYPE_NORMAL
- en: Objectives and key results are usually defined and evaluated quarterly. Work
    with your manager to understand company and team objectives. Use the higher-level
    objectives to define your OKRs. Try to have as few OKRs as possible; it’ll keep
    you focused. Between one and three OKRs per quarter is a sweet spot. More than
    five and you’re spreading yourself too thin.
  prefs: []
  type: TYPE_NORMAL
- en: OKRs are commonly set slightly higher than reasonable to create “reach” or “stretch”
    goals. This philosophy implies that you should not complete 100 percent of your
    reach-goal OKRs; this is a sign that you aren’t shooting high enough. Most OKR
    implementations shoot for a 60 percent to 80 percent success rate, meaning 60
    to 80 percent of the objectives are met. If you’re hitting more than 80 percent
    of your objectives, you’re not being ambitious; below 60 percent and you’re not
    being realistic or are failing to meet expectations. (Why not set the OKRs at
    100 percent and reward overachieving? Multiple ambitious goals give you flexibility
    on what to drop midquarter and don’t require the precision that a 100 percent
    completion expectation would.) Make sure you understand whether your company treats
    OKRs as must-have goals or ambitious targets with some expected failure rate!
  prefs: []
  type: TYPE_NORMAL
- en: Some companies use qualitative goals instead of OKRs. Others drop the “O” and
    focus only on the metrics—*key performance indicators* *(KPIs**)*—without stating
    the objective explicitly. Regardless of the framework, individuals and teams need
    a way to set goals and evaluate progress. Make sure you know what your goals are
    and how success is evaluated.
  prefs: []
  type: TYPE_NORMAL
- en: Not all companies set individual goals; some set only team-, department-, or
    company-level OKRs. If your company does this, it’s still a good idea to explicitly
    talk with your manager about expectations and how they’re measured.
  prefs: []
  type: TYPE_NORMAL
- en: Performance Reviews
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Managers conduct formal performance reviews at a regular cadence, usually annually
    or semiannually. Title and compensation adjustments are generally made during
    review time, too. Reviews are conducted using a tool or template with prompts
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: What have you done this year?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What went well this year?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What could have gone better this year?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What do you want in your career? Where do you see yourself in three to five
    years?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Employees self-evaluate first, and then managers respond. Finally, the manager
    and employee get together to discuss feedback. Employees normally need to sign
    off on the evaluation document after the discussion to acknowledge receiving it.
  prefs: []
  type: TYPE_NORMAL
- en: Don’t work off memory when writing your self-review. Memory is spotty, and you
    might fixate on only certain memorable projects. Keep an up-to-date list of the
    work you completed throughout the year—a completed to-do list, a set of PPPs,
    or a bullet journal—to jog your memory. Look at the tasks you completed in your
    company’s issue tracker. What milestones, epics, and stories did you work on?
    Merged pull requests and code reviews also show work you’ve done. Don’t forget
    your nonengineering projects. Mentoring interns, code reviews, conducting interviews,
    blog posts, presentations, documentation—all of this should be recognized. Use
    what you have to write an honest self-review.
  prefs: []
  type: TYPE_NORMAL
- en: Performance reviews can be stressful. Try to see a review as an opportunity
    to look back at what you’ve accomplished and to talk about what you want to do
    next; to openly acknowledge missed opportunities; to develop a growth plan for
    the next year; and to give feedback to your manager. You should never be surprised
    by your performance review feedback; if you are, talk with your manager about
    the communication breakdown. A successful performance review should give you concrete
    actions to achieve your goals.
  prefs: []
  type: TYPE_NORMAL
- en: 'You might also be asked to participate in *360s* (as in “360 degrees”), where
    employees solicit feedback from coworkers in all directions: above (managers),
    below (reports), and sideways (peers). Coworkers answer questions like “What could
    I be doing better?” and “What are people afraid to tell me?” and “What am I doing
    well?” Ultimately, 360s encourage honest feedback and give employees an opportunity
    to tell managers how they’re doing. Take 360s seriously and give thoughtful notes.'
  prefs: []
  type: TYPE_NORMAL
- en: Managers should be giving feedback frequently throughout the year—during 1:1s,
    as an aside after a meeting, or over chat. If you’re not getting enough feedback,
    ask your manager how you’re doing in your next 1:1\. You can also ask mentors
    or senior engineers.
  prefs: []
  type: TYPE_NORMAL
- en: Managing Up
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Just as managers manage up to higher-level executives and directors, you “manage
    up” by helping your manager and making sure they help you. You can help your manager
    by giving them feedback. They can help you by giving you feedback and helping
    you achieve your goals. And don’t settle if things aren’t working out. Dysfunctional
    management can be traumatic and damage your growth.
  prefs: []
  type: TYPE_NORMAL
- en: Get Feedback
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Reviews and 360s provide holistic feedback, but they are too infrequent to be
    relied upon solely. You need regular feedback so you can adjust quickly. Managers
    don’t always volunteer feedback, so you might have to ask.
  prefs: []
  type: TYPE_NORMAL
- en: Use 1:1s to get feedback. Send questions to your manager beforehand; giving
    extemporaneous feedback is hard. Ask for specific feedback. “What can I do to
    get better with testing?” is better than “What can I do better?” Don’t limit feedback
    requests to technical questions. Ask for feedback on communication, career growth,
    leadership, learning opportunities, and so on. Use the prompts in the previous
    1:1 section if you need ideas.
  prefs: []
  type: TYPE_NORMAL
- en: Don’t take feedback at face value. Your manager is just one perspective (albeit
    an important one). Try to incorporate your manager’s feedback into your perspective
    rather than adopting your manager’s feedback outright. Ask yourself what gaps
    your manager has in their perspective, how their feedback fits with yours, what
    they know that you don’t, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Give feedback on feedback, too. It can feel like feedback goes into a black
    hole. Tell your manager when their feedback pays off: “I joined the engineering
    reading group, like you suggested, and it’s been really fun to read papers and
    discuss them with engineers from other teams! Thanks so much for the idea. I’m
    learning a ton.” Positive results will encourage them to give more feedback. And
    let your manager know if feedback isn’t working out; they might have other ideas:
    “I joined the engineering reading group, like you suggested, and to be honest,
    it’s not working for me. They are discussing papers that aren’t super relevant
    to my work. Can you suggest other ways for me to develop connections to different
    teams?”'
  prefs: []
  type: TYPE_NORMAL
- en: You can also give feedback by asking for feedback. Asking how to do something
    will often expose gaps in processes. The answer to “How could I have prevented
    the production incident last week?” might be “We need to build a test environment.”
    Give your manager the opportunity to reach a conclusion by asking for feedback
    rather than proposing a solution.
  prefs: []
  type: TYPE_NORMAL
- en: Give Feedback
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Good managers want feedback from their team. Managers need to know how things
    are going—what’s working and what’s not. Every individual on the team is going
    to have a unique perspective. Feedback eliminates blind spots.
  prefs: []
  type: TYPE_NORMAL
- en: 'Feedback can be about anything: the team, the company, behavior, projects,
    technical plans, or even human resource policies. Raise problems, but don’t focus
    solely on them. Positive feedback is just as valuable: it can be hard for managers
    to know which changes had a positive effect, and their work doesn’t have unit
    tests.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the *Situation-Behavior-Impact* *(SBI**) framework* when providing feedback.
    First describe the *situation*. Then, describe the *behavior*: a specific behavior
    you find praiseworthy or problematic. Finally, explain the *impact*: the effect
    of the behavior and the reason it’s important. Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Situation:** I finished up all the code changes to the new permissions service
    in January and handed it off to the operations team for rollout, but the service
    is still not deployed as of today, at the beginning of March.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Behavior:** The “upcoming releases” dashboard has moved the expected release
    date every week for the past five weeks. The database upgrade has also been pending
    for several weeks.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Impact:** This means we’re in danger of missing our deadlines, and a number
    of dependent projects are also delayed. Is there anything we can do?'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The SBI framework avoids character judgments and assumptions about intention
    and motivation. Instead, it focuses on the facts and observable impact and steers
    the discussion toward mitigation and prevention.
  prefs: []
  type: TYPE_NORMAL
- en: Note that you do not recommend a solution in the SBI framework. You might have
    solutions in mind, but it’s best to start with the issue and learn more before
    making recommendations. You might discover that you were missing valuable information
    or that a problem looks different than you thought. Discuss your solution ideas
    at the end of the conversation, after you’ve had the chance to consider the problem
    from a different perspective.
  prefs: []
  type: TYPE_NORMAL
- en: Give feedback privately, calmly, and frequently. One-on-ones are an excellent
    venue. Feedback can trigger strong emotions, but try to maintain a clear head
    and keep the conversation constructive. Giving feedback in private permits your
    manager to have an honest conversation with you and can keep both parties from
    feeling attacked. Frequent feedback eliminates surprises. Don’t wait for a problem
    to fester until it’s too late.
  prefs: []
  type: TYPE_NORMAL
- en: 'It doesn’t have to be all doom and gloom. The SBI framework works for positive
    feedback, too:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Situation:** We needed to write a design doc for proposed changes to the
    sign-up workflow last week and I took the opportunity to use the new design doc
    template you created.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Behavior:** The section on rollout and communication plans made us realize
    we completely forgot to loop the user support team in on the changes.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Impact:** They gave us a bunch of helpful feedback once we reached out! And
    it was much faster to write the document because we didn’t need to think about
    how it should be structured. Thanks for working on this!'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Whether it’s feedback to your manager or your peers, and whether it’s written
    or verbal, always try to make it the kind of feedback you would want to receive.
    Ask yourself, what problem are you trying to solve? What is the outcome you wish
    for—what does success look like?
  prefs: []
  type: TYPE_NORMAL
- en: Discuss Your Goals
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Don’t expect your manager to know what you want from your career. You need to
    clearly articulate your goals and aspirations for your manager to help you achieve
    them. Formal reviews are a great place for such conversations.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you don’t have career goals yet, that’s fine. Tell your manager you want
    to explore; they’ll be able to help. If you have interests beyond your immediate
    focus, let them know. Don’t limit yourself to engineering, either. You might find
    product management fascinating or have the ambition to start a company. Think
    big and long-term. For example, you might say:'
  prefs: []
  type: TYPE_NORMAL
- en: Can we talk about career paths today? I’m honestly not sure where I see myself
    in five years or what my options even are. What are some of the common career
    paths you see and how do they differ? I’m enjoying my current project, but I am
    also curious about security. Are there opportunities coming up that might let
    me do something security-related?
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If you know what you want to do, let your manager know and work with them to
    steer your work toward your destination. Part of a manager’s job is to align your
    interests with the needs of the company; the more they know about your interests,
    the more they can steer the right opportunities your way.
  prefs: []
  type: TYPE_NORMAL
- en: 'Be patient after discussing your goals. There are only so many opportunities
    available. It’s ultimately up to you to make the most of what you’re given. Recognize
    that opportunities come in many forms: new projects, new challenges, interns to
    mentor, presentation opportunities, blog posts to write, training, or teams to
    partner with. Under the right lens, everything you do is an opportunity for growth.'
  prefs: []
  type: TYPE_NORMAL
- en: Take Action When Things Aren’t Working
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Every employee/manager relationship is unique, so it’s difficult to give general
    advice. Each situation depends on the company, the team, the manager, and the
    employee. All we can say for certain is that you should be proactive if you feel
    things aren’t working.
  prefs: []
  type: TYPE_NORMAL
- en: Relationships and jobs have ups and downs. A short-term rough patch can happen
    and doesn’t need drastic action. If, however, you are feeling consistent frustration,
    stress, or unhappiness, you should speak up.
  prefs: []
  type: TYPE_NORMAL
- en: Use the SBI framework (from the “Give Feedback” section) to talk to your manager
    if you feel comfortable doing so. Speak to human resources (HR), your manager’s
    manager, or other mentors if you aren’t comfortable speaking to your manager.
    The course you pursue depends on your relationship with each party. If you have
    nowhere to turn, use HR.
  prefs: []
  type: TYPE_NORMAL
- en: HR’s role is to maintain stability and keep the company out of legal and compliance
    trouble, which is not quite the same as making things right or fair. If nothing
    else, talking to HR ensures that there is a record of your concern. Companies
    do tend to react to *patterns* of concerns.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’re told things will change, give your manager time—three to six months
    is reasonable. Managers need to think about feedback and implement changes. Processes
    or even organizational structures might have to be rebuilt. Opportunities to demonstrate
    change might be infrequent. Pay attention to the “slope” of change: Are things
    improving? Have you seen a commitment to improvement demonstrated through concrete
    actions?'
  prefs: []
  type: TYPE_NORMAL
- en: 'If time passes and you are still unhappy, it might be time for a transfer to
    another internal team or a new job. Internal transfers work well when you like
    your coworkers and company. A new company is better when problems are more systemic:
    a bad business, poor leadership, a toxic culture. Switching teams can be delicate;
    talk with the manager you want to transfer to and then with your current manager.
    Expect a team transition to take time as you hand off work to others, but don’t
    allow team changes to take longer than three months.'
  prefs: []
  type: TYPE_NORMAL
- en: Dysfunctional management is frustrating, stressful, and can stunt your career
    growth. Not every manager is good, and not every good manager is a good fit for
    you. If you’ve given feedback and been patient but things still aren’t working,
    move on.
  prefs: []
  type: TYPE_NORMAL
- en: Do’s and Don’ts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| **Do’s** | **Don’ts** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| **DO** expect managers to be accessible and transparent. | **DON’T** hide
    difficulties from your manager. |'
  prefs: []
  type: TYPE_TB
- en: '| **DO** tell your manager what you need. | **DON''T** use 1:1s as a status
    update meeting. |'
  prefs: []
  type: TYPE_TB
- en: '| **DO** set the agenda for your 1:1s. | **DON''T** work from memory when writing
    self-reviews. |'
  prefs: []
  type: TYPE_TB
- en: '| **DO** keep 1:1 notes. | **DON’T** write superficial feedback. |'
  prefs: []
  type: TYPE_TB
- en: '| **DO** write actionable feedback of the sort you’d like to receive. | **DON''T**
    get boxed in by OKRs. |'
  prefs: []
  type: TYPE_TB
- en: '| **DO** track accomplishments to make self-reviews easier. | **DON’T** take
    feedback as an attack. |'
  prefs: []
  type: TYPE_TB
- en: '| **DO** use the SBI framework to make feedback less personal. | **DON’T**
    put up with bad management. |'
  prefs: []
  type: TYPE_TB
- en: '| **DO** think about long-term career goals. |  |'
  prefs: []
  type: TYPE_TB
- en: Level Up
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A good way to understand your manager is to read the books they read. Engineering
    management books will help you understand why your managers are doing what they’re
    doing. It’ll also build empathy; you’ll be exposed to some of the problems they
    deal with. Plus, you’ll pick up useful skills and be able to give better feedback
    to your manager.
  prefs: []
  type: TYPE_NORMAL
- en: Start by reading *The Manager’s Path*by Camille Fournier (O’Reilly Media, 2017).
    Fournier’s book walks you through the phases of a manager from a staff engineer
    through a VP of engineering. It discusses how each level of manager operates and
    gives more details on management processes like 1:1s. The book will also help
    you chart your own career path.
  prefs: []
  type: TYPE_NORMAL
- en: Will Larson’s *An Elegant Puzzle* (Stripe Press, 2019) gives insight into the
    problems a manager faces and the frameworks they use to manage them.
  prefs: []
  type: TYPE_NORMAL
- en: '*Thanks for the Feedback* by Douglas Stone and Sheila Heen (Penguin Books,
    2014) will help you process review feedback. Feedback is an emotionally fraught
    topic. This book gives you tools to get the most out of feedback “even when it
    is off base, unfair, poorly delivered, and, frankly, you’re not in the mood.”
    Many of the book’s tools work well in other types of conversations, too.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Managing Up* by Mary Abbajay (Wiley, 2018) takes our “Managing Up” section
    to the next level. The book discusses manager personas and how to deal with them.
    It also gives solid advice on tough managers and discusses what to do when it’s
    time to move on.'
  prefs: []
  type: TYPE_NORMAL
- en: Andy Grove’s book *High Output Management* (Vintage, 2015) is the classic book
    on engineering management. Written in 1983, Grove documents the philosophy and
    practices he cultivated at Intel—philosophies that have shaped modern engineering
    management. You should read it for historical context but also because it’s still
    really relevant. Chances are your manager has read it, so you’ll have a common
    reference point.
  prefs: []
  type: TYPE_NORMAL
