["```\n// Listing 14-1\n#include <Servo.h>\nServo myservo; \nvoid setup()\n{ myservo.attach(4); \n}\nvoid loop()\n{ myservo.write(180); delay(1000); myservo.write(90); delay(1000); myservo.write(0); delay(1000);\n}\n```", "```\n#include <Servo.h>\nServo myservo;\n```", "```\nmyservo.attach(4); // control pin on digital 4\n```", "```\nmyservo.write(*x*);\n```", "```\n// Project 37 - Building an Analog Thermometer\nfloat voltage = 0;\nfloat sensor = 0;\nfloat currentC = 0;\nint      angle = 0;\n#include <Servo.h> \nServo myservo;\nvoid setup() \n{ myservo.attach(4);\n}1 int calculateservo(float temperature) \n{ float resulta; int resultb; resulta = -6 * temperature; resulta = resulta + 180; resultb = int(resulta);                return resultb;\n}\nvoid loop() \n{ // read current temperature sensor = analogRead(0);        voltage = (sensor*5000)/1024;  voltage = voltage-500;         currentC = voltage/10;         // display current temperature on servo 1  angle = calculateservo(currentC);  // convert temperature to a servo position if (angle>=0 && angle <=30) { myservo.write(angle); // set servo to temperature delay(1000);  }\n}\n```", "```\n// Project 38 - Controlling the Motor\nvoid setup() \n{ pinMode(5, OUTPUT);\n}\nvoid loop() \n{1   for (int a=0; a<256; a++)  { analogWrite(5, a);2     delay(100);  }3   delay(5000);4   for (int a=255; a>=0; a--) { analogWrite(5,a); delay(100); } delay(5000);\n}\n```", "```\n// Listing 14-21 #include <CheapStepper.h>2 CheapStepper stepper (8, 9, 10, 11);3 boolean clockwise = true;\nboolean cclockwise = false;4 void setup()\n{ stepper.setRpm(20); Serial.begin(9600);\n}\nvoid loop()\n{ Serial.println(\"stepper.moveTo (Clockwise, 0)\");5   stepper.moveTo (clockwise, 0); delay(1000); Serial.println(\"stepper.moveTo (Clockwise, 1024)\");5   stepper.moveTo (clockwise, 1024); delay(1000); Serial.println(\"stepper.moveTo (Clockwise, 2048)\"); stepper.moveTo (clockwise, 2048); delay(1000); Serial.println(\"stepper.moveTo (Clockwise, 3072)\"); stepper.moveTo (clockwise, 3072); delay(1000); Serial.println(\"stepper.moveTo (CClockwise, 512)\");5   stepper.moveTo (cclockwise, 512); delay(1000); Serial.println(\"stepper.moveTo (CClockwise, 1536)\");5   stepper.moveTo (cclockwise, 1536); delay(1000); Serial.println(\"stepper.moveTo (CClockwise, 2560)\"); stepper.moveTo (cclockwise, 2560); delay(1000); Serial.println(\"stepper.moveTo (CClockwise, 3584)\"); stepper.moveTo (cclockwise, 3584); delay(1000);\n}\n```", "```\nStepper.moveTo(*direction*, *location*);\n```", "```\nstepper.setRpm(20);\n```", "```\n// Project 39 - Building and Controlling a Robot Vehicle\n#include <AFMotor.h>1 AF_DCMotor motor1(1); // set up instances of each motor\nAF_DCMotor motor2(2);\nAF_DCMotor motor3(3);\nAF_DCMotor motor4(4);2 void goForward(int speed, int duration)\n{ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(FORWARD); motor2.run(FORWARD); motor3.run(FORWARD); motor4.run(FORWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}2 void goBackward(int speed, int duration){ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(BACKWARD); motor2.run(BACKWARD); motor3.run(BACKWARD); motor4.run(BACKWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}2 void rotateLeft(int speed, int duration)\n{ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(FORWARD); motor2.run(BACKWARD); motor3.run(BACKWARD); motor4.run(FORWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}2 void rotateRight(int speed, int duration)\n{ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(BACKWARD); motor2.run(FORWARD); motor3.run(FORWARD); motor4.run(BACKWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}\nvoid setup(){ delay(5000);\n}\nvoid loop()\n{ goForward(127,5000); delay(1000); rotateLeft(127,2000); delay(1000); goBackward(127,5000); delay(1000); rotateRight(127,5000); delay(5000);\n}\n```", "```\nMotor.run(*direction*)\n```", "```\nMotor.setSpeed(*speed*)\n```", "```\n// Project 40 â€“ Detecting Robot Vehicle Collisions with a Microswitch\n#include <AFMotor.h>\nAF_DCMotor motor1(1); // set up instances of each motor\nAF_DCMotor motor2(2);\nAF_DCMotor motor3(3);\nAF_DCMotor motor4(4);\nboolean crash = false;\nvoid goBackward(int speed, int duration)\n{ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(BACKWARD); motor2.run(BACKWARD); motor3.run(BACKWARD); motor4.run(BACKWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}1 void backOut()\n{ crash = true;\n}\nvoid goForward(int duration, int speed){ long a, b; boolean move = true;2   a = millis(); do { if (crash == false) { motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(FORWARD); motor2.run(FORWARD); motor3.run(FORWARD); motor4.run(FORWARD); } if (crash == true) {3       goBackward(200, 2000); crash = false; }4     b = millis() - a; if (b >= duration) { move = false; } } while (move != false); // stop motors motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}\nvoid setup()\n{ attachInterrupt(0, backOut, RISING); delay(5000);\n}\nvoid loop()\n{ goForward(5000, 127); delay(2000);\n} \n```", "```\n// Listing 14-3\nfloat sensor = 0;\nint cm = 0;\nvoid setup()\n{ Serial.begin(9600);\n}\nvoid loop()\n{1   sensor = analogRead(0); 2   if (sensor<=90) { Serial.println(\"Infinite distance!\"); } else if (sensor<100) // 80 cm { cm = 80; } else if (sensor<110) // 70 cm { cm = 70; } else if (sensor<118) // 60 cm { cm = 60; } else if (sensor<147) // 50 cm { cm = 50; } else if (sensor<188) // 40 cm { cm = 40; } else if (sensor<230) // 30 cm { cm = 30; } else if (sensor<302) // 25 cm { cm = 25; } else if (sensor<360) // 20 cm { cm = 20; } else if (sensor<505) // 15 cm { cm = 15; } else if (sensor<510) // 10 cm { cm = 10; } else if (sensor>=510) // too close! { Serial.println(\"Too close!\"); }  Serial.print(\"Distance: \"); Serial.print(cm); Serial.println(\" cm\"); delay(250); \n}\n```", "```\n// Project 41 - Detecting Robot Vehicle Collisions with an IR Distance Sensor\n#include <AFMotor.h>\nAF_DCMotor motor1(1); // set up instances of each motor\nAF_DCMotor motor2(2);\nAF_DCMotor motor3(3);\nAF_DCMotor motor4(4);\nboolean crash = false;\nvoid goBackward(int speed, int duration)\n{ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(BACKWARD); motor2.run(BACKWARD); motor3.run(BACKWARD); motor4.run(BACKWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}\nvoid checkDistance()\n{1   if (analogRead(0) > 460) { crash = true; }\n}\nvoid goForward(int duration, int speed)\n{ long a, b; boolean move = true; a = millis(); do { checkDistance(); if (crash == false) { motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(FORWARD); motor2.run(FORWARD); motor3.run(FORWARD); motor4.run(FORWARD); } if (crash == true) { goBackward(200, 2000); crash = false; } b = millis() - a; if (b >= duration) { move = false; } } while (move != false); // stop motors motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}\nvoid setup(){ delay(5000);\n}\nvoid loop()\n{ goForward(5000, 255); delay(2000);\n}\n```", "```\n// Listing 14-4\n#include <HCSR04.h>1 UltraSonicDistanceSensor HCSR04(2, 13); // trig - D2, echo - D132 float distance;\nvoid setup () \n{ Serial.begin(9600);\n}\nvoid loop () \n{3   distance = HCSR04.measureDistanceCm(); Serial.print(\"Distance: \"); Serial.print(distance); Serial.println(\" cm\"); delay(500);\n}\n```", "```\n// Project 42 - Detecting Collisions with an Ultrasonic Distance Sensor\n#include <AFMotor.h>\n#include <HCSR04.h>\n// set up instances of each motor\nAF_DCMotor motor1(1); \nAF_DCMotor motor2(2);\nAF_DCMotor motor3(3);\nAF_DCMotor motor4(4);\n// set up ultrasonic sensor\nUltraSonicDistanceSensor HCSR04(2, 13); // trig - D2, echo - D13\nboolean crash=false;\nvoid checkDistance()\n{ float distance; distance = HCSR04.measureDistanceCm();1   if (distance < 5) // crash distance is 5 cm or less { crash = true; }\n}\nvoid goBackward(int speed, int duration){ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(BACKWARD); motor2.run(BACKWARD); motor3.run(BACKWARD); motor4.run(BACKWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}\nvoid goForward(int duration, int speed)\n{ long a, b; boolean move = true; a = millis(); do { checkDistance(); if (crash == false) { motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(FORWARD); motor2.run(FORWARD); motor3.run(FORWARD); motor4.run(FORWARD); } if (crash == true) { goBackward(200, 2000); crash = false; } b = millis() - a; if (b >= duration) { move = false; } } while (move != false); // stop motors motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}\nvoid setup(){ delay(5000);\n}\nvoid loop()\n{ goForward(1000, 255);\n}\n```"]