- en: '**A**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**A**'
- en: '**TOOLS OF THE TRADE**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**行业工具**'
- en: '![image](graphics/common-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/common-01.jpg)'
- en: This section discusses different tools that you may want to use when researching
    a vehicle. I’ve chosen to focus on low-cost devices and software because it’s
    important to me that as many people as possible participate in the research.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论了在研究车辆时可能想使用的不同工具。我选择专注于低成本设备和软件，因为我认为让尽可能多的人参与研究很重要。
- en: Open Garages is willing to showcase and promote tools to aid with automotive
    research. If your company produces a great product, feel free to contact Open
    Garages, but unless there’s an open way to contribute to your tool, don’t expect
    free publicity.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Open Garages 愿意展示和推广有助于汽车研究的工具。如果你的公司生产了优秀的产品，可以随时联系 Open Garages，但除非有开放的方式来贡献你的工具，否则不要指望免费的宣传。
- en: '**Hardware**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**硬件**'
- en: In this section, we’ll cover boards, like the ChipWhisperer, as well as dongle-like
    devices that provide CAN connectivity. We’ll first look at lower-cost, open source
    hardware and then explore some higher-end devices for those willing to spend a
    bit more money.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍像 ChipWhisperer 这样的开发板，以及提供 CAN 连接的类似加密狗的设备。我们首先将看低成本的开源硬件，然后探索一些高端设备，适合那些愿意多花一点钱的人。
- en: Though there are many cost-effective devices for communicating with the CAN
    bus, the software needed to interact with these devices can be lacking, so you’ll
    often need to write your own.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有许多经济实惠的设备可以与 CAN 总线通信，但与这些设备互动所需的软件可能不足，因此你通常需要自己编写。
- en: '***Lower-End CAN Devices***'
  id: totrans-8
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***低端 CAN 设备***'
- en: These devices are useful for sniffing the contents of your CAN bus and injecting
    packets. They range from hobbyist-level boards to professional devices that support
    lots of custom features and can handle many different CAN buses simultaneously.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设备对于嗅探 CAN 总线的内容和注入数据包非常有用。它们从业余爱好者级别的板子到支持许多自定义功能并能同时处理多个 CAN 总线的专业设备不等。
- en: '**Arduino Shields**'
  id: totrans-10
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**Arduino Shields**'
- en: 'Numerous Arduino and Arduino-like devices ($20 to $30, *[https://www.arduino.cc/](https://www.arduino.cc/)*)
    will support CAN with the addition of an Arduino shield. Here are some Arduino
    shields that support CAN:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 许多 Arduino 和类似 Arduino 的设备（$20 到 $30，* [https://www.arduino.cc/](https://www.arduino.cc/)
    *）在添加 Arduino shield 后可以支持 CAN。以下是一些支持 CAN 的 Arduino shields：
- en: '**CANdiy-Shield** MCP2515 CAN controller with two RJ45 connectors and a protoarea'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**CANdiy-Shield** MCP2515 CAN 控制器，带两个 RJ45 连接器和原型区'
- en: '**ChuangZhou CAN-Bus Shield** MCP2515 CAN controller with a D-sub connector
    and screw terminals'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**ChuangZhou CAN-Bus Shield** MCP2515 CAN 控制器，带 D-sub 连接器和螺丝端子'
- en: '**DFRobot CAN-Bus Shield** STM32 controller with a D-sub connector'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**DFRobot CAN-Bus Shield** STM32 控制器，带 D-sub 连接器'
- en: '**SeeedStudio SLD01105P CAN-Bus Shield** MCP2515 CAN controller with a D-sub
    connector'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**SeeedStudio SLD01105P CAN-Bus Shield** MCP2515 CAN 控制器，带 D-sub 连接器'
- en: '**SparkFun SFE CAN-Bus Shield** MCP2515 CAN controller with a D-sub connector
    and an SD card holder; has connectors for an LCD and GPS module'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**SparkFun SFE CAN-Bus Shield** MCP2515 CAN 控制器，配有 D-sub 连接器和 SD 卡座；具有 LCD
    和 GPS 模块的连接器'
- en: These shields are all pretty similar. Most run the MCP2515 CAN controller, though
    the DFRobot shield uses a STM32, which is faster with more buffer memory.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这些 shields 都很相似。大多数运行 MCP2515 CAN 控制器，但 DFRobot shield 使用 STM32 控制器，这种控制器速度更快，且具有更多的缓冲内存。
- en: Regardless of which shield you choose, you’ll have to write code for the Arduino
    in order to sniff packets. Each shield comes with a library designed to interface
    with the shield programmatically. Ideally, these buses should support something
    like the LAWICEL protocol, which allows them to send and receive packets over
    serial via a userspace tool on the laptop, such as SocketCAN.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你选择哪个 shield，你都需要为 Arduino 编写代码以嗅探数据包。每个 shield 都附带一个库，用于与该 shield 进行程序化接口。理想情况下，这些总线应该支持类似
    LAWICEL 协议的功能，这使得它们能够通过笔记本电脑上的用户空间工具（如 SocketCAN）通过串口发送和接收数据包。
- en: '**Freematics OBD-II Telematics Kit**'
  id: totrans-19
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**Freematics OBD-II Telematics Kit**'
- en: This Arduino-based OBD-II Bluetooth adapter kit has both an OBD-II device and
    a data logger, and it comes with GPS, an accelerometer, and gyro and temperature
    sensors.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这款基于 Arduino 的 OBD-II 蓝牙适配器套件包含 OBD-II 设备和数据记录器，还配有 GPS、加速度计、陀螺仪和温度传感器。
- en: '**CANtact**'
  id: totrans-21
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**CANtact**'
- en: CANtact, an open source device by Eric Evenchick, is a very affordable USB CAN
    device that works with Linux SocketCAN. It uses a DB 9 connector and has the unique
    advantage of using jumper pins to change which pins are CAN and ground—a feature
    that allows it to support both US- and UK-style DB9 to OBD-II connectors. You
    can get CANtact from *[http://cantact.io/](http://cantact.io/)*.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '**Raspberry Pi**'
  id: totrans-23
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: The Raspberry Pi is an alternative to the Arduino that costs about $30 to $40\.
    The Pi provides a Linux operating system but doesn’t include a CAN transceiver,
    so you’ll need to purchase a shield.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the advantages of using a Raspberry Pi over an Arduino is that it allows
    you to use the Linux SocketCAN tools directly, without the need to buy additional
    hardware. In general, a Raspberry Pi can talk to an MCP2515 over SPI with just
    some basic wiring. Here are some Raspberry Pi implementations:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '**Canberry** MCP2515 CAN controller with screw terminals only (no D-sub connector;
    $23)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '**Carberry** Two CAN bus lines and two GMLAN lines, LIN, and infrared (doesn’t
    appear to be an open source shield; $81)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '**PICAN CAN-Bus Board** MCP2515 CAN controller with D-sub connector and screw
    terminals ($40 to $50)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '**ChipKit Max32 Development Board and NetworkShield**'
  id: totrans-29
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: The ChipKit board is a development board that together with the NetworkShield
    can give you a network-interpretable CAN system, as discussed in “[Translating
    CAN Bus Messages](ch05.html#ch05lev2sec10)” on [page 85](ch05.html#page_85). About
    $110, this open source hardware solution is touted by the OpenXC standard and
    supports prebuilt firmware from OpenXC, but you can also write your own firmware
    for it and do raw CAN.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '**ELM327 Chipset**'
  id: totrans-31
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: The ELM327 chipset is by far the cheapest chipset available at anywhere (from
    $13 to $40), and it’s used in most cheap OBD device. It communicates with the
    OBD over serial and comes with just about any type of connector you can think
    of, from USB to Bluetooth, Wi-Fi, and so on. You can connect to ELM327 devices
    over serial, and they’re capable of sending packets other than OBD/UDS packets.
    For a full list of commands using the ELM327, see the data sheet at *[http://elmelectronics.com/DSheets/ELM327DS.pdf](http://elmelectronics.com/DSheets/ELM327DS.pdf)*.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, the available CAN Linux tools won’t run on the ELM327, but Open
    Garages has begun a web initiative that includes sniffing drivers for the ELM327
    called CANiBUS (*[https://github.com/Hive13/CANiBUS/](https://github.com/Hive13/CANiBUS/)*).
    Be forewarned that the ELM327 has limited buffer space, so you’ll lose packets
    when sniffing and transmission can be a bit imprecise. If you’re in a pinch, however,
    this is the cheapest route.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: If you’re willing to open the device and solder a few wires to your ELM327,
    you can reflash the firmware and convert it into a LAWICEL-compatible device,
    which allows your uber cheap ELM327 to work with Linux and show up as an slcanX
    device! (You’ll find information on how to flash your ELM327 on the Area 515 makerspace
    blog from Des Moines, Iowa, at *[https://area515.org/elm327-hacking/](https://area515.org/elm327-hacking/)*.)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '**GoodThopter Board**'
  id: totrans-35
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Travis Goodspeed, a well-known hardware hacker, has released an open source,
    low-cost board with a CAN interface called the GoodThopter. The GoodThopter, based
    on his popular GoodFet devices, uses MCP2515 and communicates over serial with
    its own custom interface. You’ll need to completely assemble and solder together
    the device yourself, but doing so should cost just a few dollars, depending on
    the parts you have available at your local hackerspace.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '**ELM-USB Interface**'
  id: totrans-37
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: OBDTester.com sells a commercial ELM-32x-compatible device for around $60\.
    OBDTester.com are the maintainers of the PyOBD library (see “[Software](app01.html#app01lev1sec2)”
    on [page 246](app01.html#page_246)).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '**CAN232 and CANUSB Interface**'
  id: totrans-39
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: LAWICEL AB produces the commercial CAN device CAN232, which plugs into an RS232
    port with a DB9 connector, and a USB version called CANUSB (the latter goes for
    $110 to $120). Because they’re made by the inventors of the LAWICEL protocol,
    these devices are guaranteed to work with the `can-utils` serial link modules.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '**VSCOM Adapter**'
  id: totrans-41
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: The VSCOM is an affordable commercial USB CAN module from Vision Systems (*[http://www.vscom.de/usb-to-can.htm](http://www.vscom.de/usb-to-can.htm)*)
    that uses the LAWICEL protocol. VSCOM works with the Linux `can-utils` over serial
    link (slcan) and provides good results. The device costs around $100 to $130.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '**USB2CAN Interface**'
  id: totrans-43
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: The USB2CAN converter from 8devices (*[http://www.8devices.com/usb2can/](http://www.8devices.com/usb2can/)*)
    is the cheapest alternative to a nonserial CAN interface. This small, commercial
    USB device will show up as a standard can0 device in Linux and has the most integrated
    support in this price range. Most devices that show up as canX raw devices are
    PCI cards and typically cost significantly more than this device.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '**EVTV Due Board**'
  id: totrans-45
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: EVTV.me (*[http://store.evtv.me/](http://store.evtv.me/)*) specializes in electric
    car conversions. They make lots of great tools for doing crazy things to your
    historic vehicle, like adding a Tesla drivetrain to it. One of their tools is
    a $100 open source CAN sniffer called the EVTV Due, which is basically an Arduino
    Due with a built-in CAN transceiver and handle-screw terminals to interface with
    your CAN lines. This board was originally written to work solely with their SavvyCAN
    software, which uses their Generalized Vehicle Reverse Engineering Tool (GVRET),
    but it now supports SocketCAN as well.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '**CrossChasm C5 Data Logger**'
  id: totrans-47
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: The CrossChasm C5 (*[http://www.crosschasm.com/technology/data-logging/](http://www.crosschasm.com/technology/data-logging/)*)
    is a commercial device that supports the Ford VI firmware and costs about $120\.
    The C5 supports the VI, which is also known as the CAN translator, to convert
    CAN messages to the OpenXC format, and it converts some proprietary CAN packets
    into a generic format to send over Bluetooth.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: CrossChasm C5 (*[http://www.crosschasm.com/technology/data-logging/](http://www.crosschasm.com/technology/data-logging/)*
    ) 是一款商业设备，支持Ford VI固件，售价大约$120。C5支持VI，也就是CAN翻译器，可以将CAN消息转换为OpenXC格式，并将一些专有的CAN数据包转换成通用格式，通过蓝牙发送。
- en: '**CANBus Triple Board**'
  id: totrans-49
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**CANBus Triple Board**'
- en: As I write this, the CANBus Triple (*[http://canb.us/](http://canb.us/)*) is
    still in development. It uses a wiring harness designed to support Mazda, but
    it supports three CAN buses of any vehicle.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我写这篇文章时，CANBus Triple (*[http://canb.us/](http://canb.us/)* ) 仍在开发中。它使用的是专为马自达设计的接线束，但它支持任何车辆的三条CAN总线。
- en: '***Higher-End CAN Devices***'
  id: totrans-51
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***高端CAN设备***'
- en: Higher-end devices will cost you more money, but they’re capable of receiving
    more simultaneous channels and offer more memory to help prevent packet loss.
    High-performance tools often support eight channels or more, but unless you’re
    working on racing vehicles, you probably don’t need that many channels, so be
    sure that you need devices like these before dropping any cash.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 高端设备会更贵，但它们能够接收更多的同时通道，并提供更多内存，以帮助防止数据包丢失。高性能工具通常支持八个或更多通道，但除非你正在处理赛车车辆，否则你可能不需要这么多通道，因此在花费之前一定要确认是否真的需要这样的设备。
- en: These devices often come with their own proprietary software or a software subscription
    at sometimes significant added cost. Make sure the software associated with the
    device you choose does what you want because you’ll usually be locked into their
    API and preferred hardware. If you need higher-end devices that work with Linux,
    try Kvaser, Peak, or EMS Wünsche. The devices from these companies typically use
    the sja1000 chipset at prices starting around $400.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设备通常附带专有软件或软件订阅，有时需要支付额外的高费用。确保所选设备的相关软件可以完成你想要的功能，因为你通常会被锁定在他们的API和首选硬件中。如果你需要与Linux兼容的高端设备，可以尝试Kvaser、Peak或EMS
    Wünsche。这些公司的设备通常使用sja1000芯片组，价格从$400起。
- en: '**CAN Bus Y-Splitter**'
  id: totrans-54
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**CAN总线Y型分接器**'
- en: A CAN bus Y-splitter is a very simple device that’s basically one DLC connector
    broken into two connectors, which allows you to plug a device into one port and
    a CAN sniffer into the other. These typically cost around $10 on Amazon and are
    actually quite simple to make yourself.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: CAN总线Y型分接器是一个非常简单的设备，基本上是一个DLC连接器分成两个连接器，这样你就可以将一个设备插入一个端口，将CAN嗅探器插入另一个端口。它们通常在亚马逊上售价大约$10，实际上制作起来非常简单。
- en: '**HackRF SDR**'
  id: totrans-56
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**HackRF SDR**'
- en: HackRF is an SDR from Great Scott Gadgets (*[https://greatscottgadgets.com/hackrf/](https://greatscottgadgets.com/hackrf/)*).
    This open source hardware project can receive and transmit signals from 10 MHz
    to 6 GHz. At about $330, you can’t get a better SDR for the price.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: HackRF是Great Scott Gadgets公司出品的SDR设备 (*[https://greatscottgadgets.com/hackrf/](https://greatscottgadgets.com/hackrf/)*
    )。这个开源硬件项目可以接收和发送从10 MHz到6 GHz的信号。大约$330的价格，性价比极高，是一个不可多得的SDR设备。
- en: '**USRP SDR**'
  id: totrans-58
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**USRP SDR**'
- en: USRP (*[http://www.ettus.com/](http://www.ettus.com/)*) is a professional, modular
    SDR device that you can build to suit your needs. USRP is open source to varying
    degrees at prices ranging from $500 to $2,000.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: USRP (*[http://www.ettus.com/](http://www.ettus.com/)* )是一个专业的模块化SDR设备，你可以根据自己的需求进行构建。USRP是开源的，价格从$500到$2,000不等。
- en: '**ChipWhisperer Toolchain**'
  id: totrans-60
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**ChipWhisperer工具链**'
- en: NewAE Technologies produces the ChipWhisperer (*[http://newae.com/chipwhisperer/](http://newae.com/chipwhisperer/)*).
    As discussed in “[Side-Channel Analysis with the ChipWhisperer](ch08.html#ch08lev1sec3)”
    on [page 134](ch08.html#page_134), the ChipWhisperer is a system for side-channel
    attacks, such as power analysis and clock glitching. Similar systems usually cost
    $30,000 or more, but the ChipWhisperer is an open source system that costs between
    $1,000 and $1,500.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: NewAE Technologies生产ChipWhisperer (*[http://newae.com/chipwhisperer/](http://newae.com/chipwhisperer/)*
    )。正如在《[使用ChipWhisperer进行侧信道分析](ch08.html#ch08lev1sec3)》的[第134页](ch08.html#page_134)中讨论的那样，ChipWhisperer是一个用于侧信道攻击的系统，例如功耗分析和时钟故障注入。类似的系统通常价格超过$30,000，但ChipWhisperer是一个开源系统，价格在$1,000到$1,500之间。
- en: '**Red Pitaya Board**'
  id: totrans-62
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**Red Pitaya Board**'
- en: Red Pitaya (*[http://redpitaya.com/](http://redpitaya.com/)*) is an open source
    measurements tool that for around $500 replaces expensive measurement tools such
    as oscilloscopes, signal generators, and spectrum analyzers. Red Pitaya has LabView
    and Matlab interfaces, and you can write your own tools and applications for it.
    It even supports extensions for things like Arduino shields.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Red Pitaya (*[http://redpitaya.com/](http://redpitaya.com/)*) 是一款开源测量工具，售价约为
    500 美元，可以替代昂贵的测量工具，如示波器、信号发生器和频谱分析仪。Red Pitaya 提供 LabView 和 Matlab 接口，你还可以为其编写自己的工具和应用程序。它甚至支持类似
    Arduino 扩展板的扩展。
- en: '**Software**'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**软件**'
- en: As we did with hardware, we’ll focus first on open source tools and then cover
    more expensive ones.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 和硬件一样，我们首先关注开源工具，然后再介绍一些更昂贵的工具。
- en: '***Wireshark***'
  id: totrans-66
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Wireshark***'
- en: Wireshark (*[https://www.wireshark.org/](https://www.wireshark.org/)*) is a
    popular network sniffing tool. It is possible to use Wireshark on a CAN bus network
    as long as you are running Linux and using SocketCAN. Wireshark doesn’t have any
    features to help sort or decode CAN packets, but it could be useful in a pinch.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark (*[https://www.wireshark.org/](https://www.wireshark.org/)*) 是一款流行的网络嗅探工具。只要你使用的是
    Linux 系统并且启用了 SocketCAN，就可以在 CAN 总线网络上使用 Wireshark。Wireshark 本身没有任何功能来帮助排序或解码
    CAN 数据包，但在紧急情况下它可能会有用。
- en: '***PyOBD Module***'
  id: totrans-68
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***PyOBD 模块***'
- en: PyOBD (*[http://www.obdtester.com/pyobd](http://www.obdtester.com/pyobd)*)—also
    known as *PyOBD2* and *PyOBD-II*—is a Python module that communicates with ELM327
    devices (see [Figures A-1](app01.html#app01fig1) and [A-2](app01.html#app01fig2)).
    It’s based on the PySerial library and is designed to give you information on
    your OBD setup in a convenient interface. For a specific scan tool fork of PyOBD,
    see Austin Murphy’s OBD2 ScanTool (*[https://github.com/AustinMurphy/OBD2-Scantool/](https://github.com/AustinMurphy/OBD2-Scantool/)*),
    which is attempting to become a more complete open source solution for diagnostic
    troubleshooting.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: PyOBD (*[http://www.obdtester.com/pyobd](http://www.obdtester.com/pyobd)*)—也叫
    *PyOBD2* 和 *PyOBD-II*—是一个 Python 模块，用于与 ELM327 设备通信（见 [图 A-1](app01.html#app01fig1)
    和 [A-2](app01.html#app01fig2)）。它基于 PySerial 库，旨在提供一个便捷的界面来获取你的 OBD 设置信息。对于 PyOBD
    的特定扫描工具分支，请参考 Austin Murphy 的 OBD2 扫描工具 (*[https://github.com/AustinMurphy/OBD2-Scantool/](https://github.com/AustinMurphy/OBD2-Scantool/)*)，它旨在成为一个更完整的开源诊断故障排除解决方案。
- en: '![image](graphics/a-01.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/a-01.jpg)'
- en: '*Figure A-1: PyOBD running diagnostic tests*'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 A-1: PyOBD 正在运行诊断测试*'
- en: '![image](graphics/a-02.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/a-02.jpg)'
- en: '*Figure A-2: PyOBD reading sensor data*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 A-2: PyOBD 正在读取传感器数据*'
- en: '***Linux Tools***'
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Linux 工具***'
- en: Linux supports CAN drivers out of the box, and SocketCAN provides a simple netlink
    (network card interface) experience when dealing with CAN. You can use its `can-utils`
    suite for a command line implementation, and as open source software, it’s easy
    to extend functionality to other utilities. (See [Chapter 3](ch03.html#ch03) for
    more on SocketCAN.)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 默认支持 CAN 驱动，SocketCAN 提供了一个简单的网卡接口体验来处理 CAN。你可以使用其 `can-utils` 套件进行命令行实现，作为开源软件，它非常容易扩展功能到其他实用程序中。（有关
    SocketCAN 的更多信息，请参见 [第 3 章](ch03.html#ch03)）。
- en: '***CANiBUS Server***'
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***CANiBUS 服务器***'
- en: CANiBUS is a web server written in Go by Open Garages (see [Figure A-3](app01.html#app01fig3)).
    This server allows a room full of researchers to simultaneously work on the same
    vehicle, whether for instructional purposes or team reversing sessions. The Go
    language is portable to any operating system, but you may have issues with low-level
    drivers on certain platforms. For example, even if you’re running CANiBUS on Linux,
    you won’t be able to directly interact with SocketCAN because Go doesn’t support
    the necessary socket flags to initialize the CAN interface. (This problem could
    be addressed by implementing socketcand, but as of this writing, that feature
    has yet to be implemented.) CANiBUS does have a driver for ELM327 that supports
    generic sniffing. You can learn more about CANiBUS at *[http://wiki.hive13.org/view/CANiBUS/](http://wiki.hive13.org/view/CANiBUS/)*
    and can download the source from *[https://github.com/Hive13/CANiBUS/](https://github.com/Hive13/CANiBUS/)*.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '![image](graphics/a-03.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
- en: '*Figure A-3: CANiBUS group-based web sniffer*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '***Kayak***'
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Kayak (*[http://kayak.2codeornot2code.org/](http://kayak.2codeornot2code.org/)*)
    is a Java-based GUI for analyzing CAN traffic. It has several advanced features,
    such as GPS tracking and record and playback capabilities. It utilizes socketcand
    in order to work on other operating systems, so you’ll need at least one Linux-based
    sniffer to support Kayak. (You’ll find more detail on setup and use in “[Kayak](app01.html#app01lev2sec7)”
    on [page 46](ch03.html#page_46).)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '***SavvyCAN***'
  id: totrans-82
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: SavvyCAN is a tool written by Collin Kidder of EVTV.me that uses another framework
    designed by EVTV.me, GVRET, to talk to HW sniffers such as the EVTV Due. SavvyCAN
    is an open source, Qt GUI–based tool that works on multiple operating systems
    (see [Figure A-4](app01.html#app01fig4)). It includes several very nice features,
    such as DBC editor, CAN bus graphing, log file diffing, several reverse engineering
    tools, and all the normal CAN sniffing features you would expect. SavvyCAN doesn’t
    talk to SocketCAN, but it can read in several different logfile formats, such
    as Bushmaster logs, Microchip logs, CRTD formats, and generic CSV-formatted logfiles.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '![image](graphics/a-04.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
- en: '*Figure A-4: SavvyCAN GUI*'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '***O2OO Data Logger***'
  id: totrans-86
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: O2OO (*[http://www.vanheusden.com/O2OO/](http://www.vanheusden.com/O2OO/)*)
    is an open source OBD-II data logger that works with ELM327 to record data to
    a SQLite database for graphing purposes. It also supports reading GPS data in
    NMEA format.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '***Caring Caribou***'
  id: totrans-88
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Caring Caribou (*[https://github.com/CaringCaribou/caringcaribou/](https://github.com/CaringCaribou/caringcaribou/)*),
    written in Python, is designed to be the Nmap of automotive hacking. As of this
    writing, it’s still in its infancy, but it shows a lot of potential. Caring Caribou
    has some unique features, like the ability to brute-force diagnostic services,
    and handles XCP. It also has your standard sniff-and-send CAN functionality and
    will support your own modules.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Caring Caribou (*[https://github.com/CaringCaribou/caringcaribou/](https://github.com/CaringCaribou/caringcaribou/)*),
    用Python编写，旨在成为汽车黑客领域的Nmap。到目前为止，它仍处于起步阶段，但展现出了巨大的潜力。Caring Caribou拥有一些独特的功能，比如能够暴力破解诊断服务，并支持XCP协议。它还具备标准的嗅探和发送CAN功能，并支持自定义模块。
- en: '***c0f Fingerprinting Tool***'
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***c0f指纹识别工具***'
- en: CAN of Fingers (c0f) is an open source tool for fingerprinting CAN bus systems
    that can be found at *[https://github.com/zombieCraig/c0f/](https://github.com/zombieCraig/c0f/)*.
    It has some basic support for identifying patterns in a CAN bus network stream,
    which can be useful when trying to find a specific signal on a noisy bus. (See
    “[Using c0f](ch11.html#ch11lev3sec5)” on [page 206](ch11.html#page_206) for an
    example of c0f at work.)
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: CAN of Fingers (c0f) 是一个开源工具，用于识别CAN总线系统的指纹，可以在 *[https://github.com/zombieCraig/c0f/](https://github.com/zombieCraig/c0f/)*
    找到。它提供了一些基本的支持，用于识别CAN总线网络流中的模式，在尝试找到噪声总线中的特定信号时非常有用。（参见 “[使用c0f](ch11.html#ch11lev3sec5)”
    在 [第206页](ch11.html#page_206)的示例）
- en: '***UDSim ECU Simulator***'
  id: totrans-92
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***UDSim ECU模拟器***'
- en: UDSim (*[https://github.com/zombieCraig/UDSim/](https://github.com/zombieCraig/UDSim/)*)
    is a GUI tool that can monitor a CAN bus and automatically learn the devices attached
    to it by watching communications (see [Figure A-5](app01.html#app01fig5)). It’s
    designed to be used with another diagnostic tool, such as a dealership tool or
    a scan tool from a local automotive store.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: UDSim (*[https://github.com/zombieCraig/UDSim/](https://github.com/zombieCraig/UDSim/)*)
    是一个GUI工具，可以监控CAN总线，并通过观察通信自动学习连接到总线的设备（见[图A-5](app01.html#app01fig5)）。它旨在与其他诊断工具一起使用，如经销商工具或当地汽车商店的扫描工具。
- en: '![image](graphics/a-05.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/a-05.jpg)'
- en: '*Figure A-5: Sample screen from UDSim as it learns modules off a test bench*'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '*图A-5：UDSim在测试台上学习模块时的示例屏幕*'
- en: 'UDSim has three modes: learning, simulation, and attack. In learning mode,
    it identifies modules that respond to UDS diagnostic queries and monitors the
    responses. In simulation mode, it simulates a vehicle on the CAN bus to fool or
    test diagnostic tools. In attack mode, it creates a fuzzing profile for tools
    like Peach Fuzzer (*[http://www.peachfuzzer.com/](http://www.peachfuzzer.com/)*).'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: UDSim有三种模式：学习模式、仿真模式和攻击模式。在学习模式下，它识别出响应UDS诊断查询的模块，并监控其响应。在仿真模式下，它模拟一辆车在CAN总线上，目的是欺骗或测试诊断工具。在攻击模式下，它为类似Peach
    Fuzzer的工具创建模糊测试配置文件 (*[http://www.peachfuzzer.com/](http://www.peachfuzzer.com/)*).
- en: '***Octane CAN Bus Sniffer***'
  id: totrans-97
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Octane CAN总线嗅探器***'
- en: Octane (*[http://octane.gmu.edu/](http://octane.gmu.edu/)*) is an open source
    CAN bus sniffer and injector with a very nice interface for sending and receiving
    CAN packets, including an XML trigger system. Currently, it runs only on Windows.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Octane (*[http://octane.gmu.edu/](http://octane.gmu.edu/)*) 是一个开源的CAN总线嗅探器和注入器，具有非常友好的界面，用于发送和接收CAN数据包，包括一个XML触发系统。目前，它只在Windows上运行。
- en: '***AVRDUDESS GUI***'
  id: totrans-99
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***AVRDUDESS GUI***'
- en: AVRDUDESS (*[http://blog.zakkemble.co.uk/avrdudess-a-gui-for-avrdude/](http://blog.zakkemble.co.uk/avrdudess-a-gui-for-avrdude/)*)
    is a GUI frontend for AVRDUDE written in .NET, though it works fine with Mono
    on Linux. You’ll see AVRDUDESS in action in “[Prepping Your Test with AVRDUDESS](ch08.html#ch08lev2sec9)”
    on [page 139](ch08.html#page_139).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: AVRDUDESS (*[http://blog.zakkemble.co.uk/avrdudess-a-gui-for-avrdude/](http://blog.zakkemble.co.uk/avrdudess-a-gui-for-avrdude/)*)
    是一个为AVRDude设计的GUI前端，使用.NET编写，尽管在Linux上使用Mono也能很好地运行。在 “[使用AVRDUDESS准备你的测试](ch08.html#ch08lev2sec9)”
    中，你会看到AVRDUDESS的实际应用，位于[第139页](ch08.html#page_139)。
- en: '***RomRaider ECU Tuner***'
  id: totrans-101
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***RomRaider ECU调试器***'
- en: RomRaider (*[http://www.romraider.com/](http://www.romraider.com/)*) is an open
    source tuning suite for the Subaru engine control unit that lets you view and
    log data and tune the ECU (see [Figure A-6](app01.html#app01fig6)). It’s one of
    the few open source ECU tuners, and it can handle 3D views and live data logging.
    You’ll need a Tactrix Open Port 2.0 cable and Tactrix EcuFlash software in order
    to download and use the ECU’s firmware. Once you’ve downloaded the flash with
    EcuFlash, you can edit it with RomRaider. The editor is written in Java and currently
    works on Windows and Linux, though EcuFlash isn’t supported on Linux.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: RomRaider (*[http://www.romraider.com/](http://www.romraider.com/)*) 是一款开源调校套件，用于
    Subaru 引擎控制单元，允许您查看、记录数据并调校 ECU（见 [图 A-6](app01.html#app01fig6)）。它是为数不多的开源 ECU
    调校工具之一，能够处理 3D 视图和实时数据记录。您需要一根 Tactrix Open Port 2.0 电缆和 Tactrix EcuFlash 软件来下载并使用
    ECU 的固件。一旦使用 EcuFlash 下载了固件，您可以通过 RomRaider 编辑它。该编辑器是用 Java 编写的，目前支持 Windows 和
    Linux，尽管 EcuFlash 不支持 Linux。
- en: '![image](graphics/a-06.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![image](graphics/a-06.jpg)'
- en: '*Figure A-6: RomRaider tuning editor*'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 A-6：RomRaider 调校编辑器*'
- en: '***Komodo CAN Bus Sniffer***'
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Komodo CAN 总线嗅探器***'
- en: Komodo is a higher-end sniffer with a nice multioperating system—Python SDK.
    It costs around $350 to $450 depending on whether you want a single- or dual-CAN
    interface. Komodo has isolation capabilities to prevent your computer from frying
    if you miswire something, as well as eight general-purpose IO pins you can configure
    to trigger actions from external devices. Komodo comes with some decent software
    to get you up and running, but the real advantage is that you can write your own
    Komodo software.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Komodo 是一款高端嗅探器，具有良好的多操作系统—Python SDK。根据您需要的单通道或双通道 CAN 接口，价格大约为 $350 到 $450。Komodo
    具有隔离功能，可以防止您的计算机在接线错误时被烧毁，还配备了八个通用输入输出引脚，您可以将它们配置为触发外部设备的操作。Komodo 附带了一些不错的软件，让您可以快速上手，但真正的优势是您可以编写自己的
    Komodo 软件。
- en: '***Vehicle Spy***'
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Vehicle Spy***'
- en: Vehicle Spy is a commercial tool from Intrepid Control Systems (*[http://store.intrepidcs.com/](http://store.intrepidcs.com/)*)
    that’s specifically designed for reversing CAN and other vehicle communication
    protocols. The software requires one license per NeoVI or ValueCAN device, both
    proprietary devices for Vehicle Spy. The ValueCAN3 is the cheapest device that
    works with Vehicle Spy. It has one CAN interface and costs about $300\. Add the
    Vehicle Spy Basic software and your cost will be about $1,300.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Vehicle Spy 是 Intrepid Control Systems 的一款商业工具（*[http://store.intrepidcs.com/](http://store.intrepidcs.com/)*)，专门用于反向工程
    CAN 和其他车辆通信协议。该软件要求每个 NeoVI 或 ValueCAN 设备都需要一张许可，这两个设备都是 Vehicle Spy 的专有设备。ValueCAN3
    是与 Vehicle Spy 配合使用的最便宜的设备，具有一个 CAN 接口，价格大约为 $300。添加 Vehicle Spy Basic 软件后，您的总费用将约为
    $1,300。
- en: The NeoIV devices are higher end, with multiple configurable channels, starting
    at around $1,200\. A basic package contains a NeoIV (Red) and Vehicle Spy Basic
    for $2,000, which saves a bit of money. Vehicle Spy Professional costs about $2,600
    without hardware. (You’ll find several options on Intrepid’s site.)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: NeoIV 设备属于高端设备，具有多个可配置通道，起价大约为 $1,200。基础包包含一个 NeoIV（红色）和 Vehicle Spy Basic，售价为
    $2,000，能够节省一些费用。Vehicle Spy Professional 的价格大约为 $2,600，不包括硬件。（您可以在 Intrepid 网站上找到多个选项。）
- en: All Intrepid hardware devices support uploading scripts to run on the bus in
    real time. Vehicle Spy Basic supports CAN/LIN RX/TX operations. You’ll need the
    professional version only if car hacking is going to be a full-time project for
    you or if you want to use ECU flashing or other advanced features, such as Node
    Simulation, scripting on the sniffer, or memory calibration.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 Intrepid 硬件设备都支持上传脚本并实时在总线上运行。Vehicle Spy Basic 支持 CAN/LIN RX/TX 操作。只有当您将汽车黑客攻关作为全职项目，或希望使用
    ECU 刷写或其他高级功能（如节点仿真、嗅探器上的脚本编写或内存校准）时，才需要专业版。
