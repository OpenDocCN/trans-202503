["```\nPS> cd .\\Windows\\\nPS C:\\Windows>\n```", "```\nPS C:\\Windows> dir\n\n    Directory: C:\\Windows\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----        3/18/2019   4:03 PM                addins\nd-----         8/9/2019  10:28 AM                ADFS\nd-----        7/24/2019   5:39 PM                appcompat\nd-----        8/19/2019  12:33 AM                AppPatch\nd-----        9/16/2019  10:25 AM                AppReadiness\n--snip--\n```", "```\nPS> Get-Alias\n```", "```\nPS> foo\nfoo : The term 'foo' is not recognized as the name of a cmdlet, function,\nscript file, or operable program. Check the spelling of the name, or if a\npath was included, verify that the path is correct and try again.\nAt line:1 char:1\n+ foo\n+ ~~~\n    + CategoryInfo          : ObjectNotFound: (foo:String) [], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException\n```", "```\nPS> Get-Command -Name Get-Alias\n\nCommandType     Name                Version    Source\n-----------     ----                -------    ------\nCmdlet          Get-Alias           3.1.0.0    Microsoft.PowerShell.Utility\n```", "```\nPS> Get-Command -Verb Get\n```", "```\nPS> Get-Command -Verb Get -Noun Content\n\nCommandType     Name                Version    Source\n-----------     ----                -------    ------\nCmdlet          Get-Content         3.1.0.0    Microsoft.PowerShell.Management\n```", "```\nPS> Get-Command -Noun Content\n\nCommandType     Name                Version    Source\n-----------     ----                -------    ------\nCmdlet          Add-Content         3.1.0.0    Microsoft.PowerShell.Management\nCmdlet          Clear-Content       3.1.0.0    Microsoft.PowerShell.Management\nCmdlet          Get-Content         3.1.0.0    Microsoft.PowerShell.Management\nCmdlet          Set-Content         3.1.0.0    Microsoft.PowerShell.Management\n```", "```\nPS> Get-Command -Name Get-Content\n\nCommandType     Name                Version    Source\n-----------     ----                -------    ------\nCmdlet          Get-Content         3.1.0.0    Microsoft.PowerShell.Management\n```", "```\nPS> Get-Help Add-Content\n\nNAME\n    Add-Content\n\nSYNOPSIS\n    Appends content, such as words or data, to a file.\n\n--snip--\n```", "```\nPS> Get-Help Add-Content -Examples\n\nNAME\n    Add-Content\nSYNOPSIS\n    Appends content, such as words or data, to a file.\n\n    -------------------------- EXAMPLE 1 --------------------------\n\n    C:\\PS>Add-Content -Path *.txt -Exclude help* -Value \"END\"\n\n    Description\n\n    -----------\n\n    This command adds \"END\" to all text files in the current directory,\n    except for those with file names that begin with \"help.\"\n--snip--\n```", "```\nPS> Get-Help about_Core_Commands\nTOPIC\n    about_Core_Commands\n\nSHORT DESCRIPTION\n    Lists the cmdlets that are designed for use with Windows PowerShell\n    providers.\n\nLONG DESCRIPTION\n    Windows PowerShell includes a set of cmdlets that are specifically\n    designed to manage the items in the data stores that are exposed by Windows\n    PowerShell providers. You can use these cmdlets in the same ways to manage\n    all the different types of data that the providers make available to you.\n    For more information about providers, type \"get-help about_providers\".\n\n    For example, you can use the Get-ChildItem cmdlet to list the files in a\n    file system directory, the keys under a registry key, or the items that\n    are exposed by a provider that you write or download.\n The following is a list of the Windows PowerShell cmdlets that are designed\n    for use with providers:\n\n--snip--\n```", "```\nPS> Get-Help -Name About*\n```"]