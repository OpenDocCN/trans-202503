- en: '**1**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**PREPARATION**'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00015.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Planning, kickoff meetings, contracts. A bit mundane, right? I can think of
    no penetration tester who prefers the paperwork part of the job to the hacking
    portion. That said, some preparation work is required to pull off a successful
    test and not end up in a world of trouble. Without proper planning and notifications,
    your penetration testing could violate laws or legal agreements, potentially ending
    your infosec career. I promise, a small amount of pre-work can be completed quickly
    and will result in a better-quality penetration test that will cement your place
    among the top tier of security professionals—so read on, friend!
  prefs: []
  type: TYPE_NORMAL
- en: This chapter focuses on the steps needed to properly design and launch a cloud-focused
    penetration test. We’ll begin by considering what to include in the project scope
    and why scoping is even more important than usual when a cloud service, such as
    Azure, is involved. From there, we’ll move on to obtaining permission and some
    important rules to follow.
  prefs: []
  type: TYPE_NORMAL
- en: '**A Hybrid Approach**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: With more and more corporations placing parts of their IT infrastructure in
    the cloud, it has become hard to differentiate internal applications from public-facing
    services. As a professional penetration tester working in a cloud-focused company,
    I’ve seen a number of requests to assess a new cloud deployment. Whenever I see
    such a request, I always push to increase the scope of the test to cover both
    the cloud portion and any related on-premises components, including non-cloud-based
    data stores, user accounts for employees working on the cloud projects, employee
    workstations, and test environments.
  prefs: []
  type: TYPE_NORMAL
- en: The number of findings I have at the end of a project seems to grow exponentially
    when I am permitted to look at a group’s internal, external, and cloud-based assets—for
    a few reasons.
  prefs: []
  type: TYPE_NORMAL
- en: '***Teams Don’t Always Have Cloud Experience***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: For many IT professionals and software engineers, the cloud is a whole new world.
    Sure, a lot of services look and seem similar to what used to run inside of the
    corporation, but many behave slightly differently from what users have grown accustomed
    to. When these differences are ignored or misunderstood, it can lead to vulnerabilities
    that attackers can exploit.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, the most common security architecture in the 1990s and 2000s was
    to place everything on a trusted internal network and then put all the security
    around the perimeter. This layout looked a lot like a castle of old—and just like
    the castle, changing technology has rendered it obsolete. Perimeter security doesn’t
    work when half your services are sitting on shared servers connected to the internet.
  prefs: []
  type: TYPE_NORMAL
- en: Designing security for a cloud environment is possible but requires planning,
    foresight, and experience that many engineers don’t yet have. Absent this knowledge,
    it is common to run into all kinds of poorly conceived cloud deployments.
  prefs: []
  type: TYPE_NORMAL
- en: '***Clouds Are Reasonably Secure by Default***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This may seem a bit strange to read in a book about pentesting cloud services,
    but it is true: clouds are reasonably secure by default. When a customer goes
    to a cloud service provider’s portal and clicks through the steps to create a
    virtual machine (VM), the resulting system is usually locked down. Providers have
    base images that have firewalls turned on, antivirus pre-installed, and only one
    administrator present. As a penetration tester, this means that if you’re told
    to limit your scope to one cloud-hosted server, and you can’t include anything
    else in the test, you’re likely to fail. It isn’t until you expand the scope that
    things get interesting.'
  prefs: []
  type: TYPE_NORMAL
- en: For example, perhaps the administrator of that VM reuses their password all
    over the place. Maybe they’d click a phishing email. My personal favorite is when
    an administrator leaves the password they use to connect to the cloud platform
    sitting in a text file on a network share. The problem is, if the scope is limited
    to just that cloud VM, you can’t test any of these things. An assessment with
    this kind of limited scope will give those requesting the test the wrong impression
    that their cloud assets are impenetrable. In reality, a black hat (malicious)
    attacker would use any of these methods to gain the desired access.
  prefs: []
  type: TYPE_NORMAL
- en: '***It’s All Connected***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As John Donne reminded us, “No man is an island.” In other words, all of humanity
    is interconnected. So too are our corporate networks, cloud services, and the
    internet. Frequently in my testing, I will use a foothold on a corporate workstation
    to gain access to a cloud service. Once into the cloud service, I’ll find something
    that gives me access to some other corporate resource I was previously unaware
    of or unable to crack. Use these links to your advantage; a real attacker wouldn’t
    hesitate to do so.
  prefs: []
  type: TYPE_NORMAL
- en: '**Getting Permission**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once the scope of the assessment has been established, the next step is to obtain
    the required permission. After all, without permission, a penetration test could
    be considered black hat hacking. I don’t want you to be sued or fired or go to
    jail! Therefore, it is important to follow the steps discussed in this section.
  prefs: []
  type: TYPE_NORMAL
- en: '***Scope the Assessment***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Establishing a thorough *scope* that defines exactly which systems will be targeted,
    which methods will be used, and when the assessment will take place, and having
    it approved by all parties, is crucial to any penetration test. This is important
    during a conventional, on-premises assessment because you probably don’t want
    to waste time targeting a bunch of servers that are being decommissioned at the
    end of the week, nor do you want to take down that one production server with
    known issues that are being remediated.
  prefs: []
  type: TYPE_NORMAL
- en: That said, scoping a penetration test with a cloud component is *significantly*
    more important. Whereas when working on a corporate network you are likely to
    be (directly) impacting only your target organization, in the cloud a poorly planned
    scope could result in an attack against a different customer of the same cloud
    service provider or even the provider itself! Imagine finding out that the internet
    protocol (IP) address you thought belonged to your company’s Azure subscription
    was actually being used by the state department of a foreign nation—and you just
    found and exploited a vulnerability in one of their systems. That sounds like
    the beginning of an international incident I would desperately want to avoid.
  prefs: []
  type: TYPE_NORMAL
- en: 'For that reason, I suggest forgoing *black box testing* (where the tester has
    very limited or no knowledge of the targets at the beginning of the test). Instead,
    insist on a more open approach where you are given at least the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Target subscription identifier(s)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any IPs or hostnames of the services you are to target
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A list of service types in the subscription and to which IPs they map
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The goals and desired outcome of the engagement
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**WARNING**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Some services will have IP addresses dedicated to just your target, but others
    may be shared among multiple customers on the same infrastructure. Doing a broad
    scan against one of these IPs would be a definite rule violation.*'
  prefs: []
  type: TYPE_NORMAL
- en: Another important consideration when developing your scope is organizational
    policy. For external testers, this includes the rules of both your firm and the
    target organization. A number of large companies have internal procedures that
    dictate what is out of bounds in security testing (and sometimes, what *must*
    be included). Violating these mandates can end your employment, or worse. If you
    identify a method or service that is forbidden but that you feel is crucial to
    an accurate assessment, be sure to bring up your concerns with management, corporate
    attorneys, and the policy authors. You may end up with an exemption; at worst,
    you can document and explain the omission in your final report.
  prefs: []
  type: TYPE_NORMAL
- en: '***Notify Microsoft***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Once the scope is complete, you may need permission from the cloud provider—in
    our case, Microsoft. Each provider has its own set of rules that restrict the
    types of penetration testing permitted and what notification needs to be given,
    if any. Microsoft is actually pretty permissive in terms of the types of penetration
    testing it allows customers to perform against their own subscriptions’ resources,
    but it does appreciate advance notice. This is another reason why black box testing
    isn’t practical in the cloud: the Azure penetration test notification form asks
    for details of the assessment that wouldn’t be known ahead of time in a black
    box test.'
  prefs: []
  type: TYPE_NORMAL
- en: '**WARNING**'
  prefs: []
  type: TYPE_NORMAL
- en: '*The cloud provider’s rules and requirements are subject to change at any time.
    Always check the provider’s website for the latest policies.*'
  prefs: []
  type: TYPE_NORMAL
- en: As of this writing, submitting the notification form and receiving confirmation
    from Microsoft is suggested, though not required. Scans using a commercial vulnerability
    scanner such as Qualys’s Vulnerability Management or Tenable’s Nessus don’t need
    any formal announcement. Additionally, you can forgo the form if you are just
    scanning for the Open Web Application Security Project’s (OWASP) top-ten web vulnerabilities,
    doing fuzzing, or port-scanning a few resources. For all other testing, it is
    best to submit notice.
  prefs: []
  type: TYPE_NORMAL
- en: 'To submit a notification form, visit *[https://portal.msrc.microsoft.com/en-us/engage/pentest](https://portal.msrc.microsoft.com/en-us/engage/pentest)*
    and provide the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: Email account used to log in to Azure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Subscription ID
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contact information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test start and end dates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test description
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An acknowledgment of the terms and conditions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Figure 1-1](part0010.html#ch01fig1) shows an example of this form. Note that
    a penetration test period can be at most six months in length. For longer tests,
    the form will need to be resubmitted.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00016.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-1: The Azure penetration test notification form*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The form also requires you to acknowledge and accept the testing terms and
    conditions. Microsoft publishes a list of Azure penetration testing rules at *[https://portal.msrc.microsoft.com/en-us/engage/pentest#pentestterms](https://portal.msrc.microsoft.com/en-us/engage/pentest#pentestterms)*.
    Here are a few key takeaways from these rules:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Test only subscriptions you have explicit permission to test.**'
  prefs: []
  type: TYPE_NORMAL
- en: Testing will be approved only for subscriptions that you or your company own,
    or those that you have explicit permission from the owner to test. This rule is
    easy to follow. Just be sure to have a solid scoping agreement, send the scope
    of the test to the Azure security team using the form, and then follow it!
  prefs: []
  type: TYPE_NORMAL
- en: '**Perform only the testing you described in the form.**'
  prefs: []
  type: TYPE_NORMAL
- en: It can often be tempting during an assessment to start pulling new resources
    into scope as you discover systems or services you didn’t know about previously
    (this is commonly referred to as *scope creep*). However, that will get you into
    trouble if you don’t submit an updated notification form. Similarly, don’t start
    hammering away with a new tool you just found; provide notification first.
  prefs: []
  type: TYPE_NORMAL
- en: '**Do not target Microsoft services or those of other customers.**'
  prefs: []
  type: TYPE_NORMAL
- en: 'You were very precise when writing the scoping document and only included your
    target’s assets, right? If so, this shouldn’t be an issue. Just remember that
    resources are a bit fluid in the cloud: servers may be shared and IPs can change.
    When in doubt, confirm a target is owned by your employer before proceeding, and
    double-check that you received acknowledgment from Microsoft.'
  prefs: []
  type: TYPE_NORMAL
- en: '**WARNING**'
  prefs: []
  type: TYPE_NORMAL
- en: '*For Platform as a Service (PaaS) resources, such as Azure Web Apps, the underlying
    server may be hosting websites for multiple customers, and these are therefore
    off limits for host-based attacks. This is what makes scoping in the cloud so
    much more complicated than in on-premises environments.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you find a flaw in Azure itself, report it to Microsoft.**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Microsoft is fairly strict with this last point—you are required to report
    any identified Azure Fabric vulnerabilities within 24 hours and must not disclose
    them elsewhere for 90 days. There is a bright side, though: you may be able to
    submit these findings to the Microsoft Online Services Bug Bounty program (as
    long as they meet that program’s requirements). Finding such a bug means a bit
    of additional work, but it can also mean a decent payout, plus public recognition
    from Microsoft. To find out more about the Bug Bounty program, see *[https://technet.microsoft.com/en-us/security/dn800983/](https://technet.microsoft.com/en-us/security/dn800983/).*'
  prefs: []
  type: TYPE_NORMAL
- en: '***Obtain a “Get Out of Jail Free” Card***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Borrowing a term from the board game *Monopoly*, a *Get Out of Jail Free card*
    is a document that proves you have permission to perform the actions involved
    in a penetration test. The letter should clearly state who the testers are, the
    scope of the activities you are authorized to perform, and the start and end dates
    of the test. It should be signed by the penetration test lead, a high-level manager
    at the company being assessed, and, if the penetration tester is external to that
    organization, a manager at the firm performing the test. Ideally, the letter should
    also contain some means to validate that it is legitimate and not forged, such
    as contact information for the managers. (I’ve heard of some testers actually
    carrying both forged and legitimate letters, to make sure there are procedures
    in place to validate what a potential attacker is saying.)
  prefs: []
  type: TYPE_NORMAL
- en: The letter can be used by the penetration tester if approached by corporate
    security officers or members of a blue team who question the attacker. It could
    also be shown to law enforcement officers if needed, though don’t be confused
    by the name—if you are being detained, it is unlikely that the police would release
    you simply because you have such a form. Although these letters are most useful
    when an assessment of physical security is being performed, I like to have one
    even when a physical evaluation is not in scope for a test. It provides proof
    that the actions I’m taking are authorized, so even if a meteor tragically crushes
    my management chain while they are at an offsite meeting, I can show that my hacks
    last week weren’t malicious.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are looking for a letter to use as a template, penetration tester extraordinaire
    and SANS Faculty Fellow Ed Skoudis has one on his website at *[http://www.counterhack.net/permission_memo.html](http://www.counterhack.net/permission_memo.html)*.
    Ed also offers this excellent advice to his students: have your lawyer review
    your letter (as well as any contracts and other agreements related to penetration
    testing). What works for one organization in one location might not work for you.
    If you are a corporate penetration tester, your company’s legal team can help.
    If you are an independent contractor, retain counsel to represent you. Hacking
    (even with permission) is a risky business.'
  prefs: []
  type: TYPE_NORMAL
- en: '***Be Aware of and Respect Local Laws***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Speaking of consulting with lawyers, work with your counsel to determine if
    any national, regional, or local laws may restrict the types of activities you
    can perform in a penetration test or if special care needs to be taken for any
    particular servers or types of data. For example, some regulations require that
    customers or patients be notified if their financial or medical records are accessed
    improperly. Does access by a penetration tester fall under these disclosure requirements?
    It is far better to ask an attorney than to make an assumption.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, be concerned with not only the location of the penetration tester
    but also that of the target servers, target corporation headquarters and field
    offices, and, if applicable, the security firm performing the test. Because laws
    can vary between all of these entities’ locations, it is important to be aware
    of the rules in every place your assessment will reach. This can be particularly
    tricky when looking at cloud resources. After all, what if a server is migrated
    between regions during your testing? It may not be apparent that anything has
    happened, but suddenly your target is in a new country with vastly different laws.
    Be sure to discuss this concern with your client when scoping the test to ensure
    that you are aware of any possible localities its services may reside in during
    the assessment window. If a customer wants to test a system that resides in a
    country with unfavorable penetration testing regulations, the customer might even
    consider migrating the resources to a different region during the test. Just make
    sure the configuration of the service isn’t changed during the relocation, or
    it could result in incorrect findings.
  prefs: []
  type: TYPE_NORMAL
- en: '**Summary**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this chapter, I discussed the importance of testing cloud services and the
    company network simultaneously to ensure the best coverage. I also discussed how
    to notify or get permission from all the relevant parties before performing a
    penetration test and how to avoid the criminal justice system.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we’ll get into hacking with methods to gain access to your target’s Azure
    subscription.
  prefs: []
  type: TYPE_NORMAL
