- en: '**11'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**11'
- en: FORENSIC TRACES OF ATTACHED PERIPHERAL DEVICES**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 附加外设设备的取证痕迹**
- en: '![Image](Images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/common01.jpg)'
- en: In this chapter, peripheral devices refer to externally connected hardware such
    as storage, cameras, webcams, printers, scanners, mobile devices, and so on. We
    will try to identify and analyze these attached devices from traces in the logs
    and configuration files. From a forensics perspective, we are attempting to learn
    as much about the devices as possible; in particular, any unique identifying information
    and evidence of use. Knowing what devices were attached to a system and how they
    were used helps to reconstruct past events and activity.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，外设设备指的是诸如存储设备、摄像头、网络摄像头、打印机、扫描仪、移动设备等外部连接的硬件。我们将通过日志和配置文件中的痕迹尝试识别和分析这些附加设备。从取证的角度来看，我们试图尽可能多地了解这些设备，特别是任何独特的识别信息和使用证据。了解哪些设备连接到系统以及它们是如何被使用的，有助于重建过去的事件和活动。
- en: You may notice the absence of Bluetooth devices in this chapter. They are also
    considered peripherals, but they’re covered together with the other wireless analysis
    topics in [Chapter 8](ch08.xhtml).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到本章中缺少了蓝牙设备。它们也被视为外设，但它们与其他无线分析主题一起在[第8章](ch08.xhtml)中讨论。
- en: '**Linux Peripheral Devices**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Linux外设设备**'
- en: The most common interfaces used to connect external peripheral devices are USB
    and Thunderbolt. USB devices make up the vast majority of externally attached
    devices, far outnumbering any other external interface. Thunderbolt’s physical
    interface now uses USB3C and provides the ability to connect PCI Express devices.
    In addition, Fibre Channel (FC) and serial attached SCSI (SAS) PCI boards provide
    external interfaces that are found primarily in enterprise environments.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 用于连接外部外设设备的最常见接口是USB和Thunderbolt。USB设备占据了外部连接设备的绝大多数，远远超过任何其他外部接口。Thunderbolt的物理接口现在使用USB3C，并提供连接PCI
    Express设备的能力。此外，Fibre Channel（FC）和串行附加SCSI（SAS）PCI板卡提供的外部接口主要出现在企业环境中。
- en: '***Linux Device Management***'
  id: totrans-7
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Linux设备管理***'
- en: As mentioned in [Chapter 2](ch02.xhtml), when Unix was first developed, a core
    philosophy (that Linux adopted) was “everything is a file.” This revolutionary
    idea enabled access to hardware devices through special files that interacted
    with the kernel.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第2章](ch02.xhtml)中所述，Unix最初开发时，一个核心理念（Linux也采纳了这一理念）是“任何事物都是文件”。这一革命性的思想使得可以通过与内核交互的特殊文件来访问硬件设备。
- en: Device files can be one of two types (block or character), and they have associated
    numbers (major and minor) that specify the class and instance of a device. Character
    devices are sequentially accessed (or streamed) one byte at a time, and they’re
    used for keyboards, video, printers, and other serial devices. Block devices are
    accessed in block-sized chunks, can be cached or randomly accessed, and are typically
    used for storage devices.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 设备文件可以分为两种类型（块设备或字符设备），它们具有关联的编号（主设备号和次设备号），用于指定设备的类别和实例。字符设备是按顺序访问（或流式传输）一个字节一个字节地访问，通常用于键盘、视频、打印机和其他串行设备。块设备则按块大小进行访问，可以进行缓存或随机访问，通常用于存储设备。
- en: Device files are normally located in the */dev/* directory and are created dynamically
    by the udev daemon (systemd-udevd). The */dev/* directory is a pseudo-filesystem
    that a running kernel provides in memory. Thus, the device files in this directory
    will not exist during a postmortem forensic examination.^([1](footnotes.xhtml#ch11foot_01))
    Device files are not required to be in */dev/* and can be created anywhere using
    the `mknod` command or `mknod` system call. However, a device file anywhere outside
    */dev/* is suspicious and worth closer examination.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 设备文件通常位于*/dev/*目录下，并由udev守护进程（systemd-udevd）动态创建。*/dev/*目录是一个伪文件系统，由正在运行的内核在内存中提供。因此，本目录中的设备文件在尸检取证检查中是不存在的。^([1](footnotes.xhtml#ch11foot_01))
    设备文件不一定必须位于*/dev/*目录下，也可以通过`mknod`命令或`mknod`系统调用在任何地方创建。然而，任何位于*/dev/*目录之外的设备文件都是可疑的，值得进一步检查。
- en: 'The systemd-udevd daemon notices when devices are attached or removed from
    the system by the kernel, and sets up the appropriate device files using udev
    rules specified in rule files. Software packages may create udev rule files in
    the */usr/lib/udev/rules.d/* directory, and system administrators create custom
    udev rule files in the */etc/udev/rules.d/* directory. Here is an example of a
    udev rule file:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: systemd-udevd守护进程会注意到设备何时被内核附加或移除，并使用在规则文件中指定的udev规则设置相应的设备文件。软件包可能会在*/usr/lib/udev/rules.d/*目录中创建udev规则文件，而系统管理员则在*/etc/udev/rules.d/*目录中创建自定义的udev规则文件。以下是一个udev规则文件的示例：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The system owner (`sam`) created a rule for a Nitrokey authentication stick
    with a USB device ID of 20a0:4108 to define how the permissions and group ownership
    are set.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 系统所有者（`sam`）为一个USB设备ID为20a0:4108的Nitrokey身份验证设备创建了一个规则，定义了如何设置权限和组所有权。
- en: An examination of */etc/udev/rules.d/* will reveal any files tweaked or created
    by the system’s owner. See the udev(7) man page for more information about udev.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 检查*/etc/udev/rules.d/*将显示任何由系统所有者调整或创建的文件。有关udev的更多信息，请参见udev(7)手册页。
- en: '***Identify Attached USB Devices***'
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***识别连接的USB设备***'
- en: USB indexUSB deviceswas created to consolidate and replace aging external peripheral
    interfaces such as RS-232, the parallel printer interface, PS/2 keyboard and mouse,
    and other proprietary PC interfaces. It was designed to accommodate multipurpose
    functionality such as disks, keyboards, mice, sound, network connections, printing
    and scanning, and connecting small devices (mobile phones and the like). A growing
    number of IoT devices can be attached to a PC via USB and may contain data useful
    as forensic evidence.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: USB索引USB设备被创建用以整合和替代老化的外部外设接口，如RS-232、并行打印机接口、PS/2键盘和鼠标以及其他专有PC接口。它旨在支持多功能应用，如磁盘、键盘、鼠标、声音、网络连接、打印和扫描，以及连接小型设备（如手机）。越来越多的物联网设备可以通过USB连接到PC，并且可能包含作为法医证据有用的数据。
- en: 'During a forensic examination, creating a list of attached USB devices will
    help answer questions related to an investigation, providing information such
    as:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在法医检查过程中，创建连接的USB设备列表将有助于回答与调查相关的问题，提供诸如以下信息：
- en: Indication of human proximity
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人员接近的指示
- en: Activity at a certain point in time
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某一时刻的活动
- en: Additional devices to find and analyze
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他设备的查找与分析
- en: Association of a particular device to the system under analysis
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将特定设备与分析中的系统关联
- en: In the context of a forensic investigation, we are especially interested in
    unique identifiers and timestamps. The unique identifiers will link a particular
    device to a particular computer within the context of an incident or crime. USB
    unique identifiers may include hardware serial numbers or UUIDs stored in the
    device firmware or in the device’s memory. When trying to identify USB devices,
    we can examine logfiles, configuration files, and other persistent data.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在法医调查的背景下，我们特别关注唯一标识符和时间戳。唯一标识符将把特定设备与事件或犯罪中的特定计算机关联起来。USB唯一标识符可能包括存储在设备固件或设备内存中的硬件序列号或UUID。在尝试识别USB设备时，我们可以检查日志文件、配置文件和其他持久化数据。
- en: 'USB devices appear in the kernel logs like this:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: USB设备会出现在内核日志中，如下所示：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This example shows that an Apple AirPod charging case was connected on December
    30 at 9:13 AM (`09:13:20`). The serial number provides a unique identification.
    The disconnect log entry shows the AirPod case was unplugged several minutes later.
    When analyzing storage device logs, the device number and USB port (`36` and `5-3.2`
    in this example) are the only information shown in the kernel logs upon removal
    of the device. These provide an association to the other log entries that contain
    more detailed device information (manufacturer, product, serial number, and so
    on).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子显示了一个Apple AirPod充电盒在12月30日上午9:13（`09:13:20`）连接。序列号提供了唯一的标识。断开连接的日志条目显示，AirPod充电盒几分钟后被拔出。在分析存储设备日志时，设备号和USB端口（在这个例子中是`36`和`5-3.2`）是从内核日志中移除设备时唯一显示的信息。这些提供了与其他包含更详细设备信息（如制造商、产品、序列号等）的日志条目的关联。
- en: From a forensics perspective, the insertion and removal timestamps are interesting.
    They provide an indicator that a person was in physical proximity of the computer
    when the device was plugged in and unplugged, and suggest a possible duration
    of use. Other logs and information may need to corroborate with these timestamps
    before definite usage conclusions can be made. The port where the USB device was
    inserted indicates which physical connector was used to plug in the device. This
    could be useful information, for example, if the USB device was plugged in to
    a server in the middle of a row of racks; the front or back location could correlate
    with activity observed in data center CCTV footage.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 从取证的角度来看，插入和移除的时间戳是有意义的。它们提供了一个指示，表明某人在设备插入和拔出时处于计算机的物理接近位置，并且可以推测使用时长。在得出确切的使用结论之前，可能需要其他日志和信息来验证这些时间戳。USB设备插入的端口表示使用了哪个物理连接器。这些信息可能很有用，例如，如果USB设备被插入到机架一排中的服务器中，那么前端或后端的位置可能与数据中心的CCTV监控录像中的活动相吻合。
- en: 'Video conferencing has become more popular recently, and Linux supports video
    conferencing software like Zoom, Teams, Jitsi, and more. This software relies
    on USB webcams and microphones (internal on laptops; external on desktops). These
    devices can be found in the same manner as other devices described in this section,
    but Linux manages video devices through the Video4Linux (V4L) framework, which
    is part of the Linux media subsystem. When a video device is attached to a Linux
    system, the kernel detects it and a */dev/video0* device is created (multiple
    cameras will appear as */dev/video1*, */dev/video2*, and so on). Typical video
    devices include webcams, digital video cameras, TV tuners, and video grabbers.
    Here’s an example:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 视频会议最近变得越来越流行，Linux支持Zoom、Teams、Jitsi等视频会议软件。这些软件依赖于USB网络摄像头和麦克风（笔记本电脑为内置，台式机为外置）。这些设备可以以与本节描述的其他设备相同的方式进行查找，但Linux通过Video4Linux（V4L）框架来管理视频设备，该框架是Linux媒体子系统的一部分。当视频设备连接到Linux系统时，内核会检测到它并创建一个*/dev/video0*设备（多个摄像头将显示为*/dev/video1*、*/dev/video2*，依此类推）。典型的视频设备包括网络摄像头、数码摄像机、电视调谐器和视频采集卡。以下是一个示例：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here, the USB device is detected with make/model/serial information, and then
    the Linux video driver is started, which enables the use of video equipment for
    recording, video conferencing, or watching television.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，USB设备通过制造商/型号/序列号信息被检测到，随后启动Linux视频驱动程序，使得可以使用视频设备进行录制、视频会议或观看电视。
- en: A list of known USB hardware IDs can be found in the */usr/share/hwdata/ usb.ids*
    file or from the *[http://www.linux-usb.org/usb-ids.html](http://www.linux-usb.org/usb-ids.html)*
    website. This list is formatted by vendor, device, and interface name, and is
    maintained by community effort.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 已知的USB硬件ID列表可以在*/usr/share/hwdata/usb.ids*文件中找到，或者在* [http://www.linux-usb.org/usb-ids.html](http://www.linux-usb.org/usb-ids.html)*网站上查阅。这个列表按供应商、设备和接口名称进行格式化，由社区共同维护。
- en: '***Identify PCI and Thunderbolt Devices***'
  id: totrans-31
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***识别PCI和Thunderbolt设备***'
- en: PCI Express or PCIe (Peripheral Component Interconnect Express) is a specification
    (*[https://pcisig.com/](https://pcisig.com/)*) for a bus interface to attach PCIe
    devices. PCIe devices are typically cards plugged in to PCIe slots on the mainboard
    or devices integrated into the mainboard itself.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: PCI Express或PCIe（外设组件互连快车）是一种规范（*[https://pcisig.com/](https://pcisig.com/)*)，用于为连接PCIe设备提供总线接口。PCIe设备通常是插入主板上PCIe插槽的卡，或者是集成到主板中的设备。
- en: 'Finding PCIe devices in the logs depends on the device’s kernel module, with
    some modules logging more than others. The following example shows a kernel module
    logging information about a PCIe device:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在日志中查找PCIe设备依赖于设备的内核模块，有些模块记录的信息比其他模块更多。以下示例展示了一个内核模块记录PCIe设备信息：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here an Nvidia GP107 PCIe graphics card is detected in the physical slot (bus)
    2 of the mainboard. We can analyze the kernel logs describing the physical PCIe
    slots and associate them with PCIe devices that were detected.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这里检测到一张Nvidia GP107 PCIe显卡插在主板的物理插槽（总线）2中。我们可以分析描述物理PCIe插槽的内核日志，并将其与已检测到的PCIe设备关联起来。
- en: The string `0000:02:00.0` in the above example is represented in `<domain>:`
    `<bus>:<device>.<function>` format. This format describes where the PCIEe device
    is located in the system, and the function number for multifunction devices. The
    string `[10de:1c82]` refers to the device vendor (NVIDIA) and the product (GP107).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例中的字符串 `0000:02:00.0` 以 `<domain>:` `<bus>:<device>.<function>` 格式表示。此格式描述了
    PCIEe 设备在系统中的位置，以及多功能设备的功能号。字符串 `[10de:1c82]` 表示设备厂商（NVIDIA）和产品（GP107）。
- en: For a list of known PCI hardware IDs, see the */usr/share/hwdata/pci.ids* file
    or the *[http://pci-ids.ucw.cz/](http://pci-ids.ucw.cz/)* website. These lists
    are formatted by vendor, device, subvendor, and subdevice names, and are maintained
    by community effort. The pci.ids(5) man page describes the file in more detail.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 若要查看已知的 PCI 硬件 ID 列表，请参阅 */usr/share/hwdata/pci.ids* 文件或 *[http://pci-ids.ucw.cz/](http://pci-ids.ucw.cz/)*
    网站。这些列表按厂商、设备、子厂商和子设备名称格式化，由社区共同维护。pci.ids(5) 手册页详细描述了该文件。
- en: Thunderbolt was developed jointly by Apple and Intel as a high-speed external
    interface to connect disks, video displays, and PCIe devices using a single interface.
    Using the code name Light Peak, it was originally intended to be a fiber-optic
    connection. Apple is largely responsible for Thunderbolt’s popularity (primarily
    among Apple users), promoting it with Apple hardware.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Thunderbolt 是由 Apple 和 Intel 联合开发的高速外部接口，用于通过单一接口连接磁盘、视频显示器和 PCIe 设备。以代号 Light
    Peak 开发，最初计划为光纤连接。Apple 在 Thunderbolt 的普及上起到了主导作用（主要是在 Apple 用户中），通过 Apple 硬件推广该技术。
- en: The physical interface uses Mini DisplayPort for Thunderbolt 1 and Thunderbolt
    2, and transitions to the USB Type-C cable and connector for
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 物理接口使用 Mini DisplayPort 作为 Thunderbolt 1 和 Thunderbolt 2 的接口，Thunderbolt 3 则采用
    USB Type-C 电缆和连接器。
- en: Thunderbolt 3\. The Thunderbolt 3 interface combines PCIe, DisplayPort, and
    USB3 into a single interface. Thunderbolt 1, 2, and 3 offer speeds of 10, 20,
    and 40Gbps, respectively.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Thunderbolt 3\. Thunderbolt 3 接口将 PCIe、DisplayPort 和 USB3 集成到一个单一接口中。Thunderbolt
    1、2 和 3 分别提供 10、20 和 40Gbps 的传输速度。
- en: 'The following example shows a Thunderbolt device connected to a Linux laptop:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例显示了连接到 Linux 笔记本的 Thunderbolt 设备：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The logs show that a Thunderbolt gigabit Ethernet adapter was inserted on at
    10:45 on December 30 and was unplugged several minutes later (10:50). On this
    machine, the systemd-networkd daemon is managing the network and notices the Ethernet
    link status (carrier).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 日志显示，在 12 月 30 日的 10:45 插入了一个 Thunderbolt 千兆以太网适配器，并在几分钟后（10:50）拔出。在这台机器上，systemd-networkd
    守护进程正在管理网络，并监视以太网链接状态（承载）。
- en: Thunderbolt 3 introduced several security features to mitigate unauthorized
    access to memory via direct memory access (DMA).^([2](footnotes.xhtml#ch11foot_02))
    The `boltd` daemon (seen in the preceding example) manages the authorization of
    Thunderbolt 3 devices that have a security level enabled.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Thunderbolt 3 引入了几项安全功能，以通过直接内存访问（DMA）来减轻未经授权的内存访问风险。^([2](footnotes.xhtml#ch11foot_02))
    `boltd` 守护进程（在前面的示例中看到）管理启用安全级别的 Thunderbolt 3 设备的授权。
- en: '**Printers and Scanners**'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**打印机和扫描仪**'
- en: Printing and printers have been part of Unix computing since the beginning.
    One of the first applications of Unix was to perform text formatting^([3](footnotes.xhtml#ch11foot_03))
    for printing documents (patent applications) at Bell Labs.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 打印和打印机自 Unix 计算开始以来一直是其一部分。Unix 最早的一个应用就是在贝尔实验室进行文档（专利申请）的文本格式化^([3](footnotes.xhtml#ch11foot_03))。
- en: 'Printers and scanners serve as the bridge between the digital and physical
    worlds of documentation. Printers and scanners perform opposite functions: one
    converts electronic files into paper documents, and the other converts paper documents
    into electronic files. Both are standard components'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 打印机和扫描仪作为数字世界与物理世界之间的桥梁。打印机和扫描仪执行相反的功能：一个将电子文件转化为纸质文档，另一个则将纸质文档转化为电子文件。两者都是标准组件。
- en: in offices today and are well supported by Linux systems. Analysis of printing
    and scanning is a standard part of a forensic examination when identifying artifacts
    left behind on a Linux system.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的办公室中都有打印机和扫描仪，并且 Linux 系统对此有很好的支持。打印和扫描分析是法医检查的标准部分，用于识别 Linux 系统上遗留下来的文档痕迹。
- en: '***Analysis of Printers and Printing History***'
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***打印机和打印历史分析***'
- en: Traditional Unix printing commonly used the BSD line printer daemon (`lpd`)
    to accept and queue print jobs for installed printers. Modern Linux systems adopted
    the common Unix printing system (CUPS), which has had significant involvement
    and support from Apple since it was originally used in its Unix-based OS X operating
    system. Forensic analysis of the printing system may reveal information about
    past printing activity.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的 Unix 打印通常使用 BSD 行打印机守护进程（`lpd`）接受并排队安装打印机的打印作业。现代 Linux 系统采用了通用的 Unix 打印系统（CUPS），自从最初在基于
    Unix 的 OS X 操作系统中使用以来，得到了 Apple 的显著支持和参与。对打印系统的取证分析可能会揭示过去的打印活动信息。
- en: The CUPS software package can be configured to use printers that are directly
    connected (typically via USB) or over a network. When printing over a network,
    a variety of protocols are available (IPP, lpr, HP JetDirect, and more), with
    the internet printing protocol (IPP) being preferred. The `cupsd` daemon listens
    for print requests and manages the printing system through a local web server
    on TCP port 631.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: CUPS 软件包可以配置为使用直接连接的打印机（通常通过 USB）或通过网络连接的打印机。通过网络打印时，可以使用多种协议（如 IPP、lpr、HP JetDirect
    等），其中推荐使用互联网打印协议（IPP）。`cupsd` 守护进程监听打印请求，并通过 TCP 端口 631 上的本地 web 服务器管理打印系统。
- en: 'The */etc/cups/* directory contains the CUPS configuration, and individual
    printers are added to the *printers.conf* file (using the CUPS interface or a
    GUI provided by the distro). Here’s an example */etc/cups/printers.conf* file:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*/etc/cups/* 目录包含 CUPS 配置，单个打印机添加到 *printers.conf* 文件中（通过 CUPS 界面或由发行版提供的 GUI）。以下是一个示例
    */etc/cups/printers.conf* 文件：'
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The printer name `bro` is specified with `<printer bro>` and `</printer>` tags
    (this HTML-like tagging allows multiple printers to be configured in the same
    file). Information about the make and model is recorded, and several time-stamps
    are updated when the printer configuration or attributes change.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 打印机名称 `bro` 由 `<printer bro>` 和 `</printer>` 标签指定（这种类似 HTML 的标记方式允许在同一文件中配置多个打印机）。有关品牌和型号的信息被记录下来，并且当打印机配置或属性更改时，会更新多个时间戳。
- en: In addition to print jobs, the cupsd daemon manages configuration requests and
    other local management tasks. This activity is logged in the */var/log/cups/*
    directory, which may contain the *access_log*, *error_log*, and *page_log* files
    that log information about CUPS activity, including configured printer activity.
    The logs are documented in the cupsd-logs(5) man page.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 除了打印作业，cupsd 守护进程还管理配置请求和其他本地管理任务。这些活动记录在 */var/log/cups/* 目录中，其中可能包含 *access_log*、*error_log*
    和 *page_log* 文件，记录有关 CUPS 活动的信息，包括配置的打印机活动。这些日志在 cupsd-logs(5) 手册页中有文档记录。
- en: 'The *access_log* file records administrative activity as well as print requests
    to different configured printers:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*access_log* 文件记录管理活动以及对不同配置打印机的打印请求：'
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here, the printer is paused and resumed, and then a document is printed.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，打印机被暂停和恢复，然后打印文档。
- en: 'The *error_log* file records various error and warning messages, and it may
    contain interesting information about failed printer installations, problems with
    printing, and other unusual events that could be relevant to an investigation,
    such as in the following example:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*error_log* 文件记录各种错误和警告信息，其中可能包含关于打印机安装失败、打印问题以及其他可能与调查相关的异常事件的有趣信息，例如以下示例：'
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The *error_log* lines begin with a letter (`E` for error, `W` for warning, and
    so on). These error letters are listed in the cupsd-logs(5) man page.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*error_log* 行以字母开头（`E` 表示错误，`W` 表示警告，依此类推）。这些错误字母在 cupsd-logs(5) 手册页中列出。'
- en: 'The *page_log* file is especially interesting for investigators because it
    records a history of past printing jobs and filenames; for example:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*page_log* 文件对于调查人员特别有用，因为它记录了过去打印作业和文件名的历史；例如：'
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Two print jobs are shown with the printer name (`bro`), the user who printed
    the job (`sam`), the time of printing, and the filenames.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 显示了两个打印作业，包括打印机名称（`bro`）、打印作业的用户（`sam`）、打印时间和文件名。
- en: These logfiles may rotate over time and have a numeric extension added (*error_log.1*,
    *page_log.2*, and so on). In contrast to other user activity, not much information
    is stored in the user’s home directory. The print jobs are passed to the CUPS
    daemon, which manages the configuration and logging as a system-wide function.
    These logs are used for both local and network-configured printers. CUPS has more
    than a dozen man pages, so start with the cups(1) man page or *[https://www.cups.org/](https://www.cups.org/)*
    for more information.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这些日志文件可能会随着时间的推移而旋转，并添加数字扩展名（*error_log.1*、*page_log.2* 等）。与其他用户活动不同，用户的主目录中存储的信息不多。打印作业会传递给
    CUPS 守护进程，后者作为系统范围的功能管理配置和日志记录。这些日志用于本地和网络配置的打印机。CUPS 拥有十多个手册页，因此可以从 cups(1) 手册页或
    *[https://www.cups.org/](https://www.cups.org/)* 开始，获取更多信息。
- en: 'In addition to CUPS logs, attaching a USB printer to a local machine will generate
    logs in the systemd journal, as shown here:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 CUPS 日志，将 USB 打印机连接到本地机器还会在 systemd 日志中生成日志，如下所示：
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Here, a Brother printer is plugged in at 2:42 PM (`14:42:41`) and unplugged
    a few minutes later at 2:45 PM (`14:45:19`). The model and serial number are shown.
    The USB device (`usblp0`) is also logged, which is useful information when multiple
    printers are attached to a single system.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，一台 Brother 打印机在下午 2:42（`14:42:41`）插入，并在几分钟后于下午 2:45（`14:45:19`）拔出。显示了型号和序列号。USB
    设备（`usblp0`）也被记录，这是在多台打印机连接到单一系统时的有用信息。
- en: '***Analysis of Scanning Devices and History***'
  id: totrans-69
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***扫描设备和历史记录分析***'
- en: Scanning under Linux uses the Scanner Access Now Easy (SANE) API. An older competing
    system is TWAIN (*[https://www.twain.org/](https://www.twain.org/)*), but most
    distros are now using SANE. SANE’s popularity is partly because of the separation
    of the frontend GUIs and backend scanner configuration drivers (found in */etc/sane.d/*),
    and the SANE daemon (`saned`) for scanning over a network.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 下进行扫描时，使用的是扫描器访问现在简单（SANE）API。一个较老的竞争系统是 TWAIN (*[https://www.twain.org/](https://www.twain.org/)*)，但现在大多数发行版都在使用
    SANE。SANE 的流行部分是因为前端 GUI 和后端扫描配置驱动程序（位于 */etc/sane.d/*）的分离，以及用于网络扫描的 SANE 守护进程（`saned`）。
- en: 'Plugging a USB scanner in to a Linux machine will cause information to be logged:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 将 USB 扫描仪插入 Linux 机器时，会导致信息被记录：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Here, a Canon CanoScan device is plugged in a little after 3:00 PM and is then
    unplugged 17 minutes later.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，一台 Canon CanoScan 设备在下午 3:00 过后插入，然后在 17 分钟后被拔出。
- en: 'Any frontend application can use the API provided by the SANE backend libraries.
    This means that interesting logging and persistent data from a forensics perspective
    will be application specific. The following example shows the simple-scan app
    installed by default on Linux Mint. This information is found in the user’s home
    directory in the *~/.cache/simple-scan/ simple-scan.log* file:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 任何前端应用程序都可以使用 SANE 后端库提供的 API。这意味着从取证角度来看，感兴趣的日志和持久数据将是特定于应用程序的。以下示例显示了默认安装在
    Linux Mint 上的 simple-scan 应用程序。这些信息可以在用户的主目录中的*~/.cache/simple-scan/simple-scan.log*
    文件中找到：
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This scan log is recreated each time the `simple-scan` program is used (overwriting
    previous logs). The log times reflect the number of seconds since the program
    started, and timestamps can be calculated by adding these values to the logfile’s
    creation timestamp. Here we see that the program was started and a document was
    scanned a minute later (which took about 25 seconds to complete). Three minutes
    later, the document was saved to the user’s *Documents* folder with the name *Scanned
    Document.pdf* (the `%20` in the log represents a space).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 每次使用 `simple-scan` 程序时，这个扫描日志都会被重新创建（覆盖先前的日志）。日志时间反映了程序启动以来的秒数，可以通过将这些值加到日志文件的创建时间戳来计算时间戳。在这里我们看到，程序启动后一分钟扫描了一份文档（大约用了
    25 秒钟完成）。三分钟后，文档被保存到用户的 *Documents* 文件夹，文件名为 *Scanned Document.pdf*（日志中的 `%20`
    代表空格）。
- en: In a forensic examination involving a scanner, you need to determine which scanning
    software was used and then analyze the artifacts for that particular program (XDG
    directories, logs, cache, and so on).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在涉及扫描仪的取证检查中，你需要确定使用了哪种扫描软件，然后分析该程序的遗留物（XDG 目录、日志、缓存等）。
- en: '**External Attached Storage**'
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**外部附加存储**'
- en: In many forensic investigations, especially those involving the possession of
    illicit material or stolen documents, it is important to identify all storage
    devices that have been attached to the computer under examination. On Linux systems,
    we can find this information in several places.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多取证调查中，特别是涉及非法材料或被盗文档的案件中，识别所有已连接到被检查计算机的存储设备非常重要。在 Linux 系统中，我们可以在多个地方找到这些信息。
- en: External storage attaches to a computer system through a hardware interface
    such as USB or Thunderbolt. The computer communicates with these drives over the
    interface using a low-level protocol (SCSI, ATA, USB BoT, and others) to read
    and write sectors (which form the filesystem blocks). Storage devices such as
    USB thumb drives or external disks have the interface electronics and media integrated
    into a single device. However, in some cases, the drive and storage media are
    separate and known as removable media devices. Examples of this include SD cards,
    optical discs (CD/DVD), and magnetic tapes.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 外部存储通过硬件接口（如 USB 或 Thunderbolt）连接到计算机系统。计算机通过该接口使用低级协议（如 SCSI、ATA、USB BoT 等）与这些驱动器通信，以读取和写入扇区（这些扇区构成了文件系统的块）。像
    USB 闪存驱动器或外部硬盘这样的存储设备，将接口电子设备和存储介质集成到一个单一设备中。然而，在某些情况下，硬盘和存储介质是分开的，被称为可移动介质设备。此类设备的例子包括
    SD 卡、光盘（CD/DVD）和磁带。
- en: '***Storage Hardware Identification***'
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***存储硬件识别***'
- en: When a new storage device is attached to a Linux system, the appropriate device
    drivers are set up and the device files are created. After the setup is complete,
    filesystems can be mounted. Mounting filesystems can be automatic, manual, or
    performed during system startup. Setting up a newly attached device in the kernel
    is separate and independent from mounting any filesystems it contains. This is
    why we can take a forensic image of a device without mounting it (by accessing
    the device sectors directly).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个新的存储设备连接到 Linux 系统时，系统会配置适当的设备驱动程序并创建设备文件。设置完成后，可以挂载文件系统。挂载文件系统可以是自动的、手动的，或者在系统启动时进行。新连接的设备在内核中的设置与挂载其包含的文件系统是分开且独立的。这就是为什么我们可以在不挂载设备的情况下进行取证镜像（通过直接访问设备扇区）。
- en: 'Once the kernel recognizes a new storage device, device files are created in
    the */dev/* directory (with the help of udevd), which can be found in the kernel’s
    dmesg log or other system logs. The following example is from the systemd journal:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦内核识别出一个新的存储设备，设备文件会在 */dev/* 目录下创建（通过 udevd 的帮助），并且可以在内核的 dmesg 日志或其他系统日志中找到。以下示例来自
    systemd 日志：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Here, the kernel detected a new USB device, determined it was storage, and created
    the `sdc` device. The number of 512-byte sectors is shown, indicating the drive’s
    size (`30031872 512-byte logical blocks`). Information about the manufacturer,
    product, and serial number is also logged. The device name used (`[sdc]` here)
    may be found in other logs during the time the drive was connected.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，内核检测到一个新的 USB 设备，确定它是存储设备，并创建了 `sdc` 设备。显示了 512 字节扇区的数量，表示硬盘的大小（`30031872
    512-byte logical blocks`）。关于制造商、产品和序列号的信息也被记录在日志中。使用的设备名称（此处为 `[sdc]`）可以在驱动器连接期间的其他日志中找到。
- en: 'When a storage device is removed from a Linux system, as mentioned previously,
    the kernel doesn’t generate much information:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个存储设备从 Linux 系统中移除时，如前所述，内核不会生成太多信息：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In this example, the USB stick is removed around 15 minutes after being plugged
    in. (Information related to the mounting and unmounting of the drive is described
    in the next section.)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，USB 闪存盘在插入约 15 分钟后被移除。（有关驱动器挂载和卸载的信息将在下一节描述。）
- en: 'It may be obvious from the product, manufacturer, and size whether the storage
    device is a USB stick or an external disk enclosure. But in some cases, you may
    want an additional indicator. If a normal SATA drive housed in a drive enclosure
    is an Advanced Format or 4K Native drive, it may show an additional log line with
    `4096-byte physical blocks`. USB sticks (and older hard drives) will show only
    the 512-byte logical block line. An example of this additional log is shown here:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 从产品、制造商和大小上可能可以明显看出存储设备是 USB 闪存盘还是外部硬盘盒。但在某些情况下，您可能需要额外的指示器。如果一个普通的 SATA 硬盘被装入硬盘盒，且它是高级格式或
    4K 原生硬盘，它可能会显示一行附加日志，内容为 `4096-byte physical blocks`。USB 闪存盘（和旧款硬盘）只会显示 512 字节的逻辑块行。以下是此附加日志的示例：
- en: '[PRE14]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Here, a disk in an external USB enclosure (a SATA docking station) logs the
    4096-byte physical blocks (4K Native sectors). My previous book, *Practical Forensic
    Imaging* (No Starch Press, 2016), explains Advance Format and 4K Native drives
    in much more detail.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，一个外部USB外壳中的磁盘（一个SATA对接站）记录了4096字节的物理块（4K本地扇区）。我的前一本书《实践取证成像》（No Starch Press，2016）中更详细地解释了高级格式和4K本地驱动器。
- en: '***Evidence of Mounted Storage***'
  id: totrans-92
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***挂载存储的证据***'
- en: After the kernel has set up the device driver and device files have been created,
    the filesystems can be mounted. Evidence of mounted external drives can be found
    in several places.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在内核设置设备驱动程序并创建设备文件后，可以挂载文件系统。外部驱动器的挂载证据可以在多个地方找到。
- en: 'On servers, filesystems on permanently attached external storage are statically
    configured in the */etc/fstab* file so they are automatically mounted every time
    the system starts up. An example *fstab* looks like this:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务器上，永久附加的外部存储的文件系统会在*/etc/fstab*文件中静态配置，以便每次系统启动时自动挂载。一个*fstab*示例如下：
- en: '[PRE15]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Here, `/` is the root filesystem with the installed operating system, and `/data`
    is the external data drive added by the administrator. This file contains the
    unique UUID, mount directory, and possibly comments added by the administrator.
    Other device-identifying information may be found in the logs (as described in
    the previous section).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`/`是安装了操作系统的根文件系统，而`/data`是管理员添加的外部数据驱动器。该文件包含唯一的UUID、挂载目录，以及可能由管理员添加的注释。其他设备识别信息可以在日志中找到（如前一节所述）。
- en: On desktop machines, Linux distros want to provide an easy and comfortable user
    experience and typically mount filesystems automatically and display them on the
    desktop or in a file manager. This is done with the `udisks` program that is called
    (via D-Bus) after the system has set up the devices.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在桌面计算机上，Linux发行版通常会提供简单而舒适的用户体验，通常会自动挂载文件系统，并在桌面或文件管理器中显示。这是通过`udisks`程序完成的，系统在设置设备后通过D-Bus调用该程序。
- en: 'The udisks program creates a temporary mount point in */media/* or */run/ media/*
    where it then mounts the drive. It is then displayed on the user’s desktop or
    in the file manager. The following example shows a log from an automatically mounted
    drive:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: udisks程序会在*/media/*或*/run/media/*中创建一个临时挂载点，然后挂载驱动器。它随后会显示在用户的桌面或文件管理器中。以下示例显示了一个自动挂载驱动器的日志：
- en: '[PRE16]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The mounted drive has the volume name `My Awesome Vids`. When the drive is
    unmounted via the Eject menu item on the desktop, it will remove the temporary
    directory after unmounting and log it:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 挂载的驱动器的卷名称为`My Awesome Vids`。当通过桌面上的弹出菜单项卸载驱动器时，它将在卸载后删除临时目录并记录日志：
- en: '[PRE17]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The drive can then be physically removed.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，可以物理移除该驱动器。
- en: 'Manual mounting will also leave traces in system logfiles. When a system administrator
    mounts a filesystem on the command line to a mount point of their choosing, evidence
    of the manual mounting may be found in the logs and in the shell history. If a
    non-root user manually mounts a filesystem, they will need escalated privileges
    and typically will prefix their command with `sudo`. Here are two examples of
    `mount` commands, one in the shell history of the root user and one in that of
    a normal user:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 手动挂载也会在系统日志文件中留下痕迹。当系统管理员通过命令行将文件系统挂载到他们选择的挂载点时，手动挂载的证据可以在日志和shell历史记录中找到。如果非root用户手动挂载文件系统，他们需要提升权限，并通常会在命令前加上`sudo`。以下是两个`mount`命令示例，一个是在root用户的shell历史记录中，另一个是在普通用户的shell历史记录中：
- en: '[PRE18]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Other indicators to look for may include error messages related to storage,
    bad sectors, or storage removed without cleanly dismounting. Also, depending on
    the file manager used, there may be cached information, history, or bookmarks,
    indicating the use of peripheral storage.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 其他需要注意的指示器可能包括与存储相关的错误消息、坏道或未干净卸载的存储设备。根据使用的文件管理器，也可能会有缓存信息、历史记录或书签，表明外部存储设备的使用。
- en: '**Summary**'
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: This chapter has covered the analysis of external peripheral devices attached
    to a Linux system. Attaching and removing peripherals leaves traces in the logs,
    which can be examined. In addition, this chapter describes how to analyze the
    printing subsystem and how scanning works. You now should be able to look for
    evidence of attached and removed peripherals and scanned and printed documents.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
