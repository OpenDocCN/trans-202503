- en: '[1](nsp-boxall502581-0008.xhtml#rch01)'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Getting Started
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](images/nsp-boxall502581-ct.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
- en: Welcome to the beginning of your AVR microcontroller journey! In this chapter
    I’ll introduce you to the microcontrollers used in this book, as well as a few
    exciting examples of real-world AVR-based projects, then teach you some fundamentals
    about electronics.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'You will learn:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: • Where to get the required parts for the projects in this book
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • How to install the required software for Windows, macOS, and Linux
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • The basic properties of electricity and electronic components
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • About electronic components, including resistors, light-emitting diodes (LEDs),
    power diodes, capacitors, and more
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • How to use a solderless breadboard to construct circuits
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: • Ways to safely power your experiments
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of the chapter, you’ll be ready to use your AVR workstation to build
    your [first project](nsp-boxall502581-0012.xhtml#pro0) .
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '[The Possibilities Are Endless](nsp-boxall502581-0008.xhtml#rah0301)'
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A quick scan through this book will show you that you can use AVR microcontrollers
    as the heart of an incredibly wide range of devices. You’ll go from blinking LEDs
    to creating a thermostat, a GPS logger, and more—but don’t limit yourself to the
    range of projects covered here! After working through this book, you’ll be well
    prepared to explore more advanced projects like those I’ll describe in this section.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: For example, computer scientist Vassilis Serasidis built a piece of electronics
    test equipment called a *logic analyzer* , which can measure the values of four
    electrical currents at the same time and display the results. His design uses
    an inexpensive LCD typically found in cheap cellular phones to show the signals
    in a graphical form, as shown in [Figure 1-1](nsp-boxall502581-0011.xhtml#f01001)
    .
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '![Demonstration of the AVR-powered logic analyzer, showing four signals being
    analyzed at once](images/nsp-boxall502581-f01001.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-1: An inexpensive logic analyzer'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: You can use logic analyzers to run a huge variety of displays with an AVR microcontroller,
    from inexpensive black and white versions like the one in [Figure 1-1](nsp-boxall502581-0011.xhtml#f01001)
    to realistic color displays. For more information on the project, visit [https://www.serasidis.gr/circuits/mini_logic_analyzer/miniLogicAnalyzer.htm](https://www.serasidis.gr/circuits/mini_logic_analyzer/miniLogicAnalyzer.htm)
    .
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: You can also use AVRs to build tiny projects like wearable electronics, but
    you need an incredibly small development board to do so. Electronics enthusiast
    Erik Kettenburg dreamed of such a board based on the smallest AVR in existence.
    He translated this idea into the Digispark board, shown in [Figure 1-2](nsp-boxall502581-0011.xhtml#f01002)
    , which measures only 17.5 × 19 mm, and built a thriving business via a successful
    Kickstarter promotion in 2017.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of the very compact Digispark AVR-based development board](images/nsp-boxall502581-f01002.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-2: An example of the Digispark board'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: The size of the Digispark board means the AVR microcontroller it uses doesn’t
    have quite as many features as some larger chips—for example, it has less program
    memory space. However, the Digispark allows you to program the microcontroller
    directly via USB, whereas you’d normally have to purchase a separate programming
    device. For more information on the Digispark board, visit [http://digistump.com/](http://digistump.com/)
    .
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: In addition to using AVRs professionally, plenty of people build AVR-based projects
    purely for fun! One example is the AVR TV Game software engineer Ben Ryves built
    in 2009, shown in [Figure 1-3](nsp-boxall502581-0011.xhtml#f01003) . Ben used
    very basic electronics and an AVR to make a device that plugs into a television
    and lets you play the classic games *Snake* and *Tetris* .
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '![Image of Tetris being played on an AVR-based TV game system](images/nsp-boxall502581-f01003.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-3: Playing *Tetris* on the AVR TV Game'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: The AVR can generate the video signals to communicate with a television without
    any extra hardware, and with some imagination, you can program your own games
    into the microcontroller. For more information, visit [http://benryves.com/products/avrtvgame/](http://benryves.com/products/avrtvgame/)
    .
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Engineer Adam Heinrich even built his own cellular telephone in 2017 based on
    an AVR, complete with a color touchscreen interface. Adam’s “AvrPhone,” which
    is portable for mobile use, is shown in [Figure 1-4](nsp-boxall502581-0011.xhtml#f01004)
    . For more information, visit [http://projects.adamh.cz/avrphone/](http://projects.adamh.cz/avrphone/)
    .
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of the AVR-powered cellular phone in use](images/nsp-boxall502581-f01004.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-4: The AvrPhone'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Just like these makers, with some effort, you can bridge the gap between hobbyist
    tinkering and full product development! But for now, let’s start with a more detailed
    discussion of the parts you’ll use in this book.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[The Microchip AVR Microcontrollers](nsp-boxall502581-0008.xhtml#rah0302)'
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Throughout this book, you’ll use the two microcontrollers shown in [Figure 1-5](nsp-boxall502581-0011.xhtml#f01005)
    , which Microchip Technology produces as part of its AVR product line. The smaller
    one, called an ATtiny85, has 8 *pins* , which are the pieces of metal sticking
    out on the sides of the black chips that allow you to send and receive data and
    power from and to the microcontroller. The larger AVR is an ATmega328P-PU, which
    has 28 pins.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of the ATtiny85 and ATmega328P-PU microcontrollers](images/nsp-boxall502581-f01005.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-5: Our AVR microcontrollers, the ATtiny85 and ATmega328P-PU'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Note In this book and when purchasing your own parts, you may see microcontrollers
    labeled “Atmel.” Microchip acquired Atmel in 2016, but at the time of writing
    some suppliers still have Atmel-branded units; either label is fine.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Apart from size, there are several important differences between the ATtiny85
    and ATmega328P-PU microcontrollers, as listed in [Table 1-1](nsp-boxall502581-0011.xhtml#tab0101)
    .
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 1-1 : Specifications for the ATtiny85 and ATmega328P-PU Microcontrollers'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '![Table of specifications for the ATtiny85 and ATmega328P-PU microcontrollers](images/nsp-boxall502581-tab0101.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
- en: 'The specifications in [Table 1-1](nsp-boxall502581-0011.xhtml#tab0101) describe
    each chip’s physical limitations, and they will help you determine which other
    electronic components you can realistically use with your microcontroller. Anytime
    you start a new project, you need to consider this information carefully, so here’s
    an overview of what each specification means:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Schematic This is a drawing that represents the connections to an electronic
    component, such as the microcontrollers in this table. You’ll learn more about
    schematic symbols in [Chapter 2](nsp-boxall502581-0012.xhtml#ch02) .
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Maximum processing speed This row tells you how fast the microcontroller can
    process data, measured in cycles per second. Note that the clock speed isn’t always
    equal to processing speed, as some instructions can take multiple cycles to complete.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Operating voltage This row shows the range of voltages that you can safely use
    to power the microcontroller. If you don’t supply at least 1.8 V, the chip won’t
    turn on, but if you try to supply more than 5.5 V, it may melt!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Digital pins This row shows the number of pins that can send or receive digital
    data. Digital data is represented by voltage signals; the numbers one and zero,
    respectively, represent an “on” or “off” voltage. These voltage signals are then
    combined to represent various forms of data. All microcontrollers have pins that
    you can set up as digital inputs or outputs and use to control external devices.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Analog input pins This row shows the number of physical inputs that are available
    to measure voltage levels. Analog input pins let you read information from devices
    like *sensors* , which output different voltages based on what’s happening in
    their surroundings.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Flash memory This row shows how much flash memory is available on the chip.
    To tell your microcontroller what to do, you’ll have to write programs, which
    are stored in flash memory and retained even after you turn off power. If your
    program’s file size exceeds your AVR’s memory capacity, it won’t fit on the microcontroller!
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: EEPROM This row tells you how much *electrically erasable programmable read-only
    memory (EEPROM* ) is available on the chip. EEPROM can hold data your program
    creates even when the microcontroller is turned off. For example, if you want
    to display a certain image on an LCD whenever you power on your project, you can
    store that image in EEPROM for future use.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: SRAM This row tells you how much *Static Random Access Memory (SRAM)* is available
    on the chip. This is the amount of memory available to store temporary data created
    by your programs. Just like the RAM in your desktop computer, SRAM is where all
    the information your program generates as it runs is stored until it gets deleted
    when the power is turned off. This could include sensor data, the results of calculations,
    and so on.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: SRAM 本行告诉你芯片上可用的*静态随机存取内存（SRAM）*的大小。这是存储由你的程序创建的临时数据的内存空间。就像你台式机中的RAM一样，SRAM是你的程序在运行时生成的所有信息存储的地方，直到电源关闭时这些数据被删除。这些数据可能包括传感器数据、计算结果等。
- en: I’ll cover these and other important features in detail in later chapters. For
    now, let’s start setting up your AVR microcontroller lab.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我将在后续章节中详细介绍这些和其他重要功能。现在，让我们开始设置你的AVR微控制器实验室。
- en: '[Required Parts and Accessories](nsp-boxall502581-0008.xhtml#rah0303)'
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[所需零件和配件](nsp-boxall502581-0008.xhtml#rah0303)'
- en: You won’t need to buy a ton of expensive parts to get started with the projects
    in this book; assuming you already have a modern personal computer, you can have
    a lot of fun with microcontrollers for around $50\. Each project I’ll walk you
    through includes a list of the parts you need to complete it, and you can download
    a list of all the parts used in this book from [https://nostarch.com/avr-workshop/](https://nostarch.com/avr-workshop/)
    . I’d recommend you order the parts you’ll need for the projects in the first
    few chapters now so you don’t have to wait too long for delivery.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要购买大量昂贵的零件来开始本书中的项目；假设你已经有一台现代个人计算机，你可以以约50美元的预算，通过微控制器获得很多乐趣。我会在每个项目中为你提供需要的零件清单，你还可以从[https://nostarch.com/avr-workshop/](https://nostarch.com/avr-workshop/)下载本书中所有使用零件的清单。我建议你现在就订购前几章项目所需的零件，这样就不必等太长时间才能收到货。
- en: '[Electronic Components](nsp-boxall502581-0008.xhtml#rbh0301)'
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[电子元件](nsp-boxall502581-0008.xhtml#rbh0301)'
- en: AVR microcontrollers and electronic components are available from many retailers
    that offer a range of products and accessories. When you’re shopping, be sure
    to purchase the original parts I’ve listed and not knock-offs, or you run the
    risk of receiving faulty or poorly performing goods. Don’t take chances buying
    an inferior product, as it could end up costing you more in the long run!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: AVR微控制器和电子元件可以从许多零售商处购买，这些零售商提供各种产品和配件。在购物时，请务必购买我列出的原装零件，而不是山寨产品，否则你有可能收到有缺陷或性能不佳的商品。不要冒险购买劣质产品，因为从长远来看，这可能会让你付出更多的代价！
- en: 'Always read the hardware list at the beginning of every project and be sure
    to buy the correct components before you start. Here are some recommended suppliers
    for AVR-related parts and accessories. The first five supply worldwide, while
    the last four are country-specific, as noted:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个项目开始时，务必阅读硬件清单，并确保在开始之前购买正确的组件。以下是一些推荐的AVR相关部件和配件供应商。前五个供应商提供全球范围的服务，最后四个是特定国家的供应商，如下所示：
- en: '• DigiKey: [https://www.digikey.com/](https://www.digikey.com/)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• DigiKey: [https://www.digikey.com/](https://www.digikey.com/)'
- en: '• element14/Farnell: [http://farnell.com/](http://farnell.com/)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• element14/Farnell: [http://farnell.com/](http://farnell.com/)'
- en: '• PMD Way: [http://pmdway.com/](http://pmdway.com/)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• PMD Way: [http://pmdway.com/](http://pmdway.com/)'
- en: '• SparkFun Electronics: [https://www.sparkfun.com/](https://www.sparkfun.com/)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• SparkFun 电子产品: [https://www.sparkfun.com/](https://www.sparkfun.com/)'
- en: '• Mouser: [https://www.mouser.com/](https://www.mouser.com/)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• Mouser: [https://www.mouser.com/](https://www.mouser.com/)'
- en: '• Freetronics Australia: [https://www.freetronics.com/](https://www.freetronics.com/)
    (for Australia)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• Freetronics 澳大利亚: [https://www.freetronics.com/](https://www.freetronics.com/)
    (仅限澳大利亚)'
- en: '• Altronics: [https://www.altronics.com.au/](https://www.altronics.com.au/)
    (for Australia)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• Altronics: [https://www.altronics.com.au/](https://www.altronics.com.au/)
    (仅限澳大利亚)'
- en: '• Newark: [https://www.newark.com/](https://www.newark.com/) (for the United
    States)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• Newark: [https://www.newark.com/](https://www.newark.com/) (仅限美国)'
- en: '• MindKits: [https://www.mindkits.co.nz/](https://www.mindkits.co.nz/) (for
    New Zealand)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '• MindKits: [https://www.mindkits.co.nz/](https://www.mindkits.co.nz/) (仅限新西兰)'
- en: I can vouch for these suppliers from personal experience, but there are many
    more across the globe. As a general rule, try to deal with organizations that
    offer technical and sales support and are more than just simple sales agents or
    listings on mega retail sites.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以根据个人经验为这些供应商担保，但全球还有许多其他供应商。一般来说，尽量选择提供技术支持和销售支持的公司，而不仅仅是简单的销售代理或大型零售网站上的商品列表。
- en: '[Choosing an AVR Programmer](nsp-boxall502581-0008.xhtml#rbh0302)'
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[选择AVR编程器](nsp-boxall502581-0008.xhtml#rbh0302)'
- en: You need to connect a *programmer* like the ones shown in [Figure 1-6](nsp-boxall502581-0011.xhtml#f01006)
    from your computer to your microcontroller circuit so that you can load programs
    and data onto the chip. Finding a good programmer is crucial for success in the
    AVR world, and a quick web search for “AVR programmer” will present you with many
    options. The projects in this book use a *USBasp programmer* , a device that interfaces
    between your PC and your AVR project to send your code to your project’s microcontroller.
    You can buy one from any of the stores listed in the previous section for (at
    the time of printing) less than $20.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of two different USBasp-style AVR programmers](images/nsp-boxall502581-f01006.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-6: Examples of USBasp AVR programmers'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: The USBasp should work with the open source software required for AVR programming.
    It’s an open source device created by Thomas Fischl, and only requires USB drivers
    when used with a Windows-based PC. When shopping for your USBasp programmer, be
    sure it comes with a 6-pin (not 10-pin) ribbon cable so you can use it for the
    projects in this book.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '[Required Software](nsp-boxall502581-0008.xhtml#rah0304)'
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this section, you’ll set up a *toolchain* that will let you program your
    AVR microcontroller. This toolchain consists of a series of software that takes
    your typed program of instructions, translates it into a form the AVR can understand,
    and places it in flash memory. There are three stages to the programming process,
    each using a different piece of software (a different “tool” in the “chain”):'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Using text editor software, you enter, edit, and save the code containing
    your instructions for the AVR.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 2\. Compiler software then converts the code you created into machine code that
    the microcontroller can understand.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 3\. Next, programming software takes the machine code file and uploads it to
    the microcontroller. At this point, the AVR should start doing what you told it
    to do.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can write your programs in any basic text editor, such as Notepad on Windows
    or TextEdit on macOS. You’ll also need a package containing the compiler and programming
    software. In the following three sections, I explain how to acquire and install
    that software for computers running MacOS, Ubuntu Linux, and Windows 7 or later.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '[macOS 10.6 or Later](nsp-boxall502581-0008.xhtml#rbh0303)'
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To install the required software on your Mac, open the macOS Terminal app and
    enter the following command:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will install software that allows you to run 32-bit programs on macOS.
    You may be prompted to enter your password, and then the software will start,
    as shown in [Figure 1-7](nsp-boxall502581-0011.xhtml#f01007) .
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of the AVR toolchain being installed on a Mac via Terminal](images/nsp-boxall502581-f01007.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-7: The toolchain installation begins in macOS.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: 'Once that has completed, enter the following into the command line:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'And once that has completed, enter the following command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This is the final step, which installs the required AVR software. It will return
    you to the command prompt when finished, as shown in [Figure 1-8](nsp-boxall502581-0011.xhtml#f01008)
    ; you can then close the Terminal app.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最后一步，它安装所需的AVR软件。安装完成后，命令提示符会重新出现，如[图 1-8](nsp-boxall502581-0011.xhtml#f01008)所示；然后你可以关闭终端应用程序。
- en: '![A screenshot of the completed AVR toolchain installation process on a Mac
    via Terminal](images/nsp-boxall502581-f01008.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![通过终端在Mac上完成AVR工具链安装的截图](images/nsp-boxall502581-f01008.jpg)'
- en: 'Figure 1-8: Installation is complete.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1-8：安装完成。
- en: Now that you’ve installed your toolchain software, skip ahead to the section
    “Current, Voltage, and Power.”
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经安装了工具链软件，跳到“电流、电压与功率”章节。
- en: '[Ubuntu Linux 20.04 LTS or Later](nsp-boxall502581-0008.xhtml#rbh0304)'
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Ubuntu Linux 20.04 LTS或更高版本](nsp-boxall502581-0008.xhtml#rbh0304)'
- en: 'To download and install the AVR toolchain in Ubuntu Linux 20.04 LTS, first
    ensure your system has completed all the latest updates. Next, open a terminal
    window and enter the following command:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Ubuntu Linux 20.04 LTS中下载并安装AVR工具链，首先确保你的系统完成了所有最新的更新。接下来，打开终端窗口并输入以下命令：
- en: '[PRE3]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Enter your password if requested. You may then be asked if you want to continue:
    enter `Y` and press enter . A lot of text describing various packages should scroll
    by, and then the command prompt should once again appear. Enter the following
    command:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要求，输入你的密码。然后，可能会询问你是否继续：输入`Y`并按回车。大量描述各种软件包的文字会滚动显示，然后命令提示符应该再次出现。输入以下命令：
- en: '[PRE4]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Again, enter your password and give permission to continue if required by the
    installation process. Then enter the following command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安装过程需要，重新输入密码并授权继续。然后输入以下命令：
- en: '[PRE5]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After a short period (depending on the speed of your computer and internet
    connection), all the required software should finish installing. Now you need
    to install the USB driver for the USBasp programmer. To do so, enter the following
    command:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在短时间内（取决于计算机和互联网连接的速度），所有必需的软件应该安装完成。现在你需要为USBasp编程器安装USB驱动程序。为此，输入以下命令：
- en: '[PRE6]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If prompted, provide your password and enter `Y` to continue. Finally, it’s
    time to check the driver is working. Plug your USBasp into a USB port on the computer,
    then enter the following command:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统提示，输入你的密码并输入`Y`以继续。最后，检查驱动程序是否正常工作。将USBasp插入计算机的USB端口，然后输入以下命令：
- en: '[PRE7]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After a moment a list of devices connected to the machine via USB should appear,
    looking something like this:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 片刻后，连接到计算机的USB设备列表应该显示出来，像这样：
- en: '[PRE8]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In this example, the USBasp is the second item in the list. If your device doesn’t
    appear, check the connection to the PC, restart the machine, and try the `lsusb`
    command one more time.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，USBasp是列表中的第二个项目。如果你的设备没有出现，请检查与PC的连接，重启计算机，然后再次尝试`lsusb`命令。
- en: Note Due to the open source nature of Linux, there are many variations of the
    OS that cannot be accounted for or documented in this book. If you’re still having
    problems, or would like details on installing the toolchain on other flavors of
    Linux, please visit [http://www.nongnu.org/avr-libc/user-manual/install_tools.html](http://www.nongnu.org/avr-libc/user-manual/install_tools.html)
    .
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 由于Linux的开源特性，有许多不同的操作系统版本，这些版本在本书中无法涵盖或记录。如果你仍然遇到问题，或者希望了解如何在其他Linux版本上安装工具链的详细信息，请访问[http://www.nongnu.org/avr-libc/user-manual/install_tools.html](http://www.nongnu.org/avr-libc/user-manual/install_tools.html)。
- en: Once installation is complete, move forward to the section titled “Current,
    Voltage, and Power.”
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，继续阅读标题为“电流、电压与功率”的章节。
- en: '[Windows 7 Through 11](nsp-boxall502581-0008.xhtml#rbh0305)'
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Windows 7至11](nsp-boxall502581-0008.xhtml#rbh0305)'
- en: 'Setting up your toolchain in Microsoft Windows requires an extra step: you’ll
    first download and install the software, then install the appropriate drivers
    for your programmer.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在Microsoft Windows中设置工具链需要额外的步骤：你首先需要下载并安装软件，然后安装适用于你的编程器的驱动程序。
- en: Installing the Toolchain
  id: totrans-106
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安装工具链
- en: 'To install the required software for Windows, follow these instructions:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Windows上安装所需的软件，请按照以下说明进行操作：
- en: 1\. Open your web browser and visit the software download page located at [https://sourceforge.net/projects/winavr/files/WinAVR/](https://sourceforge.net/projects/winavr/files/WinAVR/)
    , as shown in [Figure 1-9](nsp-boxall502581-0011.xhtml#f01009) .
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1. 打开你的网页浏览器，访问[https://sourceforge.net/projects/winavr/files/WinAVR/](https://sourceforge.net/projects/winavr/files/WinAVR/)下载页面，如[图
    1-9](nsp-boxall502581-0011.xhtml#f01009)所示。
- en: '![A screenshot of the WinAVR download web page with buttons labeled “Download
    Latest Version” and “Get Updates”](images/nsp-boxall502581-f01009.jpg)'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 1-9: The WinAVR download page for Windows'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 2\. Click the **Download Latest Version** button to start the software download.
    After a short period of time, the toolchain installer should finish downloading.
    Open the *Downloads* folder in Explorer, as shown in [Figure 1-10](nsp-boxall502581-0011.xhtml#f01010)
    , and you should see the WinAVR install file.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot showing the downloaded WinAVR installation software](images/nsp-boxall502581-f01010.jpg)'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 1-10: The WinAVR package'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 3\. Double-click the install package, and after selecting your language, you
    should be presented with the WinAVR Setup Wizard, as shown in [Figure 1-11](nsp-boxall502581-0011.xhtml#f01011)
    .
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of the WinAVR Setup Wizard welcome screen in Windows 11](images/nsp-boxall502581-f01011.jpg)'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 1-11: The WinAVR Setup Wizard'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 4\. Click **Next** in the Setup Wizard, and click **I Agree** when the License
    Agreement is displayed.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 5\. The next window should prompt for the folder in which to install the toolchain.
    You can choose the default by clicking **Next** , as shown in [Figure 1-12](nsp-boxall502581-0011.xhtml#f01012)
    .
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot showing how to choose the installation location for the WinAVR
    software in Windows 11](images/nsp-boxall502581-f01012.jpg)'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 1-12: Choosing the file location'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 6\. The next window that appears, shown in [Figure 1-13](nsp-boxall502581-0011.xhtml#f01013)
    , should ask you which components to install. Check all three boxes and click
    **Install** .
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot showing all the available components (Install Files, Add Directories
    to Path, And Install Programmers Notepad) selected](images/nsp-boxall502581-f01013.jpg)'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 1-13: Selecting the components to install'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 7\. The wizard should then display a progress bar while it installs the files.
    Once installation has finished, close the wizard by clicking the **Finish** button.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 8\. You should now be presented with the WinAVR user manual page, as shown in
    [Figure 1-14](nsp-boxall502581-0011.xhtml#f01014) .
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![A screenshot of the WinAVR user manual displayed in a browser](images/nsp-boxall502581-f01014.jpg)'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 1-14: The WinAVR user manual page'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Bookmark this page in your web browser, as it will be useful later on.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Installing the USBasp Driver
  id: totrans-129
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Unlike other operating systems, Windows requires you to install a driver to
    enable the USBasp programmer. There are different drivers for different USBasp
    programmers; the driver you need will depend on the brand you buy. You can find
    the Windows driver and installation instructions for generic USBasps on Thomas
    Fischl’s website: [https://www.fischl.de/usbasp/](https://www.fischl.de/usbasp/)
    . If you have a “branded” programmer from a company like Freetronics, however,
    please consult the product page for the correct driver and installation instructions.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve installed the driver for your USBasp programmer, you can quickly
    confirm the success of the installation by plugging it in and then visiting the
    Windows Device Manager, as in [Figure 1-15](nsp-boxall502581-0011.xhtml#f01015)
    .
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你安装了USBasp编程器的驱动程序，你可以通过将其插入并访问Windows设备管理器来快速确认安装是否成功，如[图1-15](nsp-boxall502581-0011.xhtml#f01015)所示。
- en: '![A screenshot of the Windows 11 Device Manager showing the USBasp programmer
    installed](images/nsp-boxall502581-f01015.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![显示安装了USBasp编程器的Windows 11设备管理器截图](images/nsp-boxall502581-f01015.jpg)'
- en: 'Figure 1-15: USBasp in Device Manager'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图1-15：设备管理器中的USBasp
- en: You should see USBasp listed in the *libusb-win32 devices* category. Now that
    you have the software required for this book installed on your computer, it’s
    time for you to learn about the basics of electricity!
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到USBasp列在*libusb-win32设备*类别中。现在你已经在电脑上安装了本书所需的软件，接下来是时候了解电学基础知识了！
- en: '[Current, Voltage, and Power](nsp-boxall502581-0008.xhtml#rah0305)'
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[电流、电压与功率](nsp-boxall502581-0008.xhtml#rah0305)'
- en: 'In order to build electronic circuits with your AVR-based projects, you’ll
    need a basic grasp of how electricity works. In simple terms, *electricity* is
    a form of energy that you can harness and convert into heat, light, movement,
    and power. Electricity has three main properties important for our purposes: current,
    voltage, and power.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用基于AVR的项目构建电子电路，你需要对电力的工作原理有基本的了解。简单来说，*电力*是一种能量形式，你可以利用并转化为热能、光能、运动和功率。电力有三个对我们而言重要的主要特性：电流、电压和功率。
- en: '*Current* is the flow of electrical energy through a circuit from the positive
    side of a power source, such as a battery, to the negative side of the power source.
    In circuits that are not powered by a battery, the negative side is instead called
    *ground (GND)* . This kind of current is known as *direct current (DC)* . (For
    the purposes of this book, you won’t deal with the *alternating current [AC]*
    that is supplied by 110 V or 230 V mains power outlets.) Current is measured in
    amperes (or amps), abbreviated as A. Small amounts of current are measured in
    milliamps (mA), where 1,000 mA equals 1 A.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '*电流*是电能通过电路流动的过程，从电源的正极（例如电池）流向负极。在没有电池供电的电路中，负极通常被称为*地（GND）*。这种电流被称为*直流电（DC）*。（对于本书而言，你不会接触到由110
    V或230 V市电提供的*交流电[AC]*。）电流的单位是安培（或安），简写为A。小量的电流则以毫安（mA）来衡量，1,000 mA等于1 A。'
- en: '*Voltage* is an indication of the difference in potential energy between a
    circuit’s positive and negative ends, measured in *volts (V)* . The greater the
    voltage, the faster the current moves through a circuit.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '*电压*是电路正负端之间势能差的表示，单位为*伏特（V）*。电压越大，电流在电路中的流动速度就越快。'
- en: '*Power* is a measurement of the rate at which an electrical device converts
    energy from one form to another. Power is measured in *watts (W)* . For example,
    a 100 W light bulb is much brighter than a 60 W bulb because the higher-wattage
    bulb converts more electrical energy into light.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '*功率*是衡量电气设备将能量从一种形式转换为另一种形式的速率。功率的单位是*瓦特（W）*。例如，一个100 W的灯泡比60 W的灯泡亮得多，因为更高瓦数的灯泡将更多的电能转化为光。'
- en: 'A simple mathematical relationship exists among voltage, current, and power:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 电压、当前和功率之间存在简单的数学关系：
- en: Power ( *W* ) = Voltage ( *V* ) × Current ( *A* )
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 功率（*W*） = 电压（*V*） × 电流（*A*）
- en: Later chapters of this book will explain the uses of this formula in detail.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 本书后续章节将详细解释此公式的应用。
- en: '[Electronic Components](nsp-boxall502581-0008.xhtml#rah0306)'
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[电子元件](nsp-boxall502581-0008.xhtml#rah0306)'
- en: Now that you know a little bit about the basics of electricity, let’s look at
    how electricity interacts with electronic components and devices. Electronic *components*
    are the parts in a circuit that control electric current and make your designs
    a reality. Just as the many parts of a car work together to let us drive, electronic
    components work together to help us harness and control electricity to create
    useful devices.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了电学的基本概念，接下来我们来看看电力如何与电子元件和设备互动。电子*元件*是电路中的部分，它们控制电流并让你的设计成为现实。就像汽车的多个部件协同工作让我们能够驾驶一样，电子元件也会共同协作，帮助我们利用并控制电力来创造有用的设备。
- en: Throughout this book, I’ll explain specialized components as they come up. The
    following sections describe some of the fundamental components you’ll need in
    any project.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中，我会在需要时解释一些专业元件。以下章节将介绍你在任何项目中需要的一些基本元件。
- en: '[Resistors](nsp-boxall502581-0008.xhtml#rbh0306)'
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Some components, such as LEDs, which we’ll look at shortly, require only a small
    amount of current to function—usually around 10 mA. When a component receives
    excess current, it converts the excess to heat, which can damage or destroy the
    component. To reduce the flow of current, you can add a *resistor* between the
    voltage source and the component. Current flows freely along electrical wire,
    but when it encounters a resistor, the current flow is limited. The resistor converts
    some of that current into a small amount of heat energy, proportional to its value.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 1-16](nsp-boxall502581-0011.xhtml#f01016) shows two examples of commonly
    used resistors.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of two example 0.25 W resistors set above a ruler](images/nsp-boxall502581-f01016.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-16: Typical resistors'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: The amount of current flow limitation is determined by the level of resistance,
    which can be either fixed or variable. Resistance is measured in ohms ( Ω ) and
    can range from zero to thousands of ohms (kilohms, or kΩ ) or millions of ohms
    (megohms, or MΩ ).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: Reading Resistance Values
  id: totrans-152
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Resistors are very small, so their resistance values usually cannot be printed
    on the components themselves. One common way to show a component’s resistance
    is with a series of color-coded bands, as shown (in grayscale) in [Figure 1-16](nsp-boxall502581-0011.xhtml#f01016)
    , where each color represents a numerical value. The *multiplier band* dictates
    the number of zeros to add to the end of the previous digits to complete the value.
    Resistors with five bands have a higher accuracy than four-band resistors.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s how to read these bands, from left to right:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: First band The first digit of the resistance
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: Second band The second digit of the resistance
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: Third band The multiplier (for four-band resistors) or the third digit of the
    resistance (for five-band resistors)
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: Fourth band The multiplier (for five-band resistors) or the resistor’s *tolerance*
    , a measure of its accuracy in terms of percentage (for four-band resistors)
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: Fifth band The resistor’s tolerance, for five-band resistors
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: To determine which band is the first and leftmost, check which band is closest
    to the edge of the resistor. The first band is usually closer to the left-hand
    edge than the last band is to the right-hand edge.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '[Table 1-2](nsp-boxall502581-0011.xhtml#tab0102) lists the colors of the different
    bands that can appear on resistors and their corresponding values.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: '| Table 1-2 : Values of Bands Printed on a Resistor, in Ohms |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
- en: '| --- |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
- en: '| Color | Ohms |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
- en: '| Black | 0 |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
- en: '| Brown | 1 |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
- en: '| Red | 2 |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
- en: '| Orange | 3 |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
- en: '| Yellow | 4 |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
- en: '| Green | 5 |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
- en: '| Blue | 6 |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
- en: '| Violet | 7 |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
- en: '| Gray | 8 |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
- en: '| White | 9 |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
- en: Because it is difficult to manufacture resistors with exact values, each has
    a margin of error, represented by the rightmost band. A brown band indicates 1 percent
    tolerance, gold indicates 5 percent tolerance, and silver indicates 10 percent
    tolerance. The smaller the tolerance, the greater the accuracy of the resistor.
    That is, the value of a 1 percent resistor can only vary +/−1 percent from the
    stated value, whereas the value of a 5 percent resistor can vary +/–5 percent
    from the stated value.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 1-17](nsp-boxall502581-0011.xhtml#f01017) shows a resistor diagram.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '![Diagram of a 47 kilohm resistor with yellow, violet, orange, and brown color
    bands that represent the resistor’s values](images/nsp-boxall502581-f01017.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-17: An example resistor diagram'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: The yellow, violet, and orange bands read as 4, 7, and 3, as listed in [Table
    1-2](nsp-boxall502581-0011.xhtml#tab0102) , with the brown band noting the tolerance
    (1 percent). These values translate to 47,000 Ω , more commonly written as 47
    kΩ . Often, you’ll see ohms written as R; for example, a 220 Ω resistor might
    be represented as 220 R.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: Another way to read resistance values is using a *multimeter* , an incredibly
    useful and relatively inexpensive piece of test equipment that can measure voltage,
    resistance, current, and more. [Figure 1-18](nsp-boxall502581-0011.xhtml#f01018)
    shows a multimeter measuring a resistor.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of measuring the resistance of a 560-ohm resistor using a digital multimeter.
    the resistance shown is 556.0.](images/nsp-boxall502581-f01018.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-18: A multimeter measuring a 560 Ω 1 percent tolerance resistor'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are colorblind, a multimeter is essential. Even if you are not, I highly
    recommend purchasing one: it will save you much time and reduce possible mistakes
    caused by misreading resistor color bands. As with other good tools, purchase
    your multimeter from a reputable retailer instead of fishing about on the internet
    for the cheapest one you can find.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: Power Rating
  id: totrans-185
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A resistor’s *power rating* is a measurement of the power, in watts, that it
    will tolerate before overheating or failing. When selecting a resistor, you need
    to consider the relationship between power, current, and voltage. The greater
    the current or voltage, the greater the resistor’s power rating. For example,
    using the formula Power ( *W* ) = Voltage ( *V* ) × Current ( *A* ), with a voltage
    of 5 V and a low current of 20 mA, the power-handling value required would be
    5 × 0.02 = 0.1 W. This would work fine with the 0.25 W resistors that are most
    commonly used in the projects in this book (the resistors shown in [Figure 1-16](nsp-boxall502581-0011.xhtml#f01016)
    are 0.25 W resistors).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: If projects in this book require different power handling, we’ll run through
    it when required and go over the best resistor to use instead. Usually, the greater
    a resistor’s power rating, the greater its physical size. For example, the resistor
    shown in [Figure 1-19](nsp-boxall502581-0011.xhtml#f01019) is a 5 W resistor,
    which measures 26 mm long by 7.5 mm wide.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of a 5 W ceramic resistor](images/nsp-boxall502581-f01019.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-19: A 5 W resistor'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '[Light-Emitting Diodes](nsp-boxall502581-0008.xhtml#rbh0307)'
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The LED is a very common yet infinitely useful component that converts electrical
    current into light. LEDs come in various shapes, sizes, and colors. [Figure 1-20](nsp-boxall502581-0011.xhtml#f01020)
    shows a common LED.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of a 5 mm red LED alongside a ruler](images/nsp-boxall502581-f01020.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-20: Red LED, 5 mm diameter'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: Connecting LEDs in a circuit takes some care because they are *polarized* ,
    meaning that current can enter and leave the LED in one direction only. The current
    enters via the *anode* (positive) side and leaves via the *cathode* (negative)
    side, as shown in [Figure 1-21](nsp-boxall502581-0011.xhtml#f01021) . Any attempt
    to make current flow in the opposite direction will break the LED.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: Thankfully, LEDs are designed so that you can tell which end is which. The leg
    on the anode side is longer, and on the cathode side, the rim at the base of the
    LED is flat, as shown in [Figure 1-22](nsp-boxall502581-0011.xhtml#f01022) .
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: '![Schematic symbol for an LED that also shows direction of current flow from
    anode to cathode](images/nsp-boxall502581-f01021.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-21: Current flow through an LED'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: '![Diagram of an LED showing that the longer leg is the anode and the shorter
    leg is the cathode](images/nsp-boxall502581-f01022.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-22: LED design indicates the anode (longer leg) and cathode (flat
    rim) sides.'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: When adding LEDs to a project, you must consider the operating voltage and current.
    For example, common red LEDs require around 1.7 V and 5 to 20 mA of current. This
    presents a slight problem, because the power supply used in the projects in this
    book will output 5 V and a much higher current. Luckily, you can use a *current-limiting
    resistor* to reduce the current flow into an LED. But which value resistor do
    you use? That’s where Ohm’s law comes in.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: '*Ohm’s law* states that voltage is equal to current times resistance, or *V*
    = *I* × *R* . It follows that to calculate the required current-limiting resistor
    for an LED, you can use this formula:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: '*R* = ( *V* [s] − *V* [f] ) / *I*'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: 'where *V* [s] is the supply voltage (which will be 5 V when powering the circuit
    from our USBasp programmer), *V* [f] is the LED forward voltage drop (say, 1.7
    V), and *I* is the current required for the LED (10 mA). The value of *I* must
    be in amps, so 10 mA converts to 0.01 A. You can use these values for your LEDs:
    substituting them into the formula gives a value for *R* of 330 Ω . However, the
    LEDs will happily light when fed current less than 10 mA. It’s good practice to
    use lower currents when possible to protect sensitive electronics, so I recommend
    using 560 Ω , 0.25 W resistors with your LEDs, which provide about 6 mA.'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: When in doubt, always choose a slightly higher value resistor, because it’s
    better to have a dim LED than a dead one!
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: The Ohm’s Law Triangle
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: 'Ohm’s law states that the relationship between current, resistance, and voltage
    is as follows: *V* = *I* × *R* . A popular way to remember Ohm’s law is with a
    triangle, as shown in the figure below.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: '![Image of the Ohm’s law triangle, used to determine formulas for calculating
    power, current, or resistance values. The top third is labeled V, the bottom-left
    third is labeled I, and the bottom-right third is labeled R.](images/nsp-boxall502581-g01003.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
- en: The Ohm’s law triangle
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: This diagram is a convenient tool for calculating voltage, current, or resistance
    when two of the three values are known. For example, if you need to calculate
    resistance, put your finger over R, leaving voltage divided by current. To calculate
    voltage, cover V, leaving current times resistance.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: '[Power Diodes](nsp-boxall502581-0008.xhtml#rbh0308)'
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A *power diode* is ideal for blocking current flow in one direction in a circuit.
    Power diodes are used in the same way as LEDs, but instead of illuminating when
    current flows, they protect the circuitry from current flowing in the opposite
    direction. There are many different types; we will use the common 1N4004 version
    shown in [Figure 1-23](nsp-boxall502581-0011.xhtml#f01023) .
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 1-24](nsp-boxall502581-0011.xhtml#f01024) shows the schematic symbol
    of the 1N4004 diode in [Figure 1-23](nsp-boxall502581-0011.xhtml#f01023) .'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of a common 1N4004 power diode](images/nsp-boxall502581-f01023.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-23: 1N4004 power diode'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: '![Schematic symbol for a 1N4004 power diode, also showing the direction of
    current flow from the anode to the cathode](images/nsp-boxall502581-f01024.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-24: 1N4004 schematic symbol'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: Up to 1 A of current can flow through the 1N4004 from the anode pin to the cathode
    pin. The 1N4004 also causes a voltage drop of 0.7 V DC and is a convenient way
    to drop voltage when required.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '[Capacitors](nsp-boxall502581-0008.xhtml#rbh0309)'
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A *capacitor* is a device that can hold an electric charge. It consists of two
    metal plates with an insulating layer that allows an electric charge to build
    up between them. The electric charge builds to a maximum value as current flows
    to the capacitor. Once the charge hits the maximum, current stops flowing through
    the capacitor. However, the charge remains and flows out of the capacitor, which
    is called *discharging* , as soon as it is presented with a new path.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: The amount of charge that a capacitor can store is measured in farads. One farad
    is actually a very large amount, so you’ll generally find capacitors with values
    in picofarads or microfarads. One picofarad (pF) is 0.000000000001 of a farad,
    and one microfarad ( μF ) is 0.000001 of a farad. Capacitors are also manufactured
    to accept voltage maximums. For the projects in this book you’ll only work with
    low voltages, so you’ll use capacitors rated at greater than 10 or so volts. It’s
    generally fine, however, to use capacitors with larger voltage specifications
    in lower-voltage circuits. Common voltage ratings for capacitors are 10, 16, 25,
    and 50 V.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: The projects covered in this book will use two types of capacitors, ceramic
    and electrolytic.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: Ceramic Capacitors
  id: totrans-222
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[Figure 1-25](nsp-boxall502581-0011.xhtml#f01025) shows a *ceramic capacitor*
    . These capacitors are very small and therefore hold a small amount of charge.
    They are not polarized and can be used for current flowing in either direction.
    Ceramic capacitors work beautifully in high-frequency circuits because they can
    charge and discharge very quickly due to their small capacitance.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of a small ceramic capacitor alongside a ruler](images/nsp-boxall502581-f01025.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-25: A 0.1 μF ceramic capacitor'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: Reading the value of a ceramic capacitor takes some practice, because the value
    is printed in a sort of code. The first two digits represent the value in picofarads,
    and the third digit is the multiplier in tens. For example, the capacitor shown
    in [Figure 1-25](nsp-boxall502581-0011.xhtml#f01025) is labeled “104.” This equates
    to 10, followed by four zeros, which equals 100,000 pF (equivalent to 100 nF,
    or 0.1 μF ).
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: Retailers or other projects may specify capacitor values that require you to
    do some mental arithmetic on the fly. To simplify conversions between these units
    of measurement, you can print the excellent conversion chart available at [https://www.justradios.com/uFnFpF.html](https://www.justradios.com/uFnFpF.html)
    .
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: Electrolytic Capacitors
  id: totrans-228
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Electrolytic capacitors* are physically larger than ceramic types, offer increased
    capacitance, and are polarized. A marking on the cover indicates the positive
    (+) and negative (–) sides; for example, [Figure 1-26](nsp-boxall502581-0011.xhtml#f01026)
    shows the stripe and small symbol (–) marking a capacitor’s negative side.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of a small electrolytic capacitor](images/nsp-boxall502581-f01026.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-26: An electrolytic capacitor'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: Like resistor values, marked capacitor values are also accurate within a certain
    tolerance. Unlike with resistors and ceramic capacitors, the values of the electrolytic
    capacitor are printed on them and don’t require decoding or interpretation. The
    capacitor in [Figure 1-26](nsp-boxall502581-0011.xhtml#f01026) has a tolerance
    of 20 percent, as indicated on the stripe with the negative symbol, and a capacitance
    of 100 μF , shown on the darker part of the label.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: Electrolytic capacitors provide power supply smoothing and stability near circuits
    or parts that draw high currents quickly from the supply. This prevents unwanted
    dropouts and noise in your circuits.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: '[Integrated Circuits](nsp-boxall502581-0008.xhtml#rbh0310)'
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: More commonly known by the acronym *IC* , an *integrated circuit* is a set of
    electronic circuits built into a piece of silicon and fitted inside a strong,
    usually rectangular, plastic housing. The current flows in or out of the metal
    legs, or pins.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: IC pins are identified by numbers, and the first step in working with ICs is
    figuring out which pin is which. First, locate the pinout for the IC; it should
    be available on the supplier’s website. (Check [Table 1-1](nsp-boxall502581-0011.xhtml#tab0101)
    to see the pinouts for the microcontrollers used in this book.) Then, look at
    the side of the IC that has writing on it to determine which pin is number one.
    This is usually the pin with a small circle closest to it. If you don’t see a
    small circle, hold the IC in a vertical position with the notched end pointed
    up. Pin one is at the bottom left of the IC when it is placed horizontally in
    front of you, as shown in [Figure 1-27](nsp-boxall502581-0011.xhtml#f01027) .
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of an ATmega328P-PU microcontroller, highlighting the location of pin
    number 1](images/nsp-boxall502581-f01027.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-27: Highlighting pin 1 of an IC'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: When inserting or removing ICs from a solderless breadboard or other location,
    be careful not to bend the pins, as they’re quite fragile and suffer from metal
    fatigue easily. It’s a good idea to use an *IC extractor* , a simple but useful
    clawlike toolthat can pull both ends of an IC at the same time, as demonstrated
    in [Figure 1-28](nsp-boxall502581-0011.xhtml#f01028) .
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of using an IC extractor to remove a microcontroller from an IC socket](images/nsp-boxall502581-f01028.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-28: An IC extractor in use'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: With this device you can slowly apply upward pressure on each end in turn, until
    the IC is loose enough to slowly draw up and out of the IC socket.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: '[Solderless Breadboards](nsp-boxall502581-0008.xhtml#rbh0311)'
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You’ll need a base to build your ever-changing circuits on, and a solderless
    breadboard is a great tool for this purpose. The breadboard is a plastic base
    with rows of electrically connected sockets. Breadboards come in many sizes, shapes,
    and colors, as shown in [Figure 1-29](nsp-boxall502581-0011.xhtml#f01029) . Just
    don’t cut bread on them. The colors aren’t important from an electrical perspective,
    they just help the end user differentiate between boards.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of various solderless breadboards](images/nsp-boxall502581-f01029.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-29: Breadboards in various shapes and sizes'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: The key to using a breadboard is understanding how the sockets are connected,
    whether in short columns or in long rows along the edge or in the center. The
    connections vary by board. For example, in the breadboard in [Figure 1-30](nsp-boxall502581-0011.xhtml#f01030)
    , columns of five holes are connected vertically but isolated horizontally. If
    you place two wires in one vertical row, they will be electrically connected.
    By the same token, the long rows in the center between the horizontal lines are
    electrically connected horizontally. You’ll often need to connect a circuit to
    the supply voltage and ground, and these long horizontal lines of holes are ideal
    for those connections.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo showing rows and columns of pins on a solderless breadboard that are
    electrically connected](images/nsp-boxall502581-f01030.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-30: Breadboard internal connections'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: When you’re building more complex circuits, a breadboard will get crowded and
    you won’t always be able to place components exactly where you want. You can solve
    this problem by using short connecting wires. Retailers that sell breadboards
    usually also sell small boxes of wires of various lengths, such as the assortment
    shown in [Figure 1-31](nsp-boxall502581-0011.xhtml#f01031) .
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: '![Example of a breadboard hookup wire kit](images/nsp-boxall502581-f01031.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-31: Assorted breadboard wires'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: '[Powering Your Projects](nsp-boxall502581-0008.xhtml#rbh0312)'
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use a multitude of methods to power your projects. In the spirit of
    keeping things simple and safe, I’ll just show you a few easy and inexpensive
    options.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: First, the USBasp itself can provide you with the right voltage for your AVR
    circuit. It provides only a limited amount of current, around 450 mA, but that’s
    more than sufficient for small projects with a limited number of components. However,
    this method is convenient only when your project is close to a USB socket.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: Another option is to use a *mains plugpack* with a regulated 5 V output and
    a *DC jack adaptor* . The adaptor, shown in [Figure 1-32](nsp-boxall502581-0011.xhtml#f01032)
    , allows you to connect wires to a jack that the plugpack can connect to. This
    lets you avoid modifying or damaging the end of the plugpack lead.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of a DC socket to screw terminal adaptor](images/nsp-boxall502581-f01032.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-32: A DC jack adaptor'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively, a *breadboard power supply* is a fantastic option, as it’s both
    cheap and extremely easy to use. This is a small circuit board that plugs into
    one end of your solderless breadboard, as shown in [Figure 1-33](nsp-boxall502581-0011.xhtml#f01033)
    . The supply then converts current from a mains plugpack adaptor to a safe 5 V
    or 3.3 V.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: '![Photo of a solderless breadboard power supply inserted in the end of a solderless
    breadboard](images/nsp-boxall502581-f01033.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-33: A solderless breadboard power supply'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: Your final option is to use four rechargeable AA cells in a battery holder.
    When charged, these cells each have a voltage of 1.2 V. Four of them gives you
    4.8 V, which is close enough to 5 V for almost any project. Don’t use disposable
    AA cells, as the initial voltage from new will be over 6 V, which will damage
    your project. You can hold rechargeable AA cells together easily in a neat enclosure,
    such as the one shown in [Figure 1-34](nsp-boxall502581-0011.xhtml#f01034) .
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: '![Four rechargeable AA batteries in a switched holder](images/nsp-boxall502581-f01034.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1-34: A four AA cell battery holder'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: The projects in this book use all four power methods discussed in this section,
    so you’ll need to obtain parts for each. For more detail on this, check the parts
    list at [https://nostarch.com/avr-workshop/](https://nostarch.com/avr-workshop/)
    .
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: In this first chapter, you’ve built the foundations for your AVR learning by
    seeing some examples of what’s possible, installed the required software, and
    learned about the basics of electricity and some of the parts you’ll be using.
    Now you’re ready for the [next chapter](nsp-boxall502581-0012.xhtml#ch02) , where
    you’ll build your first electronic circuit based around an AVR microcontroller,
    upload your first code, and start to dig into the microcontroller’s different
    operations.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
