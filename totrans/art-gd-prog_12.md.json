["```\ndr = alpha*Nrabbits - beta*Nrabbits*Ncoyotes;        \nNrabbits = (int)(Nrabbits + dr);\n```", "```\ndc= delta*Nrabbits*Ncoyotes - gamma*Ncoyotes;\nNcoyotes = (int)(Ncoyotes + dc);\n```", "```\nh = h + random(.87);\n```", "```\nif (i%3 == 0) s = 220+random(20)-10;\nelse if (i%2 == 0) s = 210+random(20)-10;\nelse s = 200+random(20)-10;\n```", "```\nimage (ad1, xoff, yoff);\n```", "```\nxoff += dx; yoff += dy;\nif (xoff <= -30 || xoff > 0) dx = -dx;\nif (yoff <= -30 || yoff > 0) dy = -dy;\n```", "```\nval[i] = val[i] - j;\n```", "```\nset (i,j,color(0,100,200)); \ndrawRoute (i,j,n-1); \n```", "```\nradius[k] / sqrt( (xx-x[k])*(xx-x[k]) + (yy-y[k])*(yy-y[k]) ) );\n```", "```\nfor (int i=0; i<Ncols; i++)  // Draw all bricks\n  for (int j=0; j<Nrows; j++)\n    if (exists[i][j]) rect (i*30+20, j*15+30, 30, 15);\n```", "```\nvoid md (float x0, float y0, float x1, float y1, float dy)\n```"]