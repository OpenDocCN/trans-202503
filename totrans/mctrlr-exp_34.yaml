- en: '**I  Other Chips**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**I 其他芯片**'
- en: '**I.1 PAL Truth Tables**'
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**I.1 PAL真值表**'
- en: Programmable array logic (PAL) and generic array logic (GAL) devices were early
    technologies for programmable logic that predate CPLD and FPGA devices. Programming
    methods were often unique to the brand of the chip, while the pinout and functionality
    were compatible between vendors. These days, they are mostly dumped for retrocomputing
    emulation and repair projects.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 可编程阵列逻辑（PAL）和通用阵列逻辑（GAL）设备是早期的可编程逻辑技术，早于CPLD和FPGA设备。这些设备的编程方法通常是特定于芯片品牌的，而引脚排列和功能在不同厂商之间是兼容的。如今，它们大多用于复古计算模拟和修复项目。
- en: DuPAL is an open suite of tools for PAL reverse engineering, available as Battaglia
    (2020). It consists of a hardware board with an Atmega chip for applying inputs
    and sampling outputs of a PAL chip, and GUI tools in Java that can export observations
    or test potential chip configurations.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: DuPAL是一个用于PAL逆向工程的开源工具套件，见Battaglia (2020)。它包括一块带有Atmega芯片的硬件板，用于施加输入并采样PAL芯片的输出，以及可以导出观察结果或测试潜在芯片配置的Java
    GUI工具。
- en: DuPAL does not read the raw memory out of the chip, so it is limited to states
    that can be externally observed from inputs and outputs. This gets confusing when
    output values are fed back as inputs, sometimes with a delay for synchronous logic.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: DuPAL并不直接读取芯片中的原始内存，因此它仅限于从输入和输出端外部观察到的状态。当输出值作为输入反馈时，有时会因同步逻辑的延迟而导致混淆。
- en: Surply (2015) describes the use of an Arduino Uno to dump the truth table of
    a PAL16L8 chip from a pinball machine. The truth tables were too large to reduce
    with Karnaugh mapping, but Surply was able to use the Quine-McCluskey method in
    the form of Niels Serup’s Electruth library for Python to minimize the PAL’s truth
    table in a few hours, revealing the address space of the machine’s many I/O ports.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Surply（2015）描述了使用Arduino Uno从弹球机的PAL16L8芯片中提取真值表的过程。由于真值表过大，无法通过Karnaugh映射进行简化，但Surply成功使用Niels
    Serup的Python Electruth库中的Quine-McCluskey方法，在几小时内简化了PAL的真值表，揭示了机器多个I/O端口的地址空间。
- en: '![Image](../images/f0406-01.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0406-01.jpg)'
- en: 'Figure I.1: MMI PAL16R6B'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图I.1：MMI PAL16R6B
- en: It’s also possible to dump these chips visually. PALs mark truth table bits
    with electromigration fuses. These work by running too much current through a
    very thin metal trace, causing the metal to flow along the path of the current,
    which breaks the trace.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过视觉方式提取这些芯片的内容。PAL通过电迁移保险丝标记真值表位。它们的工作原理是通过非常细的金属线路传导过多电流，导致金属沿着电流的路径流动，从而断开线路。
- en: '**I.2 Mifare Classic Gate Recovery**'
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**I.2 Mifare Classic门恢复**'
- en: Nohl et al. (2008) describes a successful reverse engineering of a then-secret
    cryptographic algorithm used by NXP’s Mifare Classic RFID tags. The chip, shown
    in [Figure I.2](app09.xhtml#chIfig2), is barely a millimeter square, available
    in 1K and 4K versions.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Nohl等人（2008）描述了成功逆向工程当时NXP的Mifare Classic RFID标签所使用的加密算法。该芯片如[图I.2](app09.xhtml#chIfig2)所示，大小不到一毫米的正方形，有1K和4K版本。
- en: Nohl required both surface and delayered photographs for this recovery, then
    used edge detection and pattern matching to recognize the standard-cell library
    of the chip. Though there are many thousands of gates on the chip, there are only
    seventy or so unique logic cells. The gate tileset has been published as SRL (2012b).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Nohl要求提供表面和去层化后的照片进行这次恢复，然后使用边缘检测和模式匹配来识别芯片的标准单元库。尽管芯片上有成千上万的门，但只有大约七十个独特的逻辑单元。该门集合已由SRL（2012b）发布。
- en: Of the six chip layers, the upper ones obscured cell identification. These were
    removed by mechanical polishing rather than through chemical etching. Images were
    then stitched with Hugin, and as Degate had not yet been written, custom Matlab
    scripts were used to perform standard cell identification.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在六层芯片中，较上层的隐藏了单元识别。这些通过机械抛光而非化学刻蚀去除。图像随后使用Hugin拼接，由于Degate尚未编写，使用自定义的Matlab脚本执行标准单元识别。
- en: After the Mifare Classic was reverse engineered, Plötz and Nohl (2011) followed
    with details of reverse engineering the Legic Prime RFID tag. The authors dumped
    their custom Matlab scripts for Degate, and published their tile set as SRL (2012a).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mifare Classic被逆向工程后，Plötz和Nohl（2011）接着详细描述了Legic Prime RFID标签的逆向工程过程。作者们发布了他们的自定义Matlab脚本用于Degate，并将他们的芯片集作为SRL（2012a）发布。
- en: '![Image](../images/f0408-01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0408-01.jpg)'
- en: 'Figure I.2: Mifare Classic'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图I.2：Mifare Classic
