- en: '**4'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**4'
- en: CREATING A BINOMIAL PROBABILITY DISTRIBUTION**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建一个二项概率分布**'
- en: '![Image](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common.jpg)'
- en: 'In [Chapter 3](ch03.xhtml#ch03), you learned some basic rules of probability
    corresponding to the common logical operators: AND, OR, and NOT. In this chapter
    we’re going to use these rules to build our first *probability distribution*,
    a way of describing all possible events and the probability of each one happening.
    Probability distributions are often visualized to make statistics more palatable
    to a wider audience. We’ll arrive at our probability distribution by defining
    a function that *generalizes* a particular group of probability problems, meaning
    we’ll create a distribution to calculate the probabilities for a whole range of
    situations, not just one particular case.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第3章](ch03.xhtml#ch03)中，你学习了与常见逻辑运算符：与（AND）、或（OR）和非（NOT）对应的一些基本概率规则。在本章中，我们将使用这些规则构建我们的第一个*概率分布*，一种描述所有可能事件及其发生概率的方式。概率分布通常通过可视化来帮助更广泛的观众理解统计学。我们将通过定义一个*泛化*特定概率问题组的函数来得到我们的概率分布，这意味着我们将创建一个分布来计算一系列情境的概率，而不仅仅是某个特定的案例。
- en: We generalize in this way by looking at the common elements of each problem
    and abstracting them out. Statisticians use this approach to make solving a wide
    range of problems much easier. This can be especially useful when problems are
    very complex, or some of the necessary details may be unknown. In these cases,
    we can use well-understood probability distributions as estimates for real-world
    behavior that we don’t fully understand.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过观察每个问题的共性元素并将其抽象化来进行泛化。统计学家使用这种方法来使解决各种问题变得更加容易。当问题非常复杂，或者一些必要的细节可能未知时，这种方法尤其有用。在这些情况下，我们可以使用已知的概率分布作为我们无法完全理解的现实世界行为的估计。
- en: Probability distributions are also very useful for asking questions about ranges
    of possible values. For example, we might use a probability distribution to determine
    the probability that a customer makes between $30,000 and $45,000 a year, the
    probability of an adult being taller than 6’ 10’’, or the probability that between
    25 percent and 35 percent of people who visit a web page will sign up for an account
    there. Many probability distributions involve very complex equations and can take
    some time to get used to. However, all the equations for probability distributions
    are derived from the basic rules of probability covered in the previous chapters.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 概率分布对于提出关于可能值范围的问题也非常有用。例如，我们可能会使用概率分布来确定一个顾客年收入在30,000到45,000美元之间的概率，成人身高超过6英尺10英寸的概率，或者访问某个网页的用户中，25%到35%的人会注册账户的概率。许多概率分布涉及非常复杂的方程，可能需要一些时间才能习惯。然而，所有的概率分布方程都是从前面章节中涵盖的基本概率规则推导出来的。
- en: '**Structure of a Binomial Distribution**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**二项分布的结构**'
- en: 'The distribution you’ll learn about here is the *binomial distribution*, used
    to calculate the probability of a certain number of successful outcomes, given
    a number of trials and the probability of the successful outcome. The “bi” in
    the term *binomial* refers to the two possible outcomes that we’re concerned with:
    an event happening and an event *not* happening. If there are more than two outcomes,
    the distribution is called *multinomial*. Example problems that follow a binomial
    distribution include the probability of:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在这里学习的分布是*二项分布*，用于计算在给定试验次数和成功结果的概率下，某个成功结果出现的概率。术语*二项*中的“bi”指的是我们关心的两种可能结果：事件发生和事件*不*发生。如果有超过两种结果，则该分布称为*多项式分布*。遵循二项分布的示例问题包括：
- en: Flipping two heads in three coin tosses
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在三次掷硬币中掷出两次正面
- en: Buying 1 million lottery tickets and winning at least once
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 购买100万张彩票并至少中一次
- en: Rolling fewer than three 20s in 10 rolls of a 20-sided die
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在10次掷20面骰子中掷出少于三个20
- en: 'Each of these problems shares a similar structure. Indeed, all binomial distributions
    involve three *parameters*:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题都具有相似的结构。事实上，所有二项分布都涉及三个*参数*：
- en: '***k*** The number of outcomes we care about'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '***k*** 我们关心的结果数'
- en: '***n*** The total number of trials'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '***n*** 总试验次数'
- en: '***p*** The probability of the event happening'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '***p*** 事件发生的概率'
- en: 'These parameters are the inputs to our distribution. So, for example, when
    we’re calculating the probability of flipping two heads in three coin tosses:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数是我们分布的输入。例如，当我们计算在三次掷硬币中出现两次正面的概率时：
- en: '*k* = 2, the number of events we care about, in this case flipping a heads'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*k* = 2，我们关心的事件数，在此例中为翻到正面'
- en: '*n* = 3, the number times the coin is flipped'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*n* = 3，硬币投掷的次数'
- en: '*p* = 1/2, the probability of flipping a heads in a coin toss'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*p* = 1/2，投掷硬币时翻到正面的概率'
- en: 'We can build out a binomial distribution to generalize this kind of problem,
    so we can easily solve any problem involving these three parameters. The shorthand
    notation to express this distribution looks like this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以构建一个二项式分布来泛化这种类型的问题，从而轻松解决任何涉及这三个参数的问题。表达此分布的简写符号如下：
- en: '*B*(*k*;*n*, *p*)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*B*(*k*;*n*, *p*)'
- en: For the example of three coin tosses, we would write *B*(2; 3, 1/2). The *B*
    is short for *binomial* distribution. Notice that the *k* is separated from the
    other parameters by a semicolon. This is because when we are talking about a distribution
    of values, we usually care about all values of *k* for a fixed *n* and *p*. So
    *B*(*k*; *n*, *p*) denotes each value in our distribution, but the entire distribution
    is usually referred to by simply *B*(*n*, *p*).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于三个硬币投掷的例子，我们可以写作 *B*(2; 3, 1/2)。其中 *B* 是 *二项式* 分布的简称。注意，*k* 与其他参数之间用分号分隔。这是因为当我们讨论一个值的分布时，通常关注的是固定
    *n* 和 *p* 下所有 *k* 的值。因此，*B*(*k*; *n*, *p*) 表示我们分布中的每一个值，但整个分布通常仅用 *B*(*n*, *p*)
    来表示。
- en: Let’s take a look at this more closely and see how we can build a function that
    allows us to generalize all of these problems into the binomial distribution.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更仔细地看看，看看如何构建一个函数，使我们能够将所有这些问题泛化到二项式分布中。
- en: '**Understanding and Abstracting Out the Details of Our Problem**'
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**理解并抽象化我们问题的细节**'
- en: One of the best ways to see how creating distributions can simplify your probabilities
    is to start with a concrete example and try to solve that, and then abstract out
    as many of the variables as you can. We’ll continue with the example of calculating
    the probability of flipping two heads in three coin tosses.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 看到如何通过创建分布来简化概率计算是最好的方法之一，首先从一个具体的例子入手并尝试解决它，然后抽象出尽可能多的变量。我们将继续以计算三次硬币投掷中翻到两个正面的概率为例。
- en: 'Since the number of possible outcomes is small, we can quickly figure out the
    results we care about with just pencil and paper. There are three possible outcomes
    with two heads in three tosses:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 由于可能的结果数量较小，我们可以仅通过纸和笔快速计算出我们关心的结果。在三次投掷中有三种可能的结果是两个正面：
- en: HHT, HTH, THH
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: HHT，HTH，THH
- en: Now it may be tempting to just solve this problem by enumerating all the other
    possible outcomes and dividing the number we care about by the total number of
    possible outcomes (in this case, 8). That would work fine for solving *just* this
    problem, but our aim here is to solve any problem that involves desiring a set
    of outcomes, from a number of trials, with a given probability that the event
    occurs. If we did not generalize and solved only this one instance of the problem,
    changing these parameters would mean we have to solve the new problem again. For
    example, just saying, “What is the probability of getting two heads in *four*
    coin tosses?” means we need to come up with yet another unique solution. Instead,
    we’ll use the rules of probability to reason about this problem.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，可能会有冲动通过列举所有其他可能的结果并将我们关心的结果数除以可能结果的总数（在此例中为 8）来解决这个问题。这种方法对于仅仅解决这个问题是可行的，但我们在这里的目标是解决任何涉及从若干次试验中期望一组结果的概率问题。如果我们不进行泛化，而只解决这个问题实例，那么改变这些参数将意味着我们必须重新解决新的问题。例如，仅仅问，“在
    *四* 次硬币投掷中获得两个正面的概率是多少？”就意味着我们需要提出另一个独特的解决方案。相反，我们将使用概率规则来推理这个问题。
- en: To start generalizing, we’ll break this problem down into smaller pieces we
    can solve right now, and reduce those pieces into manageable equations. As we
    build up the equations, we’ll put them together to create a generalized function
    for the binomial distribution.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始泛化，我们将把这个问题分解成可以立即解决的小部分，并将这些部分转化为可管理的方程式。在构建方程时，我们将它们结合起来创建一个二项式分布的通用函数。
- en: 'The first thing to note is that each outcome we care about will have the *same*
    probability. Each outcome is just a *permutation*, or reordering, of the others:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 首先需要注意的是，我们关心的每一个结果将具有 *相同* 的概率。每个结果只是其他结果的 *排列*，或重新排序：
- en: '*P*({heads, heads, tails}) = *P*({heads, tails, heads}) = *P*({tails, heads,
    heads})'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*({正面，正面，反面}) = *P*({正面，反面，正面}) = *P*({反面，正面，正面})'
- en: 'Since this is true, we’ll simply call it:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这一点，我们将简单地称之为：
- en: '*P*(Desired Outcome)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(期望结果)'
- en: 'There are three outcomes, but only one of them can possibly happen and we don’t
    care which. And because it’s only possible for one outcome to occur, we know that
    these are mutually exclusive, denoted as:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 有三个结果，但只有一个可能发生，我们不关心是哪一个。而且由于只有一个结果可能发生，我们知道这些结果是互斥的，表示为：
- en: '*P*({heads, heads, tails},{heads, tails, heads},{tails, heads, heads}) = 0'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*({正面，正面，反面},{正面，反面，正面},{反面，正面，正面}) = 0'
- en: 'This makes using the sum rule of probability easy. Now we can summarize this
    nicely as:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得使用概率的加法规则变得简单。现在我们可以将其总结为：
- en: '*P*({heads, heads, tails} or {heads, tails, heads} or {tails, heads, heads})
    = *P*(Desired Outcome) + *P*(Desired Outcome) + *P*(Desired Outcome)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*({正面，正面，反面} 或 {正面，反面，正面} 或 {反面，正面，正面}) = *P*(期望结果) + *P*(期望结果) + *P*(期望结果)'
- en: 'Of course adding these three is just the same as:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，把这三者加起来就等于：
- en: 3 × *P*(Desired Outcome)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 3 × *P*(期望结果)
- en: 'We’ve got a condensed way of referencing the outcomes we care about, but the
    trouble as far as generalizing goes is that the value 3 is specific to this problem.
    We can fix this by simply replacing 3 with a variable called *N*[outcomes]. This
    leaves us with a pretty nice generalization:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经找到了一个简洁的方式来表示我们关心的结果，但就推广而言，问题在于值3是特定于此问题的。我们可以通过简单地将3替换为一个叫做*N*[结果]的变量来解决这个问题。这样，我们得到了一个相当不错的推广：
- en: '*B*(*k*;*n*, *p*) = *N*[outcomes] × *P*(Desired Outcome)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*B*(*k*;*n*, *p*) = *N*[结果] × *P*(期望结果)'
- en: 'Now we have to figure out two subproblems: how to count the number of outcomes
    we care about, and how to determine the probability for a single outcome. Once
    we have these fleshed out, we’ll be all set!'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要解决两个子问题：如何计算我们关心的结果数量，以及如何确定单个结果的概率。一旦我们弄清楚这些问题，就大功告成了！
- en: '**Counting Our Outcomes with the Binomial Coefficient**'
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用二项系数计数我们的结果**'
- en: 'First we need to figure out how many outcomes there are for a given *k* (the
    outcomes we care about) and *n* (the number of trials). For small numbers we can
    simply count. If we were looking at four heads in five coin tosses, we know there
    are five outcomes we care about:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要弄清楚给定的*k*（我们关心的结果）和*n*（试验次数）有多少种结果。对于小的数字，我们可以简单地进行计数。如果我们看四次正面出现在五次抛硬币中的情况，我们知道我们关心的结果有五种：
- en: HHHHT, HTHHH, HHTHH, HHHTH, HHHHT
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: HHHHT, HTHHH, HHTHH, HHHTH, HHHHT
- en: But it doesn’t take much for this to become too difficult to do by hand—for
    example, “What is the probability of rolling two 6s in three rolls of a six-sided
    die?”
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 但这并不需要太长时间就变得难以手动完成——例如，“在三次掷骰子中掷出两个6点的概率是多少？”
- en: 'This is still a binomial problem, because the only two possible outcomes are
    getting a 6 or not getting a 6, but there are far more events that count as “not
    getting a 6.” If we start enumerating we quickly see this gets tedious, even for
    a small problem involving just three rolls of a die:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这仍然是一个二项问题，因为只有两个可能的结果：掷出6点或未掷出6点，但有更多事件可以算作“未掷出6点”。如果我们开始列举，很快就会发现，这对一个仅涉及三次骰子投掷的小问题来说也变得繁琐：
- en: 6 – 6 – 1
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 6 – 6 – 1
- en: 6 – 6 – 2
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 6 – 6 – 2
- en: 6 – 6 – 3
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 6 – 6 – 3
- en: . . .
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: . . .
- en: 4 – 6 – 6
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 4 – 6 – 6
- en: . . .
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: . . .
- en: 5 – 6 – 6
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 5 – 6 – 6
- en: . . .
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: . . .
- en: Clearly, enumerating all of the possible solutions will not scale to even reasonably
    trivial problems. The solution is combinatorics.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，列举所有可能的解法对于即使是相对简单的问题也无法扩展。解决方案是组合数学。
- en: '***Combinatorics: Advanced Counting with the Binomial Coefficient***'
  id: totrans-56
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***组合数学：使用二项系数进行高级计数***'
- en: We can gain some insight into this problem if we take a look at a field of mathematics
    called *combinatorics*. This is simply the name for a kind of advanced counting.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看一个叫做*组合数学*的数学领域，我们可以对这个问题有些见解。这只是一个高级计数的名称。
- en: 'There is a special operation in combinatorics, called the *binomial coefficient*,
    that represents counting the number of ways we can select *k* from *n*—that is,
    selecting the outcomes we care about from the total number of trials. The notation
    for the binomial coefficient looks like this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在组合数学中，有一个特殊的运算，叫做*二项系数*，它表示计算从*n*中选择*k*的方式数量——也就是从总试验次数中选择我们关心的结果。二项系数的表示法如下：
- en: '![Image](../images/f0037-01.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0037-01.jpg)'
- en: 'We read this expression as “*n* choose *k*.” So, for our example, we would
    represent “in three tosses choose two heads” as:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们读这个表达式为“*n*选择*k*”。所以，对于我们的例子，“在三次掷骰子中选择两个正面”的表示方式是：
- en: '![Image](../images/f0037-02.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0037-02.jpg)'
- en: 'The definition of this operation is:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这个运算的定义是：
- en: '![Image](../images/f0037-03.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0037-03.jpg)'
- en: The ! means *factorial*, which is the product of all the numbers up to and including
    the number before the ! symbol, so 5! = (5 × 4 × 3 × 2 × 1).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: ！表示 *阶乘*，它是从 1 到包含符号“！”之前所有数字的积，因此 5! = (5 × 4 × 3 × 2 × 1)。
- en: 'Most mathematical programming languages indicate the binomial coefficient using
    the `choose()` function. For example, with the mathematical language R, we would
    compute the binomial coefficient for the case of flipping two heads in three tosses
    with the following call:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数数学编程语言使用 `choose()` 函数表示二项式系数。例如，在数学语言 R 中，我们可以使用以下调用来计算三次抛硬币中出现两个正面的二项式系数：
- en: '[PRE0]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'With this general operation for calculating the number of outcomes we care
    about, we can update our generalized formula like so:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种通用的运算方式来计算我们关心的结果数，我们可以像这样更新我们的通用公式：
- en: '![Image](../images/f0038-01.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0038-01.jpg)'
- en: Recall that *P*(Desired Outcome) is the probability of any one of the combinations
    of getting two heads in three coin tosses. In the preceding equation, we use this
    value as a placeholder, but we don’t actually know how to calculate what this
    value is. The only missing piece of our puzzle is solving *P*(Single Outcome).
    After that, we’ll be able to easily generalize an entire class of problems!
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，*P*(期望结果) 是在三次抛硬币中获得两个正面的所有组合的概率。在前面的方程中，我们将这个值作为占位符使用，但我们实际上并不知道如何计算这个值。我们拼图中的唯一缺失部分是求解
    *P*(单一结果)。之后，我们将能够轻松推广到一个完整的问题类别！
- en: '***Calculating the Probability of the Desired Outcome***'
  id: totrans-70
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***计算期望结果的概率***'
- en: 'All we have left to figure out is the *P*(Desired Outcome), which is the probability
    of any of the possible events we care about. So far we’ve been using *P*(Desired
    Outcome) as a variable to help organize our solution to this problem, but now
    we need to figure out exactly how to calculate this value. Let’s look at the probability
    of getting two heads in five tosses. We’ll focus on a single case of an outcome
    that meets this condition: HHTTT.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要弄清楚的就是 *P*(期望结果)，即我们关心的所有可能事件的概率。到目前为止，我们一直将 *P*(期望结果) 作为一个变量来帮助组织我们对这个问题的解答，但现在我们需要确切知道如何计算这个值。让我们看看五次抛硬币中出现两个正面的概率。我们将专注于符合此条件的单一结果：HHTTT。
- en: 'We know the probability of flipping a heads in a single toss is 1/2, but to
    generalize the problem we’ll work with it as *P*(heads) so we won’t be stuck with
    a fixed value for our probability. Using the product rule and negation from the
    previous chapter, we can describe this problem as:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道，在单次抛硬币中，正面朝上的概率是1/2，但为了推广这个问题，我们将其表示为 *P*(正面)，这样我们就不会被固定的概率值限制住。利用上一章的乘积法则和否定法则，我们可以将这个问题描述为：
- en: '*P*(heads, heads, not heads, not heads, not heads)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(正面, 正面, 不是正面, 不是正面, 不是正面)'
- en: 'Or, more verbosely, as: “The probability of flipping heads, heads, not heads,
    not heads, and not heads.”'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，更冗长地说：“抛出正面，正面，非正面，非正面，非正面的概率。”
- en: 'Negation tells us that we can represent “not heads” as 1 – *P*(heads). Then
    we can use the product rule to solve the rest:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 否定法则告诉我们，“不是正面”可以表示为 1 – *P*(正面)。然后，我们可以使用乘积法则来解决其余部分：
- en: '*P*(heads, heads, not heads, not heads, not heads) = *P*(heads) × *P*(heads)
    × (1 – *P*(heads)) × (1 – *P*(heads)) × (1 – *P*(heads))'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(正面, 正面, 不是正面, 不是正面, 不是正面) = *P*(正面) × *P*(正面) × (1 – *P*(正面)) × (1 – *P*(正面))
    × (1 – *P*(正面))'
- en: 'Let’s simplify the multiplication by using exponents:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过使用指数来简化乘法运算：
- en: '*P*(heads)² × (1 – *P*(heads))³'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(正面)² × (1 – *P*(正面))³'
- en: 'If we put this all together, we see that:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们把这些都结合起来，我们可以看到：
- en: (two heads in five tosses) = *P*(heads)² × (1 – *P*(heads))³
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: (五次抛硬币中有两个正面) = *P*(正面)² × (1 – *P*(正面))³
- en: 'You can see that the exponents for *P*(heads)² and 1 – *P*(heads)³ are just
    the number of heads and the number of not heads in that scenario. These equate
    to *k*, the number of outcomes we care about, and *n* – *k*, the number of trials
    minus the outcomes we care about. We can put all of this together to create this
    much more general formula, which eliminates numbers specific to this case:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，*P*(正面)² 和 1 – *P*(正面)³ 的指数正好是该情景中正面和非正面的数量。这些等同于 *k*，我们关心的结果数，以及 *n*
    – *k*，即实验次数减去我们关心的结果数。我们可以将所有这些结合起来，创建一个更加通用的公式，消除特定于此案例的数字：
- en: '![Image](../images/f0039-01.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0039-01.jpg)'
- en: 'Now let’s generalize it for any probability, not just heads, by replacing *P*(heads)
    with just *p*. This gives us a general solution for *k*, the number of outcomes
    we care about; *n*, the number of trials; and *p*, the probability of the individual
    outcome:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将其推广到任何概率，而不仅仅是正面，通过将*P*(正面)替换为*p*。这样我们就得到了*k*的通用解，即我们关心的结果数；*n*，实验次数；以及*p*，单个结果的概率：
- en: '![Image](../images/f0039-02.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0039-02.jpg)'
- en: 'Now that we have this equation, we can solve any problem related to outcomes
    of a coin toss. For example, we could calculate the probability of flipping exactly
    12 heads in 24 coin tosses like so:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了这个方程，就可以解决任何与抛硬币结果相关的问题。例如，我们可以计算24次抛硬币中恰好得到12个正面的概率，计算方法如下：
- en: '![Image](../images/f0039-03.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0039-03.jpg)'
- en: Before you learned about the binomial distribution, solving this problem would
    have been much trickier!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在你学习二项分布之前，解决这个问题会困难得多！
- en: This formula, which is the basis of the binomial distribution, is called a *Probability
    Mass Function (PMF)*. The *mass* part of the name comes from the fact that we
    can use it to calculate the amount of probability for *any* given *k* using a
    fixed *n* and *p*, so this is the mass of our probability.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这个公式是二项分布的基础，称为*概率质量函数（PMF）*。名称中的*质量*部分来源于我们可以使用它来计算任何给定*k*值的概率大小，使用固定的*n*和*p*，因此这就是我们概率的“质量”。
- en: For example, we can plug in all the possible values for *k* in 10 coin tosses
    into our PMF and visualize what the binomial distribution looks like for all possible
    values, as shown in [Figure 4-1](ch04.xhtml#ch04fig01).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以将10次抛硬币中所有可能的*k*值代入我们的概率质量函数（PMF）并可视化所有可能值下的二项分布，如[图4-1](ch04.xhtml#ch04fig01)所示。
- en: '![Image](../images/04fig01.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/04fig01.jpg)'
- en: '*Figure 4-1: Bar graph showing the probability of getting* k *in 10 coin flips*'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '*图4-1：条形图显示了在10次抛硬币中得到* k *的概率*'
- en: We can also look at the same distribution for the probability of getting a 6
    when rolling a six-sided die 10 times, shown in [Figure 4-2](ch04.xhtml#ch04fig02).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以查看相同的分布，了解在掷一个六面骰子10次时得到6的概率，如[图4-2](ch04.xhtml#ch04fig02)所示。
- en: '![Image](../images/04fig02.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/04fig02.jpg)'
- en: '*Figure 4-2: The probability of getting a 6 when rolling a six-sided die 10
    times*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '*图4-2：掷一个六面骰子10次得到6的概率*'
- en: As you can see, a probability distribution is a way of generalizing an entire
    class of problems. Now that we have our distribution, we have a powerful method
    to solve a wide range of problems. But always remember that we derived this distribution
    from our simple rules of probability. Let’s put it to the test.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，概率分布是一种概括整个问题类别的方法。现在我们已经有了分布，我们就拥有了一种强大的方法来解决广泛的问题。但请始终记住，我们是根据简单的概率规则推导出这个分布的。让我们来验证一下。
- en: '**Example: Gacha Games**'
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**示例：抽卡游戏**'
- en: '*Gacha games* are a genre of mobile games, particularly popular in Japan, in
    which players are able to purchase virtual cards with in-game currency. The catch
    is that all cards are given at random, so when players purchase cards they can’t
    choose which ones they receive. Since not all cards are equally desirable, players
    are encouraged to keep pulling cards from the stack until they hit the one they
    want, in a fashion similar to a slot machine. We’ll see how the binomial distribution
    can help us to decide to take a particular risk in an imaginary Gacha game.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '*抽卡游戏*是一种特别在日本流行的手机游戏类型，玩家可以用游戏内货币购买虚拟卡片。问题在于所有卡片都是随机发放的，因此当玩家购买卡片时，他们无法选择收到哪张卡片。由于并非所有卡片都同样有吸引力，玩家会被鼓励继续从卡堆中抽卡，直到抽到他们想要的卡片，这种玩法与老虎机类似。我们将看到二项分布如何帮助我们在一个虚拟的抽卡游戏中决定是否承担某个风险。'
- en: 'Here’s the scenario. You have a new mobile game, *Bayesian Battlers*. The current
    set of cards you can pull from is called a *banner*. The banner contains some
    average cards and some featured cards that are more valuable. As you may suspect,
    all of the cards in *Bayesian Battlers* are famous probabilists and statisticians.
    The top cards in this banner are as follows, each with its respective probability
    of being pulled:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个情境。你有一款新的手机游戏，*贝叶斯战士*。当前你可以从中抽取的卡池称为*卡池*。卡池中包含一些普通卡片和一些价值更高的特色卡片。正如你可能猜到的，*贝叶斯战士*中的所有卡片都是著名的概率学家和统计学家。这个卡池中的顶级卡片如下，每张卡片都有其相应的抽中概率：
- en: 'Thomas Bayes: 0.721%'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Thomas Bayes: 0.721%'
- en: 'E. T. Jaynes: 0.720%'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'E. T. Jaynes: 0.720%'
- en: 'Harold Jeffreys: 0.718%'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Harold Jeffreys: 0.718%'
- en: 'Andrew Gelman: 0.718%'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Andrew Gelman: 0.718%'
- en: 'John Kruschke: 0.714%'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'John Kruschke: 0.714%'
- en: These featured cards account for only 0.03591 of the total probability. Since
    probability must sum to 1, the chance of pulling the less desirable cards is the
    other 0.96409\. Additionally, we treat the pile of cards that we pull from as
    effectively infinite, meaning that pulling a specific card does not change the
    probability of getting any other card—the card you pull here does not then disappear
    from the pile. This is different than if you were to pull a physical card from
    a single deck of cards without shuffling the card back in.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这些特色卡片只占总概率的0.03591。由于概率总和必须为1，抽到那些不太受欢迎的卡片的机会就是另外的0.96409。此外，我们将从中抽取的卡片堆视为几乎无限大，这意味着抽取一张特定卡片不会改变抽到其他卡片的概率——你抽到的卡片不会从卡片堆中消失。这与从一副未洗牌的实体卡牌中抽取卡片的情况不同。
- en: You really want the E. T. Jaynes card to complete your elite Bayesian team.
    Unfortunately, you have to purchase the in-game currency, Bayes Bucks, in order
    to pull cards. It costs one Bayes Buck to pull one card, but there’s a special
    on right now allowing you to purchase 100 Bayes Bucks for only $10\. That’s the
    maximum you are willing to spend on this game, and *only* if you have at least
    an even chance of pulling the card you want. This means you’ll buy the Bayes Bucks
    only if the probability of getting that awesome E. T. Jaynes card is greater than
    or equal to 0.5.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 你真的想要得到E. T. Jaynes卡片，以完成你的精英贝叶斯团队。不幸的是，你需要购买游戏内货币——贝叶斯币，才能抽卡。抽一张卡需要花费一枚贝叶斯币，但现在有一个特别优惠，允许你以仅10美元购买100枚贝叶斯币。这是你愿意在这款游戏上花费的最大金额，*仅仅*在你至少有50%的机会抽到你想要的卡片时才会购买。这意味着你只有在获得那张精彩的E.
    T. Jaynes卡的概率大于或等于0.5时，才会购买贝叶斯币。
- en: 'Of course we can plug our probability of getting the E. T. Jaynes card into
    our formula for the binomial distribution to see what we get:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以将获得E. T. Jaynes卡的概率代入我们的二项分布公式中，看看结果如何：
- en: '![Image](../images/f0042-01.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0042-01.jpg)'
- en: 'Our result is less than 0.5, so we should give up. But wait—we forgot something
    very important! In the preceding formula we calculated only the probability of
    getting *exactly one* E. T. Jaynes card. But we might pull two E. T. Jaynes cards,
    or even three! So what we really want to know is the probability of getting one
    or more. We could write this out as:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的结果小于0.5，因此我们应该放弃。但等等——我们忘记了一件非常重要的事情！在前面的公式中，我们计算的只是得到*恰好一张*E. T. Jaynes卡的概率。但我们可能会抽到两张E.
    T. Jaynes卡，甚至三张！所以我们真正想知道的是得到一张或更多张的概率。我们可以将其写成：
- en: '![Image](../images/f0042-02.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0042-02.jpg)'
- en: 'And so on, for the 100 cards you can pull with your Bayes Bucks, but this gets
    really tedious, so instead we use the special mathematical notation Σ (the capital
    Greek letter sigma):'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 以此类推，对于你可以用贝叶斯币抽取的100张卡片，但这个过程会变得非常繁琐，因此我们使用了特殊的数学符号Σ（希腊字母大写Sigma）：
- en: '![Image](../images/f0042-03.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0042-03.jpg)'
- en: The Σ is the summation symbol; the number at the bottom represents the value
    we start with and the number at the top represents the value we end with. So the
    preceding equation is simply adding up the values for the binomial distribution
    for every value of *k* from 1 to *n*, for a *p* of 0.00720.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Σ是求和符号；底部的数字表示我们开始的值，顶部的数字表示我们结束的值。所以，前面的方程式实际上是对每个从1到*n*的*k*值，使用*p*为0.00720的二项分布进行求和。
- en: We’ve made writing this problem down much easier, but now we actually need to
    compute this value. Rather than pulling out your calculator to solve this problem,
    now is a great time to start using R. In R, we can use the `pbinom()` function
    to automatically sum up all these values for *k* in our PMF. [Figure 4-3](ch04.xhtml#ch04fig03)
    shows how we use `pbinom()` to solve our specific problem.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经使得写下这个问题变得更简单，但现在我们需要实际计算这个值。与其拿出计算器解决这个问题，现在正是开始使用R语言的好时机。在R中，我们可以使用`pbinom()`函数自动求和我们PMF中所有*k*的值。[图4-3](ch04.xhtml#ch04fig03)展示了如何使用`pbinom()`来解决我们的具体问题。
- en: '![Image](../images/04fig03.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/04fig03.jpg)'
- en: '*Figure 4-3: Using the pbinom() function to solve our* Bayesian Battlers *problem*'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '*图4-3：使用pbinom()函数解决我们的*贝叶斯战士*问题*'
- en: The `pbinom()` function takes three required arguments and an optional fourth
    called `lower.tail` (which defaults to `TRUE`). When the fourth argument is `TRUE`,
    the first argument sums up all of the probabilities *less than or equal* to our
    argument. When `lower.tail` is set to `FALSE`, it sums up the probabilities *strictly
    greater than* the first argument. By setting the first argument to `0`, we are
    looking at the probability of getting one or more E. T. Jaynes cards. We set `lower.tail`
    to `FALSE` because that means we want values greater than the first argument (by
    default, we get values less than the first argument). The next value represents
    *n*, the number of trials, and the third argument represents *p*, the probability
    of success.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`pbinom()`函数需要三个必选参数和一个可选的第四个参数`lower.tail`（默认为`TRUE`）。当第四个参数为`TRUE`时，第一个参数会计算所有*小于或等于*该参数的概率。当`lower.tail`设置为`FALSE`时，它会计算*严格大于*第一个参数的概率。通过将第一个参数设置为`0`，我们是在计算获得一个或多个E.
    T. Jaynes卡片的概率。我们将`lower.tail`设置为`FALSE`，因为这意味着我们希望得到大于第一个参数的值（默认情况下，我们得到的是小于第一个参数的值）。下一个值表示*n*，即试验次数，第三个参数表示*p*，即成功的概率。'
- en: 'If we plug in our numbers here and set `lower.tail` to `FALSE` as shown in
    [Figure 4-3](ch04.xhtml#ch04fig03), R will calculate your probability of getting
    *at least one* E. T. Jaynes card for your 100 Bayes Bucks:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将我们的数字代入，并如[图4-3](ch04.xhtml#ch04fig03)所示，将`lower.tail`设置为`FALSE`，R将为你的100贝叶斯币计算出获得*至少一个*E.
    T. Jaynes卡片的概率：
- en: '![Image](../images/f0043-01.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0043-01.jpg)'
- en: Even though the probability of getting *exactly one* E. T. Jaynes card is only
    0.352, the probability of getting *at least one* E. T. Jaynes card is high enough
    for you to risk it. So shell out that $10 and complete your set of elite Bayesians!
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管获得*恰好一个*E. T. Jaynes卡片的概率只有0.352，但获得*至少一个*E. T. Jaynes卡片的概率足够高，值得一试。所以，花10美元完成你的精英贝叶斯学者卡片收藏吧！
- en: '**Wrapping Up**'
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: 'In this chapter we saw that we can use our rules of probability (combined with
    a trick from combinatorics) to create a general rule that solves an entire class
    of problems. Any problem that involves wanting to determine the probability of
    *k* outcomes in *n* trials, where the probability of the outcomes is *p*, we can
    solve easily using the binomial distribution:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到可以通过使用概率规则（结合组合学中的一个技巧）创建一个通用规则，解决一个类别的问题。任何涉及想要确定在*n*次试验中出现*k*次结果的概率的问题，其中结果的概率为*p*，我们都可以通过二项分布轻松解决：
- en: '![Image](../images/f0043-02.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0043-02.jpg)'
- en: Perhaps surprisingly, there is nothing more to this rule than counting and applying
    our rules of probability.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 可能令人惊讶的是，这条规则实际上只涉及计数和应用我们的概率规则。
- en: '**Exercises**'
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**练习**'
- en: Try answering the following questions to make sure you’ve grasped binomial distributions
    fully. The solutions can be found at *[https://nostarch.com/learnbayes/](https://nostarch.com/learnbayes/)*.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试回答以下问题，以确保你完全掌握了二项分布。解答可以在*[https://nostarch.com/learnbayes/](https://nostarch.com/learnbayes/)*找到。
- en: What are the parameters of the binomial distribution for the probability of
    rolling either a 1 or a 20 on a 20-sided die, if we roll the die 12 times?
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们掷12次20面骰子，求掷出1或20的概率，二项分布的参数是什么？
- en: There are four aces in a deck of 52 cards. If you pull a card, return the card,
    then reshuffle and pull a card again, how many ways can you pull just one ace
    in five pulls?
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一副52张的扑克牌中有四张王牌。如果你抽一张牌，放回去再洗牌，接着再抽一张牌，那么在五次抽牌中，只有一张王牌的抽取方式有多少种？
- en: For the example in question 2, what is the probability of pulling five aces
    in 10 pulls (remember the card is shuffled back in the deck when it is pulled)?
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于问题2中的例子，在10次抽牌中抽到5张王牌的概率是多少（记得每次抽牌后将卡片放回并洗牌）？
- en: When you’re searching for a new job, it’s always helpful to have more than one
    offer on the table so you can use it in negotiations. If you have a 1/5 probability
    of receiving a job offer when you interview, and you interview with seven companies
    in a month, what is the probability you’ll have at least two competing offers
    by the end of that month?
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你在找工作时，拥有多个工作机会总是有帮助的，这样你可以在谈判中使用它们。如果你在面试时有1/5的机会收到工作邀请，而你一个月内面试了七家公司，那么到月底你至少会收到两个竞争性邀请的概率是多少？
- en: You get a bunch of recruiter emails and find out you have 25 interviews lined
    up in the next month. Unfortunately, you know this will leave you exhausted, and
    the probability of getting an offer will drop to 1/10 if you’re tired. You really
    don’t want to go on this many interviews unless you are at least twice as likely
    to get at least two competing offers. Are you more likely to get at least two
    offers if you go for 25 interviews, or stick to just 7?
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你收到了大量招聘人员的电子邮件，并发现自己在接下来的一个月内安排了25场面试。不幸的是，你知道这样会让你精疲力尽，如果你很累，拿到offer的概率将降到1/10。除非你至少有两倍的机会获得至少两个竞争offer，否则你真的不想去参加这么多面试。如果你参加25场面试，还是只参加7场，你更有可能获得至少两个offer？
