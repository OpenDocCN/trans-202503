["```\n**let primes = [2, 3, 5, 7, 11, 13, 17, 19];**\n**primes;**\n`(8) [2, 3, 5, 7, 11, 13, 17, 19]` \n```", "```\n**primes[0];**\n2 \n```", "```\n**primes[7];**\n19 \n```", "```\n**primes.length;**\n8\n**primes[7];**\n19 \n```", "```\n**primes[primes.length - 1];**\n19 \n```", "```\n**primes[10];**\nundefined \n```", "```\n**primes[2] = 1;**\n**primes;**\n`(8) [2, 3, 1, 7, 11, 13, 17, 19]` \n```", "```\n**let ticTacToe = [**\n **[\"\", \"\", \"\"],**\n **[\"\", \"\", \"\"],**\n **[\"\", \"\", \"\"]**\n**];** \n```", "```\n**let ticTacToeOneLine = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];**\n```", "```\n**ticTacToe;**\n`(3) [Array(3), Array(3), Array(3)]` \n```", "```\n`(3) [Array(3), Array(3), Array(3)]`\n  0: (3) ['', '', '']\n  1: (3) ['', '', '']\n  2: (3) ['', '', '']\n   length: 3\n  [[Prototype]]: Array(0) \n```", "```\n**ticTacToe[0][2] = \"X\";**\n```", "```\n**ticTacToe;**\n(3) [Array(3), Array(3), Array(3)]\n  0: (3) ['', '', 'X']\n  1: (3) ['', '', '']\n  2: (3) ['', '', '']\n   length: 3\n  [[Prototype]]: Array(0) \n```", "```\n**ticTacToe[2][0] = \"O\";**\n**ticTacToe;**\n(3) [Array(3), Array(3), Array(3)]\n  0: (3) ['', '', 'X']\n  1: (3) ['', '', '']\n  2: (3) ['O', '', '']\n   length: 3\n  [[Prototype]]: Array(0) \n```", "```\n**let languages = [];**\n**languages.push(\"Python\");**\n1\n**languages.push(\"Haskell\");**\n2\n**languages.push(\"JavaScript\");**\n3\n**languages.push(\"Rust\");**\n4\n**languages;**\n`(4) ['Python', 'Haskell', 'JavaScript', 'Rust']` \n```", "```\n**languages.unshift(\"Erlang\");**\n5\n**languages.unshift(\"C\");**\n6\n**languages.unshift(\"Fortran\");**\n7\n**languages;**\n`(7) ['Fortran', 'C', 'Erlang', 'Python', 'Haskell', 'JavaScript', 'Rust']` \n```", "```\n**languages.pop();**\n'Rust'\n**languages;**\n`(6) ['Fortran', 'C', 'Erlang', 'Python', 'Haskell', 'JavaScript']` \n```", "```\n**let bestLanguage = languages.pop();**\n**let message = `My favorite language is ${bestLanguage}.`;**\n**message;**\n'My favorite language is JavaScript.'\n**languages;**\n`(5) ['Fortran', 'C', 'Erlang', 'Python', 'Haskell']` \n```", "```\n**let worstLanguage = languages.shift();**\n**message = `My least favorite language is ${worstLanguage}.`;**\n**message;**\n'My least favorite language is Fortran.'\n**languages;**\n`(4) ['C', 'Erlang', 'Python', 'Haskell']` \n```", "```\n**let fish = [\"Salmon\", \"Cod\", \"Trout\"];**\n**let mammals = [\"Sheep\", \"Cat\", \"Tiger\"];**\n**let animals = fish.concat(mammals);**\n**animals;**\n`(6) ['Salmon', 'Cod', 'Trout', 'Sheep', 'Cat', 'Tiger']` \n```", "```\n**let originals = [\"Hope\", \"Empire\", \"Jedi\"];**\n**let prequels = [\"Phantom\", \"Clones\", \"Sith\"];**\n**let sequels = [\"Awakens\", \"Last\", \"Rise\"];**\n**let starWars = prequels.concat(originals, sequels);**\n**starWars;**\n`(9) ['Phantom', 'Clones', 'Sith', 'Hope', 'Empire', 'Jedi', 'Awakens', 'Last', 'Rise']` \n```", "```\n**let sizes = [\"Small\", \"Medium\", \"Large\"];**\n**sizes.indexOf(\"Medium\");**\n1\n**sizes.indexOf(\"Huge\");**\n-1 \n```", "```\n**let flagOfArgentina = [\"Blue\", \"White\", \"Blue\"];**\n**flagOfArgentina.indexOf(\"Blue\");**\n0 \n```", "```\n**let beatles = [\"John\", \"Paul\", \"George\", \"Ringo\"];**\n**beatles.join();**\n'John,Paul,George,Ringo' \n```", "```\n**beatles.join(\"\");**\n'JohnPaulGeorgeRingo' \n```", "```\n**console.log(beatles.join(\"&\\n\"));**\nJohn&\nPaul&\nGeorge&\nRingo \n```", "```\n**[100, true, false, \"hi\"].join(\" - \");**\n'100 - true - false - hi' \n```", "```\n**let casablanca = {**\n **\"title\": \"Casablanca\",**\n **\"released\": 1942,**\n **\"director\": \"Michael Curtiz\"**\n**};**\n**casablanca;**\n`{title: 'Casablanca', released: 1942, director: 'Michael Curtiz'}` \n```", "```\n**let obj = { key1: 1, key_2: 2, \"key 3\": 3, \"key#4\": 4 };**\n**obj;**\n`{key1: 1, key_2: 2, key 3: 3, key#4: 4}` \n```", "```\n**obj[\"key 3\"];**\n3\n**casablanca[\"title\"];**\n'Casablanca' \n```", "```\n**obj.key_2;**\n2 \n```", "```\n**let dictionary = {};**\n**dictionary.mouse = \"A small rodent\";**\n**dictionary[\"computer mouse\"] = \"A pointing device for computers\";**\n**dictionary;**\n`{mouse: 'A small rodent', computer mouse: 'A pointing device for computers'}` \n```", "```\n**dictionary.mouse =** **\"A furry rodent\";**\n**dictionary;**\n`{mouse: 'A furry rodent', computer mouse: 'A pointing device for computers'}` \n```", "```\n**let cats = { \"Kiki\": \"black and white\", \"Mei\": \"tabby\", \"Moona\": \"gray\" };**\n**Object.keys(cats);**\n`(3) ['Kiki', 'Mei', 'Moona']` \n```", "```\n**let piano = {**\n **make: \"Steinway\",**\n **color: \"black\",**\n **keys: 88**\n**};** \n```", "```\n**let chromosomes = {**\n **koala: 16,**\n **snail: 24,**\n **giraffe: 30,**\n **cat: 38**\n**};**\n**Object.entries(chromosomes);**\n`(4) [Array(2), Array(2), Array(2), Array(2)]` \n```", "```\n`(4) [Array(2), Array(2), Array(2), Array(2)]`\n  0: (2) ['koala', 16]\n  1: (2) ['snail', 24]\n  2: (2) ['giraffe', 30]\n  3: (2) ['cat', 38]\n   length: 4\n  [[Prototype]]: Array(0) \n```", "```\n**let physical = { pages: 208, binding: \"Hardcover\" };**\n**let contents = { genre: \"Fiction\", subgenre: \"Mystery\" };** \n```", "```\n**let book = {};**\n**Object.assign(book, physical, contents);**\n**book;**\n`{pages: 208, binding: 'Hardcover', genre: 'Fiction', subgenre: 'Mystery'}` \n```", "```\n**Object.assign(physical, contents);**\n**physical;**\n`{pages: 208, binding: 'Hardcover', genre: 'Fiction', subgenre: 'Mystery'}` \n```", "```\n**let trilogies = [**\n❶ **{**\n **title: \"His Dark Materials\",**\n **author: \"Philip Pullman\",**\n **books: [\"Northern Lights\", \"The Subtle Knife\", \"The Amber Spyglass\"]**\n **},**\n❷ **{**\n **title: \"Broken Earth\",**\n **author: \"N. K. Jemisin\",**\n **books: [\"The Fifth Season\", \"The Obelisk Gate\", \"The Stone Sky\"]**\n **}**\n**];** \n```", "```\n**trilogies[1].books[0];**\n'The Fifth Season' \n```", "```\n**let penny = { name: \"Penny\", value: 1, weight: 2.5 };**\n**let nickel = { name: \"Nickel\", value: 5, weight: 5 };**\n**let dime = { name: \"Dime\", value: 10, weight: 2.268 };**\n**let quarter = { name: \"Quarter\", value: 25, weight: 5.67 };** \n```", "```\n**let change** **= [quarter, quarter, dime, penny, penny, penny];**\n```", "```\n**change[0].value;**\n25 \n```", "```\n**penny.weight = 2.49;**\n**change[3].weight;**\n2.49\n**change[4].weight;**\n2.49\n**change[5].weight;**\n2.49 \n```", "```\n**let nested = {**\n **name: \"Outer\",**\n **content: {**\n **name: \"Middle\",**\n **content: {**\n **name: \"Inner\",**\n **content: \"Whoa…\"**\n **}**\n **}**\n**};** \n```", "```\n**nested.content.content.content;**\n'Whoa…' \n```", "```\n**nested;**\n`{name: 'Outer', content: {…}}` \n```", "```\n`{name: 'Outer', content: {…}}`\n  content:\ncontent:\ncontent: \"Whoa…\"\nname: \"Inner\"\n  [[Prototype]]: Object\nname: \"Middle\"\n[[Prototype]]: Object\nname: \"Outer\"\n  [[Prototype]]: Object \n```", "```\n**JSON.stringify(nested);**\n'{\"name\":\"Outer\",\"content\":{\"name\":\"Middle\",\"content\":{\"name\":\"Inner\",\"content\":\"Whoa…\"}}}' \n```", "```\n**nestedJSON = JSON.stringify(nested, null, 2);**\n**console.log(nestedJSON);**\n{\n  \"name\": \"Outer\",\n  \"content\": {\n\"name\": \"Middle\",\n\"content\": {\n  \"name\": \"Inner\",\n\"content\": \"Whoa…\"\n}\n  }\n} \n```"]