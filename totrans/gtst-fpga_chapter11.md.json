["```\n❶ module bidirectional(inout io_Data,\n   `--snip--`\n❷ assign w_RX_Data = io_Data;\n❸ assign io_Data   = w_TX_En ? w_TX_Data : 1'bZ;\n   `--snip--`\n```", "```\nentity bidirectional is\n❶ port (io_Data : inout std_logic,\n   `--snip--`\n❷ w_RX_Data <= io_Data;\n❸ io_Data   <= w_TX_Data when w_TX_En = '1' else 'Z';\n   `--snip--`\n```", "```\nLOCATE COMP \"o_Data\" SITE \"A13\";\nIOBUF PORT \"o_Data\" IO_TYPE=LVCMOS33 DRIVE=8 SLEWRATE=FAST;\n```", "```\nODDR #(\n.DDR_CLK_EDGE(\"OPPOSITE_EDGE\"),\n.INIT(1'b0), // Initial value of Q: 1'b0 or 1'b1\n.SRTYPE(\"SYNC\") // Set/reset type: \"SYNC\" or \"ASYNC\"\n) ODDR_inst (\n❶ .Q(Q), // 1-bit DDR output\n.C(C), // 1-bit clock input\n.CE(CE), // 1-bit clock enable input\n.D1(D1), // 1-bit data input (positive edge)\n.D2(D2), // 1-bit data input (negative edge)\n.R(R), // 1-bit reset\n.S(S) // 1-bit set\n);\n```", "```\nODDR_inst : ODDR\ngeneric map(\nDDR_CLK_EDGE => \"OPPOSITE_EDGE\",\nINIT => '0', -- Initial value for Q port ('1' or '0')\nSRTYPE => \"SYNC\") -- Reset type (\"ASYNC\" or \"SYNC\")\nport map (\n❶ Q => Q, -- 1-bit DDR output\nC => C, -- 1-bit clock input\nCE => CE, -- 1-bit clock enable input\nD1 => D1, -- 1-bit data input (positive edge) D2 => D2, -- 1-bit data input (negative edge)\nR => R, -- 1-bit reset input\nS => S -- 1-bit set input\n);\n```"]