- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">B</samp> <samp class="SANS_Dogma_OT_Bold_B_11">ASSEMBLY
    GENERATION AND CODE EMISSION TABLES</samp>
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">B</samp> <samp class="SANS_Dogma_OT_Bold_B_11">汇编生成与代码输出表格</samp>
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: '![](../images/opener-img.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/opener-img.jpg)'
- en: In each chapter where we updated the conversion from TACKY to assembly or the
    code emission pass, I included tables summarizing those passes. From [Chapter
    4](chapter4.xhtml) on, these tables showed only the changes made in that chapter,
    not the entire pass. This appendix presents the complete tables summarizing these
    passes at the end of [Part I](part1.xhtml), [Part II](part2.xhtml), and [Part
    III](part3.xhtml).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在每一章中，关于将TACKY转换为汇编语言或代码生成的部分，我都包含了总结这些过程的表格。从[第4章](chapter4.xhtml)开始，这些表格仅展示了该章节中所做的更改，而非整个过程。附录中展示了总结这些过程的完整表格，位于[第一部分](part1.xhtml)、[第二部分](part2.xhtml)和[第三部分](part3.xhtml)的末尾。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Part I</samp>
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">第一部分</samp>
- en: The first set of tables in this section illustrates how your compiler should
    convert every TACKY construct to assembly at the end of [Part I](part1.xhtml).
    The second set of tables illustrates how your compiler should emit every assembly
    construct at the end of [Part I](part1.xhtml).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中的第一组表格说明了编译器应该如何将每个TACKY构造转换为汇编语言，位于[第一部分](part1.xhtml)的末尾。第二组表格说明了编译器应该如何输出每个汇编构造，位于[第一部分](part1.xhtml)的末尾。
- en: '### <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Converting TACKY
    to Assembly</samp>'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '### <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">将TACKY转换为汇编语言</samp>'
- en: '[Tables B-1](#tabB-1) through [B-5](#tabB-5) show the complete conversion from
    TACKY to assembly at the end of [Part I](part1.xhtml).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[表B-1](#tabB-1)到[B-5](#tabB-5)展示了将TACKY转换为汇编语言的完整过程，位于[第一部分](part1.xhtml)的末尾。'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-1:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    Top-Level TACKY Constructs to Assembly</samp>
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-1:</samp> <samp class="SANS_Futura_Std_Book_11">将顶级TACKY构造转换为汇编语言</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY top-level construct</samp>
    | <samp class="SANS_Futura_Std_Heavy_B_11">Assembly top-level construct</samp>
    |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY顶级构造</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">汇编顶级构造</samp>
    |'
- en: '| --- | --- |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '|'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '|'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '|'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '|'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '|'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '|'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '|'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-2:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    TACKY Instructions to Assembly</samp>
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-2:</samp> <samp class="SANS_Futura_Std_Book_11">将TACKY指令转换为汇编语言</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY instruction</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Assembly instructions</samp> |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY指令</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">汇编指令</samp>
    |'
- en: '| --- | --- |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Return(val)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">Mov(val, Reg(AX)) Ret</samp> |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Return(val)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">Mov(val, Reg(AX)) Ret</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Unary(Not, src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(Imm(0), src) Mov(Imm(0), dst)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Unary(非运算, src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(Imm(0), src) Mov(Imm(0), dst)'
- en: SetCC(E, dst)</samp> |
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: SetCC(E, dst)</samp> |
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Unary(unary_operator, src,
    dst)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(src, dst) Unary(unary_operator,
    dst)</samp> |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Unary(一元运算符, src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(src, dst) Unary(一元运算符, dst)</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(Divide, src1, src2,
    dst)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(src1, Reg(AX))
    Cdq'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(除法, src1, src2, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(src1, Reg(AX)) Cdq'
- en: Idiv(src2)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Idiv(src2)
- en: Mov(Reg(AX), dst)</samp> |
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Mov(Reg(AX), dst)</samp> |
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(Remainder, src1, src2,
    dst)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(src1, Reg(AX))
    Cdq'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(余数, src1, src2, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(src1, Reg(AX)) Cdq'
- en: Idiv(src2)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Idiv(src2)
- en: Mov(Reg(DX), dst)</samp> |
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Mov(Reg(DX), dst)</samp> |
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(arithmetic_operator,
    src1, src2, dst)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(src1,
    dst) Binary(arithmetic_operator, src2, dst)</samp> |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(算术运算符, src1, src2, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(src1, dst) Binary(算术运算符, src2,
    dst)</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(relational_operator,
    src1, src2, dst)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(src2,
    src1) Mov(Imm(0), dst)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(关系操作符, src1, src2, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(src2, src1) Mov(Imm(0), dst)'
- en: SetCC(relational_operator, dst)</samp> |
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: SetCC(关系操作符, dst)</samp> |
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Jump(target)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">Jmp(target)</samp> |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Jump(目标)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Jmp(目标)</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">JumpIfZero(condition, target)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(Imm(0), condition) JmpCC(E,
    target)</samp> |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">JumpIfZero(条件, 目标)</samp> |
    <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(Imm(0), 条件) JmpCC(E, 目标)</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">JumpIfNotZero(condition, target)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(Imm(0), condition) JmpCC(NE,
    target)</samp> |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">JumpIfNotZero(条件, 目标)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(Imm(0), 条件) JmpCC(NE, 目标)</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Copy(src, dst)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">Mov(src, dst)</samp> |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Copy(src, dst)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">Mov(src, dst)</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Label(identifier)</samp> |
    <samp class="SANS_TheSansMonoCd_W5Regular_11">Label(identifier)</samp> |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Label(标识符)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Label(标识符)</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">FunCall(fun_name, args, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><fix stack alignment>
    <set up arguments></samp>'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">FunCall(函数名, 参数, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><修复堆栈对齐> <设置参数></samp>'
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Call(fun_name)</samp>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_TheSansMonoCd_W5Regular_11">Call(函数名)</samp>
- en: <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><deallocate arguments/padding></samp>
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><deallocate 参数/填充></samp>
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(Reg(AX), dst)</samp> |
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(Reg(AX), dst)</samp> |
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-3:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    TACKY Arithmetic Operators to Assembly</samp>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-3:</samp> <samp class="SANS_Futura_Std_Book_11">将
    TACKY 算术运算符转换为汇编</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY operator</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">Assembly
    operator</samp> |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY 运算符</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">汇编运算符</samp>
    |'
- en: '| --- | --- |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Complement</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Not</samp>
    |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Complement</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Not</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Negate</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Neg</samp>
    |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Negate</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Neg</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp>
    |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Subtract</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Sub</samp>
    |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Subtract</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Sub</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Multiply</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mult</samp>
    |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Multiply</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mult</samp>
    |'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-4:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    TACKY Comparisons to Assembly</samp>
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-4:</samp> <samp class="SANS_Futura_Std_Book_11">将
    TACKY 比较转换为汇编</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY comparison</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Assembly condition code</samp> |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY 比较</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">汇编条件码</samp>
    |'
- en: '| --- | --- |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Equal</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">E</samp>
    |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Equal</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">E</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">NotEqual</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">NE</samp>
    |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">NotEqual</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">NE</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LessThan</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">L</samp>
    |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LessThan</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">L</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LessOrEqual</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">LE</samp> |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LessOrEqual</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">LE</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GreaterThan</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">G</samp> |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GreaterThan</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">G</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GreaterOrEqual</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">GE</samp> |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GreaterOrEqual</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">GE</samp> |'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-5:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    TACKY Operands to Assembly</samp>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-5:</samp> <samp class="SANS_Futura_Std_Book_11">将
    TACKY 操作数转换为汇编语言</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY operand</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">Assembly
    operand</samp> |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY 操作数</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">汇编操作数</samp>
    |'
- en: '| --- | --- |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Constant(int)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Constant(int)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Var(identifier)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">Pseudo(identifier)</samp> |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Var(identifier)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">Pseudo(identifier)</samp> |'
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Code Emission</samp>
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">代码生成</samp>
- en: '[Tables B-6](#tabB-6) through [B-10](#tabB-10) show the complete code emission
    pass at the end of [Part I](part1.xhtml).'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 B-6](#tabB-6) 到 [B-10](#tabB-10) 展示了 [第一部分](part1.xhtml)结束时的完整代码生成过程。'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-6:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Top-Level Assembly Constructs</samp>
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-6:</samp> <samp class="SANS_Futura_Std_Book_11">格式化顶层汇编结构</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly top-level construct</samp>
    |  | <samp class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">汇编语言顶层结构</samp> |  | <samp class="SANS_Futura_Std_Heavy_B_11">输出</samp>
    |'
- en: '| --- | --- | --- |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '|'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE6]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '|'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE7]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '|'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE8]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '|'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE9]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '|'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Initialized to zero</samp> |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">初始化为零</samp> |'
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '|'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_Futura_Std_Book_11">Initialized to nonzero value</samp>
    |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">初始化为非零值</samp> |'
- en: '[PRE12]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '|'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_Futura_Std_Book_11">Global directive</samp> |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">全局指令</samp> |'
- en: '[PRE13]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '|'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_Futura_Std_Book_11">Alignment directive</samp> | <samp
    class="SANS_Futura_Std_Book_11">Linux only</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">.align
    4</samp> |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">对齐指令</samp> | <samp class="SANS_Futura_Std_Book_11">仅限
    Linux</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">.align 4</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">macOS or Linux</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">.balign
    4</samp> |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">macOS 或 Linux</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">.balign
    4</samp> |'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-7:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Assembly Instructions</samp>
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-7:</samp> <samp class="SANS_Futura_Std_Book_11">格式化汇编指令</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly instruction</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">汇编指令</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">输出</samp>
    |'
- en: '| --- | --- |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '|'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE14]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '|'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE15]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '|'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE16]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '|'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE17]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '|'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE18]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '|'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE19]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '|'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE20]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '|'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE21]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '|'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE22]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '|'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE23]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '|'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE24]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '|'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE25]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '|'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE26]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '|'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE27]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '|'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE28]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '|'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE29]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '|'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE30]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '|'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE31]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '|'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE32]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '|'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE33]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '|'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE34]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '|'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE35]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '|'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE36]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '|'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE37]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '|'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE38]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '|'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE39]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '|'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE40]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '|'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE41]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '|'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE42]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '|'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE43]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '|'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-8:</samp> <samp class="SANS_Futura_Std_Book_11">Instruction
    Names for Assembly Operators</samp>
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-8:</samp> <samp class="SANS_Futura_Std_Book_11">汇编运算符的指令名称</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly operator</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Instruction name</samp> |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">汇编运算符</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">指令名称</samp>
    |'
- en: '| --- | --- |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Neg</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">negl</samp>
    |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Neg</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">negl</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Not</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">notl</samp>
    |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Not</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">notl</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">addl</samp>
    |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">addl</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Sub</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">subl</samp>
    |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Sub</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">subl</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Mult</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">imull</samp>
    |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Mult</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">imull</samp>
    |'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-9:</samp> <samp class="SANS_Futura_Std_Book_11">Instruction
    Suffixes for Condition Codes</samp>
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-9：</samp> <samp class="SANS_Futura_Std_Book_11">条件码的指令后缀</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Condition code</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">Instruction
    suffix</samp> |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">条件码</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">指令后缀</samp>
    |'
- en: '| --- | --- |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">E</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">e</samp>
    |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">E</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">e</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">NE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ne</samp>
    |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">NE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ne</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">L</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">l</samp>
    |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">L</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">l</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">le</samp>
    |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">le</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">G</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">g</samp>
    |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">G</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">g</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ge</samp>
    |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ge</samp>
    |'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-10:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Assembly Operands</samp>
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-10：</samp> <samp class="SANS_Futura_Std_Book_11">汇编操作数格式</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly operand</samp> |  | <samp
    class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">汇编操作数</samp> |  | <samp class="SANS_Futura_Std_Heavy_B_11">输出</samp>
    |'
- en: '| --- | --- | --- |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(AX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rax</samp> |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(AX)</samp> | <samp class="SANS_Futura_Std_Book_11">8字节</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rax</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%eax</samp>
    |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">4字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%eax</samp>
    |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%al</samp>
    |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">1字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%al</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(DX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rdx</samp> |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(DX)</samp> | <samp class="SANS_Futura_Std_Book_11">8字节</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rdx</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%edx</samp>
    |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">4字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%edx</samp>
    |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%dl</samp>
    |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">1字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%dl</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(CX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rcx</samp> |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(CX)</samp> | <samp class="SANS_Futura_Std_Book_11">8字节</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rcx</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%ecx</samp>
    |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">4字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%ecx</samp>
    |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%cl</samp>
    |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">1字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%cl</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(DI)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rdi</samp> |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(DI)</samp> | <samp class="SANS_Futura_Std_Book_11">8字节</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rdi</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%edi</samp>
    |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">4字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%edi</samp>
    |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%dil</samp>
    |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">1字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%dil</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(SI)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rsi</samp> |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(SI)</samp> | <samp class="SANS_Futura_Std_Book_11">8字节</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rsi</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%esi</samp>
    |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">4字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%esi</samp>
    |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%sil</samp>
    |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">1字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%sil</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R8)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8</samp> |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R8)</samp> | <samp class="SANS_Futura_Std_Book_11">8字节</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8d</samp>
    |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">4字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8d</samp>
    |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8b</samp>
    |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">1字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8b</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R9)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9</samp> |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R9)</samp> | <samp class="SANS_Futura_Std_Book_11">8字节</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9d</samp>
    |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">4字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9d</samp>
    |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9b</samp>
    |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">1字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9b</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R10)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10</samp> |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R10)</samp> | <samp class="SANS_Futura_Std_Book_11">8字节</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10d</samp>
    |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">4字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10d</samp>
    |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10b</samp>
    |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">1字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10b</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R11)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11</samp> |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R11)</samp> | <samp class="SANS_Futura_Std_Book_11">8字节</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11d</samp>
    |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">4字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11d</samp>
    |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11b</samp>
    |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">1字节</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11b</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Stack(int)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp><samp class="SANS_TheSansMonoCd_W5Regular_11">(%rbp)</samp>
    |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Stack(int)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp><samp class="SANS_TheSansMonoCd_W5Regular_11">(%rbp)</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">$</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp>
    |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">立即数（int）</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">$</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Data(identifier)</samp> |  |
    <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><identifier></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">(%rip)</samp> |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">数据（标识符）</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><标识符></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">（%rip）</samp> |'
- en: <samp class="SANS_Futura_Std_Bold_B_11">Part II</samp>
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">第二部分</samp>
- en: The first set of tables in this section illustrates how your compiler should
    convert every TACKY construct to assembly at the end of [Part II](part2.xhtml).
    The second set of tables illustrates how your compiler should emit every assembly
    construct at the end of [Part II](part2.xhtml).
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的第一组表格展示了编译器如何将每个TACKY构造转换为汇编语言，在[第二部分](part2.xhtml)结束时。第二组表格展示了编译器如何生成每个汇编构造，同样在[第二部分](part2.xhtml)结束时。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Converting TACKY
    to Assembly</samp>
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">将TACKY转换为汇编</samp>
- en: '[Tables B-11](#tabB-11) through [B-16](#tabB-16) show the complete conversion
    from TACKY to assembly at the end of [Part II](part2.xhtml).'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '[表B-11](#tabB-11)至[B-16](#tabB-16)展示了从TACKY到汇编的完整转换，见[第二部分](part2.xhtml)结束。'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-11:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    Top-Level TACKY Constructs to Assembly</samp>
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表B-11：</samp> <samp class="SANS_Futura_Std_Book_11">将顶层TACKY构造转换为汇编</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY top-level construct</samp>
    | <samp class="SANS_Futura_Std_Heavy_B_11">Assembly top-level construct</samp>
    |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY顶层构造</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">汇编顶层构造</samp>
    |'
- en: '| --- | --- |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Program(top_level_defs)</samp>
    |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">程序（顶层定义）</samp> |'
- en: '[PRE44]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '|'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE45]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Return value in registers or no return
    value</samp> |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">寄存器中的返回值或无返回值</samp> |'
- en: '[PRE46]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '|'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|  |  |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '|  |  |'
- en: '[PRE47]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '|'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">Return value on stack</samp> |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">栈上的返回值</samp> |'
- en: '[PRE48]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '|'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE49]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '|'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE50]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '|'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE51]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '|'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE52]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '|'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-12:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    TACKY Instructions to Assembly</samp>
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表B-12：</samp> <samp class="SANS_Futura_Std_Book_11">将TACKY指令转换为汇编</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY instruction</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Assembly instructions</samp> |'
  id: totrans-262
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY指令</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">汇编指令</samp>
    |'
- en: '| --- | --- |'
  id: totrans-263
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Return(val)</samp> | <samp
    class="SANS_Futura_Std_Book_11">Return on stack</samp> |'
  id: totrans-264
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">返回（val）</samp> | <samp class="SANS_Futura_Std_Book_11">栈上的返回值</samp>
    |'
- en: '[PRE53]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '|'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">Return in registers</samp> |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">寄存器中的返回值</samp> |'
- en: '[PRE54]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '|'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">No return value</samp> |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">无返回值</samp> |'
- en: '[PRE55]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '|'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Unary(Not, src, dst)</samp>
    | <samp class="SANS_Futura_Std_Book_11">Integer</samp> |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">一元运算符（Not，src，dst）</samp> |
    <samp class="SANS_Futura_Std_Book_11">整数</samp> |'
- en: '[PRE56]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '|'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">double</samp> |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">double</samp> |'
- en: '[PRE57]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '|'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE58]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '|'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE59]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '|'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Unary(unary_operator, src,
    dst)</samp> |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">一元运算符（unary_operator，src，dst）</samp>
    |'
- en: '[PRE60]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '|'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE61]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Signed</samp> |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">有符号</samp> |'
- en: '[PRE62]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '|'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">Unsigned</samp> |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">无符号</samp> |'
- en: '[PRE63]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '|'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE64]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Signed</samp> |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">有符号</samp> |'
- en: '[PRE65]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '|'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_Futura_Std_Book_11">Unsigned</samp> |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">无符号</samp> |'
- en: '[PRE66]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '|'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE67]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '|'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE68]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '|'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE69]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '|'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE70]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '|'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Jump(target)</samp> |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">跳转（目标）</samp> |'
- en: '[PRE71]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '|'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE72]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Integer</samp> |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">整数</samp> |'
- en: '[PRE73]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '|'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">double</samp> |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">double</samp> |'
- en: '[PRE74]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '|'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE75]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Integer</samp> |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">整数</samp> |'
- en: '[PRE76]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '|'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">double</samp> |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">double</samp> |'
- en: '[PRE77]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '|'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Copy(src, dst)</samp> | <samp
    class="SANS_Futura_Std_Book_11">Scalar</samp> |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Copy(src, dst)</samp> | <samp
    class="SANS_Futura_Std_Book_11">标量</samp> |'
- en: '[PRE78]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '|'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_Futura_Std_Book_11">Structure</samp> |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">结构</samp> |'
- en: '[PRE79]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '|'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Load(ptr, dst)</samp> | <samp
    class="SANS_Futura_Std_Book_11">Scalar</samp> |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Load(ptr, dst)</samp> | <samp
    class="SANS_Futura_Std_Book_11">标量</samp> |'
- en: '[PRE80]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '|'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_Futura_Std_Book_11">Structure</samp> |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">结构</samp> |'
- en: '[PRE81]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '|'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Store(src, ptr)</samp> | <samp
    class="SANS_Futura_Std_Book_11">Scalar</samp> |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Store(src, ptr)</samp> | <samp
    class="SANS_Futura_Std_Book_11">标量</samp> |'
- en: '[PRE82]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '|'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_Futura_Std_Book_11">Structure</samp> |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">结构</samp> |'
- en: '[PRE83]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '|'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GetAddress(src, dst)</samp>
    |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GetAddress(src, dst)</samp>
    |'
- en: '[PRE84]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '|'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE85]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Constant index</samp> |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">常量索引</samp> |'
- en: '[PRE86]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '|'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_Futura_Std_Book_11">Variable index and scale of 1, 2, 4,
    or 8</samp> |'
  id: totrans-358
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">变量索引和1, 2, 4或8的尺度</samp> |'
- en: '[PRE87]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '|'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_Futura_Std_Book_11">Variable index and other scale</samp>
    |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Book_11">变量索引和其他尺度</samp> |'
- en: '[PRE88]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '|'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE89]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">src</samp> <samp class="SANS_Futura_Std_Book_11">is
    scalar</samp> |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">src</samp> <samp class="SANS_Futura_Std_Book_11">是标量</samp>
    |'
- en: '[PRE90]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '|'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">src</samp> <samp class="SANS_Futura_Std_Book_11">is
    a structure</samp> |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">src</samp> <samp class="SANS_Futura_Std_Book_11">是一个结构</samp>
    |'
- en: '[PRE91]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '|'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|  [PRE92]  | <samp class="SANS_TheSansMonoCd_W5Regular_11">dst</samp> <samp
    class="SANS_Futura_Std_Book_11">is scalar</samp> |'
  id: totrans-372
  prefs: []
  type: TYPE_TB
  zh: '|  [PRE92]  | <samp class="SANS_TheSansMonoCd_W5Regular_11">dst</samp> <samp
    class="SANS_Futura_Std_Book_11">是标量</samp> |'
- en: '[PRE93]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '|'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">dst</samp> <samp class="SANS_Futura_Std_Book_11">is
    a structure</samp> |'
  id: totrans-375
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">dst</samp> <samp class="SANS_Futura_Std_Book_11">是一个结构</samp>
    |'
- en: '[PRE94]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '|'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Label(identifier)</samp> |'
  id: totrans-378
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">标签（标识符）</samp> |'
- en: '[PRE95]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '|'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE96]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">dst</samp> <samp class="SANS_Futura_Std_Book_11">will
    be returned in memory</samp> |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">dst</samp> <samp class="SANS_Futura_Std_Book_11">将会存储在内存中</samp>
    |'
- en: '[PRE97]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '|'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|  | <samp class="SANS_TheSansMonoCd_W5Regular_11">dst</samp> <samp class="SANS_Futura_Std_Book_11">will
    be returned in registers</samp> |'
  id: totrans-386
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_TheSansMonoCd_W5Regular_11">dst</samp> <samp class="SANS_Futura_Std_Book_11">将会通过寄存器返回</samp>
    |'
- en: '[PRE98]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '|'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|  | <samp class="SANS_TheSansMonoCd_W5Regular_11">dst</samp> <samp class="SANS_Futura_Std_Book_11">is
    absent</samp> |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_TheSansMonoCd_W5Regular_11">dst</samp> <samp class="SANS_Futura_Std_Book_11">不存在</samp>
    |'
- en: '[PRE99]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '|'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ZeroExtend(src, dst)</samp>
    |'
  id: totrans-392
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ZeroExtend(src, dst)</samp>
    |'
- en: '[PRE100]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '|'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">SignExtend(src, dst)</samp>
    |'
  id: totrans-395
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">SignExtend(src, dst)</samp>
    |'
- en: '[PRE101]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '|'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Truncate(src, dst)</samp> |'
  id: totrans-398
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Truncate(src, dst)</samp> |'
- en: '[PRE102]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '|'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">IntToDouble(src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">char</samp> <samp class="SANS_Futura_Std_Book_11">or</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_11">signed char</samp> |'
  id: totrans-401
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">IntToDouble(src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">char</samp> <samp class="SANS_Futura_Std_Book_11">或</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_11">signed char</samp> |'
- en: '[PRE103]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '|'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">int</samp> <samp class="SANS_Futura_Std_Book_11">or</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_11">long</samp> |'
  id: totrans-404
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">int</samp> <samp class="SANS_Futura_Std_Book_11">或</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_11">long</samp> |'
- en: '[PRE104]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '|'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">DoubleToInt(src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">char</samp> <samp class="SANS_Futura_Std_Book_11">or</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_11">signed char</samp> |'
  id: totrans-407
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">DoubleToInt(src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">char</samp> <samp class="SANS_Futura_Std_Book_11">或</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_11">signed char</samp> |'
- en: '[PRE105]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '|'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">int</samp> <samp class="SANS_Futura_Std_Book_11">or</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_11">long</samp> |'
  id: totrans-410
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">整数</samp> <samp class="SANS_Futura_Std_Book_11">或</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_11">长整数</samp> |'
- en: '[PRE106]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '|'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UIntToDouble(src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">unsigned char</samp> |'
  id: totrans-413
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UIntToDouble(src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">无符号字符</samp> |'
- en: '[PRE107]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '|'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|  | <samp class="SANS_TheSansMonoCd_W5Regular_11">unsigned int</samp> |'
  id: totrans-416
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_TheSansMonoCd_W5Regular_11">无符号整数</samp> |'
- en: '[PRE108]'
  id: totrans-417
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '|'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '|  | <samp class="SANS_TheSansMonoCd_W5Regular_11">unsigned long</samp> |'
  id: totrans-419
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_TheSansMonoCd_W5Regular_11">无符号长整数</samp> |'
- en: '[PRE109]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '|'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">DoubleToUInt(src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">unsigned char</samp> |'
  id: totrans-422
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">DoubleToUInt(src, dst)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">无符号字符</samp> |'
- en: '[PRE110]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '|'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">unsigned int</samp> |'
  id: totrans-425
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">无符号整数</samp> |'
- en: '[PRE111]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '|'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">unsigned long</samp> |'
  id: totrans-428
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">无符号长整数</samp> |'
- en: '[PRE112]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '|'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-13:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    TACKY Arithmetic Operators to Assembly</samp>
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-13:</samp> <samp class="SANS_Futura_Std_Book_11">将
    TACKY 算术运算符转换为汇编</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY operator</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">Assembly
    operator</samp> |'
  id: totrans-432
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY 运算符</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">汇编运算符</samp>
    |'
- en: '| --- | --- |'
  id: totrans-433
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Complement</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Not</samp>
    |'
  id: totrans-434
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">补码</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Not</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Negate</samp> <samp class="SANS_Futura_Std_Book_11">(integer
    negation)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Neg</samp> |'
  id: totrans-435
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">取反</samp> <samp class="SANS_Futura_Std_Book_11">(整数取反)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">Neg</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp>
    |'
  id: totrans-436
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">加法</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Subtract</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Sub</samp>
    |'
  id: totrans-437
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">减法</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Sub</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Multiply</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mult</samp>
    |'
  id: totrans-438
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">乘法</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Mult</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Divide</samp> <samp class="SANS_Futura_Std_Book_11">(</samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">double</samp> <samp class="SANS_Futura_Std_Book_11">division)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">DivDouble</samp> |'
  id: totrans-439
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">除法</samp> <samp class="SANS_Futura_Std_Book_11">(</samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">双精度</samp> <samp class="SANS_Futura_Std_Book_11">除法)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">DivDouble</samp> |'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-14:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    TACKY Comparisons to Assembly</samp>
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-14:</samp> <samp class="SANS_Futura_Std_Book_11">将
    TACKY 比较操作转换为汇编</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY comparison</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Assembly condition code</samp> |'
  id: totrans-441
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY 比较</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">汇编条件码</samp>
    |'
- en: '| --- | --- |'
  id: totrans-442
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Equal</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">E</samp>
    |'
  id: totrans-443
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">等于</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">E</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">NotEqual</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">NE</samp>
    |'
  id: totrans-444
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">不相等</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">NE</samp>
    |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LessThan</samp> | <samp class="SANS_Futura_Std_Book_11">Signed</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">L</samp> |'
  id: totrans-445
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">小于</samp> | <samp class="SANS_Futura_Std_Book_11">符号数</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">L</samp> |'
- en: '| <samp class="SANS_Futura_Std_Book_11">Unsigned, pointer, or</samp> <samp
    class="SANS_TheSansMonoCd_W5Regular_11">double</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">B</samp>
    |'
  id: totrans-446
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">无符号，指针，或</samp> <samp class="SANS_TheSansMonoCd_W5Regular_11">双精度</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">B</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LessOrEqual</samp> | <samp
    class="SANS_Futura_Std_Book_11">Signed</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">LE</samp>
    |'
  id: totrans-447
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">小于等于</samp> | <samp class="SANS_Futura_Std_Book_11">有符号</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">LE</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">Unsigned, pointer, or</samp> <samp
    class="SANS_TheSansMonoCd_W5Regular_11">double</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">BE</samp>
    |'
  id: totrans-448
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">无符号、指针或</samp> <samp class="SANS_TheSansMonoCd_W5Regular_11">双精度</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">BE</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GreaterThan</samp> | <samp
    class="SANS_Futura_Std_Book_11">Signed</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">G</samp>
    |'
  id: totrans-449
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">大于</samp> | <samp class="SANS_Futura_Std_Book_11">有符号</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">G</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">Unsigned, pointer, or</samp> <samp
    class="SANS_TheSansMonoCd_W5Regular_11">double</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">A</samp>
    |'
  id: totrans-450
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">无符号、指针或</samp> <samp class="SANS_TheSansMonoCd_W5Regular_11">双精度</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">A</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GreaterOrEqual</samp> | <samp
    class="SANS_Futura_Std_Book_11">Signed</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">GE</samp>
    |'
  id: totrans-451
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">大于等于</samp> | <samp class="SANS_Futura_Std_Book_11">有符号</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">GE</samp> |'
- en: '|  | <samp class="SANS_Futura_Std_Book_11">Unsigned, pointer, or</samp> <samp
    class="SANS_TheSansMonoCd_W5Regular_11">double</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">AE</samp>
    |'
  id: totrans-452
  prefs: []
  type: TYPE_TB
  zh: '|  | <samp class="SANS_Futura_Std_Book_11">无符号、指针或</samp> <samp class="SANS_TheSansMonoCd_W5Regular_11">双精度</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">AE</samp> |'
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-15:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    TACKY Operands to Assembly</samp>
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_11">表 B-15：</samp> <samp class="SANS_Futura_Std_Book_11">将
    TACKY 操作数转换为汇编</samp>
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY operand</samp> |  | <samp
    class="SANS_Futura_Std_Heavy_B_11">Assembly operand</samp> |'
  id: totrans-454
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_Futura_Std_Heavy_B_11">TACKY 操作数</samp> |  | <samp class="SANS_Futura_Std_Heavy_B_11">汇编操作数</samp>
    |'
- en: '| --- | --- | --- |'
  id: totrans-455
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Constant(ConstChar(int))</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |'
  id: totrans-456
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">常量(ConstChar(int))</samp> |  |
    <samp class="SANS_TheSansMonoCd_W5Regular_11">立即数(int)</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Constant(ConstInt(int))</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |'
  id: totrans-457
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">常量(ConstInt(int))</samp> |  |
    <samp class="SANS_TheSansMonoCd_W5Regular_11">立即数(int)</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Constant(ConstLong(int))</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |'
  id: totrans-458
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">常量(ConstLong(int))</samp> |  |
    <samp class="SANS_TheSansMonoCd_W5Regular_11">立即数(int)</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Constant(ConstUChar(int))</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |'
  id: totrans-459
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">常量(ConstUChar(int))</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">立即数(int)</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Constant(ConstUInt(int))</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |'
  id: totrans-460
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">常量(ConstUInt(int))</samp> |  |
    <samp class="SANS_TheSansMonoCd_W5Regular_11">立即数(int)</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Constant(ConstULong(int))</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |'
  id: totrans-461
  prefs: []
  type: TYPE_TB
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">常量(ConstULong(int))</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">立即数(int)</samp> |'
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Constant(ConstDouble(double))</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Data(</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><ident></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">, 0)</samp> <samp class="SANS_Futura_Std_Book_11">And
    add a top-level constant:</samp>'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">常量(ConstDouble(double))</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">数据(</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><ident></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">, 0)</samp> <samp class="SANS_Futura_Std_Book_11">并添加一个顶层常量：</samp>'
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">StaticConstant(</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><ident></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">, 8, DoubleInit(double))</samp> |
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_TheSansMonoCd_W5Regular_11">静态常量(</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><ident></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">, 8, DoubleInit(double))</samp> |
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Var(identifier)</samp> | <samp
    class="SANS_Futura_Std_Book_11">Scalar value</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">Pseudo(identifier)</samp>
    |'
  id: totrans-464
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">Aggregate value</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">PseudoMem(identifier,
    0)</samp> |'
  id: totrans-465
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-16:</samp> <samp class="SANS_Futura_Std_Book_11">Converting
    Types to Assembly</samp>
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Source type</samp> |  | <samp class="SANS_Futura_Std_Heavy_B_11">Assembly
    type</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">Alignment</samp> |'
  id: totrans-467
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  id: totrans-468
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Char</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">1</samp> |'
  id: totrans-469
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">SChar</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">1</samp> |'
  id: totrans-470
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UChar</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">1</samp> |'
  id: totrans-471
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Int</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Longword</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">4</samp> |'
  id: totrans-472
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UInt</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Longword</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">4</samp> |'
  id: totrans-473
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Long</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Quadword</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">8</samp> |'
  id: totrans-474
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ULong</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Quadword</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">8</samp> |'
  id: totrans-475
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Double</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Double</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">8</samp> |'
  id: totrans-476
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Pointer(referenced_t)</samp>
    |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">Quadword</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">8</samp>
    |'
  id: totrans-477
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Array(element, size)</samp>
    | <samp class="SANS_Futura_Std_Book_11">Variables that are 16 bytes or larger</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">ByteArray(</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><size
    of element></samp> <samp class="SANS_TheSansMonoCd_W5Regular_11">* size, 16)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">16</samp> |'
  id: totrans-478
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">Everything else</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ByteArray(</samp><samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><size of element></samp> <samp
    class="SANS_TheSansMonoCd_W5Regular_11">* size,</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><alignment
    of element></samp><samp class="SANS_TheSansMonoCd_W5Regular_11">)</samp> | <samp
    class="SANS_Futura_Std_Book_11">Same alignment as</samp> <samp class="SANS_TheSansMonoCd_W5Regular_11">element</samp>
    |'
  id: totrans-479
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Structure(tag)</samp> |  |
    <samp class="SANS_TheSansMonoCd_W5Regular_11">ByteArray(</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><size
    from type table></samp><samp class="SANS_TheSansMonoCd_W5Regular_11">,</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><alignment from type table></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">)</samp> | <samp class="SANS_Futura_Std_Book_11">Alignment
    from type table</samp> |'
  id: totrans-480
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Code Emission</samp>
  id: totrans-481
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Tables B-17](#tabB-17) through [B-23](#tabB-23) show the complete code emission
    pass at the end of [Part II](part2.xhtml).'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-17:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Top-Level Assembly Constructs</samp>
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly top-level construct</samp>
    |  | <samp class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-484
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-485
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Program(top_levels)</samp>
    |'
  id: totrans-486
  prefs: []
  type: TYPE_TB
- en: '[PRE113]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '|'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Function(name, global, instructions)</samp>
    |'
  id: totrans-489
  prefs: []
  type: TYPE_TB
- en: '[PRE114]'
  id: totrans-490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '|'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
- en: '|'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Integer initialized to zero, or any
    variable initialized only with</samp> <samp class="SANS_TheSansMonoCd_W5Regular_11">ZeroInit</samp>
    |'
  id: totrans-494
  prefs: []
  type: TYPE_TB
- en: '[PRE116]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '|'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Book_11">All other variables</samp> |'
  id: totrans-497
  prefs: []
  type: TYPE_TB
- en: '[PRE117]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '|'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
- en: '|'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Linux</samp> |'
  id: totrans-502
  prefs: []
  type: TYPE_TB
- en: '[PRE119]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '|'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">macOS (8-byte-aligned numeric constants)</samp>
    |'
  id: totrans-505
  prefs: []
  type: TYPE_TB
- en: '[PRE120]'
  id: totrans-506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '|'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">macOS (16-byte-aligned numeric constants)</samp>
    |'
  id: totrans-508
  prefs: []
  type: TYPE_TB
- en: '[PRE121]'
  id: totrans-509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '|'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">macOS (string constants)</samp>
    |'
  id: totrans-511
  prefs: []
  type: TYPE_TB
- en: '[PRE122]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '|'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Book_11">Global directive</samp> |  |'
  id: totrans-514
  prefs: []
  type: TYPE_TB
- en: '[PRE123]'
  id: totrans-515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: '|'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Book_11">Alignment directive</samp> | <samp
    class="SANS_Futura_Std_Book_11">Linux only</samp> |'
  id: totrans-517
  prefs: []
  type: TYPE_TB
- en: '[PRE124]'
  id: totrans-518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '|'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">macOS or Linux</samp> |'
  id: totrans-520
  prefs: []
  type: TYPE_TB
- en: '[PRE125]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: '|'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-18:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Static Initializers</samp>
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Static initializer</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-524
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-525
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">CharInit(0)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero 1</samp> |'
  id: totrans-526
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">CharInit(i)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.byte</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp>
    |'
  id: totrans-527
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">IntInit(0)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">.zero
    4</samp> |'
  id: totrans-528
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">IntInit(i)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">.long</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp> |'
  id: totrans-529
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LongInit(0)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero 8</samp> |'
  id: totrans-530
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LongInit(i)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.quad</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp>
    |'
  id: totrans-531
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UCharInit(0)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero 1</samp> |'
  id: totrans-532
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UCharInit(i)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.byte</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp>
    |'
  id: totrans-533
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UIntInit(0)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero 4</samp> |'
  id: totrans-534
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UIntInit(i)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.long</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp>
    |'
  id: totrans-535
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ULongInit(0)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero 8</samp> |'
  id: totrans-536
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ULongInit(i)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.quad</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp>
    |'
  id: totrans-537
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ZeroInit(n)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><n></samp>
    |'
  id: totrans-538
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">DoubleInit(d)</samp> |'
  id: totrans-539
  prefs: []
  type: TYPE_TB
- en: '[PRE126]'
  id: totrans-540
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: '|'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">StringInit(s, True)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">.asciz "</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><s></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">"</samp> |'
  id: totrans-542
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">StringInit(s, False)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">.ascii "</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><s></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">"</samp> |'
  id: totrans-543
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">PointerInit(label)</samp> |
    <samp class="SANS_TheSansMonoCd_W5Regular_11">.quad</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><label></samp>
    |'
  id: totrans-544
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-19:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Assembly Instructions</samp>
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly instruction</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-546
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-547
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(t, src, dst)</samp> |'
  id: totrans-548
  prefs: []
  type: TYPE_TB
- en: '[PRE127]'
  id: totrans-549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '|'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Movsx(src_t, dst_t, src, dst)</samp>
    |'
  id: totrans-551
  prefs: []
  type: TYPE_TB
- en: '[PRE128]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: '|'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">MovZeroExtend(src_t, dst_t,
    src, dst)</samp> |'
  id: totrans-554
  prefs: []
  type: TYPE_TB
- en: '[PRE129]'
  id: totrans-555
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: '|'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Lea</samp> |'
  id: totrans-557
  prefs: []
  type: TYPE_TB
- en: '[PRE130]'
  id: totrans-558
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: '|'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cvtsi2sd(t, src, dst)</samp>
    |'
  id: totrans-560
  prefs: []
  type: TYPE_TB
- en: '[PRE131]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '|'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cvttsd2si(t, src, dst)</samp>
    |'
  id: totrans-563
  prefs: []
  type: TYPE_TB
- en: '[PRE132]'
  id: totrans-564
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: '|'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Ret</samp> |'
  id: totrans-566
  prefs: []
  type: TYPE_TB
- en: '[PRE133]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '|'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Unary(unary_operator, t, operand)</samp>
    |'
  id: totrans-569
  prefs: []
  type: TYPE_TB
- en: '[PRE134]'
  id: totrans-570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: '|'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(Xor, Double, src, dst)</samp>
    |'
  id: totrans-572
  prefs: []
  type: TYPE_TB
- en: '[PRE135]'
  id: totrans-573
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: '|'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(Mult, Double, src, dst)</samp>
    |'
  id: totrans-575
  prefs: []
  type: TYPE_TB
- en: '[PRE136]'
  id: totrans-576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: '|'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(binary_operator, t,
    src, dst)</samp> |'
  id: totrans-578
  prefs: []
  type: TYPE_TB
- en: '[PRE137]'
  id: totrans-579
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: '|'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Idiv(t, operand)</samp> |'
  id: totrans-581
  prefs: []
  type: TYPE_TB
- en: '[PRE138]'
  id: totrans-582
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: '|'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Div(t, operand)</samp> |'
  id: totrans-584
  prefs: []
  type: TYPE_TB
- en: '[PRE139]'
  id: totrans-585
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: '|'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cdq(Longword)</samp> |'
  id: totrans-587
  prefs: []
  type: TYPE_TB
- en: '[PRE140]'
  id: totrans-588
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: '|'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cdq(Quadword)</samp> |'
  id: totrans-590
  prefs: []
  type: TYPE_TB
- en: '[PRE141]'
  id: totrans-591
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: '|'
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Push(operand)</samp> |'
  id: totrans-593
  prefs: []
  type: TYPE_TB
- en: '[PRE142]'
  id: totrans-594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: '|'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Call(label)</samp> |'
  id: totrans-596
  prefs: []
  type: TYPE_TB
- en: '[PRE143]'
  id: totrans-597
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: '|'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(Double, operand, operand)</samp>
    |'
  id: totrans-599
  prefs: []
  type: TYPE_TB
- en: '[PRE144]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: '|'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(t, operand, operand)</samp>
    |'
  id: totrans-602
  prefs: []
  type: TYPE_TB
- en: '[PRE145]'
  id: totrans-603
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: '|'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Jmp(label)</samp> |'
  id: totrans-605
  prefs: []
  type: TYPE_TB
- en: '[PRE146]'
  id: totrans-606
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: '|'
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">JmpCC(cond_code, label)</samp>
    |'
  id: totrans-608
  prefs: []
  type: TYPE_TB
- en: '[PRE147]'
  id: totrans-609
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: '|'
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">SetCC(cond_code, operand)</samp>
    |'
  id: totrans-611
  prefs: []
  type: TYPE_TB
- en: '[PRE148]'
  id: totrans-612
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '|'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Label(label)</samp> |'
  id: totrans-614
  prefs: []
  type: TYPE_TB
- en: '[PRE149]'
  id: totrans-615
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: '|'
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-20:</samp> <samp class="SANS_Futura_Std_Book_11">Instruction
    Names for Assembly Operators</samp>
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly operator</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Instruction name</samp> |'
  id: totrans-618
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-619
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Neg</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">neg</samp>
    |'
  id: totrans-620
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Not</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">not</samp>
    |'
  id: totrans-621
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Shr</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">shr</samp>
    |'
  id: totrans-622
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">add</samp>
    |'
  id: totrans-623
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Sub</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">sub</samp>
    |'
  id: totrans-624
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Mult</samp> <samp class="SANS_Futura_Std_Book_11">(integer
    multiplication only)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">imul</samp>
    |'
  id: totrans-625
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">DivDouble</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">div</samp>
    |'
  id: totrans-626
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">And</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">and</samp>
    |'
  id: totrans-627
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Or</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">or</samp>
    |'
  id: totrans-628
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Shl</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">shl</samp>
    |'
  id: totrans-629
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ShrTwoOp</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">shr</samp>
    |'
  id: totrans-630
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-21:</samp> <samp class="SANS_Futura_Std_Book_11">Instruction
    Suffixes for Assembly Types</samp>
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly type</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">Instruction
    suffix</samp> |'
  id: totrans-632
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-633
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">b</samp>
    |'
  id: totrans-634
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Longword</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">l</samp>
    |'
  id: totrans-635
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Quadword</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">q</samp>
    |'
  id: totrans-636
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Double</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">sd</samp>
    |'
  id: totrans-637
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-22:</samp> <samp class="SANS_Futura_Std_Book_11">Instruction
    Suffixes for Condition Codes</samp>
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Condition code</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">Instruction
    suffix</samp> |'
  id: totrans-639
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-640
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">E</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">e</samp>
    |'
  id: totrans-641
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">NE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ne</samp>
    |'
  id: totrans-642
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">L</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">l</samp>
    |'
  id: totrans-643
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">le</samp>
    |'
  id: totrans-644
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">G</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">g</samp>
    |'
  id: totrans-645
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ge</samp>
    |'
  id: totrans-646
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">A</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">a</samp>
    |'
  id: totrans-647
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">AE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ae</samp>
    |'
  id: totrans-648
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">B</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">b</samp>
    |'
  id: totrans-649
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">BE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">be</samp>
    |'
  id: totrans-650
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-23:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Assembly Operands</samp>
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly operand</samp> |  | <samp
    class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-652
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-653
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(AX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rax</samp> |'
  id: totrans-654
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%eax</samp>
    |'
  id: totrans-655
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%al</samp>
    |'
  id: totrans-656
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(DX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rdx</samp> |'
  id: totrans-657
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%edx</samp>
    |'
  id: totrans-658
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%dl</samp>
    |'
  id: totrans-659
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(CX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rcx</samp> |'
  id: totrans-660
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%ecx</samp>
    |'
  id: totrans-661
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%cl</samp>
    |'
  id: totrans-662
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(DI)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rdi</samp> |'
  id: totrans-663
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%edi</samp>
    |'
  id: totrans-664
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%dil</samp>
    |'
  id: totrans-665
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(SI)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rsi</samp> |'
  id: totrans-666
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%esi</samp>
    |'
  id: totrans-667
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%sil</samp>
    |'
  id: totrans-668
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R8)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8</samp> |'
  id: totrans-669
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8d</samp>
    |'
  id: totrans-670
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8b</samp>
    |'
  id: totrans-671
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R9)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9</samp> |'
  id: totrans-672
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9d</samp>
    |'
  id: totrans-673
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9b</samp>
    |'
  id: totrans-674
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R10)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10</samp> |'
  id: totrans-675
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10d</samp>
    |'
  id: totrans-676
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10b</samp>
    |'
  id: totrans-677
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R11)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11</samp> |'
  id: totrans-678
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11d</samp>
    |'
  id: totrans-679
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11b</samp>
    |'
  id: totrans-680
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(SP)</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rsp</samp>
    |'
  id: totrans-681
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(BP)</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rbp</samp>
    |'
  id: totrans-682
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM0)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm0</samp> |'
  id: totrans-683
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM1)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm1</samp> |'
  id: totrans-684
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM2)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm2</samp> |'
  id: totrans-685
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM3)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm3</samp> |'
  id: totrans-686
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM4)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm4</samp> |'
  id: totrans-687
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM5)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm5</samp> |'
  id: totrans-688
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM6)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm6</samp> |'
  id: totrans-689
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM7)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm7</samp> |'
  id: totrans-690
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM14)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm14</samp> |'
  id: totrans-691
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM15)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm15</samp> |'
  id: totrans-692
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Memory(reg, int)</samp> |  |
    <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp><samp class="SANS_TheSansMonoCd_W5Regular_11">(</samp><samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><reg></samp><samp class="SANS_TheSansMonoCd_W5Regular_11">)</samp>
    |'
  id: totrans-693
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Indexed(reg1, reg2, int)</samp>
    |'
  id: totrans-694
  prefs: []
  type: TYPE_TB
- en: '[PRE150]'
  id: totrans-695
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: '|'
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |  |'
  id: totrans-697
  prefs: []
  type: TYPE_TB
- en: '[PRE151]'
  id: totrans-698
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: '|'
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Data(identifier, int)</samp>
    |  |'
  id: totrans-700
  prefs: []
  type: TYPE_TB
- en: '[PRE152]'
  id: totrans-701
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '|'
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_B_11">Part III</samp>
  id: totrans-703
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In [Part III](part3.xhtml), we don’t change the conversion from TACKY to assembly,
    but we do add some new registers to the assembly AST and update the code emission
    pass accordingly. How the code emission pass looks at the end of this section
    depends on whether you completed [Part II](part2.xhtml) first or skipped straight
    from [Part I](part1.xhtml) to [Part III](part3.xhtml).
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
- en: '[Tables B-24](#tabB-24) through [B-28](#tabB-28) show the complete code emission
    pass at the end of [Part III](part3.xhtml) if you skipped over [Part II](part2.xhtml).'
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-24:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Top-Level Assembly Constructs</samp>
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly top-level construct</samp>
    |  | <samp class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-707
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-708
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Program(top_levels)</samp>
    |'
  id: totrans-709
  prefs: []
  type: TYPE_TB
- en: '[PRE153]'
  id: totrans-710
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: '|'
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Function(name, global, instructions)</samp>
    |'
  id: totrans-712
  prefs: []
  type: TYPE_TB
- en: '[PRE154]'
  id: totrans-713
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: '|'
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">StaticVariable(name, global,
    init)</samp> | <samp class="SANS_Futura_Std_Book_11">Initialized to zero</samp>
    |'
  id: totrans-715
  prefs: []
  type: TYPE_TB
- en: '[PRE155]'
  id: totrans-716
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '|'
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">Initialized to nonzero value</samp>
    |'
  id: totrans-718
  prefs: []
  type: TYPE_TB
- en: '[PRE156]'
  id: totrans-719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: '|'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Book_11">Global directive</samp> |'
  id: totrans-721
  prefs: []
  type: TYPE_TB
- en: '[PRE157]'
  id: totrans-722
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: '|'
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Book_11">Alignment directive</samp> | <samp
    class="SANS_Futura_Std_Book_11">Linux only</samp> |'
  id: totrans-724
  prefs: []
  type: TYPE_TB
- en: '[PRE158]'
  id: totrans-725
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '|'
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">macOS or Linux</samp> |'
  id: totrans-727
  prefs: []
  type: TYPE_TB
- en: '[PRE159]'
  id: totrans-728
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: '|'
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-25:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Assembly Instructions</samp>
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly instruction</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-731
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-732
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(src, dst)</samp> |'
  id: totrans-733
  prefs: []
  type: TYPE_TB
- en: '[PRE160]'
  id: totrans-734
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: '|'
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Ret</samp> |'
  id: totrans-736
  prefs: []
  type: TYPE_TB
- en: '[PRE161]'
  id: totrans-737
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: '|'
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Unary(unary_operator, operand)</samp>
    |'
  id: totrans-739
  prefs: []
  type: TYPE_TB
- en: '[PRE162]'
  id: totrans-740
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '|'
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(binary_operator, src,
    dst)</samp> |'
  id: totrans-742
  prefs: []
  type: TYPE_TB
- en: '[PRE163]'
  id: totrans-743
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: '|'
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Idiv(operand)</samp> |'
  id: totrans-745
  prefs: []
  type: TYPE_TB
- en: '[PRE164]'
  id: totrans-746
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '|'
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cdq</samp> |'
  id: totrans-748
  prefs: []
  type: TYPE_TB
- en: '[PRE165]'
  id: totrans-749
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: '|'
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">AllocateStack(int)</samp> |'
  id: totrans-751
  prefs: []
  type: TYPE_TB
- en: '[PRE166]'
  id: totrans-752
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: '|'
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">DeallocateStack(int)</samp>
    |'
  id: totrans-754
  prefs: []
  type: TYPE_TB
- en: '[PRE167]'
  id: totrans-755
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: '|'
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Push(operand)</samp> |'
  id: totrans-757
  prefs: []
  type: TYPE_TB
- en: '[PRE168]'
  id: totrans-758
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: '|'
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Pop(reg)</samp> |'
  id: totrans-760
  prefs: []
  type: TYPE_TB
- en: '[PRE169]'
  id: totrans-761
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: '|'
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Call(label)</samp> |'
  id: totrans-763
  prefs: []
  type: TYPE_TB
- en: '[PRE170]'
  id: totrans-764
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: '|'
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(operand, operand)</samp>
    |'
  id: totrans-766
  prefs: []
  type: TYPE_TB
- en: '[PRE171]'
  id: totrans-767
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: '|'
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Jmp(label)</samp> |'
  id: totrans-769
  prefs: []
  type: TYPE_TB
- en: '[PRE172]'
  id: totrans-770
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: '|'
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">JmpCC(cond_code, label)</samp>
    |'
  id: totrans-772
  prefs: []
  type: TYPE_TB
- en: '[PRE173]'
  id: totrans-773
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: '|'
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">SetCC(cond_code, operand)</samp>
    |'
  id: totrans-775
  prefs: []
  type: TYPE_TB
- en: '[PRE174]'
  id: totrans-776
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: '|'
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Label(label)</samp> |'
  id: totrans-778
  prefs: []
  type: TYPE_TB
- en: '[PRE175]'
  id: totrans-779
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: '|'
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-26:</samp> <samp class="SANS_Futura_Std_Book_11">Instruction
    Names for Assembly Operators</samp>
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly operator</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Instruction name</samp> |'
  id: totrans-782
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-783
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Neg</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">negl</samp>
    |'
  id: totrans-784
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Not</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">notl</samp>
    |'
  id: totrans-785
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">addl</samp>
    |'
  id: totrans-786
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Sub</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">subl</samp>
    |'
  id: totrans-787
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Mult</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">imull</samp>
    |'
  id: totrans-788
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-27:</samp> <samp class="SANS_Futura_Std_Book_11">Instruction
    Suffixes for Condition Codes</samp>
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Condition code</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">Instruction
    suffix</samp> |'
  id: totrans-790
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-791
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">E</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">e</samp>
    |'
  id: totrans-792
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">NE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ne</samp>
    |'
  id: totrans-793
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">L</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">l</samp>
    |'
  id: totrans-794
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">le</samp>
    |'
  id: totrans-795
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">G</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">g</samp>
    |'
  id: totrans-796
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ge</samp>
    |'
  id: totrans-797
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-28:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Assembly Operands</samp>
  id: totrans-798
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly operand</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-799
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-800
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(AX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rax</samp> |'
  id: totrans-801
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%eax</samp>
    |'
  id: totrans-802
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%al</samp>
    |'
  id: totrans-803
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(DX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rdx</samp> |'
  id: totrans-804
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%edx</samp>
    |'
  id: totrans-805
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%dl</samp>
    |'
  id: totrans-806
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(CX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rcx</samp> |'
  id: totrans-807
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%ecx</samp>
    |'
  id: totrans-808
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%cl</samp>
    |'
  id: totrans-809
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(BX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rbx</samp> |'
  id: totrans-810
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%ebx</samp>
    |'
  id: totrans-811
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%bl</samp>
    |'
  id: totrans-812
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(DI)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rdi</samp> |'
  id: totrans-813
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%edi</samp>
    |'
  id: totrans-814
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%dil</samp>
    |'
  id: totrans-815
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(SI)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rsi</samp> |'
  id: totrans-816
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%esi</samp>
    |'
  id: totrans-817
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%sil</samp>
    |'
  id: totrans-818
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R8)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8</samp> |'
  id: totrans-819
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8d</samp>
    |'
  id: totrans-820
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8b</samp>
    |'
  id: totrans-821
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R9)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9</samp> |'
  id: totrans-822
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9d</samp>
    |'
  id: totrans-823
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9b</samp>
    |'
  id: totrans-824
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R10)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10</samp> |'
  id: totrans-825
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10d</samp>
    |'
  id: totrans-826
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10b</samp>
    |'
  id: totrans-827
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R11)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11</samp> |'
  id: totrans-828
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11d</samp>
    |'
  id: totrans-829
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11b</samp>
    |'
  id: totrans-830
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R12)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r12</samp> |'
  id: totrans-831
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r12d</samp>
    |'
  id: totrans-832
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r12b</samp>
    |'
  id: totrans-833
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R13)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r13</samp> |'
  id: totrans-834
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r13d</samp>
    |'
  id: totrans-835
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r13b</samp>
    |'
  id: totrans-836
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R14)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r14</samp> |'
  id: totrans-837
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r14d</samp>
    |'
  id: totrans-838
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r14b</samp>
    |'
  id: totrans-839
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R15)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r15</samp> |'
  id: totrans-840
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r15d</samp>
    |'
  id: totrans-841
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r15b</samp>
    |'
  id: totrans-842
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Stack(int)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">(%rbp)</samp> |'
  id: totrans-843
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">$</samp><samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp> |'
  id: totrans-844
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Data(identifier)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><identifier></samp><samp class="SANS_TheSansMonoCd_W5Regular_11">(%rip)</samp>
    |'
  id: totrans-845
  prefs: []
  type: TYPE_TB
- en: '[Tables B-29](#tabB-29) through [B-35](#tabB-35) show the complete code emission
    pass after completing [Parts I](part1.xhtml), [II](part2.xhtml), and [III](part3.xhtml).'
  id: totrans-846
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-29:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Top-Level Assembly Constructs</samp>
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly top-level construct</samp>
    |  | <samp class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-848
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-849
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Program(top_levels)</samp>
    |'
  id: totrans-850
  prefs: []
  type: TYPE_TB
- en: '[PRE176]'
  id: totrans-851
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: '|'
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Function(name, global, instructions)</samp>
    |'
  id: totrans-853
  prefs: []
  type: TYPE_TB
- en: '[PRE177]'
  id: totrans-854
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: '|'
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
- en: '|'
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE178]'
  id: totrans-857
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Integer initialized to zero, or any
    variable initialized only with</samp> <samp class="SANS_TheSansMonoCd_W5Regular_11">ZeroInit</samp>
    |'
  id: totrans-858
  prefs: []
  type: TYPE_TB
- en: '[PRE179]'
  id: totrans-859
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: '|'
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">All other variables</samp> |'
  id: totrans-861
  prefs: []
  type: TYPE_TB
- en: '[PRE180]'
  id: totrans-862
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: '|'
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
- en: '|'
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE181]'
  id: totrans-865
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: '| <samp class="SANS_Futura_Std_Book_11">Linux</samp> |'
  id: totrans-866
  prefs: []
  type: TYPE_TB
- en: '[PRE182]'
  id: totrans-867
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: '|'
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">macOS (8-byte-aligned numeric constants)</samp>
    |'
  id: totrans-869
  prefs: []
  type: TYPE_TB
- en: '[PRE183]'
  id: totrans-870
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: '|'
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">macOS (16-byte-aligned numeric constants)</samp>
    |'
  id: totrans-872
  prefs: []
  type: TYPE_TB
- en: '[PRE184]'
  id: totrans-873
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: '|'
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">macOS (string constants)</samp>
    |'
  id: totrans-875
  prefs: []
  type: TYPE_TB
- en: '[PRE185]'
  id: totrans-876
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: '|'
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Book_11">Global directive</samp> |'
  id: totrans-878
  prefs: []
  type: TYPE_TB
- en: '[PRE186]'
  id: totrans-879
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: '|'
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Book_11">Alignment directive</samp> | <samp
    class="SANS_Futura_Std_Book_11">Linux only</samp> |'
  id: totrans-881
  prefs: []
  type: TYPE_TB
- en: '[PRE187]'
  id: totrans-882
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: '|'
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <samp class="SANS_Futura_Std_Book_11">macOS or Linux</samp> |'
  id: totrans-884
  prefs: []
  type: TYPE_TB
- en: '[PRE188]'
  id: totrans-885
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: '|'
  id: totrans-886
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-30:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Static Initializers</samp>
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Static initializer</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-888
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-889
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">CharInit(0)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero 1</samp> |'
  id: totrans-890
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">CharInit(i)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.byte</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp>
    |'
  id: totrans-891
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">IntInit(0)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">.zero
    4</samp> |'
  id: totrans-892
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">IntInit(i)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">.long</samp>
    <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp> |'
  id: totrans-893
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LongInit(0)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero 8</samp> |'
  id: totrans-894
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LongInit(i)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.quad</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp>
    |'
  id: totrans-895
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UCharInit(0)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero 1</samp> |'
  id: totrans-896
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UCharInit(i)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.byte</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp>
    |'
  id: totrans-897
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UIntInit(0)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero 4</samp> |'
  id: totrans-898
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">UIntInit(i)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.long</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp>
    |'
  id: totrans-899
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ULongInit(0)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero 8</samp> |'
  id: totrans-900
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ULongInit(i)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.quad</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><i></samp>
    |'
  id: totrans-901
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ZeroInit(n)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.zero</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><n></samp>
    |'
  id: totrans-902
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">DoubleInit(d)</samp> |'
  id: totrans-903
  prefs: []
  type: TYPE_TB
- en: '[PRE189]'
  id: totrans-904
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: '|'
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">StringInit(s, True)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">.asciz "</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><s></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">"</samp> |'
  id: totrans-906
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">StringInit(s, False)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">.ascii "</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><s></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">"</samp> |'
  id: totrans-907
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">PointerInit(label)</samp> |
    <samp class="SANS_TheSansMonoCd_W5Regular_11">.quad</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><label></samp>
    |'
  id: totrans-908
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-31:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Assembly Instructions</samp>
  id: totrans-909
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly instruction</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-910
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-911
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Mov(t, src, dst)</samp> |'
  id: totrans-912
  prefs: []
  type: TYPE_TB
- en: '[PRE190]'
  id: totrans-913
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: '|'
  id: totrans-914
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Movsx(src_t, dst_t, src, dst)</samp>
    |'
  id: totrans-915
  prefs: []
  type: TYPE_TB
- en: '[PRE191]'
  id: totrans-916
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: '|'
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">MovZeroExtend(src_t, dst_t,
    src, dst)</samp> |'
  id: totrans-918
  prefs: []
  type: TYPE_TB
- en: '[PRE192]'
  id: totrans-919
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: '|'
  id: totrans-920
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Lea</samp> |'
  id: totrans-921
  prefs: []
  type: TYPE_TB
- en: '[PRE193]'
  id: totrans-922
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: '|'
  id: totrans-923
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cvtsi2sd(t, src, dst)</samp>
    |'
  id: totrans-924
  prefs: []
  type: TYPE_TB
- en: '[PRE194]'
  id: totrans-925
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: '|'
  id: totrans-926
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cvttsd2si(t, src, dst)</samp>
    |'
  id: totrans-927
  prefs: []
  type: TYPE_TB
- en: '[PRE195]'
  id: totrans-928
  prefs: []
  type: TYPE_PRE
  zh: '[PRE195]'
- en: '|'
  id: totrans-929
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Ret</samp> |'
  id: totrans-930
  prefs: []
  type: TYPE_TB
- en: '[PRE196]'
  id: totrans-931
  prefs: []
  type: TYPE_PRE
  zh: '[PRE196]'
- en: '|'
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Unary(unary_operator, t, operand)</samp>
    |'
  id: totrans-933
  prefs: []
  type: TYPE_TB
- en: '[PRE197]'
  id: totrans-934
  prefs: []
  type: TYPE_PRE
  zh: '[PRE197]'
- en: '|'
  id: totrans-935
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(Xor, Double, src, dst)</samp>
    |'
  id: totrans-936
  prefs: []
  type: TYPE_TB
- en: '[PRE198]'
  id: totrans-937
  prefs: []
  type: TYPE_PRE
  zh: '[PRE198]'
- en: '|'
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(Mult, Double, src, dst)</samp>
    |'
  id: totrans-939
  prefs: []
  type: TYPE_TB
- en: '[PRE199]'
  id: totrans-940
  prefs: []
  type: TYPE_PRE
  zh: '[PRE199]'
- en: '|'
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Binary(binary_operator, t,
    src, dst)</samp> |'
  id: totrans-942
  prefs: []
  type: TYPE_TB
- en: '[PRE200]'
  id: totrans-943
  prefs: []
  type: TYPE_PRE
  zh: '[PRE200]'
- en: '|'
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Idiv(t, operand)</samp> |'
  id: totrans-945
  prefs: []
  type: TYPE_TB
- en: '[PRE201]'
  id: totrans-946
  prefs: []
  type: TYPE_PRE
  zh: '[PRE201]'
- en: '|'
  id: totrans-947
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Div(t, operand)</samp> |'
  id: totrans-948
  prefs: []
  type: TYPE_TB
- en: '[PRE202]'
  id: totrans-949
  prefs: []
  type: TYPE_PRE
  zh: '[PRE202]'
- en: '|'
  id: totrans-950
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cdq(Longword)</samp> |'
  id: totrans-951
  prefs: []
  type: TYPE_TB
- en: '[PRE203]'
  id: totrans-952
  prefs: []
  type: TYPE_PRE
  zh: '[PRE203]'
- en: '|'
  id: totrans-953
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cdq(Quadword)</samp> |'
  id: totrans-954
  prefs: []
  type: TYPE_TB
- en: '[PRE204]'
  id: totrans-955
  prefs: []
  type: TYPE_PRE
  zh: '[PRE204]'
- en: '|'
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Push(operand)</samp> |'
  id: totrans-957
  prefs: []
  type: TYPE_TB
- en: '[PRE205]'
  id: totrans-958
  prefs: []
  type: TYPE_PRE
  zh: '[PRE205]'
- en: '|'
  id: totrans-959
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Pop(reg)</samp> |'
  id: totrans-960
  prefs: []
  type: TYPE_TB
- en: '[PRE206]'
  id: totrans-961
  prefs: []
  type: TYPE_PRE
  zh: '[PRE206]'
- en: '|'
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Call(label)</samp> |'
  id: totrans-963
  prefs: []
  type: TYPE_TB
- en: '[PRE207]'
  id: totrans-964
  prefs: []
  type: TYPE_PRE
  zh: '[PRE207]'
- en: '|'
  id: totrans-965
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(Double, operand, operand)</samp>
    |'
  id: totrans-966
  prefs: []
  type: TYPE_TB
- en: '[PRE208]'
  id: totrans-967
  prefs: []
  type: TYPE_PRE
  zh: '[PRE208]'
- en: '|'
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Cmp(t, operand, operand)</samp>
    |'
  id: totrans-969
  prefs: []
  type: TYPE_TB
- en: '[PRE209]'
  id: totrans-970
  prefs: []
  type: TYPE_PRE
  zh: '[PRE209]'
- en: '|'
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Jmp(label)</samp> |'
  id: totrans-972
  prefs: []
  type: TYPE_TB
- en: '[PRE210]'
  id: totrans-973
  prefs: []
  type: TYPE_PRE
  zh: '[PRE210]'
- en: '|'
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">JmpCC(cond_code, label)</samp>
    |'
  id: totrans-975
  prefs: []
  type: TYPE_TB
- en: '[PRE211]'
  id: totrans-976
  prefs: []
  type: TYPE_PRE
  zh: '[PRE211]'
- en: '|'
  id: totrans-977
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">SetCC(cond_code, operand)</samp>
    |'
  id: totrans-978
  prefs: []
  type: TYPE_TB
- en: '[PRE212]'
  id: totrans-979
  prefs: []
  type: TYPE_PRE
  zh: '[PRE212]'
- en: '|'
  id: totrans-980
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Label(label)</samp> |'
  id: totrans-981
  prefs: []
  type: TYPE_TB
- en: '[PRE213]'
  id: totrans-982
  prefs: []
  type: TYPE_PRE
  zh: '[PRE213]'
- en: '|'
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-32:</samp> <samp class="SANS_Futura_Std_Book_11">Instruction
    Names for Assembly Operators</samp>
  id: totrans-984
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly operator</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Instruction name</samp> |'
  id: totrans-985
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-986
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Neg</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">neg</samp>
    |'
  id: totrans-987
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Not</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">not</samp>
    |'
  id: totrans-988
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Shr</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">shr</samp>
    |'
  id: totrans-989
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Add</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">add</samp>
    |'
  id: totrans-990
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Sub</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">sub</samp>
    |'
  id: totrans-991
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Mult</samp> <samp class="SANS_Futura_Std_Book_11">(integer
    multiplication only)</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">imul</samp>
    |'
  id: totrans-992
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">DivDouble</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">div</samp>
    |'
  id: totrans-993
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">And</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">and</samp>
    |'
  id: totrans-994
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Or</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">or</samp>
    |'
  id: totrans-995
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Shl</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">shl</samp>
    |'
  id: totrans-996
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">ShrTwoOp</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">shr</samp>
    |'
  id: totrans-997
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-33:</samp> <samp class="SANS_Futura_Std_Book_11">Instruction
    Suffixes for Assembly Types</samp>
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly type</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">Instruction
    suffix</samp> |'
  id: totrans-999
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-1000
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">b</samp>
    |'
  id: totrans-1001
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Longword</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">l</samp>
    |'
  id: totrans-1002
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Quadword</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">q</samp>
    |'
  id: totrans-1003
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Double</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">sd</samp>
    |'
  id: totrans-1004
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-34:</samp> <samp class="SANS_Futura_Std_Book_11">Instruction
    Suffixes for Condition Codes</samp>
  id: totrans-1005
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Condition code</samp> | <samp class="SANS_Futura_Std_Heavy_B_11">Instruction
    suffix</samp> |'
  id: totrans-1006
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-1007
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">E</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">e</samp>
    |'
  id: totrans-1008
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">NE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ne</samp>
    |'
  id: totrans-1009
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">L</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">l</samp>
    |'
  id: totrans-1010
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">LE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">le</samp>
    |'
  id: totrans-1011
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">G</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">g</samp>
    |'
  id: totrans-1012
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">GE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ge</samp>
    |'
  id: totrans-1013
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">A</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">a</samp>
    |'
  id: totrans-1014
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">AE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">ae</samp>
    |'
  id: totrans-1015
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">B</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">b</samp>
    |'
  id: totrans-1016
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">BE</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">be</samp>
    |'
  id: totrans-1017
  prefs: []
  type: TYPE_TB
- en: <samp class="SANS_Futura_Std_Heavy_B_11">Table B-35:</samp> <samp class="SANS_Futura_Std_Book_11">Formatting
    Assembly Operands</samp>
  id: totrans-1018
  prefs: []
  type: TYPE_NORMAL
- en: '| <samp class="SANS_Futura_Std_Heavy_B_11">Assembly operand</samp> | <samp
    class="SANS_Futura_Std_Heavy_B_11">Output</samp> |'
  id: totrans-1019
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-1020
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(AX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rax</samp> |'
  id: totrans-1021
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%eax</samp>
    |'
  id: totrans-1022
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%al</samp>
    |'
  id: totrans-1023
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(DX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rdx</samp> |'
  id: totrans-1024
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%edx</samp>
    |'
  id: totrans-1025
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%dl</samp>
    |'
  id: totrans-1026
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(CX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rcx</samp> |'
  id: totrans-1027
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%ecx</samp>
    |'
  id: totrans-1028
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%cl</samp>
    |'
  id: totrans-1029
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(BX)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rbx</samp> |'
  id: totrans-1030
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%ebx</samp>
    |'
  id: totrans-1031
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%bl</samp>
    |'
  id: totrans-1032
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(DI)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rdi</samp> |'
  id: totrans-1033
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%edi</samp>
    |'
  id: totrans-1034
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%dil</samp>
    |'
  id: totrans-1035
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(SI)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rsi</samp> |'
  id: totrans-1036
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%esi</samp>
    |'
  id: totrans-1037
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%sil</samp>
    |'
  id: totrans-1038
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R8)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8</samp> |'
  id: totrans-1039
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8d</samp>
    |'
  id: totrans-1040
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r8b</samp>
    |'
  id: totrans-1041
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R9)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9</samp> |'
  id: totrans-1042
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9d</samp>
    |'
  id: totrans-1043
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r9b</samp>
    |'
  id: totrans-1044
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R10)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10</samp> |'
  id: totrans-1045
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10d</samp>
    |'
  id: totrans-1046
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r10b</samp>
    |'
  id: totrans-1047
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R11)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11</samp> |'
  id: totrans-1048
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11d</samp>
    |'
  id: totrans-1049
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r11b</samp>
    |'
  id: totrans-1050
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R12)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r12</samp> |'
  id: totrans-1051
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r12d</samp>
    |'
  id: totrans-1052
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r12b</samp>
    |'
  id: totrans-1053
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R13)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r13</samp> |'
  id: totrans-1054
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r13d</samp>
    |'
  id: totrans-1055
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r13b</samp>
    |'
  id: totrans-1056
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R14)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r14</samp> |'
  id: totrans-1057
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r14d</samp>
    |'
  id: totrans-1058
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r14b</samp>
    |'
  id: totrans-1059
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(R15)</samp> | <samp class="SANS_Futura_Std_Book_11">8-byte</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r15</samp> |'
  id: totrans-1060
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">4-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r15d</samp>
    |'
  id: totrans-1061
  prefs: []
  type: TYPE_TB
- en: '|  | <samp class="SANS_Futura_Std_Book_11">1-byte</samp> | <samp class="SANS_TheSansMonoCd_W5Regular_11">%r15b</samp>
    |'
  id: totrans-1062
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(SP)</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rsp</samp>
    |'
  id: totrans-1063
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(BP)</samp> |  | <samp class="SANS_TheSansMonoCd_W5Regular_11">%rbp</samp>
    |'
  id: totrans-1064
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM0)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm0</samp> |'
  id: totrans-1065
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM1)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm1</samp> |'
  id: totrans-1066
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM2)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm2</samp> |'
  id: totrans-1067
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM3)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm3</samp> |'
  id: totrans-1068
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM4)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm4</samp> |'
  id: totrans-1069
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM5)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm5</samp> |'
  id: totrans-1070
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM6)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm6</samp> |'
  id: totrans-1071
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM7)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm7</samp> |'
  id: totrans-1072
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM8)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm8</samp> |'
  id: totrans-1073
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM9)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm9</samp> |'
  id: totrans-1074
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM10)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm10</samp> |'
  id: totrans-1075
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM11)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm11</samp> |'
  id: totrans-1076
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM12)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm12</samp> |'
  id: totrans-1077
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM13)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm13</samp> |'
  id: totrans-1078
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM14)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm14</samp> |'
  id: totrans-1079
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Reg(XMM15)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">%xmm15</samp> |'
  id: totrans-1080
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Memory(reg, int)</samp> | <samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp><samp class="SANS_TheSansMonoCd_W5Regular_11">(</samp><samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><reg></samp><samp class="SANS_TheSansMonoCd_W5Regular_11">)</samp>
    |'
  id: totrans-1081
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Indexed(reg1, reg2, int)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_11">(</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><reg1></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">,</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><reg2></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">,</samp> <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">)</samp> |'
  id: totrans-1082
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Imm(int)</samp> |  | <samp
    class="SANS_TheSansMonoCd_W5Regular_11">$</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp>
    |'
  id: totrans-1083
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Data(identifier, 0)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><identifier></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">(%rip)</samp> |'
  id: totrans-1084
  prefs: []
  type: TYPE_TB
- en: '| <samp class="SANS_TheSansMonoCd_W5Regular_11">Data(identifier, int)</samp>
    | <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><identifier></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">+</samp><samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11"><int></samp><samp
    class="SANS_TheSansMonoCd_W5Regular_11">(%rip)</samp> |'
  id: totrans-1085
  prefs: []
  type: TYPE_TB
