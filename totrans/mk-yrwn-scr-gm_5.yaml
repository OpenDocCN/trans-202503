- en: '![Image](Images/f125-01.jpg)'
  id: totrans-0
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f125-01.jpg)'
- en: '5'
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '5'
- en: Creating Sound Effects
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 创建音效
- en: Sound and music are ancient and incredible art forms in their own right. I’m
    sure you have a favorite song! People have been making music and noise for thousands
    of years, and in this chapter, you’ll learn how to do some amazing things with
    music and sound in your games. So how do games use sound?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 声音和音乐本身就是古老而令人惊叹的艺术形式。我相信你一定有一首最喜欢的歌！人们制作音乐和噪音已经有几千年的历史了，在这一章中，你将学习如何在你的游戏中用音乐和声音做一些惊人的事情。那么，游戏是如何使用声音的呢？
- en: '**Sound effects provide information.** How does a player know that they’ve
    collected a treasure or gotten chomped by a monster? In *Weird Bug Chowdown* in
    [Chapter 2](ch02.xhtml#ch02), whenever the bug touches something, good or bad,
    the game plays a sound effect. Sound lets the player know something important
    has taken place. It also shapes how they feel about what’s happened. That’s why
    eating a berry produces a hearty “chomp” sound and touching a bad berry or a poop
    produces an “eww.”'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**音效传递信息。** 玩家如何知道自己捡到了宝藏或被怪物咬了？在[第二章](ch02.xhtml#ch02)的*Weird Bug Chowdown*游戏中，每当虫子碰到某物，不论好坏，游戏都会播放音效。音效让玩家知道发生了重要的事情。它还塑造了玩家对发生事件的感受。这就是为什么吃到浆果会发出响亮的“咀嚼”声，而触碰到坏浆果或粪便时则会发出“呕”的声音。'
- en: '**Music helps to set the tone.** Think of an exciting scene in your favorite
    movie. What was the music like? Was it fast and energetic? Did it make you feel
    excited? What about the music in a sad scene? Was it slow and moody? Music affects
    how we feel about what happens while we’re listening to it, and the same is true
    in games. Many of the games you play probably have light, boppy music that creates
    a playful mood. Would you feel differently about what was happening in these games
    if the music was heavy and sad?'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**音乐有助于设定氛围。** 想想你最喜欢的电影中的一个激动人心的场景。那时的音乐是什么样的？是快节奏和充满活力的吗？让你感到兴奋吗？那么悲伤场景中的音乐呢？是慢节奏和低沉的吗？音乐会影响我们对正在发生的事情的感受，游戏也是如此。你玩的许多游戏可能都有轻快、节奏感强的音乐，营造出一种俏皮的氛围。如果这些游戏中的音乐是沉重和悲伤的，你会对游戏中的事件产生不同的感受吗？'
- en: Maybe you play an instrument, or maybe you have absolutely no idea how to make
    music. Well, it’s much easier than you’d think to make audio for your games!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你会玩乐器，或者你完全不知道如何制作音乐。其实，制作游戏音频比你想象的要容易得多！
- en: Sound Design Tools
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 声音设计工具
- en: In this chapter, you’ll learn about a few different programs that you can use
    to make music and sound. Like all the other tools we’ve worked with in this book,
    you can find all of these programs on the internet for free. First, you’ll record
    and edit sounds using a program called Audacity. Second, you’ll generate sound
    effects with sfxr. Third, you’ll learn how to compose short music loops using
    Drum Circle.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你将学习一些不同的程序，使用它们制作音乐和声音。像我们在本书中使用的其他工具一样，你可以在网上免费下载这些程序。首先，你将使用一个叫做Audacity的程序来录制和编辑声音。其次，你将使用sfxr生成音效。第三，你将学习如何使用Drum
    Circle创作简短的音乐循环。
- en: You probably won’t need to use all of these tools. Most likely, one of them
    will feel easiest and most appropriate for your particular games. Everyone has
    their own *practice,* or personal process of making stuff. There’s no such thing
    as the right process.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能不需要使用所有这些工具。最有可能的是，你会觉得其中一个工具最适合你的游戏。每个人都有自己的*实践*，或是制作东西的个人流程。没有所谓的正确流程。
- en: Recording and Editing Sounds with Audacity
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Audacity录制和编辑声音
- en: You already have the means to make great game sound effects. I’m talking about
    your voice as well as pretty much every object around you! In the finished *Hatlight*
    game, I made the jumping sound effect by saying “Hup!” into my computer’s mic.
    The crunching sound the ground makes as you walk around is me shaking a bunch
    of dice in front of the mic.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经具备了制作出色游戏音效的工具。我说的是你的声音以及你周围几乎所有的物品！在完成的*Hatlight*游戏中，我通过对着电脑麦克风说“哈！”来制作跳跃音效。你走动时地面发出的嘎吱声是我把一堆骰子摇到麦克风前录制的。
- en: Scratch has a built-in microphone button in the Sounds tab that lets you record
    your own sounds, but Audacity lets you do more with your recording. For example,
    you can make sounds fade in and fade out, add special effects, and even cut out
    the bits you don’t like.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch在声音标签中有一个内置的麦克风按钮，可以让你录制自己的声音，但Audacity让你在录音时能做更多的事情。例如，你可以让声音渐入渐出，添加特效，甚至剪掉你不喜欢的部分。
- en: Naturally, these tools only work if your computer has a microphone. Most laptops
    and tablets come with a built-in microphone. If your computer doesn’t have one,
    you can either buy one at your local electronics store (a cheap one is fine!)
    or start with “Generating Sounds with sfxr” on [page 137](ch05.xhtml#page_137),
    where we’ll use other tools that don’t require a mic. You can find Audacity at
    *[https://sourceforge.net/projects/audacity/](https://sourceforge.net/projects/audacity/)*.
    Download the version appropriate for your computer system, and we’ll get started!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这些工具只有在你的电脑有麦克风时才有效。大多数笔记本电脑和平板电脑都配有内置麦克风。如果你的电脑没有麦克风，你可以去当地的电子商店买一个（便宜的也可以！），或者从[第137页](ch05.xhtml#page_137)的“使用sfxr生成声音”开始，我们会使用其他不需要麦克风的工具。你可以在*[https://sourceforge.net/projects/audacity/](https://sourceforge.net/projects/audacity/)*上找到Audacity。下载适合你电脑系统的版本，然后我们就可以开始了！
- en: '![Image](Images/f127-01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f127-01.jpg)'
- en: Recording a Deadly Plummet
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 录制致命的坠落声
- en: Open Audacity, and you’ll see this screen.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Audacity，你会看到这个界面。
- en: '![Image](Images/f128-01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f128-01.jpg)'
- en: '*Audacity interface*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*Audacity界面*'
- en: There’s a lot on the screen, but you don’t need to worry about most of it. Find
    the microphone near the bottom of the huge toolbar at the top. The Recording Device
    menu next to the mic lists every sound device connected to your computer. If you’re
    having trouble recording, try choosing different devices from this list. Audacity
    might not be using the right one.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上有很多内容，但你不需要担心大部分。找到顶部工具栏下方的麦克风按钮。麦克风旁边的录音设备菜单列出了所有连接到你电脑的声音设备。如果你录音有问题，试着从这个列表中选择不同的设备。Audacity可能没有使用正确的设备。
- en: The most important buttons on the screen are the big Pause, Play, and Record
    buttons at the top. Let’s record our first sound!
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上最重要的按钮是顶部的大暂停、播放和录音按钮。让我们录制第一个声音吧！
- en: 'Imagine a game about a cave explorer, like the one in [Chapter 4](ch04.xhtml#ch04).
    The explorer is under the earth, walking on a narrow stone bridge over an underground
    river. With every step she takes, she hears the sound of gravel cracking and shifting.
    She is stepping slowly and carefully. Finally, she steps on a part of the bridge
    that is too old and thin, and the bridge breaks underneath her! As she plummets
    out of sight, her yell trails off: “AAAAAAAAAAaaaaaaaaaaa...” (Don’t worry—the
    river is full of Subterranean Pillowfish. She’ll be fine!)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一个关于洞穴探险者的游戏，像[第4章](ch04.xhtml#ch04)中的那个。探险者正走在地下，穿过一座窄窄的石桥，桥下是一条地下河流。每走一步，她都会听到砾石破裂和移动的声音。她小心翼翼地走着。最后，她踩到了一块已经老化且脆弱的桥面，桥在她脚下断裂！她掉入了深渊，尖叫声渐渐消失：“AAAAAAAAAAaaaaaaaaaaa...”
    （别担心——河里满是地下枕头鱼，她会没事的！）
- en: Let’s try to re-create that yelling sound. Click the **Record** button and yell
    “AAAAAAAAAA” into the microphone. Make it a long sound, because it’s a long way
    to the bottom of the cave! Don’t worry about making your voice trail off. We’ll
    do that using special effects. Click the **Stop** button when you’re done recording.
    Your screen should look something like this.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们试着重新创建那种喊叫的声音。点击**录音**按钮，对着麦克风大喊“AAAAAAAAAA”。尽量保持声音长一点，因为到达洞底的距离很远！不用担心声音会逐渐消失，我们会用特效来处理。录音完成后，点击**停止**按钮。你的屏幕应该会像这样。
- en: '![Image](Images/f129-01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f129-01.jpg)'
- en: The lumpy blue shape is your recording’s waveform. A *waveform* is a picture
    of what the sound looks like. The highest parts are the loudest sounds. Shorter
    parts are quieter sounds. You should also see two flat parts at the beginning
    and end. These are the quiet parts before and after you started making noise.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 那个不规则的蓝色形状是你录音的波形。*波形*是声音的图像，最高的部分是最响亮的声音，较短的部分则是较安静的声音。你应该还能看到开始和结束时的两个平坦部分。这些是你开始发出声音前后的安静部分。
- en: Before we make changes to the waveform, let’s go over a couple sliders (circled
    in the preceding image).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们修改波形之前，先看一下几个滑块（在上面的图片中圈出）。
- en: The top one goes from – to + and controls the volume. If your sound is too quiet
    or loud, you can adjust it by moving this slider. Below that is a slider that
    goes from L to R. That controls the *balance* of the sound, whether the sound
    plays from the left speaker (or headphone) or the right. The slider starts exactly
    in the middle, which is where you’ll usually want it to be.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的滑块从-到+，控制音量。如果你的声音太小或太大，可以通过移动这个滑块来调整。下面是一个从L到R的滑块，控制声音的*平衡*，即声音是从左声道（或耳机）还是右声道播放的。滑块默认处于中间位置，通常你会希望它保持在这个位置。
- en: Sound Selections
  id: totrans-27
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 声音选择
- en: When you click **Play**, you’ll hear the whole waveform, including the quiet
    parts at the beginning and end. Depending on when you started and stopped recording,
    these quiet parts could be long or very short. Before using a sound in a game,
    you should get rid of any empty spaces. After all, you want the game sound to
    play exactly when the explorer falls off the bridge, not after a second of silence.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击**播放**时，你将听到整个波形，包括开头和结尾的安静部分。根据你开始和停止录音的时间，这些安静部分可能很长，也可能很短。在将声音用于游戏之前，你应该去掉任何空白部分。毕竟，你希望游戏中的声音在探险者掉下桥的瞬间播放，而不是一秒钟的沉默后才响起。
- en: We can edit our sound by selecting different parts of the waveform. When you
    move the mouse over the waveform, the cursor changes into an “I” shape. You can
    click and drag to select different parts of the sound. Select just the part with
    the “aaaaaaaa” sound, none of the flat (silent) parts.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过选择波形的不同部分来编辑声音。当你把鼠标移动到波形上时，光标会变成“I”形。你可以点击并拖动来选择声音的不同部分。只选择带有“aaaaaaaa”声音的部分，不包括平坦（静音）部分。
- en: '![Image](Images/f130-01.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f130-01.jpg)'
- en: '*Selecting a part of the sound you want*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*选择你想要的声音部分*'
- en: Try clicking **Play** again. You should hear just the “aaaaaaaa” part. Notice
    that when you move the cursor to either end of the selection, it becomes a pointing
    finger. You can click either end of the selection and drag it to change where
    the selection begins or ends. Try selecting just a part of the waveform, somewhere
    in the middle. Now when you click **Play**, just the part that’s selected will
    play.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试再次点击**播放**。你应该只听到“aaaaaaaa”部分。注意，当你将光标移到选择的两端时，它会变成手指形状。你可以点击选择的任何一端并拖动，改变选择的开始或结束位置。试着选择波形中的一部分，在中间某个位置。现在，当你点击**播放**时，只有选中的部分会播放。
- en: Any edit we make will happen to the part of the waveform we select. So, to get
    rid of the gap at the beginning of our recording, we first need to select it.
    Adjust the end of the selection until the entire gap, and nothing else, is selected.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们做的任何编辑都会作用于我们选择的波形部分。所以，为了去除录音开始时的空白，我们首先需要选择它。调整选择的结尾，直到整个空白部分被选中，仅此而已。
- en: '**NOTE:** If you’re worried about whether your selection is in the right place,
    you can always use the magnifying glass icons to zoom in on the waveform.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 如果你担心选择的位置是否正确，你可以随时使用放大镜图标来放大波形。'
- en: Near the top of the window, click **Edit ▸ Delete**. The selected part of the
    sound should be gone.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在窗口顶部，点击**编辑 ▸ 删除**。选中的声音部分应该消失。
- en: '![Image](Images/f131-01.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f131-01.jpg)'
- en: '*Deleting the sound you don’t want*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*删除你不需要的声音*'
- en: Try selecting and deleting the flat part at the end of the sound too! The part
    of the sound where you’re making noise into the mic should be all that’s left.
    Now, let’s use selections to change what our sound effect *sounds* like.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试选择并删除声音结尾处的平坦部分！麦克风前的噪声部分应该是剩下的唯一部分。现在，让我们使用选择来改变我们声音效果的*听感*。
- en: Using Effects Tools
  id: totrans-39
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用效果工具
- en: We want our falling sound to be nice and long. How long is yours? Probably not
    long enough! Remember that it’s a very long drop to the bottom of the cave. Fortunately,
    there’s a way to stretch a sound to make it longer.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望我们的掉落声音既长又好听。你的声音有多长？可能还不够长！记住，从悬崖到洞底的距离非常远。幸运的是，有一种方法可以拉长声音，使其更长。
- en: 'When you click the **Effects** menu at the top of the screen, you’ll see a
    ridiculous number of different options. Here’s a summary of those handiest:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击屏幕顶部的**效果**菜单时，你会看到一堆不同的选项。这里是一些最实用的总结：
- en: '**Change Pitch:** *Pitch* is how high or low something sounds. Think of pitch
    in terms of mythological creatures. If you lower your pitch, you’ll start to sound
    like a troll. If you raise your pitch, you’ll start to sound like a fairy.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**更改音高：** *音高*是指声音的高低。可以通过神话生物来理解音高。如果你降低音高，你会开始听起来像一个巨魔。如果你提高音高，你会开始听起来像一个仙女。'
- en: '**Change Speed:** This option lets you change the length of your sound, which
    is one way to make it longer. But when you change *speed*, you also affect the
    pitch. If you slow down your sound, the pitch gets lower. If you speed it up,
    the pitch rises.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**更改速度：** 这个选项允许你改变声音的时长，这是让声音变长的一种方法。但当你更改*速度*时，你也会影响音高。如果你减慢声音，音高会变低。如果你加快声音，音高会升高。'
- en: '**Change Tempo:** *Tempo* is a music term for the speed of a piece of music.
    Change Tempo lets you make your sound longer or shorter *without* changing the
    pitch of your voice.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**更改节奏：** *节奏*是音乐术语，指的是音乐的速度。更改节奏可以让你调整声音的长度，而*不*改变音调。'
- en: Let’s use Change Tempo to make our recording longer. Click **Effects ▸ Change
    Tempo**.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用更改节奏来延长我们的录音。点击**效果 ▸ 更改节奏**。
- en: '![Image](Images/f132-01.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f132-01.jpg)'
- en: '*Before tempo change*'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*节奏变化前*'
- en: '![Image](Images/f133-01.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f133-01.jpg)'
- en: '*After tempo change*'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*节奏变化后*'
- en: A Change Tempo window should pop up with a bunch of different options, but they’re
    all different ways of doing the same thing. The easiest option to use is the slider.
    The exact center of the slider is the speed of your sound right now. Move the
    slider to the right to speed it up. Move it to the left to slow it down. You can
    move the slider and click **Preview** to test what your sound will sound like.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一个“更改节奏”窗口会弹出，里面有许多不同的选项，但它们都是做同一件事的不同方式。最简单的选项是滑动条。滑动条的正中心是当前音频的速度。将滑动条向右移动可以加快速度，将其向左移动可以减慢速度。你可以移动滑动条并点击**预览**，测试声音效果。
- en: Lower the tempo and click **OK**. Your waveform should get longer. Now when
    you play your sound, your voice should sound a little slower!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 降低节奏并点击**确定**。你的波形应该会变长。现在，当你播放声音时，你的声音应该会显得稍微慢一些！
- en: Now let’s make our sound slowly fade out as we plummet out of sight. Use the
    cursor to select about three-quarters of your sound. We want a bit at the beginning
    to stay the same.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在消失的过程中，让声音渐渐消失。使用光标选择声音的四分之三部分。我们希望开头的部分保持不变。
- en: '![Image](Images/f133-02.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f133-02.jpg)'
- en: '*Making your sound fade out*'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '*让声音渐渐消失*'
- en: Now click **Effects ▸ Fade Out**.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在点击**效果 ▸ 渐弱**。
- en: '![Image](Images/f134-01.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f134-01.jpg)'
- en: '*Post fade out*'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*后期渐弱*'
- en: Your waveform has changed shape. It starts wide and then gets smaller and smaller
    until it reaches a single point at the end. Fade out is a very handy effect that
    matches itself to the size of your selection. When you fade out a long selection,
    you’ll get a slow, gradual fade. When you fade out a short selection, you’ll get
    a much quicker fade. There’s also a Fade In effect that does the same thing but
    in reverse. The selection starts silent and then gets louder until it reaches
    normal volume.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你的波形已经改变了形状。它一开始很宽，然后逐渐变小，直到最后收缩成一个点。渐弱是一个非常实用的效果，它会根据你的选择区域的大小自动调整。当你对一个较长的选择区域进行渐弱时，声音会慢慢、逐渐消失。对于较短的选择区域，渐弱会更快。此外，还有一个渐强效果，做法相反，声音从静音开始，逐渐变得更大，直到达到正常音量。
- en: Play your new sound! Keep in mind that the Play button will play only what you’ve
    selected. To get out of your selection, click the **Rewind** (`|<<`) button.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 播放你的新声音！记住，播放按钮只会播放你所选择的部分。要退出选择区域，请点击**倒带** (`|<<`) 按钮。
- en: Exporting Sounds
  id: totrans-60
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 导出声音
- en: One important detail to know about Audacity is that *saving* doesn’t mean what
    it does in other programs. When you click **File ▸ Save Project** in Audacity,
    you’ll save a specific kind of file called a *project* file. Only Audacity can
    open a project file. It’s useful when you’re doing complicated sounds, like working
    with multiple channels of audio. But you can’t import an Audacity project file
    into your Scratch game.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Audacity时，有一个重要的细节需要了解：*保存*并不意味着像其他程序那样保存。当你在Audacity中点击**文件 ▸ 保存项目**时，你会保存一个特定类型的文件，叫做*项目*文件。只有Audacity能打开项目文件。这对于处理复杂的声音很有用，比如使用多个音频通道时。但是，你不能将Audacity项目文件导入到你的Scratch游戏中。
- en: Instead, you’ll have to export the audio into a format that Scratch can use
    by clicking **File ▸ Export Audio**.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，你需要将音频导出为Scratch可以使用的格式，方法是点击**文件 ▸ 导出音频**。
- en: You can also highlight a part of the waveform and click **Export Selected Audio**
    to export just a selection of a recording.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以高亮显示波形的一部分，并点击**导出选定音频**，仅导出录音中的一部分。
- en: '![Image](Images/f135-01.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f135-01.jpg)'
- en: '*Exporting audio*'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*导出音频*'
- en: Audacity can export audio in many different file formats. Usually, you’ll want
    to use *WAV*, which is a sound format that most programs use, Scratch included.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Audacity可以导出多种不同格式的音频文件。通常，你会选择使用*WAV*格式，这是大多数程序，包括Scratch所使用的声音格式。
- en: When you export your sound effect, an Edit Metadata window should pop up. If
    you were working on a podcast or a track from your new EP, you might want to fill
    out the metadata. But for a video game sound effect, you don’t need to worry about
    metadata. Just click **OK** to export your sound.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当你导出音效时，应该会弹出一个“编辑元数据”窗口。如果你在做播客或你新EP中的某一曲目，可能需要填写元数据。但对于视频游戏音效，你不需要担心元数据。只需点击**确定**导出声音。
- en: Now you can import your sound into your Scratch game. From the Sounds tab, hover
    over the Choose a Sound icon until the menu comes up. Click the **Choose a New
    Sound** icon.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以将你的声音导入到Scratch游戏中。在“声音”标签页中，将鼠标悬停在“选择声音”图标上，直到菜单出现。点击**选择新声音**图标。
- en: '![Image](Images/f136-01.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f136-01.jpg)'
- en: '*Importing my amazing screams*'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '*导入我惊人的尖叫声*'
- en: Using Sounds from the Internet
  id: totrans-71
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用互联网的声音
- en: You can make lots of different sound effects by making noises with your mouth
    or by knocking objects together in front of your microphone. But sometimes you
    need a very specific sound, like a bird tweeting, that you can’t make using the
    stuff in your house. In these situations, you can use sounds at *[https://freesound.org/](https://freesound.org/)*.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过用嘴巴发出声音或在麦克风前敲击物体来制作许多不同的音效。但有时你需要一个非常特定的声音，比如鸟鸣声，而你用家里的东西无法做出。在这种情况下，你可以使用*[https://freesound.org/](https://freesound.org/)*上的声音。
- en: '![Image](Images/f136-02.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f136-02.jpg)'
- en: '*The* [freesound.org](http://freesound.org) *homepage*'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '*[freesound.org](http://freesound.org)主页*'
- en: On the Freesound site, you’ll find lots of unique sounds recorded by different
    people. These sounds are released under the Creative Commons license. You can
    use them for free as long as you include the name of the sound’s creator.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在Freesound网站上，你可以找到由不同人录制的许多独特声音。这些声音都是在创作共用许可证下发布的。只要你注明声音创作者的名字，你就可以免费使用它们。
- en: '**NOTE:** There are a few different kinds of Creative Commons licenses, and
    the Creative Commons Help page explains the differences. But most of the sounds
    on the page are Creative Commons – Attribution.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** Creative Commons有几种不同的许可证类型，Creative Commons帮助页面解释了它们的区别。但页面上的大多数声音都是Creative
    Commons – Attribution（署名）。'
- en: Scratch has a Notes and Credits space on each of your game’s pages. That’s the
    perfect place to give a shout-out to those who contributed to your finished game.
    Just enter something like “Bird call sound recorded by ErgoBirdo on *[https://freesound.org/](https://freesound.org/)*.”
    That’s called *attribution*!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch为你游戏的每个页面提供了一个“备注与鸣谢”空间。那是一个向那些为你完成游戏做出贡献的人表示感谢的完美地方。只需输入类似“鸟鸣声由ErgoBirdo录制，出处：*[https://freesound.org/](https://freesound.org/)*”的内容。这叫做*署名*！
- en: Some sounds will list several different sounds. For example, you might want
    to use a single bird tweet from a list of 10\. Or you might want the sound to
    be faster or slower, or to fade in or out. That’s when you would use Audacity.
    You can load any sound you download from Freesound, edit it, and export a version
    to use in your game. Just make sure you always credit the person who recorded
    the original sound!
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 有些声音会列出几种不同的声音。例如，你可能只想使用一个鸟鸣声，来自10个选项中的一个。或者你可能希望声音变得更快或更慢，或者逐渐消失或渐强。这时，你可以使用Audacity。你可以加载从Freesound下载的任何声音，编辑它，然后导出一个版本用于你的游戏。只要确保始终注明录制原始声音的人的名字！
- en: Generating Sounds with sfxr
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用sfxr生成声音
- en: 'The sfxr tool quickly generates simple video game sound effects. If you’ve
    played an older video game, commonly known as “8-bit,” you know what sfxr sound
    effects sound like: “bleeps” and “bloops” and “HHSSHHSSHSSes.” You don’t need
    a mic to use sfxr: you just click buttons and slide sliders.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: sfxr工具能够快速生成简单的视频游戏音效。如果你玩过老式的“8位”视频游戏，你应该知道sfxr音效的声音：“哔哔”和“嘟嘟”和“HHSSHHSSHSSs”。使用sfxr时，你不需要麦克风：只需点击按钮和滑动滑块。
- en: Created by Tomas Pettersson, sfxr can be found on his website at *[http://tinyurl.com/getsfxr/](http://tinyurl.com/getsfxr/)*.
    The sfxr tool is made for Windows computers, but if you have a Mac, a link on
    that site leads to cfxr, a Mac version of the program.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 由Tomas Pettersson创建，sfxr可以在他的网站上找到，网址是*[http://tinyurl.com/getsfxr/](http://tinyurl.com/getsfxr/)*。sfxr工具是为Windows计算机设计的，但如果你有Mac，网站上的一个链接会指向cfxr，这是该程序的Mac版本。
- en: Run sfxr, and you’ll see this.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 运行sfxr，你会看到这个界面。
- en: '![Image](Images/f138-01.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f138-01.jpg)'
- en: '*The sfxr interface*'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '*sfxr界面*'
- en: Don’t worry about the sliders for now! We’ll look at the buttons first. On the
    left is a bunch of Generator buttons, such as Laser/Shoot, Explosion, Powerup,
    and so on. Click the **Laser/Shoot** button a few times, and sfxr creates a number
    of different shooty sounds for you.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在先不用担心滑块！我们先看按钮。左边有一堆生成器按钮，比如激光/射击、爆炸、能量提升等等。点击几次**激光/射击**按钮，sfxr会为你生成不同的射击音效。
- en: Experiment with the generators until you find a sound you like. Click the **Play
    Sound** button to hear your sound again. Then try clicking the **Mutate** button
    (at the bottom left) to change the sound. Each time you click Mutate, the sound
    changes a little. Notice how the sliders change as the sound changes.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试调整生成器按钮，直到找到你喜欢的声音。点击**播放声音**按钮再听一次你的声音。然后尝试点击**突变**按钮（位于左下角）来改变声音。每次点击突变时，声音会稍微改变。注意当声音变化时滑块的变化。
- en: The sfxr program only remembers the last sound it generated. So if you find
    one you really love, be sure to save it before you make a new one! We’ll talk
    more about saving and exporting sounds in a moment.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: sfxr程序只会记住最后生成的声音。所以，如果你找到一个非常喜欢的声音，记得在制作新声音之前保存它！稍后我们会详细讨论如何保存和导出声音。
- en: Waveforms
  id: totrans-88
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 波形
- en: 'Four buttons are across the top of the sfxr window: Squarewave, Sawtooth, Sinewave,
    and Noise. One of them should be highlighted right now. You can use these four
    different kinds of waveforms to create sound effects. Try switching between the
    buttons and clicking **Play Sound** to hear how a sound differs in each waveform.
    Here is what each waveform looks like.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在sfxr窗口的顶部有四个按钮：方波、锯齿波、正弦波和噪音。此时其中一个按钮应该是高亮的。你可以使用这四种不同的波形来创建音效。尝试在按钮之间切换，并点击**播放声音**，听听每种波形的声音有什么不同。以下是每种波形的样子。
- en: '![Image](Images/f139-01.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f139-01.jpg)'
- en: '**Squarewave** gets its name from its blocky waveform when you look at it up
    close. Squarewaves are clear and chunky. Most of the sounds you make in sfxr will
    probably be squarewaves.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**方波**的名字来源于它放大后看起来的方形波形。方波声音清晰而沉重。你在sfxr中制作的大部分声音可能都会是方波。'
- en: '![Image](Images/f139-02.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f139-02.jpg)'
- en: '*Squarewave*'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*方波*'
- en: '**Sawtooth** is pointy when looked at up close, like the teeth of a saw. This
    waveform sounds tinnier and grittier than squarewaves, which is ideal when you
    want to use a more metallic sound effect.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**锯齿波**放大后看起来像是锯齿的尖端。这种波形的声音比方波更尖锐、粗糙，非常适合制作金属质感的音效。'
- en: '![Image](Images/f139-03.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f139-03.jpg)'
- en: '*Sawtooth*'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '*锯齿波*'
- en: '**Sinewave** is a smooth up-and-down curve that sounds spacey and bubbly. When
    you want sound effects for space crystals bouncing around on an ice planet, sinewaves
    will work well.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**正弦波**是一条平滑的上下曲线，听起来空灵且气泡感十足。当你需要制作冰雪星球上空间水晶弹跳的音效时，正弦波非常合适。'
- en: '![Image](Images/f140-01.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f140-01.jpg)'
- en: '*Sinewave*'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '*正弦波*'
- en: '**Noise** looks like a scribble you might draw in your notebook. It’s all over
    the place, so it sounds crashy and, well, noisy. Noise is perfect for explosions
    and the sound of ocean waves.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**噪音**看起来像是你在笔记本上乱涂的线条。它到处都是，所以听起来很嘈杂，嗯，正是噪音。噪音非常适合爆炸声和海浪的声音。'
- en: '![Image](Images/f140-02.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f140-02.jpg)'
- en: '*Noise*'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '*噪音*'
- en: Other generator buttons produce different waveforms. Pickup/Coin produces a
    squarewave, and Explosion produces noise. When you find a sound you like, listen
    to how it sounds using each waveform.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 其他生成器按钮产生不同的波形。拾音器/硬币产生方波，而爆炸产生噪音。当你找到一个喜欢的声音时，试着听听它在每种波形下的效果。
- en: Changing Sounds Using Sliders
  id: totrans-104
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用滑块改变声音
- en: What if you want your sound to be longer or *weirder*? By playing with sfxr’s
    many sliders, you can make all sorts of changes to your sound.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望声音更长或者*更奇怪*呢？通过调整sfxr的众多滑块，你可以对声音进行各种各样的修改。
- en: The best way to get a sense of what each slider does is to generate a sound
    and then play with the sliders to hear how the sound changes. Here are some of
    the most useful sliders.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 了解每个滑块的作用最好的方法是生成一个声音，然后玩弄滑块，听听声音如何变化。以下是一些最有用的滑块。
- en: '![Image](Images/f140-03.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f140-03.jpg)'
- en: '*Using sliders*'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用滑块*'
- en: Attack, Sustain, and Decay
  id: totrans-109
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 攻击、持续、衰减
- en: 'Sometimes you’ll want your sound to be a different length or to slowly fade
    out. The Attack, Sustain, and Decay tools affect your sound’s timing. Sound nerds
    refer to this as the sound’s *envelope*, because it’s how your sound will be delivered.
    Here are the effects of each tool:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你可能希望你的声音有不同的时长或缓慢地淡出。攻击、持续和衰减工具会影响声音的时序。声音爱好者称之为声音的*包络*，因为这就是声音呈现的方式。以下是每个工具的效果：
- en: '**Attack Time** is the amount of time it takes your sound to fade in. Set it
    low for an instant sound or high for a long buildup.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**攻击时间**是你的声音渐入的时间。设置为低值可以让声音瞬间出现，设置为高值则会有一个长时间的渐变。'
- en: '**Sustain Time** is the middle of the sound, which is after it has faded all
    the way in and before it starts to fade out. When you just want your sound to
    be longer, give it a higher Sustain Time.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**持续时间**是声音的中段，指的是声音完全渐入后和开始渐出前的部分。当你只是想让声音持续时间更长时，可以给它设置更长的持续时间。'
- en: '**Decay Time** is the fade-out. A high Decay Time slowly fades to silence.
    A low Decay Time just cuts out the sound.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**衰减时间**是声音的消失时间。较长的衰减时间会让声音缓慢消失，较短的衰减时间则会迅速切断声音。'
- en: Slide, Vibrato, and Change
  id: totrans-114
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 滑动、颤音和变化
- en: 'Slide, Vibrato, and Change give your sound more depth. If you can’t hear the
    change, lengthen your sound’s Sustain Time. Here are the effects of each tool:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 滑动、颤音和变化为你的声音增添了更多层次。如果你听不出变化，尝试延长声音的持续时间。以下是每个工具的效果：
- en: '**Slide** makes your sound slide up or down, depending on whether it’s higher
    or lower than the center. The Slide Delta slider specifies how fast it raises
    or lowers, either quickly or slowly.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**滑动**会让你的声音上下滑动，具体取决于它是否高于或低于中心。滑动增量滑块指定它是快速还是缓慢地上升或下降。'
- en: '**Vibrato** adds a cool oscillating effect to your sound. It’s kind of wiggly.
    The Vibrato Depth slider specifies how wiggly the vibrato gets, and the Vibrato
    Speed specifies how fast it goes. At a low speed, you can easily hear it move
    up and down. At a high speed, the oscillations blend together into a buzzier sound.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**颤音**为你的声音加入一种酷的振荡效果。它有点像抖动。颤音深度滑块指定颤音的抖动程度，而颤音速度则指定振荡的速度。在较低的速度下，你可以清晰听到它上下移动；在较高的速度下，振荡会融合在一起，产生更嘈杂的声音。'
- en: '**Change** lets you change how high or low the middle of your sound is. Slide
    changes the sound gradually, but Change does it instantly. You can use Change
    to make your sound seem like it has multiple notes. Change Amount specifies how
    high or low the sound should become: to the right is higher, and to the left is
    lower. Change Speed specifies where in the sound the change happens. A higher
    Change Speed happens almost immediately, and a lower Change Speed happens later
    in the sound.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**改变**让你可以调整声音的中频高低。滑动可以让声音逐渐变化，而Change则会立即改变。你可以使用Change让你的声音听起来像是有多个音符。Change
    Amount指定声音的高低：向右是高，向左是低。Change Speed指定变化发生的时刻。更高的Change Speed几乎是立即变化，而较低的Change
    Speed则会在声音的后期发生变化。'
- en: Exporting Sounds
  id: totrans-119
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 导出声音
- en: As with Audacity, *saving* a sound and *exporting* it in sfxr are two different
    processes. Clicking **Save Sound** produces a file that only works with sfxr.
    The file keeps track of all your slider settings, so if you want to make changes
    later, you must save your sound.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 和Audacity一样，*保存*一个声音和*导出*它在sfxr中是两个不同的过程。点击**保存声音**会生成一个仅能在sfxr中使用的文件。这个文件会记录所有滑块设置，因此如果你想稍后做修改，你必须保存你的声音。
- en: Clicking **Export .Wav** produces a *WAV* file that most game-making tools (like
    Scratch) can read. But sfxr can’t read *WAV* files. So if you don’t save your
    sound before you export it and want to make changes to your sound later, *tough
    noogies*.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**导出 .Wav**会生成一个*WAV*文件，绝大多数游戏制作工具（如Scratch）都可以读取该文件。但sfxr不能读取*WAV*文件。所以，如果你没有在导出之前保存你的声音文件，并且之后想对声音做修改，那就*没办法了*。
- en: Obviously, the best practice is to save your sound *and* export a *WAV* file
    for your game. That way, if you decide to make it shorter, longer, or weirder,
    you can reload your sound file in sfxr. Then you can export a *WAV* file of your
    new sound.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，最佳实践是保存你的声音*并*导出一个*WAV*文件供你的游戏使用。这样，如果你决定让它更短、更长或更奇特，你可以在sfxr中重新加载声音文件。然后，你可以导出你新声音的*WAV*文件。
- en: '![Image](Images/f142-01.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f142-01.jpg)'
- en: The bfxr Tool
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: bfxr工具
- en: If you’re comfortable using sfxr, you might want to try the more complicated
    bfxr.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经习惯使用sfxr，你可能想尝试更复杂的bfxr。
- en: '![Image](Images/f143-01.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f143-01.jpg)'
- en: '*The bxfr interface*'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '*bxfr界面*'
- en: Created by Stephen Lavelle, bfxr is somewhat of a sequel to sfxr. It has more
    waveforms, more options, and more features in general. One useful bfxr feature
    is that it keeps track of all the new sounds you create using the Generator and
    Randomize buttons. So if you want to go back to a sound you generated earlier,
    you can. You probably won’t need most of the new options in bfxr unless sfxr doesn’t
    provide enough features for the sounds you want to create. You can download the
    tool at *[https://www.bfxr.net/](https://www.bfxr.net/)*.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 由 Stephen Lavelle 创建的 bfxr 是 sfxr 的某种继承版。它拥有更多的波形、更多的选项和更多的功能。bfxr 的一个有用功能是，它会跟踪你通过生成器和随机按钮创建的所有新声音。所以，如果你想回到之前生成的某个声音，你是可以做到的。除非
    sfxr 提供的功能不足以满足你想要创建的声音，否则你可能不需要 bfxr 中的大多数新选项。你可以在 *[https://www.bfxr.net/](https://www.bfxr.net/)*
    下载这个工具。
- en: Creating Music Loops with Drumcircle
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Drumcircle 创建音乐循环
- en: Most music you listen to has a beginning and an end, and your favorite summer
    jam is probably only a couple of minutes long. In games, it’s often impossible
    to tell how long a song needs to play. Each player takes a different amount of
    time to finish the game. Some will finish very quickly, and others will spend
    a long time exploring.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 你听到的大多数音乐都有开始和结束，而你最喜欢的夏日旋律可能只有几分钟长。在游戏中，通常很难判断一首歌曲需要播放多久。每个玩家完成游戏的时间不同。有些玩家很快就能完成，而有些玩家会花很长时间进行探索。
- en: That’s why most game music is written to be looped. It doesn’t have an end.
    Instead, it wraps back around to the beginning and keeps going. That way, the
    song can fit however long the player ends up playing the game.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么大多数游戏音乐都是循环播放的原因。它没有结束。相反，它会回到起点并继续播放。这样，无论玩家玩游戏的时间有多长，歌曲都能适应。
- en: We’ll use the Drumcircle program to make short music loops. Created by Andi
    McClure, Drumcircle is simple and fun to use. You can download it at *[http://tinyurl.com/getdrumcircle/](http://tinyurl.com/getdrumcircle/)*.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Drumcircle 程序来制作短小的音乐循环。Drumcircle 是由 Andi McClure 创建的，使用起来简单且有趣。你可以在
    *[http://tinyurl.com/getdrumcircle/](http://tinyurl.com/getdrumcircle/)* 下载它。
- en: '![Image](Images/f144-01.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f144-01.jpg)'
- en: When you run it, you’ll see a very simple menu. Click the **Play** button to
    get started. You’ll see a screen that looks like this.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行程序时，你会看到一个非常简单的菜单。点击**播放**按钮开始。你将看到一个像这样的界面。
- en: '![Image](Images/f145-01.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f145-01.jpg)'
- en: '*Drumcircle*'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '*Drumcircle*'
- en: Your screen won’t look exactly the same as the one you see here. When you start
    Drumcircle, it’ll create a loop from random notes. Drumcircle works similar to
    an old submarine radar screen. (Maybe you’ve seen one in a movie.) As the line
    (or *sweep* in radar parlance) moves around the circle, it plays the notes that
    it touches. By placing notes in the circle, you decide which notes are played.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 你的屏幕可能和这里看到的样子不完全相同。当你启动 Drumcircle 时，它会从随机音符创建一个循环。Drumcircle 的工作方式类似于旧式的潜艇雷达屏幕。（也许你在电影里见过。）当雷达线（或者说雷达术语中的*扫描*）围绕圆圈移动时，它会播放它触及到的音符。通过在圆圈中放置音符，你可以决定哪些音符会被播放。
- en: Play with the program a bit to get a feel for it! You can drag notes around
    to move them, or drag new notes from the bottom to add them. Click a note to hear
    what it sounds like. When you click the arrow at the bottom right, you can cycle
    through even more notes, drum sounds, and effects. Also, you can start and stop
    the sweep by clicking the center of the circle.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 玩一玩这个程序，熟悉一下它！你可以拖动音符来移动它们，或者从底部拖动新的音符来添加它们。点击一个音符听听它的声音。当你点击右下角的箭头时，你可以浏览更多的音符、鼓声和效果。此外，你可以通过点击圆心来启动或停止扫描。
- en: Making a Drum Loop
  id: totrans-139
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 制作鼓循环
- en: All right, let’s make a simple drum loop. Click the **Reset** button at the
    top to clear all the notes. You should be left with a bunch of dots.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们制作一个简单的鼓循环。点击顶部的**重置**按钮来清除所有音符。你应该会看到一堆点。
- en: '![Image](Images/f146-01.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f146-01.jpg)'
- en: '*A blank slate*'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '*一张白纸*'
- en: Around the outside of the circle are 16 dots, which make Drumcircle a *16-step
    sequencer*. A sequencer makes music by putting notes in a sequence, and 16 step
    refers to the 16 notes the sequencer uses. Electronic music-making tools use 16
    step as a common format.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 圆圈外面有 16 个点，这使得 Drumcircle 成为一个*16 步音序器*。音序器通过将音符按顺序排列来制作音乐，而 16 步指的是音序器使用的
    16 个音符。电子音乐制作工具通常使用 16 步作为常见格式。
- en: The second circle inside the biggest circle has 8 spots (half of 16), and the
    innermost circle has 4 spots (a quarter of 16 and half of 8). These inner spots
    are guidelines that will help us make our loop. If we play a note 16 times in
    the outer circle, it produces a very fast beat. If we play a note 8 times in the
    second circle, it’ll be slower, playing it half as often. Playing a note 4 times
    in the inner circle is slowest of all.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 最大的圆圈内的第二个圆圈有8个位置（16的二分之一），而最里面的圆圈有4个位置（16的四分之一，也是8的二分之一）。这些内部位置是帮助我们制作循环的指南。如果我们在外圈播放一个音符16次，它会产生一个非常快速的节奏。如果我们在第二个圆圈中播放一个音符8次，它会更慢，播放频率是前者的一半。在最内圈播放一个音符4次则是最慢的。
- en: Adding Some Drums
  id: totrans-145
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 加入一些鼓声
- en: Let’s make a simple loop. We’ll start by adding some drums to create a rhythm.
    A drum rhythm is often the backbone of a music piece. It gives the rest of the
    instruments a structure to build from. This simple drum line will be our structure.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们做一个简单的循环。我们从加入一些鼓声开始，以创造节奏。鼓声节奏通常是音乐作品的骨架，它为其他乐器提供了一个构建的框架。这个简单的鼓线将作为我们的框架。
- en: When you click the colored circles at the bottom of the screen, they get higher
    in pitch from left to right. These are musical notes and are usually lettered
    A to G. We’ll come back to this later. To start, we want a drum line, so click
    the arrow until you see the drum icons.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击屏幕底部的彩色圆圈时，它们的音调会从左到右逐渐升高。这些是音符，通常用字母A到G表示。我们稍后会回到这个话题。开始时，我们需要的是一条鼓线，所以点击箭头直到你看到鼓的图标。
- en: '![Image](Images/f147-01.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f147-01.jpg)'
- en: '*Creating a drum line*'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '*创建鼓线*'
- en: Try clicking some of the drums to hear what they sound like. There are lots
    of different drum sounds, including a hand clap. For our drum line, we’ll use
    the snare drum, which looks like a hammer with legs and is immediately to the
    left of the hand clap. Because we want a beat that’s not too fast or too slow,
    let’s add our snare to the middle circle, the one with 8 dots. Drag a snare icon
    to each of the 8 dots.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 试着点击一些鼓，听听它们的声音。有很多不同的鼓声，包括拍手声。对于我们的鼓线，我们将使用军鼓，它看起来像一个带腿的锤子，紧挨着拍手声的左边。因为我们想要一个既不太快也不太慢的节奏，所以让我们把军鼓添加到中间的圆圈，也就是有8个点的那个圆圈。将军鼓图标拖动到8个点中的每一个。
- en: Now we have our basic beat. *Dum, dum, dum, dum, dum, dum, dum, dum.* It provides
    a simple rhythm for us to build on. But this beat alone is pretty boring. Let’s
    add a little swing to make it more cheerful. We don’t have to put sounds on the
    dots. Try adding a snare right before one of the snares we already have.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了基本的节奏。*咚，咚，咚，咚，咚，咚，咚，咚*。它为我们提供了一个简单的节奏，可以在此基础上进行构建。但单独这个节奏还是挺无聊的。让我们加入一些摇摆感，让它更加欢快。我们不必在每个点上都添加声音。试着在我们已有的一个军鼓之前添加一个军鼓。
- en: '![Image](Images/f148-01.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f148-01.jpg)'
- en: '*Adding more snare drums*'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '*加入更多军鼓*'
- en: That gives the piece a cool little kick. You can see in the figure that I added
    two of the snare drums at opposite sides of the circle. Now they’ll come in twice
    per loop, every 8 steps (or every 4 drum beats). *Dum, dum, dum, dah-dum, dum,
    dum, dum, dah-dum*. That divides our loop into two halves, which gives us a good
    starting place to add more sounds.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这为作品增添了一些酷炫的节奏感。你可以看到图中，我将两个军鼓放在了圆圈的对侧。现在它们会在每个循环中出现两次，每8步（或每4拍鼓声）。*咚，咚，咚，呯-咚，咚，咚，咚，呯-咚*。这将我们的循环分为两部分，为添加更多声音提供了一个很好的起点。
- en: Adding More Sounds
  id: totrans-155
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 添加更多声音
- en: Our loop has two parts, each with its own *dah-dum*. Now we can start to set
    the two halves apart from each other. Let’s add a couple more sounds.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的循环有两个部分，每个部分都有自己的*呯-咚*。现在我们可以开始将这两部分分开。让我们再加入一些声音。
- en: You can play multiple sounds at the same time. We still haven’t put anything
    in the outer ring. If we put two notes next to each other in the outer ring, they’ll
    play faster than the drumbeat in the inner ring. Pick two different sounds and
    add them to the loop. After the *dah-dum* is a good place. We use the hand clap
    and the cymbals here.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以同时播放多个声音。我们仍然没有在外圈放任何东西。如果我们将两个音符相邻放在外圈，它们的播放速度将比内圈的鼓声更快。选择两种不同的声音，添加到循环中。在*呯-咚*之后是一个不错的地方。我们在这里使用拍手声和镲。
- en: '![Image](Images/f149-01.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f149-01.jpg)'
- en: '*Adding even more sounds*'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '*加入更多声音*'
- en: These help to build up the percussive sound of our loop. *Percussion* refers
    to instruments like drums, cymbals, and cowbells, or things you play by hitting
    them to create rhythm. Now let’s add some other instruments on top of them.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这些有助于构建我们循环的打击感。*打击乐*指的是像鼓、镲、牛铃之类的乐器，或者是通过敲击它们来产生节奏的物品。现在让我们在它们的基础上再加入一些其他乐器。
- en: Click the arrow to see more of Drumcircle’s banks of sounds. You’ll find piano
    notes (in a rainbow of colors representing different scales), guitar notes, and
    other sounds effects. Some of my favorites include the trash can, computer, and
    electric guitar.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 点击箭头查看更多 Drumcircle 的音效库。你会找到钢琴音符（用代表不同音阶的彩虹色表示），吉他音符和其他音效。我的一些最爱包括垃圾桶声、电脑声和电吉他声。
- en: Each instrument has a different characteristic. Click the acoustic guitar, rock
    guitar, and metal guitar (they’re on the fifth page after the rainbow circles,
    the one with the dog) and listen to how they sound. The acoustic guitar sounds
    warm and open, the rock guitar sounds harsh and fast, and the metal guitar (the
    one with the little skull) sounds low and nasty, almost like a wolf snarling.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 每种乐器都有不同的特点。点击木吉他、摇滚吉他和电吉他（它们在彩虹圆圈之后的第五页，就是有狗的那一页），听听它们的声音。木吉他声音温暖且开放，摇滚吉他声音尖锐且快速，而电吉他（那个有小骷髅的）声音低沉而刺耳，几乎像狼的咆哮。
- en: Let’s add some warmer instruments to our loop.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为我们的循环添加一些更温暖的乐器。
- en: '![Image](Images/f150-01.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f150-01.jpg)'
- en: '*Adding harps and a guitar*'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '*加入竖琴和吉他*'
- en: Here, we added two harp sounds leading into one of the *dah-dums*, and then
    a rock guitar sound following the hand claps. Always think about how your sounds
    will relate to other sounds around it.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们加入了两个竖琴音效，接着是一个 *dah-dum* 的音效，然后是摇滚吉他声音，紧接着是拍手声。始终考虑你的声音如何与周围的其他声音相互关联。
- en: Adding a Melody
  id: totrans-167
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 添加旋律
- en: 'Now, let’s add a melody! We have three different instruments that can be played
    at multiple scales: the empty rainbow circles sound chippy and bright, the piano
    keys sound warm and light, and the guitar strums sound bouncy and fun.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们加入一个旋律！我们有三种不同的乐器，可以在多个音阶上演奏：空的彩虹圆圈声音清脆明亮，钢琴键盘声音温暖轻盈，吉他弹奏声音充满弹性和趣味。
- en: We’ll use the piano keys because the lower keys are warm and lingering. You
    can hear the sounds trail off slowly and blend into each other well. We’ll also
    add three notes in a row, rising in scale, which is called a *progression* in
    music.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用钢琴键，因为较低的键音温暖且余音绕梁。你可以听到声音慢慢消失，并且相互融合得很好。我们还将加入三个连续上升的音符，这在音乐中被称为 *进行*。
- en: '![Image](Images/f151-01.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f151-01.jpg)'
- en: '*Adding a melody*'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '*添加旋律*'
- en: Because each note is higher than the last, it sounds like the melody is rising.
    If you’re not sure what kind of melody to write, progressions are always a good
    place to start because they usually sound nice. But you can experiment with playing
    notes in different sequences. Can you make a loop that sounds sad? Or tense? Or
    silly?
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 因为每个音符都比上一个高，所以听起来旋律在上升。如果你不确定该写什么样的旋律，进行总是一个不错的起点，因为它们通常听起来很好。但你也可以尝试用不同的顺序弹奏音符。你能做出一个听起来悲伤的循环吗？或者紧张的？或者滑稽的？
- en: Saving and Exporting Loops
  id: totrans-173
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 保存与导出循环
- en: Click the **Save** button at the top of the window, and you’ll see eight different
    slots to save loops to. As in Audacity and sfxr, saving your work and exporting
    your work are different processes. By saving a loop, you can load it and edit
    it more later. The Export Wav button is also in the Save menu. As mentioned earlier,
    Export Wav creates a file that you can use in your games. (The file be named *output1.wav*
    or *output2.wav*, and so on.) When you’re exporting a *WAV* file, keep in mind
    that the first note is always the one at the top (where 12 would be on a clock).
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 点击窗口顶部的**保存**按钮，你会看到八个不同的槽位可以保存循环。像 Audacity 和 sfxr 一样，保存和导出是两个不同的过程。保存循环后，你可以稍后加载并继续编辑。导出
    WAV 按钮也在保存菜单中。如前所述，导出 WAV 会创建一个可以在游戏中使用的文件。（文件名会是 *output1.wav* 或 *output2.wav*，以此类推。）导出
    *WAV* 文件时，请记住，第一个音符总是位于顶部的位置（就像时钟上的 12 点）。
- en: '![Image](Images/f152-01.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f152-01.jpg)'
- en: '*Saving your drum loop*'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '*保存你的鼓循环*'
- en: Now open your loop’s *WAV* file in Audacity. What does the waveform look like?
    (Hold down SHIFT before you click Play to make your sound loop.)
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在 Audacity 中打开你循环的*WAV*文件。波形图看起来怎么样？（在点击播放前按住 SHIFT 键，让你的声音循环播放。）
- en: '![Image](Images/f152-02.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f152-02.jpg)'
- en: '*What your drum loop looks like in waveform*'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '*你的鼓循环在波形图中的样子*'
- en: You could create a song just by stringing together a bunch of different Drumcircle
    *WAV* files in Audacity.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过将不同的 Drumcircle *WAV* 文件在 Audacity 中串联在一起来创建一首歌。
- en: Bosca Ceoil
  id: totrans-181
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Bosca Ceoil
- en: If you really like and feel comfortable with music sequencing, you might want
    to try Bosca Ceoil. Named after an Irish word for “music box,” Bosca Ceoil is
    a simple, free, music-making tool created by Terry Cavanagh.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你真的喜欢并且觉得自己对音乐编排很有感觉，你可以尝试Bosca Ceoil。Bosca Ceoil这个名字来源于爱尔兰语，意为“音乐盒”，它是Terry
    Cavanagh创建的一个简单、免费的音乐制作工具。
- en: '![Image](Images/f153-01.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f153-01.jpg)'
- en: '*Bosca Ceoil interface*'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '*Bosca Ceoil 界面*'
- en: Bosca Ceoil is a bit more complicated than Drumcircle, but it has many more
    features if you really want to make songs. There are lots of different instruments
    to work with, and you can make multiple 16-step patterns and chain them together
    to create a longer song. Bosca Ceoil has an excellent built-in tutorial that will
    teach you the basics. You can download Bosca Ceoil at *[https://boscaceoil.net/](https://boscaceoil.net/)*.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: Bosca Ceoil比Drumcircle稍微复杂一些，但如果你真的想创作歌曲，它有更多的功能。你可以使用许多不同的乐器，还可以创建多个16步模式并将它们连接起来，制作更长的歌曲。Bosca
    Ceoil有一个非常棒的内置教程，会教你基本的操作。你可以在*[https://boscaceoil.net/](https://boscaceoil.net/)*下载Bosca
    Ceoil。
- en: Adding a Music Loop to a Scratch Game
  id: totrans-186
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 为Scratch游戏添加音乐循环
- en: A basic music loop in Scratch looks like this.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在Scratch中，基本的音乐循环看起来是这样的。
- en: '![Image](Images/f153-02.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f153-02.jpg)'
- en: '*Programming a music loop in Scratch*'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '*在Scratch中编程音乐循环*'
- en: If you use a plain old `play sound` block inside a `forever` loop, it would
    just keep starting the sound over again. It would be just like the bug’s leaf-munching
    sound that didn’t wait to play the entire sound before looping. Terrible!
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在`forever`循环中使用一个普通的`play sound`积木，它将一直重复播放声音。就像那个错误的虫子叶片咀嚼声音一样，在没有等待整个声音播放完之前就开始循环，真是糟糕！
- en: If you don’t want the same song to loop endlessly during your *entire* game,
    use a `repeat until` loop instead.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不希望同一首歌在整个游戏过程中无休止地循环播放，可以使用`repeat until`循环。
- en: '![Image](Images/f154-01.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f154-01.jpg)'
- en: '*Turning off the music after the song ends*'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '*歌曲结束后关闭音乐*'
- en: It’s also handy to know that Scratch’s Sound Library comes with a whole bunch
    of premade loops that you can use. Check out these loops in the Music Loops category!
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，Scratch的声音库非常实用，它包含了大量的预制循环，你可以使用它们。快去查看“音乐循环”类别中的这些循环吧！
- en: '![Image](Images/f154-02.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f154-02.jpg)'
- en: '*Premade music loops in Scratch*'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '*Scratch中的预制音乐循环*'
- en: '**NOTE:** The loops used in the beginning and ending of *Hatlight* are “Dance
    Slow Mo” and “Dance Chill Out,” respectively.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** *Hatlight*的开始和结束部分使用的循环分别是“Dance Slow Mo”和“Dance Chill Out”。'
- en: Keep in mind that you can also edit a sound directly in Scratch. You can’t make
    as many changes as you can in Audacity, but you can adjust the volume and make
    a sound fade in or out. Fade in and fade out work the same in Scratch as they
    do in Audacity.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，你还可以直接在Scratch中编辑声音。虽然你无法像在Audacity中那样做出更多更复杂的更改，但你可以调整音量并使声音渐入或渐出。渐入和渐出的效果在Scratch和Audacity中是一样的。
- en: Extra Challenges
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 额外挑战
- en: If you’re ready to take on some challenges, the following sections provide some
    extra ideas for you to try.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你准备好接受一些挑战，以下部分提供了一些额外的创意供你尝试。
- en: Compose a Score for a Game Using Only Mouth Sounds
  id: totrans-201
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用口腔声音为游戏创作音乐
- en: 'There is a huge range of sounds you can make if you experiment: humming noises,
    farting noises, explosion noises, tongue-clicking noises, or just saying made-up
    words. Recall that the sound effect for jumping in *Hatlight* was me saying “Hup!”
    into a mic. If you’re feeling ambitious, try to make music for your game entirely
    with your mouth.'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你进行一些实验，你可以制作出一系列不同的声音：哼声、放屁声、爆炸声、舌尖点击声，或者只是说一些胡乱编造的词语。回想一下，*Hatlight*中的跳跃音效是我对着麦克风说的“Hup！”声音。如果你有野心，可以尝试完全用口腔发出声音为你的游戏创作音乐。
- en: Use Music to Create a Contrasting Mood
  id: totrans-203
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用音乐来创造对比的情绪
- en: '*Dissonance* is a word for the unsettling feeling you get when what you’re
    seeing tells you one thing but what you’re hearing tells you another. How would
    you feel while playing a game in which you run and jump through a bright, happy
    forest while sinister, scary music plays? How would you feel during a game where
    your character moves slowly and sadly while happy, poppy music plays? What kinds
    of weird feelings can you create in your game?'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '*不和谐音*是一个词，用来描述当你看到的事物和听到的声音不一致时产生的不安感。当你在游戏中跑跳穿越一个明亮愉快的森林，而播放着邪恶、恐怖的音乐时，你会有什么感觉？当你的角色在游戏中移动缓慢且忧伤，而背景音乐是欢快的流行音乐时，你会有什么感觉？你能在游戏中创造出哪些奇怪的情感？'
- en: Create a Procedural Music Game
  id: totrans-205
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建一个程序化音乐游戏
- en: Go to *[https://freesound.org/](https://freesound.org/)* and find a recording
    of someone playing lots of notes on an instrument. Use Audacity to cut out four
    different notes. Play one of those notes when the player moves up, another when
    they move right, another when they move left, and another when they move down.
    When the player moves around your game, they will be involuntarily creating music!
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 访问 *[https://freesound.org/](https://freesound.org/)*，找到一段有人在乐器上弹奏多个音符的录音。使用
    Audacity 剪辑出四个不同的音符。当玩家向上移动时播放其中一个音符，向右移动时播放另一个，向左移动时播放另一个，向下移动时播放最后一个。当玩家在你的游戏中移动时，他们将不自觉地创造出音乐！
- en: What other ways can you come up with to use sound and music in your games?
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 你还能想到哪些方法，将声音和音乐运用到你的游戏中？
- en: What You Learned
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你所学到的
- en: In this chapter, you learned how to add cool sound effects to convey information
    to your players and set the right tone for your games. You used Audacity to record
    and edit your own sound effects, generated sounds using sfxr, and created drum
    loops using Drumcircle.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你学会了如何添加酷炫的音效，将信息传递给玩家，并为你的游戏设定合适的氛围。你使用 Audacity 录制并编辑了自己的音效，使用 sfxr
    生成了声音，并使用 Drumcircle 创建了鼓循环。
- en: In the next and last chapter, I’ll share some advice on how to use what you
    learned in this book to bring your ideas to life.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的最后一章，我将分享一些建议，帮助你将本书中学到的内容运用到实际中，带来你的创意。
