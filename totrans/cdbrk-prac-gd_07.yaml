- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Codes and nomenclators
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 密码和命名法
- en: '![](image_fi/502727c07/g07001.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/g07001.png)'
- en: The 1917 Zimmermann Telegram ([Figure 7-1](#figure7-1)), whose solving changed
    the course of World War I, was a secret diplomatic note sent by the German secretary
    of state, Arthur Zimmermann, to Mexico in January 1917\. It proposed a military
    alliance between Germany and Mexico in the event that the United States entered
    the war against the Germans.^([1](b06.xhtml#c07-endnote-1)) The telegram was surreptitiously
    intercepted in England and forwarded to British cryptanalysts, who succeeded in
    breaking it. Revelation of the contents enraged Americans and helped generate
    support within the United States (which had thus far been neutral) for declaring
    war on Germany.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 1917年的齐默尔曼电报（[图7-1](#figure7-1)），其破解改变了第一次世界大战的进程，是德国国务卿阿图尔·齐默尔曼于1917年1月发送给墨西哥的一份秘密外交通知。电报提议，在美国参战对抗德国的情况下，德国与墨西哥建立军事同盟。^([1](b06.xhtml#c07-endnote-1))
    该电报在英国被秘密截获并转交给英国密码分析师，后者成功破解了它。内容的披露激怒了美国人，并帮助促使美国（此前一直保持中立）支持对德国宣战。
- en: '![](image_fi/502727c07/f07001.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/f07001.png)'
- en: 'Figure 7-1: The Zimmermann Telegram, a secret diplomatic note sent by the German
    secretary of state in 1917, is encrypted in a code.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-1：齐默尔曼电报，1917年由德国国务卿发送的秘密外交通知，采用密码加密。
- en: 'As can be seen, the text of the Zimmermann Telegram consists of numbers, most
    of which have five digits. Each number stands for a word. For instance, `4458`
    means `zusammen` (`together`), `13850` stands for `finanziell` (`financial`),
    and `36477` represents `Texas`. To encrypt the message, the Germans used a kind
    of dictionary with thousands of entries for every common word of their language.
    Decrypted and translated, the Zimmermann Telegram reads as follows:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如所见，齐默尔曼电报的内容由数字组成，其中大部分是五位数。每个数字代表一个单词。例如，`4458`代表`zusammen`（`一起`），`13850`代表`finanziell`（`财务`），`36477`代表`德克萨斯`。为了加密信息，德国人使用了一种字典，其中包含数千个常用词的条目。解密和翻译后，齐默尔曼电报的内容如下：
- en: '`On the first of February we intend to begin submarine warfare unrestricted.
    In spite of this, it is our intention to endeavor to keep neutral the United States
    of America.`'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`我们计划于二月一日开始无限制的潜艇战。尽管如此，我们的意图是尽力保持美国中立。`'
- en: '`If this attempt is not successful, we propose an alliance on the following
    basis with Mexico: that we shall make war together and together make peace. We
    shall give general financial support, and it is understood that Mexico is to reconquer
    the lost territory in New Mexico, Texas, and Arizona. The details are left to
    you for settlement . . .`'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`如果此次尝试不成功，我们提议与墨西哥建立以下基础上的同盟：我们将共同作战，并共同达成和平。我们将提供一般的财政支持，且明言墨西哥将重新夺回新墨西哥、德克萨斯和亚利桑那的失地。细节由你来决定……`'
- en: '`You are instructed to inform the President of Mexico of the above in the greatest
    confidence as soon as it is certain that there will be an outbreak of war with
    the United States and suggest that the President of Mexico, on his own initiative,
    should communicate with Japan suggesting adherence at once to this plan; at the
    same time, offer to mediate between Germany and Japan.`'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`你被指示在确信与美国爆发战争后，尽快以绝对保密的方式通知墨西哥总统上述内容，并建议墨西哥总统主动与日本沟通，建议立即遵守这一计划；同时，提出调解德国与日本之间的争端。`'
- en: '`Please call to the attention of the President of Mexico that the employment
    of ruthless submarine warfare now promises to compel England to make peace in
    a few months.`'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`请提醒墨西哥总统，现在使用无情的潜艇战有望迫使英国在几个月内达成和平。`'
- en: '`Zimmermann (Secretary of State)`'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`齐默尔曼（国务卿）`'
- en: Codes
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 密码
- en: An encryption method that replaces entire words or phrases with single numbers,
    letter groups, or symbols is referred to as a *code*. Codes were especially popular
    in the days of telegraphy, when—as will be pointed out below—many were used not
    only for secrecy but also for shortening messages.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一种将整个单词或短语替换为单一数字、字母组合或符号的加密方法称为*密码*。密码在电报时代尤为流行——正如下面所指出的那样——许多密码不仅用于保密，还用于缩短信息。
- en: In the case of the Zimmermann Telegram, secrecy, not condensing a message, was
    the main goal. The Germans introduced the system used, named Code 13040, in 1916\.
    It was partially based on earlier codes already known to the British cryptanalysts.
    By analyzing dozens of telegrams in Code 13040, codebreakers in London could improve
    their knowledge of it, and in early 1917, when they were ordered to decipher the
    Zimmermann Telegram, they were well prepared. They could immediately solve parts
    of the message and later broke it completely.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在齐默尔曼电报的情况下，保密性，而非简化消息，是主要目标。德国人于1916年引入了名为13040代码的系统。该系统部分基于早期已经为英国密码分析员所知的代码。通过分析数十个13040代码的电报，伦敦的密码破译员能够提升对它的理解，到了1917年初，当他们接到破译齐默尔曼电报的命令时，他们已经准备充分。他们能够立刻解开消息的一部分，随后完全破译了该电报。
- en: 'Most encryption methods described in this book are not technically codes, but
    *ciphers*, because they work on single letters, not on words. Simple substitution
    ciphers such as the Caesar cipher (or ROT-13), the polyalphabetic Vigenère system,
    and the digraph-swapping Playfair methodology are all ciphers. The systems used
    for the Zimmermann Telegram, a dictionary code (see [Chapter 14](c14.xhtml)),
    and Navajo code talking (see [Chapter 15](c15.xhtml)) are all codes. To say it
    in a different way: a code is an encryption method that typically operates at
    the level of words or phrases, while a cipher generally encrypts messages at the
    level of individual letters.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中描述的大多数加密方法在技术上并不是代码，而是*密码*，因为它们作用于单个字母，而非单词。简单的替换密码，如凯撒密码（或ROT-13）、多字母的维吉尼亚系统以及双字母交换的普雷费尔方法，都是密码。齐默尔曼电报使用的系统，包括字典代码（见[第14章](c14.xhtml)）和纳瓦霍代码（见[第15章](c15.xhtml)），都是代码。换句话说：代码是一种通常作用于单词或短语级别的加密方法，而密码一般加密消息时作用于单个字母级别。
- en: We must briefly touch on some additional terminology. A *codegroup* is a number,
    letter group, or symbol that represents a word in a code. Any code designed for
    encrypting arbitrary texts needs to provide a codegroup for every single common
    word of a language. This could mean thousands of entries and is why writing a
    code usually requires creating a whole book, called a *codebook*. A code, as defined
    here, can therefore also be called a *codebook code*. Figures [7-2](#figure7-2)
    and [7-3](#figure7-3) show pages from codebooks printed in 1911 and 1892.^([2](b06.xhtml#c07-endnote-2))^,
    ^([3](b06.xhtml#c07-endnote-3))
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须简要介绍一些附加术语。*代码组*是指在代码中表示一个单词的数字、字母组合或符号。任何旨在加密任意文本的代码都需要为语言中的每个常见单词提供一个代码组。这可能意味着成千上万的条目，因此编写代码通常需要创建一本完整的书，称为*密码本*。因此，本文定义的代码也可以称为*密码本代码*。图
    [7-2](#figure7-2) 和 [7-3](#figure7-3) 显示了1911年和1892年印刷的密码本页面。^([2](b06.xhtml#c07-endnote-2))^，^([3](b06.xhtml#c07-endnote-3))
- en: While some codes were used for all kinds of messages, others provided special-purpose
    vocabulary for use in telegrams. Among others, there were timber, cotton, railway,
    machinery, and chess codes. Some companies created codes based on their sales
    catalogs, with codegroups for every product. Stockbroker codes provided codegroups
    for words such as `sell` and `buy`, as well as company names and numbers. Codes
    of this kind allowed for telegraphy-based trading, the forerunner of today’s online
    trading.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有些代码用于各种消息，但其他一些则提供了专门用于电报的词汇。例如，木材、棉花、铁路、机械和象棋代码。一些公司根据其销售目录创建了代码，为每个产品分配了代码组。股票经纪人的代码提供了如`卖`和`买`等单词的代码组，以及公司名称和编号。这类代码使得基于电报的交易成为可能，它是今天在线交易的前身。
- en: A distinction needs to be made between one-part and two-part codes. In a *one-part
    code*, the plaintext units and the codegroups are assigned according to some order
    (such as the alphabetical sorting in `A` = `1`, `AM` = `2`, `AND` = `3`, `ARMY`
    = `4`, `AT` = `5`, `AUSTRIA` = `6` . . .). In a *two-part code*, no such sorting
    is possible (such as in `A` = `1523`, `AM` = `912`, `AND` = `2303`, `ARMY` = `809`,
    `AT` = `1825`, `AUSTRIA` = `145` . . .). Code 13040, the one used in the Zimmermann
    Telegram, is a two-part code.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 需要区分单部分代码和双部分代码。在*单部分代码*中，明文单元和代码组是根据某种顺序分配的（例如按字母顺序排序：`A` = `1`，`AM` = `2`，`AND`
    = `3`，`ARMY` = `4`，`AT` = `5`，`AUSTRIA` = `6` ……）。在*双部分代码*中，不可能进行这样的排序（例如：`A`
    = `1523`，`AM` = `912`，`AND` = `2303`，`ARMY` = `809`，`AT` = `1825`，`AUSTRIA` =
    `145` ……）。齐默尔曼电报使用的代码13040就是一种双部分代码。
- en: A two-part code usually requires two substitution tables—one sorted by words
    and letters (for encryption) and another sorted by codegroups (for decryption).
    Decrypting a two-part code message without access to a table sorted by codegroups
    is laborious unless the code is very short. Likewise, Code 13040, which filled
    a whole book, would have been effectively unusable with a table sorted by codegroups
    only. Decryption would have been easy, but encryption would have been extremely
    time-consuming due to the difficulty of finding the words that needed to be encrypted.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个双重编码通常需要两个替代表——一个按单词和字母排序（用于加密），另一个按编码组排序（用于解密）。没有按编码组排序的表，解密一个双重编码信息是费力的，除非该代码非常简短。同样，代码13040，虽然填满了一整本书，如果仅有按编码组排序的表，它将几乎无法使用。解密可能很简单，但加密将非常耗时，因为很难找到需要加密的单词。
- en: 'The additional substitution table makes a two-part code more cumbersome to
    design than a one-part code. On the other hand, a two-part code is much more secure
    because a cryptanalyst can’t take advantage of the relationships between related
    code expressions and codegroups. For instance, if a codebreaker dealing with a
    one-part code knows that `1` stands for `A` and `3` stands for `AND`, they can
    guess that `2` represents a word located in the codebook between `A` and `AND`:
    for instance, `AM`. We will come back to this weakness later.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 额外的替代表使得双重编码比单一编码更为复杂。另一方面，双重编码要更加安全，因为密码分析员无法利用相关代码表达式和编码组之间的关系。例如，如果解码员处理一个单一编码，知道`1`代表`A`，`3`代表`AND`，他们可以猜测`2`代表一个位于编码书中`A`和`AND`之间的单词：例如，`AM`。我们稍后会回到这个弱点。
- en: '![](image_fi/502727c07/f07002.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/f07002.png)'
- en: 'Figure 7-2: A page from a 1911 codebook, which shows how words and phrases
    are replaced. In this case, the codegroups consist of five letters.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-2：一本1911年出版的代码书页面，展示了如何替换单词和短语。在这种情况下，编码组由五个字母组成。
- en: '![](image_fi/502727c07/f07003.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/f07003.png)'
- en: 'Figure 7-3: This 1892 work, *Sheahan’s Telegraphic Cipher Code*, lists numbers
    and meaningful words as codegroups for every plaintext word.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-3：这本1892年的作品，*谢翰的电报密码代码*，列出了每个明文单词的数字和有意义的词语作为编码组。
- en: Nomenclators
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 命名法
- en: 'Now let’s look at a system that constitutes a sort of hybrid between two systems:
    the *nomenclator*. This system includes both a code, as in numbers representing
    different words; and a cipher, with numbers or other symbols representing letters
    or letter combinations. The term itself is derived from the fact that these often
    consisted of a collection of names. At large events, there would be a person,
    called a nomenclator, who would announce the names of arrivals. The word *nomen*
    means “name” in Latin—specifically, a person’s second name, which designated their
    clan.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看看一种系统，它是两种系统的混合体：*命名法*。这个系统既包含一种代码，如用数字表示不同的单词；也包含一种密码，使用数字或其他符号表示字母或字母组合。这个术语本身来源于这些系统通常由一组名称构成。在大型活动中，会有一个人被称为命名员，他会宣布到达者的名字。*Nomen*在拉丁语中意味着“名字”——特指一个人的第二个名字，用来指示他们的家族。
- en: No exact border can be drawn between a code and a nomenclator. Most would consider
    any codebook with 50,000 entries to be a code, even if it contains codegroups
    for the letters of the alphabet. (Most codebooks do, as it is impossible to list
    all words and names a potential user might want to encrypt.) Most authors use
    the term *code* if an encryption table contains at least a few thousand words
    or phrases. If it contains fewer, the table is usually referred to as a nomenclator.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 无法准确划定代码和命名法之间的边界。大多数人会认为任何拥有50,000个条目的代码书都是一个代码，即使它包含字母表的编码组。（大多数代码书都包含，因为列出所有潜在用户可能想要加密的单词和名字是不可能的。）如果一个加密表包含至少几千个单词或短语，大多数作者会使用*代码*这个术语。如果包含的少于这个数量，则该表通常被称为命名法。
- en: Nomenclator encryption systems were most commonly used between the fourteenth
    and nineteenth centuries. For example, [Figure 7-4](#figure7-4) shows an excerpt
    from a letter written by a William Perwich in 1670.^([4](b06.xhtml#c07-endnote-4))^,
    ^([5](b06.xhtml#c07-endnote-5)) It starts with some fifteen words in cleartext
    (`But now whilst all the world was in . . .`), followed by several lines of numbers
    beginning with 76 and interrupted by a few more plaintext words.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 命名法加密系统在14世纪到19世纪之间最为常见。例如，[图7-4](#figure7-4)展示了1670年威廉·佩尔维奇（William Perwich）写的一封信的摘录。^([4](b06.xhtml#c07-endnote-4))^,
    ^([5](b06.xhtml#c07-endnote-5)) 它以约十五个明文单词开头（`But now whilst all the world was
    in . . .`），后面是以76开头的数字行，并被一些更多的明文单词打断。
- en: '![](image_fi/502727c07/f07004.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/f07004.png)'
- en: 'Figure 7-4: This letter from the seventeenth century is partially encrypted
    with a nomenclator.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-4：这封来自十七世纪的信件部分通过命名法加密。
- en: 'We are dealing here with a message that is partially encrypted. An unknown
    person (hopefully the recipient!) wrote the plaintext equivalent above each number.
    The message reads as follows (bold has been removed from the parts that were originally
    encrypted):'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这里处理的是一条部分加密的信息。一位未知的人（希望是接收者！）在每个数字上方写下了其明文等价物。该信息的内容如下（加粗部分已去除，原本加密的部分已恢复）：
- en: '`But now whilst all the world was`'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`But now whilst all the world was`'
- en: '`in tears & extraordinary affliction, you may well`'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`in tears & extraordinary affliction, you may well`'
- en: '`aske` `what did Monsieur whi he`'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`aske` `what did Monsieur whi he`'
- en: '`imediatly` `emploied himsel`'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`imediatly` `emploied himsel`'
- en: '`f in sesing all Madame’s money`'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`f in sesing all Madame’s money`'
- en: '`to a far``thing in any of` `her`'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`to a far``thing in any of` `her`'
- en: '`ladis hands al her Jewels`'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`ladis hands al her Jewels`'
- en: While most of the numbers (codegroups) in this message stand for letters, like
    in a cipher, some replace complete words, like in a code. For instance, `76` stands
    for `W`, `23` for `T`, and `47` for `H`. On the other hand, `161` is the equivalent
    of `Monsieur`, `164` of `Madame`, `165` of `money`, and `240` of `and`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这条信息中，大多数数字（代码组）代表字母，就像密码一样，但有些则替换了完整的单词，就像代码一样。例如，`76`代表`W`，`23`代表`T`，`47`代表`H`。另一方面，`161`等同于`Monsieur`，`164`等同于`Madame`，`165`等同于`money`，`240`等同于`and`。
- en: 'The following is a very simple example of a nomenclator:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个非常简单的命名法示例：
- en: '`A` = `1`, `B` = `2`, `C` = `3`, . . . `Z` = `26`'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`A` = `1`，`B` = `2`，`C` = `3`，……`Z` = `26`'
- en: '`London` = `27`, `Paris` = `28`; `Rome` = `29`; `today` = `30`; `tomorrow`
    = `31`'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`London` = `27`，`Paris` = `28`；`Rome` = `29`；`today` = `30`；`tomorrow` = `31`'
- en: Using this nomenclator, the plaintext `WILL TRAVEL FROM LONDON TO PARIS TOMORROW`
    encrypts to `23 9 12 12 / 20 18 1 21 5 12 / 6 18 15 13 / 27 / 20 15 / 28 / 31`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个命名法，明文`WILL TRAVEL FROM LONDON TO PARIS TOMORROW`会被加密为`23 9 12 12 / 20 18
    1 21 5 12 / 6 18 15 13 / 27 / 20 15 / 28 / 31`。
- en: Now lost, the nomenclator used for encrypting the Perwich letter probably included
    a few dozen words. Apart from `Monsieur`, `Madame`, `money`, and `and`, it might
    have contained names and places. The sender of a message could have then encrypted
    the most commonly used words of the English language with a single number while
    enciphering less common expressions letter by letter with one number each.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在已丢失，用于加密Perwich信的命名法可能包含了几十个单词。除了`Monsieur`、`Madame`、`money`和`and`外，它可能还包括了名字和地名。信息的发送者可能用一个数字加密了英语中最常用的单词，同时用一个数字逐字加密较不常见的表达。
- en: '[Figure 7-5](#figure7-5) shows a nomenclator used by Italian scientist and
    military officer Luigi Marsigli (1658–1730). He began using it in 1691, while
    in service to the Holy Roman emperor.^([6](b06.xhtml#c07-endnote-6)) As can be
    seen, this nomenclator provides three numbers to choose from (homophones) for
    every letter of the alphabet. In addition, there are two homophones for many common
    letter pairs. Finally, there is a group of 130 words, each of which has a codegroup
    of its own.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[图7-5](#figure7-5)展示了意大利科学家和军事官员路易吉·马尔西利（Luigi Marsigli，1658–1730）使用的命名法。他从1691年起开始使用它，当时他在服务于神圣罗马帝国皇帝期间。^([6](b06.xhtml#c07-endnote-6))^
    如图所示，这个命名法为每个字母提供了三个可选的数字（同音词）。此外，许多常见字母组合还有两个同音词。最后，还有一组130个单词，每个单词都有一个自己的代码组。'
- en: '![](image_fi/502727c07/f07005.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/f07005.png)'
- en: 'Figure 7-5: This nomenclator used by an Italian scientist in the late seventeenth
    century contains some 130 words.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-5：这份由意大利科学家在十七世纪末使用的命名法包含了约130个单词。
- en: 'Just as there are one-part and two-part codes, there are also one-part and
    two-part nomenclators. In a *one-part nomenclator*, the codegroups and the letters,
    words, or phrases they represent are assigned according to some system; but in
    a *two-part nomenclator*, this is not the case. The seventeenth-century nomenclator
    shown above is a mixture of the two variants. While the letter codegroups are
    unsorted, the word codegroups are assigned in alphabetical order: `Ablegat` =
    `216`, `Adrianopol` = `217`, `Agri` = `219`, `Allianz` = `220`, etc.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 就像有一部分和两部分代码一样，也有一部分和两部分命名法。在*一部分命名法*中，代码组以及它们所代表的字母、单词或短语是根据某种系统分配的；但在*两部分命名法*中，情况并非如此。上面显示的十七世纪命名法是这两种变体的混合体。虽然字母代码组是无序的，但单词代码组是按字母顺序分配的：`Ablegat`
    = `216`，`Adrianopol` = `217`，`Agri` = `219`，`Allianz` = `220`，等等。
- en: One-part codes and nomenclators are more common than their two-part equivalents.
    This is because sorted codegroups make a code or nomenclator easier to design
    and more convenient to use. On the other hand, one-part schemes are less secure.
    As soon as a codebreaker knows, say, that `4523` stands for `Washington`, they
    can be sure that `4524` represents another word starting with a `W`. Similarly,
    once they realize that `A` = `44`, `B` = `45`, and `C` = `46`, all the other letters
    become easy to guess, as well.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一部分代码和命名法比两部分的更为常见。这是因为有序的代码组使得代码或命名法更容易设计，也更方便使用。另一方面，一部分方案的安全性较差。举个例子，一旦破译者知道`4523`代表`华盛顿`，他们就能确定`4524`代表另一个以`W`开头的单词。类似地，一旦他们意识到`A`
    = `44`，`B` = `45`，`C` = `46`，其他字母也会变得容易猜测。
- en: Terminology
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 术语
- en: Nomenclators and codes are an active field of inquiry. Many interesting papers
    have been published in recent years in the journal *Cryptologia*, in the proceedings
    of the HistoCrypt symposium,^([7](b06.xhtml#c07-endnote-7))^, ^([8](b06.xhtml#c07-endnote-8))
    and in other conference proceedings.^([9](b06.xhtml#c07-endnote-9))^, ^([10](b06.xhtml#c07-endnote-10))
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 命名法和代码是一个活跃的研究领域。近年来，许多有趣的论文已经在《*密码学*》期刊、《HistoCrypt》研讨会论文集中发表，^([7](b06.xhtml#c07-endnote-7))^,
    ^([8](b06.xhtml#c07-endnote-8))^以及其他会议论文集中。^([9](b06.xhtml#c07-endnote-9))^, ^([10](b06.xhtml#c07-endnote-10))
- en: At the HistoCrypt 2018 conference, which took place in Uppsala, Sweden, with
    some fifty crypto-historians, Dutch crypto history expert Karl de Leeuw initiated
    a workshop about codes and nomenclators.^([11](b06.xhtml#c07-endnote-11)) One
    of the goals of this session was to establish a consistent terminology, as different
    terms are sometimes used for the same thing. For example, “nulls” are also named
    “non-valeurs” or “blenders.” The terminology developed in this workshop has been
    documented online.^([12](b06.xhtml#c07-endnote-12))
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在2018年HistoCrypt会议上，来自荷兰的密码历史专家Karl de Leeuw发起了一次关于代码和命名法的研讨会，会议在瑞典乌普萨拉举行，约有五十位密码历史学家参加。^([11](b06.xhtml#c07-endnote-11))^
    本次会议的一个目标是建立一致的术语，因为有时不同的术语用来表示相同的概念。例如，“nulls”也被称为“非值”或“混合器”。在此研讨会中发展出的术语已在线文档化。^([12](b06.xhtml#c07-endnote-12))
- en: The history of codes and nomenclators
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码和命名法的历史
- en: Nomenclators emerged centuries before codes were invented. The oldest known
    one was used in the fourteenth century at the Vatican.^([13](b06.xhtml#c07-endnote-13))
    They were probably introduced by cipher clerks, who extended simple substitution
    ciphers or simple homophonic ciphers by adding a number of symbols for common
    words to save encryption and decryption time. Later, encryption specialists created
    nomenclators systematically.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 命名法的出现早于代码的发明。已知最古老的命名法是十四世纪时在梵蒂冈使用的。^([13](b06.xhtml#c07-endnote-13))^ 它们可能是由密码员引入的，密码员通过为常见单词添加一些符号，扩展了简单的替代密码或简单的同音密码，以节省加密和解密的时间。后来，密码专家系统地创造了命名法。
- en: Nomenclators soon became very popular.^([14](b06.xhtml#c07-endnote-14)) If you
    encounter an encrypted document written before 1800, the chances are very high
    that it was encrypted with a nomenclator. Crypto history experts who do research
    in archives, such as Anne-Simone Rous, Karl de Leeuw, Beáta Megyesi, and Paolo
    Bonavoglia, encounter this type of encrypted message quite often. There may be
    tens of thousands of these documents in European archives, consisting mainly of
    messages sent by aristocrats, diplomats, and soldiers. Only a small fraction of
    these encrypted documents has ever been published for a larger audience. [Figure
    7-6](#figure7-6) shows an example of a message sent by James Madison, one of the
    Founders and eventually president of the United States, in the eighteenth century.^([15](b06.xhtml#c07-endnote-15))
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 命名法很快变得非常流行。^([14](b06.xhtml#c07-endnote-14)) 如果你遇到一份1800年前写的加密文件，很大概率它是使用命名法加密的。在档案馆做研究的密码学历史专家，如Anne-Simone
    Rous、Karl de Leeuw、Beáta Megyesi和Paolo Bonavoglia，常常遇到这种类型的加密消息。欧洲档案馆中可能有成千上万这样的文件，主要是贵族、外交官和士兵发送的消息。这些加密文件中只有一小部分曾公开面向大众。[图
    7-6](#figure7-6)展示了詹姆斯·麦迪逊（美国开国元勋之一，并最终成为总统）在十八世纪发送的一封加密消息。^([15](b06.xhtml#c07-endnote-15))
- en: '![](image_fi/502727c07/f07006.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/f07006.png)'
- en: 'Figure 7-6: This 1782 letter from James Madison shows a nomenclator message
    with a mixture of encrypted letters and words.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-6：这封1782年的詹姆斯·麦迪逊信件展示了一个命名法消息，信中混合了加密字母和单词。
- en: '[Figure 7-7](#figure7-7) provides another example. In 2021, while doing research
    on documents in the British Library, we came across this nomenclator-encrypted
    message from King Charles I of England in a letter he wrote on August 1, 1648,
    to his son.^([16](b06.xhtml#c07-endnote-16))^, ^([17](b06.xhtml#c07-endnote-17))'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 7-7](#figure7-7)提供了另一个例子。在2021年，当我们在英国图书馆进行文献研究时，我们发现了这封来自英格兰查理一世国王的采用命名法加密的消息。这封信是他于1648年8月1日写给儿子的。^([16](b06.xhtml#c07-endnote-16))^,
    ^([17](b06.xhtml#c07-endnote-17))'
- en: '![](image_fi/502727c07/f07007.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/f07007.png)'
- en: 'Figure 7-7: This 1648 letter by King Charles I used a nomenclator cipher, alternating
    between cleartext and ciphertext.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-7：这封1648年的查理一世国王信件使用了命名法密码，信中清密文交替出现。
- en: The first nomenclators, generated in the Middle Ages, tended to have only a
    few dozen codegroups that stood for words. The others stood for letters.^([18](b06.xhtml#c07-endnote-18))
    Over the centuries, larger and larger nomenclator tables were constructed. Many
    of these included *homophones* (different codegroups standing for the same plaintext
    item), *nulls* (codegroups without a meaning) and *nullifiers* (codegroups making
    other, nearby codegroups meaningless). In addition to letters and words, letter
    pairs, syllables, and common phrases entered nomenclators.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最早的命名法是在中世纪生成的，通常只有几十个代表单词的代码组。其他的则代表字母。^([18](b06.xhtml#c07-endnote-18)) 随着时间的推移，越来越大的命名法表格被构建出来。许多命名法表格包括了*同音词*（不同的代码组代表相同的明文项目）、*空值*（没有意义的代码组）和*无效符号*（使其他附近的代码组失去意义的代码组）。除了字母和单词，字母对、音节和常见短语也进入了命名法。
- en: The nomenclator table shown in [Figure 7-8](#figure7-8) is a simple one.^([19](b06.xhtml#c07-endnote-19))
    As can be seen, it contains two or three homophones for every letter (for instance,
    `2`, `12`, and `22` for `E`). The number `8` is used as a null (seen in the last
    line as a “chiffre non-valeur,” or “symbol without value”). In addition, it provides
    some thirty-five codegroups standing for words. This nomenclator is two-part,
    as the codegroups are not sorted.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 7-8](#figure7-8)中展示的命名法表格是一个简单的例子。^([19](b06.xhtml#c07-endnote-19)) 如图所示，每个字母有两个或三个同音词（例如，`2`、`12`
    和 `22` 代表字母 `E`）。数字 `8` 被用作空值（在最后一行中作为“无效符号”（chiffre non-valeur）出现）。此外，它还提供了大约三十五个代表单词的代码组。这个命名法是两部分的，因为代码组没有经过排序。
- en: '![](image_fi/502727c07/f07008.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/f07008.png)'
- en: 'Figure 7-8: A nineteenth-century reprint of a nomenclator used by the Vatican
    in the sixteenth century'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7-8：一张十九世纪重印的命名法表格，原为十六世纪梵蒂冈使用。
- en: 'The eighteenth-century nomenclator depicted in [Figure 7-9](#figure7-9) is
    one-part, as the entries are partially sorted.^([20](b06.xhtml#c07-endnote-20))
    For instance, the first half of the alphabet is assigned to the following numbers:
    `A` = `44`, `B` = `45`, `C` = `46`, `D` = `47` . . . The second half is `N` =
    `33`, `O` = `34`, `P` = `35`, `Q` = `36` . . . The words are sorted, too: `Aquaviva`
    = `100`, `Abbate` = `101`, `Althann` = `102`, `Antonio` = `103`, `Ascanio` = `104`
    . . .'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[图7-9](#figure7-9)中所示的18世纪命名符号是部分排序的。例如，字母表的前半部分被分配给以下数字：`A` = `44`，`B` = `45`，`C`
    = `46`，`D` = `47`……后半部分是`N` = `33`，`O` = `34`，`P` = `35`，`Q` = `36`……单词也进行了排序：`Aquaviva`
    = `100`，`Abbate` = `101`，`Althann` = `102`，`Antonio` = `103`，`Ascanio` = `104`……'
- en: '![](image_fi/502727c07/f07009.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/f07009.png)'
- en: 'Figure 7-9: Like many others of its kind, this eighteenth-century nomenclator
    is partially sorted. For instance, the first half of the alphabet is assigned
    to the numbers `A` = `44`, `B` = `45`, `C` = `46`, `D` = `47`, . . . , `M` = `55`.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-9：与许多类似的命名符号一样，这个18世纪的命名符号是部分排序的。例如，字母表的前半部分被分配给数字`A` = `44`，`B` = `45`，`C`
    = `46`，`D` = `47`……，`M` = `55`。
- en: With the advent of the telegraph in the nineteenth century, the number of messages
    sent grew considerably, which caused an increasing demand for both encryption
    technology and cost-effective means of sending long messages. Thus began the era
    of codes, with codebooks that grew to over 50,000 entries,^([21](b06.xhtml#c07-endnote-21))
    containing codegroups that typically consisted of five- or six-digit numbers.
    As telegraph companies charged by the number of words transmitted, many codebooks
    primarily served to shorten messages. For most, making the text harder to read
    was not even a goal. To conserve words and therefore cost, these codes replaced
    not only single expressions but also common phrases with codegroups. The telegraph
    companies reacted to this development by charging higher fees for nonreadable
    (i.e., coded) messages, which caused the codebook producers to include additional
    and longer phrases.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 随着19世纪电报的出现，发送的消息数量大幅增加，这导致了对加密技术和经济高效的长消息发送方式的需求日益增加。由此开始了密码本的时代，这些密码本的条目超过50,000个^([21](b06.xhtml#c07-endnote-21))，其中的代码组通常由五位或六位数字组成。由于电报公司按传输的单词数收费，许多密码本主要用于缩短消息。对于大多数人来说，使文本更难阅读甚至不是目标。为了节省单词和成本，这些代码不仅替换了单个表达式，还将常见短语替换为代码组。电报公司对此做出了反应，对不可读（即加密）消息收取更高的费用，这导致密码本的生产商加入了更多更长的短语。
- en: During World War II, codes remained in use, though usually not at the highest
    security level. The popularity of codes and nomenclators came to an end in the
    middle of the twentieth century, when encryption machines (which work on letters,
    applying ciphers rather than codes) became widely available. Since the advent
    of electronics and computer technology, codes and nomenclators have served little
    purpose.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二次世界大战期间，密码仍然在使用，尽管通常不在最高安全级别。随着加密机（它们基于字母工作，应用密码而非代码）的普及，密码本和命名符号的流行在20世纪中期结束。自从电子技术和计算机技术的出现以来，密码本和命名符号几乎失去了用途。
- en: Although codes and nomenclators were the most popular kind of encryption for
    about 500 years, with hundreds of thousands of messages encrypted, this branch
    of cryptography has not received as much attention from crypto-historians as ciphers.
    Some renowned codebreaking books, such as those by Helen Fouché Gaines^([22](b06.xhtml#c07-endnote-22))
    and Abraham Sinkov,^([23](b06.xhtml#c07-endnote-23)) cover the topic only very
    briefly or not at all. Nor have codes and nomenclators generally played a role
    in recreational codebreaking, because the solver would have to see the codebooks
    to have a chance of solving them. We are also unaware of any computer program
    designed primarily for analyzing and breaking codes and nomenclators. Most cryptogram
    books, puzzle columns, and cryptographic challenges tend to ignore codes and nomenclators
    entirely.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管密码本和命名符号在约500年间是最流行的加密方式，且有成千上万的消息被加密，但这一加密领域并没有像密码那样受到密码历史学家的关注。一些著名的破译书籍，如Helen
    Fouché Gaines^([22](b06.xhtml#c07-endnote-22))和Abraham Sinkov^([23](b06.xhtml#c07-endnote-23))的著作，仅简要地涉及这一主题，甚至完全没有提及。命名符号和密码本通常也未在休闲破译中发挥作用，因为破译者必须查看密码本才能有机会破解它们。我们也未见有任何专门设计用于分析和破解密码本和命名符号的计算机程序。大多数密码书、谜题专栏和密码挑战完全忽视了密码本和命名符号。
- en: Recently, though, these types of systems have become an active field of historical
    research. Historians, who have encountered piles of encrypted documents in archives,
    have begun working with codebreaking experts trying to solve these. (Of course,
    not all archived encrypted messages are code- or nomenclator-encrypted.) A few
    examples are shown in the following sections. We are confident that historians
    will continue to publish many more cryptograms of this kind, along with efforts
    to solve them.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，近年来，这类系统已经成为历史研究的一个活跃领域。历史学家们在档案中发现了大量加密文献，开始与破译专家合作，尝试破解这些文献。（当然，并非所有存档中的加密信息都是通过代码或命名符加密的。）以下章节展示了一些例子。我们有信心，历史学家们将继续发布更多此类密码文，并努力破解它们。
- en: Superencryption of codes and nomenclators
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码和命名符的超级加密
- en: One simple technique to make a code or nomenclator more secure is *superencryption*,
    or adding a second encryption step to a message that has already been encrypted
    with a code, nomenclator, or some other system. The second encryption step used
    for this purpose could be quite simple. For instance, if the codegroups consist
    of digits, you could add a number derived from the current date to the codegroups.
    On October 16, for example, the number 1016 might be added to every codegroup,
    so that `1234` becomes `2250`. While the recipient—who knows the superencryption
    method applied—has no trouble subtracting 1016 from every number they encounter
    in the ciphertext, a cryptanalyst’s work becomes much harder, as every codegroup
    has a different meaning on a different day of the year. Among other things, frequency
    analysis is almost useless if applied to messages sent on different days.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一种使代码或命名符更加安全的简单技术是*超级加密*，即在信息已经使用代码、命名符或其他系统加密后，再添加第二步加密。这第二步加密可以非常简单。例如，如果代码组由数字组成，可以将当前日期得出的数字添加到代码组中。例如，在10月16日，可能会将数字1016添加到每个代码组中，这样`1234`就变成了`2250`。虽然收件人——知道所应用的超级加密方法——可以轻松地从密文中的每个数字中减去1016，但密码分析师的工作就变得更加困难，因为每个代码组在一年中的不同日期有不同的含义。除此之外，如果对不同日期发送的消息应用频率分析，它几乎是无效的。
- en: How to detect a code or nomenclator
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何检测代码或命名符
- en: In many cases, it is quite easy to recognize a ciphertext encrypted using a
    code or nomenclator rather than a cipher system. Before 1800, nomenclator messages
    were typically handwritten texts consisting of numbers with several digits, often
    interrupted by plaintext passages. The message from 1783 depicted in [Figure 7-10](#figure7-10)
    (a) is quite typical, and we will come back to it in the “Unsolved cryptograms”
    section of this chapter. No other crypto system in frequent use at that time produced
    ciphertexts of this kind. The same is true of the example in [Figure 7-10](#figure7-10)
    (b), from 1702.^([24](b06.xhtml#c07-endnote-24)) While systems such as a book
    cipher (see [Chapter 14](c14.xhtml)) or a digraph substitution (see [Chapter 12](c12.xhtml))
    may produce similar-looking ciphertexts, they were uncommon at that time.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，识别通过代码或命名符加密的密文比通过密码系统加密的密文要容易得多。在1800年之前，命名符消息通常是手写文本，包含多个数字，常常夹杂着明文内容。1783年发送的消息，如[图
    7-10](#figure7-10)（a）所示，是非常典型的，我们将在本章的“未解密密码”部分再次提到它。当时没有其他常用的加密系统会产生这种类型的密文。[图
    7-10](#figure7-10)（b）中的1702年示例也是如此。^([24](b06.xhtml#c07-endnote-24)) 虽然诸如书籍密码（参见[第14章](c14.xhtml)）或二重替换（参见[第12章](c12.xhtml)）之类的系统可能会产生类似的密文，但当时它们并不常见。
- en: If we look at messages created in the nineteenth or twentieth century, things
    get a little more complex. Some codebooks from this era use random words from
    different languages as codegroups. The cryptogram from 1898 in [Figure 7-10](#figure7-10)
    (c) is an example. Words such as `CRAQUEREZ` or `IMPAZZAVA` are most likely codegroups
    and potentially superencrypted.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们看一下19世纪或20世纪创建的消息，情况就会变得稍微复杂一些。这一时期的一些密码本使用来自不同语言的随机单词作为代码组。[图 7-10](#figure7-10)（c）中的1898年密码就是一个例子。像`CRAQUEREZ`或`IMPAZZAVA`这样的单词很可能是代码组，并可能是超级加密的。
- en: The message in [Figure 7-10](#figure7-10) (d) was sent by telegram in 1911.^([25](b06.xhtml#c07-endnote-25))
    We can assume that it was created with a code or a nomenclator, as few other encryption
    methods in use in the early twentieth century produced number sequences of this
    kind.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 7-10](#figure7-10)（d）中的信息是1911年通过电报发送的。^([25](b06.xhtml#c07-endnote-25))
    我们可以假设这条信息是通过代码或命名符生成的，因为20世纪初使用的其他加密方法很少能产生这种数字序列。'
- en: In other cases, however, code and nomenclator messages from the last 200 years
    are hard to distinguish from ciphertexts created with other methods (e.g., an
    encryption machine such as the Enigma). This is especially the case if the codewords
    consist of five-letter groups; since the early twentieth century, it has been
    common practice to write ciphertexts of all kinds in letter groups of five. For
    instance, the following consular message from 1940 (provided to us by Enigma expert
    Frode Weierud) is a code cryptogram, though it may look similar to ciphertext
    produced by an encryption machine (see [Chapter 15](c15.xhtml)) or some other
    system:^([26](b06.xhtml#c07-endnote-26))
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在其他情况下，过去200年中的代码和名称法消息很难与通过其他方法（例如，像恩尼格玛这样的加密机器）生成的密文区分开来。如果代码词由五个字母组成，尤其如此；自20世纪初以来，所有类型的密文通常都是以五个字母一组的形式写成。例如，下面这条1940年的领事消息（由恩尼格玛专家Frode
    Weierud提供给我们）就是一条代码密码，尽管它看起来可能与由加密机器（见[第15章](c15.xhtml)）或其他系统产生的密文相似：^([26](b06.xhtml#c07-endnote-26))
- en: '`BBBTT YIXBA YIVYL OXUAB ARPBO UJTNU ASZAF UKURL YORAY MAXAD EWDKY IBEKY WITOS
    WIYVU MAMAN REKTI ASTCA EUKIM IVYDE UCHRE CEXLO HUNAL OXUAB ARXPU WIFOH IGAEB`'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`BBBTT YIXBA YIVYL OXUAB ARPBO UJTNU ASZAF UKURL YORAY MAXAD EWDKY IBEKY WITOS
    WIYVU MAMAN REKTI ASTCA EUKIM IVYDE UCHRE CEXLO HUNAL OXUAB ARXPU WIFOH IGAEB`'
- en: A typical property of a nomenclator or code cryptogram is that parts of the
    message are left in cleartext. Most of the code and nomenclator messages shown
    in this chapter are of this kind. Of course, it is also possible to leave words
    in cleartext when applying a cipher, but this is less common, especially if an
    encryption machine was utilized.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 名称法或代码密码的典型特点是消息的部分内容保持明文形式。本章展示的大多数代码和名称法消息都是这种类型。当然，在使用密码时，也可以将一些词汇保持为明文，但这较为少见，尤其是在使用加密机器的情况下。
- en: '![](image_fi/502727c07/F07010.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c07/F07010.png)'
- en: 'Figure 7-10: Codes and nomenclator messages are often, yet not always, easy
    to detect.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图7-10：代码和名称法消息通常，尽管不是总是，容易被检测出来。
- en: Statistical evidence can also be used to detect a code or nomenclator. For instance,
    repetitions among the letter or number groups of a message, such as `OXUAB` in
    the first and third lines of the consular message above, indicate either a relatively
    weak cipher (like simple substitution or a Vigenère cipher) or a code or nomenclator.
    This is because the ciphertext produced by a strong cipher system such as the
    Enigma appears visually similar to a random sequence, which makes it very unlikely
    that, say, a five-letter group would appear twice in a message of a few hundred
    characters—let alone several times.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 统计证据也可以用来检测代码或名称法。例如，消息中的字母或数字组之间的重复，例如上述领事消息中第一行和第三行中的`OXUAB`，可能表明要么是较弱的密码（如简单替换密码或维吉尼亚密码），要么是代码或名称法。这是因为由强密码系统（如恩尼格玛）生成的密文在视觉上类似于随机序列，因此非常不可能出现，例如，一个五个字母的组在几百个字符的消息中出现两次，更不用说出现多次了。
- en: How to break a code or nomenclator
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何破解代码或名称法
- en: 'A code or nomenclator that is constructed and used properly is very difficult,
    if not impossible, to break. Nevertheless, skilled codebreakers have solved a
    surprising number of cryptograms of this kind. There are several reasons for this:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一个构造和使用得当的代码或名称法非常难破解，甚至几乎不可能破解。然而，熟练的破译员已经解开了令人惊讶数量的此类密码谜题。其原因有多个：
- en: It is sometimes possible to locate the table or codebook.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时可以找到表格或代码本。
- en: The meanings of some of the codegroups might be known to the codebreaker and
    can be used as cribs.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些代码组的含义可能为破译员所知，可以作为破解线索。
- en: Many nomenclators are poorly constructed. For instance, letter/number combinations
    are often sorted in an easy-to-determine alphabetical or numerical order. It might
    also be possible to tell the difference between letter and word codegroups. For
    example, if two-digit numbers tended to occur one after another, they might be
    letter groups. If these letter groups can be broken with the usual cryptanalytic
    techniques, they might provide cribs to solve the other codegroups.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多名称法构造得很差。例如，字母/数字组合通常按照易于确定的字母或数字顺序排序。也可能能够区分字母代码组和词语代码组。例如，如果两个数字组往往一个接一个地出现，它们可能是字母组。如果这些字母组可以通过常规的密码分析技术破解，它们可能为破解其他代码组提供线索。
- en: Historically, many cipher clerks didn’t use codes and nomenclators properly;
    for instance, they always chose the same homophone when several others were available.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 历史上，许多密码员并没有正确使用代码和名称法；例如，他们总是选择同一个同音字，而忽视了其他可选项。
- en: These weaknesses play an important role in the methods for solving nomenclators
    that we will introduce now.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: Finding the nomenclator table or codebook
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One disadvantage of a code or nomenclator is that changing the key (i.e., the
    codebook or table used) is a costly process. Assembling a new nomenclator table
    is laborious, as is rewriting a whole codebook. For this reason, codes and nomenclators
    typically used the same table or codebook for long periods, even years, without
    being changed. This fact, of course, is helpful for codebreakers.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: When trying to break a code or nomenclator message, it is therefore a good idea
    to search for the codebook or nomenclator table used. This approach works especially
    well for messages created after about 1850, when telegraphy was booming. Nomenclator
    tables began falling out of favor, but the number of encrypted texts and the size
    of the codebooks rose considerably. Hundreds of old codebooks from this time are
    available online today. A good starting point is to look at the websites maintained
    by Japanese cipher expert Satoshi Tomokiyo^([27](b06.xhtml#c07-endnote-27)) and
    John McVey,^([28](b06.xhtml#c07-endnote-28)) each of which lists hundreds of telegraphic
    codebooks, many of which are available for download. It is also worth remembering
    that many of these codebooks were not used primarily for secrecy but for shortening
    messages. Codebooks of this kind were sold in large quantities and not kept secret.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: As an example, look at the nineteenth-century telegram depicted in [Figure 7-11](#figure7-11),
    which was provided to us by blog reader Karsten Hansky.^([29](b06.xhtml#c07-endnote-29))
    The sender of this note, a US astronomer named John Ritchie, transmitted it from
    Boston, Massachusetts, to the Chamberlain Observatory in Denver, Colorado, on
    September 7, 1896\. Some of the words in the telegram, such as `COMET` and `USUAL`,
    are obviously in cleartext. Readers knowledgeable about astronomy might recognize
    that `BROOKS` and `GIACOBINI` are names of comets and that `LICK` and `HUSSEY`
    refer to astronomical observatories in the USA. Other words, such as `BOUCHETROU`,
    `CALIMA`, and `FACILENESS`, don’t make sense. They could be codegroups. If so,
    we are dealing with a code based on made-up words.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: Solving this short message with conventional codebreaking techniques would be
    extremely difficult, if not impossible. Finding the codebook is the only realistic
    option. Karsten tried his luck and was successful. On the Internet Archive website
    ([https://archive.org](https://archive.org)), he found the matching codebook,
    *The Science Observer Code*, from 1885.^([30](b06.xhtml#c07-endnote-30)) Ritchie,
    the sender of the telegram, is one of the authors of this codebook, which made
    Karsten’s search a little easier!
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07011.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-11: This 1896 telegram, sent by astronomer John Ritchie, contains
    a number of codewords. After the codebook used was identified, the message could
    be read.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 7-12](#figure7-12) shows a page from this codebook—and it’s quite a
    special one. It was meant to transmit the plaintext numbers `0` to `39,999`. Astronomers
    could use these codegroups to encode positions, orbits, and other astronomical
    data. This code was probably not designed to keep messages secret but to avoid
    errors in the transmission of numbers. `BOUCHETROU`, for example, stands for `6835`.
    The other codegroups appearing in the telegram have the following meanings: `FACILENESS`
    = `20756`, `ARMERIEZ` = `3435`, `AFORRECHO` = `1085`, `CALIMA` = `8085`, `BOQUINEGRO`
    = `6691`, `HUMILIMO` = `25844`, `CHAYROOT` = `9752`, `GLADNESS` = `23266`, and
    `DISACCEPT` = `16388`.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07012.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-12: A page from *The* *Science Observer Code* from 1885\. Astronomer
    John Ritchie used this code for his telegram.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'Even once we know the meanings of these codegroups, the content of the telegram
    is difficult to understand. This is because the sender encoded dates and astronomical
    information in a way that made the messages shorter. The methods he used are explained
    in the codebook’s introduction. Applying these methods, Karsten reconstructed
    the following plaintext:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '`Boston Mass, September 7th`'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '`Comet Brooks was observed by Lick (observatory) on September 6.8355 at the
    following`'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '`position:`'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '`RA: 207° 56'' 01" '' 13h 51m 44.1s`'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '`Dec: 55° 24'' 52"`'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '`Giacobini was observed by Hussey on September 6.6916 at the following position:`'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '`RA: 258° 44'' '' 17h 14m 58.3s`'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '`Dec: -7° 52'' 26"`'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '`John Ritchie Jr`'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of the telegram was to inform the receiver (an astronomical observatory
    in Denver, Colorado) of the coordinates of the comets Brooks and Giacobini measured
    in Boston on September 6, 1896.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Exploiting weaknesses of codes and nomenclators
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If we can’t find the substitution table used, we’ll need to employ codebreaking
    methods to decipher a code or nomenclator message. As mentioned, this is an extremely
    difficult task if the code or nomenclator is well constructed and used properly.
    Computer algorithms that perform such cryptanalysis constitute an active field
    of research. Hill climbing (see [Chapter 16](c16.xhtml)), the seemingly omnipotent
    tool in historical codebreaking, is not very helpful here, as there are too many
    potential words and phrases. So far, there are no available computer programs
    for solving codes and nomenclators. This may change, but for the time being, solving
    a code or nomenclator message is mainly a matter of human intelligence, not computer
    intelligence.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: Luckily for us, many codes and nomenclators are of poor quality. For instance,
    a one-part code or nomenclator is a lot easier to break than a two-part code or
    nomenclator. Even in two-part specimens, we can expect regularities in the way
    the codegroups are ordered, which makes breaking a message a lot easier.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s break a nomenclator message written by a spy in Great Britain in the
    seventeenth century. Both the cryptogram and the solution we present are described
    by mathematician and crypto-historian Peter P. Fagone in *Cryptologia*.^([31](b06.xhtml#c07-endnote-31))
    Here is an excerpt from the message:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '`. . . 44, 38, 62, 39, I send you my 34, 74, 58, 44, 38, 62, with 116, 66,
    57, give him selfe 50, 38, 30, 64, 67, 42, 50, 30, 54, 38, have, 51, 56, 64, 66,
    46, 67, 26 &, I, 42, 30, 68, 38, 125, the 36, 57, 68, 32, 50, 38, of it to lett
    him see that I deale fairely what comes, 40, 62, 56, 52, 26, 116, must come, 66,
    56, 27, 125, tell 103, that hee must 70, 62, 46, 66, 39, 54, 56, 38, 52, 57, 63,
    38 . . .`'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: This ciphertext consists of (mostly two-digit) numbers separated by commas.
    Some passages are written in cleartext. In all, the message consists of about
    a thousand numbers and an alphabet of ninety different numbers. Based on the criteria
    discussed earlier in this chapter, we can assume that this cryptogram was created
    with a nomenclator.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: 'As a first step, we count the codegroups to perform frequency analysis. This
    reveals that the numbers `30` through `77` are much more frequent than the others,
    which raises a suspicion: those forty-eight numbers might stand for letters, while
    the remaining ones might encode complete words. Since the alphabet used in the
    seventeenth century contained twenty-four letters (*U* and *V*, as well as *I*
    and *J*, were not distinguished), we can appropriately hypothesize that there
    are two numbers (homophones) for each letter of the alphabet. We first try the
    following scheme:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '`A``: 30/31`'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '`B``: 32/33`'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '`C``: 34/35`'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '`D``: 36/37`'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '`E``: 38/39`'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '`. . .`'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: As it turns out, we get a meaningful text. The developer of the nomenclator
    could not have made it easier for us!
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the excerpt shown above with the letter codegroups decrypted:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '`. . . here i send you my cypher with 116, to give him selfe least g lane have
    lost it, 26, &, i gaue 125, the double of it to lett him see that i deal fairely
    what comes from 26, 116, must come to 27, 125, tell 103, that he must writ c noe
    more . . .`'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: Can we guess the remaining codegroups, too? They probably stand for words, phrases,
    or syllables. It turns out that the numbers between `11` and `30` can simply be
    omitted. Most or all of them are probably nulls. The numbers `1` through `10`
    probably stand for numbers. As the nomenclator is poorly designed, we can assume
    `1` = `1`, `2` = `2`, `3` = `3`, and so on. The three-digit numbers most likely
    represent names and places. We can’t determine their meanings without having detailed
    background information.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: The content of the message does, however, confirm that a spy had indeed been
    at work, talking about bribery and other covert actions. Perhaps the sender of
    the message was a British spy in Ireland at the time of the Irish Confederate
    Wars (1641–1653). Their identity will probably remain a mystery forever.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s look at a papal cipher from the sixteenth century. [Figure 7-13](#figure7-13)
    shows a nomenclator message sent by the Vatican to a papal diplomat in Poland
    in 1573\. This message was originally broken by crypto-historian Albert Leighton
    in 1969.^([32](b06.xhtml#c07-endnote-32))
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07013.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-13: This sixteenth-century nomenclator message was broken because
    the nomenclator used was a very simple one.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: 'The ciphertext consists of an unbroken series of numbers. Closer inspection
    reveals a tendency for the numbers to be linked in pairs. There are exceptions,
    such as a few three-figure groups and dots over the first digits of certain pairs.
    Here’s a transcript of the first two lines. The dotted digits are transcribed
    as underlined digits:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '`608 53 17 11 75 17 55 25 77 75 29 97 41 77 13 79 11 77 15 59 19 79 15 79 17
    39 19 79 15 59 13 79 99 58 99 11`'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '`17 59 13` `6``7 79 15 77 17 99 15 15 83` `5``4 97 41 57 15 77 75 15 59 26
    99 15 37` `1``5 38 34 17 37 57 19 79`'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: 'Considering the era when this was written, and knowing that the Vatican used
    an abundance of nomenclators during the Renaissance, we can assume that the text
    is nomenclator-encrypted. If we are dealing with a poorly constructed nomenclator,
    it seems possible that the three-digit numbers and the dotted numbers stand for
    words, while all other digit pairs represent letters. Here is a frequency analysis
    of the supposed letters:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: "![A table with two rows. The top row reads: 25\t29\t17\t77\t13\t79\t59\t99\t\
    37\t75\t11\t55\t57\t97\t41\t27\t39\t53\t35\t19\t83\t23\t31\t15\t33\t86\t91\t10\t\
    51\t96\\. The bottom row reads: 78\t45\t43\t42\t38\t33\t32\t29\t25\t24\t21\t15\t\
    12\t12\t11\t10\t9\t9\t8\t7\t6\t5\t4\t4\t3\t1\t1\t1\t1\t1.](image_fi/502727c07/tablegraphic.png)"
  id: totrans-137
  prefs: []
  type: TYPE_IMG
- en: As can be seen, thirty two-digit numbers are used. If they really stand for
    the letters of the alphabet, there are enough numbers to encode the letters `A`
    through `Z`, as well as a few nulls. Four of the five most frequent numbers start
    with `1` or `2` (`25`, `29`, `17`, and `13`) and these do not form longer sequences
    in the ciphertext. They might stand for vowels. In the Italian language, the vowels
    *E*, *A*, *I*, and *O* all have nearly the same frequency (between 10% and 12%),
    while *U* (usually identical to the *V* in old texts) makes up only about 3% of
    text (see Appendix B). It is therefore likely that there is only one codegroup
    representing `U` and that this is the rarest vowel codegroup, namely `11`.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common non-vowel is `77`. This number must stand for `N`, the most
    common consonant in Italian. The next three consonants are `59`, `79`, and `99`.
    They might stand for the letters `R`, `S`, and `T`. Trial and error confirms that
    `59` = `R`, `79` = `S`, and `99` = `T` are valid. Knowing these consonants and
    the most frequent Italian digraphs (also described in Appendix B), it is possible
    to derive the meaning of vowels `25`, `29`, `17`, and `13`: `A`= `25`, `E` = `13`,
    `I` = `17`, and `O` = `29`. What we have found out so far is sufficient to decipher
    most of the message:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '`(608) giudicando che con nessuna cosa si possa restituire piu sanita a questo
    regno che con mandar costoro a la guerra ricuperation de'' beni regii il mosco
    per smaltire in questo modo i mali umori turbano la religion cattolica et inanz(i)
    la sua partita ha dato molto indrizzo a questo consiglio et ne ha lassato a me
    particolar ordine et benche li heretici temano molto che il re abbia da dare in
    questo sua santita et lo dannano nondimeno cammina molto bene et con sucretezza
    secondo che bisogna et si va ogni giorno guadagnando qualcuno con questi giorni
    il castellano di sendomiria que e'' persona di lingua et d''autorita'' fra li
    heretici ha sottoscritto a questo parere in casa de'' ? dopo averci fatto molto
    resistenza`'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '`(508). ha mostrato molto travaglio que il re abbia rimesso le cose sue a la
    dieta et io ho veduto una lettera del basino secretario del re christianissimo
    che venendo di (308) ha parlato in (108) con essa (508) che scrive che per molto
    che abbia fatto non li e parso di lassar punto aquetato l''animo suo`'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: The numbers 608, 508, 308, and 108 cannot be solved in the same way since they
    probably refer to specific names or places.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a translation of the first few sentences:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '`(608) judging that by no other means it is possible to restore sanity to this
    kingdom than by sending a deputation to the war [for the] recovery of the royal
    goods, IL MOSCO, to purge in this way the evil honors that disturb the Catholic
    faith and before his departure, did much to implement this decision and left to
    me particular responsibility for its implementation; and although the heretics
    are afraid that the king may thus have to forfeit his sanctity and blame him for
    it, none the less it is going very well and with the necessary secrecy and each
    day we win over someone.`'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: Many other code and nomenclator cryptograms have been solved in a similar way.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Solving codes and nomenclators with cribs
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sometimes, it helps to know the meaning of codegroups from related codes or
    nomenclators that were used in the same environment as the one you are trying
    to decode. You may even have a ciphertext-plaintext pair with which to reconstruct
    the related code. Reports on successful codebreaking efforts of this kind have
    been published by Paolo Bonavoglia,^([33](b06.xhtml#c07-endnote-33)) George Lasry,
    and Luigi Sacco,^([34](b06.xhtml#c07-endnote-34)) among others. This technique
    can also be helpful with many cipher types.^([35](b06.xhtml#c07-endnote-35)) Researching
    the context in which a cipher was created can be a very powerful tool.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: Success stories
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A telegram sent to Tel Aviv
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The encrypted telegram in [Figure 7-14](#figure7-14), provided to us by Karsten
    Hansky,^([36](b06.xhtml#c07-endnote-36)) was sent from New York, via London, to
    Tel Aviv, on June 5, 1948\. The recipient listed on the telegram form is `GOVTT
    MEMISRAEL TEL AVIV`, the government of Israel. As the state of Israel formed on
    May 14, 1948, in Tel Aviv, this telegram was sent at an interesting time and to
    an interesting place. The ciphertext contains a few cleartext words, such as `VERTICALLY`,
    `BANK`, `ANGLO`, and `PALESTINE`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07014.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-14: An encrypted telegram sent from New York to Tel Aviv in 1948\.
    As the codebook used is available online, it is not very difficult to decrypt
    this message.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: 'Provided that the government of Israel used a well-made code, the codebreakers’
    only chance of solving this cryptogram was finding the codebook used, which is,
    in fact, what happened. Codebook expert John McVey discovered that the authors
    had applied *Peterson International Code*, 3rd edition (1929).^([37](b06.xhtml#c07-endnote-37))
    Richard van de Wouw came to the same conclusion. Hansky derived the following
    plaintext (which omits several parts, as they are redundant):'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '`Cable sent from Haifa, Palestine 28th May Currency of board regrets unable
    to agree with proposal destruction of notes—They are prepared to accept the following
    arrangements—Notes to be cut in half vertically, one half consigned uninsured
    to us and if notes from unissued stocks are preserved in serial orders with labels
    on parcel giving indication of serial numbers and values, each bundle is to be
    retained by you and dispatched only when advice received from safe arrival of
    first consignment—Board will pay out on arrival of first half of notes on our
    bank certificates of the value of contents 1127P bundles to be checked later and
    bank is responsible for shortage or forgery—Cable whether you agree this procedure
    and if so exact amount of involved—This cable is being sent in duplicate of one
    in accordance with FRIEDBERGS cable to ANGLO PALESTINE BANK.`'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Encrypted messages by Mary, Queen of Scots
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sixteenth-century solution
  id: totrans-156
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In 1569, Queen Elizabeth I of England had her cousin Mary, Queen of Scots, imprisoned.
    Mary was known to communicate frequently in cipher with her supporters.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: Among her allies was a group of English Catholics who attempted to murder Elizabeth
    I in order to put Mary on the English throne. Mary and the conspirators communicated
    via encrypted letters hidden in a beer barrel cork. Unfortunately for her, the
    servant who transported the messages was an agent who worked for the English spymaster
    Francis Walsingham, who in turn provided copies of the encrypted letters to his
    codebreaker, Thomas Phelippes.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: Phelippes noticed that Mary and the conspirators wrote their encrypted letters
    in an alphabet consisting of about forty symbols. His guess was that he was dealing
    with a nomenclator comprising about twenty-five letter symbols, with around fifteen
    standing for words or nulls. Nomenclators consisting of only forty codegroups
    were quite common in the sixteenth century. Later, they grew much larger.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: A forty-codegroup nomenclator can be solved with frequency analysis. We don’t
    know exactly how Phelippes worked, but he probably assumed that the most frequent
    symbols stood for the most frequent letters of the English language, though he
    may have been confused by a few nulls. After some analysis, Phelippes was able
    to reconstruct the whole nomenclator, as shown in [Figure 7-15](#figure7-15).^([38](b06.xhtml#c07-endnote-38))
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07015.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-15: A sixteenth-century nomenclator used by Mary, Queen of Scots'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: With the encryption system broken, Walsingham could easily monitor the messages
    exchanged between Mary and the conspirators, which became more and more intense.
    Finally, Walsingham and Phelippes faked a message to Mary, asking her to provide
    a list of the conspirators—a plan that succeeded. Based on this evidence, Mary’s
    conspirators were arrested, condemned to death, and executed in 1586\. After a
    separate trial, Mary, Queen of Scots, was herself beheaded on February 8, 1587.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Twenty-first-century solution of a different Mary Stuart nomenclator
  id: totrans-164
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Another remarkable success story has to do with three people who are mentioned
    several times in our book: George Lasry, Norbert Biermann, and Satoshi Tomokiyo
    (see [Figure 7-16](#figure7-16)). One of their hobbies for more than a decade
    has been checking archives around the world for any unknown encrypted messages
    so that they can document and crack them. Many large archives and private collections
    still have encrypted papers that can’t be read and sometimes cannot even be attributed.
    Most of these papers are centuries old. The intrepid trio (and other colleagues
    of ours) have found that many encrypted documents like these can be found by searching
    the online catalogs for digitized documents that might be tagged with words such
    as *cipher*. Tomokiyo goes a step further, sometimes searching through documents
    one by one, to see if any parts of them are encrypted!'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07016.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-16: From left: George Lasry (Israel), Norbert Biermann (Germany),
    and Satoshi Tomokiyo (Japan) made a remarkable discovery while searching through
    the archives of the National Library of France.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: In 2021, while combing the online collections of the Bibliothèque nationale
    de France (BnF) for enciphered documents, the team stumbled upon a large set of
    unlabeled papers, all in cipher, and all of which used the same set of graphical
    symbols (see [Figure 7-17](#figure7-17)). According to the BnF catalog, the documents
    were supposed to be from the first half of the sixteenth century and related to
    Italian matters. In April 2021, the team first tried to crack this cipher with
    the assumption that the language was Italian, but they had no luck. In February
    2022 they tried again, this time assuming the language might be French, and employing
    a hill-climbing program with a simulated annealing algorithm (see Chapter 16).
    This time they could obtain fragments of plausible text, such as “catholi” and
    “persecu.”^([39](b06.xhtml#c07-endnote-39))
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07017.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-17: An encrypted letter from the sixteenth century, lost in the archives
    until it was discovered in 2021'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: They then followed up with manual codebreaking skills such as word guessing
    (see Chapter 4) to recover, bit by bit, the cipher key—in this case a nomenclator
    table combined with a homophonic cipher. This system was much more complex than
    the earlier one, as shown in [Figure 7-15](#figure7-15). In all, the team was
    able to identify 219 distinct symbols (see [Figure 7-18](#figure7-18)), some of
    which stood for syllables or words. As they became able to read the documents,
    the team realized that the texts had been written by a prisoner, with mentions
    of captivity, phrases such as “my son,” and the name Walsingham. That name was
    key, since in this time period, Sir Francis Walsingham was spymaster for Queen
    Elizabeth I, which aroused the suspicion that the letters might be from Mary,
    Queen of Scots, the imprisoned cousin of Queen Elizabeth. This hypothesis was
    confirmed after the team found copies of some corresponding plaintexts in British
    archives. The team then set out to transcribe and decipher an astonishing total
    of 57 encrypted letters by Mary.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07018.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-18: Part of the Mary–Castelnau nomenclator table'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: The newly deciphered letters turned out to be part of a secret correspondence
    long considered by historians to have been lost. Most were written between 1578
    and 1584 from Mary to Michel de Castelnau, the French ambassador in England. The
    letters constitute a voluminous body of new primary material on Mary Stuart—about
    50,000 words in total. They highlight Anglo-French and Scottish politics, Mary’s
    efforts to get herself released and reinstated as queen of Scotland, and a multitude
    of other topics. The find has opened a treasure trove for modern-day historians.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: This sensational discovery, considered by expert historian John Guy from Cambridge
    to be “the most important new find on Mary Stuart, Queen of Scots, for 100 years,”^([40](b06.xhtml#c07-endnote-40))
    was announced on February 8, 2023 (coincidentally, the anniversary of Mary’s beheading
    in 1587). It made international headlines and caused us, at the last minute, to
    add this new section to our book!^([41](b06.xhtml#c07-endnote-41))
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: A good takeaway from this is that the work of crypto historians is not yet done.
    There are many such documents waiting to be found. At a HistoCrypt conference,
    it was estimated that there are hundreds, perhaps thousands of such nomenclator
    messages still to be located and deciphered, which can give us yet another window
    into the past.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: Collinson’s search expedition
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Between 1850 and 1855, almost fifty encrypted advertisements were published
    at regular intervals in the London-based newspaper *The Times*, apparently in
    the same code. Here is an example, from October 1, 1851:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: '`No. 16th.-S.lkqo. C. hgo & Tatty. F. kmn at npk1 F. qgli lngk S mhn F. olhi
    E qkpn. S. niql S mnhq, F. qgli. Austin S pgqn C. kioq 6th F. iqhl. born. 13th
    F. kipo a F khg. hmip. to E. mlhg by D oi. S. pkqg C omgk B. hkq. qkng F. ioph.
    to hnio. S. ompi C. mkop F. oiph to Mr. C. nhmg & F. mpkh. nmkq E. lhpq. J. de
    W.`'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: A century later, in 1980, *The Times* published a competition to see whether
    anyone could solve a similar message from April 2, 1852\. No one could, though
    it was pointed out that one message seemed to have something that looked like
    a latitude and longitude.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: 'Several years passed before two experienced codebreakers independently succeeded
    in solving these messages. One of them, John Rabson, reported on his approach
    in 1992 in the scientific journal *Cryptologia*.^([42](b06.xhtml#c07-endnote-42))
    Rabson suspected the use of a code with additional letter-based encryption (superencryption).
    After some searching, he found that the *Universal Code of Signals* was a good
    candidate. Encryption had been used to convert the numbers in this code into sequences
    of letters. He decoded the message as follows:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '`No. 16th. your wife and family were all well when I left Bernard & Tatty both
    at home Captain Penny arrived at from Baffin''s Bay early in September without
    success Captain Austin hourly expected Margarets 6th son born 13th September a
    box went to Sandwich Isles by Antelope early in January Emily Sophia Thomason
    go to Wales early in October James goes to Mr. Hawk & lives in Gateshead. J. de
    W.`'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: Now the context of the advertisement series was clear. The encrypted messages
    were likely published by a family member of British navigator Richard Collinson
    (1811–1883), who led an expedition to the North American Arctic from 1850 to 1855
    to attempt a rescue of the lost polar explorer Lord John Franklin and his crew,
    who had not returned from their attempt to discover the Northwest Passage.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: It is unlikely that these encrypted ads were meant for military or commercial
    secrets. More likely, they were simply encrypted for the matter of privacy. The
    ads were meant to tell Collinson about his family and friends during his five-year
    expedition. It seems that the creator of the messages hoped that *The Times*,
    which was the most important newspaper in the world at that time, could be obtained
    even in very remote places.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: 'Even with a codebook, coming up with an exact translation can be tricky. For
    instance, here is another of the messages, from January 1, 1853:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: '`S lmpi F. npi npil pil pink. C. klmh F. oimg ogq, khq lqkh ikpg ogql, lqoi
    qoin oing lqkh. hmig C, omgk F, npi npil qmk. C hgo, F, ploi omnl. qoip, C qkin.
    F oing ihlm, ik, lmhn, C nhgq F, iomn hkom C. okiq F, mqho, olhi. C, iko. F olhi
    B, nlo, F. pgnq. kipo 17th S lmpi. F mpoh C. ngil B opkg F npi npil qmk ikpg npkl.
    okgh. P. F, pil. M. mhik lph hqpm oilg qolg. nmkq ikpg npkl C. nkq S lmpi C kgql
    F, oing ihlm mlgi mkiq qnhi koil lgoq lgqo. olhi B. qnp.`'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: 'The numbers of the key have been turned into letters:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '`0987654321`'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: '`ghiklmnopq`'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: As Elonka worked on this message, it became clear that decrypting it would require
    a great deal of guesswork, as well as an allowance for human error. For example,
    `npil`, translated directly with the cipher key, comes out to `4286`, which in
    the codebook means `hook`. This didn’t make sense in context, producing sentences
    like `At hook and elsewhere` and `All is well at hook`. The `4286` number appeared
    frequently, but then, sometimes in the same context, she would instead find `npkl`,
    or `4276`, which means `home`. When she swapped out `hook` for `home` to get phrases
    like `All is well at home`, the message started to make a lot more sense!
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: Other places in the message were similarly vague, making it difficult to tell
    whether the decryption was wrong or if there was a typo. That turned things into
    a real puzzle. Another difficulty was that the publisher of the *Universal Code
    of Signals* reprinted it from time to time, and it was unclear exactly which version
    the author had used for these messages. Of course, it couldn’t have been later
    than 1855\. But Elonka was only able to find the 1864 version or later ones, which
    couldn’t have been used for a message sent in 1853.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: 'Her best guess for plaintext is this:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '`All are well at home and elsewhere. Margaret had another boy on the evening
    of Christmas Day, going on well. Emily is home again. Bernard is down for Christmas.
    Charlotte going too adding to popularity. Harriet is staying with Fanny. Letters
    arrived from Benjamin on the Royalist, all are well, liking Frederickshaven. Stokesley
    at home again, home is full. P and M never better, 12 grandchildren in the home.
    Sarah & Jane, all are well. Laurence Delaney is going to marry Miss Colridge.
    No news from Resolute.`'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: In any case, after Collinson’s expedition, his brother compiled his logs into
    a book called the *Journal of HMS Enterprise* (1889), after the name of the ship.
    According to this book, Collinson did receive at least four of the messages, when
    he reached “Bangu Wangie” (probably the town of Banyuwangi), in Indonesia (see
    [Figure 7-19](#figure7-19)).^([43](b06.xhtml#c07-endnote-43))
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/F07019.png)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-19: On Collinson’s trip around the world, he was able to receive some
    of these encrypted messages when his ship put into port at Banyuwangi, Indonesia.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: We might say that this was the first secure worldwide communications system!
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: The Japanese JN-25 code
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the World War II Pacific theater, the United States’ armed forces encountered
    numerous Japanese encryption systems. US and British codebreakers were quite successful
    in deciphering these. Their two most famous accomplishments were breaking JN-25,
    the primary Japanese naval code, and PURPLE, a machine-based encryption system
    used for Japanese diplomatic messages.^([44](b06.xhtml#c07-endnote-44)) The US
    Army SIS (Signals Intelligence Service), led by the legendary William Friedman,
    and his team, led by Frank Rowlett, even broke PURPLE without ever having seen
    a copy of the machine (see [Chapter 15](c15.xhtml)).
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: The other history-changing success was the breaking of JN-25\. Besides encryption
    machines (such as PURPLE), the Japanese had been using a number of manual codes
    for encrypting their communications. The most important of these was JN-25, so
    named by American cryptologists because it was the twenty-fifth Japanese Navy
    encryption system they had identified.^([45](b06.xhtml#c07-endnote-45)) JN-25
    had been introduced in early 1939, just a few months before the German invasion
    of Poland and the beginning of the war. The encryption system was immediately
    brought under cryptanalytic scrutiny by groups in Britain and the United States.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: Bletchley Park’s John Tiltman made the first break into JN-25 by September 1939\.
    Independently, in the United States, the comparable group in the US Navy’s OP-20-G,
    led by “First Lady of Naval Cryptology” Agnes Meyer Driscoll, made a similar discovery
    in 1940.^([46](b06.xhtml#c07-endnote-46)) Both had discovered that JN-25 was a
    superencrypted code that produced five-digit groups. The massively complicated
    system comprised up to 30,000 codegroups that were listed in a codebook and had
    hundreds of pages of other numbers, or additives, used for superencryption.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: 'The codebreakers had learned that JN-25 contained an error-detection scheme
    they could exploit: all codegroups were numbers divisible by three.^([47](b06.xhtml#c07-endnote-47))
    But, even knowing this, they could decipher only about 10% to 20% of the Japanese
    messages. Progress was hampered somewhat simply because there was not much traffic
    for the Allied cryptanalysts to intercept and analyze.^([48](b06.xhtml#c07-endnote-48))'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: After the Japanese attack on Pearl Harbor on December 7, 1941, the United States
    entered the war and resources devoted to cryptology increased dramatically. The
    Americans first used punch card tabulating machines manufactured by IBM, then
    designed completely new codebreaking machines to assist with further cryptanalytic
    attacks. The Japanese changed codebooks and additives from time to time, so analysts
    had to break several systems in parallel, but within a few months after Pearl
    Harbor, they could read approximately 90% of JN-25 messages.^([49](b06.xhtml#c07-endnote-49))
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: This proved especially important in mid-1942, when the encrypted Japanese radio
    messages mentioned plans to attack a target codenamed `AF`. US Naval intelligence
    specialists knew that codenames starting with the letter `A` were generally used
    for islands near Hawaii (for example, `Oahu` was `AH`), but they were not sure
    of the location of `AF`. They guessed that it represented the tiny island of Midway.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: To confirm this suspicion, cryptanalysts Jasper Holmes and Joseph Rochefort
    suggested that the US military base on Midway broadcast a “plain language” radio
    message stating that Midway’s water purification system had broken down and that
    fresh water was urgently needed. The plan was approved by Commander Edwin T. Layton
    and Admiral Chester W. Nimitz and put into effect. The Japanese took the bait,
    and within twenty-four hours, the American codebreakers picked up a Japanese intelligence
    report encrypted with JN-25 saying, “AF is short on water.” The suspicion that
    AF stood for Midway was confirmed.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: This information allowed the Americans to correctly position their fleets to
    engage the Japanese Navy near Midway,^([50](b06.xhtml#c07-endnote-50)) a battle
    that became a major turning point in the war. Crypto-historians often cite this
    as one of the cases where the deciphering of a single message could change an
    entire war.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: Challenges
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Mount Everest telegram
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The telegram depicted in [Figure 7-20](#figure7-20), sent to London in 1924
    by a British expedition at the Mount Everest base camp, contains the following
    partially encrypted message:^([51](b06.xhtml#c07-endnote-51)) `MALLORY IRVINE
    NOVE REMAINDER ALCEDO.` George Mallory (best known for having replied to the question,
    “Why did you want to climb Mount Everest?” with “Because it’s there!”) and Andrew
    Irvine were two of the expedition participants. The words `NOVE` and `ALCEDO`
    are codegroups. Can you find the codebook used? If so, you can certainly decipher
    this telegram.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07020.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-20: A telegram sent by a British expedition from Mount Everest in
    1924'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: Unsolved cryptograms
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The silk dress cryptogram
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07021.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-21: This message encrypted in a code was contained in a hidden pocket
    of a late nineteenth-century dress.'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: 'In 2013, antique-costume collector Sara Rivers-Cofield acquired what she described
    in her blog as a “mid-1880s two-piece bustle dress of bronze silk with striped
    rust velvet accents and lace cuffs.”^([52](b06.xhtml#c07-endnote-52)) When she
    turned the skirt inside out, she discovered a hidden pocket that contained two
    pieces of paper, both of which contained encrypted writing ([Figure 7-21](#figure7-21)).
    Here’s a transcript of sheet 1:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: '`Smith nostrum linnets gets none event`'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '`101pm Antonio rubric lissdt full ink`'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: '`Make Snapls barometer nerite`'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: '`Spring wilderness lining one reading novice bale`'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: '`Vicksbg rough rack lining my nanny bucket`'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: '`Saints west lunar malay new markets bale`'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: '`Seawoth merry lemon sunk each`'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '`Cairo rural lining new johnson none ice`'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '`Missouri windy lunar new Johnson none bucket`'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: '`Celliette memorise legacy Dunk dew`'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: '`Concordia mammon layman null events`'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '`Concordia meraccons humus nail menu barrack`'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: 'And here is sheet 2:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: '`1113 PM Bismark Omit leafage buck bank`'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: '`Paul Ramify loamy event false new event`'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: '`Helena Onus lofo usual each`'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: '`Greenbay nobby peped`'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: '`1124 P Assin Onays league new forbade event`'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: '`Cusin Down`'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: '`Harry Noun Lertal laubul palm novice event`'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: '`Mimedos Noun Jammyleafage beak dobbin ice`'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: '`Calgary Duba Unguard confute duck tagan egypt`'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: '`Knit wrongful hugs duck fagan each`'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '`Calgary Noun Signor loamy new ginnet event`'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: '`Landing Noun Rugins legacy duch baby ice`'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: It is not difficult to see that this message was created with a code. Rather
    than seemingly random text or numbers, the codegroups are meaningful words, like
    `Cairo`, `Greenbay`, `Calgary`, `duck`, and `loamy`. Such codes were not uncommon
    in the second half of the nineteenth century. The text was probably meant to be
    sent as a telegram, as below each line, the number of words contained in that
    line is noted. (These numbers are omitted in the transcript.) Note that just as
    our book was going to press, we heard that this might have been solved! See [https://codebreaking-guide.com/errata/](https://codebreaking-guide.com/errata/).
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: The train station robbery cryptogram
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'On June 27, 1916, a man robbed the ticket counter at the Western Ohio Railway
    in Lima, Ohio. The robber held up a ticket agent at gunpoint and forced him to
    hand over the contents of a safe. He escaped with $265 (equivalent to about $6,000
    today). A few weeks later, the magazine *Enigma*, published by the National Puzzlers’
    League, wrote this:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: 'The police department of Lima, O., is greatly puzzled over a cryptic message
    received in connection with the robbery of a Western Ohio ticket agent. Here it
    is: `WAS NVKVAFT BY AAKAT TXPXSCK UPBK TXPHN OHAY YBTX CPT MXHG WAE SXFP ZAVFZ
    ACK THERE FIRST TXLK WEEK WAYX ZA WITH THX.`'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: 'This interesting story was discovered in 2013 by Zodiac Killer expert Dave
    Oranchak and popularized by British cipher mysteries blogger Nick Pelling.^([53](b06.xhtml#c07-endnote-53))
    Nick found two articles about this cryptogram in old issues of the *Lima Times-Democrat*.
    The version of the ciphertext printed there is slightly different from the one
    published by the National Puzzlers’ League. As the *Enigma* author probably copied
    it from the newspaper, we should work with the *Lima Times-Democrat* version.
    Here it is:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: '`Was nvlvaft by aakat txpxsck upbk txphn ohay ybtx cpt mxhg wae sxfp zavfz
    ack there first txlk week wayx za with thx`'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: To our regret, we don’t know the full relationship of the cryptogram to the
    robbery. The most likely explanation is that this message is a codebook-encrypted
    telegram. The sender seems to have left a few of the less-important words (`WAS`,
    `BY`, `FIRST`, `THX` . . .) in cleartext and looked up the others in a (not-yet-discovered)
    codebook.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: If the train station robbery cryptogram really is a telegram, it seems possible
    that the robber sent it immediately before or after the act. Perhaps the telegraph
    clerk became suspicious after the telegram was sent and informed the police that
    he might have dealt with a criminal.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: The train station robbery cryptogram has never been deciphered.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: A Pollaky newspaper advertisement
  id: totrans-251
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ignatius Pollaky (1828–1918), a successful private detective in Victorian England,
    was one of the individuals who inspired Arthur Conan Doyle’s Sherlock Holmes.^([54](b06.xhtml#c07-endnote-54))
    Pollaky frequently used newspaper advertisements to search for witnesses or communicate
    encrypted messages. He published the ad in [Figure 7-22](#figure7-22) in *The
    Times* (London) on February 20, 1871.^([55](b06.xhtml#c07-endnote-55))^, ^([56](b06.xhtml#c07-endnote-56))
    This ciphertext looks very much like a message encrypted in a code. Perhaps some
    superencryption was used. There were many codebooks in use during the Victorian
    era, so Pollaky had many options to choose from.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: So far, nobody has been able to decipher this message.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07022.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-22: An encrypted newspaper ad published by private detective Ignatius
    Pollaky'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: Lord Manchester’s letter
  id: totrans-256
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The letter depicted in [Figure 7-23](#figure7-23) was sent by George Mantagu,
    fourth duke of Manchester and British ambassador to France, in 1783.^([57](b06.xhtml#c07-endnote-57))
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c07/f07023.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7-23: A page from a letter sent by the British ambassador to France
    in 1783'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a transcript:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: '`Fontainbleau Sep 20, 1783`'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: '`Sir,`'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: '`I received your letter dated Sep 2nd and`'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: '`should not have delayed so long sending an`'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: '`answer to it, had I anything very material`'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: '`to communicate. 3693.2517.65.3423.576.1100.`'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: '`97.1765.3000.259.3032.57.66.1795.19.211.`'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '`46.1038.1637.970.2609.3369.696.3696.427.118.`'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: '`3364.1362.456.111.566.77.1551.2961.1504.1437.`'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: '`3560.1453.2053.1555.1834.1406.9.2044.2694.`'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: '`3423.678.1359.493.809.1094.956.636.1618.61.`'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: '`1437.1369.2316.497.314.684.1205.193.685.2072.`'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: '`65.39.3459.3937.2108.2615.1359.766.2450.880.1291.`'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: '`647.3339.1175.3714.809.184.564.2101.1581.566.2323.`'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: '`2066.823.665.2401.1692.3560.1444.2784.970.830.`'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: '`3601.3263.1612.3000.1291.2000.1936.3056.3287.1618.`'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: '`2894.3498.233.2424.3137.3928.1501.3364.434.492.`'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: '`566.1998.2450.3560.1603.3905.3082.1504.1242.`'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: '`1624.987.2615.1306.350.1245.1504.1145.9.3658.`'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: '`S John Stepney 2622.`'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: '`2622.122.3901.1350.758.1986.3905.2426.2051.3791.`'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: '`678.498.2109.3438.3536.3487.2999.2694.3892.`'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: '`3056.1350.1397.2985.1778.1719.3739.1753.2126.`'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: '`566.77.956.3000.56.9.576.3006.10.`'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: '`The Court is now at Fontainebleau where`'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: '`it is said it is to remain till late in`'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: '`November notwithstanding the Pregnancy`'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: '`of the Queen`'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: '`I am`'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: '`Sir`'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: '`With great regard`'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: '`Your most obedient`'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: '`Humble Servant`'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: '`Manchester`'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: High-resolution scans of this letter, as well as a transcript, are available
    online at [https://codebreaking-guide.com](https://codebreaking-guide.com). The
    letter appears to have been encrypted with a code. Considering that this code
    probably contained several thousand codegroups and that there are only two pages
    of encrypted text for analysis, breaking this message with conventional codebreaking
    tools likely won’t work. The only realistic chance of deciphering it is to find
    the codebook.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
