["```\n# Get a session from the cache.\ndef find_session(env, sid)\n  unless sid && (session = @cache.read(cache_key(sid))❸)\n sid, session = generate_sid❶, {}\n  end\n  [sid, session]\nend\n\n# Set a session in the cache.\ndef write_session(env, sid, session, options)\n  key = cache_key(sid)\n  if session\n  ❷ @cache.write(key, session, expires_in: options[:expire_after])\n  else\n    @cache.delete(key)\n  end\n  sid\nend\n```", "```\ndef set_cookie(request, session_id, cookie)\n  cookie_jar(request)[@key] = cookie\nend\n\ndef get_cookie(req)\n  cookie_jar(req)[@key]\nend\n\ndef cookie_jar(request)\n  request.cookie_jar.signed_or_encrypted\nend\n```", "```\nSet-Cookie: session_id=278283910977381992837; HttpOnly; Secure; SameSite=Lax\n```", "```\n Set-Cookie: session_id=278283910977381992837; HttpOnly\n```", "```\nSet-Cookie: session_id=278283910977381992837; Secure\n```", "```\nSet-Cookie: session_id=278283910977381992837; SameSite=Strict\n```", "```\nSet-Cookie: session_id=278283910977381992837; SameSite=Lax\n```", "```\nhttp://www.example.com/catalog/index.html;jsessionid=1234\n```", "```\n<session-config>\n     <tracking-mode>COOKIE</tracking-mode>\n</session-config>\n```"]