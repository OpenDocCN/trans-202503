- en: Part 4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: a hacker’s perspective
  prefs: []
  type: TYPE_NORMAL
- en: Engineering and reverse engineering are two sides of the same coin. The best
    makers know how to hack their tools, and the best hackers routinely make new tools.
    I might set out to design a circuit, and find myself reverse engineering a chip
    because the datasheet is vague, incomplete, or simply incorrect. Engineering is
    a creative exercise; reverse engineering is a learning exercise. When you combine
    them, even the toughest problems can be solved as a creative learning exercise.
  prefs: []
  type: TYPE_NORMAL
- en: I spent over a quarter-century in school, but I’ve learned more about electronics
    from reverse engineering. I love trying to figure out why the engineer behind
    a piece of random hardware made certain design choices. Highly skilled engineers
    develop clever tricks without realizing how innovative they are. Those tricks
    often go undocumented or unpatented, and the only way to tap that knowledge is
    to decipher it from finished designs.
  prefs: []
  type: TYPE_NORMAL
- en: After seeing enough boards, I started recognizing patterns and personal styles
    that almost have a cultural nature about them. For example, Apple circuit boards
    are austere and black, with a look almost as iconic as Steve Jobs’s black mock
    turtlenecks. There are so many decisions to make when designing a circuit board
    that most engineers can only draw from their cultural influences and toolchains
    to constrain stylistic things like fonts and part choices.
  prefs: []
  type: TYPE_NORMAL
- en: This kind of learning is so important to me that, for over a decade now, every
    month I’ve presented a circuit board on my blog and challenged readers to divine
    its function from its design. Part of my motivation for holding these regular
    competitions is to make reverse engineering feel culturally acceptable to readers.
    People often ask me if reading other people’s designs or modifying and hacking
    hardware is legal. But anyone who has raised a child knows that learning through
    emulation is a part of human nature. I disagree with interpretations of the law
    that put the terms of a software license above your right to own your hardware.
    If you can’t hack it, you don’t own it.
  prefs: []
  type: TYPE_NORMAL
- en: The importance of democratic access to technology only grows as we become increasingly
    dependent on smartphones and computers. Technology is fundamentally neutral toward
    human ethics; the people who control technology are responsible for applying it
    ethically. One school of thought believes that technology should be controlled
    by a select group of trusted masters; the other believes that control over technology
    should belong to anyone with the motivation and will to learn it. Increasingly,
    our technology infrastructure is becoming a monoculture managed by a cartel of
    technology providers. Everyone carries identical phones running operating systems
    based on the same libraries and uses one or two cloud services to store their
    data. But history has proven that a monoculture with no immunity is a recipe for
    disaster. One virus can wipe out a whole population. Universal access to technology
    may allow the occasional bad actor to develop a harmful exploit, but this bitter
    pill ultimately inoculates our technological immune system, forcing us to grow
    stronger and more resilient. Wherever that threat comes from, a robust and vibrant
    culture of free-thinking technologists will be our ultimate defense against any
    attack.
  prefs: []
  type: TYPE_NORMAL
- en: Speaking of viruses and immune systems, there are remarkable parallels between
    hardware systems and biological systems. Just as hacking is all about rethinking
    APIs to do unexpected things, a central tenant of biology—evolution—is all about
    superior implementations of “APIs” superseding weaker interpretations.
  prefs: []
  type: TYPE_NORMAL
- en: 'I routinely read journals about the life sciences not just because I find the
    subject fascinating, but also because it’s good for me. Looking outside your primary
    field for fresh ideas is very helpful for problem solving. Figuring out how an
    organism works is an incredibly difficult reverse engineering problem: there’s
    no documentation, there’s no designer to consult, and your diagnostic tools are
    roughly equivalent to throwing crate after crate of smartphones into a blender
    and running the mixture through various sieves. Biologists have developed a bag
    of extremely clever tricks to map out complex systems without the benefit of an
    oscilloscope, and at a high level, some of the principles are applicable to electronic
    systems.'
  prefs: []
  type: TYPE_NORMAL
- en: As our understanding of biology becomes more complete, there’s ample opportunity
    for computer engineering principles to advance the field. We’re already at the
    point of custom-engineering organisms; the technology to hack humans—or engineer
    our successor—is likely to arrive within decades. Such powerful tools deserve
    a closer look so that we can make independent judgments about what is fact and
    what is fiction.
  prefs: []
  type: TYPE_NORMAL
- en: While engineering is a creative activity, hacking is an important and often
    underrated learning exercise. The ability to effortlessly switch modes from forward
    to reverse engineering is a powerful tool, and the right to hack is the foundation
    of a healthy technological culture. The first chapter in this section reviews
    some of my own hacking methods and efforts and discusses some of the legal frameworks
    that protect these activities. The second chapter attempts to unpack some key
    concepts from biology and frame them from the perspective of an electronics person.
    The final chapter in this book is a collection of interviews where I discuss what
    being a hacker means to me, as well as recap some of my experiences in manufacturing
    and hardware startups. The collection isn’t exhaustive, but I hope you enjoy reading
    some of my more off-the-cuff thoughts.
  prefs: []
  type: TYPE_NORMAL
