["```\nPS C:\\> Set-AzureRmStorageAccount -Name \"StorageName\" -ResourceGroupName \"\nGroupName\" -EnableHttpsTrafficOnly $True\n```", "```\n        /**\n         * Load the stored storage accounts:\n         * Get account data from localStorage\n         * Combine session key and account data as user account manager key \n         * to get account key stored there.\n         * @param host\n         * @param key\n         */\n        function loadStorageAccounts(host, key) {\n            --snip--\n                    switch (account.connectionType) {\n                        case 1 /* sasAttachedAccount */:\n                            account.connectionString = confidentialData;\n                            break;\n                        case 3 /* key */:\n                            account.accountKey = confidentialData;\n                            break;\n                        default:\n                            // For backward compatibility reasons if the \n                            // connection type is not set\n                            // we assume it is a key\n                            account.accountKey = confidentialData;\n                    }\n                  return account;\n                });\n                return storageAccounts;\n            });\n        }\n    ```", "```\n   # ASM Storage Accounts\n   Write-Output \">>> ASM <<<\"\n➊ $storage = Get-AzureStorageAccount\n   foreach($account in $storage)\n   {\n       $accountName = $account.StorageAccountName\n       Write-Output \"======= ASM Storage Account: $accountName =======\"\n    ➋ $key = Get-AzureStorageKey -StorageAccountName $accountName\n    ➌ $context = New-AzureStorageContext -StorageAccountName `\n           $accountName -StorageAccountKey $key.Primary\n    ➍ $containers = Get-AzureStorageContainer -Context $context\n       foreach($container in $containers)\n       {\n           Write-Output \"----- Blobs in Container: $($container.Name) -----\"\n        ➎ Get-AzureStorageBlob -Context $context -Container $container.Name |\n               format-table Name, Length, ContentType, LastModified -auto\n       }\n       Write-Output \"----- Tables -----\"\n    ➏ Get-AzureStorageTable -Context $context | format-table Name -auto\n       Write-Output \"----- Queues -----\"\n    ➐ Get-AzureStorageQueue -Context $context |\n           format-table Name, Uri, ApproximateMessageCount -auto\n    ➑ $shares = Get-AzureStorageShare -Context $context\n       foreach($share in $shares)\n       {\n           Write-Output \"----- Files in Share : $($share.Name) -----\"\n        ➒ Get-AzureStorageFile -Context $context -ShareName $share.Name |\n               format-table Name, @{label='Size';e={$_.Properties.Length}} -auto\n       }\n       Write-Output \"\"\n   }\n   Write-Output \"\"\n\n   # ARM Storage Accounts\n   Write-Output \">>> ARM <<<\"\n   $storage = Get-AzureRmStorageAccount\n   foreach($account in $storage)\n   {\n       $accountName = $account.StorageAccountName\n       Write-Output \"======= ARM Storage Account: $accountName =======\"\n       $key = Get-AzureRmStorageAccountKey -StorageAccountName `\n           $accountName -ResourceGroupName $account.ResourceGroupName\n       $context = New-AzureStorageContext -StorageAccountName `\n           $accountName -StorageAccountKey $key[0].Value\n       $containers = Get-AzureStorageContainer -Context $context\n       foreach($container in $containers)\n       {\n           Write-Output \"----- Blobs in Container: $($container.Name) -----\"\n           Get-AzureStorageBlob -Context $context -Container $container.Name |\n               format-table Name, Length, ContentType, LastModified -auto\n       }\n       Write-Output \"----- Tables -----\"\n       Get-AzureStorageTable -Context $context | format-table Name -auto\n       Write-Output \"----- Queues -----\"\n       Get-AzureStorageQueue -Context $context |\n           format-table Name, Uri, ApproximateMessageCount -auto\n       $shares = Get-AzureStorageShare -Context $context\n       foreach($share in $shares)\n       {\n           Write-Output \"----- Files in Share : $($share.Name) -----\"\n           Get-AzureStorageFile -Context $context -ShareName $share.Name |\n               format-table Name, @{label='Size';e={$_.Properties.Length}} -auto\n       }\n       Write-Output \"\"\n   }\n```", "```\n----- Tables -----\n\nName\n----\nTestTable\nTransactionAudits\nSchemasTable\n```", "```\n----- Queues -----\nName      Uri                                               ApproximateMessageCount\n----      ---                                               -----------------------\ntestqueue https://storeasm.queue.core.windows.net/testqueue                       0\n```", "```\nnet use * \\\\mysa.file.core.windows.net\\myshare /u:AZURE\\mysa Primary_Key\n```", "```\n----- Files in Share : asmshare -----\n\nName         Size\n----         ----\ntestfile.txt   33\n```"]