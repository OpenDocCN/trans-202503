- en: '**NETWORK PROTOCOL ANALYSIS TOOLKIT**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**网络协议分析工具包**'
- en: Throughout this book, I’ve demonstrated several tools and libraries you can
    use in network protocol analysis, but I didn’t discuss many that I use regularly.
    This appendix describes the tools that I’ve found useful during analysis, investigation,
    and exploitation. Each tool is categorized based on its primary use, although
    some tools would fit several categories.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中，我展示了几种可以用于网络协议分析的工具和库，但并未讨论我常用的许多工具。本附录描述了我在分析、调查和利用过程中发现有用的工具。每个工具根据其主要用途进行了分类，尽管有些工具可以适应多个类别。
- en: '**Passive Network Protocol Capture and Analysis Tools**'
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**被动网络协议捕获与分析工具**'
- en: As discussed in [Chapter 2](../Text/ch02.xhtml#ch02), passive network capture
    refers to listening and capturing packets without disrupting the flow of traffic.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第2章](../Text/ch02.xhtml#ch02)中所讨论，被动网络捕获指的是在不干扰流量的情况下监听和捕获数据包。
- en: '***Microsoft Message Analyzer***'
  id: totrans-4
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Microsoft Message Analyzer***'
- en: '**Website** *[http://blogs.technet.com/b/messageanalyzer/](http://blogs.technet.com/b/messageanalyzer/)*'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**网站** *[http://blogs.technet.com/b/messageanalyzer/](http://blogs.technet.com/b/messageanalyzer/)*'
- en: '**License** Commercial; free of charge'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**许可证** 商业版；免费'
- en: '**Platform** Windows'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台** Windows'
- en: The Microsoft Message Analyzer is an extensible tool for analyzing network traffic
    on Windows. The tool includes many parsers for different protocols and can be
    extended with a custom programming language. Many of its features are similar
    to those of Wireshark except Message Analyzer has added support for Windows events.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Message Analyzer是一个可扩展的工具，用于分析Windows上的网络流量。该工具包含多种协议解析器，并且可以通过自定义编程语言进行扩展。它的许多功能类似于Wireshark，不过Message
    Analyzer还增加了对Windows事件的支持。
- en: '![image](../Images/f0278-01.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/f0278-01.jpg)'
- en: '***TCPDump and LibPCAP***'
  id: totrans-10
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***TCPDump 和 LibPCAP***'
- en: '**Website** *[http://www.tcpdump.org/](http://www.tcpdump.org/)*; *[http://www.winpcap.org/](http://www.winpcap.org/)*
    for Windows implementation (WinPcap/WinDump)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**网站** *[http://www.tcpdump.org/](http://www.tcpdump.org/)*； *[http://www.winpcap.org/](http://www.winpcap.org/)*
    用于Windows实现（WinPcap/WinDump）'
- en: '**License** BSD License'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**许可证** BSD 许可证'
- en: '**Platforms** BSD, Linux, macOS, Solaris, Windows'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台** BSD, Linux, macOS, Solaris, Windows'
- en: The TCPDump utility installed on many operating systems is the grandfather of
    network packet capture tools. You can use it for basic network data analysis.
    Its LibPCAP development library allows you to write your own tools to capture
    traffic and manipulate PCAP files.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 安装在许多操作系统上的TCPDump工具是网络数据包捕获工具的“祖父”。你可以使用它进行基础的网络数据分析。它的LibPCAP开发库允许你编写自己的工具来捕获流量并操作PCAP文件。
- en: '![image](../Images/f0279-01.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/f0279-01.jpg)'
- en: '***Wireshark***'
  id: totrans-16
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Wireshark***'
- en: '**Website** *[https://www.wireshark.org/](https://www.wireshark.org/)*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**网站** *[https://www.wireshark.org/](https://www.wireshark.org/)*'
- en: '**License** GPLv2'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**许可证** GPLv2'
- en: '**Platforms** BSD, Linux, macOS, Solaris, Windows'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台** BSD, Linux, macOS, Solaris, Windows'
- en: Wireshark is the most popular tool for passive packet capture and analysis.
    Its GUI and large library of protocol analysis modules make it more robust and
    easier to use than TCPDump. Wireshark supports almost every well-known capture
    file format, so even if you capture traffic using a different tool, you can use
    Wireshark to do the analysis. It even includes support for analyzing nontraditional
    protocols, such as USB or serial port communication. Most Wireshark distributions
    also include `tshark`, a replacement for TCPDump that has most of the features
    offered in the main Wireshark GUI, such as the protocol dissectors. It allows
    you to view a wider range of protocols on the command line.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark是最受欢迎的被动数据包捕获与分析工具。它的图形用户界面（GUI）和丰富的协议分析模块库使它比TCPDump更强大且易于使用。Wireshark支持几乎所有知名的捕获文件格式，因此即使你使用其他工具捕获流量，也可以用Wireshark进行分析。它甚至支持分析非传统协议，如USB或串口通信。大多数Wireshark发行版还包括`tshark`，它是TCPDump的替代工具，拥有Wireshark主界面中提供的大部分功能，例如协议解析器。它允许你在命令行查看更多种类的协议。
- en: '![image](../Images/f0280-01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/f0280-01.jpg)'
- en: '**Active Network Capture and Analysis**'
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**主动网络捕获与分析**'
- en: To modify, analyze, and exploit network traffic as discussed in [Chapters 2](../Text/ch02.xhtml#ch02)
    and [8](../Text/ch08.xhtml#ch08), you’ll need to use active network capture techniques.
    I use the following tools on a daily basis when I’m analyzing and testing network
    protocols.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第2章](../Text/ch02.xhtml#ch02)和[第8章](../Text/ch08.xhtml#ch08)中所讨论，要修改、分析和利用网络流量，你需要使用主动网络捕获技术。在我分析和测试网络协议时，以下工具是我每天使用的。
- en: '***Canape***'
  id: totrans-24
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Canape***'
- en: '**Website** *[https://github.com/ctxis/canape/](https://github.com/ctxis/canape/)*'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '**License** GPLv3'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** Windows (with .NET 4)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: I developed the Canape tool as a generic network protocol man-in-the-middle
    testing, analyzing, and exploitation tool with a usable GUI. Canape contains tools
    that allow users to develop protocol parsers, C# and IronPython scripted extensions,
    and different types of man-in-the-middle proxies. It’s open source as of version
    1.4, so users can contribute to its development.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/f0281-01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
- en: '***Canape Core***'
  id: totrans-30
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[https://github.com/tyranid/CANAPE.Core/releases/](https://github.com/tyranid/CANAPE.Core/releases/)*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '**License** GPLv3'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** .NET Core 1.1 and 2.0 (Linux, macOS, Windows)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: The Canape Core libraries, a stripped-down fork of the original Canape code
    base, are designed for use from the command line. In the examples throughout this
    book, I’ve used Canape Core as the library of choice. It has much the same power
    as the original Canape tool while being usable on any OS supported by .NET Core
    instead of only on Windows.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '***Mallory***'
  id: totrans-35
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[https://github.com/intrepidusgroup/mallory/](https://github.com/intrepidusgroup/mallory/)*'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '**License** Python Software Foundation License v2; GPLv3 if using the GUI'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '**Platform** Linux'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Mallory is an extensible man-in-the-middle tool that acts as a network gateway,
    which makes the process of capturing, analyzing, and modifying traffic transparent
    to the application being tested. You can configure Mallory using Python libraries
    as well as a GUI debugger. You’ll need to configure a separate Linux VM to use
    it. Some useful instructions are available at *[https://bitbucket.org/IntrepidusGroup/mallory/wiki/Mallory_Minimal_Guide/](https://bitbucket.org/IntrepidusGroup/mallory/wiki/Mallory_Minimal_Guide/)*.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '**Network Connectivity and Protocol Testing**'
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you’re trying to test an unknown protocol or network device, basic network
    testing can be very useful. The tools listed in this section help you discover
    and connect to exposed network servers on the target device.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '***Hping***'
  id: totrans-42
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[http://www.hping.org/](http://www.hping.org/)*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '**License** GPLv2'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** BSD, Linux, macOS, Windows'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: The Hping tool is similar to the traditional `ping` utility, but it supports
    more than just ICMP echo requests. You can also use it to craft custom network
    packets, send them to a target, and display any responses. This is a very useful
    tool to have in your kit.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '***Netcat***'
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** Find the original at *[http://nc110.sourceforge.net/](http://nc110.sourceforge.net/)*
    and the GNU version at *[http://netcat.sourceforge.net/](http://netcat.sourceforge.net/)*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '**License** GPLv2, public domain'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** BSD, Linux, macOS, Windows'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Netcat is a command line tool that connects to an arbitrary TCP or UDP port
    and allows you to send and receive data. It supports the creation of sending or
    listening sockets and is about as simple as it gets for network testing. Netcat
    has many variants, which, annoyingly, all use different command line options.
    But they all do pretty much the same thing.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Netcat 是一个命令行工具，可以连接到任意的 TCP 或 UDP 端口，并允许你发送和接收数据。它支持创建发送或监听套接字，是网络测试中最简单的工具之一。Netcat
    有许多变种，令人烦恼的是，它们都使用不同的命令行选项。但它们的功能基本相同。
- en: '***Nmap***'
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Nmap***'
- en: '**Website** *[https://nmap.org/](https://nmap.org/)*'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**网站** *[https://nmap.org/](https://nmap.org/)*'
- en: '**License** GPLv2'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**许可证** GPLv2'
- en: '**Platforms** BSD, Linux, macOS, Windows'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台** BSD、Linux、macOS、Windows'
- en: If you need to scan the open network interface on a remote system, nothing is
    better than Nmap. It supports many different ways to elicit responses from TCP
    and UDP socket servers, as well as different analysis scripts. It’s invaluable
    when you’re testing an unknown device.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要扫描远程系统上开放的网络接口，Nmap 是最好的选择。它支持多种从 TCP 和 UDP 套接字服务器获取响应的方式，以及不同的分析脚本。在测试未知设备时，它是无价的。
- en: '![image](../Images/f0283-01.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/f0283-01.jpg)'
- en: '**Web Application Testing**'
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Web 应用测试**'
- en: Although this book does not focus heavily on testing web applications, doing
    so is an important part of network protocol analysis. One of the most widely used
    protocols on the internet, HTTP is even used to proxy other protocols, such as
    DCE/RPC, to bypass firewalls. Here are some of the tools I use and recommend.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然本书并不专注于 Web 应用测试，但这是网络协议分析中的一个重要部分。HTTP 是互联网上最广泛使用的协议之一，甚至用于代理其他协议，如 DCE/RPC，以绕过防火墙。以下是我使用并推荐的一些工具。
- en: '***Burp Suite***'
  id: totrans-60
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Burp Suite***'
- en: '**Website** *[https://portswigger.net/burp/](https://portswigger.net/burp/)*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**网站** *[https://portswigger.net/burp/](https://portswigger.net/burp/)*'
- en: '**License** Commercial; limited free version is available'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**许可证** 商业版；有有限的免费版'
- en: '**Platforms** Supported Java platforms (Linux, macOS, Solaris, Windows)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台** 支持的 Java 平台（Linux、macOS、Solaris、Windows）'
- en: Burp Suite is the gold standard of commercial web application–testing tools.
    Written in Java for maximum cross-platform capability, it provides all the features
    you need for testing web applications, including built-in proxies, SSL decryption
    support, and easy extensibility. The free version has fewer features than the
    commercial version, so consider buying the commercial version if you plan to use
    it a lot.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite 是商业 Web 应用测试工具的黄金标准。它使用 Java 编写，以最大化跨平台能力，提供了进行 Web 应用测试所需的所有功能，包括内置代理、SSL
    解密支持和易于扩展性。免费版功能较少，如果你打算频繁使用，可以考虑购买商业版。
- en: '![image](../Images/f0284-01.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/f0284-01.jpg)'
- en: '***Zed Attack Proxy (ZAP)***'
  id: totrans-66
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Zed Attack Proxy (ZAP)***'
- en: '**Website** *[https://www.owasp.org/index.php/ZAP](https://www.owasp.org/index.php/ZAP)*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**网站** *[https://www.owasp.org/index.php/ZAP](https://www.owasp.org/index.php/ZAP)*'
- en: '**License** Apache License v2'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**许可证** Apache License v2'
- en: '**Platforms** Supported Java platforms (Linux, macOS, Solaris, Windows)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台** 支持的 Java 平台（Linux、macOS、Solaris、Windows）'
- en: If Burp Suite’s price is beyond reach, ZAP is a great free option. Developed
    by OWASP, ZAP is written in Java, can be scripted, and can be easily extended
    because it’s open source.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Burp Suite 的价格超出预算，ZAP 是一个很好的免费选择。ZAP 由 OWASP 开发，使用 Java 编写，可以编写脚本，并且由于其开源，容易扩展。
- en: '***Mitmproxy***'
  id: totrans-71
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Mitmproxy***'
- en: '**Website** *[https://mitmproxy.org/](https://mitmproxy.org/)*'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**网站** *[https://mitmproxy.org/](https://mitmproxy.org/)*'
- en: '**License** MIT'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**许可证** MIT'
- en: '**Platforms** Any Python-supported platform, although the program is somewhat
    limited on Windows'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台** 任何支持 Python 的平台，尽管在 Windows 上该程序有些限制'
- en: Mitmproxy is a command line–based web application–testing tool written in Python.
    Its many standard features include interception, modification, and replay of requests.
    You can also include it as a separate library within your own applications.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Mitmproxy 是一个基于命令行的 Web 应用测试工具，使用 Python 编写。它的许多标准功能包括拦截、修改和重放请求。你还可以将它作为独立的库集成到你自己的应用程序中。
- en: '![image](../Images/f0285-01.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/f0285-01.jpg)'
- en: '**Fuzzing, Packet Generation, and Vulnerability Exploitation Frameworks**'
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**模糊测试、数据包生成与漏洞利用框架**'
- en: Whenever you’re developing exploits for and finding new vulnerabilities, you’ll
    usually need to implement a lot of common functionality. The following tools provide
    a framework, allowing you to reduce the amount of standard code and common functionality
    you need to implement.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '***American Fuzzy Lop (AFL)***'
  id: totrans-79
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[http://lcamtuf.coredump.cx/afl/](http://lcamtuf.coredump.cx/afl/)*'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '**License** Apache License v2'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** Linux; some support for other Unix-like platforms'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Don’t let its cute name throw you off. American Fuzzy Lop (AFL) may be named
    after a breed of rabbit, but it’s an amazing tool for fuzz testing, especially
    on applications that can be recompiled to include special instrumentation. It
    has an almost magical ability to generate valid inputs for a program from the
    smallest of examples.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/f0286-01.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
- en: '***Kali Linux***'
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[https://www.kali.org/](https://www.kali.org/)*'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '**Licenses** A range of open source and non-free licenses depending on the
    packages used'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** ARM, Intel x86 and x64'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Kali is a Linux distribution designed for penetration testing. It comes pre-installed
    with Nmap, Wireshark, Burp Suite, and various other tools listed in this appendix.
    Kali is invaluable for testing and exploiting network protocol vulnerabilities,
    and you can install it natively or run it as a live distribution.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: '***Metasploit Framework***'
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[https://github.com/rapid7/metasploit-framework/](https://github.com/rapid7/metasploit-framework/)*'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '**License** BSD, with some parts under different licenses'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** BSD, Linux, macOS, Windows'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: Metasploit is pretty much the only game in town when you need a generic vulnerability
    exploitation framework, at least if you don’t want to pay for one. Metasploit
    is open source, is actively updated with new vulnerabilities, and will run on
    almost all platforms, making it useful for testing new devices. Metasploit provides
    many built-in libraries to perform typical exploitation tasks, such as generating
    and encoding shell code, spawning reverse shells, and gaining elevated privileges,
    allowing you to concentrate on developing your exploit without having to deal
    with various implementation details.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '***Scapy***'
  id: totrans-95
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[http://www.secdev.org/projects/scapy/](http://www.secdev.org/projects/scapy/)*'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '**License** GPLv2'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** Any Python-supported platform, although it works best on Unix-like
    platforms'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Scapy is a network packet generation and manipulation library for Python. You
    can use it to build almost any packet type, from Ethernet packets through TCP
    or HTTP packets. You can replay packets to test what a network server does when
    it receives them. This functionality makes it a very flexible tool for testing,
    analysis, or fuzzing of network protocols.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '***Sulley***'
  id: totrans-100
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[https://github.com/OpenRCE/sulley/](https://github.com/OpenRCE/sulley/)*'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '**License** GPLv2'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** Any Python-supported platform'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: Sulley is a Python-based fuzzing library and framework designed to simplify
    data representation, transmission, and instrumentation. You can use it to fuzz
    anything from file formats to network protocols.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '**Network Spoofing and Redirection**'
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To capture network traffic, sometimes you have to redirect that traffic to a
    listening machine. This section lists a few tools that provide ways to implement
    network spoofing and redirection without needing much configuration.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '***DNSMasq***'
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[http://www.thekelleys.org.uk/dnsmasq/doc.html](http://www.thekelleys.org.uk/dnsmasq/doc.html)*'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '**License** GPLv2'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '**Platform** Linux'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: The DNSMasq tool is designed to quickly set up basic network services, such
    as DNS and DHCP, so you don’t have to hassle with complex service configuration.
    Although DNSMasq isn’t specifically designed for network spoofing, you can repurpose
    it to redirect a device’s network traffic for capture, analysis, and exploitation.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: '***Ettercap***'
  id: totrans-112
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[https://ettercap.github.io/ettercap/](https://ettercap.github.io/ettercap/)*'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '**License** GPLv2'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** Linux, macOS'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Ettercap (discussed in [Chapter 4](../Text/ch04.xhtml#ch04)) is a man-in-the-middle
    tool designed to listen to network traffic between two devices. It allows you
    to spoof DHCP or ARP addresses to redirect a network’s traffic.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '**Executable Reverse Engineering**'
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Reviewing the source code of an application is often the easiest way to determine
    how a network protocol works. However, when you don’t have access to the source
    code, or the protocol is complex or proprietary, network traffic–based analysis
    is difficult. That’s where reverse engineering tools come in. Using these tools,
    you can disassemble and sometimes decompile an application into a form that you
    can inspect. This section lists several reverse engineering tools that I use.
    (See the discussion in [Chapter 6](../Text/ch06.xhtml#ch06) for more details,
    examples, and explanation.)
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '***Java Decompiler (JD)***'
  id: totrans-119
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[http://jd.benow.ca/](http://jd.benow.ca/)*'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '**License** GPLv3'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** Supported Java platforms (Linux, macOS, Solaris, Windows)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Java uses a bytecode format with rich metadata, which makes it fairly easy to
    reverse engineer Java bytecode into Java source code using a tool such as the
    Java Decompiler. The Java Decompiler is available with a stand-alone GUI as well
    as plug-ins for the Eclipse IDE.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/f0288-01.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
- en: '***IDA Pro***'
  id: totrans-125
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[https://www.hex-rays.com/](https://www.hex-rays.com/)*'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '**License** Commercial; limited free version available'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** Linux, macOS, Windows'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: IDA Pro is the best-known tool for reverse engineering executables. It disassembles
    and decompiles many different process architectures, and it provides an interactive
    environment to investigate and analyze the disassembly. Combined with support
    for custom scripts and plug-ins, IDA Pro is the best tool for reverse engineering
    executables. Although the full professional version is quite expensive, a free
    version is available for noncommercial use; however, it is restricted to 32-bit
    x86 binaries and has other limitations.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/f0289-01.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
- en: '***Hopper***'
  id: totrans-131
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[http://www.hopperapp.com/](http://www.hopperapp.com/)*'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: '**License** Commercial; a limited free trial version is also available'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '**Platforms** Linux, macOS'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: Hopper is a very capable disassembler and basic decompiler that can more than
    match many of the features of IDA Pro. Although as of this writing Hopper doesn’t
    support the range of processor architectures that IDA Pro does, it should prove
    more than sufficient in most situations due to its support of x86, x64, and ARM
    processors. The full commercial version is considerably cheaper than IDA Pro,
    so it’s definitely worth a look.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '***ILSpy***'
  id: totrans-136
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[http://ilspy.net/](http://ilspy.net/)*'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '**License** MIT'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '**Platform** Windows (with .NET4)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: ILSpy, with its Visual Studio–like environment, is the best supported of the
    free .NET decompiler tools.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/f0290-01.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
- en: '***.NET Reflector***'
  id: totrans-142
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Website** *[https://www.red-gate.com/products/dotnet-development/reflector/](https://www.red-gate.com/products/dotnet-development/reflector/)*'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '**License** Commercial'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: '**Platform** Windows'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Reflector is the original .NET decompiler. It takes a .NET executable or library
    and converts it into C# or Visual Basic source code. Reflector is very effective
    at producing readable source code and allowing simple navigation through an executable.
    It’s a great tool to have in your arsenal.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/f0291-01.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
