- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: How can I break an encrypted message? And other introductory questions
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我怎样才能破解加密信息？以及其他入门问题
- en: '![](image_fi/502727c01/g01001.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c01/g01001.png)'
- en: The postcard in [Figure 1-1](#figure1-1) (provided to us by Karsten Hansky)
    was sent in 1904.^([1](b06.xhtml#c01-endnote-1)) As can be easily seen, the message
    written on it is encrypted.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[图1-1](#figure1-1)中的明信片（由Karsten Hansky提供）是1904年寄出的。^([1](b06.xhtml#c01-endnote-1))
    很容易看出，明信片上的信息是加密的。'
- en: '![](image_fi/502727c01/f01001.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c01/f01001.png)'
- en: 'Figure 1-1: Apparently, the sender of this postcard didn’t want the letter
    carrier or the family of the recipient to read it. So, they chose to encrypt the
    message.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 图1-1：显然，这张明信片的寄件人不希望邮递员或收件人的家人看到它。因此，他们选择加密信息。
- en: Decades- or even centuries-old encrypted messages are far from unusual. Countless
    encrypted diaries, letters, notebooks, radio messages, newspaper ads, and telegrams
    are known to exist—not to mention numerous encrypted postcards, such as the one
    in [Figure 1-1](#figure1-1). Encrypted documents can also be found in archives,
    private collections, and flea markets, as well as on internet auction portals,
    websites, and mailing lists. Many more encrypted messages are printed in books,
    newspapers, and magazines, both old and new.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 数十年甚至上百年的加密信息并不罕见。无数加密的日记、信件、笔记本、无线电信息、报纸广告和电报被知晓存在——更不用提大量的加密明信片，例如[图1-1](#figure1-1)中的那张。加密文件也可以在档案馆、私人收藏、跳蚤市场，以及互联网拍卖门户、网站和邮件列表中找到。更多的加密信息被印刷在书籍、报纸和杂志中，无论是旧的还是新的。
- en: Before computers became popular, encryption was mainly performed by hand, usually
    with pencil and paper (hence the term *pencil-and-paper encryption*). Sometimes,
    cryptographers also employed simple equipment such as leather strips or wooden
    and metallic implements, like disks or slides. Starting in the late 1920s, mechanical
    and electrical encryption machines came into use, the most famous of which was
    the German Enigma machine (see [Chapter 15](c15.xhtml)). As encryption machines
    were expensive, they saw widespread use primarily in the military, intelligence
    organizations, and diplomatic services. Those with fewer financial resources tended
    to continue using pencil-and-paper systems.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机普及之前，加密主要是手工完成的，通常使用铅笔和纸（因此有了*铅笔和纸加密*这个术语）。有时，密码学家还会使用简单的工具，如皮革条或木质和金属工具，如圆盘或滑块。自1920年代末起，机械和电气加密机开始投入使用，其中最著名的是德国的恩尼格玛机（见[第15章](c15.xhtml)）。由于加密机价格昂贵，它们主要在军事、情报机构和外交服务中得到广泛应用。经济资源较少的人群则倾向于继续使用铅笔和纸系统。
- en: 'With the advent of modern digital technology around 1970, commercial and military
    encryption began using computer hardware and software. Nevertheless, pencil-and-paper
    encryption endured and is still relevant today. It is used by a wide cross section
    of the population: criminals protecting illegal activities, friends and lovers
    exchanging secret messages, and others who use it in various recreational activities.
    For example, geocachers, escape room aficionados, and those involved with other
    kinds of high-tech scavenger hunts might use cryptography to hide latitude and
    longitude coordinates.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 随着现代数字技术在1970年左右的出现，商业和军事加密开始使用计算机硬件和软件。然而，铅笔和纸的加密方式依然存在，并且至今仍然相关。它被广泛使用于各类人群中：犯罪分子保护非法活动、朋友和恋人交换秘密信息，以及其他从事各种娱乐活动的人。例如，地理藏宝游戏者、逃脱房间爱好者以及参与其他高科技寻宝游戏的人可能会使用密码学来隐藏经纬度坐标。
- en: What is this book about?
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这本书是关于什么的？
- en: 'We will show you historical examples of real messages, such as postcards, diaries,
    letters, and telegrams, that were encrypted with pencil and paper or other manual
    methods. We will also teach you methods for breaking them. Although manual encryption
    and decryption have lost much of their importance due to the widespread use of
    computer technology, many people are still interested in deciphering encrypted
    messages for several reasons:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将向您展示一些历史上真实的信息示例，比如使用铅笔和纸或其他手工方法加密的明信片、日记、信件和电报。我们还将教您破解它们的方法。尽管由于计算机技术的广泛应用，手工加密和解密的重要性已大大降低，但许多人仍然对破译加密信息感兴趣，原因有很多：
- en: Families may want to read encrypted postcards, letters, or diaries they have
    inherited from their ancestors.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 家庭可能希望阅读他们从祖先那里继承的加密明信片、信件或日记。
- en: Historians endeavor to decipher encrypted documents they have encountered during
    their research in order to gain insight into previous eras.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 历史学家努力解密他们在研究过程中遇到的加密文档，以便深入了解过去的时代。
- en: Police officers may want to break enciphered messages written by criminals.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 警察可能想要破解犯罪分子写的加密信息。
- en: Geocachers want to solve puzzle caches.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地理寻宝者希望解开谜题缓存。
- en: Decryption enthusiasts take delight in deciphering encrypted documents that
    were created decades or even centuries ago; many of these enthusiasts regard solving
    an unsolved cipher to be as exciting a task as climbing Mount Everest or making
    a new archaeological discovery.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解密爱好者乐于破译几十年甚至几百年前创作的加密文档；许多爱好者认为，解开一个未解的密码任务，与登上珠穆朗玛峰或做出新的考古发现一样令人兴奋。
- en: Students try to solve challenges from their cryptography classes. Most classes
    focus on computer-based encryption, but they usually include the study of pencil-and-paper
    methods as well.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学生们试图解决来自密码学课程的挑战。大多数课程侧重于计算机基础的加密方法，但通常也包括铅笔和纸的传统方法学习。
- en: While some solvers are mainly interested in historical encrypted messages, others
    enjoy encryption puzzles created as recreation, like those found in Elonka’s book
    *The Mammoth Book of Secret Codes and Cryptograms*^([2](b06.xhtml#c01-endnote-2))
    or in the regular publications of the American Cryptogram Association. This book
    mainly deals with historical encryption. The postcard from 1904 shown at the beginning
    of this chapter is the first example we provide. In [Chapter 5](c05.xhtml), we
    will explain how it can be deciphered.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然一些解密者主要对历史加密信息感兴趣，但其他人则享受作为娱乐而创作的加密谜题，比如在Elonka的书籍《*The Mammoth Book of Secret
    Codes and Cryptograms*》中找到的谜题，或是在美国密码学协会的定期出版物中找到的谜题。本书主要涉及历史加密内容。本章开头展示的1904年明信片是我们提供的第一个例子。在[第5章](c05.xhtml)中，我们将解释如何解密它。
- en: Which technical terms do I need to know?
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我需要了解哪些技术术语？
- en: A text that is to be encrypted is termed a *plaintext*. The result of an encryption
    is the *ciphertext*. Sometimes, the ciphertext may be embedded in other readable
    text, which is called the *cleartext* to distinguish it from the ciphertext that
    appears within it.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 需要加密的文本称为*明文*。加密后的结果是*密文*。有时，密文可能嵌入到其他可读文本中，这种情况称为*明文中嵌密文*，以便将其与其中的密文区分开来。
- en: Many encryption methods are based on some secret information that may only be
    known to the sender and the receiver—the *key*. A typical example of a key is
    a *substitution table* that replaces every letter of the alphabet for another
    one. Sometimes, the key is represented by a word, the *keyword*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 许多加密方法基于某些秘密信息，这些信息可能只为发送者和接收者所知——*密钥*。一个典型的密钥例子是*替换表*，它将字母表中的每个字母替换成另一个字母。有时，密钥以一个词的形式表示，即*关键词*。
- en: 'There are two kinds of encryption methods: ciphers and codes. The easiest way
    to describe the difference is that a *cipher* (sometimes spelled “cypher”) generally
    works on letters, while a *code* works on words or phrases. The problem with using
    a code is that you often need to first think of nearly every word you want to
    use and then generate a codebook that has an equivalent for each one. Since a
    language can have thousands of words, such codebooks could be quite large! But
    a cipher, which operates only on letters, can be a much more compact system. Pretty
    much anything can be encrypted with a cipher, as long as both the sender and receiver
    know the system; no hefty codebook is required. Most of the encryption methods
    covered in this book are ciphers. Codes will be addressed in [Chapter 7](c07.xhtml).'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种加密方法：密码和代码。描述两者区别的最简单方法是，*密码*（有时拼写为“cypher”）通常作用于字母，而*代码*作用于单词或短语。使用代码的难点在于，你通常需要先考虑几乎每一个你想用的单词，然后生成一本包含每个单词对应代码的代码书。由于语言中有成千上万的单词，这样的代码书可能会非常庞大！但密码仅作用于字母，因此可以成为一个更紧凑的系统。几乎任何东西都可以用密码加密，只要发送者和接收者都知道加密系统；无需庞大的代码书。本书中涵盖的大多数加密方法都是密码。代码将在[第7章](c07.xhtml)中讨论。
- en: 'Unfortunately, these terms can be confusing because many other meanings of
    the term *code* are in general use. For instance, a ZIP code or a code of conduct
    has nothing to do with encryption. Even if we restrict ourselves to the field
    of encryption technology, the use of the word *code* is ambiguous, as it sometimes
    refers to encryption in general (for example, in the expression *codebreaking*).
    Even professional cryptographers, when speaking casually, may use the terms *code*
    and *cipher* interchangeably. In this book, we will use the term *code* only in
    the way we defined it in the previous paragraph (i.e., as a method of encrypting
    messages at the level of words and phrases). There is only one exception: when
    we say *codebreaking*, we refer to all kinds of encryption, not only codes.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: If we have the key, we can *decrypt* a ciphertext to obtain the plaintext. If
    we try to derive a plaintext from a ciphertext without knowing the key, we usually
    speak of *breaking* the encryption. An encrypted message we want to break we refer
    to as a *cryptogram*.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: While the art and craft of encryption is referred to as *cryptography*, the
    breaking of cryptograms is called *cryptanalysis*. *Codebreaking* is another word
    for cryptanalysis. Also, the term *cryptology* often means cryptography and cryptanalysis
    but can also mean the study of everything encryption related, including people,
    machines, systems, and history. The term *crypto* can be used as a catchall term
    to apply to many items on this list.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Generally, *cryptology* refers to messages that are encrypted, but sometimes,
    *steganography*, the hiding of information (see [Chapter 15](c15.xhtml)), is included
    in cryptology as well.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: When breaking a cryptogram, it is usually helpful to know or to guess a word
    or phrase that appears in the plaintext. Such a word or phrase is called a *crib*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, several characters are frequently referenced in the literature
    on cryptography (though they don’t play a major role in this book): *Alice* and
    *Bob* are often used as placeholder names when it comes to explaining encryption
    methods. Usually, the sender of an encrypted message is referred to as Alice and
    the receiver is referred to as Bob. Sometimes, additional characters appear, such
    as *Carol* (another crypto user), *Eve* (an eavesdropper), and *Mallory* (a malicious
    person). These characters do not necessarily stand for humans; they might also
    refer to computer programs or hardware components.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: See the glossary in Appendix C for definitions of these and other terms.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: How can I break an encrypted text?
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You’ve come to the right place! The purpose of our book is exactly to help you
    with this question, especially in regard to classical ciphers. We introduce the
    main pencil-and-paper encryption techniques encountered in practice and then describe
    how to solve them.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 'For impatient readers, we provide our first codebreaking example in the following
    cryptogram: an encrypted advertisement published in the London newspaper *The
    Times* on August 1, 1873\. This and some other encrypted newspaper ads we will
    be referring to later are from Jean Palmer’s 2005 book *The Agony* *Column Codes
    & Ciphers*. (Jean Palmer is a pen name of London-based codebreaking expert Tony
    Gaffney.)^([3](b06.xhtml#c01-endnote-3))'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于急于了解的读者，我们在下面的密码表中提供了我们的第一个破解示例：1873年8月1日在伦敦报纸《泰晤士报》上发布的加密广告。我们稍后将参考一些其他加密报纸广告，这些广告出自琼·帕尔默（Jean
    Palmer）2005年出版的书《痛苦的栏目密码与密码》（The Agony Column Codes & Ciphers）。（琼·帕尔默是伦敦的破解专家托尼·加夫尼的笔名。）^([3](b06.xhtml#c01-endnote-3))
- en: '![](image_fi/502727c01/g01002.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c01/g01002.png)'
- en: 'Here’s the ciphertext written in a more readable way:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是以更易读方式写出的密文：
- en: '`HFOBWDS wtbsfdoesksjd ji ijs mjiae (dai ditwy). Afods ks rofed dpficqp licqp.
    Toeqfwus yic lsrd vspojt uwjjid qsd ibsf. Aoll sjtswbicf di edwy apsfs yic lsrd
    ce doll O pswf rfik yic, qobs yicf wtbous. Yicf cjpwhhy aors jid asll.`'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`HFOBWDS wtbsfdoesksjd ji ijs mjiae (dai ditwy). Afods ks rofed dpficqp licqp.
    Toeqfwus yic lsrd vspojt uwjjid qsd ibsf. Aoll sjtswbicf di edwy apsfs yic lsrd
    ce doll O pswf rfik yic, qobs yicf wtbous. Yicf cjpwhhy aors jid asll.`'
- en: 'A good first step in codebreaking is to count the letters in the message. This
    technique, called *frequency analysis*, lets us make educated guesses about what
    each letter represents, based on how often it appears in the text:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 破解密码的一个良好的第一步是计算消息中的字母数。这种称为*频率分析*的技术让我们能够根据每个字母在文本中出现的频率作出合理的猜测：
- en: '![](image_fi/502727c01/g01003.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c01/g01003.png)'
- en: 'As can be seen, the ciphertext letter `s` is the most frequent. It probably
    stands for the plaintext letter `e`, which is the most frequent letter in virtually
    every English text. After `e`, the letters `t`, `a`, and `o` are the next most
    frequent ones in the English language, although it is difficult to identify these
    based on their frequencies alone. However, there is another letter we can easily
    guess by looking at the ciphertext: the word `O` must stand for `I`, as there
    is no other word in the English language that consists of only one capitalized
    letter (unless it is at the beginning of a sentence, in which case, the letter
    `A` would fit).'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，密文中字母`s`出现频率最高。它很可能代表明文中的字母`e`，这是几乎所有英文文本中出现频率最高的字母。在`e`之后，`t`、`a`和`o`是英语中出现次数第二多的字母，尽管仅凭频率很难确定它们。然而，我们可以通过观察密文轻松猜到另一个字母：单词`O`必须代表`I`，因为在英语中除了句首大写字母外，没有其他只有一个大写字母的单词适合。
- en: Further analysis shows that the ciphertext contains the word `yic` three times
    and the word `yicf` twice. The plaintext words `the` and `them` would be good
    guesses, but we’ve already determined that `s` (not `c`) stands for `e`. So, `you`
    and `your` make sense.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步的分析显示，密文中包含单词`yic`三次和单词`yicf`两次。明文单词`the`和`them`是很好的猜测，但我们已经确定`s`（而不是`c`）代表`e`。因此，`you`和`your`是合理的选择。
- en: 'Knowing the ciphertext equivalents of the six plaintext letters `e`, `i`, `y`,
    `o`, `u`, and `r` makes it easy to guess more words. For instance, `ijs` decrypts
    to `o*e` (with the asterisk standing for an unknown letter), which likely means
    `one`. In the end, we receive the following plaintext:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '知道六个明文字母`e`、`i`、`y`、`o`、`u`和`r`的密文等效物，使得猜测更多单词变得容易。例如，`ijs`解密为`o*e`（星号表示未知字母），很可能意味着`one`。最终，我们得到了以下明文：  '
- en: '`PRIVATE advertisement no one knows (two today). Write me first through lough.
    Disgrace you left behind cannot get over. Will endeavour to stay where you left
    us till I hear from you, give your advice. Your unhappy wife not well.`'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`PRIVATE advertisement no one knows (two today). Write me first through lough.
    Disgrace you left behind cannot get over. Will endeavour to stay where you left
    us till I hear from you, give your advice. Your unhappy wife not well.`'
- en: 'If we have access to a computer and a program such as CrypTool 2 (free open
    source software available at [https://cryptool.org](https://cryptool.org)), we
    can use an even more efficient method to break the encrypted advertisement in
    *The Times*: we look for a word in the ciphertext that has a distinctive letter
    pattern. The best candidate we can find is `wtbsfdoesksjd`—it contains the same
    letter (`s`) at the fourth, ninth, and eleventh position, and the sixth and the
    last letter (`d`) are the same, too. All other letters in this word are different.
    CrypTool 2 provides a tool that searches for words with a given repetition pattern
    in a large database. For `wtbsfdoesksjd`, we receive only one hit: `advertisement`.
    This is certainly a common word in a newspaper ad.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有计算机和像 CrypTool 2 这样的程序（这是一个免费的开源软件，可以在[https://cryptool.org](https://cryptool.org)下载），我们可以使用一种更高效的方法来破解《泰晤士报》中的加密广告：我们在密文中寻找一个具有明显字母模式的单词。我们能找到的最佳候选词是
    `wtbsfdoesksjd`——它在第四、第九和第十一位包含相同的字母（`s`），第六位和最后一位字母（`d`）也相同。这个单词中的其他字母都不同。CrypTool
    2 提供了一个工具，可以在大型数据库中搜索具有给定重复模式的单词。对于 `wtbsfdoesksjd`，我们只找到一个匹配项：`advertisement`。这肯定是报纸广告中常见的一个词。
- en: '![](image_fi/502727c01/g01004.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c01/g01004.png)'
- en: 'Assuming that `advertisement` is correct, we can determine the meaning of the
    following letters:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 假设 `advertisement` 是正确的，我们可以确定以下字母的含义：
- en: '`Plaintext:` `a d e i m n r s t v`'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`明文:` `a d e i m n r s t v`'
- en: '`Ciphertext: w t s o k j f e d b`'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`密文: w t s o k j f e d b`'
- en: This information enables us to identify or guess more words. For instance, the
    first word, `HFOBWDS`, represents `*R*VATE`, which can be solved as `PRIVATE`.
    Now we know that the ciphertext letters `H` and `O` stand for `P` and `I`. The
    ciphertext `wtbous` decrypts to `advi*e`, which should be `advice`. (It can’t
    be `advise`, as the `s` is already attributed to another letter.) This also shows
    that ciphertext `u` corresponds to plaintext `c`. We have identified enough letters
    now that we should be able to decipher more words. In the end, we get the plaintext
    given above.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息使我们能够识别或猜测更多的单词。例如，第一个单词 `HFOBWDS` 代表 `*R*VATE`，可以解密为 `PRIVATE`。现在我们知道密文字母
    `H` 和 `O` 分别代表 `P` 和 `I`。密文 `wtbous` 解密为 `advi*e`，这应该是 `advice`。（它不可能是 `advise`，因为
    `s` 已经被分配给了另一个字母。）这也表明密文 `u` 对应明文 `c`。我们现在已经识别了足够多的字母，应该能够解密更多的单词。最后，我们得到了上面给出的明文。
- en: This advertisement appears to be a message from a woman to her husband, who
    has left her. We will probably never learn who created it and why—after all, this
    ad was published 150 years ago. However, from a codebreaker’s point of view, the
    mystery is solved.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这个广告看起来像是一位女性给她离开的丈夫发的消息。我们可能永远也不会知道是谁创造了这个广告，或者为什么——毕竟，这个广告已经发布了 150 年。然而，从破译者的角度来看，这个谜题已经解开。
- en: That was not very difficult, was it? In the course of this book, you will get
    to know more complicated encryption methods, along with more sophisticated techniques
    for breaking them.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 那并不难，对吧？在本书的过程中，你将了解更复杂的加密方法，以及破解它们的更高级技巧。
- en: How do I know what kind of encryption I am dealing with?
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我怎么知道我正在处理哪种加密方式？
- en: Breaking a ciphertext usually requires knowing what kind of encryption method
    has been used. In addition to cipher-breaking methods, we therefore introduce
    in this book several cipher-detecting techniques. Identifying the cipher in use
    can be quite simple or very difficult. It is helpful to know that most messages
    encountered in practice have been encrypted with one of about a dozen methods
    that can usually be distinguished from each other with some analysis.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 破解密文通常需要知道使用了哪种加密方法。因此，除了密码破解方法外，本书还介绍了几种密码检测技术。识别正在使用的密码可能非常简单，也可能非常困难。值得知道的是，大多数实际遇到的消息都已经使用大约十几种加密方法中的一种，而这些方法通常可以通过一些分析加以区分。
- en: If you want to identify a particular cipher without reading the whole book,
    the following paragraphs will give you some guidance.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想识别特定的密码，而不是阅读整本书，以下段落将为你提供一些指导。
- en: If the encrypted text you want to solve looks like this^([4](b06.xhtml#c01-endnote-4))
    . . .
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想破解的加密文本看起来像这样^([4](b06.xhtml#c01-endnote-4)) . . .
- en: '![](image_fi/502727c01/g01005.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c01/g01005.png)'
- en: . . . or like this^([5](b06.xhtml#c01-endnote-5)) . . .
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: . . . 或者像这样^([5](b06.xhtml#c01-endnote-5)) . . .
- en: '![](image_fi/502727c01/g01006.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c01/g01006.png)'
- en: . . . or like this . . .
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: . . . 或者像这样 . . .
- en: '![](image_fi/502727c01/g01007.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c01/g01007.png)'
- en: . . . or like this . . .
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: . . . 或者像这样 . . .
- en: '`SIAA ZQ LKBA. VA ZOA RFPBLUAOAR!`'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`SIAA ZQ LKBA. VA ZOA RFPBLUAOAR!`'
- en: . . . the cipher is likely substitution, and you should read Chapters [3](c03.xhtml),
    [4](c04.xhtml), and [5](c05.xhtml).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: If the cryptogram you want to solve looks like this^([6](b06.xhtml#c01-endnote-6))
    . . .
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c01/g01008.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
- en: . . . check out [Chapter 7](c07.xhtml) (on codes and nomenclators).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: If your ciphertext looks like this^([7](b06.xhtml#c01-endnote-7)) . . .
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c01/g01009.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
- en: . . . it is likely a turning grille encryption, which is covered in [Chapter
    11](c11.xhtml).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: If the encrypted text you want to solve looks like this^([8](b06.xhtml#c01-endnote-8))
    . . .
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c01/g01010.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
- en: . . . or like this . . .
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c01/g01011.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
- en: . . . check [Chapter 13](c13.xhtml) (abbreviation ciphers).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: If the encrypted text you want to solve looks like this . . .
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '`218.57 106.11 8.93 17.61 223.64 146.7 244.53 224.21 20 192.5 160.19 99.39
    No. 8 251.70 1 223.64 58.89 151.79 226.69 8.93 40.12 149.9 248.101 167.12 252.35
    12.31 135.100 149.9 145.76 225.53 212.25 20 241.6 222.22 78.45 12.31 66.28 252.33
    158.33 6.65 20 2 11.50 142.37 223.87 12.31 142.37 105.33 142.37 157.20 58.62 133.89
    250.86.`'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: . . . read [Chapter 14](c14.xhtml) (on dictionary codes and book ciphers).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: If you are dealing with five-letter groups . . .
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c01/g01012.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
- en: . . . there are several possibilities, the most likely being a code ([Chapter
    7](c07.xhtml)), a transposition cipher (Chapters [9](c09.xhtml) and [10](c10.xhtml)),
    a digraph substitution ([Chapter 12](c12.xhtml)), or a machine cipher ([Chapter
    15](c15.xhtml)).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: If your cryptogram doesn’t look like any of these, or if you are not sure which
    category fits best, we’re afraid you may need to read one chapter after another
    until you find what you are looking for.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: I have found an encrypted text in the attic; can you decipher it for me?
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Maybe! Did you find an encrypted postcard from your great-grandfather? Did you
    purchase an encrypted notebook at a flea market? Do you still own a cipher message
    your best friend sent you back in your childhood days? If so, you can try to break
    the message with one of the techniques described in this book.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: If you are not successful, or if you simply do not want to invest the time to
    solve a cryptogram yourself, feel free to send it to us. (Our email addresses
    are in the “I have a comment” section at the end of this chapter.) Of course,
    we can’t investigate every crypto mystery we receive, but in many cases, we can
    help. We are particularly interested in historical examples, less so in systems
    someone has invented in the modern day. Klaus is always searching for interesting
    encrypted texts he can write about, and Elonka has a website for famous unsolved
    codes. We don’t guarantee anything, let alone that your mystery will be solved,
    but we will at least look at it.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: 'If you send us a cryptogram you have found, please provide the following information:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Tell us what you know about the cryptogram’s background. Where did you find
    it? Who created it? Do you have any other information, such as the time period
    when it was created? Was it sent to or from someone you know? Which languages
    did this person speak? Information of this kind can be extremely helpful for a
    codebreaker.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 告诉我们您对密码学背景了解多少。您在哪里找到它？谁创建了它？您是否有任何其他信息，例如创建时期？它是由您认识的人发送还是接收的？这个人讲过哪些语言？这类信息对于破译者非常有帮助。
- en: Tell us if we may publish this cryptogram (such as on the internet or in a book
    like this) or if you want to keep it confidential. Of course, we won’t publish
    anything without the consent of the sender.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请告诉我们是否可以发布这个密码（比如在互联网上或者像这样的书中），或者您希望保密。当然，未经发件人同意，我们不会发布任何内容。
- en: In case you allow us to publish a cryptogram, tell us if you would like credit
    for it and/or if we may mention your name.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您允许我们发布密码，告诉我们是否愿意署名，和/或者我们是否可以提及您的名字。
- en: I have encrypted a text myself; can you break it?
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我自己加密了一段文本；你能破解吗？
- en: While we are always very interested in genuine historical and classical ciphers,
    we generally cannot help with newer items. This is in large part because of the
    quantity of mail that we get; plus, it is far too easy for someone to compile
    a bunch of random text and proclaim, “Break my code!”
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们对真正的历史和经典密码始终充满兴趣，但通常无法帮助处理较新的项目。这在很大程度上是因为我们收到的邮件数量很多；此外，有人编译一堆随机文本并宣称“破解我的密码！”也太容易了。
- en: We make exceptions when a particular cipher has been drawing a great deal of
    public interest. For instance, if an encrypted message is presented in an artwork,
    as an inscription on a building, on a gravestone, or in some other unusual way,
    it might be intriguing to a larger audience. In addition, offering a cash reward
    or some other prize for solving a crypto puzzle is a good way to make a new puzzle
    more attractive. We might also take interest in crypto challenges published by
    the NSA or another organization with a relationship to codebreaking.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当特定密码引起公众极大兴趣时，我们会例外。例如，如果加密消息呈现在艺术作品中，如建筑物的铭文、墓碑上，或以其他不寻常的方式，可能会引起更广泛的观众兴趣。此外，为解决密码谜题提供现金奖励或其他奖励是使新谜题更具吸引力的良好方法。我们也可能对由NSA或其他与密码破译有关系的组织发布的密码挑战感兴趣。
- en: If you like to design encryption challenges, we recommend joining the American
    Cryptogram Association, which is always looking for people to craft puzzles for
    their regular newsletter. You may also wish to visit the crypto puzzle platform
    MysteryTwister ([https://mysterytwister.org](https://mysterytwister.org)) and
    submit a challenge.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您喜欢设计加密挑战，我们建议加入美国密码协会，该协会始终在寻找人来为他们的定期通讯编写谜题。您也可以访问密码谜题平台MysteryTwister（[https://mysterytwister.org](https://mysterytwister.org)）并提交挑战。
- en: I have invented a new encryption method; can you take a look at it?
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我发明了一种新的加密方法；你能看一下吗？
- en: Like everyone who has a certain level of prominence on the crypto scene, we
    often receive communications from people who have invented their own encryption
    method and want us to review or crack it. To be honest, we have never been sent
    such a system that was solid or seemed a good use of our time, so in all seriousness,
    it is probably not a good idea to do this.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 就像每一个在密码学界具有一定声望的人一样，我们经常收到那些发明了自己加密方法的人发来的通讯，希望我们审查或破解。老实说，我们从未收到过一个坚固或看起来是我们花时间的好系统，所以认真地讲，这可能不是一个好主意。
- en: If you have created a method that is related to one of the many manual ciphers
    we cover in this book, it is likely very crackable, as there are many methods,
    especially with modern computers, to take these apart. New ciphers must compete
    with state-of-the-art crypto algorithms such as AES, Diffie-Hellman, and RSA (which
    are not within the scope of this book). Designing an encryption algorithm that
    can play in the big leagues is a difficult task, and even highly trained experts
    usually need several years of effort to create a good encryption algorithm.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您创建的方法与我们在本书中介绍的许多手动密码之一相关，那么很可能是可破解的，因为有很多方法，特别是现代计算机可以解开这些密码。新密码必须与AES、Diffie-Hellman和RSA等现代密码算法竞争（这些算法不在本书的范围内）。设计一个能在大联盟中立足的加密算法是一项艰巨的任务，即使是经过高度训练的专家通常也需要数年的努力才能创建一个良好的加密算法。
- en: So, if you are new to the field of encryption technology and really want to
    design a new system, we recommend first getting a good cryptography book and studying
    encryption algorithms that already exist. For example, *CryptoSchool* (2015) by
    Joachim von zur Gathen^([9](b06.xhtml#c01-endnote-9)) is a comprehensive introduction,
    while *Serious Cryptography* (2017), written by Jean-Philippe Aumasson,^([10](b06.xhtml#c01-endnote-10))
    is a shorter alternative. If you can read German, you should try Klaus’s book
    *Kryptografie—Verfahren, Protokolle, Infrastrukturen* (2016).^([11](b06.xhtml#c01-endnote-11))
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果您是加密技术领域的新手，并且真的想设计一个新系统，我们建议先找一本好的密码学书籍，并学习已经存在的加密算法。例如，Joachim von zur
    Gathen 的 *CryptoSchool*（2015）^([9](b06.xhtml#c01-endnote-9)) 是一个全面的介绍，而Jean-Philippe
    Aumasson的 *Serious Cryptography*（2017）^([10](b06.xhtml#c01-endnote-10)) 是一个更简短的替代方案。如果您懂德语，可以尝试克劳斯的书
    *Kryptografie—Verfahren, Protokolle, Infrastrukturen*（2016）。^([11](b06.xhtml#c01-endnote-11))
- en: For a related opinion on this phenomenon of crypto experts continually receiving
    examples of crackable systems, we strongly recommend Bruce Schneier’s 1998 essay
    “Memo to the Amateur Cipher Designer.”^([12](b06.xhtml#c01-endnote-12)) It’s over
    two decades old but still relevant. In a nutshell, Schneier says (and we agree)
    that to attempt to create a new cipher system, it is first essential to have substantial
    experience in breaking existing systems.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 关于密码专家持续收到可破解系统示例的相关观点，我们强烈推荐Bruce Schneier 1998年的文章“给业余密码设计者的备忘录”。^([12](b06.xhtml#c01-endnote-12))
    虽然已经二十多年了，但仍然相关。总之，Schneier说（而我们也同意），要尝试创建新的密码系统，首先必须有足够的经验来破解现有系统。
- en: I have solved a famous unsolved cryptogram; what should I do?
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我已解决了一个著名的未解密密码; 我应该做什么？
- en: In this book, we introduce dozens of unsolved cryptograms. Some of them, such
    as the Voynich manuscript, are quite famous, while others, such as the cigarette
    case cryptogram, have not received much attention yet. (Both of these cryptograms
    can be seen in [Chapter 5](c05.xhtml).) A list of famous cryptograms is available
    on Elonka’s website,^([13](b06.xhtml#c01-endnote-13)) and Klaus has published
    his top-fifty unsolved cryptograms on his own blog.^([14](b06.xhtml#c01-endnote-14))
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们介绍了几十个未解密的密码。其中一些，如弗因曼手稿，非常有名，而其他一些，如香烟盒密码，尚未引起太多关注。（这些密码都可以在[第5章](c05.xhtml)中找到。）著名密码列表可在埃隆卡的网站上找到，^([13](b06.xhtml#c01-endnote-13))
    克劳斯在他自己的博客上发布了他的前五十个未解密码。^([14](b06.xhtml#c01-endnote-14))
- en: Virtually every popular unsolved ciphertext has received numerous dubious solutions.
    The more famous a cryptogram is, the more people claim to have solved it. At least
    sixty “solutions” to the Voynich manuscript have been published. Other favorites
    include the two remaining Zodiac Killer cryptograms, the Dorabella cryptogram,
    and the fourth *Kryptos* message. (We will come back to these mysteries later.)
    The internet is littered with doubtful solutions to famous cryptograms.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每个流行的未解密文本都收到了许多可疑的解决方案。一个密码越是有名，越有人声称已解决它。至少有六十种“解决方案”已发表关于弗因曼手稿。其他受欢迎的包括剩下的两个神秘杀手密码、多拉贝拉密码和第四条
    *克里普托斯* 消息。（我们稍后将回到这些谜题。）网络上充斥着对著名密码的可疑解决方案。
- en: If you are a serious codebreaker and believe you have found the solution to
    an unsolved cryptogram, the first thing to do is challenge your own solution.
    Could you describe the method simply enough that a third party could use it and
    generate the same result? Ask yourself if the decryption process you have discovered
    is straightforward and does not involve too many tweaks and exceptions. Check
    if the resulting plaintext is meaningful without requiring dozens of alterations
    and interpretations. Finally, read Ryan Garlick’s 2014 essay “How to Know That
    You Haven’t Solved the Zodiac-340 Cipher.”^([15](b06.xhtml#c01-endnote-15)) (It’s
    about alleged solutions to the second Zodiac cryptogram, but most of the content
    can be generalized to other cipher mysteries.)
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是一位严肃的密码破解者，并且相信自己已经找到了未解密码的解决方案，那么首先要做的是挑战自己的解决方案。您能简单地描述这种方法，以便第三方能够使用它并产生相同的结果吗？问问自己，您发现的解密过程是否简单明了，不涉及太多的调整和例外。检查结果明文是否意义明确，而不需要大量的修改和解释。最后，阅读Ryan
    Garlick 2014年的文章“如何知道您未解决神秘的Zodiac-340密码”。^([15](b06.xhtml#c01-endnote-15)) （这篇文章讨论了对第二个神秘杀手密码的所谓解决方案，但其中大部分内容也适用于其他密码谜题。）
- en: If your solution does make sense, we are, of course, extremely interested in
    learning about it. If you have solved a cryptogram that is mentioned on Elonka’s
    list, you can even expect to become a famous codebreaker.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Before you tackle one of the “Mount Everests” of codebreaking, we recommend,
    dear reader, that you start with cryptograms that have already been solved, of
    which you will find many in this book. Then, perhaps, proceed to the lesser-known
    unsolved ones. Some of these have not yet received much attention in the research
    community, so your chances of success are improved. The codebreaking methods you
    will learn about in this book might help you succeed. And who knows? One day,
    you might even master one of the world’s most famous unsolved cipher challenges!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: What tools do I need for codebreaking?
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This book focuses on breaking pencil-and-paper ciphers, not on modern computer-based
    encryption. However, this doesn’t mean that we don’t use computers for our codebreaking
    work. Here are the three most important computer utilities we use in this book
    (all of which are available for free):'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: CrypTool 2 ([https://cryptool.org](https://cryptool.org)) is a crypto learning
    program developed by an international team headed by Bernhard Esslinger. Among
    other things, it supports many helpful codebreaking tools. The CrypTool project
    also offers e-learning programs for cryptography and cryptanalysis, such as CrypTool
    1, JCrypTool, and CrypTool-Online.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The website dCode ([https://dcode.fr/en](https://dcode.fr/en)), operated by
    an anonymous group of crypto-enthusiasts, provides numerous helpful codebreaking
    and statistics tools.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cipher Tools ([https://rumkin.com/tools/cipher/](https://rumkin.com/tools/cipher/))
    is a large collection of classical cryptanalysis tools maintained by Tyler Akins.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looking for more utilities? Check our codebreaking tools list in [Chapter 17](c17.xhtml).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: How can I encrypt my files and email?
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Please note that the encryption techniques covered in this book should not be
    used to encrypt valuable secrets. This book deals with pencil-and-paper (i.e.,
    manual) encryption. While studying manual encryption is interesting and important
    for several reasons, using this kind of encryption for sensitive data is completely
    outdated. If you need a tool to encrypt your computer files, look for a good encryption
    program such as the open source VeraCrypt or Philip Zimmermann’s well-known PGP.
    Programs of this kind use modern encryption algorithms, including AES, Diffie-Hellman,
    and RSA, which can’t be broken with today’s technology.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: I have a comment on this book; what should I do?
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you like this book, don’t like it, have found a mistake, or just have a comment,
    please send us an email at [codebreaking.guide@gmail.com](http://mailto:codebreaking.guide@gmail.com).
    You may also wish to check the errata page at [https://codebreaking-guide.com/errata](https://codebreaking-guide.com/errata)
    to see if a mistake has already been reported. Feedback is extremely important
    for us.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: Who contributed to this book?
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We want to express special thanks to Tyler Akins, Michelle Barette, Kent D.
    Boklan, Bill Briere, Magnus Ekhall, Zachary Epstein, Thomas Ernst, Bernhard Esslinger,
    Dan Fretwell, Lawrence McElhiney, Dave Oranchak, Tobias Schrödel, Dale Sibborn,
    Gerhard Strasser, Erica Swearingen, and Satoshi Tomokiyo for their enthusiastic
    and comprehensive proofreading.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: We would also like to thank John Allman; Christiane Angermayr; Lucia Angermayr
    (RIP); Nicolay Anitchkin; Eugen Antal; Philip Aston; Guy Atkins; Leopold Auer;
    Marc Baldwin; Paul Barron; Max Bärtl; Craig Bauer; Christian Baumann; Richard
    Bean; Stefan Beck; Arianna Benini; Neal Bennett; Yudhijit Bhattacharjee; Norbert
    Biermann; Peter Bisno; Sam Blake; Bob Bogart; Paolo Bonavoglia; Raymond Borges;
    Thomas Bosbach; Gert Brantner; Dan Brown (yes, *the* Dan Brown!); Ralf Bülow;
    Chris Christensen; Frank Corr; Nicolas Courtois; Carola Dahlke; Jason Davidson;
    Melissa Davis; Deb Desch; Whitfield Diffie; Jörg Drobick; Stanley Dunin; Ralph
    Erskine (RIP); Jarl Van Eycke; Jason Fagone; Cheri Farnsworth; Nick Fawcett; Gérard
    Fetter; Heathyr Fields; Frank Förster; Andrew Furlong; Tom (Monty) Fusco; Tony
    Gaffney; Jim Gandy; Joachim von zur Gathen; Declan Gilligan; Jim Gillogly; Dan
    Girard; Nicole Glücklich; Frank Gnegel; Marek Grajek; Joel Greenberg; Jackie Griffith;
    Marc Gutgesell; Sandi Hackney; Karsten Hansky; Louie Helm; Lonnie Henderson; Jürgen
    Hermes; Jan Henrik Holst; Michael Hörenberg; Günter Hütter; A.J. Jacobs; Ralf
    Jäger; JannaK; David Kahn; Bryan Kesselman; Manfred Kienzle; Michael Kirk; Gary
    Klivans; Oliver Knörzer; Stuart Kohlhagen; Daniel Kolb; Anatoly Kolker; Klaus
    Kopacz; Nils Kopal; Armin Krauß; Teresa Kuhl; Oliver Kuhlemann; Benedek Láng;
    Jew-Lee Lann-Briere; George Lasry; Karl de Leeuw (RIP); Jon, Beth, Peter, and
    Amber Leonard; Peter Lichtenberger; Greg Lloyd; Joe Loera; Krista van Loon; Tom
    Mahon; Denny McDaniels (RIP); Glenn McIntosh; John McVey; Hans van der Meer; Beáta
    Megyesi; Glen Miranker; Didier Müller; Wolfgang Müller; Walter C. Newman; Jim
    Oram; Olaf Ostwald; Nick Pelling; Klaus Pommerening; Beryl Pratt; Duncan Proudfoot;
    Katja Rasch; Jim Reeds; Paul Reuvers; Dirk Rijmenants; Sara Rivers-Cofield; Richard
    SantaColoma; D.P.J.A. Scheers; Volker Schmeh; Wolfgang Schmidt; Leon Schulman;
    Dale Sibborn; Linda Silverman; Marc Simons; Ralph Simpson; Rob Simpson; Dale Speirs;
    Rene Stein; Moritz Stocker; Christoph Tenzer; Satoshi Tomokiyo; Dermot Turing;
    Alexander Uliyanenkov; Ilona Sofia Vine; TJ Dunin Vine; Arno Wacker; Rich Wales;
    Frode Weierud; Meg Welch; Bart Wenmeckers; Bart Wessel; David Allen Wilson; Richard
    van de Wouw; Ruth Wüst; YefimShifrin; Gordon Young; DeEva Zabylivich; René Zandbergen;
    and Philip Zimmermann for their contributions, either to the book or to relevant
    discussions.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, we appreciate the support of the Aargau Cantonal Library in Switzerland;
    the American Cryptogram Association; the Beale’s Beer restaurant; the British
    Library; the dCode group; the Deutsches Museum (Munich, Germany); the Franz Steiner
    Verlag; the George C. Marshall Foundation (Lexington, VA); the Heinz Nixdorf MuseumsForum
    (Paderborn, Germany); the John F. Kennedy Presidential Library and Museum; the
    Kryptologikum (Karlsruhe, Germany); the Lehrsammlung für Nachrichten-, Fernmelde-
    und Informationstechnik der Bundeswehr (Feldafing, Germany); the Louis Round Wilson
    Special Collections Library at the University of North Carolina, Chapel Hill;
    the Museum für Kommunikation (Frankfurt, Germany); the Museum of Freemasonry,
    London; the National Cryptologic Museum (Fort Meade, MD); the New York Chancellor
    Robert R. Livingston Masonic Library and Museum; the New York State Archives;
    the New York State Military Museum; the Niedersächsisches Landesarchiv Abteilung
    Wolfenbüttel; the Royal Collection, The Netherlands; the Schreibmaschinenmuseum
    Beck (Pfäffikon, Switzerland); Touchstone Films; and Walt Disney Pictures; along
    with all of our internet friends: blog readers, friends, and participants from
    Facebook, Reddit, the Kryptos Group, and others around the World Wide Web.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
