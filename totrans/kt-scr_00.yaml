- en: <hgroup>
  prefs: []
  type: TYPE_NORMAL
- en: INTRODUCTION
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: </hgroup>
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/icon.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This book will teach you to code from scratch using Kotlin, one of the most
    exciting programming languages used today. Along the way, you’ll learn to think
    like a problem solver and programmer. Through 37 hands-on projects, you’ll develop
    applications that can tackle a wide range of fun and challenging problems, from
    basic math and science to advanced applications in algorithms and optimization.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll learn the most from this book if you have a curious mind. You embrace
    thinking systematically and are not hesitant to ask why things behave the way
    they do, challenge commonly held assumptions, and explore unique perspectives.
    This book will help you use those skills to uncover the inherent complexities
    of real-world problems and build simplified mathematical models to explore what-if
    scenarios. Kotlin, a simple, elegant, and powerful general-purpose language, is
    an excellent tool for these purposes.
  prefs: []
  type: TYPE_NORMAL
- en: Prepare for a journey where coding isn’t just a skill but a way to unlock your
    imagination and problem-solving capabilities. With code, you can tackle problems
    that would be intractable without a computer, conduct in-depth analysis, and generate
    fascinating and useful insights.
  prefs: []
  type: TYPE_NORMAL
- en: The Power of Coding
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Coding is the process of creating instructions that computers can understand
    and execute. It has revolutionized the way we live and work. Coding powers almost
    every modern device, from software, websites, mobile apps, smartwatches, and smartphones
    to the Mars rover exploring a distant world 140 million miles away.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some reasons you may want to learn to code:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Build valuable skills** In today’s digital age, coding is a highly sought-after
    ability that opens up numerous career opportunities. It also helps you improve
    your critical-thinking and problem-solving abilities.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Automate tasks** You can code programs that perform repetitive tasks faster
    and more accurately than humans. For example, many manufacturing processes are
    now done by robots that follow coded instructions.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Quickly analyze large amounts of data** Coding skills are essential for analysts
    working with increasingly large quantities of data. You can use coding to extract
    insights from large datasets and to help make data-driven decisions.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Build your own projects** Programming your own software, websites, or mobile
    apps can be a fun and rewarding way to bring your ideas to life, express your
    creativity, and earn some extra money.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Have fun** Coding can be a fun and rewarding hobby that allows you to create
    something from scratch and see it come to life.'
  prefs: []
  type: TYPE_NORMAL
- en: Coding is for everyone, regardless of age, background, or interest. All you
    need is a computer, an internet connection, and a willingness to learn. Why not
    give it a try?
  prefs: []
  type: TYPE_NORMAL
- en: Why Kotlin?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Kotlin is a modern, general-purpose programming language first officially released
    in 2016 by JetBrains, its parent company. Kotlin was named after Kotlin Island,
    near Saint Petersburg in the Baltic Sea. This follows the tradition of Kotlin’s
    parent language, Java, which, according to some sources, was named after an island
    in Indonesia.
  prefs: []
  type: TYPE_NORMAL
- en: Kotlin runs on the same platform as Java, the Java Virtual Machine, and is fully
    compatible with Java. However, Kotlin is much more concise and expressive, with
    its own unique features. As a relatively new programming language, it has had
    the benefit of 20/20 hindsight, meaning it incorporates some of the best features
    from other popular languages that predate it. It provides many ways to reuse code
    between multiple platforms, and its clean language design and powerful features
    offer a pleasant developer experience.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some of the key advantages of Kotlin:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Easy to learn** Because Kotlin’s syntax is concise and easy to read, you
    can learn it more quickly than many other programming languages.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Versatile** Kotlin is widely used for mobile applications (especially Android
    apps), but you can also use it to develop full-stack web and cross-platform applications
    that run on Windows, Mac, or Linux devices.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Safe** Kotlin’s type system helps you avoid null pointer exceptions and common
    errors that are difficult to handle in other programming languages such as Python,
    C, and C++.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Supports multiple programming styles** You can choose your preferred way
    to code in Kotlin, whether procedural, structured, object oriented, or functional.
    You can also combine different styles as needed. (Projects in this book use elements
    of all these styles.)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Interoperable with Java** You can use Kotlin alongside Java, meaning you
    can use Java code and libraries in Kotlin programs, which makes it easier to migrate
    from Java to Kotlin. Many enterprise-level applications were written in Java and
    are now being migrated to Kotlin for easy maintenance. As an additional benefit,
    Java libraries are more mature, and Kotlin can use them while new Kotlin-specific
    libraries are being developed.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Popular** Kotlin is one of the fastest-growing programming languages and
    has become very popular since Google recognized it as the preferred language for
    Android app development. Kotlin developers are in high demand in the software
    industry.'
  prefs: []
  type: TYPE_NORMAL
- en: In short, Kotlin is a versatile programming language that can be used for both
    commercial and noncommercial applications. It’s beginner-friendly and suitable
    for first-time learners who want to explore its features and build their programming
    skills while solving real-world problems.
  prefs: []
  type: TYPE_NORMAL
- en: Who Is This Book For?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This book is for anyone who wants to learn how to use a fun, modern programming
    language to tackle real-world problems that cannot be solved manually. It does
    not assume any prior coding knowledge, though familiarity with another programming
    language will help you move through the covered topics more quickly.
  prefs: []
  type: TYPE_NORMAL
- en: This book is not a traditional textbook on coding, nor is it a comprehensive
    reference manual on Kotlin. Instead, it teaches you to think systematically and
    strategically, helping you develop problem-solving strategies before diving into
    code development.
  prefs: []
  type: TYPE_NORMAL
- en: This book takes a hands-on approach. Throughout the book, you’ll learn by working
    through numerous examples, full-length projects, and exercises. You’ll use fundamental
    principles from math and science to construct simplified mathematical descriptions
    of the underlying problems (we call them models), and then develop Kotlin applications
    to solve those problems efficiently and quickly. In addition, the book’s projects
    demonstrate core concepts from numerical analysis and computer science, such as
    convergence and stability, time and space complexity, recursion, sorting, searching,
    and several nature-inspired stochastic optimization techniques.
  prefs: []
  type: TYPE_NORMAL
- en: This book does not cover advanced Kotlin topics such as generics, extensions,
    type aliases, or coroutines, which are more suitable for complex applications.
    It also does not cover computer science concepts such as advanced data structures
    and design patterns, or how to develop Android apps with Kotlin. It’s impossible
    to cover all that ground in a single book. Instead, this book will help you master
    essential Kotlin features and skills that will prepare you for further learning
    and exploration.
  prefs: []
  type: TYPE_NORMAL
- en: What’s in This Book?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This book is organized into four parts and nine chapters. Each chapter includes
    core concepts, examples, one or more full-length projects, and exercises.
  prefs: []
  type: TYPE_NORMAL
- en: '[Part I](part1.xhtml) covers essential coding skills in the first three chapters.
    Read these chapters sequentially to build a foundational understanding of Kotlin
    and its core features.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 1](chapter1.xhtml): Kotlin Basics** Introduces Kotlin basics like
    comments, variables, operators, flow control, functions, lambdas, and input/output.
    Teaches you to write clear, concise, and reusable code via many examples and exercises,
    and walks you through a console-based calculator project.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 2](chapter2.xhtml): Arrays, Collections, and Classes** Introduces
    data manipulation and object-oriented programming. Explains how to use arrays,
    lists, mutable lists, classes, encapsulation, inheritance, polymorphism, abstract
    classes, interfaces, and enum classes. Discusses the benefits and trade-offs of
    each concept and how to apply them in your programs. The project in this chapter
    involves developing a simple console-based task management app.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 3](chapter3.xhtml): Visualizing with JavaFX** Covers the basics
    of JavaFX, a toolkit for creating graphical user interfaces and data visualization.
    Explores JavaFX components such as Stage, Scene, layout containers, and nodes.
    Teaches you to use various types of charts, add dynamic simulation in your code
    using JavaFX’s animation feature, and use the Canvas tool for free-form drawing
    through a series of projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Part II](part2.xhtml), “Applications in Math and Science,” contains a series
    of short projects that introduce new concepts and allow you to apply your newly
    acquired coding skills to real-world problems.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 4](chapter4.xhtml): Solving Mathematical Problems with Code** Demonstrates
    how to use Kotlin code and algorithms to solve mathematical problems with real-world
    applications. Covers various concepts and tools from mathematics, such as arithmetic,
    trigonometry, the Pythagorean theorem, the Fibonacci sequence, the haversine formula,
    modulo operations, and linear algebra. Explores stochastic processes and random
    number generation and leverages many core features of Kotlin, such as variables,
    data classes, conditional and iterative structures, and library functions.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 5](chapter5.xhtml): Modeling and Simulation** Shows how to model
    and simulate the motion of various physical systems, such as cannonballs, water
    fountains, pendulums, thermal heating and cooling, and binary stars. Uses math,
    visualization, and animation to help you understand the dynamics and behavior
    of these systems over time.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Part III](part3.xhtml), “Recursion, Sorting, and Searching,” presents more
    advanced concepts and tools that will require significant effort to master, resulting
    in significant rewards. All key concepts are developed and explored as independent
    projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 6](chapter6.xhtml): Recursive Functions and Fractals** Introduces
    the fantastic world of fractals, self-similar patterns that repeat at different
    scales. Teaches you how to use recursive functions, L-systems, and the Mandelbrot
    set to generate fractals, then render the fractals and explore their properties
    with JavaFX.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 7](chapter7.xhtml): Sorting and Searching** Focuses on sorting and
    searching, two fundamental topics in computer science and data science. Shows
    you how to implement and compare three common sorting algorithms (insertion sort,
    merge sort, and quick sort) and explore three graph traversal algorithms (depth-first
    search, breadth-first search, and A*). Explains how to use stacks, queues, lists,
    and maps to store and manipulate data for sorting and searching. Also discusses
    the time and space complexities of these algorithms using big O notation.'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, [Part IV](part4.xhtml), “Optimization with Nature-Inspired Algorithms,”
    introduces cutting-edge ideas learned from the natural world that will help you
    solve difficult optimization problems. These methods will also introduce you to
    the world of stochastic (probabilistic) and heuristic algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 8](chapter8.xhtml): The Genetic Algorithm** Discusses the advantages
    and challenges of using stochastic algorithms, which exploit randomness to deal
    with intractable or complex problems. Explores genetic algorithms, a class of
    process-based nature-inspired algorithms (NIAs) that have been used to solve problems
    involving text matching, combinatorial optimization (the knapsack problem), and
    finding global optima for a multivariate function by developing three separate
    applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 9](chapter9.xhtml): Agent-Based Algorithms** Covers two agent-based
    NIAs: particle swarm optimization and ant colony systems. Shows how to harness
    the power of these algorithms in Kotlin by creating applications for function
    optimization and solving a traveling salesman problem.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Afterword](afterword.xhtml)** A short section that tells you where to go
    next to continue your coding journey by enhancing your coding skills and learning
    other advanced features of Kotlin.'
  prefs: []
  type: TYPE_NORMAL
- en: The Projects
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The 37 projects in this book are designed to help you flex your coding and
    problem-solving skills. Each project poses an interesting challenge, systematically
    outlines a strategy for solving it, and walks you through implementing that strategy
    as a Kotlin app. All code and background information relevant to the problem are
    thoroughly explained. Here’s a look at each of the projects and everything you’ll
    accomplish as you work through them:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 1](chapter1.xhtml#pre-1): Build a Console-Based Calculator Learn to
    think through a problem systematically and develop a well-organized program to
    solve it. Utilize core Kotlin language features such as conditionals and functions
    to design an interactive calculator and practice validating user input.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 2](chapter2.xhtml#pre-2): Build a Versatile Task Manager Design and
    implement a console-based task manager application that enables users to add and
    delete tasks, display the task list, update task statuses, and more. Structure
    the app and its data using lists, classes, and data classes and incorporate robust
    error handling as well.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 3](chapter3.xhtml#pre-3): Build “Hello, World!” in JavaFX Discover
    the classes and layout containers that form the fundamental building blocks of
    any JavaFX visualization. This project serves as a basic template for subsequent
    projects requiring more elaborate visualization schemes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 4](chapter3.xhtml#pre-4): Visualize Data as a Bar Chart Learn about
    the core charting tools of JavaFX by creating a bar chart using the monthly sales
    data from a fictitious company. Plot text data on one axis and numeric data on
    the other.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 5](chapter3.xhtml#pre-5): Create a Multiseries Line Chart Visualize
    multiple datasets at once by developing a line chart that compares the average
    heights of men and women of different ages. Plot numeric data to both the x- and
    y-axes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 6](chapter3.xhtml#pre-6): Draw a Spiral Seashell Use Kotlin’s built-in
    trigonometric functions along with the JavaFX canvas to draw a spiral seashell.
    This is the first of many projects where you’ll leverage the powerful free-form
    drawing features of JavaFX to create a complex two-dimensional image.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 7](chapter3.xhtml#pre-7): Animate a Square Define the start and end
    state of a solid red square and let JavaFX transitions do their magic by smoothly
    moving the square back and forth inside the graphics window.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 8](chapter3.xhtml#pre-8): Animate a Bouncing Ball Harness JavaFX’s
    powerful timeline and keyframe features and manipulate object properties to create
    captivating motion. Animate a ball gracefully gliding inside a rectangular box.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 9](chapter4.xhtml#pre-9): Find the Square Root with the Babylonian
    Algorithm  Develop a simple app that converges on the square root of any positive
    number by iteratively refining an approximation of its value. Try to figure out
    what technique Kotlin’s built-in square root function employs to do the same.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 10](chapter4.xhtml#pre-10): Create Pythagorean Triples with Euclid’s
    Formula  Implement Euclid’s method for generating Pythagorean triples (sets of
    integers where the sum of the squares of the first two numbers equals the square
    of the third number).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 11](chapter4.xhtml#pre-11): Identify Prime Numbers with the Sieve
    of Eratosthenes  Take a peek into the world of prime numbers and utilize an ingenious
    method developed by Eratosthenes to reveal them up to a given integer.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 12](chapter4.xhtml#pre-12): Calculate Earth’s Circumference the Ancient
    Way Time travel back to ancient Egypt to re-create an experiment that uses simple
    trigonometry to estimate Earth’s circumference and radius with remarkable accuracy.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 13](chapter4.xhtml#pre-13): Code the Fibonacci Sequence Generate a
    list of Fibonacci numbers from scratch and then draw the Fibonacci spiral. Use
    advanced JavaFX features to explore how these concepts are embedded in both natural
    and man-made systems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 14](chapter4.xhtml#pre-14): Find the Shortest Distance Between Two
    Locations on Earth Utilize the haversine formula and an understanding of latitude
    and longitude to calculate the shortest distance between any two locations on
    Earth’s surface while accounting for Earth’s spherical shape.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 15](chapter4.xhtml#pre-15): Do Encryption with the Hill Cipher Implement
    a classic encryption algorithm that’s based on the linear transformations of texts.
    Convert plaintext into ciphertext and vice versa using vectors, matrices, and
    modular arithmetic while employing multidimensional array operations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 16](chapter4.xhtml#pre-16): Simulate a One-Dimensional Random Walk Learn
    to simulate random processes by investigating how far an entity will travel after
    taking n random steps. Use the root-mean-squared (RMS) distance to measure how
    far the walker goes, and run the simulation thousands of times to compare the
    simulated RMS values with theoretical ones.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 17](chapter5.xhtml#pre-17): Predict the Flight of a Cannonball Employ
    the bisection numerical method to find the root of a nonlinear function in order
    to tackle the age-old problem of determining the correct firing angle for a cannonball.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 18](chapter5.xhtml#pre-18): Design a Fountain with Water Jets Continue
    exploring the physics of projectiles by designing a multitier water fountain.
    Combine core Kotlin skills with advanced JavaFX techniques to generate and display
    the fountain’s structure and the water jets’ trajectories.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 19](chapter5.xhtml#pre-19): Track a Pendulum’s Motion and Phase Leverage
    Newtonian laws of motion and gravity to calculate and plot a pendulum’s angular
    displacement and velocity along with its phase-space over time. Incorporate the
    impact of air drag to make the pendulum’s motion more realistic.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 20](chapter5.xhtml#pre-20): The Physics of Coffee Cooling Create a
    Kotlin app that tackles a quintessential dilemma: Should you add cream to your
    coffee when you buy it at the coffee shop or when you get back to the office?
    Apply principles of Newtonian cooling to keep your coffee as warm as possible.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 21](chapter5.xhtml#pre-21): Simulate a Binary Star System Animate
    the intricate dance of two stars orbiting each other. As time progresses, the
    stars gracefully trace their paths, allowing a delightful exploration of stellar
    dynamics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 22](chapter6.xhtml#pre-22): The “Hello, World!” of Fractals Learn
    the features of fractal geometry by drawing a series of concentric squares. Write
    your first recursive function and set its stopping condition.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 23](chapter6.xhtml#pre-23): Draw the Sierpin´ski Triangle Realize
    a classic fractal pattern named after mathematician Wacław Sierpiński. Translate
    the pattern’s geometry into a codable strategy and make multiple recursive calls
    from within the same function.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 24](chapter6.xhtml#pre-24): Create a Fractal Tree Develop a Kotlin
    program that draws a fractal tree, starting with a trunk and recursively generating
    smaller branches in opposite directions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 25](chapter6.xhtml#pre-25): Design an L-System Simulator Code an interactive
    L-system simulator from scratch, including a Kotlin implementation of Turtle Graphics.
    L-systems generate fractals using an alphabet of symbols, a starting axiom, and
    a set of rules defining how symbols are iteratively replaced.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 26](chapter6.xhtml#pre-26): Code and Visualize the Mandelbrot Set Calculate
    and draw the Mandelbrot set, a captivating two-dimensional fractal defined in
    the complex plane. This mesmerizing image emerges from simple iterative rules
    and reveals intricate structures when magnified ad infinitum.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 27](chapter7.xhtml#pre-27): Space-Efficient Sorting with Insertion
    Sort Explore the world of sorting algorithms and big O notation. Though it’s slower
    than other popular sorting methods, insertion sort operates in place, resulting
    in a low-space complexity.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 28](chapter7.xhtml#pre-28): Faster Sorting with Merge Sort Implement
    merge sort, a speedy sorting algorithm that’s stable but less memory efficient
    than insertion sort. Recursively divide an array of values into smaller subarrays,
    sort them, and merge them back together.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 29](chapter7.xhtml#pre-29): High-Efficiency Sorting with Quick Sort Code
    the quick sort algorithm, a fast and memory-efficient algorithm perfect for large
    datasets. Recursively select a pivot element in an array and divide the other
    elements into subarrays with values less than and greater than the pivot.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 30](chapter7.xhtml#pre-30): Stack-Based Searching with Depth-First
    Search  Implement depth-first search (DFS), one of several algorithms for traversing
    or searching a graph data structure. Use a stack to explore each path to its fullest,
    and backtrack when a dead end is reached.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 31](chapter7.xhtml#pre-31): Queue-Based Searching with Breadth-First
    Search Use a queue to realize the breadth-first search (BFS) algorithm. BFS explores
    all nodes at the current depth before moving on to nodes at the next level of
    depth.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 32](chapter7.xhtml#pre-32): Heuristic Searching with A* Implement
    A*, an informed search algorithm that uses a heuristic function to guide its search.
    Given a weighted graph, a source node, and a goal node, A* finds the shortest
    path from the source to the goal.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 33](chapter8.xhtml#pre-33): Evolve Gibberish into Shakespeare Use
    principles of heuristics and natural evolution to go from random strings to a
    famous line from Shakespeare. Develop modular, reusable code for the genetic algorithm,
    modeling genetic operators like elitism, selection, crossover, and mutation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 34](chapter8.xhtml#pre-34): Solve the Knapsack Problem Unleash your
    genetic algorithm code on the knapsack problem, one of a class of combinatorial
    optimization problems where the global optimal solution is notoriously hard to
    achieve.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 35](chapter8.xhtml#pre-35): Optimize a Multivariate Function with
    the Genetic Algorithm Adapt the genetic algorithm to solve an optimization problem
    with a complex, multivariate, nondifferentiable mathematical function. Employ
    real-valued genes to represent the decision variables and locate the global optimal
    solution within a given decision space.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 36](chapter9.xhtml#pre-36): Optimize a Multivariate Function with
    a Particle Swarm  Implement the particle swarm optimization (PSO) algorithm, a
    nature-inspired, agent-based method that seeks optimal solutions to complex problems
    by emulating swarm behavior. Write code that actively pursues continuous improvement
    through individual and collective learning.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Project 37](chapter9.xhtml#pre-37): Solve the Traveling Salesman Problem with
    an Ant Colony System Use an ant colony system, another nature-inspired algorithm,
    to tackle Berlin52, a notoriously challenging optimization problem. Discover the
    optimal route through 52 stations in Berlin from among the astronomical 1.551119
    × 10^(66) distinct ways to arrange the tour.'
  prefs: []
  type: TYPE_NORMAL
- en: '## Getting Started'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book, read the text carefully and run the code examples
    yourself. You can run the code on any Windows, Mac, or Linux operating system.
    You can also run the code online if it does not require any graphics elements.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re completely new to coding, you’ll need to familiarize yourself with
    some key terms before you start, such as *text editor, integrated development
    environment (IDE), library, compiler, debugging,* and *executing* or *running
    a program*.
  prefs: []
  type: TYPE_NORMAL
- en: To help you get started, this book’s appendix includes instructions on how to
    run Kotlin programs, as well as definitions of the aforementioned key terms. If
    you’re already familiar with these concepts and know how to install and set up
    an IDE, you can skip this section. Otherwise, make sure you’ve completed all the
    steps listed there before you begin your coding journey in Kotlin.
  prefs: []
  type: TYPE_NORMAL
- en: You can find the code examples discussed in this book on GitHub at [https://github.com/imfaisalgit/KotlinFromScratch](https://github.com/imfaisalgit/KotlinFromScratch).
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Kotlin. “Kotlin Docs.” (The official Kotlin documentation.) Accessed June 15,
    2024\. *[https://kotlinlang.org/docs/home.xhtml](https://kotlinlang.org/docs/home.xhtml)*.
  prefs: []
  type: TYPE_NORMAL
- en: Kotlin Playground. Online Kotlin editor and compiler. Accessed June 15, 2024\.
    *[https://tinyurl.com/59hauntd](https://tinyurl.com/59hauntd)*.
  prefs: []
  type: TYPE_NORMAL
