- en: '15'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: System UI and Launcher
  prefs: []
  type: TYPE_NORMAL
- en: The system UI of Android is the set of all of the visual elements that the user
    interacts with on the screen outside of apps, including things like the navigation
    bar, the notification panel, the status bar, the lock screen, and the launcher.
  prefs: []
  type: TYPE_NORMAL
- en: In the early days on the team, all of this work happened in the overall framework
    team, which consisted of just a small handful of people. Functionality like the
    status bar, lock screen, and launcher were written by people who were also writing
    core framework and UI toolkit code.^([1](#c15-footnote-1)) This was an efficient
    way to handle the different pieces, because the same people who were writing these
    pieces were also writing the platform features that were needed, so they could
    implement everything they needed on both sides of the problem. On the other hand,
    it also meant that they were all incredibly busy.
  prefs: []
  type: TYPE_NORMAL
- en: Launcher
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the run up to 1.0, in 2008, launcher (the home screen app responsible for
    viewing and launching applications) was just another implementation detail of
    the UI toolkit. Mike Cleron, the original developer on the UI toolkit team, worked
    on launcher before passing it on to Romain Guy. Romain continued to own and improve
    the app for several releases,^([2](#c15-footnote-2)) in addition to the rest of
    the UI toolkit work he was responsible for.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the ongoing projects that Romain worked on for launcher (and for the
    rest of the system) was performance. Romain remembered the constraint that Steve
    Horowitz gave him: “Launcher needed to cold-start^([3](#c15-footnote-3)) in half
    a second. Launcher has to go peek at every apk^([4](#c15-footnote-4)) and load
    the icons and strings, so there was a lot of multi-threaded code and batching
    and deferring updates on the UI thread.”'
  prefs: []
  type: TYPE_NORMAL
- en: Romain was also constantly adding features to launcher, like folders for organizing
    application icons, and application widgets, and shortcuts (icons on the home screen),
    and a parallax effect between the wallpaper background and the pages of the home
    screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'Later on, for the launch of the Nexus One, Andy Rubin wanted something visually
    exciting. Joe Onorato explained: “For Eclair, Rubin wanted something flashy.”
    Andy was light on specifics; Joe remembered him saying, “Just do something cool.”
    In the two months that they had, they wrote a new launcher using the 3D capabilities
    of the new device. “GL was just starting to work well enough, so we did that 3D
    launcher.”'
  prefs: []
  type: TYPE_NORMAL
- en: The 3D launcher was a special effect in the all apps screen that lasted for
    several releases. The user saw a normal 2D grid of applications, but as they scrolled
    the list up and down, the top and bottom edges faded away into the distance like
    a *Star Wars* intro-text effect. It was subtle but powerful, hinting at the 3D
    power behind the system (and the potentially large number of apps on the system),
    but without being too ostentatious or difficult to navigate.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502680c15/f15001.png)'
  prefs: []
  type: TYPE_IMG
- en: The Nexus One all apps screen had a 3D effect that showed the top and bottom
    of the apps list scrolling away into the distance.
  prefs: []
  type: TYPE_NORMAL
- en: Notifications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Years ago, before the age of smartphones, I frequently missed or was late for
    various meetings. I used a calendar app on my PC, but it was better at telling
    me when I had missed an appointment than when I was about to miss one. I remember
    wishing for a way to be notified about these events in real time, so that I could
    stop missing them.^([5](#c15-footnote-5))
  prefs: []
  type: TYPE_NORMAL
- en: This connection between the digital data in our lives and timely updates for
    that data was finally made through notifications on our smartphones. Of course,
    these updates go way beyond calendar events to email messages, texts, and a plethora
    of other updates from the various applications and services on our phones.
  prefs: []
  type: TYPE_NORMAL
- en: One of Android’s unique and powerful features, since the very beginning, was
    its system of notifications, alerting the user to information from their installed
    applications, even if they weren’t using those applications at the time.
  prefs: []
  type: TYPE_NORMAL
- en: Before smartphones, notifications were simpler (and less useful). Early data
    devices, like the Palm Pilot PDAs, had alert features in calendar and alarm apps.
    The user could configure these applications to play a noise, show a dialog, or
    illuminate an LED. Alerts of this sort were therefore limited to things the user
    thought to enter. All of the data on the device was created and synced by the
    user; there wasn’t information coming out of the ether onto the device. But once
    devices started connecting to the internet, new information, including email,
    messages, and even new calendar appointments, could land on the device asynchronously,
    and the user had to be told. Thus the need, and solution, for notifications was
    born. Dan Sandler, who joined Android in 2009 and led the system UI team, said,
    “The Danger Hiptop/Sidekick device took a tentative step forward in the state
    of the art on user alerts, with its rainbow notification light under the scroll
    wheel that could be used for SMS and new emails. Android would pick that ball
    up and run very, very far with it.”
  prefs: []
  type: TYPE_NORMAL
- en: There has always been a tension between apps and the operating system. Every
    app assumes that it’s the most important thing in a user’s life, so obviously
    the user wants to know everything possible from that app at all times. The user,
    meanwhile, might be surprised and annoyed to receive a notification from a game
    they just installed informing them that there’s a new level available. Part of
    the job of the system UI team over the years has been to provide limits for the
    applications to obey, as well as tools for the users to be able to mute overly
    chatty applications. In fact, part of the job of the operating system itself is,
    as Dan explained, “to provide limits for applications. Usually this is about shared
    resources on the device, like files, CPU time, and networking. With notifications,
    Android added the user’s attention to the set of things that the operating system
    mediated.”
  prefs: []
  type: TYPE_NORMAL
- en: Dianne Hackborn implemented the first notification system; icons appeared in
    the status bar at the top of the screen to alert users that there was information
    available in these other applications. Then Dianne and Joe Onorato worked on the
    Notification Panel, which the user pulled down from the top of the screen to display
    more information for the notifications. Users could tap on an item in the panel,
    which launched that application so that the user could see that new email, read
    the new text message, and so on. Joe explained, “[Dianne] did the first pull-down.
    But I spent a bunch of time making its physics work.”^([6](#c15-footnote-6))
  prefs: []
  type: TYPE_NORMAL
- en: Ed Heyl said, “I remember Joe, over the weekend, worked and worked and worked,
    and he finally got it working. He’s walking around the office showing everybody,
    ‘Look, what do you think about this? Watch, you just go like this, and you pull
    down and it shows you stuff, and then just goes away.’”
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502680c15/f15002.png)'
  prefs: []
  type: TYPE_IMG
- en: This is what notifications looked like in early versions of Android. The notification
    shade pulls down from the top of the screen to show current alerts for the user
    from all of their applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'Notifications were acknowledged to be something that distinguished Android
    from the other players in the smartphone market from day one. In the article “Android:
    A 10-Year Visual History”^([7](#c15-footnote-7)) *The Verge* had this to say:
    “It was almost universally acknowledged that Android nailed the notification system
    on day one. It would take iOS another three years before launching a design as
    effective at triaging messages and alerts coming from users’ ever-growing collection
    of mobile apps. The secret was in the G1’s unique status bar, which could be dragged
    downward to reveal every notification in a single list: text messages, voicemails,
    alarms, and so on. The fundamental concept lives on (in a refined form) to today’s
    latest version of Android.”'
  prefs: []
  type: TYPE_NORMAL
- en: Live Wallpapers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Android 1.0 shipped with a feature called *Wallpapers*, which allowed users
    to choose a picture to serve as the background of the home screen in the launcher.
    Wallpapers were a great way to show off, and personalize, a smartphone’s large
    display.
  prefs: []
  type: TYPE_NORMAL
- en: But Andy wanted something new and special for the Nexus One, which was launching
    with the Eclair 2.1 release in January of 2010\. He asked for a feature called
    *Live Wallpapers*. Since smartphones offered not just a large screen, but also
    a powerful computer behind that screen, wouldn’t it be nice to use the computer
    to enable rich graphical experiences that moved and entertained?
  prefs: []
  type: TYPE_NORMAL
- en: So Andy asked the framework team to make it happen. Dianne Hackborn and Joe
    Onorato worked on the underlying system and Romain and others worked on the actual
    wallpapers, coming up with the designs, the overall look, and the actual functionality
    for the first set of them.
  prefs: []
  type: TYPE_NORMAL
- en: They had five weeks to make it happen.
  prefs: []
  type: TYPE_NORMAL
- en: Andy had originally asked that the wallpapers be implemented in Processing,
    a graphics rendering system. This was a great idea in terms of functionality,
    but when Romain got it working on Android, he saw that it wasn’t going to be fast
    enough for mobile phones. With an animation rate of only one frame per second,
    the wallpapers were more Dead than Live. So Romain found a different way to make
    them work.
  prefs: []
  type: TYPE_NORMAL
- en: 'Jason Sams (a graphics engineer on the team who had also worked at Be and PalmSource
    with Mathias, Dianne, Joe, and others) had been working on a low-level graphics
    system at the time called RenderScript, which allowed applications to take advantage
    of both the CPU and the GPU for drawing graphics quickly. Romain used RenderScript
    to achieve fluid animation for the wallpapers that needed it, and ended up writing
    these four wallpapers for the release:'
  prefs: []
  type: TYPE_NORMAL
- en: Grass, which showed blades of grass gently swaying against a backdrop of sky,
    whose color changed according to the time of day where the phone was located.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leaves, which showed leaves falling on water, creating ripples on the surface.
    This was a team effort, with Mike Cleron wrapping a ripple effect (originally
    written by Mathias Agopian . . . or it might have been Jason Sams) into a wallpaper,
    adding pictures he took^([8](#c15-footnote-8)) of leaves from a Japanese maple
    in his yard.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Galaxy, which showed a “3D”^([9](#c15-footnote-9)) view of the universe, with
    a massive star field rotating around the center.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Polar Clock, which showed the time in a more visually interesting way.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](image_fi/502680c15/f15003.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Four of the Live Wallpapers that launched with the Nexus One: Particles, Galaxy,
    Grass, and Leaves (picture courtesy the Android Developers Blog, February 5, 2010)'
  prefs: []
  type: TYPE_NORMAL
- en: In addition to these wallpapers, Mike Cleron wrote one called Particles, and
    Marco Nelissen (who worked on audio for the platform) wrote three wallpapers including
    two sound visualizers.
  prefs: []
  type: TYPE_NORMAL
- en: At the end of the five week period, the team had a fully functional Live Wallpaper
    system, including an API that external developers could use to write their own.
    Sadly, Romain was only able to invent, design, prototype, and implement four wallpapers
    in that five-week period, and the team launched the device with fewer than the
    ten wallpapers that Andy had requested.
  prefs: []
  type: TYPE_NORMAL
- en: The Face of Android
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Android’s system UI provides the graphical functionality that allows a user
    to control their device. From logging in, to timely notifications, to navigating
    around the UI, to launching apps, the system UI is the first app-like thing that
    the user interacts with on their device. It allows users to get to the functionality
    and information they need, which is what their smartphone is all about.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502680c15/f15004.png)'
  prefs: []
  type: TYPE_IMG
- en: Dan Sandler sent me this drawing, saying, “After I described System UI as ‘the
    face of Android’ one too many times, I created this unofficial logo . . . which
    most of the team is horrified by.”
  prefs: []
  type: TYPE_NORMAL
