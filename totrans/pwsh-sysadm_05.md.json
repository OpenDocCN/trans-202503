["```\nGet-Content -Path \"\\\\servername\\c$\\App_configuration.txt\"\n```", "```\n$servers = @('SRV1','SRV2','SRV3','SRV4','SRV5')\nGet-Content -Path \"\\\\$($servers[0])\\c$\\App_configuration.txt\"\nGet-Content -Path \"\\\\$($servers[1])\\c$\\App_configuration.txt\"\nGet-Content -Path \"\\\\$($servers[2])\\c$\\App_configuration.txt\"\nGet-Content -Path \"\\\\$($servers[3])\\c$\\App_configuration.txt\"\nGet-Content -Path \"\\\\$($servers[4])\\c$\\App_configuration.txt\"\n```", "```\nPS> 1 –eq 1\nTrue\n```", "```\nPS> Test-Connection -ComputerName offlineserver -Quiet -Count 1\nFalse\n\nPS> Test-Connection -ComputerName onlineserver -Quiet -Count 1\nTrue\n```", "```\nPS> -not (Test-Connection -ComputerName offlineserver -Quiet -Count 1)\nTrue\n```", "```\nif (condition) {\n    # code to run if the condition evaluates to be True\n}\n```", "```\n$servers = @('SRV1','SRV2','SRV3','SRV4','SRV5')\nif (Test-Connection -ComputerName $servers[0] -Quiet -Count 1) {\n    Get-Content -Path \"\\\\$($servers[0])\\c$\\App_configuration.txt\"\n}\nGet-Content -Path \"\\\\$($servers[1])\\c$\\App_configuration.txt\"\n--snip--\n```", "```\nif (Test-Connection -ComputerName $servers[0] -Quiet -Count 1) {\n    Get-Content -Path \"\\\\$($servers[0])\\c$\\App_configuration.txt\"\n} else {\n    Write-Error -Message \"The server $($servers[0]) is not responding!\"\n}\n```", "```\nif (Test-Connection -ComputerName $servers[0] -Quiet -Count 1) {\n    if ($servers[0] –eq $problemServer) {\n        Write-Error -Message \"The server $servers[0] does not have the right file!\"\n    } else {\n        Get-Content -Path \"\\\\$servers[0]\\c$\\App_configuration.txt\"\n    }\n} else {\n    Write-Error -Message \"The server $servers[0] is not responding!\"\n}\n--snip--\n```", "```\nif (-not (Test-Connection -ComputerName $servers[0] -Quiet -Count 1)) { ❶\n    Write-Error -Message \"The server $servers[0] is not responding!\"\n} elseif ($servers[0] –eq $problemServer) { ❷\n    Write-Error -Message \"The server $servers[0] does not have the right file!\"\n} else {\n    Get-Content -Path \"\\\\$servers[0]\\c$\\App_configuration.txt\" ❸\n} \n--snip--\n```", "```\nswitch (expression) {\n    expressionvalue {\n        # Do something with code here.\n    }\n    expressionvalue {\n    }\n    default {\n        # Stuff to do if no matches were found\n    }\n}\n```", "```\nswitch (expression) {\n    expressionvalue {\n        # Do something with code here.\n        break\n    }\n--snip--\n```", "```\n$currentServer = $servers[0]\nswitch ($currentServer) {\n    $servers[0] {\n        # Check if server is online and get content at SRV1 path.\n        break\n    }\n    $servers[1] {\n        ## Check if server is online and get content at SRV2 path.\n        break\n    }\n\n    $servers[2] {\n ## Check if server is online and get content at SRV3 path.\n        break\n    }\n--snip--\n```", "```\n$servers = @('SRV1','SRV2','SRV3','SRV4','SRV5')\nGet-Content -Path \"\\\\$($servers[0])\\c$\\App_configuration.txt\"\nGet-Content -Path \"\\\\$($servers[1])\\c$\\App_configuration.txt\"\nGet-Content -Path \"\\\\$($servers[2])\\c$\\App_configuration.txt\"\nGet-Content -Path \"\\\\$($servers[3])\\c$\\App_configuration.txt\"\nGet-Content -Path \"\\\\$($servers[4])\\c$\\App_configuration.txt\"\n```", "```\nforeach ($server in $servers) {\n    Get-Content -Path \"\\\\$server\\c$\\App_configuration.txt\"\n}\n```", "```\n$servers = @('SRV1','SRV2','SRV3','SRV4','SRV5')\nforeach ($server in $servers) {\n    $server = \"new $server\"\n}\n$servers\n```", "```\nSRV1\nSRV2\nSRV3\nSRV4\nSRV5\n```", "```\n$servers = @('SRV1','SRV2','SRV3','SRV4','SRV5')\nForEach-Object -InputObject $servers -Process {\n    Get-Content -Path \"\\\\$_\\c$\\App_configuration.txt\"\n}\n```", "```\n$servers | ForEach-Object -Process {\n    Get-Content -Path \"\\\\$_\\c$\\App_configuration.txt\"\n}\n```", "```\n$servers.foreach({Get-Content -Path \"\\\\$_\\c$\\App_configuration.txt\"})\n```", "```\nfor (❶$i = 0; ❷$i -lt 10; ❸$i++) {\n    ❹ $i\n}\n```", "```\n$servers = @('SERVER1','SERVER2','SERVER3','SERVER4','SERVER5')\nfor ($i = 0; $i –lt $servers.Length; $i++) {\n    $servers[$i] = \"new $($servers[$i])\"\n}\n$servers\n```", "```\nfor (❶$i = 1; $i –lt $servers.Length; $i++) {\n    Write-Host $servers[$i] \"comes after\" $servers[$i-1]\n}\n```", "```\n$counter = 0\nwhile ($counter -lt 10) {\n    $counter\n    $counter++\n}\n```", "```\nwhile (Test-Connection -ComputerName $problemServer -Quiet -Count 1) {\n    Get-Content -Path \"\\\\$problemServer\\c$\\App_configuration.txt\"  \n    break\n}\n```", "```\ndo {\n    } while ($true)\n```", "```\ndo {\n    $choice = Read-Host -Prompt 'What is the best programming language?'\n} until ($choice -eq 'PowerShell')\nWrite-Host -Object 'Correct!'\n```"]