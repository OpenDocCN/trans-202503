- en: '26'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open Source
  prefs: []
  type: TYPE_NORMAL
- en: I don’t think the open source thing mattered.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Iliyan Malchev^([1](#c26-footnote-1))
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Open source is many things to many people.
  prefs: []
  type: TYPE_NORMAL
- en: It can be a way to “crowdsource” work, getting a larger community to help out.
    Linux is a great example of this. While the original system was written by a single
    developer, Linus Torvalds, a large community of individuals and companies in the
    decades since has contributed everything from fixes to drivers to core system
    functionality.
  prefs: []
  type: TYPE_NORMAL
- en: Open source can be a way to advertise and share work. GitHub is a great place
    to do this and hosts many active (and cobwebbed) projects that show off the work
    of people who took enough time and care to finish and upload the code instead
    of just letting it fester on their local system. Open sourcing your own pet projects
    can be a great way to get your name out there as someone that does this kind of
    work; the ability to point to an available and transparent site is a good way
    to show potential employers your capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Open source can be a recruiting tool for companies. Similar to individuals advertising
    their own capabilities, companies often open source projects (applications or
    libraries for other developers) as a way to get the company’s name out there to
    other developers. Square is, essentially, a credit card company. They might find
    it difficult to convince developers to join based on the excitement of their business
    alone. But they are well-known in the developer community as a provider of interesting
    and powerful open source libraries. Developers who are not excited about financial
    transaction software go there because they want to help the open source community
    (including getting their own name out there as a developer on these projects).
  prefs: []
  type: TYPE_NORMAL
- en: Open source can be a way for big companies to quietly and gently euthanize a
    product. Sometimes a company decides to shut down a project and move those engineers
    onto a project with a brighter future. The company could, and often does, simply
    kill the product. But they could also release the old code into open source, as
    a gift to the developer community. The company does not see direct benefits by
    giving it away (in fact, it usually costs some effort and time to migrate projects
    to open source), but they can earn goodwill from developers by doing this, and
    reduce the pain of killing something that those developers were using and depending
    on.
  prefs: []
  type: TYPE_NORMAL
- en: Open source can also be a way to simply let other people get and use your software
    transparently. This is the open source model of Android.
  prefs: []
  type: TYPE_NORMAL
- en: All of Android’s platform software has been available as the Android Open Source
    Project (AOSP), on [https://source.android.com/](https://source.android.com/),
    since November of 2008\. The code for each release is open sourced at the same
    time^([2](#c26-footnote-2)) as the release is made available for devices. As soon
    as the release is available to users (on new devices or as updates for existing
    devices), developers can look at the code that was used to create that version.
  prefs: []
  type: TYPE_NORMAL
- en: Android accepts external contributions; developers can create accounts on [https://source.android.com/](https://source.android.com/)
    and submit patches.^([3](#c26-footnote-3)) Those patches get reviewed by people
    on the Android team and can then be submitted into the Android source base, to
    be used on future releases.
  prefs: []
  type: TYPE_NORMAL
- en: In reality, external contributions are not frequent . . . and not expected.
    Android does get regular contributions from some partner companies. For example,
    partners tend to fix bugs to make things work the way they need them to for their
    devices. Maybe they noticed a corner case that they could improve, or a form factor
    that Android did not yet account for, or maybe they just found and fixed a bug.
    It makes sense for them to integrate it directly into Android itself so that they
    don’t have to re-apply that fix every time a new version of Android is released.
    And Android does get some individuals contributing fixes occasionally. But external
    contributions are rare; most of what is there has come from the internal engineering
    team.
  prefs: []
  type: TYPE_NORMAL
- en: There are a few reasons for this dynamic. For one thing, the Android source
    base is huge, and contributing even a simple fix takes significant effort just
    to understand the context of the original code and implications of that change.
    But a more significant reason is Android’s “eventual open source”^([4](#c26-footnote-4))
    model itself. An external developer wouldn’t have any way of knowing, when they
    found and fixed a bug, whether that bug had been fixed in the meantime in the
    internal/future version of the code, or even whether that block of code they’ve
    been spending all of their time working with even existed anymore. Code has a
    tendency to move around or get rewritten when future requirements or changes dictate.
  prefs: []
  type: TYPE_NORMAL
- en: But even though Android doesn’t benefit from substantial external contributions,
    Android's open source model still provides significant advantages. First, application
    developers love it. A platform of the size and complexity of Android could never
    be documented so completely that a programmer could understand every nuance of
    it and how everything interacted internally. The ability to look at the actual
    code to determine what’s really going on is invaluable; developers don’t need
    to guess at what the platform is doing if they can look at the code itself. This
    transparency has always helped Android developers in writing their apps and represents
    a fundamental difference between Android and many other operating system platforms.^([5](#c26-footnote-5))
  prefs: []
  type: TYPE_NORMAL
- en: 'Dan Lew, a developer who was working on Android apps in a small startup when
    Android was new, said that the code availability simplified development: “There
    were plenty of early platform bugs to deal with. I remember there being lots of
    hacks. But since Android was open source, usually those hacks were at least discoverable.
    Without it being open source it would’ve been much harder to work around some
    of the problems.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'The second, and arguably more important, element of Android’s open source model
    is that Android’s partners have free and easy access to all of it. This was actually
    the original reason for Android open sourcing the platform; it was a mechanism
    to make Android available for any prospective device manufacturer to get everything
    they need. There is no licensing and there are no protracted contract negotiations;
    partners can simply go to the website and get the bits they need to ship an Android-based
    device. And in so doing, they help to enable a consistent ecosystem of compatible
    Android implementations, because everyone is starting from the same common implementation.
    If they want to get Google services like the Play Store and Maps and Gmail, then
    there’s more to it, but the core code for building a phone platform is available
    for anyone to download and use as is. Romain Guy explained: “That’s what we all
    think when we think ‘open source’ for Android. Partners don’t necessarily care
    about contributing, but they have everything they need.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'Brian Swetland agreed: “One of the goals of Android, before they ever had contact
    with Google, was to give people an alternative to that dire future of a single
    company owning the mobile computing platform. The thinking was, how do you get
    people to adopt it? It’s gotta be open. Otherwise, how can they trust that they
    have any level of control?”'
  prefs: []
  type: TYPE_NORMAL
- en: 'Dianne Hackborn agreed, comparing Android’s open source model to the licensing
    model she’d seen fail in previous experiences: “One of the things we struggled
    with at PalmSource in getting others to use our platform was that they were deathly
    afraid of someone doing to the mobile space the same thing that Microsoft did
    to PCs. For example, Motorola had a really hard time thinking about licensing
    Rome [PalmSource’s UI toolkit built for Palm OS 6] but were all-in on buying the
    company and owning it. Being able to make Android open source made it a lot more
    comfortable for OEMs to adopt, since they could share some ownership of it, as
    well as making it extremely flexible for the rapid evolution of mobile devices.”'
  prefs: []
  type: TYPE_NORMAL
- en: It is this second element, opening up the platform for device makers, that distinguished
    Android from other platform offerings out there. Not only was the platform available
    to use, but the code was available to understand and play with as companies got
    it working on their devices. And, in the meantime, this open source platform was
    also a complete, production-quality implementation, verified on actual hardware
    products and ready for manufacturers to take and use.
  prefs: []
  type: TYPE_NORMAL
- en: In contrast, if you wanted to ship a Windows phone at that time, you’d have
    to license (and pay for) Windows from Microsoft. Also, the process of getting
    it to work on a new device was non-trivial. Michael Morrissey was working at Microsoft
    prior to Android and got to see that process first-hand. “When you were trying
    to bring up a new OS, whether it was Win CE or Pocket PC or whatever on a new
    phone, trying to integrate those things and debug bringing that up was incredibly
    painful. You had this thing called the ‘Board Support Package,’ which was all
    the low-level code that came from the OEM. And then you had all the higher-level
    Windows code. So if phone calls were failing, or the network was bad, or whatever,
    where did the problem lie? Nobody could figure out where that was.
  prefs: []
  type: TYPE_NORMAL
- en: '“This was my favorite running gag at Microsoft: There was a team whose job
    it was to work with these OEMs to bring up new hardware. Except neither side was
    allowed to see each other’s code, because it was secret. Samsung or HTC or whoever
    would send somebody over to Seattle, and they would sit next to somebody in this
    team. They would try to debug it without really letting each other see each other’s
    code. They would just lean over and say, ‘Here’s what I think I’m sending you
    in this call. What are you seeing?’ It was this long kind of ridiculous dance.”'
  prefs: []
  type: TYPE_NORMAL
- en: Of course, the fact that Android was open source meant that it was free for
    manufacturers to use, which was an added bonus. Michael said, “These OEMs would
    operate on pretty thin margins. So if you have a company like HTC and they’re
    getting charged $10/unit by Microsoft, and they have to do a whole crazy bunch
    of integration work with Microsoft in order to get it to work, the idea of free
    and open source is magic. If you have Android, which is open source, then your
    OEMs can bring up new devices super, super fast, because they have access to all
    the code. On top of that, it’s free.”
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, if you wanted to ship an iOS-based device . . . you couldn’t.
    Apple is the only manufacturer of the iPhone; they don’t make their platform available
    at all. Similarly, RIM was the only supplier of BlackBerry devices. Meanwhile,
    Android was not only free, but freely and easily available for anyone to download,
    play with, customize, and build upon.
  prefs: []
  type: TYPE_NORMAL
- en: The fact that this model also made the software easy for application developers
    to look at the internal code and made it possible to accept any external (albeit
    infrequent) contributions was simply a happy coincidence that worked out in Android’s
    favor.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, there’s more to being open source than simply saying that the code
    is open source. The team had to put the project together in such a way that external
    developers and companies could get to it, download it, build it, and understand
    how to do all of that. It took effort to pull it together in the time leading
    up to the initial release.
  prefs: []
  type: TYPE_NORMAL
- en: First, the source code itself had to be organized into a state that was ready
    for ongoing distribution to open source, which was the product of Dave Bort’s
    efforts on Ed Heyl’s team.
  prefs: []
  type: TYPE_NORMAL
- en: Chris DiBona, the director of open source programs at Google, also worked on
    part of the problem. Some of the tools that Android was using at the time were
    not suitable for external use. Google uses tools that are either licensed or built
    in-house and proprietary. Android’s code needed to be buildable by external developers
    without proprietary or licensed tools, so the team adopted tools internally that
    could also be used (for free) externally.
  prefs: []
  type: TYPE_NORMAL
- en: Chris helped to make the decision to switch source code control^([6](#c26-footnote-6))
    to a system called Git, which was unpopular with most of the engineers. Chris
    told them, “The kernel and systems teams [who were using Git already] were never
    going to leave Git. Git is the right answer for our development model. They needed
    an external person to hate. I offered to be that person.”
  prefs: []
  type: TYPE_NORMAL
- en: The team made the change to Git, the code was organized for public consumption,
    and the project was open sourced in November of 2008, with the 1.0 release. And
    it’s been open source ever since, providing transparency to developers and platform
    code to manufacturers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Jeff Sharkey, who joined the Android team after 1.0, summed up the appeal of
    open source, for both partners and users: “I’m a firm believer in open source
    software because of the power it gives people to build things you never imagined
    or had the resources to build yourself. If you were an OEM in the early days of
    Android, you couldn’t license iOS, and Microsoft offered a pretty homogeneous
    experience. In contrast, Android gave OEMs a chance to rapidly bolt-on features
    to differentiate themselves on store shelves.'
  prefs: []
  type: TYPE_NORMAL
- en: “The ethos of the open source world also resonated with end users. Instead of
    a dictatorial mandate of exactly one home screen app, one software keyboard, one
    set of quick settings tiles, etc., Android lets users radically customize them.
    Phones are incredibly personal devices, and these deeper customizations (beyond
    just the outer case) give users a stronger sense of connection and ownership.”
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter started with a quote from Iliyan Malchev, cruelly taken out of
    context. Here’s the complete version:'
  prefs: []
  type: TYPE_NORMAL
- en: “I don’t think the open source thing mattered. We could have made it free to
    them without open sourcing it. I am an open source advocate. I think we should
    do even more open source than we do. But I just don’t think that the strength
    of Android is predicated on it being open source. If we made it free without open
    sourcing it, it would have been just as successful.”
  prefs: []
  type: TYPE_NORMAL
- en: That is, having the source code available in *open source* wasn’t the important
    part; simply making the source code *available* would have been enough. Open source
    was just a natural and transparent way to achieve that goal.
  prefs: []
  type: TYPE_NORMAL
