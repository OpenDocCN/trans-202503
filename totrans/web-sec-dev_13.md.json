["```\n   from django.contrib.auth.decorators import login_required, permission_required\n\n❶ @login_required\n❷ @permission_required('content.can_publish')\n   def publish_post(request):\n       # Publish a post to the front page.\n```", "```\ndef publish\n  @post = Post.find(params[:id])\n❶ authorize @post, :update?\n  @post.publish!\n  redirect_to @post\nend\n```", "```\nclass PostsTest < ApplicationSystemTestCase\n  test \"users should be redirected to the login page if they are not logged in\" do\n     visit publish_post_url\n     assert_response :redirect\n     assert_selector \"h1\", text: \"Login\"\n  end\nend\n```", "```\ndef cleanup(path)\n   parts     = []\n❶ unescaped = path.gsub(/%2e/i, dot).gsub(/%2f/i, slash).gsub(/%5c/i, backslash)\n   unescaped = unescaped.gsub(backslash, slash)\n\n❷ unescaped.split(slash).each do |part|\n     next if part.empty? or part == dot\n     part == '..' ? parts.pop : parts << part\n   end\n\n❸ cleaned = slash + parts.join(slash)\n   cleaned << slash if parts.any? and unescaped =~ %r{/\\.{0,2}$}\n   cleaned\nend\n```", "```\n../\n..\\\n..\\/\n%2e%2e%2f\n%252e%252e%252f\n%c0%ae%c0%ae%c0%af\n%uff0e%uff0e%u2215\n%uff0e%uff0e%u2216\n```"]