["```\n#load data\nmydata<-read.csv(\"QuoraSample.csv\")\nset.seed(1)\n```", "```\n#run analysis\nlibrary(dglars)\ndg<-dglars(factor(Depression)~.,data=mydata,family=\"binomial\")\ndg1<-cvdglars(factor(Depression)~.,data=mydata,\nfamily=\"binomial\",control=list(nfold=2))\n```", "```\n#examine results of non-cross-validated model\n**>summary(dg)**\nSummary of the Selected Model\n\n    Formula: factor(Depression) ~ 1\n     Family: 'binomial'\n       Link: 'logit'\n\nCoefficients:\n     Estimate\nInt.  -1.5041\n---\n\n                 g: 1.265\n     Null deviance: 20.86\n Residual deviance: 20.86\n               AIC: 22.86\n\nAlgorithm 'pc' (method='dgLASSO')\n```", "```\n#examine cross-validated model\n**>summary(dg1)**\nCall:  cvdglars(formula=factor(Depression) ~ ., family=\"binomial\",\n    data=mydata, control=list(nfold=2))\n\nCoefficients:\n                       Estimate\nInt.                    -1.6768\nBullying                 0.3066\nPut.in.Remedial.Course   0.2292\n\ndispersion parameter for binomial family taken to be 1\n\nDetails:\n   number of non-zero estimates: 3\n cross-validation deviance: 12.33\n                              g: 0.9838\n                        n. fold: 2\n\nAlgorithm 'pc' (method='dgLASSO')\n```", "```\n#load data\nmydata<-read.csv(\"UCIDefaultData.csv\")\n\n#load library\nlibrary(dglars)\n\n#run analysis, scaling the predictors such that big numbers don't\n#result in large differences in coefficient values\n#scale the predictor data\nmydata1<-scale(mydata[,-c(1,25)])\nmydata1<-cbind(mydata1,mydata$default.payment.next.month)\ncolnames(mydata1)[24]<-\"default.payment.next.month\"\n\n#run the dglars function with and without cross-validation\ndg<-dglars(factor(default.payment.next.month)~.,\ndata=as.data.frame(mydata1),family=\"binomial\")\ndg1<-cvdglars(factor(default.payment.next.month)~.,\ndata=as.data.frame(mydata1),family=\"binomial\")\nsummary(dg)\nsummary(dg1)\n```", "```\n#run logistic regression\ngl<-glm(factor(default.payment.next.month)~.,\ndata=as.data.frame(mydata1),family=\"binomial\"(link=\"logit\"))\n\n#calculate AIC of the model\nAIC(gl)\n```", "```\n#create matrix of town connections and miles between each town\ntowns<-matrix(c(0,0,0,4,0,0,12,2,0,12,0,6,4,2,6,0),nrow=4)\n\n#create a graph from the matrix with connections between modes\n#going in both directions (undirected graph) with weights\nlibrary(igraph)\ng1<-graph_from_adjacency_matrix(towns,mode=\"undirected\",weighted=T)\n\n#plot town graph with edges labeled by weights\nplot(g1,edge.label=E(g1)$weight,main=\"Plot of Connected Towns by Road Miles\")\n\n#add resource (perhaps liters of water per resident)\nV(g1)$number<-c(10,500,80,200)\nplot(g1,edge.label=E(g1)$weight,vertex.label=V(g1)$number,vertex.size=40,\nmain=\"Situation 1\")\n\n#find maximal cliques, representing connected resources\nmc1<-max_cliques(g1)\nmc1\n\n#add resources that are mutually connected between towns\nc1<-V(g1)$number[mc1[[1]][1]]+V(g1)$number[mc1[[1]][2]]\nc2<-V(g1)$number[mc1[[2]][1]]+V(g1)$number[mc1[[2]][2]]+\nV(g1)$number[mc1[[2]][3]]\n\n#examine time needed to transport using shortest paths\ndis1<-distances(g1,v=V(g1),mode=c(\"all\"),weights=E(g1)$weight,\nalgorithm=\"dijkstra\")\n```", "```\n#remove the link between vertices 2 and 4, providing an efficient supply\n#route\ng2<-delete_edges(g1,edges=\"2|4\")\nV(g2)$number<-c(10,500,80,200)\nplot(g2,edge.label=E(g2)$weight,vertex.label=V(g2)$number,vertex.size=40,\nmain=\"Situation 2\")\n\n#find maximal cliques\nmc2<-max_cliques(g2)\nmc2\n\n#find resources between sites\nc1<-V(g2)$number[mc2[[1]][1]]+V(g2)$number[mc2[[1]][2]]\nc2<-V(g2)$number[mc2[[2]][1]]+V(g2)$number[mc2[[2]][2]]\nc3<-V(g2)$number[mc2[[3]][1]]+V(g2)$number[mc2[[3]][2]]\n\n#examine time needed to transport using shortest paths\ndis2<-distances(g2,v=V(g2),mode=c(\"all\"),weights=E(g2)$weight,\nalgorithm=\"dijkstra\")\n```"]