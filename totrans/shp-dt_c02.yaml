- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: The Geometric Structure of Networks
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 网络的几何结构
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: Networks, which we briefly encountered in [Chapter 1](c01.xhtml), play an increasingly
    large role in our lives; accordingly, network data plays an increasingly large
    role in data science. How do we measure the influence of a user on social media?
    Or judge the robustness of a computer network against hackers? Or identify people
    who bridge different social groups? These are all questions about the geometric
    structure of networks, and they are all examples of concepts we will explore in
    this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 网络，在[第1章](c01.xhtml)中我们曾简要接触过，已经在我们生活中扮演着越来越重要的角色；因此，网络数据在数据科学中的作用也越来越大。我们如何衡量社交媒体上用户的影响力？或者评估计算机网络对黑客的抗压能力？或者识别连接不同社交群体的人？这些问题都涉及到网络的几何结构，它们都是我们将在本章探讨的概念的例子。
- en: We’ll begin this chapter with a brief motivational section arguing why network
    data is an important topic in modern data science that greatly benefits from geometric
    reasoning. We’ll then introduce the basic concepts and definitions in network
    theory, which is rooted in the mathematical language of graph theory. The bulk
    of the chapter will be a guided tour of various quantities associated to networks
    and their vertices. We’ll conclude with a quick look at a few different types
    of random networks that have been studied extensively in the literature and are
    easy to generate in the language R.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将从一个简短的动机部分开始，论证为什么网络数据是现代数据科学中的一个重要话题，并且大大受益于几何推理。接着，我们将介绍网络理论中的基本概念和定义，它们源自图论这一数学语言。本章的主要内容将是对与网络及其顶点相关的各种量的引导性介绍。最后，我们将简要回顾几种在文献中广泛研究并且在R语言中容易生成的随机网络类型。
- en: Introduction to Network Science
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络科学简介
- en: '*Network science*, which studies entities through their relationships with
    each other, is an important interdisciplinary subject that has gained momentum
    in data science since the rise of social networks. As we saw in [Chapter 1](c01.xhtml),
    network data is “unstructured” in the usual sense of the term, but it is highly
    structured in other ways. Mathematically, networks are rooted in a subject called
    *graph theory*, which distills entities and relationships down to their abstract
    essence. Networks are geometrically rich, but their geometry is different from
    the usual Euclidean geometry of angles and straight lines. To extract insights
    from networks, we must leave the Euclidean world of spreadsheets and embrace a
    more exotic geometry where spheres look nothing like the round objects we’re used
    to seeing.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*网络科学*，研究实体通过相互关系的方式进行的学科，是一个重要的跨学科领域，自从社交网络的兴起以来，已经在数据科学中得到了广泛应用。正如我们在[第1章](c01.xhtml)中看到的，网络数据在传统意义上是“非结构化”的，但在其他方面它却高度结构化。从数学角度来看，网络根植于一种叫做*图论*的学科，它将实体和关系提炼成其抽象本质。网络在几何上是丰富的，但它们的几何形态不同于我们通常所理解的欧几里得几何中的角度和直线。为了从网络中提取洞察力，我们必须摆脱电子表格中的欧几里得世界，转而拥抱一种更加奇特的几何学，在这种几何学中，球体看起来与我们习惯看到的圆形物体完全不同。'
- en: Let’s consider a social media example. Users on a platform such as Facebook
    form a network, and distance can be defined by the smallest number of friendships
    connecting two individuals. This notion of distance underpins several ways of
    measuring a user’s centrality in the network, which we can use to quantify “influencers”
    in various ways. For instance, we could count the number of friends directly connected
    to a Facebook user’s account, or we could count how many friends of friends exist.
    Someone may not have many immediate connections but may have a large number of
    friends who are well connected. In other words, a user may have a large sphere
    of influence even if their immediate circle of friends is small. The geometry
    of networks also allows us to detect outliers by measuring how improbable a user’s
    network is compared to others; this helps social media platforms automatically
    detect inauthentic accounts.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个社交媒体的例子。像Facebook这样的社交平台上的用户形成了一个网络，距离可以通过连接两个个体的最小友谊数量来定义。这种距离的概念支撑了几种衡量用户在网络中中心性的方法，我们可以用这些方法来量化“影响者”。例如，我们可以计算与Facebook用户账户直接连接的朋友数量，或者计算有多少朋友的朋友存在。一个人可能没有很多直接的联系，但可能有许多连接良好的朋友。换句话说，即使某个用户的直接社交圈很小，他也可能拥有一个很大的影响力圈。网络的几何学还允许我们通过衡量一个用户的网络与其他用户的网络相比有多不可能，来检测异常值；这有助于社交媒体平台自动检测不真实的账户。
- en: A fascinating application of network-based outlier detection arose in a recent
    state supreme court case on gerrymandering. A conspicuous map of congressional
    districts in Pennsylvania prior to 2018 was widely believed to be the result of
    a partisan gerrymander favoring Republicans, but the court was not convinced until
    a team of experts brought in network science. They showed that one can view a
    districting map as a network, and by computing a random walk in the space of map
    networks to statistically probe the geometry of these networks, they found that
    the Pennsylvania map was several standard deviations away from the mean. The new
    map under consideration at the time was right in the middle of the bell curve
    of maps. They concluded that the old map was highly unlikely to have arisen organically;
    it was so unusual that it must have been deliberately engineered by the mapmakers
    (who were beholden to current Republicans in office) to increase the number of
    seats Republicans would hold. In contrast, the new map was much more typical (and
    a fair representation). The court was convinced by this network analysis and threw
    out the old map in 2018 to adopt the new one.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 网络基础的异常值检测在最近一起关于选区划分（选区操控）的问题中得到了一个迷人的应用。在2018年之前，宾夕法尼亚州的国会选区地图被广泛认为是支持共和党的党派划分结果，但法院并不信服，直到一组专家引入了网络科学。他们展示了可以将选区地图视为网络，并通过在地图网络空间中计算随机游走来统计性地探查这些网络的几何结构，结果发现宾夕法尼亚州的地图偏离了平均值几个标准差。当时正在考虑的新地图恰好位于地图钟形曲线的中间。他们得出结论，旧地图极不可能是自发形成的；它如此不寻常，以至于必须是地图绘制者（他们依赖当时在职的共和党人）故意设计的，目的是增加共和党席位的数量。相比之下，新地图则典型得多（且更公平）。法院被这一网络分析说服，于是2018年废除了旧地图，采用了新地图。
- en: Even in scenarios that do not outwardly appear to be about networks, there is
    sometimes a way of viewing data as network data—and doing so avails one of a rich
    set of tools that draw from the remarkable geometry of networks.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在那些表面上看起来与网络无关的情景中，有时也可以将数据视为网络数据——这样做就可以利用一套丰富的工具，这些工具借鉴了网络几何的非凡特性。
- en: This chapter focuses on the geometry of networks and how it can be used to define
    a wide collection of metrics that quantify various aspects of the shape and structure
    of a network. In the next chapter, we’ll apply these metrics to explore machine
    learning and other forms of data analysis on network data. Let’s officially begin
    our journey.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍了网络的几何结构及其如何用于定义一系列度量，这些度量量化了网络形状和结构的各个方面。在下一章中，我们将应用这些度量来探索机器学习和其他形式的网络数据分析。让我们正式开始我们的旅程。
- en: The Basics of Network Theory
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络理论基础
- en: 'A network conveys pairwise relationships between entities, which can be individuals,
    objects, items, and so on. The entities are represented by *vertices* (also called
    *nodes*), while a relationship between a pair of entities is represented by an
    *edge* connecting the corresponding pair of vertices. Here are a few examples
    of entities and relationships that have been studied as networks: phone calls
    and text messages between people, proteins that interact in a biological pathway,
    towns connected by roads, websites connected by page links, parts of the brain
    activated during the same task, connections between words or parts of speech in
    a language—and that’s just scratching the surface of popular examples.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 网络传递的是实体之间的成对关系，实体可以是个人、物体、项目等等。这些实体通过*顶点*（也叫*节点*）表示，而实体对之间的关系则通过*边*连接相应的顶点。以下是一些已经作为网络研究的实体和关系的例子：人们之间的电话和短信、在生物通路中相互作用的蛋白质、通过道路连接的城镇、通过页面链接连接的网站、在同一任务中被激活的大脑部分、语言中词语或词性之间的关系——这只是流行例子的一小部分。
- en: When plotting networks, the vertices are depicted as dots that are sometimes
    decorated with symbols so we know which vertex is which; the edges are usually
    straight-line segments, although sometimes it is helpful (for instance, to avoid
    artificial edge crossings) to draw some edges instead as curved arcs. All that
    matters is the collection of vertices and the edges between them—not how long
    the edges are in the plot, the angles between them, or the locations of the vertices.
    In fact, as shown in [Figure 2-1](#figure2-1), the same network can be drawn in
    rather different ways.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在绘制网络时，顶点通常用点表示，有时还会用符号装饰，以便我们知道每个顶点代表的是哪个；边通常是直线段，尽管有时为了避免人工边交叉，可能会选择将一些边绘制成曲线弧。重要的是顶点的集合和它们之间的边，而不是边的长度、角度或顶点的位置。事实上，如[图2-1](#figure2-1)所示，同一网络可以有不同的绘制方式。
- en: These have the same vertices and the same edges connecting the vertices, but
    the plotting of these relationships varies. However we visualize the relationships,
    their underlying structure does not change.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这些网络具有相同的顶点和连接顶点的相同边，但这些关系的绘制方式有所不同。无论我们如何可视化这些关系，它们的基本结构不会改变。
- en: '![](image_fi/503083c02/f02001_m.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02001_m.png)'
- en: 'Figure 2-1: Two different plots of the same network. These have the same vertices
    and the same edges connecting vertices, but the plotting of these relationships
    varies. However we visualize the relationships, their underlying structure does
    not change.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-1：同一网络的两种不同绘制方式。它们具有相同的顶点和相同的连接顶点的边，但关系的绘制方式有所不同。无论我们如何可视化这些关系，它们的基本结构并没有变化。
- en: Directed Networks
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定向网络
- en: A network is *directed* if the edges represent one-way relationships (meaning
    they point from one vertex, called the *source*, to the other vertex, called the
    *target*); otherwise, the edges represent mutual relationships, and the network
    is *undirected*. For instance, for phone conversations, we could create an undirected
    network with an edge between any two people who have talked to each other, or
    we could create a directed network with edges representing outgoing calls from
    the source person to the target person.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果边表示单向关系（即它们从一个顶点指向另一个顶点，前者称为*源*，后者称为*目标*），那么网络就是*定向的*；否则，边表示的是相互关系，网络就是*无向的*。例如，对于电话交谈，我们可以创建一个无向网络，在每两个有过通话的人之间绘制一条边，或者我们可以创建一个定向网络，用边表示从源人物到目标人物的外拨电话。
- en: 'Concretely, suppose we have three work colleagues: Sadako, Pedro, and Georg.
    Sadako is the project lead and, as such, makes calls to Pedro and Georg. Pedro
    calls Georg regarding a question on the engineering side of the project, but Georg
    does not call Pedro or Sadako. Pedro does not call Sadako, as he has already received
    instructions when she calls him. [Figure 2-2](#figure2-2)(a) shows the undirected
    network for these colleagues, while [Figure 2-2](#figure2-2)(b) shows the directed
    network.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，假设我们有三位同事：Sadako、Pedro和Georg。Sadako是项目负责人，因此她会联系Pedro和Georg。Pedro联系Georg，询问项目中与工程方面有关的问题，但Georg既没有联系Pedro，也没有联系Sadako。Pedro不会联系Sadako，因为当Sadako联系他时，他已经收到了指示。[图2-2](#figure2-2)(a)展示了这三位同事的无向网络，而[图2-2](#figure2-2)(b)展示了定向网络。
- en: '![](image_fi/503083c02/f02002.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02002.png)'
- en: 'Figure 2-2: A phone network among three colleagues that is (a) undirected and
    (b) directed'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-2：三位同事之间的电话网络，其中(a)是无向的，(b)是定向的
- en: Other examples of directed networks include travel routes, machine and social
    processes, needle sharing to trace epidemics, and biological process models. Mathematically
    speaking, the biggest difference between Facebook and Twitter is that Facebook
    is an undirected network (friendships are mutual), while Twitter is a directed
    network (users have both followers and accounts followed).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 定向网络的其他例子包括旅行路线、机器和社会过程、通过针头传播追踪流行病，以及生物过程模型。从数学角度讲，Facebook和Twitter之间最大的区别在于，Facebook是一个无向网络（朋友关系是相互的），而Twitter是一个定向网络（用户既有粉丝，也有被关注的账户）。
- en: Networks in R
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: R中的网络
- en: There are two main ways of representing a network in a computer. An *edge list*
    simply lists, in an arbitrary order, all the edges in the network by naming the
    two vertices of each edge (if the network is directed, then the first vertex is
    considered the source and the second vertex the target). A useful package for
    working with network data in R is the igraph library (which also exists in Python
    with similar commands and syntax). To create the directed network in [Figure 2-2](#figure2-2)(b)
    from an edge list, you can use the code in [Listing 2-1](#listing2-1).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机中表示网络的两种主要方式。*边列表*只是按任意顺序列出网络中所有边，通过命名每条边的两个顶点（如果网络是有向的，则第一个顶点被视为源，第二个顶点被视为目标）。在R中用于处理网络数据的一个有用包是igraph库（在Python中也有类似的命令和语法）。要从边列表创建[图2-2](#figure2-2)(b)中的有向网络，可以使用[列表2-1](#listing2-1)中的代码。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Listing 2-1: A script that generates the directed network in [Figure 2-2](#figure2-2)(b)
    from an edge list'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 列表2-1：从边列表生成[图2-2](#figure2-2)(b)中的有向网络的脚本
- en: The other representation of a network is a spreadsheet. If a network has *n*
    vertices, its *adjacency matrix* is the *n*×*n* matrix whose rows and columns
    are indexed by the vertices where 0 in the (*i, j*) entry means there is no edge
    from vertex *i* to vertex *j*, while 1 in this entry means there is such an edge.
    If the network is undirected, then the adjacency matrix is symmetric (equal to
    its own transpose, meaning it is unchanged when swapping its rows with its columns)
    because, in that case, having an edge from vertex *i* to vertex *j* is the same
    as having an edge from vertex *j* to vertex *i*. [Listing 2-2](#listing2-2) provides
    the R code to construct the preceding directed network from an adjacency matrix
    rather than an edge list.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 网络的另一种表示形式是电子表格。如果一个网络有*n*个顶点，其*邻接矩阵*是*n*×*n*的矩阵，其行和列由顶点索引，其中（*i, j*）条目中的0表示从顶点*i*到顶点*j*没有边，而该条目中的1表示存在这样的边。如果网络是无向的，则邻接矩阵是对称的（等于其自身的转置，意味着在交换其行和列时保持不变），因为在这种情况下，从顶点*i*到顶点*j*有边与从顶点*j*到顶点*i*有边是相同的。[图示2-2](#figure2-2)提供了使用R代码从邻接矩阵而不是边列表构建前述有向网络的代码。
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Listing 2-2: A script that generates the directed network in [Figure 2-2](#figure2-2)(b)
    from an adjacency matrix'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 列表2-2：从邻接矩阵生成[图2-2](#figure2-2)(b)中的有向网络的脚本
- en: 'A major advantage of the adjacency matrix approach is that it puts networks
    into the framework of linear algebra, where many powerful tools are available.
    For instance, we can use the spectral theory (eigenvalues and eigenvectors) of
    the adjacency matrix to measure centrality in a network. Adjacency matrices also
    readily generalize to *weighted networks*; by allowing arbitrary numbers as the
    entries (not just the binary 0 and 1 entries discussed so far), we can assign
    a real-number weight to each edge that conveys the strength of the relationship
    represented by that edge. In practice, this can be used to represent many different
    important notions: volume of calls between colleagues in a phone network, distances
    between locations in a transportation network, and so on. You can think of an
    unweighted network as a weighted network in which all the edges have a weight
    equal to 1\. In fact, this is why in [Listing 2-2](#listing2-2) we set the `weighted`
    parameter to `T` (true) even though we wanted to create an unweighted network—otherwise,
    igraph interprets the adjacency matrix differently.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 邻接矩阵方法的一个主要优势是将网络置于线性代数的框架中，这里有许多强大的工具可用。例如，我们可以利用邻接矩阵的谱理论（特征值和特征向量）来衡量网络中的中心性。邻接矩阵也可以很容易地推广到*加权网络*；通过允许任意数作为条目（而不仅仅是讨论过的二进制0和1条目），我们可以为每条边分配一个实数权重，传达该边表示的关系的强度。实际上，这可以用来表示许多不同的重要概念：电话网络中同事之间的通话量，交通网络中位置之间的距离等。你可以把无权网络看作是所有边权重均等于1的加权网络。事实上，这就是为什么在[图示2-2](#figure2-2)中，尽管我们想要创建无权网络，我们还是将`weighted`参数设置为`T`（true）的原因，否则igraph会以不同的方式解释邻接矩阵。
- en: Paths and Distance in a Network
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络中的路径和距离
- en: Two vertices are said to be *neighbors* if they are connected by an edge. Two
    edges in a network are *adjacent* if they have a vertex in common. A *path* in
    a network is a sequence of adjacent edges. If the network is directed, then all
    the edges in a path must be compatibly oriented. For example, in [Figure 2-2](#figure2-2)(b),
    we have a two-edge path from Sadako to Pedro to Georg and a one-edge path from
    Pedro to Georg, but going from Pedro to Sadako to Georg is not a path since the
    edges are not oriented this way.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果两个顶点通过一条边相连，则称它们为*邻居*。在网络中，如果两条边有一个公共顶点，则它们是*相邻的*。网络中的*路径*是一系列相邻的边。如果网络是有向的，则路径中的所有边必须具有兼容的方向。例如，在[图
    2-2](#figure2-2)(b)中，我们有一条从Sadako到Pedro，再到Georg的两条边的路径，还有一条从Pedro到Georg的一条边的路径，但从Pedro到Sadako再到Georg不是一条路径，因为这些边的方向不一致。
- en: The *length* of a path has two different meanings, depending on whether the
    network is weighted or unweighted. In an unweighted network, the length of a path
    is the number of edges in the path; in a weighted network, the length is the sum
    of the weights of the edges in the path. The *network distance* between two vertices
    is the length of the minimal-length path connecting them, assuming there is a
    path from one to the other (if there is no path, the network distance is undefined).
    People—us included—usually just say “shortest” path instead of “minimal-length”
    path, because it sounds more natural. This is somewhat misleading for weighted
    networks, as the minimal-length path is actually the path with the lowest weight,
    which may not be the shortest path in terms of the number of edges in the path.
    However, that’s a minor imperfection in terminology we can all live with if we’re
    careful.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*路径*的*长度*有两种不同的含义，取决于网络是加权的还是无加权的。在无加权网络中，路径的长度是路径中边的数量；在加权网络中，路径的长度是路径中各边权重的总和。两个顶点之间的*网络距离*是连接它们的最短路径的长度，前提是从一个顶点到另一个顶点存在路径（如果没有路径，网络距离是未定义的）。我们—包括我们自己—通常会说“最短”路径，而不是“最小长度”路径，因为这样听起来更自然。这对于加权网络来说有点误导，因为最小长度路径实际上是权重最小的路径，而不一定是路径中边数最少的最短路径。然而，如果我们小心一点，这只是一个术语上的小瑕疵，我们可以接受。'
- en: As an example, let’s consider the weighted undirected network in [Figure 2-3](#figure2-3),
    representing four towns and the length (in miles) of the roads between them.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个例子，让我们考虑[图 2-3](#figure2-3)中的加权无向网络，表示四个城镇及其之间道路的长度（单位：英里）。
- en: '![](image_fi/503083c02/f02003.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02003.png)'
- en: 'Figure 2-3: A plot of town connectivity and miles of road between connected
    towns'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-3：城镇连通性图及连接城镇之间的道路英里数
- en: The shortest path between V2 and V3 is the 8-mile path passing through V4, rather
    than the 12-mile road directly connecting these two towns. The network distance
    between V2 and V3 is therefore 8 miles rather than 12\. Note that the physical
    lengths of the edges and paths in this plot do not in any way represent the lengths
    as defined by the weights; in other words, Euclidean distance in a network plot
    has nothing to do with network distance! The placement of the vertices in a network
    plotted by igraph is chosen for aesthetic reasons (to minimize the number of edge
    crossings, for instance) rather than to reflect edge weights. This can be tricky
    to get used to at first but over time will start to feel natural. [Listing 2-3](#listing2-3)
    provides the R code to create and plot the network in this example.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: V2和V3之间的最短路径是经过V4的8英里路程，而不是直接连接这两个城镇的12英里道路。因此，V2和V3之间的网络距离是8英里，而不是12英里。请注意，这张图中的边和路径的物理长度并不代表由权重定义的长度；换句话说，网络图中的欧几里得距离与网络距离无关！通过igraph绘制的网络中，顶点的位置是出于美学原因选择的（例如，为了最小化边的交叉），而不是反映边的权重。刚开始时可能有些难以适应，但随着时间的推移，会变得很自然。[列表
    2-3](#listing2-3)提供了创建和绘制此示例网络的R代码。
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Listing 2-3: A script that generates the network of connected towns from [Figure
    2-3](#figure2-3) and plots it'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 2-3：生成[图 2-3](#figure2-3)中连接的城镇网络并绘制它的脚本
- en: Network distances can play a major role in real-world problems. During the 2018
    Ebola outbreak in the eastern Democratic Republic of the Congo, limited physical
    routes between towns impacted epidemic spread, supply-chain logistics to move
    medical supplies and personnel, and population mixing between impacted towns and
    towns that didn’t have active cases at the time.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 网络距离在现实世界中的问题中可能起着重要作用。在2018年刚果民主共和国东部的埃博拉疫情爆发期间，城镇之间有限的物理路线影响了疫情的传播、医疗物资和人员的供应链物流，以及受影响城镇和没有活跃病例的城镇之间的人口流动。
- en: 'A word of caution about weighted networks: we tend to think of the vertices
    that are near each other (defined by network distance) as being the most closely
    related or the most strongly connected. This means that the smaller the weight
    of an edge, the stronger the relationship it represents. For this reason, you’ll
    often want to use reciprocals when setting the weights in a network. For instance,
    in a weighted phone network, rather than setting the weight between person A and
    person B to be the number of calls *c*[AB] between them, you should set it to
    be the reciprocal 1/*c*[AB] so that people who talk to each other more frequently
    will be closer to (rather than farther from) each other in the weighted network.
    In [Chapter 3](c03.xhtml), we’ll revisit the town network from [Figure 2-3](#figure2-3),
    and we’ll reciprocate the weights so that they represent proximity rather than
    distance.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 关于加权网络的一个注意事项：我们往往认为相互接近的顶点（由网络距离定义）是最相关或连接最紧密的。这意味着边的权重越小，所代表的关系就越强。因此，在设置网络中的权重时，你通常会希望使用倒数。例如，在加权电话网络中，而不是将A和B之间的权重设置为它们之间的通话次数*c*[AB]，你应该将其设置为倒数1/*c*[AB]，这样与彼此频繁通话的人在加权网络中会更接近（而不是更远）。在[第3章](c03.xhtml)中，我们将重新审视[图2-3](#figure2-3)中的城市网络，并将权重倒过来，使它们代表接近性而不是距离。
- en: To start exploring the geometry established by network distance, we’ll turn
    now to some notions of centrality (which can also be thought of as importance
    or influence) in a network. Since we will rely on igraph throughout this chapter,
    we will no longer include `library(igraph)` in the code snippets; therefore, be
    sure to load this library before running any of the following code samples.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始探索网络距离所建立的几何结构，我们现在将转向一些网络中的中心性（也可以理解为重要性或影响力）概念。由于我们在本章中将始终依赖于igraph库，我们将不再在代码片段中包含`library(igraph)`；因此，在运行以下任何代码示例之前，请确保加载该库。
- en: Network Centrality Metrics
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络中心性度量
- en: Measuring the *centrality*, or importance, of each vertex in a network allows
    you to manually analyze the structure and functional behavior of networks. It
    is also frequently used for feature extraction, as centrality metrics provide
    numerical features that can be fed into traditional supervised and unsupervised
    machine learning algorithms, as we’ll see in [Chapter 3](c03.xhtml). In other
    words, centrality metrics provide a way to equip network data with more conventional
    spreadsheet structure. There are many methods for quantifying vertex centrality,
    almost all of which involve notions from the preceding section—paths, network
    distance, and the adjacency matrix.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 测量网络中每个顶点的*中心性*或重要性，可以让你手动分析网络的结构和功能行为。它还经常用于特征提取，因为中心性度量提供了数值特征，这些特征可以输入到传统的监督和无监督机器学习算法中，正如我们在[第3章](c03.xhtml)中将看到的那样。换句话说，中心性度量为网络数据提供了一种更传统的电子表格结构。量化顶点中心性的方法有很多，几乎所有方法都涉及前一节中的一些概念——路径、网络距离和邻接矩阵。
- en: Centrality has many real-world applications. In epidemiology, individuals who
    are more central in contact tracing networks tend to spread disease to more people
    than less central individuals. Indeed, central individuals are typically connected
    to a wider range of people, and additionally central individuals often connect
    groups of people who otherwise would be unlikely to meet—thereby providing bridges
    between these groups across which disease can spread. In social media, central
    individuals are the “influencers” whose opinions are heard by many and spread
    widely. In marketing, central individuals can act as lucrative vectors for advertising
    campaigns. In criminology, identifying central individuals in drug distribution
    or organized crime networks allows law enforcement agencies to target their actions
    most effectively. In scientific research, centrality in citation networks helps
    reveal high-impact publications.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 中心性有许多现实世界的应用。在流行病学中，接触追踪网络中更中心的个体往往会传播疾病给更多人，而较不中心的个体传播的疾病较少。事实上，中心个体通常与更多人相连，此外，中心个体往往会将一些原本不太可能相遇的群体连接起来——从而为这些群体之间提供传播疾病的桥梁。在社交媒体中，中心个体就是那些“网红”，他们的意见被许多人听到并广泛传播。在市场营销中，中心个体可以作为广告活动的有利媒介。在犯罪学中，识别毒品分销或有组织犯罪网络中的中心个体可以帮助执法机构更有效地开展行动。在科学研究中，引用网络中的中心性有助于揭示高影响力的出版物。
- en: There are more centrality metrics than can be covered in this chapter, so we’ll
    focus on a handful of the popular ones that are implemented in the igraph library.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 中心性度量指标远比本章所能涵盖的要多，因此我们将重点介绍一些在igraph库中实现的流行指标。
- en: The Degree of a Vertex
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 顶点的度
- en: 'The most basic measure of centrality of a vertex is its *degree*, which by
    definition is the number of edges attached to the vertex. In a directed network,
    this can be broken down into two pieces: the *in-degree* counts the number of
    edges with this vertex as the target vertex, and the *out-degree* counts the number
    of edges with this vertex as the source vertex. In a Facebook network, your degree
    is your number of friends; in Twitter, your in-degree is your number of followers,
    and your out-degree is the number of accounts you follow. Going back to [Figure
    2-3](#figure2-3), towns V2 and V3 each have degree 2, while V1 has degree 1 and
    V4 has degree 3.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 顶点的最基本中心性度量是其*度*，按照定义，它是与该顶点相连的边的数量。在有向网络中，这可以分为两个部分：*入度*计算的是将该顶点作为目标顶点的边的数量，*出度*计算的是将该顶点作为源顶点的边的数量。在Facebook网络中，你的度是你的朋友数量；在Twitter中，你的入度是你的粉丝数量，而你的出度是你关注的账户数量。回到[图
    2-3](#figure2-3)，城镇V2和V3的度都是2，而V1的度是1，V4的度是3。
- en: In a weighted network, you can also measure the *strength* (also called the
    *weighted degree*) of a vertex, which is the sum of the weights of the edges attached
    to the vertex. In [Figure 2-3](#figure2-3), towns V1, V2, V3, and V4 have strengths
    4, 14, 18, and 12, respectively. Since an unweighted network can be viewed as
    a weighted network in which all edges have weight 1, the vertex degree really
    is just a special case of strength.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在加权网络中，你还可以衡量一个顶点的*强度*（也称为*加权度*），即与该顶点相连的所有边的权重之和。在[图 2-3](#figure2-3)中，城镇V1、V2、V3和V4的强度分别为4、14、18和12。由于无权网络可以视为所有边的权重均为1的加权网络，因此顶点的度实际上是强度的一个特例。
- en: Despite its simplicity, the degree of a vertex is a valuable metric. It is the
    one numerical quantity most social media platforms publicly list for each account,
    and it is typically used to determine how much an influencer is paid in a marketing
    campaign to promote a product. However, it has impactful limitations. The degree
    of a vertex measures the size of that vertex’s immediate network of connections,
    but it does not capture the structure of this network nor does it look beyond
    these immediate connections. To illustrate why this matters, consider a Twitter
    user with 10,000 followers, each of whom has only a small number of followers;
    now compare this with a Twitter user who has only a few hundred followers, but
    some of these followers are highly influential users. While the first user has
    a higher degree, which user’s tweets are more likely to receive more retweets
    in the end? This example hints at how networks involve both breadth and depth,
    and degree is more focused on the former.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管其简单性，顶点的度是一个有价值的度量。它是大多数社交媒体平台公开列出的每个账户的唯一数值指标，通常用于确定影响者在营销活动中推广产品时的报酬。然而，它也有显著的局限性。顶点的度衡量的是该顶点直接连接网络的大小，但它并没有反映网络的结构，也没有考虑这些直接连接之外的内容。为了说明这一点，假设有一个Twitter用户拥有10,000个粉丝，而这些粉丝每个只有少量粉丝；现在将此与另一个只有几百个粉丝，但其中一些粉丝是极具影响力的用户进行比较。虽然第一个用户的度更高，但哪个用户的推文更可能最终获得更多转发？这个例子提示了网络涉及的既有广度又有深度，而度更侧重于前者。
- en: For another example of what degree does and does not capture, imagine two individuals
    in a contact tracing network. Suppose one user has more contacts (and hence a
    higher degree), but those contacts are mostly all connected to each other anyway,
    whereas the other individual has fewer contacts, but the contacts are spread across
    multiple communities that otherwise have almost no interaction. (We’ll see a concrete
    example of this situation later in this chapter.) Which individual poses a greater
    epidemiological risk during an outbreak?
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个关于度的示例，说明度能捕捉到什么，不能捕捉到什么，假设在一个接触追踪网络中有两个个体。假设一个用户有更多的联系人（因此度更高），但这些联系人大多数彼此之间已经互相关联，而另一个用户有较少的联系人，但这些联系人分布在多个几乎没有互动的社区中。（稍后在本章中，我们将看到这种情况的具体例子。）在疫情爆发期间，哪个个体的流行病学风险更大？
- en: These two limitations of degree—ignoring network depth and ignoring community-bridging
    properties—are two of the main reasons that we must push deeper into the geometry
    of networks. So, let’s take a brief march through the zoo of vertex centrality
    measures that go beyond degree.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 度数的这两个限制——忽略网络深度和忽略社区桥接属性——是我们必须深入研究网络几何学的主要原因之一。那么，接下来让我们简要地浏览一下超越度数的顶点中心性度量方法。
- en: The Closeness of a Vertex
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 顶点的接近度
- en: How does one determine whether a vertex is located near the center of a network
    or whether it’s near the periphery? The *closeness* of a vertex, defined as the
    reciprocal of the sum of network distances between this vertex and each other
    vertex in the network, is designed to capture this distinction. A vertex that
    is near the center of the network will have a relatively modest distance to the
    other vertices in the network, but a more peripheral vertex will have a modest
    distance to some vertices but a large distance to the vertices on the “opposite”
    side of the network. This means the sum of distances for a central vertex is smaller
    than the sum of distances for a peripheral vertex; reciprocating this sum flips
    this around so that the closeness score is greater for a central vertex than for
    a peripheral vertex.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如何判断一个顶点是位于网络中心附近，还是位于边缘附近呢？一个顶点的*接近度*，定义为该顶点与网络中每个其他顶点之间的网络距离之和的倒数，旨在捕捉这一区别。一个位于网络中心的顶点与其他顶点的距离相对较小，而一个位于边缘的顶点可能与某些顶点的距离适中，但与网络“另一端”的顶点的距离较大。这意味着中心顶点的距离之和小于边缘顶点的距离之和；倒数这个和会反转这个关系，使得中心顶点的接近度得分大于边缘顶点的得分。
- en: In [Figure 2-3](#figure2-3), you might intuitively guess that V4 is the most
    central, V2 and V3 are moderately central, and V1 is the most peripheral. Indeed,
    if we ignore the edge weights and compute the closeness scores as an unweighted
    network, we get 0.20, 0.25, 0.25, and 0.33 for V1, V2, V3, and V4, respectively.
    For instance, the closeness of V2 is 1/(1 + 1 + 2). When using the edge weights,
    we get closeness scores of 0.05, 0.06, 0.04, and 0.08, so V4 is still the most
    central, but now V3 is the most peripheral; this is because the edge weights make
    V3 have a relatively large network distance from the other vertices.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 2-3](#figure2-3)中，你可能直观地猜测V4是最中心的，V2和V3是适度中心的，而V1是最边缘的。实际上，如果我们忽略边的权重，并将其作为一个无权重的网络来计算接近度得分，我们得到V1、V2、V3和V4的接近度分别为0.20、0.25、0.25和0.33。例如，V2的接近度是1/(1
    + 1 + 2)。当使用边的权重时，我们得到的接近度得分为0.05、0.06、0.04和0.08，因此V4仍然是最中心的，但现在V3是最边缘的；这是因为边的权重使得V3与其他顶点的网络距离相对较大。
- en: The Betweenness of a Vertex
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 顶点的介数
- en: The *betweenness* of a vertex measures centrality by computing how many paths
    in the network pass through the vertex; more precisely, it is the sum over all
    pairs of other vertices in the network of the fraction of shortest paths between
    the pair of vertices that pass through the vertex in question. When considering
    [Figure 2-3](#figure2-3) as an unweighted network, the betweenness of V1 is 0
    because no shortest paths between the remaining vertices pass through V1\. The
    same is true of V2 and V3\. The betweenness of V4, however, is 2 = 1 + 1 + 0,
    as there is one shortest path between V1 and V2 that passes through V4, there
    is one shortest path between V1 and V3 that passes through V4, and the shortest
    path between V2 and V3 does not pass through V4.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一个顶点的*介数*通过计算有多少条路径经过该顶点来衡量中心性；更精确地说，它是网络中所有其他顶点对之间最短路径的分数之和，这个分数表示每对顶点之间的最短路径中经过该顶点的比例。当考虑[图
    2-3](#figure2-3)作为一个无权重的网络时，V1的介数为0，因为没有剩余顶点之间的最短路径经过V1。V2和V3也是如此。然而，V4的介数是2 =
    1 + 1 + 0，因为V1和V2之间有一条最短路径经过V4，V1和V3之间有一条最短路径经过V4，而V2和V3之间的最短路径不经过V4。
- en: In [Figure 2-4](#figure2-4), each vertex has a betweenness score of 0.5\. For
    instance, for V1 the one-edge path between V2 and V4 does not pass through V1,
    the one-edge path between V3 and V4 does not pass through V1, and between V2 and
    V3 there are two shortest paths, one of which passes through V1, combining to
    give a betweenness score of 0 + 0 + 1/2.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 2-4](#figure2-4)中，每个顶点的介数得分为0.5。例如，对于V1，V2和V4之间的单边路径不经过V1，V3和V4之间的单边路径也不经过V1，而V2和V3之间有两条最短路径，其中一条经过V1，合计得到介数得分为0
    + 0 + 1/2。
- en: '![](image_fi/503083c02/f02004.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02004.png)'
- en: 'Figure 2-4: A network with four vertices connecting as a square'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-4：一个四个顶点连接成正方形的网络
- en: If you think of a network as encoding the ways that something (materials, information,
    disease, traffic, and so on) can travel between entities, then shortest paths
    are the most efficient travel routes. Betweenness centrality measures how disruptive
    removing a vertex would be to these routes. For example, in a shipping distribution
    network, the betweenness of a vertex indicates the number of shipping routes that
    would be impacted if a particular distribution center is shut down (not counting
    routes originating or terminating at that distribution center), weighted by the
    extent of this impact. In [Figure 2-3](#figure2-3) (viewed as an unweighted network),
    removing V1 does not affect the shipping routes among the other cities (betweenness
    score of 0), but removing V4 completely takes away two shipping routes (betweenness
    score of 2). In [Figure 2-4](#figure2-4), removing V1 impacts transportation between
    V2 and V3, but it takes out only half of the shipping routes between them (betweenness
    score of 0.5). Betweenness centrality’s use in estimating disruptive potential
    has found many practical applications; for instance, it identifies important servers
    to protect in a computer network (or which ones would be most effective to target
    in an adversarial attack!).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将网络看作是编码某物（材料、信息、疾病、交通等）如何在实体之间流动的方式，那么最短路径就是最有效的旅行路线。中介中心性衡量的是移除一个顶点对这些路线的破坏程度。例如，在一个货运配送网络中，一个顶点的中介中心性表示如果某个配送中心关闭（不包括以该配送中心为起点或终点的路线），有多少条运输路线会受到影响，并按影响的程度加权。[图
    2-3](#figure2-3)（视为无权网络）中，移除 V1 并不影响其他城市之间的运输路线（中介中心性为 0），但移除 V4 会完全中断两条运输路线（中介中心性为
    2）。在[图 2-4](#figure2-4)中，移除 V1 会影响 V2 和 V3 之间的运输，但只中断它们之间一半的运输路线（中介中心性为 0.5）。中介中心性在估算破坏潜力方面有很多实际应用；例如，它可以帮助识别计算机网络中需要保护的重要服务器（或者在对抗性攻击中最有效的攻击目标！）。
- en: While closeness and betweenness measure rather different aspects of the centrality
    of a vertex, they are both based on shortest paths in the network. Shortest paths
    between points have a special name in geometry, *geodesics*, and we’ll return
    to them in much more generality in Chapters [4](c04.xhtml), 5, and [6](c06.xhtml).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管接近中心性和中介中心性衡量的是顶点中心性的不同方面，但它们都基于网络中的最短路径。两点之间的最短路径在几何学中有一个特殊的名称，叫做*测地线*，我们将在[第4章](c04.xhtml)、第5章和[第6章](c06.xhtml)中更广泛地讨论这一概念。
- en: All the remaining centrality measures that we’ll cover in this section are based
    on the adjacency matrix, and they can be thought of as variants of the famous
    PageRank algorithm that Google initially used (and still uses in some capacity)
    to rank search results by estimating importance in the directed network whose
    vertices are websites and whose edges are links. The math involved in these next
    centrality measures is heavier, but we’ll try to highlight the main ideas and
    big picture. Practically speaking, it is far more important to develop an intuition
    for what these centrality scores convey than to understand the details of their
    computation.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中我们将介绍的所有剩余的中心性度量都是基于邻接矩阵的，可以将它们视为著名的PageRank算法的变种，Google最初使用该算法（并且在某些方面仍在使用）来通过估算在有向网络中顶点的关联性来对搜索结果进行排名，其中顶点是网站，边是链接。接下来的这些中心性度量涉及的数学更加复杂，但我们会尽量突出主要思想和大致框架。实际上，发展对这些中心性分数所传达信息的直觉要比理解它们计算的细节更为重要。
- en: Eigenvector Centrality
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 特征向量中心性
- en: Adjacency matrix-based centrality measures aim to capture the basic idea that
    the importance of a vertex is determined by the importance of the vertices to
    which it is connected. This is where the notion of *network depth* alluded to
    earlier comes in. On social media, for instance, it isn’t just your number of
    followers that matters, it is the number of followers your followers have, the
    number of followers they have, and so on.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 基于邻接矩阵的中心性度量旨在捕捉基本思想：一个顶点的重要性由它所连接的顶点的重要性决定。这就是之前提到的*网络深度*概念的体现。例如，在社交媒体上，重要的并不仅仅是你拥有多少个粉丝，更重要的是你的粉丝拥有多少粉丝，他们的粉丝又有多少粉丝，依此类推。
- en: 'Let’s make this idea precise. Suppose we want to assign an importance score
    *x*[*i*] to each vertex *i*. A simple model is to assume that the importance of
    each vertex is proportional to a weighted sum of the importances of the neighboring
    vertices:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把这个思想说得更精确一些。假设我们想为每个顶点 *i* 分配一个重要性得分 *x*[*i*]。一个简单的模型是，假设每个顶点的重要性与其邻接顶点的重要性的加权和成正比：
- en: x[i] = c∑[^(a[ij]x[j])]
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: x[i] = c∑[^(a[ij]x[j])]
- en: 'where the sum is over vertices *j* that are neighbors to vertex *i*, *a*[*ij*]
    is the weight of the edge between vertex *i* and vertex *j*, and *c* is a constant
    of proportionality that we’ll assume is independent of *i*. This formula can be
    expressed as the matrix equation:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，求和是针对与顶点 *i* 邻接的顶点 *j*，*a*[*ij*] 是顶点 *i* 和顶点 *j* 之间边的权重，*c* 是一个比例常数，我们假设它与
    *i* 无关。这个公式可以表示为矩阵方程：
- en: x⃗ = cAx⃗
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: x⃗ = cAx⃗
- en: where ***A*** is the adjacency matrix of the network. You might recall from
    linear algebra that this equation stipulates that the vector of vertex importances
    *x⃗* is an *eigenvector* for the adjacency matrix, and 1/*c* is the corresponding
    *eigenvalue*. When viewing a matrix as a linear transformation, the eigenvectors
    are the directions that get stretched but not rotated, and the eigenvalues measure
    how much these directions are stretched.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，***A*** 是网络的邻接矩阵。你可能还记得线性代数中的内容，这个方程规定了顶点重要性向量 *x⃗* 是邻接矩阵的一个 *特征向量*，而 1/*c*
    是相应的 *特征值*。当将矩阵视为线性变换时，特征向量是被拉伸但不旋转的方向，特征值则衡量这些方向被拉伸的程度。
- en: 'Matrices typically have many different eigenvectors and eigenvalues, and the
    eigenvalues need not be real numbers, so at first glance there could be many different
    solutions to the preceding vertex assignment problem—some of which may involve
    complex values. Fortunately, however, if we disallow negative edge weights and
    importance scores, then something called the *Perron–Frobenius theorem* guarantees
    that we can find a unique real-valued solution to this vertex assignment problem.
    In other words, with this non-negativity condition there is always exactly one
    way of assigning importance scores to all the vertices in the network that satisfy
    all of our linear neighbor influence conditions. Well, almost: to get uniqueness,
    we need to normalize the importance scores (for instance, by scaling so that the
    largest importance score of any vertex in the network is 1). Doing this yields
    the *eigenvector centrality* scores for vertices.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵通常有许多不同的特征向量和特征值，并且特征值不一定是实数，所以乍一看，前述的顶点分配问题可能有许多不同的解——其中一些可能涉及复数值。然而幸运的是，如果我们不允许负的边权重和重要性得分，那么称为
    *佩龙-弗罗贝纽斯定理* 的定理保证我们可以找到唯一的实数解。换句话说，满足非负性条件时，总是存在一种唯一的方式来为网络中所有顶点分配重要性得分，从而满足我们所有的线性邻居影响条件。几乎是这样：为了保证唯一性，我们需要对重要性得分进行归一化（例如，按比例缩放，使得网络中任何顶点的最大重要性得分为
    1）。这样做就能得到顶点的 *特征向量中心性* 得分。
- en: In [Figure 2-3](#figure2-3), the eigenvector centrality scores (rounded to the
    nearest one-hundredth) for V1, V2, V3, and V4, when viewed as an unweighted network,
    are 0.46, 0.85, 0.85, and 1, respectively. This matches our intuition that V4
    is the most central and V1 is the least central. When computed as a weighted network,
    using the edge weights shown in that figure, the scores are instead 0.16, 0.91,
    1, and 0.59\. So, in the weighted network, V1 is still the least central, but
    the most central is V3.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 2-3](#figure2-3)中，当将网络视为无权网络时，V1、V2、V3 和 V4 的特征向量中心性得分（四舍五入到小数点后两位）分别为 0.46、0.85、0.85
    和 1。这与我们直觉一致，V4 是最中心的，而 V1 是最不中心的。当作为加权网络计算时，使用该图中显示的边权重，得分则分别为 0.16、0.91、1 和
    0.59。因此，在加权网络中，V1 仍然是最不中心的，但最中心的是 V3。
- en: The main point of eigenvector centrality is that it is higher for vertices that
    neighbor vertices with higher eigenvector centrality scores. In social network
    terms, this means your importance is determined by the importance of your friends.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 特征向量中心性（eigenvector centrality）的主要观点是，邻近特征向量中心性得分较高的顶点，其特征向量中心性也较高。用社交网络的术语来说，这意味着你的重要性由你朋友的重要性决定。
- en: We can interpret eigenvector centrality more precisely by thinking in terms
    of random walks. Imagine you start at a random vertex and repeatedly take steps
    by choosing one of the edges attached to your current vertex at random. If the
    network is unweighted, then you choose these edges with equal probability, whereas
    if the network is weighted, then the probabilities for selecting the edges are
    proportional to the edge weights. The eigenvector centrality scores are proportional
    to the fraction of time you spend at each vertex when doing these random walks.
    For example, if the network represents the World Wide Web (where vertices are
    websites and edges are links), then eigenvector centrality conveys the amount
    of traffic each site gets if users just randomly click links.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过从随机游走的角度更精确地解释特征向量中心性。假设你从一个随机顶点开始，不断地选择一个与你当前顶点相连的边来进行随机行走。如果网络是无权的，那么你以相等的概率选择这些边，而如果网络是加权的，则选择边的概率与边的权重成正比。特征向量中心性得分与你在这些随机游走中花费在每个顶点的时间比例成正比。例如，如果网络代表的是万维网（其中顶点是网站，边是链接），那么特征向量中心性反映了如果用户只是随机点击链接，每个网站所获得的流量。
- en: 'One drawback with eigenvector centrality is that random walkers can never travel
    between two different parts of a network if there are no paths connecting the
    two parts. In other words, each random walker is constrained to the “island” (or,
    in more mathematical terms, *connected component*) it starts on. This is especially
    problematic for directed networks because edges can be traversed in only one direction:
    if the random walker reaches a dead end, it will remain stuck there forever. One
    way to help get our random walkers past islands and dead ends is to allow them
    to randomly jump to different locations in the network. That’s the main idea behind
    the next measure we’ll look at.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 特征向量中心性的一个缺点是，如果两个网络部分之间没有路径连接，随机游走者永远无法在这两部分之间移动。换句话说，每个随机游走者只能局限于它开始时所在的“岛屿”（或者用更数学化的术语，*连通分量*）。对于有向网络，这个问题尤其严重，因为边只能朝一个方向遍历：如果随机游走者到达死胡同，它将永远被困在那里。帮助随机游走者越过岛屿和死胡同的一种方法是允许它们随机跳跃到网络中的不同位置。这正是我们接下来要看的度量方法的主要思想。
- en: PageRank Centrality
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PageRank 中心性
- en: Google’s *PageRank centrality* is only a small modification of eigenvector centrality;
    it replaces the adjacency matrix with a scaled version before computing the eigenvector.
    The PageRank scores for V1, V2, V3, and V4 in [Figure 2-3](#figure2-3), computed
    as an unweighted network, are 0.13, 0.25, 0.25, and 0.37, respectively.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Google的*PageRank 中心性*只是特征向量中心性的一个小修改；它在计算特征向量之前，将邻接矩阵替换为一个缩放版本。在[图 2-3](#figure2-3)中，V1、V2、V3
    和 V4 的 PageRank 分数，计算为一个无权网络，分别为 0.13、0.25、0.25 和 0.37。
- en: 'The best way to understand PageRank is in terms of random walk probabilities.
    We play the same game as we did with eigenvector centrality, except now at each
    step there are two possibilities: the random walker either walks across one of
    the attached edges, as before, or jumps directly to a random vertex in the network.
    In the World Wide Web example, this means either people can click links or they
    can directly type URLs in their web browsers. This ability to jump helps the random
    walkers explore greater extents of the network, which helps boost the information
    captured by this centrality score compared to eigenvector centrality.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 理解 PageRank 的最佳方式是从随机游走的概率角度来看。我们与特征向量中心性时玩的游戏相同，只不过现在每一步有两种可能性：随机游走者要么像之前一样穿越一条相连的边，要么直接跳到网络中的一个随机顶点。在万维网的例子中，这意味着人们既可以点击链接，也可以直接在浏览器中输入
    URL。跳跃的能力帮助随机游走者探索网络的更大范围，这有助于提升这个中心性分数所捕捉的信息，相比于特征向量中心性，它能提供更多的网络覆盖。
- en: Katz Centrality
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Katz 中心性
- en: Another useful centrality measure that is also computed from the spectral theory
    of the network’s adjacency matrix is *Katz centrality* (sometimes called *Bonacich
    centrality* or *alpha centrality*), which is essentially a “higher-order” extension
    of the notion of degree. In an unweighted network, Katz centrality is a weighted
    sum of the number of vertices that can be reached by a path of length 1 (this
    coincides with the degree), the number of vertices that can be reached by a path
    of length 2, the number that can be reached by a path of length 3, and so on.
    The weights in this weighted sum are determined by the length of the path and
    by a user-specified “attenuation” parameter (called *alpha*) that ranges from
    0 to 1\. More precisely, paths of length *d* are given weight *α*^(*d*). This
    means that the farther away a vertex is, the less it contributes to the weighted
    sum.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的中心性度量是*Katz中心性*（有时也称为*Bonacich中心性*或*alpha中心性*），它本质上是度数概念的“高阶”扩展。在一个无权网络中，Katz中心性是一个加权和，表示可以通过长度为1的路径到达的顶点数量（这与度数相符）、可以通过长度为2的路径到达的顶点数量、可以通过长度为3的路径到达的顶点数量，依此类推。这个加权和中的权重由路径长度和一个用户指定的“衰减”参数（称为*alpha*）决定，alpha的取值范围从0到1。更准确地说，长度为*d*的路径的权重为*α*^(*d*)。这意味着，越远的顶点，其对加权和的贡献越小。
- en: For example, in social networks or social media, the biggest contributor to
    your Katz centrality is your number of friends, the next biggest contributors
    are the numbers of friends these friends have, and so on. In short, Katz centrality
    is a more sophisticated version of degree that looks deeper into your network’s
    overall connectivity. It turns out that eigenvector centrality is a limit of Katz
    centrality as the attenuation parameter approaches a certain value. Be careful
    when choosing the parameter alpha, though; you should always choose it to be less
    than the reciprocal of something called the *spectral radius* of the network (which
    we’ll cover in the “Global Network Metrics” section); igraph won’t give you an
    error or even a warning message if you don’t do this—you’ll just get values that
    don’t make sense, such as negative scores for some vertices.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在社交网络或社交媒体中，你的Katz中心性最大贡献者是你的朋友数量，接下来最大贡献者是这些朋友的朋友数量，依此类推。简而言之，Katz中心性是度数的一个更复杂版本，深入探讨了你网络的整体连接性。事实证明，特征向量中心性是Katz中心性在衰减参数趋近于某个特定值时的极限。然而，在选择参数alpha时要小心；你应该始终选择它小于网络的*谱半径*的倒数（我们将在“全局网络度量”部分讲解）；如果你不这样做，igraph不会给你报错或警告信息——你只是会得到一些不合理的值，例如某些顶点的负得分。
- en: Hub and Authority
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 中心节点与权威节点
- en: 'Another way to generalize eigenvector centrality is to provide each vertex
    with two separate importance scores rather than just one. The most popular incarnation
    of this is called *authority and hubness*. Conceptually, *authority centrality*
    measures how much knowledge of the network is stored within a vertex, while *hub
    centrality* measures how well a vertex knows where to find this knowledge (quick
    access to the information stored in nearby vertices). These two measures are interrelated:
    strong hubs tend to connect to strong authorities. Hubs usually have a high rate
    of connections among the vertices involved that allow for rapid information sharing.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种推广特征向量中心性的方式是为每个顶点提供两个独立的重要性得分，而不仅仅是一个。最常见的形式被称为*权威性和中心性*。从概念上讲，*权威性中心性*衡量的是网络中多少知识储存在某个顶点，而*中心性*衡量的是一个顶点有多好地知道如何找到这些知识（即快速访问附近顶点中存储的信息）。这两者是相互关联的：强大的中心节点往往连接到强大的权威节点。中心节点通常在相关顶点之间有很高的连接率，这有助于快速共享信息。
- en: Measuring Centrality in an Example Social Network
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在示例社交网络中度量中心性
- en: 'To better understand all these vertex centrality measures, it helps to consider
    a more interesting example of a network than what we’ve considered so far. The
    script in [Listing 2-4](#listing2-4) loads and then plots a network from a file
    that represents a social network of one of this book’s authors (Farrelly). You
    can find the dataset, along with the other files for the book, on the book’s web
    page: [https://nostarch.com/shapeofdata](https://nostarch.com/shapeofdata).'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解所有这些顶点中心性度量，可以考虑一个比我们之前考虑的更有趣的网络示例。[Listing 2-4](#listing2-4)中的脚本加载并绘制了一个来自文件的网络，该文件表示本书其中一位作者（Farrelly）的社交网络。你可以在本书的网页上找到这个数据集及其他文件：[https://nostarch.com/shapeofdata](https://nostarch.com/shapeofdata)。
- en: '[PRE3]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Listing 2-4: A script that loads a social network dataset, converts it to a
    graph object, and then plots it'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 清单 2-4：一个脚本，用于加载社交网络数据集，将其转换为图对象，然后绘制图形
- en: '[Figure 2-5](#figure2-5) shows the resulting network plot (which will look
    a little different each time you run this script).'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 2-5](#figure2-5) 显示了生成的网络图（每次运行该脚本时，结果会略有不同）。'
- en: '![](image_fi/503083c02/f02005.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02005.png)'
- en: 'Figure 2-5: A plot of Farrelly’s social network dataset, including connections
    within her medical school service groups (top cluster) and her veterans organization
    groups (bottom cluster), with vertex 7 (Farrelly herself) serving as a bridge'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-5：Farrelly 社交网络数据集的图，展示了她的医学院服务小组（上方簇）和退伍军人组织小组（下方簇）之间的连接，其中顶点 7（即 Farrelly
    本人）充当了桥梁
- en: One of the best ways to develop an intuition for centrality measures is to plot
    them as the vertex size parameter. (More generally, using vertex size to illustrate
    any numerical property associated to the vertices of a network is an excellent
    visualization technique—it is a network version of bubble charts.) Since the range
    of the different centrality measures varies, in what follows we rescale each one
    so that the maximum value is 20, as this seems to give fairly readable plots.
    [Listing 2-5](#listing2-5) provides the R code we use to plot each one.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 发展中心性度量直觉的最佳方法之一是将其绘制为顶点大小参数。（更一般来说，使用顶点大小来展示与网络顶点相关的任何数值属性是一种出色的可视化技术——这可以视为气泡图在网络中的应用。）由于不同中心性度量的范围各不相同，接下来我们将重新缩放每个度量值，使其最大值为
    20，因为这似乎能提供比较清晰的图形。[清单 2-5](#listing2-5) 提供了我们用来绘制每个度量的 R 代码。
- en: '[PRE4]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Listing 2-5: A script that creates bubble chart network plots for each centrality
    measure on Farrelly’s social network dataset'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 清单 2-5：一个脚本，用于为 Farrelly 社交网络数据集中的每个中心性度量创建气泡图网络图
- en: Let’s start with closeness and betweenness, illustrated in [Figure 2-6](#figure2-6).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们先从接近中心性和介数中心性开始，如 [图 2-6](#figure2-6) 所示。
- en: '![](image_fi/503083c02/f02006_m.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02006_m.png)'
- en: 'Figure 2-6: Bubble charts of closeness centrality (left) and betweenness centrality
    (right) on Farrelly’s social network data'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-6：Farrelly 社交网络数据中接近中心性（左）和介数中心性（右）的气泡图
- en: The closeness scores here appear to capture what we were hoping they would.
    Vertices that are located more centrally in the network are larger, and vertices
    that are more peripheral are smaller. Note that this notion of centrality is based
    on the global geometry of the network. For instance, V10 has the highest closeness
    centrality score because it is central to the network overall even though it is
    peripheral to each of the two main clusters (the medical school friends and the
    veteran friends).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的接近得分似乎能够捕捉到我们期望的结果。位于网络中心的顶点较大，而位于外围的顶点较小。注意，这种中心性概念是基于网络的全局几何形态。例如，V10 的接近中心性得分最高，因为它在整个网络中居于中心位置，尽管它对于两个主要簇（医学院朋友和退伍军人朋友）来说是外围的。
- en: Betweenness centrality (which, as you recall, aims to capture locations that
    when removed would be maximally disruptive to flow across the network) provides
    V7 and V10 with much larger scores than all the other vertices—and these are the
    two vertices that bridge the two main clusters in this network. There is also
    a more modest but still relatively large betweenness score for V14, indicating
    that many (but not all) shortest paths between the two main clusters pass through
    this vertex.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 介数中心性（如你所记，旨在捕捉当移除某个位置时，会最大程度地破坏网络流动的地方）为 V7 和 V10 提供了比所有其他顶点更大的得分——这两者是连接网络中两个主要簇的桥梁。V14
    的介数得分也相对较大，尽管比 V7 和 V10 小，这表明许多（但不是所有）两个主要簇之间的最短路径都会经过这个顶点。
- en: Next, let’s take a look at the eigenvector centrality and PageRank centrality
    scores shown in [Figure 2-7](#figure2-7).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来看一下 [图 2-7](#figure2-7) 中显示的特征向量中心性和 PageRank 中心性得分。
- en: '![](image_fi/503083c02/f02007_m.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02007_m.png)'
- en: 'Figure 2-7: Bubble charts of eigenvector centrality (left) and PageRank centrality
    (right) on Farrelly’s social network data'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-7：Farrelly 社交网络数据中特征向量中心性（左）和 PageRank 中心性（右）的气泡图
- en: For both of these measures, V7 (representing Farrelly herself) has the highest
    value, and the values range across the medical school cluster in a way that—at
    least intuitively—does appear to capture a notion of centrality or importance.
    Perhaps the most striking thing about this figure is the contrast between these
    two closely related eigenvector-based measures. For eigenvector centrality, the
    values in the medical school cluster completely dwarf those of the veterans organization
    cluster, whereas PageRank centrality seems better able to reflect centrality and
    importance within each of the two clusters separately. The reason for this discrepancy
    is that random walks in which one simply chooses neighboring vertices to traverse
    with equal probability tend to meander around the highly interconnected medical
    school cluster and have a low probability of taking the one edge (from V7 to V10)
    that leads out of that cluster. With PageRank centrality, the random walks include
    a fixed probability of jumping anywhere in the network, which helps them get to
    the veterans group cluster.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这两种度量，V7（代表Farrelly本人）具有最高的值，而且这些值在医学院集群中呈现出一种方式，至少直观上，确实能够捕捉到中心性或重要性的概念。也许这张图最引人注目的是这两种紧密相关的基于特征向量的度量之间的对比。对于特征向量中心性，医学院集群中的值完全压倒了老兵组织集群的值，而PageRank中心性似乎更能反映出两个集群内部的中心性和重要性。这种差异的原因在于，随机游走中，人们通常选择相邻的顶点以相等的概率遍历，容易在高度互联的医学院集群中徘徊，并且几乎没有概率走出这个集群，走向V7到V10之间的唯一一条边。而PageRank中心性则在随机游走中引入了一个固定的跳跃概率，帮助它们进入老兵组织集群。
- en: In [Figure 2-8](#figure2-8) we have Katz centrality, which as you recall is
    a higher-order version of degree that takes into account not just the number of
    neighbors but the number of neighbors of neighbors, and so on. We compute this
    for two different values of the attenuation parameter alpha by specifying the
    decay rate for the influence coming from higher-order connections.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图2-8](#figure2-8)中，我们展示了Katz中心性，正如你所记得的，它是度数的一个高阶版本，不仅考虑邻居的数量，还考虑邻居的邻居数量，依此类推。我们通过指定来自高阶连接的影响衰减率，计算了两个不同的衰减参数alpha值下的Katz中心性。
- en: '![](image_fi/503083c02/f02008_m.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02008_m.png)'
- en: 'Figure 2-8: Bubble charts of Katz centrality for attenuation parameter alpha
    = 0.2 (left) and alpha = 0.1 (right) on Farrelly’s social network data'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-8：Farrelly社交网络数据上，衰减参数alpha = 0.2（左）和alpha = 0.1（右）时Katz中心性的气泡图
- en: It turns out the spectral radius for this network is about 4, so we need to
    choose values of alpha that are less than 0.25 (here, 0.2 and 0.1). We see here
    that both choices identified Farrelly’s V7 as the most central vertex, but for
    the higher of these two alpha parameters (left plot), the scores remain relatively
    high near V7 before dissipating rather quickly. With the smaller alpha (right
    plot), the dissipation is less sharp, and the Katz centrality scores are more
    evenly spread out across the entirety of the network. The plot on the left is
    more likely to capture what we typically think of as centrality or importance,
    and it is usually recommended to choose an alpha very close to the reciprocal
    of the spectral radius (and definitely not the default value of 1 in igraph).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 结果表明，这个网络的谱半径大约为4，因此我们需要选择小于0.25的alpha值（这里选择了0.2和0.1）。我们可以看到，无论选择哪种alpha值，都将Farrelly的V7识别为最中心的顶点，但对于较大的alpha参数（左图），得分在V7附近保持相对较高，随后迅速衰减。而对于较小的alpha（右图），衰减则不那么陡峭，Katz中心性得分在整个网络中更加均匀分布。左图更有可能捕捉到我们通常认为的中心性或重要性，通常建议选择一个非常接近谱半径倒数的alpha值（绝对不要选择igraph中的默认值1）。
- en: Finally, let’s analyze authority and hubness. In an undirected network, these
    two measures coincide, so let’s first transform our network into a directed network.
    Since we don’t have a natural direction to the friendships in this social network,
    we’ll do this artificially as follows. For each edge in this network, say between
    vertex *i* and vertex *j*, with probability one out of three, we’ll convert it
    to a one-way edge from *i* to *j*, with probability one out of three, we’ll convert
    it to a one-way edge from *j* to *i*, and with probability one out of three we’ll
    leave it as a two-way edge. [Listing 2-6](#listing2-6) shows the code to do this
    and then plot the resulting hub and authority scores.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们分析权威性和中心性。在无向网络中，这两个度量是重合的，因此我们首先将网络转换为有向网络。由于在这个社交网络中没有自然的好友关系方向，我们将人工进行如下转换：对于网络中的每条边，例如在顶点
    *i* 和顶点 *j* 之间，以三分之一的概率将其转换为从 *i* 到 *j* 的单向边，三分之一的概率将其转换为从 *j* 到 *i* 的单向边，三分之一的概率保持为双向边。[列表
    2-6](#listing2-6) 显示了执行此操作的代码，并绘制了结果中的中心性和权威性分数。
- en: '[PRE5]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Listing 2-6: A script that turns Farrelly’s social network into a directed
    network and then plots the resulting hub and authority scores'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 2-6：将 Farrelly 的社交网络转为有向网络，并绘制结果中的中心性和权威性分数的脚本
- en: '[Figure 2-9](#figure2-9) shows the resulting plots.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 2-9](#figure2-9) 显示了结果图。'
- en: '![](image_fi/503083c02/f02009_m.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02009_m.png)'
- en: 'Figure 2-9: Bubble charts of hub centrality (left) and authority centrality
    (right) on a directed version of Farrelly’s social network'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-9：Farrelly 社交网络的有向版本中，中心性（左）和权威性（右）的气泡图
- en: There are higher hub scores among the medical school individuals than the veterans
    group individuals due to the high level of interconnectivity of the former, with
    Farrelly’s vertex V7 serving as a prominent hub in this network. Many of the medical
    school individuals point to V5 and V3, giving these vertices large authority scores,
    while V7 has a relatively modest authority score. This suggests that V3 and V5
    are the primary sources of information within this community, and they pass this
    information along to V7, who shares it with the rest of the medical school individuals;
    in contrast, there is not much of a centralized structure or efficient flow of
    information among the veterans group’s individuals.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 由于医学院群体的高互联性，医学院成员的中心性分数高于退伍军人群体，Farrelly 的顶点 V7 在该网络中作为一个重要的中心存在。许多医学院成员指向
    V5 和 V3，这使得这些顶点具有较高的权威性分数，而 V7 的权威性分数相对较低。这表明，V3 和 V5 是该社区内信息的主要来源，他们将信息传递给 V7，后者再与其他医学院成员分享；相反，退伍军人群体成员之间缺乏一个集中的结构，信息流动效率也较低。
- en: Now that we’ve explored all these centrality measures visually, let’s use a
    few of them to rank and compare the vertices in Farrelly’s social network (going
    back to the original undirected version). The code in [Listing 2-7](#listing2-7)
    can be added to that of [Listing 2-4](#listing2-4) to produce a dataset of some
    centrality measures.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经通过可视化方式探讨了所有这些中心性度量，让我们使用其中一些度量来对 Farrelly 的社交网络中的顶点进行排名和比较（回到原始的无向版本）。[列表
    2-7](#listing2-7) 中的代码可以与 [列表 2-4](#listing2-4) 中的代码结合，生成一些中心性度量的数据集。
- en: '[PRE6]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Listing 2-7: A script that creates a table of a few vertex centrality scores
    on Farrelly’s social network'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 2-7：创建 Farrelly 社交网络中几个顶点中心性分数表格的脚本
- en: '[Table 2-1](#table2-1) displays these vertex scores, with the highest two entries
    in each column in bold.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 2-1](#table2-1) 显示了这些顶点的分数，每列中前两项以粗体显示。'
- en: 'Table 2-1: Centrality Measures Scored on the Vertices of Farrelly’s Social
    Network'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2-1：Farrelly 社交网络顶点的中心性度量分数
- en: '| **Vertex** | **PageRank** | **Degree** | **Hub score** | **Betweenness**
    |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| **顶点** | **PageRank** | **度数** | **中心性分数** | **介数** |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| V1 | 0.032 | 2 | 0.414 | 0 |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| V1 | 0.032 | 2 | 0.414 | 0 |'
- en: '| V2 | 0.020 | 1 | 0.168 | 0 |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| V2 | 0.020 | 1 | 0.168 | 0 |'
- en: '| V3 | **0.075** | **5** | 0.682 | 19.500 |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| V3 | **0.075** | **5** | 0.682 | 19.500 |'
- en: '| V4 | 0.032 | 2 | 0.370 | 0 |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| V4 | 0.032 | 2 | 0.370 | 0 |'
- en: '| V5 | 0.057 | 4 | **0.685** | 2.000 |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| V5 | 0.057 | 4 | **0.685** | 2.000 |'
- en: '| V6 | 0.046 | 3 | 0.505 | 1.000 |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| V6 | 0.046 | 3 | 0.505 | 1.000 |'
- en: '| V7 | **0.111** | **8** | **1.000** | **100.500** |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| V7 | **0.111** | **8** | **1.000** | **100.500** |'
- en: '| V8 | 0.044 | 3 | 0.550 | 0 |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| V8 | 0.044 | 3 | 0.550 | 0 |'
- en: '| V9 | 0.044 | 3 | 0.550 | 0 |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| V9 | 0.044 | 3 | 0.550 | 0 |'
- en: '| V10 | 0.048 | 3 | 0.306 | **90.917** |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| V10 | 0.048 | 3 | 0.306 | **90.917** |'
- en: '| V11 | 0.050 | 3 | 0.118 | 26.667 |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| V11 | 0.050 | 3 | 0.118 | 26.667 |'
- en: '| V12 | 0.022 | 1 | 0.021 | 0 |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| V12 | 0.022 | 1 | 0.021 | 0 |'
- en: '| V13 | 0.069 | 4 | 0.087 | 18.917 |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| V13 | 0.069 | 4 | 0.087 | 18.917 |'
- en: '| V14 | 0.067 | 4 | 0.127 | 61.083 |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| V14 | 0.067 | 4 | 0.127 | 61.083 |'
- en: '| V15 | 0.068 | 4 | 0.088 | 36.000 |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| V15 | 0.068 | 4 | 0.088 | 36.000 |'
- en: '| V16 | 0.040 | 2 | 0.024 | 23.083 |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| V16 | 0.040 | 2 | 0.024 | 23.083 |'
- en: '| V17 | 0.040 | 2 | 0.034 | 21.917 |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| V17 | 0.040 | 2 | 0.034 | 21.917 |'
- en: '| V18 | 0.065 | 3 | 0.009 | 20.250 |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| V18 | 0.065 | 3 | 0.009 | 20.250 |'
- en: '| V19 | 0.043 | 2 | 0.011 | 10.167 |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| V19 | 0.043 | 2 | 0.011 | 10.167 |'
- en: '| V20 | 0.026 | 1 | 0.002 | 0 |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| V20 | 0.026 | 1 | 0.002 | 0 |'
- en: By a considerable margin, betweenness identifies V7 and V10 as the most important
    vertices connecting the network. However, the other centrality scores for V10
    are much more modest, suggesting it mainly functions as a bridge between communities
    rather than a true center of the network. This makes sense as V10 appears fairly
    undistinguished within the veterans group. It just happens to connect to Farrelly’s
    V7 and, hence, through her to the medical school community. Farrelly’s V7, on
    the other hand, has many neighbors (as indicated by degree) and is the top-ranked
    vertex for both hub score and PageRank—this is compatible with our conceptual
    understanding of this network as conveying two separate communities in which Farrelly
    is involved.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在很大程度上，介数中心性将V7和V10识别为连接网络的最重要的顶点。然而，V10的其他中心性得分则要谦逊得多，表明它主要作为社区之间的桥梁，而不是网络的真正中心。这是有道理的，因为V10在退伍军人群体中显得相当不起眼。它恰好连接到Farrelly的V7，并通过她连接到医学院社区。另一方面，Farrelly的V7有许多邻居（如度数所示），并且在中心度得分和PageRank中排名靠前——这与我们对该网络的概念理解相符，即该网络传递的是两个独立的社区，而Farrelly参与其中。
- en: V3 is the second-highest ranked vertex in terms of degree and PageRank; this
    person appears to be at the social center of the medical school community. V5
    has the second-highest hub score, indicating that it is close to the important
    members of the medical school community. Hub score (which coincides with authority
    here since this network is undirected) also distinguishes V12 from V20\. Both
    of these are degree-one vertices in the periphery of the veterans group’s community
    and with low PageRank and zero betweenness. However, V12 has a higher hub score
    because it is near a highly interconnected little subcommunity.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: V3在度数和PageRank方面排名第二；此人似乎处于医学院社区的社交中心。V5具有第二高的中心度得分，表明它靠近医学院社区的重要成员。中心度得分（由于该网络是无向的，因此与权威度得分相同）也将V12与V20区分开来。两者都是退伍军人群体社区的度数为一的外围顶点，并且PageRank和介数中心性得分较低。然而，V12的中心度得分较高，因为它靠近一个高度互联的小子社区。
- en: Additional Quantities of a Network
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络的其他量
- en: Network geometry provides more than just centrality measures for vertices. In
    this section, we’ll introduce a few other quantities of interest associated to
    the vertices in a network. Examples include transitivity scores that capture how
    likely it is that your friends know each other, efficiency scores that capture
    how much traffic is diverted when vertices are removed, and curvature scores that
    capture distortions in the fabric of the network.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 网络几何不仅提供了顶点的中心性度量。在本节中，我们将介绍与网络中顶点相关的其他一些有趣的量。示例包括捕捉你朋友之间相识可能性的传递性得分，捕捉当顶点被移除时流量转移程度的效率得分，以及捕捉网络结构扭曲的曲率得分。
- en: The Diversity of a Vertex
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 顶点的多样性
- en: While hub and authority centrality concern the potential flow of information
    through a directed network, another measure associated to the vertices in a weighted
    network concerns information in the sense of mathematical information theory.
    The *diversity* of a vertex is a scaled version of the Shannon entropy (a fractional
    measure of information content of a variable or set of variables) of the weight
    distribution of the edges attached to that vertex. As the name suggests, this
    captures the diversity of edge weights attached to each vertex. Entropy is maximal
    for a uniform distribution, so the diversity score is maximal (and scaled to 1)
    when all the edges have equal weights, and the diversity scores decrease from
    this value as the weights become more varied. One way to think about this is that
    a random walk on a weighted network (with probabilities proportional to the edge
    weights) will be least predictable at vertices with diversity scores closest to
    1 and more predictable for vertices with smaller diversity scores.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然中心性中的枢纽和权威性涉及通过有向网络的信息潜在流动，但与加权网络中的顶点相关的另一个度量则涉及从数学信息理论的角度看待信息。顶点的*多样性*是与该顶点连接的边的权重分布的香农熵（一个衡量变量或一组变量信息内容的分数）的缩放版本。如其名所示，这捕捉了附加在每个顶点上的边的权重多样性。熵在均匀分布时最大，因此当所有边的权重相等时，多样性得分最大（并缩放为1），随着权重的变化，多样性得分会逐渐下降。可以这样理解：在一个加权网络上进行的随机漫步（概率与边的权重成比例）在多样性得分接近1的顶点上最难预测，而在多样性得分较小的顶点上则较为容易预测。
- en: Triadic Closure
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 三元闭合
- en: A useful notion in network theory is *triadic closure*, which is the tendency
    for triangles to form among triples of vertices that already have a pair of edges.
    In more down-to-earth terms, this is akin to asking whether two of your friends
    are likely to be friends with each other. Consider the network of friends depicted
    in [Figure 2-10](#figure2-10).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 网络理论中的一个有用概念是*三元闭合*，即已经拥有一对边的顶点三元组之间形成三角形的趋势。用更通俗的语言来说，这相当于在问你两个朋友是否可能互为朋友。考虑[图2-10](#figure2-10)所示的朋友网络。
- en: '![](image_fi/503083c02/f02010.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02010.png)'
- en: 'Figure 2-10: A network of friendships with one friendship link unknown, illustrating
    the concept of triadic closure'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-10：一个有一个友谊链接未知的友谊网络，说明了三元闭合的概念
- en: 'Here, Justin and Jason are friends, as are Justin and Mick. The question is
    whether Jason and Mick are friends. This situation is called a *triangle* centered
    at Justin. If Jason and Mick are not friends, then it is called an *open* triangle,
    whereas if they are friends, then it is called a *closed* triangle. A network
    with mostly closed triangles suggests a high degree of cohesion. In social networks,
    this means individuals with a mutual friend are likely to know each other. On
    the other hand, a network with many open triangles may indicate a less cohesive
    situation but could also indicate missing data and incomplete information: people
    may not friend all of their real-world friends on social media, intelligence data
    may not contain all communication forms among a cell of terrorists, and so on.
    In any real-world setting, relationships may exist that simply haven’t been recorded
    yet.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，贾斯廷和贾森是朋友，贾斯廷和米克也是朋友。问题是贾森和米克是否是朋友。这种情况称为以贾斯廷为中心的*三角形*。如果贾森和米克不是朋友，则称为*开放*三角形；如果他们是朋友，则称为*封闭*三角形。一个大多数为封闭三角形的网络表明高度的凝聚力。在社交网络中，这意味着拥有共同朋友的个体很可能相互认识。另一方面，拥有许多开放三角形的网络可能表明凝聚力较弱，但也可能意味着数据缺失或信息不完整：人们可能不会在社交媒体上添加所有现实中的朋友，情报数据可能不包含恐怖分子小组之间所有的通信形式，等等。在任何现实世界的场景中，可能存在一些关系只是尚未被记录下来。
- en: 'One way to quantify triadic closure is through *transitivity*, which assigns
    to each vertex the fraction of triangles centered at it that are closed. In a
    social network, your transitivity is the probability that two of your friends
    are friends with each other. Let’s add the following to our collection of plots
    from [Listing 2-6](#listing2-6):'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 衡量三元闭合的一种方式是通过*传递性*，它为每个顶点分配一个值，表示以该顶点为中心的三角形中已经闭合的比例。在社交网络中，你的传递性是指你两个朋友相互成为朋友的概率。我们来将以下内容添加到我们从[示例2-6](#listing2-6)中的图示集合中：
- en: '[PRE7]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Setting the parameter called `type` to `local` tells igraph to compute the transitivity
    around each vertex, and setting the parameter called `isolates` to `zero` forces
    the score for vertices of degree 1 to be 0 (which otherwise would be scored `NaN`,
    as a degree-1 vertex has no triangles centered at it). [Figure 2-11](#figure2-11)
    shows the resulting plot.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 将名为`type`的参数设置为`local`，会指示igraph计算每个顶点周围的传递性，将名为`isolates`的参数设置为`zero`，会强制对度为1的顶点的得分设置为0（否则得分为`NaN`，因为度为1的顶点没有围绕它的三角形）。[图2-11](#figure2-11)显示了结果图。
- en: '![](image_fi/503083c02/f02011.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02011.png)'
- en: 'Figure 2-11: A bubble chart of transitivity on Farrelly’s social network'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-11：Farrelly社交网络的传递性气泡图
- en: This shows from another perspective that the medical school community is more
    cohesive and more tightly interconnected than the veterans’ community. It’s likely
    that medical students involved in the same sort of extracurricular activities
    in the same classes know each other and communicate. Note, however, that Farrelly’s
    V7 has a relatively low transitivity score among the medical school individuals,
    meaning several of Farrelly’s medical school friends are not friends with each
    other despite the overall closeness of that group. (The transitivity of V7 is
    also dragged down by the fact that none of Farrelly’s medical school friends are
    friends with the veterans group’s friend V10.)
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 从另一个角度看，这表明医学院社区比退伍军人社区更具凝聚力，互联性更强。很可能，参加相同课外活动的医学生会在同一班级中互相认识并交流。然而，需要注意的是，Farrelly的V7在医学院个体中的传递性得分相对较低，这意味着尽管该小组整体上比较亲密，但Farrelly的一些医学院朋友彼此之间并不是朋友。（V7的传递性得分还受到影响，因为Farrelly的医学院朋友与退伍军人组的朋友V10之间没有朋友关系。）
- en: The Efficiency and Eccentricity of a Vertex
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个顶点的效率和离心率
- en: 'Recall that two of the centrality measures we covered, closeness and betweenness,
    are defined in terms of the lengths of the shortest paths (or *geodesics*) in
    the network. Another interesting measure based on shortest paths, called *efficiency*,
    is defined for each vertex as follows: remove the vertex in question and then
    compute the resulting network distances between all pairs of neighbors of this
    vertex. Then, average the inverses of these distances. Removing the vertex is
    like creating a roadblock, and the neighbor-to-neighbor distances measure the
    length of the detours that must be taken because of the roadblock. Inverting these
    distances means bigger detours count toward smaller efficiencies, and vice versa.
    The efficiency measures how easily traffic can be diverted around each vertex
    in the network.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，我们之前讲过的两个中心性度量，接近度和中介度，是通过网络中最短路径（或*测地线*）的长度来定义的。另一个基于最短路径的有趣度量，叫做*效率*，它是对每个顶点按如下方式定义的：移除该顶点，然后计算所有与该顶点相邻的顶点之间的网络距离。接着，对这些距离的倒数取平均值。移除顶点就像设置了一个路障，而相邻顶点之间的距离则衡量了因路障而必须绕行的距离。倒数这些距离意味着较大的绕行距离会使得效率较低，反之亦然。效率衡量了网络中每个顶点的交通如何容易地被绕过。
- en: 'Efficiency is a useful way to probe the local geometry of the network. The
    word *local* here means we are exploring the network geometry nearby around each
    vertex; this is in contrast to closeness and betweenness that are more global
    in nature since they involve paths across the entire network. Let’s add the computation
    of efficiency to [Listing 2-6](#listing2-6). We need an additional library to
    do this:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 效率是探讨网络局部几何结构的一个有用方法。这里的*局部*指的是我们正在探索每个顶点附近的网络几何结构；这与接近度和中介度不同，后者更具有全局性质，因为它们涉及整个网络的路径。让我们在[代码清单2-6](#listing2-6)中添加效率的计算。我们需要一个额外的库来实现这一点：
- en: '[PRE8]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We don’t show the bubble chart plot for this because it looks extremely similar
    to the transitivity plot in [Figure 2-11](#figure2-11). In fact, the correlation
    between the transitivity scores and the efficiency scores for this network is
    0.96\. In other networks, especially larger and more complex ones, this need not
    be the case. It is important to note that transitivity is an extremely local measure,
    as it considers only neighboring vertices and the edges among them. In contrast,
    efficiency is local in nature but can access larger pieces of the network because
    the detours caused by the roadblocks may extend beyond the set of immediate neighbors.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们没有显示这个气泡图，因为它看起来与[图 2-11](#figure2-11)中的传递性图非常相似。事实上，在该网络中，传递性分数与效率分数的相关性为
    0.96。在其他网络中，尤其是更大、更复杂的网络中，这种情况未必成立。需要注意的是，传递性是一个极其局部的度量，因为它只考虑相邻顶点及其之间的边。相比之下，效率虽然也是局部的，但由于阻塞物可能延伸到超出直接邻居的网络部分，因此它能够访问到更大范围的网络。
- en: Another path-based vertex measure that—like closeness and betweenness—sees the
    global geometry of the network is *eccentricity*, which assigns to each vertex
    the largest network distance from that vertex to any other vertex in the network.
    This measures how peripheral each vertex is, so lower eccentricity scores generally
    indicate more central vertices. We’ll come back to this measure shortly.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种基于路径的顶点度量是 *偏心率*，它像接近度和介数一样，考虑到网络的全局几何结构。它为每个顶点分配从该顶点到网络中任何其他顶点的最大网络距离。这衡量了每个顶点的外围程度，因此较低的偏心率分数通常表示更中心的顶点。我们稍后会详细讨论这一度量。
- en: Forman–Ricci Curvature
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Forman–Ricci 曲率
- en: '*Ricci curvature* is a concept in geometry that measures the distortion of
    straight lines on curved surfaces and the rate at which this distortion grows
    or shrinks. You can think of it as a force of sorts that warps straight lines
    into curved paths (like a small hand weight on a wet paper towel). See [Figure
    2-12](#figure2-12) for a conceptual illustration of increasing Ricci curvature
    from left to right on the diagram.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '*Ricci 曲率*是几何学中的一个概念，用于衡量直线在曲面上的扭曲程度以及这种扭曲的增长或收缩速率。你可以将其视为一种力量，使直线变成弯曲的路径（就像在湿纸巾上放一个小手重物）。请参见[图
    2-12](#figure2-12)，它展示了从左到右 Ricci 曲率逐渐增大的概念性插图。'
- en: '![](image_fi/503083c02/f02012.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02012.png)'
- en: 'Figure 2-12: A straight line with midpoint deformed by sliding it (from left
    to right) through spaces with increasing Ricci curvature'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-12：一条直线的中点通过在 Ricci 曲率不断增加的空间中滑动（从左到右）而变形
- en: One of the adaptations of this concept from continuous geometry to the realm
    of networks is called *Forman–Ricci curvature*. The first step in calculating
    Forman–Ricci curvature is to assign a number to each edge in the network that
    measures how spread out the network is in the immediate vicinity of the edge.
    The number that is used is 2 minus the sum of the degrees of the two vertices
    attached to the edge; this is the negated number of edges adjacent to the edge
    in question. For example, in Farrelly’s social network ([Figure 2-5](#figure2-5)),
    the edge between V7 and V10 has a Forman–Ricci curvature of –8 (coming from the
    six non-V10 neighbors of V7 and the two non-V7 neighbors of V10).
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 将这一概念从连续几何学转化到网络领域的一个变体称为 *Forman–Ricci 曲率*。计算 Forman–Ricci 曲率的第一步是给网络中每条边分配一个数值，表示该边所在的邻域的网络扩展程度。使用的数值是
    2 减去与该边连接的两个顶点的度数之和；这是该边相邻的边数的负值。例如，在 Farrelly 的社交网络中（[图 2-5](#figure2-5)），V7
    和 V10 之间的边具有 Forman–Ricci 曲率 -8（由 V7 的六个非 V10 邻居和 V10 的两个非 V7 邻居得来）。
- en: 'Next, we use these edge scores to assign scores to the vertices as follows:
    the Forman–Ricci curvature of a vertex is the sum of the Forman–Ricci curvatures
    of the edges attached to this vertex. Forman–Ricci curvature is almost always
    negative, so when visualizing it, we usually use its negation. In [Listing 2-8](#listing2-8)
    we compute the Forman–Ricci curvature for Farrelly’s social network and then plot
    it using its negation for the vertex size and edge thickness.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用这些边分数来给顶点分配分数，方法如下：一个顶点的 Forman–Ricci 曲率是与该顶点连接的边的 Forman–Ricci 曲率之和。Forman–Ricci
    曲率几乎总是负数，因此在可视化时，我们通常使用其相反数。 在[列表 2-8](#listing2-8)中，我们计算了 Farrelly 社交网络的 Forman–Ricci
    曲率，然后使用其相反数绘制顶点的大小和边的粗细。
- en: '[PRE9]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Listing 2-8: A script that computes and plots the Forman–Ricci curvature for
    Farrelly’s social network'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 2-8：一个计算并绘制 Farrelly 社交网络的 Forman–Ricci 曲率的脚本
- en: '[Figure 2-13](#figure2-13) shows the resulting plot.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 2-13](#figure2-13)展示了结果图。'
- en: '![](image_fi/503083c02/f02013.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02013.png)'
- en: 'Figure 2-13: The negated Forman–Ricci curvature for Farrelly’s social network'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-13：Farrelly的社交网络的负费曼-里奇曲率
- en: As you can see, the areas of the network with more edges have a higher negated
    Forman–Ricci curvature. This occurs both in hublike regions where the network
    fans out (like in the medical school community here surrounding Farrelly’s V7)
    and in tightly interconnected regions (like the close-knit four-vertex subcommunity
    within the veterans group’s members).
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，网络中边缘更多的区域具有更高的负费曼-里奇曲率。这种情况发生在网络分散的中心区域（例如在这里围绕Farrelly的V7的医学学校社区）以及紧密相连的区域（例如在退伍军人小组成员中的紧密四顶点子社区）。
- en: In traditional geometry, curvature is used to study how substances flow across
    objects. Similarly, Forman–Ricci curvature can be used to study network flow patterns.
    We’ll turn to the concept of network flow in [Chapter 3](c03.xhtml).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统几何学中，曲率用于研究物质如何在物体表面流动。类似地，费曼-里奇曲率可以用于研究网络流动模式。我们将在[第3章](c03.xhtml)中讨论网络流动的概念。
- en: Global Network Metrics
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 全局网络度量
- en: All the metrics discussed so far are *vertex metrics*, meaning they assign a
    score to each vertex in a network, quantifying some aspect of the vertex’s role
    or position within the network. For example, you could extract your network of
    Facebook friends and use these vertex metrics to measure how central each person
    is in it. However, sometimes instead of comparing vertices within a single network,
    we need to compare different networks. For example, you might want to compare
    your Facebook friend network to the Facebook friend network of someone else—or
    you could compare your friend network on Facebook to your friend network on a
    different social media platform. In this situation, we need metrics that assign
    a single number to an entire network; these are sometimes called *global network
    metrics*, or just *global metrics* if the network context is clear. Let’s walk
    through a few important ones.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止讨论的所有度量都是*顶点度量*，意味着它们为网络中的每个顶点分配一个分数，量化顶点在网络中的角色或位置。例如，你可以提取你的Facebook好友网络，并使用这些顶点度量来衡量每个人在网络中的中心性。然而，有时我们不仅仅需要比较单个网络中的顶点，而是需要比较不同的网络。例如，你可能想比较你的Facebook好友网络和另一个人的Facebook好友网络，或者你可以比较你在Facebook上的好友网络与你在其他社交媒体平台上的好友网络。在这种情况下，我们需要为整个网络分配一个单一的数值；这些度量有时被称为*全局网络度量*，或者如果网络的上下文明确，可以简称为*全局度量*。让我们了解几个重要的度量。
- en: The Interconnectivity of a Network
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络的互联性
- en: The simplest global metrics are the number of vertices in a network and the
    number of edges. Closely related to these (but often more useful) is the *density*,
    which is the number of edges in a network divided by the maximum number of edges
    possible on that vertex set. An undirected network with *n* vertices has at most
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的全局度量是网络中的顶点数量和边的数量。与这些紧密相关（但通常更有用）的度量是*密度*，它是网络中边的数量除以该顶点集上可能的最大边数。一个无向网络如果有*n*个顶点，最多有
- en: '![c02eq001](image_fi/503083c02/c02eq001.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![c02eq001](image_fi/503083c02/c02eq001.png)'
- en: edges (not allowing loops or multiple edges), while the maximum number for a
    directed network is twice this amount. Density gives a coarse measure of how interconnected
    a network is; it is computed in igraph with the `edge_density()` function. [Figure
    2-14](#figure2-14) shows some networks with a range of densities.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 边（不允许有环或多重边），而有向网络的最大边数是这个数量的两倍。密度提供了一个粗略的衡量网络互联程度的指标；在igraph中，可以使用`edge_density()`函数来计算密度。[图
    2-14](#figure2-14)展示了一些具有不同密度的网络。
- en: '![](image_fi/503083c02/f02014_m.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02014_m.png)'
- en: 'Figure 2-14: The three networks in the top row all have a density of 25 percent,
    while the networks in the bottom left and bottom right have densities of 50 percent
    and 75 percent, respectively.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-14：顶行的三个网络的密度都是25%，而左下角和右下角的网络密度分别为50%和75%。
- en: The average degree in a network can also be a useful global metric, but it contains
    precisely the same information as the density and is perfectly correlated with
    it. Indeed, the average degree is the sum of all vertex degrees divided by the
    number of vertices, and the sum of all vertex degrees is always twice the number
    of edges. Thus, average degree and edge density differ by a constant that depends
    only on the number of vertices in the network. Consequently, you can use one or
    the other measure, but nothing is gained by using both simultaneously.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 网络中的平均度数也是一个有用的全局度量，但它包含与密度完全相同的信息，并且与密度完美相关。事实上，平均度数是所有顶点度数的总和除以顶点数量，而所有顶点度数的总和总是边数的两倍。因此，平均度数和边密度之间相差一个常数，这个常数仅取决于网络中的顶点数。因此，你可以选择使用其中一个度量，而同时使用两者并不会带来额外的好处。
- en: The notion of transitivity discussed in the preceding section (quantifying triadic
    closure) has a global counterpart. When setting the type parameter to `global`
    in igraph’s `transitivity()` function, a single number is computed that gives
    the fraction of triangles in the network that are closed. This gives another way,
    different from edge density, to measure the overall interconnectedness of a network.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 前一节讨论的传递性概念（量化三元闭合）也有一个全局对应物。当在 igraph 的 `transitivity()` 函数中将 `type` 参数设置为
    `global` 时，会计算出一个数字，表示网络中闭合的三角形占所有三角形的比例。这为衡量网络的整体互联性提供了另一种方法，与边密度不同。
- en: Spreading Processes on a Network
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络中的传播过程
- en: Networks that are more spread out tend to behave differently than ones that
    are more compact. For example, consider three friends—Amara, Imani, and Taraji—sharing
    news with each other at a lunch table. We’d expect the girls to exchange information
    more easily together at a table than they would if they were in separate classes
    texting each other or talking as they passed each other in the hallway. Let’s
    take a look at a few different ways to quantify the spread of a network.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 更为分散的网络通常与更为紧凑的网络表现出不同的行为。例如，考虑三个朋友——阿马拉（Amara）、伊马尼（Imani）和塔拉吉（Taraji）——在午餐桌上互相传递消息。我们会期望这三位女孩在桌子上互相交换信息比她们在不同的课堂上发短信或在走廊里擦肩而过时聊天更容易。让我们来看一些不同的方法来量化网络的传播情况。
- en: Setting the `type` parameter to `global` in igraph’s `efficiency()` function
    gives a global version of that metric that computes the average of the inverses
    of the network distances between all pairs of vertices in the network. No roadblocks
    are involved in this global variant of efficiency. Networks that are highly interconnected
    tend to have high global efficiency, as high interconnectivity means there are
    lots of direct routes between vertices, but, overall, it is best to think of global
    efficiency as a measure of the compactness of a network. The more spread out a
    network, the lower its global efficiency will be.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在 igraph 的 `efficiency()` 函数中，将 `type` 参数设置为 `global` 会得到该度量的全局版本，它计算网络中所有顶点对之间的距离的倒数的平均值。在这个全局效率的变体中没有任何障碍物。高度互联的网络往往具有较高的全局效率，因为高互联性意味着顶点之间有很多直接路径，但总体而言，最好将全局效率视为衡量网络紧凑性的指标。网络越分散，其全局效率越低。
- en: We can also compute the *diameter* of a network, which is the maximum eccentricity
    of the vertices in the network (and, hence, the “longest shortest path” between
    two vertices). The *radius* of a network is the minimum eccentricity, which measures
    how far the center of the network is from the most distant part of the network.
    In igraph, you can use the `eccentricity()` function first to score all the vertices
    and then use standard R commands to extract the maximum and minimum values from
    them. Both diameter and radius quantify some aspect of the spread of the data.
    One structure that can produce a large difference between the diameter and radius
    is a structure where there are several loose hubs connected to each other through
    a single bridging individual.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以计算网络的*直径*，它是网络中所有顶点的最大偏心度（因此，也是两个顶点之间的“最长最短路径”）。网络的*半径*是最小偏心度，表示网络中心与网络最远部分之间的距离。在
    igraph 中，你可以先使用`eccentricity()`函数对所有顶点进行评分，然后使用标准的 R 命令从中提取最大值和最小值。直径和半径都量化了数据传播的某些方面。一种可能导致直径和半径之间差异较大的结构是那些由多个松散的枢纽通过一个单一的桥接个体互相连接的结构。
- en: Spectral Measures of a Network
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络的谱度量
- en: We have seen that eigenvectors of the adjacency matrix and other matrices closely
    related to it play an important role in multiple vertex centrality metrics; the
    spectral theory (eigenvalues and eigenvectors) of the adjacency matrix also provides
    us with some useful global metrics. The *spectral radius* of a network (which
    came up earlier in our discussion of Katz centrality) is the largest eigenvalue
    of the adjacency matrix. A variety of properties of the spectral radius have been
    established mathematically. In essence, the spectral radius measures propagation
    across the network. It is inversely related to the robustness of the network when
    considering the spread of a harmful entity across the network, such as fake news
    or a virus. For instance, in an epidemiological model that we’ll discuss in the
    next chapter, a smaller spectral radius means disease spreading across the network
    will die out more quickly.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，邻接矩阵和与其紧密相关的其他矩阵的特征向量在多个顶点中心性度量中扮演着重要角色；邻接矩阵的谱理论（特征值和特征向量）还为我们提供了一些有用的全局度量。网络的
    *谱半径*（在我们讨论 Katz 中心性时提到过）是邻接矩阵的最大特征值。谱半径的多种性质已经被数学上确立。本质上，谱半径衡量了网络中的传播过程。当考虑到有害实体在网络中传播时，如假新闻或病毒，谱半径与网络的鲁棒性是反比关系。例如，在我们下一章将讨论的流行病学模型中，较小的谱半径意味着疾病在网络中传播会更快地消失。
- en: To compute the spectral radius of a network in R, you can use the `spectrum()`
    function in igraph that takes advantage of the sparse structure that adjacency
    matrices usually exhibit, or you can use any of the standard eigenvector or eigenvalue
    implementations in R, such as the `eigen()` function, on the network’s adjacency
    matrix.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 R 中计算网络的谱半径，可以使用 igraph 中的 `spectrum()` 函数，它利用了邻接矩阵通常具有的稀疏结构，或者可以使用 R 中任何标准的特征向量或特征值实现，例如对网络的邻接矩阵使用
    `eigen()` 函数。
- en: Since igraph’s `spectrum()` function optionally returns all eigenvalues and
    eigenvectors of the adjacency matrix, it is easy to use it to compute other spectral
    measures—such as the *spectral gap*, which is the difference between the largest
    eigenvalue of the adjacency matrix (the spectral radius) and the second largest
    eigenvalue. The spectral gap controls the convergence time of certain algorithms
    and random processes on the network, among other things. Other useful spectral
    measures are based on a variant of the adjacency matrix called the *graph Laplacian*,
    which is obtained by negating the adjacency matrix and adding the degree of each
    vertex to the corresponding diagonal matrix entry. The multiplicity of the 0 eigenvalue
    of the graph Laplacian is the number of connected components of the network. The
    smallest nonzero eigenvalue of the graph Laplacian is called the *algebraic connectivity*;
    this is a connectivity measure of the network that conveys how difficult it is
    to fragment the network into smaller pieces. Farrelly’s social network has a relatively
    low algebraic connectivity because removing a single vertex splits the network
    into the veterans group and the medical school group.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 igraph 的 `spectrum()` 函数可选地返回邻接矩阵的所有特征值和特征向量，因此很容易利用它来计算其他谱度量——例如 *谱差*，即邻接矩阵的最大特征值（谱半径）与第二大特征值之间的差异。谱差控制着某些算法和随机过程在网络上的收敛时间，除此之外，还有其他一些应用。其他有用的谱度量基于一种称为
    *图拉普拉斯算子* 的邻接矩阵变体，它是通过对邻接矩阵取负值并将每个顶点的度数添加到相应的对角矩阵项中得到的。图拉普拉斯算子零特征值的重数表示网络的连通分量数。图拉普拉斯算子最小的非零特征值称为
    *代数连通性*；它是衡量网络连通性的度量，表示将网络分割成更小部分的难易程度。Farrelly 的社交网络具有相对较低的代数连通性，因为移除一个顶点会将网络分裂成退伍军人组和医学院组。
- en: '[Listing 2-9](#listing2-9) shows how to compute the graph Laplacian and extract
    from it the number of connected components and the algebraic connectivity.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 2-9](#listing2-9) 展示了如何计算图拉普拉斯算子，并从中提取连通分量数量和代数连通性。'
- en: '[PRE10]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Listing 2-9: A script that computes the graph Laplacian of a network `g` and
    then extracts from it the number of connected components and the algebraic connectivity'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 2-9：一个计算网络 `g` 的图拉普拉斯算子并从中提取连通分量数量和代数连通性的脚本
- en: For example, running this code on the two networks shown in [Figure 2-15](#figure2-15)
    gives seven connected components each and an algebraic connectivity of 0.062 for
    the network on the left and 0.09 for the network on the right.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在 [Figure 2-15](#figure2-15) 中显示的两个网络上运行此代码，每个网络都有七个连接组件，左侧网络的代数连通性为0.062，右侧网络的代数连通性为0.09。
- en: '![](image_fi/503083c02/f02015_m.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02015_m.png)'
- en: 'Figure 2-15: Two networks, plotted to illustrate the spectral measures associated
    with the graph Laplacian matrix. They have the same number of connected components,
    but the network on the right has a higher algebraic connectivity.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-15：两个网络，绘制以说明与图拉普拉斯矩阵相关的谱度量。它们具有相同数量的连接组件，但右侧网络具有更高的代数连通性。
- en: If you want to compare scores across networks of different sizes, it is better
    to use the normalized Laplacian; to do this, simply set `normalized=T` when computing
    the graph Laplacian in the first line of [Listing 2-9](#listing2-9).
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想比较不同大小网络的分数，最好使用归一化拉普拉斯矩阵；要做到这一点，只需在计算图拉普拉斯矩阵时将`normalized=T`设置为第一行中的 [Listing
    2-9](#listing2-9)。
- en: Network Models for Real-World Behavior
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用于现实世界行为的网络模型
- en: There are a few different types of networks that serve as important models for
    real-world behavior; these provide helpful baselines against which to compare
    real-world networks and data. Let’s start with the simplest kind to construct.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种不同类型的网络可以作为现实世界行为的重要模型；这些提供了有用的基准，用来比较真实世界的网络和数据。让我们从最简单的构建开始。
- en: Erdös–Renyi Graphs
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Erdös–Renyi 图
- en: '*Erdös–Renyi graphs* are networks in which edges are generated randomly according
    to a uniform distribution on the set of vertex pairs. These are created in igraph
    with the `sample_gnp()` function. Both the networks in [Figure 2-15](#figure2-15)
    were produced by using `sample_gnp(50,0.05)`, which creates a network with 50
    vertices and an edge probability of 5 percent. The density of the graphs created
    this way will be close to the specified edge probability but not necessarily equal
    to it—just as repeatedly flipping a fair coin won’t always give exactly half heads
    and half tails. The networks in [Figure 2-14](#figure2-14) were also created with
    `sample_gnp()`.'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '*Erdös–Renyi 图* 是根据顶点对的均匀分布随机生成边的网络。这些是通过 `sample_gnp()` 函数在 igraph 中创建的。 [Figure
    2-15](#figure2-15) 中的两个网络都是通过使用 `sample_gnp(50,0.05)` 创建的，这将创建一个具有 50 个顶点和边概率为
    5% 的网络。以这种方式创建的图的密度将接近指定的边概率，但不一定等于它——就像反复抛硬币不总是会得到一半的正面和一半的反面一样。 [Figure 2-14](#figure2-14)
    中的网络也是用 `sample_gnp()` 创建的。'
- en: Erdös–Renyi graphs provide a useful null hypothesis. If you believe your network
    is highly structured, then its edges should be very far from uniformly distributed,
    so the network will not look or behave like an Erdös–Renyi network. In the next
    two chapters, we’ll see how to practically implement this idea. Erdös–Renyi graphs
    do not appear often in nature, especially in socially driven settings. Real networks
    are almost always more structured than a network with purely random edges like
    this.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Erdös–Renyi 图提供了一个有用的零假设。如果你认为你的网络结构非常有序，那么它的边应该远离均匀分布，因此网络看起来或行为不像一个 Erdös–Renyi
    网络。在接下来的两章中，我们将看到如何实际实现这个想法。Erdös–Renyi 图在自然界中并不经常出现，特别是在社会驱动的环境中。真实网络几乎总是比纯随机边的网络更有结构。
- en: Scale-Free Graphs
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 无标度图
- en: A *scale-free graph* is a network whose degree distribution asymptotically follows
    a power law, meaning there is a constant, *c,* such that the fraction of vertices
    of degree 2*d* is 1/2^(*c*) times the fraction of vertices of degree *d* (at least
    approximately, with the approximation getting more accurate as *d* increases).
    The constant *c* (called the *power*) usually lies between 2 and 3\. This power
    law property leads to the existence of many vertices whose degree is much higher
    than the average vertex degree in the network. Consequently, scale-free networks
    usually have a spoke-and-wheel shape of loosely connected hubs, like airport terminals
    connecting at a central security gate. The hubs in the network tend to rein in
    the distances between vertices, giving these networks certain “small-world” properties.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '*无尺度图* 是一种网络，其度分布渐近遵循幂律分布，这意味着存在一个常数 *c*，使得度为 2*d* 的顶点的比例是度为 *d* 的顶点的比例的 1/2^(*c*)
    倍（至少大致如此，且随着 *d* 增加，近似值会更加准确）。常数 *c*（称为 *幂指数*）通常在 2 到 3 之间。这个幂律特性导致了许多顶点的度数远高于网络中平均度数的存在。因此，无尺度网络通常呈现出类似于机场航站楼在中央安全门连接的轮辐形状。这些网络中的枢纽有助于缩短顶点之间的距离，从而赋予这些网络某些“小世界”特性。'
- en: These networks have a fascinating history and well-developed theory that we
    don’t have space to get into. An interesting debate in the field has been whether
    many naturally occurring networks are scale-free—including internet pages, social
    networks, biological networks, and even airline travel networks—and if so, why
    this might be.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 这些网络有着迷人的历史和成熟的理论，虽然我们没有足够的空间深入讨论。该领域中的一个有趣辩论是，许多自然发生的网络是否是无尺度的——包括互联网页面、社交网络、生物网络，甚至是航空旅行网络——如果是的话，这种现象为何会发生。
- en: There are a variety of approaches for generating scale-free networks; one of
    the more popular options is conveniently implemented in igraph with the `sample_pa()`
    function. It relies on what is known as the Barabási–Albert model.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 生成无尺度网络有多种方法；其中一种比较流行的方法在 igraph 中通过 `sample_pa()` 函数得到了方便的实现。它依赖于所谓的 Barabási–Albert
    模型。
- en: Watts–Strogatz Graphs
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Watts–Strogatz 图
- en: '*Watts–Strogatz graphs* are networks generated by a random graph model introduced
    in 1998 that tends to produce even more small-world properties than scale-free
    networks, such as tightly interconnected communities and small network distances
    between many vertices. These networks frequently include paths that are reinforced
    by redundancy and alternate routes. They are common in biology and social processes.
    For example, brain connectivity networks at the neuron and functional area levels,
    voter networks, influencer networks on social media platforms, and food webs often
    form Watts–Strogatz networks.'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '*Watts–Strogatz 图* 是由 1998 年提出的一种随机图模型生成的网络，它倾向于产生比无尺度网络更强的“小世界”特性，例如紧密相连的社区和许多顶点之间较短的网络距离。这些网络通常包括通过冗余和备用路径强化的路径。它们在生物学和社会过程中特别常见。例如，大脑连接网络（在神经元和功能区域层面）、选民网络、社交媒体平台上的影响者网络以及食物链常常形成
    Watts–Strogatz 网络。'
- en: Since we have already seen a few examples of Erdös–Renyi graphs (see Figures
    2-14 and 2-15), let’s create some networks of these other types. In [Figure 2-16](#figure2-16),
    we use `sample_pa(100,power=2.5,directed=F)` to generate a couple of scale-free
    networks, and we use `sample_smallworld(1,100,2,0.05)` to generate a couple of
    Watts–Strogatz networks. We leave it to a motivated reader to look in the igraph
    documentation to learn about the parameter choices in this latter function.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经看到了一些 Erdös–Renyi 图的例子（见图 2-14 和 2-15），现在让我们创建一些其他类型的网络。在[图 2-16](#figure2-16)中，我们使用
    `sample_pa(100,power=2.5,directed=F)` 来生成几个无尺度网络，并使用 `sample_smallworld(1,100,2,0.05)`
    来生成几个 Watts–Strogatz 网络。我们留给有兴趣的读者去查阅 igraph 文档，了解后者函数中参数的选择。
- en: '![](image_fi/503083c02/f02016_m.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/503083c02/f02016_m.png)'
- en: 'Figure 2-16: Two scale-free networks (top) and two Watts–Strogatz networks
    (bottom)'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-16：两个无尺度网络（顶部）和两个 Watts–Strogatz 网络（底部）
- en: The scale-free networks in the top row each have one prominent hub, and the
    network on the left additionally has a less prominent secondary hub. Imagining
    these to be power grid connections, a storm that takes out a main hub would impact
    many more customers in the scale-free network than in the Watts–Strogatz network.
    This is why many planned real-world networks conform to a redundancy-heavy structure.
    The Watts–Strogatz networks do not exhibit strong hubs like scale-free networks,
    but they have a lot of structure not seen in the purely random Erdös–Renyi networks.
    For instance, the lengthy reinforced path structures mentioned earlier are easy
    to recognize in these bottom plots.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行的无标度网络每个都有一个显著的枢纽，而左侧的网络还额外有一个不太显眼的次级枢纽。假设这些是电力网连接，一场暴风雨摧毁主枢纽时，无标度网络的影响会波及更多的用户，而不是瓦茨–斯特罗加茨网络。这也是为什么许多现实世界的网络在设计时会遵循冗余重的结构。瓦茨–斯特罗加茨网络没有像无标度网络那样显著的枢纽，但它们拥有纯随机的厄尔多斯–雷尼网络所没有的大量结构。例如，前面提到的那些长的强化路径结构，在这些底部的图中很容易识别出来。
- en: Summary
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter opened with a brief section explaining the need for networks in
    data science and the need for geometry in network science. Next, we introduced
    networks and the objects involved in them—vertices, edges, paths, and more. We
    then defined and explored a collection of metrics that quantify various properties
    of networks and their vertices. The chapter concluded with a few random graph
    models that are useful for generating synthetic network data to which real network
    data can be compared.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 本章首先简要介绍了数据科学中对网络的需求以及网络科学中对几何的需求。接着，我们介绍了网络及其中涉及的对象——顶点、边、路径等。然后，我们定义并探索了一系列度量标准，用以量化网络及其顶点的各种属性。最后，本章以几个随机图模型作结，这些模型对于生成合成网络数据非常有用，实际网络数据可以与其进行比较。
