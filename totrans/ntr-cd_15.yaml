- en: '**Index**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Symbols**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: + (addition) operator, [40](ch01.xhtml#page_40)
  prefs: []
  type: TYPE_NORMAL
- en: / (division sign), [50](ch01.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: '% (modulo) operator, [554](ch11.xhtml#page_554)'
  prefs: []
  type: TYPE_NORMAL
- en: '* (multiplication sign), [50](ch01.xhtml#page_50)'
  prefs: []
  type: TYPE_NORMAL
- en: === (strict equality) operator, [5](ch00.xhtml#page_5)
  prefs: []
  type: TYPE_NORMAL
- en: '!== (strict inequality) operator, [5](ch00.xhtml#page_5)'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: acceleration, [xxxi](intro.xhtml#page_xxxi), [36](ch01.xhtml#page_36), [59](ch01.xhtml#page_59)–[69](ch01.xhtml#page_69)
  prefs: []
  type: TYPE_NORMAL
- en: accumulation of forces, [77](ch02.xhtml#page_77)–[78](ch02.xhtml#page_78)
  prefs: []
  type: TYPE_NORMAL
- en: angular, [120](ch03.xhtml#page_120)–[121](ch03.xhtml#page_121), [123](ch03.xhtml#page_123)–[124](ch03.xhtml#page_124),
    [155](ch03.xhtml#page_155), [157](ch03.xhtml#page_157)–[158](ch03.xhtml#page_158)
  prefs: []
  type: TYPE_NORMAL
- en: fluid resistance, [100](ch02.xhtml#page_100)
  prefs: []
  type: TYPE_NORMAL
- en: gravitational attraction, [87](ch02.xhtml#page_87)
  prefs: []
  type: TYPE_NORMAL
- en: Newton’s second law of motion, [75](ch02.xhtml#page_75)–[77](ch02.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: vector, [59](ch01.xhtml#page_59)–[69](ch01.xhtml#page_69)
  prefs: []
  type: TYPE_NORMAL
- en: accept-reject algorithm, [18](ch00.xhtml#page_18)–[19](ch00.xhtml#page_19),
    [455](ch09.xhtml#page_455)
  prefs: []
  type: TYPE_NORMAL
- en: activation functions, [504](ch10.xhtml#page_504)–[505](ch10.xhtml#page_505),
    [508](ch10.xhtml#page_508), [520](ch10.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: '*Adaptation in Natural and Artificial Systems* (Holland), [438](ch09.xhtml#page_438)'
  prefs: []
  type: TYPE_NORMAL
- en: adaptive decision-making systems, [499](ch10.xhtml#page_499)
  prefs: []
  type: TYPE_NORMAL
- en: addForce() method, [355](ch06.xhtml#page_355), [357](ch06.xhtml#page_357)
  prefs: []
  type: TYPE_NORMAL
- en: addition (+) operator, [40](ch01.xhtml#page_40)
  prefs: []
  type: TYPE_NORMAL
- en: additive blending, [209](ch04.xhtml#page_209)–[210](ch04.xhtml#page_210)
  prefs: []
  type: TYPE_NORMAL
- en: add() method, [42](ch01.xhtml#page_42), [45](ch01.xhtml#page_45), [65](ch01.xhtml#page_65),
    [298](ch06.xhtml#page_298)–[299](ch06.xhtml#page_299)
  prefs: []
  type: TYPE_NORMAL
- en: addParticle() method, [338](ch06.xhtml#page_338)
  prefs: []
  type: TYPE_NORMAL
- en: air resistance, [94](ch02.xhtml#page_94). *See also* fluid resistance
  prefs: []
  type: TYPE_NORMAL
- en: alignment in flocking, [259](ch05.xhtml#page_259), [268](ch05.xhtml#page_268)–[269](ch05.xhtml#page_269),
    [271](ch05.xhtml#page_271)
  prefs: []
  type: TYPE_NORMAL
- en: align() method, [270](ch05.xhtml#page_270)
  prefs: []
  type: TYPE_NORMAL
- en: alive property, [559](ch11.xhtml#page_559)–[560](ch11.xhtml#page_560)
  prefs: []
  type: TYPE_NORMAL
- en: amplitude
  prefs: []
  type: TYPE_NORMAL
- en: defined, [135](ch03.xhtml#page_135)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [135](ch03.xhtml#page_135)–[137](ch03.xhtml#page_137)
  prefs: []
  type: TYPE_NORMAL
- en: with angular velocity, [140](ch03.xhtml#page_140)–[142](ch03.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: waves, [143](ch03.xhtml#page_143)
  prefs: []
  type: TYPE_NORMAL
- en: anchors
  prefs: []
  type: TYPE_NORMAL
- en: distance constraints, [316](ch06.xhtml#page_316)–[317](ch06.xhtml#page_317)
  prefs: []
  type: TYPE_NORMAL
- en: revolute constraints, [319](ch06.xhtml#page_319)
  prefs: []
  type: TYPE_NORMAL
- en: spring forces, [147](ch03.xhtml#page_147)–[150](ch03.xhtml#page_150)
  prefs: []
  type: TYPE_NORMAL
- en: Anderson, Carl D., [167](ch04.xhtml#page_167)
  prefs: []
  type: TYPE_NORMAL
- en: Anderson, Edgar, [524](ch10.xhtml#page_524)–[525](ch10.xhtml#page_525)
  prefs: []
  type: TYPE_NORMAL
- en: angleBetween() method
  prefs: []
  type: TYPE_NORMAL
- en: dot products, [242](ch05.xhtml#page_242)–[243](ch05.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: path following, [248](ch05.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: vectors, [45](ch01.xhtml#page_45)
  prefs: []
  type: TYPE_NORMAL
- en: angleMode() function, [119](ch03.xhtml#page_119), [281](ch05.xhtml#page_281)
  prefs: []
  type: TYPE_NORMAL
- en: angles, [118](ch03.xhtml#page_118)–[120](ch03.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: angular acceleration, [120](ch03.xhtml#page_120)–[121](ch03.xhtml#page_121),
    [123](ch03.xhtml#page_123)–[124](ch03.xhtml#page_124), [155](ch03.xhtml#page_155),
    [157](ch03.xhtml#page_157)–[158](ch03.xhtml#page_158)
  prefs: []
  type: TYPE_NORMAL
- en: angular motion (rotation), [119](ch03.xhtml#page_119)–[130](ch03.xhtml#page_130)
  prefs: []
  type: TYPE_NORMAL
- en: angular velocity, [120](ch03.xhtml#page_120)–[122](ch03.xhtml#page_122), [124](ch03.xhtml#page_124),
    [138](ch03.xhtml#page_138)–[142](ch03.xhtml#page_142), [155](ch03.xhtml#page_155),
    [157](ch03.xhtml#page_157), [161](ch03.xhtml#page_161)
  prefs: []
  type: TYPE_NORMAL
- en: degrees, [118](ch03.xhtml#page_118)–[119](ch03.xhtml#page_119)
  prefs: []
  type: TYPE_NORMAL
- en: radians, [119](ch03.xhtml#page_119)
  prefs: []
  type: TYPE_NORMAL
- en: angle variable, [122](ch03.xhtml#page_122), [139](ch03.xhtml#page_139)–[140](ch03.xhtml#page_140),
    [144](ch03.xhtml#page_144), [160](ch03.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: Animal class and objects, [188](ch04.xhtml#page_188)–[192](ch04.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: anomaly detection, [499](ch10.xhtml#page_499)
  prefs: []
  type: TYPE_NORMAL
- en: applyBehaviors() method, [266](ch05.xhtml#page_266)
  prefs: []
  type: TYPE_NORMAL
- en: applyForce() method
  prefs: []
  type: TYPE_NORMAL
- en: creating forces, [83](ch02.xhtml#page_83), [85](ch02.xhtml#page_85)
  prefs: []
  type: TYPE_NORMAL
- en: factoring in mass, [81](ch02.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: fluid resistance, [95](ch02.xhtml#page_95)
  prefs: []
  type: TYPE_NORMAL
- en: force accumulation, [78](ch02.xhtml#page_78)
  prefs: []
  type: TYPE_NORMAL
- en: genetic algorithms, [471](ch09.xhtml#page_471)
  prefs: []
  type: TYPE_NORMAL
- en: gravitational attraction, [101](ch02.xhtml#page_101), [103](ch02.xhtml#page_103),
    [105](ch02.xhtml#page_105)
  prefs: []
  type: TYPE_NORMAL
- en: Newton’s second law, [77](ch02.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [170](ch04.xhtml#page_170), [172](ch04.xhtml#page_172), [197](ch04.xhtml#page_197)–[198](ch04.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: physics engines, [324](ch06.xhtml#page_324)–[325](ch06.xhtml#page_325)
  prefs: []
  type: TYPE_NORMAL
- en: spring forces, [149](ch03.xhtml#page_149), [151](ch03.xhtml#page_151)
  prefs: []
  type: TYPE_NORMAL
- en: steering forces, [220](ch05.xhtml#page_220)
  prefs: []
  type: TYPE_NORMAL
- en: applyRepeller() method, [202](ch04.xhtml#page_202)
  prefs: []
  type: TYPE_NORMAL
- en: arccosine, [128](ch03.xhtml#page_128), [242](ch05.xhtml#page_242)
  prefs: []
  type: TYPE_NORMAL
- en: arcsine, [128](ch03.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: arctangent, [128](ch03.xhtml#page_128)–[129](ch03.xhtml#page_129)
  prefs: []
  type: TYPE_NORMAL
- en: Aristotle, [73](ch02.xhtml#page_73)
  prefs: []
  type: TYPE_NORMAL
- en: Array class and objects, [174](ch04.xhtml#page_174)–[175](ch04.xhtml#page_175)
  prefs: []
  type: TYPE_NORMAL
- en: array destructuring, [415](ch08.xhtml#page_415)
  prefs: []
  type: TYPE_NORMAL
- en: arrive behavior, [224](ch05.xhtml#page_224)–[229](ch05.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: arrow notation, [40](ch01.xhtml#page_40), [178](ch04.xhtml#page_178)
  prefs: []
  type: TYPE_NORMAL
- en: artificial intelligence (AI), [501](ch10.xhtml#page_501). *See also* machine
    learning; neural networks
  prefs: []
  type: TYPE_NORMAL
- en: ASCII (American Standard Code for Information Interchange), [451](ch09.xhtml#page_451)
  prefs: []
  type: TYPE_NORMAL
- en: Ashley, Quinton, [291](ch06.xhtml#page_291)
  prefs: []
  type: TYPE_NORMAL
- en: associative rule, [42](ch01.xhtml#page_42), [50](ch01.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: asynchronous operations, [534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: async keyword, [534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: atan() function, [128](ch03.xhtml#page_128)–[129](ch03.xhtml#page_129)
  prefs: []
  type: TYPE_NORMAL
- en: atan2() function, [129](ch03.xhtml#page_129)–[130](ch03.xhtml#page_130)
  prefs: []
  type: TYPE_NORMAL
- en: AttractionBehavior class and objects, [355](ch06.xhtml#page_355)–[357](ch06.xhtml#page_357)
  prefs: []
  type: TYPE_NORMAL
- en: attract() method, [106](ch02.xhtml#page_106), [111](ch02.xhtml#page_111), [326](ch06.xhtml#page_326)
  prefs: []
  type: TYPE_NORMAL
- en: Attractor class and objects, [103](ch02.xhtml#page_103)–[111](ch02.xhtml#page_111),
    [151](ch03.xhtml#page_151)–[152](ch03.xhtml#page_152), [325](ch06.xhtml#page_325),
    [356](ch06.xhtml#page_356)
  prefs: []
  type: TYPE_NORMAL
- en: autonomous agents, [xxxii](intro.xhtml#page_xxxii), [213](ch05.xhtml#page_213)–[285](ch05.xhtml#page_285)
  prefs: []
  type: TYPE_NORMAL
- en: algorithmic efficiency, [274](ch05.xhtml#page_274)–[284](ch05.xhtml#page_284)
  prefs: []
  type: TYPE_NORMAL
- en: complex systems, [215](ch05.xhtml#page_215), [257](ch05.xhtml#page_257)–[274](ch05.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [214](ch05.xhtml#page_214)
  prefs: []
  type: TYPE_NORMAL
- en: flow-field following, [233](ch05.xhtml#page_233)–[239](ch05.xhtml#page_239)
  prefs: []
  type: TYPE_NORMAL
- en: key components of, [214](ch05.xhtml#page_214)–[215](ch05.xhtml#page_215), [220](ch05.xhtml#page_220)
  prefs: []
  type: TYPE_NORMAL
- en: path following, [240](ch05.xhtml#page_240)–[257](ch05.xhtml#page_257)
  prefs: []
  type: TYPE_NORMAL
- en: steering behaviors, [215](ch05.xhtml#page_215)–[240](ch05.xhtml#page_240), [260](ch05.xhtml#page_260)–[265](ch05.xhtml#page_265),
    [268](ch05.xhtml#page_268)–[274](ch05.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: await keyword, [534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: '**B**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: background() method, [368](ch07.xhtml#page_368)
  prefs: []
  type: TYPE_NORMAL
- en: backpropagation, [520](ch10.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: Barnes-Hut algorithm, [115](ch02.xhtml#page_115), [279](ch05.xhtml#page_279)
  prefs: []
  type: TYPE_NORMAL
- en: beginShape() function
  prefs: []
  type: TYPE_NORMAL
- en: polygons, [311](ch06.xhtml#page_311)
  prefs: []
  type: TYPE_NORMAL
- en: soft-body simulations, [344](ch06.xhtml#page_344)
  prefs: []
  type: TYPE_NORMAL
- en: vehicles and steering, [223](ch05.xhtml#page_223)
  prefs: []
  type: TYPE_NORMAL
- en: bell curves, [13](ch00.xhtml#page_13)–[14](ch00.xhtml#page_14)
  prefs: []
  type: TYPE_NORMAL
- en: bias input, [507](ch10.xhtml#page_507)–[508](ch10.xhtml#page_508), [519](ch10.xhtml#page_519)–[520](ch10.xhtml#page_520),
    [526](ch10.xhtml#page_526)
  prefs: []
  type: TYPE_NORMAL
- en: big *O* notation, [274](ch05.xhtml#page_274)–[275](ch05.xhtml#page_275)
  prefs: []
  type: TYPE_NORMAL
- en: bin-lattice spatial subdivision (binning), [275](ch05.xhtml#page_275)–[278](ch05.xhtml#page_278),
    [357](ch06.xhtml#page_357)
  prefs: []
  type: TYPE_NORMAL
- en: Bird class and objects, [550](ch11.xhtml#page_550), [552](ch11.xhtml#page_552),
    [555](ch11.xhtml#page_555)–[556](ch11.xhtml#page_556), [559](ch11.xhtml#page_559),
    [563](ch11.xhtml#page_563)
  prefs: []
  type: TYPE_NORMAL
- en: blendMode() function, [209](ch04.xhtml#page_209)
  prefs: []
  type: TYPE_NORMAL
- en: blend modes, [208](ch04.xhtml#page_208)–[209](ch04.xhtml#page_209)
  prefs: []
  type: TYPE_NORMAL
- en: Bloop class and objects, [488](ch09.xhtml#page_488)–[489](ch09.xhtml#page_489),
    [491](ch09.xhtml#page_491)–[492](ch09.xhtml#page_492)
  prefs: []
  type: TYPE_NORMAL
- en: Bob class and objects, [150](ch03.xhtml#page_150), [153](ch03.xhtml#page_153)
  prefs: []
  type: TYPE_NORMAL
- en: Body/Bodies class and objects, [294](ch06.xhtml#page_294), [297](ch06.xhtml#page_297)–[299](ch06.xhtml#page_299)
  prefs: []
  type: TYPE_NORMAL
- en: collision events, [330](ch06.xhtml#page_330)
  prefs: []
  type: TYPE_NORMAL
- en: linking Box objects with, [305](ch06.xhtml#page_305)
  prefs: []
  type: TYPE_NORMAL
- en: '*n*-body problem, [110](ch02.xhtml#page_110)–[111](ch02.xhtml#page_111)'
  prefs: []
  type: TYPE_NORMAL
- en: polygons, [309](ch06.xhtml#page_309)
  prefs: []
  type: TYPE_NORMAL
- en: static, [307](ch06.xhtml#page_307)
  prefs: []
  type: TYPE_NORMAL
- en: Boid class and objects, [268](ch05.xhtml#page_268)–[269](ch05.xhtml#page_269),
    [272](ch05.xhtml#page_272), [275](ch05.xhtml#page_275), [277](ch05.xhtml#page_277)
  prefs: []
  type: TYPE_NORMAL
- en: boids model, [216](ch05.xhtml#page_216), [268](ch05.xhtml#page_268)–[278](ch05.xhtml#page_278),
    [500](ch10.xhtml#page_500)
  prefs: []
  type: TYPE_NORMAL
- en: bounceEdges() method, [93](ch02.xhtml#page_93)–[94](ch02.xhtml#page_94)
  prefs: []
  type: TYPE_NORMAL
- en: boundaries() method, [232](ch05.xhtml#page_232)
  prefs: []
  type: TYPE_NORMAL
- en: Boundary class and objects, [307](ch06.xhtml#page_307)–[308](ch06.xhtml#page_308),
    [331](ch06.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: Box2D, [290](ch06.xhtml#page_290)–[291](ch06.xhtml#page_291), [332](ch06.xhtml#page_332)
  prefs: []
  type: TYPE_NORMAL
- en: Box class and objects, [302](ch06.xhtml#page_302)–[303](ch06.xhtml#page_303),
    [305](ch06.xhtml#page_305)–[307](ch06.xhtml#page_307), [323](ch06.xhtml#page_323)–[325](ch06.xhtml#page_325)
  prefs: []
  type: TYPE_NORMAL
- en: box variable, [298](ch06.xhtml#page_298)
  prefs: []
  type: TYPE_NORMAL
- en: brain property, [555](ch11.xhtml#page_555)
  prefs: []
  type: TYPE_NORMAL
- en: Braitenberg, Valentino, [216](ch05.xhtml#page_216)
  prefs: []
  type: TYPE_NORMAL
- en: branch() function, [422](ch08.xhtml#page_422)–[424](ch08.xhtml#page_424), [426](ch08.xhtml#page_426)
  prefs: []
  type: TYPE_NORMAL
- en: Brummitt, Liam, [291](ch06.xhtml#page_291)
  prefs: []
  type: TYPE_NORMAL
- en: brute-force algorithms, [439](ch09.xhtml#page_439)–[441](ch09.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: Burges, Christopher J.C., [523](ch10.xhtml#page_523)
  prefs: []
  type: TYPE_NORMAL
- en: Bushnell, Nolan, [550](ch11.xhtml#page_550)
  prefs: []
  type: TYPE_NORMAL
- en: butterfly effect (nonlinearity), [258](ch05.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: '**C**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: calculateDrag() method, [98](ch02.xhtml#page_98)
  prefs: []
  type: TYPE_NORMAL
- en: calculateState() method, [392](ch07.xhtml#page_392)
  prefs: []
  type: TYPE_NORMAL
- en: Calder, Alexander, [71](ch02.xhtml#page_71)
  prefs: []
  type: TYPE_NORMAL
- en: callback functions, [328](ch06.xhtml#page_328)–[330](ch06.xhtml#page_330), [534](ch10.xhtml#page_534),
    [538](ch10.xhtml#page_538), [556](ch11.xhtml#page_556)–[557](ch11.xhtml#page_557)
  prefs: []
  type: TYPE_NORMAL
- en: Cantor, Georg, [401](ch08.xhtml#page_401)–[402](ch08.xhtml#page_402)
  prefs: []
  type: TYPE_NORMAL
- en: cantor() function, [408](ch08.xhtml#page_408)–[409](ch08.xhtml#page_409)
  prefs: []
  type: TYPE_NORMAL
- en: Cantor set, [402](ch08.xhtml#page_402), [407](ch08.xhtml#page_407)–[410](ch08.xhtml#page_410),
    [431](ch08.xhtml#page_431)
  prefs: []
  type: TYPE_NORMAL
- en: canvas variable, [300](ch06.xhtml#page_300)
  prefs: []
  type: TYPE_NORMAL
- en: Cartesian coordinates, [130](ch03.xhtml#page_130)–[134](ch03.xhtml#page_134)
  prefs: []
  type: TYPE_NORMAL
- en: converting to polar, [131](ch03.xhtml#page_131)–[133](ch03.xhtml#page_133)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [130](ch03.xhtml#page_130)
  prefs: []
  type: TYPE_NORMAL
- en: evolutionary computing, [473](ch09.xhtml#page_473)
  prefs: []
  type: TYPE_NORMAL
- en: path following, [252](ch05.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [160](ch03.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: Carver, George Washington, [543](ch11.xhtml#page_543)
  prefs: []
  type: TYPE_NORMAL
- en: Cat class and objects, [188](ch04.xhtml#page_188)–[190](ch04.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: categories. *See* labels
  prefs: []
  type: TYPE_NORMAL
- en: Catto, Erin, [290](ch06.xhtml#page_290)
  prefs: []
  type: TYPE_NORMAL
- en: CDNs (content delivery networks), [291](ch06.xhtml#page_291)–[292](ch06.xhtml#page_292)
  prefs: []
  type: TYPE_NORMAL
- en: Cell class and objects, [390](ch07.xhtml#page_390)
  prefs: []
  type: TYPE_NORMAL
- en: cellular automata (CA), [xxxii](intro.xhtml#page_xxxii), [359](ch07.xhtml#page_359)–[396](ch07.xhtml#page_396)
  prefs: []
  type: TYPE_NORMAL
- en: cells, [360](ch07.xhtml#page_360), [390](ch07.xhtml#page_390)–[392](ch07.xhtml#page_392)
  prefs: []
  type: TYPE_NORMAL
- en: classifications, [379](ch07.xhtml#page_379)–[381](ch07.xhtml#page_381)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [360](ch07.xhtml#page_360)
  prefs: []
  type: TYPE_NORMAL
- en: elementary (1D CAs), [362](ch07.xhtml#page_362)–[379](ch07.xhtml#page_379)
  prefs: []
  type: TYPE_NORMAL
- en: Game of Life (2D CAs), [381](ch07.xhtml#page_381)–[390](ch07.xhtml#page_390)
  prefs: []
  type: TYPE_NORMAL
- en: grids, [360](ch07.xhtml#page_360)–[362](ch07.xhtml#page_362)
  prefs: []
  type: TYPE_NORMAL
- en: neighborhoods, [360](ch07.xhtml#page_360)–[364](ch07.xhtml#page_364)
  prefs: []
  type: TYPE_NORMAL
- en: states, [360](ch07.xhtml#page_360)–[363](ch07.xhtml#page_363)
  prefs: []
  type: TYPE_NORMAL
- en: variations on, [392](ch07.xhtml#page_392)–[395](ch07.xhtml#page_395)
  prefs: []
  type: TYPE_NORMAL
- en: central processing units (CPUs), [559](ch11.xhtml#page_559)
  prefs: []
  type: TYPE_NORMAL
- en: Chakri Maha Prasat Hall, [397](ch08.xhtml#page_397)
  prefs: []
  type: TYPE_NORMAL
- en: checkTarget() method, [480](ch09.xhtml#page_480)
  prefs: []
  type: TYPE_NORMAL
- en: choice variable, [5](ch00.xhtml#page_5)
  prefs: []
  type: TYPE_NORMAL
- en: circle() function, [44](ch01.xhtml#page_44), [295](ch06.xhtml#page_295), [337](ch06.xhtml#page_337)
  prefs: []
  type: TYPE_NORMAL
- en: classes, defined, [3](ch00.xhtml#page_3). *See also* labels
  prefs: []
  type: TYPE_NORMAL
- en: classification, Wolfram, [379](ch07.xhtml#page_379)–[381](ch07.xhtml#page_381)
  prefs: []
  type: TYPE_NORMAL
- en: complexity, [380](ch07.xhtml#page_380)–[381](ch07.xhtml#page_381)
  prefs: []
  type: TYPE_NORMAL
- en: randomness, [380](ch07.xhtml#page_380)
  prefs: []
  type: TYPE_NORMAL
- en: repetition, [380](ch07.xhtml#page_380)
  prefs: []
  type: TYPE_NORMAL
- en: uniformity, [379](ch07.xhtml#page_379)
  prefs: []
  type: TYPE_NORMAL
- en: classification in machine learning, [522](ch10.xhtml#page_522)–[529](ch10.xhtml#page_529),
    [547](ch11.xhtml#page_547)
  prefs: []
  type: TYPE_NORMAL
- en: classifier variable, [532](ch10.xhtml#page_532)–[533](ch10.xhtml#page_533),
    [537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: classify() method, [537](ch10.xhtml#page_537)–[539](ch10.xhtml#page_539), [556](ch11.xhtml#page_556)–[557](ch11.xhtml#page_557)
  prefs: []
  type: TYPE_NORMAL
- en: classifySync() method, [557](ch11.xhtml#page_557)
  prefs: []
  type: TYPE_NORMAL
- en: cloning, [447](ch09.xhtml#page_447), [491](ch09.xhtml#page_491), [580](ch11.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: Cluster class and objects, [351](ch06.xhtml#page_351)–[353](ch06.xhtml#page_353)
  prefs: []
  type: TYPE_NORMAL
- en: Coding Train, [xxix](intro.xhtml#page_xxix)–[xxx](intro.xhtml#page_xxx), [xxxviii](intro.xhtml#page_xxxviii)
  prefs: []
  type: TYPE_NORMAL
- en: coefficient of friction (*Q*), [91](ch02.xhtml#page_91), [94](ch02.xhtml#page_94),
    [96](ch02.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: cohesion in flocking, [259](ch05.xhtml#page_259), [268](ch05.xhtml#page_268)–[269](ch05.xhtml#page_269),
    [271](ch05.xhtml#page_271)–[272](ch05.xhtml#page_272)
  prefs: []
  type: TYPE_NORMAL
- en: collides() method, [552](ch11.xhtml#page_552)
  prefs: []
  type: TYPE_NORMAL
- en: collisions
  prefs: []
  type: TYPE_NORMAL
- en: attraction and repulsion behaviors, [356](ch06.xhtml#page_356)
  prefs: []
  type: TYPE_NORMAL
- en: callbacks, [328](ch06.xhtml#page_328)–[330](ch06.xhtml#page_330), [534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: collision detection, [289](ch06.xhtml#page_289)–[290](ch06.xhtml#page_290),
    [329](ch06.xhtml#page_329)
  prefs: []
  type: TYPE_NORMAL
- en: collision events, [327](ch06.xhtml#page_327)–[331](ch06.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: collision resolution, [289](ch06.xhtml#page_289)
  prefs: []
  type: TYPE_NORMAL
- en: event listeners, [328](ch06.xhtml#page_328)
  prefs: []
  type: TYPE_NORMAL
- en: idealized elastic collisions, [92](ch02.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: inelastic collisions, [92](ch02.xhtml#page_92)–[93](ch02.xhtml#page_93)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolution, [552](ch11.xhtml#page_552)–[553](ch11.xhtml#page_553), [564](ch11.xhtml#page_564)
  prefs: []
  type: TYPE_NORMAL
- en: physics libraries, [334](ch06.xhtml#page_334)
  prefs: []
  type: TYPE_NORMAL
- en: colorMode() method, [484](ch09.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: comma-separated values (CSV), [531](ch10.xhtml#page_531)
  prefs: []
  type: TYPE_NORMAL
- en: commutative rule, [42](ch01.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: complex adaptive systems, [395](ch07.xhtml#page_395), [500](ch10.xhtml#page_500)
  prefs: []
  type: TYPE_NORMAL
- en: complex systems, [215](ch05.xhtml#page_215), [257](ch05.xhtml#page_257)–[274](ch05.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: Class 4 cellular automata, [380](ch07.xhtml#page_380)–[381](ch07.xhtml#page_381)
  prefs: []
  type: TYPE_NORMAL
- en: combining behaviors, [265](ch05.xhtml#page_265)–[268](ch05.xhtml#page_268)
  prefs: []
  type: TYPE_NORMAL
- en: competition and cooperation, [258](ch05.xhtml#page_258)–[259](ch05.xhtml#page_259)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [258](ch05.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: feedback, [259](ch05.xhtml#page_259)
  prefs: []
  type: TYPE_NORMAL
- en: flocking, [268](ch05.xhtml#page_268)–[274](ch05.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: Game of Life, [382](ch07.xhtml#page_382)
  prefs: []
  type: TYPE_NORMAL
- en: implementing group behaviors, [259](ch05.xhtml#page_259)–[265](ch05.xhtml#page_265)
  prefs: []
  type: TYPE_NORMAL
- en: key principles and characteristics, [258](ch05.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: nesting, [395](ch07.xhtml#page_395)
  prefs: []
  type: TYPE_NORMAL
- en: nonlinearity, [258](ch05.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: separation, [260](ch05.xhtml#page_260)–[265](ch05.xhtml#page_265)
  prefs: []
  type: TYPE_NORMAL
- en: Composite container, [294](ch06.xhtml#page_294), [298](ch06.xhtml#page_298)
  prefs: []
  type: TYPE_NORMAL
- en: compound bodies, [309](ch06.xhtml#page_309), [312](ch06.xhtml#page_312)–[314](ch06.xhtml#page_314)
  prefs: []
  type: TYPE_NORMAL
- en: '*Computational Beauty of Nature*, *The* (Flake), [xxx](intro.xhtml#page_xxx)'
  prefs: []
  type: TYPE_NORMAL
- en: concave shapes, [310](ch06.xhtml#page_310)
  prefs: []
  type: TYPE_NORMAL
- en: Confetti subclass and objects, [194](ch04.xhtml#page_194)–[195](ch04.xhtml#page_195),
    [197](ch04.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: connectionist systems, [500](ch10.xhtml#page_500)
  prefs: []
  type: TYPE_NORMAL
- en: constant acceleration, [60](ch01.xhtml#page_60)–[62](ch01.xhtml#page_62)
  prefs: []
  type: TYPE_NORMAL
- en: const declaration, [5](ch00.xhtml#page_5), [297](ch06.xhtml#page_297)
  prefs: []
  type: TYPE_NORMAL
- en: constrain() function
  prefs: []
  type: TYPE_NORMAL
- en: angular motion, [125](ch03.xhtml#page_125)
  prefs: []
  type: TYPE_NORMAL
- en: steering behaviors, [237](ch05.xhtml#page_237)
  prefs: []
  type: TYPE_NORMAL
- en: Constraint class and objects, [315](ch06.xhtml#page_315), [317](ch06.xhtml#page_317),
    [319](ch06.xhtml#page_319)
  prefs: []
  type: TYPE_NORMAL
- en: constraints, [294](ch06.xhtml#page_294), [315](ch06.xhtml#page_315)–[324](ch06.xhtml#page_324)
  prefs: []
  type: TYPE_NORMAL
- en: distance constraints, [315](ch06.xhtml#page_315)–[319](ch06.xhtml#page_319)
  prefs: []
  type: TYPE_NORMAL
- en: mouse constraints, [315](ch06.xhtml#page_315), [322](ch06.xhtml#page_322)–[324](ch06.xhtml#page_324)
  prefs: []
  type: TYPE_NORMAL
- en: revolute constraints, [315](ch06.xhtml#page_315), [319](ch06.xhtml#page_319)–[322](ch06.xhtml#page_322)
  prefs: []
  type: TYPE_NORMAL
- en: constructor() method
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [197](ch04.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: random walkers, [4](ch00.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: constructors, defined, [4](ch00.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: contactEdge() function, [92](ch02.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: contains() method, [98](ch02.xhtml#page_98), [479](ch09.xhtml#page_479)–[480](ch09.xhtml#page_480)
  prefs: []
  type: TYPE_NORMAL
- en: content delivery networks (CDNs), [291](ch06.xhtml#page_291)–[292](ch06.xhtml#page_292)
  prefs: []
  type: TYPE_NORMAL
- en: convex shapes, [310](ch06.xhtml#page_310)
  prefs: []
  type: TYPE_NORMAL
- en: Conway, John, [381](ch07.xhtml#page_381)
  prefs: []
  type: TYPE_NORMAL
- en: copy() method
  prefs: []
  type: TYPE_NORMAL
- en: forces and mass, [81](ch02.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolutionary ecosystem simulation, [580](ch11.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: reproduction, [492](ch09.xhtml#page_492)
  prefs: []
  type: TYPE_NORMAL
- en: Cortes, Corinna, [523](ch10.xhtml#page_523)
  prefs: []
  type: TYPE_NORMAL
- en: cos() function
  prefs: []
  type: TYPE_NORMAL
- en: coordinate conversion, [131](ch03.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: path following, [248](ch05.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [160](ch03.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: cosine
  prefs: []
  type: TYPE_NORMAL
- en: coordinate conversion, [131](ch03.xhtml#page_131), [160](ch03.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [126](ch03.xhtml#page_126)
  prefs: []
  type: TYPE_NORMAL
- en: dot products, [242](ch05.xhtml#page_242)–[243](ch05.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: lookup tables, [280](ch05.xhtml#page_280)–[282](ch05.xhtml#page_282)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [137](ch03.xhtml#page_137)
  prefs: []
  type: TYPE_NORMAL
- en: path following, [247](ch05.xhtml#page_247)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [156](ch03.xhtml#page_156)
  prefs: []
  type: TYPE_NORMAL
- en: Coulton, Jonathan, [397](ch08.xhtml#page_397)
  prefs: []
  type: TYPE_NORMAL
- en: Courville, Raphaël de, [xxx](intro.xhtml#page_xxx)
  prefs: []
  type: TYPE_NORMAL
- en: Coveyou, Robert R., [1](ch00.xhtml#page_1)
  prefs: []
  type: TYPE_NORMAL
- en: CPUs (central processing units), [559](ch11.xhtml#page_559)
  prefs: []
  type: TYPE_NORMAL
- en: createButton() method, [571](ch11.xhtml#page_571)
  prefs: []
  type: TYPE_NORMAL
- en: createCanvas() method, [210](ch04.xhtml#page_210)
  prefs: []
  type: TYPE_NORMAL
- en: create() function, [296](ch06.xhtml#page_296), [299](ch06.xhtml#page_299), [312](ch06.xhtml#page_312),
    [323](ch06.xhtml#page_323)
  prefs: []
  type: TYPE_NORMAL
- en: createVector() function, [39](ch01.xhtml#page_39)–[40](ch01.xhtml#page_40),
    [140](ch03.xhtml#page_140), [297](ch06.xhtml#page_297)
  prefs: []
  type: TYPE_NORMAL
- en: Creature class and objects, [568](ch11.xhtml#page_568), [570](ch11.xhtml#page_570),
    [572](ch11.xhtml#page_572), [574](ch11.xhtml#page_574), [580](ch11.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: creature design, [585](appendix.xhtml#page_585)–[588](appendix.xhtml#page_588)
  prefs: []
  type: TYPE_NORMAL
- en: matching form to environment, [587](appendix.xhtml#page_587)
  prefs: []
  type: TYPE_NORMAL
- en: perspective, [586](appendix.xhtml#page_586)
  prefs: []
  type: TYPE_NORMAL
- en: varying elements, [586](appendix.xhtml#page_586)–[587](appendix.xhtml#page_587)
  prefs: []
  type: TYPE_NORMAL
- en: visual elements, [585](appendix.xhtml#page_585)
  prefs: []
  type: TYPE_NORMAL
- en: cross() method, [45](ch01.xhtml#page_45)
  prefs: []
  type: TYPE_NORMAL
- en: crossover, [447](ch09.xhtml#page_447)–[450](ch09.xhtml#page_450), [457](ch09.xhtml#page_457)–[459](ch09.xhtml#page_459),
    [561](ch11.xhtml#page_561)–[563](ch11.xhtml#page_563)
  prefs: []
  type: TYPE_NORMAL
- en: crossover() method, [458](ch09.xhtml#page_458), [492](ch09.xhtml#page_492),
    [562](ch11.xhtml#page_562)
  prefs: []
  type: TYPE_NORMAL
- en: custom distributions, [16](ch00.xhtml#page_16)–[19](ch00.xhtml#page_19)
  prefs: []
  type: TYPE_NORMAL
- en: accept-reject algorithm, [18](ch00.xhtml#page_18)–[19](ch00.xhtml#page_19)
  prefs: []
  type: TYPE_NORMAL
- en: avoiding oversampling, [17](ch00.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: Lévy flight, [17](ch00.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: qualifying random values, [17](ch00.xhtml#page_17)–[18](ch00.xhtml#page_18)
  prefs: []
  type: TYPE_NORMAL
- en: CustomShape class and objects, [309](ch06.xhtml#page_309), [311](ch06.xhtml#page_311)
  prefs: []
  type: TYPE_NORMAL
- en: '**D**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: debug property, [532](ch10.xhtml#page_532), [534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: degrees, [118](ch03.xhtml#page_118)–[119](ch03.xhtml#page_119)
  prefs: []
  type: TYPE_NORMAL
- en: delta angle, [143](ch03.xhtml#page_143)
  prefs: []
  type: TYPE_NORMAL
- en: deltaAngle variable, [143](ch03.xhtml#page_143)–[145](ch03.xhtml#page_145)
  prefs: []
  type: TYPE_NORMAL
- en: delta time, [79](ch02.xhtml#page_79), [121](ch03.xhtml#page_121)
  prefs: []
  type: TYPE_NORMAL
- en: delta weight, [510](ch10.xhtml#page_510)
  prefs: []
  type: TYPE_NORMAL
- en: dense (fully connected) layer, [526](ch10.xhtml#page_526)
  prefs: []
  type: TYPE_NORMAL
- en: derivatives, [331](ch06.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: deterministic structure, [24](ch00.xhtml#page_24), [399](ch08.xhtml#page_399)–[400](ch08.xhtml#page_400),
    [402](ch08.xhtml#page_402), [419](ch08.xhtml#page_419)–[424](ch08.xhtml#page_424),
    [426](ch08.xhtml#page_426)
  prefs: []
  type: TYPE_NORMAL
- en: differentiation, [331](ch06.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: dissipative forces, [90](ch02.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: distance constraints, [316](ch06.xhtml#page_316)–[319](ch06.xhtml#page_319)
  prefs: []
  type: TYPE_NORMAL
- en: dist() method, [45](ch01.xhtml#page_45)
  prefs: []
  type: TYPE_NORMAL
- en: distributive rule, [50](ch01.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: division sign (/), [50](ch01.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: div() method, [45](ch01.xhtml#page_45), [50](ch01.xhtml#page_50), [65](ch01.xhtml#page_65)
  prefs: []
  type: TYPE_NORMAL
- en: DNA class and objects, [451](ch09.xhtml#page_451)–[454](ch09.xhtml#page_454),
    [458](ch09.xhtml#page_458), [460](ch09.xhtml#page_460)–[461](ch09.xhtml#page_461),
    [467](ch09.xhtml#page_467)–[469](ch09.xhtml#page_469), [472](ch09.xhtml#page_472)–[475](ch09.xhtml#page_475),
    [484](ch09.xhtml#page_484), [491](ch09.xhtml#page_491)–[492](ch09.xhtml#page_492)
  prefs: []
  type: TYPE_NORMAL
- en: Dog class and objects, [187](ch04.xhtml#page_187)–[192](ch04.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: dot() method, [45](ch01.xhtml#page_45), [241](ch05.xhtml#page_241)
  prefs: []
  type: TYPE_NORMAL
- en: drag force, [94](ch02.xhtml#page_94)–[95](ch02.xhtml#page_95). *See also* fluid
    resistance
  prefs: []
  type: TYPE_NORMAL
- en: drag() method, [98](ch02.xhtml#page_98)
  prefs: []
  type: TYPE_NORMAL
- en: drawCircles() function, [405](ch08.xhtml#page_405)–[406](ch08.xhtml#page_406)
  prefs: []
  type: TYPE_NORMAL
- en: '**E**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: eat() method, [187](ch04.xhtml#page_187), [192](ch04.xhtml#page_192)–[193](ch04.xhtml#page_193),
    [580](ch11.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: Ecosystem Project, [xxxvii](intro.xhtml#page_xxxvii)–[xxxviii](intro.xhtml#page_xxxviii)
  prefs: []
  type: TYPE_NORMAL
- en: autonomous agents, [285](ch05.xhtml#page_285)
  prefs: []
  type: TYPE_NORMAL
- en: cellular automata, [396](ch07.xhtml#page_396)
  prefs: []
  type: TYPE_NORMAL
- en: forces, [116](ch02.xhtml#page_116)
  prefs: []
  type: TYPE_NORMAL
- en: fractals, [435](ch08.xhtml#page_435)
  prefs: []
  type: TYPE_NORMAL
- en: genetic algorithms, [495](ch09.xhtml#page_495)
  prefs: []
  type: TYPE_NORMAL
- en: neural networks, [542](ch10.xhtml#page_542)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolution, [582](ch11.xhtml#page_582)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [165](ch03.xhtml#page_165)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [211](ch04.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: physics engines, [358](ch06.xhtml#page_358)
  prefs: []
  type: TYPE_NORMAL
- en: randomness, [31](ch00.xhtml#page_31)
  prefs: []
  type: TYPE_NORMAL
- en: vectors, [69](ch01.xhtml#page_69)
  prefs: []
  type: TYPE_NORMAL
- en: ecosystem simulation, [439](ch09.xhtml#page_439), [487](ch09.xhtml#page_487)–[493](ch09.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: genotype/phenotype distinction, [444](ch09.xhtml#page_444), [490](ch09.xhtml#page_490)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolution, [573](ch11.xhtml#page_573)–[582](ch11.xhtml#page_582)
  prefs: []
  type: TYPE_NORMAL
- en: reproduction, [491](ch09.xhtml#page_491)–[493](ch09.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: selection, [491](ch09.xhtml#page_491)–[493](ch09.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: elastic collisions, [92](ch02.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: elitist approach to parent selection, [445](ch09.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: elt property, [300](ch06.xhtml#page_300)
  prefs: []
  type: TYPE_NORMAL
- en: Emerson, Ralph Waldo, [213](ch05.xhtml#page_213)
  prefs: []
  type: TYPE_NORMAL
- en: Emitter class and objects, [179](ch04.xhtml#page_179)–[184](ch04.xhtml#page_184),
    [186](ch04.xhtml#page_186)–[187](ch04.xhtml#page_187), [195](ch04.xhtml#page_195)–[198](ch04.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: emitters, [170](ch04.xhtml#page_170), [179](ch04.xhtml#page_179)–[181](ch04.xhtml#page_181),
    [182](ch04.xhtml#page_182)–[185](ch04.xhtml#page_185)
  prefs: []
  type: TYPE_NORMAL
- en: emitters variable, [184](ch04.xhtml#page_184)–[185](ch04.xhtml#page_185)
  prefs: []
  type: TYPE_NORMAL
- en: endShape() function, [223](ch05.xhtml#page_223), [311](ch06.xhtml#page_311),
    [344](ch06.xhtml#page_344)
  prefs: []
  type: TYPE_NORMAL
- en: Engine class and objects, [294](ch06.xhtml#page_294), [296](ch06.xhtml#page_296)–[297](ch06.xhtml#page_297),
    [304](ch06.xhtml#page_304), [326](ch06.xhtml#page_326)
  prefs: []
  type: TYPE_NORMAL
- en: epochs, [533](ch10.xhtml#page_533)–[534](ch10.xhtml#page_534), [536](ch10.xhtml#page_536)
  prefs: []
  type: TYPE_NORMAL
- en: equilibrium, [73](ch02.xhtml#page_73)
  prefs: []
  type: TYPE_NORMAL
- en: Euclid, [34](ch01.xhtml#page_34), [398](ch08.xhtml#page_398)
  prefs: []
  type: TYPE_NORMAL
- en: Euclidean geometry, [398](ch08.xhtml#page_398), [401](ch08.xhtml#page_401)
  prefs: []
  type: TYPE_NORMAL
- en: Euclidean vectors, [34](ch01.xhtml#page_34). *See also* vectors
  prefs: []
  type: TYPE_NORMAL
- en: Euler, Leonhard, [332](ch06.xhtml#page_332)
  prefs: []
  type: TYPE_NORMAL
- en: Euler integration, [332](ch06.xhtml#page_332)
  prefs: []
  type: TYPE_NORMAL
- en: event listeners, [328](ch06.xhtml#page_328)
  prefs: []
  type: TYPE_NORMAL
- en: evolutionary computing, [438](ch09.xhtml#page_438). *See also* genetic algorithms
  prefs: []
  type: TYPE_NORMAL
- en: exclusive or (XOR), [518](ch10.xhtml#page_518)–[520](ch10.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: exponential increase, [465](ch09.xhtml#page_465)
  prefs: []
  type: TYPE_NORMAL
- en: extends keyword, [190](ch04.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: '**F**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: factorial() function, [404](ch08.xhtml#page_404)–[405](ch08.xhtml#page_405)
  prefs: []
  type: TYPE_NORMAL
- en: factorials, [403](ch08.xhtml#page_403)–[404](ch08.xhtml#page_404)
  prefs: []
  type: TYPE_NORMAL
- en: factory methods, [297](ch06.xhtml#page_297)–[298](ch06.xhtml#page_298)
  prefs: []
  type: TYPE_NORMAL
- en: feedForward() method, [508](ch10.xhtml#page_508)
  prefs: []
  type: TYPE_NORMAL
- en: feed-forward model, [503](ch10.xhtml#page_503)
  prefs: []
  type: TYPE_NORMAL
- en: filter() function, [178](ch04.xhtml#page_178)
  prefs: []
  type: TYPE_NORMAL
- en: finishedTraining() callback function, [534](ch10.xhtml#page_534), [538](ch10.xhtml#page_538)
  prefs: []
  type: TYPE_NORMAL
- en: fitness functions
  prefs: []
  type: TYPE_NORMAL
- en: customizing GAs, [464](ch09.xhtml#page_464)–[467](ch09.xhtml#page_467)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [445](ch09.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: ecosystem simulation, [489](ch09.xhtml#page_489), [579](ch11.xhtml#page_579)
  prefs: []
  type: TYPE_NORMAL
- en: interactive selection, [483](ch09.xhtml#page_483)
  prefs: []
  type: TYPE_NORMAL
- en: reproduction, [448](ch09.xhtml#page_448)
  prefs: []
  type: TYPE_NORMAL
- en: selection, [452](ch09.xhtml#page_452)–[453](ch09.xhtml#page_453)
  prefs: []
  type: TYPE_NORMAL
- en: smart rockets, [471](ch09.xhtml#page_471)–[472](ch09.xhtml#page_472), [481](ch09.xhtml#page_481),
    [570](ch11.xhtml#page_570)
  prefs: []
  type: TYPE_NORMAL
- en: Flake, Gary William, [xxx](intro.xhtml#page_xxx)
  prefs: []
  type: TYPE_NORMAL
- en: flap() method, [550](ch11.xhtml#page_550), [553](ch11.xhtml#page_553), [557](ch11.xhtml#page_557)
  prefs: []
  type: TYPE_NORMAL
- en: '*Flappy Bird* game, [545](ch11.xhtml#page_545)–[565](ch11.xhtml#page_565)'
  prefs: []
  type: TYPE_NORMAL
- en: classification, [547](ch11.xhtml#page_547)
  prefs: []
  type: TYPE_NORMAL
- en: coding, [550](ch11.xhtml#page_550)–[554](ch11.xhtml#page_554)
  prefs: []
  type: TYPE_NORMAL
- en: collision events, [552](ch11.xhtml#page_552), [564](ch11.xhtml#page_564)
  prefs: []
  type: TYPE_NORMAL
- en: decision-making process, [555](ch11.xhtml#page_555)
  prefs: []
  type: TYPE_NORMAL
- en: features, [546](ch11.xhtml#page_546)–[547](ch11.xhtml#page_547), [555](ch11.xhtml#page_555)–[556](ch11.xhtml#page_556)
  prefs: []
  type: TYPE_NORMAL
- en: heredity, [561](ch11.xhtml#page_561)–[565](ch11.xhtml#page_565)
  prefs: []
  type: TYPE_NORMAL
- en: neural network, [546](ch11.xhtml#page_546)–[548](ch11.xhtml#page_548)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolution, [554](ch11.xhtml#page_554)–[565](ch11.xhtml#page_565)
  prefs: []
  type: TYPE_NORMAL
- en: Nolan’s law, [550](ch11.xhtml#page_550)
  prefs: []
  type: TYPE_NORMAL
- en: normalizing scores, [561](ch11.xhtml#page_561), [563](ch11.xhtml#page_563)
  prefs: []
  type: TYPE_NORMAL
- en: reinforcement learning, [545](ch11.xhtml#page_545)
  prefs: []
  type: TYPE_NORMAL
- en: reproduction, [561](ch11.xhtml#page_561)–[565](ch11.xhtml#page_565)
  prefs: []
  type: TYPE_NORMAL
- en: selection, [559](ch11.xhtml#page_559)–[561](ch11.xhtml#page_561)
  prefs: []
  type: TYPE_NORMAL
- en: variation, [557](ch11.xhtml#page_557)
  prefs: []
  type: TYPE_NORMAL
- en: fleeing behavior, [223](ch05.xhtml#page_223), [261](ch05.xhtml#page_261)–[265](ch05.xhtml#page_265)
  prefs: []
  type: TYPE_NORMAL
- en: Flock class and objects, [272](ch05.xhtml#page_272)
  prefs: []
  type: TYPE_NORMAL
- en: flocking, [268](ch05.xhtml#page_268)–[274](ch05.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: rules governing, [268](ch05.xhtml#page_268)–[269](ch05.xhtml#page_269)
  prefs: []
  type: TYPE_NORMAL
- en: short-range relationships, [270](ch05.xhtml#page_270)
  prefs: []
  type: TYPE_NORMAL
- en: flock() method, [269](ch05.xhtml#page_269)
  prefs: []
  type: TYPE_NORMAL
- en: floor() method, [5](ch00.xhtml#page_5), [7](ch00.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: Flower class and objects, [484](ch09.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: FlowField class and objects, [237](ch05.xhtml#page_237)–[239](ch05.xhtml#page_239)
  prefs: []
  type: TYPE_NORMAL
- en: flow-field following, [233](ch05.xhtml#page_233)–[239](ch05.xhtml#page_239)
  prefs: []
  type: TYPE_NORMAL
- en: fluid resistance, [94](ch02.xhtml#page_94)–[100](ch02.xhtml#page_100)
  prefs: []
  type: TYPE_NORMAL
- en: formula for, [94](ch02.xhtml#page_94)–[96](ch02.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: Mover and Liquid objects, [96](ch02.xhtml#page_96)–[100](ch02.xhtml#page_100)
  prefs: []
  type: TYPE_NORMAL
- en: objects of variable mass, [98](ch02.xhtml#page_98)–[100](ch02.xhtml#page_100)
  prefs: []
  type: TYPE_NORMAL
- en: simplified formula for, [96](ch02.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: Food class and objects, [492](ch09.xhtml#page_492), [575](ch11.xhtml#page_575)
  prefs: []
  type: TYPE_NORMAL
- en: forces, [xxxi](intro.xhtml#page_xxxi), [71](ch02.xhtml#page_71)–[116](ch02.xhtml#page_116)
  prefs: []
  type: TYPE_NORMAL
- en: accumulation of, [77](ch02.xhtml#page_77)–[79](ch02.xhtml#page_79)
  prefs: []
  type: TYPE_NORMAL
- en: action/reaction pairs, [74](ch02.xhtml#page_74)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [82](ch02.xhtml#page_82)–[88](ch02.xhtml#page_88)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [72](ch02.xhtml#page_72)
  prefs: []
  type: TYPE_NORMAL
- en: equilibrium, [73](ch02.xhtml#page_73)
  prefs: []
  type: TYPE_NORMAL
- en: mass and, [79](ch02.xhtml#page_79)–[82](ch02.xhtml#page_82)
  prefs: []
  type: TYPE_NORMAL
- en: modeling, [82](ch02.xhtml#page_82), [88](ch02.xhtml#page_88)–[110](ch02.xhtml#page_110)
  prefs: []
  type: TYPE_NORMAL
- en: '*n*-body problem, [110](ch02.xhtml#page_110)–[115](ch02.xhtml#page_115)'
  prefs: []
  type: TYPE_NORMAL
- en: Newton’s laws of motion, [72](ch02.xhtml#page_72)–[77](ch02.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems with, [197](ch04.xhtml#page_197)–[200](ch04.xhtml#page_200)
  prefs: []
  type: TYPE_NORMAL
- en: physics engines, [72](ch02.xhtml#page_72), [324](ch06.xhtml#page_324)
  prefs: []
  type: TYPE_NORMAL
- en: time step, [79](ch02.xhtml#page_79)
  prefs: []
  type: TYPE_NORMAL
- en: force variable, [149](ch03.xhtml#page_149)
  prefs: []
  type: TYPE_NORMAL
- en: forEach() loops, [175](ch04.xhtml#page_175)
  prefs: []
  type: TYPE_NORMAL
- en: for...in loops, [175](ch04.xhtml#page_175)
  prefs: []
  type: TYPE_NORMAL
- en: for loops
  prefs: []
  type: TYPE_NORMAL
- en: arrays of particles, [174](ch04.xhtml#page_174), [176](ch04.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: cellular automata, [370](ch07.xhtml#page_370)–[371](ch07.xhtml#page_371)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [175](ch04.xhtml#page_175)
  prefs: []
  type: TYPE_NORMAL
- en: L-systems, [429](ch08.xhtml#page_429)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolutionary steering behaviors, [571](ch11.xhtml#page_571)
  prefs: []
  type: TYPE_NORMAL
- en: recursive functions, [403](ch08.xhtml#page_403), [405](ch08.xhtml#page_405)–[406](ch08.xhtml#page_406),
    [408](ch08.xhtml#page_408)
  prefs: []
  type: TYPE_NORMAL
- en: soft-body simulations, [343](ch06.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: waves, [142](ch03.xhtml#page_142), [144](ch03.xhtml#page_144)
  prefs: []
  type: TYPE_NORMAL
- en: for...of loops
  prefs: []
  type: TYPE_NORMAL
- en: arrays of particles, [175](ch04.xhtml#page_175)–[176](ch04.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: collision events, [329](ch06.xhtml#page_329)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [175](ch04.xhtml#page_175)
  prefs: []
  type: TYPE_NORMAL
- en: Koch curve, [413](ch08.xhtml#page_413)
  prefs: []
  type: TYPE_NORMAL
- en: particle emitters, [185](ch04.xhtml#page_185)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems with forces, [199](ch04.xhtml#page_199)
  prefs: []
  type: TYPE_NORMAL
- en: polygons and shapes, [311](ch06.xhtml#page_311)
  prefs: []
  type: TYPE_NORMAL
- en: '*Fractal Geometry of Nature*, *The* (Mandelbrot), [398](ch08.xhtml#page_398),
    [401](ch08.xhtml#page_401)'
  prefs: []
  type: TYPE_NORMAL
- en: fractals, [397](ch08.xhtml#page_397)–[435](ch08.xhtml#page_435)
  prefs: []
  type: TYPE_NORMAL
- en: Cantor set, [402](ch08.xhtml#page_402), [407](ch08.xhtml#page_407)–[410](ch08.xhtml#page_410),
    [431](ch08.xhtml#page_431)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [398](ch08.xhtml#page_398)
  prefs: []
  type: TYPE_NORMAL
- en: deterministic structure, [399](ch08.xhtml#page_399)–[400](ch08.xhtml#page_400)
  prefs: []
  type: TYPE_NORMAL
- en: Euclidean geometry vs., [398](ch08.xhtml#page_398), [401](ch08.xhtml#page_401)
  prefs: []
  type: TYPE_NORMAL
- en: examples of, [398](ch08.xhtml#page_398)–[400](ch08.xhtml#page_400)
  prefs: []
  type: TYPE_NORMAL
- en: Koch curve, [411](ch08.xhtml#page_411)–[419](ch08.xhtml#page_419)
  prefs: []
  type: TYPE_NORMAL
- en: L-systems, [427](ch08.xhtml#page_427)–[435](ch08.xhtml#page_435)
  prefs: []
  type: TYPE_NORMAL
- en: Mandelbrot set, [401](ch08.xhtml#page_401)
  prefs: []
  type: TYPE_NORMAL
- en: mathematical monsters, [412](ch08.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: production rules, [401](ch08.xhtml#page_401)–[402](ch08.xhtml#page_402)
  prefs: []
  type: TYPE_NORMAL
- en: recursion, [401](ch08.xhtml#page_401)–[410](ch08.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: self-similarity, [400](ch08.xhtml#page_400)
  prefs: []
  type: TYPE_NORMAL
- en: Sierpiński triangles, [366](ch07.xhtml#page_366), [373](ch07.xhtml#page_373)
  prefs: []
  type: TYPE_NORMAL
- en: stochastic structure, [400](ch08.xhtml#page_400)
  prefs: []
  type: TYPE_NORMAL
- en: tree structure, [399](ch08.xhtml#page_399), [419](ch08.xhtml#page_419)–[427](ch08.xhtml#page_427)
  prefs: []
  type: TYPE_NORMAL
- en: frameCount variable, [136](ch03.xhtml#page_136)–[137](ch03.xhtml#page_137),
    [179](ch04.xhtml#page_179), [554](ch11.xhtml#page_554)
  prefs: []
  type: TYPE_NORMAL
- en: frames
  prefs: []
  type: TYPE_NORMAL
- en: arrays of particles, [179](ch04.xhtml#page_179)
  prefs: []
  type: TYPE_NORMAL
- en: number elapsed, [136](ch03.xhtml#page_136)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [136](ch03.xhtml#page_136)–[138](ch03.xhtml#page_138), [140](ch03.xhtml#page_140)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [157](ch03.xhtml#page_157), [161](ch03.xhtml#page_161)
  prefs: []
  type: TYPE_NORMAL
- en: waves, [145](ch03.xhtml#page_145)
  prefs: []
  type: TYPE_NORMAL
- en: frequency, defined, [138](ch03.xhtml#page_138)
  prefs: []
  type: TYPE_NORMAL
- en: friction, [90](ch02.xhtml#page_90)–[94](ch02.xhtml#page_94)
  prefs: []
  type: TYPE_NORMAL
- en: calculating, [92](ch02.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: coefficient of, [91](ch02.xhtml#page_91), [94](ch02.xhtml#page_94), [96](ch02.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: dissipative force, [90](ch02.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: elastic vs. inelastic collisions, [92](ch02.xhtml#page_92)–[93](ch02.xhtml#page_93)
  prefs: []
  type: TYPE_NORMAL
- en: formula for, [89](ch02.xhtml#page_89)–[91](ch02.xhtml#page_91)
  prefs: []
  type: TYPE_NORMAL
- en: velocity vector, [90](ch02.xhtml#page_90)–[91](ch02.xhtml#page_91)
  prefs: []
  type: TYPE_NORMAL
- en: fromAngle() method, [133](ch03.xhtml#page_133)
  prefs: []
  type: TYPE_NORMAL
- en: fromCharCode() method, [451](ch09.xhtml#page_451)
  prefs: []
  type: TYPE_NORMAL
- en: fromVertices() function, [309](ch06.xhtml#page_309)
  prefs: []
  type: TYPE_NORMAL
- en: fully connected (dense) layer, [526](ch10.xhtml#page_526)
  prefs: []
  type: TYPE_NORMAL
- en: function keyword, [4](ch00.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: '**G**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*G* (universal gravitational constant), [101](ch02.xhtml#page_101)–[103](ch02.xhtml#page_103),
    [107](ch02.xhtml#page_107)'
  prefs: []
  type: TYPE_NORMAL
- en: '*Gala* (Riley), [117](ch03.xhtml#page_117)'
  prefs: []
  type: TYPE_NORMAL
- en: '*Galapagos* (Sims), [483](ch09.xhtml#page_483)–[484](ch09.xhtml#page_484)'
  prefs: []
  type: TYPE_NORMAL
- en: Galileo, [87](ch02.xhtml#page_87)
  prefs: []
  type: TYPE_NORMAL
- en: Game of Life, [381](ch07.xhtml#page_381)–[392](ch07.xhtml#page_392)
  prefs: []
  type: TYPE_NORMAL
- en: implementation, [385](ch07.xhtml#page_385)–[390](ch07.xhtml#page_390)
  prefs: []
  type: TYPE_NORMAL
- en: object-oriented cells, [390](ch07.xhtml#page_390)–[392](ch07.xhtml#page_392)
  prefs: []
  type: TYPE_NORMAL
- en: rules of, [382](ch07.xhtml#page_382)–[385](ch07.xhtml#page_385)
  prefs: []
  type: TYPE_NORMAL
- en: Gardner, Martin, [381](ch07.xhtml#page_381)
  prefs: []
  type: TYPE_NORMAL
- en: GAs. *See* genetic algorithms
  prefs: []
  type: TYPE_NORMAL
- en: Gauss, Carl Friedrich, [13](ch00.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: Gaussian distributions. *See* normal distributions
  prefs: []
  type: TYPE_NORMAL
- en: geneCounter variable, [474](ch09.xhtml#page_474)
  prefs: []
  type: TYPE_NORMAL
- en: generate() function, [414](ch08.xhtml#page_414), [417](ch08.xhtml#page_417)–[418](ch08.xhtml#page_418),
    [429](ch08.xhtml#page_429)
  prefs: []
  type: TYPE_NORMAL
- en: generations. *See also* reproduction; selection
  prefs: []
  type: TYPE_NORMAL
- en: cellular automata, [362](ch07.xhtml#page_362)–[363](ch07.xhtml#page_363)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [362](ch07.xhtml#page_362)
  prefs: []
  type: TYPE_NORMAL
- en: L-systems, [428](ch08.xhtml#page_428)
  prefs: []
  type: TYPE_NORMAL
- en: speeding up, [570](ch11.xhtml#page_570)
  prefs: []
  type: TYPE_NORMAL
- en: generation variable, [377](ch07.xhtml#page_377)
  prefs: []
  type: TYPE_NORMAL
- en: generative models, [500](ch10.xhtml#page_500)
  prefs: []
  type: TYPE_NORMAL
- en: genetic algorithms (GAs), [xxxii](intro.xhtml#page_xxxii), [437](ch09.xhtml#page_437)–[495](ch09.xhtml#page_495)
  prefs: []
  type: TYPE_NORMAL
- en: coding, [450](ch09.xhtml#page_450)–[462](ch09.xhtml#page_462)
  prefs: []
  type: TYPE_NORMAL
- en: customizing, [463](ch09.xhtml#page_463)–[469](ch09.xhtml#page_469)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [438](ch09.xhtml#page_438)–[439](ch09.xhtml#page_439)
  prefs: []
  type: TYPE_NORMAL
- en: ecosystem simulation, [439](ch09.xhtml#page_439), [487](ch09.xhtml#page_487)–[493](ch09.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: evolution vs. intelligent design, [438](ch09.xhtml#page_438)
  prefs: []
  type: TYPE_NORMAL
- en: genotype/phenotype, [443](ch09.xhtml#page_443)–[444](ch09.xhtml#page_444), [467](ch09.xhtml#page_467)–[469](ch09.xhtml#page_469),
    [472](ch09.xhtml#page_472), [490](ch09.xhtml#page_490)
  prefs: []
  type: TYPE_NORMAL
- en: heredity, [442](ch09.xhtml#page_442), [447](ch09.xhtml#page_447), [561](ch11.xhtml#page_561)–[565](ch11.xhtml#page_565)
  prefs: []
  type: TYPE_NORMAL
- en: interactive selection, [439](ch09.xhtml#page_439), [482](ch09.xhtml#page_482)–[487](ch09.xhtml#page_487)
  prefs: []
  type: TYPE_NORMAL
- en: population creation, [443](ch09.xhtml#page_443)–[444](ch09.xhtml#page_444),
    [450](ch09.xhtml#page_450)–[452](ch09.xhtml#page_452)
  prefs: []
  type: TYPE_NORMAL
- en: reproduction, [447](ch09.xhtml#page_447)–[450](ch09.xhtml#page_450), [457](ch09.xhtml#page_457)–[459](ch09.xhtml#page_459),
    [463](ch09.xhtml#page_463)–[464](ch09.xhtml#page_464), [491](ch09.xhtml#page_491)–[493](ch09.xhtml#page_493),
    [561](ch11.xhtml#page_561)–[565](ch11.xhtml#page_565)
  prefs: []
  type: TYPE_NORMAL
- en: selection, [442](ch09.xhtml#page_442), [444](ch09.xhtml#page_444)–[447](ch09.xhtml#page_447),
    [450](ch09.xhtml#page_450), [452](ch09.xhtml#page_452)–[457](ch09.xhtml#page_457),
    [491](ch09.xhtml#page_491)–[493](ch09.xhtml#page_493), [559](ch11.xhtml#page_559)–[561](ch11.xhtml#page_561)
  prefs: []
  type: TYPE_NORMAL
- en: smart rockets, [469](ch09.xhtml#page_469)–[482](ch09.xhtml#page_482)
  prefs: []
  type: TYPE_NORMAL
- en: utility of, [440](ch09.xhtml#page_440)–[441](ch09.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: variation, [442](ch09.xhtml#page_442)–[443](ch09.xhtml#page_443), [445](ch09.xhtml#page_445)–[447](ch09.xhtml#page_447),
    [449](ch09.xhtml#page_449), [557](ch11.xhtml#page_557)–[559](ch11.xhtml#page_559)
  prefs: []
  type: TYPE_NORMAL
- en: genotype
  prefs: []
  type: TYPE_NORMAL
- en: customizing GAs, [467](ch09.xhtml#page_467)–[469](ch09.xhtml#page_469)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [443](ch09.xhtml#page_443)
  prefs: []
  type: TYPE_NORMAL
- en: ecosystem simulation, [490](ch09.xhtml#page_490)
  prefs: []
  type: TYPE_NORMAL
- en: genotype/phenotype distinction, [444](ch09.xhtml#page_444)
  prefs: []
  type: TYPE_NORMAL
- en: interactive selection, [483](ch09.xhtml#page_483), [486](ch09.xhtml#page_486)
  prefs: []
  type: TYPE_NORMAL
- en: smart rockets, [472](ch09.xhtml#page_472)
  prefs: []
  type: TYPE_NORMAL
- en: geometric vectors, [34](ch01.xhtml#page_34). *See also* vectors
  prefs: []
  type: TYPE_NORMAL
- en: gesture classifiers, [529](ch10.xhtml#page_529)–[541](ch10.xhtml#page_541)
  prefs: []
  type: TYPE_NORMAL
- en: data collection, [530](ch10.xhtml#page_530)–[531](ch10.xhtml#page_531)
  prefs: []
  type: TYPE_NORMAL
- en: data preparation, [530](ch10.xhtml#page_530)–[531](ch10.xhtml#page_531)
  prefs: []
  type: TYPE_NORMAL
- en: model deployment, [537](ch10.xhtml#page_537)–[539](ch10.xhtml#page_539)
  prefs: []
  type: TYPE_NORMAL
- en: model evaluation, [534](ch10.xhtml#page_534)–[537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: model selection, [531](ch10.xhtml#page_531)–[532](ch10.xhtml#page_532)
  prefs: []
  type: TYPE_NORMAL
- en: model training, [532](ch10.xhtml#page_532)–[534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: parameter tuning, [537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: getNormalPoint() function, [252](ch05.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: GitHub
  prefs: []
  type: TYPE_NORMAL
- en: feedback and corrections, [xxxviii](intro.xhtml#page_xxxviii)
  prefs: []
  type: TYPE_NORMAL
- en: Magic Book project, [xxix](intro.xhtml#page_xxix)
  prefs: []
  type: TYPE_NORMAL
- en: repository for book, [xxviii](intro.xhtml#page_xxviii)–[xxix](intro.xhtml#page_xxix),
    [xxxv](intro.xhtml#page_xxxv), [xxxviii](intro.xhtml#page_xxxviii), [583](ch11.xhtml#page_583)
  prefs: []
  type: TYPE_NORMAL
- en: global variables
  prefs: []
  type: TYPE_NORMAL
- en: avoiding unnecessary p5.Vector objects, [283](ch05.xhtml#page_283)
  prefs: []
  type: TYPE_NORMAL
- en: genetic algorithms, [463](ch09.xhtml#page_463)–[464](ch09.xhtml#page_464), [471](ch09.xhtml#page_471),
    [474](ch09.xhtml#page_474)
  prefs: []
  type: TYPE_NORMAL
- en: gesture classifiers, [538](ch10.xhtml#page_538)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [139](ch03.xhtml#page_139)
  prefs: []
  type: TYPE_NORMAL
- en: random walks, [6](ch00.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: Glow class and objects, [568](ch11.xhtml#page_568), [570](ch11.xhtml#page_570)
  prefs: []
  type: TYPE_NORMAL
- en: graphics processing units (GPUs), [559](ch11.xhtml#page_559)
  prefs: []
  type: TYPE_NORMAL
- en: gravity and gravitational attraction, [101](ch02.xhtml#page_101)–[110](ch02.xhtml#page_110)
  prefs: []
  type: TYPE_NORMAL
- en: acting on two objects, [86](ch02.xhtml#page_86)
  prefs: []
  type: TYPE_NORMAL
- en: constraining distance, [107](ch02.xhtml#page_107)
  prefs: []
  type: TYPE_NORMAL
- en: direction of attraction force, [102](ch02.xhtml#page_102)
  prefs: []
  type: TYPE_NORMAL
- en: formula for, [101](ch02.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: inverse proportion to distance, [101](ch02.xhtml#page_101)–[102](ch02.xhtml#page_102)
  prefs: []
  type: TYPE_NORMAL
- en: '*n*-body problem, [110](ch02.xhtml#page_110)–[115](ch02.xhtml#page_115)'
  prefs: []
  type: TYPE_NORMAL
- en: one object attracts another object, [103](ch02.xhtml#page_103)–[107](ch02.xhtml#page_107)
  prefs: []
  type: TYPE_NORMAL
- en: one object attracts many objects, [109](ch02.xhtml#page_109)–[110](ch02.xhtml#page_110)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems with forces, [197](ch04.xhtml#page_197)–[199](ch04.xhtml#page_199)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [154](ch03.xhtml#page_154)–[159](ch03.xhtml#page_159)
  prefs: []
  type: TYPE_NORMAL
- en: repellers vs., [200](ch04.xhtml#page_200)–[201](ch04.xhtml#page_201)
  prefs: []
  type: TYPE_NORMAL
- en: scaled by mass, [88](ch02.xhtml#page_88)
  prefs: []
  type: TYPE_NORMAL
- en: weight, [76](ch02.xhtml#page_76)
  prefs: []
  type: TYPE_NORMAL
- en: GravityBehavior class and objects, [336](ch06.xhtml#page_336)
  prefs: []
  type: TYPE_NORMAL
- en: gravity variable, [296](ch06.xhtml#page_296)
  prefs: []
  type: TYPE_NORMAL
- en: G variable, [102](ch02.xhtml#page_102)–[103](ch02.xhtml#page_103), [107](ch02.xhtml#page_107)
  prefs: []
  type: TYPE_NORMAL
- en: '**H**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: HALF_PI constant, [119](ch03.xhtml#page_119)
  prefs: []
  type: TYPE_NORMAL
- en: handleCollisions() function, [328](ch06.xhtml#page_328)–[330](ch06.xhtml#page_330)
  prefs: []
  type: TYPE_NORMAL
- en: handPose() function, [528](ch10.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: heading() method, [45](ch01.xhtml#page_45), [130](ch03.xhtml#page_130), [223](ch05.xhtml#page_223),
    [530](ch10.xhtml#page_530)
  prefs: []
  type: TYPE_NORMAL
- en: health variable, [489](ch09.xhtml#page_489), [579](ch11.xhtml#page_579)
  prefs: []
  type: TYPE_NORMAL
- en: heredity, [442](ch09.xhtml#page_442), [447](ch09.xhtml#page_447), [561](ch11.xhtml#page_561)–[565](ch11.xhtml#page_565)
  prefs: []
  type: TYPE_NORMAL
- en: higher-order functions, [175](ch04.xhtml#page_175), [178](ch04.xhtml#page_178)
  prefs: []
  type: TYPE_NORMAL
- en: hinges, [319](ch06.xhtml#page_319)
  prefs: []
  type: TYPE_NORMAL
- en: Hodgin, Robert, [209](ch04.xhtml#page_209)
  prefs: []
  type: TYPE_NORMAL
- en: Holland, John, [438](ch09.xhtml#page_438)
  prefs: []
  type: TYPE_NORMAL
- en: Hooke, Robert, [147](ch03.xhtml#page_147)
  prefs: []
  type: TYPE_NORMAL
- en: Hooke’s law, [147](ch03.xhtml#page_147)–[148](ch03.xhtml#page_148)
  prefs: []
  type: TYPE_NORMAL
- en: Hugo, Victor, [287](ch06.xhtml#page_287)
  prefs: []
  type: TYPE_NORMAL
- en: hyperparameters, [522](ch10.xhtml#page_522), [534](ch10.xhtml#page_534), [537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: '**I**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*I* (moment of inertia), [124](ch03.xhtml#page_124), [158](ch03.xhtml#page_158)'
  prefs: []
  type: TYPE_NORMAL
- en: if statements, [231](ch05.xhtml#page_231), [249](ch05.xhtml#page_249), [387](ch07.xhtml#page_387),
    [530](ch10.xhtml#page_530)
  prefs: []
  type: TYPE_NORMAL
- en: imageClassifier() function, [528](ch10.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: image textures, [205](ch04.xhtml#page_205)–[211](ch04.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: additive blending, [209](ch04.xhtml#page_209)–[210](ch04.xhtml#page_210)
  prefs: []
  type: TYPE_NORMAL
- en: blend modes, [208](ch04.xhtml#page_208)–[209](ch04.xhtml#page_209)
  prefs: []
  type: TYPE_NORMAL
- en: Gaussian distributions, [207](ch04.xhtml#page_207)–[208](ch04.xhtml#page_208)
  prefs: []
  type: TYPE_NORMAL
- en: PNG format, [206](ch04.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: renderers, [210](ch04.xhtml#page_210)
  prefs: []
  type: TYPE_NORMAL
- en: resolution, [208](ch04.xhtml#page_208)
  prefs: []
  type: TYPE_NORMAL
- en: img variable, [207](ch04.xhtml#page_207)
  prefs: []
  type: TYPE_NORMAL
- en: inelastic collisions, [92](ch02.xhtml#page_92)–[93](ch02.xhtml#page_93)
  prefs: []
  type: TYPE_NORMAL
- en: infinite monkey theorem, [440](ch09.xhtml#page_440)
  prefs: []
  type: TYPE_NORMAL
- en: Infinity value, [256](ch05.xhtml#page_256)–[257](ch05.xhtml#page_257)
  prefs: []
  type: TYPE_NORMAL
- en: inheritance, [185](ch04.xhtml#page_185)–[192](ch04.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [187](ch04.xhtml#page_187)
  prefs: []
  type: TYPE_NORMAL
- en: extending, [190](ch04.xhtml#page_190)–[191](ch04.xhtml#page_191)
  prefs: []
  type: TYPE_NORMAL
- en: overriding, [191](ch04.xhtml#page_191)
  prefs: []
  type: TYPE_NORMAL
- en: particles with, [193](ch04.xhtml#page_193)–[197](ch04.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: springs, [339](ch06.xhtml#page_339)
  prefs: []
  type: TYPE_NORMAL
- en: subclasses, [188](ch04.xhtml#page_188), [190](ch04.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: superclasses, [188](ch04.xhtml#page_188), [190](ch04.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: tree structure, [189](ch04.xhtml#page_189)
  prefs: []
  type: TYPE_NORMAL
- en: instanceof operator, [331](ch06.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: integrals, defined, [331](ch06.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: integration, [331](ch06.xhtml#page_331)–[333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [331](ch06.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: Euler integration, [332](ch06.xhtml#page_332)
  prefs: []
  type: TYPE_NORMAL
- en: Runge-Kutta integration, [333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: Verlet integration, [333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: interactive motion, [66](ch01.xhtml#page_66)–[69](ch01.xhtml#page_69)
  prefs: []
  type: TYPE_NORMAL
- en: interactive selection, [482](ch09.xhtml#page_482)–[487](ch09.xhtml#page_487)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [439](ch09.xhtml#page_439), [483](ch09.xhtml#page_483)
  prefs: []
  type: TYPE_NORMAL
- en: population creation, [483](ch09.xhtml#page_483)–[484](ch09.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: user-assigned fitness ratings, [484](ch09.xhtml#page_484), [486](ch09.xhtml#page_486)
  prefs: []
  type: TYPE_NORMAL
- en: inverse proportion, [75](ch02.xhtml#page_75), [101](ch02.xhtml#page_101)–[102](ch02.xhtml#page_102)
  prefs: []
  type: TYPE_NORMAL
- en: iris dataset, [524](ch10.xhtml#page_524)–[525](ch10.xhtml#page_525)
  prefs: []
  type: TYPE_NORMAL
- en: isDead() method, [179](ch04.xhtml#page_179), [197](ch04.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: isStatic property, [300](ch06.xhtml#page_300), [307](ch06.xhtml#page_307)
  prefs: []
  type: TYPE_NORMAL
- en: '**J**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Jakobsen, Thomas, [333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: JavaScript, [xxvii](intro.xhtml#page_xxvii)–[xxviii](intro.xhtml#page_xxviii).
    *See also names of specific libraries and programming elements*
  prefs: []
  type: TYPE_NORMAL
- en: abundance of options, [174](ch04.xhtml#page_174)
  prefs: []
  type: TYPE_NORMAL
- en: addition operator, [40](ch01.xhtml#page_40)
  prefs: []
  type: TYPE_NORMAL
- en: arrays, [174](ch04.xhtml#page_174), [187](ch04.xhtml#page_187), [233](ch05.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: arrow notation, [178](ch04.xhtml#page_178)
  prefs: []
  type: TYPE_NORMAL
- en: callback functions, [534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: const vs. let, [5](ch00.xhtml#page_5)
  prefs: []
  type: TYPE_NORMAL
- en: Infinity value, [257](ch05.xhtml#page_257)
  prefs: []
  type: TYPE_NORMAL
- en: inheritance, [190](ch04.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: object destructuring, [297](ch06.xhtml#page_297)
  prefs: []
  type: TYPE_NORMAL
- en: object literals, [298](ch06.xhtml#page_298), [434](ch08.xhtml#page_434)
  prefs: []
  type: TYPE_NORMAL
- en: objects, [3](ch00.xhtml#page_3)
  prefs: []
  type: TYPE_NORMAL
- en: strict equality and inequality operators, [5](ch00.xhtml#page_5)
  prefs: []
  type: TYPE_NORMAL
- en: JSON (JavaScript Object Notation), [531](ch10.xhtml#page_531)
  prefs: []
  type: TYPE_NORMAL
- en: '**K**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*k* (spring constant), [148](ch03.xhtml#page_148)'
  prefs: []
  type: TYPE_NORMAL
- en: Kaku, Michio, [497](ch10.xhtml#page_497)
  prefs: []
  type: TYPE_NORMAL
- en: kente cloth, [359](ch07.xhtml#page_359)
  prefs: []
  type: TYPE_NORMAL
- en: '*khipu* devices, [497](ch10.xhtml#page_497)'
  prefs: []
  type: TYPE_NORMAL
- en: Kleinman, Kim, [525](ch10.xhtml#page_525)
  prefs: []
  type: TYPE_NORMAL
- en: Klise, Steven, [xxix](intro.xhtml#page_xxix), [385](ch07.xhtml#page_385)
  prefs: []
  type: TYPE_NORMAL
- en: Koch, Helge von, [411](ch08.xhtml#page_411)
  prefs: []
  type: TYPE_NORMAL
- en: Koch curve, [411](ch08.xhtml#page_411)–[419](ch08.xhtml#page_419)
  prefs: []
  type: TYPE_NORMAL
- en: KochLine class and objects, [412](ch08.xhtml#page_412)–[415](ch08.xhtml#page_415)
  prefs: []
  type: TYPE_NORMAL
- en: kochPoints() method, [415](ch08.xhtml#page_415)
  prefs: []
  type: TYPE_NORMAL
- en: Kutta, Martin, [333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: '**L**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: labels, [522](ch10.xhtml#page_522)–[524](ch10.xhtml#page_524), [526](ch10.xhtml#page_526),
    [538](ch10.xhtml#page_538), [540](ch10.xhtml#page_540)
  prefs: []
  type: TYPE_NORMAL
- en: Lasky, David, [585](appendix.xhtml#page_585)
  prefs: []
  type: TYPE_NORMAL
- en: learning constant, [511](ch10.xhtml#page_511)
  prefs: []
  type: TYPE_NORMAL
- en: '*Learning Processing* (Shiffman), [185](ch04.xhtml#page_185)'
  prefs: []
  type: TYPE_NORMAL
- en: LeCun, Yann, [523](ch10.xhtml#page_523)
  prefs: []
  type: TYPE_NORMAL
- en: lerp() method, [45](ch01.xhtml#page_45)
  prefs: []
  type: TYPE_NORMAL
- en: let declaration, [5](ch00.xhtml#page_5)
  prefs: []
  type: TYPE_NORMAL
- en: Lévy flight, [17](ch00.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: lifeCounter variable, [477](ch09.xhtml#page_477)–[478](ch09.xhtml#page_478)
  prefs: []
  type: TYPE_NORMAL
- en: lifespan property, [170](ch04.xhtml#page_170)–[171](ch04.xhtml#page_171), [392](ch07.xhtml#page_392),
    [474](ch09.xhtml#page_474), [477](ch09.xhtml#page_477)
  prefs: []
  type: TYPE_NORMAL
- en: limit() method, [45](ch01.xhtml#page_45), [61](ch01.xhtml#page_61)
  prefs: []
  type: TYPE_NORMAL
- en: Lindenmayer, Aristid, [427](ch08.xhtml#page_427)
  prefs: []
  type: TYPE_NORMAL
- en: Lindenmayer systems. *See* L-systems
  prefs: []
  type: TYPE_NORMAL
- en: linearly separable problems, [517](ch10.xhtml#page_517)–[519](ch10.xhtml#page_519)
  prefs: []
  type: TYPE_NORMAL
- en: line() function, [408](ch08.xhtml#page_408)–[409](ch08.xhtml#page_409), [412](ch08.xhtml#page_412),
    [421](ch08.xhtml#page_421)–[422](ch08.xhtml#page_422), [432](ch08.xhtml#page_432)
  prefs: []
  type: TYPE_NORMAL
- en: Liquid class and objects, [96](ch02.xhtml#page_96)–[99](ch02.xhtml#page_99)
  prefs: []
  type: TYPE_NORMAL
- en: liquid variable, [97](ch02.xhtml#page_97)
  prefs: []
  type: TYPE_NORMAL
- en: living root bridges, [287](ch06.xhtml#page_287)
  prefs: []
  type: TYPE_NORMAL
- en: load() function, [537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: loadJSON() function, [534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: lock() method, [340](ch06.xhtml#page_340)
  prefs: []
  type: TYPE_NORMAL
- en: lookup() method, [237](ch05.xhtml#page_237)–[239](ch05.xhtml#page_239)
  prefs: []
  type: TYPE_NORMAL
- en: lookup tables, [280](ch05.xhtml#page_280)–[282](ch05.xhtml#page_282)
  prefs: []
  type: TYPE_NORMAL
- en: Lorenz, Edward Norton, [258](ch05.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: L-systems (Lindenmayer systems), [427](ch08.xhtml#page_427)–[435](ch08.xhtml#page_435)
  prefs: []
  type: TYPE_NORMAL
- en: alphabet, [428](ch08.xhtml#page_428)
  prefs: []
  type: TYPE_NORMAL
- en: axiom, [428](ch08.xhtml#page_428)
  prefs: []
  type: TYPE_NORMAL
- en: generations, [428](ch08.xhtml#page_428)
  prefs: []
  type: TYPE_NORMAL
- en: production rules, [428](ch08.xhtml#page_428)
  prefs: []
  type: TYPE_NORMAL
- en: simple, [428](ch08.xhtml#page_428)–[430](ch08.xhtml#page_430)
  prefs: []
  type: TYPE_NORMAL
- en: strings, [427](ch08.xhtml#page_427)–[428](ch08.xhtml#page_428)
  prefs: []
  type: TYPE_NORMAL
- en: '*Lunar Lander* game, [549](ch11.xhtml#page_549)–[550](ch11.xhtml#page_550)'
  prefs: []
  type: TYPE_NORMAL
- en: '**M**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: machine learning. *See also* neural networks
  prefs: []
  type: TYPE_NORMAL
- en: classification, [522](ch10.xhtml#page_522)–[529](ch10.xhtml#page_529)
  prefs: []
  type: TYPE_NORMAL
- en: epochs, [533](ch10.xhtml#page_533)–[534](ch10.xhtml#page_534), [536](ch10.xhtml#page_536)
  prefs: []
  type: TYPE_NORMAL
- en: features, [546](ch11.xhtml#page_546)–[547](ch11.xhtml#page_547)
  prefs: []
  type: TYPE_NORMAL
- en: life cycle, [521](ch10.xhtml#page_521)–[522](ch10.xhtml#page_522), [529](ch10.xhtml#page_529)–[541](ch10.xhtml#page_541)
  prefs: []
  type: TYPE_NORMAL
- en: loss, [536](ch10.xhtml#page_536)
  prefs: []
  type: TYPE_NORMAL
- en: with ml5.js, [521](ch10.xhtml#page_521)–[529](ch10.xhtml#page_529)
  prefs: []
  type: TYPE_NORMAL
- en: network design, [524](ch10.xhtml#page_524)–[528](ch10.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: regression, [524](ch10.xhtml#page_524), [527](ch10.xhtml#page_527)–[528](ch10.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: reinforcement learning, [501](ch10.xhtml#page_501), [545](ch11.xhtml#page_545)–[549](ch11.xhtml#page_549)
  prefs: []
  type: TYPE_NORMAL
- en: supervised learning, [501](ch10.xhtml#page_501), [509](ch10.xhtml#page_509),
    [521](ch10.xhtml#page_521)–[523](ch10.xhtml#page_523), [549](ch11.xhtml#page_549)
  prefs: []
  type: TYPE_NORMAL
- en: transfer learning, [502](ch10.xhtml#page_502)
  prefs: []
  type: TYPE_NORMAL
- en: unsupervised learning, [501](ch10.xhtml#page_501)
  prefs: []
  type: TYPE_NORMAL
- en: Madsen, Rune, [xxix](intro.xhtml#page_xxix)
  prefs: []
  type: TYPE_NORMAL
- en: mag() function, [45](ch01.xhtml#page_45), [51](ch01.xhtml#page_51), [95](ch02.xhtml#page_95)
  prefs: []
  type: TYPE_NORMAL
- en: Magnetosphere, [209](ch04.xhtml#page_209)
  prefs: []
  type: TYPE_NORMAL
- en: magnitude squared, [279](ch05.xhtml#page_279)–[280](ch05.xhtml#page_280)
  prefs: []
  type: TYPE_NORMAL
- en: magSq() function, [280](ch05.xhtml#page_280)
  prefs: []
  type: TYPE_NORMAL
- en: Mandelbrot, Benoit, [398](ch08.xhtml#page_398), [401](ch08.xhtml#page_401)
  prefs: []
  type: TYPE_NORMAL
- en: Mandelbrot set, [397](ch08.xhtml#page_397), [401](ch08.xhtml#page_401)
  prefs: []
  type: TYPE_NORMAL
- en: map() function
  prefs: []
  type: TYPE_NORMAL
- en: genetic algorithms, [484](ch09.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: genotype/phenotype, [468](ch09.xhtml#page_468)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolutionary ecosystem simulation, [576](ch11.xhtml#page_576)
  prefs: []
  type: TYPE_NORMAL
- en: noise ranges, [21](ch00.xhtml#page_21)–[22](ch00.xhtml#page_22)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [136](ch03.xhtml#page_136)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [195](ch04.xhtml#page_195)
  prefs: []
  type: TYPE_NORMAL
- en: Marsh, Zannah, [31](ch00.xhtml#page_31), [585](appendix.xhtml#page_585)–[588](appendix.xhtml#page_588)
  prefs: []
  type: TYPE_NORMAL
- en: Marshall Islands stick chart, [33](ch01.xhtml#page_33)–[69](ch01.xhtml#page_69)
  prefs: []
  type: TYPE_NORMAL
- en: mass
  prefs: []
  type: TYPE_NORMAL
- en: fluid resistance and objects of variable mass, [98](ch02.xhtml#page_98)–[100](ch02.xhtml#page_100)
  prefs: []
  type: TYPE_NORMAL
- en: force accumulation, [77](ch02.xhtml#page_77)–[79](ch02.xhtml#page_79)
  prefs: []
  type: TYPE_NORMAL
- en: gravitational attraction, [101](ch02.xhtml#page_101)–[102](ch02.xhtml#page_102),
    [104](ch02.xhtml#page_104), [109](ch02.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: incorporating into simulations, [79](ch02.xhtml#page_79)–[82](ch02.xhtml#page_82)
  prefs: []
  type: TYPE_NORMAL
- en: Newton’s second law, [75](ch02.xhtml#page_75)–[77](ch02.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: units of measurement, [80](ch02.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: weight vs., [76](ch02.xhtml#page_76)
  prefs: []
  type: TYPE_NORMAL
- en: mass variable, [79](ch02.xhtml#page_79), [83](ch02.xhtml#page_83), [197](ch04.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: mathematical monsters, [412](ch08.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: mating pools, [445](ch09.xhtml#page_445), [453](ch09.xhtml#page_453)–[455](ch09.xhtml#page_455)
  prefs: []
  type: TYPE_NORMAL
- en: Matter.js library, [288](ch06.xhtml#page_288), [291](ch06.xhtml#page_291)–[328](ch06.xhtml#page_328)
  prefs: []
  type: TYPE_NORMAL
- en: adding forces, [324](ch06.xhtml#page_324)–[327](ch06.xhtml#page_327)
  prefs: []
  type: TYPE_NORMAL
- en: Body objects, [294](ch06.xhtml#page_294), [297](ch06.xhtml#page_297)–[299](ch06.xhtml#page_299)
  prefs: []
  type: TYPE_NORMAL
- en: collision events, [327](ch06.xhtml#page_327)–[331](ch06.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: compared to Toxiclibs.js, [334](ch06.xhtml#page_334)–[335](ch06.xhtml#page_335)
  prefs: []
  type: TYPE_NORMAL
- en: Composite container, [294](ch06.xhtml#page_294)
  prefs: []
  type: TYPE_NORMAL
- en: constraints, [294](ch06.xhtml#page_294), [315](ch06.xhtml#page_315)–[324](ch06.xhtml#page_324)
  prefs: []
  type: TYPE_NORMAL
- en: Engine objects, [294](ch06.xhtml#page_294), [296](ch06.xhtml#page_296)
  prefs: []
  type: TYPE_NORMAL
- en: importing, [291](ch06.xhtml#page_291)–[293](ch06.xhtml#page_293)
  prefs: []
  type: TYPE_NORMAL
- en: object destructuring, [297](ch06.xhtml#page_297)
  prefs: []
  type: TYPE_NORMAL
- en: overview of, [293](ch06.xhtml#page_293)–[296](ch06.xhtml#page_296)
  prefs: []
  type: TYPE_NORMAL
- en: p5.js and, [302](ch06.xhtml#page_302)–[305](ch06.xhtml#page_305)
  prefs: []
  type: TYPE_NORMAL
- en: polygons and groups of shapes, [309](ch06.xhtml#page_309)–[315](ch06.xhtml#page_315)
  prefs: []
  type: TYPE_NORMAL
- en: Render class, [299](ch06.xhtml#page_299)–[301](ch06.xhtml#page_301)
  prefs: []
  type: TYPE_NORMAL
- en: static bodies, [307](ch06.xhtml#page_307)–[308](ch06.xhtml#page_308)
  prefs: []
  type: TYPE_NORMAL
- en: vectors, [294](ch06.xhtml#page_294)–[295](ch06.xhtml#page_295)
  prefs: []
  type: TYPE_NORMAL
- en: McCulloch, Warren S., [499](ch10.xhtml#page_499)
  prefs: []
  type: TYPE_NORMAL
- en: mean
  prefs: []
  type: TYPE_NORMAL
- en: calculating, [14](ch00.xhtml#page_14)–[15](ch00.xhtml#page_15)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [13](ch00.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: methods
  prefs: []
  type: TYPE_NORMAL
- en: defined, [4](ch00.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: static vs. nonstatic, [64](ch01.xhtml#page_64)–[66](ch01.xhtml#page_66)
  prefs: []
  type: TYPE_NORMAL
- en: Miikkulainen, Risto, [550](ch11.xhtml#page_550)
  prefs: []
  type: TYPE_NORMAL
- en: '*Million Random Digits with 100,000 Normal Deviates*, *A* (RAND), [1](ch00.xhtml#page_1)'
  prefs: []
  type: TYPE_NORMAL
- en: millis() function, [136](ch03.xhtml#page_136)
  prefs: []
  type: TYPE_NORMAL
- en: Mills, Mike, [xxvii](intro.xhtml#page_xxvii)
  prefs: []
  type: TYPE_NORMAL
- en: ml5.js library, [502](ch10.xhtml#page_502)
  prefs: []
  type: TYPE_NORMAL
- en: machine learning, [521](ch10.xhtml#page_521)–[529](ch10.xhtml#page_529)
  prefs: []
  type: TYPE_NORMAL
- en: model deployment, [537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: model selection, [531](ch10.xhtml#page_531)–[532](ch10.xhtml#page_532)
  prefs: []
  type: TYPE_NORMAL
- en: model training, [532](ch10.xhtml#page_532)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolution, [554](ch11.xhtml#page_554)–[557](ch11.xhtml#page_557), [559](ch11.xhtml#page_559),
    [562](ch11.xhtml#page_562)–[563](ch11.xhtml#page_563), [566](ch11.xhtml#page_566)–[567](ch11.xhtml#page_567)
  prefs: []
  type: TYPE_NORMAL
- en: parameter tuning, [537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: reinforcement learning, [548](ch11.xhtml#page_548)
  prefs: []
  type: TYPE_NORMAL
- en: splitting datasets, [537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: syntax, [528](ch10.xhtml#page_528)–[529](ch10.xhtml#page_529)
  prefs: []
  type: TYPE_NORMAL
- en: MNIST (Modified National Institute of Standards and Technology) dataset, [523](ch10.xhtml#page_523)–[524](ch10.xhtml#page_524)
  prefs: []
  type: TYPE_NORMAL
- en: modulo (%) operator, [554](ch11.xhtml#page_554)
  prefs: []
  type: TYPE_NORMAL
- en: '*mo’i* fish, [213](ch05.xhtml#page_213)'
  prefs: []
  type: TYPE_NORMAL
- en: moment of inertia (*I*), [124](ch03.xhtml#page_124), [158](ch03.xhtml#page_158)
  prefs: []
  type: TYPE_NORMAL
- en: Mouse class and objects, [323](ch06.xhtml#page_323)
  prefs: []
  type: TYPE_NORMAL
- en: MouseConstraint class and objects, [315](ch06.xhtml#page_315), [323](ch06.xhtml#page_323)–[324](ch06.xhtml#page_324)
  prefs: []
  type: TYPE_NORMAL
- en: mouse constraints, [315](ch06.xhtml#page_315), [322](ch06.xhtml#page_322)–[324](ch06.xhtml#page_324)
  prefs: []
  type: TYPE_NORMAL
- en: mousePressed() function, [328](ch06.xhtml#page_328), [485](ch09.xhtml#page_485)
  prefs: []
  type: TYPE_NORMAL
- en: Mover class and objects
  prefs: []
  type: TYPE_NORMAL
- en: acceleration, [60](ch01.xhtml#page_60)–[61](ch01.xhtml#page_61)
  prefs: []
  type: TYPE_NORMAL
- en: angular motion, [122](ch03.xhtml#page_122)–[123](ch03.xhtml#page_123), [126](ch03.xhtml#page_126)–[128](ch03.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: combining steering behaviors, [266](ch05.xhtml#page_266)
  prefs: []
  type: TYPE_NORMAL
- en: creating forces, [82](ch02.xhtml#page_82)–[83](ch02.xhtml#page_83), [85](ch02.xhtml#page_85)–[86](ch02.xhtml#page_86)
  prefs: []
  type: TYPE_NORMAL
- en: fluid resistance, [96](ch02.xhtml#page_96)–[98](ch02.xhtml#page_98)
  prefs: []
  type: TYPE_NORMAL
- en: friction, [92](ch02.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: gravitational attraction, [103](ch02.xhtml#page_103)–[110](ch02.xhtml#page_110)
  prefs: []
  type: TYPE_NORMAL
- en: incorporating mass into simulations, [79](ch02.xhtml#page_79), [81](ch02.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: interactive motion, [67](ch01.xhtml#page_67)
  prefs: []
  type: TYPE_NORMAL
- en: motion with vectors, [55](ch01.xhtml#page_55)–[57](ch01.xhtml#page_57), [59](ch01.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: Newton’s first law, [73](ch02.xhtml#page_73)
  prefs: []
  type: TYPE_NORMAL
- en: Newton’s second law, [76](ch02.xhtml#page_76)–[77](ch02.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: spring forces, [149](ch03.xhtml#page_149)
  prefs: []
  type: TYPE_NORMAL
- en: Muhonen, Taru, [xxx](intro.xhtml#page_xxx)
  prefs: []
  type: TYPE_NORMAL
- en: multilayered perceptrons, [519](ch10.xhtml#page_519)–[520](ch10.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: multiplication sign (*), [50](ch01.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: mult() method
  prefs: []
  type: TYPE_NORMAL
- en: combining steering behaviors, [267](ch05.xhtml#page_267)
  prefs: []
  type: TYPE_NORMAL
- en: interactive motion, [68](ch01.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: vector multiplication, [45](ch01.xhtml#page_45), [48](ch01.xhtml#page_48)–[49](ch01.xhtml#page_49),
    [65](ch01.xhtml#page_65)
  prefs: []
  type: TYPE_NORMAL
- en: mutate() method, [458](ch09.xhtml#page_458)–[459](ch09.xhtml#page_459), [562](ch11.xhtml#page_562)
  prefs: []
  type: TYPE_NORMAL
- en: mutation, [449](ch09.xhtml#page_449)–[450](ch09.xhtml#page_450), [457](ch09.xhtml#page_457)–[459](ch09.xhtml#page_459),
    [463](ch09.xhtml#page_463)–[464](ch09.xhtml#page_464), [562](ch11.xhtml#page_562)
  prefs: []
  type: TYPE_NORMAL
- en: '**N**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*N* (normal force), [91](ch02.xhtml#page_91)–[92](ch02.xhtml#page_92)'
  prefs: []
  type: TYPE_NORMAL
- en: namespaces, [295](ch06.xhtml#page_295)
  prefs: []
  type: TYPE_NORMAL
- en: natural language processing (NLP), [500](ch10.xhtml#page_500)
  prefs: []
  type: TYPE_NORMAL
- en: '*n*-body problem, [110](ch02.xhtml#page_110)–[115](ch02.xhtml#page_115)'
  prefs: []
  type: TYPE_NORMAL
- en: arrays, [113](ch02.xhtml#page_113)–[115](ch02.xhtml#page_115)
  prefs: []
  type: TYPE_NORMAL
- en: two-body attraction, [111](ch02.xhtml#page_111)–[113](ch02.xhtml#page_113)
  prefs: []
  type: TYPE_NORMAL
- en: NEAT (NeuroEvolution of Augmenting Topologies) algorithm, [550](ch11.xhtml#page_550)
  prefs: []
  type: TYPE_NORMAL
- en: neighborhoods, [360](ch07.xhtml#page_360)–[364](ch07.xhtml#page_364), [367](ch07.xhtml#page_367),
    [371](ch07.xhtml#page_371)–[374](ch07.xhtml#page_374), [381](ch07.xhtml#page_381)–[383](ch07.xhtml#page_383)
  prefs: []
  type: TYPE_NORMAL
- en: neighborSum variable, [387](ch07.xhtml#page_387)
  prefs: []
  type: TYPE_NORMAL
- en: neuralNetwork() function, [528](ch10.xhtml#page_528), [534](ch10.xhtml#page_534),
    [555](ch11.xhtml#page_555), [563](ch11.xhtml#page_563), [567](ch11.xhtml#page_567)
  prefs: []
  type: TYPE_NORMAL
- en: neural networks, [xxxii](intro.xhtml#page_xxxii), [497](ch10.xhtml#page_497)–[542](ch10.xhtml#page_542)
  prefs: []
  type: TYPE_NORMAL
- en: adaptive nature of, [500](ch10.xhtml#page_500)
  prefs: []
  type: TYPE_NORMAL
- en: backpropagation, [520](ch10.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: classification, [522](ch10.xhtml#page_522)–[529](ch10.xhtml#page_529)
  prefs: []
  type: TYPE_NORMAL
- en: data normalization, [517](ch10.xhtml#page_517)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [498](ch10.xhtml#page_498)
  prefs: []
  type: TYPE_NORMAL
- en: difficult applications for artificial neural networks, [499](ch10.xhtml#page_499)–[500](ch10.xhtml#page_500)
  prefs: []
  type: TYPE_NORMAL
- en: epochs, [533](ch10.xhtml#page_533)–[534](ch10.xhtml#page_534), [536](ch10.xhtml#page_536)
  prefs: []
  type: TYPE_NORMAL
- en: gesture classifiers, [529](ch10.xhtml#page_529)–[541](ch10.xhtml#page_541)
  prefs: []
  type: TYPE_NORMAL
- en: human brain, [498](ch10.xhtml#page_498)–[499](ch10.xhtml#page_499)
  prefs: []
  type: TYPE_NORMAL
- en: learning strategies, [501](ch10.xhtml#page_501), [502](ch10.xhtml#page_502)
  prefs: []
  type: TYPE_NORMAL
- en: loss, [536](ch10.xhtml#page_536)
  prefs: []
  type: TYPE_NORMAL
- en: machine learning
  prefs: []
  type: TYPE_NORMAL
- en: defined, [501](ch10.xhtml#page_501)
  prefs: []
  type: TYPE_NORMAL
- en: libraries, [502](ch10.xhtml#page_502), [521](ch10.xhtml#page_521)–[529](ch10.xhtml#page_529)
  prefs: []
  type: TYPE_NORMAL
- en: life cycle, [521](ch10.xhtml#page_521)–[522](ch10.xhtml#page_522), [529](ch10.xhtml#page_529)–[541](ch10.xhtml#page_541)
  prefs: []
  type: TYPE_NORMAL
- en: network design, [524](ch10.xhtml#page_524)–[528](ch10.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: neurons, [498](ch10.xhtml#page_498)–[499](ch10.xhtml#page_499)
  prefs: []
  type: TYPE_NORMAL
- en: nonlinearly separable problems, [518](ch10.xhtml#page_518)
  prefs: []
  type: TYPE_NORMAL
- en: perceptrons, [502](ch10.xhtml#page_502)–[520](ch10.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: pretrained models, [502](ch10.xhtml#page_502)
  prefs: []
  type: TYPE_NORMAL
- en: procedural vs. connectionist systems, [500](ch10.xhtml#page_500)
  prefs: []
  type: TYPE_NORMAL
- en: regression, [524](ch10.xhtml#page_524), [527](ch10.xhtml#page_527)–[528](ch10.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: synthetic data, [512](ch10.xhtml#page_512)
  prefs: []
  type: TYPE_NORMAL
- en: weight adjustment, [500](ch10.xhtml#page_500)–[501](ch10.xhtml#page_501)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolution, [xxxii](intro.xhtml#page_xxxii), [543](ch11.xhtml#page_543)–[582](ch11.xhtml#page_582)
  prefs: []
  type: TYPE_NORMAL
- en: collision events, [552](ch11.xhtml#page_552), [564](ch11.xhtml#page_564)
  prefs: []
  type: TYPE_NORMAL
- en: decision-making process, [555](ch11.xhtml#page_555)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [544](ch11.xhtml#page_544)
  prefs: []
  type: TYPE_NORMAL
- en: early examples of, [549](ch11.xhtml#page_549)
  prefs: []
  type: TYPE_NORMAL
- en: ecosystem simulation, [573](ch11.xhtml#page_573)–[582](ch11.xhtml#page_582)
  prefs: []
  type: TYPE_NORMAL
- en: features, [555](ch11.xhtml#page_555)–[556](ch11.xhtml#page_556)
  prefs: []
  type: TYPE_NORMAL
- en: heredity, [561](ch11.xhtml#page_561)–[565](ch11.xhtml#page_565)
  prefs: []
  type: TYPE_NORMAL
- en: NEAT algorithm, [550](ch11.xhtml#page_550)
  prefs: []
  type: TYPE_NORMAL
- en: normalizing scores, [561](ch11.xhtml#page_561), [563](ch11.xhtml#page_563)
  prefs: []
  type: TYPE_NORMAL
- en: reinforcement learning and, [545](ch11.xhtml#page_545)–[549](ch11.xhtml#page_549)
  prefs: []
  type: TYPE_NORMAL
- en: reproduction, [561](ch11.xhtml#page_561)–[565](ch11.xhtml#page_565)
  prefs: []
  type: TYPE_NORMAL
- en: selection, [559](ch11.xhtml#page_559)–[561](ch11.xhtml#page_561)
  prefs: []
  type: TYPE_NORMAL
- en: steering behaviors, [565](ch11.xhtml#page_565)–[573](ch11.xhtml#page_573)
  prefs: []
  type: TYPE_NORMAL
- en: variation, [557](ch11.xhtml#page_557)
  prefs: []
  type: TYPE_NORMAL
- en: neuroEvolution property, [555](ch11.xhtml#page_555)
  prefs: []
  type: TYPE_NORMAL
- en: '*New Kind of Science*, *A* (Wolfram), [361](ch07.xhtml#page_361)'
  prefs: []
  type: TYPE_NORMAL
- en: new operator, [6](ch00.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: Newton, Isaac, [xxxi](intro.xhtml#page_xxxi), [72](ch02.xhtml#page_72)
  prefs: []
  type: TYPE_NORMAL
- en: Newton’s laws of motion, [72](ch02.xhtml#page_72)–[77](ch02.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: first law, [72](ch02.xhtml#page_72)–[73](ch02.xhtml#page_73)
  prefs: []
  type: TYPE_NORMAL
- en: second law, [75](ch02.xhtml#page_75)–[77](ch02.xhtml#page_77), [80](ch02.xhtml#page_80),
    [89](ch02.xhtml#page_89), [155](ch03.xhtml#page_155), [157](ch03.xhtml#page_157)–[158](ch03.xhtml#page_158)
  prefs: []
  type: TYPE_NORMAL
- en: third law, [73](ch02.xhtml#page_73)–[75](ch02.xhtml#page_75)
  prefs: []
  type: TYPE_NORMAL
- en: nextGeneration() function, [485](ch09.xhtml#page_485)
  prefs: []
  type: TYPE_NORMAL
- en: Nguyen, Dong, [550](ch11.xhtml#page_550)–[554](ch11.xhtml#page_554)
  prefs: []
  type: TYPE_NORMAL
- en: noiseDetail() function, [27](ch00.xhtml#page_27)
  prefs: []
  type: TYPE_NORMAL
- en: noise() function, [20](ch00.xhtml#page_20)–[21](ch00.xhtml#page_21), [27](ch00.xhtml#page_27),
    [139](ch03.xhtml#page_139)
  prefs: []
  type: TYPE_NORMAL
- en: nonlinearity (butterfly effect), [258](ch05.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: nonlinearly separable problems, [518](ch10.xhtml#page_518)–[519](ch10.xhtml#page_519),
    [526](ch10.xhtml#page_526)
  prefs: []
  type: TYPE_NORMAL
- en: nonstatic methods, [64](ch01.xhtml#page_64)–[66](ch01.xhtml#page_66)
  prefs: []
  type: TYPE_NORMAL
- en: nonuniform distributions, [9](ch00.xhtml#page_9)–[13](ch00.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: applying unequal weights to multiple outcomes, [11](ch00.xhtml#page_11)–[12](ch00.xhtml#page_12)
  prefs: []
  type: TYPE_NORMAL
- en: asking for random numbers, [11](ch00.xhtml#page_11)
  prefs: []
  type: TYPE_NORMAL
- en: controlling probability of events, [13](ch00.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: filling arrays with numbers, [11](ch00.xhtml#page_11)
  prefs: []
  type: TYPE_NORMAL
- en: uses for, [9](ch00.xhtml#page_9)–[10](ch00.xhtml#page_10)
  prefs: []
  type: TYPE_NORMAL
- en: normal distributions (Gaussian distributions), [13](ch00.xhtml#page_13)–[16](ch00.xhtml#page_16),
    [207](ch04.xhtml#page_207)
  prefs: []
  type: TYPE_NORMAL
- en: bell curves, [13](ch00.xhtml#page_13)–[14](ch00.xhtml#page_14)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [13](ch00.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: standard, [15](ch00.xhtml#page_15)
  prefs: []
  type: TYPE_NORMAL
- en: normal force (*N*), [91](ch02.xhtml#page_91)–[92](ch02.xhtml#page_92)
  prefs: []
  type: TYPE_NORMAL
- en: normalization
  prefs: []
  type: TYPE_NORMAL
- en: data, [517](ch10.xhtml#page_517), [533](ch10.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: fitness scores, [445](ch09.xhtml#page_445)–[446](ch09.xhtml#page_446), [561](ch11.xhtml#page_561),
    [563](ch11.xhtml#page_563)
  prefs: []
  type: TYPE_NORMAL
- en: vectors, [53](ch01.xhtml#page_53)–[55](ch01.xhtml#page_55), [67](ch01.xhtml#page_67),
    [102](ch02.xhtml#page_102)–[103](ch02.xhtml#page_103), [295](ch06.xhtml#page_295)
  prefs: []
  type: TYPE_NORMAL
- en: normalizeData() function, [533](ch10.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: normalizeFitness() function, [563](ch11.xhtml#page_563)
  prefs: []
  type: TYPE_NORMAL
- en: normalize() method
  prefs: []
  type: TYPE_NORMAL
- en: interactive motion, [68](ch01.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: path following, [248](ch05.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: vector normalization, [45](ch01.xhtml#page_45), [53](ch01.xhtml#page_53)–[54](ch01.xhtml#page_54)
  prefs: []
  type: TYPE_NORMAL
- en: velocity unit vector, [96](ch02.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: '*n*-squared algorithms, [115](ch02.xhtml#page_115)'
  prefs: []
  type: TYPE_NORMAL
- en: Nucera, Diana, [501](ch10.xhtml#page_501)
  prefs: []
  type: TYPE_NORMAL
- en: '**O**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: object destructuring, [297](ch06.xhtml#page_297), [415](ch08.xhtml#page_415)
  prefs: []
  type: TYPE_NORMAL
- en: object literals, [298](ch06.xhtml#page_298), [316](ch06.xhtml#page_316)–[317](ch06.xhtml#page_317),
    [434](ch08.xhtml#page_434), [555](ch11.xhtml#page_555)
  prefs: []
  type: TYPE_NORMAL
- en: object-oriented programming (OOP), [3](ch00.xhtml#page_3)–[4](ch00.xhtml#page_4),
    [59](ch01.xhtml#page_59), [83](ch02.xhtml#page_83), [158](ch03.xhtml#page_158)–[159](ch03.xhtml#page_159),
    [239](ch05.xhtml#page_239). *See also* inheritance; polymorphism
  prefs: []
  type: TYPE_NORMAL
- en: objects, defined, [3](ch00.xhtml#page_3)
  prefs: []
  type: TYPE_NORMAL
- en: Obstacle class and objects, [478](ch09.xhtml#page_478)–[480](ch09.xhtml#page_480)
  prefs: []
  type: TYPE_NORMAL
- en: offscreen() method, [553](ch11.xhtml#page_553)
  prefs: []
  type: TYPE_NORMAL
- en: one-dimensional Perlin noise, [20](ch00.xhtml#page_20)–[22](ch00.xhtml#page_22)
  prefs: []
  type: TYPE_NORMAL
- en: Onuoha, Mimi, [501](ch10.xhtml#page_501)
  prefs: []
  type: TYPE_NORMAL
- en: optimization, [522](ch10.xhtml#page_522)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [xxxi](intro.xhtml#page_xxxi), [117](ch03.xhtml#page_117)–[165](ch03.xhtml#page_165)
  prefs: []
  type: TYPE_NORMAL
- en: angles, [118](ch03.xhtml#page_118)–[120](ch03.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: angular motion (rotation), [119](ch03.xhtml#page_119), [120](ch03.xhtml#page_120)–[130](ch03.xhtml#page_130)
  prefs: []
  type: TYPE_NORMAL
- en: with angular velocity, [138](ch03.xhtml#page_138)–[142](ch03.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [118](ch03.xhtml#page_118), [134](ch03.xhtml#page_134)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [154](ch03.xhtml#page_154)–[164](ch03.xhtml#page_164)
  prefs: []
  type: TYPE_NORMAL
- en: polar vs. Cartesian coordinates, [130](ch03.xhtml#page_130)–[134](ch03.xhtml#page_134)
  prefs: []
  type: TYPE_NORMAL
- en: properties of, [134](ch03.xhtml#page_134)–[138](ch03.xhtml#page_138)
  prefs: []
  type: TYPE_NORMAL
- en: spring forces, [147](ch03.xhtml#page_147)–[154](ch03.xhtml#page_154)
  prefs: []
  type: TYPE_NORMAL
- en: trigonometry functions, [125](ch03.xhtml#page_125)–[126](ch03.xhtml#page_126)
  prefs: []
  type: TYPE_NORMAL
- en: waves, [142](ch03.xhtml#page_142)–[146](ch03.xhtml#page_146)
  prefs: []
  type: TYPE_NORMAL
- en: Oscillator class and objects, [140](ch03.xhtml#page_140)–[141](ch03.xhtml#page_141),
    [165](ch03.xhtml#page_165)
  prefs: []
  type: TYPE_NORMAL
- en: overfitting data, [536](ch10.xhtml#page_536)
  prefs: []
  type: TYPE_NORMAL
- en: oversampling, [17](ch00.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: '**P**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: p5.Image class and objects, [170](ch04.xhtml#page_170)
  prefs: []
  type: TYPE_NORMAL
- en: p5.js library, [xxvii](intro.xhtml#page_xxvii)–[xxviii](intro.xhtml#page_xxviii)
  prefs: []
  type: TYPE_NORMAL
- en: const and let, [5](ch00.xhtml#page_5)
  prefs: []
  type: TYPE_NORMAL
- en: documentation, [xxix](intro.xhtml#page_xxix)
  prefs: []
  type: TYPE_NORMAL
- en: “Get Started” page, [xxix](intro.xhtml#page_xxix)
  prefs: []
  type: TYPE_NORMAL
- en: list of sketches, [xxxv](intro.xhtml#page_xxxv)
  prefs: []
  type: TYPE_NORMAL
- en: Matter.js and, [302](ch06.xhtml#page_302)–[305](ch06.xhtml#page_305)
  prefs: []
  type: TYPE_NORMAL
- en: noise, [27](ch00.xhtml#page_27)
  prefs: []
  type: TYPE_NORMAL
- en: vectors, [37](ch01.xhtml#page_37)–[40](ch01.xhtml#page_40)
  prefs: []
  type: TYPE_NORMAL
- en: Web Editor, [xxxv](intro.xhtml#page_xxxv)
  prefs: []
  type: TYPE_NORMAL
- en: p5play library, [291](ch06.xhtml#page_291)
  prefs: []
  type: TYPE_NORMAL
- en: p5.Vector class and objects, [37](ch01.xhtml#page_37), [42](ch01.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: acceleration, [67](ch01.xhtml#page_67)–[68](ch01.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: angular motion, [130](ch03.xhtml#page_130)
  prefs: []
  type: TYPE_NORMAL
- en: avoiding unnecessary, [282](ch05.xhtml#page_282)–[284](ch05.xhtml#page_284)
  prefs: []
  type: TYPE_NORMAL
- en: coordinate conversion, [133](ch03.xhtml#page_133)
  prefs: []
  type: TYPE_NORMAL
- en: dot products, [241](ch05.xhtml#page_241)
  prefs: []
  type: TYPE_NORMAL
- en: genetic algorithms, [473](ch09.xhtml#page_473)
  prefs: []
  type: TYPE_NORMAL
- en: incorporating mass into force simulations, [81](ch02.xhtml#page_81)–[82](ch02.xhtml#page_82)
  prefs: []
  type: TYPE_NORMAL
- en: Koch curve, [414](ch08.xhtml#page_414)–[415](ch08.xhtml#page_415)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [140](ch03.xhtml#page_140), [142](ch03.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [198](ch04.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: steering forces and behaviors, [218](ch05.xhtml#page_218), [235](ch05.xhtml#page_235)
  prefs: []
  type: TYPE_NORMAL
- en: vectors, [39](ch01.xhtml#page_39)–[40](ch01.xhtml#page_40), [44](ch01.xhtml#page_44),
    [47](ch01.xhtml#page_47)–[48](ch01.xhtml#page_48), [50](ch01.xhtml#page_50)–[51](ch01.xhtml#page_51),
    [53](ch01.xhtml#page_53), [61](ch01.xhtml#page_61), [64](ch01.xhtml#page_64)–[66](ch01.xhtml#page_66)
  prefs: []
  type: TYPE_NORMAL
- en: parameter tuning, [522](ch10.xhtml#page_522), [537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: parseInt() function, [374](ch07.xhtml#page_374)
  prefs: []
  type: TYPE_NORMAL
- en: Particle class and objects, [59](ch01.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: attraction and repulsion behaviors, [355](ch06.xhtml#page_355)–[356](ch06.xhtml#page_356)
  prefs: []
  type: TYPE_NORMAL
- en: collision events, [329](ch06.xhtml#page_329)–[331](ch06.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: constraints, [316](ch06.xhtml#page_316), [320](ch06.xhtml#page_320)
  prefs: []
  type: TYPE_NORMAL
- en: force-directed graphs, [351](ch06.xhtml#page_351)–[352](ch06.xhtml#page_352)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [169](ch04.xhtml#page_169)–[170](ch04.xhtml#page_170), [172](ch04.xhtml#page_172)–[175](ch04.xhtml#page_175),
    [186](ch04.xhtml#page_186), [193](ch04.xhtml#page_193)–[199](ch04.xhtml#page_199),
    [203](ch04.xhtml#page_203)
  prefs: []
  type: TYPE_NORMAL
- en: soft-body simulations, [343](ch06.xhtml#page_343), [346](ch06.xhtml#page_346)–[347](ch06.xhtml#page_347)
  prefs: []
  type: TYPE_NORMAL
- en: Toxiclibs.js particles, [337](ch06.xhtml#page_337)–[339](ch06.xhtml#page_339)
  prefs: []
  type: TYPE_NORMAL
- en: ParticleString2D class and objects, [343](ch06.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: ParticleSystem class and objects, [59](ch01.xhtml#page_59), [169](ch04.xhtml#page_169),
    [179](ch04.xhtml#page_179)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [167](ch04.xhtml#page_167)–[211](ch04.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: arrays of particles, [174](ch04.xhtml#page_174)–[179](ch04.xhtml#page_179)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [168](ch04.xhtml#page_168)
  prefs: []
  type: TYPE_NORMAL
- en: emitters, [179](ch04.xhtml#page_179)–[185](ch04.xhtml#page_185)
  prefs: []
  type: TYPE_NORMAL
- en: with forces, [197](ch04.xhtml#page_197)–[200](ch04.xhtml#page_200)
  prefs: []
  type: TYPE_NORMAL
- en: image textures, [205](ch04.xhtml#page_205)–[211](ch04.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: inheritance, [185](ch04.xhtml#page_185)–[197](ch04.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: polymorphism, [185](ch04.xhtml#page_185)–[187](ch04.xhtml#page_187), [192](ch04.xhtml#page_192)–[197](ch04.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: with repellers, [200](ch04.xhtml#page_200)–[205](ch04.xhtml#page_205)
  prefs: []
  type: TYPE_NORMAL
- en: single particles, [169](ch04.xhtml#page_169)–[173](ch04.xhtml#page_173)
  prefs: []
  type: TYPE_NORMAL
- en: situations involving, [168](ch04.xhtml#page_168)–[169](ch04.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: Path class and objects, [245](ch05.xhtml#page_245)–[246](ch05.xhtml#page_246),
    [252](ch05.xhtml#page_252), [254](ch05.xhtml#page_254)–[255](ch05.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: path following, [240](ch05.xhtml#page_240)–[257](ch05.xhtml#page_257)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [240](ch05.xhtml#page_240)
  prefs: []
  type: TYPE_NORMAL
- en: dot products, [240](ch05.xhtml#page_240)–[243](ch05.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: multiple segments, [252](ch05.xhtml#page_252)–[257](ch05.xhtml#page_257)
  prefs: []
  type: TYPE_NORMAL
- en: normal, [246](ch05.xhtml#page_246)–[247](ch05.xhtml#page_247)
  prefs: []
  type: TYPE_NORMAL
- en: path radius, [245](ch05.xhtml#page_245)
  prefs: []
  type: TYPE_NORMAL
- en: scalar projection, [249](ch05.xhtml#page_249)
  prefs: []
  type: TYPE_NORMAL
- en: simple, [243](ch05.xhtml#page_243)–[252](ch05.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: pattern recognition, [499](ch10.xhtml#page_499), [505](ch10.xhtml#page_505)–[508](ch10.xhtml#page_508)
  prefs: []
  type: TYPE_NORMAL
- en: Pedercini, Paolo, [291](ch06.xhtml#page_291)
  prefs: []
  type: TYPE_NORMAL
- en: Pendulum class and objects, [158](ch03.xhtml#page_158)–[159](ch03.xhtml#page_159)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [154](ch03.xhtml#page_154)–[164](ch03.xhtml#page_164)
  prefs: []
  type: TYPE_NORMAL
- en: angular acceleration and velocity, [155](ch03.xhtml#page_155), [157](ch03.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: damping trick, [161](ch03.xhtml#page_161)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [154](ch03.xhtml#page_154)
  prefs: []
  type: TYPE_NORMAL
- en: distance constraints, [317](ch06.xhtml#page_317)–[318](ch06.xhtml#page_318)
  prefs: []
  type: TYPE_NORMAL
- en: force of the pendulum, [156](ch03.xhtml#page_156)–[157](ch03.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: gravity and tension, [154](ch03.xhtml#page_154)–[155](ch03.xhtml#page_155)
  prefs: []
  type: TYPE_NORMAL
- en: moment of inertia, [158](ch03.xhtml#page_158)
  prefs: []
  type: TYPE_NORMAL
- en: net force, [155](ch03.xhtml#page_155)
  prefs: []
  type: TYPE_NORMAL
- en: object-oriented structure, [159](ch03.xhtml#page_159)–[160](ch03.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: soft, [343](ch06.xhtml#page_343)–[345](ch06.xhtml#page_345)
  prefs: []
  type: TYPE_NORMAL
- en: torque, [158](ch03.xhtml#page_158)
  prefs: []
  type: TYPE_NORMAL
- en: '*People’s Guide to AI*, *A* (Onuoha and Nucera), [501](ch10.xhtml#page_501)'
  prefs: []
  type: TYPE_NORMAL
- en: Perceptron class and objects, [508](ch10.xhtml#page_508)–[511](ch10.xhtml#page_511)
  prefs: []
  type: TYPE_NORMAL
- en: perceptrons, [502](ch10.xhtml#page_502)–[517](ch10.xhtml#page_517)
  prefs: []
  type: TYPE_NORMAL
- en: activation functions, [504](ch10.xhtml#page_504)–[505](ch10.xhtml#page_505)
  prefs: []
  type: TYPE_NORMAL
- en: bias input, [507](ch10.xhtml#page_507)–[508](ch10.xhtml#page_508)
  prefs: []
  type: TYPE_NORMAL
- en: coding, [508](ch10.xhtml#page_508)–[517](ch10.xhtml#page_517)
  prefs: []
  type: TYPE_NORMAL
- en: computing output, [504](ch10.xhtml#page_504)–[505](ch10.xhtml#page_505)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [502](ch10.xhtml#page_502)–[503](ch10.xhtml#page_503)
  prefs: []
  type: TYPE_NORMAL
- en: feed-forward model, [503](ch10.xhtml#page_503)
  prefs: []
  type: TYPE_NORMAL
- en: learning constant, [511](ch10.xhtml#page_511)
  prefs: []
  type: TYPE_NORMAL
- en: linearly vs. nonlinearly separable problems, [517](ch10.xhtml#page_517)–[519](ch10.xhtml#page_519)
  prefs: []
  type: TYPE_NORMAL
- en: multilayered, [519](ch10.xhtml#page_519)–[520](ch10.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: pattern recognition, [505](ch10.xhtml#page_505)–[508](ch10.xhtml#page_508)
  prefs: []
  type: TYPE_NORMAL
- en: perceptron algorithm, [504](ch10.xhtml#page_504)–[505](ch10.xhtml#page_505)
  prefs: []
  type: TYPE_NORMAL
- en: summing inputs, [504](ch10.xhtml#page_504)–[505](ch10.xhtml#page_505)
  prefs: []
  type: TYPE_NORMAL
- en: training, [512](ch10.xhtml#page_512)–[515](ch10.xhtml#page_515), [520](ch10.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: weighting inputs, [503](ch10.xhtml#page_503)–[505](ch10.xhtml#page_505)
  prefs: []
  type: TYPE_NORMAL
- en: period
  prefs: []
  type: TYPE_NORMAL
- en: defined, [135](ch03.xhtml#page_135)–[136](ch03.xhtml#page_136)
  prefs: []
  type: TYPE_NORMAL
- en: frame count, [136](ch03.xhtml#page_136)–[138](ch03.xhtml#page_138), [179](ch04.xhtml#page_179)
  prefs: []
  type: TYPE_NORMAL
- en: frequency and, [138](ch03.xhtml#page_138)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [135](ch03.xhtml#page_135)–[138](ch03.xhtml#page_138), [140](ch03.xhtml#page_140)
  prefs: []
  type: TYPE_NORMAL
- en: waves, [143](ch03.xhtml#page_143)
  prefs: []
  type: TYPE_NORMAL
- en: Perlin, Ken, [19](ch00.xhtml#page_19)–[20](ch00.xhtml#page_20)
  prefs: []
  type: TYPE_NORMAL
- en: Perlin noise, [19](ch00.xhtml#page_19)–[30](ch00.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [19](ch00.xhtml#page_19)
  prefs: []
  type: TYPE_NORMAL
- en: ecosystem simulation, [488](ch09.xhtml#page_488)
  prefs: []
  type: TYPE_NORMAL
- en: fractals, [427](ch08.xhtml#page_427)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolutionary steering behaviors, [568](ch11.xhtml#page_568)
  prefs: []
  type: TYPE_NORMAL
- en: noise ranges, [22](ch00.xhtml#page_22)–[25](ch00.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: one-dimensional, [20](ch00.xhtml#page_20)–[22](ch00.xhtml#page_22)
  prefs: []
  type: TYPE_NORMAL
- en: overusing, [29](ch00.xhtml#page_29)
  prefs: []
  type: TYPE_NORMAL
- en: steering behaviors, [236](ch05.xhtml#page_236), [238](ch05.xhtml#page_238)
  prefs: []
  type: TYPE_NORMAL
- en: two-dimensional, [25](ch00.xhtml#page_25)–[30](ch00.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: uniform distributions vs., [19](ch00.xhtml#page_19)–[20](ch00.xhtml#page_20)
  prefs: []
  type: TYPE_NORMAL
- en: uses for, [29](ch00.xhtml#page_29)
  prefs: []
  type: TYPE_NORMAL
- en: phenotype
  prefs: []
  type: TYPE_NORMAL
- en: customizing GAs, [467](ch09.xhtml#page_467)–[469](ch09.xhtml#page_469)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [443](ch09.xhtml#page_443)–[444](ch09.xhtml#page_444)
  prefs: []
  type: TYPE_NORMAL
- en: ecosystem simulation, [490](ch09.xhtml#page_490)–[491](ch09.xhtml#page_491)
  prefs: []
  type: TYPE_NORMAL
- en: genotype/phenotype distinction, [444](ch09.xhtml#page_444)
  prefs: []
  type: TYPE_NORMAL
- en: interactive selection, [484](ch09.xhtml#page_484), [486](ch09.xhtml#page_486)
  prefs: []
  type: TYPE_NORMAL
- en: smart rockets, [472](ch09.xhtml#page_472), [474](ch09.xhtml#page_474)
  prefs: []
  type: TYPE_NORMAL
- en: Phillips, Kyle, [333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: physics engines, [72](ch02.xhtml#page_72), [79](ch02.xhtml#page_79), [288](ch06.xhtml#page_288).
    *See also* forces; physics libraries
  prefs: []
  type: TYPE_NORMAL
- en: physics libraries, [xxxii](intro.xhtml#page_xxxii), [287](ch06.xhtml#page_287)–[358](ch06.xhtml#page_358)
  prefs: []
  type: TYPE_NORMAL
- en: Box2D, [290](ch06.xhtml#page_290)–[291](ch06.xhtml#page_291)
  prefs: []
  type: TYPE_NORMAL
- en: integration methods, [331](ch06.xhtml#page_331)–[333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: Matter.js library, [291](ch06.xhtml#page_291)–[328](ch06.xhtml#page_328)
  prefs: []
  type: TYPE_NORMAL
- en: p5play library, [291](ch06.xhtml#page_291)
  prefs: []
  type: TYPE_NORMAL
- en: reasons for using, [289](ch06.xhtml#page_289)–[290](ch06.xhtml#page_290)
  prefs: []
  type: TYPE_NORMAL
- en: Toxiclibs.js library, [333](ch06.xhtml#page_333)–[357](ch06.xhtml#page_357)
  prefs: []
  type: TYPE_NORMAL
- en: pi (π), defined, [120](ch03.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: PI constant, [119](ch03.xhtml#page_119)–[120](ch03.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: Pipe class and objects, [551](ch11.xhtml#page_551)–[553](ch11.xhtml#page_553)
  prefs: []
  type: TYPE_NORMAL
- en: Pitts, Walter, [499](ch10.xhtml#page_499)
  prefs: []
  type: TYPE_NORMAL
- en: pivots, [154](ch03.xhtml#page_154), [158](ch03.xhtml#page_158)–[161](ch03.xhtml#page_161)
  prefs: []
  type: TYPE_NORMAL
- en: plugin objects, [329](ch06.xhtml#page_329)–[330](ch06.xhtml#page_330)
  prefs: []
  type: TYPE_NORMAL
- en: polar coordinates, [130](ch03.xhtml#page_130)–[134](ch03.xhtml#page_134)
  prefs: []
  type: TYPE_NORMAL
- en: converting to Cartesian, [131](ch03.xhtml#page_131)–[133](ch03.xhtml#page_133)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [130](ch03.xhtml#page_130)
  prefs: []
  type: TYPE_NORMAL
- en: evolutionary computing, [473](ch09.xhtml#page_473)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [160](ch03.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: polygon() method, [309](ch06.xhtml#page_309)
  prefs: []
  type: TYPE_NORMAL
- en: polymorphism, [185](ch04.xhtml#page_185)–[187](ch04.xhtml#page_187), [192](ch04.xhtml#page_192)–[193](ch04.xhtml#page_193)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [187](ch04.xhtml#page_187), [193](ch04.xhtml#page_193)
  prefs: []
  type: TYPE_NORMAL
- en: particles with, [193](ch04.xhtml#page_193)–[197](ch04.xhtml#page_197), [338](ch06.xhtml#page_338)
  prefs: []
  type: TYPE_NORMAL
- en: springs, [339](ch06.xhtml#page_339)
  prefs: []
  type: TYPE_NORMAL
- en: pop() function, [420](ch08.xhtml#page_420)–[422](ch08.xhtml#page_422)
  prefs: []
  type: TYPE_NORMAL
- en: Population class and objects, [475](ch09.xhtml#page_475)–[476](ch09.xhtml#page_476),
    [485](ch09.xhtml#page_485)
  prefs: []
  type: TYPE_NORMAL
- en: '*Positron* (Anderson), [167](ch04.xhtml#page_167)'
  prefs: []
  type: TYPE_NORMAL
- en: predict() method, [566](ch11.xhtml#page_566)
  prefs: []
  type: TYPE_NORMAL
- en: predictSync() method, [566](ch11.xhtml#page_566)
  prefs: []
  type: TYPE_NORMAL
- en: preload() method, [207](ch04.xhtml#page_207)
  prefs: []
  type: TYPE_NORMAL
- en: pretrained machine learning models, [502](ch10.xhtml#page_502), [528](ch10.xhtml#page_528),
    [559](ch11.xhtml#page_559)
  prefs: []
  type: TYPE_NORMAL
- en: probabilistic approach to parent selection, [445](ch09.xhtml#page_445)–[446](ch09.xhtml#page_446)
  prefs: []
  type: TYPE_NORMAL
- en: probability of the fittest, [10](ch00.xhtml#page_10)
  prefs: []
  type: TYPE_NORMAL
- en: procedural systems, [500](ch10.xhtml#page_500)
  prefs: []
  type: TYPE_NORMAL
- en: Processing, [xxvii](intro.xhtml#page_xxvii)–[xxix](intro.xhtml#page_xxix), [xxxviii](intro.xhtml#page_xxxviii),
    [333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: production rules
  prefs: []
  type: TYPE_NORMAL
- en: fractal trees, [419](ch08.xhtml#page_419)–[420](ch08.xhtml#page_420)
  prefs: []
  type: TYPE_NORMAL
- en: Koch curve, [411](ch08.xhtml#page_411)
  prefs: []
  type: TYPE_NORMAL
- en: L-systems, [427](ch08.xhtml#page_427)–[429](ch08.xhtml#page_429)
  prefs: []
  type: TYPE_NORMAL
- en: recursion, [401](ch08.xhtml#page_401)–[402](ch08.xhtml#page_402)
  prefs: []
  type: TYPE_NORMAL
- en: promises, [534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: pseudorandom numbers, [1](ch00.xhtml#page_1), [9](ch00.xhtml#page_9), [19](ch00.xhtml#page_19)
  prefs: []
  type: TYPE_NORMAL
- en: Pueblo pottery, [437](ch09.xhtml#page_437)
  prefs: []
  type: TYPE_NORMAL
- en: push() method, [175](ch04.xhtml#page_175), [420](ch08.xhtml#page_420)–[422](ch08.xhtml#page_422)
  prefs: []
  type: TYPE_NORMAL
- en: Pythagorean theorem, [51](ch01.xhtml#page_51), [280](ch05.xhtml#page_280)
  prefs: []
  type: TYPE_NORMAL
- en: '**Q**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: quadratic increase, [465](ch09.xhtml#page_465), [472](ch09.xhtml#page_472)
  prefs: []
  type: TYPE_NORMAL
- en: quadtree data structure, [278](ch05.xhtml#page_278)–[279](ch05.xhtml#page_279)
  prefs: []
  type: TYPE_NORMAL
- en: '**R**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: radians, [119](ch03.xhtml#page_119)–[120](ch03.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: radians() function, [119](ch03.xhtml#page_119)
  prefs: []
  type: TYPE_NORMAL
- en: RAND Corporation, [1](ch00.xhtml#page_1)
  prefs: []
  type: TYPE_NORMAL
- en: random2D() method, [45](ch01.xhtml#page_45), [63](ch01.xhtml#page_63)–[64](ch01.xhtml#page_64),
    [235](ch05.xhtml#page_235), [473](ch09.xhtml#page_473)
  prefs: []
  type: TYPE_NORMAL
- en: random3D() method, [45](ch01.xhtml#page_45)
  prefs: []
  type: TYPE_NORMAL
- en: random acceleration, [62](ch01.xhtml#page_62)–[64](ch01.xhtml#page_64)
  prefs: []
  type: TYPE_NORMAL
- en: randomCharacter() function, [451](ch09.xhtml#page_451), [459](ch09.xhtml#page_459)
  prefs: []
  type: TYPE_NORMAL
- en: random() function
  prefs: []
  type: TYPE_NORMAL
- en: custom distributions, [17](ch00.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: fractal trees, [426](ch08.xhtml#page_426)
  prefs: []
  type: TYPE_NORMAL
- en: genetic algorithms, [455](ch09.xhtml#page_455)
  prefs: []
  type: TYPE_NORMAL
- en: nonuniform distributions, [9](ch00.xhtml#page_9), [11](ch00.xhtml#page_11),
    [13](ch00.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: normal distributions, [13](ch00.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: Perlin noise, [20](ch00.xhtml#page_20)–[21](ch00.xhtml#page_21), [27](ch00.xhtml#page_27)
  prefs: []
  type: TYPE_NORMAL
- en: random walkers, [4](ch00.xhtml#page_4)–[5](ch00.xhtml#page_5), [7](ch00.xhtml#page_7)–[9](ch00.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: randomGaussian() function
  prefs: []
  type: TYPE_NORMAL
- en: normal distributions, [14](ch00.xhtml#page_14)–[16](ch00.xhtml#page_16)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [208](ch04.xhtml#page_208)
  prefs: []
  type: TYPE_NORMAL
- en: randomness, [xxxi](intro.xhtml#page_xxxi), [1](ch00.xhtml#page_1)–[31](ch00.xhtml#page_31)
  prefs: []
  type: TYPE_NORMAL
- en: cellular automata, [380](ch07.xhtml#page_380)
  prefs: []
  type: TYPE_NORMAL
- en: custom distributions, [16](ch00.xhtml#page_16)–[19](ch00.xhtml#page_19)
  prefs: []
  type: TYPE_NORMAL
- en: nonuniform distributions, [9](ch00.xhtml#page_9)–[13](ch00.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: normal distributions, [13](ch00.xhtml#page_13)–[16](ch00.xhtml#page_16)
  prefs: []
  type: TYPE_NORMAL
- en: Perlin noise, [19](ch00.xhtml#page_19)–[30](ch00.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: pseudorandom numbers, [9](ch00.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: random walks, [2](ch00.xhtml#page_2)–[9](ch00.xhtml#page_9), [63](ch01.xhtml#page_63)
  prefs: []
  type: TYPE_NORMAL
- en: single-event probability, [10](ch00.xhtml#page_10)
  prefs: []
  type: TYPE_NORMAL
- en: steering behaviors, [235](ch05.xhtml#page_235)
  prefs: []
  type: TYPE_NORMAL
- en: random walks and walkers, [2](ch00.xhtml#page_2)–[9](ch00.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: custom distributions, [16](ch00.xhtml#page_16)–[17](ch00.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [2](ch00.xhtml#page_2)–[3](ch00.xhtml#page_3)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolutionary steering behaviors, [568](ch11.xhtml#page_568)
  prefs: []
  type: TYPE_NORMAL
- en: nonuniform distributions, [12](ch00.xhtml#page_12)–[13](ch00.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: Perlin noise, [23](ch00.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: probability, [8](ch00.xhtml#page_8)
  prefs: []
  type: TYPE_NORMAL
- en: random acceleration, [63](ch01.xhtml#page_63)
  prefs: []
  type: TYPE_NORMAL
- en: uniform distributions, [8](ch00.xhtml#page_8)–[9](ch00.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: uses for, [3](ch00.xhtml#page_3)
  prefs: []
  type: TYPE_NORMAL
- en: raycasting, [575](ch11.xhtml#page_575)
  prefs: []
  type: TYPE_NORMAL
- en: recordDistance variable, [480](ch09.xhtml#page_480)
  prefs: []
  type: TYPE_NORMAL
- en: rectangle() method, [298](ch06.xhtml#page_298), [305](ch06.xhtml#page_305),
    [307](ch06.xhtml#page_307)
  prefs: []
  type: TYPE_NORMAL
- en: Rect class and objects, [336](ch06.xhtml#page_336)
  prefs: []
  type: TYPE_NORMAL
- en: rect() function, [298](ch06.xhtml#page_298)
  prefs: []
  type: TYPE_NORMAL
- en: recursion, [401](ch08.xhtml#page_401)–[402](ch08.xhtml#page_402)
  prefs: []
  type: TYPE_NORMAL
- en: Cantor set with, [407](ch08.xhtml#page_407)–[410](ch08.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: exit conditions, [404](ch08.xhtml#page_404)–[405](ch08.xhtml#page_405)
  prefs: []
  type: TYPE_NORMAL
- en: factorials, [403](ch08.xhtml#page_403)–[404](ch08.xhtml#page_404)
  prefs: []
  type: TYPE_NORMAL
- en: recursive circles, [405](ch08.xhtml#page_405)–[407](ch08.xhtml#page_407)
  prefs: []
  type: TYPE_NORMAL
- en: recursive functions, [402](ch08.xhtml#page_402)–[404](ch08.xhtml#page_404)
  prefs: []
  type: TYPE_NORMAL
- en: regression, [524](ch10.xhtml#page_524), [527](ch10.xhtml#page_527)–[528](ch10.xhtml#page_528),
    [547](ch11.xhtml#page_547), [565](ch11.xhtml#page_565)–[566](ch11.xhtml#page_566)
  prefs: []
  type: TYPE_NORMAL
- en: reinforcement learning, [545](ch11.xhtml#page_545)–[549](ch11.xhtml#page_549),
    [555](ch11.xhtml#page_555), [559](ch11.xhtml#page_559)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [501](ch10.xhtml#page_501)
  prefs: []
  type: TYPE_NORMAL
- en: features, [546](ch11.xhtml#page_546)–[547](ch11.xhtml#page_547)
  prefs: []
  type: TYPE_NORMAL
- en: policies, [549](ch11.xhtml#page_549)
  prefs: []
  type: TYPE_NORMAL
- en: reward functions, [549](ch11.xhtml#page_549)
  prefs: []
  type: TYPE_NORMAL
- en: supervised learning vs., [549](ch11.xhtml#page_549)
  prefs: []
  type: TYPE_NORMAL
- en: removeBody() method, [306](ch06.xhtml#page_306)–[307](ch06.xhtml#page_307)
  prefs: []
  type: TYPE_NORMAL
- en: Render class and objects, [299](ch06.xhtml#page_299)–[302](ch06.xhtml#page_302),
    [305](ch06.xhtml#page_305)
  prefs: []
  type: TYPE_NORMAL
- en: renderers, [210](ch04.xhtml#page_210)
  prefs: []
  type: TYPE_NORMAL
- en: Repeller class and objects, [200](ch04.xhtml#page_200)–[205](ch04.xhtml#page_205)
  prefs: []
  type: TYPE_NORMAL
- en: repellers, [200](ch04.xhtml#page_200)–[205](ch04.xhtml#page_205)
  prefs: []
  type: TYPE_NORMAL
- en: repel() method, [202](ch04.xhtml#page_202)
  prefs: []
  type: TYPE_NORMAL
- en: reproduce() method, [580](ch11.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: reproduction, [447](ch09.xhtml#page_447)–[450](ch09.xhtml#page_450), [457](ch09.xhtml#page_457)–[459](ch09.xhtml#page_459),
    [491](ch09.xhtml#page_491)–[493](ch09.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: cloning, [447](ch09.xhtml#page_447)
  prefs: []
  type: TYPE_NORMAL
- en: crossover, [447](ch09.xhtml#page_447)–[449](ch09.xhtml#page_449), [450](ch09.xhtml#page_450),
    [457](ch09.xhtml#page_457)–[459](ch09.xhtml#page_459), [561](ch11.xhtml#page_561)–[563](ch11.xhtml#page_563)
  prefs: []
  type: TYPE_NORMAL
- en: mutation, [449](ch09.xhtml#page_449)–[450](ch09.xhtml#page_450), [457](ch09.xhtml#page_457)–[459](ch09.xhtml#page_459),
    [463](ch09.xhtml#page_463)–[464](ch09.xhtml#page_464), [562](ch11.xhtml#page_562)
  prefs: []
  type: TYPE_NORMAL
- en: repetition, [450](ch09.xhtml#page_450)
  prefs: []
  type: TYPE_NORMAL
- en: reproduction() method, [475](ch09.xhtml#page_475), [563](ch11.xhtml#page_563)
  prefs: []
  type: TYPE_NORMAL
- en: resetPipes() function, [564](ch11.xhtml#page_564)
  prefs: []
  type: TYPE_NORMAL
- en: Resnick, Mitchel, [215](ch05.xhtml#page_215), [385](ch07.xhtml#page_385)
  prefs: []
  type: TYPE_NORMAL
- en: rest length, [147](ch03.xhtml#page_147)–[148](ch03.xhtml#page_148), [150](ch03.xhtml#page_150),
    [339](ch06.xhtml#page_339)
  prefs: []
  type: TYPE_NORMAL
- en: revolute constraints, [319](ch06.xhtml#page_319)–[322](ch06.xhtml#page_322)
  prefs: []
  type: TYPE_NORMAL
- en: Reynolds, Craig, [215](ch05.xhtml#page_215)–[216](ch05.xhtml#page_216), [218](ch05.xhtml#page_218),
    [220](ch05.xhtml#page_220)–[221](ch05.xhtml#page_221), [227](ch05.xhtml#page_227)–[229](ch05.xhtml#page_229),
    [233](ch05.xhtml#page_233), [238](ch05.xhtml#page_238), [240](ch05.xhtml#page_240),
    [243](ch05.xhtml#page_243), [249](ch05.xhtml#page_249)–[250](ch05.xhtml#page_250),
    [253](ch05.xhtml#page_253), [257](ch05.xhtml#page_257), [261](ch05.xhtml#page_261),
    [263](ch05.xhtml#page_263), [265](ch05.xhtml#page_265), [268](ch05.xhtml#page_268),
    [275](ch05.xhtml#page_275)
  prefs: []
  type: TYPE_NORMAL
- en: rigid-body simulations, [334](ch06.xhtml#page_334), [342](ch06.xhtml#page_342).
    *See also* Matter.js library
  prefs: []
  type: TYPE_NORMAL
- en: Riley, Bridget, [117](ch03.xhtml#page_117)
  prefs: []
  type: TYPE_NORMAL
- en: Rocket class and objects, [469](ch09.xhtml#page_469)–[472](ch09.xhtml#page_472),
    [474](ch09.xhtml#page_474)–[475](ch09.xhtml#page_475), [479](ch09.xhtml#page_479)–[480](ch09.xhtml#page_480)
  prefs: []
  type: TYPE_NORMAL
- en: rollover() method, [485](ch09.xhtml#page_485)
  prefs: []
  type: TYPE_NORMAL
- en: Ronald, Edmund, [549](ch11.xhtml#page_549)–[550](ch11.xhtml#page_550)
  prefs: []
  type: TYPE_NORMAL
- en: Rosenblatt, Frank, [502](ch10.xhtml#page_502)–[503](ch10.xhtml#page_503)
  prefs: []
  type: TYPE_NORMAL
- en: rotate() function, [45](ch01.xhtml#page_45), [420](ch08.xhtml#page_420)–[422](ch08.xhtml#page_422)
  prefs: []
  type: TYPE_NORMAL
- en: angular motion, [118](ch03.xhtml#page_118), [121](ch03.xhtml#page_121)–[122](ch03.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: physics engines, [306](ch06.xhtml#page_306)
  prefs: []
  type: TYPE_NORMAL
- en: turtle graphics, [432](ch08.xhtml#page_432)
  prefs: []
  type: TYPE_NORMAL
- en: rulesets, [363](ch07.xhtml#page_363)–[365](ch07.xhtml#page_365), [367](ch07.xhtml#page_367)–[370](ch07.xhtml#page_370),
    [373](ch07.xhtml#page_373)–[374](ch07.xhtml#page_374), [379](ch07.xhtml#page_379)
  prefs: []
  type: TYPE_NORMAL
- en: arbitrary nature of, [364](ch07.xhtml#page_364)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [363](ch07.xhtml#page_363)
  prefs: []
  type: TYPE_NORMAL
- en: storing, [373](ch07.xhtml#page_373)
  prefs: []
  type: TYPE_NORMAL
- en: rules() function, [370](ch07.xhtml#page_370), [372](ch07.xhtml#page_372)–[374](ch07.xhtml#page_374)
  prefs: []
  type: TYPE_NORMAL
- en: Runge, Carl, [333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: Runge-Kutta integration, [333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: run() method
  prefs: []
  type: TYPE_NORMAL
- en: arrays of particles, [174](ch04.xhtml#page_174)
  prefs: []
  type: TYPE_NORMAL
- en: flocking, [272](ch05.xhtml#page_272)
  prefs: []
  type: TYPE_NORMAL
- en: genetic algorithms, [479](ch09.xhtml#page_479)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolutionary steering behaviors, [566](ch11.xhtml#page_566)
  prefs: []
  type: TYPE_NORMAL
- en: particle emitters, [184](ch04.xhtml#page_184)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [197](ch04.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: Runner class and objects, [300](ch06.xhtml#page_300)–[302](ch06.xhtml#page_302),
    [304](ch06.xhtml#page_304)
  prefs: []
  type: TYPE_NORMAL
- en: '**S**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Samuel, Arthur Lee, [501](ch10.xhtml#page_501)
  prefs: []
  type: TYPE_NORMAL
- en: Satoro, Ryunosuke, [359](ch07.xhtml#page_359)
  prefs: []
  type: TYPE_NORMAL
- en: save() function, [537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: scalar projection, [243](ch05.xhtml#page_243), [249](ch05.xhtml#page_249), [252](ch05.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: scalars
  prefs: []
  type: TYPE_NORMAL
- en: angular motion, [121](ch03.xhtml#page_121)
  prefs: []
  type: TYPE_NORMAL
- en: formulas, [89](ch02.xhtml#page_89)
  prefs: []
  type: TYPE_NORMAL
- en: mass, [80](ch02.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: vector multiplication, [48](ch01.xhtml#page_48)
  prefs: []
  type: TYPE_NORMAL
- en: vectors vs., [40](ch01.xhtml#page_40)
  prefs: []
  type: TYPE_NORMAL
- en: scaling, [48](ch01.xhtml#page_48)
  prefs: []
  type: TYPE_NORMAL
- en: Schmidt, Karsten, [333](ch06.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: Schoenauer, Marc, [549](ch11.xhtml#page_549)–[550](ch11.xhtml#page_550)
  prefs: []
  type: TYPE_NORMAL
- en: <script> tags, [291](ch06.xhtml#page_291)–[292](ch06.xhtml#page_292), [334](ch06.xhtml#page_334),
    [521](ch10.xhtml#page_521)
  prefs: []
  type: TYPE_NORMAL
- en: seeking behavior, [217](ch05.xhtml#page_217)–[224](ch05.xhtml#page_224), [260](ch05.xhtml#page_260)–[261](ch05.xhtml#page_261)
  prefs: []
  type: TYPE_NORMAL
- en: seek() method, [225](ch05.xhtml#page_225), [249](ch05.xhtml#page_249)–[250](ch05.xhtml#page_250)
  prefs: []
  type: TYPE_NORMAL
- en: combining with separate(), [266](ch05.xhtml#page_266)–[267](ch05.xhtml#page_267)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolutionary steering behaviors, [568](ch11.xhtml#page_568)–[569](ch11.xhtml#page_569)
  prefs: []
  type: TYPE_NORMAL
- en: reducing number of temporary objects, [283](ch05.xhtml#page_283)
  prefs: []
  type: TYPE_NORMAL
- en: seeking behavior, [219](ch05.xhtml#page_219)
  prefs: []
  type: TYPE_NORMAL
- en: selection, [442](ch09.xhtml#page_442), [444](ch09.xhtml#page_444)–[447](ch09.xhtml#page_447),
    [450](ch09.xhtml#page_450), [452](ch09.xhtml#page_452)–[457](ch09.xhtml#page_457),
    [491](ch09.xhtml#page_491)–[493](ch09.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: elitist approach, [445](ch09.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: fitness functions, [445](ch09.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: interactive, [439](ch09.xhtml#page_439), [482](ch09.xhtml#page_482)–[487](ch09.xhtml#page_487)
  prefs: []
  type: TYPE_NORMAL
- en: mating pools, [445](ch09.xhtml#page_445), [453](ch09.xhtml#page_453)–[455](ch09.xhtml#page_455)
  prefs: []
  type: TYPE_NORMAL
- en: normalizing scores, [445](ch09.xhtml#page_445)–[446](ch09.xhtml#page_446)
  prefs: []
  type: TYPE_NORMAL
- en: parent selection, [445](ch09.xhtml#page_445)–[446](ch09.xhtml#page_446), [454](ch09.xhtml#page_454)–[455](ch09.xhtml#page_455)
  prefs: []
  type: TYPE_NORMAL
- en: probabilistic approach, [445](ch09.xhtml#page_445)–[446](ch09.xhtml#page_446)
  prefs: []
  type: TYPE_NORMAL
- en: selection() method, [475](ch09.xhtml#page_475), [477](ch09.xhtml#page_477)–[478](ch09.xhtml#page_478)
  prefs: []
  type: TYPE_NORMAL
- en: Sensor class and objects, [576](ch11.xhtml#page_576)
  prefs: []
  type: TYPE_NORMAL
- en: sensors
  prefs: []
  type: TYPE_NORMAL
- en: creating, [573](ch11.xhtml#page_573)–[578](ch11.xhtml#page_578)
  prefs: []
  type: TYPE_NORMAL
- en: learning from, [578](ch11.xhtml#page_578)–[581](ch11.xhtml#page_581)
  prefs: []
  type: TYPE_NORMAL
- en: soft, [499](ch10.xhtml#page_499)
  prefs: []
  type: TYPE_NORMAL
- en: separate() method
  prefs: []
  type: TYPE_NORMAL
- en: combining with seek(), [266](ch05.xhtml#page_266)–[267](ch05.xhtml#page_267)
  prefs: []
  type: TYPE_NORMAL
- en: flocking, [271](ch05.xhtml#page_271)
  prefs: []
  type: TYPE_NORMAL
- en: separation, [260](ch05.xhtml#page_260)–[262](ch05.xhtml#page_262), [264](ch05.xhtml#page_264)
  prefs: []
  type: TYPE_NORMAL
- en: separation in flocking, [259](ch05.xhtml#page_259)–[265](ch05.xhtml#page_265),
    [268](ch05.xhtml#page_268)–[269](ch05.xhtml#page_269)
  prefs: []
  type: TYPE_NORMAL
- en: setBackend() function, [558](ch11.xhtml#page_558)–[559](ch11.xhtml#page_559)
  prefs: []
  type: TYPE_NORMAL
- en: setMag() method, [45](ch01.xhtml#page_45), [68](ch01.xhtml#page_68), [103](ch02.xhtml#page_103)
  prefs: []
  type: TYPE_NORMAL
- en: shapes
  prefs: []
  type: TYPE_NORMAL
- en: compound bodies, [312](ch06.xhtml#page_312)–[314](ch06.xhtml#page_314)
  prefs: []
  type: TYPE_NORMAL
- en: concave shapes, [310](ch06.xhtml#page_310)
  prefs: []
  type: TYPE_NORMAL
- en: convex shapes, [310](ch06.xhtml#page_310)
  prefs: []
  type: TYPE_NORMAL
- en: creature design, [585](appendix.xhtml#page_585)
  prefs: []
  type: TYPE_NORMAL
- en: of data, [533](ch10.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: Matter.js library, [309](ch06.xhtml#page_309)–[315](ch06.xhtml#page_315)
  prefs: []
  type: TYPE_NORMAL
- en: soft-body simulations, [343](ch06.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: vehicles and steering, [223](ch05.xhtml#page_223)
  prefs: []
  type: TYPE_NORMAL
- en: shift() function, [179](ch04.xhtml#page_179)
  prefs: []
  type: TYPE_NORMAL
- en: show() method, [4](ch00.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: angular motion, [123](ch03.xhtml#page_123), [128](ch03.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: fluid resistance, [96](ch02.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: force-directed graphs, [352](ch06.xhtml#page_352)–[353](ch06.xhtml#page_353)
  prefs: []
  type: TYPE_NORMAL
- en: motion with vectors, [56](ch01.xhtml#page_56)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [142](ch03.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [169](ch04.xhtml#page_169), [194](ch04.xhtml#page_194)–[195](ch04.xhtml#page_195)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [159](ch03.xhtml#page_159)
  prefs: []
  type: TYPE_NORMAL
- en: soft-body simulations, [343](ch06.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: Sierpiński, Wacław, [366](ch07.xhtml#page_366)
  prefs: []
  type: TYPE_NORMAL
- en: Sierpiński triangles, [366](ch07.xhtml#page_366)–[367](ch07.xhtml#page_367),
    [373](ch07.xhtml#page_373)
  prefs: []
  type: TYPE_NORMAL
- en: signal processing, [499](ch10.xhtml#page_499)
  prefs: []
  type: TYPE_NORMAL
- en: Silverman, Brian, [385](ch07.xhtml#page_385)
  prefs: []
  type: TYPE_NORMAL
- en: simple harmonic motion, [135](ch03.xhtml#page_135), [137](ch03.xhtml#page_137)–[140](ch03.xhtml#page_140)
  prefs: []
  type: TYPE_NORMAL
- en: Sims, Karl, [482](ch09.xhtml#page_482)–[484](ch09.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: sine
  prefs: []
  type: TYPE_NORMAL
- en: coordinate conversion, [131](ch03.xhtml#page_131), [160](ch03.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [126](ch03.xhtml#page_126)
  prefs: []
  type: TYPE_NORMAL
- en: lookup tables, [280](ch05.xhtml#page_280)–[282](ch05.xhtml#page_282)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [134](ch03.xhtml#page_134)–[137](ch03.xhtml#page_137)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [156](ch03.xhtml#page_156)–[157](ch03.xhtml#page_157), [159](ch03.xhtml#page_159)
  prefs: []
  type: TYPE_NORMAL
- en: sine waves, [117](ch03.xhtml#page_117), [134](ch03.xhtml#page_134), [139](ch03.xhtml#page_139),
    [142](ch03.xhtml#page_142)–[144](ch03.xhtml#page_144)
  prefs: []
  type: TYPE_NORMAL
- en: sin() function
  prefs: []
  type: TYPE_NORMAL
- en: coordinate conversion, [131](ch03.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: oscillation, [136](ch03.xhtml#page_136)–[139](ch03.xhtml#page_139)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [160](ch03.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: springs, [147](ch03.xhtml#page_147)
  prefs: []
  type: TYPE_NORMAL
- en: single-event probability, [10](ch00.xhtml#page_10)
  prefs: []
  type: TYPE_NORMAL
- en: slice() method, [372](ch07.xhtml#page_372), [492](ch09.xhtml#page_492)
  prefs: []
  type: TYPE_NORMAL
- en: smart rockets, [469](ch09.xhtml#page_469)–[482](ch09.xhtml#page_482), [486](ch09.xhtml#page_486)
  prefs: []
  type: TYPE_NORMAL
- en: developing, [470](ch09.xhtml#page_470)–[475](ch09.xhtml#page_475)
  prefs: []
  type: TYPE_NORMAL
- en: evolving obstacle avoidance, [478](ch09.xhtml#page_478)
  prefs: []
  type: TYPE_NORMAL
- en: fitness functions, [471](ch09.xhtml#page_471)–[472](ch09.xhtml#page_472)
  prefs: []
  type: TYPE_NORMAL
- en: genotype/phenotype distinction, [472](ch09.xhtml#page_472)
  prefs: []
  type: TYPE_NORMAL
- en: global variables, [471](ch09.xhtml#page_471)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolutionary steering behaviors, [565](ch11.xhtml#page_565)–[573](ch11.xhtml#page_573)
  prefs: []
  type: TYPE_NORMAL
- en: population management, [475](ch09.xhtml#page_475)–[478](ch09.xhtml#page_478)
  prefs: []
  type: TYPE_NORMAL
- en: '*SodaConstructor* game, [342](ch06.xhtml#page_342)'
  prefs: []
  type: TYPE_NORMAL
- en: soft-body simulations, [342](ch06.xhtml#page_342)–[350](ch06.xhtml#page_350)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [342](ch06.xhtml#page_342)
  prefs: []
  type: TYPE_NORMAL
- en: particle-spring connections, [342](ch06.xhtml#page_342)–[343](ch06.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: soft-body characters, [346](ch06.xhtml#page_346)–[350](ch06.xhtml#page_350)
  prefs: []
  type: TYPE_NORMAL
- en: soft pendulums, [343](ch06.xhtml#page_343)–[345](ch06.xhtml#page_345)
  prefs: []
  type: TYPE_NORMAL
- en: soft sensors, [499](ch10.xhtml#page_499)
  prefs: []
  type: TYPE_NORMAL
- en: sohcahtoa mnemonic device, [125](ch03.xhtml#page_125)–[126](ch03.xhtml#page_126)
  prefs: []
  type: TYPE_NORMAL
- en: sort() function, [178](ch04.xhtml#page_178)
  prefs: []
  type: TYPE_NORMAL
- en: spatial subdivisions, [115](ch02.xhtml#page_115), [275](ch05.xhtml#page_275)–[278](ch05.xhtml#page_278)
  prefs: []
  type: TYPE_NORMAL
- en: splice() method, [176](ch04.xhtml#page_176), [178](ch04.xhtml#page_178)–[179](ch04.xhtml#page_179),
    [307](ch06.xhtml#page_307)
  prefs: []
  type: TYPE_NORMAL
- en: Spring class and objects, [150](ch03.xhtml#page_150)–[153](ch03.xhtml#page_153),
    [346](ch06.xhtml#page_346)–[347](ch06.xhtml#page_347), [353](ch06.xhtml#page_353)
  prefs: []
  type: TYPE_NORMAL
- en: spring constant (*k*), [148](ch03.xhtml#page_148)
  prefs: []
  type: TYPE_NORMAL
- en: spring forces, [147](ch03.xhtml#page_147)–[154](ch03.xhtml#page_154)
  prefs: []
  type: TYPE_NORMAL
- en: current length vs. rest length, [147](ch03.xhtml#page_147)–[148](ch03.xhtml#page_148)
  prefs: []
  type: TYPE_NORMAL
- en: Hooke’s law, [147](ch03.xhtml#page_147)–[148](ch03.xhtml#page_148)
  prefs: []
  type: TYPE_NORMAL
- en: object-oriented structure, [149](ch03.xhtml#page_149)–[152](ch03.xhtml#page_152)
  prefs: []
  type: TYPE_NORMAL
- en: square() function, [305](ch06.xhtml#page_305)–[306](ch06.xhtml#page_306)
  prefs: []
  type: TYPE_NORMAL
- en: standard deviation, [13](ch00.xhtml#page_13)–[16](ch00.xhtml#page_16)
  prefs: []
  type: TYPE_NORMAL
- en: Stanley, Kenneth O., [550](ch11.xhtml#page_550)
  prefs: []
  type: TYPE_NORMAL
- en: star-nosed moles, [543](ch11.xhtml#page_543)
  prefs: []
  type: TYPE_NORMAL
- en: states, [360](ch07.xhtml#page_360)–[363](ch07.xhtml#page_363)
  prefs: []
  type: TYPE_NORMAL
- en: static methods, [64](ch01.xhtml#page_64)–[66](ch01.xhtml#page_66)
  prefs: []
  type: TYPE_NORMAL
- en: staying within walls behavior, [231](ch05.xhtml#page_231)–[233](ch05.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: steering behaviors, [215](ch05.xhtml#page_215)–[233](ch05.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: action selection, [216](ch05.xhtml#page_216)–[217](ch05.xhtml#page_217)
  prefs: []
  type: TYPE_NORMAL
- en: arrive behavior, [224](ch05.xhtml#page_224)–[229](ch05.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: fleeing, [223](ch05.xhtml#page_223), [261](ch05.xhtml#page_261)–[265](ch05.xhtml#page_265)
  prefs: []
  type: TYPE_NORMAL
- en: flocking, [268](ch05.xhtml#page_268)–[274](ch05.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: flow-field following, [233](ch05.xhtml#page_233)–[239](ch05.xhtml#page_239)
  prefs: []
  type: TYPE_NORMAL
- en: locomotion, [216](ch05.xhtml#page_216)–[217](ch05.xhtml#page_217)
  prefs: []
  type: TYPE_NORMAL
- en: maximum force, [220](ch05.xhtml#page_220)–[221](ch05.xhtml#page_221)
  prefs: []
  type: TYPE_NORMAL
- en: maximum speed, [219](ch05.xhtml#page_219), [225](ch05.xhtml#page_225)–[227](ch05.xhtml#page_227)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolution, [565](ch11.xhtml#page_565)–[573](ch11.xhtml#page_573)
  prefs: []
  type: TYPE_NORMAL
- en: path following, [240](ch05.xhtml#page_240)
  prefs: []
  type: TYPE_NORMAL
- en: seeking, [217](ch05.xhtml#page_217)–[224](ch05.xhtml#page_224), [260](ch05.xhtml#page_260)–[261](ch05.xhtml#page_261)
  prefs: []
  type: TYPE_NORMAL
- en: staying within walls, [231](ch05.xhtml#page_231)–[233](ch05.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: steering forces, [216](ch05.xhtml#page_216)–[222](ch05.xhtml#page_222), [228](ch05.xhtml#page_228)–[229](ch05.xhtml#page_229),
    [232](ch05.xhtml#page_232), [258](ch05.xhtml#page_258), [265](ch05.xhtml#page_265)–[266](ch05.xhtml#page_266),
    [268](ch05.xhtml#page_268), [284](ch05.xhtml#page_284), [510](ch10.xhtml#page_510)–[511](ch10.xhtml#page_511),
    [565](ch11.xhtml#page_565), [568](ch11.xhtml#page_568), [579](ch11.xhtml#page_579)
  prefs: []
  type: TYPE_NORMAL
- en: vehicles, [215](ch05.xhtml#page_215)–[216](ch05.xhtml#page_216)
  prefs: []
  type: TYPE_NORMAL
- en: wandering, [229](ch05.xhtml#page_229)–[231](ch05.xhtml#page_231)
  prefs: []
  type: TYPE_NORMAL
- en: step() method, [4](ch00.xhtml#page_4)–[5](ch00.xhtml#page_5)
  prefs: []
  type: TYPE_NORMAL
- en: stochastic fractals, [400](ch08.xhtml#page_400), [425](ch08.xhtml#page_425)–[427](ch08.xhtml#page_427)
  prefs: []
  type: TYPE_NORMAL
- en: strict equality (===) operator, [5](ch00.xhtml#page_5)
  prefs: []
  type: TYPE_NORMAL
- en: strict inequality (!==) operator, [5](ch00.xhtml#page_5)
  prefs: []
  type: TYPE_NORMAL
- en: strings
  prefs: []
  type: TYPE_NORMAL
- en: L-systems, [427](ch08.xhtml#page_427)–[428](ch08.xhtml#page_428)
  prefs: []
  type: TYPE_NORMAL
- en: soft-body simulations, [343](ch06.xhtml#page_343)–[346](ch06.xhtml#page_346)
  prefs: []
  type: TYPE_NORMAL
- en: Stump, Greg, [585](appendix.xhtml#page_585)
  prefs: []
  type: TYPE_NORMAL
- en: subclasses, [188](ch04.xhtml#page_188)–[192](ch04.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: sub() method, [45](ch01.xhtml#page_45), [47](ch01.xhtml#page_47), [66](ch01.xhtml#page_66)–[67](ch01.xhtml#page_67)
  prefs: []
  type: TYPE_NORMAL
- en: superclasses, [188](ch04.xhtml#page_188), [190](ch04.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: super() function, [189](ch04.xhtml#page_189)–[192](ch04.xhtml#page_192), [194](ch04.xhtml#page_194)
  prefs: []
  type: TYPE_NORMAL
- en: supervised learning, [501](ch10.xhtml#page_501), [509](ch10.xhtml#page_509),
    [521](ch10.xhtml#page_521)–[523](ch10.xhtml#page_523), [549](ch11.xhtml#page_549)
  prefs: []
  type: TYPE_NORMAL
- en: survival of the fittest/reproducers, [10](ch00.xhtml#page_10), [442](ch09.xhtml#page_442),
    [487](ch09.xhtml#page_487)
  prefs: []
  type: TYPE_NORMAL
- en: synthetic data, [512](ch10.xhtml#page_512), [527](ch10.xhtml#page_527)
  prefs: []
  type: TYPE_NORMAL
- en: '**T**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: tangent, [126](ch03.xhtml#page_126)–[128](ch03.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: tension, [154](ch03.xhtml#page_154)–[155](ch03.xhtml#page_155)
  prefs: []
  type: TYPE_NORMAL
- en: TensorFlow.js, [502](ch10.xhtml#page_502)
  prefs: []
  type: TYPE_NORMAL
- en: model evaluation, [534](ch10.xhtml#page_534)–[536](ch10.xhtml#page_536)
  prefs: []
  type: TYPE_NORMAL
- en: parameter tuning, [537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: Visor interface, [534](ch10.xhtml#page_534)–[536](ch10.xhtml#page_536)
  prefs: []
  type: TYPE_NORMAL
- en: testing datasets, [521](ch10.xhtml#page_521), [536](ch10.xhtml#page_536)–[537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: That Creative Code Page, [xxx](intro.xhtml#page_xxx)
  prefs: []
  type: TYPE_NORMAL
- en: '[thi.ng](http://thi.ng) umbrella, [333](ch06.xhtml#page_333)'
  prefs: []
  type: TYPE_NORMAL
- en: '[thi.ng](http://thi.ng) vectors, [333](ch06.xhtml#page_333)'
  prefs: []
  type: TYPE_NORMAL
- en: think() method, [555](ch11.xhtml#page_555), [557](ch11.xhtml#page_557), [579](ch11.xhtml#page_579)
  prefs: []
  type: TYPE_NORMAL
- en: this keyword, [4](ch00.xhtml#page_4), [56](ch01.xhtml#page_56)
  prefs: []
  type: TYPE_NORMAL
- en: this.x and this.y variables, [305](ch06.xhtml#page_305)
  prefs: []
  type: TYPE_NORMAL
- en: Thompson, John Henry, [xxvii](intro.xhtml#page_xxvii)
  prefs: []
  type: TYPE_NORMAL
- en: Thorp, Jer, [469](ch09.xhtml#page_469)–[470](ch09.xhtml#page_470)
  prefs: []
  type: TYPE_NORMAL
- en: time-series prediction, [499](ch10.xhtml#page_499)
  prefs: []
  type: TYPE_NORMAL
- en: torque (τ), [124](ch03.xhtml#page_124), [158](ch03.xhtml#page_158)
  prefs: []
  type: TYPE_NORMAL
- en: Toxiclibs.js library, [288](ch06.xhtml#page_288)
  prefs: []
  type: TYPE_NORMAL
- en: attraction and repulsion behaviors, [354](ch06.xhtml#page_354)–[357](ch06.xhtml#page_357)
  prefs: []
  type: TYPE_NORMAL
- en: compared to Matter.js, [334](ch06.xhtml#page_334)–[335](ch06.xhtml#page_335)
  prefs: []
  type: TYPE_NORMAL
- en: force-directed graphs, [351](ch06.xhtml#page_351)–[354](ch06.xhtml#page_354)
  prefs: []
  type: TYPE_NORMAL
- en: soft-body simulations, [342](ch06.xhtml#page_342)–[350](ch06.xhtml#page_350)
  prefs: []
  type: TYPE_NORMAL
- en: Verlet physics, [333](ch06.xhtml#page_333)–[342](ch06.xhtml#page_342)
  prefs: []
  type: TYPE_NORMAL
- en: training datasets, [516](ch10.xhtml#page_516)–[517](ch10.xhtml#page_517), [521](ch10.xhtml#page_521),
    [524](ch10.xhtml#page_524), [532](ch10.xhtml#page_532)–[533](ch10.xhtml#page_533),
    [536](ch10.xhtml#page_536)
  prefs: []
  type: TYPE_NORMAL
- en: train() method, [533](ch10.xhtml#page_533)–[534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: transfer learning, [502](ch10.xhtml#page_502)
  prefs: []
  type: TYPE_NORMAL
- en: translate() function, [48](ch01.xhtml#page_48), [306](ch06.xhtml#page_306),
    [420](ch08.xhtml#page_420)–[421](ch08.xhtml#page_421), [432](ch08.xhtml#page_432)
  prefs: []
  type: TYPE_NORMAL
- en: trapezoid() method, [309](ch06.xhtml#page_309)
  prefs: []
  type: TYPE_NORMAL
- en: tree structure, [399](ch08.xhtml#page_399), [419](ch08.xhtml#page_419)–[427](ch08.xhtml#page_427)
  prefs: []
  type: TYPE_NORMAL
- en: deterministic structure, [419](ch08.xhtml#page_419)–[425](ch08.xhtml#page_425)
  prefs: []
  type: TYPE_NORMAL
- en: stochastic structure, [425](ch08.xhtml#page_425)–[427](ch08.xhtml#page_427)
  prefs: []
  type: TYPE_NORMAL
- en: turtle graphics, [432](ch08.xhtml#page_432)
  prefs: []
  type: TYPE_NORMAL
- en: '*Turtles, Termites, and Traffic Jams* (Resnick), [215](ch05.xhtml#page_215)'
  prefs: []
  type: TYPE_NORMAL
- en: two-dimensional Perlin noise, [25](ch00.xhtml#page_25)–[30](ch00.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: TWO_PI constant, [119](ch03.xhtml#page_119), [137](ch03.xhtml#page_137), [566](ch11.xhtml#page_566)
  prefs: []
  type: TYPE_NORMAL
- en: '**U**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ulam, Stanisław, [361](ch07.xhtml#page_361)
  prefs: []
  type: TYPE_NORMAL
- en: uniform distributions, [8](ch00.xhtml#page_8)–[9](ch00.xhtml#page_9), [19](ch00.xhtml#page_19)–[20](ch00.xhtml#page_20)
  prefs: []
  type: TYPE_NORMAL
- en: units of measurement, [80](ch02.xhtml#page_80)
  prefs: []
  type: TYPE_NORMAL
- en: unit vectors, [53](ch01.xhtml#page_53), [248](ch05.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: gravitational attraction, [101](ch02.xhtml#page_101)–[102](ch02.xhtml#page_102)
  prefs: []
  type: TYPE_NORMAL
- en: vector normalization, [67](ch01.xhtml#page_67)
  prefs: []
  type: TYPE_NORMAL
- en: velocity unit vector, [89](ch02.xhtml#page_89)–[90](ch02.xhtml#page_90), [96](ch02.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: universal gravitational constant (*G*), [101](ch02.xhtml#page_101)–[103](ch02.xhtml#page_103),
    [107](ch02.xhtml#page_107)
  prefs: []
  type: TYPE_NORMAL
- en: unlock() method, [340](ch06.xhtml#page_340)
  prefs: []
  type: TYPE_NORMAL
- en: unsupervised learning, [501](ch10.xhtml#page_501)
  prefs: []
  type: TYPE_NORMAL
- en: Unwin, Antony, [525](ch10.xhtml#page_525)
  prefs: []
  type: TYPE_NORMAL
- en: update() method
  prefs: []
  type: TYPE_NORMAL
- en: acceleration, [60](ch01.xhtml#page_60), [62](ch01.xhtml#page_62)
  prefs: []
  type: TYPE_NORMAL
- en: angular motion, [123](ch03.xhtml#page_123)–[124](ch03.xhtml#page_124)
  prefs: []
  type: TYPE_NORMAL
- en: force accumulation, [78](ch02.xhtml#page_78)
  prefs: []
  type: TYPE_NORMAL
- en: motion with vectors, [56](ch01.xhtml#page_56)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolution, [550](ch11.xhtml#page_550)
  prefs: []
  type: TYPE_NORMAL
- en: neuroevolutionary steering behaviors, [570](ch11.xhtml#page_570)
  prefs: []
  type: TYPE_NORMAL
- en: Newton’s first law, [73](ch02.xhtml#page_73)
  prefs: []
  type: TYPE_NORMAL
- en: Newton’s second law, [77](ch02.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: particle systems, [169](ch04.xhtml#page_169), [187](ch04.xhtml#page_187)
  prefs: []
  type: TYPE_NORMAL
- en: pendulums, [159](ch03.xhtml#page_159)
  prefs: []
  type: TYPE_NORMAL
- en: physics engines, [304](ch06.xhtml#page_304)
  prefs: []
  type: TYPE_NORMAL
- en: Verlet physics, [336](ch06.xhtml#page_336)
  prefs: []
  type: TYPE_NORMAL
- en: '**V**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: validation datasets, [536](ch10.xhtml#page_536)–[537](ch10.xhtml#page_537)
  prefs: []
  type: TYPE_NORMAL
- en: variation, [442](ch09.xhtml#page_442)–[443](ch09.xhtml#page_443), [445](ch09.xhtml#page_445)–[447](ch09.xhtml#page_447),
    [449](ch09.xhtml#page_449), [557](ch11.xhtml#page_557)–[559](ch11.xhtml#page_559)
  prefs: []
  type: TYPE_NORMAL
- en: Vec2D class and objects, [335](ch06.xhtml#page_335)–[336](ch06.xhtml#page_336),
    [338](ch06.xhtml#page_338)
  prefs: []
  type: TYPE_NORMAL
- en: Vec3D class and objects, [335](ch06.xhtml#page_335)
  prefs: []
  type: TYPE_NORMAL
- en: Vector class and objects, [39](ch01.xhtml#page_39), [42](ch01.xhtml#page_42),
    [325](ch06.xhtml#page_325), [335](ch06.xhtml#page_335)
  prefs: []
  type: TYPE_NORMAL
- en: vectors, [xxxi](intro.xhtml#page_xxxi), [33](ch01.xhtml#page_33)–[69](ch01.xhtml#page_69)
  prefs: []
  type: TYPE_NORMAL
- en: acceleration, [59](ch01.xhtml#page_59)–[69](ch01.xhtml#page_69)
  prefs: []
  type: TYPE_NORMAL
- en: bouncing ball sketch, [34](ch01.xhtml#page_34)–[36](ch01.xhtml#page_36), [43](ch01.xhtml#page_43)
  prefs: []
  type: TYPE_NORMAL
- en: components of, [41](ch01.xhtml#page_41)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [294](ch06.xhtml#page_294)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [34](ch01.xhtml#page_34), [37](ch01.xhtml#page_37)
  prefs: []
  type: TYPE_NORMAL
- en: drawing, [34](ch01.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: formulas, [89](ch02.xhtml#page_89)
  prefs: []
  type: TYPE_NORMAL
- en: magnitude, [102](ch02.xhtml#page_102)–[103](ch02.xhtml#page_103)
  prefs: []
  type: TYPE_NORMAL
- en: motion, [55](ch01.xhtml#page_55)–[59](ch01.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: normalizing, [102](ch02.xhtml#page_102)–[103](ch02.xhtml#page_103)
  prefs: []
  type: TYPE_NORMAL
- en: operations with, [40](ch01.xhtml#page_40)–[55](ch01.xhtml#page_55), [295](ch06.xhtml#page_295)
  prefs: []
  type: TYPE_NORMAL
- en: p5.js and, [37](ch01.xhtml#page_37)–[40](ch01.xhtml#page_40)
  prefs: []
  type: TYPE_NORMAL
- en: position, [38](ch01.xhtml#page_38)–[39](ch01.xhtml#page_39), [44](ch01.xhtml#page_44)
  prefs: []
  type: TYPE_NORMAL
- en: properties and variables, [36](ch01.xhtml#page_36)
  prefs: []
  type: TYPE_NORMAL
- en: scalars vs., [40](ch01.xhtml#page_40)
  prefs: []
  type: TYPE_NORMAL
- en: scaling, [48](ch01.xhtml#page_48), [102](ch02.xhtml#page_102), [295](ch06.xhtml#page_295)
  prefs: []
  type: TYPE_NORMAL
- en: vector-based algorithm for motion, [38](ch01.xhtml#page_38), [40](ch01.xhtml#page_40),
    [42](ch01.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: velocity, [38](ch01.xhtml#page_38)–[39](ch01.xhtml#page_39), [44](ch01.xhtml#page_44)
  prefs: []
  type: TYPE_NORMAL
- en: Vehicle class and objects, [215](ch05.xhtml#page_215)–[216](ch05.xhtml#page_216),
    [218](ch05.xhtml#page_218)–[223](ch05.xhtml#page_223), [239](ch05.xhtml#page_239),
    [250](ch05.xhtml#page_250)–[252](ch05.xhtml#page_252), [259](ch05.xhtml#page_259)–[262](ch05.xhtml#page_262),
    [266](ch05.xhtml#page_266), [468](ch09.xhtml#page_468)
  prefs: []
  type: TYPE_NORMAL
- en: '*Vehicles* (Braitenberg), [216](ch05.xhtml#page_216)'
  prefs: []
  type: TYPE_NORMAL
- en: VerletConstrainedSpring2D class and objects, [339](ch06.xhtml#page_339)
  prefs: []
  type: TYPE_NORMAL
- en: Verlet integration and physics, [333](ch06.xhtml#page_333)–[342](ch06.xhtml#page_342)
  prefs: []
  type: TYPE_NORMAL
- en: VerletMinDistanceSpring2D class and objects, [339](ch06.xhtml#page_339)
  prefs: []
  type: TYPE_NORMAL
- en: VerletParticle2D class and objects, [337](ch06.xhtml#page_337)–[339](ch06.xhtml#page_339),
    [355](ch06.xhtml#page_355)
  prefs: []
  type: TYPE_NORMAL
- en: VerletSpring2D class and objects, [339](ch06.xhtml#page_339), [347](ch06.xhtml#page_347),
    [353](ch06.xhtml#page_353)
  prefs: []
  type: TYPE_NORMAL
- en: vertex() function, [311](ch06.xhtml#page_311), [344](ch06.xhtml#page_344)
  prefs: []
  type: TYPE_NORMAL
- en: viscous force, [94](ch02.xhtml#page_94). *See also* fluid resistance
  prefs: []
  type: TYPE_NORMAL
- en: Visor interface, [534](ch10.xhtml#page_534)–[536](ch10.xhtml#page_536)
  prefs: []
  type: TYPE_NORMAL
- en: von Neumann, John, [361](ch07.xhtml#page_361)
  prefs: []
  type: TYPE_NORMAL
- en: '**W**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: wagon wheel effect, [124](ch03.xhtml#page_124)
  prefs: []
  type: TYPE_NORMAL
- en: Walker class and objects, [3](ch00.xhtml#page_3)–[9](ch00.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: custom distributions, [16](ch00.xhtml#page_16)–[17](ch00.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: data for, [3](ch00.xhtml#page_3)–[4](ch00.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: four possible steps, [4](ch00.xhtml#page_4)–[6](ch00.xhtml#page_6)
  prefs: []
  type: TYPE_NORMAL
- en: nine possible steps, [7](ch00.xhtml#page_7)
  prefs: []
  type: TYPE_NORMAL
- en: nonuniform distributions, [12](ch00.xhtml#page_12)–[13](ch00.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: Perlin noise, [23](ch00.xhtml#page_23)–[24](ch00.xhtml#page_24), [28](ch00.xhtml#page_28)
  prefs: []
  type: TYPE_NORMAL
- en: wavelength, [143](ch03.xhtml#page_143)–[144](ch03.xhtml#page_144)
  prefs: []
  type: TYPE_NORMAL
- en: waves, [142](ch03.xhtml#page_142)–[146](ch03.xhtml#page_146)
  prefs: []
  type: TYPE_NORMAL
- en: motion, [144](ch03.xhtml#page_144)–[146](ch03.xhtml#page_146)
  prefs: []
  type: TYPE_NORMAL
- en: sine waves, [117](ch03.xhtml#page_117), [134](ch03.xhtml#page_134), [139](ch03.xhtml#page_139),
    [142](ch03.xhtml#page_142)–[144](ch03.xhtml#page_144)
  prefs: []
  type: TYPE_NORMAL
- en: static, [143](ch03.xhtml#page_143)–[144](ch03.xhtml#page_144)
  prefs: []
  type: TYPE_NORMAL
- en: wavelength, [143](ch03.xhtml#page_143)–[144](ch03.xhtml#page_144)
  prefs: []
  type: TYPE_NORMAL
- en: WEBGL mode, [210](ch04.xhtml#page_210)
  prefs: []
  type: TYPE_NORMAL
- en: WebGL (Web Graphics Library) renderer, [210](ch04.xhtml#page_210), [274](ch05.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: weight, mass vs., [76](ch02.xhtml#page_76)
  prefs: []
  type: TYPE_NORMAL
- en: weightedSelection() function, [462](ch09.xhtml#page_462), [475](ch09.xhtml#page_475),
    [561](ch11.xhtml#page_561)
  prefs: []
  type: TYPE_NORMAL
- en: while loops, [405](ch08.xhtml#page_405)–[406](ch08.xhtml#page_406), [455](ch09.xhtml#page_455)
  prefs: []
  type: TYPE_NORMAL
- en: whileTraining() callback function, [534](ch10.xhtml#page_534)
  prefs: []
  type: TYPE_NORMAL
- en: Windmill class and objects, [320](ch06.xhtml#page_320)–[321](ch06.xhtml#page_321)
  prefs: []
  type: TYPE_NORMAL
- en: Wolfram, Stephen, [361](ch07.xhtml#page_361), [362](ch07.xhtml#page_362)–[363](ch07.xhtml#page_363),
    [367](ch07.xhtml#page_367)–[368](ch07.xhtml#page_368), [379](ch07.xhtml#page_379)
  prefs: []
  type: TYPE_NORMAL
- en: Wolfram Physics Project, [361](ch07.xhtml#page_361)
  prefs: []
  type: TYPE_NORMAL
- en: World class and objects, [488](ch09.xhtml#page_488)–[489](ch09.xhtml#page_489),
    [492](ch09.xhtml#page_492)–[493](ch09.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: '**X**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: XOR (exclusive or), [518](ch10.xhtml#page_518)–[520](ch10.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
