- en: Appendix D. Glossary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many of the terms you encounter in learning to code are everyday words that
    you already understand. Some terms, though, are brand new or have special meaning
    to computer programmers. This glossary defines several of the newer terms you’ll
    come across in the book, as well as familiar words that take on new meanings in
    the world of coding.
  prefs: []
  type: TYPE_NORMAL
- en: algorithm
  prefs: []
  type: TYPE_NORMAL
- en: A set of steps for performing a task, like a recipe.
  prefs: []
  type: TYPE_NORMAL
- en: animation
  prefs: []
  type: TYPE_NORMAL
- en: The illusion of motion created when similar images are displayed quickly one
    after the other, as in a cartoon.
  prefs: []
  type: TYPE_NORMAL
- en: app
  prefs: []
  type: TYPE_NORMAL
- en: Short for *application*, a computer program that does something useful (or fun!).
  prefs: []
  type: TYPE_NORMAL
- en: append
  prefs: []
  type: TYPE_NORMAL
- en: To add something to the end; for example, adding letters onto the end of a string
    or adding elements to the end of a list or array.
  prefs: []
  type: TYPE_NORMAL
- en: argument
  prefs: []
  type: TYPE_NORMAL
- en: A value passed to a function; in the statement `range(10)`, `10` is an argument.
  prefs: []
  type: TYPE_NORMAL
- en: array
  prefs: []
  type: TYPE_NORMAL
- en: An ordered list of values or objects, usually of the same type, accessed by
    their *index*, or position in the list.
  prefs: []
  type: TYPE_NORMAL
- en: assignment
  prefs: []
  type: TYPE_NORMAL
- en: Setting the value of a variable, as in `x = 5`, which assigns the value `5`
    to the variable `x`.
  prefs: []
  type: TYPE_NORMAL
- en: block
  prefs: []
  type: TYPE_NORMAL
- en: A group of programming statements.
  prefs: []
  type: TYPE_NORMAL
- en: Boolean
  prefs: []
  type: TYPE_NORMAL
- en: A value or expression that can be either true or false.
  prefs: []
  type: TYPE_NORMAL
- en: class
  prefs: []
  type: TYPE_NORMAL
- en: A template defining the functions and values to be contained in any objects
    of that type.
  prefs: []
  type: TYPE_NORMAL
- en: code
  prefs: []
  type: TYPE_NORMAL
- en: Statements or instructions written by a programmer in a language that computers
    can understand.
  prefs: []
  type: TYPE_NORMAL
- en: collision detection
  prefs: []
  type: TYPE_NORMAL
- en: Checking to see if two virtual objects are touching, or *colliding*, on the
    screen, like the ball and paddle in Pong.
  prefs: []
  type: TYPE_NORMAL
- en: concatenate
  prefs: []
  type: TYPE_NORMAL
- en: To combine two strings of text into a single string.
  prefs: []
  type: TYPE_NORMAL
- en: conditional expression
  prefs: []
  type: TYPE_NORMAL
- en: A statement that allows the computer to test a value and perform different actions
    depending on the outcome of that test.
  prefs: []
  type: TYPE_NORMAL
- en: constant
  prefs: []
  type: TYPE_NORMAL
- en: A named value in a computer program that stays the same, like `math.pi` (3.1415...).
  prefs: []
  type: TYPE_NORMAL
- en: declaration
  prefs: []
  type: TYPE_NORMAL
- en: A statement or group of statements that tell a computer what a variable or function
    name means.
  prefs: []
  type: TYPE_NORMAL
- en: element
  prefs: []
  type: TYPE_NORMAL
- en: A single item in a list or array.
  prefs: []
  type: TYPE_NORMAL
- en: event
  prefs: []
  type: TYPE_NORMAL
- en: An activity that a computer can detect, like a mouse click, value change, keypress,
    timer tick, and so on. Statements or functions that respond to events are called
    *event handlers* or *event listeners*.
  prefs: []
  type: TYPE_NORMAL
- en: expression
  prefs: []
  type: TYPE_NORMAL
- en: Any valid set of values, variables, operators, and functions that produces a
    value or result.
  prefs: []
  type: TYPE_NORMAL
- en: file
  prefs: []
  type: TYPE_NORMAL
- en: A collection of data or information stored by a computer on some kind of storage
    device, like a hard disk, DVD, or USB drive.
  prefs: []
  type: TYPE_NORMAL
- en: '`for` loop'
  prefs: []
  type: TYPE_NORMAL
- en: A programming statement that allows a block of code to be repeated for a given
    range of values.
  prefs: []
  type: TYPE_NORMAL
- en: frame
  prefs: []
  type: TYPE_NORMAL
- en: A single image in a moving sequence for animation, video, or computer graphics.
  prefs: []
  type: TYPE_NORMAL
- en: frames per second (fps)
  prefs: []
  type: TYPE_NORMAL
- en: The rate or speed that images are drawn on the screen in an animation, video
    game, or movie.
  prefs: []
  type: TYPE_NORMAL
- en: function
  prefs: []
  type: TYPE_NORMAL
- en: A named, reusable set of programming statements to perform a specific task.
  prefs: []
  type: TYPE_NORMAL
- en: import
  prefs: []
  type: TYPE_NORMAL
- en: To bring reusable code or data into a program from another program or module.
  prefs: []
  type: TYPE_NORMAL
- en: index
  prefs: []
  type: TYPE_NORMAL
- en: An element’s position in a list or array.
  prefs: []
  type: TYPE_NORMAL
- en: initialize
  prefs: []
  type: TYPE_NORMAL
- en: To give a variable or object its first, or *initial*, value.
  prefs: []
  type: TYPE_NORMAL
- en: input
  prefs: []
  type: TYPE_NORMAL
- en: Any data or information entered into a computer; input can come from a keyboard,
    mouse, microphone, digital camera, or any other input device.
  prefs: []
  type: TYPE_NORMAL
- en: iterative versioning
  prefs: []
  type: TYPE_NORMAL
- en: Repeatedly making small changes or improvements to a program and saving it as
    a new version, like *Game1*, *Game2*, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: keyword
  prefs: []
  type: TYPE_NORMAL
- en: A special, reserved word that means something in a particular programming language.
  prefs: []
  type: TYPE_NORMAL
- en: list
  prefs: []
  type: TYPE_NORMAL
- en: A container for an ordered group of values or objects.
  prefs: []
  type: TYPE_NORMAL
- en: loop
  prefs: []
  type: TYPE_NORMAL
- en: A set of instructions that is repeated until a condition is reached.
  prefs: []
  type: TYPE_NORMAL
- en: module
  prefs: []
  type: TYPE_NORMAL
- en: A file or set of files with related variables, functions, and classes that can
    be reused in other programs.
  prefs: []
  type: TYPE_NORMAL
- en: nested loop
  prefs: []
  type: TYPE_NORMAL
- en: A loop inside another loop.
  prefs: []
  type: TYPE_NORMAL
- en: object
  prefs: []
  type: TYPE_NORMAL
- en: A variable containing information about a single instance of a class, such as
    a single sprite from the `Sprite` class.
  prefs: []
  type: TYPE_NORMAL
- en: operator
  prefs: []
  type: TYPE_NORMAL
- en: A symbol or set of symbols that represents an action or comparison and returns
    a result, such as `+`, `-`, `*`, `//`, `<`, `>`, `==`, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: parameter
  prefs: []
  type: TYPE_NORMAL
- en: An input variable to a function, specified in the function’s definition.
  prefs: []
  type: TYPE_NORMAL
- en: pixel
  prefs: []
  type: TYPE_NORMAL
- en: Short for *picture element*, the small dots of color that make up images on
    a computer screen.
  prefs: []
  type: TYPE_NORMAL
- en: program
  prefs: []
  type: TYPE_NORMAL
- en: A set of instructions written in a language computers can understand.
  prefs: []
  type: TYPE_NORMAL
- en: pseudorandom
  prefs: []
  type: TYPE_NORMAL
- en: A value in a sequence that seems to be random or unpredictable, and is random
    enough to simulate rolling dice or flipping coins.
  prefs: []
  type: TYPE_NORMAL
- en: random numbers
  prefs: []
  type: TYPE_NORMAL
- en: An unpredictable sequence of numbers evenly distributed over a certain range.
  prefs: []
  type: TYPE_NORMAL
- en: range
  prefs: []
  type: TYPE_NORMAL
- en: An ordered set of values between a known start and end value; in Python, the
    `range` function returns a sequence of values, such as `0` through `10`.
  prefs: []
  type: TYPE_NORMAL
- en: RGB color
  prefs: []
  type: TYPE_NORMAL
- en: Short for *red-green-blue color*, a way of representing colors by the amount
    of red, green, and blue light that can be mixed to re-create each color.
  prefs: []
  type: TYPE_NORMAL
- en: shell
  prefs: []
  type: TYPE_NORMAL
- en: A text-based command line program that reads commands from the user and runs
    them; IDLE is Python’s shell.
  prefs: []
  type: TYPE_NORMAL
- en: sort
  prefs: []
  type: TYPE_NORMAL
- en: To put elements of a list or array in a certain order, such as alphabetical
    order.
  prefs: []
  type: TYPE_NORMAL
- en: string
  prefs: []
  type: TYPE_NORMAL
- en: A sequence of characters, which can include letters, numbers, symbols, punctuation,
    and spacing.
  prefs: []
  type: TYPE_NORMAL
- en: syntax
  prefs: []
  type: TYPE_NORMAL
- en: The spelling and grammar rules of a programming language.
  prefs: []
  type: TYPE_NORMAL
- en: transparency
  prefs: []
  type: TYPE_NORMAL
- en: In graphics, the ability to see through portions of an image.
  prefs: []
  type: TYPE_NORMAL
- en: variable
  prefs: []
  type: TYPE_NORMAL
- en: In a computer program, a named value that can change.
  prefs: []
  type: TYPE_NORMAL
- en: '`while` loop'
  prefs: []
  type: TYPE_NORMAL
- en: A programming statement that allows a block of code to be repeated as long as
    a condition is true.
  prefs: []
  type: TYPE_NORMAL
