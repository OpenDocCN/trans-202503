["```\n<?php\nclass Product\n{\n    public string $name;\n    public float $price;\n}\n```", "```\n<?php\nrequire_once __DIR__ . '/../src/Product.php';\n\n$product1 = new Product();\n$product1->name = 'hammer';\n\nprint 'product 1 name = ' . $product1->name;\n```", "```\nproduct 1 name = hammer\n```", "```\n<?php\nrequire_once __DIR__ . '/../src/Product.php';\n\n$product1 = new Product();\n$product1->name = 'hammer';\n\nprint 'product 1 name = ' . $product1->name;\n\n$product1->price = 9.99;\nprint \", and price = {$product1->price}\";\n```", "```\nproduct 1 name = hammer, and price = 9.99\n```", "```\n<?php\nclass Product\n{\n    private string $name;\n    private float $price;\n\n ❶ public function getName(): string\n    {\n        return $this->name;\n    }\n\n  ❷ public function setName(string $name): void\n    {\n      ❸ $this->name = $name;\n    }\n\n    public function getPrice(): float\n    {\n        return $this->price;\n    }\n\n    public function setPrice(float $price): void\n    {\n        $this->price = $price;\n    }\n}\n```", "```\n<?php\nrequire_once __DIR__ . '/../src/Product.php';\n\n$product1 = new Product();\n$product1->setName('hammer');\n$product1->setPrice(9.99);\nprint 'product 1 name = ' . $product1->getName();\nprint \", and price = {$product1->getPrice()}\";\n```", "```\n--snip--\npublic function setPrice(float $price): void\n{\n    if ($price >= 0) {\n $this->price = $price;\n}\n}\n```", "```\n<?php\nrequire_once __DIR__ . '/../src/Product.php';\n\n$product1 = new Product();\n$product1->setPrice(9.99);\n\nprint \"(initial value) product 1 price = {$product1->getPrice()}\\n\";\n\n$product1->setPrice(-0.5);\nprint '<br>(test 1) trying -0.5: ';\nprint \"product 1 price = {$product1->getPrice()}\\n\";\n\n$product1->setPrice(22);\nprint '<br>(test 2) trying 22: ';\nprint \"product 1 price = {$product1->getPrice()}\\n\";\n```", "```\n(initial value) product 1 price = 9.99\n(test 1) trying -0.5: product 1 price = 9.99\n(test 2) trying 22: product 1 price = 22\n```", "```\n$product1 = new Product();\n$product1->setName('hammer');\n$product1->setPrice(9.99);\n```", "```\n$product1 = new Product('hammer', 9.99);\n```", "```\n<?php\nclass Product\n{\n private string $name;\n private float $price;\n\n  public function __construct(string $name, float $price)\n    {\n        $this->setName($name);\n        $this->setPrice($price);\n    }\n\n public function getName()\n--snip--\n```", "```\n<?php\nrequire_once __DIR__ . '/../src/Product.php';\n\n$product1 = new Product('hammer', 9.99);\nprint 'product 1 name = ' . $product1->getName();\nprint \", and price = {$product1->getPrice()}\";\n```", "```\n<?php\nrequire_once __DIR__ . '/../src/Product.php';\n\n$product1 = new Product('hammer', 9.99);\nprint $product1;\n```", "```\n<?php\nclass Product\n{\n private string $name;\n private float $price;\n\n public function __construct(string $name, float $price)\n {\n $this->setName($name);\n $this->setPrice($price);\n }\n\n    public function __toString(): string\n    {\n      ❶ return '(Product) name = ' . $this->name\n            . ', and price = ' . $this->price;\n    }\n public function getName(): void\n--snip--\n```", "```\n<?php\nrequire_once __DIR__ . '/../src/Product.php';\n\n$product1 = new Product('hammer', 5.00);\nprint $product1;\nprint '<br>';\n\n❶ $variable2 = $product1;\nprint 'changing price via $variable2';\nprint '<br>';\n$variable2->setPrice(20.00);\nprint $product1;\n```", "```\n(Product) name = hammer, and price = 9.99\nChanging price via $variable2\n(Product) name = hammer, and price = 20\n```", "```\n<?php\n--snip--\n\npublic function blogFromId (int $id): ?Blog\n{\n  ❶ if (is_numeric($id) && $id > 0) {\n        return $this->blogRepository->find($id);\n    }\n\n    return NULL;\n}\n\n--snip--\n```", "```\n<?php\nclass Product\n{\n private string $name;\n private float $price;\n❶private float $taxRate;\n\n public function __construct(string $name, float $price)\n {\n $this->setName($name);\n $this->setPrice($price);\n }\n\n public function __toString(): string\n {\n return '(Product) name = ' . $this->name\n . ', and price = ' . $this->price\n            . ', and price with Tax = ' . $this->getPriceIncludingTax();\n    }\n\n  ❷ public function getTaxRate(): float\n    {\n        return $this->taxRate;\n    }\n\n    public function setTaxRate(float $taxRate): void\n    {\n $this->taxRate = $taxRate;\n    }\n\n  ❸ public function getPriceIncludingTax(): float\n    {\n        return (1 + $this->taxRate) * $this->price;\n    }\n\n public function getName()\n--snip--\n```", "```\n$pet1 = new Pet('Mr. Fluffy');\n```"]