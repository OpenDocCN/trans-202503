- en: '**9'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**9**'
- en: FORENSIC ANALYSIS OF TIME AND LOCATION**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间与位置的取证分析**'
- en: '![Image](Images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/common01.jpg)'
- en: This chapter explains digital forensic concepts related to Linux time, regional
    settings, and location. Forensic timelines are explored, including how to build
    a forensic timeline from a Linux system. It also describes international configuration
    such as locale, keyboards, and languages. The final section covers geolocation
    technologies and reconstructing a Linux system’s geographic location history.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章解释了与 Linux 时间、区域设置和位置相关的数字取证概念。探讨了取证时间线，包括如何从 Linux 系统构建取证时间线。还描述了国际配置，如区域设置、键盘和语言。最后一节涵盖了地理定位技术以及如何重建
    Linux 系统的地理位置历史。
- en: '**Linux Time Configuration Analysis**'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Linux 时间配置分析**'
- en: A large part of digital forensics is reconstructing past events. This *digital
    archaeology* depends on understanding concepts of time as applied to Linux environments.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 数字取证的一个重要部分是重建过去的事件。这个*数字考古学*依赖于理解时间的概念，特别是在 Linux 环境中的应用。
- en: '***Time Formats***'
  id: totrans-6
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***时间格式***'
- en: The standard representation of time in Linux is taken from Unix. The original
    Unix developers needed a compact way to represent the current time and date. They
    chose January 1, 1970, 00:00:00 UTC as the beginning of time (coinciding with
    the naming of Unix which took place in early 1970), and the number of seconds
    elapsed from that point represented a particular time and date. This date is also
    called the *Unix epoch*, and this format allowed for time and date to be stored
    as a 32-bit number.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 中时间的标准表示方式源自 Unix。最初的 Unix 开发者需要一种紧凑的方式来表示当前的时间和日期。他们选择了 1970 年 1 月 1
    日 00:00:00 UTC 作为时间的起点（恰好与 Unix 的命名时间相符），从这个时刻起的秒数表示特定的时间和日期。这个日期也被称为*Unix 纪元*，这种格式使得时间和日期能够以
    32 位数值存储。
- en: 'We refer to a specified point in time as a *timestamp*. The following example
    shows the time in seconds using the Linux `date` command:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将指定的时间点称为*时间戳*。以下示例显示了使用 Linux `date` 命令的秒级时间：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This timestamp is given in text format, but it could also be stored in binary
    format in big- or little-endian form. This same string in hexadecimal is a four-byte
    string: 0x5fe4d502.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这个时间戳是以文本格式给出的，但也可以以大端或小端格式存储为二进制格式。这个相同的字符串用十六进制表示是一个四字节字符串：0x5fe4d502。
- en: One problem with 32-bit epoch-based time is the maximum number of seconds until
    the clock restarts to zero. This rollover will happen on January 18, 2038, creating
    a similar situation to Y2K (the rollover to January 1, 2000). Linux kernel developers
    are aware of this and have already implemented support for 64-bit timestamps.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 32 位纪元时间表示的一个问题是，在时钟重置为零之前的最大秒数。这个重置将发生在 2038 年 1 月 18 日，类似于 Y2K（2000 年 1
    月 1 日的重置）事件。Linux 内核开发者已经意识到这个问题，并已实现对 64 位时间戳的支持。
- en: 'Another problem with the original Unix time representation was its accuracy,
    which was limited to a precision of one second. This limit was enough for the
    slower speeds of early computers, but modern systems need higher resolution. Common
    terms representing the fractions of a second are:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 原始 Unix 时间表示的另一个问题是其精度，仅限于一秒。这种限制对于早期计算机的较慢速度来说足够了，但现代系统需要更高的精度。常见的表示秒的分数单位有：
- en: '**Millisecond** One thousandth of a second (0.0001)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**毫秒** 一千分之一秒（0.001）'
- en: '**Microsecond** One millionth of a second (0.000001)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**微秒** 一百万分之一秒（0.000001）'
- en: '**Nanosecond** One billionth of a second (0.000000001)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**纳秒** 十亿分之一秒（0.000000001）'
- en: 'The following example shows the number of seconds since the epoch with nanosecond
    resolution:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例显示了从纪元以来的秒数，并具有纳秒级精度：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To retain backward compatibility, some filesystems have added an additional
    byte to the timestamp. The individual bits in this byte are split between solving
    the 2038 issue and providing increased resolution.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持向后兼容性，一些文件系统在时间戳中添加了一个额外的字节。这个字节中的各个位被分配给解决 2038 问题和提供更高精度的功能。
- en: '**NOTE**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*As you get better at performing forensic analysis work, train yourself to
    notice numeric strings that are likely to be timestamps. For example, if you see
    a 10-digit number beginning with 16 (16*XXXXXXXX*), it could be a timestamp (September
    2020 to November 2023).*'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*当你在进行取证分析工作时，训练自己注意那些可能是时间戳的数字字符串。例如，如果你看到一个以 16 开头的 10 位数字（16*XXXXXXXX*），它可能是一个时间戳（2020
    年 9 月到 2023 年 11 月）。*'
- en: The format used to display time in human-readable form is customizable. The
    format could be long, short, numeric, or a combination of the three. Regional
    variations also may cause confusion. For example, 1/2/2020 could be February 1
    or January 2, depending on the region. Even the delimiters are different depending
    on region or style (“.” or “/” or “-”).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 显示人类可读时间的格式是可定制的。该格式可以是长格式、短格式、数字格式，或这三者的组合。地区差异也可能导致混淆。例如，1/2/2020 可能是2月1日或1月2日，具体取决于地区。即使分隔符也因地区或风格而异（“.”
    或 “/” 或 “-”）。
- en: 'In 1988, ISO created a global standard format for writing numeric dates that
    defined the year, followed by month, followed by day: 2020-01-02\. I recommend
    using this format if your forensic tool supports it (and it probably does). The
    XKCD comic in [Figure 9-1](ch09.xhtml#ch09fig01) may help you remember.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 1988年，ISO制定了一个全球标准的日期格式，定义了年份、月份和日期的顺序：2020-01-02。如果你的取证工具支持这一格式（它可能支持），我建议使用这种格式。[图9-1](ch09.xhtml#ch09fig01)中的XKCD漫画可能帮助你记住这一点。
- en: '![Image](Images/ch09fig01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/ch09fig01.jpg)'
- en: '*Figure 9-1: XKCD Time Format (* [https://xkcd.com/1179/](https://xkcd.com/1179/)*)*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9-1: XKCD 时间格式 (* [https://xkcd.com/1179/](https://xkcd.com/1179/)*)*'
- en: 'Two standards are useful for understanding time formats: ISO 8601 (*[https://www.iso.org/iso-8601-date-and-time-format.html](https://www.iso.org/iso-8601-date-and-time-format.html)*)
    and RFC 3339 (*[https://datatracker.ietf.org/doc/html/rfc3339/](https://datatracker.ietf.org/doc/html/rfc3339/)*).
    When performing digital forensics, especially logfile analysis, make sure that
    you understand the time format used.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个标准对于理解时间格式很有用：ISO 8601 (*[https://www.iso.org/iso-8601-date-and-time-format.html](https://www.iso.org/iso-8601-date-and-time-format.html)*)
    和 RFC 3339 (*[https://datatracker.ietf.org/doc/html/rfc3339/](https://datatracker.ietf.org/doc/html/rfc3339/)*)。在进行数字取证时，尤其是日志文件分析时，请确保你理解所使用的时间格式。
- en: '***Time Zones***'
  id: totrans-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***时区***'
- en: The planet is divided into 24 major time zones, one hour apart.^([1](footnotes.xhtml#ch09foot_01))
    The time zone indicates a geographical region and the time offset from Coordinated
    Universal Time (UTC). A time zone can be applied to a system or a user, and these
    zones are not necessarily the same if a user is logging in remotely.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 地球被划分为24个主要时区，相差一小时。^([1](footnotes.xhtml#ch09foot_01)) 时区表示一个地理区域及其与协调世界时（UTC）的时间偏差。时区可以应用于系统或用户，如果用户远程登录，这些时区不一定相同。
- en: 'When a system is first installed, the system owner specifies a time zone. This
    setting is a symbolic link (symlink) of */etc/localtime*, which points to a *tzdata*
    file located in */usr/share/zoneinfo/*. Determining the system’s configured time
    zone is simply a matter of identifying where this file is linked. In the following
    example, a system is configured for the region Europe and the city of Zurich:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统首次安装时，系统所有者会指定一个时区。此设置是 */etc/localtime* 的符号链接（symlink），指向位于 */usr/share/zoneinfo/*
    的 *tzdata* 文件。确定系统配置的时区，只需识别该文件的链接位置。在以下示例中，系统配置为欧洲地区和苏黎世市：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This configuration provides an indicator of the machine’s physical location
    (or at least the region). A discrepancy between a system time zone and a user’s
    time zone at login is interesting, as it indicates the potential location of the
    system owner (using a remotely installed/managed system).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此配置提供了机器物理位置的指示（或者至少是地区）。系统时区与用户登录时的时区之间的差异是值得注意的，因为它表明系统所有者的潜在位置（使用远程安装/管理的系统）。
- en: 'The configured time zone is usually static for systems with a fixed location
    like desktop PCs and servers. Laptops that change time zone regularly indicate
    a traveling user. A changed time zone (manually or automatically) can be observed
    in the journal:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于像桌面PC和服务器这样的固定位置系统，配置的时区通常是静态的。经常更改时区的笔记本电脑表明用户可能正在旅行。时区的变化（无论是手动还是自动）可以在日志中看到：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: These logs show examples of changing the time zone using the GNOME Date & Time
    GUI. The `systemd-timedated` daemon is asked to change the time zone and update
    the symlink for */etc/localtime*. If set to change automatically, the system will
    query GeoClue for the location. GeoClue is the Linux geolocation service (described
    later in this chapter).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这些日志展示了使用GNOME日期和时间图形界面更改时区的示例。请求 `systemd-timedated` 守护进程更改时区并更新 */etc/localtime*
    的符号链接。如果设置为自动更改，系统将查询GeoClue以获取位置。GeoClue是Linux的地理位置服务（稍后在本章中将描述）。
- en: Individual users may also specify a login time zone that is different from the
    system’s time zone—for example, on servers where multiple users from around the
    world are logging in remotely via secure shell (SSH). To identify an individual
    user’s time zone, look for the assignment of the `TZ` environment variable. The
    `TZ` variable may be found in the shell startup files (*.bash_login*, *.profile*,
    and others) or set as a variable passed by the SSH program. To determine whether
    SSH is passing the `TZ` variable, check whether the SSH server config (*sshd_config*)
    is explicitly allowing `TZ` with the `AcceptEnv` parameter, or if the client config
    (*ssh_config* or *./ssh/config*) is explicitly passing `TZ` with the `SendEnv`
    parameter.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'The TZ variable is a POSIX standard and implemented in Linux by the GNU C Library.
    The TZ variable has three formats, which are described here with examples:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '**Time zone and offset** CET+1'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '**Time zone and offset with daylight savings** EST+5EDT'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '**A time zone filename** Europe/London'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: You can find a more detailed description of the TZ variable at *[https://www.gnu.org/software/libc/manual/html_node/TZ-Variable.html](https://www.gnu.org/software/libc/manual/html_node/TZ-Variable.html)*.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: On Fedora and SUSE systems, some packages and scripts may read the */etc/sysconfig/clock*
    file (if it exists). This file describes the hardware clock (if it’s UTC, the
    time zone, and so on).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: When using forensic tools for analyzing timestamps, the tool may require specifying
    a time zone. With The Sleuth Kit, for example, commands using time zone information
    can use the `-z` flag to specify the time zone.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '***Daylight Saving and Leap Time***'
  id: totrans-42
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Daylight saving time is the practice of moving clocks forward an hour in spring
    and backward an hour in fall (“spring forward, fall back") to provide earlier
    daylight during winter and later daylight during summer. This practice is decided
    by regional governments and is not a global standard. Some regions (Russia in
    2014 and Europe in 2021) have abolished, or are in the process of abolishing,
    the daylight saving time change.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: It is important to be aware of daylight saving time when forensically analyzing
    systems in affected regions. The added or removed hour affects the reconstruction
    of forensic timelines and interpretation of past events. Forensic tools generally
    support daylight saving adjustments if a geographic region is specified. UTC does
    not change for daylight saving time.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: 'The *tzdata* file described in the previous section contains daylight saving
    information. To extract a list of time intervals (historic and future) for a particular
    time zone, use the `zdump` tool on a Linux machine, as shown here:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here, the transition time, time zone abbreviation (CET or CEST), current daylight
    saving flag (`isdst=`), and offset from UTC in seconds (`gmtoff=`) are shown.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: It is interesting to note those regions that abandoned daylight saving, as the
    final entry in the *tzdata* file is the date and time of last change in the region.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，那些放弃夏令时的地区，*tzdata* 文件中的最后一项是该地区最后一次变更的日期和时间。
- en: For more information about *tzdata* files, see the tzfile(5) man page. The authoritative
    source for time zone data is the Internet Assigned Numbers Authority (IANA), and
    tz database files can be found on the IANA website (*[https://www.iana.org/time-zones/](https://www.iana.org/time-zones/)*).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 *tzdata* 文件的更多信息，请参见 tzfile(5) 手册页。时区数据的权威来源是互联网号码分配局 (IANA)，tz 数据库文件可以在
    IANA 网站上找到 (*[https://www.iana.org/time-zones/](https://www.iana.org/time-zones/)*).
- en: Leap years and leap seconds are also a factor in Linux timekeeping, and a challenge
    in forensics. A leap year is the addition of a single day, February 29, every
    four years (there is an exception to the leap year rule once per century). Leap
    seconds are more difficult to predict and are caused by the Earth’s rotation slowing
    down. The International Earth Rotation Service (IERS) decides when to add a leap
    second and publishes that decision half a year in advance (usually planned for
    the end or middle of the year). A list of leap seconds since the Unix epoch (28
    of them as of this writing) are available on the IERS website (*[https://hpiers.obspm.fr/iers/bul/bulc/ntp/leap-seconds.list](https://hpiers.obspm.fr/iers/bul/bulc/ntp/leap-seconds.list)*).
    Linux systems using external time synchronization will automatically add leap
    seconds. Leap years are predictable, and Linux systems are designed to add February
    29 every four years.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 闰年和闰秒也是 Linux 时间管理中的一个因素，并且在法医分析中也是一个挑战。闰年是每四年增加一天，即 2 月 29 日（每个世纪会有一次闰年规则的例外）。闰秒更难预测，通常是由于地球自转速度减慢引起的。国际地球自转服务
    (IERS) 决定何时添加闰秒，并提前半年发布该决定（通常计划在年底或年中）。自 Unix 纪元以来的闰秒列表（截至目前已有 28 次）可以在 IERS 网站上找到
    (*[https://hpiers.obspm.fr/iers/bul/bulc/ntp/leap-seconds.list](https://hpiers.obspm.fr/iers/bul/bulc/ntp/leap-seconds.list)*).
    使用外部时间同步的 Linux 系统会自动添加闰秒。闰年是可以预测的，Linux 系统设计为每四年自动增加 2 月 29 日。
- en: It is important to be aware of leap years and leap seconds when forensically
    analyzing systems. The additional day and second could affect the reconstruction
    of past events and creation of forensic timelines.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行法医分析时，了解闰年和闰秒非常重要。额外的那一天和那一秒可能会影响过去事件的重建和法医时间线的创建。
- en: '***Time Synchronization***'
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***时间同步***'
- en: From a digital forensics perspective, knowing the configured time synchronization
    is important for several reasons. It helps determine when a system was in sync
    or out of sync over time, providing more accurate analysis of system timelines.
    It helps investigations when the clock was deliberately changed or manipulated
    for malicious reasons.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 从数字取证的角度来看，了解配置的时间同步非常重要，原因有几个。它有助于确定系统何时同步或不同步，从而提供更准确的系统时间线分析。当时钟因恶意原因被故意更改或篡改时，它也有助于调查。
- en: 'To maintain the correct time during normal system operation, an external time
    source is used. Examples of external time sources include:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在正常系统操作期间保持正确的时间，会使用外部时间源。外部时间源的例子包括：
- en: '**Network Time Protocol (NTP)** Network-based time sync protocol (RFC 5905)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络时间协议 (NTP)** 基于网络的时间同步协议 (RFC 5905)'
- en: '**DCF77** German longwave radio time signal broadcast from near Frankfurt (used
    across Europe)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**DCF77** 德国长波广播时间信号，来自法兰克福附近（在欧洲广泛使用）'
- en: '**Global Positioning System (GPS)** Time received from a network of satellites'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**全球定位系统 (GPS)** 从卫星网络接收的时间'
- en: Most Linux systems check and set the date on startup, using NTP after the network
    is functional.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 Linux 系统在启动时会检查并设置日期，在网络正常工作的情况下使用 NTP。
- en: 'The most common NTP software packages used on Linux systems are:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 系统中最常用的 NTP 软件包有：
- en: '**ntp** The original NTP reference implementation (*[https://ntp.org/](https://ntp.org/)*)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**ntp** 原始的 NTP 参考实现 (*[https://ntp.org/](https://ntp.org/)*)'
- en: '**openntpd** Designed by the OpenBSD community for simplicity and security'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**openntpd** 由 OpenBSD 社区设计，注重简洁性和安全性'
- en: '**chrony** Designed to perform well under a variety of conditions'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**chrony** 旨在在各种条件下表现良好'
- en: '**systemd-timesyncd** Time synchronization built into systemd'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**systemd-timesyncd** 内置于 systemd 的时间同步'
- en: To determine which ntp mechanism is used, check the installed packages for ntp,
    openntpd, or chrony (systemd-timesync is installed as part of systemd). Then check
    which service unit file is enabled by examining the symlinks in */etc/systemd/system/*.wants/*)
    directories. Common unit files are *ntp.service*, *ntpd.service*, *chrony.service*,
    and *openntpd.service*.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Systemd’s timesyncd will create symbolic links such as */etc/systemd/system/
    dbus-org.freedesktop.timesync1.service* and */etc/systemd/system/sysinit.target.wants/
    systemd-timesyncd.service*. On a live system the `timedatectl` command queries
    and manages these files.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: The contents of the unit files provide information about the configuration.
    Often the time daemons will have a separate configuration file in */etc/* (*ntp.conf*
    or *ntpd.conf*, for example) that defines the behavior of the daemon and specifies
    the time servers used. The systemd-timesyncd configuration is defined in */etc/systemd/timesyncd.conf*
    .
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Logs related to the time daemon provide information about startup, shutdown,
    time sync changes, and errors. These can be found in the systemd journal, in syslog
    logs, and in stand-alone logfiles in */var/log/**.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: 'The following examples show log entries from openntpd, chrony, and systemd-timesyncd,
    with the time being changed:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: A list of servers is typically configured for the system to synchronize time.
    In some cases, a system may have a locally attached time source (DCF77, GPS, and
    so on) that may appear as a server with a 127.*x*.*x*.*x* IP address in the configuration
    file. You can find additional information about the time daemon and the configuration
    files in the software package man pages or at the developer website.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: If a GPS device is attached, look for the gpsd (*[https://gpsd.io/](https://gpsd.io/)*)
    software package and associated configuration (*/etc/gpsd/** or */etc/default/gpsd*).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: 'Clock synchronization is typical but not required, and in some cases, no NTP
    configuration will be found. For example:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Virtual machines that trust the clock of the host (with a paravirtualized hardware
    clock, for example)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Machines where the user sets the clock manually
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Machines where the `ntpdate` command is run at startup (or periodically) to
    set the clock
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In such cases, the synchronization of the virtual machine’s host or the time
    of the hardware clock on the mainboard becomes important.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Most PC mainboards have a small battery to keep the clock running while the
    system is powered off. The Linux kernel’s real-time clock (RTC) driver makes the
    clock accessible through the */dev/rtc* device (often a symlink to */dev/rtc0*).
    Time synchronization software will keep the hardware clock updated accordingly.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: The hardware clock of a system may be set to either the local time or to UTC
    (UTC is recommended). See the hwclock(8) man page for more information.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '**Raspberry Pi Clock**'
  id: totrans-79
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: The Raspberry Pi does not have a clock battery, and it powers on with an epoch
    time of zero (January 1, 1970 00:00:00). Any logs generated before the Raspberry
    Pi’s time is synchronized will have incorrect timestamps. Knowing when the system’s
    time synchronization established the correct time is important when analyzing
    anything with timestamps.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: 'The Raspberry Pi and other embedded systems may save a timestamp at shutdown
    so that they can set a more reasonable time at early boot (until the time is synchronized).
    This is achieved using the *fake-hwclock* software package. The time is stored
    in a file, as shown in this example:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The time stored in the *fake-hwclock.data* file may be in UTC and match the
    corresponding filesystem timestamps (last changed and modified). A periodic cron
    job may update the time written to the file in case of an unexpected crash or
    power loss. See the fake-hwclock(8) man page for more information.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '***Timestamps and Forensic Timelines***'
  id: totrans-84
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'A timestamp refers to a specific point in time, usually associated with some
    action or activity for which there is some digital evidence. Using timestamps
    in a forensic context helps to reconstruct a sequence of past events. However,
    there are challenges with using and trusting timestamps extracted from digital
    data sources. Some of the risks that affect the accuracy of timestamps are:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: Clock drift or skew on machines without time synchronization
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Delays and latency for non-real-time operating systems
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timestamps discovered without a known time zone
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anti-forensics or the malicious changing of timestamps (using `timestomp`, for
    example)
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Global investigations involving many devices across multiple time zones become
    more complex when the timestamps are impacted by these risks.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: 'Most forensic tools are aware of these issues and include functionality to
    adjust time accordingly. For example, The Sleuth Kit has flags that help:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: -s seconds    Adjust +/- seconds
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: -z zone    Specify a time zone (for example, CET)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: Never completely trust timestamps. Errors, failures, or anti-forensic activity
    are always possible, so try to corroborate with timestamps on different devices
    or other evidence sources.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: 'A forensic timeline is the reconstruction of events based on timestamps found
    related to investigations. The first digital forensics timelines were created
    from the timestamps of the filesystem metadata (last accessed, modified, changed,
    and so on). Today, investigators assemble timestamp data from multiple sources
    into a single *super-timeline*, which can include any relevant timestamps, such
    as the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Filesystem timestamps (MACB)
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Logs (syslog, systemd journal, and application logs)
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Browser history, cookies, cache, and bookmarks
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration data containing timestamps
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recycle/trash data
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Email and attachments (mbox, maildir)
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Office document metadata (PDFs, LibreOffice, and so on)
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EXIF data (metadata from photos or videos)
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Volatility output files (memory forensics)
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Captured network traffic (PCAP files)
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CCTV cameras and building access systems (badge readers)
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CCTV 摄像头和建筑物门禁系统（刷卡读卡器）
- en: Phone, chat, and other communication records
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电话、聊天和其他通信记录
- en: Backup archives (tar *.snar* files and backup indexes)
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备份档案（tar *.snar* 文件和备份索引）
- en: Other timestamp sources (mobile phones, IoT devices, or cloud)
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他时间戳来源（手机、物联网设备或云端）
- en: A popular super-timelining framework is log2timeline/plaso, which uses free
    and open source tools to assemble timestamps from a variety of sources. You can
    visit the project website (*[https://github.com/log2timeline/plaso/](https://github.com/log2timeline/plaso/)*)
    for more information.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一个流行的超时间轴框架是 log2timeline/plaso，它使用自由和开源工具从各种来源组装时间戳。你可以访问该项目网站 (*[https://github.com/log2timeline/plaso/](https://github.com/log2timeline/plaso/)*)
    获取更多信息。
- en: 'The forensic timeline of every Linux image contains several significant time
    points:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Linux 镜像的取证时间线包含几个重要的时间节点：
- en: Unix epoch
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unix 纪元
- en: Files that existed before installation (distro-provided files)
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装前存在的文件（发行版提供的文件）
- en: Time of original system installation
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始系统安装时间
- en: Last timestamp observed during normal operation
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正常操作期间观察到的最后时间戳
- en: Time of forensic acquisition
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 取证采集时间
- en: There should never be any timestamps after the forensic acquisition. If there
    are, they could indicate the drive image was tampered with or modified. Dates
    appearing after an acquisition could also have been deliberately created (faked)
    through anti-forensic activity.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 取证采集后不应出现任何时间戳。如果有时间戳，它们可能表明驱动器镜像被篡改或修改。采集后的日期也可能是通过反取证活动故意创建（伪造）的。
- en: Building and interpreting timelines presents some challenges. With large technical
    datasets, the number of timestamps available can be difficult to process (especially
    manually). Many timestamps will describe trivial or non-relevant events. Sometimes
    a collection of many timestamps describes a single overall event.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 构建和解释时间线会面临一些挑战。在大型技术数据集中，可用的时间戳数量可能会难以处理（尤其是手动处理时）。许多时间戳描述的是琐碎或不相关的事件。有时，多个时间戳的集合描述的是单一的整体事件。
- en: Another challenge is determining whether some event was caused by the user or
    the machine. It is also important to note, especially for filesystem forensics,
    that the farther back we look on the timeline, the less information we’ll likely
    find. Over time, sectors are overwritten, filesystem timestamps are updated, and
    other information is lost during normal system operation.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个挑战是确定某个事件是由用户还是机器引起的。特别是对于文件系统取证而言，需要注意的是，我们回溯时间线时，往往会发现信息越来越少。随着时间的推移，扇区被覆盖，文件系统时间戳被更新，其他信息在正常系统操作过程中丢失。
- en: '**Internationalization**'
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**国际化**'
- en: The internationalization of a Linux system includes the configuration of locale,
    languages, keyboards, and other region-specific information. Global investigations
    involving the identification of people (also known as attribution) benefit greatly
    from understanding the local regional artifacts found on a Linux system.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 系统的国际化包括配置区域设置、语言、键盘和其他地区特定信息。涉及人员识别（也称为归属）的全球性调查可以大大受益于了解 Linux 系统上的本地区域工件。
- en: Linux internationalization refers to the support for multiple languages and
    cultural settings. The word *internationalization* is sometimes abbreviated as
    *i18n* because there are 18 characters between the *i* and *n*.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 国际化指的是对多语言和文化设置的支持。*国际化*一词有时会缩写为 *i18n*，因为在 *i* 和 *n* 之间有 18 个字符。
- en: On Fedora-based and SUSE systems, some packages and scripts may read the i18n,
    keyboard, console, and language files (if they exist) in the */etc/sysconfig/*
    directory. Debian-based systems have similar keyboard, hwclock, console-setup,
    and locale files in the */etc/default/* directory.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于 Fedora 和 SUSE 的系统中，一些包和脚本可能会读取 */etc/sysconfig/* 目录下的 i18n、键盘、控制台和语言文件（如果存在）。基于
    Debian 的系统在 */etc/default/* 目录中有类似的键盘、硬件时钟、控制台设置和语言区域文件。
- en: Those files can be examined during a forensic investigation, but they have been
    partly superseded by the systemd equivalents described here.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这些文件可以在取证调查中进行检查，但它们已经部分被这里描述的 systemd 等效物所取代。
- en: '***Locale and Language Settings***'
  id: totrans-125
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***区域设置和语言设置***'
- en: 'Much of the internationalization of Linux is configured by defining the locale
    settings. The locale is part of glibc and can be used by any locale-aware software
    to control language, formatting, and other regional settings. These settings are
    defined in the */etc/locale.conf* file, which may not exist (if the system uses
    other default settings), might contain a single line (language, for example),
    or may have a detailed locale configuration:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 的大部分国际化配置通过定义语言环境设置来完成。语言环境是glibc的一部分，可以被任何支持语言环境的软件使用来控制语言、格式和其他区域设置。这些设置定义在*/etc/locale.conf*文件中，该文件可能不存在（如果系统使用其他默认设置），可能只包含一行（例如，语言设置），或者包含详细的语言环境配置：
- en: '[PRE7]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here, the language is defined as Canadian English (Unicode). The locale definition
    file describes things like date format, currency, and other local information.
    The definitions for available locales are found in */usr/share/ i18n/locales*
    and stored in readable text files.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，语言设置为加拿大英语（Unicode）。语言环境定义文件描述了日期格式、货币和其他本地信息。可用语言环境的定义可以在*/usr/share/i18n/locales*中找到，并存储为可读的文本文件。
- en: 'On some systems, the locale-gen program generates all the locales specified
    in */etc/locale.gen* and installs them in */usr/lib/locale/locale-archive*, where
    they can be used by any user on the system. The `localedef` tool can list the
    locales in the file:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些系统上，locale-gen程序会生成*/etc/locale.gen*中指定的所有语言环境，并将其安装在*/usr/lib/locale/locale-archive*中，供系统上的任何用户使用。`localedef`工具可以列出文件中的语言环境：
- en: '[PRE8]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The output should correspond to the configuration in the */etc/locale.gen* file.
    The file can be copied to a separate examination machine for offline analysis
    (using the `-i` flag).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应与*/etc/locale.gen*文件中的配置相对应。该文件可以复制到单独的检查机器上进行离线分析（使用`-i`标志）。
- en: 'From a user’s perspective, a locale is a collection of variables that define
    their local or regional preferences. On a running system, the `locale` command
    lists the variables:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 从用户的角度看，语言环境是定义其本地或区域偏好的变量集合。在运行中的系统上，`locale`命令列出了这些变量：
- en: '[PRE9]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: These variables determine the language, numeric formats (commas instead of periods,
    for example), time (24-hour versus AM/PM), currency, paper size, name and address
    styles, measurement, and more. Some of these variables are defined by POSIX and
    others have been added by the Linux community. In a postmortem forensic examination
    we can reconstruct these preferences from configuration files.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这些变量决定了语言、数字格式（例如，使用逗号代替句点）、时间（24小时制与AM/PM制）、货币、纸张大小、姓名和地址格式、测量单位等。有些变量由POSIX定义，其他则由Linux社区添加。在事后法医检查中，我们可以通过配置文件重建这些偏好设置。
- en: 'See the locale(5) man page for more information about each of these variables
    (there are three locale man pages with different section numbers: locale(1), locale(5),
    and locale(7), so be sure to consult the right one).'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 有关这些变量的更多信息，请参阅locale(5)手册页（有三个locale手册页，分别位于不同的章节：locale(1)、locale(5)和locale(7)，因此请确保查阅正确的版本）。
- en: A user can also create a mixed locale composed from variables taken from multiple
    installed locales (for example, North American English language together with
    European time settings).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 用户还可以创建一个混合语言环境，该语言环境由多个已安装的语言环境的变量组成（例如，北美英语语言与欧洲时间设置的结合）。
- en: If no variables are defined by the user (in the shell startup scripts), the
    system-wide default locale defined in */etc/locale.conf* is used. Systemd uses
    the `localectl` tool to manage localization and reads *locale.conf* during system
    boot. Any localization explicitly defined by system administrators and users is
    interesting and may help an investigation. For example, a mixture of settings
    may indicate a person speaking a certain language, but residing in a different
    country.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户没有在（shell 启动脚本中）定义任何变量，则使用系统范围的默认语言环境，该默认语言环境定义在*/etc/locale.conf*文件中。Systemd
    使用`localectl`工具来管理本地化，并在系统启动时读取*locale.conf*。系统管理员和用户明确设置的任何本地化设置都是有价值的，可能对调查有所帮助。例如，一些设置的混合可能表明某个人讲某种语言，但居住在另一个国家。
- en: Most international software projects include support for multiple languages
    for interactive messages, error messages, help pages, documentation, and other
    information communicated to the user. When separate language files are provided
    with a software package, those files are stored in */usr/share/locale/* and dynamically
    chosen depending on the configured language. The `LANG=` variable specifies the
    language to be used, which can be a system-wide default or configured for each
    user.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: Graphical environments may have additional or separate language information
    and configuration settings (for example, the `KDE_LANG` variable for KDE or settings
    in the dconf database for GNOME). The XDG **.desktop* files typically have language
    translation strings defined in the file. Some applications require separate installation
    of language packs (for example, dictionaries, office programs, and man pages).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '***Physical Keyboard Layout***'
  id: totrans-140
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A physical system’s attached keyboard is interesting because it tells us something
    about the person who uses it. The keyboard country and language suggest the user’s
    cultural origin (however, many non-English-speaking Linux computer programmers
    and enthusiasts choose a US English keyboard). The keyboard design may also provide
    information about how the owner is using the machine. There are gamer keyboards,
    programmer/sysadmin keyboards, ergonomic keyboards, touchscreen keyboards, collectable
    keyboards, and other exotic keyboard designs. These physical keyboard characteristics
    may be useful contextual information in a forensic examination.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: 'The first step in analyzing the keyboard is to identify the physically attached
    device. A USB keyboard’s manufacturer and product information can be found in
    the kernel logs:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Here, the `idVendor` is `0853`, which is Topre (see *[http://www.linux-usb.org/usb-ids.html](http://www.linux-usb.org/usb-ids.html)*),
    the `Manufacturer` is `LEOPOLD`, and the product (`0134`) is described as a `Mini
    Keyboard`.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: 'Virtual machines don’t have physical keyboards (unless a physical USB keyboard
    is passed through directly to the virtual machine), and a virtual keyboard may
    appear as a PS/2 device:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The electronic/digital hardware interface to a keyboard is generic and language
    independent. A Linux system must be manually configured to map the language-specific
    layout and symbols seen on the physical key caps. This configuration can be done
    separately for the console and graphical environments.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: Low-level scancodes generated by the physical keyboard are translated by the
    kernel into keycodes. These keycodes are mapped in userspace (either on the console
    or graphical environment) to keysyms, which are the characters (glyphs) in a human
    language. The available character sets are stored in */usr/share/i18n/charmaps/*
    as compressed text files. A system-wide character set can be defined as the default,
    and a user may choose their own at login.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Linux systems replaced the early Unix serial ports with virtual consoles where
    the keyboard, mouse, and video are attached. These consoles are the text interface
    that is available when no graphical environment is started and typically seen
    at boot time or on server systems. The console keyboard (and font) can be configured
    in */etc/vconsole.conf* with the `KEYMAP=` option.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: 'If a graphical environment is used, the keyboard configuration describes the
    model, language, and other options. KDE stores this information in the *.config/kxkbrc*
    file of a user’s home directory. For example:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Here, a Happy Hacking Keyboard (`hhk`) is used, the available language layouts
    are `us` and `ch` (Switzerland), and other options are specified (CAPS LOCK is
    remapped as a CTRL key).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: GNOME stores keyboard information in the dconf database under the *org.gnome.libgnomekbgd*
    key. See [Chapter 10](ch10.xhtml) on how to analyze the dconf database.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 'If systemd or the `localectl` command was used (manually or in a script) to
    set the configuration, the keyboard configuration will be stored in the */etc/X11/xorg.conf.d/00-keyboard.conf*
    file:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Here, another Happy Hacking Keyboard (`hhk`) is configured with a Swiss (`ch`)
    layout.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: 'Other window managers and graphical environments may also use dconf or have
    their own configuration files. Debian-based systems may store this information
    as variables in the */etc/default/keyboard* file, like this:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: XKB refers to the *X Keyboard Extension* from the X11 specification. See the
    xkeyboard-config(7) man page for a list of keyboard models, layouts, and options.
    Some Wayland compositors will also use these `XKB*` variables to configure the
    keyboard (Sway WM, for example).
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '**Linux and Geographic Location**'
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Answering the geographic “where?” question in a forensic investigation requires
    the reconstruction of the physical locations of a Linux device over time. If a
    device was stolen or missing and then subsequently recovered, where was it located
    during that time period? If a device was seized or quarantined for investigation,
    what is the history of device locations related to the incident? We can attempt
    to answer these questions using geolocation analysis.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: Hand-held mobile devices are well known for their location-aware features, mostly
    due to the GPS implemented in hardware. Linux systems are usually installed on
    generic PCs that don’t have a built-in GPS. However, forensic artifacts indicating
    geographic location can still be found. In some cases, geolocation data may also
    be derived or inferred from other sources (external to the forensic image under
    examination).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: 'The reference to location may have several different contexts, including:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '**Global context** Latitude and longitude (GPS coordinates)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: '**Regional context** Cultural or political region (locale, keyboard)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: '**Organizational context** Campus, building, office, or desk (IT inventory)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: These location references may be determined or inferred from a forensic analysis
    of a system or surrounding infrastructure where the system has been connected.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: '***Geographic Location History***'
  id: totrans-168
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Location history is the record of an object changing its point in space over
    a period of time. To reconstruct location history, we need physical location data
    together with timestamps. Knowing when a physical location changed helps us build
    a location timeline. Many of the ideas described here are not limited to Linux
    systems and may apply generally to other operating systems.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: The keyboard, language, and other locale settings provide a broad indicator
    of region location. For example, knowing that the default paper size is US Letter
    or A4 indicates whether a system is from the North American region or not. If
    a system has a Swiss keyboard and German language, it indicates a German-speaking
    region of Switzerland. If the paper size or keyboard changed at a certain (known)
    time, it may indicate a change of region.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: Time and time zone changes are potential indicators of travel. If a system suddenly
    changed its time zone settings (as previously shown in the logs), that indicates
    a change in location. The number of time zones changed may also be interesting,
    as it may suggest a mode of travel (flight versus automobile).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: An analysis of timestamps before and after time zone switching could also be
    interesting. Was there a significant gap in timestamp activity before the time
    zone changed? Or do the timestamps show the person was working throughout the
    period when the time zone change took place?
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: 'To some extent, the IP address can provide an approximate geographic location.
    This method of determining location is sometimes called *IP geolocation* or *geo-IP*
    lookup. IP ranges are allocated to regional internet registries (RIRs) that delegate
    the use of ranges to an assigned region. The five RIRs (and their dates of inception)
    are:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: RIPE NCC, RIPE Network Coordination Centre (1992)
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: APNIC, Asia-Pacific Network Information Centre (1993)
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ARIN, American Registry for Internet Numbers (1997)
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LACNIC, Latin American and Caribbean Internet Address Registry (1999)
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AfriNIC, African Network Information Centre (2004)
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: National internet registries (NIRs) and local internet registries (LIRs) may
    further assign IP ranges to geographic regions. Companies like MaxMind (*[https://www.maxmind.com/](https://www.maxmind.com/)*)
    may compile data from internet registries, information from internet service providers
    (ISPs), and other analytical sources to produce IP lookup databases that are sold
    as products and services.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: '*IP geolocation for devices that use tunneling, relaying, anonymization, mobile
    networks, international non-public networks, or private IP ranges (RFC 1918) may
    not provide accurate results.*'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: Whenever a forensic examination reveals an IP address linked to a timestamp,
    it is a point on the location history timeline. IP addresses from within an organization’s
    internal network may offer more accurate location information (network configuration
    documentation, IT inventory databases, and so on).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: At the link layer, the surrounding MAC addresses found in logs may be a location
    indicator. The MAC addresses of local routers or other fixed-location devices
    on a network segment may help determine location. For example, corporate IT environments
    may have an inventory of infrastructure MAC addresses that are assigned to physical
    buildings or offices. Wi-Fi infrastructure (BSSIDs) logged or cached on a local
    machine may also be a geographic location indicator.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: In some cases, the machine’s MAC address or other unique identifiers may be
    logged at a wireless infrastructure provider (for example, WWAN mobile devices
    connecting to cell towers or WLAN wireless interfaces connecting to public Wi-Fi
    hotspots).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: Connections to stationary Bluetooth devices may indicate a physical location
    (for example, evidence that a laptop used Bluetooth to connect with a desktop
    PC, home stereo, keyboard, or printer at a known location). Bluetooth connections
    to other mobile devices that have geolocation information may help reconstruct
    location history (for example, a laptop connected to a mobile phone or automobile
    that has stored GPS location information).
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: Application data may provide information about past locations of a roaming Linux
    system. For example, many providers will deposit cookies containing geolocation
    information whenever someone visits their website. In addition, any connections
    made to remote services may retain location information in the server logs (assuming
    the logs can be reliably linked to the machine under examination). In some cases,
    this information can be formally requested (by subpoena or other lawful request).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: Geolocation information is often found in the metadata of files (photos, for
    example). However, this is not necessarily an indication of the PC’s location,
    but rather the device that originally took the photo.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: If a Linux system is equipped with a GPS device, it is likely using the gpsd
    software package. Any programs or applications using gpsd may have logs or cached
    location data.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: Desktop PCs are usually located in a fixed physical location. If seized, the
    exact location is known (obviously). In a forensic report, other information may
    be important to document, like a building address, room number, or specific desk
    in an open plan office. In an enterprise environment, the physical location of
    a machine may have changed over time, and the location history can be reconstructed
    from changes to the IT inventory (if it exists and tracks changes to system location).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: 'To some extent, we can also step into the physical world to determine the location
    of a particular electronic device. For example, some people collect stickers and
    put them on the lids of their laptops. People do this for various reasons: to
    easily identify their laptop, deter theft, or promote favorite products, projects,
    conferences, or other things. Laptop lid stickers create a unique visual identifier
    that can be matched with CCTV camera footage or geolocation tags of photos containing
    the laptop. They may also match specific conferences and events where the stickers
    were distributed.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在某种程度上，我们还可以进入物理世界来确定某个电子设备的位置。例如，有些人收集贴纸并将它们贴在笔记本电脑的盖子上。人们这样做的原因有很多：便于识别自己的笔记本，防止盗窃，或宣传喜欢的产品、项目、会议或其他事物。笔记本电脑盖子上的贴纸创造了一个独特的视觉标识符，可以与
    CCTV 摄像头录像或包含该笔记本的照片的地理位置标签相匹配。它们也可能与特定的会议和活动匹配，这些会议和活动上曾分发过这些贴纸。
- en: '***GeoClue Geolocation Service***'
  id: totrans-191
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***GeoClue 地理定位服务***'
- en: 'The GeoClue software project was started to provide location information for
    location-aware applications using D-Bus. As documented on its website (*[https://gitlab.freedesktop.org/geoclue/geoclue/](https://gitlab.freedesktop.org/geoclue/geoclue/)*),
    it derives location information from:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: GeoClue 软件项目的初衷是通过 D-Bus 为位置感知应用程序提供位置信息。正如其官方网站上所记录的（*[https://gitlab.freedesktop.org/geoclue/geoclue/](https://gitlab.freedesktop.org/geoclue/geoclue/)*），它从以下途径获取位置信息：
- en: Wi-Fi-based geolocation using Mozilla Location Service (accuracy in yards/meters)
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 Wi-Fi 的地理定位，使用 Mozilla Location Service（精度为码/米）
- en: GPS(A) receivers (accuracy in inches/centimeters)
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GPS(A) 接收器（精度为英寸/厘米）
- en: GPS of other devices on the local network, such as smartphones (accuracy in
    inches/centimeters)
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地网络上其他设备的 GPS，例如智能手机（精度为英寸/厘米）
- en: 3G modems (accuracy in miles/kilometers, unless the modem has GPS)
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3G 调制解调器（精度为英里/公里，除非调制解调器具备 GPS 功能）
- en: GeoIP (city-level accuracy)
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GeoIP（城市级别精度）
- en: GeoClue was initially written for use by GNOME applications, but it is a D-Bus
    service and can be used by any application that is authorized in the GeoClue configuration
    file.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: GeoClue 最初是为 GNOME 应用程序编写的，但它是一个 D-Bus 服务，任何在 GeoClue 配置文件中授权的应用程序都可以使用它。
- en: 'GeoClue’s configuration file defines which location sources to use and which
    local applications are permitted to request location information:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: GeoClue 的配置文件定义了使用哪些位置源，以及哪些本地应用程序被允许请求位置信息：
- en: '[PRE15]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The daemon itself does not log location information; however, applications that
    use it may log or store this information.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 守护进程本身不会记录位置信息；然而，使用它的应用程序可能会记录或存储这些信息。
- en: The preference for using location services is stored in the user’s dconf database
    (*org.gnome.system.location.enabled*). This preference is independent of whether
    the `geoclue` service is running. If a user disables location services in their
    GUI settings, the `geoclue` service will not be disabled system-wide. Determining
    whether GeoClue was enabled requires checking for the existence of the systemd
    *geoclue.service* file.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 使用位置服务的偏好存储在用户的 dconf 数据库中（*org.gnome.system.location.enabled*）。这个偏好设置与 `geoclue`
    服务是否正在运行无关。如果用户在图形界面设置中禁用了位置服务，`geoclue` 服务不会被全局禁用。要确定 GeoClue 是否已启用，需要检查 systemd
    的 *geoclue.service* 文件是否存在。
- en: '**Summary**'
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**摘要**'
- en: This chapter described how to analyze time-related elements of a Linux system.
    It explored the Linux internationalization features and how they can be useful
    in a forensic investigation. It also considered geolocation in the context of
    a Linux forensic analysis. This chapter has touched on user activity and behavior,
    a topic that the next chapter covers in greater depth.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 本章描述了如何分析 Linux 系统中的时间相关元素。它探讨了 Linux 的国际化功能及其在取证调查中的应用。它还考虑了在 Linux 取证分析中的地理定位问题。本章已涉及用户活动和行为，下一章将更深入地探讨这个话题。
