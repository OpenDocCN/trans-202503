- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Turning grille transposition ciphers
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转格子转置密码
- en: '![](image_fi/502727c11/g11001.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11001.png)'
- en: 'It should come as no surprise that there are types of transposition ciphers
    other than the two systems, complete and incomplete columnar transposition, covered
    in the previous chapters. Here are a few examples:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不足为奇的是，除了前几章中讲解的两种密码系统：完全和不完全列转置密码之外，还有其他类型的转置密码。以下是几个例子：
- en: '*Rubik’s Cube encryption*: Douglas W. Mitchell proposed a transposition cipher
    that uses a Rubik’s Cube.^([1](b06.xhtml#c11-endnote-1)) The plaintext is written
    on the fields of the cube. A sequence of moves forms the key. Subsequently, one
    reads the ciphertext from the cube. When used properly, this kind of encryption
    is difficult, yet not impossible, to break.^([2](b06.xhtml#c11-endnote-2))'
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*鲁比克魔方加密*：Douglas W. Mitchell提出了一种使用鲁比克魔方的转置密码。^([1](b06.xhtml#c11-endnote-1))
    明文写在魔方的各个面上，一系列的操作形成密钥。随后，从魔方中读取密文。使用得当时，这种加密方式很难破解，尽管并非不可能。^([2](b06.xhtml#c11-endnote-2))'
- en: '*Crossword encryption*: In World War II, German spies sometimes used crossword
    puzzles as keys for transposition ciphers.^([3](b06.xhtml#c11-endnote-3)) The
    sender wrote their message in the empty fields while the black fields remained
    empty. Afterward, the letters were read out column-wise. The receiver had to follow
    the same procedure with the same crossword puzzle in reverse order. Though this
    system is clever, we know today that enemy cryptanalysts of the era broke it.'
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*填字谜加密*：在第二次世界大战期间，德国间谍有时使用填字谜作为转置密码的密钥。^([3](b06.xhtml#c11-endnote-3)) 发信人将信息写入空白格子中，而黑色格子保持为空。之后，收信人按列顺序读取字母。接收者必须用相同的填字谜，并按相反的顺序进行操作。虽然这种方法很巧妙，但我们今天知道，当时敌方的密码分析员已破解了它。'
- en: '*Rasterschlüssel 44*: The German army also used this kind of transposition
    cipher during World War II. It is based on rectangular forms that look similar
    to crossword puzzles.^([4](b06.xhtml#c11-endnote-4)) This system was mainly applied
    to less-important messages and as an Enigma substitute. The British could break
    this kind of encryption, but deciphering it was laborious and often took several
    days. As the intelligence gained from these decipherments was usually not vital,
    they finally gave up trying to break Rasterschlüssel 44 messages, deciding it
    was not worth the effort.'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Rasterschlüssel 44*：德国军队在第二次世界大战期间也使用了这种转置密码。它基于类似填字谜的矩形形式。^([4](b06.xhtml#c11-endnote-4))
    这个系统主要用于较不重要的消息以及作为Enigma的替代品。英国人能够破解这种加密，但解密过程繁琐，通常需要几天时间。由于从这些解密中获得的情报通常不重要，他们最终放弃了破解Rasterschlüssel
    44密码，认为这样做不值得投入精力。'
- en: '[Figure 11-1](#figure11-1) illustrates these three transposition types.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[图11-1](#figure11-1)展示了这三种转置类型。'
- en: '![](image_fi/502727c11/f11001.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11001.png)'
- en: 'Figure 11-1: Examples of various transposition types: (a) a Rubik’s Cube being
    used as a cipher device; (b) an encryption method based on a crossword puzzle
    (used by a secret agent in World War II); and (c) a form used for the German World
    War II cipher Rasterschlüssel 44'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-1：各种转置类型的示例：(a) 使用鲁比克魔方作为密码装置；(b) 基于填字谜的加密方法（第二次世界大战期间一名特工使用）；(c) 德国二战密码Rasterschlüssel
    44使用的形式
- en: There are many other types of transposition ciphers commonly mentioned in cryptography
    books; however, we have not included them here because they tend not to be used
    in practice, only as puzzle challenges for crypto-enthusiasts. For example, competitions
    of the American Cryptogram Association routinely include systems such as the rail
    fence cipher and route transposition.^([5](b06.xhtml#c11-endnote-5))
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他类型的转置密码常在密码学书籍中提到；然而，我们在这里没有包括它们，因为它们通常不会在实际中使用，仅作为密码爱好者的谜题挑战。例如，美国密码谜语协会的竞赛经常包括诸如铁道栅栏密码和路线转置密码等系统。^([5](b06.xhtml#c11-endnote-5))
- en: 'Apart from these, there is one transposition method encountered so often that
    it merits its own chapter: the turning grille encryption.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，还有一种转置方法被频繁遇到，值得单独成章讲解：旋转格子加密。
- en: How turning grille encryption works
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 旋转格子加密的工作原理
- en: 'The sample Christmas card in [Figure 11-2](#figure11-2), which could have been
    sent in 2009 from one crypto-enthusiast to another, bears an encrypted inscription
    consisting of thirty-six letters: `TDHOAA PYHPEH UNFYAS MFNROH OLTIII NLMGYT`.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图11-2](#figure11-2)中的示例圣诞卡片上，可能是2009年一位密码爱好者寄给另一位的，上面有一段由三十六个字母组成的加密文字：`TDHOAA
    PYHPEH UNFYAS MFNROH OLTIII NLMGYT`。
- en: '![](image_fi/502727c11/f11002.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11002.png)'
- en: 'Figure 11-2: A Christmas card encrypted with a turning grille'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-2：用旋转格栅加密的圣诞卡
- en: The plaintext of this inscription is `HAPPY HOLIDAYS FROM THE HUNTINGTON FAMILY`.
    It was encrypted with a so-called turning grille, also known as a Fleissner grille
    after nineteenth-century crypto book author Edouard Fleissner von Wostrowitz (1825–1888).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这个铭文的明文是 `HAPPY HOLIDAYS FROM THE HUNTINGTON FAMILY`。它是用所谓的旋转格栅加密的，这种加密法也被称为弗莱斯纳格栅（Fleissner
    grille），以19世纪加密书作者爱德华·弗莱斯纳·冯·沃斯特罗维茨（Edouard Fleissner von Wostrowitz，1825–1888）命名。
- en: 'A *turning grille* is usually a square stencil with holes that is used in four
    steps. In each step, a quarter of the plaintext is written into the holes from
    left to right and top to bottom. Each step is followed by a ninety-degree clockwise
    turn of the grille. For example, here are the steps for encrypting the aforementioned
    `HAPPY HOLIDAYS . . .` message with a 6 × 6 grille:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*旋转格栅* 通常是一个带孔的方形模板，用于四个步骤。在每个步骤中，明文的四分之一会从左到右、从上到下写入孔中。每一步之后，格栅会顺时针旋转九十度。例如，下面是用一个6
    × 6的格栅加密之前提到的 `HAPPY HOLIDAYS . . .` 消息的步骤：'
- en: '![](image_fi/502727c11/g11002.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11002.png)'
- en: 'When we remove the stencil after the fourth step, we get the message on the
    Christmas card:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在第四步后移除模板时，我们就得到了圣诞卡上的消息：
- en: '`T D H O A A`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`T D H O A A`'
- en: '`P Y H P E H`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`P Y H P E H`'
- en: '`U N F Y A S`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`U N F Y A S`'
- en: '`M F N R O H`'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`M F N R O H`'
- en: '`O L T I I I`'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`O L T I I I`'
- en: '`N L M G Y T`'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`N L M G Y T`'
- en: The turning grille encryption method is a transposition cipher. The grille can
    be of any size but must be square. Most turning grilles we have encountered have
    an even number of rows and columns, because if the stencil uses an odd number
    of rows, there will be a “center” to the square, which usually remains empty.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转格栅加密方法是一种换位密码。格栅可以是任何大小，但必须是方形的。我们遇到的大多数旋转格栅都有偶数行和列，因为如果模板使用奇数行，则会有一个“中心”位置，通常保持空白。
- en: The larger a turning grille, the more secure it is.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 格栅越大，安全性越高。
- en: 'To construct a turning grille, one can proceed, as shown in [Figure 11-3](#figure11-3),
    by following these steps:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 构建旋转格栅时，可以按照[图11-3](#figure11-3)中的步骤进行，如下所示：
- en: Begin with a rectangular matrix that is one-quarter the size of the final grille.
    For example, if your final grille is 6 × 6, meaning that it has four quarters,
    each of which is 3 × 3, start with one of those 3 × 3 sections. In this smaller
    section, which has nine possible positions, write the numbers 1 through 4 in random
    locations, filling in all nine locations. (No matter the size of your grille,
    you will always use the numbers 1 through 4, as these represent the four directions
    in which the grille will be turned.)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从一个矩形矩阵开始，它的大小是最终格栅的四分之一。例如，如果最终格栅是6 × 6的，那么它有四个部分，每个部分是3 × 3的，就从这些3 × 3的部分开始。在这个较小的部分中，有九个位置，随机写上数字1到4，填满这九个位置。（无论你的格栅大小如何，始终使用数字1到4，因为这些数字代表了格栅旋转的四个方向。）
- en: Place the smaller matrix on top of the larger grille’s top-left corner and copy
    the 1 sections to the larger grille. Next, move the smaller matrix to the top
    right of the grille, rotate it ninety degrees clockwise, and then mark the 2s
    in the larger grille. Move the smaller matrix to the bottom right of the grille,
    again rotating it ninety degrees clockwise, and then mark the 3s. Finally, move
    the smaller matrix to the bottom left of the grille, rotating it again by ninety
    degrees, and mark the 4s.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将较小的矩阵放置在较大格栅的左上角，并将1标记复制到较大格栅中。接下来，将较小矩阵移动到格栅的右上方，顺时针旋转九十度，然后在较大格栅中标记2。将较小矩阵移动到格栅的右下角，再次顺时针旋转九十度，然后标记3。最后，将较小矩阵移动到格栅的左下角，再次旋转九十度，并标记4。
- en: Punch or cut holes in the larger matrix wherever there is a number.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在较大的矩阵中，任何位置有数字的地方都要打孔或切孔。
- en: The grille constructed in [Figure 11-3](#figure11-3) is the one that was used
    to encrypt the Christmas card.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[图11-3](#figure11-3)中构建的格栅就是用来加密圣诞卡的那个。'
- en: '![](image_fi/502727c11/f11003.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11003.png)'
- en: 'Figure 11-3: A turning grille can be constructed with a square matrix that
    is filled with numbers from 1 to 4 at random. The resulting grille is four times
    as big.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-3：可以通过填充1到4的随机数字构建一个方形矩阵，从而构建旋转格栅。得到的格栅会是原来的四倍大。
- en: A message encrypted with this stencil must have exactly thirty-six letters.
    If it has fewer, we’ll need to add a few nulls.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 用此模板加密的消息必须恰好有三十六个字母。如果字母少于这个数量，我们需要添加一些空字符。
- en: How to detect a turning grille encryption
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何检测旋转格栅加密
- en: Turning grille cryptograms are usually easy to detect. If a message is written
    in a square form and if frequency analysis indicates that it is a transposition
    cipher, chances are that you are dealing with a turning grille ciphertext. Of
    course, it is easy to arrange a message of this kind in a form other than a square,
    but experience shows that many turning grille users waive this simple security
    measure. The message in [Figure 11-4](#figure11-4), which was published by Dutch
    cryptologist Auguste Kerckhoffs (1835–1903) in his 1883 book *La* *Cryptographie
    Militaire*, is a typical example.^([6](b06.xhtml#c11-endnote-6))
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转栅栏密码通常容易被识别。如果一条信息是以正方形形式写成的，并且频率分析表明它是一个换位密码，那么很可能你正在处理的是旋转栅栏密码。当然，将这种信息安排成其他形态也是可能的，但经验表明，许多旋转栅栏用户放弃了这一简单的安全措施。[图11-4](#figure11-4)中的信息是荷兰密码学家奥古斯特·凯尔霍夫斯（Auguste
    Kerckhoffs，1835–1903）在其1883年出版的《军事密码学》（*La* *Cryptographie Militaire*）一书中发布的典型示例。^([6](b06.xhtml#c11-endnote-6))
- en: '![](image_fi/502727c11/f11004.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11004.png)'
- en: 'Figure 11-4: A turning grille cryptogram created by Auguste Kerckhoffs in the
    nineteenth century'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-4：19世纪奥古斯特·凯尔霍夫斯（Auguste Kerckhoffs）创作的旋转栅栏密码
- en: If a message is not written in square form, the message length is a possible
    indicator that you are dealing with a turning grille. A turning grille with an
    even line length produces messages that have the length of a squared even number
    (for instance, 16, 36, 64, or 100). If the line length is odd and the square in
    the middle is left empty, the message length is a squared odd number minus one
    (for instance, 24 or 48). Of course, this length, too, can be changed, for instance,
    by adding a few nulls. But again, in our experience, most turning grille users
    do not take this extra step to make their system more secure.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一条信息不是以正方形形式写成的，那么信息长度可能是你正在处理旋转栅栏密码的一个指示。一个行长是偶数的旋转栅栏产生的消息长度是偶数平方数（例如，16、36、64
    或 100）。如果行长是奇数且中间的正方形为空，则消息长度是奇数平方数减去一（例如，24 或 48）。当然，这个长度也可以通过添加一些空值来改变。但再次强调，根据我们的经验，大多数旋转栅栏用户并没有采取这种额外步骤来增强他们的系统安全性。
- en: How to break a turning grille encryption
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何破解旋转栅栏加密
- en: Breaking a turning grille cryptogram works very well with hill climbing cryptanalysis,
    which is an iterative computer technique we will introduce in [Chapter 16](c16.xhtml).
    Still, it is possible to break a turning grille cryptogram by hand, though you
    usually need a crib or at least a few letters from the plaintext that can be guessed.
    We will demonstrate this strategy with the cipher message on the simulated birthday
    card in [Figure 11-5](#figure11-5).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 破解旋转栅栏密码与爬山法密码分析非常契合，这是一种迭代计算机技术，我们将在[第16章](c16.xhtml)中介绍。尽管如此，还是可以手动破解旋转栅栏密码，尽管通常需要一个明文的样本，或者至少需要猜测出一些字母。我们将在[图11-5](#figure11-5)中的模拟生日卡片上演示这一策略。
- en: '![](image_fi/502727c11/f11005.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11005.png)'
- en: 'Figure 11-5: The message on this birthday card (created by the authors for
    this book) is encrypted using a turning grille cipher.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-5：这张生日卡片上的信息（由作者为本书制作）使用了旋转栅栏密码进行加密。
- en: 'Here’s a transcript of the message:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是信息的抄本：
- en: '`H L H O D V`'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`H L H O D V`'
- en: '`T A I A E P`'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`T A I A E P`'
- en: '`Y B P E T T`'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`Y B P E T T`'
- en: '`I Y L O H T`'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`I Y L O H T`'
- en: '`Y B O L W Y`'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`Y B O L W Y`'
- en: '`I E R U T N`'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`I E R U T N`'
- en: This cryptogram consists of thirty-six letters written in a square. Analysis
    reveals letter frequencies that are similar to that of the English language. We
    therefore assume that we are dealing with a turning grille encryption.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这个密码文由36个字母组成，排列成一个正方形。分析表明，字母频率与英语语言相似。因此，我们假设这是一个旋转栅栏加密。
- en: Can we guess a plaintext word? Considering that this message is a birthday greeting,
    BIRTHDAY is a promising candidate. This guess is confirmed by the fact that the
    letters B, I, R, T, H, D, A, and Y all appear in the cryptogram.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能猜出一个明文单词吗？考虑到这条信息是一个生日祝福，BIRTHDAY 是一个有前景的候选词。通过字母 B、I、R、T、H、D、A 和 Y 都出现在密码文中，可以确认这一猜测。
- en: One of the inherent properties of every turning grille message is that the average
    distance between two letters that are neighbors in the plaintext is four (i.e.,
    there are three letters in between them), no matter the size of the grid. This
    is because the grille always has exactly four different positions.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 每个旋转栅栏信息的固有特性之一是，明文中相邻的两个字母之间的平均距离是四（即它们之间有三个字母），无论网格的大小如何。这是因为栅栏总是有恰好四个不同的位置。
- en: 'So, our first step is to find the letters of the crib, bearing in mind this
    average letter interval. If we look for BIRTHDAY, finding the word’s start is
    easy, as there is only one B in the message. Continuing on to the right, we encounter
    an I five cells later. There are also an R and a T in the following line:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们的第一步是找到密码中的字母，并记住这个平均字母间隔。如果我们寻找 BIRTHDAY，找到这个词的起始字母很容易，因为消息中只有一个 B。接着向右，我们会在五个单元格后遇到字母
    I。接下来的一行中还有字母 R 和 T：
- en: '![](image_fi/502727c11/g11003.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11003.png)'
- en: 'Assuming that we have discovered the letters BIRT from BIRTHDAY, we now turn
    the grille 180 degrees and place it along the top of the grid to see which letters
    are “seen through the holes”:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已经发现了 BIRTHDAY 中的字母 BIRT，现在我们将格栅旋转 180 度，并将其放置在格栅顶部，看看哪些字母是通过孔“看到”的：
- en: '![](image_fi/502727c11/g11004.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11004.png)'
- en: 'The four squares we have identified show the letters LOVE—a word that makes
    sense on a birthday card. Let’s now look for the letters HDAY, which we expect
    to follow BIRT. As the T of BIRT stands close to the end of the cryptogram, we
    need to look for HDAY at its beginning. There are four different possibilities
    (indicated by squares with solid lines; the dotted squares indicate the letter
    sequences we get when we turn this proposed grille fragment by 180 degrees):'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已识别出的四个方块展示了字母 LOVE——这是一个在生日卡片上有意义的词。接下来，我们要寻找字母 HDAY，我们预计它会跟在 BIRT 后面。由于
    BIRT 中的 T 靠近密码图的末尾，我们需要在其开头寻找 HDAY。有四种不同的可能性（由实线方块表示；虚线方块表示当我们将这个拟议的格栅碎片旋转 180
    度时得到的字母序列）：
- en: '![](image_fi/502727c11/g11005.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11005.png)'
- en: The potential four-letter sequences we get when turning the grille are TWEN,
    HLIR, TOEN, and TOEU. All of these might appear in an English text. However, as
    we are dealing with a birthday card, TWEN makes the most sense, because TWENTY
    or TWENTIETH might refer to the age of the receiver. This means that the first
    of the four options is the most likely one. Now, we have identified two four-hole
    fragments of the grille. They can be connected to one five-hole fragment, as shown
    in [Figure 11-6](#figure11-6).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在旋转格栅时得到的潜在四字母序列有 TWEN、HLIR、TOEN 和 TOEU。所有这些都可能出现在英文文本中。然而，由于我们处理的是生日卡片，TWEN
    最为合适，因为 TWENTY 或 TWENTIETH 可能指的是收信人的年龄。这意味着四个选项中的第一个最为可能。现在，我们已经识别出两个四孔格栅碎片。它们可以与一个五孔碎片连接，如图
    [11-6](#figure11-6) 所示。
- en: '![](image_fi/502727c11/f11006.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11006.png)'
- en: 'Figure 11-6: Two grille fragments that fit together'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-6：两个可以拼接在一起的格栅碎片
- en: The N of TWEN is the last letter in the last line. If we assume that the next
    letter is T (as in TWENTY or TWENTIETH), we need to look at the top of the grid
    for the continuation. As an aid, we turn the five-hole grille fragment by ninety
    degrees.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: TWEN 中的 N 是最后一行的最后一个字母。如果我们假设下一个字母是 T（如同 TWENTY 或 TWENTIETH），我们需要在格栅的顶部寻找继续的字母。作为辅助工具，我们将五孔格栅碎片旋转九十度。
- en: '![](image_fi/502727c11/g11006.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11006.png)'
- en: 'In fact, the grille fragment now indicates a T at a position that makes sense.
    What letters might be between the T and BIRT? The sequence IETH would make sense,
    as it renders TWENTIETH BIRTHDAY. The positions of the I and the H of IETH are
    clear. (Note that the I at the beginning of the fourth line can’t be the right
    one, as there is no ETH after it.) There are two Es, but the first one is already
    used. It is unclear, though, which of the two Ts is the right one:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，这个格栅碎片现在在一个合适的位置指示了字母 T。那么 T 和 BIRT 之间可能是什么字母呢？IETH 这个字母序列是合理的，因为它可以组成 TWENTIETH
    BIRTHDAY。IETH 中的 I 和 H 的位置很清楚。（请注意，第四行开头的 I 不是正确的字母，因为它后面没有 ETH。）有两个 E，但第一个已经使用了。不过，哪个
    T 是正确的还不清楚：
- en: '![](image_fi/502727c11/g11007.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11007.png)'
- en: 'To determine which T is correct, we again turn the grille fragment by 180 degrees:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确定哪个 T 是正确的，我们再次将格栅碎片旋转 180 度：
- en: '![](image_fi/502727c11/g11008.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11008.png)'
- en: It should be apparent that the letter sequence BILLY is more likely than BYLLY.
    This means that the second T is the right one.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，字母序列 BILLY 比 BYLLY 更可能。这意味着第二个 T 是正确的。
- en: 'We have now found the position of eight of the nine holes in the grille. For
    the remaining one, there are four choices: I, T, Y, and L:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经找到了格栅上九个孔中八个的位置。对于剩下的一个孔，有四种选择：I、T、Y 和 L：
- en: '![](image_fi/502727c11/g11009.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11009.png)'
- en: Only Y makes sense here, as it renders us HAPPYTWEN for the first nine letters
    of the plaintext. We are done. [Figure 11-7](#figure11-7) shows the grille we
    have derived.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这里只有Y有意义，因为它使我们的前九个明文字母变为HAPPYTWEN。我们完成了。[图11-7](#figure11-7)展示了我们推导出的格栅。
- en: '![](image_fi/502727c11/f11007.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11007.png)'
- en: 'Figure 11-7: The grille used to encrypt the birthday card'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-7：用于加密生日卡的格栅
- en: The plaintext is `HAPPY TWENTIETH BIRTHDAY TO YOU LOVE BILLY`.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 明文是`HAPPY TWENTIETH BIRTHDAY TO YOU LOVE BILLY`。
- en: Success stories
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成功案例
- en: Paolo Bonavoglia’s turning grille solution
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 保罗·博纳沃利亚的转动格栅解决方案
- en: Our colleague Paolo Bonavoglia, a prolific modern author of articles about Italian
    cryptologic history, is also the grandson of Luigi Sacco (1883–1970). Sacco was
    a notable Italian cryptologist who, among other achievements, set up a cipher
    office for the Italian army during World War I to break messages from the Austrian
    and German armies.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的同事保罗·博纳沃利亚是一位关于意大利密码学历史的多产现代作者，也是路易吉·萨科（1883-1970）的孙子。萨科是一位著名的意大利密码学家，在其他成就中，在第一次世界大战期间为意大利军队建立了一个密码办公室，以破译来自奥地利和德国军队的消息。
- en: In a notebook that his grandfather left behind, Paolo found numerous German
    ciphertexts, including the one depicted in [Figure 11-8](#figure11-8).^([7](b06.xhtml#c11-endnote-7))
    He set out to solve this apparently unsolved message. The letter `Ö`, which appears
    in the first line, confirmed to Paolo that the message was in German. His eye
    was also immediately drawn to the presence of the letters `X` and `Y` in the lower-left
    corner, as both letters are quite rare in German texts. Paolo therefore suspected
    that the two letters had been used as nulls to complete the grille.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在他祖父留下的笔记本中，保罗发现了许多德文密文，包括图11-8中所示的密文。^([7](b06.xhtml#c11-endnote-7))他着手解决这条显然未解开的消息。第一行中出现的字母`Ö`确认给保罗这条消息是德文的。他的眼睛也立即被底部左侧的`X`和`Y`所吸引，因为在德文文本中这两个字母都非常罕见。因此，保罗怀疑这两个字母被用作填充格栅的空白。
- en: '![](image_fi/502727c11/f11008.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11008.png)'
- en: 'Figure 11-8: A turning grille cryptogram Paolo Bonavoglia found in a notebook
    belonging to his grandfather, Luigi Sacco'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-8：保罗·博纳沃利亚在他祖父路易吉·萨科留下的笔记本中找到的转动格栅密码
- en: 'In addition, Paolo guessed that the cryptogram contained the word SUCHE (SEARCH)
    or SUCHEN (TO SEARCH), starting on the right-hand side. Any of the text’s four
    Ss, three Us, four Es, and two Ns could form one of these words. Paolo had to
    check dozens of combinations, but after many attempts, he found the following
    solution:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，保罗猜测密码包含单词SUCHE（搜索）或SUCHEN（寻找），起始位置在右侧。文本中的四个S、三个U、四个E和两个N中的任何一个都可以形成这些单词。保罗必须检查几十种组合，但经过多次尝试，他找到了以下解决方案：
- en: ES WURDEN DREI PUNKTE GESEHEN ÖTLLICH WEITESRSSUCHEN XY
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: ES WURDEN DREI PUNKTE GESEHEN ÖTLLICH WEITESRSSUCHEN XY
- en: 'The word ÖTLLICH is misspelled; it should be ÖSTLICH (EAST OF). This message
    translates to: THREE POINTS HAVE BEEN SEEN. KEEP ON SEARCHING IN THE EAST XY.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 单词ÖTLLICH拼写错误，应为ÖSTLICH（东方）。这条消息翻译为：三点已见，继续在东部寻找 XY。
- en: Paolo published his solution in 2017, and shortly afterward, New Zealand–based
    crypto expert Bart Wenmeckers broke the same cryptogram with a computer-based
    hill-climbing method (see [Chapter 16](c16.xhtml)).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 保罗于2017年发布了他的解决方案，不久之后，新西兰的密码学专家巴特·温梅克斯使用基于计算机的爬坡法同样破解了这个密码（见[第16章](c16.xhtml)）。
- en: 'As an interesting side note, while we were writing our book and asking these
    brilliant codebreakers to assist with reviewing our work, when Tobias Schrödel
    proofread this chapter in 2020, he discovered something previously unknown! Double-checking
    Sacco’s notebook page containing the turning grille cryptogram, he noticed a sequence
    of forty-eight numbers, starting with 1, 37, 25, 26, 38, and 2\. He realized that
    this was the solution of the ciphertext: letter 1 in the ciphertext (E) is at
    position 1 in the plaintext, letter 2 in the ciphertext (E) is at position 37
    in the plaintext, letter 3 in the ciphertext (N) is at position 25 in the plaintext,
    and so on.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，在我们写作过程中，并请这些杰出的密码破译专家帮助审查我们的工作时，托比亚斯·施雷德尔在2020年校对本章时发现了一些以前未知的东西！在检查萨科的笔记本页中转动格栅密码时，他注意到了一个数字序列，从1、37、25、26、38开始，以及2。他意识到这是密文的解决方案：密文中的第一个字母（E）在明文中的位置是1，第二个字母（E）在明文中的位置是37，第三个字母（N）在明文中的位置是25，依此类推。
- en: Tobias sent this information to Paolo, who had not made the connection; this
    meant that his grandfather had solved this ciphertext and left an encrypted clue
    behind!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 托比亚斯将这些信息发给了保罗，但保罗没有联系起来；这意味着他的祖父已经解开了这个密文，并留下了一个加密的线索！
- en: André Langie’s turning grille solution
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安德烈·朗吉的转盘格解法
- en: In his marvelous 1922 book *Cryptography*, Swiss cryptologist André Langie (1871–1961)
    tells the story of a gentleman who received an encrypted message while staying
    in a hotel called the North Pole.^([8](b06.xhtml#c11-endnote-8)) The sender was
    a person this gentleman knew, and the two had agreed that the cipher would be
    a turning grille. However, the man in the hotel had lost the notes that contained
    a description of the grille, so he could not decrypt the message. Thus, he contacted
    Langie.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在他那本精彩的1922年著作《*密码学*》中，瑞士密码学家安德烈·朗吉（André Langie，1871–1961）讲述了一个绅士的故事，这个绅士在一家名为北极的酒店住下时收到了一个加密的信息。^([8](b06.xhtml#c11-endnote-8))
    发送者是这位绅士认识的人，他们曾约定使用转盘格加密法。然而，这位酒店中的男子丢失了包含格描述的笔记，因此无法解密消息。于是，他联系了朗吉。
- en: 'Here is the sixty-four-character English version of the message. Different
    versions were provided in each translation of the book:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这是该消息的64字符英文版本。每本书的翻译版本提供了不同的版本：
- en: AITEGFLYTBOEEHREAUWNANOARRDRTEETHOSHFPETAPOTOYHLRETIHENEMGAOARNT
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: AITEGFLYTBOEEHREAUWNANOARRDRTEETHOSHFPETAPOTOYHLRETIHENEMGAOARNT
- en: To decrypt the message, Langie wrote it down in a grid format and numbered the
    sixty-four squares for easy identification (see [Figure 11-9](#figure11-9)). Langie’s
    attention was immediately drawn to the letters A and T (squares 1 and 3), as AT
    is a common word in English and one that might easily form the beginning of a
    message. Accordingly, he marked the position of these two letters on tracing paper
    and turned his grille by 180 degrees.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解密这个消息，朗吉将它写成了网格格式，并对64个方格进行了编号以便于识别（见[图11-9](#figure11-9)）。朗吉的注意力立刻被字母A和T（第1和第3个方格）吸引，因为AT是英语中常见的词，并且可能是一个消息的开头。因此，他在描图纸上标记了这两个字母的位置，并将转盘格旋转了180度。
- en: '![](image_fi/502727c11/f11009.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11009.png)'
- en: 'Figure 11-9: A turning grille cryptogram solved by André Langie in the early
    twentieth century'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-9：安德烈·朗吉在20世纪初解开的转盘格密码
- en: The marks on the tracing paper coincided with the letters R and T (squares 62
    and 64). RT is a common word ending, and it is evident that, from the last two
    lines, one could easily extract the word HEART in squares 53, 54 (or 56), 59 (or
    61), 62, and 64\. Marking these and again reversing the tracing paper, Langie
    found, in the corresponding squares—1, 3, 4 (or 6), 9 (or 11), and 12—the letters
    ATE (or F), T (or O), and E. As this was not very satisfactory, he abandoned the
    combination and tried another.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 描图纸上的标记与字母R和T（第62和第64个方格）重合。RT是常见的词尾，显然从最后两行可以轻松提取出单词HEART，位于第53、54（或56）、59（或61）、62和64个方格中。标记这些并再次翻转描图纸，朗吉发现，在对应的方格——1、3、4（或6）、9（或11）和12中——出现了字母ATE（或F）、T（或O）和E。由于这并不令人满意，他放弃了这个组合，尝试了另一个。
- en: Next, Langie turned his attention to the second line and decided to mark THE
    (squares 9, 14, and 16), the most common trigraph in English. Reversing the tracing
    paper brought the marks to the corresponding squares 49, 51, and 56 in the sixth
    line, indicating the letters RTE—a promising combination. Looking for the vowel
    that preceded it, Langie first noticed the O (in square 45). Three squares earlier
    (at 42) was a P. He now had the group PORTE, which seemed to call for the final
    R, which occurred in the last line, at square 62.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，朗吉把注意力转向了第二行，决定标记THE（第9、14和16个方格），这是英语中最常见的三字母组合。将描图纸翻转后，标记移动到了第六行的第49、51和56个方格，对应字母为RTE——一个有前景的组合。为了寻找前面的元音，朗吉首先注意到了O（在第45个方格）。再往前三个方格（第42个方格）是P。于是，他得到了组合PORTE，这似乎需要最后的R，这个字母出现在最后一行的第62个方格。
- en: Langie again turned the paper by 180 degrees, which brought to light T (square
    3) and NO (20 and 23), producing the sequence TTHENO. The first of these letters
    was doubtlessly the final one of some other word, and the last two were the beginning
    of a new word.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 朗吉再次将纸张旋转了180度，揭示了T（3号格）和NO（20号和23号），从而得到序列TTHENO。这些字母中的第一个无疑是某个单词的最后一个字母，而最后两个则是新单词的开头。
- en: The next step was, tentatively, to begin the construction of the grille, which
    Langie did by drawing squares around the letters PORTER (42, 45, 49, 51, 56, and
    62). He then made a small mark on each of these six letters. Next, he turned the
    tracing paper, this time by only ninety degrees. His six marked squares now covered
    the letters IOUSAG (2, 11, 18, 35, 41, and 58). These he labeled with a different
    mark.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是初步开始构建格栅，Langie通过在字母PORTER周围画出格子来进行（42, 45, 49, 51, 56, 和 62）。然后他在这六个字母上做了小标记。接着，他将描图纸旋转90度。这时，他标记的六个格子覆盖了字母IOUSAG（2,
    11, 18, 35, 41, 和 58）。他为这些字母标注了不同的符号。
- en: '![](image_fi/502727c11/g11010.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11010.png)'
- en: 'A further turn brought him to the group `TTHENO` (squares 3, 9, 14, 16, 20,
    and 23), which he marked, too:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 经过进一步旋转，他得到了字母组`TTHENO`（格子3, 9, 14, 16, 20, 和 23），他也对这些格子进行了标记：
- en: '![](image_fi/502727c11/g11011.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11011.png)'
- en: 'A final turn produced `LAEHEN` (squares 7, 24, 30, 47, 54, and 63), which he
    indicated in another way:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的旋转产生了`LAEHEN`（格子7, 24, 30, 47, 54, 和 63），他以另一种方式标示了这些字母：
- en: '![](image_fi/502727c11/g11012.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11012.png)'
- en: Langie had now neutralized twenty-four out of the sixty-four squares, thereby
    considerably narrowing his field of research. Coming back to his original group,
    `PORTER`, he looked for a word likely to precede it and was favorably inclined
    toward `THE` (32, 36, and 39). There were two `H`s between the `T` and `E`, and
    he adopted the second experimentally.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Langie现在已经中和了64个格子中的24个，从而大大缩小了他的研究范围。回到他最初的字母组`PORTER`，他开始寻找一个可能出现在其前面的词，并倾向于`THE`（32,
    36, 39）。在`T`和`E`之间有两个`H`，他实验性地选择了第二个。
- en: Marking these and reversing the tracing paper, Langie found the three corresponding
    letters to be `RTH` (26, 29, and 33). This enlarged the group `TTHENO` to `T`
    `THE NORTH`—a result that proved he was on the right track. Accordingly, he marked
    in four colors the corresponding letters in the four positions, bringing the total
    number of neutralized squares to thirty-six.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 标记完这些字母后，Langie反转描图纸，发现三个对应的字母是`RTH`（26, 29, 和 33）。这将字母组`TTHENO`扩展为`T THE NORTH`，这一结果证明他走在正确的道路上。因此，他用四种颜色标注了四个位置上的对应字母，使得已中和的格子总数达到了36个。
- en: 'Progress subsequently was by leaps and bounds. For instance, upon scrutinizing
    the words THE NORTH and the unmarked letters following them, Langie discerned
    a P and an O and thought of POLE. These letters were duly found in squares 38,
    43, 48, and 50\. Having marked these and the corresponding letters in the other
    positions, he found that only twelve squares remained to be accounted for. With
    some additional guessing, he deduced the following plaintext:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 随后进展飞速。例如，在仔细检查了“THE NORTH”和其后未标记的字母后，Langie辨认出P和O，并联想到POLE。这些字母分别出现在格子38, 43,
    48, 和50中。标记了这些字母及其它位置上的对应字母后，他发现只剩下12个格子没有被解决。通过一些额外的猜测，他推导出了以下明文：
- en: IF YOU ARE STAYING AT THE NORTH POLE HOTEL BEWARE OF THE MANAGER AND THE PORTER
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你住在北极酒店，请小心经理和搬运工
- en: Karl de Leeuw’s turning grille solution
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 卡尔·德·李乌的旋转格栅解法
- en: In 1993, crypto expert Karl de Leeuw, who is a colleague of ours, and crypto
    expert Hans van der Meer found in an Amsterdam archive an encrypted message ([Figure
    11-10](#figure11-10)) left behind by Dutch governor and Prince of Orange William
    V (1748–1806).^([9](b06.xhtml#c11-endnote-9)) The cryptogram’s shape suggested
    that the writer had used a 16 × 16 turning grille. As the message was too long
    for the grille’s 256 fields, some fields contained two letters.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 1993年，密码学专家卡尔·德·李乌（我们的一位同事）和密码学专家汉斯·范·德·梅尔在阿姆斯特丹的一个档案馆里发现了一条加密消息（[图11-10](#figure11-10)），这条消息是荷兰总督兼橙公爵威廉五世（1748–1806）留下的。[9]
    该密码的形状表明，写信人使用了一个16×16的旋转格栅。由于消息的长度超出了格栅的256个格子，因此有些格子包含了两个字母。
- en: The letter frequencies indicated that the plaintext language was German. The
    letter Ü in the second-to-last position of the third line, with its distinctive
    dots, confirmed this suspicion.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 字母频率表明该明文语言为德语。第三行倒数第二个位置的字母Ü，带有独特的双点，证实了这一怀疑。
- en: '![](image_fi/502727c11/f11010.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11010.png)'
- en: 'Figure 11-10: Eighteenth-century turning grille cryptogram solved by Karl de
    Leeuw and Hans van der Meer in the twentieth century'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-10：18世纪的旋转格栅密码，由卡尔·德·李乌和汉斯·范·德·梅尔在20世纪解密
- en: In 1993, the technique of breaking turning grille ciphers with computer support
    (such as with hill climbing) was still in its infancy. Karl and Hans therefore
    tried their luck with manual methods, which is usually quite difficult when the
    stencil is as large as the one used here. Nevertheless, the two found a surprisingly
    simple way to decipher the cryptogram. They took advantage of the fact that the
    writer had been sloppy when placing letters into the holes. This can be seen most
    clearly in line 6, where the letters E (at position 8), I (at position 10), and
    N (at position 16) are written slightly lower than the others, which implies that
    they were all written with the stencil in a certain position.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在1993年，使用计算机支持（如爬山算法）破解旋转格栅密码的技术仍处于起步阶段。因此，卡尔和汉斯尝试用手动方法解密，而当模板像这里使用的那么大的时候，这通常是非常困难的。然而，这两人找到了一种出奇简单的方式来解密这个密码。他们利用了一个事实：作者在把字母放入孔洞时非常马虎。最明显的例子出现在第六行，其中字母
    E（位于第8位）、I（位于第10位）和 N（位于第16位）写得比其他字母略低，这表明它们都是在某个特定的位置用模板写的。
- en: '![](image_fi/502727c11/g11013.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11013.png)'
- en: 'In line 7, the same applies to G, E, G, and A:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在第七行，同样适用于 G、E、G 和 A：
- en: '![](image_fi/502727c11/g11014.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/g11014.png)'
- en: In the eighth line, though not quite so clear, N, G, E, and N are a little lower
    than the other letters, too. Together, these letters form EINGEGANGEN, which is
    a German word meaning GONE IN.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在第八行，虽然不太清楚，N、G、E 和 N 字母的位置略低于其他字母。这些字母合起来形成了“EINGEGANGEN”这个德语单词，意思是“已接收”。
- en: 'Reversing the stencil resulted in BIERWELCHESI, which also makes sense in German
    (BIER means BEER and WELCHES means WHICH). Based on these observations, Karl and
    Hans were able to reconstruct the positions of eleven holes, which gave them a
    total of forty-four letters. Then, with the technique described earlier in this
    chapter, they could solve the rest of the message. The grille they derived can
    be seen in [Figure 11-11](#figure11-11). Here’s the plaintext:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 反转模板得到了 BIERWELCHESI，这在德语中也有意义（BIER 意味着 啤酒，WELCHES 意味着 哪种）。根据这些观察，卡尔和汉斯能够重建出十一个位孔的位置，从而得到了总共四十四个字母。然后，借助本章前面描述的技术，他们解开了其余的消息。由此得出的格栅可以在[图
    11-11](#figure11-11)中看到。以下是明文内容：
- en: die franszosen sind laut eingegangener erkundigung und nach richt von camberg
    abmarchiret es sollen aber dem verlaut nach andere an deren stelle einrucken vielleicht
    fürchten sie das en gelische bier welches ihnen wohl übel bekommen durfte wan
    es recht getruncken wird ich wünschet dass sie die rechte maass be kommen mögten
    [separation mark] koenig
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 根据收到的询问和信息，法国人已经离开了坎贝尔。然而，根据传闻，其他人很快会取代他们。也许他们害怕英式啤酒，喝了之后会让他们生病。我希望他们能喝到适量的啤酒。——科尼希
- en: 'It translates to the following:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 它的翻译如下：
- en: According to an inquiry that has arrived and a message, the French have left
    Camberg. However, according to rumors, others will replace them soon. Perhaps
    they fear the English beer, which will make them sick when it is drunk. I hope
    they will get the right amount of it. Koenig
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 根据收到的询问和消息，法国人已离开坎贝尔。不过，按照传闻，其他人将很快取而代之。也许他们害怕英式啤酒，喝了以后会让他们生病。我希望他们能喝到适量的啤酒。——科尼希
- en: '![](image_fi/502727c11/f11011.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11011.png)'
- en: 'Figure 11-11: The turning grille Karl de Leeuw and Hans van der Meer derived
    when they solved the message left behind by Dutch governor William V. This message
    was written in a somewhat sloppy way, which allowed it to be solved more easily.
    In addition, the regular pattern of the holes is helpful for a codebreaker.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-11：卡尔·德·刘和汉斯·范·德·梅尔在解密荷兰总督威廉五世留下的消息时得出的旋转格栅。这个消息写得有些潦草，这使得它更容易被解开。此外，孔洞的规律性对密码破解者也很有帮助。
- en: Apparently, the author of this note was joking about English beer—certainly
    an interesting find, especially because they took the time to encrypt the joke!
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，这篇笔记的作者是在开玩笑，关于英式啤酒——确实是一个有趣的发现，特别是因为他们花时间对这个笑话进行加密！
- en: The Mathias Sandorf cryptogram
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 《Mathias Sandorf》密码谜题
- en: 'In his famous 1885 novel *Mathias Sandorf*, French author Jules Verne (1828–1905)
    describes two petty criminals who find an encrypted message attached to the leg
    of a carrier pigeon and later find a turning grille that they use to decrypt the
    cryptogram ([Figure 11-12](#figure11-12)). The message reads as follows:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在他那部著名的1885年小说《Mathias Sandorf》中，法国作家儒勒·凡尔纳（1828–1905）描述了两个小罪犯，他们发现了一条加密的信息，这条信息挂在一只信鸽的腿上，后来他们找到了一块旋转格栅，并用它解密了这条密码信息（[图
    11-12](#figure11-12)）。这条消息内容如下：
- en: '`IHNALZ ARNURO ODXHNP AEEEIL SPESDR EEDGNC`'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`IHNALZ ARNURO ODXHNP AEEEIL SPESDR EEDGNC`'
- en: '`ZAEMEN TRVREE ESTLEV ENNIOS ERSSUR TOEEDT`'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`ZAEMEN TRVREE ESTLEV ENNIOS ERSSUR TOEEDT`'
- en: '`RUIOPN MTQSSL EEUART NOUPVG OUITSE ERTUEE`'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`RUIOPN MTQSSL EEUART NOUPVG OUITSE ERTUEE`'
- en: In 2000, German cryptology professor Klaus Pommerening published a paper that
    explains how a codebreaker could have solved the message without knowing the grille.^([10](b06.xhtml#c11-endnote-10))
    The codebreaking process Pommerening describes is too lengthy to be covered in
    full in our book, so we will use a few shortcuts.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 2000年，德国密码学教授Klaus Pommerening发表了一篇文章，解释了如何在不知道格的情况下，密码破译者可以解开消息。^[10](b06.xhtml#c11-endnote-10)
    Pommerening描述的密码破译过程太长，无法在我们的书中完全涵盖，因此我们将使用一些捷径。
- en: Let’s start with Pommerening’s assumptions that the plaintext is in French,
    that each line of thirty-six letters is encrypted separately with a 6 × 6 turning
    grille, and that the same grille was used for each line.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从Pommerening的假设开始，即明文为法语，每行三十六个字母使用一个6×6的旋转格来单独加密，并且每行使用相同的格。
- en: For cryptanalysts, one of the nice things about the French language is that
    the letter Q is relatively frequent in short words, such as QUE, QUOI, and QUEL,
    and that, as in many other languages, Q is usually followed by a U. (The word
    CINQ, which means FIVE, is the only common exception.) This means that, when working
    with a French plaintext, looking for a Q is a good start. As we can see, the third
    row contains a Q in position 9\. Unfortunately, in the same line are five Us,
    which makes things a little more complex.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 对于密码分析师来说，法语中一个好的特点是字母Q在短词中相对频繁，比如QUE、QUOI和QUEL，而且和其他许多语言一样，Q通常后面跟着U。（词语CINQ，意为“五”，是唯一的常见例外。）这意味着，在处理法语明文时，寻找Q是一个良好的起点。正如我们所见，第三行中第9个位置有一个Q。不幸的是，同一行中有五个U，这使事情变得更加复杂。
- en: '![](image_fi/502727c11/f11012.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11012.png)'
- en: 'Figure 11-12: The 1885 novel *Mathias Sandorf* by Jules Verne contains a message
    encrypted with a turning grille.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-12：朱尔斯·凡尔纳（Jules Verne）的1885年小说《马西亚斯·桑多夫》包含一个用旋转格加密的消息。
- en: 'Pommerening knew that the same grille had been used for all three lines, so
    he could apply the technique of multiple anagramming (see [Chapter 9](c09.xhtml))
    to check the most plausible combination. With this method, the five Us after the
    Q in the third line lead to the following five options in the first and second
    lines:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Pommerening知道所有三行使用了同样的格，因此他可以应用多重排列技术（见[第9章](c09.xhtml)）来检查最有可能的组合。通过这种方法，在第三行Q后面的五个U导致第一行和第二行有以下五个选项：
- en: '`NH NX NE NP NG`'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '`NH NX NE NP NG`'
- en: '`VA VT VN VR VE`'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '`VA VT VN VR VE`'
- en: '`QU QU QU QU QU`'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`QU QU QU QU QU`'
- en: 'While the letter pairs NH, NX, VT, and VN are rare in French, NG and VE are
    quite common. For this reason, the last option looks best, so Pommerening assumed
    that it was correct. As QU is usually followed by E or I in French, he had eight
    plausible possibilities to proceed:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然NH、NX、VT和VN的字母对在法语中很少见，但NG和VE相当常见。因此，最后一个选项看起来最好，因此Pommerening假设这是正确的。由于在法语中，QU通常后面跟着E或I，他有八种合理的可能性继续：
- en: '`NGN NGO NGD NGE NGR NGE NGN NGC`'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`NGN NGO NGD NGE NGR NGE NGN NGC`'
- en: '`VEE VEE VES VES VER VET VED VET`'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`VEE VEE VES VES VER VET VED VET`'
- en: '`QUI QUE QUE QUI QUE QUE QUE QUE`'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`QUI QUE QUE QUI QUE QUE QUE QUE`'
- en: 'Possibilities 4, 5, and 6 look promising. Typically, a codebreaker would have
    to check all three options, but to make things easier, let’s select the fifth
    block (the correct one, as will become clear). As another shortcut, we assume,
    based on the content of the novel, that NGR is a part of the word HONGRIE, which
    is French for HUNGARY. This assumption is supported by the fact that the first
    row of the cryptogram also contains the letters H and O (even two of each), providing
    Pommerening with four possible arrangements:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 4、5和6的可能性看起来很有希望。通常，密码破译者需要检查所有三个选项，但为了简化问题，让我们选择第五块（正确的块，这一点很快就会变得清楚）。作为另一个捷径，我们假设根据小说内容，NGR是单词HONGRIE的一部分，法语中意为匈牙利。这一假设得到了支持，因为密码文的第一行也包含字母H和O（甚至每个都有两个），这为Pommerening提供了四种可能的排列方式：
- en: '`HONGR HONGR HONGR HONGR`'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`HONGR HONGR HONGR HONGR`'
- en: '`AEVER AEVER LEVER LEVER`'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`AEVER AEVER LEVER LEVER`'
- en: '`ULQUE UEQUE ALQUE AEQUE`'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`ULQUE UEQUE ALQUE AEQUE`'
- en: 'Pommerening now chose block 3, as the letter sequences `LEVER` and `ALQUE`
    make sense in French, while the letter combination `AE` is quite rare. He continued
    by appending an `I` to `HONGR` (remember that we want to construct the word `HONGRIE`),
    which produced two possibilities:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Pommerening现在选择了第三个块，因为字母序列`LEVER`和`ALQUE`在法语中有意义，而字母组合`AE`相当罕见。他继续在`HONGR`后面添加了一个`I`（记住我们想构造单词`HONGRIE`），产生了两种可能性：
- en: '`HONGRI HONGRI`'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`HONGRI HONGRI`'
- en: '`LEVERZ LEVERO`'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '`LEVERZ LEVERO`'
- en: '`ALQUER ALQUEV`'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`ALQUER ALQUEV`'
- en: 'The second possibility seemed more plausible, as ERZ is not a common trigraph
    in French. Pommerening now needed an E after HONGRI, resulting in six variants:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种可能性看起来更为合理，因为ERZ在法语中并不是一个常见的三字母组合。Pommerening现在需要在HONGRI后添加一个E，从而得出六种变体：
- en: '`HONGRIE HONGRIE HONGRIE HONGRIE HONGRIE HONGRIE`'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`HONGRIE HONGRIE HONGRIE HONGRIE HONGRIE HONGRIE`'
- en: '`LEVERON LEVERON LEVEROI LEVEROS LEVEROT LEVEROO`'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`LEVERON LEVERON LEVEROI LEVEROS LEVEROT LEVEROO`'
- en: '`ALQUEVO ALQUEVU ALQUEVP ALQUEVI ALQUEVA ALQUEVR`'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`ALQUEVO ALQUEVU ALQUEVP ALQUEVI ALQUEVA ALQUEVR`'
- en: 'He recognized here the word LEVERONT (“will stand up”), with the last letter
    missing. This meant that the initial two options were the most likely ones. The
    first appeared to be the correct one, as VO in the last line could be extended
    to VOUS (“you”). To produce this word, Pommerening added a U (omitting the S,
    as there were several choices for it):'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 他在这里认出了单词LEVERONT（“站起来”），并且最后一个字母缺失。这意味着最初的两个选项是最有可能的。第一个选项看起来是正确的，因为最后一行中的VO可以扩展为VOUS（“你”）。为了形成这个单词，Pommerening在第二行中添加了一个U（省略了S，因为有多个选择）：
- en: '`HONGRIEX`'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`HONGRIEX`'
- en: '`LEVERONT`'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`LEVERONT`'
- en: '`ALQUEVOU`'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`ALQUEVOU`'
- en: 'The X didn’t fit especially well, but it could be padding. As the word LEVERONT
    is reflexive (the complete expression is SE LEVERONT), Pommerening now needed
    an E in the second line, before LEVERONT. Two of the ten Es in the second row
    were already absorbed, but there were still eight choices:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: X的使用并不特别合适，但它可能是填充字符。由于单词LEVERONT是反身的（完整表达为SE LEVERONT），Pommerening现在需要在第二行中LEVERONT之前添加一个E。第二行中的十个E已经吸收了两个，但仍有八个选择：
- en: '`NHONGRIEX LHONGRIEX RHONGRIEX OHONGRIEX`'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`NHONGRIEX LHONGRIEX RHONGRIEX OHONGRIEX`'
- en: '`ELEVERONT ELEVERONT ELEVERONT ELEVERONT`'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`ELEVERONT ELEVERONT ELEVERONT ELEVERONT`'
- en: '`IALQUEVOU PALQUEVOU SALQUEVOU EALQUEVOU`'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '`IALQUEVOU PALQUEVOU SALQUEVOU EALQUEVOU`'
- en: '`NHONGRIEX AHONGRIEX SHONGRIEX DHONGRIEX`'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`NHONGRIEX AHONGRIEX SHONGRIEX DHONGRIEX`'
- en: '`ELEVERONT ELEVERONT ELEVERONT ELEVERONT`'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`ELEVERONT ELEVERONT ELEVERONT ELEVERONT`'
- en: '`RALQUEVOU NALQUEVOU OALQUEVOU TALQUEVOU`'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`RALQUEVOU NALQUEVOU OALQUEVOU TALQUEVOU`'
- en: 'Options 1, 3, 5, and 6 looked the most promising. In a real codebreaking process,
    one would have to follow all four paths to find out the right one. However, this
    is only a summary, so we will only cover option 6, which is the correct one. In
    order to get SE LEVERONT, Pommerening needed an S at the beginning of the second
    line. There were four to choose from:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 选项1、3、5和6看起来最有前景。在真正的破解过程中，必须跟踪所有四条路径以找出正确的路径。然而，这只是一个总结，因此我们只讨论选项6，这是正确的。为了得到SE
    LEVERONT，Pommerening需要在第二行的开头加一个S。从四个选项中选择：
- en: '`DAHONGRIEX LAHONGRIEX EAHONGRIEX SAHONGRIEX`'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`DAHONGRIEX LAHONGRIEX EAHONGRIEX SAHONGRIEX`'
- en: '`SELEVERONT SELEVERONT SELEVERONT SELEVERONT`'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`SELEVERONT SELEVERONT SELEVERONT SELEVERONT`'
- en: '`ENALQUEVOU GNALQUEVOU INALQUEVOU TNALQUEVOU`'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`ENALQUEVOU GNALQUEVOU INALQUEVOU TNALQUEVOU`'
- en: 'The second option renders LA HONGRIE (“the Hungary) in the first line, which
    looks good, as the French usually refer to nations with a definite article. Pommerening
    now searched the third row for extensions. He found SIGNAL QUE VOUS (“signal that
    you” or “signal which you”). Adding an I on the left side of the third line yielded
    two possibilities:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个选项使得第一行呈现出LA HONGRIE（“匈牙利”），这看起来不错，因为法语通常在提到国家时使用定冠词。Pommerening现在在第三行中寻找扩展。他发现SIGNAL
    QUE VOUS（“信号你”或“信号你们”）。在第三行的左侧添加一个I后，得到了两种可能性：
- en: '`NLAHONGRIEX ELAHONGRIEX`'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`NLAHONGRIEX ELAHONGRIEX`'
- en: '`ESELEVERONT SSELEVERONT`'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`ESELEVERONT SSELEVERONT`'
- en: '`IGNALQUEVOU IGNALQUEVOU`'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`IGNALQUEVOU IGNALQUEVOU`'
- en: 'The first option led to nothing, so Pommerening took the second and added an
    S on the left side of the third line:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个选项没有结果，因此Pommerening选择了第二个，并在第三行的左侧添加了一个S：
- en: '`UELAHONGRIEX RELAHONGRIEX DELAHONGRIEX`'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`UELAHONGRIEX RELAHONGRIEX DELAHONGRIEX`'
- en: '`RSSELEVERONT ESSELEVERONT USSELEVERONT`'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`RSSELEVERONT ESSELEVERONT USSELEVERONT`'
- en: '`SIGNALQUEVOU SIGNALQUEVOU SIGNALQUEVOU`'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`SIGNALQUEVOU SIGNALQUEVOU SIGNALQUEVOU`'
- en: The third variant stood out because of the sequence DE LA HONGRIE (“from Hungary”)
    in the first line.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个变体因第一行中的序列DE LA HONGRIE（“来自匈牙利”）而引人注目。
- en: 'For space reasons, we’ll skip the rest of the multiple-anagramming process.
    Pommerening proceeded to solve the rest of the cryptogram, resulting in the following
    plaintext:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 出于空间考虑，我们将跳过其余的多重重排过程。Pommerening继续解开剩余的密码，得到以下明文：
- en: '`SSEPOURLI NDEPENDAN CEDELAHON GRIEXRZAH`'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`SSEPOURLI NDEPENDAN CEDELAHON GRIEXRZAH`'
- en: '`SENVERREZ DETRIESTE TOUSSELEV ERONTENMA`'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`SENVERREZ DETRIESTE TOUSSELEV ERONTENMA`'
- en: '`TOUTESTPR ETAUPREMI ERSIGNALQ UEVOUSNOU`'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`TOUTESTPR ETAUPREMI ERSIGNALQ UEVOUSNOU`'
- en: 'However, this message only makes sense if one reads the third line first, then
    the second, and then the first:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，只有按照先读第三行，再读第二行，最后读第一行的顺序，这条消息才有意义：
- en: '`TOUTESTPR ETAUPREMI ERSIGNALQ UEVOUSNOU`'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`TOUTESTPR ETAUPREMI ERSIGNALQ UEVOUSNOU`'
- en: '`SENVERREZ DETRIESTE TOUSSELEV ERONTENMA`'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`SENVERREZ DETRIESTE TOUSSELEV ERONTENMA`'
- en: '`SSEPOURLI NDEPENDAN CEDELAHON GRIEXRZAH`'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`SSEPOURLI NDEPENDAN CEDELAHON GRIEXRZAH`'
- en: 'With punctuation, the plaintext reads as follows:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 加上标点后，明文如下：
- en: TOUT EST PRÊT. AU PREMIER SIGNAL QUE VOUS NOUS ENVERREZ DE TRIESTE, TOUS SE
    LÈVERONT EN MASSE POUR L’INDÉPENDANCE DE LA HONGRIE. XRZAH.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: TOUT EST PRÊT. AU PREMIER SIGNAL QUE VOUS NOUS ENVERREZ DE TRIESTE, TOUS SE
    LÈVERONT EN MASSE POUR L’INDÉPENDANCE DE LA HONGRIE. XRZAH.
- en: 'It translates to this:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 它的翻译如下：
- en: All is ready. At the first signal you send us from Trieste, all will stand up
    en masse for the independence of Hungary. Xrzah
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 一切准备就绪。你从的里雅斯特发出的第一个信号一到，所有人都会集体站起来支持匈牙利独立。Xrzah
- en: XRZAH is the sender’s codename.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: XRZAH 是发件人的代号。
- en: The French plaintext (TOUT EST PRÊT . . .) is exactly the message contained
    in Jules Verne’s French original edition of *Mathias Sandorf*. In the English
    translation of this novel (at least, the one we found online), the message was
    not translated.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 法语明文（TOUT EST PRÊT...）正是儒勒·凡尔纳的法文原版《马提亚斯·桑多尔夫》中的信息。在该小说的英文翻译中（至少是我们在线找到的版本），该信息并未被翻译。
- en: Note that Pommerening didn’t use any special information about turning grilles
    in his codebreaking process. He used only multiple anagramming to determine the
    order of the thirty-six letters in each line.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Pommerening 在破译过程中并未使用任何关于旋转格栅的特殊信息。他仅使用了多次的字母重排来确定每行中三十六个字母的顺序。
- en: Identifying the kind of grille used is usually trivial if one knows both the
    plaintext and the ciphertext. However, in this case, no turning grille can produce
    the given ciphertext from the given plaintext, at least with typical methods.
    However, if we write each line backward, we can find a grille that fits. The turning
    grille used for this transformation can be seen in [Figure 11-13](#figure11-13).
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 确定所使用的格栅种类通常很容易，如果已知明文和密文。然而，在这种情况下，没有任何旋转格栅能够使用典型的方法从给定的明文生成密文。然而，如果我们将每行倒着写，就能找到合适的格栅。用于这种转换的旋转格栅可以在
    [图11-13](#figure11-13) 中看到。
- en: '![](image_fi/502727c11/f11013.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11013.png)'
- en: 'Figure 11-13: The turning grille used for the cipher message in Jules Verne’s
    1885 novel *Mathias Sandorf*. The letters seen through the holes read (from the
    bottom) (HON)GRIE XRZAH (Hungary XRZAH), the final part of the plaintext.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-13：用于《马提亚斯·桑多尔夫》1885年版中的加密信息的旋转格栅。通过孔洞看到的字母按顺序排列为（从底部开始）（HON）GRIE XRZAH（匈牙利
    XRZAH），这是明文的最后部分。
- en: 'As has been shown, the third line of the plaintext needs to be read before
    the second and the first one. In addition, each line must be read backward. These
    observations can be explained in a simple way: the encipherer wrote the whole
    message backward before encrypting it in chunks of thirty-six letters, each with
    a 6 × 6 turning grille.'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所示，明文的第三行需要在第二行和第一行之前读取。此外，每行必须倒着读。这些观察可以通过一个简单的方式来解释：加密者在加密之前，将整个信息倒着写，然后将其分成三十六个字母一组，并使用每个6
    × 6的旋转格栅加密。
- en: Challenges
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 挑战
- en: The Friedmans’ Christmas card
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 弗里德曼夫妇的圣诞卡
- en: The Christmas card in [Figure 11-14](#figure11-14) was created by world-renowned
    codebreakers William and Elizebeth Friedman in 1928.^([11](b06.xhtml#c11-endnote-11))
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [11-14](#figure11-14) 中的圣诞卡是世界著名的密码破译专家威廉和伊丽莎白·弗里德曼于1928年创作的。^([11](b06.xhtml#c11-endnote-11))
- en: '![](image_fi/502727c11/f11014.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11014.png)'
- en: 'Figure 11-14: An encrypted Christmas card sent by William and Elizebeth Friedman
    in 1928'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-14：威廉和伊丽莎白·弗里德曼在1928年发送的加密圣诞卡
- en: 'Here’s a transcript. Note that, in the original, the number 28 at the end is
    treated as one character:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个抄本。请注意，原文中末尾的数字28视为一个字符：
- en: '`ABFWORREC`'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '`ABFWORREC`'
- en: '`U SRIYEPN G`'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`U SRIYEPN G`'
- en: '`CT HARSI OS`'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`CT HARSI OS`'
- en: '`YMO UTE AWN`'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '`YMO UTE AWN`'
- en: '`ETLM AESP`'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '`ETLM AESP`'
- en: '`OSRQ DUOI`'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '`OSRQ DUOI`'
- en: '`GHRO TEOE`'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`GHRO TEOE`'
- en: '`FTX MTE UAP`'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '`FTX MTE UAP`'
- en: '`GI RTASM NH`'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '`GI RTASM NH`'
- en: '`O DGCSAIH E`'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '`O DGCSAIH E`'
- en: '`NEETRREE28`'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`NEETRREE28`'
- en: This cryptogram is straightforward to solve, possibly to make it easier for
    the Friedmans’ non-cryptanalyst friends! Just use the turning grille depicted
    on the left side of the card. If you want a harder challenge, try to decipher
    this encrypted message without using the grille.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 这个密码非常容易解开，可能是为了让弗里德曼夫妇的非密码学朋友们能够更轻松地解密！只需使用卡片左侧展示的旋转格栅。如果你想挑战更高的难度，可以尝试在不使用格栅的情况下解密这个加密信息。
- en: Jew-Lee and Bill’s Cryptocablegram
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Jew-Lee 和 Bill 的加密电报
- en: The “Cryptocablegram” in [Figure 11-15](#figure11-15) was created by modern
    codebreaking enthusiasts Jew-Lee Lann-Briere and Bill Briere for their talk about
    William and Elizebeth Friedman at the NSA Symposium on Cryptologic History in
    2017.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-15](#figure11-15) 中的“Cryptocablegram”是由现代破译爱好者 Jew-Lee Lann-Briere 和
    Bill Briere 为他们在 2017 年 NSA 密码学历史研讨会上的讲座关于 William 和 Elizebeth Friedman 所创作的。'
- en: '![](image_fi/502727c11/f11015.png)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11015.png)'
- en: 'Figure 11-15: A challenge cipher created by Jew-Lee Lann-Briere and Bill Briere'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-15：由 Jew-Lee Lann-Briere 和 Bill Briere 创作的挑战密码
- en: 'Jew-Lee and Bill applied two encryption steps to the plaintext. First, they
    encrypted it with a simple substitution cipher. Then, they used a turning grille.
    Here’s the table that inverts the substitution:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 'Jew-Lee 和 Bill 对明文应用了两步加密。首先，他们使用简单的替换密码加密了它。然后，他们使用了转盘栅栏。以下是逆转替换的表格：  '
- en: '`ABCDEFGHIJKLMNOPQRSTUVWXYZ`'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '`ABCDEFGHIJKLMNOPQRSTUVWXYZ`'
- en: '`HJKLOPQSTUVWXYZFRIEDMANBCG`'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '`HJKLOPQSTUVWXYZFRIEDMANBCG`'
- en: There is an easy way to solve this cryptogram—and a hard one. Without any further
    hints, can you decipher this turning grille encryption?
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这个密码谜题有一种简单的解法，也有一种困难的解法。在没有更多提示的情况下，你能解开这个转盘栅栏加密吗？
- en: A MysteryTwister challenge
  id: totrans-225
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个 MysteryTwister 挑战
- en: MysteryTwister ([https://mysterytwister.org](https://mysterytwister.org)) is
    a large crypto puzzle website with hundreds of challenges, ranging from easy to
    difficult, and a community of thousands of members trying to solve them to gain
    points. One of its many difficult cryptograms involves a turning grille ([Figure
    11-16](#figure11-16)).^([12](b06.xhtml#c11-endnote-12))
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: MysteryTwister ([https://mysterytwister.org](https://mysterytwister.org)) 是一个大型加密谜题网站，拥有数百个挑战，难度从简单到困难不等，还有一个由成千上万的会员组成的社区，他们通过解谜来赚取积分。其众多困难的密码谜题之一涉及转盘栅栏加密（[图
    11-16](#figure11-16)）。^([12](b06.xhtml#c11-endnote-12))
- en: '![](image_fi/502727c11/f11016.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/502727c11/f11016.png)'
- en: 'Figure 11-16: A 2011 turning grille challenge available on the MysteryTwister
    website'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-16：2011 年的转盘栅栏挑战，可在 MysteryTwister 网站上找到
- en: The solution is an English sentence. If you want a hint, check out [https://codebreaking-guide.com/challenges/](https://codebreaking-guide.com/challenges/).
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案是一个英语句子。如果你想要提示，可以查看 [https://codebreaking-guide.com/challenges/](https://codebreaking-guide.com/challenges/)。
- en: A Kerckhoffs cryptogram
  id: totrans-230
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个 Kerckhoffs 密码
- en: Earlier in this chapter, we introduced a turning grille cryptogram published
    in 1883 by Auguste Kerckhoffs ([Figure 11-4](#figure11-4)). The plaintext is French.
    Can you solve it?
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章早些时候，我们介绍了 1883 年由 Auguste Kerckhoffs 发布的转盘栅栏密码（[图 11-4](#figure11-4)）。明文是法语。你能解开它吗？
