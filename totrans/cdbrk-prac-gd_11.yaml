- en: '11'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Turning grille transposition ciphers
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11001.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It should come as no surprise that there are types of transposition ciphers
    other than the two systems, complete and incomplete columnar transposition, covered
    in the previous chapters. Here are a few examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Rubik’s Cube encryption*: Douglas W. Mitchell proposed a transposition cipher
    that uses a Rubik’s Cube.^([1](b06.xhtml#c11-endnote-1)) The plaintext is written
    on the fields of the cube. A sequence of moves forms the key. Subsequently, one
    reads the ciphertext from the cube. When used properly, this kind of encryption
    is difficult, yet not impossible, to break.^([2](b06.xhtml#c11-endnote-2))'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Crossword encryption*: In World War II, German spies sometimes used crossword
    puzzles as keys for transposition ciphers.^([3](b06.xhtml#c11-endnote-3)) The
    sender wrote their message in the empty fields while the black fields remained
    empty. Afterward, the letters were read out column-wise. The receiver had to follow
    the same procedure with the same crossword puzzle in reverse order. Though this
    system is clever, we know today that enemy cryptanalysts of the era broke it.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Rasterschlüssel 44*: The German army also used this kind of transposition
    cipher during World War II. It is based on rectangular forms that look similar
    to crossword puzzles.^([4](b06.xhtml#c11-endnote-4)) This system was mainly applied
    to less-important messages and as an Enigma substitute. The British could break
    this kind of encryption, but deciphering it was laborious and often took several
    days. As the intelligence gained from these decipherments was usually not vital,
    they finally gave up trying to break Rasterschlüssel 44 messages, deciding it
    was not worth the effort.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 11-1](#figure11-1) illustrates these three transposition types.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11001.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-1: Examples of various transposition types: (a) a Rubik’s Cube being
    used as a cipher device; (b) an encryption method based on a crossword puzzle
    (used by a secret agent in World War II); and (c) a form used for the German World
    War II cipher Rasterschlüssel 44'
  prefs: []
  type: TYPE_NORMAL
- en: There are many other types of transposition ciphers commonly mentioned in cryptography
    books; however, we have not included them here because they tend not to be used
    in practice, only as puzzle challenges for crypto-enthusiasts. For example, competitions
    of the American Cryptogram Association routinely include systems such as the rail
    fence cipher and route transposition.^([5](b06.xhtml#c11-endnote-5))
  prefs: []
  type: TYPE_NORMAL
- en: 'Apart from these, there is one transposition method encountered so often that
    it merits its own chapter: the turning grille encryption.'
  prefs: []
  type: TYPE_NORMAL
- en: How turning grille encryption works
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The sample Christmas card in [Figure 11-2](#figure11-2), which could have been
    sent in 2009 from one crypto-enthusiast to another, bears an encrypted inscription
    consisting of thirty-six letters: `TDHOAA PYHPEH UNFYAS MFNROH OLTIII NLMGYT`.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11002.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-2: A Christmas card encrypted with a turning grille'
  prefs: []
  type: TYPE_NORMAL
- en: The plaintext of this inscription is `HAPPY HOLIDAYS FROM THE HUNTINGTON FAMILY`.
    It was encrypted with a so-called turning grille, also known as a Fleissner grille
    after nineteenth-century crypto book author Edouard Fleissner von Wostrowitz (1825–1888).
  prefs: []
  type: TYPE_NORMAL
- en: 'A *turning grille* is usually a square stencil with holes that is used in four
    steps. In each step, a quarter of the plaintext is written into the holes from
    left to right and top to bottom. Each step is followed by a ninety-degree clockwise
    turn of the grille. For example, here are the steps for encrypting the aforementioned
    `HAPPY HOLIDAYS . . .` message with a 6 × 6 grille:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11002.png)'
  prefs: []
  type: TYPE_IMG
- en: 'When we remove the stencil after the fourth step, we get the message on the
    Christmas card:'
  prefs: []
  type: TYPE_NORMAL
- en: '`T D H O A A`'
  prefs: []
  type: TYPE_NORMAL
- en: '`P Y H P E H`'
  prefs: []
  type: TYPE_NORMAL
- en: '`U N F Y A S`'
  prefs: []
  type: TYPE_NORMAL
- en: '`M F N R O H`'
  prefs: []
  type: TYPE_NORMAL
- en: '`O L T I I I`'
  prefs: []
  type: TYPE_NORMAL
- en: '`N L M G Y T`'
  prefs: []
  type: TYPE_NORMAL
- en: The turning grille encryption method is a transposition cipher. The grille can
    be of any size but must be square. Most turning grilles we have encountered have
    an even number of rows and columns, because if the stencil uses an odd number
    of rows, there will be a “center” to the square, which usually remains empty.
  prefs: []
  type: TYPE_NORMAL
- en: The larger a turning grille, the more secure it is.
  prefs: []
  type: TYPE_NORMAL
- en: 'To construct a turning grille, one can proceed, as shown in [Figure 11-3](#figure11-3),
    by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Begin with a rectangular matrix that is one-quarter the size of the final grille.
    For example, if your final grille is 6 × 6, meaning that it has four quarters,
    each of which is 3 × 3, start with one of those 3 × 3 sections. In this smaller
    section, which has nine possible positions, write the numbers 1 through 4 in random
    locations, filling in all nine locations. (No matter the size of your grille,
    you will always use the numbers 1 through 4, as these represent the four directions
    in which the grille will be turned.)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Place the smaller matrix on top of the larger grille’s top-left corner and copy
    the 1 sections to the larger grille. Next, move the smaller matrix to the top
    right of the grille, rotate it ninety degrees clockwise, and then mark the 2s
    in the larger grille. Move the smaller matrix to the bottom right of the grille,
    again rotating it ninety degrees clockwise, and then mark the 3s. Finally, move
    the smaller matrix to the bottom left of the grille, rotating it again by ninety
    degrees, and mark the 4s.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Punch or cut holes in the larger matrix wherever there is a number.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The grille constructed in [Figure 11-3](#figure11-3) is the one that was used
    to encrypt the Christmas card.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11003.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-3: A turning grille can be constructed with a square matrix that
    is filled with numbers from 1 to 4 at random. The resulting grille is four times
    as big.'
  prefs: []
  type: TYPE_NORMAL
- en: A message encrypted with this stencil must have exactly thirty-six letters.
    If it has fewer, we’ll need to add a few nulls.
  prefs: []
  type: TYPE_NORMAL
- en: How to detect a turning grille encryption
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Turning grille cryptograms are usually easy to detect. If a message is written
    in a square form and if frequency analysis indicates that it is a transposition
    cipher, chances are that you are dealing with a turning grille ciphertext. Of
    course, it is easy to arrange a message of this kind in a form other than a square,
    but experience shows that many turning grille users waive this simple security
    measure. The message in [Figure 11-4](#figure11-4), which was published by Dutch
    cryptologist Auguste Kerckhoffs (1835–1903) in his 1883 book *La* *Cryptographie
    Militaire*, is a typical example.^([6](b06.xhtml#c11-endnote-6))
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11004.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-4: A turning grille cryptogram created by Auguste Kerckhoffs in the
    nineteenth century'
  prefs: []
  type: TYPE_NORMAL
- en: If a message is not written in square form, the message length is a possible
    indicator that you are dealing with a turning grille. A turning grille with an
    even line length produces messages that have the length of a squared even number
    (for instance, 16, 36, 64, or 100). If the line length is odd and the square in
    the middle is left empty, the message length is a squared odd number minus one
    (for instance, 24 or 48). Of course, this length, too, can be changed, for instance,
    by adding a few nulls. But again, in our experience, most turning grille users
    do not take this extra step to make their system more secure.
  prefs: []
  type: TYPE_NORMAL
- en: How to break a turning grille encryption
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Breaking a turning grille cryptogram works very well with hill climbing cryptanalysis,
    which is an iterative computer technique we will introduce in [Chapter 16](c16.xhtml).
    Still, it is possible to break a turning grille cryptogram by hand, though you
    usually need a crib or at least a few letters from the plaintext that can be guessed.
    We will demonstrate this strategy with the cipher message on the simulated birthday
    card in [Figure 11-5](#figure11-5).
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11005.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-5: The message on this birthday card (created by the authors for
    this book) is encrypted using a turning grille cipher.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a transcript of the message:'
  prefs: []
  type: TYPE_NORMAL
- en: '`H L H O D V`'
  prefs: []
  type: TYPE_NORMAL
- en: '`T A I A E P`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Y B P E T T`'
  prefs: []
  type: TYPE_NORMAL
- en: '`I Y L O H T`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Y B O L W Y`'
  prefs: []
  type: TYPE_NORMAL
- en: '`I E R U T N`'
  prefs: []
  type: TYPE_NORMAL
- en: This cryptogram consists of thirty-six letters written in a square. Analysis
    reveals letter frequencies that are similar to that of the English language. We
    therefore assume that we are dealing with a turning grille encryption.
  prefs: []
  type: TYPE_NORMAL
- en: Can we guess a plaintext word? Considering that this message is a birthday greeting,
    BIRTHDAY is a promising candidate. This guess is confirmed by the fact that the
    letters B, I, R, T, H, D, A, and Y all appear in the cryptogram.
  prefs: []
  type: TYPE_NORMAL
- en: One of the inherent properties of every turning grille message is that the average
    distance between two letters that are neighbors in the plaintext is four (i.e.,
    there are three letters in between them), no matter the size of the grid. This
    is because the grille always has exactly four different positions.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, our first step is to find the letters of the crib, bearing in mind this
    average letter interval. If we look for BIRTHDAY, finding the word’s start is
    easy, as there is only one B in the message. Continuing on to the right, we encounter
    an I five cells later. There are also an R and a T in the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11003.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Assuming that we have discovered the letters BIRT from BIRTHDAY, we now turn
    the grille 180 degrees and place it along the top of the grid to see which letters
    are “seen through the holes”:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11004.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The four squares we have identified show the letters LOVE—a word that makes
    sense on a birthday card. Let’s now look for the letters HDAY, which we expect
    to follow BIRT. As the T of BIRT stands close to the end of the cryptogram, we
    need to look for HDAY at its beginning. There are four different possibilities
    (indicated by squares with solid lines; the dotted squares indicate the letter
    sequences we get when we turn this proposed grille fragment by 180 degrees):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11005.png)'
  prefs: []
  type: TYPE_IMG
- en: The potential four-letter sequences we get when turning the grille are TWEN,
    HLIR, TOEN, and TOEU. All of these might appear in an English text. However, as
    we are dealing with a birthday card, TWEN makes the most sense, because TWENTY
    or TWENTIETH might refer to the age of the receiver. This means that the first
    of the four options is the most likely one. Now, we have identified two four-hole
    fragments of the grille. They can be connected to one five-hole fragment, as shown
    in [Figure 11-6](#figure11-6).
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11006.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-6: Two grille fragments that fit together'
  prefs: []
  type: TYPE_NORMAL
- en: The N of TWEN is the last letter in the last line. If we assume that the next
    letter is T (as in TWENTY or TWENTIETH), we need to look at the top of the grid
    for the continuation. As an aid, we turn the five-hole grille fragment by ninety
    degrees.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11006.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In fact, the grille fragment now indicates a T at a position that makes sense.
    What letters might be between the T and BIRT? The sequence IETH would make sense,
    as it renders TWENTIETH BIRTHDAY. The positions of the I and the H of IETH are
    clear. (Note that the I at the beginning of the fourth line can’t be the right
    one, as there is no ETH after it.) There are two Es, but the first one is already
    used. It is unclear, though, which of the two Ts is the right one:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11007.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To determine which T is correct, we again turn the grille fragment by 180 degrees:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11008.png)'
  prefs: []
  type: TYPE_IMG
- en: It should be apparent that the letter sequence BILLY is more likely than BYLLY.
    This means that the second T is the right one.
  prefs: []
  type: TYPE_NORMAL
- en: 'We have now found the position of eight of the nine holes in the grille. For
    the remaining one, there are four choices: I, T, Y, and L:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11009.png)'
  prefs: []
  type: TYPE_IMG
- en: Only Y makes sense here, as it renders us HAPPYTWEN for the first nine letters
    of the plaintext. We are done. [Figure 11-7](#figure11-7) shows the grille we
    have derived.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11007.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-7: The grille used to encrypt the birthday card'
  prefs: []
  type: TYPE_NORMAL
- en: The plaintext is `HAPPY TWENTIETH BIRTHDAY TO YOU LOVE BILLY`.
  prefs: []
  type: TYPE_NORMAL
- en: Success stories
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Paolo Bonavoglia’s turning grille solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Our colleague Paolo Bonavoglia, a prolific modern author of articles about Italian
    cryptologic history, is also the grandson of Luigi Sacco (1883–1970). Sacco was
    a notable Italian cryptologist who, among other achievements, set up a cipher
    office for the Italian army during World War I to break messages from the Austrian
    and German armies.
  prefs: []
  type: TYPE_NORMAL
- en: In a notebook that his grandfather left behind, Paolo found numerous German
    ciphertexts, including the one depicted in [Figure 11-8](#figure11-8).^([7](b06.xhtml#c11-endnote-7))
    He set out to solve this apparently unsolved message. The letter `Ö`, which appears
    in the first line, confirmed to Paolo that the message was in German. His eye
    was also immediately drawn to the presence of the letters `X` and `Y` in the lower-left
    corner, as both letters are quite rare in German texts. Paolo therefore suspected
    that the two letters had been used as nulls to complete the grille.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11008.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-8: A turning grille cryptogram Paolo Bonavoglia found in a notebook
    belonging to his grandfather, Luigi Sacco'
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, Paolo guessed that the cryptogram contained the word SUCHE (SEARCH)
    or SUCHEN (TO SEARCH), starting on the right-hand side. Any of the text’s four
    Ss, three Us, four Es, and two Ns could form one of these words. Paolo had to
    check dozens of combinations, but after many attempts, he found the following
    solution:'
  prefs: []
  type: TYPE_NORMAL
- en: ES WURDEN DREI PUNKTE GESEHEN ÖTLLICH WEITESRSSUCHEN XY
  prefs: []
  type: TYPE_NORMAL
- en: 'The word ÖTLLICH is misspelled; it should be ÖSTLICH (EAST OF). This message
    translates to: THREE POINTS HAVE BEEN SEEN. KEEP ON SEARCHING IN THE EAST XY.'
  prefs: []
  type: TYPE_NORMAL
- en: Paolo published his solution in 2017, and shortly afterward, New Zealand–based
    crypto expert Bart Wenmeckers broke the same cryptogram with a computer-based
    hill-climbing method (see [Chapter 16](c16.xhtml)).
  prefs: []
  type: TYPE_NORMAL
- en: 'As an interesting side note, while we were writing our book and asking these
    brilliant codebreakers to assist with reviewing our work, when Tobias Schrödel
    proofread this chapter in 2020, he discovered something previously unknown! Double-checking
    Sacco’s notebook page containing the turning grille cryptogram, he noticed a sequence
    of forty-eight numbers, starting with 1, 37, 25, 26, 38, and 2\. He realized that
    this was the solution of the ciphertext: letter 1 in the ciphertext (E) is at
    position 1 in the plaintext, letter 2 in the ciphertext (E) is at position 37
    in the plaintext, letter 3 in the ciphertext (N) is at position 25 in the plaintext,
    and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: Tobias sent this information to Paolo, who had not made the connection; this
    meant that his grandfather had solved this ciphertext and left an encrypted clue
    behind!
  prefs: []
  type: TYPE_NORMAL
- en: André Langie’s turning grille solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In his marvelous 1922 book *Cryptography*, Swiss cryptologist André Langie (1871–1961)
    tells the story of a gentleman who received an encrypted message while staying
    in a hotel called the North Pole.^([8](b06.xhtml#c11-endnote-8)) The sender was
    a person this gentleman knew, and the two had agreed that the cipher would be
    a turning grille. However, the man in the hotel had lost the notes that contained
    a description of the grille, so he could not decrypt the message. Thus, he contacted
    Langie.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the sixty-four-character English version of the message. Different
    versions were provided in each translation of the book:'
  prefs: []
  type: TYPE_NORMAL
- en: AITEGFLYTBOEEHREAUWNANOARRDRTEETHOSHFPETAPOTOYHLRETIHENEMGAOARNT
  prefs: []
  type: TYPE_NORMAL
- en: To decrypt the message, Langie wrote it down in a grid format and numbered the
    sixty-four squares for easy identification (see [Figure 11-9](#figure11-9)). Langie’s
    attention was immediately drawn to the letters A and T (squares 1 and 3), as AT
    is a common word in English and one that might easily form the beginning of a
    message. Accordingly, he marked the position of these two letters on tracing paper
    and turned his grille by 180 degrees.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11009.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-9: A turning grille cryptogram solved by André Langie in the early
    twentieth century'
  prefs: []
  type: TYPE_NORMAL
- en: The marks on the tracing paper coincided with the letters R and T (squares 62
    and 64). RT is a common word ending, and it is evident that, from the last two
    lines, one could easily extract the word HEART in squares 53, 54 (or 56), 59 (or
    61), 62, and 64\. Marking these and again reversing the tracing paper, Langie
    found, in the corresponding squares—1, 3, 4 (or 6), 9 (or 11), and 12—the letters
    ATE (or F), T (or O), and E. As this was not very satisfactory, he abandoned the
    combination and tried another.
  prefs: []
  type: TYPE_NORMAL
- en: Next, Langie turned his attention to the second line and decided to mark THE
    (squares 9, 14, and 16), the most common trigraph in English. Reversing the tracing
    paper brought the marks to the corresponding squares 49, 51, and 56 in the sixth
    line, indicating the letters RTE—a promising combination. Looking for the vowel
    that preceded it, Langie first noticed the O (in square 45). Three squares earlier
    (at 42) was a P. He now had the group PORTE, which seemed to call for the final
    R, which occurred in the last line, at square 62.
  prefs: []
  type: TYPE_NORMAL
- en: Langie again turned the paper by 180 degrees, which brought to light T (square
    3) and NO (20 and 23), producing the sequence TTHENO. The first of these letters
    was doubtlessly the final one of some other word, and the last two were the beginning
    of a new word.
  prefs: []
  type: TYPE_NORMAL
- en: The next step was, tentatively, to begin the construction of the grille, which
    Langie did by drawing squares around the letters PORTER (42, 45, 49, 51, 56, and
    62). He then made a small mark on each of these six letters. Next, he turned the
    tracing paper, this time by only ninety degrees. His six marked squares now covered
    the letters IOUSAG (2, 11, 18, 35, 41, and 58). These he labeled with a different
    mark.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11010.png)'
  prefs: []
  type: TYPE_IMG
- en: 'A further turn brought him to the group `TTHENO` (squares 3, 9, 14, 16, 20,
    and 23), which he marked, too:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11011.png)'
  prefs: []
  type: TYPE_IMG
- en: 'A final turn produced `LAEHEN` (squares 7, 24, 30, 47, 54, and 63), which he
    indicated in another way:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11012.png)'
  prefs: []
  type: TYPE_IMG
- en: Langie had now neutralized twenty-four out of the sixty-four squares, thereby
    considerably narrowing his field of research. Coming back to his original group,
    `PORTER`, he looked for a word likely to precede it and was favorably inclined
    toward `THE` (32, 36, and 39). There were two `H`s between the `T` and `E`, and
    he adopted the second experimentally.
  prefs: []
  type: TYPE_NORMAL
- en: Marking these and reversing the tracing paper, Langie found the three corresponding
    letters to be `RTH` (26, 29, and 33). This enlarged the group `TTHENO` to `T`
    `THE NORTH`—a result that proved he was on the right track. Accordingly, he marked
    in four colors the corresponding letters in the four positions, bringing the total
    number of neutralized squares to thirty-six.
  prefs: []
  type: TYPE_NORMAL
- en: 'Progress subsequently was by leaps and bounds. For instance, upon scrutinizing
    the words THE NORTH and the unmarked letters following them, Langie discerned
    a P and an O and thought of POLE. These letters were duly found in squares 38,
    43, 48, and 50\. Having marked these and the corresponding letters in the other
    positions, he found that only twelve squares remained to be accounted for. With
    some additional guessing, he deduced the following plaintext:'
  prefs: []
  type: TYPE_NORMAL
- en: IF YOU ARE STAYING AT THE NORTH POLE HOTEL BEWARE OF THE MANAGER AND THE PORTER
  prefs: []
  type: TYPE_NORMAL
- en: Karl de Leeuw’s turning grille solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In 1993, crypto expert Karl de Leeuw, who is a colleague of ours, and crypto
    expert Hans van der Meer found in an Amsterdam archive an encrypted message ([Figure
    11-10](#figure11-10)) left behind by Dutch governor and Prince of Orange William
    V (1748–1806).^([9](b06.xhtml#c11-endnote-9)) The cryptogram’s shape suggested
    that the writer had used a 16 × 16 turning grille. As the message was too long
    for the grille’s 256 fields, some fields contained two letters.
  prefs: []
  type: TYPE_NORMAL
- en: The letter frequencies indicated that the plaintext language was German. The
    letter Ü in the second-to-last position of the third line, with its distinctive
    dots, confirmed this suspicion.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11010.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-10: Eighteenth-century turning grille cryptogram solved by Karl de
    Leeuw and Hans van der Meer in the twentieth century'
  prefs: []
  type: TYPE_NORMAL
- en: In 1993, the technique of breaking turning grille ciphers with computer support
    (such as with hill climbing) was still in its infancy. Karl and Hans therefore
    tried their luck with manual methods, which is usually quite difficult when the
    stencil is as large as the one used here. Nevertheless, the two found a surprisingly
    simple way to decipher the cryptogram. They took advantage of the fact that the
    writer had been sloppy when placing letters into the holes. This can be seen most
    clearly in line 6, where the letters E (at position 8), I (at position 10), and
    N (at position 16) are written slightly lower than the others, which implies that
    they were all written with the stencil in a certain position.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11013.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In line 7, the same applies to G, E, G, and A:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/g11014.png)'
  prefs: []
  type: TYPE_IMG
- en: In the eighth line, though not quite so clear, N, G, E, and N are a little lower
    than the other letters, too. Together, these letters form EINGEGANGEN, which is
    a German word meaning GONE IN.
  prefs: []
  type: TYPE_NORMAL
- en: 'Reversing the stencil resulted in BIERWELCHESI, which also makes sense in German
    (BIER means BEER and WELCHES means WHICH). Based on these observations, Karl and
    Hans were able to reconstruct the positions of eleven holes, which gave them a
    total of forty-four letters. Then, with the technique described earlier in this
    chapter, they could solve the rest of the message. The grille they derived can
    be seen in [Figure 11-11](#figure11-11). Here’s the plaintext:'
  prefs: []
  type: TYPE_NORMAL
- en: die franszosen sind laut eingegangener erkundigung und nach richt von camberg
    abmarchiret es sollen aber dem verlaut nach andere an deren stelle einrucken vielleicht
    fürchten sie das en gelische bier welches ihnen wohl übel bekommen durfte wan
    es recht getruncken wird ich wünschet dass sie die rechte maass be kommen mögten
    [separation mark] koenig
  prefs: []
  type: TYPE_NORMAL
- en: 'It translates to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: According to an inquiry that has arrived and a message, the French have left
    Camberg. However, according to rumors, others will replace them soon. Perhaps
    they fear the English beer, which will make them sick when it is drunk. I hope
    they will get the right amount of it. Koenig
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11011.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-11: The turning grille Karl de Leeuw and Hans van der Meer derived
    when they solved the message left behind by Dutch governor William V. This message
    was written in a somewhat sloppy way, which allowed it to be solved more easily.
    In addition, the regular pattern of the holes is helpful for a codebreaker.'
  prefs: []
  type: TYPE_NORMAL
- en: Apparently, the author of this note was joking about English beer—certainly
    an interesting find, especially because they took the time to encrypt the joke!
  prefs: []
  type: TYPE_NORMAL
- en: The Mathias Sandorf cryptogram
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In his famous 1885 novel *Mathias Sandorf*, French author Jules Verne (1828–1905)
    describes two petty criminals who find an encrypted message attached to the leg
    of a carrier pigeon and later find a turning grille that they use to decrypt the
    cryptogram ([Figure 11-12](#figure11-12)). The message reads as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`IHNALZ ARNURO ODXHNP AEEEIL SPESDR EEDGNC`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ZAEMEN TRVREE ESTLEV ENNIOS ERSSUR TOEEDT`'
  prefs: []
  type: TYPE_NORMAL
- en: '`RUIOPN MTQSSL EEUART NOUPVG OUITSE ERTUEE`'
  prefs: []
  type: TYPE_NORMAL
- en: In 2000, German cryptology professor Klaus Pommerening published a paper that
    explains how a codebreaker could have solved the message without knowing the grille.^([10](b06.xhtml#c11-endnote-10))
    The codebreaking process Pommerening describes is too lengthy to be covered in
    full in our book, so we will use a few shortcuts.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start with Pommerening’s assumptions that the plaintext is in French,
    that each line of thirty-six letters is encrypted separately with a 6 × 6 turning
    grille, and that the same grille was used for each line.
  prefs: []
  type: TYPE_NORMAL
- en: For cryptanalysts, one of the nice things about the French language is that
    the letter Q is relatively frequent in short words, such as QUE, QUOI, and QUEL,
    and that, as in many other languages, Q is usually followed by a U. (The word
    CINQ, which means FIVE, is the only common exception.) This means that, when working
    with a French plaintext, looking for a Q is a good start. As we can see, the third
    row contains a Q in position 9\. Unfortunately, in the same line are five Us,
    which makes things a little more complex.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11012.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-12: The 1885 novel *Mathias Sandorf* by Jules Verne contains a message
    encrypted with a turning grille.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Pommerening knew that the same grille had been used for all three lines, so
    he could apply the technique of multiple anagramming (see [Chapter 9](c09.xhtml))
    to check the most plausible combination. With this method, the five Us after the
    Q in the third line lead to the following five options in the first and second
    lines:'
  prefs: []
  type: TYPE_NORMAL
- en: '`NH NX NE NP NG`'
  prefs: []
  type: TYPE_NORMAL
- en: '`VA VT VN VR VE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`QU QU QU QU QU`'
  prefs: []
  type: TYPE_NORMAL
- en: 'While the letter pairs NH, NX, VT, and VN are rare in French, NG and VE are
    quite common. For this reason, the last option looks best, so Pommerening assumed
    that it was correct. As QU is usually followed by E or I in French, he had eight
    plausible possibilities to proceed:'
  prefs: []
  type: TYPE_NORMAL
- en: '`NGN NGO NGD NGE NGR NGE NGN NGC`'
  prefs: []
  type: TYPE_NORMAL
- en: '`VEE VEE VES VES VER VET VED VET`'
  prefs: []
  type: TYPE_NORMAL
- en: '`QUI QUE QUE QUI QUE QUE QUE QUE`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Possibilities 4, 5, and 6 look promising. Typically, a codebreaker would have
    to check all three options, but to make things easier, let’s select the fifth
    block (the correct one, as will become clear). As another shortcut, we assume,
    based on the content of the novel, that NGR is a part of the word HONGRIE, which
    is French for HUNGARY. This assumption is supported by the fact that the first
    row of the cryptogram also contains the letters H and O (even two of each), providing
    Pommerening with four possible arrangements:'
  prefs: []
  type: TYPE_NORMAL
- en: '`HONGR HONGR HONGR HONGR`'
  prefs: []
  type: TYPE_NORMAL
- en: '`AEVER AEVER LEVER LEVER`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ULQUE UEQUE ALQUE AEQUE`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Pommerening now chose block 3, as the letter sequences `LEVER` and `ALQUE`
    make sense in French, while the letter combination `AE` is quite rare. He continued
    by appending an `I` to `HONGR` (remember that we want to construct the word `HONGRIE`),
    which produced two possibilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '`HONGRI HONGRI`'
  prefs: []
  type: TYPE_NORMAL
- en: '`LEVERZ LEVERO`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ALQUER ALQUEV`'
  prefs: []
  type: TYPE_NORMAL
- en: 'The second possibility seemed more plausible, as ERZ is not a common trigraph
    in French. Pommerening now needed an E after HONGRI, resulting in six variants:'
  prefs: []
  type: TYPE_NORMAL
- en: '`HONGRIE HONGRIE HONGRIE HONGRIE HONGRIE HONGRIE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`LEVERON LEVERON LEVEROI LEVEROS LEVEROT LEVEROO`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ALQUEVO ALQUEVU ALQUEVP ALQUEVI ALQUEVA ALQUEVR`'
  prefs: []
  type: TYPE_NORMAL
- en: 'He recognized here the word LEVERONT (“will stand up”), with the last letter
    missing. This meant that the initial two options were the most likely ones. The
    first appeared to be the correct one, as VO in the last line could be extended
    to VOUS (“you”). To produce this word, Pommerening added a U (omitting the S,
    as there were several choices for it):'
  prefs: []
  type: TYPE_NORMAL
- en: '`HONGRIEX`'
  prefs: []
  type: TYPE_NORMAL
- en: '`LEVERONT`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ALQUEVOU`'
  prefs: []
  type: TYPE_NORMAL
- en: 'The X didn’t fit especially well, but it could be padding. As the word LEVERONT
    is reflexive (the complete expression is SE LEVERONT), Pommerening now needed
    an E in the second line, before LEVERONT. Two of the ten Es in the second row
    were already absorbed, but there were still eight choices:'
  prefs: []
  type: TYPE_NORMAL
- en: '`NHONGRIEX LHONGRIEX RHONGRIEX OHONGRIEX`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ELEVERONT ELEVERONT ELEVERONT ELEVERONT`'
  prefs: []
  type: TYPE_NORMAL
- en: '`IALQUEVOU PALQUEVOU SALQUEVOU EALQUEVOU`'
  prefs: []
  type: TYPE_NORMAL
- en: '`NHONGRIEX AHONGRIEX SHONGRIEX DHONGRIEX`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ELEVERONT ELEVERONT ELEVERONT ELEVERONT`'
  prefs: []
  type: TYPE_NORMAL
- en: '`RALQUEVOU NALQUEVOU OALQUEVOU TALQUEVOU`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Options 1, 3, 5, and 6 looked the most promising. In a real codebreaking process,
    one would have to follow all four paths to find out the right one. However, this
    is only a summary, so we will only cover option 6, which is the correct one. In
    order to get SE LEVERONT, Pommerening needed an S at the beginning of the second
    line. There were four to choose from:'
  prefs: []
  type: TYPE_NORMAL
- en: '`DAHONGRIEX LAHONGRIEX EAHONGRIEX SAHONGRIEX`'
  prefs: []
  type: TYPE_NORMAL
- en: '`SELEVERONT SELEVERONT SELEVERONT SELEVERONT`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ENALQUEVOU GNALQUEVOU INALQUEVOU TNALQUEVOU`'
  prefs: []
  type: TYPE_NORMAL
- en: 'The second option renders LA HONGRIE (“the Hungary) in the first line, which
    looks good, as the French usually refer to nations with a definite article. Pommerening
    now searched the third row for extensions. He found SIGNAL QUE VOUS (“signal that
    you” or “signal which you”). Adding an I on the left side of the third line yielded
    two possibilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '`NLAHONGRIEX ELAHONGRIEX`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ESELEVERONT SSELEVERONT`'
  prefs: []
  type: TYPE_NORMAL
- en: '`IGNALQUEVOU IGNALQUEVOU`'
  prefs: []
  type: TYPE_NORMAL
- en: 'The first option led to nothing, so Pommerening took the second and added an
    S on the left side of the third line:'
  prefs: []
  type: TYPE_NORMAL
- en: '`UELAHONGRIEX RELAHONGRIEX DELAHONGRIEX`'
  prefs: []
  type: TYPE_NORMAL
- en: '`RSSELEVERONT ESSELEVERONT USSELEVERONT`'
  prefs: []
  type: TYPE_NORMAL
- en: '`SIGNALQUEVOU SIGNALQUEVOU SIGNALQUEVOU`'
  prefs: []
  type: TYPE_NORMAL
- en: The third variant stood out because of the sequence DE LA HONGRIE (“from Hungary”)
    in the first line.
  prefs: []
  type: TYPE_NORMAL
- en: 'For space reasons, we’ll skip the rest of the multiple-anagramming process.
    Pommerening proceeded to solve the rest of the cryptogram, resulting in the following
    plaintext:'
  prefs: []
  type: TYPE_NORMAL
- en: '`SSEPOURLI NDEPENDAN CEDELAHON GRIEXRZAH`'
  prefs: []
  type: TYPE_NORMAL
- en: '`SENVERREZ DETRIESTE TOUSSELEV ERONTENMA`'
  prefs: []
  type: TYPE_NORMAL
- en: '`TOUTESTPR ETAUPREMI ERSIGNALQ UEVOUSNOU`'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, this message only makes sense if one reads the third line first, then
    the second, and then the first:'
  prefs: []
  type: TYPE_NORMAL
- en: '`TOUTESTPR ETAUPREMI ERSIGNALQ UEVOUSNOU`'
  prefs: []
  type: TYPE_NORMAL
- en: '`SENVERREZ DETRIESTE TOUSSELEV ERONTENMA`'
  prefs: []
  type: TYPE_NORMAL
- en: '`SSEPOURLI NDEPENDAN CEDELAHON GRIEXRZAH`'
  prefs: []
  type: TYPE_NORMAL
- en: 'With punctuation, the plaintext reads as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: TOUT EST PRÊT. AU PREMIER SIGNAL QUE VOUS NOUS ENVERREZ DE TRIESTE, TOUS SE
    LÈVERONT EN MASSE POUR L’INDÉPENDANCE DE LA HONGRIE. XRZAH.
  prefs: []
  type: TYPE_NORMAL
- en: 'It translates to this:'
  prefs: []
  type: TYPE_NORMAL
- en: All is ready. At the first signal you send us from Trieste, all will stand up
    en masse for the independence of Hungary. Xrzah
  prefs: []
  type: TYPE_NORMAL
- en: XRZAH is the sender’s codename.
  prefs: []
  type: TYPE_NORMAL
- en: The French plaintext (TOUT EST PRÊT . . .) is exactly the message contained
    in Jules Verne’s French original edition of *Mathias Sandorf*. In the English
    translation of this novel (at least, the one we found online), the message was
    not translated.
  prefs: []
  type: TYPE_NORMAL
- en: Note that Pommerening didn’t use any special information about turning grilles
    in his codebreaking process. He used only multiple anagramming to determine the
    order of the thirty-six letters in each line.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying the kind of grille used is usually trivial if one knows both the
    plaintext and the ciphertext. However, in this case, no turning grille can produce
    the given ciphertext from the given plaintext, at least with typical methods.
    However, if we write each line backward, we can find a grille that fits. The turning
    grille used for this transformation can be seen in [Figure 11-13](#figure11-13).
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11013.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-13: The turning grille used for the cipher message in Jules Verne’s
    1885 novel *Mathias Sandorf*. The letters seen through the holes read (from the
    bottom) (HON)GRIE XRZAH (Hungary XRZAH), the final part of the plaintext.'
  prefs: []
  type: TYPE_NORMAL
- en: 'As has been shown, the third line of the plaintext needs to be read before
    the second and the first one. In addition, each line must be read backward. These
    observations can be explained in a simple way: the encipherer wrote the whole
    message backward before encrypting it in chunks of thirty-six letters, each with
    a 6 × 6 turning grille.'
  prefs: []
  type: TYPE_NORMAL
- en: Challenges
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Friedmans’ Christmas card
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Christmas card in [Figure 11-14](#figure11-14) was created by world-renowned
    codebreakers William and Elizebeth Friedman in 1928.^([11](b06.xhtml#c11-endnote-11))
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11014.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-14: An encrypted Christmas card sent by William and Elizebeth Friedman
    in 1928'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a transcript. Note that, in the original, the number 28 at the end is
    treated as one character:'
  prefs: []
  type: TYPE_NORMAL
- en: '`ABFWORREC`'
  prefs: []
  type: TYPE_NORMAL
- en: '`U SRIYEPN G`'
  prefs: []
  type: TYPE_NORMAL
- en: '`CT HARSI OS`'
  prefs: []
  type: TYPE_NORMAL
- en: '`YMO UTE AWN`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ETLM AESP`'
  prefs: []
  type: TYPE_NORMAL
- en: '`OSRQ DUOI`'
  prefs: []
  type: TYPE_NORMAL
- en: '`GHRO TEOE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`FTX MTE UAP`'
  prefs: []
  type: TYPE_NORMAL
- en: '`GI RTASM NH`'
  prefs: []
  type: TYPE_NORMAL
- en: '`O DGCSAIH E`'
  prefs: []
  type: TYPE_NORMAL
- en: '`NEETRREE28`'
  prefs: []
  type: TYPE_NORMAL
- en: This cryptogram is straightforward to solve, possibly to make it easier for
    the Friedmans’ non-cryptanalyst friends! Just use the turning grille depicted
    on the left side of the card. If you want a harder challenge, try to decipher
    this encrypted message without using the grille.
  prefs: []
  type: TYPE_NORMAL
- en: Jew-Lee and Bill’s Cryptocablegram
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The “Cryptocablegram” in [Figure 11-15](#figure11-15) was created by modern
    codebreaking enthusiasts Jew-Lee Lann-Briere and Bill Briere for their talk about
    William and Elizebeth Friedman at the NSA Symposium on Cryptologic History in
    2017.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11015.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-15: A challenge cipher created by Jew-Lee Lann-Briere and Bill Briere'
  prefs: []
  type: TYPE_NORMAL
- en: 'Jew-Lee and Bill applied two encryption steps to the plaintext. First, they
    encrypted it with a simple substitution cipher. Then, they used a turning grille.
    Here’s the table that inverts the substitution:'
  prefs: []
  type: TYPE_NORMAL
- en: '`ABCDEFGHIJKLMNOPQRSTUVWXYZ`'
  prefs: []
  type: TYPE_NORMAL
- en: '`HJKLOPQSTUVWXYZFRIEDMANBCG`'
  prefs: []
  type: TYPE_NORMAL
- en: There is an easy way to solve this cryptogram—and a hard one. Without any further
    hints, can you decipher this turning grille encryption?
  prefs: []
  type: TYPE_NORMAL
- en: A MysteryTwister challenge
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: MysteryTwister ([https://mysterytwister.org](https://mysterytwister.org)) is
    a large crypto puzzle website with hundreds of challenges, ranging from easy to
    difficult, and a community of thousands of members trying to solve them to gain
    points. One of its many difficult cryptograms involves a turning grille ([Figure
    11-16](#figure11-16)).^([12](b06.xhtml#c11-endnote-12))
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c11/f11016.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11-16: A 2011 turning grille challenge available on the MysteryTwister
    website'
  prefs: []
  type: TYPE_NORMAL
- en: The solution is an English sentence. If you want a hint, check out [https://codebreaking-guide.com/challenges/](https://codebreaking-guide.com/challenges/).
  prefs: []
  type: TYPE_NORMAL
- en: A Kerckhoffs cryptogram
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Earlier in this chapter, we introduced a turning grille cryptogram published
    in 1883 by Auguste Kerckhoffs ([Figure 11-4](#figure11-4)). The plaintext is French.
    Can you solve it?
  prefs: []
  type: TYPE_NORMAL
