["```\n$ **minikube kubectl -- apply -R -f monitoring/**\nnamespace/monitoring created\nserviceaccount/alertmanager created\nconfigmap/alertmanager-config created\ndeployment.apps/alertmanager created\nservice/alertmanager-service created\ncronjob.batch/bbs-warrior created\nconfigmap/grafana-dashboard-pods created\nconfigmap/grafana-dashboard-telnet-server created\nconfigmap/grafana-dashboards created\nconfigmap/grafana-datasources created\ndeployment.apps/grafana created\nservice/grafana-service created\nclusterrolebinding.rbac.authorization.k8s.io/kube-state-metrics created\nclusterrole.rbac.authorization.k8s.io/kube-state-metrics created\ndeployment.apps/kube-state-metrics created\nserviceaccount/kube-state-metrics created\nservice/kube-state-metrics created\nclusterrole.rbac.authorization.k8s.io/prometheus created\nclusterrolebinding.rbac.authorization.k8s.io/prometheus created\nconfigmap/prometheus-server-conf created\ndeployment.apps/prometheus created\nservice/prometheus-service created\n```", "```\n$ **minikube -n monitoring service grafana-service**\n|------------|-----------------|-------------|-----------------------------|\n| NAMESPACE  |      NAME       | TARGET PORT |             URL             |\n|------------|-----------------|-------------|-----------------------------|\n| monitoring | grafana-service |        3000 | http://192.168.99.105:31517 |\n|------------|-----------------|-------------|-----------------------------|\nOpening service monitoring/grafana-service in default browser...\n```", "```\n$ **minikube -n monitoring service alertmanager-service**\n`--snip--`\n```", "```\n$ **minikube -n monitoring service prometheus-service**\n`--snip--`\n```", "```\n$ **minikube kubectl -- get cronjobs.batch -l app=bbs-warrior**\nNAME                   SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE\nbbs-warrior            */1 * * * *   False     0        25s             60s \n```", "```\n$ **minikube kubectl -- get pods -l app=bbs-warrior**\nNAME                           READY   STATUS              RESTARTS   AGE\nbbs-warrior-1600646880-chkbw   0/1     Completed           0          60s\n```", "```\n**rate(telnet_server_connection_errors_total{job=\"kubernetes-pods\"}[2m])**\n```", "```\n**sum(rate(telnet_server_connection_errors_total{job=\"kubernetes-pods\"}[2m]))** **> 2**\n```", "```\n`--snip--`\n    global: null\n    receivers:\n  1 #- name: email\n    #  email_configs:\n    #  - send_resolved: true\n    #    to: <`GMAIL_USERNAME@gmail.com`>\n    #    from: <`GMAIL_USERNAME@gmail.com`>\n    #    smarthost: smtp.gmail.com:587\n    #    auth_username: <`GMAIL_USERNAME@gmail.com`>\n #    auth_identity: <`GMAIL_USERNAME@gmail.com`>\n    #    auth_password: <`GMAIL_PASSWORD`>\n  2 - name: none\n    route:\n      group_by:\n        - job\n      group_interval: 5m\n      group_wait: 10s\n    3 receiver: none\n      repeat_interval: 3h\n      routes:\n      4 - receiver: none\n          match:\n            severity: \"Critical\"\n```", "```\n- receiver: **email**\n```", "```\n$ **minikube kubectl -- apply -f monitoring/alertmanager/configmap.yaml**\nconfigmap/alertmanager-config configured\n```", "```\n$ **minikube kubectl -- -n monitoring rollout restart deployment alertmanager**\ndeployment.apps/alertmanager restarted\n```", "```\n$ **minikube kubectl -- -n monitoring logs -l app=alertmanager**\n```"]