- en: '24'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Tutorial: Technical Drawing'
  prefs: []
  type: TYPE_NORMAL
- en: You can use Inkscape to create technical drawings, too. Inkscape is not a CAD
    (computer-aided design) application, but it works very well for moderately complex
    technical drawings. If you already know how to use Inkscape, using it for this
    kind of work is a logical choice. As an example, let’s draw an isometric image
    of an engine part’s cross-section ([Figure 24-13](#fig24-13)).
  prefs: []
  type: TYPE_NORMAL
- en: The key to creating technical drawings in Inkscape is the use of grids ([7.2](c07.xhtml#section7.2)),
    snapping ([7.3](c07.xhtml#section7.3)), transforming by numbers ([6.6](c06.xhtml#section6.6)),
    and shapes, especially rectangles ([11.2](c11.xhtml#section11.2)). Those features
    allow you to create a 3D view of a complex piece quickly and precisely, without
    ever having to approximate or adjust anything by hand. Every object, handle, and
    node just snaps into its exact place. Once you get the hang of it, producing such
    drawings will be almost addictively easy.
  prefs: []
  type: TYPE_NORMAL
- en: 24.1 Setting Up the Grid
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: An *isometric* image is one where all three coordinate axes are separated by
    equal angles (60 degrees) and have the same scale. For example, in an isometric
    cube, all visible edges have the same length.
  prefs: []
  type: TYPE_NORMAL
- en: To start a grid to create the engine part drawing, open the **Document Properties**
    dialog ([7.2.1](c07.xhtml#section7.2.1)), choose the **Grids** tab, and create
    the default axonometric grid with both X and Z angles set to 30 degrees (measured
    from the horizontal), as shown in [Figure 24-1](#fig24-1). You may want to set
    the Spacing Y (the grid being isometric, it applies all three axes) to the minimum
    measurable distance in your drawing. For example, if all dimensions in your drawing
    are in millimeters and precise to the first fractional digit, set the grid spacing
    to 0.1 mm so you never have to place anything in between grid lines.
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-01.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-1: Setting up the isometric grid'
  prefs: []
  type: TYPE_NORMAL
- en: You can also change the major (darker) grid lines’ spacing; by default, they
    appear every five regular lines. When you zoom out, the regular grid lines disappear
    first.
  prefs: []
  type: TYPE_NORMAL
- en: 24.2 Making the Box
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's create the object’s bottom box. With the grid (and, by default, snapping
    to grid) on, use the Rectangle tool to draw a rectangle—any rectangle. Notice
    that the corners of the rectangle snap to the grid line intersections (pay attention
    to the snap indicator and tips, [7.3.2](c07.xhtml#section7.3.2)), but the rectangle
    is not isometric.
  prefs: []
  type: TYPE_NORMAL
- en: To skew it into the isometric projections, open the **Transform** dialog (Shift-Ctrl-M,
    [6.7](c06.xhtml#section6.7)), and on the **Skew** tab, specify 60 degrees for
    **Horizontal** skew and 30 degrees for**Vertical** skew. After you click **Apply**,
    the rectangle transforms to fit the grid; note that the rectangle’s resize handles
    now also move in the isometric projection ([11.2.1](c11.xhtml#section11.2.1)).
    Now, all you need to do is snap them to the corresponding grid intersections,
    as [Figure 24-2](#fig24-2) demonstrates.
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-02.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-2: Creating, skewing, and snapping the top of the box'
  prefs: []
  type: TYPE_NORMAL
- en: The box’s other two sides are even easier to create. For the front side, you
    need only 30 degrees of Vertical skew, with Horizontal skew set at 0\. The left
    side of the box is simply the front side duplicated (Ctrl-D) and flipped (H).
    After skewing and flipping, snapping the corners of all three rectangles to form
    a precise, solid, gapless 6×8×2 box is super easy. The X and Z units need to be
    an even number, so that the two grid lines intersect in the center of the top
    side ([Figure 24-3](#fig24-3)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-03.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-3: Creating the front and left sides of the box'
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have one box, you can quickly build up complex architectures by
    duplicating its sides and re-snapping the corners to new positions. However, this
    is not what we are going to do; the next step is rounding the box’s corners.
  prefs: []
  type: TYPE_NORMAL
- en: 24.3 Rounding Corners
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To round a rectangle’s corners ([11.2.2](c11.xhtml#section11.2.2)), grab the
    circular handle on a corner and drag it along the side. In the double-skewed top
    side of the box, rounding works as expected; the rectangle becomes rounded in
    its plane with appropriate projective distortion. While Ctrl-dragging one of the
    rounding handles, snap it to the nearest intersection so that the rounding radius
    is equal to one grid unit. Then, on the front and left sides, move the sizing
    handles to make them narrower by one grid unit on each side ([Figure 24-4](#fig24-4)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-04.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-4: Rounding the corners on top of the box'
  prefs: []
  type: TYPE_NORMAL
- en: To fill the gaps in the box’s corners, create a vertical cylinder and put copies
    (or clones) in all three of the box’s visible corners. You’ll also reuse it for
    the top cylinder of the engine part.
  prefs: []
  type: TYPE_NORMAL
- en: To make a cylinder, start with an ellipse, but you don't even need the Ellipse
    tool to make it. Instead, just duplicate the box’s top side and resize it to an
    isometric square of 2×2 grid units. Since resizing preserves the rounded corners,
    each with the radius of one unit, this produces a perfectly isometric ellipse
    ([Figure 24-5](#fig24-5)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-05.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-5: Creating an ellipse out of a rectangle'
  prefs: []
  type: TYPE_NORMAL
- en: To create a cylinder, you could duplicate this ellipse, move it down, and draw
    a flat non-isometric rectangle between them. Although workable, this method isn’t
    “clean,” because the ellipses’ extremities have no grid lines to which to snap
    the rectangle’s left and right edges. Such an approach requires turning off snapping
    and using manual tweaking with its inevitable speed/precision tradeoff. Let's
    try another method.
  prefs: []
  type: TYPE_NORMAL
- en: 'Convert a copy of this ellipse-like rectangle to path (Shift-Ctrl-C) and switch
    to the Node tool (F2). You will see what looks like four nodes on the path—but
    in fact there are eight: each visible node is actually two nodes, contributed
    by the two rounding arcs that meet there. To fix this, drag-select around each
    of these duplicate nodes in turn (the status bar should say *2 of 8 nodes selected*)
    and click the **Join selected nodes** button on the Node tool''s controls bar.
    Do this four times, so you end up with a path of four nodes.'
  prefs: []
  type: TYPE_NORMAL
- en: However, the ellipse’s left and right extremities don’t have nodes where you’ll
    need them. Select all nodes (Ctrl-A) and insert new nodes between each of the
    two selected nodes by pressing Insert ([12.5.3](c12.xhtml#section12.5.3)), as
    shown in [Figure 24-6](#fig24-6).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-06.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-6: Adding nodes at the ellipse’s extremities'
  prefs: []
  type: TYPE_NORMAL
- en: Now, select only the two nodes at the horizontal extremities (marked *left*
    and *right* in [Figure 24-6](#fig24-6)) and duplicate them (Shift-D). Add the
    three nodes in the bottom half of the ellipse to the selection by dragging around
    them with Shift. Grab the node that is tangent to the grid line (marked *tangent*)
    and Ctrl-drag it and the rest of the selected nodes downward until it all snaps
    at a level two units lower, creating the ideally precise cylinder outline. After
    that, all you need to do is add a copy of the original ellipse back into its place
    on top, and draw a horizontal gradient ([Figure 24-7](#fig24-7)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-07.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-7: Pulling out, shading, and capping a cylinder'
  prefs: []
  type: TYPE_NORMAL
- en: Group the cylinder, create three copies of it, and move each one to fill a gap
    in the rounded box. The cylinders will fit snugly into their places. To make the
    box look solid, just sort out the z-order and match the colors, as shown in [Figure 24-8](#fig24-8).
    Use the Dropper tool ([8.8](c08.xhtml#section8.8)) to copy colors from the flat
    sides to the gradient stops on the cylinders (or vice versa).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-08.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-8: The box is ready.'
  prefs: []
  type: TYPE_NORMAL
- en: 24.4 Making the Top Cylinder
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To create the top cylinder, make another copy of the corner cylinder and scale
    it up twice by pressing Ctrl->, then snap it into place on top of the center of
    the box.
  prefs: []
  type: TYPE_NORMAL
- en: Duplicate the top ellipse and scale it down to 50 percent in place (Ctrl-<).
    Now, you don't even need to move it; it's already precisely where it must be to
    imitate the hole in the top cylinder. All you need to do is make it *look* like
    a hole by adding a horizontal linear gradient in the opposite direction of the
    cylinder. While you're at it, make three more copies of the hole, snap each one
    into the base box’s corners, and scale down by pressing Ctrl-< again. These will
    be the holes for the bolts to fasten the detail in place, as shown in [Figure 24-9](#fig24-9).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-09.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-9: Adding the top cylinder and the holes'
  prefs: []
  type: TYPE_NORMAL
- en: 24.5 Making the Cutout
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A full isometric view of the object is now ready. To demonstrate some additional
    techniques, let's create a cutout of the object showing two perpendicular cross-sections.
  prefs: []
  type: TYPE_NORMAL
- en: Since everything you’ve done so far is snapped to the grid, adding the cutout
    shape is very easy. Switch to the Pen tool ([14.1.1](c14.xhtml#section14.1.1))
    and click near the correct grid intersections to create a closed path for the
    left side of the cross section. Then, while pressing Shift, create a second subpath
    of the same path, clicking through the right side’s corners ([Figure 24-10](#fig24-10)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-10.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-10: Adding the cutout shape'
  prefs: []
  type: TYPE_NORMAL
- en: Cutouts in technical designs are often filled with a pattern symbolizing the
    object’s material. Plain stripes are used for metals, and you can use one of the
    preset patterns to indicate that an object is metallic. Open the **Fill and Stroke**
    dialog ([8.2](c08.xhtml#section8.2)), click the **Pattern** button on the **Fill**
    tab, and choose the **Stripes 1:8** pattern. The problem with this pattern is
    that it shows black stripes on a transparent background, and you need black stripes
    on a white background. Just duplicate the shape, paint it white, and move the
    white copy under the striped one in the z-order ([Figure 24-11](#fig24-11)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-11.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-11: Painting the stripes'
  prefs: []
  type: TYPE_NORMAL
- en: Now you need to remove the parts of the object in front of the cutout. Select
    and delete the frontmost rounded cylinder. Using the rectangle resize handles,
    contract the the box’s right and left sides to snap them to the cutout’s edges.
    As for the rest of the objects—the top side of the box and the top ellipse of
    the cylinder—you’ll actually need to *cut* them.
  prefs: []
  type: TYPE_NORMAL
- en: Again using the Pen tool, snap-draw a triangle covering the area you want to
    cut out. Subtract this triangle from the shape by selecting both and pressing
    Ctrl-–, [12.2](c12.xhtml#section12.2)), as shown in [Figure 24-12](#fig24-12).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-12.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-12: Cutting out unnecessary pieces'
  prefs: []
  type: TYPE_NORMAL
- en: Now, create the inside of the hole visible through the cutout. Duplicate the
    cylinder shape, scale it down (Ctrl-<), and step it down in the z-order so it's
    under the cutout shape and the hole ellipse. This will be the hole’s inner surface.
    Using the Node tool, select and pull down that shape’s bottom nodes. Then, duplicate
    the hole ellipse, move it down to the level of the bottom edge, and subtract it
    from the inner surface shape.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you need to paint the inner surface. Select the ellipse at the top
    of the hole and copy it to the clipboard (Ctrl-C). Then, select the inner surface
    path and paste the style to it (Shift-Ctrl-V). This will paint the inverted horizontal
    gradient of the top ellipse on the entire inner surface of the hole, as shown
    in [Figure 24-13](#fig24-13).
  prefs: []
  type: TYPE_NORMAL
- en: '![](tuts/t06-13.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 24-13: Creating the hole’s inner surface'
  prefs: []
  type: TYPE_NORMAL
