- en: '**13**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**WORKING WITH THE CLOUD**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/common4.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
- en: One of the most significant changes in the last decade has been the rise of
    the internet as an appliance, and most notable is internet-based data storage.
    First it was used just for backups, but now with the concurrent rise of mobile
    technology, cloud-based storage is useful for day-to-day disk usage. Apps that
    use the cloud include music libraries (iCloud for iTunes) and file archives (OneDrive
    on Windows systems and Google Drive on Android devices).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Some systems are now completely built around the cloud. One example is Google’s
    Chrome operating system, a complete working environment built around a web browser.
    Ten years ago, that would have sounded daft, but when you think about how much
    time you spend in your browser nowadays ... well, no one in Cupertino or Redmond
    is laughing anymore.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: The cloud is ripe for shell script additions, so let’s jump in. The scripts
    in this chapter will focus mainly on OS X, but the concepts can be easily replicated
    on Linux or other BSD systems.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '**#89 Keeping Dropbox Running**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Dropbox is one of a number of useful cloud storage systems, and it’s particularly
    popular with people who use a variety of devices due to its wide availability
    across iOS, Android, OS X, Windows, and Linux. It’s important to understand that,
    while Dropbox is a cloud storage system, the piece that shows up on your own device
    is a small app designed to run in the background, connect your system to the Dropbox
    internet-based servers, and offer a fairly minimal user interface. Without the
    Dropbox application running in the background, we won’t be able to successfully
    back up and sync files from our computer to Dropbox.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, testing whether the program is running is a simple matter of invoking
    `ps`, as shown in [Listing 13-1](ch13.xhtml#ch13ex1).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '***The Code***'
  id: totrans-9
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Listing 13-1: The* `*startdropbox*` *script*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '***How It Works***'
  id: totrans-12
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: There are two key lines in the script, denoted with ➊ and ➋. The first invokes
    the `ps` command ➊ and then uses a sequence of `grep` commands to look for the
    specified app—*Dropbox.app*—and simultaneously filters itself out of the results.
    If the resultant string is nonzero, the Dropbox program is running and daemonized
    (a *daemon* is a program designed to run in the background 24/7 and perform useful
    tasks that don’t require user intervention) and we’re done.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: If the *Dropbox.app* program isn’t running, then invoking `open` ➋ on OS X does
    the job of finding the app and launching it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '***Running the Script***'
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: With the `-s` flag to eliminate output, there’s nothing to see. By default,
    however, there’s a brief status output, as [Listing 13-2](ch13.xhtml#ch13ex2)
    shows.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '***The Results***'
  id: totrans-17
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*Listing 13-2: Running the* `*startdropbox*` *script to start* Dropbox.app'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '***Hacking the Script***'
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Not much can be done with this, but if you want to get the script working on
    a Linux system, make sure you’ve installed the official Dropbox packages from
    their website. You can invoke Dropbox (once properly configured) with `startdropbox`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对此做的事情不多，但如果你想在 Linux 系统上运行脚本，请确保已从官方 Dropbox 网站安装了官方的 Dropbox 包。你可以通过 `startdropbox`
    来启动 Dropbox（配置完成后）。
- en: '**#90 Syncing Dropbox**'
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**#90 同步 Dropbox**'
- en: With a cloud-based system like Dropbox, it’s a no-brainer to write a script
    that lets you keep a folder or set of files in sync. Dropbox works by keeping
    everything in the Dropbox directory synchronized between local and cloud-based
    copy, typically by emulating a local hard drive on the system.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用像 Dropbox 这样的基于云的系统，编写一个脚本来保持文件夹或文件集的同步是显而易见的。Dropbox 通过在系统上模拟本地硬盘驱动器的方式，保持
    Dropbox 目录中所有内容在本地和云端的同步。
- en: The script in [Listing 13-3](ch13.xhtml#ch13ex3), `syncdropbox`, takes advantage
    of that fact by offering an easy way to copy a directory full of files or a specified
    set of files into the Dropbox universe. In the former instance, a copy of every
    file in the directory will be copied over; in the latter, a copy of every file
    specified will be dropped into the *sync* folder on Dropbox.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在[清单 13-3](ch13.xhtml#ch13ex3)中，`syncdropbox` 脚本利用这一点，通过提供一种简便的方法将充满文件的目录或指定的文件集复制到
    Dropbox 云端。在前一种情况下，目录中的每个文件都会被复制过来；在后一种情况下，指定的每个文件都会被放入 Dropbox 的 *sync* 文件夹中。
- en: '***The Code***'
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***代码***'
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '*Listing 13-3: The* `*syncdropbox*` *script*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 13-3：* `*syncdropbox*` *脚本*'
- en: '***How It Works***'
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***它是如何工作的***'
- en: The vast majority of [Listing 13-3](ch13.xhtml#ch13ex3) is testing for error
    conditions, which is tedious but useful for ensuring that the script is invoked
    properly and isn’t going to mess anything up. (We don’t want any lost data!)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 13-3](ch13.xhtml#ch13ex3) 中的绝大多数内容是在测试错误条件，这虽然繁琐，但对于确保脚本正确调用并且不会弄乱任何东西非常有用。（我们可不希望丢失数据！）'
- en: The complexity comes from the test expressions, like the one at ➊. This tests
    whether the destination directory for a directory copy `$sourcedir` in the Dropbox
    folder is a file (which would be weird) or an existing directory. Read it as “if
    exists-as-a-file `$dropbox/$sourcedir` OR exists-as-a-directory `$dropbox/$sourcedir`,
    then ...”
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂性来自于测试表达式，比如 ➊ 处的测试。这会测试 Dropbox 文件夹中的目标目录 `$sourcedir` 是不是一个文件（这会很奇怪）或一个已存在的目录。可以理解为“如果
    `$dropbox/$sourcedir` 存在为文件 或者 存在为目录，那么...”
- en: In the other interesting line, we invoke `cp` ➋ to copy individually specified
    files. You might want to read the `cp` man page to see what all those flags do.
    Remember that `$@` is a shortcut for all the positional parameters specified when
    the command was invoked.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个有趣的行中，我们调用 `cp` ➋ 来复制单独指定的文件。你可能需要查看 `cp` 的手册页，看看这些标志都有什么作用。记住，`$@` 是命令调用时指定的所有位置参数的快捷方式。
- en: '***Running the Script***'
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***运行脚本***'
- en: As with many of the scripts in this book, you can invoke this without arguments
    to get a quick refresher in how to use it, as [Listing 13-4](ch13.xhtml#ch13ex4)
    demonstrates.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 和书中许多脚本一样，你可以不带参数地调用此脚本，快速复习一下如何使用它，正如[清单 13-4](ch13.xhtml#ch13ex4)所展示的那样。
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*Listing 13-4: Printing the usage for the* `*syncdropbox*` *script*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 13-4：打印 `*syncdropbox*` 脚本的使用方法*'
- en: '***The Results***'
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***结果***'
- en: Now in [Listing 13-5](ch13.xhtml#ch13ex5), let’s push a specific file to be
    synchronized and backed up to Dropbox.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在[清单 13-5](ch13.xhtml#ch13ex5)中，让我们将一个特定的文件推送到 Dropbox 进行同步和备份。
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '*Listing 13-5: Syncing a specific file to Dropbox*'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 13-5：将特定文件同步到 Dropbox*'
- en: Easy enough, and helpful when you recall that this makes the specified files—or
    directory full of files—easily accessible from any other device that’s logged
    in to your Dropbox account.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这很简单，而且有用，因为你会记得，这样就能让指定的文件——或者充满文件的目录——可以从任何已登录你 Dropbox 账户的设备上轻松访问。
- en: '***Hacking the Script***'
  id: totrans-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***破解脚本***'
- en: When a directory is specified but already exists on Dropbox, it would be far
    more useful to compare the contents of the local and Dropbox directories than
    to just print an error and fail. Additionally, when specifying a set of files,
    it would be very useful to be able to specify the destination directory in the
    Dropbox file hierarchy.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当指定一个目录但该目录已存在于 Dropbox 时，比较本地和 Dropbox 目录的内容会比仅仅打印错误并失败更有用。此外，在指定一组文件时，能够指定
    Dropbox 文件层级中的目标目录也会非常有用。
- en: '**OTHER CLOUD SERVICES**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**其他云服务**'
- en: Adapting these first two scripts for Microsoft’s OneDrive service or Apple’s
    iCloud service is fairly trivial, as they all have the same basic functionality.
    The main difference is naming conventions and directory locations. Oh, and the
    fact that OneDrive is OneDrive in some contexts (like the app that needs to be
    running) and SkyDrive in other contexts (the directory that’s in your home directory).
    Still, all easily managed.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 将这前两个脚本适配到微软的OneDrive服务或苹果的iCloud服务是相当简单的，因为它们具有相同的基本功能。主要的区别是命名约定和目录位置。哦，还有就是OneDrive在某些情况下是OneDrive（例如需要运行的应用程序），而在其他情况下是SkyDrive（例如你主目录中的目录）。不过，这一切都很容易管理。
- en: '**#91 Creating Slide Shows from Cloud Photo Streams**'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**#91 从云照片流创建幻灯片**'
- en: Some people love the iCloud photo backup service Photo Stream, while others
    find its tendency to keep a copy of every photo taken—even the throwaway junker
    photographs from mobile devices—annoying. Still, it’s pretty common to sync photos
    with a favorite cloud backup service. The drawback is that these files are essentially
    hidden—because they’re buried deep in your filesystem, they won’t be automatically
    picked up by many photo slide show programs.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人喜欢iCloud的照片备份服务——Photo Stream，而另一些人则觉得它倾向于保存每一张拍摄的照片——甚至是那些从移动设备拍摄的废弃垃圾照片——令人烦恼。不过，将照片同步到喜爱的云备份服务还是很常见的。缺点是这些文件本质上是隐藏的——因为它们深藏在文件系统中，很多照片幻灯片程序无法自动获取它们。
- en: 'We’ll make this better with `slideshow`, a simple script (shown in [Listing
    13-6](ch13.xhtml#ch13ex6)) that polls the camera upload folder and displays the
    pictures therein, constrained to specific dimensions. In order to achieve the
    desired effect, we can use the `display` utility that’s shipped with ImageMagick
    (a suite of powerful utilities you’ll learn more about in the next chapter). On
    OS X, the `brew` package manager user can install ImageMagick easily:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过`slideshow`来改进这一点，这是一个简单的脚本（如[清单 13-6](ch13.xhtml#ch13ex6)所示），它会轮询相机上传文件夹，并显示其中的图片，限制在特定尺寸内。为了实现所需效果，我们可以使用与ImageMagick一起提供的`display`工具（ImageMagick是一组功能强大的工具，你将在下一章中学习更多）。在OS
    X上，`brew`包管理器的用户可以轻松安装ImageMagick：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**NOTE**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*A few years ago, Apple stopped shipping X11, a popular Linux and BSD graphics
    library, with their main operating system. In order to use the* `*slideshow*`
    *script on OS X, you’ll need to provide ImageMagick with the X11 libraries and
    resources that it requires by installing the XQuartz software package. You can
    find more information about XQuartz and how to install it on the official website:*
    [https://www.xquartz.org/](https://www.xquartz.org/).'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*几年前，苹果停止在其主操作系统中提供X11——一个流行的Linux和BSD图形库。为了在OS X上使用`*slideshow*`脚本，你需要通过安装XQuartz软件包来为ImageMagick提供它所需的X11库和资源。你可以在官方网站找到有关XQuartz的更多信息以及如何安装它：*
    [https://www.xquartz.org/](https://www.xquartz.org/)。'
- en: '***The Code***'
  id: totrans-51
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***代码***'
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '*Listing 13-6: The* `*slideshow*` *script*'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 13-6：* `*slideshow*` *脚本*'
- en: '***How It Works***'
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***工作原理***'
- en: There’s not a lot to [Listing 13-6](ch13.xhtml#ch13ex6) other than the painful
    process of figuring out each argument ImageMagick requires to make the `display`
    command perform as desired. All of [Chapter 14](ch14.xhtml#ch14) is about ImageMagick
    because the tools are so darn useful, so this is just a taste of what’s to come.
    For now, just trust that things are written properly, including the weird-looking
    image geometry of `1200x900>` ➊, where the trailing `>` means “resize images to
    fit within these dimensions while staying proportional to the original geometry.”
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 13-6](ch13.xhtml#ch13ex6)中并没有太多内容，除了弄清楚ImageMagick要求的每个参数，以便让`display`命令按预期执行的痛苦过程。整个[第14章](ch14.xhtml#ch14)都在讲解ImageMagick，因为这些工具实在太有用了，所以这只是一个前瞻。目前，只需相信这些东西写得很正确，包括看起来很奇怪的图像几何结构`1200x900>`
    ➊，其中末尾的`>`表示“将图像调整到适应这些尺寸，同时保持与原始几何结构的比例”。'
- en: In other words, an image that’s 2200 × 1000 would be resized automatically to
    fit within the 1200-pixel wide constraint, and the vertical dimension would change
    proportionally from 1000 pixels to 545 pixels. Neat!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，一个尺寸为2200 × 1000的图像会自动调整大小，以适应1200像素宽的限制，垂直尺寸会按比例从1000像素缩小到545像素。很棒！
- en: The script also ensures that there are images in the specified directory by
    extracting all the image files with the `file` command ➋ and then, through a rather
    gnarly pipe sequence, reducing those filenames to just their suffixes (**.jpg*,
    **.png*, and so on).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本还确保指定目录中存在图像文件，通过`file`命令➋提取所有图像文件，然后通过一条相当复杂的管道序列，将文件名简化为它们的后缀（**.jpg**、**.png**等）。
- en: The problem with having this code in a shell script is that every time the script
    refers to the asterisk, it’s expanded to all the filenames that match the wildcard
    symbols, so it won’t display just **.jpg*, but all the *.jpg* files in the current
    directory. That’s why the script temporarily disables *globbing* ➌, the ability
    of the shell to expand these wildcards to other filenames.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些代码放在Shell脚本中的问题是，每次脚本引用星号时，它会扩展为与通配符符号匹配的所有文件名，因此它不会仅仅显示**.jpg*，而是当前目录中所有的*.jpg*文件。这就是为什么脚本暂时禁用*globbing*
    ➌，即Shell将这些通配符扩展为其他文件名的能力。
- en: However, if globbing is turned off for the entire script, the `display` program
    will complain it can’t find an image file called **.jpg*. That wouldn’t be good.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果在整个脚本中禁用globbing，`display`程序会抱怨找不到名为**.jpg*的图像文件。这可就不好了。
- en: '***Running the Script***'
  id: totrans-60
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***运行脚本***'
- en: Specify a directory that contains one or more image files, ideally a photo archive
    from a cloud backup system like OneDrive or Dropbox, as [Listing 13-7](ch13.xhtml#ch13ex7)
    shows.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 指定一个包含一个或多个图像文件的目录，理想情况下是来自云备份系统（如OneDrive或Dropbox）的照片存档，如[列表 13-7](ch13.xhtml#ch13ex7)所示。
- en: '***The Results***'
  id: totrans-62
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***结果***'
- en: '[PRE7]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '*Listing 13-7: Running the* `*slideshow*` *script to display images in a cloud
    archive*'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 13-7：运行* `*幻灯片放映*` *脚本以显示云存档中的图像*'
- en: After running the script, a new window should pop up that will slowly cycle
    through your backed-up and synced images. This would be a handy script for sharing
    all those great vacation photos!
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本后，一个新窗口应该会弹出，缓慢地循环显示你备份和同步的图像。这将是一个非常方便的脚本，用于分享那些精彩的度假照片！
- en: '***Hacking the Script***'
  id: totrans-66
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***破解脚本***'
- en: There’s a lot you can do to make this script more elegant, much of which is
    related to letting users specify the values that are currently hardcoded into
    the call to `display` (such as the picture resolution). In particular, you can
    allow the use of different display devices so the image can be pushed to a second
    screen, or you can allow the user to change the delay time between images.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以做很多事情来让这个脚本更加优雅，其中大部分与让用户指定当前硬编码到`display`调用中的值有关（例如图像分辨率）。特别是，你可以允许使用不同的显示设备，以便将图像推送到第二个屏幕，或者允许用户更改图像之间的延迟时间。
- en: '**#92 Syncing Files with Google Drive**'
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**#92 与Google Drive同步文件**'
- en: Google Drive is another popular cloud-based storage system. Tied into the Google
    office utility suite, it turns out to be the gateway to an entire online editing
    and production system, which makes it doubly interesting as a sync target. Copy
    a Microsoft Word file onto your Google Drive, and you can subsequently edit it
    within any web browser, whether it’s on your computer or not. Ditto with presentations,
    spreadsheets, and even photographs. Darn useful!
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Google Drive是另一个流行的基于云的存储系统。与Google办公工具套件紧密集成，它实际上是整个在线编辑和制作系统的门户，这使得它作为同步目标更具吸引力。将一个Microsoft
    Word文件复制到Google Drive后，你可以在任何网页浏览器中编辑它，无论它是否在你的电脑上。演示文稿、电子表格甚至照片也一样。真是太有用了！
- en: 'One interesting note is that Google Drive does not store its Google Docs files
    on your system, but rather stores pointers to the documents in the cloud. For
    example, consider this:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的点是，Google Drive并不会将Google Docs文件存储在你的系统上，而是存储指向云中文档的指针。例如，考虑一下这个：
- en: '[PRE8]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: That’s definitely not the contents of that spreadsheet.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这肯定不是那个电子表格的内容。
- en: 'With some fiddling with `curl`, you could likely write a utility to analyze
    this meta information, but let’s focus on something a bit easier: a script that
    lets you pick and choose files to have automatically mirrored on your Google Drive
    account, detailed in [Listing 13-8](ch13.xhtml#ch13ex8).'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一些`curl`的操作，你可能能够编写一个工具来分析这些元数据信息，但让我们先专注于一个稍微简单一点的：一个脚本，让你选择并指定文件，自动将它们镜像到你的Google
    Drive账户中，详细内容见[列表 13-8](ch13.xhtml#ch13ex8)。
- en: '***The Code***'
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***代码***'
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '*Listing 13-8: The* `*syncgdrive*` *script*'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 13-8：* `*同步Google Drive*` *脚本*'
- en: '***How It Works***'
  id: totrans-77
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***它是如何工作的***'
- en: 'Like [Script #89](ch13.xhtml#ch13lev1sec01) on [page 300](ch13.xhtml#page_300),
    this script checks whether the particular cloud service daemon is running before
    copying a file or files into the Google Drive folder. This is accomplished in
    the block of code at ➊.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '如同[脚本 #89](ch13.xhtml#ch13lev1sec01)在[第300页](ch13.xhtml#page_300)的内容， 这个脚本会在复制文件到Google
    Drive文件夹之前，检查特定的云服务守护进程是否在运行。这是在代码块➊中实现的。'
- en: To write really clean code, we should probably check the return code from the
    `open` call, but we’ll leave that as an exercise for the reader, okay? ![image](../images/common1.jpg)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为了写出真正整洁的代码，我们可能应该检查 `open` 调用的返回代码，但我们就把这个留给读者自己练习，好吗？ ![image](../images/common1.jpg)
- en: After this, the script ensures the existence of a subdirectory on Google Drive
    called *gsync*, creating it if needed, and simply copies the designated file or
    files into it using the handy `-a` option to `cp` to ensure that the creation
    and modification times are retained.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，脚本确保在 Google Drive 上存在一个名为 *gsync* 的子目录，如果需要，它会创建该目录，并使用 `-a` 选项将指定的文件或文件夹复制到其中，以确保保留创建和修改时间。
- en: '***Running the Script***'
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***运行脚本***'
- en: Simply specify one or more files that you’d like to have synced up with your
    Google Drive account, and the script will do all the behind-the-scenes work to
    ensure that happens.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 只需指定一个或多个你希望与 Google Drive 账户同步的文件，脚本就会自动完成所有幕后工作，确保同步成功。
- en: '***The Results***'
  id: totrans-83
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***结果***'
- en: This is cool, actually. Specify a file you want copied to Google Drive, as [Listing
    13-9](ch13.xhtml#ch13ex9) shows.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这个其实很酷。指定一个你希望复制到 Google Drive 的文件，就像[列表 13-9](ch13.xhtml#ch13ex9)中所展示的那样。
- en: '[PRE10]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '*Listing 13-9: Starting Google Drive and syncing files with the* `*syncgdrive*`
    *script*'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 13-9：启动 Google Drive 并使用* `*syncgdrive*` *脚本同步文件*'
- en: Notice that the first time it runs, it has to launch the Google Drive daemon,
    too. After you wait a few seconds for the files to be copied to the cloud storage
    system, they show up in the web interface to Google Drive, as shown in [Figure
    13-1](ch13.xhtml#ch13fig1).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，第一次运行时，它还必须启动 Google Drive 守护进程。等待几秒钟，让文件复制到云存储系统后，它们会出现在 Google Drive 的
    Web 界面上，如[图 13-1](ch13.xhtml#ch13fig1)所示。
- en: '![image](../images/f13-01.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f13-01.jpg)'
- en: '*Figure 13-1:* Sample.crontab *and an office document synced with Google Drive
    automatically show up online.*'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 13-1:* Sample.crontab *和与 Google Drive 自动同步的办公文档将在线显示。*'
- en: '***Hacking the Script***'
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***破解脚本***'
- en: 'There’s a bit of false advertising here: when you specify a file to sync, the
    script doesn’t *keep* it in sync with future file changes; it just copies the
    file once and is done. A really interesting hack would be to create a more powerful
    version of this script in which you specify files you want to keep backed up and
    it checks them on a regular basis, copying any that are new up to the *gsync*
    directory.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有点虚假广告：当你指定要同步的文件时，脚本并不会*保持*文件与未来的更改同步；它只会复制文件一次，完成任务。如果你想要做一个有趣的黑客项目，可以创建一个更强大的版本，在其中指定你希望保持备份的文件，并定期检查这些文件，将任何新文件复制到
    *gsync* 目录。
- en: '**#93 The Computer Says . . .**'
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**#93 计算机说。。。**'
- en: OS X includes a sophisticated voice synthesis system that can tell you what’s
    going on with your system. Often it’s located in the Accessibility options, but
    you can do a lot with a computer that can, for example, speak error messages or
    read files out loud.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: OS X 包含一个复杂的语音合成系统，可以告诉你系统的当前状态。通常，它位于“辅助功能”选项中，但你可以用支持语音的电脑做很多事情，比如朗读错误信息或大声读取文件内容。
- en: 'It turns out that all of this power—and a bunch of fun voices—is also accessible
    from the command line in OS X, through a built-in utility called `say`. You can
    test it out with this command:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 事实证明，所有这些强大的功能——还有一堆有趣的语音——都可以通过 OS X 中名为 `say` 的内置工具从命令行访问。你可以通过以下命令来测试它：
- en: '[PRE11]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We knew you’d think it was fun!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道你会觉得这很有趣！
- en: There’s a lot you can do with the built-in program, but this is also a perfect
    opportunity to write a wrapper script that makes it easier to ascertain what voices
    are installed and get a demo of each one. The script in [Listing 13-10](ch13.xhtml#ch13ex10)
    doesn’t replace the `say` command; it just makes the command easier to work with
    (a common theme throughout this book).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 内置程序可以做很多事情，但这也是一个完美的机会，可以编写一个封装脚本，使得更容易查看已安装的语音并进行每个语音的演示。[列表 13-10](ch13.xhtml#ch13ex10)中的脚本并不替代
    `say` 命令；它只是让命令更易于使用（这是本书中的一个常见主题）。
- en: '***The Code***'
  id: totrans-98
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***代码***'
- en: '[PRE12]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '*Listing 13-10: The* `*sayit*` *script*'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 13-10：* `*sayit*` *脚本*'
- en: '***How It Works***'
  id: totrans-101
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***工作原理***'
- en: 'There are even more voices installed than are listed in the summary (those
    are just the ones optimized for English). To get the full list of voices, we’ll
    have to go back to the original `say` command with the `-v \?` parameters. What
    follows is an abridged version of the full list of voices:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，安装的语音比总结中列出的还要多（这些只是针对英语优化的语音）。要查看完整的语音列表，我们需要回到原始的`say`命令，并使用`-v \?`参数。接下来是完整语音列表的简略版本：
- en: '[PRE13]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Our favorite comments are for Pipe Organ (“We must rejoice in this morbid voice.”)
    and Zarvox (“That looks like a peaceful planet.”).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: Clearly, though, this is too many voices to choose from. Plus, some of them
    really mangle English pronunciation. One solution would be to filter by `"en_"`
    (or by another language of your preference) to get only the English-language voices.
    You could use `"en_US"` for US English, but the other English voices are worth
    hearing. We get a full list the voices at ➊.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: 'We include the complicated sequence of `sed` substitutions at the end of this
    block because it’s not a well-formed list: there are one-word names (Fiona) and
    two-word names (Bad News), but spaces are also used to create the columnar data.
    To solve this problem, the first space in each line is converted into an underscore
    and all other spaces are then removed. If the voice has a single-word name, it
    will then look like this: `"Ralph_"`, and the final `sed` substitution will remove
    any trailing underscores. At the end of this process, two-word names have an underscore,
    so they’ll need to be fixed when output to the user. However, the code has the
    nice side effect of making the `while` loop a lot easier to write with the default
    space-as-separator.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: The other fun segment is where each voice introduces itself in sequence—the
    `sayit demo` invocation—at ➋.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: This is all quite easy, once you understand how the `say` command itself works.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '***Running the Script***'
  id: totrans-109
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Since this script produces audio, there’s not much you can see here in the book,
    and since we don’t yet have the audiobook of *Wicked Cool Shell Scripts* (can
    you imagine all the things you wouldn’t see?), you’ll need to do some of this
    yourself to experience the results. But the script’s ability to list all the installed
    voices can be demonstrated, as in [Listing 13-11](ch13.xhtml#ch13ex11).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '***The Results***'
  id: totrans-111
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '*Listing 13-11: Running the* `*sayit*` *script to print supported voices and
    then speak*'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '***Hacking the Script***'
  id: totrans-114
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A close examination of the output of `say -v \?` reveals that there’s at least
    one voice where the language encoding is wrong. Fiona is listed as `en-scotland`,
    not `en_scotland`, which would be more consistent (given that Moira is listed
    as `en_IE`, not `en-irish` or `en-ireland`). An easy hack is to have the script
    work with both `en_` and `en-`. Otherwise, dabble with it and think about when
    it could be useful to have a script—or daemon—talk to you.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
