- en: '**14'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: EXPLORING /ETC**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
- en: The */etc* directory contains the basic configuration information needed to
    boot a Unix-like system. Every time I get saddled with an unfamiliar system, one
    of the first things I do is scope out */etc*. The fastest way to go from a junior
    sysadmin to a midgrade one is to read */etc* and the associated man pages. Yes,
    all of it. Yes, this is a lot of reading. Understanding */etc* means that you
    understand how the system hangs together. As you progress as a sysadmin, you’re
    going to pick up this information piecemeal anyway, so you might as well take
    the easier route and master this part of your toolkit at the beginning.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: I discuss many */etc* files in chapters where they’re most important, such as
    */etc/services* in [Chapter 7](ch07.xhtml#ch07) and */etc/fstab* in [Chapter 10](ch10.xhtml#ch10).
    Also, some files are of only historical interest or are gradually being removed.
    This chapter covers important */etc* files that don’t quite fit anywhere else.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc Across Unix Species**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Different Unix-like systems use different */etc* files. In many cases, these
    files are simply renamed or restructured files from primordial BSD. The first
    time I encountered an IBM AIX system, for example, I went looking for a BSD-style
    */etc/fstab*. It wasn’t there. A little hunting led me to */etc/filesystems*,
    which is an IBM-specific */etc/fstab*. Apparently IBM felt that a file named for
    an abbreviation of *filesystem table* was confusing, so they renamed the file.
    Knowing this information existed somewhere in */etc*, and knowing which files
    it obviously wasn’t in, greatly shortened my search.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Even radically different FreeBSD systems have almost identical */etc* directories.
    While some add-on programs insert their own files here, you can expect certain
    files to be on every FreeBSD system you encounter.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Remember that */etc* is the heart of FreeBSD and that changes to these files
    can damage or destroy your system. While having to manually recover a scrambled
    filesystem can turn an adequate sysadmin into a pretty good one, it’s one of the
    least pleasant ways to get there.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/adduser.conf**'
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file lets you configure the defaults for new users. See [Chapter 9](ch09.xhtml#ch09)
    for details.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/aliases**'
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file lets you configure system-wide email forwarding. We cover it in [Chapter
    20](ch20.xhtml#ch20).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/amd.map**'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD has the ability to automatically mount and unmount NFS filesystems upon
    demand through the automounter daemon, amd(8). The automounter daemon is very
    old, however, and has largely been replaced by autofs(5) and automountd(8). Automounting
    is mostly useful for workstations, so we won’t go into it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/auto_master**'
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The *auto_master* file configures FreeBSD’s modern automounting service. It
    lets you configure mount options, determine how long an automounted filesystem
    should remain mounted, and so on. See auto_master(5), autofs(5), and automountd(8)
    for details.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/blacklistd.conf**'
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD includes an automated blacklist daemon, blacklistd(8), that’s comparable
    to fail2ban and similar programs. Programs that link against libblacklist(3) can
    direct blacklistd(8) to block intrusive hosts at the firewall. We configure blacklistd(8)
    in [Chapter 19](ch19.xhtml#ch19).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/bluetooth, /etc/bluetooth.device.conf, and /etc/defaults/bluetooth.device.conf**'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD supports Bluetooth, a standard for short-range wireless communication.
    Unlike 802.11, Bluetooth is designed for short-range but high-level services,
    such as voice communications. This book is about servers, so we won’t cover Bluetooth,
    but you should know that your FreeBSD laptop can attach to your Bluetooth-equipped
    cellphone and connect to the internet if you desire.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/casper**'
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Capsicum security system lets programmers add sandboxing and security capabilities
    to their software. The */etc/casper* directory contains sample capsicum(4) configurations.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/crontab and /etc/cron.d**'
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The cron(8) daemon lets users schedule tasks. See [Chapter 20](ch20.xhtml#ch20)
    for examples and details.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/csh.***'
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The */etc/csh.** files contain system-wide defaults for csh and tcsh. When a
    user logs in with either of these shells, the shell executes any commands it finds
    in */etc/csh.login*. Similarly, when the user logs out, */etc/csh.logout* is executed.
    You can place general shell configuration information in */etc/csh.cshrc*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Per-shell configuration is prone to errors, and you’ll have to maintain identical
    settings for any other shells. I recommend putting necessary environment variables
    in a login class (see “[Restricting System Usage](ch09.xhtml#lev300)” on [page
    188](ch09.xhtml#page_188)).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/ddb.conf**'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The kernel debugger configuration utility ddb(8) reads *ddb.conf* for instructions.
    We’ll use this in [Chapter 24](ch24.xhtml#ch24) to prepare kernel crash dumps
    on small systems.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/devd.conf**'
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The device daemon devd(8) is best known for managing detachable hardware, such
    as USB, PCCard, and Cardbus devices. When you insert a USB network card into your
    laptop, devd(8) notices the arrival and fires up the appropriate system processes
    to configure the card as per */etc/rc.conf*. More generally, it’s a state change
    daemon and can react on link up/down events, notify you about CPU overheating,
    process suspend/resume events, and more. We discuss devd(8) briefly in [Chapter
    13](ch13.xhtml#ch13), but if you think you need to edit */etc/devd.conf* on a
    server, you’re probably doing something wrong.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/devfs.conf, /etc/devfs.rules, and /etc/defaults/devfs.rules**'
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD manages device nodes through devfs(5), a virtual filesystem that dynamically
    provides device nodes as hardware boots, appears, and disappears. See [Chapter
    13](ch13.xhtml#ch13) for more information.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/dhclient.conf**'
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Many operating systems give you very basic DHCP client configuration with no
    way to fine-tune or customize it; you either use it or you don’t. In most cases,
    an empty */etc/dhclient.conf* file gives you full DHCP client functionality, but
    it won’t work correctly in all situations. Perhaps your network is having trouble
    or you’re at a conference where some script kiddie thinks it’s fun to set up a
    second DHCP server and route everyone’s traffic through his machine so he can
    capture passwords.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: Your server better not be configured via DHCP (unless it’s diskless), so we
    won’t go into any depth on this. You should be aware that you can configure FreeBSD’s
    DHCP client functionality, however.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/disktab**'
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once upon a time, hard disks were rare and exotic creatures that came in only
    a few varieties. In */etc/disktab*, you’ll find low-level descriptions of many
    different kinds of disks, from the 360KB floppy disk to a Panasonic 60MB laptop
    hard drive. (Yes, laptops came with 60MB hard drives, and we were durned happy
    to have them.)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Today, this file is mostly used for removable media, such as 1.44MB floppy disks
    and zip disks. While I described formatting flash drives in [Chapter 13](ch13.xhtml#ch13),
    this file contains the descriptions needed to format other removable media. If
    you want to put a filesystem on your LS 120 disk or zip drive, you’ll find the
    necessary label here at the beginning of an entry.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Editing */etc/disktab* is useful only if you have multiple identical hard drives
    that you want to partition and format in exactly the same way. If you need to
    make your own entries, read disktab(5).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/dma/**'
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Dragonfly Mail Agent (DMA) stores its configuration in */etc/dma/*. We discuss
    DMA in [Chapter 20](ch20.xhtml#ch20).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/freebsd-update.conf**'
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file is used by freebsd-update(8) when getting binary updates for your
    server. See [Chapter 18](ch18.xhtml#ch18) for details.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/fstab**'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: See [Chapter 10](ch10.xhtml#ch10) for a discussion on the filesystem table,
    */etc/fstab*.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/ftp.***'
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The FTP daemon ftpd(8) uses these files to determine who may access the system
    via FTP and what access they have upon a successful connection. Unless you’re
    running a large FTP site, you should be using sftp(1) instead.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/group**'
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Assigning users to groups is covered in painful detail in [Chapter 9](ch09.xhtml#ch09).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/hostid**'
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Certain software expects every host to have a universally unique ID, or UUID.
    If you’re running on real hardware, this UUID is burned into the mainboard and
    is accessible via kenv(8). Virtual hosts can generate a UUID from software. The
    */etc/hostid* file contains that UUID.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/hosts**'
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains host-to-IP mappings, as discussed in [Chapter 8](ch08.xhtml#ch08).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/hosts.allow**'
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The */etc/hosts.allow* file controls who can access the daemons compiled with
    TCP Wrappers support. Learn about it in [Chapter 19](ch19.xhtml#ch19).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/hosts.equiv**'
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The */etc/hosts.equiv* file is used by the r-services (rlogin, rsh, etc.) to
    let trusted remote systems log in or run commands on the local system without
    providing a password or even logging in. Hosts listed in this file are assumed
    to have performed user authentication on a trusted system, so the local system
    doesn’t have to bother reauthenticating the user.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Such blatant trust is very convenient on friendly networks, much as leaving
    the doors of your Manhattan townhouse unlocked saves you the trouble of digging
    out your door keys every time you get home. There’s no such thing as a friendly
    network.^([1](footnote.xhtml#ch14fn1)) A single disgruntled employee can largely
    destroy a corporate network with this service, and a machine using the r-services
    is pretty much dog meat for the first script kiddie who wanders by. In fact, */etc/hosts.equiv*
    and its related services have bitten even top-notch security experts who thought
    they could use it safely. I suggest leaving this file empty and perhaps even making
    it immutable (see [Chapter 9](ch09.xhtml#ch09)).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/hosts.lpd**'
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The */etc/hosts.lpd* file is one of the simplest files in */etc*. Hosts listed
    here, each on its own line, may print to the printer(s) controlled by this machine.
    While you can use hostnames, that would allow DNS issues to choke printing, so
    use IP addresses instead.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: Unlike most other configuration files, */etc/hosts.lpd* doesn’t accept network
    numbers or netmasks; you must list individual hostnames or IP addresses.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: We configure FreeBSD as a printer client in [Chapter 20](ch20.xhtml#ch20).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/inetd.conf**'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: inetd(8) handles incoming network connections for smaller daemons that don’t
    run frequently. See the section on inetd in [Chapter 20](ch20.xhtml#ch20).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/libmap.conf**'
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD’s linker lets you substitute one shared library for another. We discuss
    this in [Chapter 17](ch17.xhtml#ch17).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/localtime**'
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains local time zone data, as configured by tzsetup(8). It’s a
    binary file, and you can’t edit it with normal tools. tzsetup(8) actually copies
    this file from a subdirectory of */usr/share/zoneinfo*. If your time zone changes,
    you’ll need to upgrade FreeBSD to get the new time zone files and then rerun tzsetup(8)
    to configure time correctly.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: We discuss time in [Chapter 20](ch20.xhtml#ch20).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/locate.rc**'
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'locate(1) finds all files of a given name. For example, to find *locate.rc*,
    enter the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You’ll see that a file called *locate.rc* can be found in four places: in the
    main */etc* directory, the system examples directory, the system source code,
    and a copy retained by etcupdate(8).'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: 'As part of periodic(8)’s weekly run (see [Chapter 21](ch21.xhtml#ch21)), your
    FreeBSD system scans its disks, builds a list of everything it finds, and stores
    that list in a database. The list-building program, locate.updatedb(8), takes
    its settings from */etc/locate.rc*. The following variables in this file all change
    how your locate.updatedb(8) builds your locate database:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '`TMPDIR` contains the temporary directory used by locate.updatedb(8), and defaults
    to */tmp*. If you’re short on space in */tmp*, change this path to a place where
    you have more room.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While you can change the location of the database itself with the `FCODES` variable,
    this affects other parts of FreeBSD that expect to find that database in its default
    location. Be prepared for odd results, especially if you leave an old locate database
    in the default location of */var/db/locate.database*.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `SEARCHPATHS` variable gives the directory where you want to start building
    your database. This defaults to */*, the whole disk. To index only a portion of
    your disk, set that value here.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PRUNEPATHS` lists directories you don’t want to index. This defaults to excluding
    temporary directories that traditionally contain only short-lived files.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The `FILESYSTEMS` variable lists the types of filesystems you want to index.
    By default, locate.updatedb(8) indexes only UFS (FreeBSD) and ext2fs (Linux) filesystems.
    Listing NFS (see [Chapter 13](ch13.xhtml#ch13)) filesystems is a bad idea: all
    of your servers simultaneously indexing the fileserver will bottleneck either
    the network or the fileserver.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**/etc/login.***'
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can control who may log into your system—and what resources those users
    may access—by using */etc/login.access* and */etc/login.conf*. See [Chapter 9](ch09.xhtml#ch09)
    for instructions.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/mail**'
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Most of the contents of */etc/mail* are dedicated to Sendmail. The two exceptions
    are the aliases(5) file and mailer.conf(5). We discuss both in [Chapter 20](ch20.xhtml#ch20).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/mail.rc**'
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While FreeBSD uses most *.rc* files for system startup, the */etc/mail.rc* file
    is used to configure mail(1).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/mail/mailer.conf**'
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD allows you to choose any mail server program you like via */etc/mail/mailer.conf*,
    as covered in [Chapter 20](ch20.xhtml#ch20).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/make.conf**'
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To make, or compile, a program is to build it from source code into machine
    language. We’ll discuss building software in detail in [Chapter 17](ch17.xhtml#ch17).
    The */etc/make.conf* contains settings that control how the building process works,
    letting you set options that directly affect software builds. Remember, anything
    you add to *make.conf* affects all software built on the system, including system
    upgrades. This may cause upgrade failures.^([2](footnote.xhtml#ch14fn2)) Many
    of the options from *make.conf* are useful only to developers.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: If you’re interested in setting options that affect only system upgrades, use
    */etc/src.conf* instead.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Here are some common features set in *make.conf*. Any values set here require
    the same syntax used by make(1). If you insist on trying to optimize software
    builds, follow the examples in make.conf(5) or in the software’s documentation.
    Best of all, though, don’t muck with make at all.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '***CFLAGS***'
  id: totrans-93
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This option specifies optimization settings for building nonkernel programs.
    Many other Unix-like operating systems suggest compiling software with particular
    *compiler flags*, or `CFLAGS`. This practice is actively discouraged on FreeBSD.
    System components that require compiler flags already have that specified in the
    software configuration, and add-on software has that configuration set for it
    separately. While people might recommend other settings for `CFLAGS`, custom options
    aren’t supported by the FreeBSD Project.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: In general, FreeBSD code is expected to compile most correctly out of the box.
    The only thing that adding compiler options can do is impair your performance.
    If you build FreeBSD or ports with nonstandard flags and have problems, remove
    those flags and build it again.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '***COPTFLAGS***'
  id: totrans-96
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The `COPTFLAGS` optimizations are used only for building the kernel. Again,
    settings other than the defaults can build a nonworking kernel.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '***CXXFLAGS***'
  id: totrans-98
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`CXXFLAGS` tells the compiler what optimizations to use when building C++ code.
    Be sure to use the += syntax when using `CXXFLAGS` so that you add your instructions
    to those specified in the software. Everything that I said earlier about `CFLAGS`
    applies equally well to `CXXFLAGS`.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/master.passwd**'
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains the confidential core information for all user accounts,
    as discussed in [Chapter 9](ch09.xhtml#ch09). Protect it.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/motd**'
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The *message of the day (motd)* file is displayed to users when they log in.
    You can place system notices in this file or other information you want shell
    users to see. The `welcome` option in */etc/login.conf* (see [Chapter 9](ch09.xhtml#ch09))
    can point users to different motd files, so you can have separate messages for
    each login class.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/mtree**'
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: mtree(1) builds directory hierarchies with permissions set according to a predefined
    standard. The */etc/mtree* directory stores that standard for the FreeBSD base
    system. The FreeBSD upgrade process uses mtree records to install the system correctly.
    If you damage file or directory permissions in your base system, you can use mtree(1)
    to restore them to the defaults. While you don’t generally need to edit these
    files, they can be useful if you muck too much with your system. Diskless systems
    use these files to build memory-based */var* filesystems. We’ll use this information
    in [Chapter 19](ch19.xhtml#ch19) to inspect system security.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/netconfig**'
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you’re accustomed to SVR4-derived operating systems, you might expect to
    configure various parts of networking in */etc/netconfig*. FreeBSD uses this file
    only for RPC code, though. I mention it only to keep old Solaris hands from thinking
    changes here will help them.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你习惯了基于SVR4的操作系统，你可能会期望在*/etc/netconfig*中配置各种网络部分。但FreeBSD仅将此文件用于RPC代码。我提到它只是为了防止老一辈的Solaris用户误以为在这里进行更改能帮助他们。
- en: '**/etc/netstart**'
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/netstart**'
- en: This shell script is designed specifically for bringing up the network while
    in single-user mode. Having a network in single-user mode is terribly useful for
    any number of reasons, from mounting NFS shares to connecting to remote machines
    in order to verify configurations. Just run */etc/netstart*. This script has no
    effect when in full multiuser mode.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这个Shell脚本专门用于在单用户模式下启动网络。在单用户模式下使用网络对许多原因都非常有用，从挂载NFS共享到连接远程机器以验证配置。只需运行*/etc/netstart*。在完全多用户模式下，这个脚本没有任何效果。
- en: '**/etc/network.subr**'
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/network.subr**'
- en: This shell script isn’t intended for human use; rather, other network configuration
    scripts use the subroutines defined herein to support common functions.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这个Shell脚本不是为了人类使用的；相反，其他网络配置脚本使用这里定义的子例程来支持常见功能。
- en: '**/etc/newsyslog.conf**'
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/newsyslog.conf**'
- en: This file configures the rotation and deletion of log files. See [Chapter 21](ch21.xhtml#ch21)
    for more information.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件配置日志文件的旋转和删除。有关更多信息，请参阅[第21章](ch21.xhtml#ch21)。
- en: '**/etc/nscd.conf**'
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/nscd.conf**'
- en: The nscd(8) service caches the results of name service lookups to optimize system
    performance. It’s useful if you’re running LDAP, but for hostname lookups, you’re
    better off running a local caching resolver.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: nscd(8)服务缓存名称服务查找的结果，以优化系统性能。如果你运行LDAP，它很有用，但对于主机名查找，你最好使用本地缓存解析器。
- en: '**/etc/nsmb.conf**'
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/nsmb.conf**'
- en: FreeBSD’s Windows file-share mounting system uses */etc/nsmb.conf* to define
    access to Windows systems, as described in [Chapter 13](ch13.xhtml#ch13).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: FreeBSD的Windows文件共享挂载系统使用*/etc/nsmb.conf*来定义对Windows系统的访问，正如[第13章](ch13.xhtml#ch13)中所述。
- en: '**/etc/nsswitch.conf**'
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/nsswitch.conf**'
- en: Name Service Switching is covered in [Chapters 8](ch08.xhtml#ch08) and [20](ch20.xhtml#ch20).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 名称服务切换在[第8章](ch08.xhtml#ch08)和[第20章](ch20.xhtml#ch20)中有所讨论。
- en: '**/etc/ntp/, /etc/ntp.conf**'
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/ntp/, /etc/ntp.conf**'
- en: Keeping correct time on your host simplifies . . . well, everything. The time
    daemon ntpd(8) uses these files, as [Chapter 20](ch20.xhtml#ch20) illustrates.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 保持主机时间的准确性简化了……嗯，一切。时间守护进程ntpd(8)使用这些文件，正如[第20章](ch20.xhtml#ch20)所示。
- en: '**/etc/opie***'
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/opie***'
- en: '*One-time Passwords In Everything (OPIE)* is a one-time password system derived
    from S/Key. While still used in a few places, it’s no longer very popular. You
    can read opie(4) if you’re interested. For the most part, OPIE has been largely
    replaced by systems like Kerberos, Google Authenticator, and other PAM plug-ins.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '*一次性密码系统 (OPIE)* 是一个源自S/Key的一次性密码系统。虽然它仍然在一些地方使用，但已经不再非常流行。如果你感兴趣，可以阅读opie(4)。大部分情况下，OPIE已经被像Kerberos、Google
    Authenticator和其他PAM插件这样的系统所替代。'
- en: '**/etc/pam.d/***'
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/pam.d/***'
- en: '*Pluggable Authentication Modules (PAM)* allow the sysadmin to use different
    authentication, authorization, and access control systems. If you’re using Kerberos,
    LDAP, or some other centralized authentication system, you’ll need to configure
    PAM. PAM, unfortunately, fills an entire book on its own. If you’re trapped into
    going anywhere near PAM, permit me to recommend my book *PAM Mastery* (Tilted
    Windmill Press, 2016).'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '*可插拔认证模块 (PAM)* 允许系统管理员使用不同的认证、授权和访问控制系统。如果你正在使用Kerberos、LDAP或其他某种集中认证系统，你需要配置PAM。遗憾的是，PAM本身就可以写成一本书。如果你不得不涉及到PAM，允许我推荐我的书《PAM精通》(Tilted
    Windmill Press, 2016)。'
- en: '**/etc/passwd**'
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/passwd**'
- en: This file contains user-visible account information. We talk about the password
    files in [Chapter 9](ch09.xhtml#ch09).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件包含用户可见的账户信息。我们在[第9章](ch09.xhtml#ch09)中讨论了密码文件。
- en: '**/etc/pccard_ether**'
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/pccard_ether**'
- en: This script starts and stops removable network cards, such as Cardbus cards
    and USB Ethernet. Its name is just a leftover of history, when the only cards
    available were PC Cards. For the most part, devd(8) runs this script as needed,
    as discussed in [Chapter 13](ch13.xhtml#ch13).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本用于启动和停止可移动网络卡，比如Cardbus卡和USB以太网卡。它的名字只是历史的遗留物，那时只有PC卡可用。在大多数情况下，devd(8)会根据需要运行这个脚本，正如[第13章](ch13.xhtml#ch13)所讨论的。
- en: '**/etc/periodic.conf and /etc/defaults/periodic.conf**'
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**/etc/periodic.conf 和 /etc/defaults/periodic.conf**'
- en: The system’s regular maintenance jobs that create those annoying mails to root
    are run by periodic(8), which just runs shell scripts stored in */etc/periodic*
    and */usr/local/etc/periodic*. Every one of these scripts can be enabled or disabled
    in */etc/periodic.conf*.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: periodic(8) runs programs either daily, weekly, or monthly. Each set of programs
    has its own settings—for example, daily programs are configured separately from
    monthly programs. These settings are controlled by entries in */etc/periodic.conf*.
    While we show examples from only the daily scripts, you’ll find very similar settings
    for the weekly and monthly scripts.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: '***daily_output=”root”***'
  id: totrans-133
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If you want the status email to go to a user other than root, list that user’s
    name here. Unless you have a user whose job it is to specifically read periodic
    email, it’s best to leave this at the default and forward root’s email to an account
    you read. You could also give a full path to a file if you prefer and even have
    newsyslog(8) rotate the periodic log (see [Chapter 19](ch19.xhtml#ch19)).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '***daily_show_success=”YES”***'
  id: totrans-135
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: With this set to `YES`, the daily message includes information on all successful
    checks.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '***daily_show_info=”YES”***'
  id: totrans-137
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When set to `YES`, the daily message includes general information from the commands
    it runs.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '***daily_show_badconfig=”NO”***'
  id: totrans-139
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When set to `YES`, the daily message includes information on periodic commands
    it tried to run but couldn’t. These messages are generally harmless and involve
    subsystems that your system just doesn’t support or include.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '***daily_local=”/etc/daily.local”***'
  id: totrans-141
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You can define your own scripts to be run as part of the daily, weekly, and
    monthly periodic(8) jobs. These default to */etc/daily.local*, */etc/weekly.local*,
    and */etc/monthly.local*, but you can place them anywhere you like.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: Each script in the daily, weekly, and monthly subdirectories of */etc/periodic*
    has a brief description at the top of the file, and most have configuration options
    in */etc/defaults/periodic.conf*. Skim through these quickly, looking for things
    that are of interest to you. The defaults enabled are sensible for most circumstances,
    but there’s extra functionality you can enable with a simple setting in */etc/periodic.conf*.
    For example, if you use GEOM-based disk features, you’ll find the daily GEOM status
    messages useful. Since anything I could list here would be obsolete before I could
    deliver this manuscript, let alone before the book reaches you, I won’t go into
    detail about the various scripts.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/pf.conf, /etc/pf.os**'
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We cover the basics of the PF packet filter in [Chapter 19](ch19.xhtml#ch19).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: One less-known feature of PF is its ability to identify operating systems by
    the packets they send. The */etc/pf.os* file contains TCP fingerprints for different
    operating systems, allowing you to write firewall rules such as “Show FreeBSD
    users my real home page, but show Windows users a page suggesting that they get
    a real operating system.” See pf.os(5) for more information. I encourage you to
    peruse this file, if only to drive home how all these network stacks behave so
    differently.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/phones**'
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Modem users can store phone numbers for remote modems in */etc/phones*, aliasing
    them so that they can just type `home` instead of the full phone number. Only
    tip(1) and cu(1) use this file, however, so it’s not as useful as you might think.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/portsnap.conf**'
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Portsnap provides updates for the ports tree, as discussed in [Chapter 18](ch18.xhtml#ch18).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/ppp/**'
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD supports outbound modems with ppp(8). Read the man page for more information.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/printcap**'
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains printer configuration information. Printing on Unix-like
    systems can be very complicated, especially with the vast variety of printers
    you can use. Making your FreeBSD machine send print jobs to a print server isn’t
    hard at all, however. We cover the topic in [Chapter 20](ch20.xhtml#ch20).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/profile**'
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The */etc/profile* files contain the default account configuration information
    for the */bin/sh* shell, much like */etc/csh.** for csh and tcsh users. Whenever
    a */bin/sh* user logs in, he inherits what’s in this file. Users can override
    */etc/profile* with their own *.profile*. Bash and other sh derivatives also use
    this file.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: While tcsh is the standard FreeBSD shell, sh and derivatives (particularly bash)
    are quite popular. Keep settings in */etc/profile* and */etc/csh.login* synchronized
    to ease troubleshooting in the future—or, better still, set necessary environment
    variables in a login class (see [Chapter 9](ch09.xhtml#ch09)) so that they affect
    any shell the user needs.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/protocols**'
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In [Chapter 7](ch07.xhtml#ch07), we discussed network protocols. The */etc/protocols*
    file lists the various network protocols you might encounter. Remember, a TCP
    or UDP port number isn’t the same as a protocol number.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/pwd.db**'
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is the database version of the */etc/passwd file*. It contains public information
    about user accounts, as discussed in [Chapter 9](ch09.xhtml#ch09).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/rc***'
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Whenever your system boots to the point where it can execute userland commands,
    it runs the shell script */etc/rc*. This script mounts all filesystems, brings
    up the network interfaces, configures devfs(5), finds and catalogs shared libraries,
    and performs all the other tasks required to set up a system. We discussed the
    FreeBSD startup system in [Chapter 4](ch04.xhtml#ch04).
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Different systems have radically different startup tasks. A terminal server
    with three 48-port serial cards works completely differently from a web server.
    Instead of a single monolithic */etc/rc* script that handles every task, FreeBSD
    segregates each startup process into a separate shell script that addresses a
    specific need.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, you’ll find a few scripts directly under */etc*, such as */etc/rc.firewall*
    and */etc/rc.initdiskless*. These scripts were split out on their own years before
    the current startup system came along, and remain in their historical locations
    because there isn’t anything to be gained by moving them.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: '**/et/regdomain.xml**'
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Wireless cards are subject to different regulatory rules depending on where
    in the world they’re used. The cards read *regdomain.xml* to learn which frequencies
    they may use and how strongly they’re allowed to transmit. Edit this at your own
    risk.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/remote**'
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains machine-readable configurations for connecting to remote
    systems over serial lines. Today, this is of interest only if you use your system
    as a serial client—for example, if you want to connect to a serial console. We
    discuss serial consoles in [Chapter 4](ch04.xhtml#ch04).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/resolv.conf**'
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file lets you set nameservers, domain search order, and more DNS client
    settings. See [Chapter 8](ch08.xhtml#ch08) for the details.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/rpc**'
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Remote Procedure Calls (RPC)* is a method for executing commands on a remote
    computer. Much like TCP/IP, RPC has service and port numbers, and */etc/rpc* contains
    a list of these services and their port numbers. The most common RPC consumer
    is NFS, discussed in [Chapter 13](ch13.xhtml#ch13).'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/security/**'
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This directory contains configuration information for the audit(8) security
    utility.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/services**'
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains a list of network services and their associated TCP/IP ports.
    We discussed */etc/services* in [Chapter 7](ch07.xhtml#ch07).
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/shells**'
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains the list of all legitimate user shells, as discussed in [Chapter
    9](ch09.xhtml#ch09).
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/skel/**'
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In */etc/skel/*, you’ll find shell dotfiles that get copied to the new user
    accounts.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/snmpd.config**'
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD includes a basic SNMP implementation, which we discuss in [Chapter 20](ch20.xhtml#ch20).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/spwd.db**'
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains the confidential database of the user password file */etc/master.passwd*.
    See [Chapter 9](ch09.xhtml#ch09) for all the inglorious detail.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/src.conf**'
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains machine instructions for building FreeBSD from source. It’s
    a parallel of *make.conf* for the source tree alone. Values set in */etc/make.conf*
    affect building FreeBSD from source as well, though; the difference is that */etc/src.conf*
    affects only building FreeBSD but not ports and packages. See [Chapter 18](ch18.xhtml#ch18)
    for all your upgrading needs.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/ssh/**'
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Configure the Secure Shell software suite (SSH) in */etc/ssh*. This includes
    the client ssh(1) and the server sshd(8). [Chapter 20](ch20.xhtml#ch20) touches
    on sshd(8).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/ssl/**'
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD includes the OpenSSL cryptographic software. [Chapter 19](ch19.xhtml#ch19)
    discusses a few basic uses and configuration. The */etc/ssl* directory contains
    most OpenSSL information.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/sysctl.conf**'
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains information on which kernel sysctls are set during the boot
    process. See [Chapter 6](ch06.xhtml#ch06).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/syslog.conf, /etc/syslog.conf.d/**'
  id: totrans-194
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file controls which data goes into your system logs and where those logs
    are stored. See [Chapter 21](ch21.xhtml#ch21).
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/termcap, /etc/termcap.small**'
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains the settings and capabilities of different terminal types.
    In the age when terminals came in dozens of different types and vendors released
    new terminals on an almost daily basis, understanding this file was vital. Now
    that the world has largely converged on vt100 as a standard, however, the default
    configuration is suitable for almost everyone.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: The termcap file is a symlink to */usr/share/misc/termcap*. This file might
    not be available in single-user mode. FreeBSD offers the */etc/termcap.small*
    file to provide terminal information in single-user mode.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/ttys**'
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This file contains all of the system terminal devices (the windows containing
    a command prompt). The name is a relic of the time when terminals were physical
    teletypes, but today most users use the virtual terminals generated by telnet
    or SSH.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: We’ll use this file to set up serial logins in [Chapter 23](ch23.xhtml#ch23).
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/unbound/**'
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD ships with the Unbound DNS client. The configuration information goes
    in */etc/unbound/*. [Chapter 20](ch20.xhtml#ch20) covers setting up Unbound as
    a local DNS resolver.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/wall_cmos_clock**'
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This isn’t a vital file, but as I went to the trouble of digging up what it
    does, you get to learn about it. If this file exists, FreeBSD’s time-keeping routines
    have determined that the hardware’s CMOS clock keeps a time other than Coordinated
    Universal Time (UTC). If the file is missing, the CMOS clock is set to some other
    time. It’s documented in adjkerntz(8).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: '**/etc/zfs/**'
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeBSD’s ZFS uses this directory to store NFS integration information. We discuss
    NFS in [Chapter 13](ch13.xhtml#ch13).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: If you can crawl through all of */etc*, you’ll be better prepared than most
    sysadmins. Now let’s add some software to your server.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
