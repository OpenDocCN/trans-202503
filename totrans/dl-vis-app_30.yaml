- en: Index
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please note that index links to approximate location of each term.
  prefs: []
  type: TYPE_NORMAL
- en: '**Symbols and Numbers**'
  prefs: []
  type: TYPE_NORMAL
- en: α (alpha), Q-learning blending, [629](c21.xhtml#Page_629)
  prefs: []
  type: TYPE_NORMAL
- en: β1 (beta 1), Adam parameter, [421](c15.xhtml#Page_421)
  prefs: []
  type: TYPE_NORMAL
- en: β2 (beta 2), Adam parameter, [421](c15.xhtml#Page_421)
  prefs: []
  type: TYPE_NORMAL
- en: δ (delta), proportion of error change, [357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: Δ (Delta), proportion of error change, [357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: ε (epsilon)
  prefs: []
  type: TYPE_NORMAL
- en: numerical stability parameter, [419](c15.xhtml#Page_419)
  prefs: []
  type: TYPE_NORMAL
- en: Q-learning policy, [630](c21.xhtml#Page_630)
  prefs: []
  type: TYPE_NORMAL
- en: η (eta), learning rate
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [377](c14.xhtml#Page_377)
  prefs: []
  type: TYPE_NORMAL
- en: practical issues during optimization, [389](c15.xhtml#Page_389)
  prefs: []
  type: TYPE_NORMAL
- en: γ (gamma)
  prefs: []
  type: TYPE_NORMAL
- en: Adagrad scaling parameter, [419](c15.xhtml#Page_419)
  prefs: []
  type: TYPE_NORMAL
- en: discount factor, [611](c21.xhtml#Page_611)
  prefs: []
  type: TYPE_NORMAL
- en: momentum scaling factor, [410](c15.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: λ (lambda), regularization control, [204](c09.xhtml#Page_204)
  prefs: []
  type: TYPE_NORMAL
- en: σ (sigma), standard deviation, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: θ (theta), coin bias, [103](c04.xhtml#Page_103)
  prefs: []
  type: TYPE_NORMAL
- en: P(A), simple probability, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: P(A,B), joint probability, [53](c03.xhtml#Page_53)
  prefs: []
  type: TYPE_NORMAL
- en: P(A|B), conditional probability, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: 1-hot encoding, [226](c10.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: 1D convolution, [446](c16.xhtml#Page_446)
  prefs: []
  type: TYPE_NORMAL
- en: 1×1 convolution, [447](c16.xhtml#Page_447)
  prefs: []
  type: TYPE_NORMAL
- en: 20 Questions, [269](c11.xhtml#Page_269)
  prefs: []
  type: TYPE_NORMAL
- en: 68-95-99.7 rule, [25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: '**A**'
  prefs: []
  type: TYPE_NORMAL
- en: accuracy, [64](c03.xhtml#Page_64)
  prefs: []
  type: TYPE_NORMAL
- en: activation function
  prefs: []
  type: TYPE_NORMAL
- en: exponential ReLU, [340](c13.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: gallery of functions, [344](c13.xhtml#Page_344)
  prefs: []
  type: TYPE_NORMAL
- en: Heaviside step, [334](c13.xhtml#Page_334)
  prefs: []
  type: TYPE_NORMAL
- en: identity, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [318](c13.xhtml#Page_318)
  prefs: []
  type: TYPE_NORMAL
- en: leaky ReLU, [337](c13.xhtml#Page_337)
  prefs: []
  type: TYPE_NORMAL
- en: linear, [332](c13.xhtml#Page_332)
  prefs: []
  type: TYPE_NORMAL
- en: logistic curve, [341](c13.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: maxout, [338](c13.xhtml#Page_338)
  prefs: []
  type: TYPE_NORMAL
- en: noisy ReLU, [339](c13.xhtml#Page_339)
  prefs: []
  type: TYPE_NORMAL
- en: parametric ReLU, [337](c13.xhtml#Page_337)
  prefs: []
  type: TYPE_NORMAL
- en: piecewise linear, [336](c13.xhtml#Page_336)
  prefs: []
  type: TYPE_NORMAL
- en: ReLU, [336](c13.xhtml#Page_336)
  prefs: []
  type: TYPE_NORMAL
- en: role in preventing network collapse, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: shifted ReLU, [338](c13.xhtml#Page_338)
  prefs: []
  type: TYPE_NORMAL
- en: sigmoid, [341](c13.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: sign function, [335](c13.xhtml#Page_335)
  prefs: []
  type: TYPE_NORMAL
- en: sine wave, [343](c13.xhtml#Page_343)
  prefs: []
  type: TYPE_NORMAL
- en: softmax, [345](c13.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: softplus, [340](c13.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: stairstep, [333](c13.xhtml#Page_333)
  prefs: []
  type: TYPE_NORMAL
- en: step, [333](c13.xhtml#Page_333)
  prefs: []
  type: TYPE_NORMAL
- en: swish, [341](c13.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: tanh, [341](c13.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: unit step, [334](c13.xhtml#Page_334)
  prefs: []
  type: TYPE_NORMAL
- en: actor, [602](c21.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: acyclic graph, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: Adaboost, [309](c12.xhtml#Page_309)
  prefs: []
  type: TYPE_NORMAL
- en: Adadelta, [418](c15.xhtml#Page_418)
  prefs: []
  type: TYPE_NORMAL
- en: Adagrad, [417](c15.xhtml#Page_417)
  prefs: []
  type: TYPE_NORMAL
- en: Adam, [420](c15.xhtml#Page_420)
  prefs: []
  type: TYPE_NORMAL
- en: adaptive code, [137](c06.xhtml#Page_137)
  prefs: []
  type: TYPE_NORMAL
- en: adaptive gradient learning, [417](c15.xhtml#Page_417)
  prefs: []
  type: TYPE_NORMAL
- en: adaptive moment estimation, [420](c15.xhtml#Page_420)
  prefs: []
  type: TYPE_NORMAL
- en: '*The Adventures of Huckleberry Finn*, [146](c06.xhtml#Page_146)'
  prefs: []
  type: TYPE_NORMAL
- en: adversarial perturbation, [491](c17.xhtml#Page_491)
  prefs: []
  type: TYPE_NORMAL
- en: adversary, [491](c17.xhtml#Page_491)
  prefs: []
  type: TYPE_NORMAL
- en: agent, [602](c21.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: AI winter, [317](c13.xhtml#Page_317)
  prefs: []
  type: TYPE_NORMAL
- en: ancestor (in a neural network), [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: anchor point, [436](c16.xhtml#Page_436)
  prefs: []
  type: TYPE_NORMAL
- en: '*Animal Crackers*, [559](c19.xhtml#Page_559)'
  prefs: []
  type: TYPE_NORMAL
- en: Anscombe’s quartet, [40](c02.xhtml#Page_40)
  prefs: []
  type: TYPE_NORMAL
- en: answer questions, [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: Apollo spacecraft, [297](c12.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: arc (in a neural network), [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: archaeology coin-flipping game (scenario), [103](c04.xhtml#Page_103)
  prefs: []
  type: TYPE_NORMAL
- en: array, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: artificial neuron. *See* neuron
  prefs: []
  type: TYPE_NORMAL
- en: atmospheric example, [205](c09.xhtml#Page_205)
  prefs: []
  type: TYPE_NORMAL
- en: atrous convolution, [457](c16.xhtml#Page_457)
  prefs: []
  type: TYPE_NORMAL
- en: attacks (with perturbations), [493](c17.xhtml#Page_493)
  prefs: []
  type: TYPE_NORMAL
- en: attention
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [574](c20.xhtml#Page_574)
  prefs: []
  type: TYPE_NORMAL
- en: key, [575](c20.xhtml#Page_575)
  prefs: []
  type: TYPE_NORMAL
- en: Q/KV, [579](c20.xhtml#Page_579)
  prefs: []
  type: TYPE_NORMAL
- en: QKV, [575](c20.xhtml#Page_575)
  prefs: []
  type: TYPE_NORMAL
- en: query, [575](c20.xhtml#Page_575)
  prefs: []
  type: TYPE_NORMAL
- en: self-attention, [576](c20.xhtml#Page_576)
  prefs: []
  type: TYPE_NORMAL
- en: value, [575](c20.xhtml#Page_575)
  prefs: []
  type: TYPE_NORMAL
- en: attention layer
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [578](c20.xhtml#Page_578)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [581](c20.xhtml#Page_581)
  prefs: []
  type: TYPE_NORMAL
- en: autoencoder
  prefs: []
  type: TYPE_NORMAL
- en: basic structure, [495](c18.xhtml#Page_495)
  prefs: []
  type: TYPE_NORMAL
- en: convolutional, [516](c18.xhtml#Page_516)
  prefs: []
  type: TYPE_NORMAL
- en: latent layer, [501](c18.xhtml#Page_501)
  prefs: []
  type: TYPE_NORMAL
- en: automatic Bayes, [97](c04.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: autoregression, [541](c19.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: average
  prefs: []
  type: TYPE_NORMAL
- en: common meaning, [16](c02.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: harmonic mean, [71](c03.xhtml#Page_71)
  prefs: []
  type: TYPE_NORMAL
- en: mean, [16](c02.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: median, [16](c02.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: mode, [16](c02.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: average pooling, [452](c16.xhtml#Page_452)
  prefs: []
  type: TYPE_NORMAL
- en: '**B**'
  prefs: []
  type: TYPE_NORMAL
- en: baby lengths (scenario), [33](c02.xhtml#Page_33)
  prefs: []
  type: TYPE_NORMAL
- en: backprop, [351](c14.xhtml#Page_351)
  prefs: []
  type: TYPE_NORMAL
- en: backpropagation, [351](c14.xhtml#Page_351)
  prefs: []
  type: TYPE_NORMAL
- en: backpropagation through time, [553](c19.xhtml#Page_553)
  prefs: []
  type: TYPE_NORMAL
- en: backward propagation, [376](c14.xhtml#Page_376)
  prefs: []
  type: TYPE_NORMAL
- en: bagging, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: balanced decision tree, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: base image, [680](c23.xhtml#Page_680)
  prefs: []
  type: TYPE_NORMAL
- en: batch gradient descent, [401](c15.xhtml#Page_401)
  prefs: []
  type: TYPE_NORMAL
- en: batchnorm
  prefs: []
  type: TYPE_NORMAL
- en: discussion, [424](c15.xhtml#Page_424)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [424](c15.xhtml#Page_424)
  prefs: []
  type: TYPE_NORMAL
- en: Baxter, William, [139](c06.xhtml#Page_139)
  prefs: []
  type: TYPE_NORMAL
- en: Bayes’ Rule
  prefs: []
  type: TYPE_NORMAL
- en: discussion, [95](c04.xhtml#Page_95)
  prefs: []
  type: TYPE_NORMAL
- en: evidence, [96](c04.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: hypothesis, [102](c04.xhtml#Page_102)
  prefs: []
  type: TYPE_NORMAL
- en: likelihood, [96](c04.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: line fitting, [212](c09.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: multiple hypotheses, [109](c04.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: observation, [102](c04.xhtml#Page_102)
  prefs: []
  type: TYPE_NORMAL
- en: posterior, [96](c04.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: prior, [96](c04.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: refining estimate, [101](c04.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: repeating, [101](c04.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: statement, [94](c04.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: Bayes’ Theorem. *See* Bayes’ Rule
  prefs: []
  type: TYPE_NORMAL
- en: Bayes, Thomas, [83](c04.xhtml#Page_83)
  prefs: []
  type: TYPE_NORMAL
- en: Bayesian probability
  prefs: []
  type: TYPE_NORMAL
- en: vs. frequentist, [85](c04.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [85](c04.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: beam search, [595](c20.xhtml#Page_595)
  prefs: []
  type: TYPE_NORMAL
- en: bell curve, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: Bernoulli distribution, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: BERT, [590](c20.xhtml#Page_590)
  prefs: []
  type: TYPE_NORMAL
- en: bi-RNN, [559](c19.xhtml#Page_559)
  prefs: []
  type: TYPE_NORMAL
- en: bias
  prefs: []
  type: TYPE_NORMAL
- en: in artificial neuron, [318](c13.xhtml#Page_318)
  prefs: []
  type: TYPE_NORMAL
- en: bias trick, [320](c13.xhtml#Page_320)
  prefs: []
  type: TYPE_NORMAL
- en: in families of curves, [204](c09.xhtml#Page_204)
  prefs: []
  type: TYPE_NORMAL
- en: of a flipped coin, [86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: bias in, bias out, [673](c22.xhtml#Page_673)
  prefs: []
  type: TYPE_NORMAL
- en: bias-variance tradeoff, [210](c09.xhtml#Page_210)
  prefs: []
  type: TYPE_NORMAL
- en: bidirectional RNN layer
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [559](c19.xhtml#Page_559)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [559](c19.xhtml#Page_559)
  prefs: []
  type: TYPE_NORMAL
- en: binary classifier network, [378](c14.xhtml#Page_378)
  prefs: []
  type: TYPE_NORMAL
- en: binary cross entropy, [150](c06.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: binary relevance, [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: bind (to neuron), [314](c13.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: bit, [136](c06.xhtml#Page_136)
  prefs: []
  type: TYPE_NORMAL
- en: blessing of non-uniformity, [173](c07.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: blessing of structure, [173](c07.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: block of numbers, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: BMI (body mass index), [243](c10.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: bold driver method, [400](c15.xhtml#Page_400)
  prefs: []
  type: TYPE_NORMAL
- en: boosting, [302](c12.xhtml#Page_302)
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: bootstrap aggregation, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: bootstrapping. *See* bootstraps
  prefs: []
  type: TYPE_NORMAL
- en: bootstraps
  prefs: []
  type: TYPE_NORMAL
- en: in bagging (for ensembles), [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: in statistics, [31](c02.xhtml#Page_31)
  prefs: []
  type: TYPE_NORMAL
- en: linear, [39](c02.xhtml#Page_39)
  prefs: []
  type: TYPE_NORMAL
- en: multiple, [39](c02.xhtml#Page_39)
  prefs: []
  type: TYPE_NORMAL
- en: negative, [38](c02.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: partial, [39](c02.xhtml#Page_39)
  prefs: []
  type: TYPE_NORMAL
- en: positive, [38](c02.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: simple, [39](c02.xhtml#Page_39)
  prefs: []
  type: TYPE_NORMAL
- en: strong, [38](c02.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: weak, [38](c02.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: bottleneck, [501](c18.xhtml#Page_501)
  prefs: []
  type: TYPE_NORMAL
- en: bouncing around the minimum, [394](c15.xhtml#Page_394)
  prefs: []
  type: TYPE_NORMAL
- en: boundary
  prefs: []
  type: TYPE_NORMAL
- en: classifier, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: decision boundary, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: method, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: simple, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: box filter, [451](c16.xhtml#Page_451)
  prefs: []
  type: TYPE_NORMAL
- en: BPTT (backpropagation through time), [553](c19.xhtml#Page_553)
  prefs: []
  type: TYPE_NORMAL
- en: branch (in decision tree), [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: building a sundae (scenario), [548](c19.xhtml#Page_548)
  prefs: []
  type: TYPE_NORMAL
- en: '**C**'
  prefs: []
  type: TYPE_NORMAL
- en: '*C* (support vector machine parameter), [285](c11.xhtml#Page_285)'
  prefs: []
  type: TYPE_NORMAL
- en: candling, [157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: Cartesian space, [213](c09.xhtml#Page_213)
  prefs: []
  type: TYPE_NORMAL
- en: categorical data, [226](c10.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: categorical distribution, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: categorical variable decision tree, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: categorization. *See* classifier
  prefs: []
  type: TYPE_NORMAL
- en: categorizer. *See* classifier
  prefs: []
  type: TYPE_NORMAL
- en: category, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: channel (in a tensor), [430](c16.xhtml#Page_430)
  prefs: []
  type: TYPE_NORMAL
- en: cheating
  prefs: []
  type: TYPE_NORMAL
- en: at finding tanks, [185](c08.xhtml#Page_185)
  prefs: []
  type: TYPE_NORMAL
- en: when overfitting, [197](c09.xhtml#Page_197)
  prefs: []
  type: TYPE_NORMAL
- en: child
  prefs: []
  type: TYPE_NORMAL
- en: in a decision tree, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: in a neural network, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: choosing store background music (scenario), [198](c09.xhtml#Page_198)
  prefs: []
  type: TYPE_NORMAL
- en: class, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: classification. *See* classifier
  prefs: []
  type: TYPE_NORMAL
- en: classifier
  prefs: []
  type: TYPE_NORMAL
- en: binary, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: binary relevance, [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: multiclass, [160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: non-parametric, [264](c11.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: one-against-all, [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: one-versus-all, [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: one-versus-one, [163](c07.xhtml#Page_163)
  prefs: []
  type: TYPE_NORMAL
- en: one-versus-rest, [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: parametric, [264](c11.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: training, [182](c08.xhtml#Page_182)
  prefs: []
  type: TYPE_NORMAL
- en: closure (training task), [591](c20.xhtml#Page_591)
  prefs: []
  type: TYPE_NORMAL
- en: cloze task, [591](c20.xhtml#Page_591)
  prefs: []
  type: TYPE_NORMAL
- en: clustering
  prefs: []
  type: TYPE_NORMAL
- en: k-means, [166](c07.xhtml#Page_166)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [8](c01.xhtml#Page_8)
  prefs: []
  type: TYPE_NORMAL
- en: CNN (convolutional neural network), [431](c16.xhtml#Page_431)
  prefs: []
  type: TYPE_NORMAL
- en: CNN-LSTM, [557](c19.xhtml#Page_557)
  prefs: []
  type: TYPE_NORMAL
- en: code
  prefs: []
  type: TYPE_NORMAL
- en: adaptive, [137](c06.xhtml#Page_137)
  prefs: []
  type: TYPE_NORMAL
- en: constant-length, [141](c06.xhtml#Page_141)
  prefs: []
  type: TYPE_NORMAL
- en: fixed-length, [141](c06.xhtml#Page_141)
  prefs: []
  type: TYPE_NORMAL
- en: Huffman, [148](c06.xhtml#Page_148)
  prefs: []
  type: TYPE_NORMAL
- en: variable-bitrate, [143](c06.xhtml#Page_143)
  prefs: []
  type: TYPE_NORMAL
- en: coin detection (scenario), [86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: coin flipping
  prefs: []
  type: TYPE_NORMAL
- en: basic idea, [86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: Bayesian approach, [87](c04.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: coin-flipping game (scenario), [87](c04.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: collapse, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: Common Crawl, [597](c20.xhtml#Page_597)
  prefs: []
  type: TYPE_NORMAL
- en: compression, [496](c18.xhtml#Page_496)
  prefs: []
  type: TYPE_NORMAL
- en: compression ratio, [148](c06.xhtml#Page_148)
  prefs: []
  type: TYPE_NORMAL
- en: concealed data poisoning, [598](c20.xhtml#Page_598)
  prefs: []
  type: TYPE_NORMAL
- en: conditional probability, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: confidence (in ensemble voting), [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: confidence interval, [32](c02.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: confusion matrix
  prefs: []
  type: TYPE_NORMAL
- en: with Bayes’ Rule, [97](c04.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: correct analysis, [77](c03.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: definition, [60](c03.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: proper use, [74](c03.xhtml#Page_74)
  prefs: []
  type: TYPE_NORMAL
- en: wrong use, [76](c03.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: connectome, [315](c13.xhtml#Page_315)
  prefs: []
  type: TYPE_NORMAL
- en: consistency in data preparation, [223](c10.xhtml#Page_223)
  prefs: []
  type: TYPE_NORMAL
- en: constant distribution, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: constant-length code, [141](c06.xhtml#Page_141)
  prefs: []
  type: TYPE_NORMAL
- en: contaminated data, [187](c08.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: content blending, [498](c18.xhtml#Page_498)
  prefs: []
  type: TYPE_NORMAL
- en: content loss (for style transfer), [683](c23.xhtml#Page_683)
  prefs: []
  type: TYPE_NORMAL
- en: context (in information), [135](c06.xhtml#Page_135)
  prefs: []
  type: TYPE_NORMAL
- en: context vector, [562](c19.xhtml#Page_562)
  prefs: []
  type: TYPE_NORMAL
- en: contextualized word embeddings, [571](c20.xhtml#Page_571)
  prefs: []
  type: TYPE_NORMAL
- en: continuous probability distribution, [21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: continuous variable decision tree, [272](c11.xhtml#Page_272)
  prefs: []
  type: TYPE_NORMAL
- en: convergence
  prefs: []
  type: TYPE_NORMAL
- en: of GAN, [670](c22.xhtml#Page_670)
  prefs: []
  type: TYPE_NORMAL
- en: of Q-learning, [633](c21.xhtml#Page_633)
  prefs: []
  type: TYPE_NORMAL
- en: convnet, [431](c16.xhtml#Page_431)
  prefs: []
  type: TYPE_NORMAL
- en: convolution
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [433](c16.xhtml#Page_433)
  prefs: []
  type: TYPE_NORMAL
- en: layer, [446](c16.xhtml#Page_446)
  prefs: []
  type: TYPE_NORMAL
- en: layer schematic symbol, [471](c16.xhtml#Page_471)
  prefs: []
  type: TYPE_NORMAL
- en: multidimensional, [443](c16.xhtml#Page_443)
  prefs: []
  type: TYPE_NORMAL
- en: striding, [453](c16.xhtml#Page_453)
  prefs: []
  type: TYPE_NORMAL
- en: transposed convolution, [457](c16.xhtml#Page_457)
  prefs: []
  type: TYPE_NORMAL
- en: convolution with downsampling layer symbol, [521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: convolution with upsampling layer symbol, [521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: convolutional autoencoder, [516](c18.xhtml#Page_516)
  prefs: []
  type: TYPE_NORMAL
- en: convolutional neural network, [431](c16.xhtml#Page_431)
  prefs: []
  type: TYPE_NORMAL
- en: correctness, [56](c03.xhtml#Page_56)
  prefs: []
  type: TYPE_NORMAL
- en: correlation, [37](c02.xhtml#Page_37)
  prefs: []
  type: TYPE_NORMAL
- en: correlation coefficient, [38](c02.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: cost (for neural network error), [352](c14.xhtml#Page_352)
  prefs: []
  type: TYPE_NORMAL
- en: covariance, [35](c02.xhtml#Page_35)
  prefs: []
  type: TYPE_NORMAL
- en: cpd (continuous probability distribution), [21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: credit assignment problem, [608](c21.xhtml#Page_608)
  prefs: []
  type: TYPE_NORMAL
- en: cross entropy, [145](c06.xhtml#Page_145)
  prefs: []
  type: TYPE_NORMAL
- en: cross-validation
  prefs: []
  type: TYPE_NORMAL
- en: basic, [190](c08.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: information leakage, [239](c10.xhtml#Page_239)
  prefs: []
  type: TYPE_NORMAL
- en: k-fold, [192](c08.xhtml#Page_192)
  prefs: []
  type: TYPE_NORMAL
- en: curse of dimensionality, [168](c07.xhtml#Page_168)
  prefs: []
  type: TYPE_NORMAL
- en: cusp, [118](c05.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: cycle (in a neural network), [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: '**D**'
  prefs: []
  type: TYPE_NORMAL
- en: DAG (directed acyclic graph), [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: dart throwing (scenario), [48](c03.xhtml#Page_48)
  prefs: []
  type: TYPE_NORMAL
- en: data
  prefs: []
  type: TYPE_NORMAL
- en: augmentation, [255](c10.xhtml#Page_255)
  prefs: []
  type: TYPE_NORMAL
- en: cleaning, [221](c10.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: contamination, [187](c08.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: hygiene, [187](c08.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: leakage, [187](c08.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: poisoning, [598](c20.xhtml#Page_598)
  prefs: []
  type: TYPE_NORMAL
- en: preparation, [221](c10.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: dataset enlargement, [255](c10.xhtml#Page_255)
  prefs: []
  type: TYPE_NORMAL
- en: DCGAN (deep convolutional GAN), [667](c22.xhtml#Page_667)
  prefs: []
  type: TYPE_NORMAL
- en: dead neuron, [345](c13.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: decay parameter (for learning rate), [396](c15.xhtml#Page_396)
  prefs: []
  type: TYPE_NORMAL
- en: decay schedule, [398](c15.xhtml#Page_398)
  prefs: []
  type: TYPE_NORMAL
- en: decision boundary, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: decision node (in decision tree), [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: decision region, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: decision stump, [303](c12.xhtml#Page_303)
  prefs: []
  type: TYPE_NORMAL
- en: decision tree
  prefs: []
  type: TYPE_NORMAL
- en: balanced, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: branch, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: children, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: decision node, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: depth, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: depth limiting, [280](c11.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: distant children, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: edge, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: ensemble, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: immediate children, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: internal node, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: leaf, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: link, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: node, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: overfitting, [275](c11.xhtml#Page_275)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [269](c11.xhtml#Page_269)
  prefs: []
  type: TYPE_NORMAL
- en: parent, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: pruning, [280](c11.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: root, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: sibling, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: stump, [303](c12.xhtml#Page_303)
  prefs: []
  type: TYPE_NORMAL
- en: subtree, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: terminal node, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: unbalanced, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: decoder
  prefs: []
  type: TYPE_NORMAL
- en: for autoencoder, [496](c18.xhtml#Page_496)
  prefs: []
  type: TYPE_NORMAL
- en: for seq2seq, [561](c19.xhtml#Page_561)
  prefs: []
  type: TYPE_NORMAL
- en: decoder block (transformer), [587](c20.xhtml#Page_587)
  prefs: []
  type: TYPE_NORMAL
- en: deconvolution (as transposed convolution), [457](c16.xhtml#Page_457)
  prefs: []
  type: TYPE_NORMAL
- en: deep convolutional GAN, [667](c22.xhtml#Page_667)
  prefs: []
  type: TYPE_NORMAL
- en: deep dreaming, [675](c23.xhtml#Page_675)
  prefs: []
  type: TYPE_NORMAL
- en: deep learning
  prefs: []
  type: TYPE_NORMAL
- en: network structure, [326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: deep reinforcement learning, [647](c21.xhtml#Page_647)
  prefs: []
  type: TYPE_NORMAL
- en: delay step, [550](c19.xhtml#Page_550)
  prefs: []
  type: TYPE_NORMAL
- en: delayed exponential decay, [398](c15.xhtml#Page_398)
  prefs: []
  type: TYPE_NORMAL
- en: delta values (for neurons), [360](c14.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: denoising, [519](c18.xhtml#Page_519)
  prefs: []
  type: TYPE_NORMAL
- en: dense layer. *See* fully connected layer
  prefs: []
  type: TYPE_NORMAL
- en: density, [169](c07.xhtml#Page_169)
  prefs: []
  type: TYPE_NORMAL
- en: dependent variable, [29](c02.xhtml#Page_29)
  prefs: []
  type: TYPE_NORMAL
- en: deployed system, [183](c08.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: depth
  prefs: []
  type: TYPE_NORMAL
- en: in decision tree, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: of a deep learning network, [327](c13.xhtml#Page_327)
  prefs: []
  type: TYPE_NORMAL
- en: of a tensor, [430](c16.xhtml#Page_430)
  prefs: []
  type: TYPE_NORMAL
- en: depth limiting, [280](c11.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: derivative
  prefs: []
  type: TYPE_NORMAL
- en: definition, [119](c05.xhtml#Page_119)
  prefs: []
  type: TYPE_NORMAL
- en: requirements, [123](c05.xhtml#Page_123)
  prefs: []
  type: TYPE_NORMAL
- en: descendent (in a neural network), [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: deterministic
  prefs: []
  type: TYPE_NORMAL
- en: environment, [611](c21.xhtml#Page_611)
  prefs: []
  type: TYPE_NORMAL
- en: function, [118](c05.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: deterministic environment, [611](c21.xhtml#Page_611)
  prefs: []
  type: TYPE_NORMAL
- en: DFR (discounted future reward), [609](c21.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: Dickens, Charles, [545](c19.xhtml#Page_545)
  prefs: []
  type: TYPE_NORMAL
- en: digits, [4](c01.xhtml#Page_4)
  prefs: []
  type: TYPE_NORMAL
- en: dilated convolution, [457](c16.xhtml#Page_457)
  prefs: []
  type: TYPE_NORMAL
- en: dimensionality reduction, [243](c10.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: diminishing returns (in ensembles), [300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: directed acyclic graph, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: directed divergence, [151](c06.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: directed graph, [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: discount factor, [611](c21.xhtml#Page_611)
  prefs: []
  type: TYPE_NORMAL
- en: discounted future reward, [609](c21.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: discrete probability distribution, [20](c02.xhtml#Page_20)
  prefs: []
  type: TYPE_NORMAL
- en: discrimination information, [151](c06.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: discriminator, [650](c22.xhtml#Page_650)
  prefs: []
  type: TYPE_NORMAL
- en: distant children (in decision tree), [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: distilling, [593](c20.xhtml#Page_593)
  prefs: []
  type: TYPE_NORMAL
- en: distinguishing cows and zebras (scenario), [224](c10.xhtml#Page_224)
  prefs: []
  type: TYPE_NORMAL
- en: dit, [137](c06.xhtml#Page_137)
  prefs: []
  type: TYPE_NORMAL
- en: domain, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: downsampling, [451](c16.xhtml#Page_451)
  prefs: []
  type: TYPE_NORMAL
- en: downsizing, [457](c16.xhtml#Page_457)
  prefs: []
  type: TYPE_NORMAL
- en: downstream
  prefs: []
  type: TYPE_NORMAL
- en: network, [542](c19.xhtml#Page_542)
  prefs: []
  type: TYPE_NORMAL
- en: task, [542](c19.xhtml#Page_542)
  prefs: []
  type: TYPE_NORMAL
- en: Dr. Seuss, [137](c06.xhtml#Page_137)
  prefs: []
  type: TYPE_NORMAL
- en: dropout
  prefs: []
  type: TYPE_NORMAL
- en: discussion, [422](c15.xhtml#Page_422)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [422](c15.xhtml#Page_422)
  prefs: []
  type: TYPE_NORMAL
- en: dual representation, [213](c09.xhtml#Page_213)
  prefs: []
  type: TYPE_NORMAL
- en: dummy variable, [226](c10.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: '**E**'
  prefs: []
  type: TYPE_NORMAL
- en: '*E* (neural network error), [359](c14.xhtml#Page_359)'
  prefs: []
  type: TYPE_NORMAL
- en: early stopping, [202](c09.xhtml#Page_202)
  prefs: []
  type: TYPE_NORMAL
- en: edge
  prefs: []
  type: TYPE_NORMAL
- en: in a decision tree, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: in a neural network, [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: eggs
  prefs: []
  type: TYPE_NORMAL
- en: fertilized, [157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: quitter, [160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: unfertilized, [157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: winner, [160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: yolker, [160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: eigendog, [256](c10.xhtml#Page_256)
  prefs: []
  type: TYPE_NORMAL
- en: eigenvector, [256](c10.xhtml#Page_256)
  prefs: []
  type: TYPE_NORMAL
- en: element
  prefs: []
  type: TYPE_NORMAL
- en: in a neural network, [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: in a tensor, [430](c16.xhtml#Page_430)
  prefs: []
  type: TYPE_NORMAL
- en: elementwise processing, [234](c10.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: elevator scheduling (scenario), [9](c01.xhtml#Page_9)
  prefs: []
  type: TYPE_NORMAL
- en: ELMo, [571](c20.xhtml#Page_571)
  prefs: []
  type: TYPE_NORMAL
- en: ELU (exponential ReLU activation function), [340](c13.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: embedding
  prefs: []
  type: TYPE_NORMAL
- en: contextualized, [572](c20.xhtml#Page_572)
  prefs: []
  type: TYPE_NORMAL
- en: sentence, [571](c20.xhtml#Page_571)
  prefs: []
  type: TYPE_NORMAL
- en: space, [569](c20.xhtml#Page_569)
  prefs: []
  type: TYPE_NORMAL
- en: token, [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: word, [566](c20.xhtml#Page_566)
  prefs: []
  type: TYPE_NORMAL
- en: embedding layer schematic symbol, [574](c20.xhtml#Page_574)
  prefs: []
  type: TYPE_NORMAL
- en: encoder
  prefs: []
  type: TYPE_NORMAL
- en: for autoencoder, [496](c18.xhtml#Page_496)
  prefs: []
  type: TYPE_NORMAL
- en: for seq2seq, [561](c19.xhtml#Page_561)
  prefs: []
  type: TYPE_NORMAL
- en: encoder block (transformer), [587](c20.xhtml#Page_587)
  prefs: []
  type: TYPE_NORMAL
- en: encoder-decoder attention, [579](c20.xhtml#Page_579)
  prefs: []
  type: TYPE_NORMAL
- en: ensemble, [280](c11.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: entropy, [143](c06.xhtml#Page_143)
  prefs: []
  type: TYPE_NORMAL
- en: environment (in reinforcement learning), [602](c21.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: environmental state, [605](c21.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: episode, [605](c21.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: epoch, [182](c08.xhtml#Page_182)
  prefs: []
  type: TYPE_NORMAL
- en: epoch gradient descent, [401](c15.xhtml#Page_401)
  prefs: []
  type: TYPE_NORMAL
- en: epsilon-greedy policy, [630](c21.xhtml#Page_630)
  prefs: []
  type: TYPE_NORMAL
- en: epsilon-soft policy, [630](c21.xhtml#Page_630)
  prefs: []
  type: TYPE_NORMAL
- en: error (for neural network error), [352](c14.xhtml#Page_352)
  prefs: []
  type: TYPE_NORMAL
- en: error curve (for neural network error), [355](c14.xhtml#Page_355)
  prefs: []
  type: TYPE_NORMAL
- en: error-based decay, [399](c15.xhtml#Page_399)
  prefs: []
  type: TYPE_NORMAL
- en: event
  prefs: []
  type: TYPE_NORMAL
- en: in information theory, [136](c06.xhtml#Page_136)
  prefs: []
  type: TYPE_NORMAL
- en: in probability, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: evidence, [96](c04.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: expected value, [28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: expert system, [4](c01.xhtml#Page_4)
  prefs: []
  type: TYPE_NORMAL
- en: explainability. *See* transparency
  prefs: []
  type: TYPE_NORMAL
- en: exploding gradient, [553](c19.xhtml#Page_553)
  prefs: []
  type: TYPE_NORMAL
- en: exploit, [608](c21.xhtml#Page_608)
  prefs: []
  type: TYPE_NORMAL
- en: explore or exploit dilemma, [608](c21.xhtml#Page_608)
  prefs: []
  type: TYPE_NORMAL
- en: exponential decay (of learning rate), [396](c15.xhtml#Page_396)
  prefs: []
  type: TYPE_NORMAL
- en: exponential ReLU activation function, [340](c13.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: extra trees, [302](c12.xhtml#Page_302)
  prefs: []
  type: TYPE_NORMAL
- en: Extremely Randomized Trees, [302](c12.xhtml#Page_302)
  prefs: []
  type: TYPE_NORMAL
- en: '**F**'
  prefs: []
  type: TYPE_NORMAL
- en: f1 score, [71](c03.xhtml#Page_71)
  prefs: []
  type: TYPE_NORMAL
- en: fair coin, [86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: false alarm, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: false discovery rate, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: false negative, [60](c03.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: false negative rate, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: false positive, [60](c03.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: false positive rate, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: FC. *See* fully connected layer
  prefs: []
  type: TYPE_NORMAL
- en: feature
  prefs: []
  type: TYPE_NORMAL
- en: as part of a sample, [157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: a target of convolution filter, [438](c16.xhtml#Page_438)
  prefs: []
  type: TYPE_NORMAL
- en: feature bagging, [301](c12.xhtml#Page_301)
  prefs: []
  type: TYPE_NORMAL
- en: feature detector, [438](c16.xhtml#Page_438)
  prefs: []
  type: TYPE_NORMAL
- en: feature engineering, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: feature filtering, [243](c10.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: feature map, [438](c16.xhtml#Page_438)
  prefs: []
  type: TYPE_NORMAL
- en: feature selection, [243](c10.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: featurewise processing, [233](c10.xhtml#Page_233)
  prefs: []
  type: TYPE_NORMAL
- en: feed-forward networks, [322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: feedback, [602](c21.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: feedback (in a neural network), [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: fertilized, [157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: few-shot training, [594](c20.xhtml#Page_594)
  prefs: []
  type: TYPE_NORMAL
- en: fiber size (of a tensor), [430](c16.xhtml#Page_430)
  prefs: []
  type: TYPE_NORMAL
- en: fibre, [234](c10.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: fidelty (of encoding), [497](c18.xhtml#Page_497)
  prefs: []
  type: TYPE_NORMAL
- en: fill a box with a sphere (scenario), [175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: filter
  prefs: []
  type: TYPE_NORMAL
- en: kernel, [433](c16.xhtml#Page_433)
  prefs: []
  type: TYPE_NORMAL
- en: value, [433](c16.xhtml#Page_433)
  prefs: []
  type: TYPE_NORMAL
- en: finding animals for movie (scenario), [566](c20.xhtml#Page_566)
  prefs: []
  type: TYPE_NORMAL
- en: finding information, [4](c01.xhtml#Page_4)
  prefs: []
  type: TYPE_NORMAL
- en: fine-tuning, [542](c19.xhtml#Page_542)
  prefs: []
  type: TYPE_NORMAL
- en: finite distribution, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: fist (sending Morse Code), [138](c06.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: fitting wind speed data (scenario), [205](c09.xhtml#Page_205)
  prefs: []
  type: TYPE_NORMAL
- en: fixed-length code, [141](c06.xhtml#Page_141)
  prefs: []
  type: TYPE_NORMAL
- en: fixed-step decay, [399](c15.xhtml#Page_399)
  prefs: []
  type: TYPE_NORMAL
- en: flat distribution, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: flatten layer
  prefs: []
  type: TYPE_NORMAL
- en: example, [475](c17.xhtml#Page_475)
  prefs: []
  type: TYPE_NORMAL
- en: illustration, [476](c17.xhtml#Page_476)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [474](c17.xhtml#Page_474)
  prefs: []
  type: TYPE_NORMAL
- en: Flippers game (scenario), [614](c21.xhtml#Page_614)
  prefs: []
  type: TYPE_NORMAL
- en: fold (in cross-validation), [192](c08.xhtml#Page_192)
  prefs: []
  type: TYPE_NORMAL
- en: footprint (of a convolution filter), [436](c16.xhtml#Page_436)
  prefs: []
  type: TYPE_NORMAL
- en: forest, [301](c12.xhtml#Page_301)
  prefs: []
  type: TYPE_NORMAL
- en: forging money (scenario), [650](c22.xhtml#Page_650)
  prefs: []
  type: TYPE_NORMAL
- en: fractional convolution, [457](c16.xhtml#Page_457)
  prefs: []
  type: TYPE_NORMAL
- en: frequentist probability
  prefs: []
  type: TYPE_NORMAL
- en: vs. Bayesian, [85](c04.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [84](c04.xhtml#Page_84)
  prefs: []
  type: TYPE_NORMAL
- en: frozen weights
  prefs: []
  type: TYPE_NORMAL
- en: deep dreaming, [677](c23.xhtml#Page_677)
  prefs: []
  type: TYPE_NORMAL
- en: in a GAN, [660](c22.xhtml#Page_660)
  prefs: []
  type: TYPE_NORMAL
- en: full modal collapse, [671](c22.xhtml#Page_671)
  prefs: []
  type: TYPE_NORMAL
- en: fully connected layer
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [328](c13.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [328](c13.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: fully connected network, [328](c13.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: function
  prefs: []
  type: TYPE_NORMAL
- en: argument, [118](c05.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: continuous, [118](c05.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: graphed, [124](c05.xhtml#Page_124)
  prefs: []
  type: TYPE_NORMAL
- en: mathematical, [118](c05.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: return values, [118](c05.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: single-valued, [119](c05.xhtml#Page_119)
  prefs: []
  type: TYPE_NORMAL
- en: smooth, [118](c05.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: '**G**'
  prefs: []
  type: TYPE_NORMAL
- en: '*g* (gradient), [410](c15.xhtml#Page_410)'
  prefs: []
  type: TYPE_NORMAL
- en: game theory, [656](c22.xhtml#Page_656)
  prefs: []
  type: TYPE_NORMAL
- en: GAN (generative adversarial network), [649](c22.xhtml#Page_649)
  prefs: []
  type: TYPE_NORMAL
- en: garbage in, garbage out, [223](c10.xhtml#Page_223)
  prefs: []
  type: TYPE_NORMAL
- en: gated recurrent unit, [554](c19.xhtml#Page_554)
  prefs: []
  type: TYPE_NORMAL
- en: Gaussian distribution, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: GD. *See* gradient descent
  prefs: []
  type: TYPE_NORMAL
- en: generalization
  prefs: []
  type: TYPE_NORMAL
- en: accuracy, [197](c09.xhtml#Page_197)
  prefs: []
  type: TYPE_NORMAL
- en: error, [197](c09.xhtml#Page_197)
  prefs: []
  type: TYPE_NORMAL
- en: loss, [197](c09.xhtml#Page_197)
  prefs: []
  type: TYPE_NORMAL
- en: generated image (for style transfer), [680](c23.xhtml#Page_680)
  prefs: []
  type: TYPE_NORMAL
- en: generative adversarial network, [649](c22.xhtml#Page_649)
  prefs: []
  type: TYPE_NORMAL
- en: generator, [650](c22.xhtml#Page_650)
  prefs: []
  type: TYPE_NORMAL
- en: generator-discriminator, [664](c22.xhtml#Page_664)
  prefs: []
  type: TYPE_NORMAL
- en: Gini impurity, [281](c11.xhtml#Page_281)
  prefs: []
  type: TYPE_NORMAL
- en: Glorot Normal initialization, [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: Glorot Uniform initialization, [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: GPT-2, [593](c20.xhtml#Page_593)
  prefs: []
  type: TYPE_NORMAL
- en: GPT-3
  prefs: []
  type: TYPE_NORMAL
- en: discussion, [596](c20.xhtml#Page_596)
  prefs: []
  type: TYPE_NORMAL
- en: performance, [597](c20.xhtml#Page_597)
  prefs: []
  type: TYPE_NORMAL
- en: gradient
  prefs: []
  type: TYPE_NORMAL
- en: definition, [126](c05.xhtml#Page_126)
  prefs: []
  type: TYPE_NORMAL
- en: vanishing, [129](c05.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: zero, [129](c05.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: gradient ascent, [481](c17.xhtml#Page_481)
  prefs: []
  type: TYPE_NORMAL
- en: gradient descent
  prefs: []
  type: TYPE_NORMAL
- en: Adadelta, [418](c15.xhtml#Page_418)
  prefs: []
  type: TYPE_NORMAL
- en: Adagrad, [417](c15.xhtml#Page_417)
  prefs: []
  type: TYPE_NORMAL
- en: Adam, [420](c15.xhtml#Page_420)
  prefs: []
  type: TYPE_NORMAL
- en: batch, [401](c15.xhtml#Page_401)
  prefs: []
  type: TYPE_NORMAL
- en: epoch, [401](c15.xhtml#Page_401)
  prefs: []
  type: TYPE_NORMAL
- en: mini-batch, [405](c15.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: momentum, [409](c15.xhtml#Page_409)
  prefs: []
  type: TYPE_NORMAL
- en: Nesterov, [414](c15.xhtml#Page_414)
  prefs: []
  type: TYPE_NORMAL
- en: RMSprop, [418](c15.xhtml#Page_418)
  prefs: []
  type: TYPE_NORMAL
- en: stochastic, [403](c15.xhtml#Page_403)
  prefs: []
  type: TYPE_NORMAL
- en: typical meaning, [407](c15.xhtml#Page_407)
  prefs: []
  type: TYPE_NORMAL
- en: Gram matrix, [681](c23.xhtml#Page_681)
  prefs: []
  type: TYPE_NORMAL
- en: graph
  prefs: []
  type: TYPE_NORMAL
- en: acyclic, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: directed, [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: weighted graph, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: graph theory, [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: Great Dane, [184](c08.xhtml#Page_184)
  prefs: []
  type: TYPE_NORMAL
- en: greedy algorithm (for decision trees), [274](c11.xhtml#Page_274)
  prefs: []
  type: TYPE_NORMAL
- en: '*Green Eggs and Ham*, [137](c06.xhtml#Page_137)'
  prefs: []
  type: TYPE_NORMAL
- en: grid, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: ground truth, [57](c03.xhtml#Page_57)
  prefs: []
  type: TYPE_NORMAL
- en: grouping. *See* clustering
  prefs: []
  type: TYPE_NORMAL
- en: GRU (gated recurrent unit), [554](c19.xhtml#Page_554)
  prefs: []
  type: TYPE_NORMAL
- en: guitar data, [228](c10.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: '**H**'
  prefs: []
  type: TYPE_NORMAL
- en: He Normal initialization, [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: He Uniform initialization, [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: head (in attention layer), [580](c20.xhtml#Page_580)
  prefs: []
  type: TYPE_NORMAL
- en: Heaviside step activation function, [334](c13.xhtml#Page_334)
  prefs: []
  type: TYPE_NORMAL
- en: hidden layer, [327](c13.xhtml#Page_327)
  prefs: []
  type: TYPE_NORMAL
- en: hidden state, [549](c19.xhtml#Page_549)
  prefs: []
  type: TYPE_NORMAL
- en: hierarchy
  prefs: []
  type: TYPE_NORMAL
- en: of features, [440](c16.xhtml#Page_440)
  prefs: []
  type: TYPE_NORMAL
- en: of filters, [461](c16.xhtml#Page_461)
  prefs: []
  type: TYPE_NORMAL
- en: of scales, [471](c16.xhtml#Page_471)
  prefs: []
  type: TYPE_NORMAL
- en: high-dimensional spaces, [42](c02.xhtml#Page_42)
  prefs: []
  type: TYPE_NORMAL
- en: high-dimensional weirdness
  prefs: []
  type: TYPE_NORMAL
- en: hypercube, [175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: hyperorange, [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: hypersphere, [175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: packing hyperspheres in hypercubes, [177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: volume of a hypersphere in a hypercube, [175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: hill (3D surface), [129](c05.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: hit rate, [66](c03.xhtml#Page_66)
  prefs: []
  type: TYPE_NORMAL
- en: Holmes, Sherlock (stories)
  prefs: []
  type: TYPE_NORMAL
- en: generating with GPT2, [596](c20.xhtml#Page_596)
  prefs: []
  type: TYPE_NORMAL
- en: generating with RNN, [555](c19.xhtml#Page_555)
  prefs: []
  type: TYPE_NORMAL
- en: Hopper, Edward, [685](c23.xhtml#Page_685)
  prefs: []
  type: TYPE_NORMAL
- en: Huffman code, [148](c06.xhtml#Page_148)
  prefs: []
  type: TYPE_NORMAL
- en: husky, [185](c08.xhtml#Page_185)
  prefs: []
  type: TYPE_NORMAL
- en: hypercube, [175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: hyperorange, [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: hyperparameter
  prefs: []
  type: TYPE_NORMAL
- en: number of clusters, [166](c07.xhtml#Page_166)
  prefs: []
  type: TYPE_NORMAL
- en: tuning, [168](c07.xhtml#Page_168)
  prefs: []
  type: TYPE_NORMAL
- en: hypersphere, [175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: hypothesis (in Bayes’ Rule), [102](c04.xhtml#Page_102)
  prefs: []
  type: TYPE_NORMAL
- en: '**I**'
  prefs: []
  type: TYPE_NORMAL
- en: i.i.d. (independent and identically distributed), [29](c02.xhtml#Page_29)
  prefs: []
  type: TYPE_NORMAL
- en: ice-cream shop (scenario), [55](c03.xhtml#Page_55)
  prefs: []
  type: TYPE_NORMAL
- en: idealized curve, [205](c09.xhtml#Page_205)
  prefs: []
  type: TYPE_NORMAL
- en: identically distributed, [29](c02.xhtml#Page_29)
  prefs: []
  type: TYPE_NORMAL
- en: identifying dog breeds (scenario), [183](c08.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: identity activation function, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: IG (information gain), [281](c11.xhtml#Page_281)
  prefs: []
  type: TYPE_NORMAL
- en: image classifier, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: image matrix (for style transfer), [681](c23.xhtml#Page_681)
  prefs: []
  type: TYPE_NORMAL
- en: ImageNet, [478](c17.xhtml#Page_478)
  prefs: []
  type: TYPE_NORMAL
- en: immediate children (in decision tree), [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: impurity, [280](c11.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: inceptionism, [679](c23.xhtml#Page_679)
  prefs: []
  type: TYPE_NORMAL
- en: independent and identically distributed, [29](c02.xhtml#Page_29)
  prefs: []
  type: TYPE_NORMAL
- en: independent variable, [29](c02.xhtml#Page_29)
  prefs: []
  type: TYPE_NORMAL
- en: inertia, [408](c15.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: infinite distribution, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: information
  prefs: []
  type: TYPE_NORMAL
- en: definition, [137](c06.xhtml#Page_137)
  prefs: []
  type: TYPE_NORMAL
- en: density, [143](c06.xhtml#Page_143)
  prefs: []
  type: TYPE_NORMAL
- en: divergence, [151](c06.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: finding, [4](c01.xhtml#Page_4)
  prefs: []
  type: TYPE_NORMAL
- en: gain, [281](c11.xhtml#Page_281)
  prefs: []
  type: TYPE_NORMAL
- en: properties, [136](c06.xhtml#Page_136)
  prefs: []
  type: TYPE_NORMAL
- en: information exchange
  prefs: []
  type: TYPE_NORMAL
- en: global context, [135](c06.xhtml#Page_135)
  prefs: []
  type: TYPE_NORMAL
- en: local context, [135](c06.xhtml#Page_135)
  prefs: []
  type: TYPE_NORMAL
- en: receiver, [134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: sender, [134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: surprise, [134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: information leakage
  prefs: []
  type: TYPE_NORMAL
- en: basic idea, [187](c08.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: in cross validation, [239](c10.xhtml#Page_239)
  prefs: []
  type: TYPE_NORMAL
- en: information theory, [133](c06.xhtml#Page_133)
  prefs: []
  type: TYPE_NORMAL
- en: initial state (in reinforcement learning), [605](c21.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: initialization (of a neural network), [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: input layer, [327](c13.xhtml#Page_327)
  prefs: []
  type: TYPE_NORMAL
- en: input tensor, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: instant reward, [610](c21.xhtml#Page_610)
  prefs: []
  type: TYPE_NORMAL
- en: internal node (in decision tree), [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: interval decay, [399](c15.xhtml#Page_399)
  prefs: []
  type: TYPE_NORMAL
- en: inverse transformation, [234](c10.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: inversion (of encoding), [497](c18.xhtml#Page_497)
  prefs: []
  type: TYPE_NORMAL
- en: '**J**'
  prefs: []
  type: TYPE_NORMAL
- en: joint probability, [53](c03.xhtml#Page_53)
  prefs: []
  type: TYPE_NORMAL
- en: JPG encoder, [495](c18.xhtml#Page_495)
  prefs: []
  type: TYPE_NORMAL
- en: junkyard (scenario), [17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: '**K**'
  prefs: []
  type: TYPE_NORMAL
- en: '*k*'
  prefs: []
  type: TYPE_NORMAL
- en: dimensions left after PCA, [249](c10.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: number of clusters, [166](c07.xhtml#Page_166)
  prefs: []
  type: TYPE_NORMAL
- en: number of folds, [192](c08.xhtml#Page_192)
  prefs: []
  type: TYPE_NORMAL
- en: number of nearest neighbors, [264](c11.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: k-means clustering, [166](c07.xhtml#Page_166)
  prefs: []
  type: TYPE_NORMAL
- en: k-nearest neighbors, [264](c11.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: Kandinsky, Wassily, [685](c23.xhtml#Page_685)
  prefs: []
  type: TYPE_NORMAL
- en: kernel (of a convolution filter), [433](c16.xhtml#Page_433)
  prefs: []
  type: TYPE_NORMAL
- en: kernel trick, [287](c11.xhtml#Page_287)
  prefs: []
  type: TYPE_NORMAL
- en: key (for transformer), [575](c20.xhtml#Page_575)
  prefs: []
  type: TYPE_NORMAL
- en: kissing line (tangent), [122](c05.xhtml#Page_122)
  prefs: []
  type: TYPE_NORMAL
- en: KL divergence, [151](c06.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: kNN (k-nearest neighbors), [264](c11.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: Kullback-Leibler divergence, [151](c06.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: '**L**'
  prefs: []
  type: TYPE_NORMAL
- en: L-Learning, [616](c21.xhtml#Page_616)
  prefs: []
  type: TYPE_NORMAL
- en: L-table, [617](c21.xhtml#Page_617)
  prefs: []
  type: TYPE_NORMAL
- en: L-value, [617](c21.xhtml#Page_617)
  prefs: []
  type: TYPE_NORMAL
- en: label, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: language model, [541](c19.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: last-minute stopping, [202](c09.xhtml#Page_202)
  prefs: []
  type: TYPE_NORMAL
- en: latent layer, [501](c18.xhtml#Page_501)
  prefs: []
  type: TYPE_NORMAL
- en: latent space, [509](c18.xhtml#Page_509)
  prefs: []
  type: TYPE_NORMAL
- en: latent variable, [501](c18.xhtml#Page_501)
  prefs: []
  type: TYPE_NORMAL
- en: law of diminishing returns in ensemble construction, [300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: layer normalization, [583](c20.xhtml#Page_583)
  prefs: []
  type: TYPE_NORMAL
- en: layer schematic symbol
  prefs: []
  type: TYPE_NORMAL
- en: attention, [581](c20.xhtml#Page_581)
  prefs: []
  type: TYPE_NORMAL
- en: batchnorm, [425](c15.xhtml#Page_425)
  prefs: []
  type: TYPE_NORMAL
- en: bidirectional recurrent, [559](c19.xhtml#Page_559)
  prefs: []
  type: TYPE_NORMAL
- en: convolution, [471](c16.xhtml#Page_471)
  prefs: []
  type: TYPE_NORMAL
- en: convolution with downsampling, [521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: convolution with upsampling, [521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: dropout, [423](c15.xhtml#Page_423)
  prefs: []
  type: TYPE_NORMAL
- en: embedding, [574](c20.xhtml#Page_574)
  prefs: []
  type: TYPE_NORMAL
- en: flatten, [474](c17.xhtml#Page_474)
  prefs: []
  type: TYPE_NORMAL
- en: fully connected, [328](c13.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: masked attention, [588](c20.xhtml#Page_588)
  prefs: []
  type: TYPE_NORMAL
- en: multi-head attention, [581](c20.xhtml#Page_581)
  prefs: []
  type: TYPE_NORMAL
- en: norm-add, [583](c20.xhtml#Page_583)
  prefs: []
  type: TYPE_NORMAL
- en: pooling, [451](c16.xhtml#Page_451)
  prefs: []
  type: TYPE_NORMAL
- en: positional embedding, [584](c20.xhtml#Page_584)
  prefs: []
  type: TYPE_NORMAL
- en: recurrent, [555](c19.xhtml#Page_555)
  prefs: []
  type: TYPE_NORMAL
- en: recurrent cell, [551](c19.xhtml#Page_551)
  prefs: []
  type: TYPE_NORMAL
- en: reshape, [667](c22.xhtml#Page_667)
  prefs: []
  type: TYPE_NORMAL
- en: self-attention, [581](c20.xhtml#Page_581)
  prefs: []
  type: TYPE_NORMAL
- en: layers
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: lazy algorithm (kNN), [265](c11.xhtml#Page_265)
  prefs: []
  type: TYPE_NORMAL
- en: leaf (in decision tree), [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: leaky ReLU activation function, [337](c13.xhtml#Page_337)
  prefs: []
  type: TYPE_NORMAL
- en: learning rate
  prefs: []
  type: TYPE_NORMAL
- en: in neural networks, [377](c14.xhtml#Page_377)
  prefs: []
  type: TYPE_NORMAL
- en: in Q-learning, [629](c21.xhtml#Page_629)
  prefs: []
  type: TYPE_NORMAL
- en: learning rate adjustment
  prefs: []
  type: TYPE_NORMAL
- en: constant, [391](c15.xhtml#Page_391)
  prefs: []
  type: TYPE_NORMAL
- en: delayed exponential decay, [398](c15.xhtml#Page_398)
  prefs: []
  type: TYPE_NORMAL
- en: error-based decay, [399](c15.xhtml#Page_399)
  prefs: []
  type: TYPE_NORMAL
- en: exponential decay, [396](c15.xhtml#Page_396)
  prefs: []
  type: TYPE_NORMAL
- en: fixed-step decay, [399](c15.xhtml#Page_399)
  prefs: []
  type: TYPE_NORMAL
- en: interval decay, [399](c15.xhtml#Page_399)
  prefs: []
  type: TYPE_NORMAL
- en: learning the slow way (scenario), [354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: LeCun Normal initialization, [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: LeCun Uniform initialization, [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: letter frequencies in English, [139](c06.xhtml#Page_139)
  prefs: []
  type: TYPE_NORMAL
- en: life-seeking probes (scenario), [97](c04.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: likelihood, [96](c04.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: line (in a neural network), [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: line fitting with Bayes’ Rule (scenario), [212](c09.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: linear activation function, [332](c13.xhtml#Page_332)
  prefs: []
  type: TYPE_NORMAL
- en: linear function, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: linear layer. *See* fully connected layer
  prefs: []
  type: TYPE_NORMAL
- en: link (in decision tree), [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: list, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: local receptive field, [436](c16.xhtml#Page_436)
  prefs: []
  type: TYPE_NORMAL
- en: logical flow, [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: logistic curve activation function, [341](c13.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: long short-term memory, [553](c19.xhtml#Page_553)
  prefs: []
  type: TYPE_NORMAL
- en: long-term dependency problem, [563](c19.xhtml#Page_563)
  prefs: []
  type: TYPE_NORMAL
- en: loop (in a neural network), [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: loss, [352](c14.xhtml#Page_352)
  prefs: []
  type: TYPE_NORMAL
- en: lossless encoding, [496](c18.xhtml#Page_496)
  prefs: []
  type: TYPE_NORMAL
- en: lossy encoding, [496](c18.xhtml#Page_496)
  prefs: []
  type: TYPE_NORMAL
- en: lousy learning, [616](c21.xhtml#Page_616)
  prefs: []
  type: TYPE_NORMAL
- en: low-dimensional dog breed descriptions (scenario), [255](c10.xhtml#Page_255)
  prefs: []
  type: TYPE_NORMAL
- en: low-pass filter, [451](c16.xhtml#Page_451)
  prefs: []
  type: TYPE_NORMAL
- en: LSTM (long short-term memory), [553](c19.xhtml#Page_553)
  prefs: []
  type: TYPE_NORMAL
- en: '**M**'
  prefs: []
  type: TYPE_NORMAL
- en: '*m*'
  prefs: []
  type: TYPE_NORMAL
- en: modification of neuron value, [357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: momentum (in gradient descent), [410](c15.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: machine learning, [3](c01.xhtml#Page_3)
  prefs: []
  type: TYPE_NORMAL
- en: magnitude (of a gradient), [128](c05.xhtml#Page_128)
  prefs: []
  type: TYPE_NORMAL
- en: '*The Manchurian Candidate*, [598](c20.xhtml#Page_598)'
  prefs: []
  type: TYPE_NORMAL
- en: mapping (transformation), [236](c10.xhtml#Page_236)
  prefs: []
  type: TYPE_NORMAL
- en: marginal probability, [55](c03.xhtml#Page_55)
  prefs: []
  type: TYPE_NORMAL
- en: Marx, Groucho, [559](c19.xhtml#Page_559)
  prefs: []
  type: TYPE_NORMAL
- en: masked attention layer schematic symbol, [588](c20.xhtml#Page_588)
  prefs: []
  type: TYPE_NORMAL
- en: masking (attention decoder), [588](c20.xhtml#Page_588)
  prefs: []
  type: TYPE_NORMAL
- en: matching a face mask (scenario), [462](c16.xhtml#Page_462)
  prefs: []
  type: TYPE_NORMAL
- en: matrix, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: max pooling, [452](c16.xhtml#Page_452)
  prefs: []
  type: TYPE_NORMAL
- en: maximum ascent, [126](c05.xhtml#Page_126)
  prefs: []
  type: TYPE_NORMAL
- en: maximum descent, [126](c05.xhtml#Page_126)
  prefs: []
  type: TYPE_NORMAL
- en: maximum of a function
  prefs: []
  type: TYPE_NORMAL
- en: finding with derivative, [125](c05.xhtml#Page_125)
  prefs: []
  type: TYPE_NORMAL
- en: finding with gradient, [128](c05.xhtml#Page_128)
  prefs: []
  type: TYPE_NORMAL
- en: global maximum, [119](c05.xhtml#Page_119)
  prefs: []
  type: TYPE_NORMAL
- en: local maximum, [121](c05.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: maxout activation function, [338](c13.xhtml#Page_338)
  prefs: []
  type: TYPE_NORMAL
- en: McGlassface, Glasses, [61](c03.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: mean, [16](c02.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: mean normalization, [228](c10.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: mean of Gaussian, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: mean squared error, [365](c14.xhtml#Page_365)
  prefs: []
  type: TYPE_NORMAL
- en: mean subtraction, [228](c10.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: median, [16](c02.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: mellowmax, [632](c21.xhtml#Page_632)
  prefs: []
  type: TYPE_NORMAL
- en: messaging with mirrors (scenario), [497](c18.xhtml#Page_497)
  prefs: []
  type: TYPE_NORMAL
- en: mini-batch, [405](c15.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: mini-batch gradient descent, [405](c15.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: minimum of a function
  prefs: []
  type: TYPE_NORMAL
- en: finding with derivative, [125](c05.xhtml#Page_125)
  prefs: []
  type: TYPE_NORMAL
- en: finding with gradient, [128](c05.xhtml#Page_128)
  prefs: []
  type: TYPE_NORMAL
- en: global minimum, [119](c05.xhtml#Page_119)
  prefs: []
  type: TYPE_NORMAL
- en: local minimum, [121](c05.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: mixing colors of paint (scenario), [574](c20.xhtml#Page_574)
  prefs: []
  type: TYPE_NORMAL
- en: MLP (multilayer perceptron), [328](c13.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: MNIST
  prefs: []
  type: TYPE_NORMAL
- en: used for an autoencoder, [505](c18.xhtml#Page_505)
  prefs: []
  type: TYPE_NORMAL
- en: used for convolution, [473](c17.xhtml#Page_473)
  prefs: []
  type: TYPE_NORMAL
- en: used for GAN, [667](c22.xhtml#Page_667)
  prefs: []
  type: TYPE_NORMAL
- en: modal collapse, [671](c22.xhtml#Page_671)
  prefs: []
  type: TYPE_NORMAL
- en: mode, [16](c02.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: momentum, [408](c15.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: momentum gradient descent, [409](c15.xhtml#Page_409)
  prefs: []
  type: TYPE_NORMAL
- en: Monet, Claude, [685](c23.xhtml#Page_685)
  prefs: []
  type: TYPE_NORMAL
- en: '*morbus pollicus* (scenario), [63](c03.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: Morse code, [137](c06.xhtml#Page_137)
  prefs: []
  type: TYPE_NORMAL
- en: Morse, Samuel, [139](c06.xhtml#Page_139)
  prefs: []
  type: TYPE_NORMAL
- en: MP (*morbus pollicus*), [63](c03.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: MP3 encoder, [495](c18.xhtml#Page_495)
  prefs: []
  type: TYPE_NORMAL
- en: MSE (mean squared error), [365](c14.xhtml#Page_365)
  prefs: []
  type: TYPE_NORMAL
- en: multi-head attention
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [580](c20.xhtml#Page_580)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [581](c20.xhtml#Page_581)
  prefs: []
  type: TYPE_NORMAL
- en: multiclass classification, [160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: multidimensional convolution, [443](c16.xhtml#Page_443)
  prefs: []
  type: TYPE_NORMAL
- en: multifilter loss, [676](c23.xhtml#Page_676)
  prefs: []
  type: TYPE_NORMAL
- en: multilayer loss, [676](c23.xhtml#Page_676)
  prefs: []
  type: TYPE_NORMAL
- en: multilayer perceptron, [328](c13.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: multinoulli distribution, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: multiple correlation, [39](c02.xhtml#Page_39)
  prefs: []
  type: TYPE_NORMAL
- en: multivariate transformation, [231](c10.xhtml#Page_231)
  prefs: []
  type: TYPE_NORMAL
- en: Munch, Edvard, [685](c23.xhtml#Page_685)
  prefs: []
  type: TYPE_NORMAL
- en: Muppets
  prefs: []
  type: TYPE_NORMAL
- en: BERT, [590](c20.xhtml#Page_590)
  prefs: []
  type: TYPE_NORMAL
- en: ELMo, [571](c20.xhtml#Page_571)
  prefs: []
  type: TYPE_NORMAL
- en: music system
  prefs: []
  type: TYPE_NORMAL
- en: collecting data, [199](c09.xhtml#Page_199)
  prefs: []
  type: TYPE_NORMAL
- en: good fit, [201](c09.xhtml#Page_201)
  prefs: []
  type: TYPE_NORMAL
- en: overfitting, [199](c09.xhtml#Page_199)
  prefs: []
  type: TYPE_NORMAL
- en: underfitting, [200](c09.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: '**N**'
  prefs: []
  type: TYPE_NORMAL
- en: n-gram, [595](c20.xhtml#Page_595)
  prefs: []
  type: TYPE_NORMAL
- en: naive Bayes classifier, [290](c11.xhtml#Page_290)
  prefs: []
  type: TYPE_NORMAL
- en: Nash equilibrium, [657](c22.xhtml#Page_657)
  prefs: []
  type: TYPE_NORMAL
- en: natural language generation, [541](c19.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: natural language processing, [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: natural language understanding, [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: naughts and crosses, [603](c21.xhtml#Page_603)
  prefs: []
  type: TYPE_NORMAL
- en: negative correlation, [38](c02.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: negative covariance, [35](c02.xhtml#Page_35)
  prefs: []
  type: TYPE_NORMAL
- en: negative gradient, [128](c05.xhtml#Page_128)
  prefs: []
  type: TYPE_NORMAL
- en: negative predictive value, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: neighbor (for kNN), [265](c11.xhtml#Page_265)
  prefs: []
  type: TYPE_NORMAL
- en: neighborhood, [120](c05.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: Nesterov momentum, [414](c15.xhtml#Page_414)
  prefs: []
  type: TYPE_NORMAL
- en: network collapse, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: neural network
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [315](c13.xhtml#Page_315)
  prefs: []
  type: TYPE_NORMAL
- en: simple example, [321](c13.xhtml#Page_321)
  prefs: []
  type: TYPE_NORMAL
- en: neural style transfer, [680](c23.xhtml#Page_680)
  prefs: []
  type: TYPE_NORMAL
- en: neuron
  prefs: []
  type: TYPE_NORMAL
- en: artificial, [317](c13.xhtml#Page_317)
  prefs: []
  type: TYPE_NORMAL
- en: dead, [345](c13.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: real, [314](c13.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: neurotransmitter, [314](c13.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: New Horizons spacecraft, [190](c08.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: next sentence prediction, [591](c20.xhtml#Page_591)
  prefs: []
  type: TYPE_NORMAL
- en: NLG (natural language generation), [541](c19.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: NLP (natural language processing), [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: NLU (natural language understanding), [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: No Free Lunch Theorem, [422](c15.xhtml#Page_422)
  prefs: []
  type: TYPE_NORMAL
- en: node
  prefs: []
  type: TYPE_NORMAL
- en: in a decision tree, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: in a neural network, [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: node splitting
  prefs: []
  type: TYPE_NORMAL
- en: Gini impurity, [281](c11.xhtml#Page_281)
  prefs: []
  type: TYPE_NORMAL
- en: impurity, [280](c11.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: information gain, [281](c11.xhtml#Page_281)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [272](c11.xhtml#Page_272)
  prefs: []
  type: TYPE_NORMAL
- en: purity, [280](c11.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: noisy curve, [205](c09.xhtml#Page_205)
  prefs: []
  type: TYPE_NORMAL
- en: noisy ReLU activation function, [339](c13.xhtml#Page_339)
  prefs: []
  type: TYPE_NORMAL
- en: nominal data, [226](c10.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: non-deterministic (variational autoencoder), [521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: non-parametric classifier, [264](c11.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: nonlinear function, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: nonlinearity. *See* activation function
  prefs: []
  type: TYPE_NORMAL
- en: norm-add
  prefs: []
  type: TYPE_NORMAL
- en: definition, [583](c20.xhtml#Page_583)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [583](c20.xhtml#Page_583)
  prefs: []
  type: TYPE_NORMAL
- en: normal deviate, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: normal distribution, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: normalization, [228](c10.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: NSP (next sentence prediction), [591](c20.xhtml#Page_591)
  prefs: []
  type: TYPE_NORMAL
- en: numerical data, [226](c10.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: '**O**'
  prefs: []
  type: TYPE_NORMAL
- en: OAA (one-against-all), [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: observability, [608](c21.xhtml#Page_608)
  prefs: []
  type: TYPE_NORMAL
- en: observation (in Bayes’ Rule), [102](c04.xhtml#Page_102)
  prefs: []
  type: TYPE_NORMAL
- en: offline algorithm, [403](c15.xhtml#Page_403)
  prefs: []
  type: TYPE_NORMAL
- en: on-demand algorithm (kNN), [265](c11.xhtml#Page_265)
  prefs: []
  type: TYPE_NORMAL
- en: one-against-all, [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: one-by-one convolution, [447](c16.xhtml#Page_447)
  prefs: []
  type: TYPE_NORMAL
- en: one-hot encoding, [226](c10.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: one-versus-all, [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: one-versus-one, [153](p02.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: one-versus-rest, [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: online algorithm, [405](c15.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: optimizers, [387](c15.xhtml#Page_387)
  prefs: []
  type: TYPE_NORMAL
- en: ordinal data, [226](c10.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: outlier
  prefs: []
  type: TYPE_NORMAL
- en: when cleaning data, [223](c10.xhtml#Page_223)
  prefs: []
  type: TYPE_NORMAL
- en: when making a boundary, [201](c09.xhtml#Page_201)
  prefs: []
  type: TYPE_NORMAL
- en: output layer, [327](c13.xhtml#Page_327)
  prefs: []
  type: TYPE_NORMAL
- en: output tensor, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: OvA (one-versus-all), [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: overfitting
  prefs: []
  type: TYPE_NORMAL
- en: decision trees, [275](c11.xhtml#Page_275)
  prefs: []
  type: TYPE_NORMAL
- en: definition, [196](c09.xhtml#Page_196)
  prefs: []
  type: TYPE_NORMAL
- en: dog breeds, [185](c08.xhtml#Page_185)
  prefs: []
  type: TYPE_NORMAL
- en: overshoot (during gradient descent), [396](c15.xhtml#Page_396)
  prefs: []
  type: TYPE_NORMAL
- en: OvO (one-versus-one), [163](c07.xhtml#Page_163)
  prefs: []
  type: TYPE_NORMAL
- en: OvR (one-versus-rest), [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: '**P**'
  prefs: []
  type: TYPE_NORMAL
- en: padding, [440](c16.xhtml#Page_440)
  prefs: []
  type: TYPE_NORMAL
- en: parameter space (for autoencoder), [508](c18.xhtml#Page_508)
  prefs: []
  type: TYPE_NORMAL
- en: parametric blending, [498](c18.xhtml#Page_498)
  prefs: []
  type: TYPE_NORMAL
- en: parametric classifier, [264](c11.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: parametric ReLU activation function, [337](c13.xhtml#Page_337)
  prefs: []
  type: TYPE_NORMAL
- en: paraphrase (text), [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: parent
  prefs: []
  type: TYPE_NORMAL
- en: in a decision tree, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: in a neural network, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: partial correlation, [39](c02.xhtml#Page_39)
  prefs: []
  type: TYPE_NORMAL
- en: partial modal collapse, [671](c22.xhtml#Page_671)
  prefs: []
  type: TYPE_NORMAL
- en: PCA. *See* principal component analysis
  prefs: []
  type: TYPE_NORMAL
- en: pdf (probability density function), [21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: penalty (for neural network error), [352](c14.xhtml#Page_352)
  prefs: []
  type: TYPE_NORMAL
- en: perceptron
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [316](c13.xhtml#Page_316)
  prefs: []
  type: TYPE_NORMAL
- en: Mark I Perceptron, [317](c13.xhtml#Page_317)
  prefs: []
  type: TYPE_NORMAL
- en: perfect precision, [69](c03.xhtml#Page_69)
  prefs: []
  type: TYPE_NORMAL
- en: perfect recall, [69](c03.xhtml#Page_69)
  prefs: []
  type: TYPE_NORMAL
- en: performance metrics
  prefs: []
  type: TYPE_NORMAL
- en: illustrated, [75](c03.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: summary, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: perturbation, [491](c17.xhtml#Page_491)
  prefs: []
  type: TYPE_NORMAL
- en: Picasso, Pablo, [681](c23.xhtml#Page_681)
  prefs: []
  type: TYPE_NORMAL
- en: piecewise linear activation function, [336](c13.xhtml#Page_336)
  prefs: []
  type: TYPE_NORMAL
- en: pixel, [430](c16.xhtml#Page_430)
  prefs: []
  type: TYPE_NORMAL
- en: planet mining (scenario), [97](c04.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: plateau (3D surface), [129](c05.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: plurality voting, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: Pluto images, [190](c08.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: pmf (probability mass function), [20](c02.xhtml#Page_20)
  prefs: []
  type: TYPE_NORMAL
- en: pointwise feed-forward layer, [587](c20.xhtml#Page_587)
  prefs: []
  type: TYPE_NORMAL
- en: policy, [606](c21.xhtml#Page_606)
  prefs: []
  type: TYPE_NORMAL
- en: polysemy, [559](c19.xhtml#Page_559)
  prefs: []
  type: TYPE_NORMAL
- en: poodle, [183](c08.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: pooling
  prefs: []
  type: TYPE_NORMAL
- en: average, [452](c16.xhtml#Page_452)
  prefs: []
  type: TYPE_NORMAL
- en: discussion, [449](c16.xhtml#Page_449)
  prefs: []
  type: TYPE_NORMAL
- en: layer, [452](c16.xhtml#Page_452)
  prefs: []
  type: TYPE_NORMAL
- en: max, [452](c16.xhtml#Page_452)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [451](c16.xhtml#Page_451)
  prefs: []
  type: TYPE_NORMAL
- en: population (in statistics), [32](c02.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: positional
  prefs: []
  type: TYPE_NORMAL
- en: encoding, [584](c20.xhtml#Page_584)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [584](c20.xhtml#Page_584)
  prefs: []
  type: TYPE_NORMAL
- en: positional embedding, [585](c20.xhtml#Page_585)
  prefs: []
  type: TYPE_NORMAL
- en: positive correlation, [38](c02.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: positive covariance, [35](c02.xhtml#Page_35)
  prefs: []
  type: TYPE_NORMAL
- en: positive predictive value, [64](c03.xhtml#Page_64)
  prefs: []
  type: TYPE_NORMAL
- en: posterior, [96](c04.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: precision
  prefs: []
  type: TYPE_NORMAL
- en: definition, [64](c03.xhtml#Page_64)
  prefs: []
  type: TYPE_NORMAL
- en: perfect, [69](c03.xhtml#Page_69)
  prefs: []
  type: TYPE_NORMAL
- en: precision-recall tradeoff, [67](c03.xhtml#Page_67)
  prefs: []
  type: TYPE_NORMAL
- en: predicted value, [57](c03.xhtml#Page_57)
  prefs: []
  type: TYPE_NORMAL
- en: predicting traffic from temperature (scenario), [234](c10.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: prediction, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: pretraining, [542](c19.xhtml#Page_542)
  prefs: []
  type: TYPE_NORMAL
- en: principal component analysis
  prefs: []
  type: TYPE_NORMAL
- en: description, [244](c10.xhtml#Page_244)
  prefs: []
  type: TYPE_NORMAL
- en: line of maximum variance, [246](c10.xhtml#Page_246)
  prefs: []
  type: TYPE_NORMAL
- en: projection, [244](c10.xhtml#Page_244)
  prefs: []
  type: TYPE_NORMAL
- en: prior, [96](c04.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: probability
  prefs: []
  type: TYPE_NORMAL
- en: conditional, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: dependence, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: event, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: independence, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: joint, [53](c03.xhtml#Page_53)
  prefs: []
  type: TYPE_NORMAL
- en: marginal, [55](c03.xhtml#Page_55)
  prefs: []
  type: TYPE_NORMAL
- en: simple, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: probability density function, [21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: probability distribution
  prefs: []
  type: TYPE_NORMAL
- en: bell curve, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: Bernoulli, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: categorical, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: continuous, [20](c02.xhtml#Page_20)
  prefs: []
  type: TYPE_NORMAL
- en: example in junkyard, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: finite, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: Gaussian, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: infinite, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: multinoulli, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: normal, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: uniform, [21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: probability mass function, [20](c02.xhtml#Page_20)
  prefs: []
  type: TYPE_NORMAL
- en: ProGAN, [670](c22.xhtml#Page_670)
  prefs: []
  type: TYPE_NORMAL
- en: projection, [244](c10.xhtml#Page_244)
  prefs: []
  type: TYPE_NORMAL
- en: prompt (for text generation), [541](c19.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: protect an orange in transit (scenario), [177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: pruning, [280](c11.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: purity, [280](c11.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: '**Q**'
  prefs: []
  type: TYPE_NORMAL
- en: Q-Learning, [626](c21.xhtml#Page_626)
  prefs: []
  type: TYPE_NORMAL
- en: Q-table, [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: Q-value, [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: Q/KV (query / key, [v](f03.xhtml#Page_v)alue), [579](c20.xhtml#Page_579)
  prefs: []
  type: TYPE_NORMAL
- en: QKV (query, key, [v](f03.xhtml#Page_v)alue), [575](c20.xhtml#Page_575)
  prefs: []
  type: TYPE_NORMAL
- en: quadratic cost function, [365](c14.xhtml#Page_365)
  prefs: []
  type: TYPE_NORMAL
- en: quality control for dolls (scenario), [61](c03.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: quality learning, [626](c21.xhtml#Page_626)
  prefs: []
  type: TYPE_NORMAL
- en: quantitative data, [226](c10.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: query (for transformer), [575](c20.xhtml#Page_575)
  prefs: []
  type: TYPE_NORMAL
- en: quitter, [160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: '**R**'
  prefs: []
  type: TYPE_NORMAL
- en: random forest, [301](c12.xhtml#Page_301)
  prefs: []
  type: TYPE_NORMAL
- en: random labeling, [302](c12.xhtml#Page_302)
  prefs: []
  type: TYPE_NORMAL
- en: random variable
  prefs: []
  type: TYPE_NORMAL
- en: description, [20](c02.xhtml#Page_20)
  prefs: []
  type: TYPE_NORMAL
- en: drawing, [20](c02.xhtml#Page_20)
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: randomness, [16](c02.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: real-world data, [183](c08.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: recall
  prefs: []
  type: TYPE_NORMAL
- en: definition, [66](c03.xhtml#Page_66)
  prefs: []
  type: TYPE_NORMAL
- en: perfect, [69](c03.xhtml#Page_69)
  prefs: []
  type: TYPE_NORMAL
- en: receptor site (neuron), [314](c13.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: recipes, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: reconstruction (of encoded signal), [496](c18.xhtml#Page_496)
  prefs: []
  type: TYPE_NORMAL
- en: recurrent cell
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [550](c19.xhtml#Page_550)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [551](c19.xhtml#Page_551)
  prefs: []
  type: TYPE_NORMAL
- en: recurrent layer schematic symbol, [555](c19.xhtml#Page_555)
  prefs: []
  type: TYPE_NORMAL
- en: recurrent neural network
  prefs: []
  type: TYPE_NORMAL
- en: bidirectional, [558](c19.xhtml#Page_558)
  prefs: []
  type: TYPE_NORMAL
- en: deep, [557](c19.xhtml#Page_557)
  prefs: []
  type: TYPE_NORMAL
- en: deep bidirectional, [560](c19.xhtml#Page_560)
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [548](c19.xhtml#Page_548)
  prefs: []
  type: TYPE_NORMAL
- en: reference point (of a convolution filter), [436](c16.xhtml#Page_436)
  prefs: []
  type: TYPE_NORMAL
- en: regularization
  prefs: []
  type: TYPE_NORMAL
- en: batchnorm, [424](c15.xhtml#Page_424)
  prefs: []
  type: TYPE_NORMAL
- en: dropout, [422](c15.xhtml#Page_422)
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [203](c09.xhtml#Page_203)
  prefs: []
  type: TYPE_NORMAL
- en: layer normalization, [583](c20.xhtml#Page_583)
  prefs: []
  type: TYPE_NORMAL
- en: reinforcement learning, [602](c21.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: rejection, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: relative entropy, [151](c06.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: release data, [183](c08.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: released system, [183](c08.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: ReLU activation function, [336](c13.xhtml#Page_336)
  prefs: []
  type: TYPE_NORMAL
- en: remembering people’s names (scenario), [196](c09.xhtml#Page_196)
  prefs: []
  type: TYPE_NORMAL
- en: reparameterization trick, [527](c18.xhtml#Page_527)
  prefs: []
  type: TYPE_NORMAL
- en: representation blending, [498](c18.xhtml#Page_498)
  prefs: []
  type: TYPE_NORMAL
- en: reshape layer
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [667](c22.xhtml#Page_667)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [667](c22.xhtml#Page_667)
  prefs: []
  type: TYPE_NORMAL
- en: residual connection, [582](c20.xhtml#Page_582)
  prefs: []
  type: TYPE_NORMAL
- en: resulting reward, [610](c21.xhtml#Page_610)
  prefs: []
  type: TYPE_NORMAL
- en: reward
  prefs: []
  type: TYPE_NORMAL
- en: discounted future, [609](c21.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: final, [604](c21.xhtml#Page_604)
  prefs: []
  type: TYPE_NORMAL
- en: instant, [610](c21.xhtml#Page_610)
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [602](c21.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: resulting, [610](c21.xhtml#Page_610)
  prefs: []
  type: TYPE_NORMAL
- en: total, [609](c21.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: total future, [609](c21.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: ultimate, [604](c21.xhtml#Page_604)
  prefs: []
  type: TYPE_NORMAL
- en: reward signal. *See* reward
  prefs: []
  type: TYPE_NORMAL
- en: rigged coin, [86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: RL (reinforcement learning), [602](c21.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: RMSprop, [418](c15.xhtml#Page_418)
  prefs: []
  type: TYPE_NORMAL
- en: RNN. *See* recurrent neural network
  prefs: []
  type: TYPE_NORMAL
- en: rolled-up diagram, [550](c19.xhtml#Page_550)
  prefs: []
  type: TYPE_NORMAL
- en: root (in decision tree), [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: rotation validation. *See* cross-validation
  prefs: []
  type: TYPE_NORMAL
- en: rules, [4](c01.xhtml#Page_4)
  prefs: []
  type: TYPE_NORMAL
- en: '**S**'
  prefs: []
  type: TYPE_NORMAL
- en: saddle (3D surface), [130](c05.xhtml#Page_130)
  prefs: []
  type: TYPE_NORMAL
- en: sample, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: sample set, [32](c02.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: samplewise processing, [232](c10.xhtml#Page_232)
  prefs: []
  type: TYPE_NORMAL
- en: SARSA, [639](c21.xhtml#Page_639)
  prefs: []
  type: TYPE_NORMAL
- en: scenarios
  prefs: []
  type: TYPE_NORMAL
- en: archaeology clustering, [8](c01.xhtml#Page_8)
  prefs: []
  type: TYPE_NORMAL
- en: archaeology coin-flipping game, [103](c04.xhtml#Page_103)
  prefs: []
  type: TYPE_NORMAL
- en: baby lengths, [33](c02.xhtml#Page_33)
  prefs: []
  type: TYPE_NORMAL
- en: building a sundae, [548](c19.xhtml#Page_548)
  prefs: []
  type: TYPE_NORMAL
- en: choosing store background music, [198](c09.xhtml#Page_198)
  prefs: []
  type: TYPE_NORMAL
- en: coin detection, [86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: coin-flipping game, [87](c04.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: dart throwing, [48](c03.xhtml#Page_48)
  prefs: []
  type: TYPE_NORMAL
- en: distinguishing cows and zebras, [224](c10.xhtml#Page_224)
  prefs: []
  type: TYPE_NORMAL
- en: elevator scheduling, [9](c01.xhtml#Page_9)
  prefs: []
  type: TYPE_NORMAL
- en: fill a box with a sphere, [175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: finding animals for movie, [566](c20.xhtml#Page_566)
  prefs: []
  type: TYPE_NORMAL
- en: fitting wind speed data, [205](c09.xhtml#Page_205)
  prefs: []
  type: TYPE_NORMAL
- en: Flippers game, [614](c21.xhtml#Page_614)
  prefs: []
  type: TYPE_NORMAL
- en: forging money, [650](c22.xhtml#Page_650)
  prefs: []
  type: TYPE_NORMAL
- en: ice-cream shop, [55](c03.xhtml#Page_55)
  prefs: []
  type: TYPE_NORMAL
- en: identifying dog breeds, [183](c08.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: junkyard, [17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: learning the slow way, [354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: life-seeking probes, [97](c04.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: line fitting with Bayes’ Rule, [212](c09.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: low-dimensional dog breed descriptions, [255](c10.xhtml#Page_255)
  prefs: []
  type: TYPE_NORMAL
- en: matching a face mask, [462](c16.xhtml#Page_462)
  prefs: []
  type: TYPE_NORMAL
- en: messaging with mirrors, [497](c18.xhtml#Page_497)
  prefs: []
  type: TYPE_NORMAL
- en: mixing colors of paint, [574](c20.xhtml#Page_574)
  prefs: []
  type: TYPE_NORMAL
- en: '*morbus pollicus*, [63](c03.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: planet mining, [97](c04.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: predicting traffic from temperature, [234](c10.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: protect an orange in transit, [177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: quality control for dolls, [61](c03.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: remembering people’s names, [196](c09.xhtml#Page_196)
  prefs: []
  type: TYPE_NORMAL
- en: sorting eggs, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: testing for disease, [63](c03.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: text messaging, [135](c06.xhtml#Page_135)
  prefs: []
  type: TYPE_NORMAL
- en: transmitting books, [146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: scientific notation, [222](c10.xhtml#Page_222)
  prefs: []
  type: TYPE_NORMAL
- en: seed (for text generation), [541](c19.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: selection
  prefs: []
  type: TYPE_NORMAL
- en: sampling with replacement (SWR), [30](c02.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: sampling without replacement (SWOR), [30](c02.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: with replacement, [30](c02.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: without replacement, [30](c02.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: selection with replacement, [30](c02.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: selection without replacement, [30](c02.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: selectively persistent short-term memory, [553](c19.xhtml#Page_553)
  prefs: []
  type: TYPE_NORMAL
- en: self-attention, [576](c20.xhtml#Page_576)
  prefs: []
  type: TYPE_NORMAL
- en: self-attention layer
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [578](c20.xhtml#Page_578)
  prefs: []
  type: TYPE_NORMAL
- en: schematic symbol, [581](c20.xhtml#Page_581)
  prefs: []
  type: TYPE_NORMAL
- en: semantics, [546](c19.xhtml#Page_546)
  prefs: []
  type: TYPE_NORMAL
- en: semi-supervised learning, [501](c18.xhtml#Page_501)
  prefs: []
  type: TYPE_NORMAL
- en: sensitivity, [66](c03.xhtml#Page_66)
  prefs: []
  type: TYPE_NORMAL
- en: sentence embedding, [571](c20.xhtml#Page_571)
  prefs: []
  type: TYPE_NORMAL
- en: sentiment analysis
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: with BERT, [592](c20.xhtml#Page_592)
  prefs: []
  type: TYPE_NORMAL
- en: seq2seq, [561](c19.xhtml#Page_561)
  prefs: []
  type: TYPE_NORMAL
- en: sequence, [539](c19.xhtml#Page_539)
  prefs: []
  type: TYPE_NORMAL
- en: SGD (stochastic gradient descent), [401](c15.xhtml#Page_401)
  prefs: []
  type: TYPE_NORMAL
- en: Shannon, Claude, [133](c06.xhtml#Page_133)
  prefs: []
  type: TYPE_NORMAL
- en: shift invariance, [453](c16.xhtml#Page_453)
  prefs: []
  type: TYPE_NORMAL
- en: shifted ReLU activation function, [338](c13.xhtml#Page_338)
  prefs: []
  type: TYPE_NORMAL
- en: SI (slope-intercept) space, [213](c09.xhtml#Page_213)
  prefs: []
  type: TYPE_NORMAL
- en: Siberian husky, [185](c08.xhtml#Page_185)
  prefs: []
  type: TYPE_NORMAL
- en: sibling (in decision tree), [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: sigmoid activation function, [341](c13.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: sign activation function, [334](c13.xhtml#Page_334)
  prefs: []
  type: TYPE_NORMAL
- en: simple correlation, [39](c02.xhtml#Page_39)
  prefs: []
  type: TYPE_NORMAL
- en: simple probability, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: sine wave activation function, [343](c13.xhtml#Page_343)
  prefs: []
  type: TYPE_NORMAL
- en: skip connection, [582](c20.xhtml#Page_582)
  prefs: []
  type: TYPE_NORMAL
- en: sleuth (of bears), [568](c20.xhtml#Page_568)
  prefs: []
  type: TYPE_NORMAL
- en: slice processing
  prefs: []
  type: TYPE_NORMAL
- en: elementwise, [234](c10.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: featurewise, [233](c10.xhtml#Page_233)
  prefs: []
  type: TYPE_NORMAL
- en: samplewise, [232](c10.xhtml#Page_232)
  prefs: []
  type: TYPE_NORMAL
- en: sliding window, [543](c19.xhtml#Page_543)
  prefs: []
  type: TYPE_NORMAL
- en: slope (tangent), [122](c05.xhtml#Page_122)
  prefs: []
  type: TYPE_NORMAL
- en: softmax
  prefs: []
  type: TYPE_NORMAL
- en: as activation function, [345](c13.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: in Q-learning, [630](c21.xhtml#Page_630)
  prefs: []
  type: TYPE_NORMAL
- en: softplus activation function, [340](c13.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: sorting dolls (scenario), [61](c03.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: sorting eggs (scenario), [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: spatial filter, [436](c16.xhtml#Page_436)
  prefs: []
  type: TYPE_NORMAL
- en: specificity, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: splitting. *See* node splitting
  prefs: []
  type: TYPE_NORMAL
- en: stairstep activation function, [332](c13.xhtml#Page_332)
  prefs: []
  type: TYPE_NORMAL
- en: standard deviation, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: standardization, [229](c10.xhtml#Page_229)
  prefs: []
  type: TYPE_NORMAL
- en: Starship *Theseus*, [97](c04.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: state
  prefs: []
  type: TYPE_NORMAL
- en: agent (reinforcement learning), [605](c21.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: environmental (reinforcement learning), [605](c21.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: hidden (RNN), [549](c19.xhtml#Page_549)
  prefs: []
  type: TYPE_NORMAL
- en: of an RNN, [548](c19.xhtml#Page_548)
  prefs: []
  type: TYPE_NORMAL
- en: starting (RNN), [548](c19.xhtml#Page_548)
  prefs: []
  type: TYPE_NORMAL
- en: variable (reinforcement learning), [605](c21.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: state variable, [605](c21.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: statistics, [15](c02.xhtml#Page_15)
  prefs: []
  type: TYPE_NORMAL
- en: step activation function, [332](c13.xhtml#Page_332)
  prefs: []
  type: TYPE_NORMAL
- en: Stevenson, Robert Louis, [137](c06.xhtml#Page_137)
  prefs: []
  type: TYPE_NORMAL
- en: stochastic environment, [611](c21.xhtml#Page_611)
  prefs: []
  type: TYPE_NORMAL
- en: stochastic gradient descent, [401](c15.xhtml#Page_401)
  prefs: []
  type: TYPE_NORMAL
- en: striding, [453](c16.xhtml#Page_453)
  prefs: []
  type: TYPE_NORMAL
- en: strong learner, [303](c12.xhtml#Page_303)
  prefs: []
  type: TYPE_NORMAL
- en: style image, [680](c23.xhtml#Page_680)
  prefs: []
  type: TYPE_NORMAL
- en: style loss, [683](c23.xhtml#Page_683)
  prefs: []
  type: TYPE_NORMAL
- en: style matrix, [681](c23.xhtml#Page_681)
  prefs: []
  type: TYPE_NORMAL
- en: style transfer, [680](c23.xhtml#Page_680)
  prefs: []
  type: TYPE_NORMAL
- en: subjective Bayes, [97](c04.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: subtree (of decision tree), [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: summarize (text), [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: supervised learning
  prefs: []
  type: TYPE_NORMAL
- en: for classification, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: support layer, [327](c13.xhtml#Page_327)
  prefs: []
  type: TYPE_NORMAL
- en: support vector, [284](c11.xhtml#Page_284)
  prefs: []
  type: TYPE_NORMAL
- en: support vector machine
  prefs: []
  type: TYPE_NORMAL
- en: kernel trick, [287](c11.xhtml#Page_287)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [282](c11.xhtml#Page_282)
  prefs: []
  type: TYPE_NORMAL
- en: strictness parameter C, [285](c11.xhtml#Page_285)
  prefs: []
  type: TYPE_NORMAL
- en: support vector, [284](c11.xhtml#Page_284)
  prefs: []
  type: TYPE_NORMAL
- en: surprise, [134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: SVM. *See* support vector machine
  prefs: []
  type: TYPE_NORMAL
- en: sweeping (a filter), [433](c16.xhtml#Page_433)
  prefs: []
  type: TYPE_NORMAL
- en: swish activation function, [340](c13.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: SWOR (selection without replacement), [30](c02.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: SWR (selection with replacement), [30](c02.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: '**T**'
  prefs: []
  type: TYPE_NORMAL
- en: '*A Tale of Two Cities*'
  prefs: []
  type: TYPE_NORMAL
- en: with embedding, [579](c20.xhtml#Page_579)
  prefs: []
  type: TYPE_NORMAL
- en: prediction, [545](c19.xhtml#Page_545)
  prefs: []
  type: TYPE_NORMAL
- en: tangent, [122](c05.xhtml#Page_122)
  prefs: []
  type: TYPE_NORMAL
- en: tangent line, [122](c05.xhtml#Page_122)
  prefs: []
  type: TYPE_NORMAL
- en: target (one-hot encoded label), [361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: temperature (selecting outputs), [595](c20.xhtml#Page_595)
  prefs: []
  type: TYPE_NORMAL
- en: tensor, [328](c13.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: terminal node (in decision tree), [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: test data
  prefs: []
  type: TYPE_NORMAL
- en: definition, [186](c08.xhtml#Page_186)
  prefs: []
  type: TYPE_NORMAL
- en: never learn from, [186](c08.xhtml#Page_186)
  prefs: []
  type: TYPE_NORMAL
- en: testing for disease (scenario), [63](c03.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: text messaging (scenario), [135](c06.xhtml#Page_135)
  prefs: []
  type: TYPE_NORMAL
- en: TFR (total future reward), [609](c21.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: threshold
  prefs: []
  type: TYPE_NORMAL
- en: for artificial neuron, [316](c13.xhtml#Page_316)
  prefs: []
  type: TYPE_NORMAL
- en: for real neuron, [314](c13.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: tic-tac-toe, [603](c21.xhtml#Page_603)
  prefs: []
  type: TYPE_NORMAL
- en: time step, [549](c19.xhtml#Page_549)
  prefs: []
  type: TYPE_NORMAL
- en: toad visual system
  prefs: []
  type: TYPE_NORMAL
- en: hierarchy, [461](c16.xhtml#Page_461)
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [437](c16.xhtml#Page_437)
  prefs: []
  type: TYPE_NORMAL
- en: token
  prefs: []
  type: TYPE_NORMAL
- en: embedding, [566](c20.xhtml#Page_566)
  prefs: []
  type: TYPE_NORMAL
- en: as a word, [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: total future reward, [609](c21.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: total reward, [609](c21.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: training
  prefs: []
  type: TYPE_NORMAL
- en: accuracy, [196](c09.xhtml#Page_196)
  prefs: []
  type: TYPE_NORMAL
- en: basic idea, [182](c08.xhtml#Page_182)
  prefs: []
  type: TYPE_NORMAL
- en: deep network overview, [12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: error, [196](c09.xhtml#Page_196)
  prefs: []
  type: TYPE_NORMAL
- en: flowchart, [189](c08.xhtml#Page_189)
  prefs: []
  type: TYPE_NORMAL
- en: loss, [196](c09.xhtml#Page_196)
  prefs: []
  type: TYPE_NORMAL
- en: training set, [182](c08.xhtml#Page_182)
  prefs: []
  type: TYPE_NORMAL
- en: transfer function. *See* activation function
  prefs: []
  type: TYPE_NORMAL
- en: transfer learning, [542](c19.xhtml#Page_542)
  prefs: []
  type: TYPE_NORMAL
- en: transformation
  prefs: []
  type: TYPE_NORMAL
- en: inverse, [234](c10.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: multivariate, [231](c10.xhtml#Page_231)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [223](c10.xhtml#Page_223)
  prefs: []
  type: TYPE_NORMAL
- en: univariate, [231](c10.xhtml#Page_231)
  prefs: []
  type: TYPE_NORMAL
- en: transformer
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [586](c20.xhtml#Page_586)
  prefs: []
  type: TYPE_NORMAL
- en: structure, [588](c20.xhtml#Page_588)
  prefs: []
  type: TYPE_NORMAL
- en: translation, [540](c19.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: transmitting books (scenario), [146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: transparency
  prefs: []
  type: TYPE_NORMAL
- en: decision trees, [274](c11.xhtml#Page_274)
  prefs: []
  type: TYPE_NORMAL
- en: one-versus-one classifiers, [164](c07.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: transposed convolution, [457](c16.xhtml#Page_457)
  prefs: []
  type: TYPE_NORMAL
- en: '*Treasure Island*, [137](c06.xhtml#Page_137)'
  prefs: []
  type: TYPE_NORMAL
- en: triple modular redundancy, [297](c12.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: true discovery rate, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: true negative, [60](c03.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: true positive, [60](c03.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: true positive rate, [66](c03.xhtml#Page_66)
  prefs: []
  type: TYPE_NORMAL
- en: Turner, J.M.W., [685](c23.xhtml#Page_685)
  prefs: []
  type: TYPE_NORMAL
- en: Twain, Mark, [146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: two-moons dataset, [275](c11.xhtml#Page_275)
  prefs: []
  type: TYPE_NORMAL
- en: type I error, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: type II error, [73](c03.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: '**U**'
  prefs: []
  type: TYPE_NORMAL
- en: unbalanced decision tree, [270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: uncertainty, [143](c06.xhtml#Page_143)
  prefs: []
  type: TYPE_NORMAL
- en: underfitting, [197](c09.xhtml#Page_197)
  prefs: []
  type: TYPE_NORMAL
- en: unfair coin, [86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: unfertilized, [157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: uniform distribution, [21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: unit (for artificial neuron), [315](c13.xhtml#Page_315)
  prefs: []
  type: TYPE_NORMAL
- en: unit step activation function, [334](c13.xhtml#Page_334)
  prefs: []
  type: TYPE_NORMAL
- en: univariate transformation, [231](c10.xhtml#Page_231)
  prefs: []
  type: TYPE_NORMAL
- en: Universal Language Model Fine-Tuning, [574](c20.xhtml#Page_574)
  prefs: []
  type: TYPE_NORMAL
- en: universal perturbation, [491](c17.xhtml#Page_491)
  prefs: []
  type: TYPE_NORMAL
- en: unrolled diagram, [550](c19.xhtml#Page_550)
  prefs: []
  type: TYPE_NORMAL
- en: unsupervised learning, [8](c01.xhtml#Page_8)
  prefs: []
  type: TYPE_NORMAL
- en: update rule, [617](c21.xhtml#Page_617)
  prefs: []
  type: TYPE_NORMAL
- en: upsampling, [457](c16.xhtml#Page_457)
  prefs: []
  type: TYPE_NORMAL
- en: upsizing, [457](c16.xhtml#Page_457)
  prefs: []
  type: TYPE_NORMAL
- en: user data, [183](c08.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: '**V**'
  prefs: []
  type: TYPE_NORMAL
- en: VAE (variational autoencoder), [521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: Vail, Alfred, [139](c06.xhtml#Page_139)
  prefs: []
  type: TYPE_NORMAL
- en: validation data. *See* validation set
  prefs: []
  type: TYPE_NORMAL
- en: validation error, [197](c09.xhtml#Page_197)
  prefs: []
  type: TYPE_NORMAL
- en: validation set
  prefs: []
  type: TYPE_NORMAL
- en: definition, [187](c08.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: estimating error from, [189](c08.xhtml#Page_189)
  prefs: []
  type: TYPE_NORMAL
- en: valley (3D surface), [129](c05.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: value (for transformer), [575](c20.xhtml#Page_575)
  prefs: []
  type: TYPE_NORMAL
- en: van Gogh, Vincent, [685](c23.xhtml#Page_685)
  prefs: []
  type: TYPE_NORMAL
- en: vanishing gradient
  prefs: []
  type: TYPE_NORMAL
- en: on surfaces, [128](c05.xhtml#Page_128)
  prefs: []
  type: TYPE_NORMAL
- en: training an RNN, [553](c19.xhtml#Page_553)
  prefs: []
  type: TYPE_NORMAL
- en: variable-bitrate code, [143](c06.xhtml#Page_143)
  prefs: []
  type: TYPE_NORMAL
- en: variance
  prefs: []
  type: TYPE_NORMAL
- en: with respect to bias, [204](c09.xhtml#Page_204)
  prefs: []
  type: TYPE_NORMAL
- en: in statistics, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: variance normalization, [229](c10.xhtml#Page_229)
  prefs: []
  type: TYPE_NORMAL
- en: variational autoencoder, [521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: vector, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: vertex (in a neural network), [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: VGG16
  prefs: []
  type: TYPE_NORMAL
- en: for creative applications, [676](c23.xhtml#Page_676)
  prefs: []
  type: TYPE_NORMAL
- en: introduction, [478](c17.xhtml#Page_478)
  prefs: []
  type: TYPE_NORMAL
- en: visualizing filters, [480](c17.xhtml#Page_480)
  prefs: []
  type: TYPE_NORMAL
- en: vocabulary, [541](c19.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: volume, [329](c13.xhtml#Page_329)
  prefs: []
  type: TYPE_NORMAL
- en: voting (ensembles)
  prefs: []
  type: TYPE_NORMAL
- en: confidence, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [298](c12.xhtml#Page_298)
  prefs: []
  type: TYPE_NORMAL
- en: plurality voting, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: weighted plurality voting, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: '**W**'
  prefs: []
  type: TYPE_NORMAL
- en: weak learner, [303](c12.xhtml#Page_303)
  prefs: []
  type: TYPE_NORMAL
- en: weight
  prefs: []
  type: TYPE_NORMAL
- en: naming convention for neurons, [322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: for neurons, [316](c13.xhtml#Page_316)
  prefs: []
  type: TYPE_NORMAL
- en: overview in deep network, [11](c01.xhtml#Page_11)
  prefs: []
  type: TYPE_NORMAL
- en: weight sharing, [433](c16.xhtml#Page_433)
  prefs: []
  type: TYPE_NORMAL
- en: weighted coin, [86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: weighted graph, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: weighted plurality voting, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: weirdness (high-dimensional), [175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: width (of a recurrent cell), [551](c19.xhtml#Page_551)
  prefs: []
  type: TYPE_NORMAL
- en: winner (egg), [160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: wire (in a neural network), [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: word embedding, [566](c20.xhtml#Page_566)
  prefs: []
  type: TYPE_NORMAL
- en: '**X**'
  prefs: []
  type: TYPE_NORMAL
- en: Xavier Normal initialization, [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: Xavier Uniform initialization, [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: '**Y**'
  prefs: []
  type: TYPE_NORMAL
- en: yolker, [160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: Yorkshire terrier, [184](c08.xhtml#Page_184)
  prefs: []
  type: TYPE_NORMAL
- en: '**Z**'
  prefs: []
  type: TYPE_NORMAL
- en: zero gradient, [128](c05.xhtml#Page_128)
  prefs: []
  type: TYPE_NORMAL
- en: zero padding, [442](c16.xhtml#Page_442)
  prefs: []
  type: TYPE_NORMAL
- en: zero point, [436](c16.xhtml#Page_436)
  prefs: []
  type: TYPE_NORMAL
- en: zero-dimensional array, [328](c13.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: zero-shot training, [594](c20.xhtml#Page_594)
  prefs: []
  type: TYPE_NORMAL
- en: This book was outlined with dozens of yellow Post-it notes on a pair of three-fold
    science fair display boards, each marked with a shiny star sticker when that section
    was completed. The manuscript was written on a MacBook Pro and an iMac using the
    vi text editor to produce Markdeep files. Final edits were made using Microsoft
    Word and then Adobe Acrobat and Adobe InDesign. Figures were hand-drawn with colored
    pens and then redrawn in Adobe Illustrator and Photoshop. Computer-generated figures
    were made with Python code written in Jupyter notebooks. Notable Python libraries
    included scikit-learn, scikit-image, numpy, scipy, pandas, matplotlib, TensorFlow,
    and PyTorch.
  prefs: []
  type: TYPE_NORMAL
