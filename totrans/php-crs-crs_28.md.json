["```\n<?php\nnamespace Mattsmithdev;\n\nclass Food\n{\n    protected string $name;\n\n    public function __construct(string $name)\n    {\n        $this->name = $name;\n    }\n\n    public function __toString(): string\n    {\n        return \"(FOOD) $this->name\";\n    }\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass Dessert extends Food\n{\n    private int $calories;\n\n    public function __construct(string $name, int $calories)\n    {\n        parent::__construct($name);\n      ❶ $this->setCalories($calories);\n    }\n    public function getCalories(): int\n    {\n        return $this->calories;\n    }\n\n    public function setCalories(int $calories)\n    {\n      ❷ if ($calories < 0) {\n            throw new \\Exception(\n                'attempting to set calories to a negative value');\n        }\n\n      ❸ $this->calories = $calories;\n    }\n\n    public function __toString(): string\n    {\n        return \"I am a Dessert containing $this->calories!\";\n    }\n}\n```", "```\n{\n    \"autoload\": {\n        \"psr-4\": {\n            \"Mattsmithdev\\\\\": \"src\"\n        }\n    }\n}\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nuse Mattsmithdev\\Food;\nuse Mattsmithdev\\Dessert;\n\n$f1 = new Food('apple');\nprint $f1 . PHP_EOL;\n\n$f2 = new Dessert('strawberry cheesecake', -1);\nprint $f2;\n```", "```\n$ **php public/index.php**\n(FOOD) apple\n\nFatal error: Uncaught Exception: attempting to set calories to a negative\nvalue in /Users/matt/src/Dessert.php:23\nStack trace:\n#0 /Users/matt/src/Dessert.php(12): Mattsmithdev\\Dessert->setCalories(-1)\n#1 /Users/matt/public/index.php(10): Mattsmithdev\\Dessert->__construct\n('strawberry chee...', -1)\n#2 {main}\n  thrown in /Users/matt/src/Dessert.php on line 23\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nuse Mattsmithdev \\Food;\nuse Mattsmithdev \\Dessert;\n\n❶ try {\n $f1 = new Food('apple');\n print $f1 . PHP_EOL;\n\n $f2 = new Dessert('strawberry cheesecake', -1);\n print $f2;\n❷} catch (\\Exception $e) {\n    print '(caught!) - an exception occurred!' . PHP_EOL;\n  ❸ print $e->getMessage();\n}\n```", "```\n$ **php public/index.php**\n(FOOD) apple\n(caught!) - an exception occurred!\nattempting to set calories to a negative value\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\ntry {\n $f1 = new Food('apple');\n print $f1 . PHP_EOL;\n\n $f2 = new Dessert('strawberry cheesecake', -1);\n print $f2;\n} catch (\\Exception $e) {\n print '(caught!) - an exception occurred!' . PHP_EOL;\n print $e->getMessage();\n} finally {\n    print PHP_EOL  . '(finally) -- Application finished --';\n}\n```", "```\n$ **php public/index.php**\n(FOOD) apple\n(caught!) - an exception occurred!\nattempting to set calories to a negative value\n(finally) -- Application finished --\n```", "```\n--snip--\n    $f2 = new Dessert('strawberry cheesecake', **500**);\n--snip--\n```", "```\n$ **php public/index.php**\n(FOOD) apple\nI am a Dessert containing 500 calories!\n(finally) -- Application finished --\n```", "```\npublic function setCalories(int $calories): void\n{\n if ($calories < 0) {\n        throw new \\InvalidArgumentException(\n            'attempting to set calories to a negative value');\n\n    }\n\n    if ($calories > 5000) {\n        throw new \\Exception('too many calories for one dessert!');\n    }\n\n $this->calories = $calories;\n}\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nuse Mattsmithdev\\Food;\nuse Mattsmithdev\\Dessert;\n\n$calories = -1; // Negative invalid argument\n$calories = 6000; // General exception\n$calories = 500; // Valid\n\ntry {\n    $f2 = new Dessert('strawberry cheesecake', $calories);\n    print $f2;\n} ❶ catch (\\InvalidArgumentException $e) {\n    print '(caught!) - an Invalid Argument Exception occurred!' . PHP_EOL;\n    print $e->getMessage();\n} ❷ catch (\\Exception $e) {\n    print '(caught!) - a general Exception occurred!' . PHP_EOL;\n    print $e->getMessage();\n\n} finally {\n print PHP_EOL . '(finally) -- Application finished --';\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass NegativeCaloriesException extends \\Exception\n{\n}\n```", "```\npublic function setCalories(int $calories)\n{\n if ($calories < 0) {\n        throw new NegativeCaloriesException(\n            'attempting to set calories to a negative value');\n    }\n\n if ($calories > 5000) {\n throw new \\Exception('too many calories for one dessert!');\n }\n\n $this->calories = $calories;\n}\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nuse Mattsmithdev\\Dessert;\nuse Mattsmithdev\\NegativeCaloriesException;\n\n$calories = -1; // Negative invalid argument\n$calories = 6000; // General exception\n$calories = 500; // Valid\n\ntry {\n $f2 = new Dessert('strawberry cheesecake', $calories);\n print $f2;\n} catch (NegativeCaloriesException) {\n print '(caught!) - a Negative Calories Value Exception occurred!' . PHP_EOL;\n print $e->getMessage();\n} catch (\\Exception $e) {\n print '(caught!) - a general Exception occurred! ' . PHP_EOL;\n print $e->getMessage();\n} finally {\n print PHP_EOL . '(finally) -- Application finished --';\n}\n```", "```\n$ **php public/index.php**\n(caught!) - a Negative Calories Value Exception occurred!\nattempting to set calories to a negative value\n(finally) -- Application finished --\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nuse Mattsmithdev\\Application;\n\ntry {\n    $app = new Application();\n    $app->run();\n} catch (\\Exception $e) {\n    print '(index.php) Exception caught!';\n}finally {\n print PHP_EOL;\n    print '(index.php) finally -- Application finished --';\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass Application\n{\n    public function run(): void\n    {\n        $calories = -1; // Negative invalid argument\n        $calories = 6000; // General exception\n        $calories = 500; // Valid\n\n        try {\n            $f2 = new Dessert('strawberry cheesecake', $calories);\n            print $f2;\n        } catch (NegativeCaloriesException $e) {\n            print\n'(Application->run) - Negative Calories Value Exception caught!';\n        }\n    }\n}\n```"]