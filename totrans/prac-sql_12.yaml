- en: '12'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Working with Dates and Times
  prefs: []
  type: TYPE_NORMAL
- en: '![](Images/chapterart.png)'
  prefs: []
  type: TYPE_IMG
- en: Columns filled with dates and times can indicate *when* events happened or *how
    long* they took, and that can lead to interesting lines of inquiry. What patterns
    exist in the moments on a timeline? Which events were shortest or longest? What
    relationships exist between a particular activity and the time of day or season
    in which it occurred?
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we’ll explore these kinds of questions using SQL data types
    for dates and times and their related functions. We’ll start with a closer look
    at data types and functions related to dates and times. Then we’ll explore a dataset
    on trips by New York City taxicabs to look for patterns and try to discover what,
    if any, story the data tells. We’ll also explore time zones using Amtrak data
    to calculate the duration of train trips across the United States.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Data Types and Functions for Dates and Times
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Chapter 4 explored primary SQL data types, but to review, here are the four
    data types related to dates and times:'
  prefs: []
  type: TYPE_NORMAL
- en: '`timestamp` Records date and time. You will almost always want to add the keywords
    `with time zone` to ensure that times stored include time zone information. Otherwise,
    times recorded around the globe become impossible to compare. The format `timestamp
    with time zone` is part of the SQL standard; with PostgreSQL you can specify the
    same data type using `timestamptz`. You can specify time zones in three different
    formats: its UTC offset, an area/location designator, or a standard abbreviation.
    If you supply a time without a time zone to a `timestamptz` column, the database
    will add time zone information using your server’s default setting.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`date` ``Records only the date and is part of the SQL standard. PostgreSQL
    accepts several date formats. For example, valid formats for adding the 21st day
    of September 2022 are `September 21, 2022` or `9/21/2022`. I recommend using `YYYY-MM-DD`
    (or `2022-09-21`), which is the ISO 8601 international standard format and also
    the default PostgreSQL date output. Using the ISO format helps avoid confusion
    when sharing data internationally.``'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
