["```\n[SBConfigManager setDefaultConfiguration:\n@\"uZmgulcipekSbayTO9ByamTUu_zVtsflazc2Nsuqgq0dXkoOzKMJMNTULoLpd-QV9qQy6VRluzRXqWOGscgheRvikLkPR\nzs1pJbey2QdaUSXUZCX-UNERrosul22NsW2vYpS7HQO4VG5l8qic3rSH_fAhxsBXpEe557eHIr245LUYcEIpemnvSPTZ_lN\np2XwyOJjzcJWirKbKwtc3Q61pD...\"];\n```", "```\n{\n \"dnsChanger\" =  {\n   \"affiliate\" = \"\";\n   \"blacklist_dns\" = ();\n   \"encrypt\" = true;\n   \"external_id\" = 0;\n   \"product_name\" = dnsChanger;\n   \"publisher_id\" = 0;\n    ...\n   \"setup_dns\" =         (\n      \"82.163.143.135\",\n \"82.163.142.137\"\n    );\n    \"shared_storage\" = \"/Users/%USER_NAME%/Library/Application Support\";\n    \"storage_timeout\" = 120;\n   };\n \"installer_id\" = 1359747970602718687;\n ...\n}\n```", "```\n% **lldb ~/Downloads/malware** `<arg0 arg1 arg2>`\n\n(lldb) **target create \"malware\"**\nCurrent executable set to 'malware' (x86_64).\n```", "```\n% **lldb -pid**`<target pid>`\n```", "```\n% **lldb**\n(lldb) **process attach --name malware --waitfor**\n```", "```\nProcess 14980 stopped\n* thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP\n...\n\nExecutable module set to \"~/Downloads/malware\".\nArchitecture set to: x86_64h-apple-macosx-.\n```", "```\n(lldb) **b main**\nBreakpoint 1: where = malware`main, \n              address = 0x100004bd9\n```", "```\n(lldb) **run**\n\n(lldb) Process 1953 stopped\nstop reason = breakpoint 1.1\n->  0x100004bd9 <+0>: pushq  %rbp\n```", "```\n(lldb) **b 0x100004bd9**\nBreakpoint 1: where = malware`__lldb_unnamed_symbol1$$malware, \n              address = 0x100004bd9\n```", "```\nTarget 0: (installer) stopped.\n(lldb) b -[appAppDelegate installPayload]\n\nBreakpoint 1: where = installer`-[appAppDelegate installPayload], \naddress = 0x000000010000336c\n```", "```\nb -[NSConcreteTask launch]\n```", "```\n(lldb) **br modify -c '$rsi > 128' 1**\n(lldb) **br list**\nCurrent breakpoints:\n1: address = 0x100003d28, locations = 1, resolved = 1, hit count = 0\nCondition: $rsi  > 128\n```", "```\n(lldb) **breakpoint command add 1**\nEnter your debugger command(s).  Type 'DONE' to end.\n> **po $rdi**\n> **continue** \n> **DONE**\n```", "```\n(lldb) **help breakpoint**\nSyntax: breakpoint `<subcommand>` [`<command-options>`]\n```", "```\n(lldb) **reg read rax**\nrax = 0x0000000000000000\n```", "```\n(lldb) **print object $rax**\n{\n \"dnsChanger\" =  {\n   \"affiliate\" = \"\";\n   \"blacklist_dns\" = ();\n   \"encrypt\" = true;\n   \"external_id\" = 0;\n   \"product_name\" = dnsChanger;\n   \"publisher_id\" = 0;\n\n    ...\n   \"setup_dns\" =         (\n      \"82.163.143.135\",\n      \"82.163.142.137\"\n    );\n    \"shared_storage\" = \"/Users/%USER_NAME%/Library/Application Support\";\n    \"storage_timeout\" = 120;\n };\n \"installer_id\" = 1359747970602718687;\n ...\n}\n```", "```\n(lldb) **x/2i $rip** \n0x100035cbe: ff d0 callq *%rax\n0x100035cc0: 48 83 c4 10 addq $0x10, %rsp\n\n(lldb) **register write $rip 0x100035CC0** \n\n(lldb) **x/i $rip** \n0x100035cc0: 48 83 c4 10 addq $0x10, %rsp\n```", "```\n(lldb) **reg write $rax 1**\n```", "```\n(lldb) **memory write 0x100100000 -s 4 0x41414141**\n```", "```\n(lldb) **memory read 0x100100000**\n0x100100000: 41 41 41 41 00 00 00 00 00 00 00 00 00 00 00 00  AAAA...\n```", "```\nimport lldb\n\ndef __lldb_init_module(debugger, internal_dict):\n    target = debugger.GetSelectedTarget()\n    breakpoint = target.BreakpointCreateByName(\"objc_msgSend\")\n    breakpoint.SetScriptCallbackFunction('objc.msgSendCallback')\n```", "```\ndef msgSendCallback(frame, bp_loc, dict):\n    lldb.debugger.HandleCommand('po [$rdi class]')\n    lldb.debugger.HandleCommand('x/s $rsi')\n\n    frame.thread.process.Continue()\n```", "```\n(lldb) **command script import ~/objc.py**\n\n(lldb) **NSTask**\n0x1d8dcd07c: \"alloc\"\n\n(lldb) **NSConcreteTask**\n0x1d8dccbdd: \"init\"\n\n(lldb) **NSConcreteTask**\n0x1d8e1b67a: \"setLaunchPath:\"\n\n(lldb) **NSConcreteTask**\n0x1d8e1b771: \"launch\"\n```", "```\n/* @class MinerManager */\n-(void)runMining {\n    rdx = self->_coreLimit;\n    r14 = [self calculateWorkingCores:rdx];\n    [Coinstash_XMRSTAK9Coinstash setCPULimit:self->_cpuLimit];\n    r15 = [self getPort];\n    r12 = [self algorythm];\n    [self getSlotMemoryMode];\n\n    [Coinstash_XMRSTAK9Coinstash startMiningWithPort:r15 \n                                 password:self->_token \n                                 coreCount:r14\n                                 slowMemory:self->_slowMemoryMode\n                                 currency:r12];\n    ...\n\n    return;\n}\n```", "```\n% **lldb CalendarFree.app**\n(lldb) **target create \"CalendarFree.app\"**\nCurrent executable set to 'CalendarFree.app' (x86_64).\n\n(lldb) **b -[MinerManager runMining]**\nBreakpoint 1: where = CalendarFree`-[MinerManager runMining], \n              address = 0x0000000100077fc0\n```", "```\n(lldb) **r**\nProcess 782 launched: 'CalendarFree.app/Contents/MacOS/CalendarFree' (x86_64)\n\nCalendarFree[782:7349] Miner: Stopped\nProcess 782 stopped\n stop reason = breakpoint 1.1\n\nCalendarFree`-[MinerManager runMining]:\n->  0x100077fc0 <+0>: pushq  %rbp\n    0x100077fc1 <+1>: movq   %rsp, %rbp\n    0x100077fc4 <+4>: pushq  %r15\n    0x100077fc6 <+6>: pushq  %r14\n```", "```\n(lldb) **n**\n\nProcess 782 stopped\n stop reason = instruction step over\n\nCalendarFree`-[MinerManager runMining] + 35:\n->  0x100077fe3 <+35>: movq 0xaa3d6(%rip), %r13   ;0x00007fff58acba00: objc_msgSend\n```", "```\n(lldb) **n**\n\nProcess 782 stopped\n stop reason = instruction step over\n\nCalendarFree`-[MinerManager runMining] + 167:\n->  0x100078067 <+167>: callq  *%r13\n\n(lldb) **reg read $r13**\nr13 = 0x00007fff58acba00  libobjc.A.dylib`objc_msgSend \n```", "```\n(lldb) **po $rdi**\nCoinstash_XMRSTAK.Coinstash\n```", "```\n(lldb) **x/s $rsi**\n0x1000f1576: \"startMiningWithPort:password:coreCount:slowMemory:currency:\"\n```", "```\n(lldb) **po $rdx**\n7777\n\n(lldb) **po $rcx**\nqbix:greg@qbix.com\n\n(lldb) **reg read $r8**\nr8 = 0x0000000000000001\n\n(lldb) **po $r9**\nalways\n\n(lldb) **x/s $rsp**\n0x7ffeefbfe0d0: \"graft\"\n```", "```\n1 (lldb) **po [0x1018f04e0 HTTPBody]**\n{\n  \"mining\": {\n    \"statistic\": {\n      \"ZeroCounter\": 0,\n      \"AverageHashRate\": 0.92911845445632935,\n      \"CounterTime\": 30,\n    },\n    \"params\": {\n      \"Token\": \"qbix:greg@qbix.com\",\n      \"Algorithm\": \"graft\",\n      \"CPULimit\": 25,\n      \"EnableMiningMode\": true,\n      \"CPUBatteryLimit\": 10,\n      \"CoreLimit\": 25,\n      \"Ports\": {\n        \"7777\": 1000000,\n        \"5555\": 160,\n        \"3333\": 40\n      }\n    }\n  },\n  ...\n}\n```"]