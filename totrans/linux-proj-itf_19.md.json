["```\n#include <sys/inotify.h>\n\nint `inotify_init`(void);\n```", "```\n#include <sys/inotify.h>\n\nint `inotify_add_watch`(int *fd*, const char **pathname*, uint32_t *mask*);\n```", "```\n#include <sys/inotify.h>\n\nint `inotify_rm_watch`(int *fd*, int *wd*);\n```", "```\nstruct inotify_event {\n    int      wd;          /* Watch descriptor on which event occurred */\n    uint32_t mask;        /* Bits describing event that occurred */\n    uint32_t cookie;      /* Cookie for related events (for rename()) */\n    uint32_t len;         /* Size of 'name' field */\n    char     name[];      /* Optional null-terminated filename */\n};\n```", "```\n`inotify/demo_inotify.c`\n    #include <sys/inotify.h>\n    #include <limits.h>\n    #include \"tlpi_hdr.h\"\n\n    static void             /* Display information from inotify_event structure */\n    displayInotifyEvent(struct inotify_event *i)\n    {\n        printf(\"    wd =%2d; \", i->wd);\n        if (i->cookie > 0)\n            printf(\"cookie =%4d; \", i->cookie);\n\n        printf(\"mask = \");\n        if (i->mask & IN_ACCESS)        printf(\"IN_ACCESS \");\n        if (i->mask & IN_ATTRIB)        printf(\"IN_ATTRIB \");\n        if (i->mask & IN_CLOSE_NOWRITE) printf(\"IN_CLOSE_NOWRITE \");\n        if (i->mask & IN_CLOSE_WRITE)   printf(\"IN_CLOSE_WRITE \");\n        if (i->mask & IN_CREATE)        printf(\"IN_CREATE \");\n        if (i->mask & IN_DELETE)        printf(\"IN_DELETE \");\n        if (i->mask & IN_DELETE_SELF)   printf(\"IN_DELETE_SELF \");\n        if (i->mask & IN_IGNORED)       printf(\"IN_IGNORED \");\n        if (i->mask & IN_ISDIR)         printf(\"IN_ISDIR \");\n        if (i->mask & IN_MODIFY)        printf(\"IN_MODIFY \");\n        if (i->mask & IN_MOVE_SELF)     printf(\"IN_MOVE_SELF \");\n        if (i->mask & IN_MOVED_FROM)    printf(\"IN_MOVED_FROM \");\n        if (i->mask & IN_MOVED_TO)      printf(\"IN_MOVED_TO \");\n        if (i->mask & IN_OPEN)          printf(\"IN_OPEN \");\n        if (i->mask & IN_Q_OVERFLOW)    printf(\"IN_Q_OVERFLOW \");\n        if (i->mask & IN_UNMOUNT)       printf(\"IN_UNMOUNT \");\n        printf(\"\\n\");\n\n        if (i->len > 0)\n            printf(\"        name = %s\\n\", i->name);\n    }\n\n    #define BUF_LEN (10 * (sizeof(struct inotify_event) + NAME_MAX + 1))\n\n    int\n    main(int argc, char *argv[])\n    {\n        int inotifyFd, wd, j;\n        char buf[BUF_LEN];\n        ssize_t numRead;\n        char *p;\n        struct inotify_event *event;\n\n        if (argc < 2 || strcmp(argv[1], \"--help\") == 0)\n            usageErr(\"%s pathname... \\n\", argv[0]);\n\n     inotifyFd = inotify_init();                 /* Create inotify instance */\n        if (inotifyFd == -1)\n            errExit(\"inotify_init\");\n\n        for (j = 1; j < argc; j++) {\n         wd = inotify_add_watch(inotifyFd, argv[j], IN_ALL_EVENTS);\n            if (wd == -1)\n                errExit(\"inotify_add_watch\");\n\n            printf(\"Watching %s using wd %d\\n\", argv[j], wd);\n        }\n\n        for (;;) {                                  /* Read events forever */\n         numRead = read(inotifyFd, buf, BUF_LEN);\n            if (numRead == 0)\n                fatal(\"read() from inotify fd returned 0!\");\n\n            if (numRead == -1)\n                errExit(\"read\");\n\n            printf(\"Read %ld bytes from inotify fd\\n\", (long) numRead);\n\n            /* Process all of the events in buffer returned by read() */\n\n            for (p = buf; p < buf + numRead; ) {\n                event = (struct inotify_event *) p;\n             displayInotifyEvent(event);\n\n                p += sizeof(struct inotify_event) + event->len;\n            }\n        }\n\n        exit(EXIT_SUCCESS);\n    }\n         `inotify/demo_inotify.c`\n```", "```\n$ `./demo_inotify dir1 dir2 &`\n[1] 5386\nWatching dir1 using wd 1\nWatching dir2 using wd 2\n```", "```\n$`cat > dir1/aaa`\nRead 64 bytes from inotify fd\n    wd = 1; mask = IN_CREATE\n        name = aaa\n    wd = 1; mask = IN_OPEN\n        name = aaa\n```", "```\n`Hello world`\nRead 32 bytes from inotify fd\n    wd = 1; mask = IN_MODIFY\n        name = aaa\n*Type Control-D*\nRead 32 bytes from inotify fd\n    wd = 1; mask = IN_CLOSE_WRITE\n        name = aaa\n```", "```\n$ `mv dir1/aaa dir2/bbb`\nRead 64 bytes from inotify fd\n    wd = 1; cookie = 548; mask = IN_MOVED_FROM\n        name = aaa\n    wd = 2; cookie = 548; mask = IN_MOVED_TO\n        name = bbb\n```", "```\n$ `mkdir dir2/ddd`\nRead 32 bytes from inotify fd\n    wd = 1; mask = IN_CREATE IN_ISDIR\n        name = ddd\n```", "```\n$ `rmdir dir1`\nRead 32 bytes from inotify fd\n    wd = 1; mask = IN_DELETE_SELF\n    wd = 1; mask = IN_IGNORED\n```"]