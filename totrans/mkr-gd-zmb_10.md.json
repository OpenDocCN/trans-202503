["```\nconst int scanPin = A0;\nconst int resetPin = A1;const int pulseLength = 1000;\nconst int period = 5000;\nconst int numStations = 5;\n```", "```\nint count = 0;\n```", "```\nvoid setup()\n{\n  pinMode(scanPin, INPUT);\n  pinMode(resetPin, INPUT);\n}\n```", "```\nvoid loop()\n{\n  delay(period);\n  pinMode(scanPin, OUTPUT);\n  digitalWrite(scanPin, HIGH);\n  delay(pulseLength);\n  pinMode(scanPin, INPUT);\n  count ++;\n  if (count == numStations)\n  {\n    count = 0;\n    pinMode(resetPin, OUTPUT);\n    digitalWrite(resetPin, HIGH);\n    delay(pulseLength);\n    pinMode(resetPin, INPUT);\n  }\n}\n```", "```\n#include <EEPROM.h>\n#include \"EEPROMAnything.h\"\n```", "```\nconst int ledPin = 13;\nconst int dotDelay = 100; // milliseconds\nconst int gapBetweenRepeats = 10; // seconds\nconst int maxMessageLen = 255;\n```", "```\nchar message[maxMessageLen];\nlong lastFlashTime = 0;\n```", "```\nchar* letters[] = {\n  \".-\", \"-...\", \"-.-.\", \"-..\", \".\", \"..-.\", \"--.\", \"....\", \"..\",   // A-I\n  \".---\", \"-.-\", \".-..\", \"--\", \"-.\", \"---\", \".--.\", \"--.-\", \".-.\", // J-R\n  \"...\", \"-\", \"..-\", \"...-\", \".--\", \"-..-\", \"-.--\", \"--..\"         // S-Z\n};\n\nchar* numbers[] = {\"-----\", \".----\", \"..---\", \"...--\", \"....-\", \".....\",\n\"-....\", \"--...\", \"---..\", \"----.\"};\n```", "```\nvoid setup()\n{\n  pinMode(ledPin, OUTPUT);\n  Serial.begin(9600);\n  Serial.println(\"Ready\");\n  EEPROM_readAnything(0, message);\n\n  if (! isalnum(message[0]))\n  {\n    strcpy(message, \"SOS\");\n  }\n  flashMessage();\n}\n```", "```\nvoid loop()\n{\n  if (Serial.available())      // Is there anything to be read from USB?\n  {\n    int n = Serial.readBytesUntil('\\n', message, maxMessageLen-1);\n    message[n] = '\\0';\n    EEPROM_writeAnything(0, message);\n    Serial.println(message);\n    flashMessage();\n  }\n  if (millis() > lastFlashTime + gapBetweenRepeats * 1000L)\n  {\n    flashMessage();\n  }\n}\n```", "```\nvoid flashMessage()\n{\n  Serial.print(\"Sending: \");\n  Serial.println(message);\n  int i = 0;\n  while (message[i] != '\\0' && i < maxMessageLen)\n  {\n    if (Serial.available()) return; // new message \n    char ch = message[i];\n    i++;\n    if (ch >= 'a' && ch <= 'z')\n    {\n      flashSequence(letters[ch - 'a']);\n    }\n    else if (ch >= 'A' && ch <= 'Z')\n    {\n      flashSequence(letters[ch - 'A']);\n    }\n    else if (ch >= '0' && ch <= '9')\n    {\n      flashSequence(numbers[ch - '0']);\n    }\n    else if (ch == ' ')\n    {\n     delay(dotDelay * 4);      // gap between words \n    }\n  }\n  lastFlashTime = millis();\n}\n```", "```\nvoid flashSequence(char* sequence)\n{\n   int i = 0;\n   while (sequence[i] != NULL)\n   {\n       flashDotOrDash(sequence[i]);\n       i++;\n   }\n   delay(dotDelay * 3);    // gap between letters\n}\n```", "```\nvoid flashDotOrDash(char dotOrDash)\n{\n  digitalWrite(ledPin, HIGH);\n  if (dotOrDash == '.')\n  {\n    delay(dotDelay); \n  }\n  else // must be a -\n  {\n    delay(dotDelay * 3); \n  }\n  digitalWrite(ledPin, LOW); \n  delay(dotDelay); // gap between flashes\n}\n```"]