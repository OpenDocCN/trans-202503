["```\n#[repr(C)]\nstruct Foo {\n  tiny: bool,\n  normal: u32,\n  small: u8,\n  long: u64,\n  short: u16,\n}\n```", "```\nimpl String {\n  pub fn contains(&self, p: impl Pattern) -> bool {\n    p.is_contained_in(self)\n  }\n}\n```", "```\nimpl String {\n  pub fn contains(&self, p: &dyn Pattern) -> bool {\n    p.is_contained_in(&*self)\n  }\n}\n```", "```\nimpl<T> From<T> for MyType\nimpl<T> From<T> for MyType<T>\nimpl<T> From<MyType> for Vec<T>\nimpl<T> ForeignTrait<MyType, T> for Vec<T>\n```", "```\nimpl<T> ForeignTrait for T\nimpl<T> From<T> for T\nimpl<T> From<Vec<T>> for T\nimpl<T> From<MyType<T>> for T\nimpl<T> From<T> for Vec<T>\nimpl<T> ForeignTrait<T, MyType> for Vec<T>\n```", "```\nimpl Debug for AnyIterable\n  where for<'a> &'a Self: IntoIterator,\n        for<'a> <&'a Self as IntoIterator>::Item: Debug {\n    fn fmt(&self, f: &mut Formatter) -> Result<(), Error> {\n        f.debug_list().entries(self).finish()\n}}\n```"]