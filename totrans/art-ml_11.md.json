["```\n> data(mlb)\n> hw <- mlb[,2:3]\n```", "```\n# find indices of data rows having height 71\n> ht71 <- which(hw$Height == 71)\n# find the average weight in those rows\n> mean(hw$Weight[ht71])\n[1] 190.3596\n```", "```\n> meanWts <- tapply(hw$Weight,hw$Height,mean)\n> meanWts\n      67       68       69       70       71       72       73       74\n172.5000 173.8571 179.9474 183.0980 190.3596 192.5600 196.7716 202.4566\n      75       76       77       78       79       80       81       82\n208.7161 214.1386 216.7273 220.4444 218.0714 237.4000 245.0000 240.5000\n      83\n260.0000\n```", "```\n> meanWts['70']\n     70\n183.098\n```", "```\n> plot(names(meanWts),meanWts)\n```", "```\n> lmout <- lm(Weight ~ .,data=hw)\n> lmout\n\nCall:\nlm(formula = Weight ~ ., data = hw)\n\nCoefficients:\n(Intercept)       Height\n   -151.133        4.783\n```", "```\nlm(Weight ~ .,data=hw)\n```", "```\n> predict(lmout,data.frame(Height=71))\n       1\n188.4833\n```", "```\n> qelout <- qeLin(hw,'Weight',holdout=NULL)\n> qelout$coef\n(Intercept)      Height\n-151.133291    4.783332\n> predict(qelout,data.frame(Height=71))\n       2\n188.4833\n```", "```\n> qelout <- qeLin(mlb[,4:6],'Weight',holdout=NULL)\n> predict(qelout,data.frame(Height=71,Age=28))\n      11\n187.4603\n```", "```\n> Abb[1,]$house_rules\n[1] \"* No Pets - even visiting guests for a short time period. * No Smokers...\"\n```", "```\n> Abb[1,]$monthly_price\n[1] \"$4,200.00\"\n```", "```\nconvertFromDollars <- function(d) {\n   d <- as.character(d)\n   # replace dollar sign by ''\n   d <- sub('\\\\$','',d,fixed=F)\n   # replace commas by ''\n   d <- gsub(',','',d)\n   d <- as.numeric(d)\n   # some entries were ''; replace by NAs\n   d[d == ''] <- NA\n   d\n}\n```", "```\n> table(Abb$square_feet)\n\n   0    1    2   14  120  130  140  150  160  172  175  195  250  280  300  360\n   2    3    2    1    1    1    3    2    1    1    1    1    2    2    4    2\n 400  450  500  538  550  600  650  700  750  780  800  810  815  840  850  853\n   1    2    8    1    1    4    1    3    5    1    4    1    1    1    1    1\n 890  900  950 1000 1012 1019 1100 1200 1390 1400 1490 1500 1600 1660 1750 1800\n   1    2    3    9    1    1    2    9    1    2    1    7    1    1    1    3\n1850 1900 1996 2000 2100 2200 2250 2600 3000\n   1    1    1    4    3    2    1    1    4\n```", "```\n> head(Abb)\n  zipcode bathrooms bedrooms square_feet weekly_price monthly_price\n1   94117       1.0        1          NA         1120          4200\n2   94110       1.0        2          NA         1600          5500\n3   94117       4.0        1          NA          485          1685\n4   94117       4.0        1          NA          490          1685\n5   94117       1.5        2          NA           NA            NA\n6   94115       1.0        2          NA           NA            NA\n  security_deposit guests_included minimum_nights maximum_nights\n1              100               2              1             30\n2               NA               2             30             60\n3              200               1             32             60\n4              200               1             32             90\n5                0               2              7           1125\n6                0               1              2            365\n  review_scores_rating\n1                   97\n2                   98\n3                   85\n4                   93\n5                   97\n6                   90\n```", "```\n> linout <- qeLin(Abb[,-c(4,5)],'monthly_price',holdout=NULL)\n> linout$coef\n         (Intercept)         zipcode94103         zipcode94104\n       -4.485690e+03        -4.441996e+02         6.364539e+02\n        zipcode94105         zipcode94107         zipcode94108\n        1.012009e+03        -2.846037e+02        -1.649897e+03\n        zipcode94109         zipcode94110         zipcode94111\n       -3.945963e+02        -1.113476e+03         1.619558e+03\n        zipcode94112         zipcode94114         zipcode94115\n       -2.304310e+03        -2.607913e+02        -3.881351e+02\n        zipcode94116         zipcode94117         zipcode94118\n       -1.959336e+03        -1.543353e+02        -1.362785e+03\n        zipcode94121         zipcode94122         zipcode94123\n       -1.315474e+03        -1.434050e+03         1.639610e+03\n        zipcode94124         zipcode94127         zipcode94131\n       -2.309765e+03        -2.127720e+03        -1.525655e+03\n        zipcode94132         zipcode94133         zipcode94134\n       -1.675761e+03         6.496800e+02        -1.370148e+03\n        zipcode94158            bathrooms             bedrooms\n       -2.509281e+03         2.025493e+02         1.540830e+03\n    security_deposit      guests_included       minimum_nights\n        3.462443e-01         3.663498e+02        -6.400597e-01\n      maximum_nights review_scores_rating\n       -2.371457e-04         6.613115e+01\n```", "```\n> class(linout)\n[1] \"qeLin\" \"lm\"\n```", "```\n> summary(linout)\n...\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)\n(Intercept)          -4.486e+03  1.478e+03  -3.034 0.002479 **\nzipcode94103         -4.442e+02  5.177e+02  -0.858 0.391094\nzipcode94104          6.365e+02  2.131e+03   0.299 0.765227\nzipcode94105          1.012e+03  7.071e+02   1.431 0.152724\nzipcode94107         -2.846e+02  4.906e+02  -0.580 0.561978\nzipcode94108         -1.650e+03  6.354e+02  -2.597 0.009566 **\nzipcode94109         -3.946e+02  4.955e+02  -0.796 0.426025\nzipcode94110         -1.113e+03  4.280e+02  -2.601 0.009435 **\nzipcode94111          1.620e+03  1.014e+03   1.598 0.110396\nzipcode94112         -2.304e+03  4.761e+02  -4.840 1.52e-06 ***\nzipcode94114         -2.608e+02  4.425e+02  -0.589 0.555770\nzipcode94115         -3.881e+02  4.666e+02  -0.832 0.405719\nzipcode94116         -1.959e+03  7.028e+02  -2.788 0.005412 **\nzipcode94117         -1.543e+02  4.441e+02  -0.348 0.728269\nzipcode94118         -1.363e+03  5.560e+02  -2.451 0.014434 *\nzipcode94121         -1.315e+03  6.422e+02  -2.048 0.040819 *\nzipcode94122         -1.434e+03  5.437e+02  -2.638 0.008493 **\nzipcode94123          1.640e+03  5.507e+02   2.977 0.002985 **\nzipcode94124         -2.310e+03  6.552e+02  -3.525 0.000444 ***\nzipcode94127         -2.128e+03  6.051e+02  -3.516 0.000459 ***\nzipcode94131         -1.526e+03  5.024e+02  -3.037 0.002459 **\nzipcode94132         -1.676e+03  7.745e+02  -2.164 0.030746 *\nzipcode94133          6.497e+02  5.402e+02   1.203 0.229402\nzipcode94134         -1.370e+03  8.837e+02  -1.550 0.121376\nzipcode94158         -2.509e+03  1.546e+03  -1.623 0.104905\nbathrooms             2.025e+02  1.323e+02   1.531 0.125996\nbedrooms              1.541e+03  1.071e+02  14.385  < 2e-16 ***\nsecurity_deposit      3.462e-01  9.820e-02   3.526 0.000443 ***\nguests_included       3.663e+02  5.897e+01   6.212 7.92e-10 ***\nminimum_nights       -6.401e-01  2.670e+00  -0.240 0.810569\nmaximum_nights       -2.371e-04  2.132e-03  -0.111 0.911465\nreview_scores_rating  6.613e+01  1.432e+01   4.617 4.44e-06 ***\n...\n```", "```\n> linout <- qeLin(Abb[,-c(4,5)],'monthly_price')\nholdout set has  707 rows\nError in model.frame.default(Terms, newdata,\n   na.action = na.action, xlev = object$xlevels) :\n  factor zipcode has new levels 94014\n> linout <- qeLin(Abb[,-c(4,5)],'monthly_price')\nholdout set has  707 rows\nError in model.frame.default(Terms, newdata,\n   na.action = na.action, xlev = object$xlevels) :\n  factor zipcode has new levels 94014, 94106\n```", "```\n> data(mlb)\n> mlb[1,]\n           Name Team Position Height Weight   Age\n1 Adam_Donachie  BAL  Catcher     74    180 22.99\n  PosCategory\n1     Catcher\n```", "```\nqeLogit(data,yName,\n   holdout = floor(min(1000, 0.1 * nrow(data))),yesYVal = NULL)\n```", "```\n# data prep as before, not shown\n> set.seed(9999)\n> glout <- qeLogit(tc,'Churn',holdout=NULL,yesYVal='Yes')\n```", "```\n> names(tc)\n [1] \"gender\"           \"SeniorCitizen\"    \"Partner\"          \"Dependents\"\n [5] \"tenure\"           \"PhoneService\"     \"MultipleLines\"    \"InternetService\"\n [9] \"OnlineSecurity\"   \"OnlineBackup\"     \"DeviceProtection\" \"TechSupport\"\n[13] \"StreamingTV\"      \"StreamingMovies\"  \"Contract\"         \"PaperlessBilling\"\n[17] \"PaymentMethod\"    \"MonthlyCharges\"   \"TotalCharges\"     \"Churn\"\n> newx <- tc[333,-20]  # exclude Y\n> newx\n    gender SeniorCitizen Partner Dependents tenure PhoneService MultipleLines\n333 Male             0      No         No     46          Yes           Yes\n    InternetService OnlineSecurity OnlineBackup DeviceProtection TechSupport\n333     Fiber optic             No          Yes              Yes          No\n    StreamingTV StreamingMovies Contract PaperlessBilling\n333         Yes              No One year              Yes\n              PaymentMethod MonthlyCharges TotalCharges\n333 Credit card (automatic)           94.9      4422.95\n> newx$gender <- 'Female'\n> predict(glout,newx)\n$predClasses\n[1] \"No\"\n\n$probs\n\n          [,1]\n[1,] 0.2307227\n```", "```\nWarning messages:\n1: In predict.lm(object, newdata, se.fit, scale = 1, type = if (type ==  :\n  prediction from a rank-deficient fit may be misleading\n2: In predict.lm(object, newdata, se.fit, scale = 1, type = if (type ==  :\n  prediction from a rank-deficient fit may be misleading\n```", "```\nglm.fit: fitted probabilities numerically 0 or 1 occurred\n```", "```\npredict(DHout,newx,type='response')\npredict(NOout,newx,type='response')\npredict(SLout,newx,type='response')\n```", "```\n> data(falldetection)\n> fd <- falldetection\n> head(fd)\n  ACTIVITY    TIME       SL      EEG BP  HR CIRCULATION\n1        3 4722.92  4019.64 -1600.00 13  79         317\n2        2 4059.12  2191.03 -1146.08 20  54         165\n3        2 4773.56  2787.99 -1263.38 46  67         224\n4        4 8271.27  9545.98 -2848.93 26 138         554\n5        4 7102.16 14148.80 -2381.15 85 120         809\n6        5 7015.24  7336.79 -1699.80 22  95         427\n> fd$ACTIVITY <- as.factor(fd$ACTIVITY)  # was integer, need factor for qe*\n> set.seed(9999)\n> fd$ACTIVITY <- as.factor(fd$ACTIVITY)\n> fdout <- qeLogit(fd,'ACTIVITY')\n> fdout$testAcc\n[1] 0.593\n> fdout$baseAcc\n[1] 0.7186972\n> table(fd$ACTIVITY)\n   0    1    2    3    4    5\n4608  502 2502 3588 3494 1688\n```", "```\n> newx <- fd[1,-1]\n> newx\n     TIME      SL   EEG BP HR CIRCULATION\n1 4722.92 4019.64 -1600 13 79         317\n> newx$BP <- 28\n> newx\n     TIME      SL   EEG BP HR CIRCULATION\n1 4722.92 4019.64 -1600 28 79         317\n> predict(fdout,newx)\n$predClasses\n[1] \"2\"\n\n$probs\n             0         1         2         3         4          5\n[1,] 0.2294015 0.1111428 0.2324076 0.1605359 0.1830733 0.08343888\n```", "```\n> data(day1)\n> e1 <- day1[,c(4,10,12,13,16)]\n> e2 <- day1[,c(4,10,12,13,16,6,7)]  # add holiday, weekday columns\n> names(e1)\n[1] \"yr\"        \"temp\"      \"hum\"       \"windspeed\" \"tot\"\n> names(e2)\n[1] \"yr\"        \"temp\"      \"hum\"       \"windspeed\" \"tot\"       \"holiday\"\n[7] \"weekday\"\n> set.seed(9999)\n> e1out <- qeLin(e1,'tot')\n> e2out <- qeLin(e2,'tot')\n> newx1 <- e1[3,-5]  # exclude tot\n> newx2 <- e2[3,-5]  # exclude tot\n> predict(e1out,newx1)\n      31\n1818.779\n> predict(e2out,newx2)\n       3\n1689.054\n> stdErrPred(e1out,newx1)\n[1] 97.77229\n> stdErrPred(e2out,newx2)\n[1] 108.3989\n```", "```\n> data(day1)\n> day1tottemp <- day1[,c(10,16)]  # just tot, temp\n> head(day1tottemp)\n      temp  tot\n1 8.175849  985\n2 9.083466  801\n3 1.229108 1349\n4 1.400000 1562\n5 2.666979 1600\n6 1.604356 1606\n> day1tottemp$tempSqr <- day1tottemp$temp^2 \n> head(day1tottemp)\n      temp  tot   tempSqr\n1 8.175849  985 66.844507\n2 9.083466  801 82.509355\n3 1.229108 1349  1.510706\n4 1.400000 1562  1.960000\n5 2.666979 1600  7.112777\n6 1.604356 1606  2.573958\n> qeLin(day1tottemp,'tot')\n...\nCoefficients:\n(Intercept)         temp      tempSqr\n   1305.597      346.422       -6.815\n```", "```\nqePolyLin(data, yName, deg = 2, maxInteractDeg = deg,\n   holdout = floor(min(1000,0.1 * nrow(data))))\n```", "```\n> day1tottemp <- day1[,c(10,16)]\n> qepout <- qePolyLin(day1tottemp,'tot',deg=2,holdout=NULL)\n```", "```\n> names(qepout)\n [1] \"bh\"             \"deg\"            \"maxInteractDeg\" \"modelFormula\"\n [5] \"XtestFormula\"   \"retainedNames\"  \"standardize\"    \"x\"\n [9] \"y\"              \"classif\"        \"trainRow1\"\n> qepout$bh\n              [,1]\n[1,] 1305.597268\n[2,]  346.421623\n[3,]   -6.815313\n```", "```\n> predict(qepout,data.frame(temp=12))\n[1] 4481.252\n```", "```\n> set.seed(9999)\n> qePolyLin(day1tottemp,'tot',deg=2,holdout=100)$testAcc\n[1] 1214.063\n> set.seed(9999)  # to get the same holdout set\n> qeLin(day1tottemp,'tot',holdout=100)$testAcc\n[1] 1250.177\n```", "```\n> data(pef)\n> set.seed(9999)\n> qeLogit(pef,'occ')$testAcc\n[1] 0.646\n```", "```\n> set.seed(9999)\n> qePolyLog(pef,'occ',2)$testAcc\n[1] 0.619\n```", "```\n> table(mlb$Height)\n\n 67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83\n  2   7  19  51  89 150 162 173 155 101  55  27  14   5   2   2   1\n```", "```\n> qeCompare(vert,'V7',c('qeLogit','qePolyLog','qeKNN','qeRF','qeGBoost'),100)\n      qeFtn    meanAcc\n1   qeLogit 0.13677419\n2 qePolyLog 0.09129032\n3     qeKNN 0.23741935\n4      qeRF 0.15741935\n5  qeGBoost 0.16322581\n```", "```\nqePolyLog(pef,'occ',3)\n```"]