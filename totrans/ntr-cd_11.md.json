["```\nlet inputs = [12, 4];\nlet weights = [0.5, -1];\n```", "```\nlet x = random(-100, 100);\nlet y = random(-100, 100);\n```", "```\nperceptron.train(trainingInputs, desired);\n```", "```\n<script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n```", "```\nlet options = { task: \"classification\" };\nlet classifier = ml5.neuralNetwork(options);\n```", "```\nlet options = {\n  inputs: 4,\n  outputs: [\"iris-setosa\", \"iris-virginica\", \"iris-versicolor\"],\n  task: \"classification\",\n};\nlet digitClassifier = ml5.neuralNetwork(options);\n```", "```\nlet options = {\n  inputs: 3,\n outputs: 1,\n  task: \"regression\",\n};\nlet energyPredictor = ml5.neuralNetwork(options);\n```", "```\nlet data = [\n  { x: 0.99, y: 0.02, label: \"right\" },\n  { x: 0.76, y: -0.1, label: \"right\" },\n  { x: -1.0, y: 0.12, label: \"left\" },\n  { x: -0.9, y: -0.1, label: \"left\" },\n  { x: 0.02, y: 0.98, label: \"down\" },\n  { x: -0.2, y: 0.75, label: \"down\" },\n  { x: 0.01, y: -0.9, label: \"up\" },\n  { x: -0.1, y: -0.8, label: \"up\" },\n];\n```", "```\nlet options = {\n  task: \"classification\",\n  inputs: 2,\n  outputs: [\"up\", \"down\", \"left\", \"right\"],\n  debug: true\n};\nlet classifier = ml5.neuralNetwork(options);\n```", "```\nfunction gotResults(results) {\n  console.log(results);\n}\n```", "```\n[\n  {\n    \"label\": \"right\",\n    \"confidence\": 0.9669702649116516\n  },\n  {\n    \"label\": \"up\",\n    \"confidence\": 0.01878807507455349\n  },\n  {\n    \"label\": \"down\",\n    \"confidence\": 0.013948931358754635\n  },\n  {\n    \"label\": \"left\",\n    \"confidence\": 0.00029277068097144365\n  }\n]\n```"]