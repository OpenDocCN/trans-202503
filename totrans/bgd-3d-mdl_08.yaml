- en: '**9'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**9'
- en: RENDERING**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 渲染**
- en: '![Images](Images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Images](Images/common.jpg)'
- en: '*Rendering* is the process by which your computer converts a 3D model into
    a 2D image that displays on a screen. Technically, Fusion 360 is constantly rendering
    your 3D model as you’re working on it. The same is true in other types of software,
    like video games. As you play a video game, the game console or computer takes
    the on-screen 3D assets and renders them for your screen more than 30 times per
    second.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*渲染*是你的计算机将3D模型转换为2D图像并显示在屏幕上的过程。从技术上讲，Fusion 360在你工作时一直在渲染你的3D模型。其他类型的软件，如视频游戏中也是如此。当你玩视频游戏时，游戏主机或计算机会将屏幕上的3D资产渲染并每秒超过30次地显示出来。'
- en: But when people in the CAD world talk about a “render,” they’re usually referring
    to a single photorealistic image or animated video created specifically for presentation
    purposes, which takes a significant amount of computing power to produce. Fusion
    360 is indeed rendering your model many times per second while you’re working
    on it, but it’s not creating a high-quality image. Computers have only so much
    processing power, and in order for Fusion 360 to display your model at a usable
    frame rate, it has to limit how much time it spends on each frame. That means
    it creates lower-quality renders—good enough for the design phase but not for
    presentation.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，当CAD领域的人们谈论“渲染”时，他们通常指的是为展示目的专门创建的单一照片级逼真图像或动画视频，这需要大量的计算能力来生成。虽然Fusion 360在你工作时每秒都会渲染你的模型很多次，但它并不是在生成高质量的图像。计算机的处理能力是有限的，为了让Fusion
    360以可用的帧率显示你的模型，它必须限制每帧的渲染时间。这意味着它创建的是低质量的渲染图——对于设计阶段足够了，但不适合用于展示。
- en: The more time you give Fusion 360 to work on a single frame, the better the
    image it creates. Given enough time, it’s capable of producing images approaching
    photorealism. How long that process takes depends on your computer, the quality
    you want out of the image, and that image’s resolution. A quick-and-rough render
    could take just a few seconds, while a complex, top-quality render could take
    more than an hour.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你给Fusion 360更多时间处理单帧，它生成的图像就越好。只要有足够的时间，它就能生成接近照片级逼真效果的图像。这个过程需要多长时间取决于你的计算机、你希望图像的质量以及图像的分辨率。一个快速且粗略的渲染可能只需要几秒钟，而一个复杂的高质量渲染则可能需要超过一个小时。
- en: Even so, Fusion 360’s rendering capabilities are limited. It can certainly produce
    very nice renders that are more than sufficient for something like a Kickstarter
    campaign, but it lacks many of the tools found in software designed specifically
    with rendering in mind. If you need truly photorealistic renders of your model
    in complex scenes, you can always export your model as an STL file and open it
    in more advanced rendering software. [Figure 9-1](ch09.xhtml#ch09fig1) shows a
    photorealistic scene created using 3D modeling and professional rendering software
    intended for creating visuals (as opposed to mechanical designs).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，Fusion 360的渲染能力还是有限的。它当然能够生成非常漂亮的渲染图，足以满足像Kickstarter这样的平台需求，但它缺少一些专门为渲染设计的软件所具备的工具。如果你需要在复杂场景中获取真正的照片级逼真渲染图，你可以随时将模型导出为STL文件，并在更先进的渲染软件中打开。[图9-1](ch09.xhtml#ch09fig1)展示了一个使用3D建模和专业渲染软件创建的照片级逼真场景，该软件主要用于创建视觉效果（而非机械设计）。
- en: '![Images](Images/09fig01.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![Images](Images/09fig01.jpg)'
- en: '*Figure 9-1: A photorealistic render created with professional rendering software*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9-1：使用专业渲染软件创建的照片级逼真渲染图*'
- en: This book is focused on Fusion 360, so we’ll take advantage of the program’s
    built-in rendering capabilities to create a nice image of the screw we modeled
    in [Chapter 7](ch07.xhtml#ch07).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的重点是Fusion 360，因此我们将利用该程序内建的渲染功能，创建一个关于我们在[第7章](ch07.xhtml#ch07)建模的螺钉的漂亮图像。
- en: '**Rendering Your Screw**'
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**渲染你的螺钉**'
- en: Go ahead and open the screw model. Right now, it should be a simple flat gray
    color, which is the default appearance.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开螺钉模型。此时，它应该是一个简单的平灰色，这就是默认的外观。
- en: There are two ways to change the look of the model. The first is by setting
    the **Physical Material** option, as you did with the brass hinge in [Chapter
    8](ch08.xhtml#ch08). The second is to explicitly assign an **Appearance** setting,
    which overrides the appearance of the physical material. The appearance created
    by setting a physical material will apply to the entire model, but you can assign
    appearances to either the whole model or individual faces. You might want to give
    a solid model a two-tone paint job, for example.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 改变模型外观有两种方法。第一种是设置**物理材质**选项，正如你在[第 8 章](ch08.xhtml#ch08)中使用黄铜铰链时所做的那样。第二种是明确分配**外观**设置，它会覆盖物理材质的外观。通过设置物理材质创建的外观将应用于整个模型，但你也可以将外观分配给整个模型或单个面。例如，你可能想给一个实心模型做一个双色涂装。
- en: In this case, the model is a regular old screw made from a single raw material,
    so set its **Physical Material** option to **Stainless Steel, Polished**. The
    model should look a bit nicer now; the color and reflections should look like
    polished stainless steel. But this is still a low-quality render, because Fusion
    360 needs to keep the frame rate high so you can continue to work with the model.
    If the software were trying to produce high-quality renders continuously, it could
    take several seconds—or even minutes—to refresh every time you moved the model,
    rotated it, or modified it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，模型是由单一原材料制成的普通老式螺丝，因此将其**物理材质**选项设置为**不锈钢，抛光**。现在，模型应该看起来更漂亮了；颜色和反射应该像抛光不锈钢一样。但这仍然是一个低质量的渲染，因为
    Fusion 360 需要保持高帧率，以便你可以继续与模型进行操作。如果软件试图持续生成高质量的渲染，每次你移动模型、旋转它或修改它时，可能需要几秒钟甚至几分钟才能刷新。
- en: To dramatically improve how the model looks, switch over to the Render workspace.
    Immediately, you’ll notice that the model looks more realistic than it did in
    the Model workspace. Before we create our render, we need to make sure the screw
    is resting realistically on the ground and then prepare an environment to perform
    the render.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了显著改善模型的外观，切换到渲染工作区。你会立刻注意到，模型比在模型工作区时看起来更逼真。在我们创建渲染之前，需要确保螺丝在地面上真实地放置，然后准备一个环境来执行渲染。
- en: '***Making the Screw Rest on the Ground Plane***'
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***让螺丝稳稳地放在地面平面上***'
- en: You may have noticed that the shadow on the ground plane doesn’t look right
    at all. The screw is just floating up in the air, which real screws don’t usually
    do. To place the screw on the ground, open the **Scene Settings** dialog from
    the main toolbar. Click the **Position** button to see the options shown in [Figure
    9-2](ch09.xhtml#ch09fig2). Change the Distance setting, which controls how far
    the ground plane is from the model, until the ground plane is just barely touching
    the screw.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，地面平面上的阴影看起来完全不对。螺丝似乎悬浮在空中，而真实的螺丝通常不会这样。为了将螺丝放置到地面上，打开主工具栏中的**场景设置**对话框。点击**位置**按钮，查看[图
    9-2](ch09.xhtml#ch09fig2)中显示的选项。调整距离设置，该设置控制地面平面与模型之间的距离，直到地面平面刚好触及螺丝。
- en: Even though the screw head now touches the ground plane, the screw still doesn’t
    look right, because the threaded end is in the air, making the screw appear to
    balance on its head. That’s because Fusion 360 orients the ground plane so that
    it’s parallel with the bottom of the View Cube.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管螺丝头现在已经触及地面平面，但螺丝看起来仍然不对，因为螺纹端仍然悬空，使得螺丝看起来像是平衡在螺丝头上。这是因为 Fusion 360 将地面平面定位为与视图立方体底部平行。
- en: To fix that, we’ll need to reorient the screw in relation to the View Cube.
    Click **Front** on the View Cube at the top right of the screen in order to face
    the screw head on. Then use the **Free Orbit** option from the Display menu at
    the bottom of the viewport to rotate the threaded end of the screw down. At this
    point, the ground plane will rotate along with the screw, but when you’re done
    rotating the screw, you can fix this by right-clicking the **View Cube**, hovering
    over **Set Current View As**, and selecting **Front** (as shown in [Figure 9-3](ch09.xhtml#ch09fig3)).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，我们需要重新调整螺丝与视图立方体的关系。点击屏幕右上方视图立方体上的**前视**，以正对螺丝头。然后使用视口底部显示菜单中的**自由轨道**选项，将螺丝的螺纹端旋转到下方。此时，地面平面会随着螺丝一起旋转，但当你旋转完螺丝后，可以通过右键点击**视图立方体**，将鼠标悬停在**设定当前视图为**上，选择**前视**来固定视图（如[图
    9-3](ch09.xhtml#ch09fig3)所示）。
- en: '![Images](Images/09fig02.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图像](Images/09fig02.jpg)'
- en: '*Figure 9-2: Position the ground plane so that it’s just barely touching the
    screw.*'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 9-2：将地面平面放置到刚好触及螺丝的位置。*'
- en: '![Images](Images/09fig03.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/09fig03.jpg)'
- en: '*Figure 9-3: Rotate the screw to a resting position and set the view to Front.*'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 9-3：旋转螺钉至休息位置并将视图设置为前视图。*'
- en: After you’ve set the view as Front, the ground plane will rotate so it’s parallel
    to the new bottom view. Your screw may end up floating up in the air again, but
    you can adjust the distance to the ground plane if necessary. When you’re done,
    the screw should look like it’s resting on a real physical surface.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 设置好前视图后，地面平面将旋转，使其与新的底部视图平行。你的螺钉可能又会浮在空中，但如果需要，你可以调整它与地面平面的距离。完成后，螺钉应该看起来像是安放在一个真实的物理表面上。
- en: '***Setting Up the Environment***'
  id: totrans-24
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***设置环境***'
- en: 'Next you need to set up the environment. Changing the environment does a few
    things: it positions light sources, provides a background and ground plane, and
    determines what reflections to show on the surfaces of the model.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要设置环境。更改环境会做几件事：它定位光源，提供背景和地面平面，并确定在模型表面上显示哪些反射。
- en: If you open Scene Settings again, you’ll see a number of options for controlling
    how everything looks. Switch over to the **Environment Library** tab at the top
    of the dialog. There, you’ll find built-in environments, along with a few that
    you can download from Autodesk.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你再次打开场景设置，你将看到一系列控制外观的选项。切换到对话框顶部的**环境库**标签。在那里，你会找到内置的环境，还有一些可以从Autodesk下载的环境。
- en: Some of the outdoor scenes provided make the model look like it’s in a real
    place, but most of the environments don’t show a background behind the model in
    your rendered image. Instead, most, like Cool Light and Photobooth, are there
    to give your model realistic lighting, shadows, and reflections.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一些提供的户外场景使模型看起来像是置身于真实的地方，但大多数环境在渲染图像中不会显示模型背后的背景。相反，大多数环境，如冷光和摄影棚，旨在为模型提供逼真的光照、阴影和反射。
- en: Later in this chapter, you’ll learn how to place your model into a realistic
    scene, but for now, we’ll focus on making the model itself look good. Choose the
    **Photobooth** environment and then switch back to the **Settings** tab. The first
    option is Brightness in Lux. Adjusting this value will increase or decrease the
    brightness of the light in the scene.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 本章稍后你将学习如何将模型放入一个逼真的场景中，但现在，我们将重点放在使模型本身看起来更好。选择**摄影棚**环境，然后切换回**设置**标签页。第一个选项是亮度（以Lux为单位）。调整这个值将增加或减少场景中光线的亮度。
- en: The Position setting, as we’ve already covered, changes the height and rotation
    of the ground plane. The Background drop-down menu lets you use either the environment
    background or a solid color. For this render, use the **Solid Color** option with
    the default gray. Below that, you can turn the ground plane and reflections on
    or off. The Flatten Ground option only has an effect if you’re using an environment
    background, in which case it will make that background look less spherical.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论过的位置设置更改了地面平面的高度和旋转。背景下拉菜单让你选择使用环境背景或纯色背景。对于此渲染，使用**纯色**选项并选择默认的灰色。下面，你可以选择打开或关闭地面平面和反射。平坦地面选项仅在使用环境背景时生效，在这种情况下，它将使背景看起来不那么球形。
- en: '***Setting Up the Camera***'
  id: totrans-30
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***设置相机***'
- en: 'The rest of the options in Scene Settings all relate to the settings of your
    virtual camera. Camera should almost always be set to Perspective, because this
    looks the most realistic. You could set it to Orthographic, which removes all
    lens distortion, but that’s not how humans actually see things, so I recommend
    avoiding this setting. Focal Length has the same effect as it does on a real camera:
    a longer focal length has less distortion and flattens the image, while a shorter
    focal length makes the image look highly distorted (like a fisheye lens).'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 场景设置中的其他选项都与虚拟相机的设置有关。相机几乎总是应该设置为透视模式，因为这种模式看起来最真实。你可以将其设置为正投影模式，这可以去除所有镜头畸变，但这并不是人类实际的视觉方式，因此我建议避免使用此设置。焦距的效果与实际相机相同：较长的焦距具有较少的畸变并使图像变得平坦，而较短的焦距则会使图像看起来高度失真（就像鱼眼镜头一样）。
- en: Also as with a real camera, you can adjust the Exposure setting to change how
    long your virtual camera’s shutter remains open. This increases or decreases the
    overall brightness of the rendered image, instead of just altering the light sources
    with the Brightness setting. If you’d like, you can turn on Depth of Field to
    make the image lose focus the farther it gets from the center of focus.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，像真实相机一样，你可以调整曝光设置来改变虚拟相机的快门打开时间。这将增加或减少渲染图像的整体亮度，而不是仅仅通过亮度设置改变光源。如果你愿意，你可以开启景深效果，让图像随着距离焦点中心越来越远而失焦。
- en: The default settings are all fine here, but you can always adjust them if your
    rendered image is too dim or too bright. To prepare the image, close the Scene
    Settings and then click the **Render** button from the main toolbar and set Resolution
    to what you want your rendered image to be.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 默认设置在这里都没问题，但如果渲染图像太暗或太亮，你总是可以调整它们。为了准备图像，关闭场景设置，然后点击主工具栏中的**渲染**按钮，并将分辨率设置为你想要的渲染图像大小。
- en: '***Performing the Render Operation***'
  id: totrans-34
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***执行渲染操作***'
- en: To finish, switch **Rendered With** to **Local Renderer**, which handles the
    computation on your own machine, instead of using the cloud-based Autodesk service.
    Autodesk provides a cloud renderer, but that requires credits to use. Use **Final**
    for the **Render Quality** setting and then click **Render**. Fusion 360 should
    then begin the rendering process, and a thumbnail should appear in the Rendering
    Gallery at the bottom of your screen. A progress bar should give you an approximation
    of how long the rendering process will take (in my case, it was about 30 seconds).
    Once it’s done, you can double-click the thumbnail to open up your final render
    (see [Figure 9-4](ch09.xhtml#ch09fig4)). Then you can save or share it.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，将**渲染方式**切换为**本地渲染器**，它会在你的电脑上处理计算，而不是使用基于云的 Autodesk 服务。Autodesk 提供了云渲染器，但那需要消耗积分。将**渲染质量**设置为**最终**，然后点击**渲染**。Fusion
    360 会开始渲染过程，并且在屏幕底部的渲染库中会出现一个缩略图。进度条会大致显示渲染过程需要的时间（在我的情况下，大约是 30 秒）。渲染完成后，你可以双击缩略图打开最终渲染效果（见[图
    9-4](ch09.xhtml#ch09fig4)）。然后你可以保存或分享它。
- en: '![Images](Images/09fig04.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Images](Images/09fig04.jpg)'
- en: '*Figure 9-4: Your final render should look something like this.*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 9-4：你的最终渲染效果应该像这样。*'
- en: This screw looks pretty good, but it’s made up of a single part. Most of your
    models will be assemblies consisting of multiple parts, and the more detailed
    your model is, the better the final render will look. The screw, for example,
    would look more realistic if the head edges had tiny fillets.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这个螺丝看起来不错，但它由一个单独的部件组成。你大部分的模型将是由多个部件组成的组件，模型越详细，最终的渲染效果就会越好。例如，如果螺丝的头部边缘有微小的倒角，它看起来会更逼真。
- en: Next, let’s see how we can make a render look more realistic.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何让渲染效果看起来更逼真。
- en: '**Rendering a Clock with a Decal Face**'
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**渲染带有贴花表盘的时钟**'
- en: One of the best ways to make a model look real is to add decals, or 2D images.
    Almost every item you can purchase will have something printed on it, be it a
    logo, a warning diagram, or a button label.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让模型看起来真实的最佳方式之一是添加贴花或 2D 图像。几乎每一个你可以购买的物品上都会印刷一些东西，无论是标志、警告图标还是按钮标签。
- en: To illustrate that concept, we’ll model and render an analog clock using a decal
    for the numbers on the clock face.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这个概念，我们将建模并渲染一个带有时钟面贴花数字的模拟时钟。
- en: '***Creating the Clock Parts***'
  id: totrans-43
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***创建时钟部件***'
- en: 'To start, model the physical parts of the clock to look like what you see in
    [Figure 9-5](ch09.xhtml#ch09fig5). The clock should have a total of six components:
    the frame, the hour hand, the minute hand, the second hand, a pin for the hands,
    and a clear plastic cover. Create these however you’d like.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，建模出时钟的物理部件，使其看起来像[图 9-5](ch09.xhtml#ch09fig5)中的样子。时钟应该包含六个组件：表框、时针、分针、秒针、指针固定销和透明塑料罩。你可以根据自己的想法来创建这些部件。
- en: '![Images](Images/09fig05.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![Images](Images/09fig05.jpg)'
- en: '*Figure 9-5: Model a clock with six separate components.*'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 9-5：建模一个由六个独立部件组成的时钟。*'
- en: 'Next, assign a physical material for each part. The frame part will have two
    appearances: black plastic for the outer frame and white plastic for the face.
    After assigning the materials and appearances, use joints to lock them together.
    The hour, minute, and second hands should have cylindrical joints so that you
    can rotate them later to specific time settings.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为每个部分分配物理材质。框架部分将有两种外观：外框为黑色塑料，表盘为白色塑料。在分配材质和外观后，使用接头将它们锁定在一起。时针、分针和秒针应该有圆柱形接头，以便你稍后可以将它们旋转到特定的时间设置。
- en: '***Creating the Decal***'
  id: totrans-48
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***创建贴花***'
- en: Once you have modeled the parts, head over to Google and find an image of a
    clock face. Any image will work, but the higher the resolution, the better. That
    image will serve as the decal you’ll place on the clock face, and pixelation from
    a low-resolution image will seem unrealistic. Ideally, you’ll find an image with
    a transparent background to make it look like the graphics are printed directly
    onto the plastic face.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你建模完成，前往Google找到一张时钟面的图片。任何图片都可以，但分辨率越高越好。这张图片将作为你放置在时钟面上的贴花，而低分辨率图片的像素化会显得不真实。理想情况下，你应该找到一张带有透明背景的图片，这样它看起来像是图形直接打印在塑料表面上。
- en: After you’ve found a suitable image, move over to the Render workspace to place
    it as a decal. Hide the clear plastic cover and click the clock face. Then, select
    the **Decal** tool from the main toolbar. For **Select Face**, choose the face
    of the clock, and for **Select Image**, choose the image you found. Turn off **Chain
    Faces** so that the decal isn’t wrapped onto the black plastic of the frame. Then
    adjust the size and position of the decal, as shown in [Figure 9-6](ch09.xhtml#ch09fig6).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 找到合适的图片后，进入渲染工作区将其作为贴花放置。隐藏透明塑料盖并点击时钟面。接着，从主工具栏中选择**贴花**工具。对于**选择面**，选择时钟的面，对于**选择图像**，选择你找到的图片。关闭**链面**，以免贴花包裹到黑色塑料框架上。然后调整贴花的大小和位置，如[图
    9-6](ch09.xhtml#ch09fig6)所示。
- en: '![Images](Images/09fig06.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/09fig06.jpg)'
- en: '*Figure 9-6: Select the face and the image and then position the decal.*'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 9-6：选择面和图像，然后定位贴花。*'
- en: Now that you’ve placed your decal on the clock face, you can set up the rest
    of the render. Move the hour, minute, and second hands so that they show the time
    you want; then show the clear plastic cover. Set **Grid Light** for the environment,
    because the harsh lighting will give the plastic cover some realistic light reflections.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经把贴花放到时钟面上，可以开始设置其余的渲染。移动时针、分针和秒针，使它们显示你想要的时间；然后展示透明塑料盖。设置**网格光源**作为环境，因为强烈的光照将使塑料盖产生一些真实的光反射。
- en: 'Your Scene Settings should have **Ground Plane**, **Flatten Ground**, and **Reflections**
    checked. You can leave the camera settings at the default: 90 mm focal length
    and 9.5 EV exposure. Then just orient the model however you want it and create
    a final render. The result should look something like [Figure 9-7](ch09.xhtml#ch09fig7).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你的场景设置应该勾选**地面平面**、**平坦地面**和**反射**。你可以将相机设置保持在默认值：90 mm焦距和9.5 EV曝光。然后，按照你想要的方式定位模型并创建最终渲染。结果应该类似于[图
    9-7](ch09.xhtml#ch09fig7)。
- en: '![Images](Images/09fig07.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/09fig07.jpg)'
- en: '*Figure 9-7: The final clock render should look pretty nice!*'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 9-7：最终的时钟渲染效果应该非常不错！*'
- en: As you can see, adding a decal adds realism to the detail of a 3D model render,
    as do reflections on the clear plastic cover of the clock. But the clock is still
    just sitting on a plain background—a dead giveaway that you’re looking at a render.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，添加贴花可以增加3D模型渲染的细节真实感，就像时钟的透明塑料盖上的反射一样。但是时钟仍然只是摆放在一个简单的背景上——这显然表明你正在看一个渲染图。
- en: Placing a Render in a Real Photo
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将渲染图放入实际照片中
- en: To really sell the realism of a render, the best thing to do is place it in
    an actual photo. Ideally, you’ll choose a photo of a setting in which you’re likely
    to find your model.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要真正展示渲染的现实感，最好的方法是将其放置在一张实际的照片中。理想情况下，你应该选择一张可能会出现你的模型的场景照片。
- en: To illustrate this concept, you’ll learn how to place a rendered Arduino Uno
    microcontroller development board into a real photo of a desk. I downloaded the
    3D model of the Arduino Uno from Autodesk’s online gallery. Kevin Schneider created
    it, and it has a lot of detail. It even has labels on the capacitors. That detail
    is paramount to creating a photorealistic render.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这个概念，你将学习如何将渲染出的Arduino Uno微控制器开发板放入一张真实的桌面照片中。我从Autodesk的在线画廊下载了Arduino
    Uno的3D模型。这个模型是Kevin Schneider制作的，细节非常丰富，甚至电容器上都有标签。这些细节对创建逼真的渲染效果至关重要。
- en: '***Setting Up Your Background***'
  id: totrans-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***设置你的背景***'
- en: To start, you’ll need to take a photo. Arrange the desktop scene you’ll place
    your model in. You’d likely use a real Arduino Uno with other electronics items,
    so for my background, I placed a soldering iron, breadboard, and other such items
    in the frame (shown in [Figure 9-8](ch09.xhtml#ch09fig8)). Before you take the
    photo, put some sort of placeholder on the desk to help you position the 3D render
    later on. I used a piece of paper that I cut to be slightly smaller than an actual
    Arduino Uno.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要拍一张照片。安排一个你将放置模型的桌面场景。你可能会用到一个真实的Arduino Uno和其他电子设备，因此在我的背景中，我放置了一个电烙铁、面包板和其他类似的物品（如[图9-8](ch09.xhtml#ch09fig8)所示）。在拍照之前，将一些占位符放在桌面上，以帮助你稍后定位3D渲染。我使用了一张纸，大小比真实的Arduino
    Uno略小。
- en: '![Images](Images/09fig08.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/09fig08.jpg)'
- en: '*Figure 9-8: Set up your scene and add a placeholder for the Arduino Uno.*'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9-8：设置你的场景并为Arduino Uno添加占位符。*'
- en: Once you’ve snapped the photo, bring your 3D model of the Uno into the Render
    workspace. If you downloaded the same model that I did, all of the detail (including
    decals) should already be there. Choose an Environment setting with lighting similar
    to the lighting in the room you took your photo in. Then use the Position Rotation
    angle to ensure that the light source is hitting the model at the same angle it
    would if it were actually in the photo.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 拍完照片后，将你制作的3D Uno模型导入渲染工作区。如果你下载了与我相同的模型，所有细节（包括贴花）应该已经存在了。选择一个与拍照时房间内光线相似的环境光照设置。然后使用位置旋转角度来确保光源与照片中的角度一致，仿佛它真实地出现在照片中。
- en: '***Orienting Your Model***'
  id: totrans-66
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***定位你的模型***'
- en: In the previous renders you created, the Camera settings weren’t all that critical.
    In this case, however, we want to make sure the lens distortion in the render
    matches that of the photo you took. The most critical parameter is Focal Length.
    You can find that information in the metadata of your photo, or possibly from
    your camera’s specs online if the focal length isn’t adjustable. In my case, I
    took the picture on an iPhone 7, which has a 35 mm equivalent focal length of
    28 mm. You can see my Scene Settings in [Figure 9-9](ch09.xhtml#ch09fig9).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在你之前创建的渲染中，相机设置并不是那么重要。然而在这种情况下，我们要确保渲染中的镜头畸变与拍摄的照片一致。最关键的参数是焦距。你可以在照片的元数据中找到相关信息，或者如果焦距不可调，可以从相机的规格中查找该信息。在我的案例中，我是用iPhone
    7拍的照片，焦距为28毫米，等效焦距为35毫米。你可以在[图9-9](ch09.xhtml#ch09fig9)中看到我的场景设置。
- en: '![Images](Images/09fig09.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/09fig09.jpg)'
- en: '*Figure 9-9: Change the Camera settings to match those of your actual camera.*'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9-9：调整相机设置，以匹配你实际相机的设置。*'
- en: Now orient the model to match the position it would have if it were really in
    the photo. Make the distance between the model and the camera the same as the
    distance in the photo you took. You need to match that distance both vertically
    and horizontally so the distortion of the render matches the distortion of the
    photo.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将模型定向，确保它与照片中的位置匹配。确保模型与相机之间的距离与拍照时的距离相同。你需要在垂直和水平方向上都匹配这个距离，以确保渲染的畸变与照片的畸变一致。
- en: Once you’ve moved the model to the correct position, rotate it so that it’s
    at the proper angle. That’s where the placeholder you put in the photo comes in
    handy. It will help you tilt the model to the same orientation.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你将模型移动到正确的位置，旋转它以确保它处于正确的角度。这时你放在照片中的占位符就派上用场了，它能帮助你调整模型的方向。
- en: Getting the distance and angle just right can take a lot of trial and error,
    so for the next step, you may want to use low-quality renders until you’ve gotten
    the orientation right. You may need to create multiple renders, so making them
    lower quality will save time. When you create those renders, make sure you select
    the **Transparent Background** option.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 精确调整距离和角度可能需要多次尝试，因此在下一步中，你可能想使用低质量的渲染图，直到你调整好方向。你可能需要创建多个渲染图，因此降低质量能节省时间。当你创建这些渲染图时，确保选择**透明背景**选项。
- en: '***Combining Your Images***'
  id: totrans-73
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***合并你的图像***'
- en: The next step is to combine your rendered image with the photo you took. For
    that, I used GIMP (GNU Image Manipulation Program), which is a free and open source
    alternative to Adobe Photoshop. The particulars of using GIMP are outside the
    scope of this book, but you’ll learn the basic process next. (It should be roughly
    the same in other photo editors.)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将你的渲染图与拍摄的照片合并。为此，我使用了 GIMP（GNU 图像处理程序），它是一个免费的开源替代品，可以替代 Adobe Photoshop。使用
    GIMP 的具体操作超出了本书的范围，但你将在接下来的内容中了解基本流程。（在其他照片编辑器中也应该差不多。）
- en: Open both the original photo you took and the new rendered image you just created.
    Then copy the rendered image to a new layer on top of the photo layer. Next, position
    and scale the rendered image so it’s on top of your Arduino Uno placeholder. If
    the orientation doesn’t look quite right, adjust your model and render a new image.
    Repeat that process until your rendered image exactly matches the distance and
    tilt of your placeholder; then switch to a high-quality render with a high resolution.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 打开你拍摄的原始照片和刚刚创建的渲染图。然后，将渲染图复制到一个新图层，并将其放置在照片图层之上。接下来，调整渲染图的位置和比例，使其位于 Arduino
    Uno 的占位符上。如果方向看起来不太对，调整模型并渲染一个新的图像。重复这个过程，直到渲染图完全匹配占位符的距离和倾斜度；然后切换到高质量渲染图，确保高分辨率。
- en: You might need to adjust the color of both the rendered image and the original
    photo so that they match, paying particular attention to the white balance. Because
    the render has a transparent background, it doesn’t currently have a ground shadow.
    To add one, create a new layer under the render layer and over the photo layer
    and then use the Airbrush tool to paint a shadow on the new layer.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要调整渲染图和原始照片的颜色，以使它们匹配，特别注意白平衡。由于渲染图具有透明背景，因此目前没有地面阴影。为了添加阴影，创建一个新图层，放置在渲染图层和照片图层之间，然后使用喷枪工具在新图层上绘制阴影。
- en: Once the rendered Arduino Uno looks like it’s part of the original photo—shadows
    and all—flatten the image to merge the layers.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦渲染的 Arduino Uno 看起来像是原始照片的一部分——包括阴影——将图像压缩并合并图层。
- en: Finally, add some photographic noise, or graininess, to the image. Your original
    picture almost certainly had a small amount of noise, but the rendered image doesn’t,
    which makes it stand out. A little bit of hue, saturation, and value (HSV) noise
    on top of the entire image will make it look more consistent. The final result
    should look like [Figure 9-10](ch09.xhtml#ch09fig10).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，给图像添加一些摄影噪点或颗粒感。你的原始照片几乎肯定有少量噪点，而渲染图则没有，这使得它显得与众不同。给整个图像加上一点色调、饱和度和值（HSV）噪点会让它看起来更加一致。最终效果应该类似于[图
    9-10](ch09.xhtml#ch09fig10)。
- en: Looks pretty decent, right? An image like this wouldn’t hold up to photo forensic
    scrutiny, but it does a much better job of making your model look like a real
    object than if the model were on a blank background. Taking the time to place
    your renders in a scene will help you picture your models in the real world and
    go a long way toward selling others on your ideas.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来还不错，对吧？像这样的图像虽然不太能经得起照片法医鉴定，但它能比单纯在空白背景上的模型更好地让你的模型看起来像一个真实的物体。花时间将渲染图放入场景中，有助于你将模型与现实世界联系起来，并在向他人展示你的想法时大有裨益。
- en: '![Images](Images/09fig10.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图像](Images/09fig10.jpg)'
- en: '*Figure 9-10: In your final image, the Arduino Uno should look like it’s really
    in the photo.*'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 9-10：在你的最终图像中，Arduino Uno 应该看起来真的像是在照片中。*'
- en: '**Summary**'
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: When you started this book, creating a simple cube was probably exciting. Now,
    you’ve developed a valuable skill set you can use to design complex 3D models,
    make technical drawings to have them manufactured, and even create photorealistic
    renders of your creations. Whether you’re using those skills to make 3D-printable
    replacement parts for your kitchen appliances or to design the next generation
    of high-tech robots, I hope you continue to practice what you’ve learned. But,
    before you go, I have one last exciting project for you in [Chapter 10](ch10.xhtml#ch10).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始读这本书时，创建一个简单的立方体可能让你感到兴奋。现在，你已经掌握了一套宝贵的技能，可以用来设计复杂的3D模型，制作技术图纸以便进行生产，甚至可以创建你作品的逼真渲染图。无论你是利用这些技能制作厨房电器的3D打印替换零件，还是设计下一代高科技机器人，我希望你能继续练习所学的知识。不过，在你离开之前，我还有一个最后的令人兴奋的项目给你，位于[第10章](ch10.xhtml#ch10)。
