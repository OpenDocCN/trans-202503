["```\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Tennjs</title>\n  </head>\n  <body>\n    <canvas id=\"canvas\" width=\"300\" height=\"300\"></canvas>\n    <script src=\"script.js\"></script>\n  </body>\n</html> \n```", "```\nlet canvas = document.querySelector(\"#canvas\");\nlet ctx = canvas.getContext(\"2d\");\nlet width = canvas.width;\nlet height = canvas.height;\n\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, width, height); \n```", "```\n`--snip--`\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, width, height);\n\nconst BALL_SIZE = 5;\n❶ let ballPosition = {x: 20, y: 30};\n\nctx.fillStyle = \"white\";\nctx.fillRect(ballPosition.x, ballPosition.y, BALL_SIZE, BALL_SIZE); \n```", "```\nlet canvas = document.querySelector(\"#canvas\");\nlet ctx = canvas.getContext(\"2d\");\nlet width = canvas.width;\nlet height = canvas.height;\n\nconst BALL_SIZE = 5;\nlet ballPosition = {x: 20, y: 30};\n\n❶ function draw() {\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(0, 0, width, height);\n\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(ballPosition.x, ballPosition.y, BALL_SIZE, BALL_SIZE);\n}\n\n❷ draw(); \n```", "```\n`--snip--`\nconst BALL_SIZE = 5;\nlet ballPosition = {x: 20, y: 30};\n\n❶ let xSpeed = 4;\nlet ySpeed = 2;\n\nfunction draw() {\n ctx.fillStyle = \"black\";\n ctx.fillRect(0, 0, width, height);\n\n ctx.fillStyle = \"white\";\n ctx.fillRect(ballPosition.x, ballPosition.y, BALL_SIZE, BALL_SIZE);\n}\n\n❷ function update() {\n  ballPosition.x += xSpeed;\n  ballPosition.y += ySpeed;\n}\n\n❸ function gameLoop() {\n  draw();\n  update();\n\n    // Call this function again after a timeout\n  setTimeout(gameLoop, 30);\n}\n\n❹ gameLoop(); \n```", "```\n`--snip--`\nfunction update() {\n ballPosition.x += xSpeed;\n ballPosition.y += ySpeed;\n}\n\nfunction checkCollision() {\n❶ let ball = {\n    left: ballPosition.x,\n    right: ballPosition.x + BALL_SIZE,\n    top: ballPosition.y,\n    bottom: ballPosition.y + BALL_SIZE\n  }\n\n❷ if (ball.left < 0 || ball.right > width) {\n    xSpeed = -xSpeed;\n  }\n❸ if (ball.top < 0 || ball.bottom > height) {\n    ySpeed = -ySpeed;\n  }\n}\n\nfunction gameLoop() {\n draw();\n update();\n❹ checkCollision();\n\n // Call this function again after a timeout\n setTimeout(gameLoop, 30);\n}\n\ngameLoop(); \n```", "```\n`--snip--`\nlet xSpeed = 4;\nlet ySpeed = 2;\n\nconst PADDLE_WIDTH = 5;\nconst PADDLE_HEIGHT = 20;\nconst PADDLE_OFFSET = 10;\n\nlet leftPaddleTop = 10;\nlet rightPaddleTop = 30;\n\nfunction draw() {\n`--snip--` \n```", "```\n`--snip--`\nfunction draw() {\n  // Fill the canvas with black\n ctx.fillStyle = \"black\";\n ctx.fillRect(0, 0, width, height);\n\n  // Everything else will be white\n ctx.fillStyle = \"white\";\n\n  // Draw the ball\n ctx.fillRect(ballPosition.x, ballPosition.y, BALL_SIZE, BALL_SIZE);\n\n  // Draw the paddles\n❶ ctx.fillRect(\n    PADDLE_OFFSET,\n    leftPaddleTop,\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT\n  );\n❷ ctx.fillRect(\n    width - PADDLE_WIDTH - PADDLE_OFFSET,\n    rightPaddleTop,\n PADDLE_WIDTH,\n    PADDLE_HEIGHT\n  );\n}\n\nfunction update() {\n`--snip--` \n```", "```\n`--snip--`\nlet leftPaddleTop = 10;\nlet rightPaddleTop = 30;\n\ndocument.addEventListener(\"mousemove\", e => {\n  rightPaddleTop = e.y - canvas.offsetTop;\n});\n\nfunction draw() {\n`--snip--` \n```", "```\n`--snip--`\nfunction checkCollision() {\n let ball = {\n left: ballPosition.x,\n right: ballPosition.x + BALL_SIZE,\n top: ballPosition.y,\n bottom: ballPosition.y + BALL_SIZE\n }\n\n  let leftPaddle = {\n    left: PADDLE_OFFSET,\n    right: PADDLE_OFFSET + PADDLE_WIDTH,\n    top: leftPaddleTop,\n    bottom: leftPaddleTop + PADDLE_HEIGHT\n  };\n\n   let rightPaddle = {\n    left: width - PADDLE_WIDTH - PADDLE_OFFSET,\n    right: width - PADDLE_OFFSET,\n    top: rightPaddleTop,\n    bottom: rightPaddleTop + PADDLE_HEIGHT\n  };\n\n if (ball.left < 0 || ball.right > width) {\n`--snip--` \n```", "```\n`--snip--`\nfunction update() {\n ballPosition.x += xSpeed;\n ballPosition.y += ySpeed;\n}\n\nfunction checkPaddleCollision(ball, paddle) {\n  // Check if the paddle and ball overlap vertically and horizontally\n  return (\n    ball.left   < paddle.right &&\n    ball.right  > paddle.left &&\n    ball.top    < paddle.bottom &&\n    ball.bottom > paddle.top\n  );\n}\n\nfunction checkCollision() {\n`--snip--` \n```", "```\n`--snip--`\n let rightPaddle = {\n left: width - PADDLE_WIDTH - PADDLE_OFFSET,\n right: width - PADDLE_OFFSET,\n top: rightPaddleTop,\n bottom: rightPaddleTop + PADDLE_HEIGHT\n };\n\n  if (checkPaddleCollision(ball, leftPaddle)) {\n    // Left paddle collision happened\n  ❶ xSpeed = Math.abs(xSpeed);\n  }\n\n  if (checkPaddleCollision(ball, rightPaddle)) {\n    // Right paddle collision happened\n  ❷ xSpeed = -Math.abs(xSpeed);\n  }\n\n if (ball.left < 0 || ball.right > width) {\n xSpeed = -xSpeed;\n }\n if (ball.top < 0 || ball.bottom > height) {\n ySpeed = -ySpeed;\n }\n}\n`--snip--` \n```", "```\n`--snip--`\nfunction adjustAngle(distanceFromTop, distanceFromBottom) {\n❶ if (distanceFromTop < 0) {\n    // If ball hit near top of paddle, reduce ySpeed\n    ySpeed -= 0.5;\n❷ } else if (distanceFromBottom < 0) {\n    // If ball hit near bottom of paddle, increase ySpeed\n    ySpeed += 0.5;\n  }\n}\n\nfunction checkCollision() {\n`--snip--` \n```", "```\n`--snip--`\n let rightPaddle = {\n left: width - PADDLE_WIDTH - PADDLE_OFFSET,\n right: width - PADDLE_OFFSET,\n top: rightPaddleTop,\n bottom: rightPaddleTop + PADDLE_HEIGHT\n  };\n\n if (checkPaddleCollision(ball, leftPaddle)) {\n // Left paddle collision happened\n    let distanceFromTop = ball.top - leftPaddle.top;\n    let distanceFromBottom = leftPaddle.bottom - ball.bottom;\n    adjustAngle(distanceFromTop, distanceFromBottom);\n xSpeed = Math.abs(xSpeed);\n }\n\n if (checkPaddleCollision(ball, rightPaddle)) {\n // Right paddle collision happened\n    let distanceFromTop = ball.top - rightPaddle.top;\n    let distanceFromBottom = rightPaddle.bottom - ball.bottom;\n    adjustAngle(distanceFromTop, distanceFromBottom);\n xSpeed = -Math.abs(xSpeed);\n }\n`--snip--` \n```", "```\n`--snip--`\nlet leftPaddleTop = 10;\nlet rightPaddleTop = 30;\n\nlet leftScore = 0;\nlet rightScore = 0;\n\ndocument.addEventListener(\"mousemove\", e => {\n rightPaddleTop = e.y - canvas.offsetTop;\n});\n`--snip--` \n```", "```\n`--snip--`\n ctx.fillRect(\n width - PADDLE_WIDTH - PADDLE_OFFSET,\n rightPaddleTop,\n PADDLE_WIDTH,\n PADDLE_HEIGHT\n );\n\n  // Draw scores\n  ctx.font = \"30px monospace\";\n  ctx.textAlign = \"left\";\n  ctx.fillText(leftScore.toString(), 50, 50);\n  ctx.textAlign = \"right\";\n  ctx.fillText(rightScore.toString(), width - 50, 50);\n}\n\nfunction update() {\n`--snip--` \n```", "```\n`--snip--`\nconst BALL_SIZE = 5;\n❶ let ballPosition;\n\nlet xSpeed;\nlet ySpeed;\n\nfunction initBall() {\n❷ ballPosition = {x: 20, y: 30};\n  xSpeed = 4;\n  ySpeed = 2;\n}\n\nconst PADDLE_WIDTH = 5;\n`--snip--` \n```", "```\n`--snip--`\n if (checkPaddleCollision(ball, rightPaddle)) {\n // Right paddle collision happened\n let distanceFromTop = ball.top - rightPaddle.top;\n let distanceFromBottom = rightPaddle.bottom - ball.bottom;\n adjustAngle(distanceFromTop, distanceFromBottom);\n xSpeed = -Math.abs(xSpeed);\n  }\n\n❶ if (ball.left < 0) {\n    rightScore++;\n    initBall();\n  }\n❷ if (ball.right > width) {\n    leftScore++;\n    initBall();\n  }\n\n if (ball.top < 0 || ball.bottom > height) {\n ySpeed = -ySpeed;\n }\n}\n`--snip--` \n```", "```\n`--snip--`\nfunction gameLoop() {\n draw();\n update();\n  checkCollision();\n\n // Call this function again after a timeout\n setTimeout(gameLoop, 30);\n}\n\ninitBall();\ngameLoop(); \n```", "```\nlet canvas = document.querySelector(\"#canvas\");\nlet ctx = canvas.getContext(\"2d\");\nlet width = canvas.width;\nlet height = canvas.height;\n\nconst MAX_COMPUTER_SPEED = 2;\n\nconst BALL_SIZE = 5;\n`--snip--` \n```", "```\n`--snip--`\nfunction followBall() {\n❶ let ball = {\n    top: ballPosition.y,\n    bottom: ballPosition.y + BALL_SIZE\n  };\n❷ let leftPaddle = {\n    top: leftPaddleTop,\n    bottom: leftPaddleTop + PADDLE_HEIGHT\n  };\n\n❸ if (ball.top < leftPaddle.top) {\n    leftPaddleTop -= MAX_COMPUTER_SPEED;\n❹ } else if (ball.bottom > leftPaddle.bottom) {\n    leftPaddleTop += MAX_COMPUTER_SPEED;\n  }\n}\n\nfunction update() {\n ballPosition.x += xSpeed;\n ballPosition.y += ySpeed;\n❺ followBall();\n}\n\n`--snip--` \n```", "```\n`--snip--`\nlet leftScore = 0;\nlet rightScore = 0;\n❶ let gameOver = false;\n\ndocument.addEventListener(\"mousemove\", e => {\n--snip--\n\nfunction checkCollision() {\n--snip--\n if (ball.right > width) {\n leftScore++;\n initBall();\n }\n❷ if (leftScore > 9 || rightScore > 9) {\n    gameOver = true;\n }\n if (ball.top < 0 || ball.bottom > height) {\n ySpeed = -ySpeed;\n }\n}\n`--snip--` \n```", "```\n`--snip--`\n if (ball.top < 0 || ball.bottom > height) {\n ySpeed = -ySpeed;\n }\n}\n\n❶ function drawGameOver() {\n  ctx.fillStyle = \"white\";\n  ctx.font = \"30px monospace\";\n  ctx.textAlign = \"center\";\n  ctx.fillText(\"GAME OVER\", width / 2, height / 2);\n}\n\nfunction gameLoop() {\n draw();\n update();\n checkCollision();\n❷ if (gameOver) {\n    draw();\n    drawGameOver();\n❸} else {\n    // Call this function again after a timeout\n    setTimeout(gameLoop, 30);\n  }\n} \n```", "```\nlet canvas = document.querySelector(\"#canvas\");\nlet ctx = canvas.getContext(\"2d\");\nlet width = canvas.width;\nlet height = canvas.height;\n\nconst MAX_COMPUTER_SPEED = 2;\n\nconst BALL_SIZE = 5;\nlet ballPosition;\n\nlet xSpeed;\nlet ySpeed;\n\nfunction initBall() {\n  ballPosition = {x: 20, y: 30};\n  xSpeed = 4;\n  ySpeed = 2;\n}\n\nconst PADDLE_WIDTH = 5;\nconst PADDLE_HEIGHT = 20;\nconst PADDLE_OFFSET = 10;\n\nlet leftPaddleTop = 10;\nlet rightPaddleTop = 30;\n\nlet leftScore = 0;\nlet rightScore = 0;\nlet gameOver = false;\n\ndocument.addEventListener(\"mousemove\", e => {\n  rightPaddleTop = e.y - canvas.offsetTop;\n});\n\nfunction draw() {\n  // Fill the canvas with black\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(0, 0, width, height);\n\n  // Everything else will be white\n  ctx.fillStyle = \"white\";\n\n  // Draw the ball\n  ctx.fillRect(ballPosition.x, ballPosition.y, BALL_SIZE, BALL_SIZE);\n\n  // Draw the paddles\n  ctx.fillRect(\n    PADDLE_OFFSET,\n    leftPaddleTop,\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT\n );\n  ctx.fillRect(\n    width - PADDLE_WIDTH - PADDLE_OFFSET,\n    rightPaddleTop,\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT\n  );\n\n  // Draw scores\n  ctx.font = \"30px monospace\";\n  ctx.textAlign = \"left\";\n  ctx.fillText(leftScore.toString(), 50, 50);\n  ctx.textAlign = \"right\";\n  ctx.fillText(rightScore.toString(), width - 50, 50);\n}\n\nfunction followBall() {\n  let ball = {\n    top: ballPosition.y,\n    bottom: ballPosition.y + BALL_SIZE\n  };\n  let leftPaddle = {\n    top: leftPaddleTop,\n    bottom: leftPaddleTop + PADDLE_HEIGHT\n  };\n\n  if (ball.top < leftPaddle.top) {\n    leftPaddleTop -= MAX_COMPUTER_SPEED;\n  } else if (ball.bottom > leftPaddle.bottom) {\n    leftPaddleTop += MAX_COMPUTER_SPEED;\n  }\n}\n\nfunction update() {\n  ballPosition.x += xSpeed;\n  ballPosition.y += ySpeed;\n  followBall();\n}\n\nfunction checkPaddleCollision(ball, paddle) {\n  // Check if the paddle and ball overlap vertically and horizontally\n  return (\n    ball.left   < paddle.right &&\n    ball.right  > paddle.left &&\n    ball.top    < paddle.bottom &&\n    ball.bottom > paddle.top\n  );\n}\n\nfunction adjustAngle(distanceFromTop, distanceFromBottom) {\n  if (distanceFromTop < 0) {\n    // If ball hit near top of paddle, reduce ySpeed\n    ySpeed -= 0.5;\n  } else if (distanceFromBottom < 0) {\n    // If ball hit near bottom of paddle, increase ySpeed\n ySpeed += 0.5;\n  }\n}\n\nfunction checkCollision() {\n  let ball = {\n    left: ballPosition.x,\n    right: ballPosition.x + BALL_SIZE,\n    top: ballPosition.y,\n    bottom: ballPosition.y + BALL_SIZE\n  }\n\n  let leftPaddle = {\n    left: PADDLE_OFFSET,\n    right: PADDLE_OFFSET + PADDLE_WIDTH,\n    top: leftPaddleTop,\n    bottom: leftPaddleTop + PADDLE_HEIGHT\n  };\n\n  let rightPaddle = {\n    left: width - PADDLE_WIDTH - PADDLE_OFFSET,\n    right: width - PADDLE_OFFSET,\n    top: rightPaddleTop,\n    bottom: rightPaddleTop + PADDLE_HEIGHT\n  };\n\n  if (checkPaddleCollision(ball, leftPaddle)) {\n    // Left paddle collision happened\n    let distanceFromTop = ball.top - leftPaddle.top;\n    let distanceFromBottom = leftPaddle.bottom - ball.bottom;\n    adjustAngle(distanceFromTop, distanceFromBottom);\n    xSpeed = Math.abs(xSpeed);\n  }\n\n  if (checkPaddleCollision(ball, rightPaddle)) {\n    // Right paddle collision happened\n    let distanceFromTop = ball.top - rightPaddle.top;\n    let distanceFromBottom = rightPaddle.bottom - ball.bottom;\n    adjustAngle(distanceFromTop, distanceFromBottom);\n    xSpeed = -Math.abs(xSpeed);\n  }\n\n  if (ball.left < 0) {\n    rightScore++;\n    initBall();\n  }\n  if (ball.right > width) {\n    leftScore++;\n    initBall();\n  }\n  if (leftScore > 9 || rightScore > 9) {\n    gameOver = true;\n  }\n if (ball.top < 0 || ball.bottom > height) {\n    ySpeed = -ySpeed;\n    }\n}\n\nfunction drawGameOver() {\n  ctx.fillStyle = \"white\";\n  ctx.font = \"30px monospace\";\n  ctx.textAlign = \"center\";\n  ctx.fillText(\"GAME OVER\", width / 2, height / 2);\n}\n\nfunction gameLoop() {\n  draw();\n  update();\n  checkCollision();\n\n  if (gameOver) {\n    draw();\n    drawGameOver();\n  } else {\n    // Call this function again after a timeout\n    setTimeout(gameLoop, 30);\n  }\n}\n\ninitBall();\ngameLoop(); \n```"]