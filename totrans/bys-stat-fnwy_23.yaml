- en: '**19'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**19'
- en: FROM HYPOTHESIS TESTING TO PARAMETER ESTIMATION**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**从假设检验到参数估计**'
- en: '![Image](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common.jpg)'
- en: So far, we’ve used posterior odds to compare only two hypotheses. That’s fine
    for simple problems; even if we have three or four hypotheses, we can test them
    all by conducting multiple hypothesis tests, as we did in the previous chapter.
    But sometimes we want to search a really large space of possible hypotheses to
    explain our data. For example, you might want to guess how many jelly beans are
    in a jar, the height of a faraway building, or the exact number of minutes it
    will take for a flight to arrive. In all these cases, there are many, many possible
    hypotheses—too many to conduct hypothesis tests for all of them.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们使用后验赔率仅仅比较了两个假设。这对于简单的问题来说是足够的；即使我们有三个或四个假设，我们也可以通过进行多个假设检验来测试它们，就像我们在前一章所做的那样。但有时候，我们想要搜索一个非常大的假设空间来解释我们的数据。例如，你可能想猜测一个罐子里有多少颗果冻豆，一栋远处建筑物的高度，或者一架航班到达需要多少分钟。在所有这些情况下，有许多可能的假设——多到无法为它们全部进行假设检验。
- en: 'Luckily, there’s a technique for handling this scenario. In [Chapter 15](ch15.xhtml#ch15),
    we learned how to turn a parameter estimation problem into a hypothesis test.
    In this chapter, we’re going to do the opposite: by looking at a virtually continuous
    range of possible hypotheses, we can use the Bayes factor and posterior odds (a
    hypothesis test) as a form of parameter estimation! This approach allows us to
    evaluate more than just two hypotheses and provides us with a simple framework
    for estimating any parameter.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有一种方法可以处理这种情况。在[第15章](ch15.xhtml#ch15)中，我们学习了如何将参数估计问题转化为假设检验。在本章中，我们将做相反的事情：通过查看几乎连续的可能假设范围，我们可以使用贝叶斯因子和后验赔率（假设检验）作为一种参数估计的形式！这种方法使我们能够评估的不仅仅是两个假设，并为我们提供了一个简单的框架来估计任何参数。
- en: '**Is the Carnival Game Really Fair?**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**嘉年华游戏真的是公平的吗？**'
- en: Suppose you’re at a carnival. While walking through the games, you notice someone
    arguing with a carnival attendant near a pool of little plastic ducks. Curious,
    you get closer and hear the player yelling, “This game is rigged! You said there
    was a 1 in 2 chance of getting a prize and I’ve picked up 20 ducks and only received
    one prize! It looks to me like the chance of getting a prize is only 1 in 20!”
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你正在参加一个嘉年华活动。当你走过游戏区时，你注意到有人正在和一名嘉年华工作人员争论，旁边是一个装满小塑料鸭子的池塘。出于好奇，你走近一听，听到那名玩家大声喊道：“这个游戏是有问题的！你说中奖的机会是二分之一，我已经捡了20只鸭子，结果只得到了一个奖品！我看中奖的机会明明是二十分之一！”
- en: 'Now that you have a strong understanding of probability, you decide to settle
    this argument yourself. You explain to the attendant and the angry customer that
    if you observe some more games that day, you’ll be able to use the Bayes factor
    to determine who’s right. You decide to break up the results into two hypotheses:
    *H*[1], which represents the attendant’s claim that the probability of a prize
    is 1/2, and *H*[2], the angry customer’s claim that the probability of a prize
    is just 1/20:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你已经对概率有了深刻的理解，你决定亲自解决这个争论。你向工作人员和愤怒的顾客解释，如果你观察当天的更多游戏，你将能够使用贝叶斯因子来确定谁是对的。你决定将结果分为两个假设：*H*[1]，表示工作人员声称中奖的概率是1/2，以及
    *H*[2]，表示愤怒的顾客声称中奖的概率只是1/20：
- en: '![Image](../images/f0184-01.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0184-01.jpg)'
- en: The attendant argues that because he didn’t watch the customer pick up ducks,
    he doesn’t think you should use his reported data, since no one else can verify
    it. This seems fair to you. You decide to watch the next 100 games and use that
    as your data instead. After the customer has picked up 100 ducks, you observe
    that 24 of them came with prizes.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 工作人员辩称，由于他没有看到顾客捡鸭子的过程，他认为你不应该使用他报告的数据，因为没有其他人能验证这些数据。你觉得这个理由是合理的。于是，你决定观察接下来的100场游戏，并将其作为你的数据。当顾客捡了100只鸭子后，你观察到其中有24只鸭子带有奖品。
- en: Now, on to the Bayes factor! Since we don’t have a strong opinion about the
    claim from either the customer or the attendant, we won’t worry about the prior
    odds or calculating our full posterior odds yet.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，进入贝叶斯因子！由于我们对顾客或工作人员的主张没有强烈的看法，我们暂时不考虑先验赔率或计算完整的后验赔率。
- en: 'To get our Bayes factor, we need to compute *P*(*D* | *H*) for each hypothesis:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了得到我们的贝叶斯因子，我们需要计算每个假设下的 *P*(*D* | *H*)：
- en: '*P*(*D* | *H*[1]) = (0.5)^(24) × (1 – 0.5)^(76)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(*D* | *H*[1]) = (0.5)^(24) × (1 – 0.5)^(76)'
- en: '*P*(*D* | *H*[2]) = (0.05)^(24) × (1 – 0.05)^(76)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(*D* | *H*[2]) = (0.05)^(24) × (1 – 0.05)^(76)'
- en: 'Now, individually, both of these probabilities are quite small, but all we
    care about is the ratio. We’ll look at our ratio in terms of *H*[2]/*H*[1] so
    that our result will tell us how many times better the customer’s hypothesis explains
    the data than the attendant’s:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，单独来看，这两个概率都非常小，但我们关心的只是比例。我们将以 *H*[2]/*H*[1] 的形式来看待我们的比例，这样我们的结果就能告诉我们客户的假设比服务员的假设更能解释数据多少倍：
- en: '![Image](../images/f0185-01.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0185-01.jpg)'
- en: Our Bayes factor tells us that *H*[1], the attendant’s hypothesis, explains
    the data 653 times as well as *H*[2], which means that the attendant’s hypothesis
    (that the probability of getting a prize when picking up a duck is 0.5) is the
    more likely one.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的贝叶斯因子告诉我们，*H*[1]，即服务员的假设，比 *H*[2] 更能解释数据 653 倍，这意味着服务员的假设（即捡起一只鸭子时获得奖品的概率是
    0.5）是更可能的。
- en: 'This should immediately seem strange. Clearly, the probability of getting only
    24 prizes out of a total of 100 ducks seems really unlikely if the true probability
    of a prize is 0.5\. We can use R’s `pbinom()` function (introduced in [Chapter
    13](ch13.xhtml#ch13)) to calculate the binomial distribution, which will tell
    us the probability of seeing 24 *or fewer* prizes, assuming that the probability
    of getting a prize is really 0.5:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该立刻让人觉得很奇怪。显然，如果奖品的真实概率是 0.5，从 100 只鸭子中只获得 24 个奖品的概率看起来非常不可能。我们可以使用 R 的 `pbinom()`
    函数（在[第 13 章](ch13.xhtml#ch13)中介绍）来计算二项分布，这将告诉我们在假设获得奖品的概率确实为 0.5 的情况下，获得 24 个*或更少*奖品的概率：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As you can see, the probability of getting 24 or fewer prizes if the true probability
    of a prize is 0.5 is extremely low; expanding it out to the full decimal values,
    we get a probability of 0.00000009050013! Something is definitely up with *H*[1].
    Even though we don’t believe the attendant’s hypothesis, it still explains the
    data much better than the customer’s.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，如果奖品的真实概率是 0.5，获得 24 个或更少奖品的概率极低；将其展开到完整的小数值，我们得到的概率是 0.00000009050013！*H*[1]
    绝对有问题。尽管我们不相信服务员的假设，但它仍然比客户的假设更能解释数据。
- en: 'So what’s missing? In the past, we’ve often found that the prior probability
    usually matters a lot when the Bayes factor alone doesn’t give us an answer that
    makes sense. But as we saw in [Chapter 18](ch18.xhtml#ch18), there are cases in
    which the prior isn’t the root cause of our problem. In this case, using the following
    equation seems reasonable, since we don’t have a strong opinion either way:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，缺少的是什么呢？过去我们经常发现，当仅仅依赖贝叶斯因子得出的结果没有意义时，先验概率往往起着重要作用。但正如我们在[第 18 章](ch18.xhtml#ch18)中看到的，也有一些情况，先验并不是问题的根源。在这种情况下，使用以下方程似乎是合理的，因为我们对结果没有强烈的偏好：
- en: '![Image](../images/f0185-02.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0185-02.jpg)'
- en: 'But maybe the problem here is that you have a preexisting mistrust in carnival
    games. Because the result of the Bayes factor favors the attendant’s hypothesis
    so strongly, we’d need our prior odds to be at least 653 to get a posterior odds
    that favors the customer’s hypothesis:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 但也许问题在于你对嘉年华游戏的先入为主的不信任。由于贝叶斯因子极力偏向服务员的假设，我们需要让先验赔率至少为 653，才能得到一个支持客户假设的后验赔率：
- en: '![Image](../images/f0185-03.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0185-03.jpg)'
- en: That’s a really deep distrust of the fairness of the game! There must be some
    problem here other than the prior.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这对游戏的公平性有极深的不信任！这里一定存在除先验之外的其他问题。
- en: '***Considering Multiple Hypotheses***'
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***考虑多个假设***'
- en: 'One obvious problem is that, while it seems intuitively clear that the attendant
    is wrong in his hypothesis, the customer’s alternative hypothesis is just too
    extreme to be right, either, so we have two wrong hypotheses. What if the customer
    thought the probability of winning was 0.2, rather than 0.05? We’ll call this
    hypothesis *H*[3]. Testing *H*[3] against the attendant’s hypothesis radically
    changes the results of our likelihood ratio:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一个明显的问题是，虽然直觉上似乎很清楚服务员的假设是错的，但客户的替代理论也太极端，根本不可能是对的，因此我们有两个错误的假设。如果客户认为中奖的概率是
    0.2，而不是 0.05 呢？我们将这个假设称为 *H*[3]。将 *H*[3] 与服务员的假设进行比较，结果会大大改变我们的似然比：
- en: '![Image](../images/f0186-01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0186-01.jpg)'
- en: Here we see that *H*[3] explains the data wildly better than *H*[1]. With a
    Bayes factor of 917,399, we can be certain that *H*[1] is far from the best hypothesis
    for explaining the data we’ve observed, because *H*[3] blows it out of the water.
    The trouble we had in our first hypothesis test was that the customer’s belief
    was a far worse description of the event than the attendant’s belief. As we can
    see, though, that doesn’t mean the attendant was right. When we came up with an
    alternative hypothesis, we saw that it was a much better guess than either the
    attendant’s or the customer’s.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到*H*[3]解释数据的效果远远好于*H*[1]。通过917,399的贝叶斯因子，我们可以确信*H*[1]远不是最能解释我们观察到的数据的最佳假设，因为*H*[3]将其远远甩在了后头。我们在第一次假设检验中遇到的问题是，顾客的信念比服务员的信念对事件的描述差得多。然而，正如我们所看到的，这并不意味着服务员是对的。当我们提出一个替代假设时，我们发现它比服务员和顾客的假设都要好得多。
- en: Of course, we haven’t really solved our problem. What if there’s an even better
    hypothesis out there?
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们还没有真正解决问题。如果外面有一个更好的假设呢？
- en: '***Searching for More Hypotheses with R***'
  id: totrans-30
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用R搜索更多假设***'
- en: We want a more general solution that searches all of our possible hypotheses
    and picks out the best one. To do this, we can use R’s `seq()` function to create
    a sequence of hypotheses we want to compare to our *H*[1].
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要一个更通用的解决方案，能够搜索我们所有的可能假设并挑选出最好的一个。为此，我们可以使用R的`seq()`函数创建一个我们想要与*H*[1]进行比较的假设序列。
- en: 'We’ll consider every increment of 0.01 between 0 and 1 as a possible hypothesis.
    That means we’ll consider 0.01, 0.02, 0.03, and so on. We’ll call 0.01—the amount
    we’re increasing each hypothesis by—`dx` (a common notation from calculus representing
    the “smallest change”) and use it to define a `hypotheses` variable, which represents
    all of the possible hypotheses we want to consider. Here we use R’s `seq()` function
    to generate a range of values for each hypothesis between 0 and 1 by incrementing
    the values by our `dx`:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将考虑从0到1之间每个0.01的增量作为一个可能的假设。这意味着我们会考虑0.01、0.02、0.03，依此类推。我们将0.01——即我们每次增加的假设量——称为`dx`（这是微积分中常用的符号，表示“最小的变化”），并用它来定义一个`hypotheses`变量，表示我们希望考虑的所有可能假设。在这里，我们使用R的`seq()`函数，通过将值按`dx`递增，生成一个从0到1之间的假设值范围：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, we need a function that can calculate our likelihood ratio for any two
    hypotheses. Our `bayes.factor()` function will take two arguments: `h_top`, which
    is the probability of getting a prize for the hypothesis on the top (the numerator)
    and `h_bottom`, which is the hypothesis we’re competing against (the attendant’s
    hypothesis). We set this up like so:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要一个可以计算任意两个假设的似然比的函数。我们的`bayes.factor()`函数将接受两个参数：`h_top`，即顶部假设（分子）获得奖品的概率，以及`h_bottom`，即我们正在竞争的假设（服务员的假设）。我们将这样设置：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Finally, we compute the likelihood ratio for all of these possible hypotheses:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们计算所有这些可能假设的似然比：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, we use R’s base plotting functionality to see what these likelihood ratios
    look like:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用R的基本绘图功能来查看这些似然比的样子：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[Figure 19-1](ch19.xhtml#ch19fig01) shows the resulting plot.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[图19-1](ch19.xhtml#ch19fig01)显示了结果图。'
- en: '![Image](../images/19fig01.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/19fig01.jpg)'
- en: '*Figure 19-1: Plotting the Bayes factor for each of our hypotheses*'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*图19-1：为每个假设绘制贝叶斯因子*'
- en: Now we can see a clear distribution of different explanations for the data we’ve
    observed. Using R, we can look at a wide range of possible hypotheses, where each
    point in our line represents the Bayes factor for the corresponding hypothesis
    on the x-axis.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以清楚地看到观察到的数据有不同的解释分布。使用R，我们可以查看一系列可能的假设，其中我们线条上的每个点代表对应假设的贝叶斯因子，横坐标是假设值。
- en: 'We can also see how high the largest Bayes factor is by using the `max()` function
    with our vector of `bfs`:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过使用`max()`函数和我们的`bfs`向量来查看最大的贝叶斯因子有多高：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then we can check which hypothesis corresponds to the highest likelihood ratio,
    telling us which hypothesis we should believe in the most. To do this, enter:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以检查哪个假设对应于最高的似然比，这将告诉我们我们应该最相信哪个假设。为此，输入：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now we know that a probability of 0.24 is our best guess, since this hypothesis
    produces the highest likelihood ratio when compared with the attendant’s. In [Chapter
    10](ch10.xhtml#ch10), you learned that using the mean or expectation of our data
    is often a good way to come up with a parameter estimate. Here we’ve simply chosen
    the hypothesis that individually explains the data the best, because we don’t
    currently have a way to weigh our estimates by their probability of occurring.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道，概率0.24是我们最好的猜测，因为这个假设与服务员的假设相比，产生了最高的似然比。在[第10章](ch10.xhtml#ch10)中，你学到了使用数据的均值或期望值通常是得出参数估计的一种好方法。这里我们只是简单地选择了能够最好地解释数据的假设，因为我们目前没有办法根据发生的概率来加权我们的估计。
- en: '***Adding Priors to Our Likelihood Ratios***'
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***将先验信息加入我们的似然比***'
- en: Now suppose you present your findings to the customer and the attendant. Both
    agree that your findings are pretty convincing, but then another person walks
    up to you and says, “I used to make games like these, and I can tell you that
    for some strange industry reason, the people who design these duck games never
    put the prize rate between 0.2 and 0.3\. I’d bet you the odds are 1,000 to 1 that
    the real prize rate is not in this range. Other than that, I have no clue.”
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设你将你的发现展示给客户和服务员。两人都同意你的发现相当有说服力，但接着另一个人走过来对你说：“我曾经做过这种游戏，我可以告诉你，出于某种奇怪的行业原因，设计这些鸭子游戏的人从不把奖品率设定在0.2到0.3之间。我敢打赌，真实的奖品率不会在这个范围内，赔率是1,000比1。除此之外，我没有任何线索。”
- en: 'Now we have some prior odds that we’d like to use. Since the former game maker
    has given us some solid odds about his prior beliefs in the probability of getting
    a prize, we can try to multiply this by our current list of Bayes factors and
    compute the posterior odds. To do this, we create a list of prior odds ratios
    for every hypothesis we have. As the former game maker told us, the prior odds
    ratio for all probabilities between 0.2 and 0.3 should be 1/1,000\. Since the
    maker has no opinion about other hypotheses, the odds ratio for these will just
    be 1\. We can use a simple `ifelse` statement, using our vector of `hypotheses`,
    to create a vector of our odds ratios:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一些先验赔率，希望使用它们。由于前游戏制作人给了我们一些关于他先验信念的关于获奖概率的实质赔率，我们可以尝试将这个赔率与我们当前的贝叶斯因子列表相乘，并计算后验赔率。为了做到这一点，我们为我们拥有的每个假设创建一个先验赔率比的列表。正如前游戏制作人所说，0.2到0.3之间的所有概率的先验赔率比应该是1/1,000。由于制作人对其他假设没有意见，这些假设的赔率比将是1。我们可以使用一个简单的`ifelse`语句，利用我们的`hypotheses`向量，来创建一个我们的赔率比向量：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then we can once again use `plot()` to display this distribution of priors:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以再次使用`plot()`来显示这个事先分布：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[Figure 19-2](ch19.xhtml#ch19fig02) shows our distribution of prior odds.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[图19-2](ch19.xhtml#ch19fig02)展示了我们事先的赔率分布。'
- en: 'Because R is a vector-based language (for more information on this, see [Appendix
    A](app01.xhtml#app01)), we can simply multiply our `priors` by our `bfs` and get
    a new vector of `posteriors` representing our Bayes factors:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 因为R是一个基于向量的语言（关于这一点的更多信息，请参见[附录A](app01.xhtml#app01)），我们可以简单地将我们的`priors`与`bfs`相乘，得到一个新的`posteriors`向量，表示我们的贝叶斯因子：
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, we can plot a chart of the posterior odds of each of our many hypotheses:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以绘制每个假设的后验赔率图：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[Figure 19-3](ch19.xhtml#ch19fig03) shows the plot.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[图19-3](ch19.xhtml#ch19fig03)显示了这个图。'
- en: '![Image](../images/19fig02.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/19fig02.jpg)'
- en: '*Figure 19-2: Visualizing our prior odds ratios*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*图19-2：可视化我们的先验赔率比*'
- en: '![Image](../images/19fig03.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/19fig03.jpg)'
- en: '*Figure 19-3: Plotting our distribution of Bayes factors*'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*图19-3：绘制我们的贝叶斯因子分布*'
- en: As we can see, we get a very strange distribution of possible beliefs. We have
    reasonable confidence in the values between 0.15 and 0.2 and between 0.3 and 0.35,
    but find the range between 0.2 and 0.3 to be extremely unlikely. But this distribution
    is an honest representation of the strength of belief in each hypothesis, given
    what we’ve learned about the duck game manufacturing process.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，我们得到了一种非常奇怪的可能信念分布。我们对0.15到0.2之间以及0.3到0.35之间的值有合理的信心，但发现0.2到0.3之间的范围极不可能。但这个分布是真实地代表了我们对每个假设的信念强度，基于我们对鸭子游戏制造过程的了解。
- en: While this visualization is helpful, we really want to be able to treat this
    data like a true probability distribution. That way, we can ask questions about
    how much we believe in ranges of possible hypotheses and calculate the expectation
    of our distribution to get a single estimate for what we believe the hypothesis
    to be.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这种可视化图很有帮助，但我们实际上希望能够像处理真实的概率分布一样处理这些数据。这样，我们就可以问一些关于我们对可能假设范围的信任程度的问题，并计算出我们的分布期望值，从而得到一个我们认为的假设单一估计值。
- en: '**Building a Probability Distribution**'
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**构建概率分布**'
- en: A true probability distribution is one where the sum of all possible beliefs
    equals 1\. Having a probability distribution would allow us to calculate the expectation
    (or mean) of our data to make a better estimate about the true rate of getting
    a prize. It would also allow us to easily sum ranges of values so we could come
    up with confidence intervals and other similar estimates.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 真实的概率分布是所有可能的信念总和为1的分布。拥有一个概率分布将使我们能够计算数据的期望（或均值），以便对真实的获奖率做出更好的估计。它还将使我们能够轻松地对一系列值求和，从而得出置信区间和其他类似的估计值。
- en: 'The problem is that if we add up all the posterior odds for our hypotheses,
    they don’t equal 1, as shown in this calculation:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是，如果我们将所有假设的后验比值加起来，它们的和并不为1，正如这个计算所示：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This means we need to normalize our posterior odds so that they do sum to 1\.
    To do so, we simply divide each value in our `posteriors` vector by the sum of
    all the values:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们需要将我们的后验比值归一化，使它们的和为1。为此，我们只需将`posteriors`向量中的每个值除以所有值的和：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now we can see that our `p.posteriors` values add up to 1:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以看到我们的`p.posteriors`值的和为1：
- en: '[PRE13]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Finally, let’s plot our new `p.posteriors`:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们绘制我们新的`p.posteriors`：
- en: '[PRE14]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[Figure 19-4](ch19.xhtml#ch19fig04) shows the plot.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 19-4](ch19.xhtml#ch19fig04)展示了该图。'
- en: '![Image](../images/19fig04.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/19fig04.jpg)'
- en: '*Figure 19-4: Our normalized posterior odds (note the scale on the y-axis)*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 19-4：我们归一化后的后验比值（注意y轴的比例）*'
- en: 'We can also use our `p.posteriors` to answer some common questions we might
    have about our data. For example, we can now calculate the probability that the
    true rate of getting a prize is less than what the attendant claims. We just add
    up all the probabilities for values less than 0.5:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`p.posteriors`来回答一些我们可能对数据有的常见问题。例如，我们现在可以计算真实的获奖率低于服务员所声称的概率。我们只需将所有小于0.5的概率加起来：
- en: '[PRE15]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: As we can see, the probability that the prize rate is lower than the attendant’s
    hypothesis is nearly 1\. That is, we can be almost certain that the attendant
    is overstating the true prize rate.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，奖品率低于服务员假设的概率接近1。也就是说，我们几乎可以确定服务员高估了真实的奖品率。
- en: 'We can also calculate the expectation of our distribution and use this result
    as our estimate for the true probability. Recall that the expectation is just
    the sum of the estimates weighted by their value:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以计算我们的分布期望，并将此结果作为我们对真实概率的估计值。请记住，期望值只是按其值加权的所有估计值的总和：
- en: '[PRE16]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Of course, we can see our distribution is a bit atypical, with a big gap in
    the middle, so we might want to simply choose the most *likely* estimate, as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以看到我们的分布有些不典型，中间有一个大间隙，所以我们可能只是想选择最*可能*的估计值，如下所示：
- en: '[PRE17]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Now we’ve used the Bayes factor to come up with a range of probabilistic estimates
    for the true possible rate of winning a prize in the duck game. This means that
    we’ve used the Bayes factor as a form of parameter estimation!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经使用贝叶斯因子提出了一系列关于真实可能的获奖概率估计值。这意味着我们已经将贝叶斯因子作为一种参数估计的方法！
- en: '**From the Bayes Factor to Parameter Estimation**'
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**从贝叶斯因子到参数估计**'
- en: Let’s take a moment to look at our likelihood ratios alone again. When we weren’t
    using a prior probability for any of the hypotheses, you might have felt that
    we already had a perfectly good approach to solving this problem without needing
    the Bayes factor. We observed 24 ducks with prizes and 76 ducks without prizes.
    Couldn’t we just use our good old beta distribution to solve this problem? As
    we’ve discussed many times since [Chapter 5](ch05.xhtml#ch05), if we want to estimate
    the rate of some event, we can always use the beta distribution. [Figure 19-5](ch19.xhtml#ch19fig05)
    shows a plot of a beta distribution with an alpha of 24 and a beta of 76.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再花点时间单独看一下我们的似然比率。当我们没有为任何假设使用先验概率时，你可能会觉得我们已经有了一个非常好的方法来解决这个问题，而不需要贝叶斯因子。我们观察到
    24 只带奖品的鸭子和 76 只不带奖品的鸭子。难道我们不能直接使用我们那熟悉的 beta 分布来解决这个问题吗？正如我们从[第 5 章](ch05.xhtml#ch05)以来多次讨论的那样，如果我们想估计某个事件的发生率，我们总是可以使用
    beta 分布。[图 19-5](ch19.xhtml#ch19fig05)显示了一个 alpha 为 24、beta 为 76 的 beta 分布图。
- en: '![Image](../images/19fig05.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/19fig05.jpg)'
- en: '*Figure 19-5: The beta distribution with an alpha of 24 and a beta of 76*'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 19-5：具有 alpha 为 24 和 beta 为 76 的 beta 分布*'
- en: Except for the scale of the y-axis, the plot looks nearly identical to the original
    plot of our likelihood ratios! In fact, if we do a few simple tricks, we can get
    these two plots to line up perfectly. If we scale our beta distribution by the
    size of our `dx` and normalize our `bfs`, we can see that these two distributions
    get quite close ([Figure 19-6](ch19.xhtml#ch19fig06)).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 y 轴的刻度外，这个图几乎与我们似然比率的原始图相同！事实上，如果我们做一些简单的调整，我们可以让这两个图完美对齐。如果我们按我们的 `dx` 的大小缩放
    beta 分布，并标准化我们的 `bfs`，我们可以看到这两个分布变得非常接近（见[图 19-6](ch19.xhtml#ch19fig06)）。
- en: '![Image](../images/19fig06.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/19fig06.jpg)'
- en: '*Figure 19-6: Our initial distribution of likelihood ratios maps pretty closely
    to Beta(24,76).*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 19-6：我们的初始似然比率分布与 Beta(24,76) 映射得相当接近。*'
- en: There seems to be only a slight difference now. We can fix it by using the weakest
    prior that indicates that getting a prize and not getting a prize are equally
    likely—that is, by adding 1 to both the alpha and beta parameters, as shown in
    [Figure 19-7](ch19.xhtml#ch19fig07).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在似乎只有一点点差异。我们可以通过使用最弱的先验来修正这一点，这表明获得奖品和不获得奖品的可能性是相等的——也就是说，通过将 1 加到 alpha 和
    beta 参数中，如[图 19-7](ch19.xhtml#ch19fig07)所示。
- en: '![Image](../images/19fig07.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/19fig07.jpg)'
- en: '*Figure 19-7: Our likelihood ratios map perfectly to a Beta(24+1,76+1) distribution.*'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 19-7：我们的似然比率完美地映射到一个 Beta(24+1,76+1) 分布。*'
- en: 'Now we can see that the two distributions are perfectly aligned. [Chapter 5](ch05.xhtml#ch05)
    mentioned that the beta distribution was difficult to derive from our basic rules
    of probability. However, by using the Bayes factor, we’ve been able to empirically
    re-create a modified version of it that assumes a prior of Beta(1,1). And we did
    it without any fancy mathematics! All we had to do was:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以看到这两个分布完全对齐。[第 5 章](ch05.xhtml#ch05)提到，beta 分布是从我们基本的概率规则推导出来的有一定难度。然而，通过使用贝叶斯因子，我们能够经验性地重现一个修改版的
    beta 分布，并假设其先验为 Beta(1,1)。而且我们做这一切时不需要任何复杂的数学！我们所需要做的就是：
- en: Define the probability of the evidence given a hypothesis.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义给定假设下证据的概率。
- en: Consider all possible hypotheses.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑所有可能的假设。
- en: Normalize these values to create a probability distribution.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这些值标准化，创建一个概率分布。
- en: 'Every time we’ve used the beta distribution in this book, we’ve used a beta-distributed
    prior. This made the math easier, since we can arrive at the posterior by combining
    the alpha and beta parameters from the likelihood and prior beta distributions.
    In other words:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中每次使用 beta 分布时，我们都使用了一个 beta 分布的先验。这使得数学变得更简单，因为我们可以通过结合似然和先验 beta 分布的 alpha
    和 beta 参数来得到后验分布。换句话说：
- en: Beta(α[posterior], β[posterior]) = Beta(α[prior] + α[likelihood], β[prior] +
    β[likelihood])
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Beta(α[后验], β[后验]) = Beta(α[先验] + α[似然], β[先验] + β[似然])
- en: However, by building our distribution from the Bayes factor, we were able to
    easily use a unique prior distribution. Not only is the Bayes factor a great tool
    for setting up hypothesis tests, but, as it turns out, it’s also all we need to
    create any probability distribution we might want to use to solve our problem,
    whether that’s hypothesis testing or parameter estimation. We just need to be
    able to define the basic comparison between two hypotheses, and we’re on our way.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，通过从贝叶斯因子构建我们的分布，我们能够轻松地使用一个独特的先验分布。贝叶斯因子不仅是设置假设检验的一个伟大工具，事实上，它也是我们解决问题所需的所有工具，无论是假设检验还是参数估计。我们只需要能够定义两个假设之间的基本比较，这样我们就可以开始了。
- en: When we built our A/B test in [Chapter 15](ch15.xhtml#ch15), we figured out
    how to reduce many hypothesis tests to a parameter estimation problem. Now you’ve
    seen how the most common form of hypothesis testing can also be used to perform
    parameter estimation. Given these two related insights, there is virtually no
    limit to the type of probability problems we can solve using only the most basic
    rules of probability.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在[第15章](ch15.xhtml#ch15)中构建我们的A/B测试时，我们弄清楚了如何将许多假设检验简化为参数估计问题。现在你已经看到了最常见形式的假设检验也可以用于执行参数估计。凭借这两个相关的洞察，几乎没有限制我们可以通过仅使用概率的基本规则来解决的概率问题类型。
- en: '**Wrapping Up**'
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: Now that you’ve finished your journey into Bayesian statistics, you can appreciate
    the true beauty of what you’ve been learning. From the basic rules of probability,
    we can derive Bayes’ theorem, which lets us convert evidence into a statement
    expressing the strength of our beliefs. From Bayes’ theorem, we can derive the
    Bayes factor, a tool for comparing how well two hypotheses explain the data we’ve
    observed. By iterating through possible hypotheses and normalizing the results,
    we can use the Bayes factor to create a parameter estimate for an unknown value.
    This, in turn, allows us to perform countless other hypothesis tests by comparing
    our estimates. And all we need to do to unlock all this power is use the basic
    rules of probability to define our likelihood, *P*(*D* | *H*)!
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经完成了贝叶斯统计的学习之旅，你可以真正欣赏你所学的知识的美妙。从概率的基本规则开始，我们可以推导出贝叶斯定理，贝叶斯定理让我们将证据转化为一个表达我们信念强度的陈述。通过贝叶斯定理，我们可以推导出贝叶斯因子，这是一个用于比较两个假设如何解释我们观察到的数据的工具。通过迭代可能的假设并归一化结果，我们可以使用贝叶斯因子为未知值创建参数估计。反过来，这使我们能够通过比较我们的估计进行无数其他的假设检验。而我们需要做的，正是使用概率的基本规则来定义我们的似然，*P*(*D*
    | *H*)！
- en: '**Exercises**'
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**练习**'
- en: Try answering the following questions to see how well you understand using the
    Bayes factor and posterior odds to do parameter estimation. The solutions can
    be found at *[https://nostarch.com/learnbayes/](https://nostarch.com/learnbayes/)*.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试回答以下问题，看看你在使用贝叶斯因子和后验比率进行参数估计方面的理解程度。解决方案可以在 *[https://nostarch.com/learnbayes/](https://nostarch.com/learnbayes/)*
    找到。
- en: 'Our Bayes factor assumed that we were looking at *H*[1]: *P*(prize) = 0.5\.
    This allowed us to derive a version of the beta distribution with an alpha of
    1 and a beta of 1\. Would it matter if we chose a different probability for *H*[1]?
    Assume *H*[1]: *P*(prize) = 0.24, then see if the resulting distribution, once
    normalized to sum to 1, is any different than the original hypothesis.'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '我们的贝叶斯因子假设我们在观察 *H*[1]: *P*(奖品) = 0.5。这让我们推导出了一个贝塔分布版本，α为1，β为1。如果我们选择一个不同的概率值为
    *H*[1]，这是否会有所不同？假设 *H*[1]: *P*(奖品) = 0.24，那么看看归一化后使其总和为1的分布，是否与原假设的分布有所不同。'
- en: Write a prior for the distribution in which each hypothesis is 1.05 times more
    likely than the previous hypothesis (assume our `dx` remains the same).
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为分布写一个先验，其中每个假设比前一个假设的可能性大1.05倍（假设我们的 `dx` 保持不变）。
- en: Suppose you observed another duck game that included 34 ducks with prizes and
    66 ducks without prizes. How would you set up a test to answer “What is the probability
    that you have a better chance of winning a prize in this game than in the game
    we used in our example?” Implementing this requires a bit more sophistication
    than the R used in this book, but see if you can learn this on your own to kick
    off your adventures in more advanced Bayesian statistics!
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设你观察到了另一个鸭子游戏，其中包括34只有奖鸭和66只没有奖鸭。你如何设置一个检验来回答“在这个游戏中，你赢得奖品的机会比我们示例中的游戏更大吗？”实现这一点需要比本书中使用的R语言更复杂一些，但看看你能否自己学会这些，开始你在更高级贝叶斯统计学的冒险吧！
