["```\n#import dataset\ng<-read.csv(\"SocialNetworkModel.csv\")\n\n#create a histogram of the data\nhist(g$Diary.Entries,main=\"Diary Entry Histogram\",xlab=\"Diary Entries\")\n```", "```\n#create a training sample from Farrelly's social network metrics\nn<-dim(g)[1]\nset.seed(10)\ntrain.index=sample(1:n,15)\ntrain<-g[train.index,]\n\n#build a Poisson regression model\ngl<-glm(Diary.Entries~.,data=train,family=\"poisson\")\n\n#examine performance with a model summary and Chi-squared test\nsummary(gl)\n\n1-pchisq(summary(gl)$deviance,summary(gl)$df[2])\n```", "```\n#rescale the matrix of vertex metrics and apply k-means with k=3\nclust<-kmeans(scale(vertdata),3)\n\n#plot the network with clusters represented by vertex color and label\nplot(g,vertex.size=6,vertex.color=clust$cluster,vertex.label=clust$cluster)\n```", "```\n#run walktrap, louvain, fast greedy, and spinglass clustering algorithms\ncw<-cluster_walktrap(g_social)\nmodularity(cw) #0.505\nplot(cw,g_social,vertex.size=15,vertex.label.cex=0.6,main=\"Walktrap\")\n\nlo<-cluster_louvain(g_social)\nmodularity(lo) #0.476\nplot(lo,g_social,vertex.size=15,vertex.label.cex=0.6,main=\"Louvain\")\n\nfg<-cluster_fast_greedy(g_social)\nmodularity(fg) #0.467\nplot(fg,g_social,vertex.size=15,vertex.label.cex=0.6,main=\"Fast Greedy\")\n\nsg<-cluster_spinglass(g_social)\nmodularity(sg) #0.505\nplot(sg,g_social,vertex.size=15,vertex.label.cex=0.6,main=\"Spinglass\")\n```", "```\n#initiate vectors/lists\nn<-100\ner<-list()\nsf<-list()\nws<-list()\ner_d<-rep(NA,n)\nsf_d<-rep(NA,n)\nws_d<-rep(NA,n)\n\n#loop to create and store random graphs and compute their diameters\nfor (i in 1:n){\n  er[[i]]<-sample_gnp(100,0.02)\n  sf[[i]]<-sample_pa(100,power=2.5,directed=F)\n  ws[[i]]<-sample_smallworld(1,100,1,0.1)\n  er_d[i]<-diameter(er[[i]])\n  sf_d[i]<-diameter(sf[[i]])\n  ws_d[i]<-diameter(ws[[i]])\n}\n\n#plot combined histogram\nhist(er_d,col=rgb(0,0,1,0.2),xlim=c(0,max(max(ws_d),max(ws_d),max(ws_d))),ylim=c(0,40),xlab=\"Diameter\",main=\"\")\nhist(sf_d, col=rgb(0,0,1,0.5), add=T)\nhist(ws_d, col=rgb(0,0,1,0.8), add=T)\nbox()\n```", "```\n#invert the nonzero entries in the towns adjacency matrix from last chapter\ntownprox<-apply(towns,MARGIN=c(1,2),function(x) 1/x)\ntownprox[which(townprox == Inf)]<-0\n\n#create weighted network from this new adjacency matrix\ng_townprox<-graph_from_adjacency_matrix(townprox,mode=\"undirected\",weighted=T)\n\n#plot network with edges labeled by weights\nplot(g_townprox,edge.label=round(E(g_townprox)$weight,3),vertex.color=2,vertex.size=15,vertex.label.cex=0.8)\n```", "```\n#load dataset, compute quartiles, and convert to weighted network\nwind<-as.matrix(read.csv(\"beachdata.csv\",header=F))\nq<-quantile(wind,prob=c(.25,.5,.75))\ng_wind<-graph_from_adjacency_matrix(wind,mode=\"undirected\",weighted=T)\n\n#new networks, keeping only edges with weight in top one and two quartiles\nwind_top<-wind\nwind_top[which(wind < q[3])]<-0\ng_wind_top<-graph_from_adjacency_matrix(wind_top,mode=\"undirected\",weighted=T)\nwind_mid<-wind\nwind_mid[which(wind < q[2])]<-0\ng_wind_mid<-graph_from_adjacency_matrix(wind_mid,mode=\"undirected\",weighted=T)\n\n#plot these two thinned-out networks with weights^2 as edge thickness\n#(squaring the weights is just to increase the visual distinction) plot(g_wind_top,vertex.size=10,vertex.label.cex=0.4,vertex.color=2,edge.width=E(g_wind_top)$weight^2)\nplot(g_wind_mid,vertex.size=10,vertex.label.cex=0.4,vertex.color=2,edge.width=E(g_wind_mid)$weight^2)\n```", "```\n#SIR simulations on the original windsurfer network\nsim<-sir(g_wind,beta=3,gamma=2)\n\n#plot the result\nplot(sim,main=\"Number of Infected Over Time, Including Confidence Intervals\")\n\n#display the median number of infected individuals for each time bucket\nmedian(sim)$NI\n```", "```\n#run and plot SIR epidemic on full author's network\nsim1<-sir(g_social,beta=3,gamma=2)\nplot(sim1,main=\"Epidemic on Full Author's Network\")\n\n#remove vertex 7 from the author's network and rerun SIR epidemic\n\ng2<-delete_vertices(g_social,v=7)\nsim2<-sir(g2,beta=3,gamma=2)\nplot(sim2,main=\"Epidemic on Author's Network with Vertex 7 Removed\")\n```"]