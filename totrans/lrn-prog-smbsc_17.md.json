["```\nscore[1][1] = 95 ' Row 1, column 1\nscore[1][2] = 87 ' Row 1, column 2\nscore[2][1] = 80 ' Row 2, column 1\nscore[2][3] = 92 ' Row 2, column 3\n```", "```\n 1 ' Random2DArray.sb\n 2 For r = 1 To 3    ' 3 rows\n 3   For c = 1 To 4  ' 4 columns\n 4     mat[r][c] = Math.GetRandomNumber(9)\n 5   EndFor\n 6 EndFor\n 7\n 8 ' Displays the matrix to see its contents\n 9 For r = 1 To 3    ' 3 rows\n10   For c = 1 To 4  ' 4 columns\n11     TextWindow.Write(mat[r][c] + \" \")\n12   EndFor\n13   TextWindow.WriteLine(\"\")\n14 EndFor\n```", "```\n2 8 1 6\n3 9 3 9\n1 5 7 8\n```", "```\nTextWindow.Write(\"mat[\" + r + \"][\" + c + \"]: \")\nmat[r][c] = TextWindow.ReadNumber()\n```", "```\n 1 ' AnimatedSquares.sb\n 2 ' Creates a 4x8 grid of randomly colored squares\n 3 For r = 1 To 4    ' 4 rows\n 4   For c = 1 To 8  ' 8 columns\n 5     clr = GraphicsWindow.GetRandomColor()\n 6     GraphicsWindow.BrushColor = clr\n 7     box[r][c] = Shapes.AddRectangle(20, 20) ' Adds a square\n 8     Shapes.Move(box[r][c], c * 20, r * 20)  ' Positions it\n 9   EndFor\n10 EndFor\n11\n12 ' Animates the squares to the upper-left corner of the window\n13 For r = 1 To 4\n14   For c = 1 To 8\n15     Shapes.Animate(box[r][c], 0, 0, 1000)\n16     Program.Delay(400) ' A small delay (in milliseconds)\n17   EndFor\n18 EndFor\n```", "```\n 1 ' StudentAvg.sb\n 2 score[\"Scott\"][\"Math\"] = 92\n 3 score[\"Scott\"][\"Science\"] = 90\n 4 score[\"Scott\"][\"Combat\"] = 87\n 5 score[\"Jean\"][\"Math\"] = 85\n 6 score[\"Jean\"][\"Science\"] = 82\n 7 score[\"Jean\"][\"Combat\"] = 92\n 8 score[\"Logan\"][\"Math\"] = 85\n 9 score[\"Logan\"][\"Science\"] = 95\n10 score[\"Logan\"][\"Combat\"] = 99\n11\n12 TextWindow.Write(\"Enter student name: \")\n13 name = TextWindow.Read()\n14 sum = score[name][\"Math\"]\n15 sum = sum + score[name][\"Science\"]\n16 sum = sum + score[name][\"Combat\"]\n17 avg = Math.Round(sum / 3)\n18 TextWindow.WriteLine(name + \" average score = \" + avg)\n```", "```\nEnter student name: scott\nscott average score = 90\n```", "```\nFor each student in the array: [Scott, Jean, Logan]\n  For each subject in the array: [Math, Science, Combat]\n    score[student][subject] = read score from user\n  EndFor\nEndFor\n```", "```\n 1 ' StudentAvg2.sb\n 2 nameList = \"1=Scott;2=Jean;3=Logan;\"\n 3 subjList = \"1=Math;2=Science;3=Combat;\"\n 4\n 5 For I = 1 To 3           ' Three students\n 6   name = nameList[I]     ' Name of the Ith student\n 7   For J = 1 To 3         ' Three subjects\n 8     subj = subjList[J]   ' Name of Jth subject\n 9     TextWindow.Write(name + \"'s \" + subj + \" score: \")\n10     score[name][subj] = TextWindow.ReadNumber()\n11   EndFor\n12 EndFor\n13 TextWindow.Write(\"Enter student name: \")\n14 name = TextWindow.Read()\n15 sum = score[name][\"Math\"]\n16 sum = sum + score[name][\"Science\"]\n17 sum = sum + score[name][\"Combat\"]\n18 avg = Math.Round(sum / 3)\n19 TextWindow.WriteLine(name + \" average score = \" + avg)\n```", "```\nsum = 0\nFor J = 1 To 3\n  ' Add each student's score in the Jth subject to sum\nEndFor\n```", "```\nsales[1][1] = 50   ' Beddy Buyz store; Exploding Shoes sales\nsales[1][2] = 60   ' Beddy Buyz store; iShirt Computer sales\n--snip--\nsales[4][4] = 80   ' Mother Bored Electronics; Dehydrated Water sales\nsales[4][5] = 90   ' Mother Bored Electronics; Invisible Hat sales\n```", "```\nROWS = 4      ' Number of rows\nCOLS = 5      ' Number of columns\nproduct = \"1=eShoes;2=iShirt;3=Shampoop;4=dWater;5=iHat\"\n```", "```\n1 Sub TotalSales\n2   sum = 0                      ' Initializes the running sum\n3   For r = 1 To ROWS            ' For all rows\n4     For c = 1 To COLS          ' For all columns\n5       sum = sum + sales[r][c]  ' Adds number at row r, column c\n6     EndFor\n7   EndFor\n8   TextWindow.WriteLine(\"Total Sales: $\" + sum + \" K\")\n9 EndSub\n```", "```\nTotal Sales: $1340 K\n```", "```\n 1 Sub ColumnSum\n 2   For c = 1 To COLS           ' For each column\n 3     sum = 0                   ' Initializes the sum for column c\n 4     For r = 1 To ROWS         ' Iterates over the rows\n 5       sum = sum + sales[r][c] ' Adds number at row r, column c\n 6     EndFor\n 7     colName = product[c] + \" Sales: $\" ' Name to display\n 8     TextWindow.WriteLine(colName + sum + \" K\")\n 9   EndFor\n10 EndSub\n```", "```\neShoes Sales: $190 K\niShirt Sales: $200 K\nShampoop Sales: $310 K\ndWater Sales: $330 K\niHat Sales: $310 K\n```", "```\n1 ' 3DArrayDemo.sb\n2 For rack = 1 To 5     ' For each rack\n3   For row = 1 To 3    ' For each row\n4     For col = 1 To 4  ' For each column\n5       box[rack][row][col] = Math.GetRandomNumber(9)\n6     EndFor\n7   EndFor\n8 EndFor\n```", "```\nRack 1:\n2 7 3 2\n4 3 1 3\n1 2 6 4\n\nRack 2:\n8 8 2 1\n7 4 2 7\n1 5 2 7\n--snip--\n```", "```\n 1 GraphicsWindow.Title = \"Treasure Map\"\n 2 GraphicsWindow.Width = 580\n 3 GraphicsWindow.Height = 450\n 4 GraphicsWindow.CanResize = \"False\"\n 5 GraphicsWindow.FontSize = 14\n 6 GraphicsWindow.FontName = \"Courier New\"\n 7\n 8 ' Creates a text shape for showing the player's location\n 9 GraphicsWindow.BrushColor = \"Black\"\n10 txtID = Shapes.AddText(\"\")\n11 Shapes.Move(txtID, 60, 415)\n12\n13 ' Creates the 4 movement buttons and the new game button\n14 GraphicsWindow.BrushColor = \"Red\"\n15 btnN = Controls.AddButton(\"N\", 507, 10)\n16 btnS = Controls.AddButton(\"S\", 507, 90)\n17 btnW = Controls.AddButton(\"W\", 467, 50)\n18 btnE = Controls.AddButton(\"E\", 541, 50)\n19 btnNew = Controls.AddButton(\"New Game\", 480, 370)\n20\n21 Controls.ButtonClicked = OnButtonClicked\n22\n23 NewGame()\n```", "```\n1 Sub NewGame\n2   gameOver = 0   ' Game isn't over yet\n3   moveNumber = 0 ' How many moves the player makes\n4   path = Program.Directory\n5\n6   GraphicsWindow.DrawImage(path + \"\\Background.png\", 0, 0)\n7   CreateNewMap() ' Creates and draws a new treasure map\n 8   ShowLocation() ' Gives feedback to the player\n9 EndSub\n```", "```\n 1 Sub CreateNewMap\n 2   For row = 1 To 10\n 3     For col = 1 To 10\n 4       map[row][col] = 0   ' Clears all cells\n 5     EndFor\n 6   EndFor\n 7\n 8   objId = \"1=1;2=1;3=1;4=1;5=1;6=1;7=1;8=1;9=2;10=2;11=2;12=2;13=2;14=2;\n     15=2;16=2;17=3;18=3;19=4;20=4;21=5;22=5;23=6;24=6;25=7;26=0\"\n 9   count = 1               ' Points to first element in objId\n10   While (count <= Array.GetItemCount(objId))\n11     row = Math.GetRandomNumber(10)\n12     col = Math.GetRandomNumber(10)\n13     If (map[row][col] = 0) Then    ' Cell is clear\n14       map[row][col] = objId[count] ' Reserves the cell\n15       DrawObject()\n16       count = count + 1   ' Points to next element in objId\n17     EndIf\n18   EndWhile\n19\n20   rowP = row              ' Player's current row\n21   colP = col              ' Player's current column\n22 EndSub\n```", "```\n 1 Sub DrawObject\n 2   imgName = \"1=Grass.ico;2=Tree.ico;3=Volcano.ico;4=Cave.ico;5=Rain.ico;\n     6=Flower.ico;7=Treasure.ico\"\n 3\n 4   imgID = map[row][col]\n 5   If ((imgID >= 1) And (imgID <= 7)) Then\n 6     imgPath = path + \"\\\" + imgName[imgID]\n 7\n 8     xPos = 52 + (col - 1) * 38\n 9     yPos = 25 + (row - 1) * 38\n10     GraphicsWindow.DrawImage(imgPath, xPos, yPos)\n11   EndIf\n12 EndSub\n```", "```\n 1 Sub ShowLocation\n 2   locID = map[rowP][colP]\n 3   If (locID = 1) Then\n 4     msg = \"You're in a grass field.\"\n 5   ElseIf (locID = 2) Then\n 6     msg = \"You're in a forest.\"\n 7   ElseIf (locID = 3) Then\n 8     msg = \"You're next to a volcano.\"\n 9   ElseIf (locID = 4) Then\n10     msg = \"You're in a cave.\"\n11   ElseIf (locID = 5) Then\n12     msg = \"You're in the rain.\"\n13   ElseIf (locID = 6) Then\n14     msg = \"You're in a flower field.\"\n15   ElseIf (locID = 7) Then\n16     gameOver = 1\n17     msg = \"Congratulations! You found the treasure!\"\n18   Else\n19     msg = \"You're in the clear!\"\n20   EndIf\n21\n22   Shapes.SetText(txtID, \"[\" + moveNumber + \"]: \" + msg)\n23 EndSub\n```", "```\n 1 Sub OnButtonClicked\n 2   btnID = Controls.LastClickedButton\n 3\n 4   If (btnID = btnNew) Then\n 5     NewGame()\n 6   ElseIf (gameOver = 0) Then\n 7     moveNumber = moveNumber + 1\n 8\n 9     MovePlayer()     ' Finds the player's new row and column\n10\n11     If ((rowP < 1) Or (rowP > 10) Or (colP < 1) Or (colP > 10)) Then\n12       gameOver = 1\n13       Shapes.SetText(txtID, \"Sorry! You were eaten by the shark!\")\n14     Else\n15       ShowLocation() ' Tells the player their new position\n16     EndIf\n17   EndIf\n18 EndSub\n```", "```\n 1 Sub MovePlayer\n 2   shift = 0                  ' How much to shift direction\n 3   randNum = Math.GetRandomNumber(10)\n 4   If (randNum = 1) Then\n 5     shift = 1\n 6   ElseIf (randNum = 2) Then\n 7     shift = -1\n 8   EndIf\n 9\n10   If (btnID = btnN) Then     ' North\n11     rowP = rowP - 1\n12     colP = colP + shift\n13   ElseIf (btnID = btnS) Then ' South\n14     rowP = rowP + 1\n15     colP = colP + shift\n16   ElseIf (btnID = btnE) Then ' East\n17     colP = colP + 1\n18     rowP = rowP + shift\n19   ElseIf (btnID = btnW) Then ' West\n20     colP = colP - 1\n21     rowP = rowP + shift\n22   EndIf\n23 EndSub\n```"]