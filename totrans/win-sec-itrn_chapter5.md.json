["```\nPS> **$domain_sid = Get-NtSid -SecurityAuthority Nt -RelativeIdentifier 32**\nPS> **Get-NtSidName $domain_sid**\nDomain  NameSource  NameUse Sddl\n------  ----------  ------- ----\nBUILTIN BUILTIN Account Domain  S-1-5-32 \n```", "```\nPS> **$user_sid =** **Get-NtSid -BaseSid $domain_sid -RelativeIdentifier 545**\nPS> **Get-NtSidName $user_sid**\nDomain  Name  Source  NameUse Sddl\n------  ----  ------  ------- ----\nBUILTIN Users Account Alias   S-1-5-32-545\n\nPS> **$user_sid.Name**\nBUILTIN\\Users \n```", "```\nPS> **Get-NtSid -BaseSid $domain_sid -RelativeIdentifier 544**\nName                   Sid\n----                    ---\nBUILTIN\\Administrators S-1-5-32-544 \n```", "```\nPS> **Get-NtSid -KnownSid BuiltinAdministrators**\nName                   Sid\n----                   ---\nBUILTIN\\Administrators S-1-5-32-544 \n```", "```\nPS> **ConvertFrom-NtAceCondition 'WIN://TokenId == \"XYZ\"' | Out-HexDump -ShowAll**\n          00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F  - 0123456789ABCDEF\n-----------------------------------------------------------------------------\n00000000: 61 72 74 78 F8 1A 00 00 00 57 00 49 00 4E 00 3A  - artx.....W.I.N.:\n00000010: 00 2F 00 2F 00 54 00 6F 00 6B 00 65 00 6E 00 49  - ././.T.o.k.e.n.I\n00000020: 00 64 00 10 06 00 00 00 58 00 59 00 5A 00 80 00  - .d......X.Y.Z... \n```", "```\nPS> **$world = Get-NtSid -KnownSid World**\nPS> **$sd = New-NtSecurityDescriptor -Owner $world -Group $world -Type File**\nPS> **$sd | Format-Table**\nOwner    DACL ACE Count SACL ACE Count Integrity Level\n-----    -------------- -------------- ---------------\nEveryone NONE           NONE           NONE \n```", "```\n❶ PS> **$user = Get-NtSid**\n❷ PS> **Add-NtSecurityDescriptorAce $sd -Sid $user -Access WriteData, ReadData**\nPS> **Add-NtSecurityDescriptorAce $sd -KnownSid Anonymous -Access GenericAll**\n**-Type Denied**\nPS> **Add-NtSecurityDescriptorAce $sd -Name \"Everyone\" -Access ReadData**\n❸ PS> **Add-NtSecurityDescriptorAce $sd -KnownSid World -Access Delete**\n**-Type Audit -Flags FailedAccess**\n❹ PS> **Set-NtSecurityDescriptorIntegrityLevel $sd Low**\n❺ PS> **Set-NtSecurityDescriptorControl $sd DaclAutoInherited, SaclProtected**\n❻ PS> **$sd | Format-Table**\nOwner    DACL ACE Count SACL ACE Count Integrity Level\n-----    -------------- -------------- ---------------\nEveryone 3              2              Low\n\n❼ PS> **Get-NtSecurityDescriptorControl $sd**\nDaclPresent, SaclPresent, DaclAutoInherited, SaclProtected\n\n❽ PS> **Get-NtSecurityDescriptorDacl $sd | Format-Table**\nType    User                         Flags Mask\n----    ----                         ----- ----\nAllowed GRAPHITE\\user                None  00000003\nDenied  NT AUTHORITY\\ANONYMOUS LOGON None  10000000\nAllowed Everyone                     None  00000001\n\n❾ PS> **Get-NtSecurityDescriptorSacl $sd | Format-Table**\nType           User                                Flags        Mask\n----           ----                                -----        ----\nAudit          Everyone                            FailedAccess 00010000\nMandatoryLabel Mandatory Label\\Low Mandatory Level None         00000001 \n```", "```\nPS> **Test-NtSecurityDescriptor $sd -DaclCanonical**\nFalse\n\nPS> **Edit-NtSecurityDescriptor $sd -CanonicalizeDacl**\nPS> **Test-NtSecurityDescriptor $sd -DaclCanonical**\nTrue\n\nPS> **Get-NtSecurityDescriptorDacl $sd | Format-Table**\nType    User                         Flags Mask\n----    ----                         ----- ----\nDenied  NT AUTHORITY\\ANONYMOUS LOGON None  10000000\nAllowed GRAPHITE\\user                None  00000003\nAllowed Everyone                     None  00000001 \n```", "```\nPS> **Format-NtSecurityDescriptor $sd -ShowAll**\nType: File\nControl: DaclPresent, SaclPresent\n\n<Owner>\n - Name  : Everyone\n - Sid   : S-1-1-0\n\n<Group>\n - Name  : Everyone\n - Sid   : S-1-1-0\n\n<DACL> (Auto Inherited)\n - Type  : Denied\n - Name  : NT AUTHORITY\\ANONYMOUS LOGON\n - SID   : S-1-5-7\n - Mask  : 0x10000000\n - Access: GenericAll\n - Flags : None\n\n - Type  : Allowed\n - Name  : GRAPHITE\\user\n - SID   : S-1-5-21-2318445812-3516008893-216915059-1002\n - Mask  : 0x00000003\n - Access: ReadData|WriteData\n - Flags : None\n\n - Type  : Allowed\n - Name  : Everyone\n - SID   : S-1-1-0\n - Mask  : 0x00000001\n - Access: ReadData\n - Flags : None\n\n<SACL> (Protected)\n - Type  : Audit\n - Name  : Everyone\n - SID   : S-1-1-0\n - Mask  : 0x00010000\n - Access: Delete\n - Flags : FailedAccess\n\n<Mandatory Label>\n - Type  : MandatoryLabel\n - Name  : Mandatory Label\\Low Mandatory Level\n - SID   : S-1-16-4096\n - Mask  : 0x00000001\n - Policy: NoWriteUp\n - Flags : None \n```", "```\nPS> **Format-NtSecurityDescriptor $sd -ShowAll -Summary**\n<Owner> : Everyone\n<Group> : Everyone\n<DACL>\n<DACL> (Auto Inherited)\nNT AUTHORITY\\ANONYMOUS LOGON: (Denied)(None)(GenericAll)\nGRAPHITE\\user: (Allowed)(None)(ReadData|WriteData)\nEveryone: (Allowed)(None)(ReadData)\n<SACL> (Protected)\nEveryone: (Audit)(FailedAccess)(Delete)\n<Mandatory Label>\nMandatory Label\\Low Mandatory Level: (MandatoryLabel)(None)(NoWriteUp) \n```", "```\nPS> **Format-NtSecurityDescriptor $sd -SDKName -SecurityInformation Dacl**\nType: File\nControl: SE_DACL_PRESENT|SE_SACL_PRESENT|SE_DACL_AUTO_INHERITED|SE_SACL_PROTECTED\n<DACL> (Auto Inherited)\n - Type  : ACCESS_DENIED_ACE_TYPE\n - Name  : NT AUTHORITY\\ANONYMOUS LOGON\n - SID   : S-1-5-7\n - Mask  : 0x10000000\n - Access: GENERIC_ALL\n - Flags : NONE\n\n - Type  : ACCESS_ALLOWED_ACE_TYPE\n - Name  : GRAPHITE\\user\n - SID   : S-1-5-21-2318445812-3516008893-216915059-1002\n - Mask  : 0x00000003\n - Access: FILE_READ_DATA|FILE_WRITE_DATA\n - Flags : NONE\n\n - Type  : ACCESS_ALLOWED_ACE_TYPE\n - Name  : Everyone\n - SID   : S-1-1-0\n - Mask  : 0x00000001\n - Access: FILE_READ_DATA\n - Flags : NONE \n```", "```\nPS> **Format-NtSecurityDescriptor $sd -ShowAll -Summary -Container**\n<Owner> : Everyone\n<Group> : Everyone\n<DACL>\nNT AUTHORITY\\ANONYMOUS LOGON: (Denied)(None)(GenericAll)\n❶ GRAPHITE\\user: (Allowed)(None)(ListDirectory|AddFile)\nEveryone: (Allowed)(None)(ListDirectory)\n`--snip--` \n```", "```\nPS> **Show-NtSecurityDescriptor $sd** \n```", "```\nPS> **$ba = ConvertFrom-NtSecurityDescriptor $sd**\nPS> **$ba | Out-HexDump -ShowAll**\n          00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F  - 0123456789ABCDEF\n-----------------------------------------------------------------------------\n00000000: 01 00 14 A4 98 00 00 00 A4 00 00 00 14 00 00 00  - ................\n00000010: 44 00 00 00 02 00 30 00 02 00 00 00 02 80 14 00  - D.....0.........\n00000020: 00 00 01 00 01 01 00 00 00 00 00 01 00 00 00 00  - ................\n00000030: 11 00 14 00 01 00 00 00 01 01 00 00 00 00 00 10  - ................\n00000040: 00 10 00 00 02 00 54 00 03 00 00 00 01 00 14 00  - ......T.........\n00000050: 00 00 00 10 01 01 00 00 00 00 00 05 07 00 00 00  - ................\n00000060: 00 00 24 00 03 00 00 00 01 05 00 00 00 00 00 05  - ..$.............\n00000070: 15 00 00 00 F4 AC 30 8A BD 09 92 D1 73 DC ED 0C  - ......0.....s...\n00000080: EA 03 00 00 00 00 14 00 01 00 00 00 01 01 00 00  - ................\n00000090: 00 00 00 01 00 00 00 00 01 01 00 00 00 00 00 01  - ................\n000000A0: 00 00 00 00 01 01 00 00 00 00 00 01 00 00 00 00  - ................ \n```", "```\nPS> **New-NtSecurityDescriptor -Byte $ba** \n```", "```\nPS> **$sddl =** **Format-NtSecurityDescriptor $sd -ToSddl -ShowAll**\nPS> **$sddl**\nO:WDG:WDD:AI(D;;GA;;;AN)(A;;CCDC;;;S-1-5-21-2318445812-3516008893-216915059-\n1002)(A;;CC;;;WD)S:P(AU;FA;SD;;;WD)(ML;;NW;;;LW) \n```", "```\nPS> **$sddl -split \"(?=O:)|(?=G:)|(?=D:)|(?=S:)|(?=\\()\"**\nO:WD\nG:WD\nD:AI\n  (D;;GA;;;AN)\n  (A;;CCDC;;;S-1-5-21-2318445812-3516008893-216915059-1002)\n  (A;;CC;;;WD)\nS:P\n  (AU;FA;SD;;;WD)\n  (ML;;NW;;;LW) \n```", "```\nPS> **Get-NtSid -Sddl \"WD\"**\nName     Sid\n----     ---\nEveryone S-1-1-0 \n```", "```\nPS> **Get-NtSid -Sddl \"S-1-5-21-2318445812-3516008893-216915059-1002\" -ToName**\nGRAPHITE\\user \n```", "```\nACLFlags(ACE0)(ACE1)...(ACEn) \n```", "```\n(Type;Flags;Access;ObjectType;InheritedObjectType;SID[;ExtraData]) \n```", "```\n(OA;;CC;2f097591-a34f-4975-990f-00f0906b07e0;;WD) \n```", "```\n(ZA;;GA;;;WD;(WIN://TokenId == \"XYZ\")) \n```", "```\n\"AttrName\",AttrType,AttrFlags,AttrValue(,AttrValue...) \n```", "```\nS:(RA;;;;;WD;(\"Classification\",TS,0x3,\"TopSecret\",\"MostSecret\")) \n```", "```\nPS> **ConvertFrom-NtSecurityDescriptor $sd -AsBase64 -InsertLineBreaks**\nAQAUpJgAAACkAAAAFAAAAEQAAAACADAAAgAAAAKAFAAAAAEAAQEAAAAAAAEAAAAAEQAUAAEAAAAB\nAQAAAAAAEAAQAAACAFQAAwAAAAEAFAAAAAAQAQEAAAAAAAUHAAAAAAAkAAMAAAABBQAAAAAABRUA\nAAD0rDCKvQmS0XPc7QzqAwAAAAAUAAEAAAABAQAAAAAAAQAAAAABAQAAAAAAAQAAAAABAQAAAAAA\nAQAAAAA= \n```", "```\nPS> **$ba = ConvertFrom-NtSid -Sid \"S-1-1-0\"** \n```", "```\nPS> **Get-NtSid -Byte $ba** \n```", "```\n❶ PS> **$sid = Get-NtSid -SecurityAuthority Nt -RelativeIdentifier 100, 200, 300**\nPS> **$ba = ConvertFrom-NtSid -Sid $sid**\nPS> **$ba | Out-HexDump -ShowAll**\n          00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F  - 0123456789ABCDEF\n-----------------------------------------------------------------------------\n00000000: 01 03 00 00 00 00 00 05 64 00 00 00 C8 00 00 00  -........d.......\n00000010: 2C 01 00 00                                      - ,...\n\nPS> **$stm = [System.IO.MemoryStream]::new($ba)**\n❷ PS> **$reader = [System.IO.BinaryReader]::new($stm)**\n\nPS> **$revision = $reader.ReadByte()**\n❸ PS> **if ($revision -ne 1) {**\n **throw \"Invalid SID revision\"**\n**}**\n\n❹ PS> **$rid_count = $reader.ReadByte()**\n❺ PS> **$auth = $reader.ReadBytes(6)**\nPS> **if ($auth.Length -ne 6) {**\n **throw \"Invalid security authority length\"**\n**}**\n\nPS> **$rids = @()**\n❻ PS> **while($rid_count -gt 0) {**\n **$rids += $reader.ReadUInt32()**\n **$rid_count--**\n**}**\n\n❼ PS> **$new_sid = Get-NtSid -SecurityAuthorityByte $auth -RelativeIdentifier $rids**\nPS> **$new_sid -eq $sid**\nTrue \n```", "```\nPS> **function Get-AccountSids {**\n **param(**\n **[parameter(Mandatory)]**\n❶ **$BaseSid,**\n **[int]$MinRid = 0,**\n **[int]$MaxRid = 256**\n **)**\n\n **$i = $MinRid**\n\n **while($i -lt $MaxRid) {**\n **$sid = Get-NtSid -BaseSid $BaseSid -RelativeIdentifier $i**\n **$name = Get-NtSidName $sid**\n❷ **if ($name.Source -eq \"Account\") {**\n **[PSCustomObject]@{**\n **Sid = $sid;**\n **Name = $name.QualifiedName;**\n **Use = $name.NameUse**\n **}**\n **}**\n **$i++**\n **}**\n**}**\n\n❸ PS> **$sid = Get-NtSid -SecurityAuthority Nt**\nPS> **Get-AccountSids -BaseSid $sid**\nSid          Name                   Use\n----         ----                   ---\nS-1-5-1      NT AUTHORITY\\DIALUP    WellKnownGroup\nS-1-5-2      NT AUTHORITY\\NETWORK   WellKnownGroup\nS-1-5-3      NT AUTHORITY\\BATCH     WellKnownGroup\n`--snip--`\n\n❹ PS> **$sid = Get-NtSid -BaseSid $sid -RelativeIdentifier 32**\nPS> **Get-AccountSids -BaseSid $sid -MinRid 512 -MaxRid 1024**\nSid          Name                   Use\n----         ----                   ---\nS-1-5-32-544 BUILTIN\\Administrators Alias\nS-1-5-32-545 BUILTIN\\Users          Alias\nS-1-5-32-546 BUILTIN\\Guests         Alias\n`--snip--` \n```"]