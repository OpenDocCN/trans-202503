["```\nerror_log('Some event has happened!');\n```", "```\n$ **cat php_error.log**\n[28-Jan-2025 22:08:16 UTC] Some event has happened!\n```", "```\nsyslog(LOG_WARNING, 'warning message from Matt');\n```", "```\n$ **grep \"from Matt\" system.log**\nJan 28 22:15:15 matts-MacBook-Pro-2 php[4304]: warning message from Matt\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$logFile = __DIR__ . '/../logs/mylogs.log';\n\n$logger = new Logger('demo');\n$logger->pushHandler(new StreamHandler($logFile));\n\n❶ $logger->warning('I am a warning.');\n$logger->error('I am a test error!');\n```", "```\n[2025-01-28T23:26:51.686815 + 00:00] demo.WARNING: I am a warning. [] []\n[2025-01-28T23:26:51.688375 + 00:00] demo.ERROR: I am a test error! [] []\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$logFile = __DIR__ . '/../logs/mylogs.log';\n\n$demoLogger = new Logger('demo');\n$demoLogger->pushHandler(new StreamHandler($logFile));\n\n❶ $securityLogger = $demoLogger->withName('security');\n\n$demoLogger->error('I am a test error!');\n$securityLogger->warning('invalid username entered');\n```", "```\n[2025-01-30T08:54:05.091158 + 00:00]\n  demo.ERROR: I am a test error! [] []\n[2025-01-30T08:54:05.092702 + 00:00]\n  security.WARNING: invalid username entered [] []\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n❶ use Monolog\\Level;\n\n❷ $immediateActionFile = __DIR__ . '/../logs/immediateActions.log';\n$logFile = __DIR__ . '/../logs/infoActions.log';\n$debugFile = __DIR__ . '/../logs/debug.log';\n\n❸ $handler1 = new StreamHandler($immediateActionFile, Level::Critical);\n$handler2 = new StreamHandler($logFile, Level::Info, false);\n$handler3 = new StreamHandler($debugFile);\n\n❹ $logger = new Logger('logger');\n$logger->pushHandler($handler3);\n$logger->pushHandler($handler2);\n$logger->pushHandler($handler1);\n\n❺ $logger->emergency('0 emergency');\n$logger->alert('1 alert');\n$logger->critical('2 critical');\n$logger->error('3 error');\n$logger->warning(' 4 warning');\n$logger->notice(' 5 notice');\n$logger->info('6 info');\n$logger->debug('7 debug');\n```", "```\n[2025-02-13T10:50:52.818515 + 00:00] logger.EMERGENCY: 0 emergency [] []\n[2022-02-13T10:50:52.820236 + 00:00] logger.ALERT: 1 alert [] []\n[2022-02-13T10:50:52.820352 + 00:00] logger.CRITICAL: 2 critical [] []\n```", "```\n[2025-02-13T10:50:52.818515 + 00:00] logger.EMERGENCY: 0 emergency [] []\n[2025-02-13T10:50:52.820236 + 00:00] logger.ALERT: 1 alert [] []\n[2025-02-13T10:50:52.820352 + 00:00] logger.CRITICAL: 2 critical [] []\n[2025-02-13T10:50:52.820454 + 00:00] logger.ERROR: 3 error [] []\n[2025-02-13T10:50:52.820509 + 00:00] logger.WARNING:  4 warning [] []\n[2025-02-13T10:50:52.820563 + 00:00] logger.NOTICE:  5 notice [] []\n[2025-02-13T10:50:52.820617 + 00:00] logger.INFO: 6 info [] []\n```", "```\n[2025-02-13T10:50:52.820672 + 00:00] logger.DEBUG: 7 debug [] []\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass Product\n{\n    private string $name;\n    private float $price;\n\n    public function __construct(string $name, float $price)\n    {\n      ❶ if ($price < 0) {\n            throw new \\Exception(\n                'attempting to set price to a negative value');\n        }\n\n        $this->price = $price;\n        $this->name = $name;\n    }\n}\n```", "```\n{\n    \"autoload\": {\n        \"psr-4\": {\n            \"Mattsmithdev\\\\\": \"src\"\n        }\n    }\n}\n```", "```\n$ **composer dump-autoload**\n$ **composer require monolog/monolog**\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nuse Mattsmithdev\\Product;\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$debugFile = __DIR__ . '/../logs/debug.log';\n$logger = new Logger('demo');\n$logger->pushHandler(new StreamHandler($debugFile));\n\ntry {\n    $p1 = new Product('hammer', -1);\n} catch (\\Exception $e) {\n  ❶ $logger->error('problem creating new product', ['exception' => $e]);\n}\n```", "```\n[2025-01-25T11:48:46.813377 + 00:00] demo.ERROR: problem creating new product\n{\"exception\":\"[object] (Exception(code: 0): attempting to set price to a\nnegative value at /Users/matt/src/Product.php:15)\"} []\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nuse Monolog\\Logger;\nuse Zwijn\\Monolog\\Handler\\LogdnaHandler;\n\n❶ $INGESTION_KEY='your-MEZMO-ingestion-key-goes-here';\n\n$generalLogger = new Logger('general');\n$handler = new LogdnaHandler($INGESTION_KEY, 'host-mgw.com');\n$generalLogger->pushHandler($handler);\n\n❷ $generalLogger->emergency('0 emergency');\n$generalLogger->alert('1 alert');\n$generalLogger->critical('2 critical');\n$generalLogger->error('3 error');\n$generalLogger->warning(' 4 warning');\n$generalLogger->notice(' 5 notice');\n$generalLogger->info('6 info');\n$generalLogger->debug('7 debug');\n\n❸ $securityLogger = $generalLogger->withName('security');\n$securityLogger->debug('7 debug - from security channel',\n    ['context-1' => 'some data']);\n```"]