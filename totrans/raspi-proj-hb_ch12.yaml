- en: '**12'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**12'
- en: Temperature and Humidity Data Logger**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 温湿度数据记录器**
- en: In this project, you’re going to build a data logger that automatically stores
    data on temperature and humidity. You’ll learn how to read and log data from your
    environment, which is useful in numerous applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将构建一个自动存储温湿度数据的数据记录器。你将学习如何读取和记录环境数据，这在许多应用中都非常有用。
- en: '![image](../images/f0154-01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0154-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需零件**'
- en: Raspberry Pi
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派
- en: Breadboard
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 面包板
- en: DHT22 temperature and humidity sensor (DHT11 and AM2302 also work)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: DHT22 温湿度传感器（DHT11 和 AM2302 也可以使用）
- en: 4.7 kΩ resistor
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 4.7 kΩ 电阻
- en: Jumper wires
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 跳线
- en: '**SOFTWARE REQUIRED**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需软件**'
- en: Adafruit_Python_DHT library
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Adafruit_Python_DHT 库
- en: You’ll use the DHT22 temperature and humidity sensor to collect data, which
    will then be saved in a *.txt* file that you can then use to build charts, graphs,
    and other visualizations. This project gives you the basics of data collection,
    which is useful in many different applications that use sensors—for example, monitoring
    soil dampness, taking the temperature of water in a fish tank, or even registering
    the exact time unexpected movement was detected around your house. You can apply
    the concepts from this project to any sensor.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你将使用 DHT22 温湿度传感器来收集数据，这些数据将被保存为一个 *.txt* 文件，之后你可以用它来构建图表、图形和其他可视化内容。这个项目为你提供了数据收集的基础知识，这在许多使用传感器的不同应用中都非常有用——例如，监测土壤湿度、测量鱼缸中水的温度，甚至记录家周围检测到意外移动的确切时间。你可以将这个项目中的概念应用于任何传感器。
- en: '**INTRODUCING THE DHT22 SENSOR**'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**介绍 DHT22 传感器**'
- en: The DHT22 (shown in [Figure 12-1](ch12.xhtml#ch12fig1)) is a digital temperature
    and humidity sensor with a built-in chip that converts analog to digital signals,
    so there’s no need to use an analog-to-digital converter. This makes wiring really
    simple.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: DHT22（如[图 12-1](ch12.xhtml#ch12fig1)所示）是一个数字温湿度传感器，内置芯片将模拟信号转换为数字信号，因此无需使用模拟到数字转换器。这使得接线非常简单。
- en: '![image](../images/f0155-01.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0155-01.jpg)'
- en: '**FIGURE 12-1:** DHT22 temperature and humidity sensor'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 12-1：** DHT22 温湿度传感器'
- en: '**WIRING THE CIRCUIT**'
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**接线电路**'
- en: This is a simple circuit that just has the DHT22 sensor wired to your Pi via
    a resistor. Follow these instructions, using the circuit diagram in [Figure 12-2](ch12.xhtml#ch12fig2)
    as a reference.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的电路，只有 DHT22 传感器通过电阻接入你的 Pi。按照这些指示操作，并以[图 12-2](ch12.xhtml#ch12fig2)中的电路图为参考。
- en: Connect GND and 3.3 V on the Pi to the breadboard’s blue and red power rails,
    respectively.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 GND 和 3.3 V 分别连接到树莓派和面包板的蓝色和红色电源轨。
- en: Connect the DHT22 sensor according to the following table, with pins starting
    at 1 from left to right when the sensor is facing you. Make sure to wire the resistor
    between pin 2 of the sensor and the breadboard’s red power rail.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据以下表格连接 DHT22 传感器，当传感器面对你时，针脚从左到右编号为 1。确保将电阻接在传感器的第 2 针和面包板的红色电源轨之间。
- en: '| **DHT22** | **RASPBERRY PI** |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| **DHT22** | **树莓派** |'
- en: '| --- | --- |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 1 | 3.3 V |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 3.3 V |'
- en: '| 2 | GPIO 4; also connect to 3.3 V through a 4.7 kΩ resistor |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 2 | GPIO 4；也通过一个 4.7 kΩ 电阻连接到 3.3 V |'
- en: '| 3 | Don’t connect |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 不连接 |'
- en: '| 4 | GND |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 4 | GND |'
- en: '![image](../images/f0156-01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0156-01.jpg)'
- en: '**FIGURE 12-2:** Wiring the DHT22 sensor to the Pi'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 12-2：** 将 DHT22 传感器接入 Pi'
- en: '**WRITING THE SCRIPT**'
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**编写脚本**'
- en: You’ll use the Adafruit_Python_DHT library, which allows you to easily control
    the DHT22 sensor and read the data.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你将使用 Adafruit_Python_DHT 库，它使你可以轻松控制 DHT22 传感器并读取数据。
- en: '**Installing the DHT22 Library**'
  id: totrans-31
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**安装 DHT22 库**'
- en: This library can also be used with similar sensors, like DHT11 and AM2302 (the
    wired version of the DHT22 from Adafruit), if you’re using those instead.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是类似的传感器，如 DHT11 和 AM2302（Adafruit 版本的 DHT22 有线版本），则该库也可以使用。
- en: 'Open the terminal and enter the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 打开终端并输入以下命令：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'From the terminal, navigate to the desktop, make a folder called *Libraries*
    if you haven’t already, and move into the newly created folder as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中，导航到桌面，如果还没有的话，创建一个名为 *Libraries* 的文件夹，并进入新创建的文件夹，方法如下：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Clone the library by entering the following command:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 克隆该库，输入以下命令：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Finally, move to the *Adafruit_Python_DHT* directory and install the library
    with these commands:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，进入 *Adafruit_Python_DHT* 目录并使用以下命令安装该库：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: With the necessary library installed, it’s time to write the script.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 安装好必要的库后，就可以开始编写脚本了。
- en: '**Entering the Script**'
  id: totrans-42
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**输入脚本**'
- en: 'The DHT22 library is not supported by Python 3, so you need to use Python 2.7\.
    Open **Python 2.7 (IDLE)** and go to **File** ▸ **New File** to create a new script.
    Copy the code from [Listing 12-1](ch12.xhtml#ch12list1) to the Python Editor and
    save the script as *temperature_humidity_data_logger.py* inside the *Sensors*
    folder (remember that you can download all the scripts at *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: DHT22 库不支持 Python 3，因此你需要使用 Python 2.7。打开 **Python 2.7 (IDLE)** 并选择 **File**
    ▸ **New File** 来创建一个新脚本。将 [清单 12-1](ch12.xhtml#ch12list1) 中的代码复制到 Python 编辑器中，并将脚本保存为
    *temperature_humidity_data_logger.py*，保存在 *Sensors* 文件夹中（记住你可以从 *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*
    下载所有脚本）：
- en: '**LISTING 12-1:** The temperature and humidity data logger script'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单 12-1：** 温湿度数据记录脚本'
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: First, you import the Adafruit_DHT library ➊ you just installed, as well as
    the built-in time library. Then, at ➋, you uncomment the line that corresponds
    to the sensor you’re using. If you’re using DHT22, you don’t need to change anything.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要导入你刚刚安装的 Adafruit_DHT 库 ➊，以及内建的 time 库。然后，在 ➋ 处取消注释与你使用的传感器相对应的行。如果你使用的是
    DHT22，就不需要更改任何内容。
- en: The line at ➎ reads the temperature and humidity and saves the readings in the
    `temperature` and `humidity` variables, respectively. If you want your temperature
    readings in Fahrenheit, uncomment the line at ➏ to make the conversion from Celsius.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: ➎ 处的代码读取温度和湿度，并将读数分别保存到 `temperature` 和 `humidity` 变量中。如果你希望温度以华氏度为单位，取消注释 ➏
    处的代码进行从摄氏度到华氏度的转换。
- en: 'Sometimes the sensor can’t read the data and sends a `null` result to the Pi.
    The `if` statement at ➐ guarantees that the Pi saves data only if it is not `null`.
    You also timestamp each reading using `time.strftime("%H:%M:%S %d/%m/%Y")`—the
    argument in the parentheses here indicates the format you want the time and date
    to appear in: hours, minutes, seconds, day, month, and year, respectively.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 有时传感器无法读取数据并向树莓派发送 `null` 结果。位于 ➐ 的 `if` 语句确保只有在数据不为 `null` 时，树莓派才会保存数据。你还可以使用
    `time.strftime("%H:%M:%S %d/%m/%Y")` 为每个读取加上时间戳——括号中的参数表示你希望时间和日期显示的格式：分别是小时、分钟、秒、日期、月份和年份。
- en: This script reads and records the temperature and humidity every 10 seconds,
    but you can change this at ➒ by changing the delay time. The sensor is capable
    of taking readings every 2 seconds, but no faster than that.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本每 10 秒钟读取并记录一次温湿度，但你可以通过修改 ➒ 处的延时来更改这个时间。传感器能够每 2 秒钟读取一次数据，但速度不会更快。
- en: '**Creating, Writing, and Closing .txt files**'
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**创建、写入和关闭 .txt 文件**'
- en: The DHT22 temperature and humidity readings are automatically saved in a *.txt*
    file that you create with the `open()` function ➌ and store in the `file` variable.
    This function accepts the name you want to give the file as an argument and, in
    this case, a `'``w'` telling Python you want this file to be in *write mode*,
    meaning the program can write and make changes to the file. The write mode overwrites
    existing files with the same name.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: DHT22 温湿度数据会自动保存到一个 *.txt* 文件中，你可以使用 `open()` 函数 ➌ 创建该文件，并将其存储在 `file` 变量中。该函数接受你想要给文件命名的参数，并且在此情况下，`'w'`
    表示文件处于 *写入模式*，这意味着程序可以写入并更改该文件。写入模式会覆盖同名的现有文件。
- en: '**NOTE**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Every time you run the code, it will overwrite whatever was already in the*
    sensor_readings.txt *file. If you don’t want this to happen, change the filename
    at* ➍ *to create a new file each time you run the script.*'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*每次运行代码时，它会覆盖掉之前在* sensor_readings.txt *文件中的内容。如果你不希望发生这种情况，可以修改 ➍ 处的文件名，每次运行脚本时创建一个新文件。*'
- en: The `file.write()` function writes to the file and accepts a string as an argument.
    For example, with `file.write('time and date, temperature, humidity\n')` at ➍,
    you write “time and date, temperature, humidity” into the file. At ➐, you write
    the sensor data to the file and at➑ the timestamp. The `\n` tells Python to start
    the next display text on the next line, known as a *newline*.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`file.write()` 函数用于写入文件，并接受一个字符串作为参数。例如，在 ➍ 处使用 `file.write(''time and date,
    temperature, humidity\n'')`，你会把 “time and date, temperature, humidity” 写入文件。在
    ➐ 处，你将传感器数据写入文件，在 ➑ 处添加时间戳。`\n` 告诉 Python 从下一行开始显示文本，这叫做 *换行*。'
- en: Finally, the `file.close()` function ➓ saves and closes the file.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`file.close()` 函数 ➓ 保存并关闭文件。
- en: '**Running the Script**'
  id: totrans-56
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**运行脚本**'
- en: Press **F5** or go to **Run** ▸ **Run Module** to run the script. Let the script
    run for a few hours to gather a decent amount of data, and when you’re happy with
    the data logging period, stop the script by pressing CTRL-C. You should then have
    a *sensor_readings.txt* file that contains all your data in your *Sensors* folder.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 按下**F5**或前往**运行** ▸ **运行模块**来运行脚本。让脚本运行几个小时以收集足够的数据，当你对数据记录的时长满意时，按下CTRL-C停止脚本。然后，你应该会在*传感器*文件夹中找到一个包含所有数据的*sensor_readings.txt*文件。
- en: '**TAKING IT FURTHER**'
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**进一步探讨**'
- en: 'In this project you’ve learned a very useful concept: data logging. Now you
    can use data logging in other monitoring projects. Here are some ideas:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你学到了一个非常实用的概念：数据记录。现在你可以在其他监控项目中使用数据记录。以下是一些想法：
- en: Use a PIR motion sensor that makes a timestamp every time it detects movement.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用一个每次检测到运动时都会生成时间戳的PIR运动传感器。
- en: Build a weather station data logger with the Sense HAT.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Sense HAT构建一个气象站数据记录器。
- en: Search for other monitoring sensor applications—for example, soil moisture,
    rain, and light sensors—to build a greenhouse data logger.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 寻找其他监控传感器应用程序——例如土壤湿度、降雨和光照传感器——来构建一个温室数据记录器。
