- en: '15'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Analyzing Spatial Data with PostGIS
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: '![](Images/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
- en: We now turn to *spatial data*, defined as information about the location, shape,
    and attributes of objects—points, lines, or polygons, for example—within a geographical
    space. In this chapter, you’ll learn how to construct and query spatial data using
    SQL, and you’ll be introduced to the PostGIS extension for PostgreSQL that enables
    support for spatial data types and functions.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Spatial data has become a critical piece of our world’s data ecosystem. A phone
    app can find nearby coffee shops because it queries a spatial database, asking
    it to return a list of shops within a certain distance of your location. Governments
    use spatial data to track the footprints of residential and business parcels;
    epidemiologists use it to visualize the spread of diseases.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: For our exercises, we’ll analyze the location of farmers’ markets across the
    United States as well as roads and waterways in Santa Fe, New Mexico. You’ll learn
    how to construct and query spatial data types and incorporate map projections
    and grid systems. You’ll receive tools to glean information from spatial data,
    similar to how you’ve analyzed numbers and text.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: We’ll start by setting up PostGIS. All code and data for the exercises are available
    with the book’s resources at [https://nostarch.com/practical-sql-2nd-edition/](https://nostarch.com/practical-sql-2nd-edition/).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Enabling PostGIS and Creating a Spatial Database
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PostGIS is a free, open source project created by the Canadian geospatial company
    Refractions Research and maintained by an international team of developers under
    the Open Source Geospatial Foundation (OSGeo). The GIS portion of its name refers
    to *geographic information system*, defined as a system that allows for storing,
    editing, analyzing, and displaying spatial data. You’ll find documentation and
    updates at [https://postgis.net/](https://postgis.net/).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: If you installed PostgreSQL following the steps for Windows, macOS, or the Ubuntu
    flavor of Linux in Chapter 1, PostGIS should be on your machine. If you installed
    PostgreSQL some other way on Windows or macOS or if you’re on another Linux distribution,
    follow the installation instructions at [https://postgis.net/install/](https://postgis.net/install/).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: To enable PostGIS on your `analysis` database, open pgAdmin’s Query Tool and
    run the statement in [Listing 15-1](#listing15-1).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Listing 15-1: Loading the PostGIS extension'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: You’ll see the message `CREATE EXTENSION`, advising that your database has been
    updated to include spatial data types and analysis functions. Run `SELECT postgis_full_version();`
    to display the version number of PostGIS along with the versions of its installed
    components. The version won’t match your installed PostgreSQL version, and that’s
    okay.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Building Blocks of Spatial Data
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before you learn to query spatial data, let’s look at how it’s described in
    GIS and related data formats. This is important background, but if you want to
    dive straight into queries, you can skip to “Understanding PostGIS Data Types”
    later in the chapter and return here afterward.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: A point on a grid is the smallest building block of spatial data. The grid might
    be marked with x- and y-axes, or longitude and latitude if we’re using a map.
    A grid could be flat with two dimensions, or it could describe a three-dimensional
    space such as a cube. In some data formats, such as the JavaScript-based *GeoJSON*,
    a point may have attributes in addition to its location. We could describe a grocery
    store with a point containing its longitude and latitude as well as attributes
    for the store’s name and hours of operation.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Two-Dimensional Geometries
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Open Geospatial Consortium (OGC) and International Organization for Standardization
    (ISO) have created a *simple features access* model that describes standards for
    building and querying two- and three-dimensional shapes, sometimes referred to
    as *geometries*. PostGIS supports the standard.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the more common features, starting with points and building
    in complexity:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '**Point**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: A single location in a two- or three-dimensional plane. On maps, a Point is
    usually a dot marking a longitude and latitude.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**LineString**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Two or more Points, each connected by straight lines. A LineString can represent
    features such as a road, biking trail, or stream.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Polygon**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: A two-dimensional shape with three or more straight sides, each constructed
    from a LineString. On maps, Polygons represent objects such as nations, states,
    buildings, and bodies of water. A Polygon can have one or more interior Polygons
    that act as holes inside the larger Polygon.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**MultiPoint**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: A set of Points. A single MultiPoint object could represent multiple locations
    of a retailer with each store’s latitude and longitude.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**MultiLineString**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: A set of LineStrings. An example is a road that has several noncontinuous segments.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**MultiPolygon**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: A set of Polygons. A parcel of land that’s divided into parts by a road could
    be grouped in one MultiPolygon object instead of separate polygons.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 15-1](#figure15-1) shows an example of each feature. PostGIS enables
    functions to build, edit, and analyze these objects. These functions take a variety
    of inputs depending on their purpose, including latitude and longitude, specialized
    text and binary formats, and simple features. Some functions also take an optional
    *spatial reference system identifier (SRID)* that specifies the grid on which
    to place the objects.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '![f15001](Images/f15001.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-1: Visual examples of geometries'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: I’ll explain the SRID shortly, but first, let’s look at examples of an input
    used by PostGIS functions called *well-known text (WKT)*—a text-based format that
    represents a geometry.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: Well-Known Text Formats
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The OGC standard’s WKT format specifies a geometry type and its coordinates
    inside one or more sets of parentheses. The number of coordinates and parentheses
    varies depending on the type of geometry. [Table 15-1](#table15-1) shows examples
    of frequently used geometry types and their WKT formats. Longitude/latitude pairs
    are shown for the coordinates, but you might encounter grid systems that use other
    measures.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: OGC 标准的 WKT 格式在一个或多个括号内指定几何类型及其坐标。坐标和括号的数量根据几何类型的不同而有所不同。[表 15-1](#table15-1)展示了常用的几何类型及其
    WKT 格式的示例。坐标以经纬度对的形式展示，但你可能会遇到使用其他度量系统的网格系统。
- en: 'Table 15-1: Well-Known Text Formats for Geometries'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '表 15-1: 几何形状的著名文本格式'
- en: '| **Geometry** | **Format** | **Notes** |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| **几何** | **格式** | **备注** |'
- en: '| --- | --- | --- |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Point | `POINT (-74.9 42.7)` | A coordinate pair marking a point at −74.9
    longitude and 42.7 latitude. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 点 | `POINT (-74.9 42.7)` | 一个坐标对，标记一个位于 −74.9 经度和 42.7 纬度的点。 |'
- en: '| LineString | `LINESTRING (-74.9 42.7, -75.1 42.7)` | A straight line with
    endpoints marked by two coordinate pairs. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 线串 | `LINESTRING (-74.9 42.7, -75.1 42.7)` | 由两个坐标对标记的直线，表示线段的端点。 |'
- en: '| Polygon | `POLYGON ((-74.9 42.7, -75.1 42.7, -75.1 42.6, -74.9 42.7))` |
    A triangle outlined by three different pairs of coordinates. Although listed twice,
    the first and last pair are the same coordinates where we close the shape. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 多边形 | `POLYGON ((-74.9 42.7, -75.1 42.7, -75.1 42.6, -74.9 42.7))` | 由三个不同的坐标对勾画出的三角形。虽然列出了两次，但第一对和最后一对是相同的坐标，表示我们关闭了这个形状。
    |'
- en: '| MultiPoint | `MULTIPOINT (-74.9 42.7, -75.1 42.7)` | Two Points, one for
    each pair of coordinates. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 多点 | `MULTIPOINT (-74.9 42.7, -75.1 42.7)` | 两个点，每个坐标对对应一个点。 |'
- en: '| MultiLineString | `MULTILINESTRING ((-76.27 43.1, -76.06 43.08), (-76.2 43.3,
    -76.2 43.4, -76.4 43.1))` | Two LineStrings. The first has two points; the second
    has three. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 多线串 | `MULTILINESTRING ((-76.27 43.1, -76.06 43.08), (-76.2 43.3, -76.2 43.4,
    -76.4 43.1))` | 两条线串。第一条有两个点；第二条有三个点。 |'
- en: '| MultiPolygon | `MULTIPOLYGON (((-74.92 42.7, -75.06 42.71, -75.07 42.64,
    -74.92 42.7), (-75.0 42.66, -75.0 42.64, -74.98 42.64, -74.98 42.66, -75.0 42.66)))`
    | Two Polygons. The first is a triangle, and the second is a rectangle. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 多边形 | `MULTIPOLYGON (((-74.92 42.7, -75.06 42.71, -75.07 42.64, -74.92 42.7),
    (-75.0 42.66, -75.0 42.64, -74.98 42.64, -74.98 42.66, -75.0 42.66)))` | 两个多边形。第一个是三角形，第二个是矩形。
    |'
- en: These examples create simple shapes, as you’ll see when we construct them using
    PostGIS later in the chapter. In practice, complex geometries will comprise thousands
    of coordinates.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这些示例创建了简单的形状，正如你将在本章后面使用 PostGIS 构建它们时所看到的那样。实际上，复杂的几何形状将包含成千上万个坐标。
- en: Projections and Coordinate Systems
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 投影和坐标系
- en: Representing Earth’s spherical surface on a two-dimensional map is not easy.
    Imagine peeling the outer layer of Earth from the globe and trying to spread it
    on a table while keeping all pieces of the continents and oceans connected. Inevitably,
    you’d have to stretch some parts of the map. That’s what happens when cartographers
    create a map *projection* with its own *projected coordinate system*. A projection
    is simply a flattened representation of the globe with its own two-dimensional
    coordinate system.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在二维地图上表示地球的球面并非易事。想象一下，把地球的外层从地球仪上剥离下来，试图把它摊开在桌子上，同时保持所有大陆和海洋的连接。不可避免地，你需要拉伸地图的某些部分。这就是制图师在创建地图*投影*及其自己的*投影坐标系统*时所发生的情况。投影就是地球的一个扁平化表示，具有自己的二维坐标系统。
- en: Some projections represent the entire world; others are specific to regions
    or purposes. The *Mercator projection* has properties useful for navigation; Google
    Maps and other online maps use a variant of called *Web Mercator*. The math behind
    its transformation distorts land areas close to the North and South Poles, making
    them appear much larger than reality. The US Census Bureau uses the *Albers projection*,
    which minimizes distortion and is the one you see on TV in the United States as
    votes are tallied on election night.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一些投影表示整个世界；另一些则是针对特定区域或目的。*墨卡托投影*具有对导航有用的特性；Google 地图和其他在线地图使用一种变体，称为*Web墨卡托投影*。其转换背后的数学原理使得接近南北极的陆地面积发生了变形，导致它们看起来比实际要大得多。美国人口普查局使用*阿尔伯斯投影*，它最小化了失真，这是你在美国选举之夜看到的电视画面，选票在实时统计时就是使用这种投影的。
- en: Projections are derived from *geographic coordinate systems*, which define the
    grid of latitude, longitude, and height of any point on the globe along with factors
    including Earth’s shape. Whenever you obtain geographic data, it’s critical to
    know the coordinate systems it references so you provide the correct information
    when writing queries. Often, user documentation will name the coordinate system.
    Next, let’s look at how to specify the coordinate system in PostGIS.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 投影是从*地理坐标系统*派生的，地理坐标系统定义了地球上任意一点的纬度、经度和高度的网格，同时还包括地球形状等因素。每当您获取地理数据时，了解其所引用的坐标系统至关重要，这样您在编写查询时才能提供正确的信息。通常，用户文档会命名坐标系统。接下来，我们来看看如何在
    PostGIS 中指定坐标系统。
- en: Spatial Reference System Identifier
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 空间参考系统标识符
- en: When using PostGIS (and many GIS applications), you specify the coordinate system
    via its unique SRID. When you enabled the PostGIS extension at the beginning of
    this chapter, the process created the table ``spatial_ref_sys, which contains
    SRIDs as its primary key. The table also contains the column `srtext`, which includes
    a WKT representation of the spatial reference system plus other metadata.``
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '在使用 PostGIS（以及许多 GIS 应用程序）时，您通过其唯一的 SRID 来指定坐标系统。当您在本章开始时启用了 PostGIS 扩展时，系统会创建一个表``spatial_ref_sys``，该表以
    SRID 作为主键。该表还包含列`srtext`，其中包含空间参考系统的 WKT 表示及其他元数据。 '
- en: '[PRE1]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
