["```\nC:\\>azure config mode asm\ninfo:    Executing command config mode\ninfo:    New mode is asm\ninfo:    config mode command OK\n\nC:\\>azure\n--snip--\nhelp:    Current Mode: asm (Azure Service Management)\n\nC:\\>azure config mode arm\ninfo:    Executing command config mode\ninfo:    New mode is arm\ninfo:    config mode command OK\n\nC:\\>azure\n--snip--\nhelp:    Current Mode: arm (Azure Resource Management)\n```", "```\n➊ PS C:\\> $storeName = \"My\"\n➋ PS C:\\> $storeLocation = \"LocalMachine\"\n➌ PS C:\\> $certs = Get-ChildItem Cert:\\$storeLocation\\$storeName\n➍ PS C:\\> $certs\n   Thumbprint                                Subject\n   ----------                                -------\n   8D94450FB8C24B89BA04E917588766C61F1981D3  CN=AzureCert\n\n➎ PS C:\\> $ azureCert = Get-Item Cert:\\$storeLocation\\$storeName\\\n       8D94450FB8C24B89BA04E917588766C61F1981D3\n➏ PS C:\\> $azureCert\n   Thumbprint                                Subject\n   ----------                                -------\n   8D94450FB8C24B89BA04E917588766C61F1981D3  CN=AzureCert\n\n➐ PS C:\\> $azureCert.HasPrivateKey\n   True\n\n➑ PS C:\\> Set-AzureSubscription -SubscriptionName 'Target' -SubscriptionId\n       Subscription_ID -Certificate $azureCert\n   PS C:\\> Select-AzureSubscription -SubscriptionName 'Target'\n\n➒ PS C:\\> Get-AzureAccount\n   Id                                         Type Subscriptions\n   --                                         ---- -------------\n   8D94450FB8C24B89BA04E91758...       Certificate Subscription_IDs\n```", "```\nC:\\>azure account import \"Path_to_.publishsettings_File\"\n```", "```\n➊ PS C:\\> $key = Get-Credential\n➋ PS C:\\> $tenant = Tenant_ID\n➌ PS C:\\> Add-AzureRmAccount -Credential $key -ServicePrincipal -TenantId $tenant\n\n   Environment           : AzureCloud\n   Account               : Service_Principal_ID\n   TenantId              : Tenant_ID\n   SubscriptionId        :\n   SubscriptionName      :\n   CurrentStorageAccount :\n```", "```\nC:\\>azure login --service-principal --username \"Client_ID\"\n    --password \"Key\" --tenant \"Tenant_ID\"\n```", "```\n➊ PS C:\\> $thumbprint = Certificate_Thumbprint\n➋ PS C:\\> $appId = Service_Principal_ID\n➌ PS C:\\> $tenant = Tenant_ID\n➍ PS C:\\> Add-AzureRmAccount -ServicePrincipal -TenantId $tenant\n       -CertificateThumbprint $thumbprint -ApplicationId $appId\n\n   Environment           : AzureCloud\n   Account               : Application_ID\n   TenantId              : Tenant_ID\n   SubscriptionId        : Subscription_ID\n   SubscriptionName      :\n   CurrentStorageAccount :\n```", "```\nPS C:\\> Get-AzureSubscription -Current\n\nSubscriptionId            : d72ad5c5-835a-4908-8f79-b4f44e833760\nSubscriptionName          : Visitor Sign-In Production\nEnvironment               : AzureCloud\nDefaultAccount            : admin@burrough.com\nIsDefault                 : True\nIsCurrent                 : True\nTenantId                  : 7eb504c7-c387-4fb1-940e-64f733532be2\nCurrentStorageAccountName :\n```", "```\nPS C:\\> $context = Get-AzureRmContext\n```", "```\nPS C:\\> $context.Account\n```", "```\nPS C:\\> Get-AzureRmRoleAssignment\n```", "```\nPS C:\\> Get-AzureRmRoleDefinition\n```", "```\nC:\\>azure account show\n```", "```\nC:\\>azure role assignment list\n```", "```\nC:\\>azure role list\n```", "```\nPS C:\\> Get-AzureRmResourceGroup\n```", "```\nC:\\>azure group list\n```", "```\nPS C:\\> Get-AzureRmResource\n```", "```\nC:\\>azure resource list\n```", "```\n➊ PS C:\\> Get-AzureWebsite\n   Name       : anazurewebsite\n   State      : Running\n   Host Names : {anazurewebsite.azurewebsites.net}\n\n➋ PS C:\\> Get-AzureWebsite -Name anazurewebsite\n   Instances                       : {d160 ... 0bb13}\n   NumberOfWorkers                 : 1\n   DefaultDocuments                : {Default.htm, Default.html, index.htm...}\n➌ NetFrameworkVersion             : v4.0\n➍ PhpVersion                      : 5.6\n   RequestTracingEnabled           : False\n   HttpLoggingEnabled              : False\n   DetailedErrorLoggingEnabled     : False\n➎ PublishingUsername              : $anazurewebsite\n➏ PublishingPassword              : gIhh ... cLg8a\n   --snip--\n```", "```\nC:\\>azure site show \"sitename\"\n```", "```\nC:\\>azure site appsetting list \"sitename\"\n```", "```\nC:\\>azure webapp show \"group_name\" \"app_name\"\n```", "```\nPS C:\\> Get-AzureVM -ServiceName \"service_name\"\n```", "```\n➊ PS C:\\> $vm = Get-AzureRmVM -ResourceGroupName \"resource_group\" -Name \"name\"\n➋ PS C:\\> $vm\n   ResourceGroupName   : resource_group\n   ...\n   Name                : VM_name\n   Location            : centralus\n   --snip--\n   HardwareProfile     : {VmSize}\n   NetworkProfile      : {NetworkInterfaces}\n   OSProfile           : {ComputerName, AdminUsername, LinuxConfiguration, Secrets}\n   ProvisioningState   : Succeeded\n   StorageProfile      : {ImageReference, OsDisk, DataDisks}\n➌ PS C:\\> $vm.HardwareProfile\n   VmSize\n   ------\n   Basic_A0\n➍ PS C:\\> $vm.OSProfile\n   ComputerName         : VM_name\n   AdminUsername        : Username\n   AdminPassword        :\n   CustomData           :\n   WindowsConfiguration :\n   LinuxConfiguration   : Microsoft.Azure.Management.Compute.Models.LinuxConfiguration\n   Secrets              : {}\n➎ PS C:\\> $vm.StorageProfile.ImageReference\n   Publisher Offer        Sku       Version\n   --------- -----        ---       -------\n   Canonical UbuntuServer 16.04-LTS latest\n```", "```\nC:\\>azure vm show \"resource_group_name\" \"VM_name\"\n```", "```\nPS C:\\> Get-AzureStorageKey -StorageAccountName \"Storage_Account_Name\"\n```", "```\nPS C:\\> Get-AzureRmStorageAccountKey -ResourceGroupName\n    \"Resource_Group_Name\" -StorageAccountName\n    \"Storage_Account_Name\"\n```", "```\nC:\\>azure storage account keys list \"account_name\"\n```", "```\nC:\\>azure storage account keys list \"account_name\"\n```", "```\nC:\\>azure network nic show \"resource_group_name\" \"NIC_name\"\n```", "```\n➊ PS C:\\> $vm = Get-AzureVM -ServiceName vmasmtest\n➋ PS C:\\> Get-AzureEndpoint -VM $vm\n   LBSetName                :\n   LocalPort                : 22 ➌\n   Name                     : SSH ➍\n   Port                     : 22 ➎\n   Protocol                 : tcp\n   Vip                      : 52.176.10.12 ➏\n   --snip--\n```", "```\nC:\\>azure vm endpoint list \"VM_name\"\n```", "```\nPS C:\\> Get-AzureNetworkSecurityGroup -Detailed -Name \"NSG_Name\"\n```", "```\nPS C:\\> Get-AzureNetworkSecurityGroup -Detailed\n```", "```\nPS C:\\> Get-AzureNetworkSecurityGroupAssociation -VM $vm\n    -ServiceName $vm.ServiceName\n```", "```\nC:\\>azure network nsg list\n```", "```\nC:\\>azure network nsg show \"NSG_Name\"\n```", "```\n➊ PS C:\\> $vm = Get-AzureRmVM -ResourceGroupName \"VM_Resource_Group_Name\"\n       -Name \"VM_Name\"\n➋ PS C:\\> $ni = Get-AzureRmNetworkInterface | where { $_.Id -eq\n       $vm.NetworkInterfaceIDs }\n➌ PS C:\\> Get-AzureRmNetworkSecurityGroup | where { $_.Id -eq\n       $ni.NetworkSecurityGroup.Id }\n   Name                 : NSG_Name\n   ResourceGroupName    : NSG_Resource_Group_Name\n   Location             : centralus\n   . . .\n   SecurityRules        : [\n                            {\n                              \"Name\": \"default-allow-ssh\",\n   --snip--\n```", "```\nPS C:\\> Get-AzureSqlDatabase -ServerName \"Server_Name\"\n```", "```\nPS C:\\> Get-AzureSqlDatabaseServerFirewallRule -ServerName \"Server_Name\"\n```", "```\nPS C:\\> Get-AzureRmResourceGroup | Get-AzureRmSqlServer\n\nResourceGroupName        : Resource Group Name\nServerName               : Server Name\nLocation                 : Central US\nSqlAdministratorLogin    : dba\nSqlAdministratorPassword :\nServerVersion            : 12.0\nTags                     : {}\n```", "```\nPS C:\\> Get-AzureRmSqlDatabase -ServerName \"Server_Name\"\n    -ResourceGroupName \"Server_Resource_Group_Name\"\n```", "```\nPS C:\\> Get-AzureRmSqlServerFirewallRule -ServerName \"Server_Name\"\n    -ResourceGroupName \"Server_Resource_Group_Name\"\n```", "```\nPS C:\\> Get-AzureRmSqlServerThreatDetectionPolicy -ServerName \"Server_Name\"\n    -ResourceGroupName \"Server_Resource_Group_Name\"\n```", "```\nC:\\>azure sql server show \"Server_Name\"\n```", "```\nC:\\>azure sql firewallrule show \"Server_Name\" \"Rule_Name\"\n```", "```\n# Requires the Azure PowerShell cmdlets be installed.\n# See https://github.com/Azure/azure-powershell/ for details.\n\n# Before running the script:\n#   * Run: Import-Module Azure\n#   * Authenticate to Azure in PowerShell\n#   * You may also need to run: Set-ExecutionPolicy -Scope Process Unrestricted\n\n# Show subscription metadata\nWrite-Output (\" Subscription \",\"==============\")\nWrite-Output (\"Get-AzureSubscription -Current\")\nGet-AzureSubscription -Current\n\n# Display websites\nWrite-Output (\"\", \" Websites \",\"==========\")\n$sites = Get-AzureWebsite\nWrite-Output (\"Get-AzureWebsite\")\n$sites\nforeach ($site in $sites)\n{\n    Write-Output (\"Get-AzureWebsite -Name \" + $site.Name)\n    Get-AzureWebsite -Name $site.Name\n}\n\n# View virtual machines\nWrite-Output (\"\", \" VMs \",\"=====\")\n$vms = Get-AzureVM\nWrite-Output (\"Get-AzureVM\")\n$vms\nforeach ($vm in $vms)\n{\n    Write-Output (\"Get-AzureVM -ServiceName \" + $vm.ServiceName)\n    Get-AzureVM -ServiceName $vm.ServiceName\n}\n\n# Enumerate Azure Storage\nWrite-Output (\"\", \" Storage \",\"=========\")\n$SAs = Get-AzureStorageAccount\nWrite-Output (\"Get-AzureStorageAccount\")\n$SAs\nforeach ($sa in $SAs)\n{\n    Write-Output (\"Get-AzureStorageKey -StorageAccountName\" + $sa.StorageAccountName)\n    Get-AzureStorageKey -StorageAccountName $sa.StorageAccountName\n}\n\n# Get networking settings\nWrite-Output (\"\", \" Networking \",\"============\")\nWrite-Output (\"Get-AzureReservedIP\")\nGet-AzureReservedIP\n\nWrite-Output (\"\", \" Endpoints \",\"===========\")\n# Show network endpoints for each VM\nforeach ($vm in $vms)\n{\n    Write-Output (\"Get-AzureEndpoint \" + $vm.ServiceName)\n    Get-AzureEndpoint -VM $vm\n}\n\n# Dump NSGs\nWrite-Output (\"\", \" NSGs \",\"======\")\nforeach ($vm in $vms)\n{\n    Write-Output (\"NSG for \" + $vm.ServiceName + \":\")\n    Get-AzureNetworkSecurityGroupAssociation -VM $vm -ServiceName $vm.ServiceName\n}\n\n# Display SQL information\nWrite-Output (\"\", \" SQL \",\"=====\")\n$sqlServers = Get-AzureSqlDatabaseServer\nWrite-Output (\"Get-AzureSqlDatabaseServer\")\n$sqlServers\nforeach ($ss in $sqlServers)\n{\n    Write-Output (\"Get-AzureSqlDatabase -ServerName \" + $ss.ServerName)\n    Get-AzureSqlDatabase -ServerName $ss.ServerName\n    Write-Output (\"Get-AzureSqlDatabaseServerFirewallRule -ServerName \" + $ss.ServerName)\n    Get-AzureSqlDatabaseServerFirewallRule -ServerName $ss.ServerName\n}\n```", "```\n# Requires the Azure PowerShell cmdlets be installed.\n# See https://github.com/Azure/azure-powershell/ for details.\n\n# Before running the script:\n#   * Run: Import-Module Azure\n#   * Authenticate to Azure in PowerShell\n#   * You may also need to run Set-ExecutionPolicy -Scope Process Unrestricted\n\n# Show details of the current Azure subscription\nWrite-Output (\" Subscription \",\"==============\")\nWrite-Output (\"Get-AzureRmContext\")\n$context = Get-AzureRmContext\n$context\n$context.Account\n$context.Tenant\n$context.Subscription\n\nWrite-Output (\"Get-AzureRmRoleAssignment\")\nGet-AzureRmRoleAssignment\n\nWrite-Output (\"\", \" Resources \",\"===========\")\n# Show the subscription's resource groups and a list of its resources\nWrite-Output (\"Get-AzureRmResourceGroup\")\nGet-AzureRmResourceGroup | Format-Table ResourceGroupName,Location,ProvisioningState\nWrite-Output (\"Get-AzureRmResource\")\nGet-AzureRmResource | Format-Table Name,ResourceType,ResourceGroupName\n\n# Display Web Apps\nWrite-Output (\"\", \" Web Apps \",\"==========\")\nWrite-Output (\"Get-AzureRmWebApp\")\nGet-AzureRmWebApp\n\n# List virtual machines\nWrite-Output (\"\", \" VMs \",\"=====\")\n$vms = Get-AzureRmVM\nWrite-Output (\"Get-AzureRmVM\")\n$vms\nforeach ($vm in $vms)\n{\n    Write-Output (\"Get-AzureRmVM -ResourceGroupName \" + $vm.ResourceGroupName +\n        \"-Name \" + $vm.Name)\n    Get-AzureRmVM -ResourceGroupName $vm.ResourceGroupName -Name $vm.Name\n    Write-Output (\"HardwareProfile:\")\n    $vm.HardwareProfile\n    Write-Output (\"OSProfile:\")\n    $vm.OSProfile\n    Write-Output (\"ImageReference:\")\n    $vm.StorageProfile.ImageReference\n}\n\n# Show Azure Storage\nWrite-Output (\"\", \" Storage \",\"=========\")\n$SAs = Get-AzureRmStorageAccount\nWrite-Output (\"Get-AzureRmStorageAccount\")\n$SAs\nforeach ($sa in $SAs)\n{\n    Write-Output (\"Get-AzureRmStorageAccountKey -ResourceGroupName \" + $sa.ResourceGroupName +\n        \" -StorageAccountName\" + $sa.StorageAccountName)\n    Get-AzureRmStorageAccountKey -ResourceGroupName $sa.ResourceGroupName -StorageAccountName\n        $sa.StorageAccountName\n}\n\n# Get networking settings\nWrite-Output (\"\", \" Networking \",\"============\")\nWrite-Output (\"Get-AzureRmNetworkInterface\")\nGet-AzureRmNetworkInterface\nWrite-Output (\"Get-AzureRmPublicIpAddress\")\nGet-AzureRmPublicIpAddress\n\n# NSGs\nWrite-Output (\"\", \" NSGs \",\"======\")\nforeach ($vm in $vms)\n{\n    $ni = Get-AzureRmNetworkInterface | where { $_.Id -eq $vm.NetworkInterfaceIDs }\n    Write-Output (\"Get-AzureRmNetworkSecurityGroup for \" + $vm.Name + \":\")\n    Get-AzureRmNetworkSecurityGroup | where { $_.Id -eq $ni.NetworkSecurityGroup.Id }\n}\n\n# Show SQL information\nWrite-Output (\"\", \" SQL \",\"=====\")\nforeach ($rg in Get-AzureRmResourceGroup)\n{\n    foreach($ss in Get-AzureRmSqlServer -ResourceGroupName $rg.ResourceGroupName)\n    {\n        Write-Output (\"Get-AzureRmSqlServer -ServerName\" + $ss.ServerName +\n            \" -ResourceGroupName \" + $rg.ResourceGroupName)\n        Get-AzureRmSqlServer -ServerName $ss.ServerName -ResourceGroupName\n            $rg.ResourceGroupName\n\n        Write-Output (\"Get-AzureRmSqlDatabase -ServerName\" + $ss.ServerName +\n            \" -ResourceGroupName \" + $rg.ResourceGroupName)\n        Get-AzureRmSqlDatabase -ServerName $ss.ServerName -ResourceGroupName\n            $rg.ResourceGroupName\n\n        Write-Output (\"Get-AzureRmSqlServerFirewallRule -ServerName\" + $ss.ServerName +\n            \" -ResourceGroupName \" + $rg.ResourceGroupName)\n        Get-AzureRmSqlServerFirewallRule -ServerName $ss.ServerName -ResourceGroupName\n            $rg.ResourceGroupName\n\n        Write-Output (\"Get-AzureRmSqlServerThreatDetectionPolicy -ServerName\" +\n            $ss.ServerName + \" -ResourceGroupName \" + $rg.ResourceGroupName)\n        Get-AzureRmSqlServerThreatDetectionPolicy -ServerName\n            $ss.ServerName -ResourceGroupName $rg.ResourceGroupName\n    }\n}\n```"]