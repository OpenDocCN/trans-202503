["```\n[*] BIOS Region: Base = 0x00800000, Limit = 0x00FFFFFF\n\nSPI Protected Ranges\n\n------------------------------------------------------------\n\nPRx (offset) | Value    | Base     | Limit    | WP? | RP?\n\n------------------------------------------------------------\n\nPR0 (74)     | 00000000 | 00000000 | 00000000 | 0   | 0\n\nPR1 (78)     | 00000000 | 00000000 | 00000000 | 0   | 0\n\nPR2 (7C)     | 00000000 | 00000000 | 00000000 | 0   | 0\n\nPR3 (80)     | 00000000 | 00000000 | 00000000 | 0   | 0\n\nPR4 (84)     | 00000000 | 00000000 | 00000000 | 0   | 0\n```", "```\nimport chipsec.chipset\n\nimport chipsec.hal.interrupts\n\n#SW SMI handler number\n\nSMI_NUM = 0x25\n\n#CHIPSEC initialization\n\ncs = chipsec.chipset.cs()\n\ncs.init(None, True)\n\n#create instances of required classes\n\nints = chipsec.hal.interrupts.Interrupts(cs)\n\n#call SW SMI handler 0x25\n\ncs.ints.send_SW_SMI(0, SMI_NUM, 0, 0, 0, 0, 0, 0, 0)\n```", "```\nmov rax, rdx     ; rax_value\n\nmov ax, cx       ; smi_code_data\n\nmov rdx, r10     ; rdx_value\n\nmov dx, 0B2h     ; SMI control port (0xB2)\n\nmov rbx, r8      ; rbx_value\n\nmov rcx, r9      ; rcx_value\n\nmov rsi, r11     ; rsi_value\n\nmov rdi, r12     ; rdi_value\n\n; write smi data value to SW SMI control/data ports (0xB2/0xB3)\n\nout dx, ax\n```", "```\nBOOLEAN\n\nEFIAPI\n\nSmmIsBufferOutsideSmmValid (\n\n  IN EFI_PHYSICAL_ADDRESS  Buffer,\n\n  IN UINT64                Length\n\n  )\n```", "```\nEFI_BOOT_SCRIPT_IO_WRITE_OPCODE = 0x00\n\nEFI_BOOT_SCRIPT_IO_READ_WRITE_OPCODE = 0x01\n\nEFI_BOOT_SCRIPT_MEM_WRITE_OPCODE = 0x02\n\nEFI_BOOT_SCRIPT_MEM_READ_WRITE_OPCODE = 0x03\n\nEFI_BOOT_SCRIPT_PCI_CONFIG_WRITE_OPCODE = 0x04\n\nEFI_BOOT_SCRIPT_PCI_CONFIG_READ_WRITE_OPCODE = 0x05\n\nEFI_BOOT_SCRIPT_SMBUS_EXECUTE_OPCODE = 0x06\n\nEFI_BOOT_SCRIPT_STALL_OPCODE = 0x07\n\nEFI_BOOT_SCRIPT_DISPATCH_OPCODE = 0x08\n\nEFI_BOOT_SCRIPT_MEM_POLL_OPCODE = 0x09\n```", "```\n[x][ =======================================================================\n\n[x][ Module: UEFI boot script table vulnerability exploit\n\n[x][ =======================================================================\n\n[*] AcpiGlobalVariable = 0x79078000\n\n[*] UEFI boot script addr = 0x79078013\n\n[*] Target function addr = 0x790780b6\n\n8 bytes to patch\n\nFound 79 zero bytes at 0x0x790780b3\n\nJump from 0x79078ffb to 0x79078074\n\nJump from 0x790780b6 to 0x790780b3\n\nGoing to S3 sleep for 10 seconds ...\n\nrtcwake: wakeup from \"mem\" using /dev/rtc0 at Mon Jun 6 09:03:04 2018\n\n[*] BIOS_CNTL = 0x28\n\n[*] TSEGMB = 0xd7000000\n\n[!] Bios lock enable bit is not set\n\n[!] SMRAM is not locked\n\n[!] Your system is VULNERABLE\n```", "```\nEFI_BOOT_SCRIPT_IO_WRITE_OPCODE = 0x00\n\nEFI_BOOT_SCRIPT_IO_READ_WRITE_OPCODE = 0x01\n```"]