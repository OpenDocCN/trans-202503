- en: '3'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Simple substitution ciphers
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03001.png)'
  prefs: []
  type: TYPE_IMG
- en: Anybody interested in encryption and codebreaking should visit a museum of cryptology.
    In the United States, the best one is the National Cryptologic Museum, which is
    the doorway to NSA’s headquarters in Fort Meade, Maryland. If you are in the United
    Kingdom, go to Bletchley Park, and in Germany, visit the Heinz Nixdorf MuseumsForum
    in Paderborn or the Deutsches Museum in Munich. These institutions exhibit fascinating
    cipher machines, such as the Enigma (see [Chapter 15](c15.xhtml)), as well as
    other crypto-related items.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s turn our attention now to an object we found in the National Cryptologic
    Museum’s gift shop: a mug bearing an encrypted inscription (see [Figure 3-1](#figure3-1)).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03001.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-1: The inscription on these NSA mugs is encrypted in a pigpen cipher.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The encryption algorithm used here is a variant of the so-called *pigpen cipher*.
    Also known in the last few centuries as the Freemason’s cipher, it is a very old
    and widespread enciphering technique.^([1](b06.xhtml#c03-endnote-1)) The following
    diagram shows how the pigpen cipher turns every letter of the alphabet into a
    symbol consisting of lines and dots:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03002.png)'
  prefs: []
  type: TYPE_IMG
- en: Using this diagram, it becomes clear that the mug inscription decrypts to `NATEONAL
    SECURITY AGENCY`. (Yes, the first word contains a typo. Things like this happen,
    even at the NSA!)
  prefs: []
  type: TYPE_NORMAL
- en: There are many other variants of the pigpen cipher. For instance, the following
    text, written on a tombstone^([2](b06.xhtml#c03-endnote-2)) from 1796 in New York
    City . . .
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03003.png)'
  prefs: []
  type: TYPE_IMG
- en: '. . . turns out to be encrypted in the following scheme:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03004.png)'
  prefs: []
  type: TYPE_IMG
- en: The plaintext is `REMEMBER DEAAH`.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, that second `A` should be a `T`, as clearly, the intended message
    was `REMEMBER DEATH`. Evidently, the stonecutter (or the tombstone designer) made
    a small typo, omitting the two dots! This is common in cryptography. Consider
    how easy it is to make typos in nonencrypted English text. The problem becomes
    even more pronounced with ciphertext, because it is more difficult to proofread.
    This can both add to and subtract from the level of difficulty for codebreakers.
  prefs: []
  type: TYPE_NORMAL
- en: There are many other pigpen cipher variations, such as those that change the
    order of the letters in the tables. For another variant, see the glossary in Appendix
    C of this book. For an overview of crypto museums and other cryptologic sites
    around the world, check out the Cryptologic Travel Guide, a website operated by
    Klaus and the Austrian IT expert Christian Baumann, at [https://cryptologictravelguide.com](https://cryptologictravelguide.com).
  prefs: []
  type: TYPE_NORMAL
- en: How simple substitution ciphers work
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The pigpen cipher and Caesar cipher are each examples of encryption methods
    that replace every letter of the alphabet with another letter or symbol. Ciphers
    of this kind are referred to as *simple substitution ciphers* or *monoalphabetic
    substitution ciphers (MASCs)*. A simple substitution cipher provides exactly one
    ciphertext letter for each plaintext letter.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two main types of simple substitution ciphers: one makes substitutions
    within the original alphabet, and the other transfers plaintext letters to characters
    in a different alphabet, which could be anything from a writing system such as
    the Cyrillic alphabet, to one invented by the user of the cipher, to a series
    of numbers, to a set of unusual symbols. The pigpen cipher is a simple substitution
    cipher of the *different-alphabet* type. So is the cipher that was used for the
    following text from *The Book of Woo*, as introduced in the webcomic *Sandra and
    Woo* in 2013:^([3](b06.xhtml#c03-endnote-3))^, ^([4](b06.xhtml#c03-endnote-4))'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03005.png)'
  prefs: []
  type: TYPE_IMG
- en: By contrast, the left-hand side of [Figure 3-2](#figure3-2) shows a message
    of the *same-alphabet* type. This is the title page of an encrypted book published
    in London in 1835.^([5](b06.xhtml#c03-endnote-5))
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03002.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-2: The book *UMGJOML NÝFLOBJOF* (left) was published by a women’s
    secret order in London in 1835\. It is encrypted with a simple substitution cipher.
    The right side shows the decrypted version.'
  prefs: []
  type: TYPE_NORMAL
- en: Using the following decryption table . . .
  prefs: []
  type: TYPE_NORMAL
- en: '`Ciphertext: ABCDEFGHIJKLMNOPQRSTUVWXYÝZ`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Plaintext:` `URGPOSC-JIKTNMEDQBFLAWVXHYZ`'
  prefs: []
  type: TYPE_NORMAL
- en: . . . this title decrypts to the text shown on the right side of the figure.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are also mixtures of the two schemes. For instance, the following letter
    (sent in 1841 by one W.B. Tyler to Edgar Allan Poe,^([6](b06.xhtml#c03-endnote-6))
    whom we will come back to in [Chapter 6](c06.xhtml)) is written in both standard
    and nonstandard characters:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03006.png)'
  prefs: []
  type: TYPE_IMG
- en: A different-alphabet simple substitution cipher can easily be changed into one
    of the same-alphabet type by randomly substituting every nonstandard character
    with a letter from the ordinary alphabet. This process is referred to as *transcription*,
    and the resulting text is called a *transcript*. For instance, the Voynich manuscript
    (covered in [Chapter 5](c05.xhtml)), which uses a unique set of symbols (“Voynichese”),
    has been transcribed into the standard alphabet by several researchers in different
    ways.^([7](b06.xhtml#c03-endnote-7))
  prefs: []
  type: TYPE_NORMAL
- en: As an example of transcription, we can use the following message, which was
    published in Reddit’s Unsolved Codes forum in 2018 by a user named RetroSA, who
    said that he found it in his family’s personal effects.^([8](b06.xhtml#c03-endnote-8))
    (It is still unsolved, by the way.)
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03007.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Another Reddit reader named NickSB2013 provided a transcript based on the following
    table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03008.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here’s the transcribed version of the cryptogram:'
  prefs: []
  type: TYPE_NORMAL
- en: '`ABCDE ABFGH ABIJKLMNO OPBD`'
  prefs: []
  type: TYPE_NORMAL
- en: '`OPNQAQRS ATRDH NVRDF: OSGA OQCEWKF T VFKO: PGA`'
  prefs: []
  type: TYPE_NORMAL
- en: '`DRQAPF OBRSADF EQWXF`'
  prefs: []
  type: TYPE_NORMAL
- en: Don’t be confused by the fact that the transcribed cryptogram starts with `ABCDE`.
    This is only because the Reddit reader transcribed the first letter appearing
    in the message as `A`, the second as `B`, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: A transcribed message can be examined more easily than the original, especially
    if one uses a computer program. As it is possible to transfer a different-alphabet
    simple substitution cipher into a same-alphabet one, cryptanalysts usually don’t
    distinguish between the two. The methods used to attack a simple substitution
    cipher cryptogram do not depend on whether the ciphertext is written with standard
    letters or an alternate alphabet.
  prefs: []
  type: TYPE_NORMAL
- en: The American Cryptogram Association calls any same-alphabet simple substitution
    cipher that includes spaces (i.e., boundaries between words) an *Aristocrat*.
    Every issue of its newsletter, *The Cryptogram*, contains a number of Aristocrats
    for the user to solve. Other newspapers and magazines publish Aristocrats along
    with crossword puzzles and chess problems. In addition, books have been published
    that contain nothing but Aristocrats. Plenty of people seem to enjoy solving this
    kind of puzzle!
  prefs: []
  type: TYPE_NORMAL
- en: How to detect a simple substitution cipher
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There is an easy, yet very useful, rule of thumb: in the overwhelming majority
    of cases, if a ciphertext is written in a nonstandard alphabet, its author used
    a simple substitution cipher (sometimes with a few additional tweaks). For instance,
    all the texts written in a pigpen alphabet we have ever encountered are encrypted
    this way—although it would be easy to use a pigpen alphabet along with another
    encryption method. Apparently, people who are clever enough to avoid a simple
    substitution cipher, opting for a more complex encryption system instead, also
    realize that using a nonstandard alphabet does not increase security.'
  prefs: []
  type: TYPE_NORMAL
- en: There is, of course, no guarantee that a text written in a nonstandard alphabet
    is a simple substitution cipher. In order to make a more accurate diagnosis, we
    need frequency analysis and possibly other statistical methods. We’ll demonstrate
    this process with the encrypted postcard from 1909 depicted in [Figure 3-3](#figure3-3).^([9](b06.xhtml#c03-endnote-9))
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03003.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-3: A 1909 postcard encrypted in a simple substitution cipher of the
    different-alphabet type'
  prefs: []
  type: TYPE_NORMAL
- en: Using the following table . . .
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03009.png)'
  prefs: []
  type: TYPE_IMG
- en: '. . . we create a transcribed version of the cryptogram. Note that the letters
    `U`, `V`, `W`, `X`, `Y`, and `Z` don’t appear in the transcript, as the alphabet
    used on the postcard only has eighteen letters:'
  prefs: []
  type: TYPE_NORMAL
- en: '`ABC DCEFG`'
  prefs: []
  type: TYPE_NORMAL
- en: '`FHI JBK LHM KGFKN`'
  prefs: []
  type: TYPE_NORMAL
- en: '`OMPPHOK LHM JBK`'
  prefs: []
  type: TYPE_NORMAL
- en: '`OGQLCDE GH DCEFG`'
  prefs: []
  type: TYPE_NORMAL
- en: '`C FJRK SKKD GBLCDE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`GH ANHMBCOF J`'
  prefs: []
  type: TYPE_NORMAL
- en: '`NCGGNK. FJRK`'
  prefs: []
  type: TYPE_NORMAL
- en: '`SKKD HMG SBKJTCDE`'
  prefs: []
  type: TYPE_NORMAL
- en: '`BHJQO GFCO`'
  prefs: []
  type: TYPE_NORMAL
- en: '`JAGKBDHHD AHB GFK`'
  prefs: []
  type: TYPE_NORMAL
- en: '`IJEHDO. EHHQ DCEFG`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we perform frequency analysis. The following report was created with
    the computer program CrypTool 2, but you can also figure out these frequencies
    manually or use the website [https://dcode.fr/en](https://dcode.fr/en). In this
    case, we are only interested in the percentage frequencies:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03010.png)'
  prefs: []
  type: TYPE_IMG
- en: 'For comparison, here is a percentage frequency analysis of an ordinary English
    text:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03011.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we look at the four most frequent and least frequent letters of the two
    texts, we get the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Ciphertext: 10.87, 10.87, 9.42, 7.97 / 0.00, 0.00, 0.00, 0.00`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Plain English: 12.7, 9.1, 8.2, 7.5 / 0.75, 0.25, 0.25, 0.25`'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, there are some differences. For instance, the most frequent
    letter of the ciphertext has a share of 10.87%, compared to 12.7% in plain English.
    Apart from this, however, the numbers are quite similar. Overall, the encrypted
    text on the postcard is consistent with a simple substitution cipher applied to
    an English plaintext. Further examination shows that this is the case. This postcard
    is included as one of the challenges at the end of this chapter. Can you solve
    it?
  prefs: []
  type: TYPE_NORMAL
- en: Example of a cipher that is not a simple substitution cipher
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s now look at the ciphertext in [Figure 3-4](#figure3-4). This message is
    the first half of the encrypted inscription on the famous *Kryptos* sculpture
    at CIA headquarters, which we know does not use a simple substitution cipher (see
    [Chapter 8](c08.xhtml) and Appendix A).
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03004.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-4: The first half of the famous *Kryptos* sculpture does not have
    the statistical properties of a simple substitution cipher.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To prove this, here’s the percentage frequency analysis of this cryptogram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03012.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Again, we look at the four most and least frequent letters and compare their
    frequencies to those in plain English:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Ciphertext: 7.18, 7.18, 6.71, 6.48 / 0.69, 1.39, 1.62, 1.85`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Plain English: 12.7, 9.1, 8.2, 7.5 / 0.75, 0.25, 0.25, 0.25`'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, the differences are now a lot greater. Compared to plain English,
    the most frequent letters of this cryptogram are too rare, while the rare ones
    are too frequent. The cryptogram’s frequency distribution is a lot flatter than
    that of English text in general. This indicates that the first half of the *Kryptos*
    inscription is not encrypted using a simple substitution cipher. We will come
    back to this famous cryptogram in [Chapter 8](c08.xhtml).
  prefs: []
  type: TYPE_NORMAL
- en: Index-of-coincidence technique
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Whenever we have access to a computer, we can use another statistical method
    to make an educated guess about whether a certain ciphertext was created with
    a simple substitution cipher or not: the *index of coincidence* *(IC**)*, which
    we define as the probability of two randomly chosen letters from a text being
    the same. (Other sources may describe IC differently.) The details of this important
    codebreaking tool are in Appendix B. For the time being, know that the IC of an
    English plaintext encrypted using a simple substitution cipher is usually about
    6.7%, while for pure random text, it is about 3.8%.'
  prefs: []
  type: TYPE_NORMAL
- en: As calculating the IC is a laborious process to do by hand, in this example,
    we use the website [https://dcode.fr/en](https://dcode.fr/en), which provides
    an IC calculator. Applying this tool on the postcard message . . .
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03013.png)'
  prefs: []
  type: TYPE_IMG
- en: '. . . and on the *Kryptos* text, we receive the following values:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Index of coincidence of the postcard message: 6.4%'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Index of coincidence of the *Kryptos* text: 4.5%'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The IC of the postcard text (6.4%) is pretty close to what we would expect for
    English text encrypted with a simple substitution cipher (6.7%), while the IC
    of the *Kryptos* text (4.5%) is further from it. This confirms the (correct) conjecture
    that the postcard is encrypted with a simple substitution cipher, while the *Kryptos*
    encryption is not.
  prefs: []
  type: TYPE_NORMAL
- en: How to break a simple substitution cipher
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are two basic tools for deciphering a simple substitution cipher: guessing
    words and frequency analysis.^([10](b06.xhtml#c03-endnote-10)) Usually, combining
    these two approaches works best, so we’ll do this in the following example. You
    can usually guess both frequent words and words with unusual letter patterns.
    We demonstrate these techniques with the ciphertext in [Figure 3-5](#figure3-5)
    (taken from the 2015 computer game *Call of Duty: Black Ops III*), which is written
    in a pigpen variant.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03005.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-5: A cryptogram taken from the computer game *Call of Duty: Black
    Ops III* (2015)'
  prefs: []
  type: TYPE_NORMAL
- en: 'To transcribe this message, let’s use the pigpen variant shown in the following
    diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03014.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This gives us the following transcript. Now that we’ve converted the symbols
    into letters, we can more easily review the text:'
  prefs: []
  type: TYPE_NORMAL
- en: '`OVSRSVIMQ EXCEVTK 654371979 SRCE KHE GVEAK WAV ERDED WIKH KHE DEFEAK SF KHE
    ATSKHICSRJ, KHE OEETEVJ AJCERDED KS BECSQE KHE WAVDJ SF APP MRI LEVJEJ. KHE JMVLILIRG
    ATSKHICSRJ WEVE CAJK SMK, BARIJHED KS KHE DAVO AEKHEV BEREAKH CVEAKISR. AFKEV
    ESRJ SF EXIPE IR KHE DAVO AEKHEV, KHE ATSKHICSRJ ELSPLED IRKS KWIJKED CVEAKMVEJ
    KHAK RSW BEAV PIKKPE VEJEQBPARCE KS KHEIV OEETEV BVEKHVER. KHE ATSKHICSRJ CEAJEPEJJ
    DEJIVE IJ KS VEERKEV CVEAKISR KS CSRJMQE ARD CSVVMTK APP KHE MRILEVJEJ. IK IJ
    KHE OEETEVJ KHAK GMAVD AGAIRJK KHEJE TEVTEKMAP AKKEQTKJ KS VEERKEV CVEAKISR, ARD
    GMAVD AGAIRJK ARY BEIRGJ KHAK QAY HALE FAPPER MRDEV KHE IRFPMERCE SF KHE ATSKHICSRJ.`'
  prefs: []
  type: TYPE_NORMAL
- en: Performing a frequency analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We start our analysis by counting the letters (either by hand or with software
    such as CrypTool 2):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03015.png)'
  prefs: []
  type: TYPE_IMG
- en: Apparently, `E` is the ciphertext’s most frequent letter. Assuming that the
    plaintext is in English, `E` might stand for `E`. Sometimes, things are that simple.
  prefs: []
  type: TYPE_NORMAL
- en: Guessing frequent words
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now, let’s try to guess a few words:'
  prefs: []
  type: TYPE_NORMAL
- en: The word `KHE` (which we can also write as `KH``E`, as we already know that
    `E` probably stands for `E`) appears fourteen times in the cryptogram. It can
    only stand for `THE`. This means that we have identified the letters `E`, `H`,
    and `T`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The word `KHAK` (`TH``A``T`) must stand for `THAT`, as `THET`, `THIT`, `THOT`,
    `THUT`, and `THYT` don’t make sense.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The word `KS` (`T``S`) appears five times in the text. Provided that there is
    no word in the English language that consists of only two consonants (*Scrabble*
    experts may quibble about this for certain archaic forms), this word must be `TA`,
    `TE`, `TI`, `TO`, `TU`, or `TY.` Only `TO` makes sense. So, we have now identified
    `A`, `E`, `H`, `O`, and `T`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SMK` (`O``M``T`) likely stands for `OUT`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`AEKHEV` (`AETHE``V`) apparently stands for `AETHER`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`APP` (`A``PP`) stands for `ALL`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The remaining letters are easily found in a similar way. We get the following
    plaintext:'
  prefs: []
  type: TYPE_NORMAL
- en: '`KRONORIUM EXCERPT 654371979 ONCE THE GREAT WAR ENDED WITH THE DEFEAT OF THE
    APOTHICONS THE KEEPERS ASCENDED TO BECOME THE WARDS OF ALL UNIVERSES THE SURVIVING
    APOTHICONS WERE CAST OUT BANISHED TO THE DARK AETHER BENEATH CREATION AFTER EONS
    OF EXILE IN THE DARK AETHER THE APOTHICONS EVOLVED INTO TWISTED CREATURES THAT
    NOW BEAR LITTLE RESEMBLANCE TO THEIR KEEPER BRETHREN THE APOTHICONS CEASELESS
    DESIRE IS TO REENTER CREATION TO CONSUME AND CORRUPT ALL THE UNIVERSES IT IS THE
    KEEPERS THAT GUARD AGAINST THESE PERPETUAL ATTEMPTS TO REENTER CREATION AND GUARD
    AGAINST ANY BEINGS THAT MAY HAVE FALLEN UNDER THE INFLUENCE OF THE APOTHICONS.`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using our results, we can reconstruct the pigpen diagram in use. It is slightly
    different from the one applied on the NSA mug:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03016.png)'
  prefs: []
  type: TYPE_IMG
- en: Guessing words with unusual letter patterns
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For a second approach to deciphering a simple substitution cipher, we can try
    to guess words by their letter patterns. Until a few decades ago, codebreakers
    had to employ word pattern lists for this task, which was quite laborious,^([11](b06.xhtml#c03-endnote-11))
    but today, we can use computer programs to perform fast searches.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to check the ciphertext for words with rare letter patterns.
    Our ciphertext includes the word `VEERKEV`, which is a good candidate. The first
    and last letter are the same; in addition, this word has a pattern of three identical
    letters. When we enter this word in CrypTool 2’s word pattern analyzer, we get
    the following results, showing which common words have letters with that same
    pattern:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03017.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, among all the words contained in an English dictionary, only
    `ADDENDA` and `REENTER` fit this pattern. Which one might be correct? We can answer
    this question by looking at the frequency analysis calculated above. If `ADDENDA`
    were correct, `D` would be the most frequent letter in our text. In the case of
    `REENTER`, it would be `E`. The latter is by far the more likely case. Knowing
    that `VEERKEV` stands for `REENTER` thus gives us the potential plaintext equivalents
    of four letters. We could then substitute those potential plaintext equivalents
    throughout the ciphertext, then proceed to guess short words such as `THE`, `TO`,
    and `OUT` or look for more words with rare letter patterns.
  prefs: []
  type: TYPE_NORMAL
- en: Success stories
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How Gary Klivans broke a prison inmate’s code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Gary Klivans, our colleague and an expert on encryption methods used by gangs
    and prison inmates (see [Chapter 2](c02.xhtml)), is the author of the fascinating
    2016 book *Gang Secret Codes: Deciphered*.^([12](b06.xhtml#c03-endnote-12)) Gary
    provided us with an interesting encrypted note—a letter written by a New Jersey
    prison inmate to his girlfriend (see [Figure 3-6](#figure3-6)).^([13](b06.xhtml#c03-endnote-13))
    We have no further information about the background of this message.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03006.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-6: This encrypted letter, written by a New Jersey prison inmate to
    his girlfriend, was broken by cipher expert Gary Klivans.'
  prefs: []
  type: TYPE_NORMAL
- en: 'As can be seen, the sender of this note used a nonstandard alphabet (probably
    of his own invention). Provided that this letter is likely encrypted using a simple
    substitution cipher, transcribing the text and performing a frequency analysis
    might be a good start to breaking it. However, Gary usually avoids the tedious
    process of transcribing and prefers guessing words based on letter patterns. When
    he combed through the ciphertext, he found the following word, which appears twice
    and seemed like a good candidate:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03018.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Gary’s guess was that it stood for `HOLLA` (a slang word with a similar meaning
    to “hello”). We will see that his suspicion was not entirely correct, but it proved
    helpful anyway. Based on his assumption, Gary could immediately identify the indefinite
    article `A`, which appears a few times in the text. As there is only one other
    common English word consisting of one letter, the pronoun `I`, the symbol representing
    it was easy to find, too (see the framed symbols in lines 1, 6, and 9):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03019.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Gary then tried to guess the following pair of words:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03020.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Transcribed, the symbols are `OA***A* *OO****`, a unique pattern. Gary’s guess
    was that these were the words `OATMEAL COOKIES`, which proved correct. At this
    point he knew enough letters to easily decipher the whole text (which was when
    he realized that the word he had first tried to decipher was not `HOLLA`, but
    `GONNA`). Gary finally came up with the following substitution table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03021.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This leads to the following plaintext (note the two appearances of GONNA in
    the seventh and eighth lines):'
  prefs: []
  type: TYPE_NORMAL
- en: '`WELL BEAUTIFUL,`'
  prefs: []
  type: TYPE_NORMAL
- en: '`JUST FINISHED EATING LUNCH, HAD CHICKEN PATTIES, THEY`'
  prefs: []
  type: TYPE_NORMAL
- en: '`WERE ALRIGHT. BABE, I LOVE YOUR LETTERS. WHAT`'
  prefs: []
  type: TYPE_NORMAL
- en: '`YOU SAY ABOUT THESE WOMEN IN HERE IS HILARIOUS.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`BONT LET THEIR FART GAS GET TO YOU BEAUTIFUL.`'
  prefs: []
  type: TYPE_NORMAL
- en: '`ALRIGHT, BABE, I JUST READ YOUR LETTER THAT TALKED ABOUT`'
  prefs: []
  type: TYPE_NORMAL
- en: '`US HAVING CHILDREN. IM GONNA KEEP THIS SHORT AND SWEET`'
  prefs: []
  type: TYPE_NORMAL
- en: '`I LOVE YOU!!! YOUR GONNA BE MY WIFE,`'
  prefs: []
  type: TYPE_NORMAL
- en: '`. . .`'
  prefs: []
  type: TYPE_NORMAL
- en: As far as we can tell, this is an ordinary love letter without any criminal
    content. The sender probably encrypted it because it contains intimate information—not
    because he wanted to hide something illegal.
  prefs: []
  type: TYPE_NORMAL
- en: How Kent Boklan broke encrypted diary entries from the Civil War
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Our colleague Kent D. Boklan is a New York–based professor of computer science
    and a successful codebreaker focusing on US encryptions from the nineteenth century.
    In addition to several Civil War ciphertexts from the 1860s, he has deciphered
    encrypted passages from a diary written by a doctor during the War of 1812.^([14](b06.xhtml#c03-endnote-14))
    These successes are all described in articles Kent published in the scientific
    journal *Cryptologia*. Another broken cipher he reported in 2014 came once again
    from a diary.^([15](b06.xhtml#c03-endnote-15)) This diary was written by a Confederate
    soldier named James Malbone during the US Civil War. While most of Malbone’s diary
    is in cleartext, a few passages are encrypted. Here is one of the encrypted parts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03022.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Between the cleartext expressions `Three` and `March 11th 1863`, Malbone wrote
    a few lines of ciphertext in a nonstandard (probably self-invented) alphabet.
    Kent supposed that Malbone had used a simple substitution cipher. The first ciphertext
    word consists of three letters: `*.£`. On a different page, Kent found a similar
    word at the end of a paragraph: `?*.£`. (In the picture below, the cleartext in
    the two lines above this expression is `May the Lord bless + be with you in my
    prayer.`)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03023.png)'
  prefs: []
  type: TYPE_IMG
- en: If we transcribe these two words (ignoring the rest of the ciphertext), we get
    `BCD` and `ABCD`. Kent realized that `AMEN` might be a good candidate for the
    last word of a paragraph that talks about a prayer. If this assumption were correct,
    the first plaintext word in the cryptogram would be `MEN` and the text would start
    with `Three MEN`. This made sense.
  prefs: []
  type: TYPE_NORMAL
- en: 'Knowing the letters `A`, `M`, `E`, and `N`, Kent could easily decipher the
    rest of the encrypted passages. The two ciphertexts shown above decrypted to the
    following plaintexts:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Three MEN WERE PUPLICLY WHIPT @ WHIPPING`'
  prefs: []
  type: TYPE_NORMAL
- en: '`POST BEFOR THE WHOLE BRIGADE March 11th, 1863`'
  prefs: []
  type: TYPE_NORMAL
- en: '`May the Lord bless + be with`'
  prefs: []
  type: TYPE_NORMAL
- en: '`you in my prayer. FOR`'
  prefs: []
  type: TYPE_NORMAL
- en: '`CHRIST SAKE AMEN`'
  prefs: []
  type: TYPE_NORMAL
- en: Beatrix Potter’s diary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Beatrix Potter (1866–1943) was an English writer and illustrator best known
    for her classic 1902 children’s book *The Tale of Peter Rabbit*. Around the age
    of fourteen, she began to keep an encrypted diary, using a monoalphabetic cipher
    of her own devising. She wrote in this diary for fifteen years.
  prefs: []
  type: TYPE_NORMAL
- en: In 1952, nine years after Potter’s death, a relative of hers found the encrypted
    diary.^([16](b06.xhtml#c03-endnote-16)) As she couldn’t make sense of it, she
    consulted Beatrix Potter enthusiast Leslie Linder, who immediately became interested
    and started to work on deciphering the diary. Though Potter’s encryption method
    was a pure monoalphabetic cipher, the codebreaking work proved difficult. Potter’s
    writing was small, sometimes tiny, with thousands of words squeezed onto some
    of the pages (see [Figure 3-7](#figure3-7)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03007.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-7: Beatrix Potter, author of the famous 1902 children’s book *The
    Tale of Peter Ra**bbit*, kept an encrypted diary.'
  prefs: []
  type: TYPE_NORMAL
- en: 'On one page, Linder found two cleartext (unencrypted) expressions that proved
    very helpful: the Roman numeral `XVI` and the year `1793`. In a history book,
    he read that the French king Louis XVI was guillotined in 1793\. This enabled
    him to decrypt a word he found nearby as `execution`. Linder then knew the symbols
    for eight letters of the alphabet, including four vowels. By the end of the same
    day, he had solved practically the whole of Potter’s cipher alphabet. The real
    labor, however, had just begun. It took Linder thirteen years to decode all the
    diaries.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Linder was painstaking in his work, careful to decipher everything correctly.
    If Potter wrote of a plant, Linder checked with a botanist. When she described
    a work of art, he verified her thoughts by consulting art books and exhibition
    catalogs. In addition, he would trace Potter’s journeys on a map or even travel
    to the particular places himself. In 1966, Linder’s results were published in
    a book titled *The Journal of Beatrix Potter: 1881–1897*.^([17](b06.xhtml#c03-endnote-17))
    Here’s the substitution table he derived:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/g03024.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In his book, Linder writes that the excerpt shown in [Figure 3-7](#figure3-7),
    from April 9, 1886, decrypts as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Snow here. fog. What is to be done for the poor in such weather? Sunday March
    13th.—Old Gladstone got a cold. Convenient method of ruminating on Irish measure
    for the 1st. of April. I don’t think any one expects it to come. Mr. Bright in
    London, in good health and spirits. Mr. Roth his son-in-law got into the Reform,
    it was feared he would not, Mr. Bright being very unpopular there.`'
  prefs: []
  type: TYPE_NORMAL
- en: Potter was far from the only person to keep an encrypted diary.^([18](b06.xhtml#c03-endnote-18))
    One thing of note for those who may wish to crack a diary belonging to their own
    ancestors is that it is very difficult to write large amounts of text with a complicated
    cipher. It therefore comes as no surprise that nearly all of the encrypted diaries
    we know of used simple substitution ciphers, though perhaps with some additional
    expressions here and there to make writing easier. In Potter’s case, she used
    `2` for the words `to` and `too`, as well as `3` for `the`. As a rule of thumb,
    the more handwritten encrypted text you see, the easier it will be to solve.
  prefs: []
  type: TYPE_NORMAL
- en: Challenges
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A prison code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The fragment of a message depicted in [Figure 3-8](#figure3-8) was sent by an
    unknown person to a prison inmate in Montgomery, Pennsylvania, in December 2013.^([19](b06.xhtml#c03-endnote-19))
    The prison staff did not deliver this message to the intended recipient. Instead,
    they forwarded it to Gary Klivans, the forensic codebreaker mentioned earlier,
    who deciphered it using techniques described in this chapter, especially word
    guessing. Later, it became clear to him that the text was written in a well-known
    *Star Wars* writing system named Aurebesh. With knowledge of this symbol set,
    the deciphering is quite straightforward.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03008.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-8: This message sent to a prison inmate in 2013 turned out to be written
    in a *Star Wars* font.'
  prefs: []
  type: TYPE_NORMAL
- en: Can you break it, like Gary Klivans, with frequency analysis and word guessing
    only?
  prefs: []
  type: TYPE_NORMAL
- en: A postcard
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Solve the postcard from 1909 shown earlier in this chapter, in [Figure 3-3](#figure3-3).
    You can use the transcript and the frequency analysis we provided.
  prefs: []
  type: TYPE_NORMAL
- en: Another postcard
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Can you decipher the postcard in [Figure 3-9](#figure3-9) (provided to us by
    Raymond Borges), which is encrypted in a pigpen variant?^([20](b06.xhtml#c03-endnote-20))
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03009.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-9: Another postcard encrypted using a pigpen variant'
  prefs: []
  type: TYPE_NORMAL
- en: The Friedmans’ wedding centennial nickel
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Copies of the “wooden nickel” shown in [Figure 3-10](#figure3-10) were given
    out by Bill Briere and Jew-Lee Lann-Briere at the 2017 Symposium on Cryptologic
    History in Fort Meade, Maryland, to honor the centennial of the wedding of Elizebeth
    and William Friedman, the legendary couple who created the field of American cryptology.
    The nickel’s inscription is encrypted using a simple substitution cipher.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03010.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-10: An encrypted message on a wooden nickel'
  prefs: []
  type: TYPE_NORMAL
- en: Here’s a transcript. On the reverse side of the nickel are a pair of wedding
    bells.
  prefs: []
  type: TYPE_NORMAL
- en: '`UWCKWCCBSD EX KZW OWVVBCY`'
  prefs: []
  type: TYPE_NORMAL
- en: '`EX WDBRWTWKZ SCV OBDDBSJ`'
  prefs: []
  type: TYPE_NORMAL
- en: '`1917 * XHBWVJSC * 2017`'
  prefs: []
  type: TYPE_NORMAL
- en: Can you break it?
  prefs: []
  type: TYPE_NORMAL
- en: An Aristocrat from the ACA
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The following Aristocrat was published in a 2018 issue of *The Cryptogram*,
    the newsletter of the American Cryptogram Association:^([21](b06.xhtml#c03-endnote-21))
  prefs: []
  type: TYPE_NORMAL
- en: '`WNO ZA JYV YVA YNKHV RAU WNO XKRGUZAX JYV YVA YNKHV RGV JYV HRIV. JYKH, YV
    MYN NMAH JYV YVA YNKHV IKHJ SV UVRW, SBZAU, NG SNJY.`'
  prefs: []
  type: TYPE_NORMAL
- en: Unsolved cryptograms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Numerous unsolved cryptograms appear to have been created with simple substitution
    ciphers (although, of course, these are only guesses, as the solutions are not
    known). Here are a few of the most interesting ones.
  prefs: []
  type: TYPE_NORMAL
- en: An encrypted newspaper ad from 1888
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The encrypted newspaper advertisement depicted in [Figure 3-11](#figure3-11)
    was published in the London *Daily Chronicle* on February 13, 1888.^([22](b06.xhtml#c03-endnote-22))^,
    ^([23](b06.xhtml#c03-endnote-23))
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03011.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-11: This is a reproduction of an encrypted newspaper ad that was published
    in 1888\. The plaintext is unknown.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a transcript:'
  prefs: []
  type: TYPE_NORMAL
- en: '`H—H. A 500 ftb es lmv. 751308, 9sbletv qrex 2102\. Wftev G, sbmelo rqzvs Puveib
    7504210 vrl no reasonable wftakil urs, tmze q? Vranziebbs 501 xtz mftebs rfz ut,
    ebseul crxt not. In fine 700 1, bftel S.S. ultsn zmt mitx bfln. (10th)`'
  prefs: []
  type: TYPE_NORMAL
- en: To our knowledge, this cryptogram has never been deciphered. Can you solve it?
  prefs: []
  type: TYPE_NORMAL
- en: The Zodiac Celebrity Cypher
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: On September 25, 1990, an unknown person sent the postcard depicted in [Figure
    3-12](#figure3-12) to the *Vallejo Times-Herald*, a newspaper in the San Francisco
    area. The message on the postcard imitates the style of the Zodiac Killer, a serial
    murderer who sent encrypted letters to regional newspapers in the late 1960s.^([24](b06.xhtml#c03-endnote-24))
    (The Zodiac murder case and the cryptograms connected to it are explained in [Chapter
    6](c06.xhtml).) The identity of the postcard’s author is not known, but it is
    not likely the Zodiac Killer himself.^([25](b06.xhtml#c03-endnote-25)) This means
    that we are dealing with a Zodiac copycat cryptogram (of which you will see more
    over the course of this book).
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03012.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-12: This postcard was written by a Zodiac Killer copycat.'
  prefs: []
  type: TYPE_NORMAL
- en: The three lines of cleartext on the card contain the name and the location of
    the newspaper, as well as the expression `CELEBRITY CYPHER`. A *celebrity cypher*
    (today usually spelled *celebrity cipher*) is a crypto puzzle (typically an Aristocrat)
    that, once deciphered, turns out to be a quote by a famous person. Celebrity ciphers
    are quite popular among the members of the American Cryptogram Association and
    other puzzle enthusiasts. There are entire books and web pages dedicated to celebrity
    ciphers. Elonka’s book *The Mammoth Book of Secret Codes and Cryptograms* contains
    scores of them.^([26](b06.xhtml#c03-endnote-26))
  prefs: []
  type: TYPE_NORMAL
- en: The copycat postcard message (referred to as the Zodiac Celebrity Cypher) has
    never been solved. It is, of course, possible that it encrypts a quote by a famous
    person, but we don’t know this for sure.
  prefs: []
  type: TYPE_NORMAL
- en: It goes without saying that codebreakers have checked whether the creator of
    the Zodiac Celebrity Cypher message might have used the encryption systems found
    in the first two Zodiac cryptograms (which are solved), to no avail. There are
    several web pages providing information about the Zodiac Celebrity Cypher, some
    of which even suggest alleged solutions. However, from what we have seen so far,
    none of these makes sense.
  prefs: []
  type: TYPE_NORMAL
- en: The Furlong postcard
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The postcard depicted in [Figure 3-13](#figure3-13) was written by soccer official
    George Furlong (1843-1911) from Luton, United Kingdom, to his sister Lizzie in
    1873.^([27](b06.xhtml#c03-endnote-27)) Unlike most of the encrypted postcards
    of the time that we know about, this one hasn’t been solved.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/502727c03/f03013.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3-13: This British postcard from 1873 has never been deciphered.'
  prefs: []
  type: TYPE_NORMAL
- en: The script in which this postcard is written is a mystery of its own. It could
    be an ordinary, yet rarely used, writing system or an invented, secret script.
    It could also be a kind of shorthand, except that some of the letters (e.g., the
    triangle-shaped symbol) are not well suited for speedy writing. At least we can
    tell that the author wrote fluently and was practiced in using these glyphs. Transcribing
    this cryptogram is difficult, as some letters are written on top of each other.
    Numerous skilled codebreakers, including fans of Klaus’s blog, tried their luck
    on this message without success. Perhaps a reader can shed light on this unusual
    secret?
  prefs: []
  type: TYPE_NORMAL
