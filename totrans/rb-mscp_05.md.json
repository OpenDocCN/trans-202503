["```\nclass Mathematician\n  attr_accessor :first_name\n  attr_accessor :last_name\nend\n```", "```\n    $ **irb**\n    > **euler = Mathematician.new**\n  => #<Mathematician:0x007fbd738608c0>\n```", "```\n    > **euler.first_name = 'Leonhard'**\n     => \"Leonhard\"\n    > **euler.last_name  = 'Euler'**\n     => \"Euler\"\n    > **euler**\n  => #<Mathematician:0x007fbd738608c0 @first_name=\"Leonhard\", @last_name=\"Euler\">\n```", "```\n    > **euclid = Mathematician.new**\n    > **euclid.first_name = 'Euclid'**\n    > **euclid**\n  => #<Mathematician:0x007fabdb850690 @first_name=\"Euclid\">\n```", "```\n$ **irb**\n> \"string\".class\n => String\n> **1.class**\n => Fixnum\n> **:symbol.class**\n => Symbol\n```", "```\n$ **irb**\n> **str = \"some string value\"**\n => \"some string value\"\n> **str.instance_variables**\n => []\n> **str.instance_variable_set(\"@val1\", \"value one\")**\n => \"value one\"\n> **str.instance_variables**\n => [:@val1]\n> **str.instance_variable_set(\"@val2\", \"value two\")**\n => \"value two\"\n> **str.instance_variables**\n => [:@val1, :@val2]\n```", "```\n    struct RBasic {\n   VALUE flags;\n   VALUE klass;\n    };\n\n    #define ROBJECT_EMBED_LEN_MAX 3\n    struct RObject {\n   struct RBasic basic;\n      union {\n        struct {\n       long numiv;\n       VALUE *ivptr;\n       struct st_table *iv_index_tbl;\n     } heap;\n     VALUE ary[ROBJECT_EMBED_LEN_MAX];\n      } as;\n    };\n```", "```\nITERATIONS = 100000\n GC.disable\n obj = ITERATIONS.times.map { Class.new.new }\n```", "```\nBenchmark.bm do |bench|\n  20.times do |count|\n    bench.report(\"adding instance variable number #{count+1}\") do\n      ITERATIONS.times do |n|\n        obj[n].instance_variable_set(\"@var#{count}\", \"value\")\n      end\n    end\n  end\nend\n```", "```\nclass Mathematician\n  attr_accessor :first_name\n  attr_accessor :last_name\nend\n```", "```\nclass Mathematician\n  def first_name\n    @first_name\n  end\n  def first_name=(value)\n    @first_name = value\n  end\n  def last_name\n    @last_name\n  end\n  def last_name=(value)\n    @last_name = value\n  end\nend\n```", "```\n> **p Mathematician.class**\n => Class\n```", "```\nclass Mathematician < Person\n--*snip*--\n```", "```\n> **p Mathematician.class**\n => Class\n```", "```\n> **p Mathematician.superclass**\n => Person\n```", "```\n    class Mathematician\n   @type = \"General\"\n      def self.type\n        @type\n      end\n    end\n\n    puts Mathematician.type\n     => General\n```", "```\n    class Mathematician\n   @@type = \"General\"\n      def self.type\n        @@type\n      end\n    end\n\n    puts Mathematician.type\n     => General\n```", "```\n    class Mathematician\n      @type = \"General\"\n      def self.type\n        @type\n      end\n    end\n\n    class Statistician < Mathematician\n      @type = \"Statistics\"\n    end\n\n    puts Statistician.type\n  => Statistics\n    puts Mathematician.type\n  => General\n```", "```\n    class Mathematician\n      @@type = \"General\"\n      def self.type\n        @@type\n      end\n    end\n\n    class Statistician < Mathematician\n      @@type = \"Statistics\"\n    end\n\n    puts Statistician.type\n  => Statistics\n    puts Mathematician.type\n  => Statistics\n```", "```\nclass Mathematician < Person\n  AREA_OF_EXPERTISE = \"Mathematics\"\n  --*snip*--\n```", "```\ntypedef struct rb_classext_struct rb_classext_t;\nstruct RClass {\n    struct RBasic basic;\n    rb_classext_t *ptr;\n    struct st_table *m_tbl;\n    struct st_table *iv_index_tbl;\n};\n```", "```\nstruct rb_classext_struct {\n    VALUE super;\n    struct st_table *iv_tbl;\n    struct st_table *const_tbl;\n    VALUE origin;\n    VALUE refined_class;\n    rb_alloc_func_t allocator;\n};\n```", "```\nclass Mathematician\n  def first_name\n    @first_name\n  end\nend\n```", "```\nclass Mathematician\n  def self.class_method\n    puts \"This is a class method.\"\n  end\nend\n```", "```\nclass Mathematician\n  class << self\n    def class_method\n      puts \"This is a class method.\"\n    end\n  end\nend\n```", "```\n> **obj = Mathematician.new**\n> **obj.class_method**\n => undefined method `class_method' for\n#< Mathematician:0x007fdd8384d1c8 (NoMethodError)\n```", "```\n> **class AnotherClass; end**\n> **AnotherClass.class_method**\n => undefined method `class_method' for AnotherClass:Class (NoMethodError)\n```", "```\n $ **irb**\n![](httpatomoreillycomsourcenostarchimages1853843.png.jpg) > **ObjectSpace.count_objects[:T_CLASS]**\n![](httpatomoreillycomsourcenostarchimages1853845.png.jpg)  => 859\n    > class Mathematician; end\n     => nil\n    > **ObjectSpace.count_objects[:T_CLASS]**\n![](httpatomoreillycomsourcenostarchimages1853847.png.jpg)  => 861\n```", "```\nclass Mathematician\nend\n\np Mathematician\n => Mathematician\n\np Mathematician.singleton_class\n => #<Class:Mathematician>\n```", "```\np obj.singleton_class.methods\n => [ ... :class_method, ...  ]\n```"]