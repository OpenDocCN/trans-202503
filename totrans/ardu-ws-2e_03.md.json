["```\n// Listing 4-1, Project 4 - Demonstrating a Digital Input1 #define LED 3 \n#define BUTTON 7\nvoid setup()\n{2    pinMode(LED, OUTPUT);   // output for the LED  pinMode(BUTTON, INPUT); // input for the button\n} \nvoid loop()\n{ if ( digitalRead(BUTTON) == HIGH ) { digitalWrite(LED, HIGH); // turn on the LED delay(500);              // wait for 0.5 seconds digitalWrite(LED, LOW);  // turn off the LED }\n}\n```", "```\npinMode(BUTTON, INPUT); // input for button\n```", "```\n// Listing 4-2\nif (digitalRead(BUTTON) == HIGH)\n{ digitalWrite(LED, HIGH); // turn on the LED delay(500);              // wait for 0.5 seconds digitalWrite(LED, LOW);  // turn off the LED\n}\n```", "```\n// Listing 4-3\n#define LED 3\n#define BUTTON 7 \nvoid setup()\n{ pinMode(LED, OUTPUT);   // output for the LED pinMode(BUTTON, INPUT); // input for the button\n} \nvoid loop()\n{ if ( digitalRead(BUTTON) == HIGH ) { digitalWrite(LED, HIGH); } **else** { digitalWrite(LED, LOW); }\n}\n```", "```\nboolean raining = true; // create the variable \"raining\" and first make it true\n```", "```\nraining = false;\n```", "```\nif ( raining == true )\n{ if ( summer != true ) { // it is raining and not summer }\n}\n```", "```\nif ( !raining )\n{ // it is not raining (raining == false)\n}\n```", "```\nif (( raining == true ) && ( !summer ))\n{ // it is raining and not summer (raining == true and summer == false)\n}\n```", "```\nif (( raining == true ) || ( summer == true ))\n{ // it is either raining or summer\n}\n```", "```\nif ( snow == true && rain == true && !hot )\n{ // it is snowing and raining and not hot\n}\n```", "```\nif (( snow == true || rain == true ) && hot == false))\n{\n// it is either snowing or raining, and not hot\n}\n```", "```\nif (( snow || rain ) && !hot )\n{ // it is either snowing or raining, and not hot // ( snow is true OR rain is true ) AND it is not hot\n}\n```", "```\n// Project 5 - Controlling Traffic \n// define the pins that the buttons and lights are connected to:1 #define westButton 3 \n#define eastButton 13\n#define westRed 2\n#define westYellow 1 \n#define westGreen 0\n#define eastRed 12\n#define eastYellow 11\n#define eastGreen 10 \n#define yellowBlinkTime 500 // 0.5 seconds for yellow light blink 2 boolean trafficWest = true; // west = true, east = false3 int flowTime = 10000;       // amount of time to let traffic flow4 int changeDelay = 2000;     // amount of time between color changes \nvoid setup()\n{ // set up the digital I/O pins pinMode(westButton, INPUT); pinMode(eastButton, INPUT); pinMode(westRed, OUTPUT); pinMode(westYellow, OUTPUT); pinMode(westGreen, OUTPUT); pinMode(eastRed, OUTPUT); pinMode(eastYellow, OUTPUT); pinMode(eastGreen, OUTPUT); // set initial state for lights - west side is green first digitalWrite(westRed, LOW); digitalWrite(westYellow, LOW); digitalWrite(westGreen, HIGH);  digitalWrite(eastRed, HIGH); digitalWrite(eastYellow, LOW); digitalWrite(eastGreen, LOW);\n} \nvoid loop()\n{ if ( digitalRead(westButton) == HIGH ) // request west>east traffic flow { if ( trafficWest != true )  // only continue if traffic flowing in the opposite (east) direction { trafficWest = true; // change traffic flow flag to west>east delay(flowTime);    // give time for traffic to flow  digitalWrite(eastGreen, LOW); // change east-facing lights from green  // to yellow to red digitalWrite(eastYellow, HIGH); delay(changeDelay); digitalWrite(eastYellow, LOW); digitalWrite(eastRed, HIGH); delay(changeDelay);  for ( int a = 0; a < 5; a++ ) // blink yellow light { digitalWrite(westYellow, LOW); delay(yellowBlinkTime); digitalWrite(westYellow, HIGH); delay(yellowBlinkTime); } digitalWrite(westYellow, LOW); digitalWrite(westRed, LOW); // change west-facing lights from red // to green digitalWrite(westGreen, HIGH);  } } if ( digitalRead(eastButton) == HIGH ) // request east>west traffic flow { if ( trafficWest == true )  // only continue if traffic flow is in the opposite (west) direction { trafficWest = false; // change traffic flow flag to east>west delay(flowTime);     // give time for traffic to flow  digitalWrite(westGreen, LOW);  // change west-facing lights from green to yellow to red digitalWrite(westYellow, HIGH); delay(changeDelay); digitalWrite(westYellow, LOW); digitalWrite(westRed, HIGH); delay(changeDelay);  for ( int a = 0 ; a < 5 ; a++ ) // blink yellow light  { digitalWrite(eastYellow, LOW); delay(yellowBlinkTime); digitalWrite(eastYellow, HIGH); delay(yellowBlinkTime); }  digitalWrite(eastYellow, LOW);  digitalWrite(eastRed, LOW); // change east-facing lights from red // to green digitalWrite(eastGreen, HIGH);  } }\n}\n```", "```\nif ( trafficWest == true )\n```", "```\na = analogRead(0); // read analog input pin 0 (A0)\n// returns 0 to 1023, which is usually 0.000 to 4.995 volts\n```", "```\n// Project 6 - Creating a Single-Cell Battery Tester\n#define newLED 2 // green LED \n#define okLED 4  // yellow LED \n#define oldLED 6 // red LED \nint analogValue = 0;1 float voltage = 0; \nint ledDelay = 2000; \nvoid setup()\n{ pinMode(newLED, OUTPUT); pinMode(okLED, OUTPUT); pinMode(oldLED, OUTPUT);\n} \nvoid loop()\n{2    analogValue = analogRead(0); 3    voltage = 0.0048*analogValue; 4    if ( voltage >= 1.6 )  { digitalWrite(newLED, HIGH); delay(ledDelay); digitalWrite(newLED, LOW); } 5    else if ( (voltage < 1.6) && (voltage) > 1.4 )  { digitalWrite(okLED, HIGH); delay(ledDelay); digitalWrite(okLED, LOW); } 6     else if ( voltage <= 1.4 )  { digitalWrite(oldLED, HIGH); delay(ledDelay); digitalWrite(oldLED, LOW); }\n}\n```", "```\na = 100;\nb = a + 20;\nc = b - 200;\nd = c + 80; // d will equal 0\n```", "```\nint a = 100;\nfloat f;\nfloat g; \nf = a / 3; // f = 33.333333\ng = a + f; // g = 133.333333\n```", "```\n**analogReference(EXTERNAL); // select AREF pin for reference voltage**\n```", "```\n**analogReference(INTERNAL); // select internal 1.1 V reference voltage**\n```", "```\n// Project 7 - Trying Out a Piezo Buzzer\n#define PIEZO 3 // pin 3 is capable of PWM output to drive tones\nint del = 500;\nvoid setup()\n{ pinMode(PIEZO, OUTPUT);\n} \nvoid loop()\n{1    analogWrite(PIEZO, 128);  // 50 percent duty cycle tone to the piezo delay(del); digitalWrite(PIEZO, LOW); // turn the piezo off delay(del);\n}\n```", "```\n// Project 8 - Creating a Quick-Read Thermometer \n// define the pins that the LEDs are connected to:\n#define HOT 6\n#define NORMAL 4\n#define COLD 2 \nfloat voltage = 0;\nfloat celsius = 0;\nfloat hotTemp = 26;\nfloat coldTemp = 20;\nfloat sensor = 0; \nvoid setup()\n{ pinMode(HOT, OUTPUT); pinMode(NORMAL, OUTPUT); pinMode(COLD, OUTPUT);\n} \nvoid loop(){ // read the temperature sensor and convert the result to degrees Celsius1    sensor = analogRead(0);  voltage = ( sensor * 5000 ) / 1024; // convert raw sensor value to // millivolts voltage = voltage - 500; // remove voltage offset celsius = voltage / 10;  // convert millivolts to Celsius // act on temperature range2    if ( celsius < coldTemp )  { digitalWrite(COLD, HIGH); delay(1000);  digitalWrite(COLD, LOW); }3    else if ( celsius > coldTemp && celsius <= hotTemp )  { digitalWrite(NORMAL, HIGH); delay(1000); digitalWrite(NORMAL, LOW); } else { // celsius is > hotTemp digitalWrite(HOT, HIGH); delay(1000); digitalWrite(HOT, LOW); }\n}\n```"]