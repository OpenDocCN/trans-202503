- en: '14'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Drawing
  prefs: []
  type: TYPE_NORMAL
- en: Historically, one of the names of vector editors was *vector drawing*—or simply
    *drawing*—applications. Bitmap editors, on the other hand, are sometimes called
    *paint programs*. The contrast between drawing and painting, stemming from traditional
    media (paper versus canvas), is thus carried on into the digital realm. Even though
    vector programs are now used—perhaps even preferentially—for higher-level tasks,
    such as composition and layout, simply *drawing* is still the most basic use case
    for this kind of tool.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is true that vector drawings can never be as naturalistic and "painterly"
    as bitmaps; even the best vector art has that recognizable smooth, computer-generated
    look. Often, however, this is not a problem—it can even be an advantage. Also,
    vector editors have something that no bitmap editor can match: the ability to
    treat each stroke as a separate object that never merges or "flattens" into others
    (unless you tell it to). As it turns out, this infinite tweakability is sometimes
    more important for producing a good freehand drawing than the ability to imitate
    pastel strokes or wet-on-wet watercolor.'
  prefs: []
  type: TYPE_NORMAL
- en: Inkscape has a number of drawing tools to choose from, depending on the type
    of art you want to create ([Figure 14-1](#fig14-1)). If you need straight-line
    geometry or spline-shaped paths with precise placement of nodes, use the Pen tool
    ([14.1.1](#section14.1.1)). For freehand paths, more or less smoothed out, use
    the Pencil tool ([14.1.2](#section14.1.2)). For complex, naturalistic, pressure-sensitive
    filled strokes imitating various physical effects, such as trembling or inertia,
    use the Calligraphic pen ([14.2](#section14.2)). To do cartoon-like fillings between
    multiple complex strokes, Inkscape has the Paint Bucket tool ([14.3](#section14.3)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-tools.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-1: Inkscape''s drawing tools at a glance'
  prefs: []
  type: TYPE_NORMAL
- en: A number of other tools deserve an honorable mention in this chapter on drawing.
    You can quite literally draw with copies or clones of objects using the Spray
    tool ([4.7](c04.xhtml#section4.7)). The Tweak tool is essential for artwork creation,
    whether you use it for shuffling your strokes around ([6.10](c06.xhtml#section6.10)),
    applying color ([8.9](c08.xhtml#section8.9)), or freehand path pushing ([12.6](c12.xhtml#section12.6)).
    You can use the Eraser tool ([14.4](#section14.4)) to wipe out parts of your drawing.
    Finally, Inkscape has a specialized Connector tool for drawing diagrams ([14.5](#section14.5)).
  prefs: []
  type: TYPE_NORMAL
- en: This chapter would be incomplete without mentioning that you can easily rotate
    Inkscape's canvas, with all its contents, using Ctrl-Shift-wheel ([3.13](c03.xhtml#section3.13)).
    You can also flip (mirror) the canvas with commands in the View ▶ Canvas Orientation
    submenu. For an artist, the ability to place the drawing at the most convenient
    angle for stroking is a big help.
  prefs: []
  type: TYPE_NORMAL
- en: 14.1 The Pen and Pencil Tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Traditionally, ink pens are associated with writing and draftsmanship, and graphite
    pencils with artistic sketching and drawing. In Inkscape, the sibling Pen and
    Pencil tools are both used for creating paths. The difference is that you use
    the Pen when you want to control placement of individual nodes, whereas the Pencil
    is for freehand doodles where Inkscape takes care of the nodes and other details.
    As all metaphors are, this one is somewhat arbitrary, but it has stuck.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, I first describe the basic operation of Pen and Pencil and
    then look at the advanced features—drawing modes and stroke shapes—that these
    tools have in common and that make use of path effects ([Chapter 13](c13.xhtml#ch13)).
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.1 The Pen Tool
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Pen tool, where you create individual nodes by clicking the canvas, is reminiscent
    of the Node tool ([12.5](c12.xhtml#section12.5)) except it is optimized for creating
    new nodes instead of editing them.
  prefs: []
  type: TYPE_NORMAL
- en: Switch to the Pen tool (Shift-F6 or B), make sure it is in the default Bézier
    mode (the leftmost button on the controls bar), and click the canvas. You have
    created a first node of a new path. Just moving the mouse around (without clicking)
    moves a red segment that shows you how the path will go if you create the next
    node where you are.
  prefs: []
  type: TYPE_NORMAL
- en: Keep clicking to add more nodes. To finish the path, double-click (this adds
    one more node and finishes the path), or right-click, or press Enter (both these
    methods finish the path and cancel the red segment without adding any more nodes).
    It is only at this point that the entire path is actually created as an object;
    what you saw until now was just a virtual scaffold. Another way to finish a path
    is to *close* it; if you create the next node exactly over the first node of the
    path (it is marked by a square anchor), the path is closed and finalized.
  prefs: []
  type: TYPE_NORMAL
- en: If you click and drag instead of just clicking, you're creating a smooth Bézier
    node ([Figure 14-2](#fig14-2)); the blue straight line with round handle(s) at
    the end(s) that moves while you drag is the single handle (for the start node)
    or two symmetric handles (for a mid-node, [12.1.4](c12.xhtml#section12.1.4)).
    As soon as you release the mouse button, the node's handles are fixed (but the
    path is still being created).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pen1.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-2: Pen: first node set, ready for the second'
  prefs: []
  type: TYPE_NORMAL
- en: After you create the second node, the part of the path between the two nodes
    defined so far becomes green, and you once again have a red segment stretching
    from the last created node ([Figure 14-3](#fig14-3)). You can repeat this indefinitely—keep
    clicking and dragging (for smooth symmetric nodes) or just clicking (for cusp
    nodes); on each step, the path you have laid out so far is green, and the last
    segment you are about to create is red.
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pen2.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-3: Pen: two nodes set, ready for the third'
  prefs: []
  type: TYPE_NORMAL
- en: To cancel creating a path at any time, press Escape or simply switch to another
    tool.
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.1.1 Node Types
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As you've just seen, click-and-drag creates a smooth node with two symmetric
    handles (unless this is a first node of a path that has only one handle). A simple
    click creates a cusp node without any handles. You can also create cusp nodes
    with noncollinear handles; for this, click-and-drag, but then, once the opposite
    handle is where you want it, press Shift while dragging. This fixes the far handle
    and lets you move the near handle independently, as [Figure 14-4](#fig14-4) demonstrates.
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pen3.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-4: Creating cusp nodes with the Pen'
  prefs: []
  type: TYPE_NORMAL
- en: You can also press Ctrl while dragging a handle to snap it to 15-degree increments
    (compare [6.3](c06.xhtml#section6.3); you can choose another snap value in Preferences ▶ Behavior ▶ Steps).
    Pressing Ctrl while moving the mouse around between creating nodes will similarly
    snap the direction between the last created node and the mouse point; this is
    an easy way to create strictly horizontal or vertical lines, as shown in [Figure 14-5](#fig14-5).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pen4.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-5: Pen: snapping with Ctrl'
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.1.2 Going Back
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You can always step back in your path creation process. To cancel the last added
    green segment, press Backspace or Delete once, or press it repeatedly to remove
    several segments. Removing the last remaining node cancels the entire path.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is not always easy to click exactly where you want the node to appear on
    the first attempt. Inkscape allows you to move the last created node (that is,
    the end of the green segment) without finalizing the path by using the arrow keys
    with the same convenient modifiers as in other tools: Alt to move by 1 screen
    pixel, Shift to move by 10 times the distance ([6.5.1](c06.xhtml#section6.5.1)).'
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.1.3 Continuing a Path
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When you're in the Pen tool, any single selected path displays its end nodes,
    if it has any (that is, if it is open), as little square *anchors*. (This is the
    case for any path you just created with this tool itself—after finalizing, it
    remains selected.) These anchors allow you to continue adding to the selected
    path (by placing your first node in the anchor) or to close it (by penning from
    one anchor to the other).
  prefs: []
  type: TYPE_NORMAL
- en: You can also add a new subpath ([12.1.1](c12.xhtml#section12.1.1)) to the selected
    path. To do this, just hold down Shift *while* you click to create the first node.
    After that, create and finalize the path as usual; your path will be added as
    a subpath to the selected path. All open subpaths of the selected path show anchors,
    which means you can close them or connect them to one another ([Figure 14-6](#fig14-6)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pen-subpaths.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-6: Pen: adding or closing a subpath'
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.2 The Pencil Tool
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Pencil tool (F6 or P) is similar to the Pen tool. The main difference is
    that with the Pencil, you don't worry about individual nodes or handles; you just
    draw a freehand line and Inkscape approximates it with a path.
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.2.1 Smoothing
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: When you draw with the Pencil, the resulting path is always smoother than the
    actual trace of your mouse drag. To change how much smoothing is applied, use
    the Smoothing section of the tool's controls bar. Smaller values of Smoothing
    produce more precise and node-rich approximations of what you have drawn; conversely,
    larger values create more generic and simplified paths with fewer nodes ([Figure 14-7](#fig14-7)).
    At the maximum of 100, most mouse drags will create just a single Bézier segment
    between two nodes.
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pencil.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-7: Pencil strokes at various smoothing levels'
  prefs: []
  type: TYPE_NORMAL
- en: Next to the numeric Smoothing value, a toggle button calledLPE based interactive
    smoothing controls how the smoothing function works. With this button unpressed,
    you activate the old method where smoothing, at the specified level, is applied
    once when the path is finalized, and the unsmoothed source path is discarded.
    This way, smoothing is applied only to newly created paths in the Pencil tool
    and cannot be changed afterward.
  prefs: []
  type: TYPE_NORMAL
- en: With this button pressed (now the default), instead, the source path is stored
    at the minimum level of smoothing but then a Simplify path effect ([13.3.4.4](c13.xhtml#section13.3.4.4))
    is applied to it. This method of smoothing is fully reversible (you can just remove
    the path effect) and adjustable (you can change the amount of smoothing, whether
    via the effect's parameters in the Path Effects dialog or simply by varying the
    Smoothing value in the Pencil tool's controls bar when any path with the Simplify
    effect is selected). If you like the interactivity of the new method but don't
    want paths with path effects in your document, the Flatten button will remove
    the effect and produce a bare path at the current Smoothing level.
  prefs: []
  type: TYPE_NORMAL
- en: This approach is wonderful in theory, but its implementation has some kinks.
    I found that if you want the absolute minimum of smoothing, you should set the
    value to 1 (out of the maximum of 100), not zero. Also, at lower values of Smoothing,
    theSimplify path effect sometimes produces more, not fewer, nodes than the original
    had.
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.2.2 Pressure Sensitivity
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: There was a time when the only tool in Inkscape that used the pressure signal
    of a tablet pen was the Calligraphic Pen ([14.2](#section14.2)). Over time, it
    was joined by Tweak ([6.10](c06.xhtml#section6.10), [8.9](c08.xhtml#section8.9),
    [12.6](c12.xhtml#section12.6)), Eraser ([14.4](#section14.4)), Spray ([4.7](c04.xhtml#section4.7))
    tools. Now, the Pencil tool can also use a pressure-sensitive input device to
    create paths with variable stroke width. It does this via the Power stroke path
    effect ([13.3.1.1](c13.xhtml#section13.3.1.1)).
  prefs: []
  type: TYPE_NORMAL
- en: Enable pressure-sensitive drawing by clicking a toggle button on the controls
    bar. Now the Shape controls ([14.1.5](#section14.1.5)) are gone (because the pressure-controlled
    strokes cannot have a predefined shape), and the drawing mode buttons ([14.1.4](#section14.1.4))
    are disabled. Instead, you see numeric controls for the minimum and maximum width
    (which correspond to the minimum and maximum pressure of the pen), as well as
    a drop-down for choosing the type of stroke caps. These controls apply only to
    the newly created strokes; if you want to change width or caps in an existing
    stroke, you can do so via the Power stroke path effect it has ([13.3.1.1](c13.xhtml#section13.3.1.1)).
  prefs: []
  type: TYPE_NORMAL
- en: Pressure-enabled drawing leaves a trail of red circles; their sizes indicate
    the pressure in each point, and their spacing is determined by the speed of your
    pen movement. Once you lift the pen, a path with Power stroke is created that
    approximates (with some smoothing) the pressure data recorded during your stroke,
    as shown in [Figure 14-8](#fig14-8).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pencil-pressure.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-8: Drawing with the Pencil using a pressure-sensitive tablet pen'
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.2.3 Continuing a Path
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Similar to the Pen tool, in the Pencil tool, any selected path displays anchors
    on the open end nodes of all its subpaths. You can continue, close, and connect
    subpaths by drawing from one such anchor to another, and you can add new subpaths
    to the selected shape by beginning to draw with Shift held down.
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.2.4 Sketching with Alt
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Drawing with Alt in the Pencil tool enables *sketching*. Any number of drags
    that you do before letting go of Alt will be*averaged*, and that single averaged
    path will be created only after you release Alt. You can think of this as an inversion
    of what the Sketch path effect does ([13.3.4.1](c13.xhtml#section13.3.4.1)). Sketching
    allows you to "feel your way" when drawing—to zero in on the best line without
    creating a thicket of tentative discardables.
  prefs: []
  type: TYPE_NORMAL
- en: On the Pencil tool's Preferences page, the Average all sketches setting (on
    by default) averages *all* sketching strokes made while you hold Alt with equal
    weight. If you turn it off, the tool will average between the latest stroke and
    the previous average, thereby giving your latest stroke more weight.
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.3 Style
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Like all object-creating tools, the Pen and Pencil tools can use either the
    last set style or their own tool style ([11.1.2](c11.xhtml#section11.1.2)). By
    default, they use their own style, which is initially set to no fill, 1 px black
    stroke. This is because more often than not, the last set style has fill and no
    stroke, whereas when drawing with these tools, you likely want the result to have
    stroke but not necessarily fill. Refer to [Figure 11-2](c11.xhtml#fig11-2) for
    how to change the tool style. As usual, the style that will be used for the next
    path you create is displayed on the right end of the controls bar (shown in [Figure 11-1](c11.xhtml#fig11-1)).
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.4 Drawing modes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Both Pen and Pencil have a number of modes, apart from the default *Bézier
    mode*, that let you create paths out of other types of splines or segments. These
    correspond to the Mode: buttons on the controls bars of these tools ([Figure 14-9](#fig14-9)).
    The first button is the default mode that creates regular SVG paths out of straight
    lines and Bézier curves.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pen-modes.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-9: The modes in the Pen tool (Pencil doesn''t have the last two)'
  prefs: []
  type: TYPE_NORMAL
- en: The second mode creates *Spiro paths*—that is, paths with the Spiro spline path
    effect applied ([13.3.7.2](c13.xhtml#section13.3.7.2)). In this mode, a simple
    click in Pen creates a smooth node, and a Shift-click creates a cusp node; there's
    no way to create a half-smooth node ([12.5.5](c12.xhtml#section12.5.5)).
  prefs: []
  type: TYPE_NORMAL
- en: The Pencil tool, as you've seen ([14.1.2.1](#section14.1.2.1)), first applies
    some smoothing to your hand-drawn stroke, by default using the Simplify path effect.
    Then, it applies the Spiro spline effect on top of Simplify. Since, at the (default)
    low values of Smoothing, Simplify tends to produce *more* nodes than the original
    path had, the result may not look very much like a Spiro at all—because the extra
    nodes added by Simplify make Spiro track the path unusually closely. If you're
    puzzled by this, just remove Simplify from the effects stack of the path.
  prefs: []
  type: TYPE_NORMAL
- en: The third button creates *BSpline paths*—that is, paths with the BSpline path
    effect applied ([13.3.7.1](c13.xhtml#section13.3.7.1)). In this mode, a simple
    click in Pen creates a smooth off-curve node, and a Shift-click creates a cusp
    node.
  prefs: []
  type: TYPE_NORMAL
- en: 'The two other modes (Pen-only) are restrictions of the regular mode. The *Straight
    lines* mode disables creation of smooth nodes: even if you drag, you end up with
    a cusp node without handles. The *Paraxial* mode additionally restricts the segments
    to being parallel or perpendicular to the first segment you create in a path;
    additionally, each segment is perpendicular to the one that precedes it. For example,
    if you restrict the first segment to vertical by pressing Ctrl, the next segment
    will be horizontal, then vertical, then horizontal again, and so on. That may
    not be much of a trick, but the true usefulness of this drawing mode is its ability
    to draw within a slanted coordinate system: just draw the first segment at the
    correct angle and then keep going in this rotated world.'
  prefs: []
  type: TYPE_NORMAL
- en: In the Straight lines and Paraxial modes, if you Ctrl-click without creating
    a path, you create a single *dot*—a little circle shape ([11.4](c11.xhtml#section11.4)).
    This is convenient in geometric and technical drawings. You can set the size of
    the Ctrl-click dots, in units of stroke width, in the Pen tool's preferences (double-click
    the tool icon in the toolbox to access its page in the Preferences dialog); the
    default is three stroke widths. If you use Shift-Ctrl, the dot is twice as big
    ([Figure 14-10](#fig14-10)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pen-spiro.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-10: Pen: Spiros, BSplines, straight lines, paraxial lines, and single
    dots'
  prefs: []
  type: TYPE_NORMAL
- en: 14.1.5 Stroke Shapes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Shape drop-down menu for the Pen and Pencil tools lets you choose the shape
    of the stroke for the path you are creating. The Scale value next to it adjusts
    the width of the shaped stroke (in relative units). In Pencil, these controls
    are shown only if you don't have pressure sensitivity enabled ([14.1.2.2](#section14.1.2.2)).
  prefs: []
  type: TYPE_NORMAL
- en: By itself, SVG does not support shaped strokes; in SVG, a stroke is always a
    constant-width strip ([Chapter 9](c09.xhtml#ch9)). All other stroke shapes are
    emulated by Inkscape via path effects ([Chapter 13](c13.xhtml#ch13)). That is
    why there's a difference in behavior between the default None and the rest of
    the stroke shapes in this list ([Figure 14-11](#fig14-11)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pen-shape.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-11: Shaped strokes with the Pen tool'
  prefs: []
  type: TYPE_NORMAL
- en: 'With None, you get the barebones SVG path with a plain, constant-width stroke.
    Here''s what the tool does for the other Shape options:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Two triangles: Triangle in *decreases* the width to zero toward the end of
    the path, and Triangle out *increases* the width toward the end. These are created
    using the Power stroke path effect ([13.3.1.1](c13.xhtml#section13.3.1.1)). To
    adjust width, use the Pen or Pencil''s **Scale** control or drag the onscreen
    purple-colored handle in the Node tool.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ellipse: a circle with the diameter of 10 px is applied using the Pattern Along
    Path effect to your path ([13.3.2](c13.xhtml#section13.3.2)). To adjust width,
    use the Pen or Pencil''s **Scale** control or the onscreen handle (perpendicular
    at the end node) in the Node tool.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'From clipboard: any path you had copied to the clipboard gets applied to the
    path you draw as a pattern using the Pattern Along Path path effect ([13.3.2](c13.xhtml#section13.3.2)).
    To adjust width, use the Pen or Pencil''s **Scale** control or the onscreen handle
    (perpendicular at the end node) in the Node tool. To edit the shape of the stroke,
    use the **Show next editable path effect parameter** button in the Node tool ([12.5.1](c12.xhtml#section12.5.1)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, if you create a line of text and convert it to a single path, copy
    it, and choose this option in the Pencil, each stroke will be painted by this
    line of text (appropriately bent and stretched).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Bend from clipboard: any path you had copied to the clipboard gets applied
    to the path you draw as a skeleton using the Bend path effect ([13.3.2.2](c13.xhtml#section13.3.2.2)).
    For example, if you create an arc, copy it, and choose this option in the Pencil,
    each freehand doodle you create will be *bent* by this arc, on top of its own
    shape.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Last applied: whatever shape you used with this tool the last time will be
    used again. Why is this useful? You can create a brush shape, copy it, apply it
    to a Pen or Pencil stroke once using From clipboard, then switch it to Last applied
    and keep using this brush so that the clipboard can be used for other things.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The path you create may or may not have a fill inside it, depending on the style
    the tool uses ([14.1.3](#section14.1.3)). With Power stroke, you cannot have any
    fill *inside the path*, because the tool automatically applies the style of stroke
    to the fill and discards the original stroke style. With Pattern Along Path, however,
    you can have fill *inside the pattern* that is stretched along your path. With
    Bend, you can have both fill and stroke as with the default None.
  prefs: []
  type: TYPE_NORMAL
- en: Path effects creating stroke shapes are added on top of any other effects that
    the Pen or Pencil tools add, including Spiro spline or BSpline (both Pen and Pencil)
    and Simplify (Pencil only). For example, if you draw a Spiro path with the Ellipse
    shape, then switch to the Node tool and adjust the Spiro nodes, the entire elliptical
    shape will bend and curl along the Spiro spline. In the Path Effect Editor dialog
    for this path, you will find both Spiro spline and Pattern Along Path effects
    stacked on top of each other. To turn a path with any path effect(s) into a regular
    path, use the **Object to Path** command (Shift-Ctrl-C).
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 14-12](#fig14-12) shows some examples of Pencil paths created with
    splines and/or stroke shapes.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pencil-shapes.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-12: Shaped strokes with the Pencil tool'
  prefs: []
  type: TYPE_NORMAL
- en: 14.2 The Calligraphic Pen Tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The name *Inkscape* is quite apt: the most sophisticated drawing tool in the
    program, the Calligraphic pen, feels *inky* indeed. As its name implies, this
    tool was initially intended for calligraphy—that is, beautiful handcrafted lettering.
    With time, however, it became more versatile and is now used for general artistic
    sketching, drawing, and inking.'
  prefs: []
  type: TYPE_NORMAL
- en: Switch to the Calligraphic pen (Ctrl-F6 or C) and drag on the canvas. Inkscape
    will create a filled path, its width and shape depending on the angle of the stroke,
    the speed of dragging, and the pressure of your pen (if you are using a pressure-sensitive
    tablet). The result may be similar to the Pencil tool in the pressure-sensitive
    mode ([14.1.2.2](#section14.1.2.2)), but the Calligraphic pen has a lot more options
    and behavior subtleties. The result of this tool is always a plain filled path
    without any path effects.
  prefs: []
  type: TYPE_NORMAL
- en: 14.2.1 Width
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The most important setting on the tool's controls bar is Width, specifying the
    width of the stroke (or more precisely, its *maximum* width; other factors may
    also affect width, but it will never exceed the value you set here), as shown
    in [Figure 14-13](#fig14-13). You can adjust the width value with the ← and →
    keys at any time while using the Calligraphic pen tool.
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-width.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-13: Calligraphic pen: varying width (pressure sensitivity is off)'
  prefs: []
  type: TYPE_NORMAL
- en: Along with the absolute units (px, mm, and so on), you can also set the tool's
    width in relative units (%), which makes the width relative to the size of your
    document window, not to any objects or measurements in the document. In other
    words, if you zoom out, your stroke will be wider in absolute units but will *look*
    exactly the same width to you. The value of 1 always gives a hairline, and 100
    always gives a stroke about 2 centimeters wide as measured on your screen.
  prefs: []
  type: TYPE_NORMAL
- en: This approach may seem strange at first, but it has the advantage that you can
    always have the same *feel* for the tool, no matter what your level of zoom is,
    providing for an intuitive workflow. First, you zoom out and lay down the main
    broad strokes of your drawing; then, you zoom in to add finer and finer details—all
    without shifting the Width back and forth.
  prefs: []
  type: TYPE_NORMAL
- en: 14.2.1.1 Pressure Sensitivity
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If you have a pressure-sensitive tablet as your input device, Inkscape can
    use the pressure information to change the width of the stroke: press lightly
    for a thin line, press harder for a wider brush ([Figure 14-14](#fig14-14)).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-pressure.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-14: Calligraphic pen: drawing with or without pressure sensitivity
    (Width is the same)'
  prefs: []
  type: TYPE_NORMAL
- en: To enable pressure sensitivity, click the toggle button to the right of the
    **Width** control. Without pressure sensitivity, the tool draws as if maximum
    pressure is applied.
  prefs: []
  type: TYPE_NORMAL
- en: 14.2.1.2 Tracing Background
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Another thing that can affect the width of the Calligraphic pen stroke—if you
    enable it—is the darkness of the color of the background over which you are drawing:
    your brush is at its thinnest when you draw over white and at its broadest when
    you draw over black. This is most useful when you use *guide tracking* ([14.2.7](#section14.2.7))
    to create a hatching over an existing drawing or bitmap and want to achieve a
    shading effect with strokes of smoothly varying width, as shown in [Figure 14-15](#fig14-15).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-tracing.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-15: Calligraphic pen: tracking background by width'
  prefs: []
  type: TYPE_NORMAL
- en: To enable tracing the background, click the next toggle button after the **Pressure
    Sensitivity** toggle. You can combine this setting with Pressure Sensitivity,
    although it usually makes sense to turn Pressure Sensitivity off when you're tracing.
  prefs: []
  type: TYPE_NORMAL
- en: 14.2.1.3 Thinning by Speed
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Finally, the speed of your drawing—how fast you're dragging the mouse or pen—may
    also affect the width of your stroke. This is controlled by the Thinning value,
    which takes values from –100 to 100 ([Figure 14-16](#fig14-16)). Positive values
    make your stroke thinner as you go faster; negative values make it thicker. If
    you set this parameter to 0, thinning by speed is disabled.
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-thinning.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-16: Calligraphic pen: thinning by speed (pressure sensitivity is
    off)'
  prefs: []
  type: TYPE_NORMAL
- en: Since a stroking movement is usually faster in the middle of a drag, the result
    is a shape with a fixed width at the ends and a "breathing" middle—thinner for
    positive values of this parameter. Pressure sensitivity usually has the opposite
    effect, as pressure in the middle of a stroke is typically higher than at the
    ends. An interplay of these two factors gives the tool its natural feel.
  prefs: []
  type: TYPE_NORMAL
- en: A real-world felt pen or pencil usually leaves a thinner trail when you move
    it faster; the default value for this parameter is set to 10 to emulate this behavior.
    However, you can also push it all the way to –100 or to 100, which produces curiously
    "exploding" or "imploding" strokes very much unlike anything in the real world!
  prefs: []
  type: TYPE_NORMAL
- en: 14.2.2 Angle
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Angle and Fixation parameters treat the Calligraphic pen as a flat-tipped
    calligraphic pen that can be held at a varying angle ([Figure 14-17](#fig14-17)).
    The Angle sets the angle of the pen''s tip to the horizontal: 0 is horizontal,
    +90 is rotated all the way to the vertical counterclockwise, and –90 is rotated
    clockwise. You can also change this value by pressing the ↑ (increase) or ↓ (decrease)
    arrow keys.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-angle.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-17: Calligraphic pen: the Angle and Fixation'
  prefs: []
  type: TYPE_NORMAL
- en: Setting an angle with a nonzero fixation is most useful for producing calligraphic
    lettering. For most styles of calligraphy, the angle should be somewhere between
    30 and 60 degrees.
  prefs: []
  type: TYPE_NORMAL
- en: The Fixation (in the range of 0 to 100) controls how strictly the Angle is enforced.
    When Fixation is at its maximum, the tip is always rotated at the set angle, regardless
    of the direction of your stroke—so that drawing parallel to the pen angle always
    gives a hairline stroke, whereas drawing perpendicular to it produces maximum
    width. With zero Fixation, the direction of the pen is always perpendicular to
    the direction of movement, which makes Angle irrelevant and gives you the effect
    of a felt-tip pen or a round brush. Intermediate values ofFixation produce a stroke
    that is affected *both* by Angle and the direction of movement, in varying proportions.
  prefs: []
  type: TYPE_NORMAL
- en: 14.2.3 Caps
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By default, Calligraphic pen strokes are cut blunt at the ends. This is best
    for calligraphy work, but at other times you may want a more rounded appearance.
    Increase the Caps parameter to about 0.5 for slight bulges at the ends, to 1.3
    for approximately round caps, and up to 5 for long, protruding caps, as shown
    in [Figure 14-18](#fig14-18).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-caps.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-18: Calligraphic pen: caps of a stroke'
  prefs: []
  type: TYPE_NORMAL
- en: 14.2.4 Tremor, Wiggle, and Mass
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: What you've seen so far of the Calligraphic pen tool is useful, if maybe a little
    boring. It's time to add some fun! The last three parameters—Tremor, Wiggle, and
    Mass (all in the range of 0 to 100)—modify the behavior of the tool in some uncommon
    ways.
  prefs: []
  type: TYPE_NORMAL
- en: Even when using a graphics tablet with pressure sensitivity, the Calligraphy
    pen's brush strokes often look too smooth and computer-ish. Increasing tremor
    adds small-scale disturbances to the stroke for a more natural look—rough, trembling,
    or even splotchy. The frequency of the tremor is temporal, rather than spatial,
    which means if you draw faster, the roughness will be stretched along the stroke
    and therefore look smoother.
  prefs: []
  type: TYPE_NORMAL
- en: The Wiggle parameter also disturbs the stroke but at a larger scale, making
    it waver in wavy or loopy patterns, departing sometimes quite far from the actual
    position of the cursor, especially at sharp turns ([Figure 14-19](#fig14-19)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-tremor-wiggle.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-19: Calligraphic pen: effects of tremor (left) and wiggle (right)'
  prefs: []
  type: TYPE_NORMAL
- en: Mass makes the brush lag behind the cursor, as if slowed down by inertia, resulting
    in smoothing of sharp corners and shortening of the fast flights of your pen.
    The default settings for tremor and wiggle are 0, but mass has a small nonzero
    default value (2 out of 100) so that the Calligraphic pen feels light and responsive
    but not entirely weightless.
  prefs: []
  type: TYPE_NORMAL
- en: 14.2.5 Calligraphic Presets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Calligraphic pen is one of the most settings-rich tools in Inkscape. Of
    course, tweaking several sliders and buttons every time you want to switch from
    a smooth marker pen to a wiggly brush is time-consuming. Presets are a solution
    to this problem: you can set multiple parameters at once by choosing one of the
    presets from the drop-down menu on the left end of the toolbar. Several presets
    come with the program:'
  prefs: []
  type: TYPE_NORMAL
- en: Dip pen
  prefs: []
  type: TYPE_NORMAL
- en: 'Is an imitation of a soft calligraphy pen: smooth (no tremor or wiggle), pressure-sensitive,
    angle fixed at 30 degrees, no caps rounding.'
  prefs: []
  type: TYPE_NORMAL
- en: Marker
  prefs: []
  type: TYPE_NORMAL
- en: 'Is a plain, constant-width, felt-tip marker: smooth, no pressure sensitivity,
    no speed thinning, no angle fixation, round caps.'
  prefs: []
  type: TYPE_NORMAL
- en: Brush
  prefs: []
  type: TYPE_NORMAL
- en: Compared to Marker, adds pressure sensitivity, negative thinning (the stroke
    is wider when you move faster), and some wiggle.
  prefs: []
  type: TYPE_NORMAL
- en: Wiggly
  prefs: []
  type: TYPE_NORMAL
- en: As its name implies, features high wiggle and some tremor for a characteristic
    "dirty" look.
  prefs: []
  type: TYPE_NORMAL
- en: Splotchy
  prefs: []
  type: TYPE_NORMAL
- en: Is a very wide brush with high tremor and high negative thinning, which can
    produce a series of "splotches" connected by thin streaks ([Figure 14-16](#fig14-16),
    right).
  prefs: []
  type: TYPE_NORMAL
- en: Tracing
  prefs: []
  type: TYPE_NORMAL
- en: Is similar to Marker but with the background tracing feature turned on ([14.2.1.2](#section14.2.1.2)).
  prefs: []
  type: TYPE_NORMAL
- en: To add a new preset with the current parameters, click the button next to the
    presets list and provide a name for your preset.
  prefs: []
  type: TYPE_NORMAL
- en: 14.2.6 Adding and Subtracting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If a single path was selected before you started drawing, holding Shift when
    you release the mouse button or lift the pen will *add* the new stroke you just
    created to the selected path, forming a new single path via the Union path operation
    ([12.2](c12.xhtml#section12.2)).
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, holding Alt will *subtract* (via the Difference operation) the new
    stroke from the selected path. This makes it easy to quickly "patch" or "carve"
    any path. The Cut mode of the Eraser tool ([14.4](#section14.4)) works the same,
    so you can also use this functionality in a separate tool without having to hold
    Alt.
  prefs: []
  type: TYPE_NORMAL
- en: 14.2.7 Tracking a Guide Path
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Drawing in the Calligraphic pen with Ctrl pressed activates the *guide tracking*
    feature, which causes your pen to slide at some constant distance from the edge
    of a selected *guide path* and lets you trace around or along that guide.
  prefs: []
  type: TYPE_NORMAL
- en: The inspiration for this feature came from the traditional line engraving techniques
    that, for a long time, were the only practical way of reproducing lifelike shading
    in black-and-white print; about a century ago, line engravings were almost completely
    replaced by automatic halftone screens. *Hatching*—filling space with many parallel
    straight or curved lines of varying width to represent gradual shading—is a very
    labor-intensive process. Inkscape's guide tracking, along with background tracing
    ([14.2.1.2](#section14.2.1.2)) and the Tweak tool ([12.6](c12.xhtml#section12.6)),
    take the pain and boredom out of this ancient art. While you still need a keen
    eye and a lot of assiduousness, with Inkscape you can create authentic-looking
    line engravings, entirely in vector, in a reasonable amount of time.
  prefs: []
  type: TYPE_NORMAL
- en: One way to approximate a hatching grid is by using path interpolation (for example,
    with the Interpolate Sub-Paths effect, [13.3.9.2](c13.xhtml#section13.3.9.2)),
    but this method is not very flexible and produces obviously computer-generated
    output that lacks a "human touch." Manual hatching, on the other hand, is tedious
    and nearly impossible to do uniformly enough. The guide tracking capability allows
    you to hatch quickly and uniformly yet not too perfectly, and you have considerable
    manual control over the process.
  prefs: []
  type: TYPE_NORMAL
- en: Here's how to do it. First, select the *guide path* that you will track. It
    may be another calligraphic stroke, any path or shape, or even a letter of a text
    object. Switch to the Calligraphic pen tool and, before starting to draw, press
    Ctrl. You will see a gray *track circle* centered at your mouse pointer touching
    the closest point on the selected guide path. (If you have no guide path selected,
    a status bar message will tell you to select it.)
  prefs: []
  type: TYPE_NORMAL
- en: Now, move your mouse closer to the guide path, so that the track circle radius
    is equal to the desired spacing of your hatch pattern, and start drawing along
    the guide path. As soon as you start drawing, the radius of the circle locks and
    the circle turns green. Now the circle slides along the guide path—and the actual
    stroke is drawn by the center of the tracking circle, *not* by your mouse point.
    As a result, you create a smooth stroke that goes parallel to the guide path,
    always at the same distance from it ([Figure 14-20](#fig14-20)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-hatch1.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-20: Calligraphic pen: tracking a guide path'
  prefs: []
  type: TYPE_NORMAL
- en: When the stroke is ready, release your mouse button (or lift your tablet pen).
    However, do not let go of Ctrl yet, because so long as you have it pressed, the
    tool remembers the hatch spacing you set when you started drawing. Since you have
    just created a new stroke, that stroke object is selected instead of what was
    selected before—which means it now becomes the new guide path. Next, draw a second
    stroke along the first one, then a third one along the second, and so on. Eventually,
    you can fill your desired space with a nice uniform hatching, as shown in [Figure 14-21](#fig14-21).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-hatch2.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-21: Calligraphic pen: creating uniform hatching'
  prefs: []
  type: TYPE_NORMAL
- en: 'The attachment to the guide path is not absolute. If your mouse pointer strays
    far enough from the guide path, you’ll be able to tear it off (the track circle
    will turn from green to red) and move away—but not quite freely: the pen will
    maintain some inertia in the guide-tracking direction. This is intentional; for
    example, it allows you to continue drawing a stroke *past the end* of a guide
    path, in order to cover a wider area than the initial guide path would allow.
    With inertia, this tearing off is usually pretty smooth, but it is not possible
    to completely suppress jerks. If jerking and unintended tear-offs still bother
    you, try increasing the Mass parameter ([14.2.4](#section14.2.4)).'
  prefs: []
  type: TYPE_NORMAL
- en: Tracking a guide also allows for some feedback by gradually changing the tracking
    distance in response to your drawing behavior. If you're consistently trying to
    draw closer or farther from the guide than the current tracking distance, the
    distance will decrease or increase a bit, so you will get a hatching that is spaced
    slightly closer or wider.
  prefs: []
  type: TYPE_NORMAL
- en: If you've accidentally deselected your last created stroke (for example, by
    undoing a bad stroke), you can reselect it without leaving the Calligraphic pen
    tool by pressing Shift-Tab ([5.11](c05.xhtml#section5.11)). You can combine guide
    tracking with adding or subtracting; press Shift-Ctrl to add the new stroke to
    the selected guide path or Alt-Ctrl to subtract from it.
  prefs: []
  type: TYPE_NORMAL
- en: Tracking is designed for smooth engraving patterns, so it will not work on guide
    tracks with sharp turns or those that are too uneven (such as calligraphic strokes
    with high tremor, [14.2.4](#section14.2.4)). Since tracking follows the *edge*
    of the stroke, strokes of varying width (for example, when tracing background,
    [14.2.1.2](#section14.2.1.2)) will result in gradual bending of the hatching pattern
    as you proceed. Finally, you can track only paths; if you have a bitmap that you
    want to hatch over, you will have to create the first stroke in each hatching
    area manually so you can then track it as a guide ([Figure 14-22](#fig14-22)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-hatch3.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-22: Take a bitmap (top), hatch over it with the Calligraphic pen
    tool, and tweak the resulting hatching with the Tweak tool (bottom).'
  prefs: []
  type: TYPE_NORMAL
- en: 'It is convenient to use the Tweak tool with guide tracking in the Calligraphic
    pen. A hatching rarely comes out perfectly: loose stray ends, the wrong slant
    or curvature, and incorrect stroke widths (hatching that’s too dark or light)
    are the most common problems. With the Tweak tool, you can fix those problems
    so you don''t have to redo the hatching. Use the Shrink/Grow mode to clear the
    loose ends as if with an eraser, as well as to adjust stroke widths; the Push
    mode can bend or shape the hatching. With these powerful tools, using a photo
    as reference, you can create a complex and believably shaded hatching.'
  prefs: []
  type: TYPE_NORMAL
- en: 14.3 The Paint Bucket Tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The concept of a "paint bucket" or "flood fill" tool is probably familiar to
    you from bitmap editors. In Inkscape, the Paint bucket tool works exactly as you
    would expect: click in any area bounded on all sides, and it will fill the area
    with color. Being a vector tool, however, Inkscape''s Paint bucket creates a new
    *path* that fills in the area where you clicked, as shown in [Figure 14-23](#fig14-23).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-flood.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-23: The Paint bucket filling a bounded area'
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, Inkscape's Paint bucket tool is *perceptual*, not*geometric*.
    This means that, when looking for the boundaries around the point you clicked,
    it identifies as boundaries any *visible* color nonuniformities. Filling will
    therefore stop at gradients, blurs, and color boundaries in bitmaps, but it will
    ignore any paths or other objects that are fully (or almost) transparent or for
    whatever reason do not stand out from the background.
  prefs: []
  type: TYPE_NORMAL
- en: For example, you can scan a pencil sketch, import the bitmap into Inkscape ([18.1](c18.xhtml#section18.1)),
    and quickly "trace" it by filling all of its bounded areas with colors. This convenient
    and interactive way of digitizing your paper drawings makes the traditional bitmap
    tracing (the Trace Bitmap dialog, [18.5.2](c18.xhtml#section18.5.2)) unnecessary
    in many cases.
  prefs: []
  type: TYPE_NORMAL
- en: Internally, the tool works by performing a bitmap flood fill on a screen-resolution
    rendition of the visible canvas and then tracing the resulting fill into a vector
    path. The *resolution* of the rendition bitmap that the tool uses is that of your
    current zoom; the closer you are zoomed in to an area, the higher the resolution
    of the flood fill. If the result of the Paint bucket fill is too imprecise, has
    rounded corners, or doesn't go into small nooks and crannies where it is supposed
    to go—just undo it, zoom in closer (but so that the entire area to fill is visible),
    and fill again from the same point. Conversely, if the fill leaks out through
    a small gap, zoom out to make the gap less visible and fill again (or adjust the
    automatic gap closing parameter, [14.3.5](#section14.3.5)).
  prefs: []
  type: TYPE_NORMAL
- en: 14.3.1 Filling Techniques
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To fill a bounded area, switch to the Paint bucket tool (F7 or U) and click
    inside the area. If you click with Shift, the resulting path will be unioned ([12.2](c12.xhtml#section12.2))
    with the selected path; for example, if your first attempt did not fill in all
    of the desired area, just Shift-click the remaining corner to finish it off, as
    shown in [Figure 14-24](#fig14-24).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-flood-add.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-24: Adding a Paint bucket fill to an existing path'
  prefs: []
  type: TYPE_NORMAL
- en: If you click-and-drag (your drag path is visualized by a red line), you will
    fill from *each of the points* that you passed by dragging. From each point, the
    fill spreads to its neighbors with colors similar to that point. In other words,
    it's like clicking with this tool at each point of the drag path and combining
    the results. This way you can easily fill an area occupied by a gradient or blur—just
    drag from the darkest to the lightest points in the area you want to fill ([Figure 14-25](#fig14-25)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-flood-drag.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-25: With one click, only a narrow strip of a gradient is filled;
    drag across an area to fill the entire gradient.'
  prefs: []
  type: TYPE_NORMAL
- en: Alt-click and drag is similar to simple drag, except from each point of the
    drag path, the fill spreads to its neighbors (if any) whose colors are similar
    to the color of the *initial point* (the point where you started the drag), not
    the point through which you're dragging. This lets you fill a series of similarly
    colored yet separated areas (for example, multiple cells in a cartoon) by starting
    the drag in one of those areas and Alt-dragging through all the other areas.
  prefs: []
  type: TYPE_NORMAL
- en: 14.3.2 Filling by Channel
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When looking for color boundaries to stop at, the Paint bucket tool, by default,
    looks at the same colors that you see on the canvas. However, you can restrict
    its vision to a specific color channel. The Fill by drop-down menu, apart from
    the defaultVisible Colors, allows you to choose any of the three RGB channels
    (Red, Green,Blue), any of the HSL channels (Hue, Saturation, Lightness), or the
    Alpha channel (opacity).
  prefs: []
  type: TYPE_NORMAL
- en: For example, if you select the Red channel, even the sharpest green/blue color
    boundaries won't stop the fill. Choosing the Alpha channel makes the tool ignore
    any colors and look only at where opacity changes; for example, if you have a
    complex, multicolored, but fully opaque object over a transparent background,
    clicking this object in Alpha mode will fill up to the outline of the entire object.
  prefs: []
  type: TYPE_NORMAL
- en: 14.3.3 Threshold
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Threshold parameter, with a range from 0 to 100, controls how different
    a point's color must be, compared to the initial click point, to stop the propagation
    of the fill. Zero tolerance means only the area of strictly the same color will
    be filled; the larger the tolerance, the larger the filled area will be, and the
    easier it will be for the fill to leak away into adjacent color areas. The default
    value is 5.
  prefs: []
  type: TYPE_NORMAL
- en: 14.3.4 Growing and Shrinking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: With the Grow/shrink by parameter, you can control the amount of inset or outset
    to be applied to the created fill path. This works much the same as theOutset
    and Inset path commands ([12.4](c12.xhtml#section12.4)), except it's done automatically
    after every fill.
  prefs: []
  type: TYPE_NORMAL
- en: A positive Grow/shrink value causes the fill path to be larger than the filled
    bitmap area it represents; this is often useful for eliminating anti-aliasing
    gaps between the fill and its boundary. A negative value makes the path smaller,
    ensuring a constant-width gap between the fill and the boundary.
  prefs: []
  type: TYPE_NORMAL
- en: 14.3.5 Closing Gaps
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'With the Close gaps parameter, you can make the Paint bucket tool ignore any
    gaps in the area boundaries that would normally cause the fill to spill out of
    the desired area. There are four levels of automatic gap closing:'
  prefs: []
  type: TYPE_NORMAL
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Small (gaps up to 2 screen pixels in size are closed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Medium (gaps up to 4 screen pixels in size are closed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Large (gaps up to 6 screen pixels in size are closed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting this parameter to anything other than None makes the tool noticeably
    slower, especially when filling large areas.
  prefs: []
  type: TYPE_NORMAL
- en: 14.3.6 Style
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Like all object-creating tools, the Paint bucket can use the last set style
    ([11.1.2](c11.xhtml#section11.1.2)) for the objects it creates (this is the default),
    or it can use its own fixed style. You can switch between these modes in the tool's
    Preferences page (double-click the tool icon to access it). As with other tools,
    the style swatch on the far right of the controls bar shows the style that will
    be used for the next fill. To change the last set color without affecting any
    object, just deselect all (Escape) and click a color on the palette.
  prefs: []
  type: TYPE_NORMAL
- en: 'Ctrl-click in the Paint bucket tool is special. With Ctrl, the tool does not
    fill an area, but performs instant styling of an existing object on which you
    clicked (without selecting it): it simply changes that object''s fill color to
    the current fill color of the tool. Similarly, Shift-Ctrl-clicking changes the
    stroke to the current stroke color of the tool (if no stroke is set, then Shift-Ctrl-clicking
    behaves like Ctrl-clicking). For example, you can use this to recolor some of
    the fill objects you created previously, without needing to select them first
    and without leaving the Paint bucket tool.'
  prefs: []
  type: TYPE_NORMAL
- en: 14.4 Eraser Tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As the name suggests, this tool is for quickly and conveniently erasing stuff.
    Inkscape's Eraser tool (Shift-E) implements three different modes, represented
    by the three toggle buttons on the controls bar ([Figure 14-26](#fig14-26)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-eraser.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-26: The Eraser tool'
  prefs: []
  type: TYPE_NORMAL
- en: Delete mode
  prefs: []
  type: TYPE_NORMAL
- en: In this mode, you drag across objects (leaving a red trace), and after you release,
    the tool deletes those objects touched by your drag path (compare [5.8](c05.xhtml#section5.8)).
    This mode has no further options.
  prefs: []
  type: TYPE_NORMAL
- en: Cut mode
  prefs: []
  type: TYPE_NORMAL
- en: In this mode, Eraser draws a path, just as the Calligraphic pen does, and then
    uses the Difference Boolean operation ([12.2](c12.xhtml#section12.2)) to subtract
    it from the other paths or shapes that happen to be underneath. The options in
    this mode are analogous to those of the Calligraphic pen, including Width ([14.2.1](#section14.2.1)),Thinning
    ([14.2.1.3](#section14.2.1.3)), Caps ([14.2.3](#section14.2.3)), and evenTremor
    and Mass ([14.2.4](#section14.2.4)). The last toggle button forces the tool to
    break apart ([12.1.1](c12.xhtml#section12.1.1)) each path that was cut into disjointed
    parts.
  prefs: []
  type: TYPE_NORMAL
- en: Clip mode
  prefs: []
  type: TYPE_NORMAL
- en: 'This mode works like the Cut mode, but instead of subtracting, the tool clips
    ([18.3](c18.xhtml#section18.3)) the objects you draw over. This is a better approach
    because, first, the clipping operation is nondestructive (you can always recover
    the original object usingObject ▶ Clip ▶ Release), and second, clipping works
    not only for paths but also for other objects such as bitmaps. An object in SVG
    can have only a single clipping path, but the tool is smart enough to work as
    expected when you clip an already clipped object: it adds the new path to clip
    already in effect.'
  prefs: []
  type: TYPE_NORMAL
- en: 14.5 Connector Tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Diagramming applications, of which the best known is Microsoft Visio, are a
    popular class of software with a lot of overlap with vector graphics. Inkscape's
    Connector tool extends its functionality in this area—certainly not enough to
    make it a Visio replacement but sufficient for small diagramming projects.
  prefs: []
  type: TYPE_NORMAL
- en: Basically, a diagram is a vector drawing that has objects connected by different
    kinds of lines—to illustrate workflow sequences, links, calls, classifications,
    or other types of relationships. Crucially, the program is aware of what is connected
    to what and updates the connector lines whenever you move around the connected
    objects. That's exactly what the Connector tool does.
  prefs: []
  type: TYPE_NORMAL
- en: To try it out, draw a few rectangles in the Rectangle tool. You can also create
    text labels and group each label with its rectangle. Then switch to the Connector
    tool (O). You will see, as you hover your mouse over one of these objects, a white
    square handle in the center. Grab it, drag toward another rectangle, and drop
    it onto the other rectangle's central handle. That creates a straight connector
    line that goes between the edges of the rectangles, along the line connecting
    their centers ([Figure 14-27](#fig14-27)). Now move the rectangles around (in
    Selector), and you will see the connector updating live.
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-diagram.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-27: The Connector tool'
  prefs: []
  type: TYPE_NORMAL
- en: The connectors are regular SVG paths that you can style as you wish—for example,
    by assigning arrowhead markers ([9.5](c09.xhtml#section9.5)) to them. You can
    also node-edit them as paths, but you really shouldn't. As soon as one of the
    connected objects moves, its connectors are automatically updated, discarding
    any node edits you have done to them.
  prefs: []
  type: TYPE_NORMAL
- en: As you move objects around, you will naturally want to avoid situations where
    connector lines cross the connected (or any other) objects. The Connector tool
    can do that for yOu, too. The first two buttons on the tool's controls bar will
    enable and disable the *avoid property* for the currently selected objects. If
    an object has this property, connector lines will be routed in such a way as to
    avoid crossing or touching it. If you select all the blocks of your diagram and
    enable this property for all of them with one click, you will have much more freedom
    in moving stuff around without making the diagram unreadable. You can adjust the
    gaps between the objects and the connectors with the Spacing parameter ([Figure 14-28](#fig14-28)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-diagram-avoid.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-28: The Connector tool: enabling the avoid property on blocks'
  prefs: []
  type: TYPE_NORMAL
- en: 'The Connector tool can also produce another style of connectors: *orthogonal*,
    consisting of vertical and horizontal segments, optionally with rounded corners,
    as shown in [Figure 14-29](#fig14-29).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](15/dr-diagram-orthogonal.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14-29: The Connector tool: orthogonal connectors'
  prefs: []
  type: TYPE_NORMAL
- en: You can change the curvature radius individually for each connecter (click it
    in the Connector tool to select). This option can be combined with the avoid property
    for the diagram blocks.
  prefs: []
  type: TYPE_NORMAL
