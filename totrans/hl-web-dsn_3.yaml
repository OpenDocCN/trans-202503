- en: CHAPTER 3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**THE PROCESS AND TRAINING YOUR DESIGN EYE**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: NOW THAT WE’VE CHATTED ABOUT DESIGN PRINCIPLES and the pieces of design, let’s
    work on the process of design. While the last few sections have thrown a lot of
    theory at you, these next sections are geared toward adding real-world context
    to what you have learned and helping you do design work.
  prefs: []
  type: TYPE_NORMAL
- en: The following sections will walk you through the parts of design from start
    to finish — finding inspiration, sketching your project, getting feedback, and
    building. We will talk about these steps in abstract but also apply them to a
    sample project so you can see how everything comes together.
  prefs: []
  type: TYPE_NORMAL
- en: For our sample project, we’re going to build on a theoretical home page for
    an open source project — a place where visitors can learn about and use the project,
    with links to documentation and information on how to contribute to the project.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: SECTION 3.1
  prefs: []
  type: TYPE_NORMAL
- en: FINDING INSPIRATION
  prefs: []
  type: TYPE_NORMAL
- en: WHAT’S THE FIRST THING YOU SHOULD DO when starting a design project?
  prefs: []
  type: TYPE_NORMAL
- en: If you think that you should sit down and start working on ideas, sketching
    layouts, planning your content — you’re close, but not quite ready to go there
    yet.
  prefs: []
  type: TYPE_NORMAL
- en: Sitting down and immediately working on a design problem without first doing
    research and looking for inspiration is like trying to code without access to
    the internet to look up questions and errors — doable, but slower and more frustrating.
  prefs: []
  type: TYPE_NORMAL
- en: Think of inspiration as visual debugging. Looking at great design and inspiration
    will help you figure out solutions to problems that you may run into when creating
    your own designs.
  prefs: []
  type: TYPE_NORMAL
- en: Where to find inspiration? For web design, there are tons of websites that collect
    and share good designs **([FIGURE 3-1](ch03.xhtml#ch3fig1))**.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, do *not* rip off designs. If you find something you like, you can
    do something similar, but ripping off something verbatim is a very big no-no.
    But you *can* be inspired by layout, the treatment of color, the tone, the imagery,
    and the typography and implement the things you like into your own project. Try
    to focus on a specific aspect of a design that you like, rather than the entire
    thing, and apply it to your project.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/03fig01a.jpg)*The Best Designs ([hellobks.com/hwd/67](http://hellobks.com/hwd/67))*
    |  | ![image](../images/03fig01b.jpg)*Unmatched Style ([hellobks.com/hwd/68](http://hellobks.com/hwd/68))*
    |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| ![image](../images/03fig01c.jpg)*Awwwards ([hellobks.com/hwd/69](http://hellobks.com/hwd/69))*
    |  | ![image](../images/03fig01d.jpg)*Site Inspire ([hellobks.com/hwd/70](http://hellobks.com/hwd/70))*
    |'
  prefs: []
  type: TYPE_TB
- en: '**FIGURE 3-1:** Some of the many options you can use to find web design inspiration.'
  prefs: []
  type: TYPE_NORMAL
- en: Your job as designer isn’t to reinvent the wheel. Noting established conventions
    and things that “work” will help you implement familiar flows and layouts in your
    own designs — making it more intuitive for your users to navigate your product.
  prefs: []
  type: TYPE_NORMAL
- en: My *Hello Web App* books were inspired by the wonderful *A Book Apart* books
    **([FIGURE 3-2](ch03.xhtml#ch3fig2)).**
  prefs: []
  type: TYPE_NORMAL
- en: I’m particularly proud of my design for *Hello Web App*, but I sincerely don’t
    think they would have turned as they did without being heavily inspired by *A
    Book Apart*. Seeing those books helped me determine what I liked in terms of size
    and thickness, and the flat, bright colors inspired my own graphic treatment of
    the *Hello Web App* cover.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-2:** My *Hello Web App* books on the left, and the beautifully designed
    *A Book Apart* series on the right.'
  prefs: []
  type: TYPE_NORMAL
- en: Pablo Picasso famously said, “Good artists copy, great artists steal.” When
    you find something you love, something that you’d like to do yourself — whether
    it’s layout, color, font choice, and so on — use that as inspiration to build
    something *similar* but not *exactly* the same.
  prefs: []
  type: TYPE_NORMAL
- en: One of the most useful things you can do to make yourself better at design is
    to look at other designs and think critically about what they do well and what
    they do poorly. This is a great process to practice while you’re looking for inspiration!
  prefs: []
  type: TYPE_NORMAL
- en: The more you do this (with good designs as well as bad), the more you’ll train
    your “design eye” and design intuition, making it easier for you to create good
    designs from scratch.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s use the GitHub home page design as an example **([FIGURE 3-3](ch03.xhtml#ch3fig3))**.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-3:** GitHub has consistently great-looking home page designs, great
    for practicing picking out good design decisions.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the principles we went over in [Chapter 2](ch02.xhtml#ch02), Theory and
    Design Principles, what would you say they’re doing well? Some of the details
    I’ve picked out:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lots of white space.** The headline, content, and form have plenty of white
    space around the top and bottom, drawing the eye and emphasizing the content.
    Just enough white space — not too much and not too little.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sign-up form is front and center.** No need to jump through hoops — GitHub
    makes it super simple to sign up for an account right from the front page. Note
    that the “Username” field has focus by default so the user can start typing immediately.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Important words are bolded and linked in the content.** Both “open source”
    and “business” are linked, bolded, and in a brighter color. At a glance you can
    see the two areas that GitHub focuses on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subtle background pattern helps the white space feel less empty.** Imagine
    the background in a flat gray — the design would still look good but would feel
    less polished. The subtle pattern fills the white space while letting the content
    shine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Main button is a bright, stand-out color.** The majority of the design is
    dark and gray, making the bright green form submit button stand out.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What other good design decisions can you see?
  prefs: []
  type: TYPE_NORMAL
- en: Start browsing the web more mindfully, and think critically about what designs
    are doing well and poorly. Over time, your design intuition will improve. Making
    this a practice will make it easier for you to create better designs naturally.
  prefs: []
  type: TYPE_NORMAL
- en: This is especially important when you’re actively working on a new design. Start
    out by looking for inspiration in examples of good design in your field and by
    looking at your competitors. Pick out what they’re doing well, and implement those
    ideas in your own design. Pick out what you think isn’t working well (especially
    in your competitor’s designs), and make sure you avoid those things in your own
    design.
  prefs: []
  type: TYPE_NORMAL
- en: Our sample project for [Chapter 2](ch02.xhtml#ch02) was our widget. For this
    chapter we’re going to be building a home page for an open source project. Let’s
    start by finding some really clean and visually interesting home pages for other
    open source projects **([FIGURE 3-4](ch03.xhtml#ch3fig4))**.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a number of trends that will be nice to implement in our own design:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lots of white space** — open source project home pages are fairly simple
    (compared to, say, a newspaper home page) and an airy, designer-y feel is a nice
    contrast to something aimed at developers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![image](../images/03fig04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-4:** A few well-designed open source project home pages that we’ll
    use for inspiration.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bright colors** — either as a full background or as highlights on top of
    a white background.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Clear, prominent headlines that explain the tool.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Code is front and center** — naturally, a product made for developers should
    show the code involved right at the start rather than hiding it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This part of the process is very much affected by personal preference — I chose
    four designs that I personally loved and inspired me; you might disagree with
    my choices. That’s totally okay! Design is very personal, and at the end of the
    day you will want something that represents *you*.
  prefs: []
  type: TYPE_NORMAL
- en: SECTION 3.2
  prefs: []
  type: TYPE_NORMAL
- en: PLANNING
  prefs: []
  type: TYPE_NORMAL
- en: YOU *COULD* JUMP STRAIGHT INTO CODING and start creating your site using your
    inspiration, but the middle process of design — creating a plan, sketching ideas
    and layouts, and making a mock-up — will help you try more ideas and create a
    better design in overall less time. It’s a bit of effort up front that’ll save
    a lot of time down the line.
  prefs: []
  type: TYPE_NORMAL
- en: Your life will be so much easier if you do some basic planning before moving
    ahead with trying to sketch and develop your design. How many pages do you need?
    What kind of content do those pages need? What kind of forms do you need, and
    how many fields?
  prefs: []
  type: TYPE_NORMAL
- en: We’re going to build our open source project home page sample project as a single
    page with links out to external documentation — making our plan rather simple.
    Just one page!
  prefs: []
  type: TYPE_NORMAL
- en: 'On this one page, let’s list the elements we’ll need:'
  prefs: []
  type: TYPE_NORMAL
- en: Logo/name of project.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Headline explaining the project.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Menu with links to external documentation on Read the Docs, GitHub page, author’s
    Twitter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Block showing code (to show how easy it is to install).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Three blocks with benefits and features in more depth.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Positive quote from contributor.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Repeated menu in the footer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Most websites won’t be this simple. Let’s think about another scenario, such
    as a personal portfolio website for a designer named Jane, which would require
    more pages.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let’s determine what pages we need for a personal website for Jane:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Home page:** The first page someone sees when they hit the website.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**About page:** A deeper dive into Jane’s background and experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Portfolio page:** An overview of Jane’s projects.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: — **Individual project pages:** These pages will probably use the same layout,
    so we can group them under one category.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Contact page:** A page with Jane’s location and information about how to
    contact her.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Right away, we can see that we have five basic types of pages that we will need
    to design layouts for. Now that we have the basic pages, what do we want each
    page to have on it?
  prefs: []
  type: TYPE_NORMAL
- en: '**Every page:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: — Personal logo or name.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: — Top menu listing all top-level pages in the website (that is, we’re only going
    to list the four main bullets above, not each individual portfolio page).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: — Footer menu after content.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Home page:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: — Short, exciting description of Jane.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: — Photo of Jane.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**About page:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: — Longer descriptive paragraph.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: — Different image of Jane.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Portfolio page:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: — Blocks for each of Jane’s projects with a photo/screenshot of each, project
    title, and links to individual project pages.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Individual project pages:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: — Image representing project.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: — Long description of project.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: — Links to external resources (code on GitHub, launched website, and so on).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Contact page:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: — Short introduction paragraph.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: — Email address and location.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: — Form for contact with fields for name, email, short content section, and a
    submit button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Making a plan and listing of all these pages, features, widgets, and blocks
    will help you organize your design process and ensure that you don’t miss an important
    element when sketching and building your design.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, you could jump over to coding your site, but I highly recommend
    taking some time to build some prototypes. We’ll cover this in the next section!
  prefs: []
  type: TYPE_NORMAL
- en: SECTION 3.3
  prefs: []
  type: TYPE_NORMAL
- en: PROTOTYPES
  prefs: []
  type: TYPE_NORMAL
- en: THE PROCESS OF SKETCHING YOUR IDEAS and making prototypes will help you play
    with solutions and try out different ideas faster than if you moved straight to
    coding. This usually happens in tandem with the inspiration process. As you go
    through and find ideas you like, you should make note of these ideas you’d like
    to implement and sketch out how they could fit into your own design.
  prefs: []
  type: TYPE_NORMAL
- en: Sketching can seem more intimidating than it is. Perhaps you’ve seen sketches
    of websites that look like **[FIGURE 3-5](ch03.xhtml#ch3fig5)**.
  prefs: []
  type: TYPE_NORMAL
- en: You *can* sketch something like the one in **[FIGURE 3-5](ch03.xhtml#ch3fig5)**
    if you like, but that really isn’t how initial sketches are made. Sketching is
    more abstract, uses minimal detail, and works with your imagination to make everything
    come together. All you really need are boxes and lines to start jotting down some
    ideas for layouts and how your design should look **([FIGURE 3-6](ch03.xhtml#ch3fig6))**.
  prefs: []
  type: TYPE_NORMAL
- en: This creates a quick and easy shorthand to start sketching out your design ideas.
    Here are some more examples from when I was redesigning the *Hello Web Books*
    website from my own sketchbook **([FIGURE 3-7](ch03.xhtml#ch3fig7))**.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-5:** Sketches don’t *need* to have this much detail.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-6:** Low-information sketches. Squiggles represent headlines or
    larger text, lines represent content, boxes indicate buttons, and x-ed out boxes
    represent images.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-7:** Messy (digitized) sketches from my personal notebook where
    I was planning the new *Hello Web Books* website design.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Again, these sketches aren’t pixel perfect: they’re meant to provide quick
    layout ideas to help you start building your design. Quick, messy, easy, and definitely
    not perfect.'
  prefs: []
  type: TYPE_NORMAL
- en: You can upgrade your sketches by adding shading or different shades of gray,
    but try to keep your sketches as unstyled as possible in this initial round. No
    fancy fonts, no colors, no exact dimensions. Keep this round as easy as possible
    on yourself so you can quickly create as many different ideas as possible **([FIGURE
    3-8](ch03.xhtml#ch3fig8))**.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-8:** Paper sketches showing basic lines, boxes, image locations,
    and content placement. Sketches don’t need to be too complicated.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s return to our sample project and sketch out a few quick ideas for home
    page layouts for our open source project **([FIGURE 3-9](ch03.xhtml#ch3fig9))**.
  prefs: []
  type: TYPE_NORMAL
- en: Here are quick sketches of two different home page layout ideas, but I recommend
    that you do more when you’re sketching your ideas. The more layouts you do, the
    more ideas you’ll go through, which will help you gain confidence in the sketch
    (or sketches) you choose to build wireframes from.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-9:** A couple of quick sketches showing two different home page
    layout ideas for our sample open source project home page.'
  prefs: []
  type: TYPE_NORMAL
- en: If don’t have a particular project in mind, sketching the layouts of your favorite
    websites is great practice.
  prefs: []
  type: TYPE_NORMAL
- en: '**Wireframing**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Next, we make our quick sketches more concrete. Wireframing helps us build in
    extra detail from our sketches, working with real sizes for placement and helping
    us figure out spacing in a more refined representation of our design.
  prefs: []
  type: TYPE_NORMAL
- en: There are a lot of different software solutions available to help you with this
    stage **([FIGURE 3-10](ch03.xhtml#ch3fig10))**.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/03fig10a.jpg)*GIMP ([hellobks.com/hwd/77](http://hellobks.com/hwd/77))*
    |  | ![image](../images/03fig10b.jpg)*Sketch ([hellobks.com/hwd/78](http://hellobks.com/hwd/78))*
    |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| ![image](../images/03fig10c.jpg)*Balsamiq ([hellobks.com/hwd/79](http://hellobks.com/hwd/79))*
    |  | ![image](../images/03fig10d.jpg)*UXPin ([hellobks.com/hwd/80](http://hellobks.com/hwd/80))*
    |'
  prefs: []
  type: TYPE_TB
- en: '**FIGURE 3-10:** A few of the software solutions available for wireframing.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Free Options**'
  prefs: []
  type: TYPE_NORMAL
- en: '**GIMP.** Open source image editor: *[hellobks.com/hwd/77](http://hellobks.com/hwd/77)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inkscape.** Open source vector graphics editor: *[hellobks.com/hwd/81](http://hellobks.com/hwd/81)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Paid Options**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Adobe Illustrator or other Adobe products.** *[hellobks.com/hwd/82](http://hellobks.com/hwd/82)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sketch.** *[hellobks.com/hwd/78](http://hellobks.com/hwd/78)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Presentation software such as Keynote (Mac) and PowerPoint (Windows).** You
    can set up clickable areas that’ll go to different slides or “pages” of your site,
    so your mock-ups can feel more interactive: *[hellobks.com/hwd/83](http://hellobks.com/hwd/83)*,
    *[hellobks.com/hwd/84](http://hellobks.com/hwd/84)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Balsamiq.** Online wireframe software: *[hellobks.com/hwd/79](http://hellobks.com/hwd/79)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**UXPin.** Online design platform: *[hellobks.com/hwd/80](http://hellobks.com/hwd/80)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireframes come between the sketch and mock-up stages. At this stage we are
    *not* choosing colors or finding fonts — we’re just continuing to think about
    layout and flow.
  prefs: []
  type: TYPE_NORMAL
- en: Going back to our open source project home page, we’re going to take my favorite
    sketch and use it to create a wireframe **([FIGURE 3-11](ch03.xhtml#ch3fig11))**.
  prefs: []
  type: TYPE_NORMAL
- en: 'We’re using a three-column layout, starting to plan our content (making sure
    it’s short, easy to understand, and exciting) and figuring out spacing and layout.
    Once we have these elements in place, we can start testing our design (see [Section
    3.4](ch03.xhtml#ch00lev1sec106): Getting Feedback) and trying out ideas until
    we have something we want to move forward with.'
  prefs: []
  type: TYPE_NORMAL
- en: We’re still missing major design decisions such as fonts, color, and graphics,
    but this bare-bones wireframe gives us a great place to start when getting feedback
    from others and coding the site.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-11:** A quick wireframe based on one of our sketches. No major design
    choices — just layout and spacing.'
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to use real content — avoid fake content such as lorem ipsum
    (dummy text used by the design industry) — as much as possible. With real content,
    you’ll know the length of text you need, which is crucial when making your layout,
    rather than using fake text that may end up being longer or shorter than the text
    you eventually use.
  prefs: []
  type: TYPE_NORMAL
- en: Pay attention to the content principles we’ve gone over, making sure your content
    is short, easy to read, and exciting. As you go through the sketching, wireframing,
    and mocking up stages — revising and testing different versions of your designs
    — you should be revising and improving your content as well.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at an unrelated idea so we can get another example of what wireframes
    would look like **([FIGURE 3-12](ch03.xhtml#ch3fig12))**.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-12:** Another wireframe example.'
  prefs: []
  type: TYPE_NORMAL
- en: Again, no fonts or colors, but this quick wireframe shows planned layout (mainly
    one narrow column with menu options around the logo), and some design decisions,
    such as using a bulleted list for content and a form that’s high enough on the
    page to be seen without scrolling.
  prefs: []
  type: TYPE_NORMAL
- en: Wireframing should help you make simple layout decisions so you can try ideas
    quickly and test them without spending time on small design details or changing
    large chunks of code.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on what you’re doing, you *could* move straight to code after creating
    your wireframes, or you could create a mock-up to explore final colors, fonts,
    and images.
  prefs: []
  type: TYPE_NORMAL
- en: '**Mocking up your design**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Wireframes are pretty low-fidelity — we can also create high-fidelity mock-ups
    in our design programs before we move to code so we can get every design detail
    planned (fonts, colors, backgrounds, and so on) before moving onto code.
  prefs: []
  type: TYPE_NORMAL
- en: This part of the design process is a bit tougher if you haven’t used a design
    program before. In [Chapter 5](ch05.xhtml#ch05), Additional Resources, I cover
    tutorials and videos on basic design skills for major design programs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some pros and cons to spending the extra time mocking up your design:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Pros**'
  prefs: []
  type: TYPE_NORMAL
- en: You’ll see *exactly* what your design will (hopefully) look like when you move
    into building it in HTML and CSS.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Objects can be easily moved and transformed, so you can change your mind more
    quickly than if the design were already coded.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cons**'
  prefs: []
  type: TYPE_NORMAL
- en: Adds an extra step that could take more time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you’re designing for the web, your eventual website needs to be *responsive*
    (the design adapts so it looks as good in smaller screens as it does in larger).
    Responsive designs are harder to mock up, as most design solutions are static.
    You’d need to create mock-ups that show the design adapting to different sizes
    (mobile, computer, and so on).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you’re not comfortable with design programs (or you’re more comfortable with
    code), mocking up may take more time than coding in HTML and CSS.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your mock-ups should include all of the decisions you made before about content
    and layout from your wireframes with the additional bonus of planning for graphics,
    colors, fonts, and extra-beautiful design tweaks **([FIGURE 3-13](ch03.xhtml#ch3fig13))**.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-13:** Mock-up showing color, font, and imagery decisions using the
    design program Sketch.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take the wireframes for our sample home page and start adding some color,
    fonts, and imagery. Focus on making this first draft *just* good enough to launch
    and show others, as you can continue iterating and improving the design over time
    **([FIGURE 3-14](ch03.xhtml#ch3fig14))**.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-14:** Back to our sample project. Go from wireframe to mock-up by
    adding color, imagery, fonts, and other style decisions. This example is still
    very simple, but it works as a first version. You could launch this and then iterate
    on the design and make improvements over time.'
  prefs: []
  type: TYPE_NORMAL
- en: Once you have a mock-up you like, it’s time for another round of testing and
    sharing the design with friends and family (covered in depth in the next section)
    to ensure you’re not missing anything crucial before spending time coding the
    site.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, you can copy your home page design and build mock-ups for the
    other pages (such as an About page), as well as mock up what your website will
    look like on smaller screens **([FIGURE 3-15](ch03.xhtml#ch3fig15))**.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-15:** The mock-up we created, altered to show how the design would
    look like on a smaller screen. Remember that it’s important that your websites
    be usable and readable on smaller screens.'
  prefs: []
  type: TYPE_NORMAL
- en: In the next section we’re going to cover a very important part of the design
    process (hinted at throughout this section) — getting feedback!
  prefs: []
  type: TYPE_NORMAL
- en: SECTION 3.4
  prefs: []
  type: TYPE_NORMAL
- en: GETTING FEEDBACK
  prefs: []
  type: TYPE_NORMAL
- en: ONE OF THE HARDEST BUT MOST CRUCIAL PARTS of the design process is getting feedback
    on what you’ve designed.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike programming, there no simple “working” or “not working” answer to what
    you’ve designing. You can’t tell at a glance whether your design is successful
    without getting feedback from outside sources. This simple step can be the toughest,
    because we’re all naturally afraid of negative feedback. What if the person hates
    what we’ve designed? What if they find problems?
  prefs: []
  type: TYPE_NORMAL
- en: A design might feel right to you, but you’re the designer — you know all the
    ins and outs of the design, how it works, and how it should be used *because*
    you’re the designer. You’ll only know whether those paths and objectives are obvious
    after showing your design to someone else. Your design might be beautiful, but
    you don’t know whether it’ll be appreciated and used until you show it to others.
  prefs: []
  type: TYPE_NORMAL
- en: It’s natural to feel bad if someone discovers something that isn’t working.
    When this happens, look at it as a learning experience and try to remember that
    these pieces of feedback will improve your design and teach you something new.
    Accept bad feedback with grace — there is no need to feel embarrassed or insulted.
    Better to hear bad news early on rather than after you launch.
  prefs: []
  type: TYPE_NORMAL
- en: It’s totally normal to not want negative feedback, but finding out where your
    design can be improved will make your design stronger and your experience better
    in the long run. Detach your feelings, steel your will, and find the problems
    early.
  prefs: []
  type: TYPE_NORMAL
- en: '**Seeing your design with fresh eyes**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Before you take your design to others, give yourself a chance to critique your
    own design. Simply taking a break from your design (a few hours or overnight)
    can help you figure out potential design issues and problems. This is the easiest
    way of getting feedback, because you’re working with someone naturally agreeable
    — yourself!
  prefs: []
  type: TYPE_NORMAL
- en: When you come back to your design, try to distance yourself from your designer-self
    and to embody the potential user. Is your design usable? Easy to read and understandable?
    Is the design easy to use and natural feeling? Go through the user experience
    and imagine how the website will be used — find all the “easy” issues as early
    as possible before you share your design with others.
  prefs: []
  type: TYPE_NORMAL
- en: Another trick for getting a quick fresh look at your design is to take a screenshot
    and flip it horizontally. It’s still the same layout, but your brain will lose
    some of the familiarity with the design so it will be easier to be more objective
    and pick out problems.
  prefs: []
  type: TYPE_NORMAL
- en: '**Some advice on showing your design to others**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You could take your design to someone else, get a “looks great!” in response,
    pat yourself on the back, and move on with your day. But was that really valuable
    feedback?
  prefs: []
  type: TYPE_NORMAL
- en: Make sure that you’re clear about what kind of feedback you’re looking for.
    Maybe you’d like help finding problems with your design and you’re open to general
    feedback (positive or negative) and criticisms, or perhaps you need help choosing
    between two options. Alternatively, you might be 90 percent done and only looking
    for minor tweaks before you publish.
  prefs: []
  type: TYPE_NORMAL
- en: Give your reviewers careful instructions about what you need and plenty of time
    to look at your work. A quick glance at your design isn’t enough, so don’t surprise
    the reviewer between other tasks. Let them have time to really think critically
    about what you have done. Quick responses are more likely to only cover superficial
    issues or be hollow praise.
  prefs: []
  type: TYPE_NORMAL
- en: If you receive only positive responses, try asking specifically for what the
    reviewer *didn’t* like. This could prompt a more thorough response and also indicates
    that you’re looking for (rather than avoiding) negative feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind that when you ask for feedback, you also need to judge the feedback
    that comes in. Talk to more than one person, as a problem that comes up only once
    might not be an actual problem. If an issue surfaces over and over, *then* you’ve
    found something that needs to be fixed.
  prefs: []
  type: TYPE_NORMAL
- en: Not all feedback has to be implemented. It’s up to you, the designer, to figure
    out the true issues versus the things the reviewer mentioned because they wanted
    to be helpful.
  prefs: []
  type: TYPE_NORMAL
- en: '*Showing your design to friends and family*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Your friends and family are the friendliest folks you can go to for design feedback,
    for better or for worse. Those that are closest to you are the most likely to
    want to please you and may want to give only positive feedback. Here is where
    it’s especially important to make it clear you’re looking for all feedback (positive
    *and* negative).
  prefs: []
  type: TYPE_NORMAL
- en: It’s great if you can show your designs to folks who match your ideal user (if
    you’re building a tool for developers, another developer friend would be a great
    tester), but don’t feel limited to that rule — UX issues could be found by anyone.
  prefs: []
  type: TYPE_NORMAL
- en: '*Showing your design to strangers*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Although significantly harder, showing your design to strangers can yield more
    valuable feedback because they aren’t affected by their personal relationships
    with you.
  prefs: []
  type: TYPE_NORMAL
- en: Where can you find strangers who might be willing to give feedback?
  prefs: []
  type: TYPE_NORMAL
- en: '**Hackathons, sprints, and other community events.** Events and gatherings
    of like-minded peers are great places to get feedback on design work. Ask someone
    politely if they’d be willing to spend 5 to 10 minutes reviewing your design.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Online communities.** Forums and communities such as Reddit’s *design_critiques*
    subreddit (*[hellobks.com/hwd/85](http://hellobks.com/hwd/85)*) and Bootstrapped.fm
    (*[hellobks.com/hwd/86](http://hellobks.com/hwd/86)*) can help review mock-ups
    and early versions of your design. Internet anonymity creates a tendency for strangers
    to be negative, so here especially you need to sort the useful feedback from the
    bad. A thick skin is essential.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Online review services.** There are quite a few online services that allow
    you to upload a screenshot of your design to get feedback. One example is Five
    Second Test (*[hellobks.com/hwd/87](http://hellobks.com/hwd/87)*).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Folks at coffee shops and the like.** No hackathons near you? You can also
    try the classic usability test trick — buy a couple of $5 gift cards to a coffee
    shop of your choice, approach friendly looking strangers, and ask them for five
    minutes of feedback in exchange for the gift card (or a coffee, or something similar).
    Approaching a stranger in a public place can be scary, but getting a stranger’s
    feedback on your design is so valuable that it’s worth it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This step is so easy to skip, especially when you’re adhering to the MVP (*minimum
    viable product*) advice of launching as fast as possible, but getting feedback
    can vastly improve the design and usability of your project. You might find an
    issue that could make or break your project launch.
  prefs: []
  type: TYPE_NORMAL
- en: If getting feedback from others sounds scary, I assure you — the more you do
    it, the easier it’ll be. Go forth and get feedback on what you designed!
  prefs: []
  type: TYPE_NORMAL
- en: SECTION 3.5
  prefs: []
  type: TYPE_NORMAL
- en: CODING YOUR DESIGN
  prefs: []
  type: TYPE_NORMAL
- en: IF THIS BOOK INCLUDED CODE, it would balloon to three times the size! But I
    did want to talk a bit about some coding philosophy while I have your attention.
  prefs: []
  type: TYPE_NORMAL
- en: '**Don’t worry about being original**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A lot of designers complain that too many websites look the same **([FIGURE
    3-16](ch03.xhtml#ch3fig16))**.
  prefs: []
  type: TYPE_NORMAL
- en: As a beginner designer, *don’t worry about being 100 percent original.* Use
    what works! Sometimes the comforting familiarity could be an advantage, too.
  prefs: []
  type: TYPE_NORMAL
- en: When you grow as a designer, you’ll get better at creating new and original
    details. But when you’re starting out, don’t fret if your design looks similar
    to another, like the beautiful (but similar layout) example sites above. No one
    gets hurt if your design looks similar to something else (unless you’ve used a
    design verbatim; don’t do that!). Remember, how your design works is more important
    than how it looks.
  prefs: []
  type: TYPE_NORMAL
- en: Learn the rules and trends before you break them.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-16:** Bootstrap is a popular design framework, meaning that a lot
    of websites will have similar-looking layouts. This website makes fun of the trend.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Use a CSS framework**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Professional designers and frontend developers often scoff at frameworks — most
    notably Bootstrap (*[hellobks.com/hwd/5](http://hellobks.com/hwd/5)*), but also
    Skeleton (*[hellobks.com/hwd/7](http://hellobks.com/hwd/7)*), Foundation (*[hellobks.com/hwd/6](http://hellobks.com/hwd/6)*),
    or PureCSS (*[hellobks.com/hwd/9](http://hellobks.com/hwd/9)*) — because they
    constrain your design to fit their plan, often have designs built in (so you’re
    not creating something unique; same complaint as above), and can bloat your code
    with unnecessary CSS and JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: But beginner designers benefit from using a framework. It will save you time
    futzing with CSS, layouts, and best practices. The designed pieces that come with
    a lot of frameworks (such as Bootstrap) give you a good a place to start from
    so you don’t need to spend a ton of time designing every individual element.
  prefs: []
  type: TYPE_NORMAL
- en: It’s more important in the beginning to get a design up and launched as fast
    as possible. You can always reduce the size of your design code and redesign elements
    after launch.
  prefs: []
  type: TYPE_NORMAL
- en: '**Remember responsiveness**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We mentioned responsiveness a few times in earlier sections, and it comes into
    play most when it comes time to code up your site.
  prefs: []
  type: TYPE_NORMAL
- en: Nowadays, with all sorts of devices with all sizes of screens — from tiny phone
    screens to giant monitors — it’s important for your design to work in multiple
    formats.
  prefs: []
  type: TYPE_NORMAL
- en: Look into media queries (*[hellobks.com/hwd/89](http://hellobks.com/hwd/89)*)
    so you can specify CSS rules that only apply to one screen size.
  prefs: []
  type: TYPE_NORMAL
- en: Frameworks usually come with responsive utilities, which is another reason why
    I recommend them. Pay attention to what features you can use that’ll help your
    design, such as Bootstrap’s visible/hidden CSS classes so you can show/hide elements
    depending on screen size.
  prefs: []
  type: TYPE_NORMAL
- en: Before you launch your site, look at your design in a variety of formats and
    make sure the flows that you designed work on every size — your design should
    *work* regardless of the medium **([FIGURE 3-17](ch03.xhtml#ch3fig17))**. Coding
    responsiveness takes a lot of time, but it’s important to how well your design
    works. Don’t forget it!
  prefs: []
  type: TYPE_NORMAL
- en: '**Pay attention to site size**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Beautiful images (normal *and* retina), JavaScript, framework code — before
    you know it, your website can be slow to download. Look at where you can trim
    fat by reducing the size of your CSS, images, and JavaScript: slow downloading
    will cause you to lose visitors **([FIGURE 3-18](ch03.xhtml#ch3fig18))**.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-17:** Chrome DevTools (*[hellobks.com/hwd/90](http://hellobks.com/hwd/90)*)
    allows you to view your design in different sizes in your browser — no need to
    have the actual device to view compatibility.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/03fig18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 3-18:** Chrome DevTools also shows you loading times for your website,
    so you can see what has the potential to slow down the loading of your site.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Use analytics**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Don’t just launch a design and forget about it — look at how well it’s doing
    after launch. Is your bounce rate (the percentage of visitors who leave your site
    immediately after viewing) high? Is no one viewing your About page? Critiquing
    design can be hard because it’s very qualitative, relying on gut instincts and
    personal preference. Adding data through analytics can help you make more quantitative
    design decisions.
  prefs: []
  type: TYPE_NORMAL
- en: The gold standard in analytics is Google Analytics (*[hellobks.com/hwd/48](http://hellobks.com/hwd/48)*),
    but there other analytics packages you can use instead. One option is Segment
    (*[hellobks.com/hwd/49](http://hellobks.com/hwd/49)*), which allows you to tie
    in other analytics services, including Google Analytics and also Mixpanel (*[hellobks.com/hwd/91](http://hellobks.com/hwd/91)*),
    and others.
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations on finishing this chapter! I’ve taken a lot of information and
    distilled it down into smaller, hopefully more manageable chunks. I hope at this
    point in the book you feel more confident about making design decisions and planning,
    prototyping, and building your designs.
  prefs: []
  type: TYPE_NORMAL
