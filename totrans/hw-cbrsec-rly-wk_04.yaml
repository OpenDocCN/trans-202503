- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: Password Thefts and Other Account Access Tricks
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 密码盗窃与其他账户访问技巧
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: 'We use access control procedures to ensure that only authorized people can
    access a system, open a file, or run a piece of software. It’s part of an organization’s
    everyday management; every person who works for a business deals with it in some
    form or fashion, whether by logging into an email account or sharing a file with
    a client. To better manage such a sizable and critical topic, the security world
    often divides access control into three categories: authentication, authorization,
    and accounting.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用访问控制程序来确保只有授权人员能够访问系统、打开文件或运行软件。这是组织日常管理的一部分；每一个为企业工作的人都以某种方式接触到它，无论是通过登录电子邮件账户还是与客户共享文件。为了更好地管理这样一个庞大而重要的议题，安全界通常将访问控制分为三大类：认证、授权和审计。
- en: In this chapter, we’ll explore how various methods of authentication and authorization
    can keep your systems safe, and how we use accounting to keep track of everything
    done in a system. Throughout the chapter, you’ll also learn how black hats circumvent
    access control.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨各种认证和授权方法如何保护你的系统安全，以及如何使用审计来跟踪系统中所做的一切。在本章中，你还将学习到黑帽攻击者如何绕过访问控制。
- en: Authentication
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 认证
- en: '*Authentication* is verifying that someone is who they say they are. Let’s
    say a knight comes to your castle’s gate. He could be an enemy knight or a friendly
    knight, depending on his shield’s crest. To authenticate the knight, you send
    a squire to check the knight’s crest. If he has a friendly crest, you let him
    in. If he has an enemy crest, you keep the gate closed.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*认证*是验证某人是否真的是他所说的那个人。假设有一位骑士来到你城堡的门前。他可能是敌对的骑士，也可能是友好的骑士，取决于他盾牌上的纹章。为了认证这位骑士，你派一个侍从去检查骑士的纹章。如果他有友好的纹章，你就让他进门。如果他有敌对的纹章，你就关上大门。'
- en: Cybersecurity professionals meticulously distinguish authentication from a related
    concept, *identification*. You might use some form of identification to state
    who you’re trying to authenticate as, whereas authentication proves you’re actually
    that person. For example, when you enter a username and password, the username
    identifies you. But the username alone doesn’t prove you’re truly that user. By
    entering the password, you validate that you’re the user associated with that
    ID.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 网络安全专家严格区分认证与相关概念——*身份识别*。你可能会使用某种形式的身份识别来说明你试图认证的是谁，而认证则证明你确实是那个人。例如，当你输入用户名和密码时，用户名是用来识别你的。但仅凭用户名并不能证明你真的是那个用户。通过输入密码，你验证了自己是与该ID相关联的用户。
- en: Types of Authentication
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 认证方式
- en: 'You can authenticate a person or system in many ways: using a password, using
    DNA, or even by knowing the way a person speaks. Each of these authentication
    methods has its own strengths and drawbacks. To better classify different methods,
    cybersecurity specialists group them into the following five types.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过多种方式对一个人或系统进行认证：使用密码、使用DNA，甚至通过知道一个人说话的方式。每种认证方法都有其优点和缺点。为了更好地分类不同的方法，网络安全专家将其分为以下五种类型。
- en: 'Type 1: Something You Know'
  id: totrans-10
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 类型 1：你知道的东西
- en: Type 1, something you know, is typically a piece of information you’ve memorized.
    The most widely used version is the password, because passwords are incredibly
    easy to set up and maintain, and a vast array of systems can use them. Consider
    how many times a day you use passwords to access accounts or systems.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 类型 1，某些你知道的东西，通常是你记住的一些信息。最常用的版本是密码，因为密码非常容易设置和维护，且许多系统都可以使用密码。想想你每天使用多少次密码来访问账户或系统。
- en: But passwords aren’t the only form of Type 1 authentication. Another common
    one is the security question, also known as the *cognitive password*. Typically,
    you’d use one of these to reset a regular password when you forget it. The answer
    to the question the system asks is a response that only you would know, such as
    your mother’s maiden name or the street you grew up on. However, with the spread
    of social media, it’s become easier for black hats to discover the answers to
    these questions and use them to reset your password.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但密码并不是唯一的类型 1 认证方式。另一个常见的方式是安全问题，也称为*认知密码*。通常，当你忘记常规密码时，会用这种方式来重置密码。系统询问的问题的答案是只有你知道的答案，例如你母亲的娘家姓或你成长的街道。然而，随着社交媒体的传播，黑帽攻击者更容易发现这些问题的答案并用它们来重置你的密码。
- en: 'In fact, Type 1 is the easiest form of authentication to break, because it’s
    not necessarily unique or complex. Think of the passwords you use, and answer
    these questions honestly. How many passwords do you have that are:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，第一类身份验证是最容易破解的，因为它不一定是唯一的或复杂的。想一想你使用的密码，诚实地回答以下问题。你有多少个密码是：
- en: Only used in one place?
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅在一个地方使用？
- en: At least 12 characters long?
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少12个字符长？
- en: Made up of lowercase and uppercase letters, numbers, and symbols?
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由小写字母、大写字母、数字和符号组成？
- en: If any of your passwords fail to meet the preceding requirements, they’re susceptible
    to attack. Adversaries use a few clever techniques to try to break passwords,
    including brute force. To brute-force a password, a computer system automatically
    runs through every combination of possible password characters, and then attempts
    to use them to log in to a system. Often, this process takes mere hours to accomplish
    a guessing task that a person would waste months doing manually. Although this
    technique might seem time-consuming, given enough time brute-force attacks always
    work, even if it takes years to go through every possible combination. The shorter
    the password, the easier it is to crack. In addition, you never know when an attacker
    might get lucky on the first try.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的任何密码未能满足上述要求，那么它们就容易受到攻击。攻击者使用一些巧妙的技术尝试破解密码，包括暴力破解。暴力破解密码时，计算机系统会自动尝试每一个可能的密码字符组合，然后用它们来登录系统。通常，这个过程只需要几个小时就能完成，而如果是人工操作，可能需要几个月的时间。尽管这种技术看起来耗时，但只要时间充足，暴力破解总是能成功，即使要花费多年时间去尝试每一个可能的组合。密码越短，破解起来就越容易。此外，你永远不知道攻击者何时会在第一次尝试时就成功。
- en: Another attack adversaries use is the *dictionary attack*. This attack relies
    on common words or combinations to shorten the amount of time it takes to brute-force
    a password. For example, one of the top passwords, year after year, is *qwerty*
    (the letters on the top row of a standard US keyboard). A dictionary attack might
    run through all the passwords stored in a file, including *qwerty* and some other
    common ones, narrowing down the combinations the attacker must try. The less complex
    a password is, the easier it is to break using a dictionary attack.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种攻击方式是攻击者使用*字典攻击*。这种攻击依赖于常见的单词或组合，以缩短暴力破解密码所需的时间。例如，每年排名前列的密码之一就是*qwerty*（标准美国键盘顶部一行的字母）。字典攻击可能会遍历存储在文件中的所有密码，包括*qwerty*和一些其他常见的密码，从而缩小攻击者必须尝试的组合范围。密码越简单，就越容易通过字典攻击破解。
- en: That said, black hats typically don’t have to brute-force a password or use
    a dictionary attack. It’s much easier to get the user to tell them the password.
    Using social engineering, or by simply looking for the password on a sticky note
    at a person’s desk, attackers constantly get people to reveal their passwords.
    Once they have it, there is nothing to stop attackers from using it. Type 1 authentication
    doesn’t use additional checks to confirm the person entering the password is who
    they claim to be; it merely reads the password, and if it’s correct, lets them
    in. So although Type 1 authentication might be cheap and easy to deploy, it’s
    not the most secure, which is why we rely on other types.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，黑帽攻击者通常不需要暴力破解密码或使用字典攻击。让用户自己告诉他们密码要容易得多。攻击者通过社会工程学，或者仅仅是在某人桌子上的便利贴上寻找密码，常常能够让人们泄露他们的密码。一旦攻击者获得了密码，就没有任何东西能阻止他们使用它。第一类身份验证没有额外的检查来确认输入密码的人就是他们所声称的人；它仅仅读取密码，如果密码正确，就允许登录。所以，虽然第一类身份验证可能便宜且容易部署，但它并不是最安全的，这也是我们依赖其他类型身份验证的原因。
- en: 'Type 2: Something You Have'
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第二类：你拥有的东西
- en: Something you have is an entity, whether it’s a physical object or a digital
    artifact on a computer, that you must present to authenticate to the system. The
    object, which is unique to you, usually provides a code or key to the system.
    There are many ways to implement Type 2 authentication; examples include smart
    cards, key generators, and digital certificates, which you’ll learn more about
    in Chapter 9.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你所拥有的东西是一种实体，无论是物理物品还是计算机上的数字工件，你都必须向系统呈现它来进行身份验证。这个物品对你来说是唯一的，通常会提供一个代码或密钥供系统使用。实现第二类身份验证的方法有很多种；例如智能卡、密钥生成器和数字证书，你将在第9章了解更多关于它们的内容。
- en: Type 2 authentication is stronger than Type 1, because the attacker needs to
    steal the object to bypass authentication, which is much harder to do than guessing
    a password. But Type 2 is also more complex and expensive to implement, which
    is why it’s not as common. The reason is that Type 2 requires special equipment
    and additional hardware. For example, if you added a key card reader system to
    log in to your computer, not only would you have to purchase, install, and maintain
    the reader, but you’d have to purchase key cards for every user, as well as keep
    additional cards on hand for when someone inevitably loses one. However, over
    the last several years, new ways of implementing Type 2 authentication have made
    it much cheaper to use. The most familiar of these is the text verification code.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 类型 2 认证比类型 1 更强，因为攻击者需要盗取物理物品来绕过认证，这比猜测密码要困难得多。但类型 2 也更复杂且实施成本更高，这就是为什么它不那么常见的原因。原因在于类型
    2 需要特殊设备和额外硬件。例如，如果你为你的计算机添加了一个门禁卡阅读器系统来登录，你不仅需要购买、安装和维护阅读器，还需要为每个用户购买门禁卡，并且必须为避免有人丢失卡片而额外准备一些备用卡片。然而，在过去的几年里，实施类型
    2 认证的新方法使得它变得更加便宜。其中最常见的就是文本验证代码。
- en: Systems that use text verification codes usually prompt you to enter a phone
    number when you first set up an account. To access your account later, the system
    asks you for permission to send a verification code to your phone. Once you agree,
    the code is sent by text message (or phone call, although this isn’t as common).
    You then enter this code in a field on the system or app. This process proves
    that you’re the owner of the account, because theoretically, only you have access
    to that phone number.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用文本验证代码的系统通常会在你首次设置帐户时提示你输入电话号码。之后，为了访问你的帐户，系统会要求你授权发送验证代码到你的手机。一旦你同意，代码将通过短信（或电话，尽管这种方式不太常见）发送给你。然后你将这个代码输入系统或应用程序中的字段。这一过程证明了你是帐户的拥有者，因为从理论上讲，只有你能访问那个电话号码。
- en: 'One of the most secure methods of Type 2 authentication is the smart card.
    In a system that uses smart cards, each person receives a unique card. On the
    card is a chip that contains an encryption key (we’ll discuss these keys in Chapter
    9). When you slide the card through a chip reader, the reader checks the key and
    authenticates you. No card? No key? No login. The use of an encryption key instead
    of a code makes it an even stronger authentication, because it’s nearly impossible
    to guess the key. This method has become more common over the years: chips have
    been used on credit cards since the mid-1990s but didn’t become ubiquitous in
    the United States until 2015\. [Figure 5-1](#figure5-1) shows an example of a
    *Common Access Card* *(CAC**)*, a type of smart card the US federal government
    and military use to access desktops and buildings.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 类型 2 认证最安全的方法之一是智能卡。在使用智能卡的系统中，每个人都会收到一张独特的卡。卡上有一个包含加密密钥的芯片（我们将在第 9 章讨论这些密钥）。当你将卡片滑过芯片读取器时，读取器会检查密钥并验证你的身份。没有卡片？没有密钥？无法登录。使用加密密钥而非代码使得这种认证更加安全，因为几乎不可能猜测出密钥。随着时间的推移，这种方法变得越来越普遍：自
    1990 年代中期以来，芯片就已应用于信用卡，但直到 2015 年才在美国普及。[图 5-1](#figure5-1) 显示了一个*通用访问卡*（*CAC**）的例子，这是一种由美国联邦政府和军方用于访问桌面和建筑物的智能卡。
- en: '![f05001](image_fi/501287c05/f05001.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![f05001](image_fi/501287c05/f05001.png)'
- en: 'Figure 5-1: A Navy Common Access Card'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-1：海军通用访问卡
- en: 'A Type 2 authentication object doesn’t have to be physical. It can also be
    a digital entity, such as a *digital certificate*: a piece of data stored on a
    computer that identifies and authenticates it when it tries to access another
    system. For example, when a system queries a database for information, that system
    might send the database a digital certificate to prove it’s authorized to make
    the query. The certificate is stored on the hardware, sometimes in a special chip
    known as a *Trusted Platform Module (TPM)*. There are many layers of security
    between the TPM and the other hardware on the system, making it extremely difficult
    for a black hat to access the certificate without having physical access to the
    machine. We’ll discuss certificates and encryption in more detail in Chapter 9.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 类型2认证对象不必是物理实体。它也可以是数字实体，例如*数字证书*：存储在计算机上的一段数据，当计算机尝试访问另一个系统时，用于标识和认证它。例如，当一个系统查询数据库中的信息时，该系统可能会向数据库发送一个数字证书，以证明它有权进行查询。该证书存储在硬件中，有时在一个特殊的芯片中，称为*受信平台模块（TPM）*。TPM和系统中其他硬件之间有许多安全层，这使得黑客如果没有物理接触到计算机，是极其困难的访问证书的。我们将在第9章中更详细地讨论证书和加密。
- en: 'Type 3: Something You Are'
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 类型3：你是谁
- en: 'Although Type 1 and Type 2 authentication provide a lot of protection, they
    both have the same drawback: neither can be uniquely tied to a single person,
    making it possible for someone else to use their credentials. This is where Type
    3 authentication excels. Type 3 systems use a person’s unique biometric signature
    as the authentication method.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管类型1和类型2认证提供了很大的保护，但它们都有一个相同的缺点：它们都不能唯一地与某个人绑定，这使得别人可能会使用他们的凭证。这就是类型3认证的优势所在。类型3系统使用一个人的独特生物识别签名作为认证方法。
- en: A *biometric* is some physical or behavioral attribute of a person. The most
    common example of a biometric used for authentication is a fingerprint, but others
    include retina scans, facial recognition, voice, or even DNA. A biometric might
    also be a behavior, such as the way a person walks, or their signature. In theory,
    these attributes are universally unique, meaning no other person in the world
    will have the same attribute as another. [Table 5-1](#table5-1) lists some commonly
    used biometrics.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*生物识别*是指一个人身上的某种身体或行为特征。最常用的用于身份验证的生物识别示例是指纹，但其他例子还包括视网膜扫描、面部识别、声音，甚至是DNA。生物识别也可以是某种行为，比如一个人的走路方式或签名。从理论上讲，这些特征是独一无二的，意味着世界上没有其他人拥有与之相同的特征。[表5-1](#table5-1)列出了一些常用的生物识别方式。'
- en: 'Table 5-1: Types of Biometrics'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 表5-1：生物识别类型
- en: '| **Biometric type** | **Scanning data** |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| **生物识别类型** | **扫描数据** |'
- en: '| --- | --- |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Fingerprint scanner | The swirls on the pads of fingers |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 指纹扫描仪 | 手指垫上的螺旋纹路 |'
- en: '| Hand scanner | Unique patterns on fingers and palm |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 手部扫描仪 | 手指和手掌上的独特图案 |'
- en: '| Iris scanner | Shape of eyeball |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 虹膜扫描仪 | 眼球的形状 |'
- en: '| Retina scanner | Pattern of blood vessels at back of eyeball |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 视网膜扫描仪 | 眼球后部血管的图案 |'
- en: '| Face scanner | Pattern and shape of face |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 面部扫描仪 | 面部的图案和形状 |'
- en: To set up a biometric system, the people using it must provide their biometric
    signatures, which are stored in a database. For example, if your workplace wanted
    to use fingerprint scanners on all doors, it would have to scan your fingertips.
    When you used the scanner at the door, the signature gathered would be compared
    to the signature stored in the database. If they’re the same, you’d be allowed
    in.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置生物识别系统，使用该系统的人必须提供他们的生物识别签名，这些签名会存储在数据库中。例如，如果你的工作场所想在所有门上使用指纹扫描仪，它必须扫描你的指尖。当你在门口使用扫描仪时，收集到的签名将与存储在数据库中的签名进行比较。如果它们相同，你就可以进入。
- en: This can be a tricky process, because every scanner has a different sensitivity
    level. For example, if the back door’s scanner is too sensitive, it might deny
    you entry, even though it should have allowed you access via that door. The rate
    at which this happens is known as the *false rejection rate* *(FRR**)*. On the
    other side of the scale, if the scanner’s sensitivity is too low, it might grant
    access to someone who isn’t in the database. The rate at which this occurs is
    known as the *false acceptance rate* *(FAR**)*. People who design these systems
    must figure out how to set the scanner in a way that minimizes both the FRR and
    the FAR. We call this sweet spot the *crossover error rate* *(CER**)*. The need
    to find the CER makes installing a biometric system a bit of a trial-and-error
    process. Also, the type of scanner will affect the system’s success, because simpler
    scanners don’t create as complete or complex a signature as more sophisticated
    scanners.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个棘手的过程，因为每个扫描仪的灵敏度不同。例如，如果后门的扫描仪过于敏感，即使它应该允许你通过那扇门进入，它也可能会拒绝你的进入。这种情况发生的频率被称为*误拒绝率*（*FRR*）。另一方面，如果扫描仪的灵敏度过低，它可能会允许一个不在数据库中的人通过。这种情况发生的频率被称为*误接受率*（*FAR*）。设计这些系统的人必须弄清楚如何设置扫描仪，以最小化
    FRR 和 FAR 两者。我们称这个最佳平衡点为*交叉错误率*（*CER*）。寻找 CER 的需要使得安装生物识别系统成为一个反复试验的过程。此外，扫描仪的类型会影响系统的成功，因为简单的扫描仪不像更复杂的扫描仪那样能够创建完整或复杂的签名。
- en: Type 3 is the strongest form of authentication. Despite what movies would have
    you believe, it’s extremely difficult to impersonate a biometric signature, especially
    if you’re using a high-quality scanner. Some of the scanners currently in use
    can even detect a heartbeat in a finger to determine whether it’s connected to
    a living person. This means that to get the signature, the correct person must
    use the scanner. This severely reduces an adversary’s ability to break into the
    system or steal credentials, the way they might with Type 1 or Type 2 authentication.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 类型 3 是最强的身份验证形式。尽管电影中常常让人误以为如此，但伪造生物识别签名是极其困难的，尤其是在使用高质量扫描仪的情况下。一些目前使用的扫描仪甚至可以检测手指的心跳，以确定它是否连接到一个活人身上。这意味着，要获取签名，必须由正确的人使用扫描仪。这大大减少了敌人入侵系统或窃取凭证的能力，而这种能力在类型
    1 或类型 2 身份验证中更容易实现。
- en: 'In addition to a high-quality scanner, these systems need large databases in
    which to store the signatures. These requirements make biometrics considerably
    more expensive to implement. Even though scanners have become cheaper, the ones
    placed into mobile devices don’t provide the same accuracy as those used as stand-alone
    systems. This leads to the second issue with biometrics: bad scanning. Because
    a signature is extremely unique, any change to it can lead to an FRR error. For
    example, if you burn the finger you use for a fingerprint scanner, the scanner
    might no longer work. Even doing something like shaving a beard can confuse facial
    scanners.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 除了高质量的扫描仪，这些系统还需要大型数据库来存储签名。这些要求使得生物识别技术的实施成本相当高。尽管扫描仪已经变得便宜，但放置在移动设备中的扫描仪并不像独立系统中使用的扫描仪那样精确。这就导致了生物识别技术的第二个问题：扫描不良。因为每个签名都非常独特，任何变化都会导致
    FRR 错误。例如，如果你烧伤了用于指纹扫描的手指，扫描仪可能就无法工作了。即使是像刮胡子这样的行为，也可能会让面部扫描仪产生混乱。
- en: Biometrics can be difficult to use and adjust, so it’s important to have a backup
    authentication system should the biometric system fail. For example, on a mobile
    phone with a fingerprint or facial scanner, the authentication system usually
    provides an option to enter a pin number if the scanner doesn’t recognize the
    person. This way, you can adjust the biometric scanner’s sensitivity over time
    without fear that it will lock you out of the system you’re trying to access.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 生物识别技术可能难以使用和调整，因此，如果生物识别系统发生故障，拥有一个备份身份验证系统非常重要。例如，在带有指纹或面部扫描仪的手机上，身份验证系统通常会提供一个选项，让你在扫描仪无法识别身份时输入密码。这样，你可以随着时间的推移调整生物识别扫描仪的灵敏度，而不用担心它会把你锁定在无法访问的系统之外。
- en: 'Types 4 and 5: Something You Do and Somewhere You Are'
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 类型 4 和类型 5：你做的事情和你所在的地方
- en: The other two types of authentication typically supplement one of the other
    forms of authentication rather than acting as stand-alone methods. They serve
    as part of multi-factor authentication (discussed in more detail next).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 其他两种身份验证类型通常是作为多因素身份验证的一部分来补充其他身份验证形式，而不是作为独立的身份验证方法。它们是多因素身份验证的一部分（稍后将详细讨论）。
- en: Something you do (Type 4) is an action you must take to authenticate. For example,
    to get into a mad scientist’s secret lab, you might have to pull a certain book
    on a bookcase to reveal the entrance. Only the people who know which book to pull
    will be able to authenticate. Another example of Type 4 is the *CAPTCHA*, which
    is a test that proves you’re a human, not a script designed to automatically log
    in to an account. By choosing the right pictures, such as images of cars from
    a group of photos, you prove that you’re a real person. The Type 4 authentication
    method doesn’t provide adequate protection on its own, however, because anyone
    can perform the action, as long as they know what needs to be done. (In the mad
    scientist’s case, an adversary could simply watch through a cracked door or over
    someone’s shoulder to see what choices a person makes to authenticate.)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你所做的事情（类型 4）是你必须采取的动作来进行身份验证。例如，为了进入一个疯狂科学家的秘密实验室，你可能需要拉动书架上的某本书来揭示入口。只有知道该拉哪本书的人才能完成身份验证。类型
    4的另一个例子是*验证码*，它是一个证明你是人类而不是自动登录脚本的测试。通过选择正确的图片，例如从一组照片中选出汽车的图像，你证明自己是一个真实的人。然而，类型
    4身份验证方法本身并不能提供足够的保护，因为任何人只要知道需要做什么，就能执行这个动作。（在疯狂科学家的例子中，敌人可能会通过裂开的门或透过别人肩膀看到某人做出的选择，从而完成身份验证。）
- en: Somewhere you are (Type 5) is the location of a person when an authentication
    is made. If the person isn’t in the right location, the authentication fails.
    On its own, Type 5 falls short in the same way as Type 4; there’s just no way
    to verify that the individual in the location is the right person without using
    other authentication methods. However, when paired with different authentication
    types, Type 5 provides additional protection from black hats trying to access
    an account. For example, if you register your account as being in Little Rock,
    Arkansas, and someone tries to log in to the account from Hong Kong, the system
    can recognize that it’s probably not you and send an alert. Although it’s possible
    to spoof your location on the internet (more on that topic in Chapter 6), this
    protection adds another layer of defense that the attacker must bypass to access
    the account. The more layers in the way, the harder it is for an adversary to
    succeed in breaking into the system.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你所在的位置（类型 5）是进行身份验证时人的位置。如果此人不在正确的位置，身份验证将失败。单独使用类型 5时，其缺陷与类型 4相似；仅凭此方法无法验证该位置的人是否是正确的人，除非结合其他身份验证方法。然而，当与其他身份验证类型配合使用时，类型
    5能为防止黑客入侵账户提供额外的保护。例如，如果你注册账户时设置的位置是阿肯色州的小石城，而有人尝试从香港登录该账户，系统可以识别出这可能不是你，并发送警报。尽管在互联网上伪造位置是可能的（第6章会讨论这个话题），但这种保护增加了另一个防御层，攻击者必须绕过这一层才能访问账户。防御层越多，攻击者突破系统的难度就越大。
- en: Multi-Factor Authentication
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多因素认证
- en: Using more than one type of authentication is called *multi-factor authentication*.
    It can help make up for the weaknesses of any one type of authentication. Recall
    the problems with Type 1 authentication. Something you know is guessable, can
    be written down or transferred to other people, and anyone can use it regardless
    of whether they created it. But if we add Type 2 authentication to a system that
    already uses Type 1, we fix many of those problems. Because they must have some
    additional item to authenticate, such as a verification code from a text message,
    an attacker can’t just guess the password to get in.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用多种身份验证方法被称为*多因素认证*。它可以弥补任何单一认证方法的不足。回顾类型 1认证的问题，*你知道的事情*是可以猜测的，可以写下来或转交给其他人，任何人都能使用它，不管他们是否创建了它。但是，如果我们在已经使用类型
    1的系统中加入类型 2认证，我们可以解决其中的许多问题。因为用户必须拥有某个额外的验证项来进行认证，例如来自短信的验证码，攻击者就无法仅凭猜测密码来进入账户。
- en: You must have multi-factor authentication if you want to protect your system
    from the modern techniques black hats use. The most common multi-factor authentication
    strategy today is adding a phone number or email address to an account and having
    a verification code sent to it when you attempt to log in. You’re then prompted
    to enter this code after you enter your password. This might seem like an unnecessary
    nuisance to get into your social media account, but as discussed previously, attackers
    can obtain passwords in many ways. Having multi-factor authentication makes this
    more difficult for adversaries, and many times, they’ll give up once they run
    into obstacles. At the very least, it provides extra time for you to react to
    the adversary’s actions before they break into the account.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想保护你的系统免受黑客使用现代技术的攻击，你必须启用多因素认证。现在最常见的多因素认证策略是将电话号码或电子邮件地址添加到账户中，并在你尝试登录时向该地址发送验证码。然后，在输入密码后，系统会提示你输入该验证码。这可能看起来像是进入社交媒体账户时不必要的麻烦，但如前所述，攻击者可以通过多种方式获取密码。启用多因素认证会让攻击者更难以突破，许多情况下，他们在遇到障碍后会放弃。至少，它能为你提供额外的时间来应对攻击者的行动，在他们突破账户之前。
- en: Adding extra defenses is a security strategy known as *defense in depth*. Basically,
    the more barriers you put up, the harder it is for an attacker to easily gain
    access. This not only helps supplement weaknesses found in individual defenses
    (like the weaknesses in guessable passwords, for example), but also gives white
    hats time to become aware of, learn about, and respond to the black hat activity.
    As discussed in Chapter 1, awareness is poison to attackers; the more layers you
    construct, the more likely it is that white hats will be alerted to the nefarious
    activity and stop it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 增加额外防御是一种安全策略，称为*深度防御*。基本上，你设置的障碍越多，攻击者想轻易进入的难度就越大。这不仅有助于弥补单一防御（例如可猜测密码中的漏洞）的不足，还能为白帽黑客提供时间，让他们察觉、了解并应对黑客的活动。如第一章所述，意识对攻击者来说是致命的；你构建的防御层越多，白帽黑客越有可能察觉到恶意活动并阻止它。
- en: Authorization
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 授权
- en: Once users authenticate, they must be *authorize**d* to do certain actions.
    The friendly knight from the earlier example doesn’t necessarily get into the
    tower where the princess lives just because he’s friendly. Instead, he might be
    authorized to enter the castle but not the tower. As with authentication, authorization
    is based on who you are in an organization. A friendly knight and the king might
    be able to enter the castle, but only the king, princess, and princess’s attendants
    might be authorized to enter the princess’s tower.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦用户通过身份验证，他们必须被*授权*进行某些操作。之前例子中的友好骑士并不会仅仅因为他友好就进入公主所在的塔楼。相反，他可能被授权进入城堡，但不能进入塔楼。与身份验证类似，授权是基于你在组织中的身份。友好骑士和国王可能都能进入城堡，但只有国王、公主和公主的随从才可能被授权进入公主的塔楼。
- en: Authorization is vitally important. To use a more modern example, if your company
    has two engineers authorized to make changes to the web server, it can be difficult
    to track who is actually making changes. When an attacker breaks in or a malicious
    action occurs, finding the source could be more difficult. If only one engineer
    is authorized to make changes to the web server, you know exactly who is responsible
    for any changes or even any malicious actions that might happen.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 授权至关重要。举一个更现代的例子，如果你的公司有两名工程师被授权修改web服务器，追踪到底是谁做了修改可能会变得很困难。当攻击者突破或发生恶意行为时，找到源头可能会更加复杂。如果只有一名工程师被授权对web服务器进行修改，那么你就能明确知道谁是负责任何修改或可能发生的恶意行为的责任人。
- en: 'A *security kernel* program, which is part of an operating system, typically
    enforces authorization for changes made on that system. How the security kernel
    enforces authorization depends on the type of access control scheme in use. There
    are five common access control schemes: mandatory access control (MAC), rule-based
    and role-based access control (both commonly abbreviated as RBAC, though I’ll
    use the full names to avoid confusion), attribute-based access control (ABAC),
    and discretionary access control (DAC). Let’s examine each in turn.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*安全内核*程序是操作系统的一部分，通常用于强制执行系统上更改的授权。安全内核如何执行授权取决于所使用的访问控制方案类型。有五种常见的访问控制方案：强制访问控制（MAC）、基于规则和基于角色的访问控制（这两者通常缩写为RBAC，但为了避免混淆，我会使用完整名称）、基于属性的访问控制（ABAC）和自主访问控制（DAC）。让我们逐一看看每种方案。'
- en: Mandatory Access Control
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 强制访问控制
- en: MAC is a centralized system in which a central authority strictly enforces access
    control. MAC provides a high level of control over who can access files, systems,
    or software, but it doesn’t allow a lot of flexibility. The system tests all attempts
    to access a resource against a central security policy to determine whether to
    grant access. If the type of access requested doesn’t exactly fit into the policy,
    it’s denied. A single administrator or group of administrators controls the policy.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: MAC 是一个集中式系统，其中中央权威严格执行访问控制。MAC 提供了对谁可以访问文件、系统或软件的高度控制，但它不允许太多灵活性。系统会根据中央安全策略测试所有访问资源的尝试，以决定是否授予访问权限。如果请求的访问类型不完全符合政策，就会被拒绝。由单一管理员或管理员组控制该策略。
- en: 'To create such a policy, the administrators might use labels to determine what
    sort of authorization a person should need to access each resource. For example,
    the military uses a system of classifications with three base categories: confidential,
    secret, and top secret. Any new file gets assigned a classification based on the
    policy. If a document is given top-secret classification, only people who are
    authorized at the top-secret clearance level can access it, and a person with
    secret clearance can’t override the system to view top-secret documents.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建这样的策略，管理员可能会使用标签来确定一个人访问每个资源所需的授权类型。例如，军方使用一个包含三个基本类别的分类系统：机密、秘密和绝密。任何新文件都会根据策略分配一个分类。如果一个文件被赋予绝密分类，只有那些拥有绝密许可的人才能访问它，而拥有秘密许可的人无法覆盖系统来查看绝密文件。
- en: Rule-Based Access Control
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于规则的访问控制
- en: Rule-based access control uses specific rules to determine what type of authorization
    to grant. This is an incredibly rigid system. Variations in context matter little,
    and if no rule matches the access request, most systems use an *implicit deny*,
    meaning they automatically reject the action. This helps prevent the rule-based
    access control policy from becoming too bloated. It’s much easier to define what
    you want to happen in a system rather than trying to keep track of everything
    you don’t want to happen. That said, this system forces the administrator to map
    every possible authorized action, or people will likely get denied. In certain
    contexts, such as complex environments with many requirements, it might not be
    feasible to use a rule-based access control system. Unlike MAC, a rule-based scheme
    must separately set rules on every asset.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 基于规则的访问控制使用特定的规则来决定授予何种授权。这是一个极其严格的系统。上下文的变化几乎不重要，如果没有规则与访问请求匹配，大多数系统会使用*隐式拒绝*，意味着它们会自动拒绝该操作。这有助于防止基于规则的访问控制策略变得过于臃肿。在系统中定义你希望发生的事情要比试图追踪你不希望发生的事情容易得多。尽管如此，该系统迫使管理员映射每一个可能的授权操作，否则人们很可能会被拒绝。在某些环境中，比如有许多需求的复杂环境，使用基于规则的访问控制系统可能不可行。与
    MAC 不同，基于规则的方案必须对每个资产单独设置规则。
- en: A great example of rule-based access control is file permissions. Most operating
    systems grant access to files based on rules that take into account who is accessing
    the file and what actions they’re authorized to do. Each file has its own set
    of these rules, which the system reads to determine whether to grant access. For
    example, a system administrator might be able to read and write (meaning *change*)
    a system file, whereas a standard user would only be able to read it.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的基于规则的访问控制示例是文件权限。大多数操作系统根据规则授予文件访问权限，这些规则会考虑谁正在访问文件以及他们被授权执行的操作。每个文件都有一套这些规则，系统读取这些规则来决定是否授予访问权限。例如，系统管理员可能能够读取和写入（即*更改*）系统文件，而标准用户只能读取该文件。
- en: Role-Based Access Control
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于角色的访问控制
- en: Role-based access control uses a user’s role to determine their access to the
    system. Unlike with rule-based access control, the roles apply across the entire
    system, not to individual objects like files. For example, if you work in human
    resources, you might be given the role of Human Resources Officer. This means
    that when you log in to your computer, you can access the human resources department’s
    shared folder and log in to the employee record database.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 基于角色的访问控制使用用户的角色来决定他们对系统的访问权限。与基于规则的访问控制不同，角色适用于整个系统，而不是像文件这样的单独对象。例如，如果你在人力资源部门工作，你可能会被赋予人力资源官员的角色。这意味着，当你登录到计算机时，你可以访问人力资源部门的共享文件夹并登录员工记录数据库。
- en: Role-based access control provides a lot more flexibility than either MAC or
    rule-based access control. The system administrator can create new roles as needed
    to provide the necessary level of access. This method also makes it much easier
    to manage the access of a large group of people. For example, every person working
    in a call center might need access to a set of resources, such as a list of customer
    accounts. By creating the role Call Center Employee, the system administrator
    can easily give every call center employee the authorization to do their job without
    having to go into the system and individually grant access to every resource.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 基于角色的访问控制比 MAC 或基于规则的访问控制提供了更多的灵活性。系统管理员可以根据需要创建新的角色，以提供所需的访问级别。这种方法还使得管理大量人员的访问权限变得更加容易。例如，每个在呼叫中心工作的人可能需要访问一组资源，如客户账户列表。通过创建“呼叫中心员工”角色，系统管理员可以轻松地为每个呼叫中心员工授予执行其工作所需的权限，而无需进入系统并逐一授权每个资源的访问权限。
- en: The main drawback of role-based access control is that it often leads to *privilege
    creep*. Privilege creep occurs when an individual or group gradually gets more
    authorizations, until they have permission to do more than what their job requires.
    This becomes a problem when the controls can no longer keep an account from doing
    something it’s not actually authorized to do. For example, you might take over
    a role in your company temporarily while a new person is hired. If the authorization
    granted by that role remains once the new person joins, you might have access
    to resources you shouldn’t.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 基于角色的访问控制的主要缺点是，它往往导致*特权蔓延*。特权蔓延是指个人或团体逐渐获得更多的授权，直到他们有权限做超出其工作要求的事情。当控制措施无法防止账户执行其实际上没有授权的操作时，这就成为一个问题。例如，你可能暂时接管公司中的一个角色，直到新员工被聘用。如果新员工加入后该角色授予的授权依然有效，你可能会有不该有的资源访问权限。
- en: The roles can also be too broad. To guarantee that a large subset of people
    fit a role, each role might have a wide range of access. For example, the administrator
    role often receives a full set of permissions, whether or not that user needs
    all administrator functions. Or a human resources employee might not necessarily
    need to see every document pertaining to an employee. They might only be a recruiter,
    so they don’t need access to current employee files.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 角色也可能过于宽泛。为了保证大量人群符合一个角色的要求，每个角色可能会有广泛的访问权限。例如，管理员角色通常会获得完整的权限集，无论该用户是否需要所有管理员功能。或者一个人力资源员工可能不需要查看与员工相关的所有文件。他们可能只是一个招聘人员，所以不需要访问当前员工的文件。
- en: 'Such broad access roles make it easier for a black hat to gain access to files,
    accounts, or systems. To counteract privilege creep, security professionals usually
    apply the concepts of least privilege and separation of duties. Someone who has
    *least privilege* has only the privileges necessary to do their job. For example,
    a graphic designer might be able to update pictures on a website but not log in
    to the administrator side and change the website name. A task with *separation
    of duties* requires multiple people to finish it. For instance, two people might
    be needed to create a check and pay a vendor: someone to draft the check and another
    to sign it once they’ve verified it’s a valid payment.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的广泛访问角色使得黑客更容易获取文件、账户或系统的访问权限。为了防止特权蔓延，安全专家通常应用最小权限和职务分离的概念。拥有*最小权限*的人仅拥有完成工作所必需的权限。例如，平面设计师可能能够更新网站上的图片，但不能登录管理员界面并更改网站名称。具有*职务分离*的任务要求多个人一起完成。例如，可能需要两个人来创建支票并支付供应商：一个人起草支票，另一个人在验证支票是有效支付后签署它。
- en: Attribute-Based Access Control
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于属性的访问控制
- en: ABAC is similar in flexibility to role-based access control but helps alleviate
    the drawbacks of privilege creep. Essentially, ABAC uses descriptors (aptly named
    attributes) to determine what sort of access a person or system needs. You can
    think of each attribute as its own mini-role. When a person or system tries to
    access a resource, the system reviews their attributes to authorize access.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ABAC 与基于角色的访问控制在灵活性上相似，但有助于缓解特权蔓延的问题。从本质上讲，ABAC 使用描述符（恰如其分地称为属性）来确定一个人或系统需要何种访问权限。你可以把每个属性看作是一个小角色。当某人或系统尝试访问资源时，系统会检查他们的属性来授权访问。
- en: This scheme solves the human resources problem mentioned earlier. With an ABAC
    system, a member of this department would receive the attribute *human resources*
    on their account. However, if they’re also a recruiter, they would have the attribute
    *recruiter* as well. The human resources attribute allows them to read general
    human resource documents, but because they also have the recruiter attribute,
    they can’t read the files of current employees.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 该方案解决了之前提到的人力资源问题。在ABAC系统中，某个部门的成员会在其账户中获得*人力资源*属性。然而，如果他们还是招聘人员，他们会同时拥有*招聘人员*属性。人力资源属性允许他们读取一般的人力资源文件，但由于他们还拥有招聘人员属性，他们无法读取现有员工的文件。
- en: Attributes can be combined in many ways, allowing you to fine-tune access control
    while still maintaining the broadness and flexibility of role-based access control.
    Privilege creep remains a possibility; however, it’s much easier to protect against
    it with ABAC, because it’s possible to severely limit the access of attributes
    without making the system cumbersome, like a strict MAC system.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 属性可以以多种方式组合，允许你在保持基于角色的访问控制的广度和灵活性的同时，进行细化的访问控制。特权蔓延依然是一个可能性；然而，使用ABAC更容易防止这种情况的发生，因为它可以在不使系统变得繁琐的情况下，严密限制属性的访问，就像严格的MAC系统一样。
- en: Discretionary Access Control
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自主访问控制
- en: DAC is the most flexible and least secure of all the access control systems.
    Under DAC, whoever owns the object, whether it’s a file, application, or system,
    decides who has access to it. This creates plenty of flexibility, because the
    owner can grant and deny access as necessary. But this system is also insecure,
    because no central authority decides how access is granted or denied, making it
    more likely for someone to receive unauthorized access.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: DAC是所有访问控制系统中最灵活但最不安全的。在DAC下，谁拥有对象，无论是文件、应用程序还是系统，谁就决定谁有权访问。这为系统带来了极大的灵活性，因为拥有者可以根据需要授予或拒绝访问权限。但这个系统也不安全，因为没有中央权威决定如何授予或拒绝访问权限，从而增加了未经授权访问的可能性。
- en: A great example of DAC is in document services, such as OneDrive or Google Drive.
    When you create a document in one of these services, it’s placed in your personal
    account. You can then grant access to that document by sharing it with a third
    party, like a co-worker who is working on the same project. No system tells you
    who can or can’t receive the document. It’s up to you to decide who you share
    it with, and once they no longer need access, you can remove them from the share.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: DAC的一个很好的例子是在文档服务中，例如OneDrive或Google Drive。当你在这些服务中创建文档时，它会被放入你的个人账户。然后，你可以通过与第三方共享文件来授予访问权限，例如与同一项目的同事。没有任何系统告诉你谁可以或不能接收该文档。由你决定与谁共享，一旦他们不再需要访问，你可以将其从共享中移除。
- en: This scheme can lead to issues; for example, if you enter the wrong email address
    or share the file with an employee in another department who doesn’t need to see
    the document. Therefore, we typically only use DAC for very limited applications,
    like sharing documents, rather than as a full access control system like MAC.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方案可能会导致一些问题；例如，如果你输入了错误的电子邮件地址，或者将文件分享给了另一个部门的员工，而他并不需要查看该文档。因此，我们通常只将DAC用于非常有限的应用场景，比如共享文档，而不是像MAC那样作为完整的访问控制系统。
- en: Accounting
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 会计
- en: '*Accounting* is making sure that every action taken on a system or network
    generates a record. Although accounting doesn’t protect an account or system from
    direct access by an attacker, it’s still vitally important to maintaining an organization’s
    security. If you’re unable to verify the activity happening in an account or system
    at any given time, you won’t be able to know whether you’ve maintained security.
    In addition, if an incident does happen, it can be difficult to find the attack
    details and remove the adversary from the environment. Therefore, it’s important
    to maintain accounting using a twofold process: enabling logging and performing
    routine auditing.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '*会计*是确保每个在系统或网络上执行的操作都会生成记录。虽然会计不能防止攻击者直接访问账户或系统，但它对于维持组织的安全至关重要。如果你无法在任何时刻验证账户或系统中的活动，你将无法知道自己是否维持了安全。此外，如果发生事故，可能很难找到攻击的细节并将攻击者从环境中移除。因此，维持会计记录的过程很重要：启用日志记录和定期审计。'
- en: Logging
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 日志记录
- en: Logging is a catchall term for capturing events that happen on a system during
    its operation. Each system has its own logging method. For example, if you’re
    logging an application, the logs would include records of exactly what the application
    code did when the application ran. If you’re logging an account, it would include
    a timeline of when the account signed in, from where, and what was accessed. Most
    logging follows similar conventions when it processes events. This includes the
    level of severity, what information is gathered, and where that log is stored.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录是捕获系统在运行期间发生事件的统称。每个系统都有自己的日志记录方法。例如，如果您在记录一个应用程序，日志将包括应用程序运行时应用程序代码的确切操作记录。如果您在记录一个帐户，它将包括帐户何时登录、从哪里登录以及访问了哪些内容的时间线。大多数日志记录在处理事件时遵循类似的约定。这包括严重性级别、收集的信息以及日志存储的位置。
- en: Events in logs are usually broken down into levels to indicate an issue’s severity.
    The standard ranking method is known as *Syslog*, which starts at 7 as the least
    severe and ends with 0 as the most severe. [Table 5-2](#table5-2) lists each level
    and its associated severity.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 日志中的事件通常按级别分类，以表示问题的严重性。标准排名方法称为 *Syslog*，从 7 开始为最不严重，到 0 为最严重。[表 5-2](#table5-2)列出了每个级别及其相关的严重性。
- en: 'Table 5-2: Log Severity Levels'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 表 5-2：日志严重性级别
- en: '| **Value** | **Severity** | **Description** |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| **值** | **严重性** | **描述** |'
- en: '| --- | --- | --- |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 0 | Emergency | System is unusable. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 紧急 | 系统不可用。 |'
- en: '| 1 | Alert | Action must be taken immediately. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 警报 | 必须立即采取行动。 |'
- en: '| 2 | Critical | Critical conditions. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 严重 | 严重条件。 |'
- en: '| 3 | Error | Error conditions. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 错误 | 错误条件。 |'
- en: '| 4 | Warning | Warning conditions. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 警告 | 警告条件。 |'
- en: '| 5 | Notice | Normal but requires special handling. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 通知 | 正常但需要特别处理。 |'
- en: '| 6 | Informational | Informational messages. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 信息 | 信息性消息。 |'
- en: '| 7 | Debug | Debugging messages. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 调试 | 调试消息。 |'
- en: 'The most important events, at level 0, indicate that system hardware had a
    failure that caused it to break down. Level 1 indicates a failure that is causing
    the system to run improperly, for example, because it crashed. Level 2 is used
    for failures that are causing operations within the system to malfunction, such
    as an application crash, despite the system continuing to run. Level 3 includes
    conditions that cause an error but don’t necessarily disrupt operations; for example,
    trying to access a document that doesn’t exist anymore might result in an error,
    but that error probably won’t crash the computer. Levels 4 and 5 provide information
    on events that might need an additional look but aren’t generally considered security
    risks. An example might be a user failing to log in to their account once in an
    hour. Level 6 events provide information about what the system did: for example,
    if it opened a file or made an authorized connection. We use level 7 only in rare
    cases when we’re trying to find a problem with a system’s underlying operations.
    Usually, level 7 isn’t turned on by default, and you should only use it with extreme
    caution. Logging generates many entries, and it’s possible to fill up log storage
    with level 7 events alone.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的事件，在级别 0 时，表示系统硬件发生了故障，导致系统崩溃。级别 1 表示导致系统运行不正常的故障，例如系统崩溃。级别 2 用于表示导致系统内部操作故障的故障，例如应用崩溃，尽管系统仍在运行。级别
    3 包括导致错误但不会中断操作的情况；例如，尝试访问一个已不存在的文档可能会导致错误，但该错误可能不会导致计算机崩溃。级别 4 和 5 提供需要额外关注的信息，但通常不被视为安全风险。一个例子可能是用户在一小时内未能登录其帐户。级别
    6 事件提供有关系统所做操作的信息：例如，它是否打开了文件或进行了授权连接。我们仅在极少数情况下使用级别 7，当我们尝试查找系统底层操作的问题时。通常，级别
    7 默认未开启，您应该仅在极其小心的情况下使用它。日志记录会生成大量条目，单独使用级别 7 事件可能会填满日志存储。
- en: Typically, you should log as much information as possible while still maintaining
    the information’s usefulness. If you log too little, you’ll miss events that might
    help you understand an incident. If you log too much, you’ll be drowning in data
    that might conceal key information you need to find quickly. Many logging agents
    allow you to filter out events to make the logs more digestible. You could filter
    out events at level 6, such as successful logins, to make other events, like a
    failed login attempt, easier to find. But you must carefully tune this filtering
    to avoid missing malicious events. (I discuss what those malicious events might
    look like later in the chapter.)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你应该尽可能记录更多的信息，同时保持信息的实用性。如果你记录的太少，可能会错过帮助你理解事件的关键信息。如果记录的太多，你会被大量数据淹没，这些数据可能会掩盖你需要快速找到的关键信息。许多日志代理允许你筛选事件，以使日志更易于处理。你可以筛选出级别为6的事件，比如成功登录，以便更容易找到其他事件，比如失败的登录尝试。但你必须小心调试此筛选，以免错过恶意事件。（我稍后将在本章讨论这些恶意事件可能的表现。）
- en: Additionally, you must decide how long to keep the logs. Organizations normally
    make this decision by considering the type of log, how much information the log
    contains, how much storage is available, if there are any legal or compliance
    requirements, and other factors. The primary concern is whether you’ll be able
    to determine what happened if you need to go back to a certain event or date.
    For example, if you find out that an employee’s computer was breached, you’ll
    need to access all the activity on your network from that computer on that day
    to determine what the black hat did.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还需要决定日志保留的时长。组织通常通过考虑日志类型、日志包含的信息量、可用存储空间、是否有法律或合规要求以及其他因素来做出这个决策。主要的关注点是，如果你需要回溯到某个特定事件或日期，你是否能够确定发生了什么。例如，如果你发现某个员工的电脑遭到攻击，你需要访问该电脑在当天的所有网络活动，以便确定黑客的行为。
- en: Most organizations used to keep logs for 90 days, but many have now transitioned
    to yearly logs as storage becomes less expensive. They usually store their logs
    on large servers with solid-state hard drives to best protect them against problems
    that might take the system offline or erase its data. Whichever media you choose,
    you should store it offsite. That way, the logs are more likely to survive a disaster,
    such as a ransomware infection, at the main site. Cloud services also offer the
    ability to stores logs for a customer.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数组织以前会保留90天的日志，但随着存储成本的降低，许多组织现在已转向保留年度日志。它们通常将日志存储在大容量服务器上，这些服务器配有固态硬盘，以最好地保护它们免受可能导致系统离线或删除数据的问题。无论选择何种媒介，你都应该将其存储在异地。这样，日志更有可能在灾难发生时（例如勒索软件感染）存活下来。云服务也提供为客户存储日志的能力。
- en: No person should have write access—the ability to change a log—or the ability
    to remove a log from the system. The entire point of logging is that it’s an accurate
    account of every event that’s happened on a system or network. If a person can
    modify those events, the log becomes less trustworthy. Making the logs uneditable
    helps eliminate inside threats.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 任何人都不应具有写入访问权限——即修改日志的能力——或从系统中删除日志的能力。日志的整个意义在于它准确记录了系统或网络上发生的每个事件。如果一个人可以修改这些事件，日志就失去了可信度。使日志不可编辑有助于消除内部威胁。
- en: Auditing
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 审计
- en: Just as important as capturing logging information is looking through the information.
    We *audit* not only to find malicious activity, but also for routine maintenance.
    For auditing to work, we can’t do it only when we have a problem. We need to catch
    problems as soon as they happen, before a hardware failure, a software bug, or
    a black hat compromise does significant damage to our systems.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 与捕捉日志信息同样重要的是查看这些信息。我们*审计*不仅仅是为了发现恶意活动，还为了日常维护。为了使审计有效，我们不能仅在出现问题时进行审计。我们需要在问题发生的第一时间就发现它们，避免硬件故障、软件漏洞或黑客攻击对我们的系统造成重大损害。
- en: As mentioned earlier, every event on a system should produce a log. Deciding
    how many of those logs to audit can be tricky. If you audit too much, you’ll waste
    time slogging through normal events. If you audit too little, you’ll miss key
    indicators of malicious activity. Instead, you’ll need to prioritize your organization’s
    critical assets. For example, it’s not reasonable to audit every workstation in
    your organization, but you could prioritize critical servers on your network to
    check every day.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面提到的，系统上的每个事件都应该产生一个日志。决定审计多少这些日志可能有些棘手。如果审计过多，你会浪费时间在处理正常事件上。如果审计过少，你会错过恶意活动的关键指标。相反，你需要优先考虑组织的关键资产。例如，审计组织中每台工作站可能并不现实，但你可以优先考虑每天检查网络上的关键服务器。
- en: Even if you narrow down the critical assets, there are still likely thousands
    of events that you might have to review. To help narrow those down even more,
    the next step in auditing is to set up alerts about important events. This is
    where Syslog can come in handy. By using the various levels of severity in the
    Syslog standard, you can have high-level alerts sent directly to you. Events such
    as remote logins, password changes, and account lockouts could also generate alerts.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你缩小了关键资产的范围，可能还有成千上万个事件需要审查。为了进一步缩小范围，审计的下一步是设置关于重要事件的警报。这就是 Syslog 可以派上用场的地方。通过使用
    Syslog 标准中的各种严重级别，你可以直接收到高级别的警报。例如远程登录、密码更改和账户锁定等事件也可能生成警报。
- en: But setting alerts might still not be enough to capture malicious activities
    in your organization, because attackers have become adept at hiding. Instead of
    brazenly attacking a network or system, adversaries will combine different small
    attacks that culminate in a bigger compromise. They’re also incredibly patient,
    slowly trying different attacks before finally finding a way in. For example,
    instead of brute-forcing a login by trying several passwords in quick succession,
    adversaries might try one password every six hours. Once they find the correct
    password, they might wait weeks or even months before they log in to the account.
    Then they’ll sit and wait, watching internal network traffic or activities on
    the system as they gather information to use in a final big attack that infects
    a database with ransomware.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，设置警报可能仍然不足以捕捉到组织中的恶意活动，因为攻击者已经擅长隐藏行踪。对网络或系统进行公开攻击的同时，对手会结合不同的小攻击，最终导致更大的妥协。他们还非常有耐心，在最终找到入侵途径之前，会慢慢尝试不同的攻击。例如，他们可能不会通过快速连续尝试几个密码来暴力破解登录，而是每六个小时尝试一次密码。一旦找到正确的密码，他们可能会等待数周甚至数月才登录到账户。然后他们会坐下来等待，观察内部网络流量或系统活动，收集信息用于最终的大规模攻击，感染数据库以勒索软件。
- en: This type of attack methodology is difficult to detect through alerting alone,
    because none of the activity, up until the attack on the database, is out of the
    ordinary. Even though there might be indicators of oddity—for example, if the
    black hat logs in from an unusual location—these might not be enough to trigger
    an alert, especially if the strange events occur across multiple devices.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击方法论单靠警报很难检测出来，因为直到对数据库的攻击之前，所有的活动都是寻常的。即使可能存在异常指标——例如黑客从不寻常的地点登录——这些指标可能也不足以触发警报，特别是如果奇怪的事件发生在多个设备上。
- en: To better track this type of malicious behavior, you can use a *security information
    and event management* *(SIEM**)* system. A SIEM system correlates logs from across
    all the devices and networks in your organization. This means that every event
    captured in your organization is fed into the SIEM system for processing. The
    SIEM system then weeds out the normal events, or any false positives, and provides
    an audit log of every suspicious event. You can also program it to generate alerts
    when critical events occur, like a brute-force attack on an account. The best
    part is that because the SIEM system gets logs from multiple devices, it can correlate
    activities to identify suspicious behavior. For example, a remote login to a workstation
    isn’t necessarily suspicious. But a change to the firewall to allow remote connections
    to a workstation, followed by a remote connection to that workstation, might raise
    red flags. The SIEM system would make special note of that activity in its logs.
    If that workstation then connects to a database as an administrator and begins
    downloading all the files, this series of unusual events could warrant a full-blown
    alert.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地跟踪这种类型的恶意行为，你可以使用*安全信息和事件管理*（*SIEM**）系统。SIEM 系统会将来自你组织内所有设备和网络的日志进行关联。这意味着，你组织中捕获的每个事件都会被输入到
    SIEM 系统进行处理。然后，SIEM 系统会剔除正常事件或任何假阳性，并提供每个可疑事件的审计日志。你还可以将其编程为在发生关键事件时生成警报，比如针对某个账户的暴力破解攻击。最好的部分是，由于
    SIEM 系统从多个设备获取日志，它可以关联活动以识别可疑行为。例如，远程登录到工作站并不一定是可疑的。但如果更改防火墙以允许远程连接到工作站，然后进行远程连接，这可能会引起警报。SIEM
    系统会特别记录该活动的日志。如果该工作站随后以管理员身份连接到数据库并开始下载所有文件，这一系列异常事件可能会触发一个全面的警报。
- en: SIEM systems are very robust, but they require upkeep. At their core, they still
    rely on rules and other indicators to determine whether an event, or set of events,
    is malicious. As organizations evolve, they must update these rules to ensure
    they remain in line with the current state of their systems and network. For example,
    if you add a new server, you’ll need to add its logs to the SIEM system and create
    rules based on what services that server provides. If you fail to maintain your
    SIEM system, you’ll likely miss critical events that you could use to find a compromise.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: SIEM 系统非常强大，但它们需要维护。从本质上讲，SIEM 系统仍然依赖规则和其他指标来判断某个事件或事件集是否是恶意的。随着组织的演变，它们必须更新这些规则，以确保这些规则与当前系统和网络的状态保持一致。例如，如果你添加了一个新服务器，你需要将其日志添加到
    SIEM 系统中，并根据该服务器提供的服务创建规则。如果你未能维护好 SIEM 系统，你可能会错过一些关键事件，这些事件本可以帮助你发现潜在的安全漏洞。
- en: Indicators of Attack
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 攻击指标
- en: '*Indicators of Attack (IoAs)* are events that point to malicious activity taking
    place on a network, device, or account. This activity could be the result of malware,
    a black hat, or an insider threat. [Table 5-3](#table5-3) describes several common
    IoAs, some examples of each, and what they might indicate. This list is not exhaustive
    by any means, but it should give you a good idea of what you need to consider
    when setting up logging, auditing, or SIEM rules.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*攻击指标（IoA）*是指指出网络、设备或账户上发生恶意活动的事件。这些活动可能是恶意软件、黑帽黑客或内部威胁所导致的。[表 5-3](#table5-3)
    描述了几个常见的 IoA、每个的示例以及它们可能意味着什么。这份清单并不详尽无遗，但它应该能让你对在设置日志记录、审计或 SIEM 规则时需要考虑的内容有个较为清晰的了解。'
- en: 'Table 5-3: Indicators of Attack'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 表 5-3：攻击指标
- en: '| **IoA** | **Example** | **Possible activity** |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| **IoA** | **示例** | **可能的活动** |'
- en: '| --- | --- | --- |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| **Unusual outbound traffic** | Device connecting to known malicious IP address;
    device using unusual protocols, like FTP; large amount of queries to a particular
    website or group of websites | Malware contacting a command-and-control server;
    files being removed; backdoor being accessed |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| **异常的外部流量** | 设备连接到已知的恶意 IP 地址；设备使用不寻常的协议，如 FTP；大量查询某个网站或一组网站 | 恶意软件联系命令和控制服务器；文件被移除；后门被访问
    |'
- en: '| **Internal device running network scans** | Workstation or server sending
    out ping packets | Malware or black hat looking for other systems to compromise
    |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| **内部设备运行网络扫描** | 工作站或服务器发送 ping 数据包 | 恶意软件或黑帽黑客寻找其他可以攻击的系统 |'
- en: '| **Account login from location outside business area** | Logins from foreign
    countries; logins from multiple different locations at the same time | Compromise
    of account credentials by black hat or botnet |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| **来自业务区域外的账户登录** | 来自外国的登录；在同一时间从多个不同地点的登录 | 黑帽或僵尸网络窃取账户凭证 |'
- en: '| **Changes to system settings** | Firewall changes or port changes to allow
    new traffic to connect, such as opening FTP ports; new accounts added to the system;
    an account given administrator access; new automated tasks created | Compromise
    of system by malware or black hat |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| **系统设置的更改** | 防火墙更改或端口更改以允许新流量连接，例如打开 FTP 端口；新增系统账户；给账户赋予管理员权限；创建新的自动化任务
    | 系统被恶意软件或黑客攻击 |'
- en: '| **Changes to email settings** | New inbox rules created; new mail flow rules;
    dramatic increase in email activity from an account | Compromise of email account;
    use of email to send out spam or phishing attacks |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| **电子邮件设置的更改** | 创建了新的收件箱规则；新的邮件流规则；某账户的电子邮件活动剧增 | 电子邮件账户被侵入；利用电子邮件发送垃圾邮件或网络钓鱼攻击
    |'
- en: '| **Application or system making irregular connections** | System in an external
    network connecting to an internal system; application making new or unusual requests,
    such as trying to download data from a read-only database; system attempting to
    access a device it’s not authorized to or that is outside its normal workflow
    (for example, a front desk workstation trying to connect to an HR database) |
    Compromise of application or system by malware or black hat; attacker then uses
    compromise to attempt to steal data from, or gain access to, other systems on
    the network |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| **应用程序或系统进行不正常的连接** | 外部网络中的系统连接到内部系统；应用程序进行新的或不寻常的请求，例如尝试从只读数据库下载数据；系统尝试访问其未授权或不在正常工作流程中的设备（例如，前台工作站试图连接到人力资源数据库）
    | 应用程序或系统被恶意软件或黑客攻击；攻击者利用这种侵入尝试从其他系统窃取数据或获取访问权限 |'
- en: '| **Multiple rapid failures** | Several failed login attempts; multiple access
    request failures; multiple system failures | Black hat is attempting to access
    a system or account, for example, using a brute-force attack on an account login;
    might be trying to use system failures to bypass normal security controls |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| **多次快速失败** | 多次登录失败尝试；多次访问请求失败；多次系统故障 | 黑客试图访问系统或账户，例如，通过暴力破解账户登录；可能试图利用系统故障绕过正常的安全控制
    |'
- en: '| **Unauthorized programs or processes running** | Programs are set to run
    on startup and aren’t part of normal business software; processes consume a lot
    of memory or CPU resources | Malware, particularly a trojan |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| **未经授权的程序或进程运行** | 设置为开机启动的程序，并且不是正常业务软件的一部分；进程占用了大量内存或 CPU 资源 | 恶意软件，特别是木马
    |'
- en: '| **Activity outside of normal operation time** | Website queries, emails sent,
    applications run, or logins made during non-business hours | Compromise of system
    by malware or black hat, including possible backdoor or trojan |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| **正常操作时间之外的活动** | 在非工作时间进行的网站查询、发送的电子邮件、运行的应用程序或登录操作 | 系统被恶意软件或黑客攻击，包括可能的后门或木马
    |'
- en: 'Exercise: Setting Up Accounts in Windows 10 and macOS'
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习：在 Windows 10 和 macOS 中设置账户
- en: The best way to understand how authentication and authorization systems can
    affect your use of a system is to manage the accounts on your home computer. Whether
    you use a Windows or Apple system, you should be able to create accounts and then
    control the access they have to certain parts of the system. In this exercise,
    you’ll configure the security settings for your account on either a Windows or
    Apple computer. You’ll then create a new account and give it access to a shared
    folder. Although simple, this exercise uses all aspects of the authentication
    and authorization principles discussed in this chapter and will give you a real-world
    sense of how you can protect these systems against unwanted access.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 了解身份验证和授权系统如何影响你对系统的使用，最好的方法是管理家用计算机上的账户。无论你使用的是 Windows 还是 Apple 系统，你都应该能够创建账户，并控制它们对系统某些部分的访问权限。在这个练习中，你将配置
    Windows 或 Apple 计算机上账户的安全设置。然后，你将创建一个新账户并授予其访问共享文件夹的权限。虽然这个过程很简单，但它涉及了本章讨论的所有身份验证和授权原则，并能让你真实地感受到如何保护这些系统免受不必要的访问。
- en: Windows 10
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows 10
- en: Windows comes with a variety of built-in security features that you can use
    to protect your account from unauthorized access. Many of these features are already
    on by default. But it’s a good idea to check them to make sure you’re getting
    the most protection for your system. To do this, enter **security** in the search
    bar in the lower-left corner of your screen. The task menu appears, containing
    a list of several applications. Click **Windows Security** to open the security
    settings. [Figure 5-2](#figure5-2) shows the Windows Security dialog that should
    open.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 自带多种内建安全功能，您可以使用它们保护账户免受未经授权的访问。许多这些功能默认已启用。但检查这些功能，确保系统得到最佳保护，是个好主意。为此，请在屏幕左下角的搜索栏中输入**安全**，任务菜单会出现，列出多个应用程序。点击**Windows
    安全**以打开安全设置。[图 5-2](#figure5-2)展示了应该打开的 Windows 安全对话框。
- en: '![f05002](image_fi/501287c05/f05002.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![f05002](image_fi/501287c05/f05002.png)'
- en: 'Figure 5-2: The Windows Security dialog'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-2：Windows 安全对话框
- en: As discussed in Chapter 4, this is where you can access many of the security
    features that a Windows system includes. This time, you’ll click **Account Protection**.
    [Figure 5-3](#figure5-3) shows the resulting dialog.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如第 4 章所述，这是访问 Windows 系统包括的许多安全功能的地方。这次，您将点击**账户保护**，[图 5-3](#figure5-3)展示了相应的对话框。
- en: In this dialog, you can see the settings that relate to account sign-ins. At
    the top, you should see the name of the account that you’re currently signed in
    with. Just below that is the *Windows Hello* sign-in option. Windows Hello provides
    a biometric login by using your facial structure to unlock your system. (Note
    that this feature is only available on compatible systems that have a web camera.)
    Although biometric logins are stronger than your traditional password, it’s important
    to note that this feature has had problems recognizing faces and allowing other,
    similar-shaped faces to log in.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个对话框中，您可以看到与账户登录相关的设置。顶部应显示您当前登录的账户名称。紧接着下面是*Windows Hello* 登录选项。Windows Hello
    提供通过面部结构进行生物识别登录，从而解锁系统。（请注意，此功能仅适用于支持的系统，并且需要配备摄像头。）尽管生物识别登录比传统密码更安全，但需要注意的是，此功能在识别面部和允许其他形状相似的面孔登录时，曾出现过一些问题。
- en: '![f05003](image_fi/501287c05/f05003.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![f05003](image_fi/501287c05/f05003.png)'
- en: 'Figure 5-3: The Account Protection dialog'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-3：账户保护对话框
- en: Just below Windows Hello is the *Dynamic Lock* option. This allows your system
    to pair with another device, such as a laptop, tablet, or phone via Bluetooth,
    and automatically lock the computer’s screen when it loses its connection to that
    device. Dynamic lock can offer peace of mind whenever you have to leave your system
    unattended, but it might become frustrating if you move around a lot and have
    to keep unlocking your screen. Also, even though Bluetooth is a short-range radio
    technology, it can connect over surprisingly long distances. For example, leaving
    your office to go to the break room for a cup of coffee might not be far enough
    to lock the computer, so it might remain open for any passerby to access.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 紧接着 Windows Hello 下面是*动态锁定*选项。此功能允许您的系统通过蓝牙与另一设备（如笔记本电脑、平板或手机）配对，并在与该设备失去连接时自动锁定计算机屏幕。动态锁定可以在您必须离开系统时提供安心，但如果您频繁移动并需要不断解锁屏幕，可能会感到有些麻烦。此外，尽管蓝牙是短距离无线技术，它仍然可以在意想不到的较远距离内连接。例如，您离开办公室去休息室拿一杯咖啡，可能并不足以让计算机锁定，因此计算机可能会保持打开状态，任何路过的人都可以访问。
- en: Now that you’re more familiar with some of the security features in Windows
    10, let’s look at the specific account settings you can change. In the Account
    Protection dialog, within the Windows Hello section, click **Manage Sign-in Options**.
    [Figure 5-4](#figure5-4) shows the dialog that should appear.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经对 Windows 10 中的一些安全功能有了更多了解，接下来我们来看一下您可以更改的具体账户设置。在账户保护对话框中，点击**管理登录选项**，[图
    5-4](#figure5-4)显示了应该出现的对话框。
- en: From this dialog, you can investigate and change how your system logs in to
    your account. The list of options is diverse enough to provide the level of security
    you need while also making it easy to use. Keep in mind that if a password or
    other authentication activity isn’t easy for users to implement, they’ll likely
    use it incorrectly or bypass it altogether.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个对话框，您可以查看和更改系统登录到账户的方式。选项列表足够多样，既能提供所需的安全性，又能保持易用性。请记住，如果密码或其他身份验证操作不容易实现，用户可能会错误使用它，甚至完全绕过。
- en: The *Windows Hello Fingerprint* option is a biometric fingerprint scanner. It
    requires either a built-in or attached fingerprint scanning device to work (and
    as you can see, the computer in [Figure 5-3](#figure5-3) doesn’t have this option
    available). The *Windows Hello PIN* option provides a PIN that you can use to
    log in as an alternative to a traditional password. It’s meant to be faster to
    use; but remember, you still need to make sure you create a long, difficult-to-guess
    pin (at least six to eight numbers) to guard against a brute-force attack.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '*Windows Hello 指纹*选项是一个生物识别指纹扫描器。它需要内置或附加的指纹扫描设备才能工作（正如你所看到的，[图 5-3](#figure5-3)
    中的电脑没有这个选项）。*Windows Hello PIN*选项提供了一个 PIN，你可以用它来登录，作为传统密码的替代方式。它设计为更快速地使用；但请记住，你仍然需要确保创建一个长且难以猜测的
    PIN（至少六到八位数字），以防止暴力破解攻击。'
- en: '![f05004](image_fi/501287c05/f05004.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![f05004](image_fi/501287c05/f05004.png)'
- en: 'Figure 5-4: The Sign-in Options dialog'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-4：登录选项对话框
- en: The *Security Key* option generates a token—a Type 2 authentication factor—whose
    unique key lets you log in to the system. You must have a physical security token
    to pair with this device. Typically you’ll only find these keys used in businesses
    that can afford to buy them, but inexpensive commercial tokens, such as the Duo
    or Google Authenticator apps for phones, are also available.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '*安全密钥*选项会生成一个令牌——一种二级身份验证因素——其唯一密钥使你能够登录系统。你必须拥有一个物理安全令牌与此设备配对。通常，这些密钥只在能负担得起购买它们的企业中使用，但也有一些价格便宜的商业令牌可用，例如
    Duo 或 Google Authenticator 手机应用。'
- en: Windows also offers two password options, a traditional password and a picture
    password. The picture password requires you to choose a picture and then draw
    on it. For example, you could choose a picture of a face and then draw circles
    around the eyes. To access the system, you’ll need to replicate your actions when
    shown the picture at login. This is Type 4 authentication (something you do).
    It’s usually considered the weakest form of authentication, because most people’s
    gestures follow the natural paths of the picture. For example, if you chose a
    picture of a flag on a flagpole, you might draw a line down the flagpole, which
    is fairly easy for an attacker to guess, because it’s a predictable action.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 还提供了两种密码选项：传统密码和图片密码。图片密码要求你选择一张图片并在其上绘制。例如，你可以选择一张脸的图片，然后在眼睛周围画圈。要访问系统，你需要在登录时看到该图片并复制你的操作。这是类型
    4 身份验证（你做的事情）。通常认为它是最弱的身份验证方式，因为大多数人的手势遵循图片的自然路径。例如，如果你选择了一个旗帜和旗杆的图片，你可能会沿着旗杆画一条线，这对于攻击者来说相对容易猜测，因为这是一个可预测的动作。
- en: Take a moment to try each option to see which one you like the best. Just because
    you’ve always used a password doesn’t mean it’s right for you. Adding a different
    type of authentication might provide better security or functionality for your
    device.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 花点时间尝试每个选项，看看哪个最适合你。仅仅因为你一直使用密码，并不意味着它最适合你。添加一种不同类型的身份验证可能会为你的设备提供更好的安全性或功能。
- en: 'Before moving on, let’s look at one last setting. Below the different sign-in
    options is a drop-down menu for *Require Sign-In*. This lets you determine at
    which point your system should require you to log back in after being inactive
    for a time: the two options are *Never* and *When PC Wakes Up from Sleep*. You
    should always require a new login after the system wakes up. This keeps your system
    safe from unauthorized access should you stop using it but forget to log out.
    This setting should be turned on by default.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，让我们再看最后一个设置。在不同的登录选项下方有一个*要求登录*的下拉菜单。这个选项让你决定系统在一段时间未活动后应何时要求你重新登录：有两个选项，分别是*从不*和*当电脑从休眠中唤醒时*。你应该始终要求在系统唤醒后重新登录。这可以防止你在不使用系统但忘记退出时，系统遭到未经授权的访问。此设置默认应开启。
- en: Adding a New Account
  id: totrans-139
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 添加新账户
- en: Now that you’ve chosen your security settings, you can create a new account.
    To do this, click the **Family & Other Users** option in the sidebar on the left.
    [Figure 5-5](#figure5-5) shows the screen that appears.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经选择了安全设置，你可以创建一个新账户。为此，点击左侧边栏中的**家庭和其他用户**选项。[图 5-5](#figure5-5) 显示了出现的界面。
- en: '![f05005](image_fi/501287c05/f05005.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![f05005](image_fi/501287c05/f05005.png)'
- en: 'Figure 5-5: The Family & other users dialog'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-5：家庭和其他用户对话框
- en: This dialog allows you to add other accounts to your system. At the top is the
    *Your Family* section. In the Windows 10 ecosystem, a family member is an account
    with additional auditing features and parental controls to help keep children
    safe. This feature also allows you to share apps and other purchases across accounts.
    But for this exercise, we’ll focus on the second section, *Other Users*. This
    option lets you add another, traditional user account to your operating system.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 该对话框允许你将其他帐户添加到系统中。顶部是*您的家庭*部分。在 Windows 10 生态系统中，家庭成员帐户具有额外的审计功能和家长控制，以帮助保护孩子安全。此功能还允许你在帐户之间共享应用程序和其他购买。但在本练习中，我们将重点关注第二部分，*其他用户*。此选项允许你向操作系统添加另一个传统的用户帐户。
- en: Let’s add a new account. Later in this exercise, you’ll learn how to share a
    folder between the current account you’re using and the new account you create.
    Click the plus icon next to *Add Someone Else To This PC*. A dialog opens asking
    how the new user should be able to sign in and for a corresponding Microsoft account.
    If the new user doesn’t have a Microsoft account, click **I Don’t Have This Person’s
    Sign In Information**. Similarly, on the next page, click **Create Without a Microsoft
    Account**. [Figure 5-6](#figure5-6) shows the dialog that appears now.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来添加一个新帐户。在本练习的后面，你将学习如何在当前帐户和新创建的帐户之间共享文件夹。点击*将其他人添加到此计算机*旁边的加号图标。会弹出一个对话框，询问新用户如何登录并提供一个相应的
    Microsoft 帐户。如果新用户没有 Microsoft 帐户，点击**我没有此人的登录信息**。同样，在下一页中，点击**不使用 Microsoft
    帐户创建**。[图 5-6](#figure5-6)展示了现在出现的对话框。
- en: Create a local account for the system. A *local account* is linked to only one
    computer rather than being part of a larger network. In [Figure 5-6](#figure5-6),
    I created a user called Sparkle Kitten, but you can name your new user whatever
    you want. Fill out the information and click **Next** when you’re done.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 为系统创建一个本地帐户。*本地帐户*只与一台计算机关联，而不是属于更大的网络。在[图 5-6](#figure5-6)中，我创建了一个名为 Sparkle
    Kitten 的用户，但你可以将新用户命名为任何你喜欢的名字。填写信息后，完成时点击**下一步**。
- en: '![f05006](image_fi/501287c05/f05006.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![f05006](image_fi/501287c05/f05006.png)'
- en: 'Figure 5-6: Creating a new account'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-6：创建新帐户
- en: After creating the account, you need to decide whether or not to make it an
    Administrator account in the Change Account Type dialog ([Figure 5-7](#figure5-7)).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 创建帐户后，你需要决定是否将其设为管理员帐户，这可以在“更改帐户类型”对话框中进行选择（[图 5-7](#figure5-7)）。
- en: '![f05007](image_fi/501287c05/f05007.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![f05007](image_fi/501287c05/f05007.png)'
- en: 'Figure 5-7: The Change Account Type dialog'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-7：更改帐户类型对话框
- en: Administrator accounts can access system files and make other changes to the
    system that could potentially be harmful, so determine whether the person using
    the account really needs to be an administrator before assigning them that type
    of account. Remember to keep the principle of least privilege in mind when making
    this decision. For this exercise, a Standard User account will suffice.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 管理员帐户可以访问系统文件并对系统进行其他可能有害的更改，因此在将某人指定为管理员帐户之前，请确定他们是否真的需要这样的权限。记住在做出此决定时要遵循最小权限原则。在本练习中，标准用户帐户就足够了。
- en: Sharing a Folder
  id: totrans-152
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 分享文件夹
- en: An important part of access control is being able to limit control based on
    the principles of least privilege and a need-to-know basis. Let’s use those principles
    now by creating a folder and sharing it with the new account you just made. Create
    a new folder in the original account by right-clicking an empty area on the Desktop
    and clicking **New**▶**Folder**. It doesn’t matter where you create the folder,
    but Documents or Desktop are probably the most convenient locations.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 访问控制的一个重要部分是能够基于最小权限原则和需要知道的原则来限制控制。现在让我们通过创建一个文件夹并将其与刚刚创建的新帐户共享来应用这些原则。在原始帐户中右键点击桌面空白区域，然后点击**新建**▶**文件夹**来创建一个新文件夹。文件夹创建的位置无关紧要，但“文档”或“桌面”可能是最方便的位置。
- en: Once the folder is created, you’ll need to access its properties to share it.
    Right-click the folder and then click **Properties**. [Figure 5-8](#figure5-8)
    shows the dialog that appears.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 创建文件夹后，你需要访问其属性以共享它。右键点击文件夹，然后点击**属性**。[图 5-8](#figure5-8)展示了弹出的对话框。
- en: '![f05008](image_fi/501287c05/f05008.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![f05008](image_fi/501287c05/f05008.png)'
- en: 'Figure 5-8: Folder properties'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-8：文件夹属性
- en: With the Properties dialog open, click the **Sharing** tab at the top. This
    tab contains settings you’ll use to share the folder ([Figure 5-9](#figure5-9)).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 打开“属性”对话框后，点击顶部的**共享**标签。此标签包含你用来共享文件夹的设置（[图 5-9](#figure5-9)）。
- en: In this dialog, click **Advanced Sharing**, which brings up the dialog shown
    in [Figure 5-10](#figure5-10).
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在此对话框中，点击**高级共享**，这将弹出[图 5-10](#figure5-10)所示的对话框。
- en: '![f05009](image_fi/501287c05/f05009.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![f05009](image_fi/501287c05/f05009.png)'
- en: 'Figure 5-9: The Sharing dialog'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-9：共享对话框
- en: '![f05010](image_fi/501287c05/f05010.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![f05010](image_fi/501287c05/f05010.png)'
- en: 'Figure 5-10: The Advanced Sharing dialog'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-10：高级共享对话框
- en: Select the **Share This Folder** option, which opens a new option that asks
    you for a share name and displays a Permissions button. For now, click **Permissions**
    ([Figure 5-11](#figure5-11)).
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**共享此文件夹**选项，这会打开一个新选项，询问你输入共享名称，并显示一个“权限”按钮。现在，点击**权限**（[图 5-11](#figure5-11)）。
- en: '![f05011](image_fi/501287c05/f05011.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![f05011](image_fi/501287c05/f05011.png)'
- en: 'Figure 5-11: Sharing permissions'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-11：共享权限
- en: The Share Permissions dialog is similar to the ones you might see in many access
    control systems. For each group or user, it shows you a list of permissions corresponding
    to the folder. Although basic, these permissions provide a full spectrum of control.
    *Read* allows a user to see what’s in the folder but not delete or rename the
    folder. *Change* allows a user to rename or remove the folder, and *Full Control*
    grants the user complete access to read, write, rename, or delete the folder.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 共享权限对话框与你在许多访问控制系统中可能看到的类似。对于每个组或用户，它会显示与你的文件夹对应的权限列表。虽然这些权限很基础，但它们提供了全面的控制。*读取*权限允许用户查看文件夹中的内容，但不能删除或重命名文件夹。*更改*权限允许用户重命名或删除文件夹，而*完全控制*则授予用户完全访问权限，包括读取、写入、重命名或删除文件夹。
- en: To add a specific user, click the **Add** button to display the dialog shown
    in [Figure 5-12](#figure5-12).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加特定用户，点击**添加**按钮，显示[图 5-12](#figure5-12)所示的对话框。
- en: From here, you can add other users to the folder’s permission list, and then
    give them the appropriate permissions. Just enter the name of the user in the
    white box near the bottom of the dialog. Because I named my new user Sparkle Kitten,
    I entered that name. Next, click **Check Names**, and the system should automatically
    fill in the complete username, as shown in [Figure 5-12](#figure5-12). If the
    username doesn’t fill in as shown in the figure, be sure to check your spelling.
    It must be precise to find the correct username.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以将其他用户添加到文件夹的权限列表中，然后赋予他们相应的权限。只需在对话框底部附近的白色框中输入用户的名称。因为我将我的新用户命名为 Sparkle
    Kitten，所以我输入了这个名字。接下来，点击**检查名称**，系统应该会自动填写完整的用户名，如[图 5-12](#figure5-12)所示。如果用户名没有按图示填写，确保检查拼写。必须精确无误才能找到正确的用户名。
- en: Click **OK**, and the user you selected should appear in the list below Everyone
    in the Share Permissions dialog. You can then click that username and set its
    permissions. Generally, it’s best to default to just Read access, so users can
    see what’s in the folder but not make changes.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**确定**，你选择的用户应该出现在“共享权限”对话框中的“每个人”下方的列表中。然后你可以点击该用户名并设置其权限。通常，最好默认设置为仅有读取权限，这样用户可以查看文件夹中的内容，但不能进行更改。
- en: '![f05012](image_fi/501287c05/f05012.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![f05012](image_fi/501287c05/f05012.png)'
- en: 'Figure 5-12: Adding a user'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-12：添加用户
- en: 'Let’s also look at the Security tab next to the Sharing tab in the Properties
    dialog. The Security tab provides some of the same functionality as Sharing. Essentially,
    the Security tab shows every user or group with access to the file or folder and
    the permissions they have. You can use this tab much in the same way you used
    the Advanced Sharing feature: to add a user and give them permissions to the folder.
    It’s important to note that any files or folders you place in the shared folder
    will need to have the same user permissions as the shared folder for the user
    to access them. The shared folder permissions only give users access to the folder,
    not necessarily to the contents within. [Figure 5-13](#figure5-13) shows an example
    of what the Security tab looks like.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看属性对话框中共享标签旁边的安全标签。安全标签提供了与共享相同的一些功能。本质上，安全标签显示了所有能够访问该文件或文件夹的用户或组以及他们的权限。你可以像使用高级共享功能一样使用此标签：添加用户并为其赋予文件夹的权限。需要注意的是，你放入共享文件夹中的任何文件或文件夹，都必须与共享文件夹具有相同的用户权限，用户才能访问它们。共享文件夹的权限仅授予用户访问文件夹的权限，而不一定是其中的内容。[图
    5-13](#figure5-13)显示了安全标签的示例。
- en: '![f05013](image_fi/501287c05/f05013.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![f05013](image_fi/501287c05/f05013.png)'
- en: 'Figure 5-13: The Security tab'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-13：安全标签
- en: You now know how to configure the security settings on your account, add a user,
    and give that user permission to view a shared folder. Although this exercise
    might not seem that significant, we just covered nearly all of the access control
    principles, including authentication, authorization, least privilege, and even
    the DAC model. Now let’s look at how to configure the security settings on macOS.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何配置账户的安全设置，添加用户，并授予该用户查看共享文件夹的权限。虽然这个练习看起来可能不那么重要，但我们已经涵盖了几乎所有的访问控制原则，包括身份验证、授权、最小权限，甚至是
    DAC 模型。现在让我们来看看如何在 macOS 上配置安全设置。
- en: Access Control on macOS
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: macOS 的访问控制
- en: macOS provides its own access control and authentication challenges. One challenge
    is that Apple systems streamline many of the controls that are normally accessible
    in a Window environment. This gives the user a limited amount of control over
    how to manage their systems unless they’re prepared to do a deep dive into system
    files and edit them manually. This isn’t recommended unless you have a lot of
    experience, because you can easily edit a system file incorrectly and break your
    system. In this section, I’ll provide a general overview of the controls available
    to you and where you can locate them.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: macOS 提供了自己的一套访问控制和身份验证机制。一个挑战是，苹果系统简化了许多在 Windows 环境中通常可以访问的控制项。这让用户对如何管理系统的控制较为有限，除非他们准备深入系统文件并手动编辑。这不建议普通用户操作，除非你有足够的经验，因为不小心修改系统文件可能会破坏系统。在这一部分，我将提供一个关于你可以使用的控制项的概述，并告诉你在哪里可以找到它们。
- en: Account Management
  id: totrans-178
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 账户管理
- en: Let’s begin by looking at account management for macOS. This operating system
    provides some useful controls that you can use to further secure your system,
    specifically how and when the system automatically logs out for you. To start,
    click the Apple symbol in the top-left corner of your screen, and then click **System
    Preferences** to open the application ([Figure 5-14](#figure5-14)).
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 macOS 的账户管理开始。这个操作系统提供了一些有用的控制项，你可以用它们来进一步保护你的系统，特别是系统自动注销的时间和方式。首先，点击屏幕左上角的苹果符号，然后点击**系统偏好设置**来打开该应用程序（见[图
    5-14](#figure5-14)）。
- en: '![f05014](image_fi/501287c05/f05014.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![f05014](image_fi/501287c05/f05014.png)'
- en: 'Figure 5-14: The System Preferences application'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-14：系统偏好设置应用程序
- en: This app is your one-stop shop for most settings and configurations for your
    system. Click **Security & Privacy** to display the dialog in [Figure 5-15](#figure5-15).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这个应用是你管理系统大多数设置和配置的一站式工具。点击**安全与隐私**，以显示[图 5-15](#figure5-15)中的对话框。
- en: '![f05015](image_fi/501287c05/f05015.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![f05015](image_fi/501287c05/f05015.png)'
- en: 'Figure 5-15: The Security & Privacy dialog'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5-15：安全与隐私对话框
- en: As you can see in the dialog, there aren’t many options to choose from. You
    should set the timer that determines how long your system can be inactive before
    requiring a password to at least five minutes, if not lower, depending on your
    security needs. You can also access advanced settings, as shown in [Figure 5-16](#figure5-16),
    by clicking the lock icon in the bottom-left corner, entering your password, and
    then clicking the **Advanced** button in the bottom-right corner. (You’ll need
    to have administrator permissions to do this.) The advanced settings allow you
    to add additional security to your system by requiring an administrator password
    to change any settings that would affect more than one user. You can also change
    the log-out timer for inactivity. This timer is different than the previous inactivity
    timer, because it fully logs you out of the system rather than simply requiring
    you to enter your password again. It’s best to set this option to at most 30 minutes.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如对话框中所示，选择的选项不多。你应该设置一个定时器，用来确定系统在要求输入密码之前的非活动时间，最好设置为至少五分钟，若有更高的安全需求则可以设置得更低。你还可以通过点击左下角的锁定图标、输入密码，然后点击右下角的**高级**按钮，如[图
    5-16](#figure5-16)所示，访问高级设置。（你需要有管理员权限才能执行此操作。）高级设置允许你通过要求输入管理员密码来增加系统的安全性，这样只有管理员才能更改影响多个用户的设置。你还可以更改非活动退出定时器。这个定时器与之前的非活动定时器不同，因为它会完全注销你，而不仅仅是要求你再次输入密码。最好将此选项设置为最多
    30 分钟。
- en: Once you’ve configured these settings, return to System Preferences. Then click
    **Users & Groups** in the last row of icons. A dialog should open showing all
    the users for the system. Once again, by clicking the lock icon in the bottom-left
    corner and entering your password, you can access some additional settings for
    each user. At the bottom of the Users & Groups dialog, click **Login Options**
    to display the dialog shown in [Figure 5-17](#figure5-17).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 配置这些设置后，返回系统偏好设置。然后点击最底行图标中的**用户与群组**。此时应该会打开一个对话框，显示系统中的所有用户。再次点击左下角的锁图标并输入密码，你可以访问每个用户的附加设置。在“用户与群组”对话框的底部，点击**登录选项**以显示[图5-17](#figure5-17)所示的对话框。
- en: These settings mostly pertain to which options appear on the login menu, such
    as password hints or the ability to shut down or restart the computer without
    logging in first. You can also add new users to the system by clicking the plus
    icon just below Login Options in the bottom-left corner. Now let’s look at how
    to share files between user accounts.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设置主要与登录菜单上出现的选项有关，例如密码提示或在未先登录的情况下关闭或重启计算机的功能。你还可以通过点击“登录选项”下方左下角的加号图标来为系统添加新用户。现在让我们来看一下如何在用户账户之间共享文件。
- en: '![f05016](image_fi/501287c05/f05016.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![f05016](image_fi/501287c05/f05016.png)'
- en: 'Figure 5-16: The advanced Security & Privacy settings'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图5-16：高级安全性与隐私设置
- en: '![f05017](image_fi/501287c05/f05017.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![f05017](image_fi/501287c05/f05017.png)'
- en: 'Figure 5-17: Login options'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图5-17：登录选项
- en: File Sharing
  id: totrans-192
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 文件共享
- en: macOS streamlines file sharing; every system has a built-in file share associated
    with each user account. You can control and grant access to this file share from
    a central dialog. Return to System Preferences and click the **Sharing** icon
    to display its dialog, as shown in [Figure 5-18](#figure5-18).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: macOS简化了文件共享，每个系统都有一个与用户账户关联的内建文件共享。你可以通过一个集中式对话框来控制并授予对该文件共享的访问权限。返回系统偏好设置并点击**共享**图标以显示其对话框，如[图5-18](#figure5-18)所示。
- en: '![f05018](image_fi/501287c05/f05018.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![f05018](image_fi/501287c05/f05018.png)'
- en: 'Figure 5-18: The Sharing dialog'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图5-18：共享对话框
- en: From this dialog, you can control settings for all forms of sharing, including
    remote login, file sharing, screen sharing, and more. In the Sharing dialog, you
    can see a list of shared folders. By clicking the plus icon at the bottom of this
    list, you can add another folder you want to share. Clicking a shared folder in
    the list will also display options for who can access it, as well as what type
    of access they can have. There are fewer options here than on Windows, but they’re
    extremely easy to understand. *Read* lets someone see the folder, whereas *Write*
    lets them add items to or remove items from the folder.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个对话框中，你可以控制所有形式共享的设置，包括远程登录、文件共享、屏幕共享等。在共享对话框中，你可以看到共享文件夹的列表。通过点击此列表底部的加号图标，你可以添加另一个想要共享的文件夹。点击列表中的共享文件夹也会显示可以访问该文件夹的人员以及他们可以拥有的访问权限。这里的选项比Windows少，但非常容易理解。*读取*允许某人查看文件夹，而*写入*则允许他们向文件夹中添加或删除项目。
- en: You’ve now learned the basics of account management, access control, and file
    sharing for Windows and macOS. Using this knowledge, you can better control who
    has access to your system and how you share information with others. Remember
    to only grant people the bare minimum of access they need for their given tasks.
    Giving someone full rights when they only need Read permissions is just asking
    for disaster.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经学习了Windows和macOS的账户管理、访问控制和文件共享的基础知识。利用这些知识，你可以更好地控制谁可以访问你的系统以及如何与他人共享信息。记住，只授予他人完成其任务所需的最基本访问权限。给予某人完全权限，而他们仅需要“只读”权限，这无疑是在制造灾难。
- en: Conclusion
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: 'In this chapter, you learned about the three parts of a robust access control
    system: authentication, authorization, and accounting. When authenticating users,
    make sure you’re using a method that fits your environment’s needs while still
    maintaining security. Multi-factor authentication can provide an extra layer of
    security, and this precaution can determine whether your accounts get compromised.
    When authorizing users to perform tasks on your systems, use an access control
    system that ensures people maintain the least amount of privilege they need to
    do their job. You should also distribute duties between multiple individuals to
    guarantee that no one person has too much authority.'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您了解了一个健壮访问控制系统的三个组成部分：认证、授权和审计。进行用户认证时，确保使用适合您环境需求的方法，同时保持安全性。多因素认证可以提供额外的安全层，这一预防措施可能决定您的账户是否会被侵害。授权用户在系统上执行任务时，使用一个访问控制系统，确保每个人只拥有完成工作所需的最小权限。您还应当将职责分配给多个人，以确保没有一个人拥有过多的权力。
- en: Auditing lets you maintain a good grasp of what is happening inside your organization.
    To audit effectively, set up logs, establish good practices, and watch out for
    various IoAs. With these processes in place, you’ll create a reliable and efficient
    access control program in your organization. You’ll let the right people in, keep
    the wrong people out, and ensure you’ve tracked every event.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 审计使您能够清楚地掌握组织内部发生的事情。要进行有效的审计，设置日志、建立良好的实践，并警惕各种IoA。在这些过程的支持下，您将能够在组织内创建一个可靠且高效的访问控制程序。您会让正确的人进入，阻止不该进入的人，并确保每一个事件都被追踪。
