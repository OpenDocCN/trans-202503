["```\nPrime factors (2,7,7,13) → 2x7x7x13       → Output integer 1274      (easy)\nOutput integer 1274      → ???????????    → Prime factors (2,7,7,13) (hard)\n\n```", "```\nExample: n = 7    3 + 6 (mod 7) = 2    3 x 6 (mod 7) = 4\n\n```", "```\nExample: a^k (mod n) = b    3^2 (mod 5) = 4\n\n```", "```\nExample:\na = 4; k = 4781; n = 17627 → 4^(4781) (mod 17627) = 2685 → b = 2685 (easy)\na = 4; b = 2685; n = 17627 → ?????                       → k = 4781 (hard)\n\n```", "```\nMD5(\"hello world\")      = 5eb63bbbe01eeed093cb22bb8f5acdc3\n\n```", "```\nMD5(\"mysecretpasswordisCATS\") = 399257907fd42e2ee3fcb39b04192b04\nMD5(\"mysecretpasswordisBATS\") = b12d76c8b8c063616dbf7b8b7349aed0\n\n```", "```\nExample RSA-1024 key:\n570854064335125300374580392844230066956632116097468377067570536794795107733730 255544946767158528487632613554731246509184251330806267264906570307315620158833 679440939508928340421956875991672660426563565615307186600294486104820050904319 1065262154874848937338866257399506142323572694928592907380693479819082939185\n\n```", "```\nSHA256(\"Crowley is trapped on an island\")\n= 1e8f7e62b42f07766c3c4367e670a328d73b7eb596602198f126324f013f30a5\n\n```", "```\nSHA256(\"Crowley is trapped on an Island\")\n= 91a382b6584261e0e7690da2c43cec9f7ce251b47396b543bddb3ed6ada8c9cc\n\n```", "```\nRIPEMD160(\"Crowley is trapped on an island\")\n= 64d50d0853d09d97c4567117a616954ca648e46c\n\n```", "```\nRIPEMD160(\"Crowley is trapped on an Island\")\n= b84aec162a0aa5786541b5e4f3286f8734e3bc3c\n\n```", "```\nAssumptions: p, a, b, G, and n are defined elsewhere\nElliptic curve point summation (ECPS): A + B = C\nECPS(A,B) returns a point on the elliptic curve, C\nBegin\n    If A is the zero point then return C = B➊\n    If B is the zero point then return C = A\n    If Ax != Bx then➋\n        find inv such that inv*(Bx – Ax) (mod p) == 1\n        lambda = (By – Ay)*inv (mod p)\n        Cx = lambda^2 – Ax – Bx\n        Cy = -Ay + lambda*(Ax – Cx)\n        return C = (Cx (mod p), Cy (mod p))\n    If Ax == Bx and Ay != By then return C = the zero point➌\n    If Ax == Bx and Ay == By then➍\n        find inv such that inv*2Ay (mod p) == 1\n        lambda = (3*Ax^2 + a)*inv (mod p)\n        Cx = lambda^2 – 2Ax\n        Cy = -Ay + lambda*(Ax – Cx)\n        return C = (Cx (mod p), Cy (mod p))\nEnd\n\n```", "```\nElliptic curve point multiplication (ECPM): kA = C\nECPM(k,A) returns a point on the elliptic curve, C\nBegin\n    C = A\n    Do the following k times:\n        C = ECPS(C,A)➊\n    return C\nEnd\n\n```"]