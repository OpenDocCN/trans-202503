["```\nstr = File.ReadContents(\"D:\\Book\\Chapter01\\Examples\\Test1.dat\")\n```", "```\npath = Program.Directory\nstr = File.ReadContents(path + \"\\Test1.dat\")\n```", "```\n1 ' ReadContentsDemo.sb\n2 path = \"C:\\Temp\\Test1.txt\"\n3 str = File.ReadContents(path)\n4 len = Text.GetLength(str)\n5 TextWindow.WriteLine(str)\n6 TextWindow.WriteLine(\"This file has \" + len + \" characters.\")\n```", "```\nThis\nis a\n\nTest.\nThis file has 19 characters.\n```", "```\nFor N = 1 To len\n  ch = Text.GetSubText(str, N, 1)   ' Gets one character\n  code = Text.GetCharacterCode(ch)  ' Gets the code for this character\n  TextWindow.WriteLine(code)        ' Displays it\nEndFor\n```", "```\n 1 ' WriteContentsDemo.sb\n 2 CR = Text.GetCharacter(13)                 ' Code for carriage return\n 3 LF = Text.GetCharacter(10)                 ' Code for line feed\n 4 outFile = \"C:\\Temp\\Out.txt\"                ' Absolute path of output file\n 5\n 6 strOut = \"\"                                ' Text to be written to file\n 7 strIn = \"\"                                 ' One line (read from the user)\n 8 While(strIn <> \"exit\")                     ' Until user enters exit\n 9   TextWindow.Write(\"Data (exit to end): \") ' Prompts for text\n10   strIn = TextWindow.Read()                ' Reads line\n11   If (strIn <> \"exit\") Then                ' If user didn't enter exit\n12     strOut = strOut + strIn + CR + LF      ' Appends text to strOut\n13   EndIf\n14 EndWhile\n15\n16 File.WriteContents(outFile, strOut)        ' Writes strOut to file\n```", "```\nData (exit to end): If Peter Piper picked a peck of pickled peppers,\nData (exit to end): Where's the peck of pickled peppers? I'm hungry.\nData (exit to end): exit\n```", "```\n1 result = File.WriteContents(outFile, strOut) ' Writes strOut to file\n2 If (result = \"SUCCESS\") Then\n3   TextWindow.WriteLine(\"Output saved to: \" + outFile)\n4 Else\n5   TextWindow.WriteLine(\"Failed to write to: \" + outFile)\n6   TextWindow.WriteLine(File.LastError)\n7 EndIf\n```", "```\n1 ' BadPath.sb\n2 path = \"C:\\Temp\\Folder1\\Out.txt\"\n3 res = File.WriteContents(path, \"Hello\")\n4 TextWindow.WriteLine(res + \": \" + File.LastError)\n```", "```\nFAILED: Could not find a part of the path 'C:\\Temp\\Folder1\\Out.txt'.\n```", "```\n 1 ' AppendContentsDemo.sb\n 2 outFile = Program.Directory + \"\\Log.txt\"\n 3\n 4 strLog = Clock.WeekDay + \", \" + Clock.Date + \", \" + Clock.Time\n 5 result = File.AppendContents(outFile, strLog)\n 6 If (result = \"FAILED\") Then\n 7   TextWindow.WriteLine(\"Failed to write to: \" + outFile)\n 8   TextWindow.WriteLine(File.LastError)\n 9 EndIf\n10\n11 TextWindow.WriteLine(\"Thank you for using this program. And for using\n   deodorant.\")\n```", "```\nSunday, 7/19/2015, 12:40:39 PM\nSunday, 7/19/2015, 12:43:21 PM\nSunday, 7/19/2015, 12:47:25 PM\n```", "```\n 1 ' LoginName.sb\n 2 inFile = Program.Directory + \"\\Users.txt\"\n 3 outFile = Program.Directory + \"\\LoginNames.txt\"\n 4\n 5 N = 1             ' Tracks the line number\n 6 While (N > 0)     ' We'll set N = 0 when we detect end of file\n 7   strLine = File.ReadLine(inFile, N)      ' Reads the Nth line\n 8   If (strLine = \"\") Then                  ' If the string's empty\n 9     N = 0                                 ' Exits the While loop\n10   Else                                    ' We have an entry\n11     idx = Text.GetIndexOf(strLine, \" \")   ' Finds space in strLine\n12     firstChar = Text.GetSubText(strLine, 1, 1)\n13     lastName = Text.GetSubText(strLine, idx + 1, 5)\n14     loginName = firstChar + lastName\n15     loginName = Text.ConvertToLowerCase(loginName)\n16     File.WriteLine(outFile, N, loginName) ' Saves to a file\n17     N = N + 1                             ' Gets ready for the next line\n18   EndIf\n19 EndWhile\n```", "```\nsrcPath = \"C:\\Temp\\Test1.txt\"              ' Path of the source file\ndstPath = \"C:\\Temp\\Temp1\\Temp2\\Test1.txt\"  ' Path of the destination file\nFile.CopyFile(srcPath, dstPath)\n```", "```\nFile.CreateDirectory(\"C:\\Temp\\Temp1\\Temp2\")\n```", "```\n1 ' GetFilesDemo.sb\n2 path = \"D:\\Temp\"\n3 fileArray = File.GetFiles(path)\n4 count = Array.GetItemCount(fileArray)\n5 TextWindow.WriteLine(path + \" contains \" + count + \" files:\")\n6 For N = 1 To count\n7   TextWindow.WriteLine(\" \" + fileArray[N])\n8 EndFor\n```", "```\nD:\\Temp contains 3 files:\n  D:\\Temp\\Fig01.bmp\n  D:\\Temp\\keys.txt\n  D:\\Temp\\Test.sb\n```", "```\n1 ' GetDirectoriesDemo.sb\n2 path = \"D:\\Temp\"\n3 dirArray = File.GetDirectories(path)\n4 count = Array.GetItemCount(dirArray)\n5 TextWindow.WriteLine(path + \" contains \" + count + \" directories:\")\n6 For N = 1 To count                        ' Displays the array's elements\n7   TextWindow.WriteLine(\" \" + dirArray[N])\n8 EndFor\n```", "```\nD:\\Temp contains 3 directories:\n  D:\\Temp\\Chapter01\n  D:\\Temp\\Chapter02\n  D:\\Temp\\Chapter03\n```", "```\nart = File.ReadContents(\"article.txt\")\n```", "```\n1 Sub CreateLists\n2   article = File.ReadContents(path + \"\\article.txt\")\n3   adjective = File.ReadContents(path + \"\\adjective.txt\")\n4   noun = File.ReadContents(path + \"\\noun.txt\")\n5   verb = File.ReadContents(path + \"\\verb.txt\")\n6   prepos = File.ReadContents(path + \"\\preposition.txt\")\n7 EndSub\n```", "```\n 1 ' Wizard_Incomplete.sb\n 2 TextWindow.Title = \"MATH WIZARD\"\n 3 TextWindow.WriteLine(\"========== MATH WIZARD ==========\")\n 4 TextWindow.WriteLine(\"Press Enter after each instruction\")\n 5 TextWindow.WriteLine(\"==================================\")\n 6 TextWindow.WriteLine(\"\")\n 7\n 8 puzzle = File.GetFiles(Program.Directory) ' Stores filenames into an array\n 9\n10 For P = 1 To Array.GetItemCount(puzzle)\n11   path = puzzle[P]                        ' File in the app's directory\n12   If (Text.EndsWith(path, \".txt\")= \"True\") Then\n13     DoPuzzle()\n14   EndIf\n15 EndFor\n16 TextWindow.WriteLine(\"The game was won, the math was fun, and the magic is\n   done!\")\n17 TextWindow.WriteLine(\"There is one Math Wizard to rule them all! Bye!\")\n```", "```\n 1 Sub DoPuzzle\n 2   puzzleAns = File.ReadLine(path, 1)   ' Reads answer from first line\n 3   N = 2                                ' Starts from second line\n 4   line = \"?\"                           ' To enter the loop\n 5   While (line <> \"\")                   ' Loops as long as we have instructions\n 6     line = File.ReadLine(path, N)      ' Reads the Nth line\n 7     If (line <> \"\") Then               ' If we have an instruction\n 8       TextWindow.Write(line + \"... \")  ' Writes instruction\n 9       TextWindow.PauseWithoutMessage() ' Waits for user to press a key\n10       TextWindow.WriteLine(\"\")\n11       N = N + 1                        ' Prepares to read next line\n12     EndIf\n13   EndWhile\n14   TextWindow.WriteLine(\"You still have: \" + puzzleAns)\n15   TextWindow.WriteLine(\"\")\n16 EndSub\n```", "```\n    In your math class;ad/add;add\n    Halloween queen;which/witch;witch\n    Eyes do this;sea/see;see\n    In the church;altar/alter;altar\n    A rabbit;hair/hare;hare\n    A good story;tail/tale;tale\n    Animals have them;clause/claws;claws\n    Pencils do this;right/write;write\n    ```", "```\n    1=Invertebrates;2=Fish;3=Amphibians;4=Reptiles;5=Birds;6=Mammals\n    Bat;6\n    Clam;1\n    Dog;6\n    Frog;3\n    Lizard;4\n    Peacock;5\n    Salamander;3\n    Salmon;2\n    Spider;1\n    Turkey;5\n    Turtle;4\n    ```"]