["```\nPS> **Get-NtAuditPolicy**\nName               SubCategory Count\n----               -----------------\nSystem             5\nLogon/Logoff       11\nObject Access      14\nPrivilege Use      3\nDetailed Tracking  6\nPolicy Change      6\nAccount Management 6\nDS Access          4\nAccount Logon      4 \n```", "```\nPS> **Get-NtAuditPolicy | Select-Object Name, Id**\nName               Id\n----               --\nSystem             69979848-797a-11d9-bed3-505054503030\nLogon/Logoff       69979849-797a-11d9-bed3-505054503030\nObject Access      6997984a-797a-11d9-bed3-505054503030\n`--snip--` \n```", "```\nPS> **Get-NtAuditPolicy -Category System -ExpandCategory**\nName                      Policy\n----                      ------\nSecurity State Change     Unchanged\nSecurity System Extension Unchanged\nSystem Integrity          Unchanged\nIPsec Driver              Unchanged\nOther System Events       Unchanged \n```", "```\nPS> **Enable-NtTokenPrivilege SeSecurityPrivilege**\nPS> **Set-NtAuditPolicy -Category ObjectAccess -Policy Success,** \n**Failure -PassThru**\nName                           Policy\n----                           ------\nFile System                    Success, Failure\nRegistry                       Success, Failure\nKernel Object                  Success, Failure\nSAM                            Success, Failure\nCertification Services         Success, Failure\nApplication Generated          Success, Failure\nHandle Manipulation            Success, Failure\nFile Share                     Success, Failure\nFiltering Platform Packet Drop Success, Failure\nFiltering Platform Connection  Success, Failure\nOther Object Access Events     Success, Failure\nDetailed File Share            Success, Failure\nRemovable Storage              Success, Failure\nCentral Policy Staging         Success, Failure \n```", "```\nPS> **Set-NtAuditPolicy -Category ObjectAccess -Policy None** \n```", "```\nPS> **Enable-NtTokenPrivilege SeSecurityPrivilege**\nPS> **$sid = Get-NtSid**\nPS> **Set-NtAuditPolicy -Category ObjectAccess -User $sid -UserPolicy** \n**SuccessExclude**\nPS> **Get-NtAuditPolicy -User $sid -Category ObjectAccess -ExpandCategory**\nName          User           Policy\n----          ----           ------\nFile System   GRAPHITE\\admin SuccessExclude\nRegistry      GRAPHITE\\admin SuccessExclude\nKernel Object GRAPHITE\\admin SuccessExclude\nSAM           GRAPHITE\\admin SuccessExclude\n`--snip--` \n```", "```\nPS> **Set-NtAuditPolicy -Category ObjectAccess -User $sid -UserPolicy None** \n```", "```\nPS> **Get-NtAuditPolicy -AllUser**\nName          User           SubCategory Count\n----          ----           -----------------\nSystem        GRAPHITE\\admin 5\nLogon/Logoff  GRAPHITE\\admin 11\nObject Access GRAPHITE\\admin 14\n`--snip--` \n```", "```\nPS> **Enable-NtTokenPrivilege SeSecurityPrivilege**\nPS> **$sd =** **Get-NtAuditSecurity**\nPS> **Format-NtSecurityDescriptor $sd -Summary -MapGeneric**\n<DACL>\n❶ BUILTIN\\Administrators: (Allowed)(None)(GenericRead)\nNT AUTHORITY\\SYSTEM: (Allowed)(None)(GenericRead) \n```", "```\nPS> **Enable-NtTokenPrivilege SeSecurityPrivilege**\nPS> **$sd = Get-NtAuditSecurity**\nPS> **Add-NtSecurityDescriptorAce $sd -Sid \"LA\" -Access GenericAll**\nPS> **Set-NtAuditSecurity $sd** \n```", "```\nPS> **$sd = New-NtSecurityDescriptor -Type Mutant**\nPS> **Add-NtSecurityDescriptorAce $sd -Type Audit -Access GenericAll**\n**-Flags SuccessfulAccess, FailedAccess -KnownSid World -MapGeneric**\nPS> **Enable-NtTokenPrivilege SeSecurityPrivilege**\nPS> **Clear-EventLog -LogName \"Security\"**\nPS> **Use-NtObject($m = New-NtMutant \"ABC\" -Win32Path -SecurityDescriptor $sd) {**\n    **Use-NtObject($m2 = Get-NtMutant \"ABC\" -Win32Path) {**\n    **}**\n**}** \n```", "```\nPS> **$filter = @{logname = 'Security'; id = @(4656)}**\nPS> **Get-WinEvent -FilterHashtable $filter | Select-Object -ExpandProperty Message**\nA handle to an object was requested.\nSubject:\n        Security ID:    S-1-5-21-2318445812-3516008893-216915059-1002\n        Account Name:   user\n        Account Domain: GRAPHITE\n        Logon ID:       0x524D0\n\nObject:\n        Object Server:          Security\n        Object Type:            Mutant\n        Object Name:            \\Sessions\\2\\BaseNamedObjects\\ABC\n        Handle ID:              0xfb4\n        Resource Attributes:    -\n\nProcess Information:\n        Process ID:     0xaac\n        Process Name:   C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n\nAccess Request Information:\n        Transaction ID:        {00000000-0000-0000-0000-000000000000}\n        Accesses:               DELETE\n                                READ_CONTROL\n                                WRITE_DAC\n                                WRITE_OWNER\n                                SYNCHRONIZE\n                                Query mutant state\n\n        Access Reasons:                         -\n        Access Mask:                            0x1F0001\n        Privileges Used for Access Check:       -\n        Restricted SID Count:                   0 \n```", "```\nPS> **Get-WinEvent -FilterHashtable $filter | Select-Object KeywordsDisplayNames**\nKeywordsDisplayNames\n--------------------\n{Audit Success}\n{Audit Failure}\n`--snip--` \n```", "```\nPS> **$filter = @{logname = 'Security'; id = @(4658)}**\nPS> **Get-WinEvent -FilterHashtable $filter | Select-Object -ExpandProperty Message**\nThe handle to an object was closed.\nSubject :\n        Security ID:    S-1-5-21-2318445812-3516008893-216915059-1002\n        Account Name:   user\n        Account Domain: GRAPHITE\n        Logon ID:       0x524D0\n\nObject:\n        Object Server:  Security\n        Handle ID:      0xfb4\n\nProcess Information:\n        Process ID:     0xaac\n        Process Name:   C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe \n```", "```\n❶ PS> **Enable-NtTokenPrivilege SeAuditPrivilege -WarningAction Stop**\nPS> **$owner = Get-NtSid -KnownSid Null**\nPS> **$sd = New-NtSecurityDescriptor -Type Mutant -Owner $owner -Group $owner**\nPS> **Add-NtSecurityDescriptorAce $sd -KnownSid World -Access GenericAll** \n**-MapGeneric**\n❷ PS> **Add-NtSecurityDescriptorAce $sd -Type Audit -Access GenericAll**\n**-Flags SuccessfulAccess, FailedAccess -KnownSid World -MapGeneric**\n❸ PS> **$handle = 0x1234**\n❹ PS> **$r = Get-NtGrantedAccess $sd -Audit -SubsystemName \"SuperSecurity\"**\n**-ObjectTypeName \"Badger\" -ObjectName \"ABC\" -ObjectCreation**\n**-HandleId $handle -PassResult**\n❺ PS> **Write-NtAudit -Close -SubsystemName \"SuperSecurity\" -HandleId $handle**\n**-GenerateOnClose:$r.GenerateOnClose** \n```", "```\nPS> **Enable-NtTokenPrivilege SeSecurityPrivilege**\nPS> **$sd = New-NtSecurityDescriptor -Type File**\nPS> **Add-NtSecurityDescriptorAce $sd -Type Audit -KnownSid World**\n**-Access WriteData -Flags SuccessfulAccess**\nPS> **Set-NtAuditSecurity -GlobalSacl File -SecurityDescriptor $sd**\nPS> **Get-NtAuditSecurity -GlobalSacl File |**\n**Format-NtSecurityDescriptor -SecurityInformation Sacl -Summary**\n<SACL>\nEveryone: (Audit)(SuccessfulAccess)(WriteData) \n```", "```\nPS> **$sd = New-NtSecurityDescriptor -NullSacl**\n```", "```\nPS> **Enable-NtTokenPrivilege SeSecurityPrivilege**\nPS> **$sd = Get-NtAuditSecurity**\nPS> **Set-NtSecurityDescriptorOwner $sd -KnownSid LocalSystem**\nPS> **Set-NtSecurityDescriptorGroup $sd -KnownSid LocalSystem**\nPS> **Get-NtGrantedAccess $sd -PassResult**\nStatus         Granted Access Privileges\n------         -------------- ----------\nSTATUS_SUCCESS GenericRead    NONE\n\nPS> **Use-NtObject($token = Get-NtToken -Filtered -Flags LuaToken) {**\n  **Get-NtGrantedAccess $sd -Token $token -PassResult**\n**}**\nStatus               Granted Access Privileges\n------               -------------- ----------\nSTATUS_ACCESS_DENIED 0              NONE \n```", "```\nPS> **Enable-NtTokenPrivilege SeDebugPrivilege, SeSecurityPrivilege**\n❶ PS> **$ps = Get-NtProcess -Access QueryLimitedInformation, AccessSystemSecurity**\n**-FilterScript {**\n❷ **$sd = Get-NtSecurityDescriptor $_ -SecurityInformation Sacl**\n    **$sd.HasAuditAce**\n**}**\n❸ PS> **$ps | Format-NtSecurityDescriptor -SecurityInformation Sacl**\nPath: \\Device\\HarddiskVolume3\\Windows\\System32\\lsass.exe\nType: Process\nControl: SaclPresent\n\n<SACL>\n - Type  : Audit\n - Name  : Everyone\n - SID   : S-1-1-0\n - Mask  : 0x00000010\n ❹ - Access: VmRead\n - Flags : SuccessfulAccess, FailedAccess\n\nPS> **$ps.Close()** \n```"]