["```\nvar BubbleShoot = window.BubbleShoot || {};\n  BubbleShoot.Game = (function($){\n  var Game = function(){\n    var curBubble;\n    **var board;**\n    *--snip--*\n    var startGame = function(){\n      $(\".but_start_game\").unbind(\"click\");\n      BubbleShoot.ui.hideDialog();\n      curBubble = getNextBubble();\n      **board = new BubbleShoot.Board();**\n      **BubbleShoot.ui.drawBoard(board);**\n      $(\"#game\").bind(\"click\",clickGameScreen);\n    };\n    *--snip--*\n  };\n  return Game;\n})(jQuery);\n```", "```\n  var BubbleShoot = window.BubbleShoot || {};\n  BubbleShoot.Board = (function($){\n➊  var NUM_ROWS = 9;\n➋  var NUM_COLS = 32;\n    var Board = function(){\n      var that = this;\n➌    var rows = createLayout();\n➍    this.getRows = function(){ return rows;};\n      return this;\n    };\n    var createLayout = function(){\n      var rows = [];\n➎    for(var i=0;i<NUM_ROWS;i++){\n        var row = [];\n➏      var startCol = i%2 == 0 ? 1 : 0;\n        for(var j=startCol;j<NUM_COLS;j+=2){\n➐        var bubble = BubbleShoot.Bubble.create(i,j);\n          row[j] = bubble;\n        };\n        rows.push(row);\n      };\n      return rows;\n    };\n    return Board;\n  })(jQuery);\n```", "```\nvar rows = board.getRows();\nvar row = rows[1];\nvar bubble = row[4];\n```", "```\n  var BubbleShoot = window.BubbleShoot || {};\n  BubbleShoot.Bubble = (function($){\n    var Bubble = function(➊**row,col,type**,sprite){\n      var that = this;\n      **this.getType = function(){ return type;};**\n      this.getSprite = function(){ return sprite;};\n      **this.getCol = function(){ return col;};**\n      **this.getRow = function(){ return row;};**\n    };\n    Bubble.create = function(➋**rowNum,colNum,type**){\n➊    **if(type === undefined){**\n➋      **type = Math.floor(Math.random() * 4);**\n      **};**\n      **var sprite = $(document.createElement(\"div\"));**\n      **sprite.addClass(\"bubble\");**\n      **sprite.addClass(\"bubble_\" + type);**\n      var bubble = new Bubble(**rowNum,colNum,type,**sprite);\n      return bubble;\n    };\n    return Bubble;\n  })(jQuery);\n```", "```\n  var BubbleShoot = window.BubbleShoot || {};\n  BubbleShoot.ui = (function($){\n    var ui = {\n      BUBBLE_DIMS : 44,\n      **ROW_HEIGHT : 40,**\n      init : function(){\n      },\n      fireBubble : function(bubble,coords,duration){\n        *--snip--*\n      }**,**\n      **drawBoard : function(board){**\n  ➊      **var rows = board.getRows();**\n        **var gameArea = $(\"#board\");**\n        **for(var i=0;i<rows.length;i++){**\n          **var row = rows[i];**\n➋        **for(var j=0;j<row.length;j++){**\n            **var bubble = row[j];**\n➌          **if(bubble){**\n➍            **var sprite = bubble.getSprite();**\n➎            **gameArea.append(sprite);**\n              **var left = j * ui.BUBBLE_DIMS/2;**\n              **var top = i * ui.ROW_HEIGHT;**\n➏            **sprite.css({**\n                **left : left,**\n                **top : top**\n              **});**\n            **};**\n          **};**\n        **};**\n      **}**\n    };\n    return ui;\n  })(jQuery);\n```", "```\n  var BubbleShoot = window.BubbleShoot || {};\n  BubbleShoot.Game = (function($){\n    var Game = function(){\n    var curBubble;\n    var board;\n➊  **var numBubbles;**\n➋  **var MAX_BUBBLES = 70;**\n    this.init = function(){\n      $(\".but_start_game\").bind(\"click\",startGame);\n    };\n    var startGame = function(){\n      $(\".but_start_game\").unbind(\"click\");\n➌    **numBubbles = MAX_BUBBLES;**\n      BubbleShoot.ui.hideDialog();\n      curBubble = getNextBubble();\n      board = new BubbleShoot.Board();\n      BubbleShoot.ui.drawBoard(board);\n      $(\"#game\").bind(\"click\",clickGameScreen);\n    };\n    var getNextBubble = function(){\n      var bubble = BubbleShoot.Bubble.create();\n      bubble.getSprite().addClass(\"cur_bubble\");\n      $(\"#board\").append(bubble.getSprite());\n➍    **BubbleShoot.ui.drawBubblesRemaining(numBubbles);**\n      **numBubbles--;**\n      return bubble;\n    };\n    var clickGameScreen = function(e){\n      var angle = BubbleShoot.ui.getBubbleAngle(curBubble .getSprite(),e);\n      var duration = 750;\n      var distance = 1000;\n      var distX = Math.sin(angle) * distance;\n      var distY = Math.cos(angle) * distance;\n      var bubbleCoords = BubbleShoot.ui.getBubbleCoords(curBubble .getSprite());\n      var coords = {\n        x : bubbleCoords.left + distX,\n        y : bubbleCoords.top - distY\n      };\n      BubbleShoot.ui.fireBubble(curBubble,coords,duration);\n➎    **curBubble = getNextBubble();**\n    };\n    return Game;\n  })(jQuery);\n```", "```\nvar BubbleShoot = window.BubbleShoot || {};\nBubbleShoot.ui = (function($){\n  var ui = {\n    BUBBLE_DIMS : 44,\n    ROW_HEIGHT : 40,\n    *--snip--*\n    drawBoard : function(board){\n      *--snip--*\n    }**,**\n    **drawBubblesRemaining : function(numBubbles){**\n      **$(\"#bubbles_remaining\").text(numBubbles);**\n    **}**\n  };\n  return ui;\n})(jQuery);\n```", "```\n<div id=\"game\">\n  <div id=\"board\"></div>\n  **<div id=\"bubbles_remaining\"></div>**\n</div>\n```", "```\n#bubbles_remaining\n{\n  position: absolute;\n  left: 479px;\n  top: 520px;\n  width: 50px;\n  font-size: 26px;\n  font-weight: bold;\n  color: #000;\n  text-align: center;\n}\n```", "```\n  var BubbleShoot = window.BubbleShoot || {};\n  BubbleShoot.CollisionDetector = (function($){\n    var CollisionDetector = {\n      findIntersection : function(curBubble,board,angle){\n        var rows = board.getRows();\n        var collision = null;\n        var pos = curBubble.getSprite().position();\n        var start = {\n          left : pos.left + BubbleShoot.ui.BUBBLE_DIMS/2,\n          top : pos.top + BubbleShoot.ui.BUBBLE_DIMS/2\n        };\n        var dx = Math.sin(angle);\n        var dy = -Math.cos(angle);\n        for(var i=0;i<rows.length;i++){\n          var row = rows[i];\n          for(var j=0;j<row.length;j++){\n            var bubble = row[j];\n            if(bubble){\n➊            var coords = bubble.getCoords();\n              var distToBubble = {\n                x : start.left - coords.left,\n                y : start.top - coords.top\n              };\n              var t = dx * distToBubble.x + dy * distToBubble.y;\n              var ex = -t * dx + start.left;\n              var ey = -t * dy + start.top;\n              var distEC = Math.sqrt((ex - coords.left) * (ex - coords.left) +\n                (ey - coords.top) * (ey - coords.top));\n              if(distEC<BubbleShoot.ui.BUBBLE_DIMS * .75){\n                var dt = Math.sqrt(BubbleShoot.ui.BUBBLE_DIMS * BubbleShoot.\n                  ui.BUBBLE_DIMS - distEC * distEC);\n                var offset1 = {\n                  x : (t - dt) * dx,\n                  y : -(t - dt) * dy\n                };\n                var offset2 = {\n                  x : (t + dt) * dx,\n                  y : -(t + dt) * dy\n                };\n                var distToCollision1 = Math.sqrt(offset1.x * offset1.x +\n                  offset1.y * offset1.y);\n                var distToCollision2 = Math.sqrt(offset2.x * offset2.x +\n                  offset2.y * offset2.y);\n                if(distToCollision1 < distToCollision2){\n                  var distToCollision = distToCollision1;\n                  var dest = {\n                    x : offset1.x + start.left,\n                    y : offset1.y + start.top\n                  };\n                }else{\n                  var distToCollision = distToCollision2;\n                  var dest = {\n                    x : -offset2.x + start.left,\n                    y : offset2.y + start.top\n                  };\n                }\n                if(!collision || collision.distToCollision>distToCollision){\n                  collision = {\n                    bubble : bubble,\n                    distToCollision : distToCollision,\n                    coords : dest\n                  };\n                };\n              };\n            };\n          };\n        };\n        return collision;\n      }\n    };\n    return CollisionDetector;\n  })(jQuery);\n```", "```\nvar BubbleShoot = window.BubbleShoot || {};\nBubbleShoot.Bubble = (function($){\n  var Bubble = function(row,col,type,sprite){\n    var that = this;\n    this.getType = function(){ return type;};\n    this.getSprite = function(){ return sprite;};\n    this.getCol = function(){ return col;};\n    this.getRow = function(){ return row;};\n    **this.getCoords = function(){**\n      **var coords = {**\n        **left :** ➊**that.getCol() *** ➋**BubbleShoot.ui.BUBBLE_DIMS/2 +**\n          ➎**BubbleShoot.ui.BUBBLE_DIMS/2,**\n        **top :** ➌**that.getRow() *** ➍**BubbleShoot.ui.ROW_HEIGHT +**\n          ➎**BubbleShoot.ui.BUBBLE_DIMS/2**\n      **};**\n      **return coords;**\n    **}**\n  };\n  Bubble.create = function(rowNum,colNum,type){\n    --*snip*--\n  };\n  return Bubble;\n})(jQuery);\n```", "```\nvar BubbleShoot = window.BubbleShoot || {};\nBubbleShoot.CollisionDetector = (function($){\n  var CollisionDetector = {\n```", "```\nfindIntersection : function(curBubble,board,angle){\n```", "```\nvar rows = board.getRows();\nvar collision = null;\n```", "```\nvar pos = curBubble.getSprite().position();\nvar start = {\n  left : pos.left + BubbleShoot.ui.BUBBLE_DIMS/2,\n  top : pos.top + BubbleShoot.ui.BUBBLE_DIMS/2\n};\n```", "```\nvar dx = Math.sin(angle);\nvar dy = -Math.cos(angle);\n```", "```\nfor(var i=0;i<rows.length;i++){\n  var row = rows[i];\n  for(var j=0;j<row.length;j++){\n    var bubble = row[j];\n    if(bubble){\n```", "```\nvar coords = bubble.getCoords();\nvar distToBubble = {\n  x : start.left - coords.left,\n  y : start.top - coords.top\n};\n```", "```\nvar t = dx * distToBubble.x + dy * distToBubble.y;\n```", "```\nvar ex = -t * dx + start.left;\nvar ey = -t * dy + start.top;\n```", "```\nvar distEC = Math.sqrt((ex - coords.left) * (ex - coords.left) + (ey -\n  coords.top) * (ey - coords.top));\n```", "```\nif(distEC < BubbleShoot.ui.BUBBLE_DIMS * .75){\n```", "```\nvar dt = Math.sqrt(BubbleShoot.ui.BUBBLE_DIMS * BubbleShoot.ui.BUBBLE_DIMS\n  - distEC * distEC);\n```", "```\nvar offset1 = {\n  x : (t - dt) * dx,\n  y : -(t - dt) * dy\n};\nvar offset2 = {\n  x : (t + dt) * dx,\n  y : -(t + dt) * dy\n};\n```", "```\nvar distToCenter1 = Math.sqrt(offset1.x * offset1.x + offset1.y *\n  offset1.y);\nvar distToCenter2 = Math.sqrt(offset2.x * offset2.x + offset2.y *\n  offset2.y);\n```", "```\nif(distToCollision1 < distToCollision2){\n  var distToCollision = distToCollision1;\n  var dest = {\n    x : offset1.x + start.left,\n    y : offset1.y + start.top\n  };\n}else{\n  var distToCollision = distToCollision2;\n  var dest = {\n    x : -offset2.x + start.left,\n    y : offset2.y + start.top\n  };\n}\n```", "```\n         if(!collision || collision.distToCollision>distToCollision){\n            collision = {\n              bubble : bubble,\n              distToCollision : distToCollision,\n              coords : dest\n            };\n          };\n        };\n      }\n    }\n  };\n  return collision;\n};\n```", "```\n  var clickGameScreen = function(e){\n    var angle = getBubbleAngle(e);\n    var bubble = $(\"#bubble\");\n    var duration = 750;\n    var distance = 1000;\n    **var collision = BubbleShoot.CollisionDetector.findIntersection(curBubble,**\n      **board,angle);**\n    **if(collision){**\n      **var coords = collision.coords;**\n  ➊    **duration = Math.round(duration * collision.distToCollision / distance);**\n    **}else{**\n      var distX = Math.sin(angle) * distance;\n      var distY = Math.cos(angle) * distance;\n      var bubbleCoords = BubbleShoot.ui.getBubbleCoords(curBubble.getSprite());\n      var coords = {\n        x : bubbleCoords.left + distX,\n        y : bubbleCoords.top - distY\n      };\n    **};**\n    BubbleShoot.ui.fireBubble(curBubble,coords,duration);\n    curBubble = getNextBubble();\n  };\n```", "```\n  var BubbleShoot = window.BubbleShoot || {};\n  BubbleShoot.Board = (function($){\n    var NUM_ROWS = 9;\n    var NUM_COLS = 32;\n    var Board = function(){\n      var that = this;\n      var rows = createLayout();\n      this.getRows = function(){ return rows;};\n      **this.addBubble = function(bubble,coords){**\n        **var rowNum = Math.floor(coords.y / BubbleShoot.ui.ROW_HEIGHT);**\n        **var colNum = coords.x / BubbleShoot.ui.BUBBLE_DIMS * 2;**\n        **if(rowNum % 2 == 1)**\n          **colNum -= 1;**\n        **colNum = Math.round(colNum/2) * 2;**\n        **if(rowNum % 2 == 0)**\n          **colNum -= 1;**\n        **if(!rows[rowNum])**\n          **rows[rowNum] = [];**\n➊        **rows[rowNum][colNum] = bubble;**\n➋        **bubble.setRow(rowNum);**\n➌        **bubble.setCol(colNum);**\n      **};**\n      return this;\n    };\n    var createLayout = function(){\n      *--snip--*\n    };\n    return Board;\n  })(jQuery);\n```", "```\nvar Bubble = function(row,col,type,sprite){\n  var that = this;\n  this.getType = function(){ return type;};\n  this.getSprite = function(){ return sprite;};\n  this.getCol = function(){ return col;};\n  **this.setCol = function(colIn){ col = colIn;};**\n  this.getRow = function(){ return row;};\n  **this.setRow = function(rowIn){ row = rowIn;};**\n  this.getCoords = function(){\n    *--snip--*\n  }\n};\n```", "```\nvar clickGameScreen = function(e){\n  var angle = BubbleShoot.ui.getBubbleAngle(curBubble.getSprite(),e);\n  var duration = 750;\n  var distance = 1000;\n  var collision = BubbleShoot.CollisionDetector.findIntersection(curBubble,\n    board,angle);\n  if(collision){\n    var coords = collision.coords;\n    duration = Math.round(duration * collision.distToCollision / distance);\n    **board.addBubble(curBubble,coords);**\n  }else{\n    var distX = Math.sin(angle) * distance;\n    var distY = Math.cos(angle) * distance;\n    var bubbleCoords = BubbleShoot.ui.getBubbleCoords(curBubble.getSprite());\n    var coords = {\n      x : bubbleCoords.left + distX,\n      y : bubbleCoords.top - distY\n    };\n  };\n  BubbleShoot.ui.fireBubble(curBubble,coords,duration);\n  curBubble = getNextBubble();\n};\n```", "```\n  fireBubble : function(bubble,coords,duration){\n    bubble.getSprite().animate({\n        left : coords.x - ui.BUBBLE_DIMS/2,\n        top : coords.y - ui.BUBBLE_DIMS/2\n      },\n      {\n        duration : duration,\n        easing : \"linear\"**,**\n        **complete : function(){**\n➊        **if(bubble.getRow() !== null){**\n            **bubble.getSprite().css({**\n              **left : bubble.getCoords().left - ui.BUBBLE_DIMS/2,**\n              **top : bubble.getCoords().top - ui.BUBBLE_DIMS/2**\n            **});**\n          **};**\n      **}**\n    });\n  },\n```"]