["```\ndef edit\n  @text_post = TextPost.find(params[:id])\nend\n```", "```\ndef edit\n  **@text_post = current_user.text_posts.find(params[:id])**\nend\n```", "```\n   def update\n➊    @text_post = current_user.text_posts.find(params[:id])\n➋    if @text_post.update(text_post_params)\n       redirect_to post_path(@text_post), notice: \"Post updated!\"\n    else\n      render :edit, alert: \"Error updating post.\"\n    end\n   end\n```", "```\n<div class=\"page-header\">\n  <h1>Edit Text Post</h1>\n</div>\n\n<%= render 'form' %>\n```", "```\n      <%= text_post.body %>\n\n➊     **<% if text_post.user == current_user %>**\n        **<p>**\n        **<%= link_to 'Edit', edit_text_post_path(text_post),**\n              **class: \"btn btn-default\" %>**\n        **</p>**\n      **<% end %>**\n    </div>\n  </div>\n```", "```\n  class User < ActiveRecord::Base\n➊   def self.authenticate(username, password)\n➋     where(\"username = '#{username}' \" +\n            \"AND password = '#{password}'\").first\n    end\n  end\n```", "```\nUser.authenticate(\"tony\", \"secret\")\n => #<User id: 1, username: ...>\n```", "```\nSELECT * FROM \"users\"\nWHERE (username = 'tony' AND password = 'secret')\nORDER BY \"users\".\"id\" ASC\nLIMIT 1\n```", "```\nUser.authenticate(\"tony\", \"wrong\")\n => nil\n```", "```\nUser.authenticate(\"' OR '1'='1\", \"' OR '1'='1\")\n => #<User id: 1, username: ...>\n```", "```\nSELECT * FROM \"users\"\nWHERE (username = '' OR '1'='1' AND password = '' OR '1'='1')\nORDER BY \"users\".\"id\" ASC\nLIMIT 1\n```", "```\ndef self.authenticate\n  username = params[:username]\n  password = params[:password]\n\n  where(username: username,\n        password: password).first\nend\n```", "```\n**<script>alert('XSS');</script>**\n```", "```\n--*snip*--\n  <%= **raw** text_post.body %>\n--*snip*--\n```", "```\nirb(main):001:0> **helper.sanitize(\"<p>Hello</p>\")**\n => \"<p>Hello</p>\"\nirb(main):002:0> **helper.sanitize(\"<script>alert('XSS')</script>\")**\n => \"\"\n```", "```\nirb(main):003:0> **helper.sanitize(\"<p>Hello</p>\", tags: [\"em\", \"strong\"])**\n => \"Hello\"\n```", "```\n--*snip*--\n  <%= **sanitize** text_post.body %>\n--*snip*--\n```", "```\n<img src=\"http://*yoursite.com*/transfer?amount=100&to=attacker\">\n```", "```\nget 'follow/:id', to: 'users#follow', as: 'follow_user'\n```", "```\n<img src=\"http://*yoursite.com*/follow/10\">\n```", "```\n<%= csrf_meta_tags %>\n```", "```\n<meta content=\"authenticity_token\" name=\"csrf-param\" />\n<meta content=\"KA1Q/JoVfI+aV6/L4...\" name=\"csrf-token\" />\n```", "```\nprotect_from_forgery with: :exception\n```", "```\n--*snip*--\n**post** 'follow/:id', to: 'users#follow', as: 'follow_user'\n--*snip*--\n```", "```\n<%= link_to \"Follow\", follow_user_path(@user),\n      **method: :post**, class: \"btn btn-default\" %>\n```", "```\n  --*snip*--\n\n  def show\n    @post = Post.find(params[:id])\n    **@can_moderate = (current_user == @post.user)**\n  end\nend\n```", "```\n    --*snip*--\n    get 'login', to: 'sessions#new', as: 'login'\n➊   get 'logout', to: 'sessions#destroy', as: 'logout'\n\n    root 'posts#index'\n  end\n```"]