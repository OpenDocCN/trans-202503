- en: Part III
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三部分
- en: Database Objects
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库对象
- en: In Part III, you’ll create database objects like views, functions, procedures,
    triggers, and events. These objects will be stored on your MySQL server so you
    can call them whenever you need them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在第三部分，你将创建像视图、函数、过程、触发器和事件这样的数据库对象。这些对象将存储在你的MySQL服务器上，以便你在需要时随时调用它们。
- en: In [Chapter 10](c10.xhtml), you’ll learn how to create views that let you access
    the results of a query as a table-like structure.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第10章](c10.xhtml)，你将学习如何创建视图，让你像访问表格一样访问查询结果。
- en: In [Chapter 11](c11.xhtml), you’ll create your own functions and procedures
    to perform tasks like getting and updating the population of states.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第11章](c11.xhtml)，你将创建自己的函数和过程来执行任务，比如获取和更新州的人口数据。
- en: In [Chapter 12](c12.xhtml), you’ll create your own triggers that automatically
    take an action you define when rows are inserted, updated, or deleted from a table.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第12章](c12.xhtml)，你将创建自己的触发器，当行被插入、更新或删除时，触发器会自动执行你定义的操作。
- en: In [Chapter 13](c13.xhtml), you’ll create your own MySQL events to manage scheduled
    tasks.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第13章](c13.xhtml)，你将创建自己的MySQL事件来管理计划任务。
- en: 'In these chapters, you’ll use the following naming conventions for different
    types of objects:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些章节中，你将使用以下命名约定来表示不同类型的对象：
- en: '| `beer` | A table that contains data about beer. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `beer` | 一个包含啤酒数据的表。 |'
- en: '| `v_beer` | A view that contains data about beer. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `v_beer` | 一个包含啤酒数据的视图。 |'
- en: '| `f_get_ipa()` | A function that gets a list of India pale ales. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `f_get_ipa()` | 一个获取印度淡色艾尔啤酒列表的函数。 |'
- en: '| `p_get_pilsner()` | A procedure that gets a list of pilsner beers. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| `p_get_pilsner()` | 一个获取比尔森啤酒列表的过程。 |'
- en: '| `tr_beer_ad` | A trigger that automatically takes an action after some rows
    in the beer table are deleted. I use the tr_ prefix for triggers so that they
    won’t be confused with tables, which also start with the letter t. The suffix
    _ad stands for after delete. _bd stands for before delete. _bu and _au stand for
    before and after update, respectively. _bi and _ai stand for before and after
    insert, respectively. You’ll learn what those suffixes mean in Chapter 12. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| `tr_beer_ad` | 一个触发器，在啤酒表中的某些行被删除后自动执行某个操作。我使用`tr_`作为触发器的前缀，以避免与表格混淆，因为表格也以字母`t`开头。后缀`_ad`表示删除后，`_bd`表示删除前，`_bu`和`_au`分别表示更新前和更新后，`_bi`和`_ai`分别表示插入前和插入后。你将在第12章了解这些后缀的含义。
    |'
- en: '| `e_load_beer` | A scheduled event to load new beer data into the beer table.
    |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| `e_load_beer` | 一个定时事件，用于将新啤酒数据加载到啤酒表中。 |'
- en: In previous chapters, you’ve named tables descriptively so that other programmers
    can quickly understand the nature of the data that the table is storing. For database
    objects other than tables, you’ll continue using that approach and also prefix
    the name of the object with a short description of its type (as in `v_` for *view*);
    occasionally, you’ll add a suffix as well (as in `_ad` for *after delete*).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，你已经对表格进行了描述性命名，以便其他程序员能够快速理解表格所存储的数据的性质。对于表格以外的数据库对象，你将继续使用这种命名方法，并且在对象名称前添加简短的类型描述（例如，`v_`表示*视图*）；有时，你还会添加后缀（例如，`_ad`表示*删除后*）。
- en: While these naming conventions aren’t law, consider using them, as they help
    you quickly understand a database object’s purpose.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些命名约定并非硬性规定，但考虑使用它们，因为它们有助于你快速理解数据库对象的用途。
