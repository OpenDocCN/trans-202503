["```\nlet s = \"to be or not to be that is the question\";\nconsole.log(s);\n```", "```\nclass DNA {\n\n}\n```", "```\nlet target = \"to be or not to be\";\n```", "```\nfunction draw() {\n  for (let phrase of population) {\n    phrase.calculateFitness(target);\n  }\n}\n```", "```\n  let parentA = random(matingPool);\n  let parentB = random(matingPool);\n```", "```\nlet start = random(1);\n```", "```\nlet index = 0;\n```", "```\nlet mutationRate = 0.01;\n\nif (random(1) < mutationRate) {\n  /* Any code here would be executed 1% of the time. */\n}\n```", "```\nlet mutationRate = 0.01;\nlet populationSize = 150;\n```", "```\ncalculateFitness() {\n  ????????????\n  ????????????\n  this.fitness = ??????????\n}\n```", "```\n    this.size = map(this.dna.genes[2], 0, 1, 10, 72);\n```", "```\nclass Rocket {\n  constructor() {\n    this.dna = ????;\n    /* and more... */\n  }\n}\n```", "```\nclass DNA {\n  constructor(length) {\n    this.genes = [];\n    for (let i = 0; i < length; i++) {\n      this.genes[i] = createVector();\n    }\n  }\n}\n```", "```\nlet v = createVector(random(-1, 1), random(-1, 1));\n```", "```\n population.fitness();\n    population.selection();\n    population.reproduction();\n```"]