["```\n  var Board = function(){\n    var that = this;\n    var rows = createLayout();\n    this.getRows = function(){ return rows;};\n    this.addBubble = function(bubble,coords){\n      --*snip*--\n    };\n➊  **this.getBubbleAt = function(rowNum,colNum){**\n      **if(!this.getRows()[rowNum])**\n        **return null;**\n      **return this.getRows()[rowNum][colNum];**\n    **};**\n➋  **this.getBubblesAround = function(curRow,curCol){**\n      **var bubbles = [];**\n      **for(var rowNum = curRow - 1;rowNum <= curRow+1; rowNum++){**\n        **for(var colNum =** ➌**curCol-2; colNum <=** ➍**curCol+2; colNum++){**\n          **var bubbleAt = that.getBubbleAt(rowNum,colNum);**\n          **if(bubbleAt && !(colNum == curCol && rowNum == curRow))**\n➎          **bubbles.push(bubbleAt);**\n          **};**\n        **};**\n      **return bubbles;**\n    **};**\n    return this;\n  }\n```", "```\nvar Board = function(){\n  var that = this;\n  var rows = createLayout();\n  this.getRows = function(){ return rows;};\n  this.addBubble = function(bubble,coords){\n    --*snip*--\n  };\n  this.getBubbleAt = function(rowNum,colNum){\n    --*snip*--\n  };\n  this.getBubblesAround = function(curRow,curCol){\n    --*snip*--\n  };\n  **this.getGroup = function(bubble,found){**\n    **var curRow = bubble.getRow();**\n    **if(!found[curRow])**\n      **found[curRow] = {};**\n    **if(!found.list)**\n      **found.list = [];**\n    **if(found[curRow][bubble.getCol()]){**\n      **return found;**\n    **}**\n    **found[curRow][bubble.getCol()] = bubble;**\n    **found.list.push(bubble);**\n    **var curCol = bubble.getCol();**\n    **var surrounding = that.getBubblesAround(curRow,curCol);**\n    **for(var i=0;i<surrounding.length;i++){**\n      **var bubbleAt = surrounding[i];**\n      **if(bubbleAt.getType() == bubble.getType()){**\n        **found = that.getGroup(bubbleAt,found);**\n      **};**\n    **};**\n    **return found;**\n  **};**\n  return this;\n};\n```", "```\n   var curRow = bubble.getRow();\n➊ if(!found[curRow])\n     found[curRow] = {};\n➋ if(!found.list)\n     found.list = [];\n➌ if(found[curRow][bubble.getCol()]){\n     return found;\n   }\n➍ found[curRow][bubble.getCol()] = bubble;\n➎ **found.list.push(bubble);**\n```", "```\n   var curCol = bubble.getCol();\n➏ var surrounding = that.getBubblesAround(curRow,curCol);\n```", "```\n     for(var i=0;i<surrounding.length;i++){\n       var bubbleAt = surrounding[i];\n➐     if(bubbleAt.getType() == bubble.getType()){\n         found = that.getGroup(bubbleAt,found);\n       };\n     };\n➑ return found;\n```", "```\n  var clickGameScreen = function(e){\n    var angle = BubbleShoot.ui.getBubbleAngle(curBubble.getSprite(),e);\n    var duration = 750;\n    var distance = 1000;\n    var collision = BubbleShoot.CollisionDetector.findIntersection(curBubble,\n      board,angle);\n    if(collision){\n      var coords = {\n        x : bubbleCoords.left + distX,\n        y : bubbleCoords.top - distY\n      };\n      duration = Math.round(duration * collision.distToCollision / distance);\n      board.addBubble(curBubble,coords);\n➊    **var group = board.getGroup(curBubble,{});**\n➋    **if(group.list.length >= 3){**\n➌      **popBubbles(group.list,duration);**\n      **}**\n    }else{\n      --*snip*--\n    };\n    BubbleShoot.ui.fireBubble(curBubble,coords,duration);\n    curBubble = getNextBubble();\n  };\n```", "```\n  var BubbleShoot = window.BubbleShoot || {};\n  BubbleShoot.Game = (function($){\n    var Game = function(){\n      --*snip*--\n      var clickGameScreen = function(e){\n        --*snip*--\n      };\n      **var popBubbles = function(bubbles,delay){**\n➊      **$.each(bubbles,function(){**\n          **var bubble = this;**\n➋        **board.popBubbleAt(this.getRow(),this.getCol());**\n          **setTimeout(function(){**\n            **bubble.getSprite().remove();**\n          **},delay + 200);**\n        **});**\n      **};**\n    };\n    return Game;\n  })(jQuery);\n```", "```\nvar Board = function(){\n  --*snip*--\n  this.getGroup = function(bubble,found){\n    --*snip*--\n  };\n  **this.popBubbleAt = function(rowNum,colNum){**\n    **var row = rows[rowNum];**\n    **delete row[colNum];**\n  **};**\n  return this;\n};\n```", "```\n  var popBubbles = function(bubbles,delay){\n    $.each(bubbles,function(){\n      var bubble = this;\n      **setTimeout(function(){**\n➊      **bubble.animatePop();**\n      **},delay);**\n      board.popBubbleAt(bubble.getRow(),bubble.getCol());\n      setTimeout(function(){\n        bubble.getSprite().remove();\n      },delay + 200);\n➋    **delay += 60;**\n    });\n  };\n```", "```\n  var Bubble = function(row,col,type,sprite){\n    --*snip*--\n    this.getCoords = function(){\n    --*snip*--\n    };\n    **this.animatePop = function(){**\n➊    **var top = type * that.getSprite().height();**\n➋    **this.getSprite().css(Modernizr.prefixed(\"transform\"),\"rotate(\" + (Math.**\n        **random() * 360) + \"deg)\");**\n➌    **setTimeout(function(){**\n        **that.getSprite().css(\"background-position\",\"-50px -\" + top + \"px\");**\n      **},125);**\n      **setTimeout(function(){**\n        **that.getSprite().css(\"background-position\",\"-100px -\" + top + \"px\");**\n      **},150);**\n      **setTimeout(function(){**\n        **that.getSprite().css(\"background-position\",\"-150px -\" + top + \"px\");**\n      **},175);**\n➍    **setTimeout(function(){**\n        **that.getSprite().remove();**\n      **},200);**\n    **};**\n  };\n```", "```\n  var Board = function(){\n    --*snip*--\n➊  this.getGroup = function(bubble,found**,differentColor**){\n      var curRow = bubble.getRow();\n      if(!found[curRow])\n        found[curRow] = {};\n      if(!found.list)\n        found.list = [];\n      if(found[curRow][bubble.getCol()]){\n        return found;\n      }\n      found[curRow][bubble.getCol()] = bubble;\n      found.list.push(bubble);\n      var curCol = bubble.getCol();\n      var surrounding = that.getBubblesAround(curRow,curCol);\n      for(var i=0;i<surrounding.length;i++){\n        var bubbleAt = surrounding[i];\n➋      if(bubbleAt.getType() == bubble.getType() **|| differentColor**){\n          found = that.getGroup(bubbleAt,found**,differentColor**);\n        };\n      };\n      return found;\n    };\n  }\n```", "```\nvar Board = function(){\n  --*snip*--\n  this.popBubbleAt = function(rowNum,colNum){\n    --*snip*--\n  };\n  **this.findOrphans = function(){**\n    **var connected = [];**\n    **var groups = [];**\n    **var rows = that.getRows();**\n    **for(var i=0;i<rows.length;i++){**\n      **connected[i] = [];**\n    **};**\n    **for(var i=0;i<rows[0].length;i++){**\n      **var bubble = that.getBubbleAt(0,i);**\n      **if(bubble && !connected[0][i]){**\n        **var group = that.getGroup(bubble,{},true);**\n        **$.each(group.list,function(){**\n          **connected[this.getRow()][this.getCol()] = true;**\n        **});**\n      **};**\n    **};**\n    **var orphaned = [];**\n    **for(var i=0;i<rows.length;i++){**\n      **for(var j=0;j<rows[i].length;j++){**\n        **var bubble = that.getBubbleAt(i,j);**\n        **if(bubble && !connected[i][j]){**\n          **orphaned.push(bubble);**\n        **};**\n      **};**\n    **};**\n    **return orphaned;**\n  **};**\n  return this;\n};\n```", "```\n➊ var connected = [];\n➋ var groups = [];\n   var rows = that.getRows();\n   for(var i=0;i<rows.length;i++){\n     connected[i] = [];\n   };\n```", "```\nfor(var i=0;i<rows[0].length;i++){\n  var bubble = that.getBubbleAt(0,i);\n```", "```\nif(bubble && !connected[0][i]){\n  var group = that.getGroup(bubble,{},true);\n```", "```\n      $.each(group.list,function(){\n        connected[this.getRow()][this.getCol()] = true;\n      });\n  };\n};\n```", "```\n  var orphaned = [];\n  for(var i=0;i<rows.length;i++){\n    for(var j=0;j<rows[i].length;j++){\n      var bubble = that.getBubbleAt(i,j);\n      if(bubble && !connected[i][j]){\n        orphaned.push(bubble);\n      };\n    };\n  };\n  return orphaned;\n};\n```", "```\n  var Game = function(){\n    --*snip*--\n    var clickGameScreen = function(e){\n      --*snip*--\n      if(collision){\n        --*snip*--\n➊      if(group.list.length >= 3){\n          popBubbles(group.list,duration);\n➋        **var orphans = board.findOrphans();**\n➌        **var delay = duration + 200 + 30 * group.list.length;**\n➍        **dropBubbles(orphans,delay);**\n        };\n      }else{\n        --*snip*--\n      };\n      BubbleShoot.ui.fireBubble(curBubble,coords,duration);\n      curBubble = getNextBubble();\n    };\n  };\n```", "```\n  var Game = function(){\n    --*snip*--\n    var popBubbles = function(bubbles,delay){\n      --*snip*--\n    };\n    **var dropBubbles = function(**➊**bubbles,delay){**\n      **$.each(bubbles,function(){**\n        **var bubble = this;**\n➋      **board.popBubbleAt(bubble.getRow(),bubble.getCol());**\n        **setTimeout(function(){**\n➌        **bubble.getSprite().animate({**\n            **top : 1000**\n          **},1000);**\n        **},delay);**\n      **});**\n    **};**\n  };\n```", "```\n(function(jQuery){\n  jQuery.fn.kaboom = function(settings)\n  {\n  };\n})(jQuery);\n```", "```\nvar Game = function(){\n  --*snip*--\n  var popBubbles = function(bubbles,delay){\n    --*snip*--\n  };\n  var dropBubbles = function(bubbles,delay){\n    $.each(bubbles,function(){\n      var bubble = this;\n      board.popBubbleAt(bubble.getRow(),bubble.getCol());\n      setTimeout(function(){\n        **bubble.getSprite().kaboom();**\n      },delay);\n    });\n    return;\n  };\n};\n```", "```\n  (function(jQuery){\n➊  **var defaults = {**\n      **gravity : 1.3,**\n      **maxY : 800**\n    **};**\n➋  **var toMove = [];**\n    jQuery.fn.kaboom = function(settings){\n    }\n  })(jQuery);\n```", "```\n  (function(jQuery){\n    var defaults = {\n      gravity : 1.3,\n      maxY : 800\n    };\n    var toMove = [];\n➊  **jQuery.fn.kaboom = function(settings){**\n      **var config = $.extend({}, defaults, settings);**\n      **if(toMove.length == 0){**\n        **setTimeout(moveAll,40);**\n      **};**\n      **var dx = Math.round(Math.random() * 10) – 5;**\n      **var dy = Math.round(Math.random() * 5) + 5;**\n      **toMove.push({**\n        **elm : this,**\n        **dx : dx,**\n        **dy : dy,**\n        **x : this.position().left,**\n        **y : this.position().top,**\n        **config : config**\n      **});**\n    **};**\n➋  **var moveAll = function(){**\n      **var frameProportion = 1;**\n      **var stillToMove = [];**\n      **for(var i=0;i<toMove.length;i++){**\n        **var obj = toMove[i];**\n        **obj.x += obj.dx * frameProportion;**\n        **obj.y -= obj.dy * frameProportion;**\n        **obj.dy -= obj.config.gravity * frameProportion;**\n        **if(obj.y < obj.config.maxY){**\n          **obj.elm.css({**\n            **top : Math.round(obj.y),**\n            **left : Math.round(obj.x)**\n          **});**\n          **stillToMove.push(obj);**\n        **}else if(obj.config.callback){**\n          **obj.config.callback();**\n     **}**\n    **};**\n    **toMove = stillToMove;**\n    **if(toMove.length > 0)**\n        **setTimeout(moveAll,40);**\n    **};**\n  })(jQuery);\n```", "```\n  jQuery.fn.kaboom = function(settings){\n➊  var config = $.extend({}, defaults, settings);\n➋  if(toMove.length == 0){\n      setTimeout(moveAll,40);\n    };\n➌  var dx = Math.round(Math.random() * 10) - 5;\n    var dy = Math.round(Math.random() * 5) + 5;\n➍  toMove.push({\n      elm : $(this),\n      dx : dx,\n      dy : dy,\n      x : $(this).position().left,\n      y : $(this).position().top,\n      config : config\n    });\n  };\n```", "```\n  var moveAll = function(){\n➊  var frameProportion = 1;\n➋  var stillToMove = [];\n➌  for(var i=0;i<toMove.length;i++){\n      var obj = toMove[i];\n➍    obj.x += obj.dx * frameProportion;\n      obj.y -= obj.dy * frameProportion;\n➎    obj.dy -= obj.config.gravity * frameProportion;\n➏    if(obj.y < obj.config.maxY){\n        obj.elm.css({\n          top : Math.round(obj.y),\n          left : Math.round(obj.x)\n        });\n        stillToMove.push(obj);\n➐    }else if(obj.config.callback){\n        obj.config.callback();\n      }\n    };\n➑  toMove = stillToMove;\n    if(toMove.length > 0)\n➒    setTimeout(moveAll,40);\n  };\n```"]