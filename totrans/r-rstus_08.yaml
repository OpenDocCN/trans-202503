- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: 6 R MARKDOWN REPORTS
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6 R MARKDOWN 报告
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: '![](../images/chapter.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/chapter.jpg)'
- en: Imagine that you’ve collected surveys about customer satisfaction with your
    new product. Now you’re ready to analyze the data and write up your results. First,
    you download your data from Google Sheets and import it into a statistical analysis
    tool like SPSS. Next, you use SPSS to clean and analyze your data, export summaries
    of your data as Excel spreadsheets, and then use Excel to make some charts. Finally,
    you write your report in Word, pasting in your charts from Excel along the way.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经收集了有关客户对新产品满意度的调查数据。现在你准备好分析数据并编写结果报告了。首先，你从 Google Sheets 下载数据，并将其导入到像
    SPSS 这样的统计分析工具中。接着，使用 SPSS 清理和分析数据，将数据摘要导出为 Excel 表格，然后用 Excel 制作一些图表。最后，你用 Word
    撰写报告，同时将 Excel 中的图表粘贴进报告里。
- en: 'Sound familiar? If so, you’re not alone. Many people use this workflow for
    data analysis. But what happens when, the next month, new surveys roll in, and
    you have to redo your report? Yup, back through steps one through five. This multi-tool
    process might work for a one-time project, but let’s be honest: few projects are
    really one-time. For example, you might catch a mistake or realize you forgot
    to include a couple of surveys in your original analysis.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很熟悉吗？如果是的话，你并不孤单。许多人使用这种工作流程进行数据分析。但当下个月新的调查数据进来，你必须重新做报告时会怎样呢？没错，又得从第一步做到第五步。这种多工具的流程可能适用于一次性的项目，但说实话，很少有项目真的是一次性的。例如，你可能发现自己犯了个错误，或者意识到原来的分析里漏掉了一些调查数据。
- en: R Markdown combines data analysis, data visualization, and other R code with
    narrative text to create a document that can be exported to many formats, including
    Word, PDF, and HTML, to share with non-R users. When you use a single tool, your
    workflow becomes much more efficient. If you need to re-create that January customer
    satisfaction report in February, you can rerun your code to produce a new document
    with the newest data, and to fix an error in your analysis, you can simply adjust
    your code.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: R Markdown 将数据分析、数据可视化以及其他 R 代码与叙述文本结合起来，创建一个可以导出为多种格式的文档，包括 Word、PDF 和 HTML，以便与非
    R 用户分享。当你使用单一工具时，工作流程变得更加高效。如果你需要在二月重新创建一份一月的客户满意度报告，你只需重新运行代码，就能生成一份包含最新数据的新文档；而且若要修正分析中的错误，只需调整代码即可。
- en: The ability to easily update reports at any time is known as *reproducibility*,
    and it’s central to the value of R Markdown. This chapter breaks down the pieces
    of an R Markdown document, then describes some potential pitfalls and best practices.
    You’ll learn how to work with YAML metadata, R code chunks, and Markdown-formatted
    text; create inline R code that can change the report’s text dynamically; and
    run the document’s code in various ways.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 随时轻松更新报告的能力被称为*可重复性*，这是 R Markdown 价值的核心。本章将拆解 R Markdown 文档的各个部分，并描述一些潜在的陷阱和最佳实践。你将学习如何处理
    YAML 元数据、R 代码块和 Markdown 格式的文本；创建内联 R 代码，动态改变报告中的文本；以及以不同方式运行文档的代码。
- en: Creating an R Markdown Document
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 R Markdown 文档
- en: To create an R Markdown document in RStudio, go to **File****New File****R
    Markdown**. Choose a title, author, and date, as well as your default output format
    (HTML, PDF, or Word). These values can be changed later. Click **OK**, and RStudio
    will create an R Markdown document with some placeholder content, as shown in
    [Figure 6-1](chapter6.xhtml#fig6-1).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 RStudio 中创建 R Markdown 文档，点击**文件****新建文件****R Markdown**。选择标题、作者和日期，并设置默认的输出格式（HTML、PDF
    或 Word）。这些值稍后可以更改。点击**确定**，RStudio 将创建一个 R Markdown 文档，其中包含一些占位符内容，如 [图 6-1](chapter6.xhtml#fig6-1)
    所示。
- en: '![](../images/fig6-1.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/fig6-1.jpg)'
- en: 'Figure 6-1: The placeholder content in a new R Markdown document'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-1：新建 R Markdown 文档中的占位符内容
- en: The Knit menu at the top of RStudio converts an R Markdown document to the format
    you selected when creating it. In this example, the output format is set to be
    Word, so RStudio will create a Word document when you knit.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: RStudio 顶部的 Knit 菜单将 R Markdown 文档转换为你在创建时选择的格式。在这个例子中，输出格式设置为 Word，因此当你进行 Knit
    操作时，RStudio 会创建一个 Word 文档。
- en: Delete the document’s placeholder content. In the next section, you’ll replace
    it with your own.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 删除文档中的占位符内容。在下一部分，你将用你自己的内容替换它。
- en: Document Structure
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档结构
- en: To explore the structure of an R Markdown document, you’ll create a report about
    penguins using data from the palmerpenguins package introduced in [Chapter 3](chapter3.xhtml).
    I’ve separated the data by year, and you’ll use just the 2007 data. [Figure 6-2](chapter6.xhtml#fig6-2)
    shows the complete R Markdown document, with boxes surrounding each section.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了探索 R Markdown 文档的结构，你将使用 [第 3 章](chapter3.xhtml) 中介绍的 palmerpenguins 包的数据，创建一个关于企鹅的报告。我已经将数据按年份分开，你将只使用
    2007 年的数据。[图 6-2](chapter6.xhtml#fig6-2) 显示了完整的 R Markdown 文档，文档中的每个部分都被框住了。
- en: '![](../images/fig6-2.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/fig6-2.jpg)'
- en: 'Figure 6-2: Components of an R Markdown document'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '图 6-2: R Markdown 文档的组成部分'
- en: 'All R Markdown documents have three main parts: one YAML section, multiple
    R code chunks, and sections of Markdown text.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 R Markdown 文档有三个主要部分：一个 YAML 部分、多个 R 代码块和多个 Markdown 文本部分。
- en: The YAML Metadata
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: YAML 元数据
- en: 'The YAML section is the very beginning of an R Markdown document. The name
    YAML comes from the recursive acronym *YAML ain’t markup language*, whose meaning
    isn’t important for our purposes. Three dashes indicate its beginning and end,
    and the text inside of it contains metadata about the R Markdown document:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: YAML 部分是 R Markdown 文档的开头。YAML 的名字来自于递归首字母缩写 *YAML ain’t markup language*，它的意义对我们来说并不重要。三个破折号表示它的开始和结束，里面的文本包含关于
    R Markdown 文档的元数据：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As you can see, the YAML provides the title, author, date, and output format.
    All elements of the YAML are given in key: value syntax, where each key is a label
    for a piece of metadata (for example, the title) followed by the value.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '如你所见，YAML 提供了标题、作者、日期和输出格式。YAML 的所有元素都是以 key: value 语法给出的，其中每个 key 是元数据的一种标签（例如标题），后面跟着值。'
- en: The R Code Chunks
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: R 代码块
- en: 'R Markdown documents have a different structure from the R script files you
    might be familiar with (those with the *.R* extension). R script files treat all
    content as code unless you comment out a line by putting a hash mark (#) in front
    of it. In the following listing, the first line is a comment, and the second line
    is code:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: R Markdown 文档与你可能熟悉的 R 脚本文件（*.R* 后缀的文件）结构不同。R 脚本文件会将所有内容视为代码，除非你通过在前面加上井号 (#)
    来注释掉一行。在以下列表中，第一行是注释，第二行是代码：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In R Markdown, the situation is reversed. Everything after the YAML is treated
    as text unless you specify otherwise by creating *code chunks.* These start with
    three backticks ([PRE2]
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在 R Markdown 中，情况正好相反。YAML 之后的所有内容默认被视为文本，除非你通过创建 *代码块* 指定为代码。这些代码块以三个反引号开始（[PRE2]
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: —— Attaching core tidyverse packages ————— tidyverse 1.x.x——
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: —— 附加核心 tidyverse 包 ————— tidyverse 1.x.x——
- en:  dplyr     1.x.x       readr    2.x.x
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh:  dplyr     1.x.x       readr    2.x.x
- en:  forcats   0.x.x       stringr  1.x.x
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh:  forcats   0.x.x       stringr  1.x.x
- en:  ggplot2   3.x.x       tibble   3.x.x
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh:  ggplot2   3.x.x       tibble   3.x.x
- en:  lubridate 1.x.x       tidyr    1.x.x
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh:  lubridate 1.x.x       tidyr    1.x.x
- en:  purrr     1.x.x
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh:  purrr     1.x.x
- en: —— Conflicts————— tidyverse_conflicts() ——
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: —— 冲突————— tidyverse_conflicts() ——
- en: ｘ dplyr::filter() masks stats::filter()
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: ｘ dplyr::filter() 遮蔽了 stats::filter()
- en: ｘ dplyr::lag()    masks stats::lag()
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: ｘ dplyr::lag()    遮蔽了 stats::lag()
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`stat_bin()` 使用 `bins = 30`。使用 `binwidth` 选择更好的值。'
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '- Adelie'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '- Adelie'
- en: '- Gentoo'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '- Gentoo'
- en: '- Chinstrap'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '- Chinstrap'
- en: '[PRE13]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 1\. Adelie
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. Adelie
- en: 1\. Gentoo
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. Gentoo
- en: 1\. Chinstrap
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. Chinstrap
- en: '[PRE14]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The average bill length is `r average_bill_length` millimeters.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 平均鸟喙长度是 `r average_bill_length` 毫米。
- en: '[PRE15]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: penguins <- read_csv("https://data.rfortherestofus.com/penguins-2008.csv")
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: penguins <- read_csv("https://data.rfortherestofus.com/penguins-2008.csv")
- en: '[PRE18]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '---'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: 'title: Penguins Report'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '标题: Penguins Report'
- en: 'author: David Keyes'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '作者: David Keyes'
- en: 'date: 2024-01-12'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-01-12'
- en: 'output: word_document'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '输出格式: word_document'
- en: '---'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '[PRE19]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '```'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: This error happens because you are attempting to use tidyverse functions like
    read_csv(), as well as various ggplot functions, before you load the tidyverse
    package.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这个错误发生是因为你在加载 tidyverse 包之前尝试使用了像 `read_csv()` 这样的 tidyverse 函数，以及各种 ggplot
    函数。
- en: Alison Hill, a research scientist and one of the most prolific R Markdown educators,
    tells her students to knit early and often. This practice makes it easier to isolate
    issues that make knitting fail. Hill describes her typical R Markdown workflow
    as spending 75 percent of her time working on a new document and 25 percent of
    her time knitting to check that the R Markdown document works.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Alison Hill，一位研究科学家，也是最 prolific 的 R Markdown 教育者之一，告诉她的学生要早早且经常地进行编织。这个做法有助于更容易地找出导致编织失败的问题。Hill
    描述她的典型 R Markdown 工作流是：花费 75% 的时间在编写新文档上，剩余的 25% 的时间进行编织，以检查 R Markdown 文档是否有效。
- en: Quarto
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Quarto
- en: In 2022, Posit released a publishing tool similar to R Markdown. Known as Quarto,
    this tool takes what R Markdown has done for R and extends it to other languages,
    including Python, Julia, and Observable JS. As I write this book, Quarto is gaining
    traction. Luckily, the concepts you’ve learned in this chapter apply to Quarto
    as well. Quarto documents have a YAML section, code chunks, and Markdown text.
    You can export Quarto documents to HTML, PDF, and Word. However, R Markdown and
    Quarto documents have some syntactic differences, which are explored further in
    [Chapter 10](chapter10.xhtml).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 2022年，Posit 发布了一款类似 R Markdown 的发布工具。这个工具叫做 Quarto，它将 R Markdown 为 R 做的事情扩展到其他语言，包括
    Python、Julia 和 Observable JS。随着我写这本书时，Quarto 正在获得越来越多的关注。幸运的是，你在本章学到的概念同样适用于 Quarto。Quarto
    文档有 YAML 部分、代码块和 Markdown 文本。你可以将 Quarto 文档导出为 HTML、PDF 和 Word。然而，R Markdown 和
    Quarto 文档在语法上有所不同，具体内容将在[第10章](chapter10.xhtml)进一步探讨。
- en: Summary
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 摘要
- en: You started this chapter by considering the scenario of a report that needs
    to be regenerated monthly. You learned how you can use R Markdown to reproduce
    this report every month without changing your code. Even if you lost the final
    Word document, you could quickly re-create it.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 本章一开始，你考虑了一个需要每月重新生成的报告场景。你学习了如何使用 R Markdown 每月重新生成这个报告，而无需更改代码。即使丢失了最终的 Word
    文档，你也可以快速重新创建它。
- en: Best of all, working with R Markdown makes it possible to do in seconds what
    would have previously taken hours. When making a single report requires three
    tools and five steps, you may not want to work on it. But, as Alison Hill has
    pointed out, with R Markdown you can even work on reports before you receive all
    of the data. You could simply write code that works with partial data and rerun
    it with the final data at any time.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是，使用 R Markdown 可以在几秒钟内完成以前需要数小时才能完成的工作。当制作一个报告需要三种工具和五个步骤时，你可能不愿意去做。但正如
    Alison Hill 所指出的，使用 R Markdown，你甚至可以在收到所有数据之前开始工作。你只需编写与部分数据兼容的代码，随时可以用最终数据重新运行它。
- en: This chapter has just scratched the surface of what R Markdown can do. The next
    chapter will show you how to use it to instantly generate hundreds of reports.
    Magic indeed!
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 本章仅仅触及了 R Markdown 能够做的皮毛。下一章将展示如何使用它瞬间生成数百份报告。真是魔法般的存在！
- en: Additional Resources
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他资源
- en: 'Yihui Xie, J. J. Allaire, and Garrett Grolemund, *R Markdown: The Definitive
    Guide* (Boca Raton, FL: CRC Press, 2019), *[https://bookdown.org/yihui/rmarkdown/](https://bookdown.org/yihui/rmarkdown/)*.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Yihui Xie, J. J. Allaire 和 Garrett Grolemund，*R Markdown: The Definitive Guide*（佛罗里达州博卡拉顿：CRC出版社，2019年），*[https://bookdown.org/yihui/rmarkdown/](https://bookdown.org/yihui/rmarkdown/)*。'
- en: 'Yihui Xie, Christophe Dervieux, and Emily Riederer, *R Markdown Cookbook* (Boca
    Raton, FL: CRC Press, 2021), *[https://bookdown.org/yihui/rmarkdown-cookbook/](https://bookdown.org/yihui/rmarkdown-cookbook/)*.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yihui Xie, Christophe Dervieux 和 Emily Riederer，*R Markdown Cookbook*（佛罗里达州博卡拉顿：CRC出版社，2021年），*[https://bookdown.org/yihui/rmarkdown-cookbook/](https://bookdown.org/yihui/rmarkdown-cookbook/)*。
