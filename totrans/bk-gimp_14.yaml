- en: Chapter 8. Designing a Website
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GIMP includes a number of tools that are handy for designing a website, including
    guides, grids, and layers. Guides and snaps to grid make the design process more
    accurate, and layers allow you to try various ideas and quickly toggle between
    them to see what works best.
  prefs: []
  type: TYPE_NORMAL
- en: '8.1 Tutorial: Laying Out a Website'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you’re planning to build a website or are designing one for someone else,
    you need to decide how the graphics will be laid out. Sometimes knowing what will
    look good until you actually see it is hard. In this tutorial, we create a prototype
    of a website about healthy food. This site will offer information about different
    foods and services to help people plan their meals, track their progress, and
    so on.
  prefs: []
  type: TYPE_NORMAL
- en: Planning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before creating graphics or choosing colors, make a plan for the website. Start
    by writing down what the website should bring to its visitors.
  prefs: []
  type: TYPE_NORMAL
- en: 'Visitors can be divided into two main types: first-time and repeat. First-time
    visitors should be able to navigate the website easily and find what they’re looking
    for quickly. Repeat visitors should find reasons to come back regularly. They
    should be able to check new content and use the website services effortlessly.'
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to lay out the blocks that will constitute the website. You
    should have a block for new content, displayed in a prominent place, which all
    visitors will see. New visitors, or returning visitors who are not yet registered
    members, will also see beginner blocks to help them decide what to read. Registered
    visitors will instead get member blocks that display their personal goals and
    progress.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now arrange the blocks. You may want to draw a sketch on paper first to let
    your ideas take form, or you can fire up GIMP to sketch a draft digitally. In
    this tutorial, we use the 960 Grid System to help us calculate the dimensions
    of the blocks in a page that’s 960 pixels wide. The 960 Grid System (*http://960.gs/*)
    offers a set of prototyping resources: templates in 12, 16, and 24 columns, including
    templates for GIMP with preset guides; sketch sheets like the one in [Figure 8-1](ch08s01.html#sketch_on_paper_laying_out_blocks
    "Figure 8-1. Sketch on paper: laying out blocks"); CSS files; and example HTML
    files. You can also create a custom GIMP template if you prefer another page layout
    (**Image: File > Create Template**).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Sketch on paper: laying out blocks](httpatomoreillycomsourcenostarchimages1455086.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8-1. Sketch on paper: laying out blocks'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using guides](httpatomoreillycomsourcenostarchimages1455088.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-2. Using guides
  prefs: []
  type: TYPE_NORMAL
- en: Layout
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you decided to use the 960 Grid System to build this design, you can translate
    your sketch sheet into the provided GIMP template, as shown in [Figure 8-2](ch08s01.html#using_guides
    "Figure 8-2. Using guides"). If not, use your custom template with the guides
    placed where you prefer. You will have to define your own CSS files, however,
    without the help of 960 Grid System files.
  prefs: []
  type: TYPE_NORMAL
- en: 'Drag guides from the image rulers to mark the boundaries of the blocks. Choose
    960 pixels as the total width of the page and delineate a right column that’s
    220 pixels wide; add 20-pixel margins around the design and 10-pixel margins between
    blocks. Verify that the **Image: View > Snap to Guides** option is checked so
    you can use the Rectangle Select tool to select a block and fill it. Use a middle-range
    gray (#808080) to fill the blocks. [Figure 8-2](ch08s01.html#using_guides "Figure 8-2. Using
    guides") shows the result.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Being able to change the color of a block with one click makes color prototyping
    faster. To set this up, build a rectangular outline around each block:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new transparent layer, and place it at the top of the layers stack.
    It will contain all the block outlines.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the Rectangle Select tool, and draw a rectangle using the guides.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Select **Image: Edit > Stroke Selection**. In the dialog that opens, choose
    to stroke a line in a solid color with a width of 2 pixels. Choose a color that
    contrasts with your design.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Repeat these steps for each of the six blocks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding Color
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To colorize a block, use the Bucket Fill tool in the transparent layer you created.
    From the Bucket Fill options, select FILL SIMILAR COLORS and uncheck SAMPLE MERGED.
    When you click inside a block, only that block is filled because the Bucket Fill
    tool fills only contiguous areas of the same color, and the outline surrounding
    the block is a different color. You can then build new layers with different colors
    and hide various layers to reveal the different options. If you click outside
    of any block, your color fills the margins of the layout, which is considered
    the background of the page you’re building.
  prefs: []
  type: TYPE_NORMAL
- en: Always be aware of the margins, header and footer height, and column width.
    Changing any of these can drastically alter the feel of the design.
  prefs: []
  type: TYPE_NORMAL
- en: '![Monochrome test](httpatomoreillycomsourcenostarchimages1455090.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-3. Monochrome test
  prefs: []
  type: TYPE_NORMAL
- en: Choosing a Color Palette
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Next, choose a color palette for the website. You can choose a palette in several
    ways: Pick colors using the Color chooser, use the eye dropper to pick colors
    from a photo or an illustration that will be included in the design, or browse
    through palette collections that other people have designed. With GNU/Linux, you
    can use the `Agave` color scheme generator.'
  prefs: []
  type: TYPE_NORMAL
- en: For this website, we want a palette that includes red, orange, yellow, green,
    and brown. These colors seem bright and energetic, which is the feeling we want
    for our website. Choose at least one deep color and one soft color to add contrast
    to the design. Alternatively, start with a monochrome palette, and add different
    hues when the design looks good in black and white.
  prefs: []
  type: TYPE_NORMAL
- en: For our site, we first try a mid-dark background with bright blocks, as shown
    in [Figure 8-3](ch08s01.html#monochrome_test "Figure 8-3. Monochrome test"). The
    header and footer blend into the background, so we need bright text colors to
    make them readable. We add placeholder titles to see how text will look in this
    design. We start with a neutral font (`Sans`), with a size of 80 pixels for the
    main heading and 36 pixels for the subheading.
  prefs: []
  type: TYPE_NORMAL
- en: In the final website, header titles can either be text or an image. Text is
    nice because the reader (and search engines) can interact with it, but you need
    to choose a web-safe font, so your choices are limited. Note you’ll need to make
    the titles readable for vision-impaired viewers by adding the proper tags in the
    HTML file.
  prefs: []
  type: TYPE_NORMAL
- en: '![One color added](httpatomoreillycomsourcenostarchimages1455092.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-4. One color added
  prefs: []
  type: TYPE_NORMAL
- en: '![Two colors added](httpatomoreillycomsourcenostarchimages1455094.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-5. Two colors added
  prefs: []
  type: TYPE_NORMAL
- en: 'Now add colors: We add a deep green in the background to remind viewers of
    vegetables and nature (to convey the “healthy” feeling). See the result in [Figure 8-4](ch08s01.html#one_color_added
    "Figure 8-4. One color added"). Then, we fill the content blocks with a neutral
    pale yellow, which looks nice with the green but isn’t too distracting. The result
    is shown in [Figure 8-5](ch08s01.html#two_colors_added "Figure 8-5. Two colors
    added"). To make the side menus more colorful, we use orange, to complement the
    green and yellow, as shown in [Figure 8-6](ch08s01.html#three_colors_added "Figure 8-6. Three
    colors added").'
  prefs: []
  type: TYPE_NORMAL
- en: The design has enough contrast, but it lacks energy. We need more bright colors.
    We can add color to the header, to the illustrations that will decorate the page,
    or to action buttons like “Buy now” or “Register”. We decide to color the header
    a really bright orange, as you can see in [Figure 8-7](ch08s01.html#four_colors_added
    "Figure 8-7. Four colors added").
  prefs: []
  type: TYPE_NORMAL
- en: '![Three colors added](httpatomoreillycomsourcenostarchimages1455096.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-6. Three colors added
  prefs: []
  type: TYPE_NORMAL
- en: '![Four colors added](httpatomoreillycomsourcenostarchimages1455098.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-7. Four colors added
  prefs: []
  type: TYPE_NORMAL
- en: Next we add one more bright color. Bright yellow could fit, but bright lime
    green is even better as it looks nice with the dark green in the background. This
    website doesn’t have any big action buttons, but we want new users to be drawn
    to the block that describes the website’s strong points and its services. We color
    that block bright lime green so it stands out. [Figure 8-8](ch08s01.html#five_colors_added
    "Figure 8-8. Five colors added") shows the result, and our palette is shown in
    [Figure 8-9](ch08s01.html#final_palette_for_the_website "Figure 8-9. Final palette
    for the website").
  prefs: []
  type: TYPE_NORMAL
- en: 'This palette was built using the Color chooser: The first color (green) has
    an HSV value of (75, 100, 50); the second color (orange) is HSV (30, 100, 100);
    the third color (the darker yellow) is (44, 62, 100); the fourth color (the lighter
    yellow) is (60, 30, 100); the fifth color (a yellow-green) is (75, 50, 100). The
    H channel (the first number) determines the general hue; the S channel (the second
    number) determines whether the color is saturated or pastel; and the V channel
    (the last number) determines whether it’s light or dark.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Five colors added](httpatomoreillycomsourcenostarchimages1455100.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-8. Five colors added
  prefs: []
  type: TYPE_NORMAL
- en: '![Final palette for the website](httpatomoreillycomsourcenostarchimages1455102.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-9. Final palette for the website
  prefs: []
  type: TYPE_NORMAL
- en: 'Save this palette in the Palettes dockable dialog (**Image: Windows > Dockable
    Dialogs**). Create a new palette by clicking the second button from left in the
    bottom row. In the Palette Editor, add colors to your palette from the current
    foreground or background color, edit a color, or delete it.'
  prefs: []
  type: TYPE_NORMAL
- en: To use the new palette, click the color you want in the Palette Editor to set
    the foreground color or ![](httpatomoreillycomsourcenostarchimages1453844.png.jpg)-click
    to set the background color.
  prefs: []
  type: TYPE_NORMAL
- en: We liven up the page by adding illustrations as new layers with transparent
    backgrounds. The result is shown in [Figure 8-10](ch08s01.html#illustrations_added
    "Figure 8-10. Illustrations added").
  prefs: []
  type: TYPE_NORMAL
- en: Now we do some fine-tuning. We adjust the font to make the header more attractive
    and shrink the footer because it takes up too much space. [Figure 8-11](ch08s01.html#with_a_new_font_and_a_smaller_footer
    "Figure 8-11. With a new font and a smaller footer") shows the new layout.
  prefs: []
  type: TYPE_NORMAL
- en: 'The blocks look a little cramped, so we add white margins around them, as shown
    in [Figure 8-12](ch08s01.html#with_white_margins "Figure 8-12. With white margins").
    To create the margins, add a layer below the blocks, create a rectangular selection
    around the blocks, increase it by 10 pixels (**Image: Select > Grow**), and fill
    it with white.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Illustrations added](httpatomoreillycomsourcenostarchimages1455104.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-10. Illustrations added
  prefs: []
  type: TYPE_NORMAL
- en: '![With a new font and a smaller footer](httpatomoreillycomsourcenostarchimages1455106.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-11. With a new font and a smaller footer
  prefs: []
  type: TYPE_NORMAL
- en: The margins around the blocks are barely visible, so we widen them from 10 pixels
    to 20 pixels, as shown in [Figure 8-13](ch08s01.html#bigger_margins "Figure 8-13. Bigger
    margins"). This time we want to shrink the blocks and move the guides 10 pixels
    toward the center of each block. We create a selection that’s 10 pixels in from
    the current edges of the block by following the guides, invert the selection to
    select only the outer 10 pixels of the block, and then cut the selection to reveal
    more white border.
  prefs: []
  type: TYPE_NORMAL
- en: '![With white margins](httpatomoreillycomsourcenostarchimages1455108.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-12. With white margins
  prefs: []
  type: TYPE_NORMAL
- en: '![Bigger margins](httpatomoreillycomsourcenostarchimages1455110.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-13. Bigger margins
  prefs: []
  type: TYPE_NORMAL
- en: 8.2 Fixed- and Variable-Width Designs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When creating a website, you can decide whether the size of the browser window
    affects the size of the page. A *fixed-width design* remains at a constant width
    (in pixels) regardless of the browser width. If the browser window is larger than
    the page width, borders appear. Fixed-width designs are generally centered, so
    a border appears to the left and to the right of the design. If the browser window
    is smaller than the page width, only part of the page is visible, and a horizontal
    scrollbar appears.
  prefs: []
  type: TYPE_NORMAL
- en: A *variable-width design* (also called *liquid design*) changes width with the
    browser width, and at least one section of the design (usually, the main content
    block) is resized along with the browser window. Creating a design that will look
    good with any browser width is difficult, especially now that browsers can be
    very small (for handheld devices) or very large (for huge movie screens).
  prefs: []
  type: TYPE_NORMAL
- en: '![The Image Map dialog](httpatomoreillycomsourcenostarchimages1455112.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-14. The Image Map dialog
  prefs: []
  type: TYPE_NORMAL
- en: Variable-width designs can fill a variety of screens, unlike fixed-width designs
    that leave empty space or add a scrollbar. Fixed-width designs allow better readability,
    unlike variable-width designs whose content may be squeezed into a tiny column
    or expanded into long lines that are hard to read. On the other hand, fixed-width
    designs also give you more control over the layout, image placement, and column
    length.
  prefs: []
  type: TYPE_NORMAL
- en: To prototype a fixed-width design with GIMP, create a new image with the chosen
    width. Its height can be the minimum browser height, or it can be larger if users
    will need to scroll down to see the footer. If you’re prototyping a variable-width
    web page, you can choose any width and height. If some of the elements on the
    page will change size, while others remain fixed, you may want to create several
    prototypes of various widths to see how the elements look together as the page
    is resized.
  prefs: []
  type: TYPE_NORMAL
- en: 8.3 Web Design Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Although GIMP wasn’t designed for web development or design, it does include
    some useful tools for preparing images for the Web, including two found in the
    **Image: Filter > Web** menu, which let you delimit areas in an image so you can
    make something happen when a visitor clicks or hovers over those areas. This menu
    also contains a tool for handling GIF images.'
  prefs: []
  type: TYPE_NORMAL
- en: Image Map
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Image: Filters > Web > Image Map** uses an image to build a clickable map
    that you can integrate into a web page. The map is divided into non-overlapping
    regions, and a link is attached to each region. When users click in one of the
    regions, they are taken to the corresponding link.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Area Settings dialog, Link tab](httpatomoreillycomsourcenostarchimages1455114.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-15. The Area Settings dialog, Link tab
  prefs: []
  type: TYPE_NORMAL
- en: 'The Image Map dialog, shown in [Figure 8-14](ch08s02.html#image_map_dialog
    "Figure 8-14. The Image Map dialog"), has two main regions: the source of the
    image map displayed on the left, and the URLs attached to regions of the image
    displayed on the right. The dialog also has a row of buttons at the top for editing
    the defined area and columns of buttons along both sides of the image preview.
    The left column contains buttons for selecting and defining areas and editing
    information linked to an area. The right column contains buttons for moving, editing,
    or deleting information linked to an area. To create the image map, click one
    of the three blue buttons defining a geometric shape, draw the shape on the image,
    and then attach a URL to it.'
  prefs: []
  type: TYPE_NORMAL
- en: To draw a rectangle or a circle, click and drag to create the shape and then
    click once more to complete the shape. To draw a polygon, click at each vertex
    and double-click to place the final point and complete the shape. Once the shape
    is complete, a dialog similar to the one shown in [Figure 8-15](ch08s03.html#area_settings_dialogcomma_link_tab
    "Figure 8-15. The Area Settings dialog, Link tab") appears. Choose the link type
    and then enter or paste in the link address. You can either use an absolute address
    beginning with `http://` or a relative address that is an internal link within
    your website. You can also enter ALT TEXT to display when the mouse hovers over
    the link and in the event the link doesn’t work.
  prefs: []
  type: TYPE_NORMAL
- en: The second tab of the Area Settings dialog varies depending on the shape of
    the map. Here you can change some of the coordinates manually. [Figure 8-16](ch08s03.html#area_settings_dialogcomma_polygon_tab
    "Figure 8-16. The Area Settings dialog, Polygon tab") shows the dialog for a polygon.
    The third tab, not shown, can be used to define JavaScript sequences and link
    them to specific events.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Area Settings dialog, Polygon tab](httpatomoreillycomsourcenostarchimages1455116.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-16. The Area Settings dialog, Polygon tab
  prefs: []
  type: TYPE_NORMAL
- en: '![Access one Tools menu by right-clicking in the Image Map dialog.](httpatomoreillycomsourcenostarchimages1455118.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-17. Access one Tools menu by right-clicking in the Image Map dialog.
  prefs: []
  type: TYPE_NORMAL
- en: Image Map Tools
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One TOOLS menu is accessed by clicking the triangle button at the top left of
    the another is accessed by right-clicking in the Image Map dialog while the pointer
    is active ([Figure 8-17](ch08s03.html#access_one_tools_menu_by_right-clicking
    "Figure 8-17. Access one Tools menu by right-clicking in the Image Map dialog.")).
    Although these menus have the same name, they contain different entries. The first
    Tools menu is for handling the grid and the guides, whereas the second Tools menu
    contains the four tools also found in the left column of the Image Map dialog
    and in the MAPPING menu in the menu bar.
  prefs: []
  type: TYPE_NORMAL
- en: The Arrow tool, which appears as an arrow on the left side of the dialog, allows
    you to select an area that you’ve already defined and move or resize it. The Edit
    tool allows you to change the parameters associated with the selected area. You
    can also select the link from the list on the right side of the dialog to select
    the corresponding area.
  prefs: []
  type: TYPE_NORMAL
- en: '![Six areas have been defined.](httpatomoreillycomsourcenostarchimages1455120.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-18. Six areas have been defined.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 8-18](ch08s03.html#six_areas_have_been_defineddot "Figure 8-18. Six
    areas have been defined.") shows a map of Provence-Alpes-Côte-d’Azur, with six
    areas corresponding to French *départements* outlined and associated with appropriate
    URLs. If you click one of the shapes while the pointer tool is active, that shape
    is selected, and you can change the vertices. You can edit the information associated
    with a shape by double-clicking the URL in the right column or by clicking the
    Edit button in either of the two columns.'
  prefs: []
  type: TYPE_NORMAL
- en: Useful Image Map Dialogs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Selecting **Edit > Preferences** opens the dialog shown in [Figure 8-19](ch08s03.html#image_map_preferences
    "Figure 8-19. Image Map preferences"), which has three tabs. Here, you can set
    various parameters that adjust the filter interface or the HTML page you are building.
    On the Menu tab, you can change the number of undo levels or the colors used in
    the tool dialog, for example.
  prefs: []
  type: TYPE_NORMAL
- en: The grid can be toggled on and off via **Tools > Grid**, and selecting **Tools
    > Grid Settings** opens the dialog shown in [Figure 8-20](ch08s03.html#grid_settings_dialog
    "Figure 8-20. The Grid Settings dialog"), where you can set the grid’s characteristics.
    The Image Map grid is similar to the grid used in the Image window, discussed
    in [Chapter 10](ch10.html "Chapter 10. Display").
  prefs: []
  type: TYPE_NORMAL
- en: '![Image Map preferences](httpatomoreillycomsourcenostarchimages1455122.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-19. Image Map preferences
  prefs: []
  type: TYPE_NORMAL
- en: Selecting **Tools > Create Guides** opens the dialog shown in [Figure 8-21](ch08s03.html#create_guides_dialog
    "Figure 8-21. The Create Guides dialog"). The guides delimit a predefined number
    of rectangles to which links can be associated. The guides help you to draw a
    simple map quickly. Note the default number of rectangles is zero, and if you
    don’t change this number the tools will have no effect.
  prefs: []
  type: TYPE_NORMAL
- en: Selecting **Tools > Use GIMP Guides** produces a result similar to that produced
    by the Slice filter, discussed shortly.
  prefs: []
  type: TYPE_NORMAL
- en: When you save the image map (by selecting **File > Save**, pressing ![](httpatomoreillycomsourcenostarchimages1453858.png.jpg),
    or clicking the SAVE button), the filter generates a file with a `.map` suffix.
    This HTML file contains the `<img>` tag for loading the image and the corresponding
    `<map>` tag with definitions of all the `<area>` tags. Note that the generated
    file does not necessarily contain the name of the image file to which it refers.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Grid Settings dialog](httpatomoreillycomsourcenostarchimages1455124.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-20. The Grid Settings dialog
  prefs: []
  type: TYPE_NORMAL
- en: '![The Create Guides dialog](httpatomoreillycomsourcenostarchimages1455126.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-21. The Create Guides dialog
  prefs: []
  type: TYPE_NORMAL
- en: Semi-Flatten
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Image: Filters > Web > Semi-Flatten** has no dialog. It simulates antialiasing
    in a GIF image displayed on a web page.'
  prefs: []
  type: TYPE_NORMAL
- en: Antialiasing smooths the edges of an object by making pixels along the boundary
    semitransparent, as shown in [Figure 8-22](ch08s03.html#initial_image-id00082
    "Figure 8-22. Initial image"). Because GIF encoding can only represent 0% transparency
    or 100% transparency, you can’t use anti-aliasing. You could use PNG instead of
    GIF, but some browsers don’t handle PNG encoding properly. As a way to simulate
    semitransparency, the Semi-Flatten filter creates pixels that contain a blend
    of the foreground color and the background color along the edge of the image.
    To use Semi-Flatten, set the background color to that of the web page background.
    [Figure 8-23](ch08s03.html#after_semi-flattening "Figure 8-23. After semi-flattening")
    shows the result when the background color is a deep pink.
  prefs: []
  type: TYPE_NORMAL
- en: '![Initial image](httpatomoreillycomsourcenostarchimages1455128.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-22. Initial image
  prefs: []
  type: TYPE_NORMAL
- en: '![After semi-flattening](httpatomoreillycomsourcenostarchimages1455130.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-23. After semi-flattening
  prefs: []
  type: TYPE_NORMAL
- en: Slice
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Image: Filters > Web > Slice** is another tool that lets you split an image
    into sections. Suppose you want to display a large rectangular image on a web
    page. The image will be cut into smaller rectangular fragments along a grid. Slice
    lets you choose to display only some of these fragments or to change their appearance
    when the mouse pointer hovers over them. Slice also lets you set fragments to
    trigger some specific action when clicked.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The image to be cut into pieces](httpatomoreillycomsourcenostarchimages1455132.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-24. The image to be cut into pieces
  prefs: []
  type: TYPE_NORMAL
- en: '![Guides for slicing](httpatomoreillycomsourcenostarchimages1455134.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-25. Guides for slicing
  prefs: []
  type: TYPE_NORMAL
- en: For example, say we want to use the image shown in [Figure 8-24](ch08s03.html#image_to_be_cut_into_pieces
    "Figure 8-24. The image to be cut into pieces") as a background for an HTML table.
    We define areas that correspond to the squares in the table, using a grid that
    covers the entire image.
  prefs: []
  type: TYPE_NORMAL
- en: Drag new guides from the image sides to the places where you want to make a
    slice. The result is shown in [Figure 8-25](ch08s03.html#guides_for_slicing "Figure 8-25. Guides
    for slicing").
  prefs: []
  type: TYPE_NORMAL
- en: 'Click **Image: Filters > Web > Slice** to finish the job. The image is sliced
    into several pieces, and a file with the `.html` suffix is created that contains
    the code for the HTML table. You can add the contents of this file to the code
    of your web page. You’ll also need to include the image fragments wherever you
    keep the web page’s image files.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Options for the files generated by Slice](httpatomoreillycomsourcenostarchimages1455136.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-26. Options for the files generated by Slice
  prefs: []
  type: TYPE_NORMAL
- en: The options dialog that appears, shown in [Figure 8-26](ch08s03.html#options_for_the_files_generated_by_slice
    "Figure 8-26. Options for the files generated by Slice"), lets you choose the
    various parameters of the generated files and of the images built from the slices
    in the initial image. You can name the HTML file, choose where to store it, and
    enter a prefix and format for the separate cell files, as well as the location
    where they will be stored. If there are spaces between the images, the web page
    background will show through. A JavaScript snippet may be called when the mouse
    is on a cell, but you can choose to freeze the border cells so they can’t be selected
    or changed.
  prefs: []
  type: TYPE_NORMAL
- en: 8.4 Optimizing Images for the Web
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The three formats best suited to the Web are JPEG, PNG, and GIF. These file
    formats can be handled by all the major browsers, with some restrictions in the
    case of Internet Explorer. These formats use compression algorithms to decrease
    the size of the file, which increases the page’s download speed. Even though high-speed
    Internet access is common, users who still have a slow connection will appreciate
    any attempt to minimize the size of image files.
  prefs: []
  type: TYPE_NORMAL
- en: Here we summarize the most important aspects of these three formats, and in
    [Chapter 20](ch20.html "Chapter 20. Image Formats"), we go into much more detail.
  prefs: []
  type: TYPE_NORMAL
- en: JPEG
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The JPEG format is the best suited for photos due to its 24-bit color depth,
    which lets it render a large number of colors. JPEG is also good for rendering
    gradients, which are sometimes poorly rendered by the GIF format. The JPEG compression
    algorithm reduces the image size and results in a slight loss in detail and color.
    The loss is cumulative, so the more the image is compressed, the worse it looks.
  prefs: []
  type: TYPE_NORMAL
- en: When exporting a file to JPEG format, you can choose a quality level. The higher
    the quality, the larger the file. If you check SHOW PREVIEW IN IMAGE WINDOW, a
    preview of the image with that quality setting appears as a new layer. Under ADVANCED
    OPTIONS, OPTIMIZE lets you add additional compression. The expanded JPEG Export
    dialog is shown in [Figure 8-27](ch08s04.html#export_image_as_jpeg_dialog "Figure 8-27. The
    Export Image as JPEG dialog").
  prefs: []
  type: TYPE_NORMAL
- en: GIF
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: GIF is the oldest and the most limited file format. GIF can only represent up
    to 256 colors, so it’s best suited for simple images with few colors. GIF is commonly
    used (and well suited) for small animations like the ones described in [Chapter 18](ch18.html
    "Chapter 18. Animation Tools").
  prefs: []
  type: TYPE_NORMAL
- en: One way to optimize an image in GIF format is to reduce the number of colors
    in the palette. Begin with 8 colors and then double this number until you’re happy
    with the result. If you get to 256 colors and are still not satisfied, try using
    a different format. Dithering, which can smooth the image, also increases its
    size.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Export Image as JPEG dialog](httpatomoreillycomsourcenostarchimages1455138.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-27. The Export Image as JPEG dialog
  prefs: []
  type: TYPE_NORMAL
- en: PNG
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PNG is, in theory, a versatile format, with 24-bit mode for photographs and
    8-bit mode for images with fewer colors. In practice, the 24-bit mode results
    in files that are too large for the Web, so JPEG is a better choice. The 8-bit
    mode gives better results than GIF in terms of file size, but PNG is not well
    supported by Internet Explorer.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can optimize an 8-bit PNG file using the methods described for GIF: Limit
    the colors and avoid dithering.'
  prefs: []
  type: TYPE_NORMAL
- en: Transparency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Transparency can be handy when you’re building a website because it allows you
    to place graphics of any shape against the background easily. But no file format
    handles transparency perfectly. The GIF format represents transparency with only
    1 bit, so a pixel is either completely opaque or completely transparent. The PNG
    format can represent transparency using 1 to 8 bits. Although all modern browsers
    support 8-bit transparency in PNG, many people still use obsolete versions of
    Internet Explorer, which don’t support 8-bit transparency. The JPEG format can’t
    represent transparency at all.
  prefs: []
  type: TYPE_NORMAL
- en: '![Two logos on a web page](httpatomoreillycomsourcenostarchimages1455140.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-28. Two logos on a web page
  prefs: []
  type: TYPE_NORMAL
- en: '![The PNG logo zoomed in](httpatomoreillycomsourcenostarchimages1455142.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-29. The PNG logo zoomed in
  prefs: []
  type: TYPE_NORMAL
- en: If you want to use a round logo and you make the background transparent using
    1 bit, the pixels along the edge of the circle will be either fully opaque or
    fully transparent, so the outline will look jagged and pixelated. If you fill
    the logo background with the web page’s background color and then smooth the edges,
    the edges will be a mix of the logo color and the background color, which looks
    better but makes changing the background color of the web page more difficult.
    If you use 8-bit transparency, the edge is smooth, and you can easily change the
    background color.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 8-28](ch08s04.html#two_logos_on_a_web_page "Figure 8-28. Two logos
    on a web page") shows two logos on a web page. With this zooming factor, the difference
    is not very visible. [Figure 8-29](ch08s04.html#png_logo_zoomed_in "Figure 8-29. The
    PNG logo zoomed in") and [Figure 8-30](ch08s04.html#gif_logo_zoomed_in "Figure 8-30. The
    GIF logo zoomed in") demonstrate the difference more clearly.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The GIF logo zoomed in](httpatomoreillycomsourcenostarchimages1455144.png.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-30. The GIF logo zoomed in
  prefs: []
  type: TYPE_NORMAL
- en: 8.5 Exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Exercise 8.1.** Download all the files from the 960 Grid System website (*http://960.gs/*).
    Unpack them in a folder. From the `sketch_sheets` subfolder, select and print
    the sketch sheet you prefer. Using this sheet, design the layout of a website
    to your taste, creating something different from what the tutorial suggests. Then
    open the proper template in GIMP, found in the `templates/gimp` subfolder, and
    fill it with blocks, using your sketch sheet as a model and the template guides
    to place the blocks correctly.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise 8.2.** On the book’s website, in the files for this chapter, you’ll
    find a file called `tutorial.xcf`. This file was used to build the example web
    page shown in [Figure 8-3](ch08s01.html#monochrome_test "Figure 8-3. Monochrome
    test") to [Figure 8-13](ch08s01.html#bigger_margins "Figure 8-13. Bigger margins").
    Open the file in GIMP and experiment with different colors, images, and fonts
    to customize the design.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise 8.3.** Create a map from one of your own images. Link URLs to the
    various areas, and add text that visitors will see if they mouse over an area.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise 8.4.** Export one of your images as JPEG, GIF, and PNG using the
    optimization techniques described in [8.4 Optimizing Images for the Web](ch08s04.html
    "8.4 Optimizing Images for the Web"). Each time, try to make the file as small
    as possible while maintaining an acceptable level of quality. Compare the results.'
  prefs: []
  type: TYPE_NORMAL
