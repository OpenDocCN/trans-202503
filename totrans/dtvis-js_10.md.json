["```\nRunning.Collections.Runs = Backbone.Collection.extend({\n\n    sync: **function**(method, collection, options) {\n        *// Handle the AJAX request*\n    }\n```", "```\nsync: **function**(method, collection, options) {\n    options = options || {};\n    _(options).extend({\n        data: { authorization_token: **this**.settings.authorization_token }\n    });\n    Backbone.sync(method, collection, options);\n}\n```", "```\nRunning.Collections.Runs = Backbone.Collection.extend({\n\n    initialize: **function**(models, options) {\n        **this**.settings = { authorization_token: \"\" };\n        options = options || {};\n        _(**this**.settings).extend(_(options)\n            .pick(_(**this**.settings).keys()));\n    },\n```", "```\n**var** runs = **new** Running.Collections.Runs([], {\n    authorization_token: \"authorize me\"\n});\n```", "```\n[\n  { \"activityId\": \"2126456911\", */* Data continues... */* },\n  { \"activityId\": \"2125290225\", */* Data continues... */* },\n  { \"activityId\": \"2124784253\", */* Data continues... */* },\n  *// Data set continues...*\n]\n```", "```\n{\n  \"data\": [\n    { \"activityId\": \"2126456911\", */* Data continues... */* },\n    { \"activityId\": \"2125290225\", */* Data continues... */* },\n    { \"activityId\": \"2124784253\", */* Data continues... */* },\n    *// Data set continues...*\n  ],\n  *// Response continues...*\n}\n```", "```\nRunning.Collections.Runs = Backbone.Collection.extend({\n\n    parse: **function**(response) {\n        **return** response.data;\n    },\n```", "```\nsync: **function**(method, collection, options) {\n    options = options || {};\n    _(options).extend({\n        data: {\n            authorization_token: **this**.settings.authorization_token,\n            count: **this**.settings.count,\n            offset: **this**.settings.offset\n        }\n    });\n    Backbone.sync(method, collection, options);\n}\n```", "```\ninitialize: **function**(models, options) {\n    **this**.settings = {\n        authorization_token: \"\",\n        count: 25,\n        offset: 1\n    };\n```", "```\ninitialize: **function**(models, options) {\n    **this**.settings = {\n        authorization_token: \"\",\n        count: 25,\n        offset: 1,\n        max: 10000\n    };\n```", "```\nRunning.Collections.Runs = Backbone.Collection.extend({\n\n    fetch: **function**(options) {\n        **this**.fetchoptions = options = options || {};\n        _(**this**.fetchoptions).extend({ success: **this**.fetchMore });\n        **return** Backbone.Collection.prototype.fetch.call(\n            **this**, **this**.fetchoptions\n        );\n    },\n```", "```\nfetchMore: **function**() {\n    **if** (**this**.settings.offset < **this**.settings.max) {\n        Backbone.Collection.prototype.fetch.call(**this**, **this**.fetchoptions);\n    }\n}\n```", "```\nparse: **function**(response) {\n    **if** (response.data.length < **this**.settings.count) {\n        **this**.settings.offset = **this**.settings.max;\n    } **else** {\n        **this**.settings.offset += **this**.settings.count;\n    }\n    **return** response.data;\n}\n```", "```\nfetch: **function**(options) {\n    **this**.fetchoptions = options = options || {};\n    _(**this**.fetchoptions).extend({\n        success: **this**.fetchMore,\n        remove: **true**\n     });\n    **return** Backbone.Collection.prototype.fetch.call(**this**,\n        **this**.fetchoptions\n    );\n}\n```", "```\nfetchMore: **function**() {\n    **this**.fetchoptions.remove = **false**;\n    **if** (**this**.settings.offset < **this**.settings.max) {\n        Backbone.Collection.prototype.fetch.call(**this**, **this**.fetchoptions);\n    }\n}\n```", "```\ninitialize: **function**(models, options) {\n    _.bindAll(**this**, \"fetchMore\");\n```", "```\nfetch: **function**(options) {\n    **this**.fetchoptions = options = options || {};\n    **this**.fetchsuccess = options.success;\n    _(**this**.fetchoptions).extend({\n        success: **this**.fetchMore,\n        remove: **true**\n        });\n    **return** Backbone.Collection.prototype.fetch.call(**this**,\n        **this**.fetchoptions\n    );\n}\n```", "```\nfetchMore: **function**() {\n    **this**.fetchoptions.remove = **false**;\n    **if** (**this**.settings.offset < **this**.settings.max) {\n        Backbone.Collection.prototype.fetch.call(**this**, **this**.fetchoptions);\n    } **else** **if** (**this**.fetchsuccess) {\n        **this**.fetchsuccess();\n    }\n}\n```", "```\ninitialize: **function** () {\n    **this**.listenTo(**this**.collection, \"change\", **this**.render);\n    **return** **this**;\n}\n```", "```\ninitialize: **function** () {\n    **this**.listenTo(**this**.collection, \"add\", **this**.renderRun);\n    **return** **this**;\n}\n```", "```\nRunning.Models.Run = Backbone.Model.extend({\n    validate: **function**(attributes, options) {\n        **if** (attributes.activityType.toUpperCase() !== \"RUN\") {\n            **return** \"Not a run\";\n        }\n    },\n```", "```\nRunning.Collections.Runs = Backbone.Collection.extend({\n    fetch: **function**(options) {\n        **this**.fetchoptions = options = options || {};\n        **this**.fetchsuccess = options.success;\n        _(**this**.fetchoptions).extend({\n            success: **this**.fetchMore,\n            remove: **true**,\n            validate: **true**\n          });\n        **return** Backbone.Collection.prototype.fetch.call(**this**,\n          **this**.fetchoptions\n        );\n    },\n```", "```\nRunning.Models.Run = Backbone.Model.extend({\n    idAttribute: \"activityId\",\n```", "```\nrun.fetch();\n```", "```\n   Running.Models.Run = Backbone.Model.extend({\n       sync: **function**(method, model, options) {\n           options = options || {};\n           _(options).extend({\n               data: {\n                   authorization_token:\n➊                     **this**.collection.settings.authorization_token\n               }\n           });\n           Backbone.sync(method, model, options);\n       },\n```", "```\nRunning.Views.Details = Backbone.View.extend({\n    initialize: **function** () {\n        **if** (!**this**.model.get(\"metrics\") ||\n            **this**.model.get(\"metrics\").length === 0) {\n            **this**.model.fetch();\n        }\n    },\n```", "```\nRunning.Views.Charts = Backbone.View.extend({\n    initialize: **function** () {\n        **this**.listenTo(**this**.model,\n            \"change:metrics change:gps\", **this**.render);\n        *// Code continues...*\n```", "```\nRunning.Models.Run = Backbone.Model.extend({\n    fetch: **function**(options) {\n        **if** (**this**.get(\"isGpsActivity\")) {\n            *// Request GPS details from the server*\n        }\n        **return** Backbone.Model.prototype.fetch.call(**this**, options);\n     },\n```", "```\n**if** (**this**.get(\"isGpsActivity\")) {\n    **var** model = **this**;\n    $.getJSON(\n        **this**.url() + \"/gps\",\n        { authorization_token:\n          **this**.collection.settings.authorization_token },\n        **function**(data) { model.set(\"gps\", data); }\n    );\n}\n```", "```\n$ **yo** backbone:router app\n   **create** app/scripts/routes/app.js\n   **invoke**   backbone-mocha:router\n   **create**     test/routers/app.spec.js\n```", "```\nRunning.Routers.App = Backbone.Router.extend({\n    routes: {\n        \"\":         \"summary\",\n        \"runs/:id\": \"details\"\n    },\n});\n```", "```\nsummary: **function**() {\n    **this**.runs = **new** Running.Collections.Runs([],\n        {authorizationToken: \"authorize me\"});\n    **this**.runs.fetch();\n    **this**.summaryView = **new** Running.Views.Summary({collection: **this**.runs});\n    $(\"body\").html(**this**.summaryView.render().el);\n},\n```", "```\ndetails: **function**(id) {\n    **this**.run = **new** Running.Models.Run();\n    **this**.run.id = id;\n    **this**.run.fetch();\n    **this**.detailsView = **new** Running.Views.Details({model: **this**.run});\n    $(\"body\").html(**this**.detailsView.render().el);\n    },\n```", "```\nRunning.Routers.App = Backbone.Router.extend({\n    initialize: **function**() {\n        Backbone.history.start({pushState: **true**});\n    },\n```", "```\n    Running.Routers.App = Backbone.Router.extend({\n       routes: {\n           \"\":         \"summary\",\n           \"runs/:id\": \"details\"\n       },\n       initialize: **function**(options) {\n           **this**.options = options;\n           Backbone.history.start({pushState: **true**});\n       },\n       summary: **function**() {\n           **this**.runs = **new** Running.Collections.Runs([],\n➊             {authorizationToken: **this**.options.token});\n           **this**.runs.fetch();\n           **this**.summaryView = **new** Running.Views.Summary({\n               collection: **this**.runs});\n           $(\"body\").html(**this**.summaryView.render().el);\n       },\n       details: **function**(id) {\n           **this**.run = **new** Running.Models.Run({},\n➋             {authorizationToken: **this**.options.token});\n           **this**.run.id = id;\n           **this**.run.fetch();\n           **this**.detailsView = **new** Running.Views.Details({\n               model: **this**.run});\n           $(\"body\").html(**this**.detailsView.render().el);\n   });\n```", "```\nRunning.Models.Run = Backbone.Model.extend({\n    initialize: **function**(attrs, options) {\n        **this**.settings = { authorization_token: \"\" };\n        options = options || {};\n        **if** (**this**.collection) {\n            _(**this**.settings).extend(_(**this**.collection.settings)\n                .pick(_(**this**.settings).keys()));\n        }\n        _(**this**.settings).extend(_(options)\n            .pick(_(**this**.settings).keys()));\n},\n```", "```\nurlRoot: \"https://api.nike.com/v1/me/sport/activities\",\n\nsync: **function**(method, model, options) {\n    options = options || {};\n    _(options).extend({\n        data: { authorization_token: **this**.settings.authorization_token }\n    });\n    Backbone.sync(method, model, options);\n},\n```", "```\nfetchGps: **function**() {\n    **if** (**this**.get(\"isGpsActivity\") && !**this**.get(\"gps\")) {\n        **var** model = **this**;\n        $.getJSON(\n            **this**.url() + \"/gps\",\n            { authorization_token: **this**.settings.authorization_token },\n            **function**(data) { model.set(\"gps\", data); }\n        );\n    }\n}\n```", "```\ninitialize: **function**(attrs, options) {\n    **this**.on(\"change\", **this**.fetchGps, **this**);\n```", "```\nRunning.Views.SummaryRow = Backbone.View.extend({\n    events: {\n        \"click\": \"clicked\"\n    },\n    clicked: **function**() {\n        *// Do something to show the Details view for this.model*\n    },\n```", "```\nRunning.Views.Summary = Backbone.View.extend({\n    events: {\n        \"click tbody\": \"clicked\"\n    },\n```", "```\nrenderRun: **function** (run) {\n    **var** row = **new** Running.Views.SummaryRow({ model: run });\n    row.render();\n    row.$el.attr(\"data-id\", run.id);\n    **this**.$(\"tbody\").append(row.$el);\n},\n```", "```\n**<tr** data-id=\"2126456911\"**>**\n    **<td>**04/09/2013**</td>**\n    **<td>**0:22:39**</td>**\n    **<td>**2.33 Miles**</td>**\n    **<td>**240**</td>**\n    **<td>**9:43**</td>**\n**</tr>**\n```", "```\nclicked: **function** (ev) {\n    **var** $target = $(ev.target)\n```", "```\nclicked: **function** (ev) {\n    **var** $target = $(ev.target)\n    **var** id = $target.attr(\"data-id\") ||\n             $target.parents(\"[data-id]\").attr(\"data-id\");\n```", "```\nclicked: **function** (ev) {\n    **var** $target = $(ev.target)\n    **var** id = $target.attr(\"data-id\") ||\n             $target.parents(\"[data-id]\").attr(\"data-id\");\n    **this**.trigger(\"select\", id);\n}\n```", "```\nRunning.Routers.App = Backbone.Router.extend({\n    summary: **function**() {\n        **this**.runs = **new** Running.Collections.Runs([],\n            {authorizationToken: **this**.options.token});\n        **this**.runs.fetch();\n        **this**.summaryView = **new** Running.Views.Summary({\n            collection: **this**.runs});\n    $(\"body\").html(**this**.summaryView.render().el);\n    **this**.summaryView.on(\"select\", **this**.selected, **this**);\n},\n```", "```\nRunning.Routers.App = Backbone.Router.extend({\n    selected: **function**(id) {\n        **this**.navigate(\"runs/\" + id, { trigger: **true** });\n    }\n```", "```\nRunning.Views.Details = Backbone.View.extend({\n    events: {\n        \"click button\": \"clicked\"\n    },\n    clicked: **function** () {\n        **this**.trigger(\"summarize\");\n    }\n```", "```\nRunning.Routers.App = Backbone.Router.extend({\n    details: **function**(id) {\n        *// Set up the Details view*\n        *// Code continues...*\n        **this**.detailsView.on(\"summarize\", **this**.summarize, **this**);\n    },\n    summarize: **function**() {\n        **this**.navigate(\"\", { trigger: **true** });\n    },\n```", "```\nRunning.Routers.App = Backbone.Router.extend({\n    summary: **function**() {\n        **this**.runs = **new** Running.Collections.Runs([],\n            {authorizationToken: **this**.options.token});\n        **this**.runs.fetch();\n        **this**.summaryView = **new** Running.Views.Summary({\n            collection: **this**.runs});\n        $(\"body\").html(**this**.summaryView.render().el);\n        **this**.summaryView.on(\"select\", **this**.selected, **this**);\n    },\n```", "```\nsummary: **function**() {\n    **if** (!**this**.summaryView) {\n        **this**.runs = **new** Running.Collections.Runs([],\n            {authorizationToken: **this**.options.token});\n        **this**.runs.fetch();\n        **this**.summaryView = **new** Running.Views.Summary({\n            collection: **this**.runs});\n        **this**.summaryView.render();\n        **this**.summaryView.on(\"select\", **this**.selected, **this**);\n    }\n    $(\"body\").html(**this**.summaryView.el);\n},\n```", "```\ndetails: **function**(id) {\n    **if** (**this**.summaryView) {\n        **this**.summaryView.$el.detach();\n    }\n    **this**.run = **new** Running.Models.Run({},\n        {authorizationToken: **this**.options.token});\n    **this**.run.id = id;\n    **this**.run.fetch();\n    $(\"body\").html(**this**.detailsView.render().el);\n    **this**.detailsView.on(\"summarize\", **this**.summarize, **this**);\n},\n```", "```\ndetails: **function**(id) {\n    **if** (!**this**.runs || !(**this**.run = **this**.runs.get(id))) {\n        **this**.run = **new** Running.Models.Run({},\n            {authorizationToken: **this**.options.token});\n        **this**.run.id = id;\n        **this**.run.fetch();\n    }\n    **if** (**this**.summaryView) {\n        **this**.summaryView.$el.detach();\n    }\n    **this**.detailsView = **new** Running.Views.Details({model: **this**.run});\n    $(\"body\").html(**this**.detailsView.render().el);\n    **this**.detailsView.on(\"summarize\", **this**.summarize, **this**);\n},\n```", "```\nsummary: **function**() {\n    **if** (**this**.detailsView) {\n        **this**.detailsView.off(\"summarize\");\n        **this**.detailsView.remove();\n        **this**.detailsView = **null**;\n    }\n    **if** (!**this**.summaryView) {\n        **this**.runs = **new** Running.Collections.Runs([],\n            {authorizationToken: **this**.options.token});\n        **this**.runs.fetch();\n        **this**.summaryView = **new** Running.Views.Summary({\n            collection: **this**.runs});\n        **this**.summaryView.render();\n        **this**.summaryView.on(\"select\", **this**.selected, **this**);\n    }\n    $(\"body\").html(**this**.summaryView.el);\n},\n```"]