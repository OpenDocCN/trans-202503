["```\n> x <- c(5,12,13,8,88,6)\n> w <- TStoX(x,2)\n     [,1] [,2] [,3]\n[1,]    5   12   13\n[2,]   12   13    8\n[3,]   13    8   88\n[4,]    8   88    6\n```", "```\n> wd <- as.data.frame(w)\n> wd\n  V1 V2 V3\n1  5 12 13\n2 12 13  8\n3 13  8 88\n4  8 88  6\n```", "```\nqeRF(wd,'V3',holdout=NULL)\n```", "```\nqeTS(lag,data,qeName,opts=NULL,\n   holdout=floor(min(1000, 0.1 * length(data))))\n```", "```\n> eus <- EuStockMarkets  # built-in R dataset\n> tsout <- qeTS(5,eus,'qeKNN',opts=list(k=10))  # use k-NN with k = 10\n```", "```\n> data(weatherTS)\n> head(weatherTS)\n     LON       LAT YEAR MM DD DOY   YYYYMMDD  RH2M   T2M PRECTOT\n1 151.81 -27.47999 1985  1  1   1 1985-01-01 48.89 25.11    1.07\n2 151.81 -27.47999 1985  1  2   2 1985-01-02 41.78 28.42    0.50\n3 151.81 -27.47999 1985  1  3   3 1985-01-03 40.43 27.53    0.03\n4 151.81 -27.47999 1985  1  4   4 1985-01-04 46.42 24.65    0.10\n5 151.81 -27.47999 1985  1  5   5 1985-01-05 50.77 26.54    2.13\n6 151.81 -27.47999 1985  1  6   6 1985-01-06 58.57 26.81    5.32\n```", "```\n> ptot <- weatherTS$PRECTOT\n> z <- qeTS(2,ptot,'qeRF',holdout=NULL)\n> length(ptot)\n[1] 4017\n> predict(z,ptot[4016:4017])\n       2\n1.087949\n```", "```\n> qeTS(1,ptot,\"qeKNN\")$testAcc\n```", "```\n> replicMeans(1000,'qeTS(1,ptot,\"qeKNN\")$testAcc')\n[1] 2.116511\n```", "```\n> mean(abs(ptot - mean(ptot)))\n[1] 2.626195\n```", "```\n> replicMeans(1000,'qeTS(1,ptot,\"qeKNN\")$testAcc')\n[1] 2.116511\n> replicMeans(1000,'qeTS(2,ptot,\"qeKNN\")$testAcc')\n[1] 2.051895\n> replicMeans(1000,'qeTS(3,ptot,\"qeKNN\")$testAcc')\n[1] 2.033376\n> replicMeans(1000,'qeTS(4,ptot,\"qeKNN\")$testAcc')\n[1] 2.067625\n> replicMeans(1000,'qeTS(5,ptot,\"qeKNN\")$testAcc')\n[1] 2.092022\n> replicMeans(1000,'qeTS(6,ptot,\"qeKNN\")$testAcc')\n[1] 2.085409\n> replicMeans(1000,'qeTS(7,ptot,\"qeKNN\")$testAcc')\n[1] 2.093377\n> replicMeans(1000,'qeTS(8,ptot,\"qeKNN\")$testAcc')\n[1] 2.118068\n> replicMeans(1000,'qeTS(9,ptot,\"qeKNN\")$testAcc')\n[1] 2.135797\n> replicMeans(1000,'qeTS(10,ptot,\"qeKNN\")$testAcc')\n[1] 2.157187\n```", "```\n> replicMeans(1000,'qeTS(3,ptot,\"qeLin\")$testAcc')\n[1] 2.245138\n\n> replicMeans(1000,'qeTS(3,ptot,\"qePolyLin\")$testAcc')\n[1] 2.167949\n```", "```\n> replicMeans(1000,'qeTS(3,ptot,\"qeRF\")$testAcc')\n[1] 2.138265\n```", "```\nqeText(data, yName, kTop = 50, stopWords = tm::stopwords(\"english\"),\n    qeName, opts = NULL, holdout = floor(min(1000, 0.1 * length(data))))\n```", "```\n> data(quizzes)\n> str(quizzes)\n'data.frame':   143 obs. of  2 variables:\n $ quiz  : chr  \" Directions: Work only on this sheet (on both sides,\n...\n...\n $ course: Factor w/ 5 levels \"ECS132\",\"ECS145\",..: 3 3 3 3 3 3 3 3 3 3 ...\n```", "```\n> quizzes[8,1]\n...\n...\nlargest thread number.  The code with print out\n...\n...\n```", "```\n> quizzes[8,2]\n[1] ECS158\nLevels: ECS132 ECS145 ECS158 ECS256 ECS50\n```", "```\n> z <- qeText(quizzes,qeName='qeRF')\nholdout set has  14 rows\n\n> predict(z,quizzes[8,1])\n$predClasses\n[1] \"ECS158\"\n$probs\n   ECS132 ECS145 ECS158 ECS256 ECS50\n11  0.062  0.066  0.812  0.002 0.058\n```", "```\n> library(textdata)\n> ag <- dataset_ag_news()\nDo you want to download:\n Name: AG News\n...\n> agdf <- as.data.frame(ag)  # qe-series functions require data frames\n> agdf[,1] <- as.factor(agdf[,1])  # qe requires a factor Y\n```", "```\n> dim(ag)\n[1] 120000      3\n> agdf[28,]  # for example\n      class                           title\n28 Business HP shares tumble on profit news\n                                      description\n28 Hewlett-Packard shares fall after disappointing third-quarter profits,\nwhile the firm warns the final quarter will also fall short of expectations.\n```", "```\n> smallSet <- sample(1:nrow(agdf),10000)\n> agdfSmall <- agdf[smallSet,]\n```", "```\n> w <- qeText(agdfSmall[,c(1,3)],'class',qeName='qeSVM')\nholdout set has  1000 rows\nLoading required namespace: e1071\n> w$testAcc\n[1] 0.461\n> w$baseAcc\n[1] 0.7403333\n```"]