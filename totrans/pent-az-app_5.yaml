- en: '**6**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**6**'
- en: '**INVESTIGATING NETWORKS**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**调查网络**'
- en: '![image](../images/00015.jpeg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/00015.jpeg)'
- en: Fundamentally, a cloud is a large collection of computing and digital storage
    resources made available for rent. This business model relies on the internet,
    which allows the cloud’s users to transfer data into and out of the provider’s
    systems, manage remote systems, and make services like websites and email servers
    available to end users.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从根本上讲，云是一个大规模的计算和数字存储资源的集合，供租用使用。这种商业模式依赖于互联网，允许云的用户将数据进出提供商的系统，管理远程系统，并使网站、电子邮件服务器等服务面向终端用户。
- en: Because connectivity is so crucial to the overall success of a cloud, Azure
    offers users a variety of network settings. By default, Azure makes services internet-facing
    so that they are accessible to anyone. However, Azure also provides other networking
    options, used for creating links between an internal corporate network and Azure
    services. Both kinds of connections are important for Azure to be able to accommodate
    its customers’ workloads and requirements, but it means that a misconfiguration
    could lead to a security disaster.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 由于连接性对云的整体成功至关重要，Azure 为用户提供了多种网络设置。默认情况下，Azure 使服务面向互联网，从而允许任何人访问。然而，Azure
    还提供了其他网络选项，用于在内部公司网络和 Azure 服务之间建立连接。这两种连接对于 Azure 能够满足客户工作负载和需求至关重要，但这也意味着配置错误可能会导致安全灾难。
- en: In this chapter, we examine how common configuration shortcuts in firewalls
    can leave services vulnerable to attack. We also look at how an attacker can leverage
    Azure’s tunnels to compromise a corporate network.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将讨论防火墙中常见的配置快捷方式如何使服务容易受到攻击。我们还将探讨攻击者如何利用 Azure 的隧道来破坏公司网络。
- en: '**Best Practices: Network Security**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**最佳实践：网络安全**'
- en: One of the first lines of defense when securing resources in the cloud is proper
    network configuration. After all, if malicious traffic never reaches a service,
    the threat of an exploit occurring is minimized. Some of my common recommendations
    to customers include creating small, dedicated virtual networks, using Network
    Security Groups, and avoiding accidentally bridging your corporate network to
    the internet.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在保护云中资源时，首先要做的防御工作之一就是适当的网络配置。毕竟，如果恶意流量永远无法到达服务，漏洞被利用的风险就会大大降低。我给客户的一些常见建议包括创建小型专用虚拟网络、使用网络安全组，以及避免不小心将公司网络桥接到互联网。
- en: Begin by defining separate Azure virtual networks for each of the services you
    run in the cloud. By creating a network dedicated to just the resources needed
    to provide one service, you can configure the network to allow only the minimum
    amount of access required to make the service work. It becomes much harder to
    manage a network if it contains dozens of resources that are used for many different
    projects.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为你在云中运行的每个服务定义独立的 Azure 虚拟网络。通过创建一个仅供提供某个服务所需资源的网络，你可以将网络配置为仅允许最小程度的访问，从而使该服务能够正常工作。如果网络中包含多个用于不同项目的资源，那么管理起来就会变得更加困难。
- en: Next, make use of Azure Network Security Groups (NSGs), as first discussed in
    “[Gathering Information on Networking](part0012.html#lev76)” on [page 56](part0012.html#page_56).
    Restrict traffic to virtual machines to only what is needed and disallow access
    to remote management services if you aren’t currently performing administrative
    tasks on the VM—you can always temporarily add a rule later to allow access to
    those ports from your IP address if you need to make changes. Also, consider modifying
    default rules. For example, if a service doesn’t need to make outbound connections
    to the internet, block them. This makes it much harder for an attacker to have
    malware call back to the attacker’s system if they manage to gain an initial foothold
    into a VM.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用 Azure 网络安全组（NSG），正如在“[收集网络信息](part0012.html#lev76)”一文的[第56页](part0012.html#page_56)中首次讨论的那样。将虚拟机的流量限制为仅需要的部分，如果当前没有进行虚拟机的管理任务，则禁止访问远程管理服务——如果需要进行更改，你可以稍后临时添加一条规则，允许从你的
    IP 地址访问这些端口。另外，考虑修改默认规则。例如，如果某个服务不需要进行外部互联网连接，就将其阻止。这可以大大增加攻击者在成功入侵虚拟机后，无法通过恶意软件与攻击者的系统回连的难度。
- en: 'Finally, Azure offers several services that provide the ability to create a
    link between Azure and your company’s network, which I discuss in “[Cloud-to-Corporate
    Network Bridging](part0015.html#lev149)” on [page 123](part0015.html#page_123).
    While these features are great for enabling Hybrid IT—where services running on-premises
    operate seamlessly with those in the cloud—they can also lead to an undesirable
    condition: if an Azure virtual network with this connectivity also hosts services
    that are exposed to the public internet, any breach of one of those services potentially
    gives an attacker a direct path back to the corporate network. For this reason,
    it is very important to separate those services that need corporate network access
    from those that need to be exposed publicly. I suggest keeping them in entirely
    different subscriptions, to avoid any accidental bridging. If some service needs
    both types of access, design it extremely carefully and spend a good deal of time
    threat modeling to try to determine and address all possible hazards. And of course,
    be sure to pentest it to validate its security!'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Azure提供了几项服务，可以在Azure与你公司网络之间建立链接，我在“[云到企业网络桥接](part0015.html#lev149)”一节中有讨论，见[第123页](part0015.html#page_123)。这些功能非常适合实现混合IT，即在本地运行的服务与云中的服务无缝连接，但它们也可能导致一个不希望出现的情况：如果一个具有此连接性的Azure虚拟网络还托管了面向公网的服务，那么这些服务中的任何一个被攻击者攻破，都可能为攻击者提供一条直接返回公司网络的路径。因此，非常重要的一点是要将需要访问公司网络的服务与需要公开暴露的服务分开。我建议将它们放在完全不同的订阅中，以避免意外的桥接。如果某些服务需要两种类型的访问权限，务必非常小心地设计，并花费大量时间进行威胁建模，以尽可能识别并解决所有潜在的危险。当然，也要确保对其进行渗透测试，以验证其安全性！
- en: Networking in Azure is a broad topic, so there are many features that might
    benefit your usage scenario that I can’t cover here. Fortunately, Azure network
    security has some of the most comprehensive documentation available. See *[https://docs.microsoft.com/en-us/azure/best-practices-network-security/](https://docs.microsoft.com/en-us/azure/best-practices-network-security/)*
    for a thorough threat model and *[https://docs.microsoft.com/en-us/azure/security/azure-security-network-security-best-practices/](https://docs.microsoft.com/en-us/azure/security/azure-security-network-security-best-practices/)*
    for a discussion of features that can make your links more secure.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Azure中的网络是一个广泛的话题，因此有许多功能可能会对你的使用场景有所帮助，但我无法在这里一一覆盖。幸运的是，Azure网络安全有着一些最全面的文档。请参阅*[https://docs.microsoft.com/zh-cn/azure/best-practices-network-security/](https://docs.microsoft.com/en-us/azure/best-practices-network-security/)*，了解详细的威胁模型，并参考*[https://docs.microsoft.com/zh-cn/azure/security/azure-security-network-security-best-practices/](https://docs.microsoft.com/en-us/azure/security/azure-security-network-security-best-practices/)*，讨论可以使你的链接更安全的功能。
- en: '**Avoiding Firewalls**'
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**避免使用防火墙**'
- en: Azure offers firewalls for several of its services. They are most commonly used
    to protect virtual machines, SQL servers, and application services. In the case
    of VMs and SQL, the firewalls are enabled by default and are free to use with
    their respective services. For applications, Azure has a paid Web Application
    Firewall option. Understanding the features and defaults of each firewall gives
    a pentester a better idea of what methods are likely to work and which time-consuming
    scans they should avoid.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Azure为其多个服务提供防火墙。它们最常用于保护虚拟机、SQL服务器和应用服务。对于虚拟机和SQL，防火墙默认启用，并且与各自的服务一起使用是免费的。对于应用，Azure提供了一个付费的Web应用防火墙选项。了解每个防火墙的功能和默认设置，可以帮助渗透测试人员更好地了解哪些方法可能有效，以及哪些耗时的扫描应该避免。
- en: '***Virtual Machine Firewalls***'
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***虚拟机防火墙***'
- en: Firewalls are VMs’ first—and often only—line of defense against network-based
    attacks. As of this writing, administrators have few options for intrusion prevention
    virtual appliances to protect their VMs. They also can’t create advanced routing
    rules to deflect certain traffic before it gets to the VM. For these reasons,
    administrators must take extra care when setting up the firewall.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙是虚拟机对抗基于网络攻击的首要防线，而且通常是唯一的防线。在撰写本文时，管理员可用于保护虚拟机的入侵防御虚拟设备选项很少。同时，他们也无法创建高级路由规则，以便在流量到达虚拟机之前进行拦截。因此，管理员在设置防火墙时必须格外小心。
- en: 'Just about every operating system contains a host-based firewall, which allows
    the administrator of the system to configure what ports and services should be
    accessible from the network. However, these native firewalls have a few problems:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有的操作系统都包含主机防火墙，允许系统管理员配置哪些端口和服务应该从网络上进行访问。然而，这些原生防火墙存在一些问题：
- en: '**Complexity and inconsistency** Every operating system has a different method
    for configuring its firewall, uses different commands, and sometimes even uses
    different terminology. An administrator may have experience with one type of firewall
    but inadvertently make a crucial mistake when setting one up in a less familiar
    OS.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**复杂性和不一致性** 每种操作系统配置防火墙的方法不同，使用的命令也不同，有时甚至术语也各不相同。管理员可能在某种类型的防火墙上有经验，但在为不太熟悉的操作系统配置防火墙时，可能会无意中犯下关键错误。'
- en: '**Unplanned changes over time** A host firewall configuration may start out
    secure, but may weaken over time without anyone realizing a change has happened.
    For instance, installing a new software package or update may add new exceptions
    to the firewall with no warning, such as a program that includes a web interface
    opening TCP ports 80 and 443 to inbound traffic.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**无计划的变化** 主机防火墙配置可能在开始时是安全的，但随着时间的推移，可能会在无人察觉的情况下变得更弱。例如，安装新的软件包或更新时，可能会向防火墙添加新的例外规则，而没有任何警告，比如一个包含网页界面的程序，它会开放TCP端口80和443，允许外部流量进入。'
- en: '**Bugs** Firewall software is generally very well tested, but there’s always
    a chance of a bug that could let a packet through unintentionally or crash the
    entire VM. Indeed, bugs in security software such as firewalls and antivirus are
    often among the most severe. This isn’t just because exploiting them could bypass
    the security control that the software is supposed to provide; it’s also because
    this software is always running, is present on just about every system, has system-level
    privileges, and is exposed to potentially malicious input. For example, in 2017,
    Google security engineers discovered a flaw in Microsoft’s antivirus scanning
    engine that allowed them to take control of a machine by sending a malicious email
    that the antivirus scanned upon arrival—the user didn’t even have to open the
    email. This flaw was quickly patched, but in the same year, similar issues were
    also found in other vendors’ security products, and it’s likely that more are
    yet to be discovered.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**漏洞** 防火墙软件通常经过非常严格的测试，但总是有可能出现漏洞，导致数据包意外通过，甚至崩溃整个虚拟机。事实上，安全软件中的漏洞，诸如防火墙和杀毒软件，往往是最严重的。这不仅仅是因为利用这些漏洞可以绕过软件本应提供的安全控制，还因为这些软件始终在运行，几乎存在于每个系统中，拥有系统级别的权限，并且暴露于潜在的恶意输入中。例如，2017年，谷歌的安全工程师发现了微软杀毒软件扫描引擎中的一个漏洞，攻击者可以通过发送一封恶意电子邮件来控制计算机，而用户甚至不需要打开这封邮件。这个漏洞很快得到了修复，但同年，其他厂商的安全产品也发现了类似问题，且很可能还有更多漏洞尚未被发现。'
- en: '**Load** Host-based firewalls analyze packets within the operating system,
    which means that each examined packet consumes processor cycles and memory momentarily.
    In the event of heavy load—and especially during a denial-of-service (DoS) attack—this
    additional stress can prevent the server from performing its normal work. This
    can even have a financial impact in the cloud, because Azure’s auto-scaling feature
    can be configured to automatically bring additional resources online or upgrade
    VMs to higher pricing tiers to deal with a temporarily increased load, and these
    upgrades are billed to the VM’s subscription.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**负载** 基于主机的防火墙会分析操作系统内的数据包，这意味着每一个被检查的数据包都会瞬间消耗处理器周期和内存。在负载过重时，尤其是在遭遇拒绝服务（DoS）攻击时，这种额外的压力可能会阻止服务器执行正常工作。这甚至可能对云环境造成财务影响，因为Azure的自动扩展功能可以配置为在负载暂时增加时自动上线更多资源或将虚拟机升级到更高的定价层，而这些升级会计入虚拟机的订阅费用。'
- en: '**Subscription vs. VM administration** The administrators of the VM, which
    may be different from the subscription administrators, control host-based firewalls.
    This means an administrator could open their system up to attack, and if that
    VM is compromised, the attacker may then be able to use that system to attack
    other VMs or services in Azure that are more restricted. Consider that many corporations
    allow users to be local administrators of their own workstations, but few permit
    these same users to expose their workstations directly to the internet. Azure
    should be treated the same way.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**订阅与虚拟机管理** 虚拟机的管理员（可能与订阅管理员不同）控制基于主机的防火墙。这意味着管理员可能会将系统暴露于攻击之下，如果该虚拟机被攻破，攻击者可能会利用该系统攻击Azure中更多受限的虚拟机或服务。考虑到许多公司允许用户成为自己工作站的本地管理员，但很少允许这些用户将工作站直接暴露于互联网。Azure也应当以同样的方式对待。'
- en: To address all these issues, Azure offers firewalls for VMs outside of the host-based
    options, in the form of endpoint rules in classic Azure Service Management (ASM)
    VMs and Network Security Groups (NSGs) in Azure Resource Manager (ARM) VMs. These
    rules are easy to configure and work regardless of the VM’s operating system—and
    only someone with the right level of subscription access can disable or reconfigure
    these firewalls.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这些问题，Azure 提供了虚拟机的防火墙，除了主机级防火墙选项之外，提供了经典 Azure 服务管理（ASM）虚拟机中的端点规则和 Azure
    资源管理器（ARM）虚拟机中的网络安全组（NSG）。这些规则易于配置，并且无论虚拟机的操作系统是什么，都能有效工作——只有具有正确订阅权限的人才能禁用或重新配置这些防火墙。
- en: '**NOTE**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Microsoft allows other security companies to offer* Next-Generation Firewalls
    *to customers in the Azure marketplace. These “firewalls as a service” address
    the issues discussed in this section, and may also provide additional unique protections,
    such as deep packet inspection or content filtering. Because these firewalls vary
    significantly by vendor, we can’t cover them here. If you encounter one during
    an assessment, review its features and ensure it has been configured properly
    to secure the customer’s services.*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*微软允许其他安全公司向客户提供* 下一代防火墙 *服务，在 Azure 市场上进行销售。这些“防火墙即服务”解决了本节讨论的问题，并且可能还提供额外的独特保护措施，如深度数据包检查或内容过滤。由于这些防火墙在不同供应商之间差异较大，我们无法在此覆盖它们。如果你在评估过程中遇到一个，请查看其功能，并确保它已正确配置，以确保客户服务的安全。*'
- en: There are a few gaps in this otherwise solid armor, though. For administrative
    convenience, several default rules are applied to each new VM. These rules open
    different ports, depending on which operating system is used in the VM. As a penetration
    tester, it is important to know what ports Azure opens by default. Users generally
    don’t change these rules, which means the ports are open to anyone on the internet.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种看似坚固的防御体系中也存在一些漏洞。为了便于管理，每个新虚拟机都会应用几个默认规则。这些规则会根据虚拟机中使用的操作系统开放不同的端口。作为渗透测试人员，了解
    Azure 默认开放的端口非常重要。用户通常不会更改这些规则，这意味着这些端口对互联网上的任何人都开放。
- en: For Windows servers, Azure opens port 3389, for both TCP and UDP inbound traffic,
    to be used for the Remote Desktop Protocol (RDP). Additionally, inbound TCP port
    5986 is open by default for Windows Remote Management (WinRM), which, among other
    things, is used by PowerShell to remotely connect to the VM. On older VMs, Azure
    moved RDP to a random port between 49152 and 65535\. Although this is no longer
    done for newly built classic VMs, you may still find some older VMs using this
    security-through-obscurity method.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Windows 服务器，Azure 开放了端口 3389，用于 TCP 和 UDP 的入站流量，用于远程桌面协议（RDP）。此外，默认情况下，入站的
    TCP 端口 5986 也对外开放，用于 Windows 远程管理（WinRM），其中，PowerShell 用于远程连接虚拟机。对于较旧的虚拟机，Azure
    将 RDP 移动到 49152 到 65535 之间的随机端口。尽管新建的经典虚拟机不再使用这种方式，但你仍然可能会发现一些较旧的虚拟机使用这种安全通过模糊化的方法。
- en: For Linux, the port list is much smaller; only TCP port 22 inbound is open by
    default. This is the port used for Secure Shell (SSH), the encrypted, console-based
    remote management service. Depending on the chosen Linux image and user preferences,
    SSH may be configured to use certificate-based authentication or traditional usernames
    and passwords.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Linux，端口列表要小得多；默认情况下，只有 TCP 端口 22 对外开放。这个端口用于安全外壳协议（SSH），即加密的基于控制台的远程管理服务。根据选择的
    Linux 镜像和用户的偏好，SSH 可能被配置为使用基于证书的身份验证或传统的用户名和密码。
- en: Of course, all these protocols are authenticated, so you can’t just connect
    to the port and have control of the VM. However, if an attacker finds a valid
    credential, succeeds with a dictionary or brute-force attack, or discovers an
    authentication bypass exploit for any of these services, then they will be able
    to access the system.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，所有这些协议都有身份验证，因此你不能仅仅连接到端口并控制虚拟机。然而，如果攻击者找到了有效的凭证，成功进行了字典攻击或暴力破解，或者发现了这些服务的身份验证绕过漏洞，那么他们将能够访问系统。
- en: '**DEFENDER’S TIP**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**防御者提示**'
- en: To help protect against attackers that attempt to access administrative interfaces
    through allowed inbound connections in the firewall, you can change the firewall
    rules to allow connections only from specific IP addresses, such as those of your
    company’s network egress points. Alternatively, you could block access to those
    ports from the internet, and set up a hardened virtual machine with inbound RDP
    allowed from a limited set of IP addresses that serves as a *jump server*. From
    this jump server, you can access the administrative interfaces of all other services
    through a virtual network that is accessible only from within the subscription.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助防止攻击者通过防火墙中允许的入站连接访问管理接口，您可以更改防火墙规则，仅允许来自特定IP地址的连接，例如来自公司网络出口点的地址。或者，您可以阻止来自互联网的端口访问，并设置一个强化的虚拟机，允许来自有限IP地址范围的入站RDP连接，该虚拟机充当*跳板服务器*。通过这个跳板服务器，您可以通过一个仅从订阅内访问的虚拟网络，访问所有其他服务的管理接口。
- en: By default, all outbound traffic is allowed from Azure VMs. A subscription administrator
    could change this, but that’s rarely done. A penetration tester can benefit from
    this allow-all rule in several ways. First, if an attacker gets access to a system,
    there is no rule to limit the exfiltration of data. Second, tools such as Metasploit
    can use reverse TCP shells to connect back to an attacker’s command-and-control
    server to receive instructions. Finally, an attacker on the system can download
    tools from anywhere they desire.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Azure虚拟机允许所有出站流量。订阅管理员可以更改这一点，但这种情况很少发生。渗透测试人员可以从这个允许所有的规则中受益。首先，如果攻击者获得了对系统的访问权限，则没有规则限制数据的外泄。其次，像Metasploit这样的工具可以利用反向TCP
    shell连接回攻击者的指挥控制服务器，接收指令。最后，系统上的攻击者可以从任何地方下载他们需要的工具。
- en: '***Azure SQL Firewalls***'
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Azure SQL 防火墙***'
- en: Azure SQL servers also have their own firewalls, but unlike VM firewalls, they
    aren’t optional; they are on by default and no one can disable them. However,
    an attacker can still use a number of tricks to circumvent the firewall and directly
    target the SQL server.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Azure SQL服务器也有自己的防火墙，但与虚拟机防火墙不同，它们不是可选的；默认情况下它们是开启的，任何人都无法禁用它们。然而，攻击者仍然可以使用一些技巧绕过防火墙，直接攻击SQL服务器。
- en: First, you may recall from [Chapter 3](part0012.html#ch03) that developers sometimes
    add rules to SQL firewalls that allow connections from anywhere. An attacker can
    easily spot these rules in a database’s firewall page on the Azure portal, because
    these rules allow connections from a large IP address range, such as 0.0.0.0 to
    255.255.255.255\. While the firewall is technically still running with such a
    rule in place, it’s no longer filtering any connections, so an attacker can connect
    to the SQL server from anywhere on the internet and try attacks like password
    brute-forcing attempts.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您可能还记得在[第3章](part0012.html#ch03)中提到，开发人员有时会向SQL防火墙中添加允许任何地方连接的规则。攻击者可以很容易在Azure门户中的数据库防火墙页面上发现这些规则，因为这些规则允许来自大量IP地址范围的连接，例如0.0.0.0到255.255.255.255。虽然防火墙在技术上仍然运行，但此类规则使其不再过滤任何连接，因此攻击者可以从互联网上的任何地方连接到SQL服务器，并尝试进行如密码暴力破解等攻击。
- en: Second, even if an allow-all rule isn’t in place, an attacker might still be
    able to establish a connection. Some database servers have many authorized users
    who frequently connect from a variety of network locations, such as a central
    office, a field office, a corporate VPN, their homes, and even mobile networks
    at coffeehouses and airport terminals. When users can access a server from a variety
    of locations, the firewall rules likely contain at least a few allowed ranges;
    for example, a firewall might allow any connection originating from the corporate
    network. This means an attacker who gains access to any corporate system could
    then use that machine as a pivot point for attacking the SQL server. If an attacker
    has access to the Azure portal but doesn’t have access to a machine with a previously
    granted IP rule, the attacker might succeed in adding a new rule for their IP
    address. And because users frequently add new rules to SQL firewalls—sometimes
    a database has a dozen or more entries—it’s unlikely anyone would notice the addition
    of one more. If you add a new rule, make sure your rule name mimics other legitimate
    rules in order to better blend in. Also make sure that you record and account
    for any such modifications so that you can share a list with your client to verify
    that these modifications are removed at the end of your engagement. Be aware that
    a real attacker might take advantage of any new openings you create—a very undesirable
    situation.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，即使没有设置允许所有连接的规则，攻击者仍然可能建立连接。一些数据库服务器有许多授权用户，这些用户经常从各种网络位置连接，例如总部、分公司、企业 VPN、家庭，甚至是咖啡馆和机场航站楼的移动网络。当用户可以从多种位置访问服务器时，防火墙规则可能包含至少几个允许的范围；例如，防火墙可能允许来自公司网络的任何连接。这意味着，攻击者如果获得了任何公司系统的访问权限，就可以利用该机器作为攻击
    SQL 服务器的跳板。如果攻击者能够访问 Azure 门户，但无法访问具有先前授予 IP 规则的机器，攻击者可能会成功地为其 IP 地址添加新规则。而且，由于用户经常为
    SQL 防火墙添加新规则——有时候一个数据库可能会有十几个或更多的条目——因此不太可能有人注意到再添加一个规则。如果你添加了新规则，确保你的规则名称与其他合法规则相似，以便更好地融入。另外，确保你记录并跟踪任何此类修改，以便在项目结束时与你的客户共享一份清单，验证这些修改是否已被移除。请注意，真正的攻击者可能会利用你所创造的任何新漏洞——这是一个非常不希望发生的情况。
- en: '**DEFENDER’S TIP**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**防御者提示**'
- en: You should periodically review firewall rules for changes. It is a good idea
    to maintain a list of rules required for all services that rely on the SQL server;
    this way, you can delete any extra rules that creep in over time. For example,
    if a deleted rule was being used for developer workstations, when a developer
    reconnects they can easily add it again from either the Azure portal or SQL Server
    Management Studio. Without occasional cleanup, old rules tend to build up, thus
    increasing server exposure and making it hard to detect rogue rule additions.
    You can automate illegitimate-rule detection with Azure PowerShell’s Get-AzureSqlDatabaseServerFirewallRule
    cmdlet.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该定期检查防火墙规则的变化。保持一个列出所有依赖 SQL 服务器的服务所需规则的清单是个好主意；这样，你可以删除随着时间推移而逐渐增多的多余规则。例如，如果某个已删除的规则曾用于开发人员工作站，当开发人员重新连接时，他们可以通过
    Azure 门户或 SQL Server 管理工作室轻松地再次添加该规则。如果没有偶尔的清理，旧规则会逐渐积累，从而增加服务器暴露风险，并且很难发现恶意规则的添加。你可以通过
    Azure PowerShell 的 Get-AzureSqlDatabaseServerFirewallRule cmdlet 自动检测非法规则。
- en: One final possible weakness is that SQL firewall rules are configured at the
    server level, not per database. So, if a server has 20 databases, each used by
    different teams, one rule set is applied to all of them. Therefore, an attacker
    might be able to compromise a workstation that a team with poor security hygiene
    uses to access an unimportant Azure SQL database; then, the attacker can use that
    same system to target a more interesting database that a more secure team uses.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个可能的弱点是，SQL 防火墙规则是在服务器级别配置的，而不是每个数据库单独配置的。因此，如果一个服务器有 20 个数据库，每个数据库由不同的团队使用，则同一套规则会应用于所有这些数据库。因此，攻击者可能会破坏一个使用不良安全习惯的团队所用的工作站，这台工作站访问的是一个不重要的
    Azure SQL 数据库；然后，攻击者可以利用同一台系统来攻击另一个更重要的数据库，该数据库由安全性更强的团队使用。
- en: '***Azure Web Application Firewalls***'
  id: totrans-39
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Azure Web 应用防火墙***'
- en: A Web Application Firewall (WAF) isn’t like a traditional firewall that uses
    rules based on ports and IP addresses to determine if traffic should pass. Instead,
    a WAF sits in front of a web application and looks for malicious-looking requests.
    When the WAF identifies a suspicious pattern, it can either report the incident
    or block the traffic outright. In this way, a WAF is more like an intrusion detection
    system (IDS) or intrusion prevention system (IPS) than an IP firewall. WAFs have
    become standard enough that beginning in 2017, the popular Open Web Application
    Security Project (OWASP) Top 10 list of web vulnerabilities considers the absence
    of a WAF itself to be a security finding.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Web应用防火墙（WAF）与传统防火墙不同，后者基于端口和IP地址的规则来决定是否允许流量通过。相反，WAF位于Web应用程序前面，专门寻找恶意请求。当WAF识别到可疑模式时，它可以报告事件或直接阻止流量。因此，WAF更像入侵检测系统（IDS）或入侵防御系统（IPS），而不是IP防火墙。WAF已经足够普及，从2017年起，流行的开放Web应用程序安全项目（OWASP）十大Web漏洞列表将缺乏WAF本身视为一个安全隐患。
- en: Keeping up with industry trends, Azure now offers a WAF that users can deploy
    in front of Azure websites and applications. Microsoft also allows other vendors
    to provide WAFs to Azure customers. The functionality of most WAFs is similar,
    so we’ll focus on Microsoft’s WAF, which is the most commonly used in Azure.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 紧跟行业趋势，Azure现在提供了一个WAF，用户可以将其部署在Azure网站和应用程序前面。微软还允许其他供应商为Azure客户提供WAF。大多数WAF的功能类似，因此我们将重点讨论微软的WAF，它是Azure中最常用的。
- en: To enable Microsoft’s WAF, a customer must create an Azure Application Gateway,
    which is a load-balancing service that distributes HTTP and HTTPS requests among
    a pool of Azure servers. During the configuration phase of the Azure Application
    Gateway, the user has the option to also enable a WAF on the gateway. When configuring
    the WAF, the user can choose whether the firewall will just detect and log threats
    or if it will block them. The latter option increases the security of the site
    the WAF protects, but risks blocking valid traffic if a rule is overly broad.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用微软的WAF，客户必须创建一个Azure应用程序网关，这是一个负载均衡服务，将HTTP和HTTPS请求分配给一组Azure服务器。在Azure应用程序网关的配置阶段，用户可以选择是否在网关上启用WAF。在配置WAF时，用户可以选择防火墙是仅检测并记录威胁，还是直接阻止威胁。后者选项可以提高WAF保护的站点的安全性，但如果某条规则过于宽泛，可能会导致阻止有效流量的风险。
- en: Azure’s WAF uses rules that OWASP defines in its ModSecure Core Rule project.
    Site administrators can select from either OWASP 2.29 or OWASP 3.0 rule sets.
    Aside from removing some frequent false positives and shifting some of the rule
    severity scores, the biggest change in OWASP 3.0 is the addition of IP repudiation
    rules. These have the ability to block requests from known-malicious senders and
    from IP addresses associated with certain countries. A penetration tester should
    be aware of OWASP’s repudiation rules because a WAF might block the tester’s host
    under these rules, leading them to believe a server isn’t vulnerable to a given
    attack, when in reality, that attack would work from a different IP address, resulting
    in a dreaded false negative in their report.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Azure的WAF使用OWASP在其ModSecure Core Rule项目中定义的规则。网站管理员可以选择使用OWASP 2.29或OWASP 3.0规则集。除了移除一些常见的误报并调整一些规则的严重性评分外，OWASP
    3.0的最大变化是新增了IP否认规则。这些规则可以阻止来自已知恶意发送者的请求，以及来自某些国家/地区IP地址的请求。渗透测试人员应该注意OWASP的否认规则，因为WAF可能会根据这些规则阻止测试人员的主机，从而导致他们误以为服务器不易受到某个攻击的影响，但实际上，该攻击从其他IP地址发起时是有效的，这可能会导致报告中出现严重的漏报（false
    negative）。
- en: The one major weakness of Azure’s WAF is its limited configurability. An administrator
    can manually enable or disable individual WAF rules or a class of rules, but they
    can’t tweak a rule to have it fit their particular scenario. So, if a rule is
    likely to generate a significant number of false positives, the administrator
    will probably disable it. Additionally, many of the rules have only vague descriptions,
    so the user configuring the WAF might turn off more rules than needed to get their
    site working. To give you a sense of the rules list, the WAF configuration page
    is shown in [Figure 6-1](part0015.html#ch06fig1).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Azure的WAF一个主要的弱点是其配置能力有限。管理员可以手动启用或禁用单个WAF规则或一类规则，但无法调整规则以适应特定场景。因此，如果某条规则可能产生大量误报，管理员可能会禁用该规则。此外，许多规则的描述较为模糊，配置WAF的用户可能会关闭比实际需要更多的规则，以便使网站正常运行。为了让你更好地理解规则列表，WAF配置页面如[图6-1](part0015.html#ch06fig1)所示。
- en: Penetration testers looking to bypass a WAF don’t have a definitive solution.
    Instead, if you suspect a customer is using a WAF that’s blocking a given attack,
    your best bet is to research the exploit online and see if others have found a
    way to sneak past WAFs. Otherwise, try modifying the code used in the attack—maybe
    some minor changes will bypass the WAF rule’s pattern.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员如果想绕过WAF，并没有一个明确的解决方案。相反，如果你怀疑客户使用的WAF阻止了某个攻击，最好的办法是在线查找该漏洞的资料，看看是否有人找到了绕过WAF的方法。否则，可以尝试修改攻击中使用的代码——也许一些微小的变化就能绕过WAF规则的模式。
- en: '![image](../images/00045.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/00045.jpeg)'
- en: '*Figure 6-1: Azure WAF configuration with OWASP 3.0 rules selected*'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*图6-1：选择了OWASP 3.0规则的Azure WAF配置*'
- en: '**DEFENDER’S TIP**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**DEFENDER''S TIP**'
- en: WAFs are not foolproof. Like any pattern-based security product, they are likely
    to miss novel attacks, and an attacker can bypass your WAF with a clever rewrite
    of a known exploit. Despite their vulnerabilities, WAFs do offer an additional
    layer of protection, which is a key part of building a more secure system.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: WAF并非万无一失。像任何基于模式的安全产品一样，它们可能会漏掉新型攻击，攻击者可以通过巧妙地重写已知的漏洞来绕过WAF。尽管存在漏洞，WAF仍然提供了额外的保护层，这是构建更安全系统的关键部分。
- en: Additionally, WAFs tend to introduce human risk. Developers are often tempted
    to believe that a WAF will prevent any malicious behavior, so they think they
    can deploy code that contains security bugs with impunity. This is the equivalent
    of an IT professional thinking that they can skip installing security updates
    as long as antivirus software is installed. Clearly neither of these is true!
    Be sure that you stay vigilant, even when using a WAF; otherwise, the WAF may
    result in a *decrease* of your overall security.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，WAF往往会引入人为风险。开发人员常常容易认为WAF会阻止任何恶意行为，因此他们认为可以不受惩罚地部署包含安全漏洞的代码。这就相当于IT专业人员认为只要安装了防病毒软件，就可以跳过安全更新的安装。显然，这两种想法都是错误的！即使在使用WAF时，也要保持警惕；否则，WAF可能会导致你的整体安全性*下降*。
- en: '**Cloud-to-Corporate Network Bridging**'
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**云与企业网络桥接**'
- en: When a company begins cloud adoption as part of its IT strategy, it can either
    migrate existing workloads or build new services that are designed specifically
    for the cloud. Transferring data between corporate systems and the cloud provider
    poses a challenge regardless of the choice. To address this dilemma, Microsoft
    offers two different types of connections between customer environments and Azure.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当公司将云计算作为IT战略的一部分开始采用时，可以选择迁移现有工作负载或构建专门为云设计的新服务。无论选择哪种方式，将数据在企业系统和云提供商之间传输都会带来挑战。为了解决这个难题，微软提供了两种不同的连接方式，连接客户环境和Azure。
- en: 'For systems being migrated from a corporate environment, Azure allows users
    to create a direct connection between their subscription and company network,
    where the Azure resources share the same IP address space as their original corporate
    network; this direct connection is called Azure Virtual Network. A company can
    achieve Azure Virtual Network connectivity with one of two different Azure services:
    virtual private network or ExpressRoute. We’ll discuss both of these in the next
    section.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于从企业环境迁移的系统，Azure允许用户在其订阅和公司网络之间创建直接连接，使Azure资源与原始公司网络共享相同的IP地址空间；这种直接连接被称为Azure虚拟网络。公司可以通过两种不同的Azure服务之一来实现Azure虚拟网络连接：虚拟私人网络或ExpressRoute。我们将在下一节中讨论这两种服务。
- en: Azure Virtual Network is very convenient for cloud migrations, but it’s overkill
    for some workloads. For many use cases—like for services designed to run in the
    cloud—a simple message delivery system may be sufficient. For example, an Azure
    website may be able to run entirely in the cloud but need the ability to insert
    a record in an on-premises database when a new order is placed. For these kinds
    of scenarios, Azure offers Service Bus and Logic Apps.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Azure虚拟网络对于云迁移非常方便，但对于某些工作负载来说，它有些过于复杂。对于许多使用场景——例如为云环境设计的服务——简单的消息传递系统可能已经足够。例如，一个Azure网站可能完全在云中运行，但需要在新订单生成时向本地数据库插入一条记录。对于这些场景，Azure提供了Service
    Bus和Logic Apps。
- en: '***Virtual Private Networks***'
  id: totrans-55
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***虚拟私人网络***'
- en: Virtual private network (VPN) connections are a well-established technology
    in the corporate IT world. Many companies use them so employees can work from
    home or while traveling. VPNs create an encrypted tunnel, over the internet, between
    the client and the VPN gateway running at the company. The VPN can tunnel either
    all network traffic or just the traffic destined for the office. VPNs are most
    commonly used between a client machine and a corporate network, and occasionally
    to connect two different corporate locations to each other or even to connect
    a tech-savvy consumer’s smartphone to their home network.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟专用网络（VPN）连接是企业 IT 世界中成熟的技术。许多公司使用 VPN 使员工能够在家工作或旅行时工作。VPN 会在客户端与公司运行的 VPN
    网关之间，通过互联网创建一个加密隧道。VPN 可以隧道化所有网络流量，或者仅隧道化目的地为办公室的流量。VPN 最常用于客户端计算机与企业网络之间，偶尔也用于连接两个不同的企业位置，甚至是将技术精通的消费者的智能手机连接到他们的家庭网络。
- en: 'Azure offers several different forms of VPN connectivity:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 提供几种不同形式的 VPN 连接：
- en: '**Point-to-site** A tunnel connecting individual client systems to an Azure
    virtual network'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**点对站点** 连接单个客户端系统到 Azure 虚拟网络的隧道'
- en: '**Site-to-site** A connection between a corporate network and an Azure virtual
    network'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**站点对站点** 企业网络与 Azure 虚拟网络之间的连接'
- en: '**Multisite** Multiple corporate networks all connecting in to the same Azure
    virtual network'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**多站点** 多个企业网络全部连接到同一个 Azure 虚拟网络'
- en: '**VNet-to-VNet** A tunnel between two Azure virtual networks'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**VNet 对 VNet** 两个 Azure 虚拟网络之间的隧道'
- en: 'Azure provides these options so that Azure services in a subscription can communicate
    with other systems, networks, or subscriptions without having one or both sides
    of the connection exposed to the internet. This means two things for a penetration
    tester: First, there may be services that are in scope for an assessment that
    can only be reached from a system connected to one of these VPN tunnels. Second,
    compromising an Azure service or subscription could provide access to a direct
    link back to a corporate network or service that isn’t otherwise exposed.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 提供这些选项，使得订阅中的 Azure 服务能够与其他系统、网络或订阅进行通信，而无需让连接的任一方或双方暴露于互联网。这对渗透测试人员意味着两件事：首先，可能有一些服务是评估范围内的，但只能通过连接到这些
    VPN 隧道的系统访问。其次，攻破一个 Azure 服务或订阅可能会提供一个直接通往企业网络或服务的连接，这些网络或服务本身并未暴露。
- en: '**WARNING**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**警告**'
- en: '*VPN connections could connect the target’s resources to a partner company’s
    network, which may not be in the agreed-upon scope for your assessment. Always
    verify that any new systems you discover are part of your assessment before proceeding.*'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*VPN 连接可能将目标的资源连接到合作伙伴公司的网络，这可能不在你评估的约定范围内。发现任何新系统时，请务必先确认它们是否属于评估范围，然后再继续。*'
- en: To exploit these connections, an attacker needs to know how to identify each
    form of VPN connectivity and how each connection performs authentication. Determining
    these properties differs depending on the type of connection. Let’s examine each.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要利用这些连接，攻击者需要知道如何识别每种形式的 VPN 连接以及每种连接如何执行身份验证。确定这些属性的方式因连接类型的不同而有所不同。让我们来逐一分析。
- en: '**Connecting to Point-to-Site VPNs**'
  id: totrans-66
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**连接到点对站点 VPN**'
- en: Point-to-site connectivity requires that clients use certificate-based authentication.
    To set up the VPN, an administrator creates a virtual network in Azure and defines
    a private IP address space for that network, such as 10.0.0.0/16\. They then create
    an instance of the VPN gateway service and assign it a subnet range within the
    virtual network. Finally, the administrator creates a self-signed certificate
    that will be used as the trusted root certificate to validate client requests,
    and they save the public key portion of the certificate in the VPN gateway configuration.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 点对站点连接要求客户端使用基于证书的身份验证。为了设置 VPN，管理员需要在 Azure 中创建一个虚拟网络，并为该网络定义一个私有 IP 地址范围，如
    10.0.0.0/16。接下来，他们创建一个 VPN 网关服务实例，并为其分配一个虚拟网络中的子网范围。最后，管理员创建一个自签名证书，作为受信任的根证书来验证客户端请求，并将证书的公钥部分保存到
    VPN 网关配置中。
- en: To allow a client to connect, the administrator downloads the VPN client software
    from the Azure portal and installs it on the client machine. The administrator
    must also generate a new certificate using the previously generated certificate
    as its root authority and install the private key for this certificate into the
    client’s certificate store.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: To determine if a point-to-site VPN is in use, you can either check in the subscription
    using the Azure portal or check on a client machine you suspect uses the VPN.
    Within the Azure portal, open the virtual network gateway *blade*—Azure’s terminology
    for a service’s configuration page—and see if any gateways are listed that have
    the Gateway Type listed as VPN. If so, click each of those gateways, then click
    the **Point-to-site configuration** option for each one, which should open a screen
    similar to [Figure 6-2](part0015.html#ch06fig2).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: 'This window shows an administrator all the information about point-to-site
    connections for the selected gateway: the number of active connections and total
    bandwidth used, the address space assigned to the VPN, the base64-encoded public
    key portion of the root certificate used to validate client certificates, the
    thumbprints of any client certificates that have been revoked, and the IP addresses
    of any currently connected VPN clients. As you can see, the only information about
    connected clients is the IP address in use. This means that if you can create
    an illicit connection to the VPN, an administrator wouldn’t obtain detailed information
    about your system.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00046.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
- en: '*Figure 6-2: Azure VPN point-to-site configuration*'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: On a Windows 10 client machine, you can check for the VPN by pressing WINDOWS-R
    and entering ms-settings:network-vpn, which should open the VPN settings screen.
    On earlier versions of Windows, enter control netconnections instead. Check if
    any VPN connections are listed; if there are, select a connection and click **Advanced
    Options**. An Azure VPN connection’s server address will begin with *azuregateway*
    and end in *cloudapp.net*, as shown in [Figure 6-3](part0015.html#ch06fig3).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00047.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
- en: '*Figure 6-3: Windows 10 VPN details for an Azure VPN connection*'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: If you find a client with such a VPN connection, you can leverage that machine
    to launch network scans against other addresses in the virtual network range—but
    that may alert the system’s owner. Instead, as long as you have administrative
    rights to the system, I suggest taking the connection details and certificates
    from the client and then connecting to the VPN from any other Windows host.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: On the client system, open the *%appdata%\Microsoft\Network\Connections\**Cm*
    directory. This directory should contain a *.cmp* file and a subdirectory, both
    named with the same GUID. Copy the *.cmp* file and all the files within the GUID
    subdirectory to one folder on your own computer, such as *C:\vpn*.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: Next, export the public key for the VPN root certificate. To do this, open a
    PowerShell window and run the script in [Listing 6-1](part0015.html#ch06list1).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Listing 6-1: PowerShell script to export the root certificate(s) used by VPN
    connections*'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: This script recursively checks for the *.cms* configuration files within the
    *Network\Connections* directory ➊, extracts a connection’s root certificate thumbprint
    ➋, and then exports that certificate to the current directory ➌. Copy any exported
    certificates to your computer and import them into the *Current User\Trusted Root
    Certification Authorities* store.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: 'The last thing you need from the target system is the private key for the certificate
    used to authenticate the VPN connection. It resides in the *Current User\Personal*
    certificate store, but it’s likely marked as non-exportable. Fortunately, Mimikatz
    can export these protected certificates. To extract the certificates, run Mimikatz
    from an administrative command prompt and then issue these commands:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will export all of the user’s personal certificates to the current directory.
    The root certificate you exported previously will be the root of the path to the
    certificate used for Azure VPN authentication. Copy the exported PFX file to your
    system and then import it into your *Current User\Personal* certificate store.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '*The default password for PFX files exported through Mimikatz is* mimikatz*.*'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Last, you’ll need to run a command to create the VPN connection on your own
    computer. Open a command prompt, navigate to the directory containing the files
    you copied (such as *C:\vpn*), and then run the command
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: where GUID is the name of the *.inf* file copied from the target system. This
    should add the VPN connection to your system; you should now be able to connect
    to the Azure virtual network by clicking the Network icon in the notification
    area and then clicking the **Connect** button on the VPN in the fly-out menu shown
    in [Figure 6-4](part0015.html#ch06fig4).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00048.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
- en: '*Figure 6-4: Network fly-out with an Azure VPN connection*'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '**Connecting to Site-to-Site VPNs**'
  id: totrans-92
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Whereas point-to-site VPNs connect a single client to a remote network, site-to-site
    VPNs bridge an entire network segment to a different remote network. In Azure,
    these connections are used to connect a portion of a corporate network to an Azure
    Virtual Network. Using a site-to-site VPN allows a group of servers in an on-premises
    datacenter to directly connect with Azure resources such as VMs without having
    to install VPN clients on each server. It’s a common configuration in companies
    that are migrating servers gradually to the cloud but that still need to reach
    their corporate-network counterparts.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: To create such a connection, the corporate network must have a local network
    device, such as a router or VPN gateway appliance, that supports site-to-site
    VPNs. The administrator then configures the VPN in both the Azure portal and their
    local network device. They then configure each side of the connection with the
    public IP address of the other side, as well as the private network IP range represented
    behind each VPN gateway, which allows the gateway to determine if it should route
    traffic over the connection. To authenticate the connection, both sides are also
    given the same shared key.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建这样的连接，企业网络必须具有支持站点到站点 VPN 的本地网络设备，如路由器或 VPN 网关设备。然后，管理员在 Azure 门户和本地网络设备上配置
    VPN。接着，他们为连接的每一端配置对方的公共 IP 地址，以及每个 VPN 网关后面代表的私有网络 IP 范围，这允许网关判断是否应通过该连接路由流量。为了验证连接，双方还需要使用相同的共享密钥。
- en: Because administrators can set up the corporate network side of the VPN on a
    wide variety of devices, determining which device is responsible for a given connection
    is difficult, so it’s impractical to describe potential attacks against them.
    Instead, for site-to-site VPNs, focus on the Azure side of the connection.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 由于管理员可以在各种设备上设置 VPN 的企业网络部分，确定哪个设备负责某个特定连接是很困难的，因此描述可能的攻击方式并不现实。因此，对于站点到站点的
    VPN，重点放在连接的 Azure 端。
- en: If you can get administrative access to the Azure subscription, you can use
    PowerShell to display the details of VPN connections. The script in [Listing 6-2](part0015.html#ch06list2)
    will enumerate each connection and display its important details.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你可以获得 Azure 订阅的管理员访问权限，你可以使用 PowerShell 显示 VPN 连接的详细信息。[示例 6-2](part0015.html#ch06list2)
    中的脚本将列出每个连接并显示其重要详细信息。
- en: '[PRE3]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*Listing 6-2: PowerShell script to export the details of site-to-site VPN connections*'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '*示例 6-2：用于导出站点到站点 VPN 连接详细信息的 PowerShell 脚本*'
- en: 'This script will get a list of every Virtual Network gateway in every resource
    group in the subscription ➊, and then it will display details about the connection
    ➋ and information about the remote site linked to the VPN ➌. For each VPN connection
    in the subscription, here’s what the output from this script should look like:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本将获取订阅中每个资源组中的每个虚拟网络网关的列表 ➊，然后显示有关连接的详细信息 ➋ 和与 VPN 连接的远程站点的信息 ➌。对于订阅中的每个 VPN
    连接，脚本输出的内容应如下所示：
- en: '[PRE4]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The output begins with the name given to the site-to-site connection ➊, which
    may tell you something about the connection’s purpose, and so might the name of
    the Azure VPN gateway device ➋ and the on-premises network ➌—all of which are
    chosen by the user. The `SharedKey` value is the secret used to authenticate one
    site to the other ➍; by obtaining the `SharedKey`, you may be able to establish
    your own connection to the corporate VPN gateway, depending on the configured
    IP ranges. `ConnectionStatus` shows whether the VPN link is currently established
    ➎. Finally, `GatewayIpAddress` is the public IP endpoint for the corporate VPN
    gateway ➏, and `AddressSpaceText` is the private network IP range on the client
    network for the VPN ➐.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 输出首先显示站点到站点连接的名称 ➊，这可能会告诉你连接的目的，Azure VPN 网关设备的名称 ➋ 和本地网络 ➌ 也可能给出一些线索——这些都是用户选择的。`SharedKey`
    值是用于验证一个站点与另一个站点的秘密 ➍；通过获取 `SharedKey`，你可能能够根据配置的 IP 范围建立到企业 VPN 网关的连接。`ConnectionStatus`
    显示 VPN 链接是否已建立 ➎。最后，`GatewayIpAddress` 是企业 VPN 网关的公共 IP 端点 ➏，而 `AddressSpaceText`
    是客户端网络上用于 VPN 的私有网络 IP 范围 ➐。
- en: '**DEFENDER’S TIP**'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**DEFENDER 的提示**'
- en: You need to take two important steps to avoid rogue connections to your site-to-site
    VPN. First, be sure to choose a complex shared key that an attacker can’t guess;
    this way, your adversary is forced to compromise either your VPN gateway device
    or the Azure subscription to obtain it. Second, configure your VPN settings and
    firewalls to only allow site-to-site connections (and the network traffic routed
    through them) between the IPs you expect.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要采取两个重要步骤来避免恶意连接到你的站点到站点 VPN。首先，确保选择一个复杂的共享密钥，使攻击者无法猜测；这样，你的对手就必须破坏你的 VPN
    网关设备或 Azure 订阅来获取该密钥。其次，配置你的 VPN 设置和防火墙，仅允许在你预期的 IP 地址之间建立站点到站点的连接（以及通过它们路由的网络流量）。
- en: '**Connecting to Multisite VPNs**'
  id: totrans-104
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**连接到多站点 VPN**'
- en: Multisite VPNs allow numerous sites to interconnect with each other, either
    in a mesh topology, where every branch in the VPN links to every other branch,
    or a hub-and-spoke design, where branches talk back to central offices. Multisite
    VPNs are useful for companies with many small field offices, such as banks, insurance
    agencies, and political campaigns.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Azure handles multisite VPNs by allowing each Azure VPN gateway to have multiple
    site-to-site connections concurrently. Therefore, all the information from the
    previous section also applies to multisite configurations. The script in [Listing
    6-2](part0015.html#ch06list2) is designed to handle all types of VPN deployments,
    so you can use it for multisite VPNs too.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '**Connecting to VNet-to-VNet VPNs**'
  id: totrans-107
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: For resources running in two different Azure virtual networks that need to communicate,
    Microsoft offers VNet-to-VNet VPN connections. Administrators can use these VPNs
    to connect other virtual networks in different regions or even different subscriptions.
    They share almost all of the same attributes as site-to-site VPNs, except instead
    of a customer network device on one end of the connection, VNet-to-VNet VPNs use
    another Azure VPN gateway instance.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: One option for you as a pentester is to add a VPN gateway to your own subscription
    and then attempt to pair it to your target’s virtual network. This is a fairly
    noticeable thing to do, because the VPN connection would be clearly visible in
    the Azure portal, but it would provide a novel way to maintain persistent access
    to VMs in the subscription, until the connection was discovered. If you attempt
    this, do it in a sparsely used subscription because the target’s administrators
    would have direct access to your systems—VNet-to-VNet VPNs are bidirectional,
    after all.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: 'For this to work, the target must already have a VPN gateway in their subscription.
    From this gateway, you’ll need the gateway’s name and ID (for example, */subscriptions/Subscription_Id/resourceGroups/Resource_Group/**providers**/Microsoft.Network/virtualNetworkGateways/Gateway_Name)*.
    You can obtain both of these values with administrative access to the target subscription
    using this PowerShell command:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You’ll also need a VPN gateway in your own subscription and to possess the
    same values for your own gateway. With this data, you’d run these commands in
    your subscription:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You can replace the gateway connection name (here, V2V) and shared key (Key)
    with any desired value. You would then run this command in the target subscription,
    swapping the target gateway values for your gateway’s details. At this point,
    the VPN connection should be established and ready for use.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '***ExpressRoute***'
  id: totrans-115
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Site-to-site VPNs work well for many customers, but they are still dependent
    on the underlying internet connection between a company and an Azure datacenter.
    This path likely requires numerous hops between different network providers, so
    latency and bandwidth of the link aren’t guaranteed. For some mission-critical
    applications, this uncertainty is unacceptable; in these cases, ExpressRoute provides
    a viable alternative.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 站点到站点的VPN对于许多客户来说效果很好，但它们仍然依赖于公司与Azure数据中心之间的基础互联网连接。这条路径可能需要经过多个不同的网络提供商，因此链接的延迟和带宽无法保证。对于一些关键任务应用程序，这种不确定性是不可接受的；在这些情况下，ExpressRoute提供了一个可行的替代方案。
- en: ExpressRoute is a Microsoft service that allows customers to establish dedicated
    circuits between their company and Microsoft’s cloud services. These connections
    are built using private lines instead of the internet, have stable latencies and
    bandwidth, and provide a service level agreement (SLA). They are available in
    speeds from 50MBps to 10GBps.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: ExpressRoute是微软的一项服务，允许客户在其公司和微软的云服务之间建立专用电路。这些连接使用私有线路而非互联网构建，具有稳定的延迟和带宽，并提供服务级别协议（SLA）。它们的速度范围从50MBps到10GBps不等。
- en: Because these connections require specific agreements between the customer,
    the network provider creating the link, and Microsoft, as well as advanced networking
    knowledge to configure them, you’ll typically only find these types of connections
    in large enterprises and institutions. Because of these requirements, you’re unlikely
    to be able to target the ExpressRoute connection itself; however, you may be able
    to leverage the connection to access systems that would otherwise be inaccessible.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这些连接需要客户、创建链接的网络提供商和微软之间的特定协议，并且需要高级的网络知识来配置，所以通常只有在大型企业和机构中才能找到这些类型的连接。由于这些要求，你通常无法直接访问ExpressRoute连接本身；然而，你可能可以利用该连接访问原本无法访问的系统。
- en: 'To determine if your target is using an ExpressRoute, you can use PowerShell,
    if you have subscription access, like so:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定目标是否正在使用ExpressRoute，你可以使用PowerShell（如果你有订阅访问权限），如下所示：
- en: '[PRE7]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This command will return all of the ExpressRoute circuits in the current subscription,
    including their names ➊, datacenter region ➋, whether the connection is billed
    per GB for data (metered) or is unlimited ➌, which network provider runs the link
    ➍, the link location ➎, and the bandwidth ➏. Additionally, a `ServiceKey` is provided
    that other commands use to view or change settings for the connection ➐.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令将返回当前订阅中的所有ExpressRoute电路，包括它们的名称 ➊、数据中心区域 ➋、连接是否按数据量（计量）收费或是无限流量 ➌、哪个网络提供商运行该链接
    ➍、链接位置 ➎，以及带宽 ➏。此外，还提供了一个`ServiceKey`，其他命令可以使用它来查看或更改连接的设置 ➐。
- en: 'If you gain access to an ExpressRoute-connected system, understanding what
    may be accessible through the link is helpful. An ExpressRoute can route traffic,
    between an enterprise and Microsoft datacenters, bound for three different types
    of services: Azure private systems, Azure public IPs, and Microsoft public IPs.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你获得了ExpressRoute连接系统的访问权限，了解通过该链接可以访问的内容是很有帮助的。ExpressRoute可以在企业和微软数据中心之间传输流量，目的地可以是三种不同类型的服务：Azure私有系统、Azure公共IP和微软公共IP。
- en: Private peering is a bidirectional link between company servers and resources
    running in Azure that are connected to an Azure VPN (for example, virtual machines).
    This is the equivalent of site-to-site Azure VPN connections. So, if you compromise
    an Azure VM connected to an ExpressRoute network, you’ll have direct access to
    the enterprise network on the other end of the link, and vice versa.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 私有对等互联是公司服务器与在Azure中运行且连接到Azure VPN的资源之间的双向链接（例如，虚拟机）。这相当于站点到站点的Azure VPN连接。因此，如果你妥协了一个连接到ExpressRoute网络的Azure虚拟机，你将直接访问链接另一端的企业网络，反之亦然。
- en: Azure public peering is a one-way company-to-Azure link to services that Azure
    exposes publicly (for example, Azure Storage). For this traffic, the company network
    can make requests of these services, but the services cannot initiate communication
    back to the company. The traffic still travels through the dedicated link.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Azure公共对等互联是一种单向的公司到Azure的链接，连接到Azure公开暴露的服务（例如，Azure存储）。对于这种流量，公司网络可以向这些服务发出请求，但服务不能主动与公司进行通信。流量仍然通过专用链接传输。
- en: Microsoft public peering is a bidirectional link for other Microsoft services
    that are publicly exposed, such as Office 365, Exchange Online, and Skype. Because
    these services were designed to be used directly from the internet, Microsoft
    discourages routing this traffic through an ExpressRoute and requires that customers
    who wish to route such traffic work with their Microsoft account representatives
    to enable it. As such, you’re unlikely to encounter this configuration.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'You can determine what type of routes are enabled for a given ExpressRoute
    by running these PowerShell commands with the service key returned by the `Get-AzureRmExpressRouteCircuit`
    cmdlet:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The first line imports ExpressRoute PowerShell cmdlets that aren’t automatically
    loaded with the other cmdlets. Each `Get-AzureBGPPeering` cmdlet will return the
    state of the specified route—enabled or disabled—as well as the network subnet
    associated with the connection.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '**DEFENDER’S TIP**'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: The biggest risk with an ExpressRoute connection is that an Azure virtual machine
    that is connected to an ExpressRoute virtual network will be compromised and used
    to attack resources on the enterprise’s network. The best way to avoid this attack
    is to make sure that no VMs in the virtual network are assigned public IP addresses.
    If the VM isn’t public facing, it can only be attacked from within the subscription
    or from the enterprise network, which greatly reduces the risk of a breach. To
    make sure no such internet-to-ExpressRoute-to-enterprise bridge is created, a
    good practice is to place ExpressRoute connections and any resources that use
    them into their own subscription; that way, a public resource can’t be accidentally
    added to the ExpressRoute virtual network. Another option is to enable forced
    tunneling, which routes all traffic on a system back through the VPN connection.
    More information can be found at *[https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-about-forced-tunneling/](https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-about-forced-tunneling/)*.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '***Service Bus***'
  id: totrans-131
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The full network connectivity that VPNs and ExpressRoute offer is great for
    complex environments that use lots of protocols, but not every scenario calls
    for such a large pipe between the cloud and a corporation. For projects with a
    much smaller scope, Azure Service Bus may be a better solution. With Service Bus,
    a developer creates an endpoint in Azure that services can communicate with and
    then runs a small agent application on the corporate network that calls out to
    Azure to receive the incoming work. With this design, administrators don’t need
    to open any inbound ports on the corporate firewall because the connection originates
    from the internal network.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: 'Service Bus offers two different modes of operation: *Brokered messaging* is
    a pull mechanism that caches inbound messages in Azure until the agent application
    calls out to pick up any pending work. *Azure Relay* maintains a persistent connection
    between Azure and the agent, so work is pushed through the pipe immediately and
    nothing is cached. Both of these mechanisms use the same Service Bus resource;
    it’s up to the developer to choose whose messages are received.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: Service Bus 提供两种不同的操作模式：*经纪人消息传递*是一种拉取机制，它会将传入的消息缓存到 Azure，直到代理应用程序调用并获取任何待处理的工作。*Azure
    Relay* 在 Azure 和代理之间保持一个持久连接，因此工作会立即通过管道推送，并且没有任何缓存。这两种机制都使用相同的 Service Bus 资源；开发者可以选择接收哪一方的消息。
- en: The messages that pass through Service Bus are completely at the discretion
    of the developer using the service; much like the post office, Service Bus only
    handles proper delivery of packets without regard for their content. Because Service
    Bus is so flexible, administrators must write custom code for both the message
    producer side of the pipe and the consuming end in order to create, then interpret
    and act upon, the messages. As a result, the Azure portal and Azure PowerShell
    cmdlets only show the administrative details of the Service Bus resources (for
    example, pending message count and last message received date), but not any details
    of the messages themselves. However, you can use an open source utility to examine
    the messages.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Service Bus 传递的消息完全由使用该服务的开发者自行决定；就像邮局一样，Service Bus 仅负责正确交付数据包，而不关心其内容。由于
    Service Bus 非常灵活，管理员必须为管道的消息生产端和消费端编写自定义代码，以创建、解释并处理消息。因此，Azure 门户和 Azure PowerShell
    cmdlet 仅显示 Service Bus 资源的管理详细信息（例如，待处理消息数量和最后接收到的消息日期），而不显示消息本身的任何详细信息。然而，你可以使用开源工具来检查这些消息。
- en: '**Obtaining Service Bus Administrative Details**'
  id: totrans-135
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**获取 Service Bus 管理详细信息**'
- en: 'Every Service Bus instance has several properties that can be useful to a penetration
    tester: the name of the instance, its resource group, its URL, and its access
    key(s). To obtain this information, begin by opening a PowerShell command prompt,
    connecting to the Azure subscription, and then running the following command:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Service Bus 实例都有一些对渗透测试者有用的属性：实例名称、资源组、URL 和访问密钥。要获取这些信息，请首先打开 PowerShell
    命令提示符，连接到 Azure 订阅，然后运行以下命令：
- en: '[PRE9]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This should display each Service Bus resource within the current subscription,
    including its name ➊, resource group ➋ (nested within the `Id` field), geographic
    location ➌, and URL ➍. Each Service Bus can also have multiple access keys. Each
    key is associated with an *authorization rule*, which determines if the key can
    be used to send messages (a Send right), receive them (a Listen right), perform
    administrative actions on the queue (a Manage right), or some combination of these
    actions. By default, each Service Bus has a primary and secondary root key that
    can perform any action.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该显示当前订阅中的每个 Service Bus 资源，包括其名称 ➊、资源组 ➋（嵌套在 `Id` 字段中）、地理位置 ➌ 和 URL ➍。每个 Service
    Bus 也可以有多个访问密钥。每个密钥与一个*授权规则*相关联，该规则决定了密钥是否可以用于发送消息（发送权限）、接收消息（接收权限）、对队列执行管理操作（管理权限）或这些操作的组合。默认情况下，每个
    Service Bus 都有一个主密钥和一个副密钥，这些密钥可以执行任何操作。
- en: 'To view the authorization rules used for a given instance, run this command:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看给定实例使用的授权规则，请运行以下命令：
- en: '[PRE10]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This should provide the name of each rule ➊ as well as what rights it grants
    ➋. You can find details about the exact privileges associated with each right
    at *[https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas#rights-required-for-service-bus-operations](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas#rights-required-for-service-bus-operations)*.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该提供每个规则的名称 ➊ 以及它授予的权限 ➋。你可以在 *[https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas#rights-required-for-service-bus-operations](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas#rights-required-for-service-bus-operations)*
    上找到有关每个权限的详细信息。
- en: 'Once you have a rule name, you can run the following command to obtain the
    access keys associated with that rule:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了规则名称，你可以运行以下命令来获取与该规则相关联的访问密钥：
- en: '[PRE11]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Using either of these keys, you should be able to interact with the Service
    Bus instance just as the developer’s applications would.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些密钥中的任何一个，你应该能够像开发者的应用程序一样与 Service Bus 实例交互。
- en: '**Interacting with Service Bus Messages**'
  id: totrans-145
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**与 Service Bus 消息交互**'
- en: 'Once you have an access key for a Service Bus instance, you should examine
    the contents of the messages going through that channel. Depending on the messages
    you see, you might take one of several actions:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: If messages contain sensitive data, such as email addresses or credit card numbers,
    that is a finding to report.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For messages that seem to trigger an action, such as order processing, see if
    inserting a rogue message will result in an action, such as shipping goods without
    making a payment.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Send messages with invalid values to see if the receiving application is vulnerable
    to common software errors, such as remote code execution, denial of service, and
    SQL injection.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Of course, each of these actions require a program that can interact with Service
    Bus. Because there aren’t any native Azure tools for this, you have two options:
    attempt to modify the developer’s own code, or use a separate tool. If you’ve
    already found the developer’s source code during the engagement (or if you have
    a copy of their application and you possess reverse-engineering skills), the first
    option might be best. This would allow you to understand exactly what kinds of
    messages this Service Bus processes as well as to review the receiver code to
    look for exploitable mistakes, such as insufficient message-validation checks.
    Additionally, you’d probably only need to make minor tweaks to create test messages.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: In many cases, though, you might not find a copy of the developer’s code. In
    these instances, Service Bus Explorer (*[https://github.com/paolosalvatori/ServiceBusExplorer/](https://github.com/paolosalvatori/ServiceBusExplorer/)*)
    is your best bet. Service Bus Explorer is a free, open source tool to examine
    pending messages, send test messages, and perform management tasks on Service
    Bus. [Figure 6-5](part0015.html#ch06fig5) shows Service Bus Explorer viewing an
    unretrieved brokered message from a queue.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00049.jpeg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
- en: '*Figure 6-5: Service Bus Explorer interface*'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: For particularly busy queues, Service Bus Explorer offers the Create Queue Listener
    option; you can access it by right-clicking the name of a queue. This opens a
    window that can record messages as they enter the queue, and it displays statistics
    about the number, size, and speed at which messages are processed. After reviewing
    a number of messages, you can use the Send Messages option in the same menu to
    test the receiver’s handling of rogue instructions.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: One last thing to know about Service Bus Explorer is where it caches its credentials.
    Like the storage utilities discussed in [Chapter 4](part0013.html#ch04), Service
    Bus Explorer allows users to save any of the connection strings they use. Therefore,
    if you find it installed on a system you compromise, check for saved credentials.
    These are stored in the same directory as the Service Bus Explorer application,
    in a file named *ServiceBusExplorer.exe.Config*; this is an XML file, and the
    credentials are located in the `<serviceBusNamespaces>` section.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '***Logic Apps***'
  id: totrans-156
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Logic Apps, the most recent entrant to the cross-network communication field,
    allow developers and code novices alike to create a trigger for an event in one
    of any number of Azure or third-party services that sets off a chain reaction
    of other events. For example, a Logic App could monitor Twitter for tweets containing
    a company’s name and log them to a SQL database. The same app could also email
    the CEO and post to the marketing team’s Slack channel.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: Whereas Service Bus relies on the developer to decide what to do with an incoming
    message and write the code to take action on it, Logic Apps do all of the backend
    work to tie disparate services together. Users just need to create a workflow
    with a simple GUI.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: 'As brokers between other services, Logic Apps don’t offer a large attack surface.
    They don’t maintain copies of the data they route, so the selected destination
    service decides what to do with the data. But there is one area of interest for
    a penetration tester: service credentials. With the ability to read from or post
    to everything from Adobe Creative Cloud to Zendesk, Logic Apps have the ability
    to cache a lot of credentials or access tokens for both Microsoft and third-party
    services. However, all of the credentials are write-only; once submitted, the
    keys can be overwritten, but they are never again revealed to the user.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: Although this design does prevent an attacker from stealing service credentials
    and using them elsewhere, an attacker can still leverage them for nefarious purposes.
    Once a credential is stored, it’s accessible from within that particular Logic
    App for all actions related to that service. In other words, if a Logic App contains
    an action to read from Twitter, a pentester can add an action to the app to post
    a tweet from the same account without additional authorization, as shown in [Figure
    6-6](part0015.html#ch06fig6).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: As a pentester, if you have access to the Logic App in Azure portal, you can
    modify it to perform new actions against the same services that the app already
    uses. I suggest doing this in the portal, because Logic Apps are designed to be
    created with the GUI-based editor; therefore, the PowerShell cmdlets for Logic
    Apps have limited capabilities.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00050.jpeg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
- en: '*Figure 6-6: Logic App Designer showing the addition of a Post a tweet action*'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '**Summary**'
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this chapter, we discussed various ways to establish and protect networks
    in Azure, as well as ways to leverage these technologies in a penetration test.
    We started with firewalls built into Azure, including those used for virtual machines,
    SQL servers, and web applications. Next, we looked at VPN options available in
    Azure, including point-to-site, site-to-site, multisite, and VNet-to-VNet, and
    how an attacker could attempt to infiltrate these connections. Then, we discussed
    ExpressRoute, a dedicated circuit technology similar to VPNs that large companies
    use to connect directly to Azure.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we covered two technologies to connect non-Azure services to Azure:
    Service Bus provides a message tunnel for developers looking to receive information
    from the cloud, and Logic Apps are designed for nondevelopers to build workflows
    between Azure, other services providers, and enterprise systems. Take extra care
    when auditing network components; though each of these technologies includes security
    mechanisms, if they are improperly configured, this could lead to the compromise
    of an Azure virtual network, a corporate network, or accounts within third-party
    services.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
