- en: '![Image](../images/common1.jpg)'
  id: totrans-0
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common1.jpg)'
- en: '**9**'
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**9**'
- en: '**ENVIRONMENTAL MADNESS**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**环境疯狂**'
- en: The Mad Scientist loves to measure things. In this chapter, we’ll follow in
    the scientist’s footsteps by measuring the temperature. We’ll devise a temperature
    and light logger that will provide valuable insights into our environmental experiments.
    Then we’ll create a plant-watering project that uses a small pump to water a houseplant
    automatically when its soil starts to dry out.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 疯狂科学家喜欢测量各种事物。在本章中，我们将跟随科学家的脚步来测量温度。我们将设计一个温度和光照记录仪，提供有价值的环境实验数据。接着，我们将创建一个植物浇水项目，利用一个小型泵在植物土壤开始变干时自动浇水。
- en: '**EXPERIMENT 11: MEASURING TEMPERATURE**'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**实验11：测量温度**'
- en: '![Image](../images/common2.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common2.jpg)'
- en: '*Difficulty: Easy*'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*难度：简单*'
- en: Owning no clothes besides lab coats and having skimped on the insulation budget
    for the Secret Laboratory, the Mad Scientist decided to build a custom heating
    system. To do this, they needed to know the exact temperature in every room of
    the lab. Unfortunately, they soon found the measurements taken with their micro:bit
    were not exact enough.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 疯狂科学家除了实验室外套外并没有其他衣物，并且在秘密实验室的隔热预算上也没怎么花钱，于是决定建造一个定制的加热系统。为了实现这一目标，他们需要知道实验室每个房间的确切温度。不幸的是，他们很快发现，使用micro:bit测得的温度并不够精确。
- en: The micro:bit has a function named `temperature` in both the Blocks and MicroPython
    code that returns a temperature reading in degrees Celsius. However, the sensor
    itself is built into the micro:bit’s processor and thus is actually reporting
    the temperature of the micro:bit’s *chip*, not the temperature of the micro:bit’s
    surroundings.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: micro:bit在Blocks和MicroPython代码中都有一个名为`temperature`的函数，可以返回以摄氏度为单位的温度读数。然而，传感器本身是内置在micro:bit的处理器中的，因此实际上它报告的是micro:bit的*芯片*的温度，而不是micro:bit周围环境的温度。
- en: At normal room temperature of around 20 degrees C (68 degrees F), if the micro:bit
    hasn’t been running for too long, the sensor gives a fairly accurate reading.
    However, we can’t be sure whether the temperature reading is correct if the micro:bit’s
    processor has been busy and started warming up.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在大约20摄氏度（68华氏度）的正常室温下，如果micro:bit没有运行太长时间，传感器会提供相当准确的读数。然而，如果micro:bit的处理器已经忙碌并开始升温，我们无法确保温度读数是否准确。
- en: In this experiment, you’ll investigate the difference between the temperature
    readings of a busy micro:bit and an idle micro:bit.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，你将研究忙碌的micro:bit与空闲的micro:bit之间温度读数的差异。
- en: '**What You’ll Need**'
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**你需要的材料**'
- en: 'To do this experiment, you’ll just need two things:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行这个实验，你只需要两样东西：
- en: '**Micro:bit**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**Micro:bit**'
- en: '**USB cable**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**USB 数据线**'
- en: You may also want a separate thermometer to check your readings against. The
    only other thing you’ll need is some patience, as you’ll need to leave this program
    running for half an hour to get good readings.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还需要一个单独的温度计来核对你的读数。你需要的唯一其他物品是一些耐心，因为你需要让程序运行半个小时才能得到准确的读数。
- en: '**Construction**'
  id: totrans-16
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**构建**'
- en: This project uses Mu’s Plotter feature, which you’ll need Python for, so there’s
    no Blocks code for this. Find the code at *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*.
    The Python file for this experiment is *Experiment_11.py*. Flash the program onto
    your micro:bit.. This code will take temperature readings every 20 seconds. It
    will also initiate micro:bit activity every 10 minutes and then idle for 10 minutes,
    letting you see the difference in temperature between when the micro:bit is busy
    and when it’s idle.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个项目使用了Mu的绘图工具，需要Python支持，所以没有使用Blocks代码。你可以在*[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*找到代码。这个实验的Python文件是
    *Experiment_11.py*。将程序上传到你的micro:bit上。此代码将每20秒读取一次温度。它还会每10分钟启动一次micro:bit活动，然后停顿10分钟，让你观察micro:bit忙碌与空闲状态下的温度差异。
- en: Open both the REPL and Plotter views of Mu and press **Reset** on the micro:bit
    to start the reading process. A new temperature reading, and an indication as
    to whether the micro:bit has been busy or idle, are logged to the Plotter and
    REPL every 20 seconds. The busy/idle status of the micro:bit flips every 10 minutes.
    [Figure 9-1](ch09.xhtml#ch9fig1) shows the result of logging the data for 40 minutes.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Mu的REPL和Plotter视图，并按下micro:bit上的**重置**按钮以开始读取过程。每20秒，Plotter和REPL中都会记录新的温度读数以及micro:bit是否处于忙碌或空闲状态。micro:bit的忙碌/空闲状态每10分钟切换一次。[图9-1](ch09.xhtml#ch9fig1)显示了记录40分钟数据的结果。
- en: '![Image](../images/09fig01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/09fig01.jpg)'
- en: '*Figure 9-1: Plotting temperature readings and processor activity*'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9-1：绘制温度读数和处理器活动*'
- en: The blue line shows the temperature reported by the `temperature` function,
    and the green line indicates whether the micro:bit is busy or idle. When busy,
    the micro:bit turns on the display and its radio interface, and it displays the
    message `Busy` over and over.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 蓝线显示由`temperature`函数报告的温度，绿线表示micro:bit是否处于忙碌或空闲状态。当处于忙碌状态时，micro:bit开启显示屏和无线电接口，并反复显示消息`Busy`。
- en: As you can see from [Figure 9-1](ch09.xhtml#ch9fig1), when the micro:bit is
    in busy mode, the reported temperature rises by about 3 degrees C. When it goes
    back to idle mode, the temperature drops. Note that the temperature in the room,
    as measured by a separate thermometer, remained at 20.0 degrees C throughout the
    experiment.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图9-1](ch09.xhtml#ch9fig1)所示，当micro:bit处于忙碌模式时，报告的温度上升了约3摄氏度。当它回到空闲模式时，温度下降。需要注意的是，房间中的温度（通过单独的温度计测量）在整个实验过程中保持在20.0摄氏度。
- en: '**Code**'
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**代码**'
- en: 'The MicroPython code for the experiment needs to do two things: flip the busy
    state (held in the variable `busy`) of the micro:bit every 10 minutes and report
    the temperature every 20 seconds.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 该实验的MicroPython代码需要完成两件事情：每10分钟翻转一次micro:bit的忙碌状态（保存在变量`busy`中），并且每20秒报告一次温度。
- en: '**Setting the Variables**'
  id: totrans-25
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**设置变量**'
- en: 'Our code uses the variables `last_busy_flip` and `last_log_time` to record
    the last time these two things (flip and log) happened:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的代码使用`last_busy_flip`和`last_log_time`变量来记录这两件事（翻转和记录）最后一次发生的时间：
- en: busy = False
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: busy = False
- en: last_busy_flip = 0
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: last_busy_flip = 0
- en: busy_period = 600000
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: busy_period = 600000
- en: last_log_time = 0
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: last_log_time = 0
- en: log_period = 20000
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: log_period = 20000
- en: The variable `busy_period` specifies the time in milliseconds between each flip
    between the busy and idle state; 600,000 milliseconds is equal to 600 seconds,
    which is 10 minutes. The variable `log_period` holds the time between temperature
    reports; 20,000 milliseconds is equal to 20 seconds. The code `busy = False` means
    the micro:bit starts off idle.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 变量`busy_period`指定了每次在忙碌和空闲状态之间翻转的时间（以毫秒为单位）；600,000毫秒等于600秒，也就是10分钟。变量`log_period`保存温度报告之间的时间（以毫秒为单位）；20,000毫秒等于20秒。代码`busy
    = False`表示micro:bit一开始是处于空闲状态。
- en: '**Making It Busy**'
  id: totrans-33
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使其处于忙碌状态**'
- en: If the micro:bit is in busy mode, both the display and radio are turned on and
    the message `Busy` is displayed. Otherwise, the radio and display are off.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果micro:bit处于忙碌模式，显示屏和无线电都会开启，并显示`Busy`消息。否则，显示屏和无线电会关闭。
- en: 'while True:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 'while True:'
- en: 'if busy:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 'if busy:'
- en: ➊ display.on()
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: ➊ display.on()
- en: ➋ radio.on()
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: ➋ radio.on()
- en: display.show("Busy")
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: display.show("Busy")
- en: 'else:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: display.off()
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: display.off()
- en: radio.off()
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: radio.off()
- en: now = running_time()
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: now = running_time()
- en: 'if now > last_busy_flip + busy_period:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 'if now > last_busy_flip + busy_period:'
- en: busy = not busy
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: busy = not busy
- en: last_busy_flip = now
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: last_busy_flip = now
- en: now = running_time()
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: now = running_time()
- en: 'if now > last_log_time + log_period:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 'if now > last_log_time + log_period:'
- en: print((temperature(), busy * 10))
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: print((temperature(), busy * 10))
- en: last_log_time = now
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: last_log_time = now
- en: In a `while` loop, we say that if the `busy` variable is `True`, the micro:bit
    should turn the display ➊ and radio ➋ on. Otherwise, they should be switched off.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在`while`循环中，我们规定如果`busy`变量为`True`，micro:bit应该开启显示屏➊和无线电➋。否则，它们应该关闭。
- en: 'Then we have two tests to see whether either a flip of the busy status or a
    log to the REPL and Plotter are due: the code checks the current runtime against
    the values in the `busy_period` and `log_period` variables.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们有两个测试用来检查是否该翻转忙碌状态或记录数据到REPL和Plotter：代码检查当前运行时间与`busy_period`和`log_period`变量中的值。
- en: To easily see when the processor is busy on the same plot as the temperature
    ([Figure 9-1](ch09.xhtml#ch9fig1)), we multiply the `True` or `False` Boolean
    value of `busy` by 10\. Python allows us to do this! Rather than reporting an
    error, Python interprets `False` as 0 and `True` as 1\. Because Python treats
    the Boolean values as numbers, it lets us multiply them. Then, instead of being
    either 0 or 1, the value is plotted as either 0 or 10.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便在与温度数据相同的图表上看到处理器是否处于忙碌状态（见[图9-1](ch09.xhtml#ch9fig1)），我们将`busy`的布尔值`True`或`False`乘以10。Python允许我们这样做！而不是报告错误，Python将`False`解释为0，将`True`解释为1。由于Python将布尔值视为数字，它允许我们进行乘法运算。于是，图表上的值就不是0或1，而是0或10。
- en: '**How It Works: Why Does a Processor Heat Up?**'
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**工作原理：为什么处理器会发热？**'
- en: A processor chip, like the one used by micro:bit, contains tens or even hundreds
    of thousands of *transistors*. These transistors are electronic switches that
    are in either an on or off state (represented by 1 and 0 in binary). Transistors
    use a very small amount of current when they are in a particular state (either
    on or off), but require a small amount of additional energy to change states.
    This is why, when doing something processor intensive, your computer fans will
    rev up—they’re removing the excess heat generated by the large amount of switching.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 像 micro:bit 使用的处理器芯片，包含数十万甚至数百万个 *晶体管*。这些晶体管是电子开关，可以处于开或关的状态（用二进制的 1 和 0 表示）。晶体管在特定状态下使用极少的电流（无论是开还是关），但是需要少量额外的能量来改变状态。这就是为什么在进行处理器密集型操作时，电脑风扇会加速运转——它们正在移除由于大量开关操作而产生的多余热量。
- en: A busy processor is a warmer processor. But other things can affect the processor
    temperature, too. In this experiment, the LEDs used by the display give off a
    little heat, as does switching the radio on and off. So, even though our definition
    of `busy` is a little misleading because it includes turning the radio and display
    on and off, the idea that the micro:bit’s temperature readings are influenced
    by what the micro:bit happens to be doing still stands.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一个忙碌的处理器会更热。但其他因素也会影响处理器的温度。在这个实验中，显示器使用的 LED 会产生一些热量，打开和关闭无线电时也会产生热量。因此，尽管我们定义的
    `忙碌` 有点误导，因为它包括了打开和关闭无线电以及显示器，但微型计算机的温度读数仍然受到 micro:bit 当前操作的影响。
- en: '**PROJECT: TEMPERATURE AND LIGHT LOGGER**'
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**项目：温度与光照记录仪**'
- en: '![Image](../images/common3.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/common3.jpg)'
- en: '*Difficulty: Medium*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*难度：中等*'
- en: As a hopeless perfectionist and incorrigible botanist, the Mad Scientist wanted
    a way to measure the ideal location for all the plants in the laboratory. And
    so a logger of temperature and light was born.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个彻底的完美主义者和不可救药的植物学家，疯狂科学家希望找到一种方法来测量实验室中所有植物的理想位置。因此，温度与光照记录仪应运而生。
- en: In Experiment 7, we wrote acceleration readings into a file for later analysis.
    In that case, we wanted to take readings immediately. Here, we want to log values
    over a period of time, say over the course of a day.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在实验 7 中，我们将加速度读数写入文件以供后续分析。在那种情况下，我们希望立即进行读取。而在这里，我们希望在一段时间内记录数值，例如一天的时间。
- en: '![Image](../images/f0204-01.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/f0204-01.jpg)'
- en: '[Figure 9-2](ch09.xhtml#ch9fig2) shows the completed project. As you can see,
    we have built it into a transparent food container to protect it from the elements,
    in case we want to use it outdoors.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 9-2](ch09.xhtml#ch9fig2) 显示了完整的项目。正如你所看到的，我们已将其制作成透明的食品容器，以保护它免受外界环境的影响，以防我们想要在户外使用它。'
- en: '![Image](../images/09fig02.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/09fig02.jpg)'
- en: '*Figure 9-2: A temperature and light logger*'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 9-2：温度与光照记录仪*'
- en: You could use this logger to carry out a survey of your yard and determine the
    best place to grow different plants.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用这个记录仪对你的院子进行调查，并确定不同植物的最佳生长位置。
- en: '**What You’ll Need**'
  id: totrans-67
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**你需要的材料**'
- en: 'For this project, you’ll need the following items:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将需要以下物品：
- en: '**Micro:bit**'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**Micro:bit**'
- en: '**Monk Makes Sensor for micro:bit** Another temperature and light sensor would
    work as well.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**Monk Makes 传感器适用于 micro:bit** 其他温度与光照传感器也可以使用。'
- en: '**4 × Alligator clip cables**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**4 × 鳄鱼夹连接线**'
- en: '**AAA battery pack**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**AAA 电池包**'
- en: '**Transparent plastic food container** This is essential if you want to use
    the project outdoors. The container should be big enough to house the project,
    including the battery pack.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**透明塑料食品容器** 如果你打算在户外使用该项目，这是必需的。容器应足够大，以容纳项目设备，包括电池包。'
- en: '**Construction**'
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**构建**'
- en: This project uses the micro:bit’s local filesystem, which is not available in
    Blocks code yet. Therefore, this project can be done only in Python. Find the
    code at *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*.
    The Python file for this experiment is *ch_09_Logger.py*. Flash the program onto
    your micro:bit.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该项目使用了 micro:bit 的本地文件系统，而该文件系统在 Blocks 代码中尚不可用。因此，这个项目只能使用 Python 完成。代码可以在
    *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)* 中找到。这个实验的
    Python 文件是 *ch_09_Logger.py*。将程序刷入你的 micro:bit 中。
- en: Connect the micro:bit to the sensor board, as shown in [Figure 9-3](ch09.xhtml#ch9fig3).![Image](../images/09fig03.jpg)
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如[图 9-3](ch09.xhtml#ch9fig3)所示，将 micro:bit 连接到传感器板。![图片](../images/09fig03.jpg)
- en: '*Figure 9-3: Connecting the micro:bit to the Monk Makes Sensor*'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 9-3：将 micro:bit 连接到 Monk Makes 传感器*'
- en: Place everything into the food container, making sure that the sensor and micro:bit
    are at the top, near the lid. Fitting the alligator clips from the back of the
    boards will help.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有物品放入食品容器中，确保传感器和 micro:bit 在顶部，靠近盖子。从电路板背面连接鳄鱼夹将有所帮助。
- en: Turn on the battery pack. When you’re ready to start logging, press button **A**
    and then put the lid on the container. The display will change to show a single
    dot.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开电池包。当你准备开始记录时，按下按钮**A**，然后盖上容器的盖子。显示屏将切换为显示一个点。
- en: The logger can hold about 2,000 readings, so at a rate of one sample per second,
    it can run for 33 hours before running out of memory. This is about how long a
    set of AAA batteries should last.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 日志器可以保存大约 2,000 条读取数据，因此以每秒一个样本的速率，它可以运行 33 小时，直到内存耗尽。这大约是 AAA 电池组的使用时长。
- en: When you’re ready to stop the readings, press button **A** again. You can then
    connect the micro:bit to your computer and use Mu’s *Files* feature to transfer
    the file *data.txt* onto your computer, just as you did in Experiment 7 back in
    [Chapter 5](ch05.xhtml#ch05).
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你准备停止读取时，再次按下按钮**A**。然后，你可以将 micro:bit 连接到计算机，并使用 Mu 的 *Files* 功能将文件 *data.txt*
    传输到计算机，就像你在[第5章](ch05.xhtml#ch05)的实验7中做的那样。
- en: To make sense of the data, you’ll probably want to import it into a spreadsheet
    and draw some charts like the one in [Figure 9-4](ch09.xhtml#ch9fig4). See Experiment
    7 in [Chapter 5](ch05.xhtml#ch05) for an example of importing data from the *data.txt*
    file into Google Sheets.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了理解数据，你可能想将其导入到电子表格中，并绘制类似于[图9-4](ch09.xhtml#ch9fig4)中的图表。请参考[第5章](ch05.xhtml#ch05)中的实验7，了解如何将
    *data.txt* 文件中的数据导入到 Google Sheets 中。
- en: '![Image](../images/09fig04.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/09fig04.jpg)'
- en: '*Figure 9-4: Charting temperature and light*'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9-4：温度与光线图表*'
- en: In [Figure 9-4](ch09.xhtml#ch9fig4), the steep drop of the line in the light
    chart indicates the nightfall.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图9-4](ch09.xhtml#ch9fig4)中，光线图中的线急剧下降表示夜幕降临。
- en: '**Code**'
  id: totrans-86
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**代码**'
- en: 'For this project, we’ll need to import the os library, which we’ll use to delete
    any data file that might already be on the micro:bit. We do this to make space
    for our new readings. We’ll also need `log` from the math library to write the
    code that calculates the temperature. *Log* (or *logarithm*) is a mathematical
    concept used in the Steinhart-Hart equation that converts the resistance measurement
    of a thermistor to a temperature. If you are into math, you might like to read
    more about logarithms here: *[https://www.mathsisfun.com/algebra/logarithms.html](https://www.mathsisfun.com/algebra/logarithms.html)*.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，我们需要导入 os 库，它将用于删除可能已经存在于 micro:bit 上的任何数据文件。我们这么做是为了为新的读取数据腾出空间。我们还需要导入
    `log` 来自数学库，用于编写计算温度的代码。*Log*（或 *对数*）是一个数学概念，在 Steinhart-Hart 方程中用来将热敏电阻的电阻值转换为温度。如果你对数学感兴趣，可以在这里阅读更多关于对数的内容：*[https://www.mathsisfun.com/algebra/logarithms.html](https://www.mathsisfun.com/algebra/logarithms.html)*。
- en: '**Setting the Variables**'
  id: totrans-88
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**设置变量**'
- en: The code for this project waits for button A to be pressed and then repeatedly
    takes readings first of temperature then of the light level. Both readings are
    then written to a file so that when the logging is finished, they can be transferred
    a computer.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目的代码会等待按钮 A 被按下，然后依次记录温度和光照数据。两个数据都将写入文件中，以便在日志记录完成后，可以将它们传输到计算机。
- en: sample_period = 60000
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: sample_period = 60000
- en: filename = 'data.txt'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: filename = 'data.txt'
- en: temp_pin = pin1
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: temp_pin = pin1
- en: light_pin = pin2
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: light_pin = pin2
- en: last_sample_time = 0
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: last_sample_time = 0
- en: recording = False
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: recording = False
- en: display.show(Image.NO)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: display.show(Image.NO)
- en: We set the variable `sample_period` to 60000 milliseconds, or 1 minute. This
    period tells the micro:bit to take a recording once a minute. By default, the
    recorded data will be saved into a file called *data.txt*. You can change the
    name of this file by changing the value of the `filename` variable.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将变量 `sample_period` 设置为 60000 毫秒，或 1 分钟。这个周期告诉 micro:bit 每分钟记录一次数据。默认情况下，记录的数据将保存在名为
    *data.txt* 的文件中。你可以通过更改 `filename` 变量的值来更改文件名。
- en: We tell the micro:bit which two pins are connected to the temperature and light
    outputs of the sensor board in the `temp_pin` and `light_pin` variables. In the
    `last_sample_time` variable, we store the last time a reading of the environment
    was recorded.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们告诉 micro:bit 哪两个引脚连接到传感器板的温度和光线输出，分别存储在 `temp_pin` 和 `light_pin` 变量中。在 `last_sample_time`
    变量中，我们记录了上次读取环境数据的时间。
- en: We use the variable `recording` to keep track of the whether the project is
    recording or not recording. This variable is toggled between `True` and `False`
    every time button A is pressed.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用变量`recording`来跟踪项目是否正在录制。每次按下按钮 A 时，该变量在`True`和`False`之间切换。
- en: '**Reading the Temperature**'
  id: totrans-100
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**读取温度**'
- en: We create the function `read_c` to read the temperature. This involves quite
    a lot of math.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了`read_c`函数来读取温度。这涉及到相当复杂的数学运算。
- en: 'def read_c():'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 'def read_c():'
- en: r0 = 100000.0
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: r0 = 100000.0
- en: r2 = 100000.0
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: r2 = 100000.0
- en: b = 4250.0
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: b = 4250.0
- en: 'v33 = 3.3 # actual result is independent of this value'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 'v33 = 3.3 # 实际结果与此值无关'
- en: V = temp_pin.read_analog() * v33 / 1023.0
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: V = temp_pin.read_analog() * v33 / 1023.0
- en: R = r2 * (v33 - V) / V
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: R = r2 * (v33 - V) / V
- en: 't0 = 273.15 # 0 deg C in K'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 't0 = 273.15 # 0 摄氏度的开尔文温度'
- en: 't25 = t0 + 25.0 # 25 deg C in K'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 't25 = t0 + 25.0 # 25 摄氏度的开尔文温度'
- en: '# Steinhart-Hart equation (google it)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '# 斯坦哈特-哈特方程（可以 Google 查找）'
- en: inv_T = 1/t25 + 1/b * log(R/r0)
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: inv_T = 1/t25 + 1/b * log(R/r0)
- en: T = (1/inv_T - t0)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: T = (1/inv_T - t0)
- en: return round(T, 1)
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 round(T, 1)
- en: We won’t go into the math in detail, but it’s here in case you want to look
    through it.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会详细讲解这些数学公式，但它们在这里，方便你查阅。
- en: 'This function measures the voltage at the `temp_pin` (pin 1) and uses that
    to calculate the temperature in degrees Celsius. See “How It Works: Sensors” on
    [page 211](ch09.xhtml#page_211) for more information on how this works.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数测量`temp_pin`（引脚 1）上的电压，并使用该电压计算摄氏度的温度。有关如何工作的更多信息，请参阅[第 211 页](ch09.xhtml#page_211)中的“如何工作：传感器”部分。
- en: 'If you want your temperatures in Fahrenheit, use the function `read_f`, which
    calls `read_c` and converts the temperature to Fahrenheit:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要华氏温度，可以使用`read_f`函数，它会调用`read_c`并将温度转换为华氏度：
- en: 'def read_f(self):'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 'def read_f(self):'
- en: return read_c() * 9/5 + 32
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: return read_c() * 9/5 + 32
- en: '**Reading the Light Level**'
  id: totrans-120
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**读取光照水平**'
- en: The temperature readings are in units of Celsius or Fahrenheit. However, the
    light level is not expressed in any specific units. The light readings are just
    the direct analog readings from pin 2\. In effect, we have defined our own units.
    You can give them a name if you like, perhaps *lightiness*?
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 温度读数以摄氏度或华氏度为单位。然而，光照水平没有以特定的单位表示。光照读数只是来自引脚 2 的直接模拟读数。实际上，我们定义了自己的单位。如果你愿意，你可以给它们起个名字，也许叫*光度*？
- en: Measuring light intensity in its standard unit of lux is difficult with this
    kind of sensor. But if you have a calibrated lux meter, you could carry out your
    own experiment to compare Lux and *lightiness* under different levels of illumination.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 使用标准的勒克斯单位（lux）来测量光强对于这种传感器来说很困难。但如果你有一个经过校准的勒克斯计，你可以进行实验，比较在不同照明强度下的勒克斯和*光度*。
- en: '**The while Loop**'
  id: totrans-123
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**while 循环**'
- en: 'The main `while` loop (at the end of the code if you are following along in
    Mu) checks for a press of button A, toggling `recording` between `True` and `False`
    whenever the button is pressed. When recording starts, a single dot is displayed,
    and we delete the existing data file with `os.remove`. The `remove` command is
    contained within a `try: except:` Python structure. This makes sure that if an
    error occurs, probably because the data file isn’t there and can’t be deleted,
    the error is ignored and doesn’t crash the program. After we remove the old file,
    the new file is opened with a mode of `w` for writing.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '主`while`循环（如果你在 Mu 中跟着代码走的话，在代码的最后）检查按钮 A 是否被按下，每次按钮按下时，`recording`会在`True`和`False`之间切换。当录制开始时，会显示一个点，并且我们用`os.remove`删除现有的数据文件。`remove`命令被包含在`try:
    except:`的 Python 结构中。这确保如果发生错误（可能是因为数据文件不存在而无法删除），错误会被忽略，不会使程序崩溃。删除旧文件后，新的文件会以`w`模式打开以进行写入。'
- en: When button A is pressed again, the `NO` image is displayed and the file closed.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 当按钮 A 被再次按下时，`NO` 图像会显示，并且文件关闭。
- en: In the main `while` loop, there is also an `if` block that writes the readings
    from the light and temperature sensors to the file as long as `recording` is `True`
    and enough time has elapsed since the `last_sample_time`.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在主`while`循环中，还有一个`if`块，只要`recording`为`True`并且自上次采样时间以来已经经过足够的时间，它就会将来自光照和温度传感器的读数写入文件。
- en: 'while True:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 'while True:'
- en: 'if button_a.was_pressed():'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果按钮 A 被按下：
- en: recording = not recording
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: recording = not recording
- en: 'if recording:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果录制中：
- en: display.show(".")
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: display.show(".")
- en: 'try:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 'try:'
- en: os.remove(filename)
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: os.remove(filename)
- en: 'except:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 'except:'
- en: pass
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: pass
- en: fs = open(filename, 'w')
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: fs = open(filename, 'w')
- en: 'else:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 否则：
- en: display.show(Image.NO)
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: display.show(Image.NO)
- en: fs.close()
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: fs.close()
- en: now = running_time()
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: now = running_time()
- en: 'if now > last_sample_time + sample_period:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前时间 > 上次采样时间 + 采样周期：
- en: last_sample_time = now
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: last_sample_time = now
- en: 'if recording:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果录制中：
- en: temp = read_c()
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: temp = read_c()
- en: light = light_pin.read_analog()
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: light = light_pin.read_analog()
- en: fs.write(str(temp) + "," + str(light))
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: fs.write(str(temp) + "," + str(light))
- en: fs.write('\n')
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: fs.write('\n')
- en: '**How It Works: Sensors**'
  id: totrans-148
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**原理：传感器**'
- en: '*Thermistors* are a special type of resistor (see the lie detector project
    in [Chapter 8](ch08.xhtml#ch08)) whose resistance changes as the temperature changes.
    The type of thermistor used in the Monk Makes Sensor for micro:bit is an *NTC
    (negative temperature coefficient)*. The *negative* part means that when the temperature
    increases, the resistance decreases. We use the resistance to measure the temperature.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '*热敏电阻*是一种特殊类型的电阻（见[第8章](ch08.xhtml#ch08)中的测谎仪项目），其电阻会随着温度的变化而变化。在micro:bit的Monk
    Makes传感器中使用的热敏电阻是*NTC（负温度系数）*类型。*负*部分意味着当温度升高时，电阻会减小。我们使用电阻来测量温度。'
- en: Our thermistor sensor measures temperature as electrical resistance. However,
    a micro:bit cannot measure resistance directly. Instead, resistance must first
    be converted into a voltage, and this can then be read by the micro:bit pin that’s
    acting as an analog input. To do this, we need to use a voltage divider as we
    did in the lie detector project of [Chapter 8](ch08.xhtml#ch08). However, this
    time a thermistor, rather than someone’s skin, will provide the variable resistance
    ([Figure 9-5](ch09.xhtml#ch9fig5)). Note that the Monk Makes Sensor for micro:bit
    board has the 100kΩ resistor built in.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的热敏电阻传感器通过电阻来测量温度。然而，micro:bit无法直接测量电阻。相反，电阻必须首先转换为电压，然后可以通过作为模拟输入的micro:bit引脚读取。为了做到这一点，我们需要使用电压分压器，正如在[第8章](ch08.xhtml#ch08)的测谎仪项目中所做的那样。不过这次提供可变电阻的将是热敏电阻，而不是人的皮肤（见[图9-5](ch09.xhtml#ch9fig5)）。请注意，Monk
    Makes传感器板上内置了100kΩ的电阻。
- en: '![Image](../images/09fig05.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/09fig05.jpg)'
- en: '*Figure 9-5: Schematic diagram for using a thermistor to measure temperature*'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9-5：使用热敏电阻测量温度的电路图*'
- en: A thermistor’s resistance does not change every time there is a difference of
    some number of ohms, indicating a change of one degree. As you saw in the code
    earlier, the formula for calculating a thermistor’s resistance is complicated,
    involving the use of logarithms.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 热敏电阻的电阻值不会在每次电阻变化几个欧姆时就发生变化，表示温度变化了一度。正如你在之前的代码中看到的，计算热敏电阻电阻的公式很复杂，涉及到对数运算。
- en: 'When you buy a thermistor, it will specify two parameters:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 当你购买热敏电阻时，它会指定两个参数：
- en: '![Image](../images/play.jpg)  The resistance of the thermistor at 25 degrees
    C (called `r0` in our code and equal to 100kΩ for the sensor board)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/play.jpg)  热敏电阻在25摄氏度时的电阻值（在我们的代码中称为`r0`，对于传感器板而言，其值为100kΩ）'
- en: '![Image](../images/play.jpg)  A constant called `beta`, or sometimes just `B`,
    that is different for different thermistors (In our code, this is called `b`.
    For the thermistor on the sensor board, `b` is 4,250\. The value of `beta` will
    always be specified on the datasheet for the thermistor.)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/play.jpg)  一个常数叫做`beta`，或者有时只是`B`，它对于不同的热敏电阻是不同的（在我们的代码中，它叫做`b`。对于传感器板上的热敏电阻，`b`是4250。`beta`的值通常会在热敏电阻的数据表中注明。）'
- en: You can see how the calculation is made in the code. If you want to know more
    about this formula, search online for “Steinhart-Hart equation.”
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在代码中看到如何进行计算。如果你想了解更多关于这个公式的信息，可以在网上搜索“Steinhart-Hart 方程”。
- en: Because the voltage at pin 1 depends on the ratio of the resistance of the thermistor
    to the fixed resistor, it is independent of the supply voltage. This is just as
    well, because the 3V connector of the micro:bit can be anything from 3.3V down
    to about 2V, depending how you are powering the micro:bit and how fresh the batteries
    are. This is why you will see the comment in the `read_c` function explaining
    that the variable `v33` (3.3V) has no effect. In fact, it cancels out in the math.
    It is included only to make the math a bit easier to follow.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 由于引脚1的电压取决于热敏电阻与固定电阻的电阻比，因此它与供电电压无关。这样也好，因为micro:bit的3V连接口电压可以从3.3V到大约2V不等，取决于你如何为micro:bit供电以及电池的电量。这就是为什么在`read_c`函数中你会看到注释解释`v33`（3.3V）对结果没有影响。实际上，它在数学计算中会被抵消掉。它的存在只是为了让数学计算稍微容易理解一点。
- en: '**PROJECT: AUTOMATIC PLANT WATERER**'
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**项目：自动植物浇水器**'
- en: '![Image](../images/common3.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/common3.jpg)'
- en: '*Difficulty: Hard*'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '*难度：难*'
- en: Ever busy with conferences that take them away from the Secret Lab, the Mad
    Scientist has devised this automatic plant waterer. The project monitors the resistance
    of the soil to determine how wet it is. If the soil gets too dry, it turns on
    a water pump. Pressing button A gives a readout of the soil dryness, and pressing
    button B acts as a test, running the pump for 10 seconds.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 因为忙于参加会议，常常不能待在秘密实验室，疯狂科学家发明了这款自动植物浇水器。该项目通过监测土壤的电阻来判断土壤的湿润程度。如果土壤过干，它会启动水泵。按下按钮A可以读取土壤的干湿程度，按下按钮B则会进行测试，运行水泵10秒钟。
- en: '![Image](../images/09fig06.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/09fig06.jpg)'
- en: '*Figure 9-6: The automatic plant waterer project*'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9-6：自动植物浇水器项目*'
- en: '**What You’ll Need**'
  id: totrans-165
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**你需要的物品**'
- en: For this project, you’ll need the following items. See the [appendix](app01.xhtml)
    for more information on where to find these.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，你将需要以下物品。更多关于这些物品的获取信息，请参见[附录](app01.xhtml)。
- en: '**Micro:bit**'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**Micro:bit**'
- en: '**Relay board for micro:bit** To switch the pump on and off (You could also
    use a motor controller such as the Kitroniks board that we used in the rover project
    of [Chapter 6](ch06.xhtml#ch06).)'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '**micro:bit继电器板** 用于开关水泵（你也可以使用像我们在[第六章](ch06.xhtml#ch06)的漫游车项目中使用的Kitroniks板那样的电机控制器。）'
- en: '**12V aquarium metering pump** These pumps are slow but reliable.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '**12V水族箱计量泵** 这些泵虽然较慢，但非常可靠。'
- en: '**Tubing and connectors** To transfer the water from the reservoir to the plant
    pot'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '**管道和连接件** 用于将水从水库传输到植物盆'
- en: '**Large plastic bottle** To serve as a water reservoir for the plant'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**大塑料瓶** 用作植物的水库'
- en: '**12V power supply for the pump** 12V at 1 amp or more'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**12V水泵电源** 12V，1安培或更高'
- en: '**USB power supply for the micro:bit or a Monk Makes Power for micro:bit and
    AC adapter** This is a long-term project, so you don’t really want to be running
    it from batteries. See the [appendix](app01.xhtml) for long-term micro:bit power
    options.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '**micro:bit的USB电源或Monk Makes Power for micro:bit及交流适配器** 这是一个长期项目，所以你不希望仅通过电池供电。关于长期micro:bit电源选项，请参见[附录](app01.xhtml)。'
- en: '**1kΩ resistor**'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '**1kΩ电阻**'
- en: '**Female DC barrel jack to screw terminal adapter** To connect the relay and
    battery to the pump’s power supply'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '**母型直流桶插座到螺丝端子适配器** 用于将继电器和电池连接到水泵的电源'
- en: '**7 × Alligator clip cables** To connect the nails to the micro:bit'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**7 × 鳄鱼夹电缆** 用于将钉子连接到micro:bit'
- en: '**Fold-back binder clips** To keep the watering tube in place'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '**回折式文件夹夹子** 用来固定浇水管'
- en: '**2 × 5-inch nails** To be used as electrodes in the plant pot (Note that 6-inch
    nails also work just fine. Galvanized (zinc-coated) nails are best because they
    don’t rust.)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**2 × 5英寸钉子** 用作植物盆中的电极（注意，6英寸钉子也完全适用。镀锌（锌涂层）钉子最佳，因为它们不会生锈。）'
- en: '**Potted plant**'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '**盆栽植物**'
- en: '![Image](../images/f0214-01.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/f0214-01.jpg)'
- en: The pump you need is a *peristaltic pump*, sometimes called a *dosing pump*.
    You can find one on eBay for a few dollars. These pumps usually come with short
    inlet and outlet tubes that you’ll need to extend so they can reach from the water
    reservoir to the pot. They are generally 4 mm in diameter, a common size for garden
    irrigation systems. You can find such tubing and connectors at eBay, a hardware
    store, a tropical fish store, or a garden center.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要的水泵是*蠕动泵*，有时也叫*定量泵*。你可以在eBay上花几美元买到一个。这些泵通常配有短的进出口管，你需要延长这些管道，使其可以从水库连接到花盆。管道的直径通常是4毫米，这是园艺灌溉系统中常见的尺寸。你可以在eBay、五金店、热带鱼店或园艺中心找到这种管道和连接件。
- en: You’ll need longer alligator clip cables to connect the micro:bit to the nails.
    A good size would be about 1 foot (30 cm).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要更长的鳄鱼夹电缆来将micro:bit连接到钉子上。一个合适的长度大约为1英尺（30厘米）。
- en: The water reservoir can be anything that will contain a reasonable volume of
    water (an old milk container would do fine).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 水库可以是任何能容纳足够水量的物品（旧的牛奶容器就可以）。
- en: '**Construction**'
  id: totrans-184
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**构建**'
- en: You’ll need to take extra care when building this project, as it has both an
    electronic and mechanical component. What’s more, it pumps water around, so if
    you don’t connect the pipes correctly, you could cause quite a mess in your Secret
    Lab!
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建这个项目时，你需要特别小心，因为它既包含电子组件，又包含机械组件。而且，它还会泵送水，因此如果你没有正确连接管道，可能会在你的秘密实验室里造成一场大混乱！
- en: '[Figure 9-7](ch09.xhtml#ch9fig7) shows how the electronics are connected to
    give you an idea of what you are aiming for as you follow the step-by-step instructions.'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[图9-7](ch09.xhtml#ch9fig7)展示了电子设备的连接方式，帮助你了解在按步骤进行操作时要达到的效果。'
- en: '![Image](../images/09fig07.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/09fig07.jpg)'
- en: '*Figure 9-7: Wiring for the automatic plant waterer project*'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 9-7：自动植物浇水项目的接线图*'
- en: Open *[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*
    and click the link for **Plant Waterer**. Click **Download** and then copy the
    hex file onto your micro:bit. If you get stuck on this, head back to [Chapter
    1](ch01.xhtml#ch01), where the process of transferring programs to your micro:bit
    is explained in full. The Python version of the code is in *ch_09_Plant_Waterer.py*.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开*[https://github.com/simonmonk/mbms/](https://github.com/simonmonk/mbms/)*，点击**Plant
    Waterer**的链接。点击**下载**，然后将hex文件复制到你的micro:bit上。如果你卡住了，可以回到[第1章](ch01.xhtml#ch01)，那里详细解释了将程序传输到micro:bit的过程。Python版本的代码在*ch_09_Plant_Waterer.py*中。
- en: Wrap the 1kΩ resistor’s wires around pins 1 and 2 of the micro:bit.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将1kΩ电阻的引脚绕在micro:bit的1号和2号引脚上。
- en: Using [Figure 9-7](ch09.xhtml#ch9fig7) as a reference, wire up the alligator
    clips to the micro:bit, relay board, barrel jack, and pump. Don’t attach the yellow
    and green cables to the nails or connect the tubes to the pump just yet. To get
    the alligator clips to attach to the screw terminal ends of the DC barrel jack
    adapter, use a screwdriver to fully open the screw terminals. If your alligator
    clip jaws are too big to fit into the screw terminal holes, you can fit straightened-out
    paper clips into the screw terminals and then clip the alligator clips onto those.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 参照[图 9-7](ch09.xhtml#ch9fig7)，将鳄鱼夹接到micro:bit、继电器板、桶形插座和水泵上。暂时不要将黄色和绿色电缆连接到钉子上，也不要连接水管到水泵。为了将鳄鱼夹连接到DC桶形插座适配器的螺丝端子上，可以用螺丝刀将螺丝端子完全打开。如果你的鳄鱼夹钳口太大，无法放入螺丝端子孔，你可以将直的回形针插入螺丝端子中，然后将鳄鱼夹夹在回形针上。
- en: Plug the 12V power adapter into the barrel jack adapter and then press button
    **B** on your micro:bit. You should hear the pump run for 10 seconds and then
    stop. If it doesn’t do this, double-check your wiring.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将12V电源适配器插入桶形插座适配器，然后按下你的micro:bit上的**B**按钮。你应该能听到水泵运转10秒钟后停止。如果没有，请仔细检查接线。
- en: Push the nails into the soil of the plant pots spaced about 3 or 4 inches (8
    to 10 cm) apart. Leave enough of the nail above the soil that you can attach the
    green and yellow alligator clips, as shown in [Figure 9-8](ch09.xhtml#ch9fig8).![Image](../images/09fig08.jpg)
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将钉子插入植物盆土中，间隔约3或4英寸（8到10厘米）。留出足够的钉子长度在土壤上方，以便你可以连接绿色和黄色的鳄鱼夹，如[图 9-8](ch09.xhtml#ch9fig8)所示。![Image](../images/09fig08.jpg)
- en: '*Figure 9-8: Positioning the nails in the soil*'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 9-8：钉子在土壤中的位置*'
- en: Now, press button **A** on your micro:bit, and a number should scroll across
    the screen. This is a measure of the dryness of the soil. The drier the soil,
    the higher the number. Try adding a little water to the pot, wait for a few seconds,
    and then press button **A** again. You should see the number decrease. Don’t make
    the soil too wet, though, as it will take ages to dry out again and you won’t
    get to see the plant waterer in action.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，按下你的micro:bit上的**A**按钮，屏幕上应显示一个滚动的数字。这是土壤干燥程度的衡量标准。土壤越干，数字越高。尝试给盆栽加点水，等几秒钟后，再按下**A**按钮。你应该看到数字减少。但不要让土壤变得太湿，因为那样土壤需要很长时间才能再次干燥，并且你将无法看到自动浇水器的工作效果。
- en: You now need to give the plant the right amount of water. You may need to consult
    someone with a green thumb who knows about your particular plant. Once you’ve
    found out how moist your plant’s soil should be, keep adding small doses of water
    until the soil is damp enough. Then press button **A** and make a note of the
    number. This is your target dryness for the automatic plant waterer.
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，你需要给植物提供适量的水。你可能需要请教一个有绿色拇指的人，他们了解你的特定植物。找出你的植物土壤应该保持的湿度后，继续少量添加水，直到土壤湿润为止。然后按下**A**按钮，记下数字。这就是你为自动植物浇水器设置的目标干燥度。
- en: We’re now ready for the wet part of this project. Start by measuring out suitable
    lengths of tubing from the pump. You want enough tubing that you can put one length
    through the top of the reservoir bottle and have it reach the bottom and the other
    will reach from the pump into the plant pot. Before attaching the tubing, you
    need to find out which nozzle of the pump is the *inlet* and which is the *outlet*.
    To do this, press button **B** and put a finger over each of the pump’s tubes.
    You will feel the inlet pump sucking at your fingertip. Make a note of which tube
    is which.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们准备开始该项目的湿润部分。首先，从水泵上量取适当长度的管道。你需要足够的管道，能够将一根管道从储水瓶顶部放入并伸到底部，另一根管道从水泵伸到植物花盆。在连接管道之前，你需要弄清楚水泵的哪个喷嘴是
    *进水口*，哪个是 *出水口*。为了做到这一点，按下按钮 **B**，并用手指覆盖每根水泵管道。你会感觉到进水口正在吸你的指尖。记下每根管道的功能。
- en: Use the tube connectors to attach these lengths of tubing to the pump’s short
    tubes.
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用管道连接器将这些管道段连接到水泵的短管上。
- en: Clip the binder clips onto the side of the pot and push the tubing through the
    handles of the clip, as shown in [Figure 9-9](ch09.xhtml#ch9fig9).![Image](../images/09fig09.jpg)
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件夹夹夹住花盆的侧面，并将管道穿过夹子的手柄，如 [图9-9](ch09.xhtml#ch9fig9) 所示。![Image](../images/09fig09.jpg)
- en: '*Figure 9-9: Securing the tube to the plant’s pot*'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图9-9：将管子固定到植物的花盆上*'
- en: Fill up the reservoir bottle and push the extended inlet tube into the bottle,
    down to the bottom.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填满储水瓶，并将延长的进水管推入瓶中，直到底部。
- en: Test the pump by pressing button **B** a couple of times. If the water finds
    its way to the pot without any dripping or leakage, the waterer is almost ready
    to go. If not, find and seal the leaks by adjusting the connections.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按下按钮 **B** 几次来测试水泵。如果水能顺利到达花盆且没有滴水或泄漏，水泵就几乎准备好了。如果没有，检查并调整连接点以密封泄漏。
- en: The final step before you can let your plant waterer do its mundane work, leaving
    you free for more adventurous tasks, is to adjust the value of `dry_threshold`.
    Set `dry_threshold` to the value you recorded in step 6 and then flash the program
    onto your micro:bit again.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你让植物浇水器进行繁琐工作的最后一步之前，调整 `dry_threshold` 的值。将 `dry_threshold` 设置为你在第 6 步记录的值，然后再次将程序闪存到你的
    micro:bit 上。
- en: '**Code**'
  id: totrans-204
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**代码**'
- en: The code for this project is quite complex. As well as monitoring the soil’s
    moisture content, it also has to handle button presses and make sure that the
    pump doesn’t get too carried away and flood the lab.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目的代码相当复杂。除了监控土壤的湿度外，它还需要处理按钮按下事件，并确保水泵不会过度运转而导致实验室被淹。
- en: '**Blocks Code**'
  id: totrans-206
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**块代码**'
- en: Here is the Blocks code for the project.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 这是该项目的块代码。
- en: '![Image](../images/f0219-01.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/f0219-01.jpg)'
- en: 'In the `on start` block, we define three variables:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `on start` 块中，我们定义了三个变量：
- en: '`dry_threshold` We put our value from step 6 here. If the plant gets dryer
    than this value, it will be watered.'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '`dry_threshold` 我们将第 6 步中的值放在这里。如果植物变得比这个值还干，它将会被浇水。'
- en: '`on_time_ms` This is the amount of time (in milliseconds) that the pump will
    run when watering. Keeping this value small (say 10 seconds) will keep the plant
    from being overwatered. It will also prevent accidents that might result in minor
    flooding!'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`on_time_ms` 这是水泵在浇水时运行的时间（单位为毫秒）。保持这个值较小（例如 10 秒），可以避免植物被过度浇水。这还可以防止可能导致小规模洪水的意外发生！'
- en: '`check_period_ms` The water needs a little time to spread throughout the pot
    and evenly wet the soil. This variable sets the delay between each dryness check.
    By default, it’s set to 3,600,000 (1 hour in milliseconds).'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '`check_period_ms` 水需要一些时间才能在花盆中扩散并均匀湿润土壤。这个变量设置了每次干燥检查之间的延迟。默认值为 3,600,000（即
    1 小时的毫秒数）。'
- en: If we have an `on_time_ms` value of 10, the maximum watering time the plant
    can receive in one day is 24 × 10 seconds or 4 minutes. With this kind of pump,
    it will receive about a pint (500 mL) of water. That’s quite a lot, but if you
    have a really big pot, you may need to decrease `check_period_ms` or increase
    `on_time_ms` to allow the plant to get even more water. We’ll discuss this further
    in “Things to Try” on [page 222](ch09.xhtml#page_222).
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们设置 `on_time_ms` 为 10，那么植物一天内能接收到的最大浇水时间是 24 × 10 秒，即 4 分钟。使用这种水泵，植物大约能获得一品脱（500
    毫升）水量。这已经相当多了，但如果你的花盆特别大，你可能需要减少 `check_period_ms` 或增加 `on_time_ms`，以便让植物获得更多的水分。我们将在
    [第 222 页](ch09.xhtml#page_222)的“尝试的事情”部分进一步讨论这一点。
- en: 'Besides these three variables, we have two functions, `check_dryness` and `water_the_plant`.
    The `check_dryness` function updates the `dryness` variable with a new soil reading
    from pin 2\. Notice that this function also turns on pin 1, but just while the
    reading is being taken. We’ll explain why in “How It Works: Measuring Soil Dampness”
    on [page 222](ch09.xhtml#page_222).'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: The `water_the_plant` function turns on pin 0 to activate the relay, turns on
    the pump for the time specified in `on_time_ms`, and displays the down arrow on
    the micro:bit to indicate that watering is in progress (a bit like it’s raining).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: With the `forever` loop, we first check whether sufficient time has elapsed
    since the last check (by default 1 hour). If enough time has passed, the loop
    calls `check_dryness` and compares this reading to the `dry_threshold`. If the
    pot is too dry, `water_the_plant` is called.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: Now that the check is complete, the `dont_water_until` variable is set to the
    current time plus the `check_period_ms` to schedule the next check. The `dryness`
    is then shown on the display using the `plot bar graph of` block. The higher the
    level of LEDs on the display, the drier the soil is and the closer it is to being
    given more water.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: Then we have the code that checks whether button A is pressed and reacts appropriately.
    This code calls `check_dryness` and then displays it before showing the bar graph
    again. The handler for button B calls `water_the_plant` and then displays the
    `dryness` level.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: '**MicroPython Code**'
  id: totrans-219
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Here is the MicroPython version of the code:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: from microbit import *
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: dryness = 0
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: dry_threshold = 500
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: on_time_ms = 10000
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: check_period_ms = 3600000
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: dont_check_until = 0
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: 'def water_the_plant():'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: pin0.write_digital(1)
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: display.show(Image.ARROW_S)
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: sleep(on_time_ms)
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: pin0.write_digital(0)
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: 'def check_dryness():'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: global dryness
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: pin1.write_digital(1)
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: dryness = pin2.read_analog()
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: pin1.write_digital(1)
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: 'def bargraph(a):'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: display.clear()
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: 'for y in range(0, 5):'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: 'if a > y:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: 'for x in range(0, 5):'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: display.set_pixel(x, 4-y, 9)
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: 'while True:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: 'if button_a.was_pressed():'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: check_dryness()
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: display.scroll(str(dryness))
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: bargraph(dryness / 200)
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: 'if button_b.was_pressed():'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: water_the_plant()
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: check_dryness()
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: bargraph(dryness / 200)
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: 'if running_time() > dont_check_until:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: check_dryness()
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: 'if dryness > dry_threshold:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: water_the_plant()
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: dont_check_until = running_time() + check_period_ms
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: bargraph(dryness / 200)
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: Because MicroPython has no equivalent of the `plot bar graph of` block, we use
    the `bargraph` function from the Shout-o-meter in [Chapter 2](ch02.xhtml#ch02)
    to display the `dryness` level.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: '**Things to Try**'
  id: totrans-259
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Because the plant waterer keeps the moisture level of the plant more or less
    constant, you can measure the amount of water the plant is using by seeing how
    much water has left the reservoir.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: Use a measuring cup when you refill the reservoir bottle and log how much water
    you need to fill it back up. Once you know how much water your plant typically
    needs per day, you can work out how long your reservoir should last before it
    needs a refill. This will be very important if you want to keep your plant alive
    when you go on vacation.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在你给水箱加水时，使用量杯并记录需要多少水才能填满它。一旦你知道你的植物每天通常需要多少水，就可以计算出水箱在需要补充之前能维持多长时间。这在你度假时保持植物存活将非常重要。
- en: '**How It Works: Measuring Soil Dampness**'
  id: totrans-262
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**工作原理：测量土壤湿度**'
- en: Impure water (such as water in soil) has a much lower electrical resistance
    than air. In other words, the dryer the soil, the higher its electrical resistance,
    and the more water in the soil, the lower its resistance. By measuring the resistance
    between the two nails, we can measure the dryness of the soil.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 含杂质的水（如土壤中的水）具有比空气低得多的电阻。换句话说，土壤越干，其电阻越高，土壤中的水分越多，电阻越低。通过测量两个钉子之间的电阻，我们可以测量土壤的干燥程度。
- en: If you look back at [Figure 9-7](ch09.xhtml#ch9fig7), you can see that there
    is a resistor between pins 1 and 2\. To make it easier to see what is going on,
    another way of visualizing the schematic is shown in [Figure 9-10](ch09.xhtml#ch9fig10).
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你回顾一下[图9-7](ch09.xhtml#ch9fig7)，你会看到引脚1和引脚2之间有一个电阻器。为了更容易地理解电路图，[图9-10](ch09.xhtml#ch9fig10)展示了另一种电路图的可视化方式。
- en: '![Image](../images/09fig10.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/09fig10.jpg)'
- en: '*Figure 9-10: Schematic for measuring soil resistance*'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9-10：测量土壤电阻的电路图*'
- en: Notice that the diagram in [Figure 9-10](ch09.xhtml#ch9fig10) is almost identical
    to the one in [Figure 8-4](ch08.xhtml#ch8fig4) on [page 198](ch08.xhtml#page_198),
    where we were measuring skin resistance (rather than soil resistance) in the lie
    detector project. The one big difference is that rather than being connected permanently
    to 3V, the top of the fixed 1kΩ resistor is connected to pin 1\. When we take
    a measurement of the soil dryness, we first set pin 1 high (to 3V) to take the
    reading and then set the pin back to 0V.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，[图9-10](ch09.xhtml#ch9fig10)中的电路图几乎与[图8-4](ch08.xhtml#ch8fig4)中的电路图相同，后者出现在[第198页](ch08.xhtml#page_198)，我们当时在测量皮肤电阻（而不是土壤电阻）时使用了该电路图，进行的是测谎仪项目。唯一的区别是，固定的1kΩ电阻器的顶部不是永久连接到3V，而是连接到引脚1。当我们测量土壤湿度时，我们首先将引脚1设置为高电平（3V）进行测量，然后将引脚设置回0V。
- en: The reason for using Pin 1 instead of the 3V connection is that we want to allow
    electricity to flow through the soil only intermittently. If the resistor were
    attached to 3V, an electric current would always be flowing through the soil,
    messing up the readings and speeding up corrosion of the nails. This process is
    known as *electrolysis*. By only turning on pin 1 for the brief time that we take
    a reading, we avoid this problem.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 使用引脚1而不是3V连接的原因是我们希望允许电流仅间歇性地流经土壤。如果电阻器连接到3V，电流将始终流经土壤，导致读数不准确，并加速钉子的腐蚀。这个过程被称为*电解作用*。通过仅在测量时短暂开启引脚1，我们避免了这个问题。
- en: '**SUMMARY**'
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: In this chapter, we explored how to measure temperature, created a temperature
    and light level data logger, and created an automatic plant waterer. In the next
    chapter, we’ll see how the Mad Scientist uses the micro:bit’s built-in radio library.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了如何测量温度，创建了一个温度和光照强度数据记录器，并制作了一个自动植物浇水器。在下一章中，我们将看到疯狂科学家如何使用micro:bit的内置无线电库。
