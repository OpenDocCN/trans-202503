["```\nperl -ne 'print; exit' *file*\n```", "```\nperl -i -ne 'print; exit' *file*\n```", "```\nperl -i.bak -ne 'print; exit' *file*\n```", "```\nperl -ne 'print if $. <= 10' *file*\n```", "```\nperl -ne '$. <= 10 && print' *file*\n```", "```\nperl -ne 'print if 1..10' *file*\n```", "```\nperl -ne 'print; exit if $. == 10' *file*\n```", "```\nperl -ne '$last = $_; END { print $last }' *file*\n```", "```\nperl -ne 'print if eof' *file*\n```", "```\nperl -ne 'push @a, $_; @a = @a[@a-10..$#a] if @a>10; END { print @a }' *file*\n```", "```\nperl -ne 'push @a, $_; shift @a if @a>10; END { print @a }' *file*\n```", "```\nperl -ne '/*regex*/ && print'\n```", "```\nperl -ne 'print if /*regex*/'\n```", "```\nperl -ne '!/*regex*/ && print'\n```", "```\nperl -ne 'print if !/*regex*/'\n```", "```\nperl -ne 'print unless /*regex*/'\n```", "```\nperl -ne '/*regex*/ || print'\n```", "```\nperl -ne '/*regex*/ && $last && print $last; $last = $_'\n```", "```\nhello world\nmagic line\nbye world\nmagic line\n```", "```\nperl -ne '/magic/ && $last && print $last; $last = $_'\n```", "```\nhello world\nbye world\n```", "```\nperl -ne 'if ($p) { print; $p = 0 } $p++ if /*regex*/'\n```", "```\nscience\nphysics\nscience\nmath\n```", "```\nperl -ne 'if ($p) { print; $p = 0 } $p++ if /science/'\n```", "```\nphysics\nmath\n```", "```\nperl -ne '$p && print && ($p = 0); $p++ if /science/'\n```", "```\nperl -ne '$p && print; $p = /science/'\n```", "```\nperl -ne '/*AAA*/ && /*BBB*/ && print'\n```", "```\nperl -ne '!/*AAA*/ && !/*BBB*/ && print'\n```", "```\nperl -ne '/*AAA*.**BBB*.**CCC*/ && print'\n```", "```\nperl -ne 'print if length >= 80'\n```", "```\nperl -lne 'print if length >= 80'\n```", "```\nperl -ne 'print if length() < 80'\n```", "```\nperl -ne '$. == 13 && print && exit'\n```", "```\nperl -ne '$. != 27 && print'\n```", "```\nperl -ne 'print if $. != 27'\n```", "```\nperl -ne 'print unless $. == 27'\n```", "```\nperl -ne 'print if $. == 13 || $. == 19 || $. == 67'\n```", "```\nperl -ne 'print if $. == 13 || $. == 19 || $. == 88 || $. == 290 || $. == 999'\n```", "```\nperl -ne '\n  @lines = (13, 19, 88, 290, 999, 1400, 2000);\n  print if grep { $_ == $. } @lines\n'\n```", "```\nperl -ne 'print if $. >= 17 && $. <= 30'\n```", "```\nperl -ne 'print if 17..30'\n```", "```\nperl -ne 'print if /*regex1*/../*regex2*/'\n```", "```\nperl -ne '\n  $l = $_ if length($_) > length($l);\n  END { print $l }\n'\n```", "```\nperl -ne '\n  $s = $_ if $. == 1;\n  $s = $_ if length($_) < length($s);\n  END { print $s }\n'\n```", "```\nperl -ne 'print if /\\d/'\n```", "```\ncoding is as easy as 123\n```", "```\ncoding is as easy as pie\n```", "```\nperl -ne 'print if /^\\d+$/'\n```", "```\n3883737189170238912377\n```", "```\n8388338 foo bar random data 999\n```", "```\nperl -lne 'print unless /\\D/'\n```", "```\nperl -ne 'print if /^[[:alpha:]]+$/\n```", "```\nperl -ne 'print if $. % 2'\n```", "```\nperl -ne 'print if $. % 2 == 0'\n```", "```\nperl -ne 'print unless $. % 2'\n```", "```\nperl -ne 'print if ++$a{$_} == 2'\n```", "```\nperl -ne 'print unless $a{$_}++'\n```"]