- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: It’s getting hard to ignore the importance of data in our lives. Data is critical
    to the largest social organizations in human history (giants like Facebook and
    Google), and its collection has widespread geopolitical implications, as we all
    saw with the NSA surveillance scandal. But it’s also getting easier to ignore
    the data itself. One estimate suggests that 99.5% of the data our systems collect
    goes to waste.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们越来越无法忽视数据在我们生活中的重要性。数据对人类历史上最大的社会组织至关重要（如 Facebook 和 Google 这样的巨头），而它的收集也具有广泛的地缘政治影响，正如我们在
    NSA 监控丑闻中看到的那样。但同样，我们也越来越容易忽视数据本身。一个估计表明，我们系统收集的 99.5% 的数据都被浪费了。
- en: '*Data visualization* is a tool that addresses this gap. Effective visualizations
    clarify; they transform abstract collections of numbers into shapes and forms
    that viewers quickly grasp and understand. The best visualizations impart this
    understanding intuitively. Viewers comprehend the data immediately—without thinking.
    This frees viewers to more fully consider the implications of the data: the stories
    it tells, the insights it reveals, or even the warnings it offers.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*数据可视化*是解决这一空白的工具。有效的可视化能够澄清问题；它们将抽象的数字集合转化为形状和形式，让观众迅速理解并掌握。这些最佳的可视化能够直观地传达这种理解。观众能够立即理解数据——无需深思。这使得观众能够更充分地考虑数据的含义：它讲述的故事，它揭示的洞察，甚至是它所提供的警告。'
- en: If you’re developing websites or web applications today, there’s a good chance
    you have data to communicate—data best presented in a good visualization. But
    how do you know what kind of visualization is appropriate? And even more importantly,
    how do you actually create one? In the chapters that follow, we explore dozens
    of different visualizations, techniques, and toolkits. Each example discusses
    the appropriateness of the visualization (and suggests possible alternatives)
    and provides step-by-step instructions for adding the visualization to your web
    pages.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你今天正在开发网站或 web 应用程序，那么你很可能需要传达数据——这些数据最适合通过良好的可视化呈现。那么，你怎么知道什么样的可视化是合适的呢？更重要的是，如何真正创建一个可视化？在接下来的章节中，我们将探讨数十种不同的可视化方法、技术和工具包。每个例子都会讨论可视化的适用性（并提供可能的替代方案），并提供逐步的指导，帮助你将可视化添加到网页中。
- en: The Book’s Philosophy
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书的理念
- en: In creating this book, I’ve tried to follow four main principles to make sure
    it provides meaningful and practical guidance.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写本书时，我尝试遵循四个主要原则，以确保它能提供有意义且实用的指导。
- en: '**Implementation vs. Design**'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实现与设计**'
- en: This book won’t teach you how to design data visualizations. Quite honestly,
    there are other authors far better qualified than me for that (Edward Tufte, for
    example). Instead, this book will focus on implementing visualizations. When appropriate,
    I’ll take a slightly bigger picture view to discuss the strengths and weaknesses
    of particular visualization strategies, but the main goal is to show you how to
    create a wide range of visualizations. (I recognize that sometimes the boss absolutely
    insists on a pie chart.)
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本书不会教你如何设计数据可视化。老实说，其他一些作者在这方面比我更有资格（比如爱德华·塔夫特）。相反，本书将专注于如何实现可视化。在适当的情况下，我会从更宏观的角度讨论某些可视化策略的优缺点，但主要目标是向你展示如何创建各种可视化。（我知道有时候老板坚决要求做饼图。）
- en: '**Code vs. Styling**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码与样式**'
- en: As you might guess from the title, this book focuses on how to use JavaScript
    code to create visualizations. The examples don’t assume you’re a JavaScript expert—and
    I’ll be sure to explain any code more complicated than a basic jQuery selector—but
    I won’t spend much time discussing styles for the visualizations. Fortunately,
    styling visualizations is pretty much the same as styling other web content. Basic
    experience with HTML and CSS will serve you well when you add visualizations to
    your pages.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正如你从标题中猜到的，这本书专注于如何使用 JavaScript 代码创建可视化。例子并不假设你是 JavaScript 专家——如果遇到比基本 jQuery
    选择器更复杂的代码，我会确保为你解释清楚——但是我不会花太多时间讨论可视化的样式。幸运的是，样式化可视化与样式化其他 web 内容基本相同。对 HTML 和
    CSS 的基本了解将有助于你将可视化添加到网页中。
- en: '**Simple vs. Complex**'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单与复杂**'
- en: Most of the book’s examples are simple, straightforward visualizations. Complex
    visualizations can be engaging and compelling, but studying a lot of advanced
    code usually isn’t the best way to learn the craft. In these examples, I’ll try
    to stay as simple as possible so you can clearly see how to use the various tools
    and techniques. Simple doesn’t mean boring, however, and even the simplest visualizations
    can be enlightening and inspiring.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 书中的大多数示例都是简单、直接的可视化。复杂的可视化可能具有吸引力和说服力，但学习大量的高级代码通常不是学习这项技能的最佳方式。在这些示例中，我会尽量保持简单，这样你就能清晰地看到如何使用各种工具和技术。然而，简单并不意味着无聊，甚至最简单的可视化也可以启发人心、激发灵感。
- en: '**Reality vs. an Ideal World**'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**现实与理想世界的对比**'
- en: When you begin building your own visualizations, you’ll discover that the real
    world is rarely as kind as you’d wish. Open source libraries have bugs, third-party
    servers have security issues, and not every user has updated to the latest and
    greatest web browser. I’ve addressed these realities in the examples in this book.
    I’ll show you how to accommodate older browsers when it’s practical, how to comply
    with security constraints such as Cross-Origin Resource Sharing (CORS), and how
    to work around bugs in other folks’ code.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你开始构建自己的可视化时，你会发现现实世界通常并不像你希望的那样友好。开源库可能有 bug，第三方服务器可能存在安全问题，并且并非每个用户都更新到了最新的
    Web 浏览器。我在本书的示例中已经解决了这些现实问题。我会向你展示如何在实践中兼容旧版浏览器，如何遵守诸如跨域资源共享（CORS）等安全约束，以及如何绕过他人代码中的
    bug。
- en: The Book’s Contents
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 书籍目录
- en: The chapters that follow cover a variety of visualization techniques and the
    JavaScript libraries that we can use to implement them.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的章节涵盖了各种可视化技术以及我们可以用来实现它们的 JavaScript 库。
- en: '**[Chapter 1](ch01.html "Chapter 1. Graphing Data")** begins with the most
    basic visualizations—static charts and plots—using the Flotr2 library.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[第1章](ch01.html "第1章. 图形数据")** 从最基本的可视化开始——使用 Flotr2 库创建静态图表和绘图。'
- en: '**[Chapter 2](ch02.html "Chapter 2. Making Charts Interactive")** adds interactivity
    to the visualizations, giving users the chance to select content, zoom in, and
    track values. The chapter also shows how to retrieve data for visualizations directly
    from the Web. For variety, its examples use the Flot library, which is based on
    jQuery.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[第2章](ch02.html "第2章. 使图表互动化")** 为可视化添加了交互性，用户可以选择内容、放大查看和跟踪值。本章还展示了如何直接从
    Web 获取可视化所需的数据。为了多样化，其示例使用了基于 jQuery 的 Flot 库。'
- en: '**[Chapter 3](ch03.html "Chapter 3. Integrating Charts on a Page")** looks
    at integrating multiple visualizations and with other content on a web page; it
    uses the jQuery sparklines library.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[第3章](ch03.html "第3章. 在页面中整合图表")** 讨论了如何在网页中整合多个可视化和其他内容；它使用了 jQuery sparklines
    库。'
- en: In **[Chapter 4](ch04.html "Chapter 4. Creating Specialized Graphs")**, we consider
    visualizations other than standard charts and plots, including tree maps, heat
    maps, network graphs, and word clouds. Each example focuses on a particular JavaScript
    library designed specifically for the visualization type.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 **[第4章](ch04.html "第4章. 创建专门的图表")** 中，我们考虑了除标准图表和绘图外的其他可视化类型，包括树形图、热图、网络图和词云。每个示例都专注于一个特定的
    JavaScript 库，该库专为该类型的可视化而设计。
- en: '**[Chapter 5](ch05.html "Chapter 5. Displaying Timelines")** covers time-based
    visualizations. It looks at several ways to visualize timelines, including traditional
    libraries; pure HTML, CSS, and JavaScript; and full-featured web components.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[第5章](ch05.html "第5章. 显示时间轴")** 涉及基于时间的可视化。本章探讨了几种可视化时间轴的方法，包括传统库、纯 HTML、CSS
    和 JavaScript，以及功能全面的 Web 组件。'
- en: In **[Chapter 6](ch06.html "Chapter 6. Visualizing Geographic Data")**, we consider
    geographic data as we look at different ways to incorporate maps into our visualizations.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 **[第6章](ch06.html "第6章. 可视化地理数据")** 中，我们讨论了地理数据，并探讨了将地图整合到可视化中的不同方法。
- en: '**[Chapter 7](ch07.html "Chapter 7. Custom Visualizations with D3.js")** introduces
    the powerful D3.js library, a flexible and full-featured toolkit for building
    custom visualizations of almost any type.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[第7章](ch07.html "第7章. 使用 D3.js 创建自定义可视化")** 介绍了强大的 D3.js 库，这是一个灵活且功能全面的工具包，用于构建几乎任何类型的自定义可视化。'
- en: Beginning in **[Chapter 8](ch08.html "Chapter 8. Managing Data in the Browser")**,
    we consider other aspects of web-based visualizations. This chapter shows off
    the Underscore.js library, which makes it easy to prepare the data that drives
    our visualizations.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**[第 8 章](ch08.html "第 8 章：浏览器中的数据管理")**开始，我们将探讨基于 Web 的可视化的其他方面。本章展示了 Underscore.js
    库，它使得准备驱动我们可视化的数据变得更加容易。
- en: 'Finally, **[Chapter 9](ch09.html "Chapter 9. Building Data-Driven Web Applications:
    Part 1") and [Chapter 10](ch10.html "Chapter 10. Building Data-Driven Web Applications:
    Part 2")** walk through the development of a complete, single-page web application
    that relies on data visualization. Here we’ll see how to use modern development
    tools such as Yeoman and the Backbone.js library.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，**[第 9 章](ch09.html "第 9 章：构建数据驱动的 Web 应用程序：第一部分")** 和 **[第 10 章](ch10.html
    "第 10 章：构建数据驱动的 Web 应用程序：第二部分")** 详细讲解了一个完整的单页 Web 应用程序的开发，该应用程序依赖于数据可视化。在这里，我们将看到如何使用现代开发工具，如
    Yeoman 和 Backbone.js 库。
- en: Source Code for Examples
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例的源代码
- en: To make the text as clear and readable as possible, examples usually contain
    isolated snippets of JavaScript, plus occasional fragments of HTML or CSS. Complete
    source code for all examples is available on GitHub at *[http://jsDataV.is/source/](http://jsDataV.is/source/)*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使文本尽可能清晰易读，示例通常包含孤立的 JavaScript 代码片段，以及偶尔的 HTML 或 CSS 片段。所有示例的完整源代码可以在 GitHub
    上找到，网址是 *[http://jsDataV.is/source/](http://jsDataV.is/source/)*。
