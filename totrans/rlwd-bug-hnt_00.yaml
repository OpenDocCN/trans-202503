- en: '**INTRODUCTION**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Image](../images/common.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This book introduces you to the vast world of *ethical hacking*, or the process
    of responsibly discovering security vulnerabilities and reporting them to the
    application owner. When I first started learning about hacking, I wanted to know
    not just *what* vulnerabilities hackers found but *how* they found them.
  prefs: []
  type: TYPE_NORMAL
- en: 'I searched for information but was always left with the same questions:'
  prefs: []
  type: TYPE_NORMAL
- en: What vulnerabilities are hackers finding in applications?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How did hackers learn about those vulnerabilities found in applications?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do hackers begin infiltrating a site?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What does hacking look like? Is it all automated, or is it done manually?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How can I get started hacking and finding vulnerabilities?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I eventually landed on HackerOne, a bug bounty platform designed to connect
    ethical hackers with companies looking for hackers to test their applications.
    HackerOne includes functionality that allows hackers and companies to disclose
    bugs that have been found and fixed.
  prefs: []
  type: TYPE_NORMAL
- en: While reading through those disclosed HackerOne reports, I struggled to understand
    what vulnerabilities people were finding and how they could be abused. I often
    had to reread the same report two or three times to understand it. I realized
    that I, and other beginners, could benefit from plain-language explanations of
    real-world vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: '*Real-World Bug Hunting* is an authoritative reference that will help you understand
    different types of web vulnerabilities. You’ll learn how to find vulnerabilities,
    how to report them, how to get paid for doing so, and, occasionally, how to write
    defensive code. But this book doesn’t just cover successful examples: it also
    includes mistakes and lessons learned, many of them my own.'
  prefs: []
  type: TYPE_NORMAL
- en: By the time you finish reading, you’ll have taken your first step toward making
    the web a safer place, and you should be able to earn some money doing it.
  prefs: []
  type: TYPE_NORMAL
- en: '**Who Should Read This Book**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This book is written with beginner hackers in mind. It doesn’t matter if you’re
    a web developer, a web designer, a stay-at-home parent, a 10-year-old kid, or
    a 75-year-old retiree.
  prefs: []
  type: TYPE_NORMAL
- en: That said, although it’s not a prerequisite for hacking, some programming experience
    and a familiarity with web technologies can help. For example, you don’t have
    to be a web developer to be a hacker, but understanding the basic hypertext markup
    language (HTML) structure of a web page, how Cascading Style Sheets (CSS) define
    its look, and how JavaScript dynamically interacts with websites will help you
    discover vulnerabilities and recognize the impact of the bugs you find.
  prefs: []
  type: TYPE_NORMAL
- en: Knowing how to program is helpful when you’re looking for vulnerabilities involving
    an application’s logic and brainstorming how a developer might make mistakes.
    If you can put yourself in the programmer’s shoes, guess how they’ve implemented
    something, or read their code (if available), you’ll have a higher chance of success.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to learn about programming, No Starch Press has plenty of books
    to help you. You could also check out the free courses on Udacity and Coursera.
    [Appendix B](app02.xhtml#app02) lists additional resources.
  prefs: []
  type: TYPE_NORMAL
- en: '**How to Read This Book**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Each chapter that describes a vulnerability type has the following structure:'
  prefs: []
  type: TYPE_NORMAL
- en: A description of the vulnerability type
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Examples of the vulnerability type
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A summary that provides conclusions
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Each vulnerability example includes the following:'
  prefs: []
  type: TYPE_NORMAL
- en: My estimation of how difficult it is to find and prove the vulnerability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The URL associated with the location in which the vulnerability was found
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A link to the original disclosure report or write-up
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The date the vulnerability was reported
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The amount the reporter earned for submitting the information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A clear description of the vulnerability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Takeaways that you can apply to your own hacking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You don’t need to read this book cover to cover. If there’s a particular chapter
    you’re interested in, read it first. In some cases, I reference concepts discussed
    in previous chapters, but in doing so, I try to note where I’ve defined the term
    so you can refer to relevant sections. Keep this book open while you hack.
  prefs: []
  type: TYPE_NORMAL
- en: '**What’s in This Book**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here’s an overview of what you’ll find in each chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 1: Bug Bounty Basics](ch01.xhtml#ch01)** explains what vulnerabilities
    and bug bounties are and the difference between clients and servers. It also covers
    how the internet works, which includes HTTP requests, responses, and methods and
    what it means to say HTTP is stateless.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 2: Open Redirect](ch02.xhtml#ch02)** covers attacks that exploit
    the trust of a given domain to redirect users to a different one.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 3: HTTP Parameter Pollution](ch03.xhtml#ch03)** covers how attackers
    manipulate HTTP requests, injecting additional parameters that the vulnerable
    target website trusts and that lead to unexpected behavior.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 4: Cross-Site Request Forgery](ch04.xhtml#ch04)** covers how an
    attacker can use a malicious website to make a target’s browser send an HTTP request
    to another website. The other website then acts as though the request is legitimate
    and sent intentionally by the target.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 5: HTML Injection and Content Spoofing](ch05.xhtml#ch05)** explains
    how malicious users inject HTML elements of their own design into a targeted site’s
    web pages.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 6: Carriage Return Line Feed Injection](ch06.xhtml#ch06)** shows
    how attackers inject encoded characters into HTTP messages to alter how servers,
    proxies, and browsers interpret them.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 7: Cross-Site Scripting](ch07.xhtml#ch07)** explains how attackers
    exploit a site that doesn’t sanitize user input to execute their own JavaScript
    code on the site.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 8: Template Injection](ch08.xhtml#ch08)** explains how attackers
    exploit template engines when a site doesn’t sanitize the user input it uses in
    its templates. The chapter includes client- and server-side examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 9: SQL Injection](ch09.xhtml#ch09)** describes how a vulnerability
    on a database-backed site can allow an attacker to unexpectedly query or attack
    the site’s database.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 10: Server-Side Request Forgery](ch10.xhtml#ch10)** explains how
    an attacker makes a server perform unintended network requests.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 11: XML External Entity](ch11.xhtml#ch11)** shows how attackers
    exploit the way an application parses XML input and processes the inclusion of
    external entities in its input.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 12: Remote Code Execution](ch12.xhtml#ch12)** covers how attackers
    can exploit a server or application to run their own code.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 13: Memory Vulnerabilitites](ch13.xhtml#ch13)** explains how attackers
    exploit an application’s memory management to cause unintended behavior, including
    possibly executing the attacker’s own injected commands.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 14: Subdomain Takeover](ch14.xhtml#ch14)** shows how subdomain takeovers
    occur when an attacker can control a subdomain on behalf of a legitimate domain.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 15: Race Conditions](ch15.xhtml#ch15)** reveals how attackers exploit
    situations where a site’s processes race to complete based on an initial condition
    that becomes invalid as the processes execute.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 16: Insecure Direct Object References](ch16.xhtml#ch16)** covers
    vulnerabilities that occur when an attacker can access or modify a reference to
    an object, such as a file, database record, or account, to which they shouldn’t
    have access.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 17: OAuth Vulnerabilities](ch17.xhtml#ch17)** covers bugs in the
    implementation of the protocol designed to simplify and standardize secure authorization
    on web, mobile, and desktop applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 18: Application Logic and Configuration Vulnerabilities](ch18.xhtml#ch18)**
    explains how an attacker can exploit a coding logic or application configuration
    mistake to make the site perform some unintended action that results in a vulnerability.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 19: Finding Your Own Bug Bounties](ch19.xhtml#ch19)** gives tips
    on where and how to look for vulnerabilities based on my experience and methodology.
    This chapter is not a step-by-step guide to hacking a site.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 20: Vulnerability Reports](ch20.xhtml#ch20)** discusses how to write
    credible and informative vulnerability reports so programs won’t reject your bugs.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Appendix A: Tools](app01.xhtml#app01)** describes popular tools designed
    for hacking, including proxying web traffic, subdomain enumeration, screenshotting,
    and more.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Appendix B: Resources](app02.xhtml#app02)** lists additional resources to
    further expand your hacking knowledge. This includes online trainings, popular
    bounty platforms, recommended blogs, and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: '**A Disclaimer About Hacking**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you read about public vulnerability disclosures and see the amount of money
    some hackers make, it’s natural to think that hacking is an easy and quick way
    to get rich. It isn’t. Hacking can be rewarding, but you’re less likely to find
    stories about the failures that happen along the way (except in this book, where
    I share some very embarrassing stories). Because you’ll mostly hear about people’s
    hacking successes, you might develop unrealistic expectations of your own hacking
    journey.
  prefs: []
  type: TYPE_NORMAL
- en: You might find success very quickly. But if you’re having trouble finding bugs,
    keep digging. Developers will always be writing new code, and bugs will always
    make their way into production. The more you try, the easier the process should
    become.
  prefs: []
  type: TYPE_NORMAL
- en: On that note, feel free to message me on Twitter @yaworsk and let me know how
    it’s going. Even if you’re unsuccessful, I’d like to hear from you. Bug hunting
    can be lonely work if you’re struggling. But it’s also awesome to celebrate with
    each other, and maybe you’ll find something I can include in the next edition
    of this book.
  prefs: []
  type: TYPE_NORMAL
- en: Good luck and happy hacking.
  prefs: []
  type: TYPE_NORMAL
