- en: '**10'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**10'
- en: Intruder Alarm with Email Notifications**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 带有电子邮件通知的入侵报警**
- en: In this project, you’ll create an intruder alarm that sends you email notifications.
    The alarm will detect whether someone has trespassed onto forbidden territory
    using a passive infrared (PIR) motion sensor. When the PIR motion sensor detects
    movement, it will send a warning email.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将创建一个入侵报警系统，该系统会向你发送电子邮件通知。该报警系统将通过一个被动红外（PIR）运动传感器来检测是否有人闯入禁区。当PIR运动传感器检测到运动时，它会发送一封警告邮件。
- en: '![image](../images/f0137-01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0137-01.jpg)'
- en: '**PARTS REQUIRED**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**所需部件**'
- en: Raspberry Pi
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派
- en: Breadboard
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 面包板
- en: PIR mot ion sensor HC-SR501
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: PIR运动传感器HC-SR501
- en: Two 5 mm LEDs (different colors)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 两个5mm LED（不同颜色）
- en: Two 330 Ω resistors
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 两个330Ω电阻
- en: Pushbutton
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮
- en: Jumper wires
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 跳线
- en: '**INTRODUCING THE PIR MOTION SENSOR**'
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**介绍PIR运动传感器**'
- en: You’ve probably seen motion sensors in a wide variety of applications. They’re
    used in security lights, in commercial building lights that turn on when you walk
    by, and in burglar alarms.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经在各种应用中看到过运动传感器。它们用于安防灯、商业楼宇的灯光（当你经过时自动亮起）以及防盗报警器中。
- en: A PIR motion sensor (see [Figure 10-1](ch10.xhtml#ch10fig1)) measures infrared
    light emitted from objects in its field of view. It detects motion based on changes
    in infrared light, which indicate changes in temperature. This makes it ideal
    for detecting humans or animals because it will pick up living things that move
    within its range but not inanimate objects, like a leaf blowing in the wind. You
    can program the Pi to react to changes in infrared light by triggering an event
    such as turning on a light, sounding an alarm, or, as we’ll do in this project,
    sending an email.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一个PIR运动传感器（见[图10-1](ch10.xhtml#ch10fig1)）可以测量从其视野中的物体发射的红外光。它通过红外光的变化来检测运动，这些变化通常表示温度的变化。这使得它非常适合检测人类或动物，因为它可以捕捉到其范围内移动的生物，但不会检测到像风中吹动的叶子等无生命物体。你可以通过编程Pi来响应红外光的变化，触发事件，比如打开灯、发出警报，或者像我们在这个项目中做的那样，发送电子邮件。
- en: '![image](../images/f0138-01.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0138-01.jpg)'
- en: '**FIGURE 10-1:** PIR motion sensor'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**图10-1：** PIR运动传感器'
- en: 'The sensor outputs HIGH if it detects movement or LOW if it doesn’t, and it
    has only 3 pins: VCC, GND, and data. Data outputs a 3.3 V signal, perfect for
    your Pi!'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 该传感器在检测到运动时输出HIGH，在未检测到时输出LOW，并且它只有3个引脚：VCC、GND和数据。数据输出一个3.3V的信号，非常适合你的Pi！
- en: '**SENDING AN EMAIL WITH PYTHON**'
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用Python发送电子邮件**'
- en: Python’s email library makes it straightforward to send emails through Python.
    We’ll write that script now before assembling the parts.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Python的电子邮件库使得通过Python发送电子邮件变得非常简单。我们将在组装部件之前先编写该脚本。
- en: '**Finding Your SMTP Server Details**'
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**查找你的SMTP服务器详情**'
- en: To send emails through code, you need to include your *Simple Mail Transfer
    Protocol (SMTP)* server details. SMTP is an internet standard for email transmission,
    and each email provider has a different SMTP server.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过代码发送电子邮件，你需要包含你的*简单邮件传输协议（SMTP）*服务器的详情。SMTP是电子邮件传输的互联网标准，每个电子邮件提供商有不同的SMTP服务器。
- en: These details include your service provider’s *server address* and *port* and
    whether it uses *Transport Layer Security (TLS)*. TLS is a protocol for establishing
    a secure connection between two email servers. To get this information simply
    search the internet for *SMTP server settings* along with the name of your email
    provider. You’ll plug these details into the script to personalize it.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这些详情包括你的服务提供商的*服务器地址*、*端口*，以及它是否使用*传输层安全（TLS）*。TLS是一种用于在两个电子邮件服务器之间建立安全连接的协议。要获取这些信息，只需在互联网上搜索*SMTP服务器设置*，并加上你的电子邮件提供商的名称。你将把这些信息填入脚本中以进行个性化设置。
- en: '**The Email-Sending Script**'
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**发送电子邮件的脚本**'
- en: '**NOTE**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Don’t name your file* email.py *because that’s a Python library name, and
    your script won’t work.*'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要将你的文件命名为*email.py*，因为这是一个Python库的名称，你的脚本将无法正常工作。*'
- en: 'Open **Python 3 (IDLE)** and go to **File** ▸ **New File** to create a new
    script. Copy the code in [Listing 10-1](ch10.xhtml#ch10list1) to the Python Editor
    and save the script as *send_email.py* inside the *Sensors* folder (remember that
    you can download all the scripts at *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 打开**Python 3 (IDLE)**，然后转到**文件** ▸ **新建文件**以创建一个新的脚本。将[清单10-1](ch10.xhtml#ch10list1)中的代码复制到Python编辑器中，并将脚本保存为*send_email.py*，保存在*Sensors*文件夹内（记得你可以在*[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*下载所有脚本）：
- en: '**LISTING 10-1:** The email notification script'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单10-1：** 电子邮件通知脚本'
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**WARNING**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**警告**'
- en: '*If you use the snippet at* ➎ *inside a `while` loop without a delay, you will
    fill your inbox with thousands of emails and your account will probably be blocked,
    so make sure to include a delay if you use this snippet in any other project!*'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你在没有延迟的情况下在`while`循环中使用第➎行的代码片段，系统将向你的收件箱发送数千封电子邮件，并且你的账户可能会被封禁，所以如果你在其他项目中使用此代码片段，务必确保添加延迟！*'
- en: 'You start by importing the libraries you need for SMTP and email-related functions:
    smtplib and MIMEText ➊. Next, you create variables for the email address to send
    from, that email’s password, and an email address to send to ➋. We suggest you
    create a second email to send the notifications to your everyday email because
    you will be giving less secure apps access to the account you send from. Make
    sure that you input your own information for these strings.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你首先导入需要的SMTP和电子邮件相关功能的库：smtplib和MIMEText ➊。然后，你创建用于发送邮件的电子邮件地址、该电子邮件的密码以及接收邮件的地址的变量
    ➋。我们建议你创建第二个电子邮件账户，以便将通知发送到你的常用电子邮件，因为你将允许较不安全的应用访问你发送邮件的账户。确保为这些字符串输入你自己的信息。
- en: The code block at ➌ writes the email. You start by creating a `body` variable
    that stores your email body text. Then you create an object called `msg` that
    generates the email itself using `msg = MIMEText(body)`. Feel free to change the
    email body and subject by changing the string in the `body` and `msg['Subject']`
    variables, respectively.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 第➌行的代码块用于编写电子邮件。你首先创建一个名为`body`的变量，用来存储电子邮件的正文内容。然后，你创建一个名为`msg`的对象，通过`msg =
    MIMEText(body)`生成电子邮件本身。你可以通过更改`body`和`msg['Subject']`变量中的字符串，分别修改电子邮件的正文和主题。
- en: At ➍, you establish communication with an SMTP server. Pass the provider’s SMTP
    server address as a string as the first argument to `smtplib.SMTP()`, and the
    port as an int as the second argument. In this script, we’re using a Gmail SMTP
    server and port. If you use another email provider, make sure to change those
    values.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在第➍行，你与SMTP服务器建立了通信。将提供商的SMTP服务器地址作为字符串传递给`smtplib.SMTP()`的第一个参数，将端口作为整数传递给第二个参数。在这个脚本中，我们使用的是Gmail的SMTP服务器和端口。如果你使用其他电子邮件提供商，确保更改这些值。
- en: The `server.starttls()` function is necessary for email providers that use TLS
    to encrypt messages. If your email provider doesn’t use TLS, you can remove or
    comment out that line.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`server.starttls()`函数对于使用TLS加密邮件的电子邮件提供商是必需的。如果你的电子邮件提供商不使用TLS，你可以删除或注释掉这一行代码。'
- en: Next, the script logs into the sending email account ➎, sends the email, and
    stops communication with the server. Last, the script prints an `'Email sent'`
    message to the Python shell to let the user know an email was sent.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，脚本登录到发送电子邮件的账户第➎行，发送电子邮件，并停止与服务器的通信。最后，脚本会向Python shell打印`'Email sent'`消息，以告知用户电子邮件已发送。
- en: '**Running the Email-Sending Script**'
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**运行发送电子邮件的脚本**'
- en: It’s now time to see your script in action! Save your script and press **F5**
    or go to **Run** ▸ **Run Module** to run the script. Then check the email inbox
    you sent the message to. You should have a new email. You can see an email we
    received using this script in [Figure 10-2](ch10.xhtml#ch10fig2).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候看看你的脚本实际运行了！保存你的脚本并按**F5**或进入**运行** ▸ **运行模块**来运行脚本。然后检查你发送邮件的收件箱。你应该会收到一封新邮件。你可以在[图10-2](ch10.xhtml#ch10fig2)中看到我们通过此脚本收到的电子邮件。
- en: '![image](../images/f0140-01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0140-01.jpg)'
- en: '**FIGURE 10-2:** Email sent with *send_email.py*'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**图10-2：** 使用*send_email.py*发送的电子邮件'
- en: If you haven’t received an email, verify that the email and SMTP information
    in *send_email.py* are correct. Also verify that you have given permission to
    let less secure apps use your account in your email account settings.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有收到电子邮件，检查*send_email.py*中的电子邮件和SMTP信息是否正确。同时，确保你已经在电子邮件帐户设置中允许较不安全的应用访问你的账户。
- en: '**WIRING THE CIRCUIT**'
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**连接电路**'
- en: Now let’s wire your PIR sensor to your Raspberry Pi so it can send you emails
    when the sensor detects movement. You’ll also include two LEDs into your system,
    one to indicate whether the alarm is armed and one to indicate whether it has
    been triggered, as well as a pushbutton to arm and disarm the sensor.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将PIR传感器连接到你的树莓派，这样当传感器检测到运动时，它就可以发送电子邮件给你。你还将把两个LED集成到系统中，一个用于指示报警是否启动，另一个用于指示报警是否触发，同时还需要一个按钮来启动和停止传感器。
- en: Follow these steps to build the intruder alarm circuit, using [Figure 10-3](ch10.xhtml#ch10fig3)
    as a reference.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤建立入侵报警电路，参考[图10-3](ch10.xhtml#ch10fig3)进行连接。
- en: '![image](../images/f0141-01.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0141-01.jpg)'
- en: '**FIGURE 10-3:** Circuit for the intruder alarm'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**图10-3：** 入侵报警电路'
- en: Connect GND of the Pi to one of the breadboard’s blue rails.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将树莓派的GND连接到面包板的其中一条蓝色轨道。
- en: Insert a red LED and a green LED into the breadboard. Connect the green LED’s
    positive lead to GPIO 18 through a 330 Ω resistor, with the resistor between the
    LED lead and the GPIO pin, and connect the negative lead to the GND rail. Connect
    the red LED’s positive lead to GPIO 17 through another 330 Ω resistor and connect
    the negative lead to the GND rail.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在面包板上插入红色LED和绿色LED。将绿色LED的正极引脚通过330 Ω电阻连接到GPIO 18，电阻位于LED引脚和GPIO引脚之间，并将负极引脚连接到GND轨道。将红色LED的正极引脚通过另一个330
    Ω电阻连接到GPIO 17，并将负极引脚连接到GND轨道。
- en: Insert the pushbutton in the middle of the breadboard so that it bridges the
    center break, as shown in [Figure 10-3](ch10.xhtml#ch10fig3). Connect the pin
    at the bottom right to the GND rail and the pin at the bottom left to GPIO 2.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将按钮插入面包板中间，使其跨接在中心断开处，如[图 10-3](ch10.xhtml#ch10fig3)所示。将右下角的引脚连接到GND轨道，左下角的引脚连接到GPIO
    2。
- en: Connect the PIR motion sensor with the connections in the following table.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照下表中的连接方式连接PIR运动传感器。
- en: '| **PIR MOTION SENSOR** | **RASPBERRY PI** |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| **PIR运动传感器** | **树莓派** |'
- en: '| --- | --- |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| GND | GND |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| GND | GND |'
- en: '| OUT | GPIO 4 |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| OUT | GPIO 4 |'
- en: '| VCC | 5 V |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| VCC | 5 V |'
- en: '**WRITING THE SCRIPT**'
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**编写脚本**'
- en: 'Open **Python 3 (IDLE)** and go to **File** ▸ **New File** to create a new
    script. Enter the code in [Listing 10-2](ch10.xhtml#ch10list2) into the new file
    and save the script as *intruder_alarm.py* inside the *Sensors* folder (remember
    that you can download all the scripts at *[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*):'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 打开**Python 3 (IDLE)**，然后转到**文件** ▸ **新建文件**，创建一个新的脚本。将[清单 10-2](ch10.xhtml#ch10list2)中的代码输入到新文件中，并将脚本保存在*Sensors*文件夹内，命名为*intruder_alarm.py*（记得你可以下载所有脚本，地址是*[https://www.nostarch.com/RaspberryPiProject/](https://www.nostarch.com/RaspberryPiProject/)*）：
- en: '**LISTING 10-2:** The intruder alarm script'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**清单 10-2：** 入侵警报脚本'
- en: '[PRE1]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This code is really straightforward and should all be familiar from [Listing
    10-1](ch10.xhtml#ch10list1). You start by importing the needed libraries ➊ and
    creating `gpiozero` objects to refer to the LEDs, button, and motion sensor ➋.
    At ➌, you create the `motion_sensor_status` and `email_sent` control variables
    to identify whether the motion sensor was triggered and whether an email has been
    sent. You then create the `arm_motion_sensor()` function that arms and disarms
    the motion sensor when you press the pushbutton ➍. The `send_email()` function
    at ➎ sends an email when the sensor detects motion, as long as the sensor is armed
    and the `email_sent` variable is equal to `False`.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码非常直接，应该对你来说很熟悉，来自[清单 10-1](ch10.xhtml#ch10list1)。首先导入所需的库 ➊，并创建`gpiozero`对象来引用LED、按钮和运动传感器
    ➋。在 ➌，你创建了`motion_sensor_status`和`email_sent`控制变量，用于标识运动传感器是否被触发，以及电子邮件是否已发送。然后你创建了`arm_motion_sensor()`函数，通过按下按钮来启动和停止运动传感器
    ➍。在 ➎，`send_email()`函数在传感器检测到运动时发送电子邮件，只要传感器被激活并且`email_sent`变量等于`False`。
- en: 'Last, you assign functions to events: the `arm_motion_sensor()` function is
    called when the pushbutton is pressed ➏, and the `send_email()` function is called
    when motion is detected ➐. The `pause()` function at the end of the code keeps
    the script running for events to be detected ➑.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你将函数分配给事件：当按钮被按下时，调用`arm_motion_sensor()`函数 ➏，当检测到运动时，调用`send_email()`函数
    ➐。代码末尾的`pause()`函数让脚本持续运行，以便能够检测事件 ➑。
- en: Notice that the `send_email()` function has an `if` statement condition that
    sets the script to send an email only if motion is detected and if the `email_sent`
    variable is equal to `False`. When an email is sent out, the `email_sent` variable
    changes to `True` and your script sends no more emails. You set the `email_sent`
    variable to `False` again by pressing the pushbutton twice, rearming the alarm.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`send_email()`函数中有一个`if`语句条件，只有当检测到运动并且`email_sent`变量等于`False`时，脚本才会发送电子邮件。发送电子邮件后，`email_sent`变量会变为`True`，脚本将不再发送更多邮件。你可以通过按下按钮两次将`email_sent`变量重新设置为`False`，从而重新启动警报。
- en: This condition prevents the script from sending you a lot of unnecessary emails.
    For example, say you left your dog home when you were out and it triggered the
    sensor; with this condition, you only receive one email saying that motion was
    detected. If you didn’t have this condition, you would receive endless emails
    until your dog moved out of the sensor range.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这个条件可以防止脚本发送大量不必要的电子邮件。例如，假设你外出时将狗留在家中，它触发了传感器；有了这个条件，你只会收到一封电子邮件，告知检测到运动。如果没有这个条件，你将收到无尽的邮件，直到你的狗移出了传感器范围。
- en: Press **F5** or go to **Run** ▸ **Run Module** to run the script. Arm the sensor
    by pressing the pushbutton; the red status LED should light up. Test the alarm
    by moving your hand in front of the motion sensor. You should receive a new message
    in your inbox and the triggered green LED should light up.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 按下**F5**或前往**运行** ▸ **运行模块**来运行脚本。通过按下按钮来激活传感器；红色状态LED应该会亮起。通过在运动传感器前移动手来测试警报。你应该会收到一封新邮件，触发的绿色LED应亮起。
- en: Place this circuit in a strategic place and wait to see if someone enters your
    room while you’re out.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 将这个电路放置在一个战略位置，等待看看是否有人在你不在时进入你的房间。
- en: '**TAKING IT FURTHER**'
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**进一步探讨**'
- en: 'This project showed you how to use the PIR motion sensor with the Raspberry
    Pi and how to send emails with Python. These are handy skills that you can add
    to what you’ve learned in other projects to invent your own devices. Here are
    some simple ideas for projects you can build with the motion sensor:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目向你展示了如何使用PIR运动传感器与树莓派配合使用，以及如何使用Python发送电子邮件。这些是你可以将其他项目中学到的技能添加到自己的创意中的实用技能。以下是一些可以使用运动传感器构建的简单项目想法：
- en: Add a piezo buzzer to your alarm circuit so that when motion is detected not
    only is an email sent but an alarm is also sounded.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的报警电路中添加一个压电蜂鸣器，这样当检测到运动时，不仅会发送电子邮件，还会响起警报。
- en: Automate your room’s lights to automatically turn on when you enter. You may
    need a relay to do this—check [Project 16](ch16.xhtml#ch16) where we explain how
    to use a relay.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化你的房间灯光，使其在你进入时自动打开。你可能需要一个继电器来实现这一点——请查看[项目 16](ch16.xhtml#ch16)，我们在其中解释了如何使用继电器。
- en: Use a relay and a photoresistor to make a security nightlight that turns on
    only when movement is detected in the dark.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用继电器和光敏电阻制作一个安全夜灯，只有在黑暗中检测到运动时才会亮起。
