- en: '17'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '17'
- en: Infrared Remote Control
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 红外遥控器
- en: In this chapter you will
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将会：
- en: Create and test a simple infrared receiver
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建并测试一个简单的红外接收器
- en: Remotely control Arduino digital output pins
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遥控Arduino数字输出引脚
- en: Add a remote control system to the robot vehicle we created in Chapter 14
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将遥控系统添加到我们在第14章中创建的机器人车辆中
- en: As you’ll see, with the addition of an inexpensive receiver module, your Arduino
    can receive the signals from an infrared remote and act upon them.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你将看到的，借助一个便宜的接收器模块，你的Arduino能够接收来自红外遥控器的信号并做出响应。
- en: What Is Infrared?
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是红外线？
- en: Many people use infrared remote controls in a variety of daily actions, and
    most don’t know how they work. Infrared (IR) signals are beams of light at a wavelength
    that cannot be seen by the naked eye. So when you look at the little LED poking
    out of a remote control and press a button, you won’t see the LED light up.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人在日常生活中使用红外遥控器，但大多数人并不知道它们是如何工作的。红外线（IR）信号是无法用肉眼看到的光束。所以下次你看遥控器上小小的LED并按下一个按钮时，你并不会看到LED亮起。
- en: That’s because IR remote controls contain one or more special infrared light–generating
    LEDs that transmit the IR signals. When you press a button on the remote, the
    LED turns on and off repeatedly in a pattern that is unique for each button pressed.
    This signal is received by a special IR receiver on the device being controlled
    and converted to pulses of electrical current that are read as data by the receiver’s
    electronics. If you are curious about these patterns, you can view them by looking
    at the IR LED on a remote through the viewfinder of a phone camera or digital
    camera.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为红外遥控器包含一个或多个特殊的红外光生成LED，它们用于发射红外信号。当你按下遥控器上的一个按钮时，LED会反复开关，以独特的模式传输每个按钮的信号。这个信号被被控制设备上的特殊红外接收器接收，并转换为电脉冲，接收器的电子设备会读取这些数据。如果你对这些模式感兴趣，可以通过手机相机或数码相机的取景器查看遥控器上的红外LED来观察这些模式。
- en: Setting Up for Infrared
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置红外接收
- en: Before moving forward, we need to install the Arduino IRremote library, so visit
    [https://github.com/z3t0/Arduino-IRremote/archive/master.zip](https://github.com/z3t0/Arduino-IRremote/archive/master.zip)to
    download the required files and install them using the method described in Chapter
    7.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，我们需要安装Arduino IRremote库，因此请访问[https://github.com/z3t0/Arduino-IRremote/archive/master.zip](https://github.com/z3t0/Arduino-IRremote/archive/master.zip)下载所需的文件，并使用第7章中描述的方法安装。
- en: The IR Receiver
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 红外接收器
- en: The next step is to set up the IR receiver and test that it is working. You
    can choose either an independent IR receiver (shown in [Figure 17-1](#figure17-1))
    or a prewired module (shown in [Figure 17-2](#figure17-2)), whichever is easier
    for you.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是设置红外接收器并测试它是否正常工作。你可以选择独立的红外接收器（如[图 17-1](#figure17-1)所示）或预接线模块（如[图 17-2](#figure17-2)所示），选择最适合你的方式。
- en: '![f17001](image_fi/500587c17/f17001.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![f17001](image_fi/500587c17/f17001.png)'
- en: 'Figure 17-1: An IR receiver'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17-1：红外接收器
- en: '![f17002](image_fi/500587c17/f17002.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![f17002](image_fi/500587c17/f17002.png)'
- en: 'Figure 17-2: A prewired IR receiver module'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17-2：预接线红外接收器模块
- en: The independent IR receiver shown in [Figure 17-1](#figure17-1) is a Vishay
    TSOP4138\. The bottom leg of the receiver (as shown in the figure) connects to
    an Arduino digital pin, the center leg to GND, and the top leg to 5 V.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图 17-1](#figure17-1)所示，独立的红外接收器是Vishay TSOP4138。接收器的底部引脚（如图所示）连接到Arduino数字引脚，中间引脚连接到GND，顶部引脚连接到5V。
- en: '[Figure 17-2](#figure17-2) shows a prewired IR module. Prewired receiver modules
    are available from PMD Way and other retailers. The benefit of using these modules
    is that they include connection wires and are labeled for easy reference.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 17-2](#figure17-2)显示了一个预接线的红外模块。预接线接收器模块可以从PMD Way及其他零售商处购买。使用这些模块的好处是，它们配有连接线，并且标有标签，便于参考。'
- en: Regardless of your choice of module, in all of the following examples, you’ll
    connect D (the data line) to Arduino digital pin 2, VCC to 5 V, and GND to GND.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你选择哪种模块，在接下来的所有示例中，你都会将D（数据线）连接到Arduino的数字引脚2，将VCC连接到5V，将GND连接到GND。
- en: The Remote Control
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 遥控器
- en: Finally, you will need a remote control. I’ve used a surplus Sony TV remote
    like the one shown in [Figure 17-3](#figure17-3). If you don’t have access to
    a Sony remote, any inexpensive universal remote control can be used after you
    reset it to Sony codes. See the instructions included with your remote control
    to do this.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你需要一个遥控器。我使用了像[图 17-3](#figure17-3)中显示的索尼电视遥控器。如果你没有索尼遥控器，任何便宜的通用遥控器都可以使用，前提是将其重置为索尼代码。有关如何操作，请参阅遥控器附带的说明。
- en: '![f17003](image_fi/500587c17/f17003.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![f17003](image_fi/500587c17/f17003.png)'
- en: 'Figure 17-3: A typical Sony remote control'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17-3：典型的 Sony 遥控器
- en: A Test Sketch
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试草图
- en: Now let’s make sure that everything works. After connecting your IR receiver
    to the Arduino, enter and upload the sketch in [Listing 17-1](#listing17-1).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们确保一切正常工作。在将 IR 接收器连接到 Arduino 后，输入并上传 [列表 17-1](#listing17-1) 中的草图。
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Listing 17-1: IR receiver test'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 17-1：IR 接收器测试
- en: This sketch is relatively simple, because most of the work is done in the background
    by the IR library. At 4, we check whether a signal has been received from the
    remote control. If so, it is displayed in the Serial Monitor in hexadecimal at
    5. The lines at 1, 2, and 3 activate the IR library and create an instance of
    the infrared library function to refer to in the rest of the sketch.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这个草图相对简单，因为大部分工作都由 IR 库在后台完成。在第 4 行，我们检查是否接收到遥控器的信号。如果接收到信号，它将在第 5 行以十六进制显示在串行监视器中。第
    1、2 和 3 行激活 IR 库，并创建一个红外库函数的实例，以便在草图的其余部分进行引用。
- en: Testing the Setup
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试设置
- en: Once you’ve uploaded the sketch, open the Serial Monitor, aim the remote at
    the receiver, and start pressing buttons. You should see codes for the buttons
    displayed in the Serial Monitor after each button press. For example, [Figure
    17-4](#figure17-4) shows the results of pressing 1, 2, and 3, once each.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 上传草图后，打开串行监视器，将遥控器对准接收器，开始按下按钮。每次按下按钮后，您应该会在串行监视器中看到按钮的代码。例如，[图 17-4](#figure17-4)
    显示了分别按下 1、2 和 3 后的结果。
- en: '![f17004](image_fi/500587c17/f17004.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![f17004](image_fi/500587c17/f17004.png)'
- en: 'Figure 17-4: Results of pressing buttons after running the code in [Listing
    17-1](#listing17-1)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17-4：运行 [列表 17-1](#listing17-1) 中的代码后按下按钮的结果
- en: '[Table 17-1](#table17-1) lists the codes from a basic Sony remote control that
    we’ll use in upcoming sketches. However, when running [Listing 17-1](#listing17-1),
    notice that each code number repeats three times. This is an idiosyncrasy of Sony
    IR systems, which send the code three times for each button press. You can ignore
    these repeats with some clever coding, but for now, let’s skip to remote controlling
    with the next project.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 17-1](#table17-1) 列出了我们将在后续草图中使用的基本 Sony 遥控器的代码。然而，在运行 [列表 17-1](#listing17-1)
    时，请注意每个代码数字会重复三次。这是 Sony 红外系统的一个特性，每次按下按钮时，系统会发送三次代码。通过一些巧妙的编程，您可以忽略这些重复代码，但现在我们跳到下一个项目，进行遥控操作。'
- en: 'Table 17-1: Example Sony IR codes'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 表 17-1：示例 Sony IR 代码
- en: '| **Button** | **Code** | **Button** | **Code** |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| **按钮** | **代码** | **按钮** | **代码** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Power | A90 | 7 | 610 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 电源 | A90 | 7 | 610 |'
- en: '| Mute | 290 | 8 | E10 |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 静音 | 290 | 8 | E10 |'
- en: '| 1 | 10 | 9 | 110 |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 10 | 9 | 110 |'
- en: '| 2 | 810 | 0 | 910 |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 810 | 0 | 910 |'
- en: '| 3 | 410 | Volume up | 490 |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 410 | 音量增加 | 490 |'
- en: '| 4 | C10 | Volume down | C90 |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 4 | C10 | 音量减少 | C90 |'
- en: '| 5 | 210 | Channel up | 90 |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 210 | 渠道增加 | 90 |'
- en: '| 6 | A10 | Channel down | 890 |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 6 | A10 | 渠道减少 | 890 |'
- en: 'Project #50: Creating an IR Remote Control Arduino'
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '项目 #50：创建一个 IR 遥控器 Arduino'
- en: This project will demonstrate how to control digital output pins using an IR
    remote control. You’ll control digital pins 3 through 7 with the matching numerical
    buttons 3 through 7 on a Sony remote control. When you press a button on the remote
    control, the matching digital output pin will change state to `HIGH` for 1 second
    and then return to `LOW`. You’ll be able to use this project as a base or guide
    to add remote control capabilities to your other projects.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目将演示如何使用 IR 遥控器控制数字输出引脚。您将使用 Sony 遥控器上的数字按钮 3 到 7 控制数字引脚 3 到 7。当您按下遥控器上的按钮时，相应的数字输出引脚将变为
    `HIGH` 持续 1 秒钟，然后恢复为 `LOW`。您可以使用该项目作为基础或指南，将遥控控制功能添加到其他项目中。
- en: The Hardware
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 硬件
- en: 'The following hardware is required for this project:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目所需的硬件如下：
- en: Arduino and USB cable
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arduino 和 USB 电缆
- en: Five LEDs
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 五个 LED
- en: Five 560 Ω resistors
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 五个 560 Ω 电阻
- en: Infrared receiver or module
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 红外接收器或模块
- en: Solderless breadboard
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无焊面包板
- en: Various jumper wires
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各种跳线
- en: The Schematic
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原理图
- en: The circuit consists of the infrared receiver with the output connected to digital
    pin 2 and five LEDs with current-limiting resistors connected to digital pins
    3 to 7 inclusive, as shown in [Figure 17-5](#figure17-5).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 电路由红外接收器组成，输出连接到数字引脚 2，五个 LED 通过限流电阻连接到数字引脚 3 到 7（包括 7），如 [图 17-5](#figure17-5)
    所示。
- en: '![f17005](image_fi/500587c17/f17005.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![f17005](image_fi/500587c17/f17005.png)'
- en: 'Figure 17-5: Schematic for Project 50'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17-5：项目 50 的原理图
- en: The Sketch
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 草图
- en: 'Enter and upload the following sketch:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 输入并上传以下草图：
- en: '[PRE1]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This sketch has three major parts. First, it waits for a signal from the remote
    at 4. When a signal is received, the signal is tested in the function `translateIR()`
    at 1 to determine which button was pressed and what action to take.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这个草图有三个主要部分。首先，它在4的位置等待来自遥控器的信号。当信号被接收后，它会在1的位置通过函数`translateIR()`测试该信号，以确定按下的是哪个按钮以及应采取什么操作。
- en: Notice at 2 that we compare the hexadecimal codes returned by the IR library.
    These are the codes returned by the test conducted in [Listing 17-1](#listing17-1).
    When the codes for buttons 3 through 7 are received, the function `pinOn()` at
    3 is called, which turns on the matching digital pin for 1 second.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意在2的位置，我们比较了IR库返回的十六进制代码。这些代码是通过在[清单 17-1](#listing17-1)中进行的测试返回的。当接收到按钮3到按钮7的代码时，会调用3中的函数`pinOn()`，它会点亮匹配的数字引脚，持续1秒钟。
- en: As mentioned, Sony remotes send the code three times for each button press,
    so we use a small loop at 5 to ignore the second and third codes. Finally, note
    the addition of `0x` in front of the hexadecimal numbers used in the `case` statements
    at 2.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，索尼遥控器会为每个按钮按下发送三次代码，因此我们在5的位置使用一个小循环来忽略第二次和第三次的代码。最后，请注意在2的位置的`case`语句中，十六进制数字前面添加了`0x`。
- en: Modifying the Sketch
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改草图
- en: You can expand the options or controls available for controlling your receiving
    device by testing more buttons. To do so, use [Listing 17-1](#listing17-1) to
    determine which button creates which code and then add each new code to the `switch
    case` statement.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过测试更多按钮来扩展可用的选项或控制功能，从而控制你的接收设备。为此，使用[清单 17-1](#listing17-1)来确定每个按钮产生的代码，然后将每个新代码添加到`switch
    case`语句中。
- en: 'Project #51: Creating an IR Remote Control Robot Vehicle'
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '项目 #51：创建IR遥控机器人车辆'
- en: To show you how to integrate an IR remote control into an existing project,
    we’ll add IR to the robot described in Project 39 in Chapter 14. In this project,
    instead of presetting the robot’s direction and distances, the sketch will show
    you how to control these actions with a simple Sony TV remote.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 为了向你展示如何将IR遥控器集成到现有项目中，我们将在第14章的第39个项目中添加IR功能。在这个项目中，草图将展示如何用简单的索尼电视遥控器来控制机器人，而不是预设机器人的方向和距离。
- en: The Hardware
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 硬件
- en: 'The required hardware is the same as that required for the robot you built
    for Project 39, with the addition of the IR receiver module described earlier
    in this chapter. In the following sketch, the robot will respond to the buttons
    that you press on the remote control as follows: press 2 for forward, 8 for backward,
    4 for rotate left, and 6 for rotate right.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的硬件与在第39个项目中为机器人构建时所需的硬件相同，只是在本章前面描述的IR接收器模块。此外，在以下草图中，机器人将根据你按下遥控器上的按钮作出响应：按2前进，按8后退，按4左转，按6右转。
- en: The Sketch
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 草图
- en: 'After reassembling your vehicle and adding the IR receiver, enter and upload
    the following sketch:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在重新组装你的车辆并添加IR接收器后，输入并上传以下草图：
- en: '[PRE2]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This sketch should look somewhat familiar to you. Basically, instead of lighting
    up LEDs on digital pins, it calls the motor control functions that were used in
    the robot vehicle from Chapter 14.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这个草图应该对你来说有些熟悉。基本上，它不是点亮数字引脚上的LED，而是调用第14章机器人车辆中使用的电机控制函数。
- en: Looking Ahead
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展望未来
- en: Having worked through the projects in this chapter, you should understand how
    to send commands to your Arduino via an infrared remote control device. Using
    these skills and your knowledge from previous chapters, you now can replace physical
    forms of input such as buttons with a remote control.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本章项目后，你应该已经理解如何通过红外遥控设备向你的Arduino发送命令。凭借这些技能和你在前几章中学到的知识，你现在可以用遥控器代替物理输入形式，如按钮。
- en: 'But the fun doesn’t stop here. In the next chapter, we’ll use an Arduino to
    harness something that, to the untrained eye, is fascinating and futuristic: radio
    frequency identification systems.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 但乐趣并未就此结束。在接下来的章节中，我们将使用Arduino来控制一些东西，这对未经训练的眼睛来说是既迷人又充满未来感的：射频识别系统。
