["```\n// Listing 17-11 #include <IRremote.h>       // use the library 2 IRrecv irrecv(receiverpin); // create instance of irrecv3 decode_results results; \nint receiverpin = 2;        // pin 1 of IR receiver to Arduino digital pin 2\nvoid setup()\n{ Serial.begin(9600);  irrecv.enableIRIn();      // start the IR receiver\n}\nvoid loop() \n{4   if (irrecv.decode(&results))        // have we received an IR signal? { 5     Serial.print(results.value, HEX); // display IR code in the Serial Monitor Serial.print(\" \"); irrecv.resume();                  // receive the next value }\n}\n```", "```\n// Project 50 â€“ Creating an IR Remote Control Arduino\n#include <IRremote.h> \nIRrecv irrecv(receiverpin); // create instance of irrecv\ndecode_results results;\nint receiverpin = 2;        // pin 1 of IR receiver to Arduino digital pin 2\nvoid setup()\n{ irrecv.enableIRIn();      // start the receiver for (int z = 3 ; z < 8 ; z++) // set up digital pins  { pinMode(z, OUTPUT); }\n}1 void translateIR() \n// takes action based on IR code received\n// uses Sony IR codes\n{ switch(results.value) {2     case 0x410:  pinOn(3); break; // 3 case 0xC10:  pinOn(4); break; // 4 case 0x210:  pinOn(5); break; // 5 case 0xA10:  pinOn(6); break; // 6 case 0x610:  pinOn(7); break; // 7 }\n}3 void pinOn(int pin) // turns on digital pin \"pin\" for 1 second\n{ digitalWrite(pin, HIGH); delay(1000); digitalWrite(pin, LOW);\n}\nvoid loop() \n{4   if (irrecv.decode(&results))    // have we received an IR signal? { translateIR();5     for (int z = 0 ; z < 2 ; z++) // ignore the 2nd and 3rd repeated codes { irrecv.resume();            // receive the next value } }\n}\n```", "```\n// Project 51 - Creating an IR Remote Control Robot Vehicle\nint receiverpin = 2; // pin 1 of IR receiver to Arduino digital pin 11\n#include <IRremote.h>\nIRrecv irrecv(receiverpin); // create instance of irrecvdecode_results results;\n#include <AFMotor.h>\nAF_DCMotor motor1(1); // set up instances of each motor\nAF_DCMotor motor2(2);\nAF_DCMotor motor3(3);\nAF_DCMotor motor4(4);\nvoid goForward(int speed, int duration)\n{ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(FORWARD); motor2.run(FORWARD); motor3.run(FORWARD); motor4.run(FORWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}\nvoid goBackward(int speed, int duration)\n{ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(BACKWARD); motor2.run(BACKWARD); motor3.run(BACKWARD); motor4.run(BACKWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}\nvoid rotateLeft(int speed, int duration)\n{ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(FORWARD); motor2.run(BACKWARD); motor3.run(BACKWARD); motor4.run(FORWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}\nvoid rotateRight(int speed, int duration)\n{ motor1.setSpeed(speed); motor2.setSpeed(speed); motor3.setSpeed(speed); motor4.setSpeed(speed); motor1.run(BACKWARD); motor2.run(FORWARD); motor3.run(FORWARD); motor4.run(BACKWARD); delay(duration); motor1.run(RELEASE); motor2.run(RELEASE); motor3.run(RELEASE); motor4.run(RELEASE);\n}\n// translateIR takes action based on IR code received, uses Sony IR codes\nvoid translateIR()\n{ switch (results.value) { case 0x810: goForward(255, 250); break; // 2 case 0xC10: rotateLeft(255, 250); break; // 4 case 0xA10: rotateRight(255, 250); break; // 6 case 0xE10: goBackward(255, 250); break; // 8 }\n}\nvoid setup()\n{ delay(5000); irrecv.enableIRIn();         // start IR receiver\n}\nvoid loop()\n{ if (irrecv.decode(&results)) // have we received an IR signal? { translateIR(); for (int z = 0 ; z < 2 ; z++) // ignore the repeated codes { irrecv.resume();            // receive the next value } }\n}\n```"]