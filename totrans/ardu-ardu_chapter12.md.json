["```\n#include <Ch376msc.h>\n#include <SoftwareSerial.h>\nSoftwareSerial USBserial (7, 6);\nCh376msc USBdrive(Serial1); \n```", "```\nSerial.begin(115200); // For Serial Monitor\nUSBserial.begin(9600); // For USB module\nUSBdrive.init(); \n```", "```\nif (USBdrive.checkIntMessage())\n{\n    if (USBdrive.getDeviceStatus())\n    {\n        Serial.println(F(\"Flash drive attached!\"));\n    } else {\n        Serial.println(F(\"Flash drive detached!\"));\n    }\n} \n```", "```\nUSBdrive.setFileName(\"TEST1.TXT\");\nUSBdrive.openFile(); \n```", "```\nUSBdrive.writeNum(`x`)\nUSBdrive.writeNumln(`x`) \n```", "```\nUSBdrive.writeChar('`x`'); \n```", "```\nchar text1[] = \"This is a line of text. \\n\";\nUSBdrive.writeFile(text1, strlen(text1)); \n```", "```\nchar floatChar[8] = \" \"; \n```", "```\nfloat f = 123.456; \n```", "```\ndtostrf(`a`,`b`,`c`,`d`); \n```", "```\ndtostrf(f,3,3,floatChar); \n```", "```\nUSBdrive.writeFile(floatChar, strlen(floatChar)); \n```", "```\nUSBdrive.closeFile(); \n```", "```\nchar text1[] = \"This is a line of text in the form of a character\narray, followed by a new line function. \\n\"; ❶\n\nchar text2[] = \"This is another line of text. I hope you're enjoying the book. John. \\n\";\n\nchar floatChar[8] = \" \";\nfloat f = 12.34567;\n\n#include <Ch376msc.h> ❷\n#include <SoftwareSerial.h>\nSoftwareSerial USBserial(7, 6);\nCh376msc USBdrive(USBserial);\n\nvoid fileWrite()\n{\n    Serial.println(\"fileWrite()\");\n    USBdrive.setFileName(\"TEST1.TXT\"); // Set the filename ❸\n    USBdrive.openFile();               // Open the file\n\n    // Write some integers:\n    for (int a = 0; a < 20; a++)\n    {\n        USBdrive.writeNum(a); ❹\n        USBdrive.writeChar(',');\n    }\n\n    // Write new line:\n    USBdrive.writeChar('\\n'); ❺\n // Write lines of text:\n    USBdrive.writeFile(text1, strlen(text1)); ❻\n    USBdrive.writeFile(text2, strlen(text2));\n    USBdrive.writeChar('\\n');\n\n    // Write floating-point number - first convert to char:\n    dtostrf(f,2,5,floatChar); // 2 whole digits, 5 decimals ❼\n    USBdrive.writeFile(floatChar, strlen(floatChar));\n    USBdrive.closeFile(); // Close the file ❽\n    Serial.println(\"Finished.\");\n}\n\nvoid setup()\n{\n    Serial.begin(115200); // For Serial Monitor ❾\n    USBserial .begin(9600); // For USB module\n    USBdrive.init();\n    delay(5000);\n}\n\nvoid loop()\n{\n    if (USBdrive.checkIntMessage()) ❿\n    {\n        if (USBdrive.getDeviceStatus())\n        {\n            Serial.println(\"Flash drive attached!\");\n        } else {\n            Serial.println(\"Flash drive detached!\");\n        }\n    }\n    fileWrite();\n    delay(5000);\n}\n```", "```\nif (USBdrive.openFile() == ANSW_USB_INT_SUCCESS)\n{\n    USBdrive.moveCursor(CURSOREND);\n} \n```", "```\nif (USBdrive.getFreeSectors())\n{\n  ❶ // Write data to flash drive here\n} else\n{\n    Serial.println(\"Disk full\");\n} \n```", "```\n#include <Ch376msc.h>\n#include <SoftwareSerial.h>\n\nSoftwareSerial USBserial (7, 6);\nCh376msc USBdrive(USBserial);\n\nvoid fileAppend()\n{\n    Serial.println(\"fileAppend()\");\n    USBdrive.setFileName(\"TEST1.TXT\"); // Set the filename\n  ❶ if (USBdrive.openFile() == ANSW_USB_INT_SUCCESS)\n    {\n        USBdrive.moveCursor(CURSOREND);\n    }\n  ❷ if (USBdrive.getFreeSectors())\n    {\n      ❸ USBdrive.writeNumln(random(1000));\n    } else\n    {\n        Serial.println(\"Disk full\");\n    }\n    USBdrive.closeFile();\n    Serial.println(\"Finished\");\n    delay(1000);\n}\n\nvoid setup()\n{\n    Serial.begin(115200); // For Serial Monitor\n    USBserial .begin(9600); // For USB module\n    USBdrive.init();\n    delay(5000);\n  ❹ randomSeed(analogRead(0));\n}\n\nvoid loop()\n{\n    if (USBdrive.checkIntMessage())\n    {\n        if (USBdrive.getDeviceStatus())\n        {\n            Serial.println(F(\"Flash drive attached!\"));\n        } else {\n            Serial.println(F(\"Flash drive detached!\"));\n        }\n    }\n    fileAppend();\n  ❺ do {} while (1);\n} \n```", "```\n// Project #36 - Log sensor data to USB flash drive\n\n❶ #include <Wire.h>\n#include <Adafruit_BMP085.h>\n#include <Ch376msc.h>\n#include <SoftwareSerial.h>\n\nAdafruit_BMP085 bmp;\nSoftwareSerial USBserial (7, 6);\nCh376msc USBdrive(USBserial);\n\n❷ char floatChar[8] = \" \";\n\nvoid fileAppend()\n{\n    Serial.println(\"fileAppend()\");\n    USBdrive.setFileName(\"TEMPDATA.TXT\"); // Set the filename\n    if (USBdrive.openFile() == ANSW_USB_INT_SUCCESS)\n    {\n        USBdrive.moveCursor(CURSOREND);\n    }\n    if (USBdrive.getFreeSectors())\n    {\n      ❸ dtostrf(bmp.readTemperature(),2,2,floatChar);\n        USBdrive.writeFile(floatChar, strlen(floatChar));\n        USBdrive.writeChar(',');\n        USBdrive.writeChar('C');\n        USBdrive.writeChar(',');\n\n      ❹ USBdrive.writeNum(bmp.readPressure());\n        USBdrive.writeChar(',');\n        USBdrive.writeChar('P');\n        USBdrive.writeChar('a');\n        USBdrive.writeChar(',');\n\n      ❺ dtostrf(bmp.readAltitude(),5,1,floatChar);\n        USBdrive.writeFile(floatChar, strlen(floatChar));\n        USBdrive.writeChar(',');\n        USBdrive.writeChar('m');\n        USBdrive.writeChar('\\n');\n    } else\n    {\n        Serial.println(\"Disk full\");\n    }\n    USBdrive.closeFile();\n    Serial.println(\"Finished\");\n}\n\nvoid setup()\n{\n    bmp.begin();\n    Serial.begin(115200);  // For Serial Monitor\n    USBserial.begin(9600); // For USB module\n USBdrive.init();\n    delay(5000);\n}\n\nvoid loop()\n{\n    if (USBdrive.checkIntMessage())\n    {\n        if (USBdrive.getDeviceStatus()) {\n        Serial.println(F(\"Flash drive attached!\"));\n    }\n    else\n    {\n        Serial.println(F(\"Flash drive detached!\"));\n        return;\n    }\n}\n\nfileAppend();\n❻ delay(5000); // Arbitrary delay\n    9 \n```", "```\n#include <Ch376msc.h>\n#include <SoftwareSerial.h>\nSoftwareSerial Serial1(7, 6);\nCh376msc USBdrive(Serial1); \n```", "```\nUSBdrive.setFileName(\"`FILENAME.TXT`\");\nUSBdrive.openFile(); \n```", "```\nwhile(!USBdrive.getEOF())\n{\n    number = USBdrive.readLong();\n} \n```", "```\nUSBdrive.closeFile(); \n```", "```\n❶ #include <Ch376msc.h>\n#include <SoftwareSerial.h>\nSoftwareSerial Serial1(7, 6);\nCh376msc USBdrive(Serial1);\n\nvoid writeIntegers()\n{\n    int number;\n    if (USBdrive.driveReady())\n    {\n        USBdrive.setFileName(\"NUMBERS.TXT\");\n        USBdrive.openFile();\n        Serial.println(F(\"Writing integers:\"));\n        for (int a = 0; a < 10; a++)\n        {\n            number = random(−1000, 1000);\n            Serial.print(number); Serial.print(\" \");\n            USBdrive.writeNumln(number);\n        }\n        USBdrive.closeFile();\n        Serial.println(F(\"Finished writing integers.\"));\n Serial.println();\n    }\n}\n\nvoid readIntegers()\n{\n  ❷ USBdrive.setFileName(\"NUMBERS.TXT\");\n    USBdrive.openFile();\n    Serial.println(F(\"Reading integer numbers…\"));\n\n  ❸ while(!USBdrive.getEOF())\n    {\n      ❹ Serial.print(USBdrive.readLong());\n        Serial.print(\" \");\n    }\n  ❺ USBdrive.closeFile();\n    Serial.println(F(\"Finished reading integers.\"));\n    Serial.println();\n}\n\nvoid setup()\n{\n  ❻ randomSeed(analogRead(0));\n    Serial.begin(115200);\n    Serial1.begin(9600);\n    USBdrive.init();\n    delay(5000);\n}\n\nvoid loop()\n{\n  ❼ if (USBdrive.checkIntMessage())\n    {\n        if (USBdrive.getDeviceStatus()) {\n            Serial.println(F(\"Flash drive attached!\"));\n    } else {\n            Serial.println(F(\"Flash drive detached!\"));\n            return;\n        }\n    }\n  ❽ writeIntegers();\n    delay(2000);\n  ❾ readIntegers();\n    delay(30000);\n} \n```", "```\n// Project #37 - USB security key\n\n#include <Ch376msc.h>\n#include <SoftwareSerial.h>\nSoftwareSerial Serial1(7, 6);\nCh376msc USBdrive(Serial1);\n\nboolean readKey()\n{\n    boolean keyStatus=false;\n  ❶ int securityKey=12345;\n    int testKey=0;\n  ❷ USBdrive.setFileName(\"SECURITY.TXT\");\n    USBdrive.openFile();\n    while(!USBdrive.getEOF())\n    {\n      ❸ testKey=USBdrive.readLong();\n    }\n    USBdrive.closeFile();\n    if (securityKey==testKey)\n    {\n      ❹ keyStatus=true;\n    }\n  ❺ return keyStatus;\n}\n\nvoid setup()\n{\n    pinMode(13, OUTPUT);\n    Serial.begin(115200);\n    Serial1.begin(9600);\n    USBdrive.init();\n    delay(5000);\n\n  ❻ if (USBdrive.checkIntMessage())\n    {\n        if (USBdrive.getDeviceStatus())\n        {\n            Serial.println(F(\"Flash drive attached!\"));\n        } else {\n            Serial.println(F(\"Flash drive detached!\"));\n            return;\n        }\n    }\n  ❼ if (readKey()==false)\n    {\n        Serial.println(\"Incorrect key!\");\n      ❽ do {} while (1); // Halt\n  }\n}\n\nvoid loop()\n{\n  ❾ digitalWrite(13, HIGH);\n    delay(500);\n    digitalWrite(13, LOW);\n    delay(500);\n} \n```", "```\n// Project #38 - Project configuration via USB flash drive\n\n#include <EEPROM.h>\n#include <Ch376msc.h>\n#include <SoftwareSerial.h>\nSoftwareSerial Serial1(9, 8);\nCh376msc USBdrive(Serial1);\n\nvoid loadData()\n{\n    int _data;\n    int pointer = 0;\n\n  ❶ USBdrive.setFileName(\"SETTINGS.TXT\");\n    USBdrive.openFile();\n    Serial.println(F(\"Reading data from USB:\"));\n\n    while(!USBdrive.getEOF())\n    {\n      ❷ data = USBdrive.readLong();\n        EEPROM.write(_data,pointer);\n        Serial.print(pointer); Serial.print(\" \"); Serial.println(_data);\n        pointer++;\n    }\n  ❸ USBdrive.closeFile();\n    Serial.println(F(\"Finished.\"));\n    Serial.println();\n}\n\nvoid useData()\n{\n    int a;\n    int _data;\n    Serial.println(\"Reading from EEPROM…\");\n    for (a = 0; a < 100; a++)\n    {\n      ❹ _data = EEPROM.read(a);\n        PORTD = _data;\n        Serial.print(a); Serial.print(\" \"); Serial.println(_data);\n        delay(100);\n    }\n}\n\nvoid setup()\n{\n    DDRD = B11111111;\n    Serial.begin(115200);\n    Serial1.begin(9600);\n    USBdrive.init();\n    delay(5000);\n}\n\nvoid loop()\n{\n    if (USBdrive.checkIntMessage())\n    {\n        if (USBdrive.getDeviceStatus()) {\n            Serial.println(F(\"Flash drive attached!\"));\n        } else\n {\n            Serial.println(F(\"Flash drive detached!\"));\n            return;\n        }\n    }\n    loadData();\n    delay(1000);\n\n    useData();\n    delay(1000);\n\n    do {} while (1); // Halt\n\n} \n```", "```\nUSBdrive.setFileName(\"TESTTEXT.TXT\");\nUSBdrive.openFile(); \n```", "```\nmoreText = USBdrive.readFile(_buffer, sizeof(_buffer)); \n```", "```\nUSBdrive.closeFile(); \n```", "```\n#include <Ch376msc.h>\n#include <SoftwareSerial.h>\nSoftwareSerial Serial1(7, 6);\nCh376msc USBdrive(Serial1);\n\nvoid readText()\n{\n    char _buffer[254];\n    boolean moreText;\n\n  ❶ USBdrive.setFileName(\"TESTTEXT.TXT\");\n    USBdrive.openFile();\n  ❷ moreText = true;\n    while(moreText)\n    {\n      ❸ moreText = USBdrive.readFile(_buffer, sizeof(_buffer));\n      ❹ Serial.print(_buffer);\n    }\n  ❺ USBdrive.closeFile();\n}\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial1.begin(9600);\n    USBdrive.init();\n    delay(5000);\n}\n\nvoid loop()\n{\n    if (USBdrive.checkIntMessage())\n    {\n        if (USBdrive.getDeviceStatus())\n        {\n            Serial.println(F(\"Flash drive attached!\"));\n        } else\n        {\n            Serial.println(F(\"Flash drive detached!\"));\n        }\n    }\n  ❻ readText();\n    delay(5000);\n} \n```"]