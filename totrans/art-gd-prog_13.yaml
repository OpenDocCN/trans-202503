- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Making Your Work Public
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 公开你的作品
- en: '![](Images/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/chapterart.png)'
- en: 'Sketch 100: Processing on the Web'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 草图 100：在网页上的处理
- en: Processing sketches can usually execute within a browser, requiring little to
    no modification to make dynamic and interactive web objects. The system that allows
    this is *Processing.js*; it converts the Processing sketch into JavaScript before
    running it and displays the result in an HTML5 canvas.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Processing 草图通常可以在浏览器中执行，几乎不需要修改，就能创建动态和交互式的网页对象。实现这一功能的系统是 *Processing.js*；它将
    Processing 草图转换成 JavaScript 代码后再运行，并将结果显示在 HTML5 画布中。
- en: 'There are four steps in running a sketch from the web:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在网页上运行草图有四个步骤：
- en: Download Processing.js. This means going to a site like [https://processingjs.org/download/](https://processingjs.org/download/)
    and getting the files *processing.js* and *processing.min.js*.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 Processing.js。这意味着你需要访问像 [https://processingjs.org/download/](https://processingjs.org/download/)
    这样的网站，下载 *processing.js* 和 *processing.min.js* 文件。
- en: Create the Processing sketch. We’ll use Sketch 91, the aurora simulation, as
    our example. This sketch will be named *sketch100.pde*.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Processing 草图。我们将使用草图 91，即极光模拟，作为示例。这个草图将命名为 *sketch100.pde*。
- en: 'Create a web page within which you’ll embed the sketch. It must load *processing.min.js*
    as a script in the header of the page 2:'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个网页，在其中嵌入草图。该网页必须在页面的头部加载 *processing.min.js* 作为脚本 2：
- en: '[PRE0]'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create a canvas, specifying *sketch100.pde* as a data processing source 3:'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个画布，指定 *sketch100.pde* 作为数据处理源 3：
- en: '[PRE1]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will only work properly on a web server, so you need to upload all files
    to a server and display the page from the internet, or install a server on your
    computer.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这只有在网页服务器上才能正常工作，因此你需要将所有文件上传到服务器，并从互联网上显示页面，或者在你的电脑上安装一个服务器。
- en: All three files—the HTML source, the sketch, and *processing.min.js*—should
    be in the same directory on the web server. When the page is loaded, the sketch
    should run and display results in the canvas.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所有三个文件——HTML 源文件、草图和*processing.min.js*——应该放在网页服务器的同一个目录下。当页面加载时，草图应当运行并在画布中显示结果。
- en: 'There may be some other issues depending on the sketch. First, if the sketch
    uses images, these must be preloaded so that their size and other properties are
    available when the sketch runs. A `preload` directive must appear in a comment
    at the beginning of the sketch. For example, in this case, the files `trees.gif`
    and `stars.jpg` are used 1:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 根据草图的不同，可能会有其他问题。首先，如果草图使用了图像，这些图像必须被预加载，以便在草图运行时能够获取它们的大小和其他属性。`preload` 指令必须出现在草图开头的注释中。例如，在这个例子中，使用了
    `trees.gif` 和 `stars.jpg` 文件 1：
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Next, be careful if the sketch uses integers. The Processing code is translated
    into JavaScript, which has no integer type. Integers will become floating-point
    values. Any program that depends on integer arithmetic (like 5/2 = 2) will not
    work properly.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，如果草图使用了整数，要小心。Processing 代码会被转换成 JavaScript，而 JavaScript 并没有整数类型。整数将变成浮点数。任何依赖于整数运算的程序（例如
    5/2 = 2）将无法正常工作。
- en: Any program that requires a Java library won’t work either. Minim is a Java
    library, and so are the video classes. There are JavaScript variations of these,
    but using them will require learning how JavaScript works and how to access JavaScript
    from Processing and vice versa.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 任何需要 Java 库的程序也无法工作。Minim 是一个 Java 库，视频类也是如此。这些库有 JavaScript 版本，但使用它们将需要学习 JavaScript
    的工作原理，以及如何从 Processing 访问 JavaScript，反之亦然。
- en: The HTML code for the web page follows the code for the sketch on the next page.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 网页的 HTML 代码位于下一页草图代码之后。
