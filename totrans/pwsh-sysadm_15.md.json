["```\nPS> Set-AWSCredential -AccessKey 'access key' -SecretKey 'secret key'\n```", "```\nPS> New-IAMUser -UserName Automator\n\nArn                 : arn:aws:iam::013223035658:user/Automator\nCreateDate          : 9/16/2019 5:01:24 PM\nPasswordLastUsed    : 1/1/0001 12:00:00 AM\nPath                : /\nPermissionsBoundary :\nUserId              : AIDAJU2WN5KIFOUMPDSR4\nUserName            : Automator\n```", "```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\" : { \"AWS\": \"arn:aws:iam::XXXXXX:user/Automator\" },\n            \"Action\": \"sts:AssumeRole\"\n        }\n    ]\n}\n```", "```\nPS> $json = '{\n>> \"Version\": \"2012-10-17\",\n>> \"Statement\": [\n>> {\n>> \"Effect\": \"Allow\",\n>> \"Principal\" : { \"AWS\": \"arn:aws:iam::XXXXXX:user/Automator\" },\n>> \"Action\": \"sts:AssumeRole\"\n>> }\n>> ]\n>> }'\nPS> New-IAMRole -AssumeRolePolicyDocument $json -RoleName 'AllAccess'\n\nPath             RoleName                         RoleId                   CreateDate          \n----             --------                         ------                   ----------          \n/                AllAccess                        <Your Specific Role ID>  <Date created>\n```", "```\nPS> $policyArn = (Get-IAMPolicies | where {$_.PolicyName -eq 'AdministratorAccess'}).Arn\nPS> Register-IAMUserPolicy -PolicyArn $policyArn -UserName Automator\n```", "```\nPS> $key = New-IAMAccessKey -UserName Automator\nPS> $key\n\nAccessKeyId     : XXXXXXXX\nCreateDate      : 9/16/2019 6:17:40 PM\nSecretAccessKey : XXXXXXXXX\nStatus          : Active\nUserName        : Automator\n```", "```\nPS> Set-AWSCredential -AccessKey $key.AccessKeyId -SecretKey \n$key.SecretAccessKey -StoreAs 'Default'\n```", "```\nPS> Get-AWSCredentials -ListProfileDetail\nProfileName StoreTypeName         ProfileLocation\n----------- -------------         ---------------\nDefault     NetSDKCredentialsFile\n```", "```\nPS> $network = '10.0.0.0/16'\nPS> $vpc = New-EC2Vpc -CidrBlock $network\nPS> $vpc\n\nCidrBlock                   : 10.0.0.0/24\nCidrBlockAssociationSet     : {vpc-cidr-assoc-03f1edbc052e8c207}\nDhcpOptionsId               : dopt-3c9c3047\nInstanceTenancy             : default\nIpv6CidrBlockAssociationSet : {}\nIsDefault                   : False\nState                       : pending\nTags                        : {}\nVpcId                       : vpc-03e8c773094d52eb3\n```", "```\nPS> Edit-EC2VpcAttribute -VpcId $vpc.VpcId -EnableDnsSupport $true\nPS> Edit-EC2VpcAttribute -VpcId $vpc.VpcId -EnableDnsHostnames $true\n```", "```\nPS> $gw = New-EC2InternetGateway\nPS> $gw\n\nAttachments InternetGatewayId     Tags\n----------- -----------------     ----\n{}          igw-05ca5aaa3459119b1 {}\n```", "```\nPS> Add-EC2InternetGateway -InternetGatewayId $gw.InternetGatewayId -VpcId $vpc.VpcId\n```", "```\nPS> $rt = New-EC2RouteTable -VpcId $vpc.VpcId\nPS> $rt\n\nAssociations    : {}\nPropagatingVgws : {}\nRoutes          : {}\nRouteTableId    : rtb-09786c17af32005d8\nTags            : {}\nVpcId           : vpc-03e8c773094d52eb3\n```", "```\nPS> New-EC2Route -RouteTableId $rt.RouteTableId -GatewayId \n$gw.InternetGatewayId -DestinationCidrBlock '0.0.0.0/0'\n\nTrue\n```", "```\nPS> Get-EC2AvailabilityZone\n\nMessages RegionName State     ZoneName\n-------- ---------- -----     --------\n{}       us-east-1  available us-east-1a\n{}       us-east-1  available us-east-1b\n{}       us-east-1  available us-east-1c\n{}       us-east-1  available us-east-1d\n{}       us-east-1  available us-east-1e\n{}       us-east-1  available us-east-1f\n```", "```\nPS> $sn = New-EC2Subnet -VpcId $vpc.VpcId -CidrBlock '10.0.1.0/24' -AvailabilityZone 'us-east-1d'\nPS> Register-EC2RouteTable -RouteTableId $rt.RouteTableId -SubnetId $sn.SubnetId\nrtbassoc-06a8b5154bc8f2d98\n```", "```\nPS> $ami = Get-EC2ImageByName -Name 'WINDOWS_2016_BASE'\nPS> $ami\n\nArchitecture        : x86_64\nBlockDeviceMappings : {/dev/sda1, xvdca, xvdcb, xvdcc...}\nCreationDate        : 2019-08-15T02:27:20.000Z\nDescription         : Microsoft Windows Server 2016...\nEnaSupport          : True\nHypervisor          : xen\nImageId             : ami-0b7b74ba8473ec232\nImageLocation       : amazon/Windows_Server-2016-English-Full-Base-2019.08.15\nImageOwnerAlias     : amazon\nImageType           : machine\nKernelId            :\nName                : Windows_Server-2016-English-Full-Base-2019.08.15\nOwnerId             : 801119661308\nPlatform            : Windows\nProductCodes        : {}\nPublic              : True\nRamdiskId           :\nRootDeviceName      : /dev/sda1\nRootDeviceType      : ebs\nSriovNetSupport     : simple\nState               : available\nStateReason         :\nTags                : {}\nVirtualizationType  : hvm\n```", "```\nPS> $params = @{\n>> ImageId = $ami.ImageId\n>> AssociatePublicIp = $false\n>> InstanceType = 't2.micro'\n>> SubnetId = $sn.SubnetId\n}\nPS> New-EC2Instance @params\n\nGroupNames    : {}\nGroups        : {}\nInstances     : {}\nOwnerId       : 013223035658\nRequesterId   :\nReservationId : r-05aa0d9b0fdf2df4f\n```", "```\nPS> $parameters = @{\n>> VpcCidrBlock = '10.0.0.0/16'\n>> EnableDnsSupport = $true\n>> SubnetCidrBlock = '10.0.1.0/24'\n>> OperatingSystem = 'Windows Server 2016'\n>> SubnetAvailabilityZone = 'us-east-1d'\n>> InstanceType = 't2.micro'\n>> Verbose = $true\n}\nPS> New-CustomEC2Instance @parameters\n\nVERBOSE: Invoking Amazon Elastic Compute Cloud operation 'DescribeVpcs' in region 'us-east-1'\nVERBOSE: A VPC with the CIDR block [10.0.0.0/16] has already been created.\nVERBOSE: Enabling DNS support on VPC ID [vpc-03ba701f5633fcfac]...\nVERBOSE: Invoking Amazon EC2 operation 'ModifyVpcAttribute' in region 'us-east-1'\nVERBOSE: Invoking Amazon EC2 operation 'ModifyVpcAttribute' in region 'us-east-1'\nVERBOSE: Invoking Amazon Elastic Compute Cloud operation 'DescribeInternetGateways' in region \n         'us-east-1'\nVERBOSE: An internet gateway is already attached to VPC ID [vpc-03ba701f5633fcfac].\nVERBOSE: Invoking Amazon Elastic Compute Cloud operation 'DescribeRouteTables' in region \n         'us-east-1'\nVERBOSE: Route table already exists for VPC ID [vpc-03ba701f5633fcfac].\nVERBOSE: A default route has already been created for route table ID [rtb-0b4aa3a0e1801311f \n         rtb-0aed41cac6175a94d].\nVERBOSE: Invoking Amazon Elastic Compute Cloud operation 'DescribeSubnets' in region 'us-east-1'\nVERBOSE: A subnet has already been created and registered with VPC ID [vpc-03ba701f5633fcfac].\nVERBOSE: Invoking Amazon EC2 operation 'DescribeImages' in region 'us-east-1'\nVERBOSE: Creating EC2 instance...\nVERBOSE: Invoking Amazon EC2 operation 'RunInstances' in region 'us-east-1'\n\nGroupNames    : {}\nGroups        : {}\nInstances     : {}\nOwnerId       : 013223035658\nRequesterId   :\nReservationId : r-0bc2437cfbde8e92a\n```", "```\nPS> $ebApp = New-EBApplication -ApplicationName 'AutomateWorkflow'\nPS> $ebApp\n\nApplicationName         : AutomateWorkflow\nConfigurationTemplates  : {}\nDateCreated             : 9/19/2019 11:43:56 AM\nDateUpdated             : 9/19/2019 11:43:56 AM\nDescription             :\nResourceLifecycleConfig : Amazon.ElasticBeanstalk.Model\n                          .ApplicationResourceLifecycleConfig\nVersions                : {}\n```", "```\nPS> (Get-EBAvailableSolutionStackList).SolutionStackDetails\n\nPermittedFileTypes SolutionStackName\n------------------ -----------------\n{zip}              64bit Windows Server Core 2016 v1.2.0 running IIS 10.0\n{zip}              64bit Windows Server 2016 v1.2.0 running IIS 10.0\n{zip}              64bit Windows Server Core 2012 R2 v1.2.0 running IIS 8.5\n{zip}              64bit Windows Server 2012 R2 v1.2.0 running IIS 8.5\n{zip}              64bit Windows Server 2012 v1.2.0 running IIS 8\n{zip}              64bit Windows Server 2008 R2 v1.2.0 running IIS 7.5\n{zip}              64bit Amazon Linux 2018.03 v2.12.2 runni...\n{jar, zip}         64bit Amazon Linux 2018.03 v2.7.4 running Java 8\n{jar, zip}         64bit Amazon Linux 2018.03 v2.7.4 running Java 7\n{zip}              64bit Amazon Linux 2018.03 v4.5.3 running Node.js\n{zip}              64bit Amazon Linux 2015.09 v2.0.8 running Node.js\n{zip}              64bit Amazon Linux 2015.03 v1.4.6 running Node.js\n{zip}              64bit Amazon Linux 2014.03 v1.1.0 running Node.js\n{zip}              32bit Amazon Linux 2014.03 v1.1.0 running Node.js\n{zip}              64bit Amazon Linux 2018.03 v2.8.1 running PHP 5.4\n--snip--\n```", "```\nPS> $instanceProfileOptionSetting = New-Object Amazon.ElasticBeanstalk.Model.\nConfigurationOptionSetting -ArgumentList aws:autoscaling:launchconfiguration,\nIamInstanceProfile,'aws-elasticbeanstalk-ec2-role'\n\n>> $parameters = @{\n>>      ApplicationName = 'AutomateWorkflow'\n>>      EnvironmentName = 'Testing'\n>> SolutionStackName = '64bit Windows Server Core 2019 v2.5.9 running IIS 10.0'\n>>      Tier_Type = 'Standard'\n>>      Tier_Name = 'WebServer'\n>>      OptionSetting = $instanceProfileOptionSetting\n>> }\nPS> New-EBEnvironment @parameters\n\nAbortableOperationInProgress : False\nApplicationName              : AutomateWorkflow\nCNAME                        :\nDateCreated                  : 10/3/2020 9:31:49 AM\nDateUpdated                  : 10/3/2020 9:31:49 AM\nDescription                  :\nEndpointURL                  :\nEnvironmentArn               : arn:aws:elasticbeanstalk:us-east-1:054715970076:environment/AutomateWorkflow/Testing \nEnvironmentId                :  e-f3pfgxhrzf\nEnvironmentLinks             : {}\nEnvironmentName              : Testing\nHealth                       : Grey\nHealthStatus                 :\nOperationsRole               :\nPlatformArn                  : arn:aws:elasticbeanstalk:us-east-1::platform/IIS 10.0 running on 64bit Windows Server Core \n                               2019/2.5.9 \nResources                    :\nSolutionStackName            : 64bit Windows Server Core 2019 v2.5.9 running IIS 10.0\nStatus                       : Launching\nTemplateName                 :\nTier                         : Amazon.ElasticBeanstalk.Model.EnvironmentTier\nVersionLabel                 :\n```", "```\nPS> Compress-Archive -Path 'C:\\MyPackageFolder\\*' -DestinationPath 'C:\\package.zip'\n```", "```\nPS> Write-S3Object -BucketName 'automateworkflow' -File 'C:\\package.zip'\n```", "```\nPS> $verLabel = [System.DateTime]::Now.Ticks.ToString()\nPS> $newVerParams = @{\n>>      ApplicationName       = 'AutomateWorkflow'\n>>      VersionLabel          = $verLabel\n>>      SourceBundle_S3Bucket = 'automateworkflow'\n>>      SourceBundle_S3Key    = 'package.zip'\n}\nPS> New-EBApplicationVersion @newVerParams\n\nApplicationName        : AutomateWorkflow\nBuildArn               :\nDateCreated            : 9/19/2019 12:35:21 PM\nDateUpdated            : 9/19/2019 12:35:21 PM\nDescription            :\nSourceBuildInformation :\nSourceBundle           : Amazon.ElasticBeanstalk.Model.S3Location\nStatus                 : Unprocessed\nVersionLabel           : 636729573206374337\n```", "```\nPS> Update-EBEnvironment -ApplicationName 'AutomateWorkflow'  -EnvironmentName \n'Testing' -VersionLabel $verLabel -Force\n\nAbortableOperationInProgress : True\nApplicationName              : AutomateWorkflow\nCNAME                        : Testing.3u2ukxj2ux.us-ea...\nDateCreated                  : 9/19/2019 12:19:36 PM\nDateUpdated                  : 9/19/2019 12:37:04 PM\nDescription                  :\nEndpointURL                  : awseb-e-w-AWSEBL...\nEnvironmentArn               : arn:aws:elasticbeanstalk... \nEnvironmentId                : e-wkba2k4kcf\nEnvironmentLinks             : {}\nEnvironmentName              : Testing\nHealth                       : Grey\nHealthStatus                 :\nPlatformArn                  : arn:aws:elasticbeanstalk:... \nResources                    :\nSolutionStackName            : 64bit Windows Server Core 2012 R2 running IIS 8.5\nStatus                       : ❶Updating\nTemplateName                 :\nTier                         : Amazon.ElasticBeanstalk.Model.EnvironmentTier\nVersionLabel                 : 636729573206374337\n```", "```\nPS> Get-EBEnvironment -ApplicationName 'AutomateWorkflow' \n-EnvironmentName 'Testing'\n\nAbortableOperationInProgress : False\nApplicationName              : AutomateWorkflow\nCNAME                        : Testing.3u2ukxj2ux.us-e...\nDateCreated                  : 9/19/2019 12:19:36 PM\nDateUpdated                  : 9/19/2019 12:38:53 PM\nDescription                  :\nEndpointURL                  : awseb-e-w-AWSEBL...\nEnvironmentArn               : arn:aws:elasticbeanstalk... \nEnvironmentId                : e-wkba2k4kcf\nEnvironmentLinks             : {}\nEnvironmentName              : Testing\nHealth                       : Green\nHealthStatus                 :\nPlatformArn                  : arn:aws:elasticbeanstalk:...\nResources                    :\nSolutionStackName            : 64bit Windows Server Core 2012 R2 running IIS 8.5\nStatus                       : ❶Ready\nTemplateName                 :\nTier                         : Amazon.ElasticBeanstalk.Model.EnvironmentTier\nVersionLabel                 :\n```", "```\nPS> Get-RDSDBEngineVersion | Group-Object -Property Engine\n\nCount Name                      Group\n----- ----                      -----\n    1 aurora-mysql              {Amazon.RDS.Model.DBEngineVersion}\n    1 aurora-mysql-pq           {Amazon.RDS.Model.DBEngineVersion}\n    1 neptune                   {Amazon.RDS.Model.DBEngineVersion}\n--snip--\n   16 sqlserver-ee              {Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Mo...\n\n   17 sqlserver-ex              {Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Mo...\n\n   17 sqlserver-se              {Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Mo...\n\n   17 sqlserver-web             {Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Model.DBEngineVersion, \n                                Amazon.RDS.Mo...\n--snip--\n```", "```\nPS> Get-RDSDBEngineVersion -Engine 'sqlserver-ex' | \nFormat-Table -Property EngineVersion\n\nEngineVersion\n-------------\n10.50.6000.34.v1\n10.50.6529.0.v1\n10.50.6560.0.v1\n11.00.5058.0.v1\n11.00.6020.0.v1\n11.00.6594.0.v1\n11.00.7462.6.v1\n12.00.4422.0.v1\n12.00.5000.0.v1\n12.00.5546.0.v1\n12.00.5571.0.v1\n13.00.2164.0.v1\n13.00.4422.0.v1\n13.00.4451.0.v1\n13.00.4466.4.v1\n14.00.1000.169.v1\n14.00.3015.40.v1\n```", "```\nNew-RDSDBInstance : RDS does not support creating a DB instance with the \nfollowing combination: DBInstanceClass=db.t1.micro, Engine=sqlserver-ex, \nEngineVersion=14.00.3015.40.v1, LicenseModel=license-included. For supported \ncombinations of instance class and database engine version, see the \ndocumentation.\n```", "```\nNew-RDSDBInstance : The parameter MasterUserPassword is not a valid password. \nOnly printable ASCII characters besides '/', '@', '\"', ' ' may be used.\n```", "```\nPS> $parameters = @{\n>>      DBInstanceIdentifier = 'Automating'\n>>      Engine = 'sqlserver-ex'\n>>      DBInstanceClass = 'db.t2.micro'\n>>      MasterUsername = 'sa'\n>>      MasterUserPassword = 'password'\n>>      AllocatedStorage = 20\n}\nPS> New-RDSDBInstance @parameters\n\nAllocatedStorage                      : 20\nAutoMinorVersionUpgrade               : True\nAvailabilityZone                      :\nBackupRetentionPeriod                 : 1\nCACertificateIdentifier               : rds-ca-2015\nCharacterSetName                      :\nCopyTagsToSnapshot                    : False\n--snip--\n```"]