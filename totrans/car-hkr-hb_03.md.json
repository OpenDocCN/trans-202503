["```\n$ sudo apt-get install can-utils\n```", "```\n$ git clone https://github.com/linux-can/can-utils\n```", "```\n$ dmesg\n--snip --\n[ 8603.743057] CAN device driver interface\n[ 8603.748745] peak_usb 3-2:1.0: PEAK-System PCAN-USB adapter hwrev 28 serial\n    FFFFFFFF (1 channel)\n[ 8603.749554] peak_usb 3-2:1.0 can0: attached to PCAN-USB channel 0 (device\n    255)\n[ 8603.749664] usbcore: registered new interface driver peak_usb\n```", "```\n$ ifconfig can0\ncan0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00\n          UP RUNNING NOARP  MTU:16  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:10\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n```", "```\n$ sudo ip link set can0 type can bitrate 500000\n$ sudo ip link set up can0\n```", "```\n$ ip link set can0 type can help\n```", "```\n$ sudo ip link set canX type can restart-ms 100\n$ sudo ip link set canX type can restart\n```", "```\n$ slcand -o -s6 -t hw -S 3000000 /dev/ttyUSB0\n$ ip link set up slcan0\n```", "```\n$ ifconfig slcan0\nslcan0    Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00\n          NOARP  MTU:16  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:10\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n```", "```\n$ modprobe vcan\n```", "```\n$ dmesg\n[604882.283392] vcan: Virtual CAN interface driver\n```", "```\n$ ip link add dev vcan0 type vcan\n$ ip link set up vcan0\n```", "```\n$ ifconfig vcan0\nvcan0     Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00\n          UP RUNNING NOARP  MTU:16  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n```", "```\n$ git clone https://gitorious.org/linux-can/can-modules.git\n$ cd can-modules/net/can\n$ sudo ./make_isotp.sh\n```", "```\n# sudo insmod ./can-isotp.ko\n```", "```\n$ dmesg\n[830053.381705] can: isotp protocol (rev 20141116 alpha)\n```", "```\n# sudo insmod ./can-isotp.ko\n[830053.374734] can: controller area network core (rev 20120528 abi 9)\n[830053.374746] NET: Registered protocol family 29\n[830053.376897] can: netlink gateway (rev 20130117) max_hops=1\n```", "```\n# sudo insmod ./can-isotp.ko\ninsmod: ERROR: could not insert module ./can-isotp.ko: Unknown symbol in\nmodule\n```", "```\n$ dmesg\n[830760.460054] can_isotp: Unknown symbol can_rx_unregister (err 0)\n[830760.460134] can_isotp: Unknown symbol can_proto_register (err 0)\n[830760.460186] can_isotp: Unknown symbol can_send (err 0)\n[830760.460220] can_isotp: Unknown symbol can_ioctl (err 0)\n[830760.460311] can_isotp: Unknown symbol can_proto_unregister (err 0)\n[830760.460345] can_isotp: Unknown symbol can_rx_register (err 0)\n```", "```\nint s;\nstruct sockaddr_can addr;\nstruct ifreq ifr;\n\ns = socket(PF_CAN, SOCK_RAW, CAN_RAW);\n\nstrcpy(ifr.ifr_name, \"can0\");\nioctl(s, SIOCGIFINDEX, &ifr);\n\naddr.can_family = AF_CAN;\naddr.can_ifindex = ifr.ifr_ifindex;\n\nbind(s, (struct sockaddr *)&addr, sizeof(addr));\n```", "```\ns = socket(PF_CAN, SOCK_RAW, CAN_RAW);\n```", "```\nstrcpy(ifr.ifr_name, \"can0\");\nioctl(s, SIOCGIFINDEX, &ifr);\n```", "```\naddr.can_family = AF_CAN;\naddr.can_ifindex = ifr.ifr_ifindex;\n```", "```\nstruct can_frame frame;\nnbytes = read(s, &frame, sizeof(struct can_frame));\n```", "```\nstruct can_frame {\n        canid_t can_id;  /* 32 bit CAN_ID + EFF/RTR/ERR flags */\n        __u8    can_dlc; /* frame payload length in byte (0 .. 8) */\n        __u8    data[8] __attribute__((aligned(8)));\n};\n```", "```\n$ cat /proc/net/can/rcvlist_all\n    receive list 'rx_all':\n      (vcan3: no entry)\n      (vcan2: no entry)\n      (vcan1: no entry)\n      device   can_id   can_mask  function  userdata   matches  ident\n      vcan0     000     00000000  f88e6370  f6c6f400         0  raw\n     (any: no entry)\n```", "```\n$ echo 1000 > /sys/class/net/can0/tx_queue_len\n```", "```\n< can0 C listen_only loopback three_samples >\n```", "```\n$ mvn clean package\n```", "```\n$ socketcand -i can0\n```"]