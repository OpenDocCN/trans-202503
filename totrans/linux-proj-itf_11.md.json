["```\nlim = sysconf(_SC_MQ_PRIO_MAX);\n```", "```\nlim = pathconf(directory_path, _PC_NAME_MAX)\n```", "```\n$ `getconf` ``*`variable-name`*`` [ ``*`pathname`*`` ]\n```", "```\n$ `getconf ARG_MAX`\n131072\n$ `getconf NAME_MAX /boot`\n255\n```", "```\n#include <unistd.h>\n\nlong `sysconf`(int *name*);\n```", "```\n$ `./t_sysconf`\n_SC_ARG_MAX:         2097152\n_SC_LOGIN_NAME_MAX:  256\n_SC_OPEN_MAX:        1024\n_SC_NGROUPS_MAX:     65536\n_SC_PAGESIZE:        4096\n_SC_RTSIG_MAX:       32\n```", "```\n`syslim/t_sysconf.c`\n#include \"tlpi_hdr.h\"\n\nstatic void             /* Print 'msg' plus sysconf() value for 'name' */\nsysconfPrint(const char *msg, int name)\n{\n    long lim;\n\n    errno = 0;\n    lim = sysconf(name);\n    if (lim != -1) {        /* Call succeeded, limit determinate */\n        printf(\"%s %ld\\n\", msg, lim);\n    } else {\n        if (errno == 0)     /* Call succeeded, limit indeterminate */\n            printf(\"%s (indeterminate)\\n\", msg);\n        else                /* Call failed */\n            errExit(\"sysconf %s\", msg);\n    }\n}\n\nint\nmain(int argc, char *argv[])\n{\n    sysconfPrint(\"_SC_ARG_MAX:        \", _SC_ARG_MAX);\n    sysconfPrint(\"_SC_LOGIN_NAME_MAX: \", _SC_LOGIN_NAME_MAX);\n    sysconfPrint(\"_SC_OPEN_MAX:       \", _SC_OPEN_MAX);\n    sysconfPrint(\"_SC_NGROUPS_MAX:    \", _SC_NGROUPS_MAX);\n    sysconfPrint(\"_SC_PAGESIZE:       \", _SC_PAGESIZE);\n    sysconfPrint(\"_SC_RTSIG_MAX:      \", _SC_RTSIG_MAX);\n    exit(EXIT_SUCCESS);\n}\n      `syslim/t_sysconf.c`\n```", "```\n#include <unistd.h>\n\nlong `pathconf`(const char **pathname*, int *name*);\nlong `fpathconf`(int *fd*, int *name*);\n```", "```\n$ `./t_fpathconf < .`\n_PC_NAME_MAX:  255\n_PC_PATH_MAX:  4096\n_PC_PIPE_BUF:  4096\n```", "```\n`syslim/t_fpathconf.c`\n#include \"tlpi_hdr.h\"\n\nstatic void             /* Print 'msg' plus value of fpathconf(fd, name) */\nfpathconfPrint(const char *msg, int fd, int name)\n{\n    long lim;\n\n    errno = 0;\n    lim = fpathconf(fd, name);\n    if (lim != -1) {        /* Call succeeded, limit determinate */\n        printf(\"%s %ld\\n\", msg, lim);\n    } else {\n        if (errno == 0)     /* Call succeeded, limit indeterminate */\n            printf(\"%s (indeterminate)\\n\", msg);\n        else                /* Call failed */\n            errExit(\"fpathconf %s\", msg);\n    }\n}\n\nint\nmain(int argc, char *argv[])\n{\n    fpathconfPrint(\"_PC_NAME_MAX: \", STDIN_FILENO, _PC_NAME_MAX);\n    fpathconfPrint(\"_PC_PATH_MAX: \", STDIN_FILENO, _PC_PATH_MAX);\n    fpathconfPrint(\"_PC_PIPE_BUF: \", STDIN_FILENO, _PC_PIPE_BUF);\n    exit(EXIT_SUCCESS);\n}\n     `syslim/t_fpathconf.c`\n```"]