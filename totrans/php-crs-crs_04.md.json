["```\n$lastName = 'Smith';\n      $lastName = 'Smith';\n   $lastName      =      'Smith'    ;\n$lastName\n=\n    'Smith'\n;\n```", "```\n$lastName = 'Smith';\n$lastName = '   Smith';\n$lastName = 'Smith   ';\n$lastName = '     Smith   ';\n```", "```\nphp > **print 'matt smith\\'s string';**\nmatt smith's string\n```", "```\n<?php\nprint 'the\ncat\nsat on\nthe mat!\n';\n```", "```\nthe\ncat\nsat on\nthe mat!\n```", "```\nphp > **$name = 'Matt Smith';**\nphp > **print 'my name is ' . $name;**\nmy name is Matt Smith\n```", "```\n<?php\n$name = 'Matt Smith';\nprint 'my name is '\n    . $name\n    . ', I\\'m pleased to meet you!'\n    . PHP_EOL;\n```", "```\n% **php multi_line.php**\nmy name is Matt Smith, I'm pleased to meet you!\n%\n```", "```\nphp > **$name = 'Matt';**\nphp > **$name .= ' Smith';**\nphp > **print** **$name;**\nMatt Smith\n```", "```\nphp > **$name = 'Matt Smith';**\nphp > **print \"My name is $name \\nI'm pleased to meet you\";**\nMy name is Matt Smith\nI'm pleased to meet you\n```", "```\nphp > **$name = 'Matt Smith';**\nphp > **print \"my name is $name, and I'm pleased to meet you\";**\nmy name is Matt Smith, and I'm pleased to meet you\n```", "```\nprint \"$weightkg\";\n```", "```\nphp > **$weight = 80;**\nphp > **print \"my weight is {$weight}kg\";**\nmy weight is 80kg\n```", "```\n<?php\n$smiley = \"\\u{1F60A}\";\n$elephant = \"\\u{1F418}\";\n$cherokeeTSV = \"\\u{13E8}\";\n\nprint \"this is a smiley unicode character\\n$smiley\\n\";\nprint \"followed by some elephants of course\\n$elephant $elephant $elephant\\n\";\nprint \"Cherokee letter TSV\\n$cherokeeTSV\\n\";\n```", "```\n<?php\n$age = 22;\n$weight = 80;\n\n❶ $message = <<<EOT\nmy age is $age\nmy weight is {$weight}kg\n\n❷ EOT;\n\nprint $message;\n```", "```\n% **php heredoc.php**\nmy age is 22\nmy weight is 80kg\n%\n```", "```\n<?php\n$message = <<<TEXT\n    If the closing delimiter is indented\n    then that amount of indention\n    is removed from the lines of the string\n\n    TEXT;\n\nprint $message;\n```", "```\nIf the closing delimiter is indented\nthen that amount of indention\nis removed from the lines of the string\n```", "```\n<?php\n$message = <<<END\n    I'm the same indention as the ending delimiter (4 spaces)\n      I have 2 extra spaces\n      So have I!\n    I'm back to 4 spaces again\n\n    END;\n\nprint $message;\n```", "```\nI'm the same indentation as the ending delimiter (4 spaces)\n  I have 2 extra spaces\n  So have I!\nI'm back to 4 spaces again\n```", "```\n<?php\n❶ $name = \"Matt Smith\";\n\n❷ $codeSample = <<<'PHP'\n    $message = \"hello \\n world \\n on 3 lines!\";\n    $age = 21;\n  ❸ print $name;\n    print $age;\n\n    PHP;\n\nprint $codeSample;\n```", "```\n$message = \"hello \\n world \\n on 3 lines!\";\n$age = 21;\nprint $name;\nprint $age;\n```", "```\nphp > **$myString = 'the CAT sat on the Mat';**\nphp > **print strtolower($myString);**\nthe cat sat on the mat\nphp > **print strtoupper($myString);**\nTHE CAT SAT ON THE MAT\n```", "```\nphp > **$badGrammar = 'some people don\\'t type with capital letters.';**\nphp > **print ucfirst($badGrammar);**\nSome people don't type with capital letters.\n```", "```\nphp > **$worseGrammar = 'SOME PEOPLE TYPE WITH ALL CAPS.';**\nphp > **print lcfirst($worseGrammar);**\nsOME PEOPLE TYPE WITH ALL CAPS.\n```", "```\nphp > **$mixedCaps = 'some peoPLE use CAPS spoRADically.';**\nphp > **print ucwords($mixedCaps);**\nSome PeoPLE Use CAPS SpoRADically.\n```", "```\ncat scat\n01234567\ncat  cat\n```", "```\nphp > **$myString = 'cat scat';**\nphp > **print strlen($myString);**\n8\n```", "```\nphp > **$myString = 'cat scat';**\nphp > **print substr_count($myString, 'cat');**\n2\n```", "```\nphp > **$myString = 'cat scat';**\nphp > **print substr_count($myString, 'Cat');**\n0\n```", "```\nphp > **$myString = 'cat scat';**\nphp > **print strpos($myString, 'cat');**\n0\n```", "```\nphp > **$myString = 'cat scat';**\nphp > **print strpos($myString, 'cat', 2);**\n5\n```", "```\nphp > **$myString = 'cat scat';**\nphp > **print count_chars($myString, 3);**\nacst\n```", "```\nphp > **$warning = 'do not enter';**\nphp > **print substr($warning, 7);**\nenter\n```", "```\nphp > **$warning = 'do not enter';**\nphp > **print substr($warning, -2);**\ner\n```", "```\nphp > **$warning = 'do not enter';**\nphp > **print substr($warning, 7, 3);**\nent\n```", "```\nphp > **$email = 'the.cat@aol.com';**\nphp > **print strstr($email, '@');**\n@aol.com\n```", "```\nphp > **$email = 'the.cat@aol.com';**\nphp > **print strstr($email, '@', true);**\nthe.cat\n```", "```\nphp > **$foodchain = 'dogs eat cats, cats eat mice, mice eat cheese';**\nphp > **print str_replace('eat', 'help', $foodchain);**\ndogs help cats, cats help mice, mice help cheese\nphp > **print $foodchain;**\ndogs eat cats, cats eat mice, mice eat cheese\n```", "```\nphp > **$foodchain = 'dogs eat cats, cats eat mice, mice eat cheese';**\n❶ php > **$friendchain = str_replace('eat', 'help', $foodchain);**\nphp > **print $foodchain;**\n❷ dogs eat cats, cats eat mice, mice eat cheese\nphp > **print $friendchain;**\ndogs help cats, cats help mice, mice help cheese\n```", "```\nphp > **$foodchain = 'dogs eat cats, cats eat mice, mice eat cheese';**\nphp > **print substr_replace($foodchain, 'help', 5, 3);**\ndogs help cats, cats eat mice, mice eat cheese\n```", "```\nphp > **$foodchain = 'dogs eat cats, cats eat mice, mice eat cheese';**\nphp > **print substr_replace($foodchain, 'don\\'t ', 5, 0);**\ndogs don't eat cats, cats eat mice, mice eat cheese\n```", "```\nphp > **$tooSpacey = \"    \\n\\nCAT\\nDOG\\n\\n\";**\nphp > **print trim($tooSpacey);**\nCAT\nDOG\n```", "```\nphp > **$evenSpacier = \"\\n\\n    CAT\\nDOG\\n\\n\";**\nphp > **print ltrim($evenSpacier,** ❶ **\"\\n\");**\n    CAT\nDOG\n❷\nphp >\n```", "```\nphp > **$tooTabby = \"\\tCat \\tDog \\t\\tMouse\";**\nphp > **print $tooTabby;**\n    Cat     Dog         Mouse\nphp > **print str_replace(\"\\t\", '', $tooTabby);**\nCat Dog Mouse\n```", "```\n<?php\n❶ $string1 = <<<EOT\nthe\n    cat     sat\n    \\t\\t on    the\nmat\n\nEOT;\n\n❷ $noTabs = str_replace(\"\\t\", ' ', $string1);\n$noNewlines = str_replace(\"\\n\", ' ', $noTabs);\n\n❸ $output = str_replace('  ', ' ', $noNewlines);\n$output = str_replace('  ', ' ', $output);\n$output = str_replace('  ', ' ', $output);\n\n$output = trim($output);\n\nprint \"[$output]\";\n```", "```\n[the cat sat on the mat]\n```", "```\nphp > **$lonely = 'Cat';**\nphp > **print str_repeat($lonely, 5);**\nCatCatCatCatCat\n```", "```\n 12 // padded with spaces\n   1099\n\n000001 // padded with zeros\n000855\n```", "```\nphp > **$tooShort = 'Cat';**\nphp > **print str_pad($tooShort, 20, '-');**\nCat-----------------\n```", "```\nphp > **$tooShort = 'Cat';**\nphp > **print str_pad($tooShort, 20, '-', STR_PAD_LEFT);**\n-----------------Cat\nphp > **print str_pad($tooShort, 20, '-', STR_PAD_BOTH);**\n--------Cat---------\n```", "```\nMatt is learning PHP\n```", "```\napple juice is made from apples.\n```", "```\norange juice is made from oranges.\n```"]