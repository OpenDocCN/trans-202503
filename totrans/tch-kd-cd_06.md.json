["```\n>>> import random\n>>> random.randint(1, 10)\n```", "```\n➊ import random\n➋ the_number = random.randint(1, 10)\n➌ guess = int(input(\"Guess a number between 1 and 10: \"))\n➍ while guess != the_number:\n➎     if guess > the_number:\n          print(guess, \"was too high. Try again.\")\n➏     if guess < the_number:\n          print(guess, \"was too low. Try again.\")\n➐     guess = int(input(\"Guess again: \"))\n➑ print(guess, \"was the number! You win!\")\n```", "```\n>>> # Getting a random color\n>>> colors = [\"red\", \"yellow\", \"blue\", \"green\", \"orange\", \"purple\", \"white\", \"gray\"]\n>>> random.choice(colors)\n'orange'\n>>> random.choice(colors)\n'blue'\n>>> random.choice(colors)\n'white'\n>>> random.choice(colors)\n'purple'\n>>>\n```", "```\nt.penup()\nt.setpos(x,y)\nt.pendown()\n```", "```\nx = random.randrange(-turtle.window_width()//2,\n                     turtle.window_width()//2)\ny = random.randrange(-turtle.window_height()//2,\n                     turtle.window_height()//2)\n```", "```\n  import random\n  import turtle\n  t = turtle.Pen()\n  turtle.bgcolor(\"black\")\n  colors = [\"red\", \"yellow\", \"blue\", \"green\", \"orange\", \"purple\",\n            \"white\", \"gray\"]\n  for n in range(50):\n      # Generate spirals of random sizes/colors at random locations\n➊     t.pencolor(random.choice(colors)) # Pick a random color\n➋     size = random.randint(10,40) # Pick a random spiral size\n      # Generate a random (x,y) location on the screen\n➌     x = random.randrange(-turtle.window_width()//2,\n                            turtle.window_width()//2)\n➍     y = random.randrange(-turtle.window_height()//2,\n                            turtle.window_height()//2)\n➎     t.penup()\n➏     t.setpos(x,y)\n➐     t.pendown()\n➑     for m in range(size):\n          t.forward(m*2)\n          t.left(91)\n```", "```\n➊ import random\n➋ choices = [\"rock\", \"paper\", \"scissors\"]\n   print(\"Rock crushes scissors. Scissors cut paper. Paper covers rock.\")\n➌ player = input(\"Do you want to be rock, paper, or scissors (or quit)? \")\n➍ while player != \"quit\":                 # Keep playing until the user quits\n      player = player.lower()              # Change user entry to lowercase\n➎     computer = random.choice(choices)   # Pick one of the items in choices\n      print(\"You chose \" +player+ \", and the computer chose \" +computer+ \".\")\n➏     if player == computer:\n          print(\"It's a tie!\")\n➐     elif player == \"rock\":\n          if computer == \"scissors\":\n              print(\"You win!\")\n          else:\n              print(\"Computer wins!\")\n➑     elif player == \"paper\":\n          if computer == \"rock\":\n              print(\"You win!\")\n          else:\n              print(\"Computer wins!\")\n➒     elif player == \"scissors\":\n          if computer == \"paper\":\n              print(\"You win!\")\n          else:\n              print(\"Computer wins!\")\n      else:\n          print(\"I think there was some sort of error...\")\n      print()                              # Skip a line\n➓     player = input(\"Do you want to be rock, paper, or scissors (or quit)? \")\n```", "```\ncards = [\"two of diamonds\",\n         \"three of diamonds\",\n         \"four of diamonds\",\n         # This is going to take forever...\n```", "```\nsuits = [\"clubs\", \"diamonds\", \"hearts\", \"spades\"]\nfaces = [\"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\",\n         \"ten\", \"jack\", \"queen\", \"king\", \"ace\"]\n```", "```\nimport random\nsuits = [\"clubs\", \"diamonds\", \"hearts\", \"spades\"]\nfaces = [\"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\",\n         \"ten\", \"jack\", \"queen\", \"king\", \"ace\"]\nmy_face = random.choice(faces)\nmy_suit = random.choice(suits)\nprint(\"I have the\", my_face, \"of\", my_suit)\n```", "```\n>>> suits = [\"clubs\", \"diamonds\", \"hearts\", \"spades\"]\n>>> suits.index(\"clubs\")\n0\n>>> suits.index(\"spades\")\n3\n>>>\n```", "```\nimport random\nfaces = [\"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\",\n         \"ten\", \"jack\", \"queen\", \"king\", \"ace\"]\nmy_face = random.choice(faces)\nyour_face = random.choice(faces)\nif faces.index(my_face) > faces.index(your_face):\n    print(\"I win!\")\nelif faces.index(my_face) < faces.index(your_face):\n    print(\"You win!\")\n```", "```\nkeep_going = True\n```", "```\nanswer = input(\"Hit [Enter] to keep going, any other keys to exit: \")\nif answer == \"\":\n    keep_going = True\nelse:\n    keep_going = False\n```", "```\nanswer = input(\"Hit [Enter] to keep going, any other keys to exit: \")\nkeep_going = (answer == \"\")\n```", "```\nkeep_going = True\nwhile keep_going:\n    answer = input(\"Hit [Enter] to keep going, any key to exit: \")\n    keep_going = (answer == \"\")\n```", "```\nimport random\nsuits = [\"clubs\", \"diamonds\", \"hearts\", \"spades\"]\nfaces = [\"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\",\n         \"ten\", \"jack\", \"queen\", \"king\", \"ace\"]\nkeep_going = True\nwhile keep_going: my_face = random.choice(faces)\n    my_suit = random.choice(suits)\n    your_face = random.choice(faces)\n    your_suit = random.choice(suits)\n    print(\"I have the\", my_face, \"of\", my_suit)\n    print(\"You have the\", your_face, \"of\", your_suit)\n    if faces.index(my_face) > faces.index(your_face):\n        print(\"I win!\")\n    elif faces.index(my_face) < faces.index(your_face):\n        print(\"You win!\")\n    else:\n        print(\"It's a tie!\")\n    answer = input(\"Hit [Enter] to keep going, any key to exit: \")\n    keep_going = (answer == \"\")\n```", "```\nif dice[0] == dice[4]:\n    print(\"Yahtzee!\")\nelif (dice[0] == dice[3]) or (dice[1] == dice[4]):\n    print(\"Four of a kind!\")\n```", "```\nelif (dice[0] == dice[2]) or (dice[1] == dice[3]) or (dice[2] == dice[4]):\n    print(\"Three of a kind\")\n```", "```\n  import random\n  # Game loop\n  keep_going = True\n  while keep_going:\n      # \"Roll\" five random dice\n➊     dice = [0,0,0,0,0]           # Set up an array for five values dice[0]-dice[4]\n➋     for i in range(5):           # \"Roll\" a random number from 1-6 for all 5 dice\n➌         dice[i] = random.randint(1,6)\n➍     print(\"You rolled:\", dice)   # Print out the dice values\n      # Sort them\n➎     dice.sort()\n      # Check for five of a kind, four of a kind, three of a kind\n      # Yahtzee - all five dice are the same\n      if dice[0] == dice[4]:\n          print(\"Yahtzee!\")\n      # FourOfAKind - first four are the same, or last four are the same\n      elif (dice[0] == dice[3]) or (dice[1] == dice[4]):\n          print(\"Four of a kind!\")\n      # ThreeOfAKind - first three, middle three, or last three are the same\n      elif (dice[0] == dice[2]) or (dice[1] == dice[3]) or (dice[2] == dice[4]):\n          print(\"Three of a kind\")\n      keep_going = (input(\"Hit [Enter] to keep going, any key to exit: \") == \"\")\n```", "```\n   import random\n   import turtle\n   t = turtle.Pen()\n➊ t.speed(0)\n   turtle.bgcolor(\"black\")\n   colors = [\"red\", \"yellow\", \"blue\", \"green\", \"orange\", \"purple\", \"white\", \"gray\"]\n   for n in range(50):\n       # Generate spirals of random sizes/colors at random locations on the screen\n       t.pencolor(random.choice(colors)) # Pick a random color from colors[]\n       size = random.randint(10,40) # Pick a random spiral size from 10 to 40\n       # Generate a random (x,y) location on the screen\n➋     x = random.randrange(0,turtle.window_width()//2)\n➌     y = random.randrange(0,turtle.window_height()//2)\n      # First spiral\n      t.penup()\n➍    t.setpos(x,y)\n      t.pendown()\n      for m in range(size):\n          t.forward(m*2)\n          t.left(91)\n      # Second spiral\n      t.penup()\n➎    t.setpos(-x,y)\n      t.pendown()\n      for m in range(size):\n          t.forward(m*2)\n          t.left(91)\n      # Third spiral\n      t.penup()\n➏    t.setpos(-x,-y)\n      t.pendown()\n      for m in range(size):\n          t.forward(m*2)\n          t.left(91)\n      # Fourth spiral\n      t.penup()\n➐    t.setpos(x,-y)\n      t.pendown()\n      for m in range(size):\n          t.forward(m*2)\n          t.left(91)\n```"]