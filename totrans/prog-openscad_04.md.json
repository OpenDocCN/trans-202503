["```\ncube([5, 10, 20]);\n\n//sphere(5);\n\n/*\ncylinder(h=5, r1=10, r2=10);\ncube([50, 50, 50]);\n*/\n```", "```\ntranslate([10, 30, 0]) cylinder(h=4, r1=4, r2=4);\ntranslate([20, 30, 0]) cylinder(h=4, r1=4, r2=4);\ntranslate([30, 30, 0]) cylinder(h=4, r1=4, r2=4);\ntranslate([40, 30, 0]) cylinder(h=4, r1=4, r2=4);\ntranslate([50, 30, 0]) cylinder(h=4, r1=4, r2=4);\ntranslate([60, 30, 0]) cylinder(h=4, r1=4, r2=4);\ntranslate([70, 30, 0]) cylinder(h=4, r1=4, r2=4);\ntranslate([80, 30, 0]) cylinder(h=4, r1=4, r2=4);\ntranslate([90, 30, 0]) cylinder(h=4, r1=4, r2=4);\ntranslate([100, 30, 0]) cylinder(h=4, r1=4, r2=4);\n```", "```\nfor (`variable` = [`start`: `increment`: `end`]) {\n  // one or more statements to be repeated\n}\n```", "```\nfor (1x_position = [10:10:100]) {\n    translate([x_position, 30, 0]) cylinder(h=4, r1=4, r2=4); \n}\n```", "```\nfor (angle=[0:45:315]) {\n    1rotate([0, 0, angle]) 2translate([10, 0, 0]) 3cylinder(h=5, r1=2, r2=0);\n}\n```", "```\nfor (x_position = [10:10:100]) {\n    translate([x_position, 30, 0]) cylinder(h=4, r1=4, r2=4); \n    echo(\"x:\", x_position); //a good way to check your mental math\n}\n```", "```\nvalue1 = 10;\nvalue2 = 3;\n```", "```\nsum = value1 + value2;\ndifference = value1 - value2;\nproduct = value1 * value2;\nquotient = value1 / value2;\nremainder = value1 % value2;\n```", "```\necho(\"Addition:\", sum);\necho(\"Subtraction:\", difference);\necho(\"Multiplication:\", product);\necho(\"Division:\", quotient);\necho(\"Modulo:\", remainder);\n```", "```\nfor (faces=[3:11:15]) {\n    2 $fn = faces;\n    x_position = faces*10;\n    translate([3x_position, 0, 0]) sphere(r=5);\n    4 echo(\"faces:\", faces, \"x-position:\", x_position);\n}\n```", "```\nfor (1x=2[1:1:10]) {\n    height = 3x*x;\n    x_position = 45*x;\n    translate([x_position, 0, 0]) cylinder(h=height, r1=2, r2=2);\n}\n```", "```\n1 for (y_pos = [10:10:50]) { \n2 for (x_pos = [10:10:100]) {\n     translate([x_pos, y_pos, 0]) cylinder(h=4, r1=4, r2=4); \n  3 echo(\"x:\", x_pos, \"y:\", y_pos);\n   } // x_pos loop\n} // y_pos loop\n```", "```\nnum_rows = 10;\nnum_cols = 6;\n\nbuilding_width = num_cols*5;\nbuilding_height = num_rows*6;\n\n1 difference() {\n2 cube([building_width, 10, building_height]);\n\n  3 for (z = [1:1:num_rows]) {\n  for (x = [0:1:num_cols-1]) {\n  4 x_pos = x*5+1;\n    z_pos = z*5;\n    translate([x_pos, -1, z_pos]) cube([3, 3, 4]);\n  } // x loop\n  } // z loop\n} // difference\n```", "```\nfor (r = [0:15:255]) {\n  for (g = [0:15:255]) {\n    for (b = [0:15:255]) {\n translate([r, g, b]) color([r/255, g/255, b/255]) cube(5);\n    } // b loop\n  } // g loop\n} // r loop\n```"]