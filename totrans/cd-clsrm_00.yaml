- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: K–12 computer science teachers are amazing innovators. They have to be. They
    work in a subject that was historically only taught to students at colleges and
    universities. Many K–12 public schools have only recognized computer science education
    as crucial to student success in the last decade.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: K–12 计算机科学教师是了不起的创新者。他们必须具备创新能力。因为他们教授的学科，历史上只在大学和高等院校开设过。许多 K–12 公立学校直到最近十年才认识到计算机科学教育对学生成功至关重要。
- en: Computer science teachers don’t have decades of established lesson plans and
    teaching exercises to draw from. Only in recent years have they even acquired
    standards to guide them. As a result, computer science teachers have had to rely
    on ad hoc networks of peers and communities in an ongoing conversation to share
    tips and techniques for teaching the subject.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机科学教师并没有几十年积累的既定教学计划和练习可以借鉴。直到最近，他们才获得了用以指导教学的标准。因此，计算机科学教师不得不依赖同行和社区组成的临时网络，通过持续的对话分享教学技巧和方法。
- en: This book seeks to contribute to that conversation with novel perspectives on
    computer science, exercises that integrate well with other subjects, and a programming
    environment with an extremely low bar for entry. The challenge of writing a book
    on teaching computer science standards in a public classroom or after school club
    is that so many different standards are available to choose from. Different states
    in the United States and countries around the world use distinct sets of standards
    and integrate their facets into the curriculum in various ways. Additionally,
    the rapid pace of technological change and the introduction of new innovations
    in computer science mean that today’s cutting-edge classroom exercise might quickly
    become tomorrow’s dated curiosity.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在通过对计算机科学的新颖视角、与其他学科很好融合的练习以及一个极低入门门槛的编程环境，为这场讨论作出贡献。编写一本关于在公立课堂或课后俱乐部教授计算机科学标准的书籍面临的挑战是，市面上有太多不同的标准可供选择。美国的不同州以及全球各国使用的标准各不相同，并以不同的方式将其内容融入课程中。此外，技术变革的快速步伐和计算机科学中新创新的出现意味着，今天的前沿课堂练习可能很快就会变成明天的过时好奇。
- en: Fortunately, computer science has a strong, persistent foundation of general
    principles that are as true today as they were a century ago. Concepts like abstraction,
    decomposition, and problem-solving strategies for highly complex systems are applicable
    to each new technological advance and invention. Helping our students master these
    techniques empowers them to adapt to technological change and rise to future challenges.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，计算机科学有着强大而持久的通用原则基础，这些原则至今依然适用，就像一个世纪前一样。像抽象、分解和处理高度复杂系统的解决问题策略等概念，适用于每一次新的技术进步和发明。帮助我们的学生掌握这些技巧，使他们能够适应技术变革，并迎接未来的挑战。
- en: Who This Book Is For
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书的读者对象
- en: If you’re teaching students about computers, computational thinking, or writing
    code, this book is for you. It provides you with numerous techniques and strategies
    to support you in your teaching. Elementary school teachers will find ideas for
    incorporating computer science facets into their existing lesson plans in ways
    that provide novel insights while complementing existing literacy, science, social
    studies, and mathematics lessons. Secondary school computer science teachers will
    learn about quick and accessible ways to get students writing code, engaging with
    programming exercises, and developing long-term projects. Teachers and school
    administrators will learn strategies for supporting students in computer science,
    building school community around the subject, and proving the value of their computer
    science program.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在教授学生计算机、计算思维或编写代码，本书适合你。本书为你提供了大量的技巧和策略，帮助你进行教学。小学教师将找到将计算机科学元素融入现有课程的创意，既能提供新颖的见解，又能补充现有的阅读、科学、社会研究和数学课程。中学计算机科学教师将学习到快速、便捷的方式来让学生编写代码、参与编程练习并开发长期项目。教师和学校管理者将学习如何支持学生学习计算机科学，如何围绕这一学科建立学校社区，以及如何证明计算机科学项目的价值。
- en: This book is also for enthusiasts who coach coders in many different contexts.
    Technology coaches who are only afforded limited sessions to work with students
    will find techniques to get kids writing code in moments on any computer. Students
    will be able to take that knowledge home or to a public library computer to continue
    learning independently. Volunteers hosting after-school code clubs or summer camps
    will find games, engaging exercises, and strategies for student projects that
    will gift young minds with a sense of accomplishment. Parents looking for accessible
    ways to improve their kids’ computer literacy will also learn about computers
    and programming alongside their children.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书还适用于在各种不同背景下指导编码者的爱好者。技术教练如果只能有限时间与学生合作，将会找到让孩子们在任何计算机上短时间内编写代码的技巧。学生可以将这些知识带回家或到公共图书馆的计算机上，继续自主学习。志愿者主持的课后编程俱乐部或夏令营将找到游戏、互动练习和学生项目策略，帮助年轻人获得成就感。希望提高孩子们计算机素养的家长，也将与孩子们一同学习计算机和编程知识。
- en: A Generalized Approach to Computer Science
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一种通用的计算机科学方法
- en: In recent years, organizations like the Computer Science Teachers Association
    (CSTA) have developed generalized computer science standards to guide teaching.
    Many states have adopted these standards into public classrooms. Some have even
    integrated the standards into existing subjects like math and science. We’re seeing
    computer science rapidly rise in prominence in our public education institutions.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，像计算机科学教师协会（CSTA）这样的组织制定了通用的计算机科学标准来指导教学。许多州已经将这些标准纳入公共课堂教学中。有些州甚至将标准整合进数学和科学等现有学科中。我们看到计算机科学在我们的公共教育机构中迅速崭露头角。
- en: 'Although computer science is increasingly being taught in K–12 education, how
    ­standards are applied can still differ greatly from school to school. For example,
    many schools might teach the same topics and use the same tools, but they might
    introduce them at very different grade levels. One school might introduce Scratch
    programming at the elementary level, and another might introduce it to high schoolers.
    To account for this disparity, techniques and topics covered in this book are
    generalized, so many of them can apply to multiple grade levels. We’ll also learn
    how to use board games to teach computational thinking principles: this is a technique
    students can benefit from whether they’re a child in kindergarten or a senior
    in high school.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管计算机科学越来越多地出现在K-12教育中，但如何应用标准仍然因学校而异。例如，许多学校可能教授相同的主题并使用相同的工具，但它们可能在不同的年级引入这些内容。一所学校可能在小学阶段引入Scratch编程，而另一所学校可能在高中阶段才引入。为了弥补这种差距，本书中涵盖的技术和主题进行了通用化，因此其中许多内容可以应用于多个年级水平。我们还将学习如何使用棋盘游戏来教授计算思维原则：这是一种学生可以受益的技巧，无论他们是幼儿园的孩子还是高中的高年级生。
- en: Resources can vary dramatically from school to school. One school might provide
    a laptop to each student in a classroom, and another might only provide a shared
    computer lab to the entire student body. To address this discrepancy, the programming
    environments and exercises this book provides are as inexpensive as possible.
    In most cases, they’re free so you can optimize your program’s return on investment.
    They’re also accessible, so students can easily get up and running and continue
    programming on almost any computer.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 资源在不同学校之间可能存在很大差异。一所学校可能为每个学生提供一台笔记本电脑，而另一所学校则可能只为全体学生提供一个共享的计算机实验室。为了应对这种差异，本书提供的编程环境和练习尽可能地廉价。在大多数情况下，它们是免费的，这样你就可以优化程序的投资回报率。它们还具有可访问性，因此学生可以轻松地开始并在几乎任何计算机上继续编程。
- en: Plenty of programming environments currently compete for mindshare in the education
    market. Some, like Scratch and Construct, are appealing for the way they provide
    easy-to-use interfaces that allow students to drag and drop control logic onto
    their projects to create animations and games. Unfortunately, to share their creations
    with others, students need friends and family to install software on their computers
    to run the games and animations. Some of these programs, like Scratch, are free;
    others can cost hundreds of dollars. This book’s examples and exercises use the
    JavaScript programming language. JavaScript is the most widely used language in
    web development; almost every website online uses it. It’s also one of the few
    programming languages students can start coding with almost instantly, using any
    computer with a web browser. When a student publishes a program written in JavaScript
    online, anyone in the world can run it and learn from it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，许多编程环境在教育市场上争夺注意力。其中一些，如 Scratch 和 Construct，以其提供易于使用的界面而受到欢迎，这些界面允许学生将控制逻辑拖放到项目中，从而创建动画和游戏。不幸的是，为了与他人分享他们的创作，学生需要朋友和家人将软件安装到他们的计算机上，以便运行这些游戏和动画。这些程序中的一些，比如
    Scratch，是免费的；而另一些则可能需要花费数百美元。本书的示例和练习使用了 JavaScript 编程语言。JavaScript 是 web 开发中最广泛使用的语言；几乎每个在线网站都使用它。它也是少数几个学生几乎可以立即开始编程的语言之一，只要有配备浏览器的计算机。当学生在网上发布用
    JavaScript 编写的程序时，世界上任何人都可以运行并从中学习。
- en: This book also offers ways to increase your computer science program’s visibility
    to make it more prominent and prove its value to your community. Schools have
    integrated computer science into their curriculums to disparate degrees. Many
    schools still offer computer science only as an advanced placement course, reserving
    the subject for only college-bound students. For this reason, teaching the subject
    often means having to advocate for it as well. Through showcasing student projects,
    using programs to bring students into the decision-making process for your organization’s
    IT policies, providing professional services to students, and bringing student
    families into activities, this book provides numerous ways you can increase your
    computer science program’s profile and highlight its value in your school community.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本书还提供了增加计算机科学项目可见性的方法，使其更为突出，并证明其在社区中的价值。各学校将计算机科学以不同程度融入课程中。许多学校仍然仅将计算机科学作为一门高级课程，仅为大学预科学生开设。因此，教授这门学科往往意味着必须为其进行倡导。通过展示学生项目、利用程序将学生带入决策过程、为学生提供专业服务以及将学生家庭纳入活动，本书提供了多种方法，帮助你提高计算机科学项目的知名度，并突出其在学校社区中的价值。
- en: How This Book Is Organized
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书的组织结构
- en: 'This book progresses from a general overview of computer science standards
    to the benefits of learning computer science. It provides an outline of the computer
    as a system and then advances into more detailed specifics of programming. Then
    it presents strategies for supporting students as they take on the challenges
    of learning the subject. A summary of each chapter follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本书从计算机科学标准的概述开始，逐步探讨学习计算机科学的好处。它提供了计算机作为一个系统的框架，并进一步深入编程的具体细节。接着，本书提出了支持学生应对学习挑战的策略。以下是每章的总结：
- en: '**Chapter 1: Making Sense of the Computer Science Standards** Covers the current
    state of computer science standards and their different features, and focuses
    on standards that various organizations have produced. You’ll explore what publications
    are best for specific situations and examine a few generalized categories for
    easily keeping track of the standards. The chapter also touches on the advocacy
    dimension for implementing a computer science program and the importance of stakeholder
    buy-in for success.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**第一章：理解计算机科学标准** 介绍了计算机科学标准的现状及其不同特点，并重点关注了各个组织发布的标准。你将探索哪些出版物最适合特定情况，并查看一些通用类别，以便轻松跟踪这些标准。本章还涉及了实施计算机科学项目的倡导维度，以及利益相关者支持对于成功的重要性。'
- en: '**Chapter 2: The Many Benefits of Computer Science Education** Explainsan important
    aspect of advocating for your school’s computer science program by communicating
    the many benefits that come from learning it. You’ll learn about the benefits
    students can experience in their cognitive, academic, and professional lives from
    learning computer science.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 3: Computer Science History** Takes a deep dive into the computer
    as a system, from the interface, through high-level and low-level code, to the
    electronics, and many innovations that go into our modern computing devices. You’ll
    descend through each layer of innovation, which is tied to the time period in
    which it was developed and the many people who worked with it. Teaching the modern
    computer as layers of innovation over decades also teaches the legacy of diverse
    individuals iteratively making computers more accessible over time.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 4: Computational Thinking Gamified and Unplugged** Provides information
    on how to teach many computer programming concepts without using computers. Through
    in-class activities and board games, you’ll explore how your students are already
    using computational thinking in their daily lives.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 5: Diving into Web Development** Introduces a programming environment
    where any student with access to a computer can start executing code within moments.
    These tools, available in any web browser, enable students to learn from and experiment
    with the client code running any website.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 6: Intentional Development Environments** Covers several development
    environments that make coding web applications easier for your students. These
    environments allow them to develop their own applications and let them share their
    creations with friends and family.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 7: Scaffolded Code Exercises** Reviews code exercises that encompass
    multiple computer science standards in a single, extended activity. The activity
    starts as a simple scaffolding and iteratively adds layers of complexity to build
    student understanding.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 8: Self-Directed Project-Based Learning** Explains the software development
    process that has your students work on long-term projects of a larger scope. Students
    present a final product at an event that promotes their personal achievement and
    your computer science program.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 9: Coaching Your Coders** Describes strategies, techniques, and software
    you can use to support your students. Included are generalized troubleshooting
    approaches to overcome the common challenges of crafting code as well as the personal
    challenges programmers often experience and how your students can cope with them.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '**Chapter 10: Networking a Coding Community** Focuses on community building
    exercises and programs you can enact at your school. These programs will further
    foster student academic success while building social bonds between educators,
    students, and their families in your school community.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Computers have great potential for promoting equitable access to high-quality
    education in our global society. Teaching students to think computationally and
    making them fluent in information technologies empowers them for success in the
    21st century. With this book, you’ll find ways to prove the effectiveness of teaching
    computer science and advocate for it to take equal place alongside science, history,
    English, math, and foreign languages in our schools.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机在促进全球社会中高质量教育的公平获取方面具有巨大潜力。教学生计算思维，并使他们熟练掌握信息技术，能够为他们在21世纪的成功提供动力。通过本书，你将找到证明计算机科学教学有效性的方法，并倡导它在我们的学校中与科学、历史、英语、数学和外语并列，成为平等的重要学科。
