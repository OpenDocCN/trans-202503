["```\n// Increment an integer.\n\n#include <stdio.h>\n\nint main(void)\n{\n    int x;\n\n    printf(\"Enter an integer: \");\n    scanf(\"%i\", &x);\n    x++;\n    printf(\"Result: %i\\n\", x); return 0;\n}\n```", "```\n        .arch armv8-a\n        .file   \"inc_int.c\"\n        .text\n      ➊ .section        .rodata\n        .align  3\n.LC0:\n        .string \"Enter an integer: \"\n        .align  3\n.LC1:\n      ➋ .string \"%i\"\n        .align  3\n.LC2:\n        .string \"Result: %i\\n\"\n        .text\n        .align  2\n        .global main\n        .type   main, %function\nmain:\n     ➌ stp     x29, x30, [sp, -32]!  /// Create stack frame\n        mov     x29, sp               /// Set our frame pointer\n        adrp    x0, .LC0              /// Page address\n        add     x0, x0, :lo12:.LC0    /// Offset in page\n        bl      printf\n     ➍ add     x0, sp, 28            /// Address of x\n        mov     x1, x0\n     ➎ adrp    x0, .LC1\n        add     x0, x0, :lo12:.LC1\n        bl      __isoc99_scanf\n     ➏ ldr     w0, [sp, 28]          /// Load int\n        add     w0, w0, 1\n     ❼ str     w0, [sp, 28]          /// x++;\n        ldr     w0, [sp, 28]\n        mov     w1, w0\n        adrp    x0, .LC2\n        add     x0, x0, :lo12:.LC2 bl      printf\n        mov     w0, 0\n     ❽ ldp     x29, x30, [sp], 32\n        ret\n        .size   main, .-main\n        .ident  \"GCC: (Debian 10.2.1-6) 10.2.1 20210110\"\n        .section        .note.GNU-stack,\"\",@progbits\n```", "```\nstp    x29, x30, [sp, -32]!\n```", "```\nldp    x29, x30, [sp], 32\n```", "```\nldr    w0, [sp, 28]\n```", "```\nx2: 0xaaaaaaaaaaaaaaaa\nx3: 0x89abba89fedccdef\n```", "```\nadd    w0, w3, w2, uxtb\nadd    w1, w3, w2, sxtb\n```", "```\nx0: 0xfedcce99\nx3: 0xfedccd99\n```", "```\nscanf(\"%i\", &x);\n```", "```\n.string \"text\"\n```", "```\nadrp    x0, .LC1\nadd     x0, x0, :lo12:.LC1\n```", "```\n// Increment an integer.\n        .arch armv8-a\n// Stack frame\n     ➊ .equ    x, 28 ➋ .equ    FRAME, 32\n// Constant data\n     ➌ .section .rodata\nprompt:\n        .string \"Enter an integer: \"\ninput_format:\n        .string \"%i\"\nresult:\n        .string \"Result: %i\\n\"\n// Code\n        .text\n        .align  2\n        .global main\n        .type   main, %function\nmain:\n     ➍ stp     fp, lr, [sp, FRAME]!  // Create stack frame\n        mov     fp, sp                // Set our frame pointer\n\n        adr     x0, prompt            // Prompt user\n        bl      printf\n        add     x1, sp, x             // Address for input\n        adr     x0, input_format      // scanf format string\n     ➎ bl      scanf\n\n        ldr     w0, [sp, x]           // Get x\n        add     w1, w0, 1             // Add 1\n        str     w1, [sp, x]           // x++\n\n        adr     x0, result            // printf format string\n        bl      printf                // Result is in w1\n\n        mov     w0, wzr\n     ➏ ldp     fp, lr, [sp], FRAME   // Delete stack frame\n        ret\n```", "```\n.equ symbol, expression\n```", "```\n// Add and subtract two integers.\n\nvoid sum_diff(int x, int y, int *sum, int *diff)\n{\n    *sum = x + y;\n    *diff = x - y;\n}\n```"]