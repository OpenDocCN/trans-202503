["```\n// bottom.scad v1\n1 module bottom_section(width, height) {\n    radius = 0.5 * width;\n    cylinder(h=height, r=radius);\n}\n```", "```\n// middle.scad v1\n1 module middle_section(width, height) {\n    radius = 0.5 * width;\n    cylinder(h=height, r=radius);\n}\n```", "```\n// top.scad v1\n1 module top_section(width, height) {\n    radius = 0.5 * width;\n  2 cylinder(h=height, r=radius);\n}\n```", "```\n// tower.scad v1\n1 use <bottom.scad>\nuse <middle.scad>\nuse <top.scad>\n\n2 tower_height = 100;\ntower_width = 0.3 * tower_height;\nbottom_height = 0.2 * tower_height;\nmiddle_height = 0.65 * tower_height;\ntop_height = 0.15 * tower_height;\n\nbase_width = 2 * tower_width;\nbase_height = 0.1 * tower_width;\n\nlean_angle = 4;\n\n3 $fn = 20;\n\n4 rotate([lean_angle, 0, 0]) {\n    color(\"grey\") {\n        bottom_section(tower_width, bottom_height);\n    }\n    color(\"lightgrey\") {\n        translate([0, 0, bottom_height])\n            middle_section(tower_width, middle_height);\n    }\n    color(\"white\") {\n        translate([0, 0, bottom_height + middle_height])\n          5 top_section(tower_width, top_height);\n    }\n}\n\ncolor(\"lightgreen\") {\n 6 cube([base_width, base_width, base_height], center=true);\n}\n```", "```\n// middle.scad v2\nlevel(50, 25);\n\nmodule middle_section(width, height) {\n   level_height = height / 6;\n   level_radius = 0.5 * width;\n\n 1 for (h=[0:1:5]) {\n     floor_offset = h * level_height;\n\n     translate([0, 0, floor_offset]) \n       level(level_radius, level_height);\n   }\n} \n\n2 module level(level_radius, level_height) {\n    lip_height = 0.1 * level_height;\n    inner_radius = 0.7 * level_radius;\n    overhang_height = 0.3 * level_height;\n  3 overhang_radius = 0.95 * level_radius;\n\n    // lip\n    translate([0, 0, level_height - lip_height])\n      cylinder(h=lip_height, r=level_radius);\n\n    // overhang\n    translate([0, 0, level_height - lip_height - overhang_height]) \n       cylinder(h=overhang_height, r=overhang_radius); \n\n    // inner structure\n    cylinder(h=level_height, r=inner_radius);\n}\n```", "```\n// column.scad v3\n1 module column(col_width, col_height) { \n    col_radius = 0.5 * col_width;\n  2 orn_height = 0.05 * col_height; \n\n    translate([-col_radius, -col_radius, col_height - orn_height]) \n        cube([col_width, col_width, orn_height]);\n    cylinder(h=col_height, r=col_radius);\n    translate([-col_radius, -col_radius, 0]) \n        cube([col_width, col_width, orn_height]);\n} \n```", "```\n// middle.scad v3\n1 use <column.scad>\n...\nmodule level(level_radius, level_height) {\n  2 lip_height = 0.1 * level_height;\n    inner_radius = 0.7 * level_radius;\n    overhang_height = 0.3 * level_height;\n    overhang_radius = 0.95 * level_radius;\n\n    num_cols = 24;\n    angle_size = 360 / num_cols;\n\n    col_height = 0.65 * level_height;\n    col_width = 0.2 * col_height;  \n\n    arch_depth = 2 * (level_radius - inner_radius); \n\n    // lip\n    translate([0, 0, level_height - lip_height])\n        cylinder(h=lip_height, r=level_radius);\n\n    translate([0, 0, col_height]) {\n        difference() {\n            // overhang\n            cylinder(h=overhang_height, r=overhang_radius); \n\n            // arches\n            3 for (i=[0:1:num_cols-1]) {\n                angle = i * angle_size + angle_size/2;\n                rotate([0, 0, angle])\n                    translate([inner_radius, 0, 0]) \n                        rotate([0, 90, 0]) \n                            cylinder(h=arch_depth, r=col_width, center=true);\n            }\n        }\n    }\n\n // inner structure\n    cylinder(h=level_height, r=inner_radius);\n\n    // columns\n    4 for (i=[0:1:num_cols-1]) {\n        angle = i * angle_size;\n        rotate([0, 0, angle])\n            translate([overhang_radius - 0.5 * col_width, 0, 0]) \n                column(col_width, col_height);\n    }\n}\n```", "```\n// top.scad v4\n\nmodule top_section(width, height) {\n  1 top_radius = 0.4 * width;\n    room_radius = 0.75 * top_radius;\n\n    num_doors= 5;\n    door_angle= 360 / num_doors;\n\n    overhang_height = 0.1 * height;\n    overhang_width = 1.1 * top_radius;\n\n    door_height = 0.6 * height;\n    door_width = 0.35 * height;\n\n    window_height = 0.25 * height;\n    window_width = 0.15 * height; \n\n // overhang\n    translate([0, 0, height - overhang_height])\n        cylinder(h=overhang_height, r=overhang_width);  \n\n    //inner structure\n    difference() {\n        cylinder(h=height, r=top_radius);  \n\n        translate([0, 0, 1]) {\n            cylinder(h=height-2, r=room_radius);\n\n            2 for (i=[0:1:num_doors-1]) {\n                angle = i * door_angle;\n                rotate([0, 0, angle])\n                    translate([top_radius-2, 0, 0.25*height]) \n                        // doors\n                        archway(door_height, door_width, room_radius);\n                rotate([0, 0, angle+0.5*door_angle])\n                    translate([top_radius - 2, 0, 0.6*height]) \n                        // windows\n                        archway(window_height, window_width, room_radius);\n            }\n        }\n    }\n\n    //fencing\n    translate([0, 0, height]) \n        fence(15, 3, top_radius, 1);\n  3 fence(20, 3, 0.5*width, 1); \n}\n\n4 module fence(num_posts, fence_height, fence_radius, post_width) { \n    post_radius = 0.5 * post_width;\n    angle_size = 360/num_posts;\n    ring_height = 0.5;\n    post_height = fence_height - ring_height;\n\n    translate([0, 0, post_height])\n        ring(fence_radius - post_width, fence_radius, ring_height); \n    translate([0, 0, post_height / 2])\n        ring(fence_radius - post_width, fence_radius, ring_height);\n\n    for (i=[0:1:num_posts-1]) {\n        angle = i * angle_size;\n        rotate([0, 0, angle])\n            translate([fence_radius - post_radius, 0, 0])\n                cylinder(h=post_height, r=post_radius);\n    }\n}\n\n5 module ring(inner_radius, outer_radius, height) { \n    difference() {\n        cylinder(h=height, r=outer_radius);\n        translate([0, 0, 1])\n cylinder(h=height+2, r=inner_radius, center=true);\n    }\n}\n\n6 module archway(height, width, depth) { \n    radius = 0.5 * width;\n\n    rotate([90, 0, -90]) {\n        translate([0, (height - radius) / 2, -depth / 2])\n            cylinder(h=depth, r=radius);\n        cube([width, height - radius, depth], center=true);\n    }\n}\n```", "```\n// bottom.scad v5\n\n1 use <column.scad> \n\nmodule bottom_section(width, height) {\n    radius = 0.5 * width;\n    inner_radius = 0.9 * radius;\n    lip_radius = 1.05 * radius;\n    lip_height = 0.05 * height;\n    overhang_height = 0.2 * height;\n\n    num_cols = 14;\n    angle_size = 360 / num_cols;\n    col_height = height - overhang_height;\n    col_width = 0.1 * col_height;\n\n    // lip\n    translate([0, 0, height - lip_height])\n        cylinder(h=lip_height, r=lip_radius);\n\n    // inner structure\n    cylinder(h=height, r=inner_radius);\n\n    // columns\n  2 for (i=[0:1:num_cols-1]) {\n        angle = i * angle_size;\n        rotate([0, 0, angle])\n            translate([radius - 0.5*col_width, 0, 0])\n                column(col_width, col_height);\n    }\n\n    // arches\n    translate([0, 0, col_height]) \n        difference( ) {\n          // overhang\n          cylinder(h=overhang_height, r=radius);        \n\n          // arches  \n          3 for (i=[0:1:num_cols-1]) {\n            angle = i * angle_size + angle_size/2;\n            rotate([0, 0, angle]) \n                translate([inner_radius, 0, 0])\n                    rotate([0, 90, 0])\n cylinder(h=radius-inner_radius, r=col_width);\n        }\n    }\n}\n```"]