["```\n/* \n\n  This is a C-style comment.\n\n  It can span multiple lines.\n\n*/\n\n// This is a single-line C comment, originally introduced in C++.\n```", "```\n# This is a comment in Python.\n```", "```\n// Declare a variable and assign it a value in C.\n\nint points = 27;\n```", "```\n// Two variables in C\n\nint points = 27;\n\nint year = 2020;\n```", "```\n// Setting a new points value in C\n\npoints = 31;\n```", "```\n# Python allows new variables without specifying a type.\n\nage = 22\n```", "```\n# Assiging a variable a value of a different type is valid in Python.\n\nage = 22\n\nage = 'twenty-two'\n```", "```\n// Addition is easy in C.\n\ncost = price + tax;\n```", "```\n# Addition is easy in Python too.\n\ncost = price + tax\n```", "```\n// Declaring a floating-point variable in C\n\ndouble price = 1.99;\n```", "```\n# Declaring integer and floating-point varibles in Python\n\nyear  = 2020 # year is an int\n\nprice = 1.99 # price is a float\n```", "```\n// Dividing integers in C\n\nint x = 5;\n\nint y = 2;\n\nint z = x / y;\n```", "```\n// Dividing integers in C, result stored in a float\n\nint x = 5;\n\nint y = 2;\n\nfloat z = x / y;\n```", "```\n# Dividing integers in Python\n\n# z will be 2.5 and its inferred type is float\n\nx = 5\n\ny = 2\n\nz = x / y\n```", "```\n// In C, we can add one to a variable the long way,\n\nx = x + 1;\n\n// or we can use this shortcut to increment x.\n\nx++;\n\n// On the other hand, this will decrement x.\n\nx--;\n```", "```\n# In Python, we can add 3 to a variable like this...\n\ncats = cats + 3\n\n# Or we can do the same thing with this shortcut...\n\ncats += 3\n```", "```\n# Python does bitwise logic.\n\nx = 5\n\ny = 3\n\na = x & y\n\nb = x | y\n```", "```\nx = 11\n\ny = 5\n\na = x & y\n\nb = x | y\n\nc = x ^ y\n```", "```\n  # Age check in Python\n\n❶ if age < 18:\n\n    ❷ print('You are a youngster!')\n\n❸ else:\n\n    ❹ print('You are an adult.')\n```", "```\n  // Age check in C\n\n  if (age < 18)\n\n❶ {\n\n    printf(\"You are a youngster!\");\n\n❷ }\n\n  else\n\n  {\n\n    printf(\"You are an adult.\");\n\n  }\n```", "```\n# A better age check in Python\n\nif age < 13:\n\n    print('You are a youngster!')\n\nelif age < 20:\n\n    print('You are a teenager.')\n\nelse:\n\n    print('You are older than a teen.')\n```", "```\n// A better age check in C\n\nif (age < 13)\n\n  printf(\"You are a youngster!\");\n\nelse if (age < 20)\n\n  printf(\"You are a teenager!\");\n\nelse\n\n  printf(\"You are older than a teen.\");\n```", "```\n# Count to 20 in Python.\n\nn = 1\n\nwhile n <= 20:\n\n    print(n)\n\n    n = n + 1\n```", "```\n// Count to 20 in C.\n\nint n = 1;\n\nwhile(n <= 20)\n\n{\n\n  printf(\"%d\\n\", n);\n\n  n++;\n\n}\n```", "```\n  // C uses a for loop to iterate over a numeric range.\n\n  // This will print 1 through 10.\n\n  for(❶int x = 1; ❷x <= 10; ❸x++)\n\n  {\n\n❹ printf(\"%d\\n\", x);\n\n  }\n```", "```\n# Python uses a for loop to iterate over a collection.\n\n# This will print each animal name in animal_list.\n\nanimal_list = ['cat', 'dog', 'mouse']\n\nfor animal in animal_list:\n\n    print(animal)\n```", "```\n  // C function to calculate the area of a circle\n\n❶ double ❷areaOfCircle(❸double radius)\n\n  {\n\n    double area = 3.14 * radius * radius;\n\n  ❹ return area;\n\n  }\n```", "```\n# Python function to calculate the area of a circle\n\ndef area_of_circle(radius)\n\n    area = 3.14 * radius * radius\n\n    return area\n```", "```\n// Calling a function twice in C, each time with a different input\n\ndouble area1 = areaOfCircle(2.0);\n\ndouble area2 = areaOfCircle(38.6);\n```", "```\n# Calling a function twice in Python\n\narea1 = area_of_circle(2.0)\n\narea2 = area_of_circle(38.6)\n```", "```\nmyAccount.deposit(25)\n```", "```\n// Calculate the factorial of n.\n\nint factorial(int n)\n\n{\n\n  int result = n;\n\n  while(--n > 0)\n\n  {\n\n    result = result * n;\n\n  }\n\n  return result;\n\n}\n```", "```\nAddress   Assembly\n\n0001051c  sub     r3, r0, #1\n\n00010520  cmp     r3, #0\n\n00010524  bxle    lr\n\n00010528  mul     r0, r3, r0\n\n0001052c  subs    r3, r3, #1\n\n00010530  bne     00010528\n\n00010534  bx      lr\n```", "```\nAddress   Assembly\n\n00406c35  mov     ecx,dword ptr [esp+4]\n\n00406c39  mov     eax,ecx\n\n00406c3b  jmp     00406c40\n\n00406c3d  imul    eax,ecx\n\n00406c40  dec     ecx\n\n00406c41  test    ecx,ecx\n\n00406c43  jg      00406c3d\n\n00406c45  ret\n```", "```\n#include <stdio.h>❶\n\n#include <signal.h>\n\nint main()❷\n\n{\n\n  int points = 27;❸\n\n  int year = 2020;❹\n\n  printf(\"points is %d and is stored at 0x%08x\\n\", points, &points);❺\n\n  printf(\"year is %d and is stored at 0x%08x\\n\", year, &year);\n\n  raise(SIGINT);❻\n\n  return 0;\n\n}\n```", "```\n$ gcc -o vars vars.c\n```", "```\n$ ./vars\n```", "```\n$ gdb vars\n```", "```\n(gdb) run\n```", "```\nStarting program: /home/pi/vars\n\npoints is 27 and is stored at 0x7efff1d4\n\nyear is 2020 and is stored at 0x7efff1d0\n```", "```\n(gdb) x/3xw 0x7efff1d0\n\n0x7efff1d0:     0x000007e4      0x0000001b      0x00000000\n```", "```\n(gdb) x/3dw 0x7efff1d0\n\n0x7efff1d0:     2020    27      0\n```", "```\n(gdb) x/12xb 0x7efff1d0\n\n0x7efff1d0:     0xe4    0x07    0x00    0x00    0x1b    0x00    0x00    0x00\n\n0x7efff1d8:     0x00    0x00    0x00    0x00\n```", "```\nage = 22\n\nprint('What is the type?')\n\nprint(type(age))\n\nage = 'twenty-two'\n\nprint('Now what is the type?')\n\nprint(type(age))\n```", "```\n$ python3 vartype.py\n```", "```\nWhat is the type?\n\n<class 'int'>\n\nNow what is the type?\n\n<class 'str'>\n```", "```\n$ python --version\n```", "```\n$ python3 --version\n```", "```\n$ gdb vars\n```", "```\n(gdb) run\n```", "```\n(gdb) info proc mappings\n```", "```\n    0x7efdf000 0x7f000000   0x21000       0x0 [stack]\n```", "```\n#include <stdlib.h>\n```", "```\nvoid * data = malloc(512);\n\nprintf(\"data is 0x%08x and is stored at 0x%08x\\n\", data, &data);\n```", "```\n$ gcc -o vars vars.c\n```", "```\n$ gdb vars\n\n(gdb) run\n```", "```\ndata is 0x00022410 and is stored at 0x7efff1ac\n```", "```\n(gdb) info proc mappings\n\n...\n\n           0x22000    0x43000    0x21000        0x0 [heap]\n\n...\n\n        0x7efdf000 0x7f000000    0x21000        0x0 [stack]\n```", "```\nfrom random import randint❶\n\nsecret = randint(1, 10)❷\n\nguess = 0❸\n\ncount = 0❹\n\nprint('Guess the secret number between 1 and 10')\n\nwhile guess != secret:❺\n\n    guess = int(input())❻\n\n    count += 1\n\n    if guess == secret:❼\n\n        print('You got it! Nice job.')\n\n    elif guess < secret:\n\n        print('Too low. Try again.')\n\n    else:\n\n        print('Too high. Try again.')\n\nprint('You guessed {0} times.'.format(count))❽\n```", "```\n$ python3 guess.py\n```", "```\n# Define a bank account class in Python.\n\nclass BankAccount:❶\n\n    def __init__(self, balance, name):❷\n\n        self.balance = balance❸\n\n        self.name = name❹\n\n    def withdraw(self, amount):❺\n\n        self.balance = self.balance - amount\n\n    def deposit(self, amount):❻\n\n        self.balance = self.balance + amount\n\n# Create a bank account object based on the class.\n\nsmithAccount = BankAccount(10.0, 'Harriet Smith')❼\n\n# Deposit some additional money to the account.\n\nsmithAccount.deposit(5.25)❽\n\n# Print the account balance.\n\nprint(smithAccount.balance)❾\n```", "```\n$ python3 bank.py\n```", "```\n#include <stdio.h>\n\n// Calculate the factorial of n.\n\nint factorial(int n)❶\n\n{\n\n  int result = n;\n\n  while(--n > 0)\n\n  {\n\n    result = result * n;\n\n  }\n\n  return result;\n\n}\n\nint main()❷\n\n{\n\n  int answer = factorial(4);❸\n\n  printf(\"%d\\n\", answer);❹\n\n}\n```", "```\n$ gcc -O -o fac2 fac2.c\n```", "```\n$ ./fac2\n```", "```\n$ hexdump -C fac2\n\n$ objdump -s fac2\n\n$ objdump -d fac2\n\n$ gdb fac2\n```", "```\n00010408 <factorial>:\n\n    10408:       e2403001        sub     r3, r0, #1❶\n\n    1040c:       e3530000        cmp     r3, #0❷\n\n    10410:       d12fff1e        bxle    lr❸\n\n    10414:       e0000093        mul     r0, r3, r0❹\n\n    10418:       e2533001        subs    r3, r3, #1❺\n\n    1041c:       1afffffc        bne     10414 <factorial+0xc>❻\n\n    10420:       e12fff1e        bx      lr❼\n```"]