- en: A
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OpenSCAD Language Reference
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/book_art/chapterart.png)'
  prefs: []
  type: TYPE_IMG
- en: This language reference provides short descriptions of most OpenSCAD features,
    serving as a quick reminder of how to use functionality described in this book
    or a way of discovering new OpenSCAD features. Consult the official OpenSCAD reference
    at [https://openscad.org/documentation](https://openscad.org/documentation) for
    the full manual.
  prefs: []
  type: TYPE_NORMAL
- en: Syntax
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a 2D or 3D shape with a collection of parameters. Terminate the command
    with a semicolon (`;`):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a shape that has been transformed by a series of operations. Terminate
    the statement with a semicolon (`;`):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a variable to name and refer to an important value; values are assigned
    once and cannot change:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a user-defined shape called `name` with zero or more parameters. User-defined
    shapes work the same way as built-in shapes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a user-defined mathematical operation called `name` with zero or more
    parameters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Import and immediately execute the OpenSCAD code in *filename.scad*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Import and make usable (but don’t immediately execute) the OpenSCAD functions
    and modules in *filename.scad*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Operators
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Operators are listed in decreasing order of precedence. When multiple operators
    from the same level of precedence occur in an expression, the operators are evaluated
    in order of occurrence (from left to right):'
  prefs: []
  type: TYPE_NORMAL
- en: '`^`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`*`, `/`, `%`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`+`, `-`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`<`, `>`, `<=`, `>=`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`==`, `!=`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`&&`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`||`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 2D Shapes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Draw a circle of the defined radius or diameter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw a square with length = *size* and width = *size* (equal sides); optionally
    center the square at (0,0):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw a rectangle with width along the x-axis and length/depth along the y-axis
    defined by a vector; optionally center the square at (0,0):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw a polygon that connects all of the points defined by the vector of [x,
    y] points:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw a polygon that connects all of the points defined by the vector of [x,
    y] points; optionally define a collection of paths for polygons with holes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw words defined by the *text* string; optionally specify the size, font,
    horizontal alignment, vertical alignment, letter spacing, direction, language,
    and script of the text:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Import a 2D SVG or DXF file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 3D Shapes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Draw a sphere centered at (0, 0, 0) with the specified radius or diameter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw a cube with length = *size*, width = *size*, and height = *size* (equal
    sides); optionally center the cube at (0,0,0):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw a cuboid with width along the x-axis, length/depth along the y-axis, and
    height along the z-axis defined by a vector; optionally center the cube at (0,0,0):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw a cylinder with the specified height and radius or diameter; optionally
    center the cylinder at (0,0,0):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw a cone with the specified height and radii or diameters; optionally center
    the cone at (0,0,0):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw a 3D solid defined by vectors of points and faces; optionally use convexity
    to improve the preview of complex concave shapes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Import an STL, OFF, 3MF, or AMF file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw a 3D height map of the data file; optionally center the shape at (0,0)
    and use convexity to improve the preview of complex concave shapes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Boolean Operations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Group multiple shapes together into one shape:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Subtract one or more shapes from an initial shape:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw the overlapping region of multiple shapes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Shape Transformations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Translate a shape according to a 2D or 3D vector:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Rotate a shape around each axis according to the angles defined by a vector:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Rotate a shape a specific angle around the z-axis:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Scale a shape according to the scale factors defined by a 2D or 3D vector:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Resize a shape according to the dimensions defined by a 2D or 3D vector; optionally
    use `auto` to preserve the object aspect ratio in the unspecified dimensions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Reflect a shape according to the perpendicular vector of a symmetry plane passing
    through the origin:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Multiply the geometry of all child elements with the given 4 × 4 affine transformation
    matrix:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change a shape’s color according to a predefined color name or hexadecimal
    color value; optionally make the color (semi) transparent:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Change a shape’s color according to an RGB or RGBA vector. Each value in the
    vector ranges from 0 to 1 and represents the proportion of red, green, blue, and
    alpha present in the color.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Move 2D outlines outward or inward by a given radius (for rounded corners)
    or delta + chamfer (for sharp or cut-off corners):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a 2D shape by projecting a 3D shape onto the xy-plane; when `cut = true`,
    create a 2D slice of the intersection of a 3D object and the xy-plane; optionally,
    when `cut = true`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a convex hull around one or more shapes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw the Minkowski sum of multiple shapes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Extrude a 2D shape into 3D with the given height along the z-axis; optionally
    center the shape at (0,0) or specify the convexity, twist, slices, and scale of
    the extrusion:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Extrude a 2D shape around the z-axis to form a solid that has rotational symmetry:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Loops, Decisions, and List Comprehensions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Repeat a collection of shapes according to the start, step, and end (inclusive)
    values of a control variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Draw the intersection of all the shapes generated by the `for` loop:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute commands only if the Boolean test is true:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute a collection of commands if the Boolean test is true; otherwise, execute
    alternate commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Generate a list of values according to a `for` loop:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Generate a list of values according to a `for` loop, but only if the value
    causes a certain condition to be true:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Generate a list of lists according to a `for` loop:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Other Shape Operations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Force the generation of a mesh even in preview mode:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Inside a user-defined module, select the children specified by an index, vector,
    or range:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Modifier Characters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`*` Disables the drawing of a shape.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`!` Shows only a particular shape.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`#` Highlights a shape in red for debugging purposes; highlighted shape will
    be rendered.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`%` Highlights a shape in gray; highlighted shape will not be rendered.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Special Variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Writable:**'
  prefs: []
  type: TYPE_NORMAL
- en: '`$fa` Minimum angle for a fragment of an arc.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`$fs` Minimum size of a fragment of an arc.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`$fn` Number of fragments used to define an arc; ignores `$fa` and `$fs`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`$vpr` Viewport rotation angles in degrees.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`$vpt` Viewport translation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`$vpd` Viewport camera distance.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`$vpf` Viewport field of view.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Read-only:**'
  prefs: []
  type: TYPE_NORMAL
- en: '`$t` Current animation step, normalized to a value between 0 and 1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`$children` Number of module children.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`$preview` True if Preview mode is used.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Mathematical Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`sin(``ANGLE``)` Calculates the sine of an angle in degrees.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`cos(``ANGLE``)` Calculates the cosine of an angle in degrees.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`tan(``ANGLE``)` Calculates the tangent of an angle in degrees.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`acos(``NUMBER``)` Calculates the arc (inverse) cosine, in degrees, of a number.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`asin(``NUMBER``)` Calculates the arc (inverse) sine, in degrees, of a number.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`atan(``NUMBER``)` Calculates the arc (inverse) tangent, in degrees, of a number.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`atan2(``y``,` `x``)` Two-value arc (inverse) tangent; returns the full angle
    (0–360) made between the x-axis and the vector [*x, y*].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`abs(``NUMBER``)` Calculates the absolute value of a number.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`sign(``NUMBER``)` Returns a unit value that extracts the sign of a value.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`floor(``NUMBER``)` Calculates the largest integer not greater than the number.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`ceil(``NUMBER``)` Calculates the next highest integer value.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`round(``NUMBER``)` Calculates the rounded version of the number.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`ln(``NUMBER``)` Calculates the natural logarithm of a number.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`exp(``NUMBER``)` Calculates the mathematical constant *e* (2.718 . . .) raised
    to the power of the parameter.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`log(``NUMBER``)` Calculates the base 10 logarithm of a number.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`pow(``NUMBER``,` `NUMBER``)` Calculates the result of a base raised to an
    exponent.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`sqrt(``NUMBER``)` `Calculates the square root of a number.`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
