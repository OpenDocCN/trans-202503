- en: '**3**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**3**'
- en: '**RECONNAISSANCE**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**侦察**'
- en: '![image](../images/00015.jpeg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/00015.jpeg)'
- en: In this chapter, I show you how to search subscriptions for useful data, such
    as what storage accounts it uses, its SQL databases, the virtual machines it contains,
    and any network firewalls in place.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将展示如何搜索订阅中的有用数据，如使用的存储账户、SQL 数据库、虚拟机以及任何网络防火墙。
- en: Like other large cloud service providers, Azure offers a growing list of services,
    ranging from web hosting to databases, secret key storage, and machine learning.
    With so many offerings, it can be hard to determine which services and features
    a given customer is taking advantage of, and if any of them are configured in
    a vulnerable way.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 像其他大型云服务提供商一样，Azure 提供了越来越多的服务，涵盖从网站托管到数据库、密钥存储和机器学习等内容。由于服务种类繁多，很难确定特定客户正在使用哪些服务和功能，以及这些服务是否配置存在漏洞。
- en: In this chapter, I will demonstrate how Azure’s PowerShell cmdlets and command
    line tools can be used to quickly examine the contents of a subscription. We start
    by authenticating to Azure in the console. Next, we enumerate a subscription’s
    web services, followed by its virtual machines. We then get a list of the subscription’s
    storage accounts and their access keys, followed by any internet-facing network
    ports and firewalls. Then we look at SQL servers and databases.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将演示如何使用 Azure 的 PowerShell cmdlet 和命令行工具快速检查订阅的内容。我们从在控制台中进行 Azure 身份验证开始。接下来，我们列举订阅的
    web 服务，然后列出其虚拟机。然后，我们获取订阅的存储账户及其访问密钥，接着查看任何面向互联网的网络端口和防火墙。最后，我们查看 SQL 服务器和数据库。
- en: By enumerating these services, you’ll be able to include all of your client’s
    resources in your pentest, ensuring that nothing is overlooked. This is crucial
    because when requesting an assessment, customers may focus on production services
    but forget to mention test resources where security controls may be lax. Similarly,
    documenting the contents of storage accounts can help clients determine if they
    are following proper data classification and storage practices.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 通过列举这些服务，你将能够将所有客户的资源纳入渗透测试，确保没有遗漏任何内容。这一点非常重要，因为在请求评估时，客户可能会关注生产服务，却忘记提到测试资源，而这些资源的安全控制可能较为薄弱。同样，记录存储账户的内容有助于客户判断是否遵循了正确的数据分类和存储规范。
- en: After reviewing some powerful individual commands for commonly used Azure services,
    I present scripts that are ideal for scanning any new subscription you compromise.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在回顾了几个常用 Azure 服务的强大命令后，我将展示一些理想的脚本，用于扫描你所渗透的任何新订阅。
- en: '**Installing PowerShell and the Azure PowerShell Module**'
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**安装 PowerShell 和 Azure PowerShell 模块**'
- en: Before you begin, you need to install a few free tools from Microsoft. On Windows,
    PowerShell and the Azure PowerShell module are the most straightforward tools
    for gathering subscription information. Another option are the Azure Command Line
    Interface (CLI) tools, which are offered for Windows, Linux, and macOS.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，你需要从 Microsoft 安装一些免费的工具。在 Windows 上，PowerShell 和 Azure PowerShell 模块是收集订阅信息的最直接工具。另一个选择是
    Azure 命令行界面（CLI）工具，它适用于 Windows、Linux 和 macOS。
- en: '***On Windows***'
  id: totrans-10
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***在 Windows 上***'
- en: You have two ways to install these tools on Windows. If you’d like both the
    PowerShell cmdlets and the command line interface, along with the ability to update
    the tools whenever new versions are released, use the Microsoft Web Platform Installer
    (WebPI). This small package manager makes it easy to install a number of Microsoft
    tools, including those used to manage Azure. WebPI also checks for missing dependencies,
    so if you don’t already have PowerShell installed, it will take care of that for
    you.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过两种方式在 Windows 上安装这些工具。如果你想同时拥有 PowerShell cmdlet 和命令行界面，并能够在发布新版本时更新这些工具，可以使用
    Microsoft Web Platform Installer (WebPI)。这个小型包管理器让你可以轻松安装多个 Microsoft 工具，包括用于管理
    Azure 的工具。WebPI 还会检查是否缺少依赖项，如果你尚未安装 PowerShell，它会自动为你处理。
- en: To use WebPI, simply download the installer from *[https://www.microsoft.com/web/downloads/platform.aspx](https://www.microsoft.com/web/downloads/platform.aspx)*
    and run it. Once it’s installed, search for Web Platform Installer in the Start
    menu and launch the application.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 WebPI，只需从 *[https://www.microsoft.com/web/downloads/platform.aspx](https://www.microsoft.com/web/downloads/platform.aspx)*
    下载安装程序并运行。一旦安装完成，搜索“Web Platform Installer”并启动应用程序。
- en: You can use WebPI’s search box to find Microsoft Azure PowerShell and Microsoft
    Azure Cross-platform Command Line Tools (see [Figure 3-1](part0012.html#ch03fig1)).
    Then click **Add** to download and install the tools. If multiple versions of
    a tool are returned, choose the most recent release. (You can launch WebPI again
    to check for updates to the packages.)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 WebPI 的搜索框来查找 Microsoft Azure PowerShell 和 Microsoft Azure 跨平台命令行工具（参见
    [图 3-1](part0012.html#ch03fig1)）。然后点击 **添加** 来下载并安装这些工具。如果返回了多个版本的工具，请选择最新发布的版本。（你可以再次启动
    WebPI 来检查软件包的更新情况。）
- en: After running the installer, close any open PowerShell and command line windows
    to be sure that the tools are recognized.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完工具后，关闭任何打开的 PowerShell 和命令行窗口，以确保工具被正确识别。
- en: '***On Linux or macOS***'
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***在 Linux 或 macOS 上***'
- en: If you are running Linux or macOS, you’ll need to install the Azure Command
    Line Cross-platform Tools package. There are two versions of this package—one
    written in Node.js and one in Python. I use the Node.js versions in my examples,
    but both versions use similar syntax, so feel free to use either one. You’ll find
    installer packages for the Node.js version in DMG format for macOS and TAR format
    for Linux at *[https://github.com/azure/azure-xplat-cli/](https://github.com/azure/azure-xplat-cli/)*.
    The Python version can be downloaded from *[https://github.com/azure/azure-cli/](https://github.com/azure/azure-cli/)*.
    Install these as you would any other package on your platform.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Linux 或 macOS，你需要安装 Azure 命令行跨平台工具包。这个工具包有两个版本——一个是用 Node.js 编写的，另一个是用
    Python 编写的。在我的示例中，我使用的是 Node.js 版本，但两个版本的语法类似，所以你可以任选其一。你可以在 *[https://github.com/azure/azure-xplat-cli/](https://github.com/azure/azure-xplat-cli/)*
    上找到适用于 macOS 的 DMG 格式和适用于 Linux 的 TAR 格式的 Node.js 版本安装包。Python 版本可以从 *[https://github.com/azure/azure-cli/](https://github.com/azure/azure-cli/)*
    下载。你可以像安装其他任何软件包一样安装它们。
- en: '![image](../images/00019.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/00019.jpeg)'
- en: '*Figure 3-1: Using Microsoft’s Web Platform Installer to locate and install
    Azure tools*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3-1：使用微软的 Web 平台安装程序查找和安装 Azure 工具*'
- en: '***Running Your Tools***'
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***运行你的工具***'
- en: Once you’ve installed your tools, launch them. For the PowerShell module, open
    a PowerShell window and at the prompt, run Import-Module Azure. For the command
    line tools, open a terminal window and enter azure (or az if using the Python
    version). If the command line tools are properly installed, you should see a help
    message like the one shown in [Figure 3-2](part0012.html#ch03fig2).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完工具后，启动它们。对于 PowerShell 模块，打开一个 PowerShell 窗口，并在提示符下运行 Import-Module Azure。对于命令行工具，打开一个终端窗口并输入
    azure（如果使用 Python 版本，则输入 az）。如果命令行工具安装正确，你应该会看到像 [图 3-2](part0012.html#ch03fig2)
    中所示的帮助信息。
- en: '![image](../images/00020.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/00020.jpeg)'
- en: '*Figure 3-2: The help message for the Azure command line tools*'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3-2：Azure 命令行工具的帮助信息*'
- en: At this point, you should have everything you need to begin connecting to Azure.
    Let’s start gathering information about our target subscriptions and their services.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 到这时，你应该已经拥有了开始连接到 Azure 所需的一切。让我们开始收集关于目标订阅及其服务的信息吧。
- en: '**Service Models**'
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**服务模型**'
- en: Recall from [Chapter 2](part0011.html#ch02) that Microsoft uses two different
    service models in Azure, each with its own set of commands to view or change services.
    For every service discussed in this chapter, I provide the syntax for querying
    both Azure Resource Manager (ARM) and Azure Service Management (ASM), unless a
    service is exclusive to just one model.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾 [第 2 章](part0011.html#ch02)，微软在 Azure 中使用了两种不同的服务模型，每种模型都有自己的一组命令来查看或更改服务。在本章讨论的每个服务中，我都会提供查询
    Azure 资源管理器（ARM）和 Azure 服务管理（ASM）两种模型的语法，除非某个服务仅适用于某一个模型。
- en: The PowerShell module includes both ARM and ASM cmdlets. To help keep things
    organized, commands for ASM services are typically named *Verb*-Azure*Noun*, such
    as `Get-AzureVM`, whereas ARM commands are *Verb*-Azure**Rm***Noun*, such as `Get-AzureRmVM`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 模块包含了 ARM 和 ASM 的 cmdlet。为了保持组织性，ASM 服务的命令通常命名为 *Verb*-Azure*Noun*，例如
    `Get-AzureVM`，而 ARM 命令则命名为 *Verb*-Azure**Rm***Noun*，例如 `Get-AzureRmVM`。
- en: The command line tools take a different approach. Instead of using different
    commands for each service model, you can place the `azure` executable into either
    ARM or ASM mode, and it will stay in that state until the mode is switched.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行工具采用不同的方法。你可以将 `azure` 可执行文件置于 ARM 或 ASM 模式，之后它将保持在该模式，直到你切换模式。
- en: To determine the currently selected mode, view the last line of output when
    `azure` is run with no other options. To switch modes, run azure config mode asm
    to target the ASM model or run azure config mode arm to target the ARM model.
    [Listing 3-1](part0012.html#ch03list1) shows the output of Azure CLI when switching
    modes, as well as the last line of the Azure command to confirm the current mode.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定当前选择的模式，请查看运行 `azure` 时输出的最后一行。要切换模式，请运行 azure config mode asm 来切换到 ASM 模型，或运行
    azure config mode arm 来切换到 ARM 模型。[示例 3-1](part0012.html#ch03list1) 显示了 Azure
    CLI 切换模式时的输出，以及确认当前模式的 Azure 命令的最后一行。
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Listing 3-1: Switching and verifying modes in Azure CLI*'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*示例 3-1：在 Azure CLI 中切换和验证模式*'
- en: '**Best Practices: PowerShell Security**'
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**最佳实践：PowerShell 安全性**'
- en: Since its official release in 2006, PowerShell has grown in popularity, capability,
    and maturity. Originally a scripting language to perform basic Windows management,
    PowerShell is now the de facto way to manage a wide variety of Microsoft products
    and services, which of course includes Azure. Because it offers so many features,
    PowerShell has also been attractive for hackers. As a system administrator or
    defender, you need to be aware of a number of settings to ensure that PowerShell
    remains secure on your systems. As we’ve already seen, a compromised workstation
    could lead to Azure subscription access, so securing endpoints is important!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 自 2006 年正式发布以来，PowerShell 在流行度、功能和成熟度方面不断增长。最初作为一种脚本语言，用于执行基本的 Windows 管理，PowerShell
    现在是管理各种 Microsoft 产品和服务的事实标准方法，当然也包括 Azure。由于它提供了许多功能，PowerShell 也成为了黑客的目标。作为系统管理员或防御者，您需要了解一些设置，以确保
    PowerShell 在您的系统中保持安全。正如我们已经看到的，受损的工作站可能导致 Azure 订阅访问，因此保护端点非常重要！
- en: First, enable PowerShell logging, and make sure this data is forwarded to your
    security auditing solution. Not only will this increase the speed of detecting
    an attacker leveraging PowerShell in your environment, it will give the defenders
    a clear picture of what actions were taken by the attacker. Forwarding events
    also makes it harder for an attacker to tamper with event logs.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，启用 PowerShell 日志记录，并确保将这些数据转发到您的安全审计解决方案。这不仅会提高检测攻击者在您的环境中利用 PowerShell 的速度，还能让防御者清楚地了解攻击者采取了哪些行动。转发事件还可以使攻击者更难篡改事件日志。
- en: '**NOTE**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意事项**'
- en: '*Microsoft’s Lee Holmes published an excellent article on all the ways in which
    the PowerShell team has engineered blue team capabilities into PowerShell. You
    can find it at* [https://blogs.msdn.microsoft.com/powershell/2015/06/09/powershell-the-blue-team/](https://blogs.msdn.microsoft.com/powershell/2015/06/09/powershell-the-blue-team/)*.*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*微软的 Lee Holmes 发表了一篇优秀的文章，介绍了 PowerShell 团队如何将蓝队功能集成到 PowerShell 中。您可以在* [https://blogs.msdn.microsoft.com/powershell/2015/06/09/powershell-the-blue-team/](https://blogs.msdn.microsoft.com/powershell/2015/06/09/powershell-the-blue-team/)*.* '
- en: Second, be aware that PowerShell supports remote sessions and remote command
    execution, using the WS-Management protocol on TCP ports 5985 and 5986\. Additionally,
    now that PowerShell has been ported to Linux, remote PowerShell commands can also
    be executed over SSH (TCP port 22). PowerShell remoting is typically enabled by
    default on Windows Server installations but disabled on workstations. All forms
    of PowerShell remoting require authentication, and usually an account with membership
    in the administrators group is required to connect. Although remote PowerShell
    makes management of large quantities of remote systems easier, it can also lead
    to illegitimate access if administrator accounts aren’t closely guarded or if
    remoting permissions are made too broad. A discussion of PowerShell remoting security
    can be found at *[https://docs.microsoft.com/en-us/powershell/scripting/setup/winrmsecurity/](https://docs.microsoft.com/en-us/powershell/scripting/setup/winrmsecurity/)*.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，请注意 PowerShell 支持远程会话和远程命令执行，使用 WS-Management 协议通过 TCP 端口 5985 和 5986。此外，由于
    PowerShell 已被移植到 Linux，现在还可以通过 SSH（TCP 端口 22）执行远程 PowerShell 命令。PowerShell 远程通常在
    Windows Server 安装中默认启用，但在工作站上默认禁用。所有形式的 PowerShell 远程都需要身份验证，通常需要一个属于管理员组的帐户才能连接。尽管远程
    PowerShell 可以简化对大量远程系统的管理，但如果管理员帐户没有得到充分保护，或者远程权限设置得过于宽泛，也可能导致非法访问。有关 PowerShell
    远程安全性的讨论，请参阅 *[https://docs.microsoft.com/en-us/powershell/scripting/setup/winrmsecurity/](https://docs.microsoft.com/en-us/powershell/scripting/setup/winrmsecurity/)*。
- en: Finally, consider using PowerShell security features such as constrained language
    mode. When in use, constrained language mode greatly reduces the ability to arbitrarily
    run some of the more powerful operations in PowerShell, without impairing the
    ability to run properly signed scripts. This way, if an attacker does gain access
    to a PowerShell session on a system, they won’t be able to utilize many of the
    tools or scripts they’d like to run. A great introduction to constrained language
    mode is available at *[https://blogs.msdn.microsoft.com/powershell/2017/11/02/powershell-constrained-language-mode/](https://blogs.msdn.microsoft.com/powershell/2017/11/02/powershell-constrained-language-mode/)*.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，考虑使用 PowerShell 安全功能，如受限语言模式。启用后，受限语言模式大大降低了在 PowerShell 中任意执行某些强大操作的能力，同时不会影响执行正确签名的脚本。这样，如果攻击者确实获得了系统上的
    PowerShell 会话访问权限，他们将无法使用许多他们想要运行的工具或脚本。关于受限语言模式的一个很好的介绍可以通过 *[https://blogs.msdn.microsoft.com/powershell/2017/11/02/powershell-constrained-language-mode/](https://blogs.msdn.microsoft.com/powershell/2017/11/02/powershell-constrained-language-mode/)*
    获得。
- en: '**Authenticating with the PowerShell Module and CLI**'
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用 PowerShell 模块和 CLI 进行身份验证**'
- en: To gather details about any services in Azure, you first need to authenticate.
    The authentication process varies depending on the type of credential (username
    and password, service principal, or management certificate), the service model,
    and the tool being used (Azure CLI or PowerShell). [Table 3-1](part0012.html#ch03tab1)
    shows, for each credential type, which service model/tool pairs you can use to
    authenticate. Note that not every combination of these options is possible.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要收集有关 Azure 中任何服务的详细信息，首先需要进行身份验证。身份验证过程因凭据类型（用户名和密码、服务主体或管理证书）、服务模型和所使用的工具（Azure
    CLI 或 PowerShell）而异。[表 3-1](part0012.html#ch03tab1) 显示了每种凭据类型下，可以使用哪些服务模型/工具组合进行身份验证。请注意，并不是所有这些选项的组合都是可能的。
- en: '**Table 3-1:** Supported Authentication Methods by Service Model and Tool'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 3-1：** 按服务模型和工具支持的认证方法'
- en: '| **Tool/interface** | **Username and password** | **Management certificate**
    | **Service principal with password** | **Service principal with certificate**
    |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| **工具/接口** | **用户名和密码** | **管理证书** | **带密码的服务主体** | **带证书的服务主体** |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| Azure CLI – ASM mode | Supported | Partially supported | Not supported |
    Not supported |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| Azure CLI – ASM 模式 | 支持 | 部分支持 | 不支持 | 不支持 |'
- en: '| Azure CLI – ARM mode | Supported | Not supported | Supported | Supported
    |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| Azure CLI – ARM 模式 | 支持 | 不支持 | 支持 | 支持 |'
- en: '| Azure PowerShell ASM cmdlets | Supported | Supported | Not supported | Not
    supported |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| Azure PowerShell ASM cmdlets | 支持 | 支持 | 不支持 | 不支持 |'
- en: '| Azure PowerShell ARM cmdlets | Supported | Not supported | Supported | Supported
    |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| Azure PowerShell ARM cmdlets | 支持 | 不支持 | 支持 | 支持 |'
- en: '| *[http://portal.azure.com/](http://portal.azure.com/)* | Supported | Not
    supported | Not supported | Not supported |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| *[http://portal.azure.com/](http://portal.azure.com/)* | 支持 | 不支持 | 不支持 |
    不支持 |'
- en: '| *[http://manage.windowsazure.com/](http://manage.windowsazure.com/)* | Supported
    | Not supported | Not supported | Not supported |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| *[http://manage.windowsazure.com/](http://manage.windowsazure.com/)* | 支持
    | 不支持 | 不支持 | 不支持 |'
- en: As you can see, a username and password pair is accepted by each Azure management
    interface. Authenticating with a username and password pair has a few other advantages
    as well. For one, once authenticated, you probably won’t need to know what subscriptions
    a given user has access to, because you can use their password to sign in to either
    of the Azure web interfaces to see a list of their subscriptions. In contrast,
    the command line interfaces expect you to specify the target subscription when
    executing a command.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，用户名和密码组合被每个 Azure 管理接口接受。使用用户名和密码进行身份验证还有其他几个优点。首先，一旦完成身份验证，你可能不需要知道某个用户可以访问哪些订阅，因为你可以使用他们的密码登录到任一
    Azure Web 接口，以查看他们的订阅列表。相比之下，命令行接口在执行命令时需要你指定目标订阅。
- en: Usernames and passwords are easier to use than management certificates and service
    principals. Each tool will present a login prompt that accepts a password. If
    the user doesn’t have multi-factor authentication enabled, you’re good to go.
    Authentication with management certificates or service principals might require
    a series of commands. Let’s take a look at how to authenticate with them.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 用户名和密码比管理证书和服务主体更容易使用。每个工具都会显示一个登录提示，接受密码。如果用户没有启用多因素身份验证，那就可以顺利进行。使用管理证书或服务主体进行身份验证可能需要一系列命令。让我们看看如何使用它们进行身份验证。
- en: '**Authenticating with Management Certificates**'
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用管理证书进行身份验证**'
- en: When authenticating with management certificates, you need to know the subscription
    ID you plan to target. As you know from the scoping discussion in [Chapter 1](part0010.html#ch01),
    this shouldn’t be a problem.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用管理证书进行身份验证时，你需要知道计划要针对的订阅ID。正如你在[第1章](part0010.html#ch01)中的范围讨论中所知道的，这不应该是一个问题。
- en: Of course, your certificate needs to be in the management certificate list for
    the target subscription for authentication to succeed. The best way to determine
    where a given certificate can be used is through educated guessing and trial and
    error. In other words, if a certificate came from a developer’s machine who owns
    one subscription, or if the certificate is checked into a code repository for
    a service that you know runs in your target subscription, there’s a very good
    chance it will work. Luckily, trying a certificate and finding it doesn’t work
    doesn’t really have a downside. Although the failed connection attempt may be
    logged somewhere, I’ve yet to encounter such a log, and in practice, no subscription
    owner has ever detected my attempts to penetrate their subscription because I
    tried the wrong certificate.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，为了成功进行身份验证，你的证书需要在目标订阅的管理证书列表中。确定给定证书可以使用的最佳方法是通过有根据的猜测和反复试验。换句话说，如果一个证书来自拥有某个订阅的开发者机器，或者证书被提交到一个你知道在目标订阅中运行的服务的代码库中，那么它很有可能会有效。幸运的是，尝试一个证书并发现它无效并不会带来什么负面影响。尽管失败的连接尝试可能会被记录到某个地方，但我还没有遇到过这样的日志，实际上，订阅所有者也从未检测到我因为尝试错误的证书而试图突破他们的订阅。
- en: '***Installing the Certificate***'
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***安装证书***'
- en: In order to use the certificate, you first need to install it into your computer’s
    certificate store. To do so, double-click the certificate file and walk through
    the wizard. The certificate location doesn’t matter, but if you choose to place
    it in the Local Machine store, you need to run subsequent commands with administrative
    (User Account Control–elevated) rights.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用证书，首先需要将其安装到计算机的证书存储区。为此，双击证书文件并按照向导完成操作。证书的位置无关紧要，但如果你选择将其放入本地计算机存储区，则需要以管理员权限（用户帐户控制提升）运行后续命令。
- en: '***Authenticating***'
  id: totrans-56
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***身份验证***'
- en: The PowerShell script shown in [Listing 3-2](part0012.html#ch03list2) authenticates
    to a subscription using a certificate. This allows you to run subsequent commands
    against the subscription, using this certificate as your credential.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表3-2](part0012.html#ch03list2)中显示的PowerShell脚本使用证书对订阅进行身份验证。这允许你使用此证书作为凭据对订阅执行后续命令。'
- en: '[PRE1]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*Listing 3-2: Authenticating to Azure using management certificates in PowerShell*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表3-2：使用PowerShell中的管理证书对Azure进行身份验证*'
- en: 'Here’s what’s happening in [Listing 3-2](part0012.html#ch03list2), step by
    step:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是[列表3-2](part0012.html#ch03list2)中逐步发生的情况：
- en: To authenticate with a management certificate, we need to retrieve it from the
    certificate store. We first specify that the certificate is installed in the *Personal*
    directory (*My*) ➊, within the `LocalMachine` store ➋ (as opposed to the `CurrentUser`
    store). If you installed it elsewhere, be sure to use the programmatic name for
    that location, which you can find on Microsoft’s website at *[https://msdn.microsoft.com/en-us/library/windows/desktop/aa388136(v=vs.85).aspx](https://msdn.microsoft.com/en-us/library/windows/desktop/aa388136(v=vs.85).aspx)*.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用管理证书进行身份验证，我们需要从证书存储区中检索它。我们首先指定证书安装在*个人*目录（*我的*）➊中，位于`LocalMachine`存储区➋（而不是`CurrentUser`存储区）。如果你将其安装在其他位置，请务必使用该位置的编程名称，你可以在微软网站上找到该位置的相关信息，网址是
    *[https://msdn.microsoft.com/en-us/library/windows/desktop/aa388136(v=vs.85).aspx](https://msdn.microsoft.com/en-us/library/windows/desktop/aa388136(v=vs.85).aspx)*。
- en: We then request a list of certificates in that location and place it into the
    variable `$certs` ➌.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们请求该位置的证书列表，并将其放入变量`$certs` ➌。
- en: To see the list of certificates available, we execute the variable as a command
    ➍. The output tells us that the only certificate installed is *AzureCert*, and
    it lists the certificate’s *thumbprint* as well (“8D9 . . . 1D3”). The thumbprint
    uniquely identifies a certificate.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看可用证书的列表，我们执行该变量作为命令 ➍。输出会告诉我们唯一安装的证书是 *AzureCert*，并列出证书的 *指纹*（“8D9 . . .
    1D3”）。指纹唯一标识一个证书。
- en: Next, we get a reference to the certificate object with the `Get-Item` cmdlet,
    using the thumbprint to select the correct certificate ➎.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们使用 `Get-Item` cmdlet 获取证书对象的引用，通过指纹选择正确的证书 ➎。
- en: To see if you have a usable certificate, issue the certificate variable name
    as a command to ensure that a certificate was retrieved, as shown at ➏. If you
    see an empty response, something went wrong with the `Get-Item` command and you
    should double-check that you entered the values at ➎ correctly.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查是否有可用的证书，请将证书变量名作为命令执行，以确保已检索到证书，如 ➏ 所示。如果您看到空响应，说明 `Get-Item` 命令出了问题，您应该重新检查是否正确输入了
    ➎ 中的值。
- en: Finally, we see if the certificate we’ve found has the associated private key
    with `HasPrivateKey` ➐. Without the private key, you won’t be able to use it to
    connect to the subscription.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们检查找到的证书是否包含相关的私钥，使用 `HasPrivateKey` ➐。没有私钥，您将无法使用该证书连接到订阅。
- en: '***Connecting and Validating Access***'
  id: totrans-67
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***连接和验证访问***'
- en: 'With the certificate ready to use, try to connect to the subscription. You
    can do so by using two commands: `Set-AzureSubscription` followed by `Select-AzureSubscription`.
    In the former command, you specify the name of the subscription, subscription
    ID, and the certificate variable ➑. If you don’t know the name of the subscription,
    just make something up. Now, because you may have access to numerous subscriptions,
    use the `Select-AzureSubscription` cmdlet to specify the subscription that PowerShell
    should run subsequent commands against. Note that the name here must match the
    one specified in the set command.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 证书准备好使用后，尝试连接到订阅。您可以通过使用两个命令来实现：`Set-AzureSubscription` 后跟 `Select-AzureSubscription`。在前一个命令中，您需要指定订阅的名称、订阅
    ID 和证书变量 ➑。如果您不知道订阅名称，可以自己编一个。因为您可能有多个订阅，所以使用 `Select-AzureSubscription` cmdlet
    来指定 PowerShell 后续命令要针对的订阅。请注意，这里的名称必须与 set 命令中指定的名称匹配。
- en: At this point, if the certificate was valid for that subscription, you should
    have access. To confirm, run Get-AzureAccount ➒. If the subscription is listed,
    you should now be able to run any other Azure ASM commands against the subscription
    to view and interact with its ASM resources.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，如果证书对该订阅有效，您应该可以访问。为确认，运行 Get-AzureAccount ➒。如果订阅列出，您现在应该能够对订阅运行其他任何 Azure
    ASM 命令，以查看和交互其 ASM 资源。
- en: Azure CLI technically supports management certificates in its ASM mode, but
    it fails in practice to properly load certificates. The workaround is to use a
    *.publishsettings* file instead of a certificate.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Azure CLI 在其 ASM 模式下技术上支持管理证书，但在实际操作中未能正确加载证书。解决方法是使用 *.publishsettings* 文件，而不是证书。
- en: 'Because *.publishsettings* files are just XML documents embedded with base64-encoded
    management certificates and subscription IDs (as discussed in [Chapter 2](part0011.html#ch02)),
    you can manually create one given the certificate and subscription ID. The steps
    to do so are a bit lengthy; fortunately, software developer and Microsoft MVP
    Gaurav Mantri has posted sample code to automate the process: *[http://gauravmantri.com/2012/09/14/about-windows-azure-publish-settings-file-and-how-to-create-your-own-publish-settings-file/](http://gauravmantri.com/2012/09/14/about-windows-azure-publish-settings-file-and-how-to-create-your-own-publish-settings-file/)*.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 *.publishsettings* 文件只是嵌入了 base64 编码的管理证书和订阅 ID 的 XML 文档（如 [第2章](part0011.html#ch02)
    所讨论），您可以根据证书和订阅 ID 手动创建一个。创建过程稍微复杂些；幸运的是，软件开发人员和微软 MVP Gaurav Mantri 发布了自动化该过程的示例代码：
    *[http://gauravmantri.com/2012/09/14/about-windows-azure-publish-settings-file-and-how-to-create-your-own-publish-settings-file/](http://gauravmantri.com/2012/09/14/about-windows-azure-publish-settings-file-and-how-to-create-your-own-publish-settings-file/)*。
- en: 'Once you have a *.publishsettings* file, run the following to add the credential
    to Azure CLI:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您拥有 *.publishsettings* 文件，请运行以下命令将凭据添加到 Azure CLI：
- en: '[PRE2]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, run a command to verify that the credential works, such as `azure vm
    list`. If you see the error `We don''t have a valid access token`, the credential
    did not work. Upon successful authentication, you should see `info: vm list command
    OK`, even if the subscription contains no virtual machines.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '接下来，运行一个命令来验证凭证是否有效，例如`azure vm list`。如果看到错误`We don''t have a valid access
    token`，说明凭证无效。成功身份验证后，您应该看到`info: vm list command OK`，即使订阅中没有虚拟机。'
- en: '**Best Practices: Service Principals**'
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**最佳实践：服务主体**'
- en: Service principals replace management certificates as the preferred way for
    apps, scripts, and services to programmatically access and manage Azure resources.
    There are several security advantages to using service principals over management
    certificates.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 服务主体取代了管理证书，成为应用程序、脚本和服务以编程方式访问和管理 Azure 资源的首选方式。与管理证书相比，使用服务主体有多个安全优势。
- en: The most notable improvement with service principals is their ability to have
    a limited scope of permissions. By default, a service principal is created for
    use with a single application and can be granted the specific rights it needs
    to perform its function. Following the principle of least privilege, test which
    rights are actually needed for your application; don’t just give it access to
    everything, as this would allow an attacker to wreak havoc if the service principal
    was compromised.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 服务主体的最大改进是它们能够拥有有限的权限范围。默认情况下，服务主体是为单个应用程序创建的，并可以授予它执行其功能所需的特定权限。遵循最小权限原则，测试您的应用程序实际需要哪些权限；不要仅仅授予它访问所有资源的权限，因为如果服务主体被攻破，攻击者就可以肆意破坏。
- en: Also, service principals can be created with either a long, automatically generated
    password (referred to as its *client secret*) or a certificate for authentication.
    When you create a service principal with a password, the client secret value is
    displayed only once, and you cannot view it again after navigating away from that
    page in the portal. (It can be regenerated if needed, though.) As such, the page
    encourages you to record the value. Be sure that this value is stored in a secure
    place, such as Key Vault or a password manager. Avoid storing it in a source control
    repository, as this makes it hard to control or track who has access as well as
    who has viewed it, and it’s difficult to remove from version history. Secrets
    stored in source code are a common source of breaches. Likewise, never store such
    secrets in a plaintext file, even temporarily.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，服务主体可以使用长的、自动生成的密码（称为*客户端密钥*）或证书进行身份验证。当您使用密码创建服务主体时，客户端密钥值仅显示一次，并且在离开该页面后无法再次查看（但如果需要，可以重新生成）。因此，页面会提示您记录此值。请确保将此值存储在安全的地方，例如密钥保管库或密码管理器中。避免将其存储在源代码控制库中，因为这样会很难控制或追踪谁有权限访问以及谁查看过它，而且也很难从版本历史中移除。存储在源代码中的密钥是安全漏洞的常见来源。同样，绝对不要将这样的密钥存储在纯文本文件中，即使是暂时存储也不行。
- en: Lastly, be sure to document the purpose of all service principals you create
    and periodically review the service principals with permissions to your resources.
    As applications are retired, it’s easy to forget to remove old service principals;
    cleaning up old accounts reduces the attack surface of the subscription and its
    resources.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，确保记录您创建的所有服务主体的目的，并定期审查具有资源访问权限的服务主体。随着应用程序的退役，容易忘记删除旧的服务主体；清理旧账户有助于减少订阅及其资源的攻击面。
- en: '**Authenticating with Service Principals**'
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用服务主体进行身份验证**'
- en: Recall from [Chapter 2](part0011.html#ch02) that service principals are the
    Azure-based equivalent of service accounts found in most companies’ domains. Just
    as in on-premises environments, these accounts are used when a service needs to
    run regularly—that is, independent of a particular administrator’s account.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下[第2章](part0011.html#ch02)，服务主体是 Azure 环境中类似于大多数公司域中的服务账户的角色。就像在本地环境中一样，当服务需要定期运行时（即独立于特定管理员账户时），这些账户就会被使用。
- en: 'Azure provides two authentication options for these accounts: passwords and
    certificates. However, service principals are more restrictive than regular accounts
    or management certificates. Because service principals are tied to a particular
    application, they usually only have rights to what that application needs to access.
    Additionally, service principals check for password expiration or certificate
    validity (depending on the authentication method you use), so a captured credential
    can’t be used indefinitely.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 为这些帐户提供了两种身份验证选项：密码和证书。然而，服务主体比常规帐户或管理证书更具限制性。由于服务主体与特定应用程序绑定，它们通常只具有该应用程序需要访问的权限。此外，服务主体会检查密码是否过期或证书是否有效（取决于你使用的身份验证方法），因此被捕获的凭据不能无限期使用。
- en: '**DEFENDER’S TIP**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**DEFENDER''S TIP**'
- en: Because service principals can’t use multi-factor authentication, they may pose
    a greater risk than standard user accounts that use a second factor during authentication.
    Although service principals do have long, auto-generated passwords or strong certificate-based
    keys, which help to mitigate the risk of brute-forcing and password-guessing attacks,
    to be safe, you should make sure your service principals only have the minimum
    amount of privileges needed to perform their duties. Additionally, it’s far better
    to use several service principals, each dedicated to performing a specific task
    with a small set of rights, than to have one service principal with full control
    over everything in a subscription. Sure, the initial setup will be a bit more
    complex, but the security benefits are worth it.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 由于服务主体不能使用多因素身份验证，它们可能比标准的用户帐户更具风险，因为标准用户帐户在身份验证时使用第二个因素。尽管服务主体具有较长的自动生成密码或强大的基于证书的密钥，有助于缓解暴力破解和密码猜测攻击的风险，但为了安全起见，你应该确保服务主体仅具有执行其职能所需的最小权限。此外，最好使用多个服务主体，每个服务主体专注于执行特定任务并具有少量权限，而不是使用一个具有完全控制权限的服务主体来控制订阅中的所有内容。虽然最初的设置可能更复杂，但安全性方面的好处是值得的。
- en: '***Using Service Principals with Passwords***'
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用密码的服务主体***'
- en: To connect as a service principal with a password, you’ll need the service principal’s
    GUID (usually referred to as a client ID or application ID), its password (also
    called a *key* in the Azure portal), and the tenant ID of the Azure Active Directory
    instance where that service principal is defined (another GUID). You’ll most likely
    find the tenant ID where you discovered the client ID and password, since any
    program using the service principal would also need this value. Once you have
    these values, you should be able to authenticate in PowerShell or Azure CLI, as
    discussed next.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要作为服务主体使用密码进行连接，你需要服务主体的 GUID（通常称为客户端 ID 或应用程序 ID），其密码（在 Azure 门户中也称为 *密钥*）以及该服务主体定义的
    Azure Active Directory 实例的租户 ID（另一个 GUID）。你很可能会在发现客户端 ID 和密码的地方找到租户 ID，因为任何使用服务主体的程序也需要此值。一旦你拥有这些值，你应该能够如下一步所述在
    PowerShell 或 Azure CLI 中进行身份验证。
- en: '**PowerShell**'
  id: totrans-87
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**PowerShell**'
- en: 'In PowerShell, run the following commands:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PowerShell 中，运行以下命令：
- en: '[PRE3]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `Get-Credential` cmdlet should open a dialog with space for you to enter
    a username and password. Enter the application ID value as the username and the
    key as the password ➊. On the next line, save the tenant ID as a variable ➋ and
    then pass both values into `Add-AzureRmAccount` ➌. If you have it, you can also
    specify a subscription using the `-SubscriptionID` parameter of `Add-AzureRmAccount`,
    though this will return an error if the service principal doesn’t have rights
    to any resources in the subscription.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`Get-Credential` cmdlet 应该会弹出一个对话框，供你输入用户名和密码。将应用程序 ID 值作为用户名，密钥作为密码 ➊。在下一行，将租户
    ID 保存为变量 ➋，然后将这两个值传递给 `Add-AzureRmAccount` ➌。如果有的话，你还可以使用 `Add-AzureRmAccount`
    的 `-SubscriptionID` 参数指定一个订阅，但如果服务主体没有该订阅中的任何资源权限，这将返回错误。'
- en: '**Azure CLI**'
  id: totrans-91
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**Azure CLI**'
- en: 'To authenticate in Azure CLI with a password-based service principal, make
    sure Azure CLI is in ARM mode and then run the following command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Azure CLI 中使用基于密码的服务主体进行身份验证，请确保 Azure CLI 处于 ARM 模式，然后运行以下命令：
- en: '[PRE4]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This command will not display any output, so use azure resource list to see
    if it worked and to show existing resources. If the credential doesn’t work, it
    should display an error.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令不会显示任何输出，因此使用 Azure 资源列表查看是否成功，并显示现有资源。如果凭据无效，它应该会显示一个错误。
- en: '**NOTE**'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Generally, I surround argument values passed in to various commands with double
    quotes, such as the username and password values here. This isn’t required if
    the input provided doesn’t contain spaces; however, because Azure allows spaces
    in many of its fields, such as service names, it’s safer to assume that the input
    has a space and to wrap it in double quotes.*'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '*通常，我会将传递给各种命令的参数值用双引号括起来，例如这里的用户名和密码值。如果输入值不包含空格，这并不是必需的；然而，由于 Azure 在许多字段中允许使用空格（如服务名称），因此假设输入中有空格并用双引号括起来是更安全的做法。*'
- en: '***Authenticating with X.509 Certificates***'
  id: totrans-97
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***使用 X.509 证书进行身份验证***'
- en: 'Service principals can also be authenticated with X.509 certificates. To do
    this in PowerShell, run the following commands:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 服务主体也可以通过 X.509 证书进行身份验证。要在 PowerShell 中执行此操作，请运行以下命令：
- en: '[PRE5]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Be sure to specify the thumbprint of the certificate you plan to use ➊, instead
    of a password, and enter the service principal ID (application ID) on the command
    line ➋ because there will be no prompt for a credential. The tenant ID ➌ is the
    same as in password-based authentication. For the `Add-AzureRMAccount` command,
    replace the `-Credential` switch with the `-CertificateThumbprint` switch ➍.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 请务必指定您计划使用的证书的指纹 ➊，而不是密码，并在命令行中输入服务主体 ID（应用程序 ID） ➋，因为不会有凭据提示。在密码认证中，租户 ID ➌
    与密码认证中的相同。对于 `Add-AzureRMAccount` 命令，请将 `-Credential` 开关替换为 `-CertificateThumbprint`
    开关 ➍。
- en: '**Best Practices: Subscription Security**'
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**最佳实践：订阅安全性**'
- en: 'Subscription owners can take a number of steps to reduce the attack surface
    of their subscription and increase their awareness of changes in it. This includes
    keeping the number of highly privileged users in the subscription to a minimum,
    limiting the rights of nonhuman accounts, enabling auditing, limiting the scope
    of services in each subscription, and using JIT and Azure PIM (as described in
    “[Best Practices: Protecting Privileged Accounts](part0011.html#lev37)” on [page
    26](part0011.html#page_26)) to protect the remaining accounts.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 订阅所有者可以采取若干措施来减少订阅的攻击面，并提高他们对订阅中变化的敏感性。这包括将订阅中的高权限用户数量保持在最低限度，限制非人类账户的权限，启用审计，限制每个订阅中的服务范围，以及使用
    JIT 和 Azure PIM（如在“[最佳实践：保护特权账户](part0011.html#lev37)”第[26页](part0011.html#page_26)中描述的）来保护剩余账户。
- en: First, a subscription is only as secure as its weakest administrator. Therefore,
    it is crucial to require users to select strong passwords and enforce multi-factor
    authentication on all subscription user accounts. Limiting the number of users
    with access to the subscription also reduces the odds of compromised user accounts
    or computers being used for successful attacks against a subscription.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，订阅的安全性仅与其最薄弱的管理员一样强。因此，要求用户选择强密码并对所有订阅用户账户强制执行多重身份验证至关重要。限制具有订阅访问权限的用户数量还可以减少用户账户或计算机被攻破后被用于成功攻击订阅的概率。
- en: Next, look at the number of nonhuman accounts with access to the subscription,
    including management certificates, service accounts, and service principals. Administrators
    often feel less accountability for these accounts, particularly if they are shared
    among multiple people.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，查看具有订阅访问权限的非人类账户数量，包括管理证书、服务账户和服务主体。管理员通常对这些账户的责任感较弱，尤其是当这些账户被多个用户共享时。
- en: Additionally, auditing plays a key role in tracking access to subscriptions,
    identifying anomalies, and providing accountability for actions taken against
    the subscription. Without audit logs, defenders will have a very difficult time
    determining how an adversary gained access and what actions they took in the event
    of a breach. Microsoft has thorough documentation describing the types of logging
    available in Azure, and how to enable it, at *[https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-overview-activity-logs/](https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-overview-activity-logs/)*.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，审计在跟踪订阅访问、识别异常和提供对订阅操作的问责方面发挥着关键作用。如果没有审计日志，防御者在发生安全事件时将很难确定入侵者是如何获得访问权限以及他们采取了哪些操作。微软提供了关于
    Azure 中可用的日志类型及如何启用这些日志的详细文档，网址为 *[https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-overview-activity-logs/](https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-overview-activity-logs/)*。
- en: Another consideration is the scope of services running within a subscription.
    Some companies are tempted to provision just a few subscriptions and put multiple
    workloads in each, but this can exacerbate the too-many-administrators issue.
    It can also lead to the creation of confusing security permissions to keep everyone
    limited to their own resources (or worse, permissions that give everyone free
    rein over everything in the subscription). I suggest using a separate subscription
    for each major project, and potentially different subscriptions for development,
    pre-production, and production deployments. For particularly sensitive resources,
    such as a Key Vault hosting critical secrets, it might make sense to place them
    in their own subscription.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个考虑因素是订阅中运行的服务范围。一些公司倾向于仅配置少数几个订阅，并在每个订阅中放置多个工作负载，但这可能会加剧管理员过多的问题。它还可能导致创建混乱的安全权限，以限制每个人只能访问他们自己的资源（更糟的是，创建允许所有人对订阅中的所有内容都拥有自由权限的权限）。我建议为每个主要项目使用一个单独的订阅，并且为开发、预生产和生产部署使用不同的订阅。对于特别敏感的资源，例如托管关键机密的密钥保管库，将其放在单独的订阅中可能是明智的。
- en: To assist in making these changes and ensuring that a subscription does not
    slip back into insecurity over time, Microsoft has released a subscription and
    resource security automation toolkit known as the Secure DevOps Kit. We’ll cover
    this in depth in [Chapter 8](part0017.html#ch08).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助进行这些更改并确保订阅随着时间的推移不会再次陷入不安全状态，微软发布了一个名为 Secure DevOps Kit 的订阅和资源安全自动化工具包。我们将在[第
    8 章](part0017.html#ch08)中深入讨论这一内容。
- en: 'Finally, consider using Azure PIM, so accounts only have administrative rights
    in the subscription when those privileges are needed. PIM also allows for additional
    auditing when those rights are used. For more details, see “[Best Practices: Protecting
    Privileged Accounts](part0011.html#lev37)” on [page 26](part0011.html#page_26).'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，考虑使用 Azure PIM（特权身份管理），使账户仅在需要时才能拥有订阅的管理员权限。PIM 还允许在这些权限被使用时进行额外的审计。有关更多详情，请参见
    “[最佳实践：保护特权账户](part0011.html#lev37)” 第 26 页（[page 26](part0011.html#page_26)）。
- en: '**Gathering Subscription Information**'
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**收集订阅信息**'
- en: Once you’re signed in, you can begin gathering information about the subscription
    and its services. The data you gather will help determine where to perform deeper
    investigation. The first thing to gather from any subscription is data about the
    subscription itself, such as the name of the subscription and what accounts have
    access to it. This information often allows you to determine what a subscription
    is used for, and you can get some clues as to how best to pivot into other subscriptions.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，你可以开始收集关于订阅及其服务的信息。你收集的数据将帮助你确定需要深入调查的领域。收集任何订阅时，首先要获取关于订阅本身的数据，比如订阅的名称以及哪些账户可以访问该订阅。这些信息通常能够帮助你了解订阅的用途，并为你提供如何切换到其他订阅的线索。
- en: When gathering this data, begin by listing the currently selected subscription.
    That listing should provide you with the name of the current subscription and
    its subscription ID. The subscription name is often quite informative. For example,
    it may contain a team or project name, such as “Human Resources – Production Site”
    or “E-Commerce Test Environment.” Additionally, confirm that the subscription
    ID is one you were expecting and that it is in scope for your assessment.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在收集这些数据时，从列出当前选定的订阅开始。该列表应提供当前订阅的名称和订阅 ID。订阅名称通常非常具有信息性。例如，它可能包含团队或项目名称，如“人力资源
    – 生产站点”或“电子商务测试环境”。此外，确认订阅 ID 是你预期的，并且它在你的评估范围内。
- en: 'To list the current ASM subscription in PowerShell, run the following command:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 PowerShell 中列出当前的 ASM 订阅，请运行以下命令：
- en: '[PRE6]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This command should return a `PSAzureSubscription` object and display the subscription
    name, subscription ID, the Azure Active Directory tenant ID, and the account you
    are connected with. It should also display the environment, which is the type
    of Azure cloud where this subscription is hosted. For example, AzureCloud is the
    default commercial version of Azure, whereas AzureUSGovernment is a separate instance
    of Azure just for US government use.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令应返回一个 `PSAzureSubscription` 对象，并显示订阅名称、订阅 ID、Azure Active Directory 租户 ID
    以及你连接的账户。它还应显示环境，即此订阅所托管的 Azure 云类型。例如，AzureCloud 是 Azure 的默认商业版，而 AzureUSGovernment
    是仅供美国政府使用的独立 Azure 实例。
- en: '**NOTE**'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Some countries with unique privacy and data laws, like Germany and China,
    have their own clouds. You can find a list of cloud environments and their management
    URLs by running* Get-AzureEnvironment*.*'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '*一些拥有独特隐私和数据法律的国家，例如德国和中国，拥有自己的云服务。你可以通过运行* Get-AzureEnvironment *命令找到云环境及其管理
    URL 的列表。*'
- en: To view current subscription information for ARM subscriptions in PowerShell,
    you can run the `Get-AzureRmContext` cmdlet. This command should return a `PSAzureContext`
    object, which is a container that holds `PSAzureRmAccount`, `PSAzureEnvironment`,
    `PSAzureSubscription`, and `PSAzureTenant` objects. In other words, its output
    should let you drill into specific details of the tenant, subscription, and account
    you are using.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看 PowerShell 中的 ARM 订阅的当前订阅信息，你可以运行 `Get-AzureRmContext` cmdlet。该命令应返回一个 `PSAzureContext`
    对象，这是一个容器，包含 `PSAzureRmAccount`、`PSAzureEnvironment`、`PSAzureSubscription` 和 `PSAzureTenant`
    对象。换句话说，它的输出应该让你深入查看你正在使用的租户、订阅和帐户的具体信息。
- en: 'Put a variable name and an equals sign before the context command so its output
    will be saved into a variable you can reference later, like this:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在上下文命令前放置一个变量名称和等号，以便其输出将保存到一个你稍后可以引用的变量中，像这样：
- en: '[PRE7]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Next, enter the variable name again, followed by a dot, followed by the data
    you want to drill into (`Account`, `Environment`, `Subscription`, or `Tenant`)
    to return all the available information for that object. For example, you could
    run the following:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，再次输入变量名称，后跟一个点号，再后跟你想深入查看的数据（`Account`、`Environment`、`Subscription` 或 `Tenant`），以返回该对象的所有可用信息。例如，你可以运行以下命令：
- en: '[PRE8]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**NOTE**'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*It can be tricky to remember what options you can use on a given object represented
    by a variable. Fortunately, PowerShell has autocomplete. Just type the variable
    name, followed by a dot, and then press TAB to show the first possible option.
    Keep pressing TAB to cycle through possible options. When you reach to the one
    you want, press ENTER to run it. Alternatively, you can use the* Get-Member *cmdlet
    to see all possible values.*'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '*记住在一个由变量表示的对象上可以使用的选项可能会有些棘手。幸运的是，PowerShell 具有自动补全功能。只需键入变量名称，后跟一个点号，然后按
    TAB 键显示第一个可选项。继续按 TAB 键可以循环查看所有可能的选项。当你找到你想要的选项时，按 ENTER 键执行它。或者，你可以使用* Get-Member
    *cmdlet 查看所有可能的值。*'
- en: 'Run this cmdlet to show which users have ARM access and their privileges:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此 cmdlet 查看哪些用户具有 ARM 访问权限及其权限：
- en: '[PRE9]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To view all possible ARM roles, run the following:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看所有可能的 ARM 角色，请运行以下命令：
- en: '[PRE10]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If you’re using the Azure command line tools, run
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用 Azure 命令行工具，请运行
- en: '[PRE11]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: to see the current subscription. Although the CLI won’t display the current
    user account, it should show the subscription ID and name, as well as the environment
    and the tenant ID, if available. It should also show whether you’re connected
    using a certificate.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 查看当前订阅。尽管 CLI 不会显示当前用户帐户，但它应该会显示订阅 ID 和名称，以及环境和租户 ID（如果可用）。它还应显示你是否通过证书连接。
- en: 'You can use the CLI in ARM mode to display accounts that have access:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 ARM 模式下使用 CLI 来显示具有访问权限的帐户：
- en: '[PRE12]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can also show all available roles, like so:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以显示所有可用的角色，如下所示：
- en: '[PRE13]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '***Viewing Resource Groups***'
  id: totrans-135
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***查看资源组***'
- en: '*Resource groups* were added in ARM as a way to assemble a set of services
    into one package for easier management. For example, a website might consist of
    the web pages themselves, along with a SQL database to store user profiles, and
    an instance of Application Insights (a telemetry service for applications). In
    ASM, each of these items was managed separately, and it was often difficult to
    tell which services were related. Resource groups allow you to monitor all related
    services, see how much a given deployment costs to run, assign permissions to
    all services in a group at once, and even delete everything in a group in one
    place. (Resource groups also help with reconnaissance by giving you a jumpstart
    in understanding these relationships and evaluating the potential importance of
    a given service.)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '*资源组*是在 ARM 中添加的一种方式，用于将一组服务组合成一个包，以便于管理。例如，一个网站可能包括网页本身、用于存储用户资料的 SQL 数据库，以及一个
    Application Insights 实例（应用程序的遥测服务）。在 ASM 中，每个项目都是单独管理的，通常很难判断哪些服务是相关的。资源组允许你监控所有相关服务，查看给定部署的运行成本，批量分配权限给组中的所有服务，甚至在一个地方删除组中的所有内容。（资源组还通过帮助你理解这些关系并评估给定服务的重要性，为侦察提供了一个起点。）'
- en: Resource groups pose two challenges, however. The first is that some developers
    might not understand how to use resource groups and simply create a new group
    for each service, even for related ones. Because resource groups are a management
    convenience, and not a security boundary, nothing prevents services in different
    groups from interacting with one another.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，资源组存在两个挑战。第一个是一些开发人员可能不理解如何使用资源组，干脆为每个服务创建一个新的组，即使是相关的服务。由于资源组只是管理上的便利，而非安全边界，因此没有任何措施阻止不同组中的服务相互交互。
- en: Second, when you’re investigating a given service, the ARM PowerShell cmdlets
    usually have the resource group as a required parameter, as does Azure CLI when
    in ARM mode. This can be frustrating, because you may know the name of a resource
    but not in which resource group it resides. To determine this, you’ll need to
    use separate commands to enumerate the groups.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 第二，当你调查某个服务时，ARM PowerShell cmdlet通常会要求提供资源组作为必需参数，Azure CLI在ARM模式下也是如此。这可能会令人沮丧，因为你可能知道某个资源的名称，但不知道它位于哪个资源组。要确定这一点，你需要使用单独的命令来枚举各个资源组。
- en: 'To view the resource groups for a subscription using PowerShell, run the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用PowerShell查看订阅中的资源组，请运行以下命令：
- en: '[PRE14]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'In Azure CLI, run this:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure CLI中，运行以下命令：
- en: '[PRE15]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Each command will show all resource groups in a subscription, but not which
    services are in these groups. It can be tedious running the enumeration commands
    on a subscription with dozens or even hundreds of groups. Fortunately, you can
    list all ARM resources in a subscription, along with their resource group and
    their service type, at a high level. To get the resource list in ARM PowerShell,
    run the following:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 每个命令会显示订阅中的所有资源组，但不会显示这些组中有哪些服务。在有数十个甚至上百个组的订阅上运行枚举命令可能会很繁琐。幸运的是，你可以在高层次上列出订阅中的所有ARM资源，以及它们的资源组和服务类型。要在ARM
    PowerShell中获取资源列表，请运行以下命令：
- en: '[PRE16]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'In Azure CLI, use this:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure CLI中，使用以下命令：
- en: '[PRE17]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The output of these commands can get pretty ugly, so put it in a spreadsheet
    and use it as a guide to make sure your investigation doesn’t miss anything.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令的输出可能会很难看，所以最好将其放入电子表格中，并作为指南，确保你的调查没有遗漏任何内容。
- en: '***Viewing a Subscription’s App Services (Web Apps)***'
  id: totrans-148
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***查看订阅的应用服务（Web应用）***'
- en: When a company decides to move some of its services to the cloud, its website
    is often an easy first step. After all, most or all of that data is already public,
    so the confidentiality concerns often associated with storing data on remote servers
    are greatly reduced. Additionally, websites can take advantage of the auto-scaling
    features of Platform as a Service (PaaS) cloud providers to increase capacity
    during busy times such as new product launches and holiday shopping.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 当公司决定将部分服务迁移到云时，网站通常是一个容易的第一步。毕竟，大部分甚至所有这些数据已经是公开的，因此与将数据存储在远程服务器上通常相关的机密性问题大大减少。此外，网站还可以利用平台即服务（PaaS）云提供商的自动扩展功能，在忙碌的时段（如新产品发布和假日购物）期间增加容量。
- en: Microsoft initially called these sites *Web Apps* in the old management interface,
    but has moved their management entirely to the new portal and renamed them *App
    Services*. The new portal also offers a gallery of pre-built web service templates—everything
    from blogs to e-commerce platforms. One benefit of this migration is that even
    apps deployed under the ASM model are viewable from the ARM PowerShell cmdlets
    and the ARM mode of the CLI.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 微软最初在旧管理界面中将这些站点称为*Web应用*，但已经将它们的管理完全迁移到新的门户并重新命名为*应用服务*。新的门户还提供了一个预构建的Web服务模板库——从博客到电子商务平台一应俱全。迁移的一个好处是，即使是基于ASM模型部署的应用，也可以通过ARM
    PowerShell cmdlet和CLI的ARM模式进行查看。
- en: '**Using PowerShell**'
  id: totrans-151
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用PowerShell**'
- en: To view the Web Apps in a subscription using PowerShell, run Get-AzureRmWebApp
    with no parameters. The legacy `Get-AzureWebsite` will return the site list. Both
    commands allow you to pass the name of a site as a parameter to get additional
    details. Try the ASM version of the command because it returns details that the
    ARM version leaves out on classic websites. [Listing 3-3](part0012.html#ch03list3)
    shows an example of this output.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用PowerShell查看订阅中的Web应用，请运行没有参数的Get-AzureRmWebApp命令。旧版的`Get-AzureWebsite`将返回站点列表。这两个命令都允许你传递站点名称作为参数，以获取更多细节。尝试使用ASM版本的命令，因为它返回了ARM版本在经典网站上遗漏的细节。[列出3-3](part0012.html#ch03list3)展示了这种输出的示例。
- en: '[PRE18]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '*Listing 3-3: Output from the* Get-AzureWebsite *PowerShell cmdlet*'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '*列出3-3：来自* Get-AzureWebsite *PowerShell cmdlet的输出*'
- en: After retrieving the names of any Azure websites and their URLs ➊, pass the
    name of a site you are interested in to `Get-AzureWebsite` using `-Name` ➋. Some
    of the details that `Get-AzureWebsite` provides but that `Get-AzureRmWebApp` omits
    are the version of .NET ➌ and PHP ➍ the site is running, as well as the username
    ➎ and password ➏ of the account used to publish site content. These values are
    clearly useful to an attacker because they can make it possible to look for known
    PHP and .NET exploits based on version. They also provide the ability to modify
    site content.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取任何 Azure 网站及其 URL 的名称之后➊，将你感兴趣的站点名称传递给`Get-AzureWebsite`，并使用`-Name` ➋。`Get-AzureWebsite`
    提供的一些详细信息，而 `Get-AzureRmWebApp` 则省略了，包括站点运行的 .NET 版本 ➌ 和 PHP 版本 ➍，以及用于发布站点内容的账户的用户名
    ➎ 和密码 ➏。这些信息对攻击者极具价值，因为它们可以帮助寻找已知的 PHP 和 .NET 漏洞，具体根据版本来判断。同时，它们还可以修改站点内容。
- en: '**Using the CLI in ASM**'
  id: totrans-156
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**在 ASM 中使用 CLI**'
- en: You can retrieve similar data using the CLI. In ASM mode, use the command azure
    site list to see a listing of all subscription websites, and then run
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 CLI 获取类似的数据。在 ASM 模式下，使用命令 azure site list 查看所有订阅网站的列表，然后运行
- en: '[PRE19]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: to see a given site’s details. The detailed output isn’t as thorough as the
    PowerShell cmdlet; instead, many of the details get their own command, such as
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 查看给定站点的详细信息。与 PowerShell cmdlet 不同，详细输出并不那么全面，许多细节有自己单独的命令，例如
- en: '[PRE20]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: To see all of these options, run azure help site.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看所有这些选项，请运行 azure help site。
- en: '**Using the CLI in ARM**'
  id: totrans-162
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**在 ARM 中使用 CLI**'
- en: 'In ARM mode, the CLI requires you to provide the resource group of the website
    in ARM mode, even if you simply want to enumerate a list of sites. Start with
    a list of resource groups, using azure group list. Then, once you have the list
    of groups, run azure webapp list "group_name" for each resource group. From there,
    run the following to see detailed information:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ARM 模式下，CLI 要求你提供网站所在的资源组，即使你只是想列举站点列表。首先使用 azure group list 获取资源组列表。然后，在获得组列表后，针对每个资源组运行
    azure webapp list "group_name"。接下来，运行以下命令查看详细信息：
- en: '[PRE21]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: As with the ASM CLI, some details are hidden behind additional subcommands.
    To see these options, enter azure help webapp.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 与 ASM CLI 一样，一些细节隐藏在附加的子命令后面。要查看这些选项，请输入 azure help webapp。
- en: '***Gathering Information on Virtual Machines***'
  id: totrans-166
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***收集虚拟机信息***'
- en: As the quintessential *Infrastructure as a Service (IaaS)* role, virtual machines
    (VMs) are one of the most frequently encountered services in an Azure subscription.
    In terms of management, Azure actually breaks down VMs into several components,
    which are all configured separately with different commands. I’ll discuss how
    to get information about the VM container itself and then show you how to get
    at the VM’s hard disk image and network settings.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 作为典型的 *基础设施即服务（IaaS）* 角色，虚拟机（VM）是 Azure 订阅中最常见的服务之一。在管理方面，Azure 实际上将虚拟机分解为多个组件，这些组件都通过不同的命令单独配置。我将讨论如何获取虚拟机容器本身的信息，然后向你展示如何获取虚拟机的硬盘镜像和网络设置。
- en: '**Viewing a List of VMs**'
  id: totrans-168
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**查看虚拟机列表**'
- en: 'Unlike App Services, virtual machines are segregated by service model, with
    classic VMs only appearing in the ASM cmdlets and ARM VMs appearing exclusively
    in the ARM cmdlets. Running `Get-AzureVM` in PowerShell returns a list of ASM-based
    VMs, including each VM’s service name, name, and status. For a detailed status
    report for a VM, use the service name parameter of the cmdlet:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 与应用服务不同，虚拟机按服务模型进行隔离，经典虚拟机仅出现在 ASM cmdlet 中，而 ARM 虚拟机仅出现在 ARM cmdlet 中。在 PowerShell
    中运行`Get-AzureVM`会返回基于 ASM 的虚拟机列表，其中包括每个虚拟机的服务名称、名称和状态。要查看虚拟机的详细状态报告，请使用 cmdlet
    的服务名称参数：
- en: '[PRE22]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This report should include information like the VM’s IP address, DNS address,
    power state, and the “size” of the VM.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 此报告应包括虚拟机的 IP 地址、DNS 地址、电源状态和虚拟机的“大小”等信息。
- en: '**WHAT VM PRICING TIERS REVEAL ABOUT TARGETS**'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**虚拟机定价层揭示的目标信息**'
- en: VM sizes map to a particular set of hardware allowances for the VM and a monthly
    cost. For example, an A0 VM has 768MB of memory, 20GB of hard drive space, one
    CPU core, and one network interface, whereas a D14 VM has 112GB of memory, 800GB
    of SSD-based storage, 16 CPU cores, and up to eight network interfaces. The specifications
    for each tier can be found at *[https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-windows-sizes/](https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-windows-sizes/)*,
    and current pricing is available from *[https://azure.microsoft.com/en-us/pricing/details/cloud-services/](https://azure.microsoft.com/en-us/pricing/details/cloud-services/)*.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机大小映射到特定的一组硬件配置和每月费用。例如，A0 虚拟机有 768MB 内存，20GB 硬盘空间，1 个 CPU 核心，和 1 个网络接口，而
    D14 虚拟机有 112GB 内存，800GB SSD 存储，16 个 CPU 核心，和最多 8 个网络接口。每个层级的规格可以在 *[https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-windows-sizes/](https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-windows-sizes/)*
    上找到，当前的定价可以通过 *[https://azure.microsoft.com/en-us/pricing/details/cloud-services/](https://azure.microsoft.com/en-us/pricing/details/cloud-services/)*
    查看。
- en: These details can be critical because they provide some indication of the importance,
    workload, or value of the VM. Test VMs are often in the A0–A3 range, whereas production
    VMs are often in the higher-level D tier. Also, specialty tiers such as N provide
    dedicated hardware-based Nvidia graphics processors (GPUs) directly to the VM.
    These are used for computationally intensive work, such as rendering animations
    (or, for us penetration testers, cracking passwords).
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这些详细信息可能至关重要，因为它们提供了虚拟机的重要性、工作负载或价值的一些指示。测试虚拟机通常在 A0-A3 范围内，而生产虚拟机通常位于更高的 D
    层级。此外，像 N 这样的特殊层级提供专用的硬件 Nvidia 图形处理单元（GPU），直接供虚拟机使用。这些通常用于计算密集型工作，例如渲染动画（或者对于我们渗透测试人员来说，用于破解密码）。
- en: '**Viewing a List of ARM VMs in PowerShell**'
  id: totrans-175
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**在 PowerShell 中查看 ARM 虚拟机列表**'
- en: To get a list of ARM VMs in PowerShell, use the `Get-AzureRmVM` cmdlet with
    no parameters. This should return each VM in the subscription, along with its
    resource group’s name, region, and size.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 PowerShell 中获取 ARM 虚拟机的列表，使用没有参数的 `Get-AzureRmVM` cmdlet。这应该会返回订阅中的每个虚拟机，以及其资源组名称、区域和大小。
- en: '[Listing 3-4](part0012.html#ch03list4) shows how to get the details of an ARM
    VM in PowerShell.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 3-4](part0012.html#ch03list4) 显示了如何在 PowerShell 中获取 ARM 虚拟机的详细信息。'
- en: '[PRE23]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '*Listing 3-4: Obtaining details for an ARM VM in PowerShell*'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 3-4：在 PowerShell 中获取 ARM 虚拟机的详细信息*'
- en: The first command gets the details of the VM and saves them into the variable
    `$vm` ➊. Next, we dump the information stored in the variable ➋ and show the VM
    size ➌. This information is available in the initial VM enumeration from `Get-AzureRmVM`,
    but it’s nice to have it inline with the rest of the details of the specific VM
    when reading the output later.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令获取虚拟机的详细信息并将其保存到变量 `$vm` ➊ 中。接下来，我们转储变量中的信息 ➋ 并显示虚拟机大小 ➌。这些信息可以在初始虚拟机枚举中通过
    `Get-AzureRmVM` 获取，但将其与虚拟机的其他详细信息一起输出时，查看时会更加方便。
- en: Now we dump the OS profile block ➍, which includes the administrator’s username
    (sadly, the password is usually omitted). Finally, we display the image reference
    information from the storage profile ➎. This tells us the base image of the VM,
    which often includes version details—in this case, Ubuntu Server version 16.04
    Long Term Support (LTS) edition.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们转储操作系统配置块 ➍，其中包括管理员的用户名（遗憾的是，密码通常会被省略）。最后，我们显示存储配置文件中的镜像参考信息 ➎。这告诉我们虚拟机的基础镜像，通常包含版本信息——在本例中是
    Ubuntu Server 16.04 长期支持（LTS）版本。
- en: '**Collecting Information with the CLI**'
  id: totrans-182
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**通过 CLI 收集信息**'
- en: To collect this information from the CLI in ASM mode, use azure vm list to enumerate
    the classic VMs in the subscription and then use azure vm show "name" on each
    VM to see its details.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 CLI 中收集 ASM 模式的信息，使用 `azure vm list` 列举订阅中的经典虚拟机，然后使用 `azure vm show "name"`
    查看每个虚拟机的详细信息。
- en: 'Using the CLI in ARM mode is almost identical for VMs—the enumeration command
    is also `azure vm list`. The only change is that, in order to show the details
    of a VM, ARM mode also requires the resource group:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ARM 模式下使用 CLI 对虚拟机（VM）的操作几乎与其他方式相同——列举命令也是`azure vm list`。唯一的区别是，在显示虚拟机详细信息时，ARM
    模式还需要提供资源组：
- en: '[PRE24]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Unlike PowerShell, this will display all the details at once, including the
    username, VM size, and OS version.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 与 PowerShell 不同，这将一次性显示所有详细信息，包括用户名、虚拟机大小和操作系统版本。
- en: '***Finding Storage Accounts and Storage Account Keys***'
  id: totrans-187
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***查找存储账户和存储账户密钥***'
- en: Azure Storage is the primary place to store data in Microsoft’s cloud. Storage
    accounts offer four types of data storage, and any given storage account can have
    any or all of these types in use at a time. *Blob storage* is used to hold unstructured
    data, including files and large binary steams. *File storage* is just like blob
    storage, except that it offers direct Server Message Block (SMB) access to files.
    (This is convenient because blob storage has traditionally required the use of
    either complicated APIs or third-party tools to access its contents. I’ll cover
    how to use these tools to extract data in [Chapter 4](part0013.html#ch04).) *Table
    storage* is a scalable, NoSQL tabular dataset container. Finally, *queues* hold
    transient messages for ordered, asynchronous processing.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 存储是微软云中存储数据的主要场所。存储账户提供四种类型的数据存储，任何给定的存储账户都可以同时使用这些类型中的任何一种或全部。*Blob 存储*用于存储非结构化数据，包括文件和大规模二进制流。*文件存储*与
    Blob 存储类似，不同之处在于它提供直接的服务器消息块（SMB）文件访问。（这很方便，因为 Blob 存储传统上需要使用复杂的 API 或第三方工具来访问其内容。有关如何使用这些工具提取数据，我将在[第
    4 章](part0013.html#ch04)中讲解。）*表格存储*是一个可扩展的 NoSQL 表格数据集容器。最后，*队列*用于存储用于有序、异步处理的瞬态消息。
- en: Many other services rely on storage accounts to host their underlying data,
    including virtual machines. The Virtual Hard Disk (VHD) files used in VMs are
    stored here as blobs. Other services, such as Azure Websites, Machine Learning,
    and Activity Log, can use a storage account to hold their log files.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 许多其他服务依赖存储账户来托管其基础数据，包括虚拟机。虚拟机中使用的虚拟硬盘（VHD）文件作为块存储在这里。其他服务，如 Azure 网站、机器学习和活动日志，也可以使用存储账户来存储其日志文件。
- en: 'Your reconnaissance should answer two main questions about storage accounts:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 你的侦察任务应回答有关存储账户的两个主要问题：
- en: Which storage accounts are available in the target subscription?
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标订阅中有哪些存储账户？
- en: What are their keys?
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们的密钥是什么？
- en: Answering the first question is straightforward, as long as you remember that
    classic (ASM-based) storage accounts and ARM-based storage accounts are completely
    separate in Azure, so remember to look for both types. To check for classic storage
    accounts in PowerShell, use the `Get-AzureStorageAccount` cmdlet without any parameters
    to list all ASM storage accounts in the subscription. The equivalent command in
    Azure CLI is `azure storage account list`. Both commands will show the storage
    account name, its type (whether its data is redundant in one datacenter, one region,
    or multiple regions), and its location (the datacenter where the data is being
    stored, such as Central US). The PowerShell command also provides some additional
    details, such as the URLs used for the account, but this information can be obtained
    from the CLI with the `azure storage account show "`account_name`"` command.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个问题的答案很简单，只要记住经典（基于 ASM）存储账户和基于 ARM 的存储账户在 Azure 中是完全独立的，因此要记得同时查找这两种类型的账户。要在
    PowerShell 中检查经典存储账户，使用`Get-AzureStorageAccount` cmdlet，不带任何参数来列出订阅中的所有 ASM 存储账户。Azure
    CLI 中等效的命令是`azure storage account list`。这两个命令都会显示存储账户的名称、类型（它的数据是冗余存储在一个数据中心、一个区域还是多个区域）以及位置（数据存储的具体数据中心，例如“美国中部”）。PowerShell
    命令还提供一些额外的细节，如账户使用的 URL，但这些信息也可以通过 CLI 使用`azure storage account show "`account_name`"`命令获取。
- en: Checking for ARM storage accounts is equally easy. In the CLI, the same commands
    you use for ASM work for ARM (once the CLI mode is switched). For PowerShell,
    the command is `Get-AzureRmStorageAccount`.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 ARM 存储账户同样简单。在 CLI 中，你用于 ASM 的相同命令也适用于 ARM（只需切换 CLI 模式）。对于 PowerShell，命令是`Get-AzureRmStorageAccount`。
- en: 'Next, you’ll need the storage account keys to access data within Azure Storage.
    Azure assigns two base64-encoded, 64-byte keys to each storage account. They’re
    labeled “primary” and “secondary,” but you can use either. Having two keys simultaneously
    allows administrators to rotate keys without bringing down their service by following
    these steps:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要存储账户的密钥才能访问 Azure 存储中的数据。Azure 为每个存储账户分配两个 base64 编码的 64 字节密钥。它们分别标记为“主密钥”和“辅助密钥”，但你可以使用任何一个。拥有两个密钥的好处是管理员可以通过以下步骤轮换密钥，而不会中断服务：
- en: Updating their service’s configuration to go from using the primary to the secondary
    key
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新服务的配置，从使用主密钥切换到辅助密钥
- en: Using the Azure portal to generate a new primary key
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Azure 门户生成新的主密钥
- en: Updating their service to switch from the secondary to the new primary key
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新服务，将其从辅助密钥切换到新的主密钥
- en: You won’t have too much trouble obtaining these keys. Because the same key (or
    same two keys) is used for every service that accesses that storage account, administrators
    need a way to easily retrieve the key again and again, each time they add or update
    a service. Additionally, because the key is used everywhere and doesn’t expire
    unless a new key is generated, most administrators never change it, since following
    the preceding three steps for multiple services can be tedious.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 你不会遇到太多困难来获取这些密钥。由于每个访问该存储帐户的服务都使用相同的密钥（或相同的两把密钥），管理员需要一种简单的方式来一次又一次地检索密钥，每次他们添加或更新服务时。此外，由于密钥在任何地方都被使用，并且除非生成新密钥，否则密钥不会过期，因此大多数管理员从不更改它，因为对多个服务执行上述三个步骤可能会很繁琐。
- en: '**DEFENDER’S TIP**'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**DEFENDER’S TIP（DEFENDER 提示）**'
- en: Knowing how to properly reset a leaked or otherwise compromised credential is
    critical to a speedy remediation if a security incident arises. Understanding
    authentication dependencies is equally important in order to minimize disruptions
    that could result from credential changes. It is therefore wise to practice resetting
    or “rolling” any type of credential used by your organization regularly, and to
    make optimizations as needed, so that you can reset credentials promptly and accurately
    during a real attack. Storage keys or SSL private keys are no different—practice
    switching between primary and secondary keys in all of your services during development
    and in production to make sure you’ve properly documented every place where the
    keys need to be replaced.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 了解如何正确重置泄露或其他形式泄露的凭据，对于在安全事件发生时迅速进行补救至关重要。理解认证依赖关系同样重要，以便最大程度减少凭据更改可能引起的中断。因此，定期练习重置或“滚动”组织使用的任何类型凭据是明智的做法，并根据需要进行优化，以便在真实攻击中能够及时准确地重置凭据。存储密钥或
    SSL 私钥也不例外——在开发和生产过程中，练习在所有服务中切换主密钥和次密钥，以确保你已经妥善记录了每个需要替换密钥的地方。
- en: Because the keys need to be retrievable, Azure exposes them via the portal,
    PowerShell, and CLI. To get the both the primary and secondary keys for an ASM
    storage account in PowerShell, run
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 由于密钥需要能够检索，Azure 通过门户、PowerShell 和 CLI 提供它们。要在 PowerShell 中获取 ASM 存储帐户的主密钥和次密钥，请运行
- en: '[PRE25]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'To do the same in ARM PowerShell, use this:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 ARM PowerShell 中执行相同操作，请使用以下命令：
- en: '[PRE26]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'In the CLI, getting the ASM keys is easy; just execute the following:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CLI 中，获取 ASM 密钥很简单；只需执行以下命令：
- en: '[PRE27]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'For some reason, the ARM CLI command to get the keys behaves differently from
    all other ARM CLI commands. It requires the resource group name of the storage
    account, but it doesn’t accept the group name as a parameter on the command line;
    therefore, as in ASM mode, you’ll need to run the following command:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 出于某种原因，获取密钥的 ARM CLI 命令与所有其他 ARM CLI 命令行为不同。它需要存储帐户的资源组名称，但命令行不接受该组名称作为参数；因此，如同
    ASM 模式一样，你需要运行以下命令：
- en: '[PRE28]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: As soon as you run this command, you’ll be prompted to provide the resource
    group name. Enter it at the prompt and then the keys should be displayed.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此命令后，系统会提示你提供资源组名称。请输入该名称，密钥随后将显示出来。
- en: '**Gathering Information on Networking**'
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**收集网络信息**'
- en: 'Networking is one of the more complex parts of Azure because it involves IP
    address assignments, firewall rules, virtual networks, and virtual private networks
    (VPNs). It can even involve a dedicated circuit between a business and Azure,
    known as an ExpressRoute. An ExpressRoute connection is essentially a dedicated
    wide area network (WAN) link that allows a company to treat resources running
    in Azure as a part of its internal corporate network. During this phase of the
    operation, I focus on simply enumerating the commonly used networking features:
    network interfaces (IP addresses), endpoints (ports), and network security groups
    (firewalls). I cover more advanced topics in [Chapter 6](part0015.html#ch06).'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 网络是 Azure 中较为复杂的部分之一，因为它涉及到 IP 地址分配、防火墙规则、虚拟网络以及虚拟私人网络（VPN）。它甚至可能涉及到企业与 Azure
    之间的专用线路，这被称为 ExpressRoute。ExpressRoute 连接本质上是一个专用的广域网（WAN）连接，允许公司将 Azure 中运行的资源视为其内部企业网络的一部分。在这一阶段的操作中，我专注于简单列举常用的网络功能：网络接口（IP
    地址）、端点（端口）和网络安全组（防火墙）。更高级的主题将在[第六章](part0015.html#ch06)中详细介绍。
- en: '***Network Interfaces***'
  id: totrans-213
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***网络接口***'
- en: '*Network interfaces* are the virtual network cards associated with ARM-based
    virtual machines. In classic VMs, they are just called *IP addresses*. Each VM
    usually has two IP addresses—an internal, non-internet-facing address for connecting
    to other services in the subscription, and an internet-facing public IP or virtual
    IP address. Obtaining these IPs directly from Azure is very beneficial for a penetration
    tester because having them allows for port scanning and other directed attacks
    against virtual machines, without having to scan an entire address range looking
    for devices. It also ensures that the scans stay in scope, because public IP addresses
    in Azure’s space can be dynamically reassigned to other Azure customers.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '*网络接口* 是与基于 ARM 的虚拟机关联的虚拟网卡。在经典虚拟机中，它们仅被称为 *IP 地址*。每个虚拟机通常有两个 IP 地址——一个是内部的、非面向互联网的地址，用于连接订阅中的其他服务，另一个是面向互联网的公共
    IP 或虚拟 IP 地址。从 Azure 直接获取这些 IP 对渗透测试者非常有利，因为这样可以进行端口扫描和其他针对虚拟机的定向攻击，而不需要扫描整个地址范围寻找设备。它还确保了扫描范围的准确性，因为
    Azure 空间中的公共 IP 地址可能会动态重新分配给其他 Azure 客户。'
- en: '**NOTE**'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*If you already have Azure portal or API access, why would you need to perform
    external scans against the IP addresses of VMs? During a penetration test, customers
    usually want a number of attack vectors examined, from insider threats to internet-based
    “script kiddies.” Although an insider or nation state may be able to breach your
    client’s network and gain portal access, lesser-skilled attackers probably cannot,
    so it’s important to perform more traditional security assessments of anything
    exposed to the internet. Additionally, Azure does not offer console-type access
    to VMs from the portal. All access to the VM must be made through its network
    interface using remote management services like Remote Desktop Protocol or SSH.*'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你已经拥有 Azure 门户或 API 访问权限，为什么还需要对虚拟机的 IP 地址进行外部扫描？在渗透测试中，客户通常希望检查多个攻击向量，从内部威胁到基于互联网的“脚本小子”。虽然内部人员或国家级攻击者可能能够突破客户的网络并获得门户访问权限，但技能较低的攻击者可能做不到，因此，评估暴露在互联网上的任何内容进行传统的安全评估非常重要。此外，Azure
    不提供从门户对虚拟机进行控制台类型的访问。对虚拟机的所有访问必须通过其网络接口使用远程管理服务，如远程桌面协议（RDP）或 SSH。*'
- en: '**DEFENDER’S TIP**'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '**DEFENDER’S TIP**'
- en: All services on the internet are subject to near-constant port and vulnerability
    scanning, brute-force password guessing, and other attacks. There are even websites
    like Shodan (*[https://www.shodan.io/](https://www.shodan.io/)*) that index port
    scan data and make it publicly searchable. Whenever possible, try to mitigate
    these attacks by turning off management services not in use, restricting access
    to them through IP restrictions, and keeping VMs on private VLANs, shielded from
    the internet.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上的所有服务都面临着几乎不断的端口和漏洞扫描、暴力破解密码攻击以及其他类型的攻击。甚至像 Shodan (*[https://www.shodan.io/](https://www.shodan.io/))
    这样的站点，会索引端口扫描数据并使其可以公开搜索。尽可能地，通过关闭未使用的管理服务、通过 IP 限制访问这些服务，以及将虚拟机放置在私有 VLAN 中，避免其暴露在互联网上，可以帮助减轻这些攻击。
- en: '**Listing Internal IPs Used by Classic VMs**'
  id: totrans-219
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**列出经典虚拟机使用的内部 IP**'
- en: To obtain a list of internal IPs used by classic VMs, simply run Get-AzureVM
    or azure vm show. The internal IP should be included in the ASM output of both
    of these commands. Conversely, ARM’s CLI `vm show` command will show only the
    public IP by default. [Table 3-2](part0012.html#ch03tab2) describes which IPs
    are displayed by the VM commands.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取经典虚拟机使用的内部 IP 列表，只需运行 Get-AzureVM 或 azure vm show 命令。内部 IP 应该包含在这两个命令的 ASM
    输出中。相反，ARM 的 CLI `vm show` 命令默认只显示公共 IP。[表 3-2](part0012.html#ch03tab2) 描述了虚拟机命令显示的
    IP。
- en: '**Table 3-2:** IP Addresses Displayed by Tool'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 3-2：** 工具显示的 IP 地址'
- en: '| **Command (mode)** | **Internal IP** | **Public IP** |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| **命令（模式）** | **内部 IP** | **公共 IP** |'
- en: '| --- | --- | --- |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `azure vm show` (ASM) | Shown | Shown |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| `azure vm show` (ASM) | 显示 | 显示 |'
- en: '| `azure vm show` (ARM) | Not shown | Shown |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| `azure vm show` (ARM) | 未显示 | 显示 |'
- en: '| `Get-AzureVM` (ASM) | Shown | Not shown |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| `Get-AzureVM` (ASM) | 显示 | 未显示 |'
- en: '| `Get-AzureRmVM` (ARM) | Not shown | Not shown |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| `Get-AzureRmVM` (ARM) | 未显示 | 未显示 |'
- en: 'For ASM VMs, the CLI’s `azure vm show` command is a one-stop shop for obtaining
    IP addresses. To use the CLI in ARM mode to show a list of all network interfaces,
    enter azure network nic list. This should display the interface’s name, resource
    group, MAC address, and location. Here’s how to use it to display details for
    a specific NIC:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 ASM 虚拟机，CLI 的 `azure vm show` 命令是获取 IP 地址的一站式工具。要在 ARM 模式下使用 CLI 显示所有网络接口的列表，输入
    `azure network nic list`。这将显示接口的名称、资源组、MAC 地址和位置。以下是如何使用它显示特定 NIC 的详细信息：
- en: '[PRE29]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The output should also display details such as the IP address, whether it is
    static or dynamic, and its associated VM or service.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 输出还应显示诸如 IP 地址、是否为静态或动态分配、以及关联的虚拟机或服务等详细信息。
- en: In order to get dynamically assigned public IP information for a given VM from
    the ASM PowerShell cmdlets, you will need to list the VM’s endpoints, as discussed
    in the next section. That said, if the subscription has any reserved (static)
    public IP addresses for ASM resources, the command `Get-AzureReservedIP` with
    no switches should list them, as well as the service to which they are tied.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从 ASM PowerShell cmdlet 获取指定虚拟机的动态分配公共 IP 信息，你需要列出虚拟机的端点，具体内容将在下一节中讨论。也就是说，如果订阅中有任何为
    ASM 资源保留的（静态）公共 IP 地址，使用 `Get-AzureReservedIP` 命令（没有开关）应该能列出它们，以及它们绑定的服务。
- en: And finally, to view IPs for ARM resources in PowerShell, use `Get-AzureRmNetworkInterface`
    to display all the NICs in use in the subscription for ARM resources, though this
    will display only private IPs. To view the public IPs, use the `Get-AzureRmPublicIpAddress`
    cmdlet, which should show any ARM resources using a public IP, the IP address,
    and whether the address is dynamically or statically assigned.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，要查看 ARM 资源的 IP 地址，可以使用 `Get-AzureRmNetworkInterface` 来显示订阅中所有正在使用的 NIC，这将只显示私有
    IP 地址。要查看公共 IP 地址，使用 `Get-AzureRmPublicIpAddress` cmdlet，它将显示使用公共 IP 的任何 ARM 资源、IP
    地址，以及该地址是动态分配还是静态分配。
- en: '**Querying Endpoints with Azure Management Tools**'
  id: totrans-233
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用 Azure 管理工具查询端点**'
- en: Once you know the IP addresses within a subscription, you should determine the
    ports available at those IPs. In classic Azure VMs, a network port is referred
    to as an *endpoint*—a service running on a host. For ARM VMs, port management
    has been rolled into firewall management, but ASM maintains them separately. Let’s
    look at how to enumerate ASM endpoints.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦知道了订阅中的 IP 地址，你应该确定这些 IP 地址上可用的端口。在经典的 Azure 虚拟机中，网络端口被称为 *端点* —— 即在主机上运行的服务。对于
    ARM 虚拟机，端口管理已整合到防火墙管理中，但 ASM 仍然将它们分开管理。我们来看看如何列举 ASM 端点。
- en: 'Although you could run a port scanner such as Nmap to gather this information,
    doing so has several drawbacks:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以使用端口扫描器（如 Nmap）来收集这些信息，但这样做有几个缺点：
- en: ASM-based VMs put Remote Desktop Protocol (RDP) on random, high-numbered ports,
    so you’d need to scan all 65,535 ports to be sure you find the right ones.
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 ASM 的虚拟机会将远程桌面协议（RDP）放置在随机的高端口号上，因此你需要扫描所有 65,535 个端口，以确保找到正确的端口。
- en: Because the scan would take place over the internet, it would be considerably
    slower than similar scans on a local network.
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于扫描将通过互联网进行，它比在本地网络上进行类似的扫描要慢得多。
- en: A subscription could have dozens, or even hundreds, of hosts.
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个订阅可能有几十台，甚至上百台主机。
- en: You’d only find internet-facing ports allowed through the firewall, not any
    services that may be exposed only to other hosts in the subscription or within
    Azure.
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你只会找到允许通过防火墙的面向互联网的端口，而不会找到任何可能仅对订阅中的其他主机或 Azure 内部暴露的服务。
- en: For these reasons, it’s faster and more thorough to query the ports directly
    using Azure management tools. To query endpoints in PowerShell, use `Get-AzureEndpoint`,
    as shown in [Listing 3-5](part0012.html#ch03list5). You must run it for each classic
    VM and give it a PowerShell `IPersistentVM` object instead of the name of a virtual
    machine. The `Get-AzureVM` cmdlet returns an object of this type.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些原因，直接使用 Azure 管理工具查询端口更快、更彻底。要在 PowerShell 中查询端点，使用 `Get-AzureEndpoint`，如
    [清单 3-5](part0012.html#ch03list5) 所示。你必须对每个经典虚拟机运行此命令，并传递一个 PowerShell `IPersistentVM`
    对象，而不是虚拟机的名称。`Get-AzureVM` cmdlet 返回的就是这种类型的对象。
- en: '[PRE30]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '*Listing 3-5: Obtaining endpoints for an ASM VM in PowerShell*'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 3-5：在 PowerShell 中获取 ASM 虚拟机的端点*'
- en: At ➊, we obtain a VM object using the VM’s service name and store it in a variable.
    Next, we pass that object into the `Get-AzureEndpoint` cmdlet ➋, which should
    return the port the server is listening on ➌, the name of the endpoint ➍ (often
    the name of the service being used, such as SSH, RDP, or HTTP), the port exposed
    to the internet that is forwarded to the local port ➎, and the endpoint’s virtual
    IP address ➏. The VIP is the public IP address of the VM.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在➊，我们使用虚拟机的服务名称获取虚拟机对象，并将其存储在一个变量中。接下来，我们将该对象传递给`Get-AzureEndpoint` cmdlet ➋，它应该返回服务器监听的端口
    ➌、端点的名称 ➍（通常是所使用的服务名称，如SSH、RDP或HTTP）、暴露到互联网的端口（即转发到本地端口的端口） ➎，以及端点的虚拟IP地址 ➏。VIP是虚拟机的公共IP地址。
- en: 'The Azure CLI also allows you to list endpoints in ASM mode. To get a listing
    of endpoints with a particular VM name, run the following command:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: Azure CLI也允许你列出ASM模式下的端点。要获取具有特定虚拟机名称的端点列表，请运行以下命令：
- en: '[PRE31]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: You only need to run this command once for each VM to see all its endpoints.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需要为每个虚拟机运行此命令一次，以查看所有其端点。
- en: '***Obtaining Firewall Rules or Network Security Groups***'
  id: totrans-247
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***获取防火墙规则或网络安全组***'
- en: It can be really helpful to collect information on a VM’s network settings from
    Azure’s firewall rules because they dictate which ports for a given VM are accessible,
    and from where. These rules are separate from the VM’s operating system–based
    firewall and act like the port-forwarding settings on a router. Azure calls these
    firewall filters *Network Security Groups (NSG)* in ARM and *Network Security
    Groups (classic)* for ASM.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 从Azure的防火墙规则中收集虚拟机网络设置信息非常有帮助，因为这些规则决定了哪些端口对于特定虚拟机是可访问的，以及从哪里可访问。这些规则与虚拟机操作系统级别的防火墙是分开的，并且像路由器上的端口转发设置一样工作。Azure在ARM中称这些防火墙过滤器为*网络安全组（NSG）*，在ASM中称之为*经典网络安全组（NSG）*。
- en: '**Viewing ASM-based NSGs with PowerShell**'
  id: totrans-249
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用PowerShell查看基于ASM的NSG**'
- en: 'For various reasons, classic VMs often don’t use NSGs. Nevertheless, it’s worth
    knowing how to list both classic and ARM-based NSGs, because knowing whether a
    firewall is in place can help avoid unnecessary port scanning, and you might even
    report a lack of firewalls in your findings to your client. In PowerShell, you
    can list classic NSG names and locations with `Get-AzureNetworkSecurityGroup`
    and no arguments. To view the rules inside a specific classic NSG, use the following
    command:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 由于各种原因，经典虚拟机通常不使用NSG。然而，了解如何列出经典和基于ARM的NSG仍然是值得的，因为知道是否存在防火墙有助于避免不必要的端口扫描，甚至你可能会在报告中向客户报告防火墙缺失的情况。在PowerShell中，你可以通过不带任何参数的`Get-AzureNetworkSecurityGroup`命令列出经典NSG的名称和位置。要查看特定经典NSG中的规则，请使用以下命令：
- en: '[PRE32]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'To view the details of every classic NSG, run this:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看每个经典NSG的详细信息，请运行以下命令：
- en: '[PRE33]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Unfortunately, the output of this command won’t map the NSG back to a virtual
    machine. To do so, get the VM object for the target virtual machine and then run
    the following to display the NSG associated with that VM (you’ll see an error
    if the VM doesn’t use an NSG):'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，这个命令的输出不能将NSG映射回虚拟机。为了实现这一点，获取目标虚拟机的虚拟机对象，然后运行以下命令来显示与该虚拟机关联的NSG（如果虚拟机没有使用NSG，你将看到一个错误）：
- en: '[PRE34]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '**Viewing ASM-based NSGs with the CLI**'
  id: totrans-256
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用CLI查看基于ASM的NSG**'
- en: 'Azure CLI can also show classic NSG settings. To see all classic NSGs in ASM
    mode, run the following command:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: Azure CLI还可以显示经典NSG设置。要查看ASM模式下的所有经典NSG，请运行以下命令：
- en: '[PRE35]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'To see the rules in an NSG, run the following:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看NSG中的规则，请运行以下命令：
- en: '[PRE36]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: I have yet to find a way to map the association between an NSG and a virtual
    machine using the CLI.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 我还没有找到使用CLI映射NSG与虚拟机之间关联的方法。
- en: '**Viewing ARM-based NSGs with PowerShell**'
  id: totrans-262
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用PowerShell查看基于ARM的NSG**'
- en: Run Get-AzureRmNetworkSecurityGroup to view ARM-based NSGs with PowerShell.
    This should return every ARM NSG’s name, resource group, region, and rules. This
    includes rules defined by the subscription administrator as well as rules that
    Azure automatically creates, such as “Allow outbound traffic from all VMs to internet.”
    It can be helpful to see all these rules (after all, the removal of the “allow
    outbound traffic to the internet” rule could block your command-and-control traffic
    on a compromised VM), but if you prefer, you can see only the custom rules for
    a particular NSG with `Get-AzureRmNetworkSecurityRuleConfig`.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`Get-AzureRmNetworkSecurityGroup`命令以使用PowerShell查看基于ARM的NSG。这将返回每个ARM NSG的名称、资源组、区域和规则。这些规则包括订阅管理员定义的规则，以及Azure自动创建的规则，如“允许所有虚拟机向互联网发送出站流量”。查看这些规则很有帮助（毕竟，移除“允许向互联网发送出站流量”的规则可能会阻止你在被攻陷虚拟机上的指挥控制流量），但如果你更倾向于，你可以使用`Get-AzureRmNetworkSecurityRuleConfig`命令仅查看某个特定NSG的自定义规则。
- en: In order to use PowerShell to get the mapping of an ARM virtual machine to an
    ARM NSG, you’ll need to find the interface for the desired VM and then look up
    the NSG for that interface. You could nest all of the following commands into
    one single line, but to improve readability and avoid mistakes, I usually break
    it into a series of commands, as shown in [Listing 3-6](part0012.html#ch03list6).
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用 PowerShell 获取 ARM 虚拟机与 ARM NSG 的映射，您需要查找所需虚拟机的接口，然后查找该接口的 NSG。您可以将以下所有命令嵌套成一行，但为了提高可读性并避免错误，我通常将其分解成一系列命令，如[清单
    3-6](part0012.html#ch03list6)所示。
- en: '[PRE37]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '*Listing 3-6: Finding a Network Security Group for a given VM in PowerShell*'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 3-6：在 PowerShell 中查找给定虚拟机的网络安全组*'
- en: At ➊, we get the VM object and put it in a variable. At ➋, we perform a lookup
    to obtain the Network Interface object for that VM, using the VM’s Network Interface
    ID property. Finally, we display the NSG using the Network Security Group identifier
    stored in the Network Interface object ➌. Aside from replacing the VM resource
    group and name on the first line, you can run everything else exactly as shown
    here.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ➊，我们获取虚拟机对象并将其放入变量中。在 ➋，我们执行查找以获取该虚拟机的网络接口对象，使用虚拟机的网络接口 ID 属性。最后，我们使用存储在网络接口对象中的网络安全组标识符➌显示
    NSG。除了在第一行替换虚拟机的资源组和名称，您可以像这里所示的那样运行其余命令。
- en: '**Viewing ARM-based NSGs with the CLI**'
  id: totrans-268
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用 CLI 查看基于 ARM 的 NSG**'
- en: 'The CLI commands for viewing NSGs in ARM mode are almost identical to those
    for ASM. The only difference is that the ARM command to show a specific NSG requires
    the resource group name: `azure network nsg show "`Resource_Group_Name`" "`NSG_Name`"`.'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ARM 模式下查看 NSG 的 CLI 命令与 ASM 中几乎相同。唯一的区别是，显示特定 NSG 的 ARM 命令需要资源组名称：`azure network
    nsg show "`Resource_Group_Name`" "`NSG_Name`"`.
- en: '***Viewing Azure SQL Databases and Servers***'
  id: totrans-270
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***查看 Azure SQL 数据库和服务器***'
- en: SQL is frequently found in Azure, not only because many websites based in Azure
    require it, but because installing SQL on an on-premises server can be slow and
    has dozens of potentially confusing configuration options. However, it takes only
    minutes to set up Azure SQL (the name of Microsoft’s cloud-based SQL solution).
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 经常出现在 Azure 中，不仅因为许多基于 Azure 的网站需要它，还因为在本地服务器上安装 SQL 可能很慢，并且有数十个可能令人困惑的配置选项。然而，设置
    Azure SQL（微软的基于云的 SQL 解决方案）只需要几分钟。
- en: Azure SQL is separated into SQL servers and SQL databases. Although a database
    lives within an Azure SQL server instance, the two items are managed individually—a
    separation that might surprise experienced SQL administrators.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: Azure SQL 被分为 SQL 服务器和 SQL 数据库。尽管数据库存在于 Azure SQL 服务器实例中，但这两个项目是分别管理的——这种分离可能会让经验丰富的
    SQL 管理员感到惊讶。
- en: '**Listing Azure SQL Servers**'
  id: totrans-273
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**列出 Azure SQL 服务器**'
- en: To list the SQL servers in a subscription (including database server name, location,
    username of the administrator account, and version), run Get-AzureSqlDatabaseServer
    with no parameters. Once you have the server information, run
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出订阅中的 SQL 服务器（包括数据库服务器名称、位置、管理员帐户的用户名和版本），请运行 Get-AzureSqlDatabaseServer 而不带参数。获取服务器信息后，运行
- en: '[PRE38]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: to see the names, sizes, and creation dates of every database within that server.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 查看该服务器中每个数据库的名称、大小和创建日期。
- en: '**Viewing Azure SQL Firewall Rules**'
  id: totrans-277
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**查看 Azure SQL 防火墙规则**'
- en: 'To view any firewall rules applied to Azure SQL, run the following command:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看应用于 Azure SQL 的任何防火墙规则，请运行以下命令：
- en: '[PRE39]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: By default, Azure prevents access to Azure SQL servers, except from other Azure
    services. Although this is great for security, it frustrates developers who want
    to connect to databases from their workstations. In fact, this was such a hassle
    that SQL Server Management Studio (the tool used to manage SQL databases) added
    a prompt during sign-on to Azure SQL servers that offers to automatically add
    the user’s current IP address to the firewall rules. Not surprisingly, this annoys
    developers whose IP addresses change frequently, so you will often find firewall
    rules in Azure SQL that allow connections from any IP address in the world, or
    at least anywhere within a company’s network. Check the firewall to see what hosts
    you can use to bypass the firewall and target the SQL server directly.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Azure 阻止对 Azure SQL 服务器的访问，除了来自其他 Azure 服务的访问。虽然这对于安全性非常有益，但对于那些希望从工作站连接到数据库的开发者来说，这却非常令人沮丧。事实上，这个问题已经困扰了很长时间，以至于
    SQL Server 管理工作室（用于管理 SQL 数据库的工具）在登录 Azure SQL 服务器时，添加了一个提示，自动将用户当前的 IP 地址添加到防火墙规则中。毫不奇怪的是，这让那些
    IP 地址频繁变化的开发者感到恼火，因此你经常会发现 Azure SQL 中的防火墙规则允许来自全球任何 IP 地址的连接，或者至少允许来自公司网络内的任何地方的连接。检查防火墙，看看你可以使用哪些主机绕过防火墙，直接访问
    SQL 服务器。
- en: '**SQL ARM PowerShell Cmdlets**'
  id: totrans-281
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**SQL ARM PowerShell Cmdlets**'
- en: The ARM PowerShell extension has dozens more SQL-related commands than ASM PowerShell
    does, though most deal with less common features or are simply not relevant to
    a penetration tester. Perhaps the biggest hurdle with ARM, though, is that the
    resource group field of the `Get-AzureRmSqlServer` cmdlet is required. Fortunately,
    although this would normally mean that in order to see all the SQL servers you
    would need to run the command for each resource group in the subscription, PowerShell
    provides a shortcut. Simply pipe the output of `Get-AzureRmResourceGroup` to `Get-AzureRmSqlServer`,
    and you should see all the SQL servers, as shown in [Listing 3-7](part0012.html#ch03list7).
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: ARM PowerShell 扩展比 ASM PowerShell 拥有更多与 SQL 相关的命令，尽管大多数命令涉及的是不太常见的功能，或者对渗透测试人员来说并不相关。不过，使用
    ARM 的最大障碍可能是 `Get-AzureRmSqlServer` cmdlet 的资源组字段是必需的。幸运的是，虽然这通常意味着你需要为每个订阅中的资源组运行命令才能看到所有的
    SQL 服务器，但 PowerShell 提供了一个快捷方式。只需将 `Get-AzureRmResourceGroup` 的输出通过管道传递给 `Get-AzureRmSqlServer`，你就可以看到所有
    SQL 服务器，如[清单 3-7](part0012.html#ch03list7)所示。
- en: '[PRE40]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '*Listing 3-7: Finding ARM-based SQL servers in PowerShell*'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 3-7：在 PowerShell 中查找基于 ARM 的 SQL 服务器*'
- en: '**Listing Databases in a Server**'
  id: totrans-285
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**列出服务器中的数据库**'
- en: 'PowerShell provides an ARM command to show all the databases within a SQL server,
    including the size, creation date, and region. To list the databases in a server,
    run the following command:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 提供了一个 ARM 命令，可以显示 SQL 服务器中的所有数据库，包括数据库的大小、创建日期和区域。要列出某个服务器中的数据库，请运行以下命令：
- en: '[PRE41]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'To view SQL firewall rules for ARM, as well as the starting and ending IP addresses
    for each rule and its name, run this command:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看 ARM 的 SQL 防火墙规则，以及每个规则的起始和结束 IP 地址及其名称，请运行以下命令：
- en: '[PRE42]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Finally, consider running the following to see if Azure’s threat detection
    tool is in operation:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，考虑运行以下命令，查看 Azure 的威胁检测工具是否在运行：
- en: '[PRE43]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: This tool monitors for attacks such as SQL injection. You will want to know
    if it’s running before launching a test that might trigger alerts.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具会监视如 SQL 注入等攻击。你需要知道它是否正在运行，以便在发起可能触发警报的测试之前了解情况。
- en: '**DEFENDER’S TIP**'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '**DEFENDER 提示**'
- en: Be sure to take advantage of Azure’s security features. Regularly check to make
    sure that no one has added an allow-all rule to your SQL firewall, and enable
    new security features when they are added, such as SQL Threat Detection (*[https://docs.microsoft.com/en-us/azure/sql-database/sql-database-threat-detection/](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-threat-detection/)*
    ). Although no feature can guarantee the complete security of your system, each
    added control provides another layer of protection and makes an attack against
    your services that much harder. Make it hard enough that the attacker decides
    to go target someone else.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 一定要充分利用 Azure 的安全功能。定期检查，确保没有人向你的 SQL 防火墙添加允许所有连接的规则，并在新增安全功能时启用它们，例如 SQL 威胁检测
    (*[https://docs.microsoft.com/en-us/azure/sql-database/sql-database-threat-detection/](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-threat-detection/)*
    )。尽管没有任何功能能够保证系统的完全安全，但每增加一个控制措施，都会提供另一层保护，使得针对你的服务的攻击变得更加困难。让攻击者觉得足够麻烦，从而决定去攻击其他目标。
- en: '**Using the CLI for Azure SQL**'
  id: totrans-295
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**使用 CLI 进行 Azure SQL 操作**'
- en: You can use the CLI to gather information on Azure SQL, but keep in mind that
    it only offers SQL commands when in ASM mode. Also, the command to list databases
    within a SQL server instance requires the database account credentials, and there
    is no command to view the state of SQL Threat Detection (or any of the advanced
    SQL commands available in ARM PowerShell).
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用CLI来收集Azure SQL的信息，但请记住，在ASM模式下它只提供SQL命令。此外，列出SQL服务器实例中数据库的命令需要数据库账户凭据，而且没有命令可以查看SQL威胁检测的状态（或ARM
    PowerShell中可用的任何高级SQL命令）。
- en: To use CLI to view SQL servers within a subscription, including the database
    name and the datacenter where it is hosted, run azure sql server list. Then run
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用CLI查看订阅中的SQL服务器，包括数据库名称和托管数据中心，运行`azure sql server list`。然后运行
- en: '[PRE44]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'to view additional details such as the database administrator username and
    server version. Finally, to check the firewall rules, enter azure sql firewallrule
    list. You can display a specific firewall rule with the following command:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看更多详细信息，例如数据库管理员用户名和服务器版本，最后要检查防火墙规则，输入`azure sql firewallrule list`。你可以使用以下命令显示特定的防火墙规则：
- en: '[PRE45]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '**Consolidated PowerShell Scripts**'
  id: totrans-301
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**合并PowerShell脚本**'
- en: During a penetration test, I often have limited time to gather data, either
    because I have dozens of subscriptions to review or because I’m using a legitimate
    user’s system or credentials and the longer I use it, the greater the chance of
    my being detected. Therefore, I like having all the commands I need in one place
    in easy-to-run scripts.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 在渗透测试期间，我通常时间有限，需要收集数据，可能是因为我有数十个订阅需要审查，或者因为我使用的是合法用户的系统或凭据，使用时间越长，被发现的概率越大。因此，我喜欢将所有需要的命令集中在一个地方，并使用易于运行的脚本。
- en: In the sections that follow, I present scripts for both ASM PowerShell and ARM
    PowerShell. It’s important to have both handy because credentials that work in
    one subscription model might not work in the other. Also, not all systems will
    have the ARM cmdlets installed. When not constrained by either limitation, I usually
    run both scripts. There’s always some duplication, but it’s better to get more
    information than to miss something.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我将介绍ASM PowerShell和ARM PowerShell的脚本。掌握这两者都很重要，因为在一种订阅模型中有效的凭据可能在另一种中无效。而且，并非所有系统都会安装ARM
    cmdlet。当不受任何限制时，我通常会运行这两个脚本。虽然有些重复，但获得更多信息总比错过什么要好。
- en: I haven’t provided a script for the CLI tools because the PowerShell output
    is much easier to work with in scripting form. Also, you’re far less likely to
    be detected when penetration testing if you’re using the same tools your target
    uses. Most developers will have the Azure PowerShell extensions installed; far
    fewer will install the CLI.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 我没有为CLI工具提供脚本，因为PowerShell的输出更易于以脚本形式处理。而且，如果你使用与你的目标相同的工具进行渗透测试，被发现的可能性会更低。大多数开发人员都会安装Azure
    PowerShell扩展；而安装CLI的人要少得多。
- en: You can download both scripts from the book’s website at *[https://nostarch.com/azure/](https://nostarch.com/azure/)*.
    You may, of course, need to customize them for your particular scenario, adding
    authentication and such. (I find it’s easiest to launch a PowerShell window, authenticate
    with the credentials I have obtained, and then kick off the script.) You may also
    need to run the `Set-ExecutionPolicy -Scope Process Unrestricted` command so the
    system can run unsigned scripts, if you haven’t done so already in this PowerShell
    window.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从本书的官网* [https://nostarch.com/azure/](https://nostarch.com/azure/)*下载这两个脚本。当然，你可能需要根据你的特定情况对其进行自定义，添加身份验证等。（我发现最简单的方法是启动一个PowerShell窗口，使用我已获得的凭据进行身份验证，然后启动脚本。）如果你还没有在这个PowerShell窗口中这样做，你可能还需要运行`Set-ExecutionPolicy
    -Scope Process Unrestricted`命令，以便系统能够运行未签名的脚本。
- en: '***ASM Script***'
  id: totrans-306
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***ASM脚本***'
- en: The script shown in [Listing 3-8](part0012.html#ch03list8) iterates over the
    common ASM resources in a subscription and then displays information about those
    services. It uses all the ASM PowerShell commands discussed in this chapter.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 在[清单3-8](part0012.html#ch03list8)中显示的脚本会遍历订阅中的常见ASM资源，然后显示有关这些服务的信息。它使用了本章讨论的所有ASM
    PowerShell命令。
- en: '[PRE46]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '*Listing 3-8: Consolidated ASM PowerShell reconnaissance script*'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单3-8：合并的ASM PowerShell侦察脚本*'
- en: '***ARM Script***'
  id: totrans-310
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***ARM脚本***'
- en: '[Listing 3-9](part0012.html#ch03list9) shows the ARM version of [Listing 3-8](part0012.html#ch03list8).
    It’s slightly longer than the ASM version because it gathers more details about
    the subscription, VMs, and network interfaces.'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 3-9](part0012.html#ch03list9)展示了[清单 3-8](part0012.html#ch03list8)的ARM版本。它比ASM版本稍长，因为它收集了更多关于订阅、虚拟机和网络接口的细节。'
- en: '[PRE47]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '*Listing 3-9: Consolidated ARM PowerShell reconnaissance script*'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 3-9：综合ARM PowerShell侦察脚本*'
- en: Be sure to check the book’s website (*[https://nostarch.com/azure/](https://nostarch.com/azure/)*)
    for updated versions of these scripts.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 一定要查看本书的网站 (*[https://nostarch.com/azure/](https://nostarch.com/azure/)*) 获取这些脚本的更新版本。
- en: '**Summary**'
  id: totrans-315
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: I’ve covered a wide range of commands that you can use to understand how an
    Azure subscription is being used. I explained where to obtain Azure’s PowerShell
    and command line tools. I discussed various authentication methods to be used
    based on the type of credential you have captured. I showed how to discover websites,
    virtual machines, storage accounts, network settings, and SQL databases in a subscription.
    Finally, I provided you with scripts you can use to quickly query these services.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经涵盖了你可以用来了解Azure订阅使用情况的广泛命令。我解释了如何获取Azure的PowerShell和命令行工具。我讨论了基于你获取的凭据类型，应该使用的各种身份验证方法。我展示了如何在订阅中发现网站、虚拟机、存储帐户、网络设置和SQL数据库。最后，我提供了你可以用来快速查询这些服务的脚本。
- en: 'I see these techniques as indispensable for any thorough penetration test,
    as they help to draw a better picture of your client’s overall attack surface:
    non-production systems can often be used as a foothold to access production resources,
    yet they are often ignored in risk assessments. By including the entire subscription
    in your test, and not just those resources that are deemed most critical, you
    can significantly improve the value provided to your client.'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这些技术对于任何彻底的渗透测试都是不可或缺的，因为它们有助于更好地了解客户的整体攻击面：非生产系统往往可以作为跳板访问生产资源，但在风险评估中经常被忽视。通过将整个订阅纳入测试，而不仅仅是那些被认为最关键的资源，你可以显著提高对客户提供的价值。
- en: In the next chapter, I’ll demonstrate some useful techniques for exploiting
    Azure Storage accounts.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我将演示一些利用Azure存储帐户的实用技巧。
