["```\nWHITE = (255,255,255)\npaddlew = 200\npaddleh = 25\npaddlex = 300\npaddley = 550\n```", "```\npaddlex = pygame.mouse.get_pos()[0]\n```", "```\npaddlex -= paddlew/2\n```", "```\npygame.draw.rect(screen, WHITE, (paddlex, paddley, paddlew, paddleh))\n```", "```\npoints = 0\nlives = 5\n```", "```\nif picy <= 0:\n    speedy = -speedy\n```", "```\nif picy >= 500:\n    lives -= 1\n    speedy = -speedy\n```", "```\npicw = 100\n```", "```\nif picy + pich >= paddley and picy + pich <= paddley + paddleh \\\n   and speedy > 0:\n    if picx + picw/2 >= paddlex and picx + picw/2 <= paddlex + \\\n       paddlew:\n```", "```\nif picy + pich >= paddley and picy + pich <= paddley + paddleh \\\n   and speedy > 0:\nif picx + picw/2 >= paddlex and picx + picw/2 <= paddlex + \\\n   paddlew:\n    points += 1\n    speedy = -speedy\n```", "```\ndraw_string = \"Lives: \" + str(lives) + \" Points: \" + str(points)\n```", "```\nfont = pygame.font.SysFont(\"Times\", 24)\n```", "```\ntext = font.render(draw_string, True, WHITE)\n```", "```\ntext_rect = text.get_rect()\n```", "```\ntext_rect.centerx = screen.get_rect().centerx\ntext_rect.y = 10\n```", "```\nscreen.blit(text, text_rect)\n```", "```\nimport pygame       # Setup\npygame.init()\nscreen = pygame.display.set_mode([800,600])\npygame.display.set_caption(\"Smiley Pong\")\nkeepGoing = True\npic = pygame.image.load(\"CrazySmile.bmp\")\ncolorkey = pic.get_at((0,0))\npic.set_colorkey(colorkey)\npicx = 0\npicy = 0\nBLACK = (0,0,0)\nWHITE = (255,255,255)\ntimer = pygame.time.Clock()\nspeedx = 5\nspeedy = 5\npaddlew = 200\npaddleh = 25\npaddlex = 300\npaddley = 550\npicw = 100\npich = 100\npoints = 0\nlives = 5\nfont = pygame.font.SysFont(\"Times\", 24)\n\nwhile keepGoing:    # Game loop\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            keepGoing = False\n    picx += speedx\n    picy += speedy\n\n    if picx <= 0 or picx + pic.get_width() >= 800:\n        speedx = -speedx\n    if picy <= 0:\n        speedy = -speedy\n    if picy >= 500:\n        lives -= 1\n        speedy = -speedy\n\n    screen.fill(BLACK)\n    screen.blit(pic, (picx, picy))\n\n    # Draw paddle\n    paddlex = pygame.mouse.get_pos()[0]\n    paddlex -= paddlew/2\n    pygame.draw.rect(screen, WHITE, (paddlex, paddley, paddlew, paddleh))\n\n    # Check for paddle bounce\n    if picy + pich >= paddley and picy + pich <= paddley + paddleh \\\n       and speedy > 0:\n        if picx + picw / 2 >= paddlex and picx + picw / 2 <= paddlex + \\\n           paddlew:\n            points += 1\n            speedy = -speedy\n\n    # Draw text on screen\n    draw_string = \"Lives: \" + str(lives) + \" Points: \" + str(points)\n\n    text = font.render(draw_string, True, WHITE)\n    text_rect = text.get_rect()\n    text_rect.centerx = screen.get_rect().centerx\n    text_rect.y = 10\n    screen.blit(text, text_rect)\n    pygame.display.update()\n    timer.tick(60)\n\npygame.quit()      # Exit\n```", "```\nif lives < 1:\n    speedx = speedy = 0\n    draw_string = \"Game Over. Your score was: \" + str(points)\n    draw_string += \". Press F1 to play again. \"\n```", "```\nif event.type == pygame.KEYDOWN:\n    if event.key == pygame.K_F1: # F1 = New Game\n```", "```\npoints = 0\nlives = 5\npicx = 0\npicy = 0\nspeedx = 5\nspeedy = 5\n```", "```\nif picx <= 0 or picx >= 700:\n    speedx = -speedx * 1.1\nif picy <= 0:\n    speedy = -speedy + 1\n```", "```\nif picy >= 500:\n    lives -= 1\n    speedy = -5\n    speedx = 5\n```", "```\npicy = 499\n```", "```\nimport pygame       # Setup\npygame.init()\nscreen = pygame.display.set_mode([800,600])\npygame.display.set_caption(\"Smiley Pong\")\nkeepGoing = True\npic = pygame.image.load(\"CrazySmile.bmp\")\ncolorkey = pic.get_at((0,0))\npic.set_colorkey(colorkey)\npicx = 0\npicy = 0\nBLACK = (0,0,0)\nWHITE = (255,255,255)\ntimer = pygame.time.Clock()\nspeedx = 5\nspeedy = 5\npaddlew = 200\npaddleh = 25\npaddlex = 300\npaddley = 550\npicw = 100\npich = 100\npoints = 0\nlives = 5\nfont = pygame.font.SysFont(\"Times\", 24)\n\nwhile keepGoing:      # Game loop\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            keepGoing = False\n        if event.type == pygame.KEYDOWN:\n            if event.key == pygame.K_F1:     # F1 = New Game\n                points = 0\n                lives = 5\n                picx = 0\n                picy = 0\n                speedx = 5\n                speedy = 5\n    picx += speedx\n    picy += speedy\n\n    if picx <= 0 or picx >= 700:\n        speedx = -speedx * 1.1\n    if picy <= 0:\n        speedy = -speedy + 1\n    if picy >= 500:\n        lives -= 1\n        speedy = -5\n        speedx = 5\n        picy = 499\n\n    screen.fill(BLACK)\n    screen.blit(pic, (picx, picy))\n\n    # Draw paddle\n    paddlex = pygame.mouse.get_pos()[0]\n    paddlex -= paddlew/2\n    pygame.draw.rect(screen, WHITE, (paddlex, paddley, paddlew, paddleh))\n\n    # Check for paddle bounce\n    if picy + pich >= paddley and picy + pich <= paddley + paddleh \\\n       and speedy > 0:\n        if picx + picw/2 >= paddlex and picx + picw/2 <= paddlex + \\\n           paddlew:\n            speedy = -speedy\n            points += 1\n\n    # Draw text on screen\n    draw_string = \"Lives: \" + str(lives) + \" Points: \" + str(points)\n    # Check whether the game is over\n    if lives < 1:\n        speedx = speedy = 0\n        draw_string = \"Game Over. Your score was: \" + str(points)\n        draw_string += \". Press F1 to play again. \"\n\n    text = font.render(draw_string, True, WHITE)\n    text_rect = text.get_rect()\n    text_rect.centerx = screen.get_rect().centerx\n    text_rect.y = 10\n    screen.blit(text, text_rect)\n    pygame.display.update()\n    timer.tick(60)\n\npygame.quit()       # Exit\n```", "```\npygame.mixer.init()    # Add sounds\npop = pygame.mixer.Sound(\"pop.wav\")\n```", "```\nif len(clicked_smileys) > 0:\n    pop.play()\n```", "```\nfont = pygame.font.SysFont(\"Arial\", 24)\nWHITE = (255,255,255)\ncount_smileys = 0\ncount_popped = 0\n```", "```\nif mousedown:\n    speedx = random.randint(-5, 5)\n    speedy = random.randint(-5, 5)\n    newSmiley = Smiley(pygame.mouse.get_pos(), speedx, speedy)\n    sprite_list.add(newSmiley)\n    count_smileys += 1\n```", "```\nif len(clicked_smileys) > 0:\n    pop.play()\n    count_popped += len(clicked_smileys)\n```", "```\ndraw_string = \"Bubbles created: \" + str(count_smileys)\ndraw_string += \" - Bubbles popped: \" + str(count_popped)\n```", "```\nif (count_smileys > 0):\n    draw_string += \" - Percent: \"\n    draw_string += str(round(count_popped/count_smileys*100, 1))\n    draw_string += \"%\"\n```", "```\ntext = font.render(draw_string, True, WHITE)\ntext_rect = text.get_rect()\ntext_rect.centerx = screen.get_rect().centerx\ntext_rect.y = 10\nscreen.blit (text, text_rect)\n```", "```\nimport pygame\nimport random\n\nBLACK = (0,0,0)\nWHITE = (255,255,255)\npygame.init()\nscreen = pygame.display.set_mode([800,600])\npygame.display.set_caption(\"Pop a Smiley\")\nmousedown = False\nkeep_going = True\nclock = pygame.time.Clock()\npic = pygame.image.load(\"CrazySmile.bmp\")\ncolorkey = pic.get_at((0,0))\npic.set_colorkey(colorkey)\nsprite_list = pygame.sprite.Group()\npygame.mixer.init()    # Add sounds\npop = pygame.mixer.Sound(\"pop.wav\")\nfont = pygame.font.SysFont(\"Arial\", 24)\ncount_smileys = 0\ncount_popped = 0\n\nclass Smiley(pygame.sprite.Sprite):\n    pos = (0,0)\n    xvel = 1\n    yvel = 1\n    scale = 100\n\n    def __init__(self, pos, xvel, yvel):\n        pygame.sprite.Sprite.__init__(self)\n        self.image = pic\n        self.scale = random.randrange(10,100)\n        self.image = pygame.transform.scale(self.image,\n                                            (self.scale,self.scale))\n        self.rect = self.image.get_rect()\n        self.pos = pos\n        self.rect.x = pos[0] - self.scale/2\n        self.rect.y = pos[1] - self.scale/2\n        self.xvel = xvel\n        self.yvel = yvel\n    def update(self):\n        self.rect.x += self.xvel\n        self.rect.y += self.yvel\n        if self.rect.x <= 0 or self.rect.x > screen.get_width() - self.scale:\n            self.xvel = -self.xvel\n        if self.rect.y <= 0 or self.rect.y > screen.get_height() - self.scale:\n            self.yvel = -self.yvel\n\nwhile keep_going:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            keep_going = False\n        if event.type == pygame.MOUSEBUTTONDOWN:\n            if pygame.mouse.get_pressed()[0]: # Left mouse button, draw\n                mousedown = True\n            elif pygame.mouse.get_pressed()[2]: # Right mouse button, pop\n                pos = pygame.mouse.get_pos()\n                clicked_smileys = [s for s in sprite_list if\n                                   s.rect.collidepoint(pos)]\n                sprite_list.remove(clicked_smileys)\n                if len(clicked_smileys) > 0:\n                    pop.play()\n                    count_popped += len(clicked_smileys)\n        if event.type == pygame.MOUSEBUTTONUP:\n            mousedown = False\n    screen.fill(BLACK)\n    sprite_list.update()\n    sprite_list.draw(screen)\n    clock.tick(60)\n    draw_string = \"Bubbles created: \" + str(count_smileys)\n    draw_string += \" - Bubbles popped: \" + str(count_popped)\n    if (count_smileys > 0):\n        draw_string += \" - Percent: \"\n        draw_string += str(round(count_popped/count_smileys*100, 1))\n        draw_string += \"%\"\n\n    text = font.render(draw_string, True, WHITE)\n    text_rect = text.get_rect()\n    text_rect.centerx = screen.get_rect().centerx\n    text_rect.y = 10\n    screen.blit (text, text_rect)\n\n    pygame.display.update()\n    if mousedown:\n        speedx = random.randint(-5, 5)\n        speedy = random.randint(-5, 5)\n        newSmiley = Smiley(pygame.mouse.get_pos(), speedx, speedy)\n        sprite_list.add(newSmiley)\n        count_smileys += 1\n\npygame.quit()\n```"]