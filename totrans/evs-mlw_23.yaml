- en: <hgroup>
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">B</samp> <samp class="SANS_Dogma_OT_Bold_B_11">WINDOWS
    FUNCTIONS USED FOR EVASION</samp>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: </hgroup>
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/opener.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This appendix describes Windows functions that are commonly used for some of
    the evasion techniques discussed in this book. While it’s not a comprehensive
    list of functions that might be abused by threat actors, these are some of the
    ones I believe are the most interesting or important to be familiar with for the
    purposes of malware analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Note that the functions are written without their *A* and *W* suffixes. For
    example, <samp class="SANS_TheSansMonoCd_W5Regular_11">CreateFileW</samp> is listed
    only as <samp class="SANS_TheSansMonoCd_W5Regular_11">CreateFile</samp>. Also,
    some functions have both an *Nt* and a *Zw* variant, such as <samp class="SANS_TheSansMonoCd_W5Regular_11">NtLoadDriver</samp>
    and <samp class="SANS_TheSansMonoCd_W5Regular_11">ZwLoadDriver</samp>, but only
    the *Nt* variant is listed here. For more information on these variations, see
    [Chapter 1](chapter1.xhtml).
  prefs: []
  type: TYPE_NORMAL
- en: You can find a more complete list of commonly abused functions at [*https://<wbr>malapi<wbr>.io*](https://malapi.io).
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">AddAtom</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Adds a string to the local atom table. Can be used as part of certain process
    injection techniques, such as atom bombing.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">AddVectoredExceptionHandler</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Registers a new vectored exception handler. Can be used to abuse exceptions
    for the purposes of anti-analysis and anti-debugging. An alternative function
    is <samp class="SANS_TheSansMonoCd_W5Regular_11">RtlAddVectoredExceptionHandler</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">AdjustTokenPrivileges</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Enables or disables privileges of an access token. Can be abused to elevate
    privileges.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">BCrypt*</samp>
  prefs: []
  type: TYPE_NORMAL
- en: See the <samp class="SANS_TheSansMonoCd_W5Regular_11">Crypt*</samp> functions.
    All functions that begin with <samp class="SANS_TheSansMonoCd_W5Regular_11">BCrypt*</samp>
    (such as <samp class="SANS_TheSansMonoCd_W5Regular_11">BCryptEncrypt</samp> and
    <samp class="SANS_TheSansMonoCd_W5Regular_11">BCryptDestroyKey</samp>) align to
    their equivalent <samp class="SANS_TheSansMonoCd_W5Regular_11">Crypt*</samp> function
    (such as <samp class="SANS_TheSansMonoCd_W5Regular_11">CryptEncrypt</samp> and
    <samp class="SANS_TheSansMonoCd_W5Regular_11">CryptDestroyKey</samp>).
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">BlockInput</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Blocks input from reaching applications. Can be used as an anti-debugging technique
    to block interaction with the debugger.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CallNtPowerInformation</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns information such as the battery state and last sleep time, which can
    be used to infer if the system is a VM.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CheckRemoteDebuggerPresent</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns a nonzero value if the current process is being debugged; otherwise,
    returns zero. Can be used to detect a debugger in use.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CloseHandle</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Closes an open handle. Can be used as an anti-debugging technique to crash certain
    debuggers under specific circumstances. An alternative is the now-deprecated <samp
    class="SANS_TheSansMonoCd_W5Regular_11">NtClose</samp> function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CreateFile</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Gets a handle to a file or creates a new file. Can be used for many purposes,
    including VM and sandbox detection (to search for hypervisor-related files and
    pipes, for example). An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">NtCreateFile</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CreateFileTransacted</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Creates or opens a file as an NTFS transacted operation. Can be used for process
    manipulation, such as process doppelganging.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CreateMutex(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Opens a mutex object or creates a new mutex. Can be used to enumerate mutexes
    related to hypervisors as a VM and sandbox detection technique.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CreateProcess</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Creates a new process and is often called as part of process injection or during
    unpacking. Alternatives are the <samp class="SANS_TheSansMonoCd_W5Regular_11">NtCreateProcess(Ex)</samp>,
    <samp class="SANS_TheSansMonoCd_W5Regular_11">CreateProcessInternal</samp>, and
    <samp class="SANS_TheSansMonoCd_W5Regular_11">NtCreateUserProcess</samp> functions.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CreateProcessWithToken</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Creates a new process, assigning it the permissions of an existing token. Can
    be abused for privilege elevation and defense evasion.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CreateRemoteThread</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Executes a new thread in the address space of another process and is often used
    as part of various process injection techniques. Alternatives include the <samp
    class="SANS_TheSansMonoCd_W5Regular_11">NtCreateThreadEx</samp> and <samp class="SANS_TheSansMonoCd_W5Regular_11">RtlCreateUserThread</samp>
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CreateService</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Creates a service. Can be used for persistence or for loading malicious kernel
    modules.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CreateToolhelp32Snapshot</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Creates a snapshot of the currently running processes on the system. Can be
    used to locate processes on the system for injection or for VM detection. Typically
    called before <samp class="SANS_TheSansMonoCd_W5Regular_11">GetProcess32First</samp>
    and <samp class="SANS_TheSansMonoCd_W5Regular_11">GetProcess32Next</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">CreateTransaction</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Creates a new NTFS transaction object. An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">NtCreateTransaction</samp>
    function. *See also* <samp class="SANS_TheSansMonoCd_W5Regular_11">CreateFileTransacted</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">Crypt*</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Functions that begin with <samp class="SANS_TheSansMonoCd_W5Regular_11">Crypt</samp>
    (such as <samp class="SANS_TheSansMonoCd_W5Regular_11">CryptEncrypt</samp>, <samp
    class="SANS_TheSansMonoCd_W5Regular_11">CryptDecrypt</samp>, and <samp class="SANS_TheSansMonoCd_W5Regular_11">CryptCreateHash</samp>)
    are used for various cryptographic operations, such as encrypting and hashing
    data, often for the purposes of obfuscation and defense evasion.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">DebugActiveProcess</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Enables a debugger to attach to an active process. Can be used to detect a debugger.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">DeleteFile</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Deletes a file or directory. Can be used to hide artifacts on disk by removing
    them. An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">NtDeleteFile</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">DeviceIOControl</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Allows a process in user space to send a control code to a driver in kernel
    space. Often used by rootkits to send control codes to malicious kernel drivers.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">DsGetDcName</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the name of the system’s domain controller and is often used to detect
    if the system is part of a domain for context awareness, targeting, or sandbox
    detection purposes.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">DuplicateToken(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Creates a “copy” of a token assigned to another process. Often followed by a
    call to a function such as <samp class="SANS_TheSansMonoCd_W5Regular_11">ImpersonateLoggedOnUser</samp>
    as part of privilege elevation and defense evasion.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">EnumDisplayMonitors</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Identifies the number of monitors configured on the system to infer if the system
    is a VM or sandbox.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">EnumServiceStatus(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Enumerates services on the system. Can be used to identify hypervisor-related
    services for VM detection.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">EnumSystemFirmwareTables</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Enumerates system firmware tables. Can be used to identify hardware on the system
    and detect a VM.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">EnumWindows</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Enumerates open windows. Can be used to detect malware analysis tools and debuggers.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ExitProcess</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Ends a process and can be used as an anti-analysis technique.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ExitWindows(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Logs out of the current user account or shuts down the system. Can be used as
    an anti-analysis and anti-sandbox technique.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">FindFirstFile(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Enumerates files on the filesystem. Can be used to locate hypervisor-related
    files for VM and sandbox detection. Called prior to <samp class="SANS_TheSansMonoCd_W5Regular_11">FindNextFile</samp>,
    which iterates through each file on the system.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">FindFirstUrlCacheEntry(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Enumerates the browser cache. Lack of browser cache data could indicate a VM
    or sandbox environment. Called prior to <samp class="SANS_TheSansMonoCd_W5Regular_11">FindNextUrlCacheEntry(Ex)</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">FindWindow(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Locates a certain window, such as a specific analysis tool or debugger.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">FltEnumerateFilters</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Can be used by rootkits to enumerate minifilter drivers in the system, sometimes
    in preparation for installing a hook. Alternatives are the <samp class="SANS_TheSansMonoCd_W5Regular_11">FltEnumerateInstances</samp>
    and <samp class="SANS_TheSansMonoCd_W5Regular_11">FltGetFilterFromName</samp>
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">FltRegisterFilter</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Registers a new minifilter driver. May be seen in rootkits that attempt to install
    minifilter drivers.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetAdaptersAddresses</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the IP and MAC addresses of the host’s network interfaces. Can be
    abused for VM and sandbox detection.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetAsyncKeyState</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves a certain keyboard key state. Can be used for sandbox evasion (for
    example, to wait for a certain keypress).
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetComputerName(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the computer name of the system and is sometimes used to identify
    sandbox-related computer names.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetCursorPos</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Gets the current mouse cursor position. Can be used for human-interaction detection
    for sandbox evasion purposes.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetDiskFreeSpace(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns the free disk space on the system and can be used to detect an analysis
    environment, especially if the VM is configured with a small amount of disk space.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetForegroundWindow</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Gets information about the active foreground window and is sometimes used for
    analysis tool detection or sandbox evasion.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetKeyboardLayout</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns the active keyboard language of the host and is sometimes used for target
    profiling.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetKeyboardLayoutList</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns a complete list of all keyboard languages that are installed on the
    host.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetLastError</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the calling thread’s last error value. Can be used in combination
    with <samp class="SANS_TheSansMonoCd_W5Regular_11">SetLastError</samp> and <samp
    class="SANS_TheSansMonoCd_W5Regular_11">OutputDebugString</samp> to detect debuggers
    and for other anti-analysis purposes.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetLocalTime</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Gets the current date and time of the system. Can be used to detect debugging
    or for other anti-analysis techniques, such as time bombing.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetLogicalProcessorInformation(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns information about the system’s processor. Can be used to identify a
    VM or sandbox environment.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetModuleFileName(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the path for the file that contains a specific module, or retrieves
    the path of the executable file of the current process. Can be used to enumerate
    loaded modules, such as anomalous modules injected by analysis tools, or to retrieve
    its own executable’s path.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetModuleHandle(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns a handle to a loaded module.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetPhysicallyInstalledSystemMemory</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns the amount of physical system memory. Can be abused to identify a VM
    or sandbox environment.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetProcAddress</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Gets the procedure address of a function. Can be combined with <samp class="SANS_TheSansMonoCd_W5Regular_11">LoadLibrary</samp>
    to dynamically load libraries and functions for endpoint defense evasion and anti-analysis.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetSystemFirmwareTable</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves various firmware tables from the system. Can be used to search for
    hypervisor-related firmware as a VM and sandbox detection technique. An alternative
    is the <samp class="SANS_TheSansMonoCd_W5Regular_11">EnumSystemFirmwareTables</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetSystemInfo</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns information about the system. Can be used to detect a VM environment.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetSystemMetrics</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns information about system metrics and configurations.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetSystemTime</samp>
  prefs: []
  type: TYPE_NORMAL
- en: '*See* <samp class="SANS_TheSansMonoCd_W5Regular_11">GetLocalTime</samp>.'
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetTcpTable</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns the system’s IPv4 TCP connection table. May be used to detect a VM or
    sandbox that isn’t connected to a network or the internet.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetThreadContext</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the context of the current thread. Can be used for detecting hardware
    breakpoints. An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">Wow64GetThreadContext</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetThreadLocale</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns locale information about a running thread, such as the language in use.
    Can be used for target profiling.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetTickCount</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the number of milliseconds that have elapsed since the system was
    started. Can be used for many anti-analysis techniques, such as debugger detection.
    An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">GetTickCount64</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetUserDefaultUILanguage</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns the currently logged-in user’s interface language. Can be used for the
    same purposes as <samp class="SANS_TheSansMonoCd_W5Regular_11">GetThreadLocale</samp>.
    Alternatives are the <samp class="SANS_TheSansMonoCd_W5Regular_11">GetSystemDefaultUILanguage</samp>,
    <samp class="SANS_TheSansMonoCd_W5Regular_11">GetSystemDefaultLCID</samp>, <samp
    class="SANS_TheSansMonoCd_W5Regular_11">GetUserDefaultLCID,</samp> and <samp class="SANS_TheSansMonoCd_W5Regular_11">GetProcessPreferredUILanguages</samp>
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetVersion(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the version information for the operating system. Can be used for
    target profiling.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GetWindowText</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Obtains the title text of the window. Can be used to detect malware analysis
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GlobalAddAtom(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Adds a string to the global atom table. *See also* <samp class="SANS_TheSansMonoCd_W5Regular_11">AddAtom</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">GlobalGetAtomName</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the string in the specified global atom. *See also* <samp class="SANS_TheSansMonoCd_W5Regular_11">AddAtom</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ImpersonateLoggedOnUser</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Allows the calling thread to impersonate the security context of the logged-in
    user. *See also* <samp class="SANS_TheSansMonoCd_W5Regular_11">DuplicateToken(Ex)</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">InitiateShutdown</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Shuts down and restarts the system. Can be used as an anti-analysis and anti-sandbox
    technique. An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">InitiateSystemShutdown(Ex)</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">InternetConnect</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Opens an FTP or HTTP internet connection. Can be used for many different evasion
    techniques, such as identifying whether or not a system is connected to the internet
    to detect a sandbox or VM. Often used in combination with <samp class="SANS_TheSansMonoCd_W5Regular_11">InternetOpen</samp>
    and <samp class="SANS_TheSansMonoCd_W5Regular_11">InternetReadFile</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">IsDebuggerPresent</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Checks whether the calling process is being debugged. *See also* <samp class="SANS_TheSansMonoCd_W5Regular_11">CheckRemoteDebuggerPresent</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">IsProcessorFeaturePresent</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns the status of various processor features, which can indicate a VM.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">LoadLibrary</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Loads a module into the process address space of the calling process. *See also*
    <samp class="SANS_TheSansMonoCd_W5Regular_11">GetProcAddress</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">Module32First</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Gets information about the first module loaded into a process. Can be used in
    combination with <samp class="SANS_TheSansMonoCd_W5Regular_11">Module32Next</samp>
    to enumerate and identify modules associated with analysis tools.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">NtCreateTransaction</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Creates a new NTFS transaction object. Can be used for process manipulation
    techniques, such as process doppelganging.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">NtLoadDriver</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Loads a driver into the system. Can be invoked to load a malicious kernel module.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">NtMapViewOfSection</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Maps a view of a section into the process address space of a target process.
    Can be used to manually map a library or code into memory as part of process injection.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">NtOpenDirectoryObject</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Can be used to query device and driver objects on the system. Sometimes used
    to locate VM-related artifacts as part of VM detection. An alternative is the
    <samp class="SANS_TheSansMonoCd_W5Regular_11">NtQueryDirectoryObject</samp> function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">NtQueryInformationProcess</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns a great deal of information about a target process. Can be used to identify
    attached debuggers.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">NtQueryObject</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns information on different operating system objects. Can be used to identify
    debugger objects, indicating to the malware that it is being debugged.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">NtQuerySystemInformation</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns a lot of different system information. Can be used to enumerate firmware
    tables to identify a VM or sandbox.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">NtQuerySystemTime</samp>
  prefs: []
  type: TYPE_NORMAL
- en: '*See* <samp class="SANS_TheSansMonoCd_W5Regular_11">GetLocalTime</samp>.'
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">NtSetInformationThread</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Sets the priority of a thread. Can be used to hide code execution from a debugger
    or, in certain circumstances, to crash the debugger.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">NtUnmapViewOfSection</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Unmaps a view of a section from memory. Sometimes used as part of process injection
    techniques.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">OpenMutex</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Opens a mutex object. *See also* <samp class="SANS_TheSansMonoCd_W5Regular_11">CreateMutex</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">OpenProcess</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Opens a process object and is often a precursor to process injection. An alternative
    is the <samp class="SANS_TheSansMonoCd_W5Regular_11">NtOpenProcess</samp> function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">OpenProcessToken</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Opens the access token of a process and is often a precursor to techniques such
    as privilege elevation. *See also* <samp class="SANS_TheSansMonoCd_W5Regular_11">AdjustTokenPrivileges</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">OpenService</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Opens a service. Can be used to identify services related to sandboxes and hypervisors.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">OpenThread</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Opens a thread object. Can be used for process injection techniques, such as
    thread hijacking.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">OutputDebugString</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Sends a string to the debugger. Can be used for anti-debugging purposes. *See
    also* <samp class="SANS_TheSansMonoCd_W5Regular_11">GetLastError</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">PostMessage</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Closes application windows when the parameter <samp class="SANS_TheSansMonoCd_W5Regular_11">WS_CLOSE</samp>
    is passed to the window’s handle. Can be used as an anti-analysis technique.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">Process32First</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Gathers information about the first process in a process snapshot. *See also*
    <samp class="SANS_TheSansMonoCd_W5Regular_11">CreateToolhelp32Snapshot</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">Process32Next</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Gathers information about the next process in a process snapshot. *See also*
    <samp class="SANS_TheSansMonoCd_W5Regular_11">CreateToolhelp32Snapshot</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">PsLookupProcessByProcessID</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Gets a pointer to a process’s <samp class="SANS_TheSansMonoCd_W5Regular_11">EPROCESS</samp>
    structure. Sometimes used by rootkits in preparation for evasion techniques such
    as DKOM.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">PsSetCreateProcessNotifyRoutine(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Registers a driver callback that will be triggered when any new process is created
    or terminated. Sometimes used by rootkits to monitor process creations.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">PsSetCreateThreadNotifyRoutine(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Similar to <samp class="SANS_TheSansMonoCd_W5Regular_11">PsSetCreateProcessNotifyRoutine(Ex)</samp>,
    but for thread creation.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">PsSetLoadImageNotifyRoutine(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Registers a callback that will be triggered when a process loads an image into
    memory, such as a DLL module, or when a new driver is loaded. Sometimes used by
    rootkits to monitor module loads.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">QueryPerformanceCounter</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Queries the processor’s performance counter and returns the current value. Can
    be used as part of anti-debugging and VM detection techniques.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">QueueUserAPC</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Queues a new asynchronous procedure call and is sometimes invoked for process
    injection techniques, such as APC injection. An alternative function is <samp
    class="SANS_TheSansMonoCd_W5Regular_11">NtQueueApcThread</samp>.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ReadProcessMemory</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Reads data from a memory region inside a target process. Can be used for many
    reasons, such as inspecting process memory for hooks as part of anti-hooking techniques.
    An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">NtReadVirtualMemory</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">RegEnumKey(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Enumerates a registry key. Can be used for VM detection or to otherwise identify
    registry keys of interest.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">RegEnumValue</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Enumerates a registry key value.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">RegOpenKey(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Opens a registry key for reading or writing.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ResumeThread</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Resumes execution of a thread and is often used for process injection, such
    as process hollowing. An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">NtResumeThread</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">RollbackTransaction</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Rolls back an NTFS transaction and is used for process manipulation, such as
    in the process-doppelganging technique.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">RtlCopyMemory</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Copies the contents of a source buffer in memory to another memory region. Can
    be invoked to write malicious code into memory, such as injecting a hook.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">RtlQueryProcessHeapInformation</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns information about the current process’s heap. Can be used to detect
    a debugger.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">RtlZeroMemory</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Fills a region of memory with zeros. Can be used as an anti-forensics and defense
    evasion technique.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">SetFileAttributes</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Sets various attributes for a file or directory. Can be used to hide files and
    directories via the <samp class="SANS_TheSansMonoCd_W5Regular_11">hidden</samp>
    attribute.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">SetFileTime</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Sets various timestamps for a file or directory. Can be used to falsify file
    timestamps (timestomping).
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">SetPriorityClass</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Sets the priority of a process. Can be abused to lower the priority of endpoint
    defense processes in an attempt to circumvent them.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">SetThreadContext</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Sets the context of a thread and is sometimes used for process injection techniques,
    specifically process hollowing.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">SetUnhandledExceptionFilter</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Allows the calling program to supersede the top-level exception handler. Can
    be used as part of anti-debugging and covert code execution techniques.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">SetWindowsHookEx</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Installs an application-defined hook. Can be used for multiple purposes, such
    as hooking keyboard and mouse events and injecting malicious code.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">Sleep(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Suspends the execution of a thread for a specified amount of time. Can be used
    for many malicious purposes, such as sandbox evasion and various anti-debugging
    techniques.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">StartService</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Starts a service on the system. Can be used to establish persistence or load
    a malicious module.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">SuspendThread</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Suspends a thread and is used in certain process injection techniques, such
    as thread hijacking. An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">Wow64SuspendThread</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">TerminateProcess</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Terminates a specified process. Can be used as an anti-analysis technique.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">VirtualAlloc(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Allocates (reserves or commits) a region of virtual memory and is part of various
    process injection techniques. An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">NtAllocateVirtualMemory</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">VirtualQuery(Ex)</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Returns information about a region of memory. Can be used to detect hardware
    and memory breakpoints. An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">NtQueryVirtualMemory</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">WriteProcessMemory</samp>
  prefs: []
  type: TYPE_NORMAL
- en: Writes data to a region of memory in a process and is used as part of various
    process injection techniques. An alternative is the <samp class="SANS_TheSansMonoCd_W5Regular_11">NtWriteVirtualMemory</samp>
    function.
  prefs: []
  type: TYPE_NORMAL
