["```\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Music</title>\n  </head>\n  <body>\n  ❶ <button id=\"play\">Play</button>\n  ❷ <p id=\"playing\" style=\"display: none\">Playing</p>\n    <script src=\"script.js\"></script>\n  </body>\n</html> \n```", "```\n❶ let play = document.querySelector(\"#play\");\nlet playing = document.querySelector(\"#playing\");\n❷ play.addEventListener(\"click\", () => {\n  // Hide this button\n  play.style = \"display: none\";\n  playing.style = \" \";\n}); \n```", "```\n`--snip--`\nplay.addEventListener(\"click\", () => {\n // Hide this button\n play.style = \"display: none\";\n playing.style = \" \";\n\n❶ let audioCtx = new AudioContext();\n\n❷ let oscNode = audioCtx.createOscillator();\n  oscNode.frequency.value = 440;\n\n❸ let gainNode = audioCtx.createGain();\n  gainNode.gain.value = 0.5;\n\n❹ oscNode.connect(gainNode);\n  gainNode.connect(audioCtx.destination);\n\n❺ oscNode.start(audioCtx.currentTime);\n  oscNode.stop(audioCtx.currentTime + 2);\n}); \n```", "```\n`--snip--`\n <p id=\"playing\" style=\"display: none\">Playing</p>\n    <script src=\"https://unpkg.com/tone@14.7.77/build/Tone.js\"></script>\n <script src=\"script.js\"></script>\n </body>\n</html> \n```", "```\n`--snip--`\nplay.addEventListener(\"click\", () => {\n // Hide this button\n play.style = \"display: none\";\n playing.style = \" \";\n\n  Tone.start();\n\n  let synth = new Tone.Synth({\n    oscillator: {type: \"sine\"},\n    envelope: {attack: 0, decay: 0, sustain: 1, release: 0},\n volume: -6 \n }).toDestination();\n\n  synth.triggerAttackRelease(\"A4\", 2, 0);\n}); \n```", "```\n`--snip--`\n let synth = new Tone.Synth({\n    oscillator: {type: \"square\"},\n envelope: {attack: 0, decay: 0, sustain: 1, release: 0},\n volume: -6 \n }).toDestination();\n`--snip--` \n```", "```\n`--snip--`\n let synth = new Tone.Synth({\n oscillator: { type: \"square\" },\n    envelope: {attack: 0.8, decay: 0.3, sustain: 0.8, release: 1},\n volume: -6 \n }).toDestination();\n`--snip--` \n```", "```\n`--snip--`\n let synth = new Tone.Synth({\n oscillator: {type: \"square\"},\n ❶ envelope: { attack: 0.1, decay: 0.3, sustain: 0.8, release: 0.1 },\n volume: -6\n }).toDestination();\n\n  synth.triggerAttackRelease(\"A3\", 0.9, 0);\n  synth.triggerAttackRelease(\"B3\", 0.9, 1);\n  synth.triggerAttackRelease(\"C#4\", 0.9, 2);\n  synth.triggerAttackRelease(\"D4\", 0.9, 3);\n  synth.triggerAttackRelease(\"E4\", 0.9, 4);\n  synth.triggerAttackRelease(\"F#4\", 0.9, 5);\n  synth.triggerAttackRelease(\"G#4\", 0.9, 6);\n  synth.triggerAttackRelease(\"A4\", 0.9, 7);\n}); \n```", "```\n`--snip--`\n Tone.start();\n\n  let synth = new Tone.PolySynth(\n    Tone.Synth,\n    {\n      oscillator: { type: \"square\" },\n      envelope: { attack: 0.1, decay: 0.3, sustain: 0.8, release: 0.1 },\n      volume: -6\n    }\n  ).toDestination();\n\n  synth.triggerAttackRelease([\"A3\", \"C#4\"], 0.9, 0);\n  synth.triggerAttackRelease([\"B3\", \"D4\"], 0.9, 1);\n synth.triggerAttackRelease([\"C#4\", \"E4\"], 0.9, 2);\n  synth.triggerAttackRelease([\"D4\", \"F#4\"], 0.9, 3);\n  synth.triggerAttackRelease([\"E4\", \"G#4\"], 0.9, 4);\n  synth.triggerAttackRelease([\"F#4\", \"A4\"], 0.9, 5);\n  synth.triggerAttackRelease([\"G#4\", \"B4\"], 0.9, 6);\n  synth.triggerAttackRelease([\"E4\", \"A4\", \"C#5\"], 1.9, 7);\n}); \n```", "```\n`--snip--`\n Tone.start();\n\n❶ let synth = new Tone.Synth().toDestination();\n\n❷ let loop = new Tone.Loop(time => {\n  ❸ synth.triggerAttackRelease(\"C4\", \"16n\", time);\n  }, \"4n\");\n\n❹ loop.start(\"0:0:0\");\n  loop.stop(\"4:0:0\");\n\n  Tone.Transport.start();\n}); \n```", "```\n`--snip--`\n let synth = new Tone.Synth().toDestination();\n\n  new Tone.Loop(time => {\n    synth.triggerAttackRelease(\"C4\", \"16n\", time);\n  }, \"4n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n Tone.Transport.start();\n}); \n```", "```\n`--snip--`\n Tone.start();\n\n❶ let synth = new Tone.PolySynth(\n    Tone.Synth,\n    {\n      oscillator: { type: \"triangle\" },\n      volume: -9\n    }\n  ).toDestination();\n\n❷ let notes = [\"C4\", \"D4\", \"E4\", \"G4\", \"A4\", \"C5\"];\n\n  new Tone.Loop(time => {\n    for (let i = 0; i < 3; i++) {\n    ❸ if (Math.random() < 0.5) {\n      ❹ let note = notes[Math.floor(Math.random() * notes.length)];\n         synth.triggerAttackRelease(note, \"32n\", time);\n      }\n    }\n  }, \"8n\").start(\"0:0:0\").stop(\"8:0:0\");\n\n Tone.Transport.start();\n}); \n```", "```\n`--snip--`\n Tone.start();\n\n  let synth = new Tone.Synth().toDestination();\n\n  new Tone.Sequence(❶ (time, note) => {\n    synth.triggerAttackRelease(note, \"16n\", time);\n  }, ❷ [\"G4\", \"C4\", \"C4\", \"C4\"], ❸ \"4n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n Tone.Transport.start();\n}); \n```", "```\nsynth.triggerAttackRelease(\"G4\", \"16n\", \"0:0:0\");\nsynth.triggerAttackRelease(\"C4\", \"16n\", \"0:1:0\");\nsynth.triggerAttackRelease(\"C4\", \"16n\", \"0:2:0\");\nsynth.triggerAttackRelease(\"C4\", \"16n\", \"0:3:0\");\nsynth.triggerAttackRelease(\"G4\", \"16n\", \"1:0:0\");\nsynth.triggerAttackRelease(\"C4\", \"16n\", \"1:1:0\");\n`--snip--` \n```", "```\n`--snip--`\n new Tone.Sequence((time, note) => {\n synth.triggerAttackRelease(note, \"16n\", time);\n  }, [\"C4\", null, \"B3\", \"C4\", \"G3\", \"A3\", null, \"B3\"], \"8n\")\n    .start(\"0:0:0\")\n    .stop(\"4:0:0\");\n\n Tone.Transport.start();\n}); \n```", "```\n`--snip--`\n Tone.start();\n❶ let synth = new Tone.PolySynth(Tone.Synth).toDestination();\n\n  new Tone.Part((time, note) => {\n  synth.triggerAttackRelease(note, \"16n\", time);\n  }, [\n    [\"0:0:0\", ❷ [\"C3\", \"E4\"]],\n    [\"0:0:3\", \"D4\"],\n    [\"0:1:0\", \"C4\"],\n    [\"0:1:2\", \"D4\"],\n    [\"0:2:0\", [\"E3\", \"E4\"]],\n    [\"0:2:2\", \"E4\"],\n    [\"0:3:0\", \"E4\"],\n    [\"1:0:0\", [\"G3\", \"D4\"]],\n    [\"1:0:2\", \"D4\"],\n    [\"1:1:0\", \"D4\"],\n    [\"1:2:0\", [\"E3\", \"E4\"]],\n    [\"1:2:2\", \"G4\"],\n    [\"1:3:0\", \"G4\"]\n❸]).start(\"0:0:0\");\n\n Tone.Transport.start();\n}); \n```", "```\n`--snip--`\n Tone.start();\n\n❶ let hiHat = new Tone.NoiseSynth({\n    envelope: {\n      attack: 0.001, decay: 0.1, sustain: 0, release: 0\n    },\n    volume: -6\n  }).toDestination();\n\n❷ new Tone.Loop(time => {\n    hiHat.triggerAttackRelease(\"16n\", time);\n  }, \"8n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n Tone.Transport.start();\n}); \n```", "```\n`--snip--`\n Tone.start();\n\n❶ let hiHatFilter = new Tone.Filter(15000, \"bandpass\").toDestination();\n\n let hiHat = new Tone.NoiseSynth({\n envelope: {\n attack: 0.001, decay: 0.1, sustain: 0, release: 0\n },\n volume: -6\n❷}).connect(hiHatFilter);\n\n new Tone.Loop(time => {\n`--snip--` \n```", "```\n`--snip--`\n new Tone.Loop(time => {\n hiHat.triggerAttackRelease(\"16n\", time);\n }, \"8n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n  class Snare {\n    constructor() {\n    ❶ this.noiseFilter = new Tone.Filter(5000, \"bandpass\").toDestination();\n    ❷ this.noiseSynth = new Tone.NoiseSynth({\n        envelope: {\n          attack: 0.001, decay: 0.1, sustain: 0, release: 0\n        },\n        volume: -12\n      }).connect(this.noiseFilter);\n\n ❸ this.synth = new Tone.Synth({\n        envelope: {\n          attack: 0.0001, decay: 0.1, sustain: 0, release: 0\n        },\n        oscillator: {type: \"sine\"},\n        volume: -12\n      }).toDestination();\n    }\n\n  ❹ triggerAttackRelease(duration, when) {\n      this.noiseSynth.triggerAttackRelease(duration, when);\n      this.synth.triggerAttackRelease(\"G3\", duration, when);\n     }\n    }\n\n❺ let snare = new Snare();\n\n❻ new Tone.Loop(time => {\n    snare.triggerAttackRelease(\"16n\", time);\n  }, \"2n\").start(\"0:1:0\").stop(\"4:0:0\");\n\n Tone.Transport.start();\n}); \n```", "```\n`--snip--`\n new Tone.Loop(time => {\n snare.triggerAttackRelease(\"16n\", time);\n }, \"2n\").start(\"0:1:0\").stop(\"4:0:0\");\n\n  let kick = new Tone.MembraneSynth({\n  ❶ pitchDecay: 0.02,\n    octaves: 6,\n    volume: -9\n  }).toDestination();\n\n❷ new Tone.Loop(time => {\n    kick.triggerAttackRelease(50, \"16n\", time);\n  }, \"2n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n Tone.Transport.start();\n}); \n```", "```\n`--snip--`\n Tone.start();\n\n  let reverb = new Tone.Reverb({\n    decay: 1,\n wet: 0.3\n  }).toDestination();\n\n  let hiHatFilter = new Tone.Filter(15000, \"bandpass\").connect(reverb);\n\n let hiHat = new Tone.NoiseSynth({\n envelope: {\n attack: 0.001, decay: 0.1, sustain: 0, release: 0\n },\n volume: -6\n }).connect(hiHatFilter);\n\n new Tone.Loop(time => {\n hiHat.triggerAttackRelease(\"16n\", time);\n }, \"8n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n class Snare {\n constructor() {\n      this.noiseFilter = new Tone.Filter(5000, \"bandpass\").connect(reverb);\n this.noiseSynth = new Tone.NoiseSynth({\n envelope: {\n attack: 0.001, decay: 0.1, sustain: 0, release: 0\n },\n volume: -12\n }).connect(this.noiseFilter);\n\n this.synth = new Tone.Synth({\n envelope: {\n attack: 0.0001, decay: 0.1, sustain: 0, release: 0\n },\n oscillator: {type: \"sine\"},\n volume: -12\n      }).connect(reverb);\n }\n\n triggerAttackRelease(duration, when) {\n this.noiseSynth.triggerAttackRelease(duration, when);\n this.synth.triggerAttackRelease(\"G3\", duration, when);\n }\n }\n\n let snare = new Snare();\n\n new Tone.Loop(time => {\n snare.triggerAttackRelease(\"16n\", time);\n }, \"2n\").start(\"0:1:0\").stop(\"4:0:0\");\n\n let kick = new Tone.MembraneSynth({\n pitchDecay: 0.02,\n octaves: 6,\n volume: -9\n  }).connect(reverb);\n\n new Tone.Loop(time => {\n kick.triggerAttackRelease(50, \"16n\", time);\n }, \"2n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n Tone.Transport.start();\n}); \n```", "```\nkick:  x…x…\nsnare: ..x…x.\nhiHat: xxxxxxxx \n```", "```\n`--snip--`\n Tone.start();\n\n  // Converts a string to an array of notes or null.\n  // Dots in the string become nulls in the array and are silent.\n  function mkSequence(pattern) {\n    return pattern.split(\" \").map(value => {\n      if (value == \".\") {\n        return null;\n      } else {\n        return value;\n      }\n    });\n  }\n\n let reverb = new Tone.Reverb({\n`--snip--` \n```", "```\n`--snip--`\n  }\n\n  let drumPattern = {\n    kick:  \"x…x…\",\n    snare: \"..x…x.\",\n    hiHat: \"xxxxxxxx\",\n  };\n\n  let reverb = new Tone.Reverb({\n`--snip--` \n```", "```\n--`snip`--\n }).connect(hiHatFilter);\n\n  new Tone.Sequence(time => {\n    hiHat.triggerAttackRelease(\"16n\", time);\n  }, mkSequence(drumPattern.hiHat), \"8n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n  class Snare {\n--snip--\n let snare = new Snare();\n\n   new Tone.Sequence(time => {\n    snare.triggerAttackRelease(\"16n\", time);\n  }, mkSequence(drumPattern.snare), \"8n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n let kick = new Tone.MembraneSynth({\n pitchDecay: 0.02,\n octaves: 6,\n volume: -9\n }).connect(reverb);\n\n   new Tone.Sequence(time => {\n    kick.triggerAttackRelease(50, \"16n\", time);\n  }, mkSequence(drumPattern.kick), \"8n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n Tone.Transport.start();\n}); \n```", "```\n`--snip--`\n new Tone.Sequence(time => {\n kick.triggerAttackRelease(50, \"16n\", time);\n }, mkSequence(drumPattern.kick), \"8n\").start(\"0:0:0\").stop(\"4:0:0\");\n\n  // Samples from freesound.org:\n  // https://freesound.org/people/MTG/sounds/357432/\n  // https://freesound.org/people/MTG/sounds/357336/\n  // https://freesound.org/people/MTG/sounds/357546/\n  const sampler = new Tone.Sampler({\n    urls: {\n      \"C5\": \"trumpet-c5.mp3\",\n      \"D5\": \"trumpet-d5.mp3\",\n      \"F5\": \"trumpet-f5.mp3\"\n    },\n    baseUrl: \"https://skilldrick-jscc.s3.us-west-2.amazonaws.com/\",\n    attack: 0,\n    release: 1,\n    volume: -24,\n    onload: () => {\n      sampler.triggerAttackRelease([\"C5\", \"E5\", \"G5\"], \"1n\", 0);\n    }\n  }).toDestination();\n\n Tone.Transport.start();\n}); \n```"]