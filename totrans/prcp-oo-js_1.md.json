["```\n`// strings`\n`var` name `=` `\"Nicholas\"`;\n`var` selection `=` `\"a\"`;\n\n`// numbers`\n`var` count `=` `25`;\n`var` cost `=` `1.51`;\n\n`// boolean`\n`var` found `=` `true`;\n\n`// null`\n`var` object `=` `null`;\n\n`// undefined`\n`var` flag `=` `undefined`;\n`var` ref;    `// assigned undefined automatically`\n```", "```\n`var` color1 `=` `\"red\"`;\n`var` color2 `=` color1;\n```", "```\n`var` color1 `=` `\"red\"`;\n`var` color2 `=` color1;\n\nconsole.log(color1);    `// \"red\"`\nconsole.log(color2);    `// \"red\"`\n\ncolor1 `=` `\"blue\"`;\n\nconsole.log(color1);    `// \"blue\"`\nconsole.log(color2);    `// \"red\"`\n```", "```\nconsole.log(`typeof` `\"Nicholas\"`);     `// \"string\"`\nconsole.log(`typeof` `10`);             `// \"number\"`\nconsole.log(`typeof` `5.1`);            `// \"number\"`\nconsole.log(`typeof` `true`);           `// \"boolean\"`\nconsole.log(`typeof` `undefined`);      `// \"undefined\"`\n```", "```\nconsole.log(`typeof` `null`);        `// \"object\"`\n```", "```\nconsole.log(value `===` `null`);        `// true or false`\n```", "```\nconsole.log(`\"5\"` `==` `5`);              `// true`\nconsole.log(`\"5\"` `===` `5`);             `// false`\n\nconsole.log(`undefined` `==` `null`);     `// true`\nconsole.log(`undefined` `===` `null`);    `// false`\n```", "```\n`var` name `=` `\"Nicholas\"`;\n`var` lowercaseName `=` name.toLowerCase();     `// convert to lowercase`\n`var` firstLetter `=` name.charAt(`0`);           `// get first character`\n`var` middleOfName `=` name.substring(`2`, `5`);    `// get characters 2-4`\n\n`var` count `=` `10`;\n`var` fixedCount `=` count.toFixed(`2`);          `// convert to \"10.00\"`\n`var` hexCount `=` count.toString(`16`);          `// convert to \"a\"`\n\n`var` flag `=` `true`;\n`var` stringFlag `=` flag.toString();           `// convert to \"true\"`\n```", "```\n`var` object `=` `new` `Object`();\n```", "```\n`var` object1 `=` `new` `Object`();\n`var` object2 `=` object1;\n```", "```\n`var` object1 `=` `new` `Object`();\n\n`// do something`\n\nobject1 `=` `null`;     `// dereference`\n```", "```\n`var` object1 `=` `new` `Object`();\n`var` object2 `=` object1;\n\nobject1.myCustomProperty `=` `\"Awesome!\"`;\nconsole.log(object2.myCustomProperty);      `// \"Awesome!\"`\n```", "```\n`var` items `=` `new` `Array`();\n`var` now `=` `new` `Date`();\n`var` error `=` `new` `Error`(`\"Something bad happened.\"`);\n`var` func `=` `new` `Function`(`\"console.log('Hi');\"`);\n`var` object `=` `new` `Object`();\n`var` re `=` `new` `RegExp`(`\"\\\\d+\"`);\n```", "```\n`var` book `=` {\n    name: `\"The Principles of Object-Oriented JavaScript\"`,\n    year: `2014`\n};\n```", "```\n`var` book `=` {\n    `\"name\"``:` `\"The Principles of Object-Oriented JavaScript\"`,\n    `\"year\"``:` `2014`\n};\n```", "```\n`var` book `=` `new` `Object`();\nbook.name `=` `\"The Principles of Object-Oriented JavaScript\"`;\nbook.year `=` `2014`;\n```", "```\n`var` colors `=` [ `\"red\"`, `\"blue\"`, `\"green\"` ];\nconsole.log(colors[`0`]);     `// \"red\"`\n```", "```\n`var` colors `=` `new` `Array`(`\"red\"`, `\"blue\"`, `\"green\"`)\nconsole.log(colors[`0`]);     `// \"red\"`\n```", "```\n`function` reflect(value) {\n    `return` value;\n}\n\n`// is the same as`\n\n`var` reflect `=` `new` `Function`(`\"value\"`, `\"return value;\"`);\n```", "```\n`var` numbers `=` `/\\d+/g`;\n\n`// is the same as`\n\n`var` numbers `=` `new` `RegExp`(`\"\\\\d+\"`, `\"g\"`);\n```", "```\n`var` array `=` [];\narray.push(`12345`);\n```", "```\n`var` array `=` [];\narray[`\"push\"`](`12345`);\n```", "```\n`var` array `=` [];\n`var` method `=` `\"push\"`;\narray[method](`12345`);\n```", "```\n`function` reflect(value) {\n    `return` value;\n}\n\nconsole.log(`typeof` reflect);    `// \"function\"`\n```", "```\n`var` items `=` [];\n`var` object `=` {};\n\n`function` reflect(value) {\n    `return` value;\n}\n\nconsole.log(items `instanceof` `Array`);       `// true`\nconsole.log(object `instanceof` `Object`);     `// true`\nconsole.log(reflect `instanceof` `Function`);  `// true`\n```", "```\n`var` items `=` [];\n`var` object `=` {};\n\n`function` reflect(value) {\n    `return` value;\n}\n\nconsole.log(items `instanceof` `Array`);        `// true`\nconsole.log(items `instanceof` `Object`);       `// true`\nconsole.log(object `instanceof` `Object`);      `// true`\nconsole.log(object `instanceof` `Array`);       `// false`\nconsole.log(reflect `instanceof` `Function`);   `// true`\nconsole.log(reflect `instanceof` `Object`);     `// true`\n```", "```\n`var` items `=` [];\n\nconsole.log(`Array`.isArray(items));      `// true`\n```", "```\n`var` name `=` `\"Nicholas\"`;\n`var` firstChar `=` name.charAt(`0`);\nconsole.log(firstChar);                 `// \"N\"`\n```", "```\n`// what the JavaScript engine does`\n`var` name `=` `\"Nicholas\"`;\n`var` temp `=` `new` `String`(name);\n`var` firstChar `=` temp.charAt(`0`);\ntemp `=` `null`;\nconsole.log(firstChar);                 `// \"N\"`\n```", "```\n`var` name `=` `\"Nicholas\"`;\nname.last `=` `\"Zakas\"`;\n\nconsole.log(name.last);                 `// undefined`\n```", "```\n`// what the JavaScript engine does`\n`var` name `=` `\"Nicholas\"`;\n`var` temp `=` `new` `String`(name);\ntemp.last `=` `\"Zakas\"`;\ntemp `=` `null`;                           `// temporary object destroyed`\n\n`var` temp `=` `new` `String`(name);\nconsole.log(temp.last);                `// undefined`\ntemp `=` `null`;\n```", "```\n`var` name `=` `\"Nicholas\"`;\n`var` count `=` `10`;\n`var` found `=` `false`;\n\nconsole.log(name instanceof String);    `// false`\nconsole.log(count instanceof Number);   `// false`\nconsole.log(found instanceof Boolean);  `// false`\n```", "```\n`var` name `=` `new` `String`(`\"Nicholas\"`);\n`var` count `=` `new` `Number`(`10`);\n`var` found `=` `new` `Boolean`(`false`);\n\nconsole.log(`typeof` name);           `// \"object\"`\nconsole.log(`typeof` count);          `// \"object\"`\nconsole.log(`typeof` found);          `// \"object\"`\n```", "```\n`var` found `=` `new` `Boolean`(`false`);\n\n`if` (found) {\n    console.log(\"F`ound``\"``);`       `// this executes`\n}\n```"]