["```\nsite:*.example.com\n```", "```\nsite:example.com inurl:app/kibana\n```", "```\nsite:s3.amazonaws.com `COMPANY_NAME`\n```", "```\nsite:example.com ext:php\nsite:example.com ext:log\n```", "```\nsite:example.com ext:txt password\n```", "```\n$ **whois** `facebook.com`\n```", "```\n$ **nslookup facebook.com**\nServer: 192.168.0.1\nAddress: 192.168.0.1#53\nNon-authoritative answer:\nName: facebook.com\nAddress: 157.240.2.35\n```", "```\n$ whois 157.240.2.35**NetRange:       157.240.0.0 - 157.240.255.255**\nCIDR:           157.240.0.0/16\nNetName:        THEFA-3\nNetHandle:      NET-157-240-0-0-1\nParent:         NET157 (NET-157-0-0-0-0)\nNetType:        Direct Assignment\nOriginAS:\nOrganization:   Facebook, Inc. (THEFA-3)\nRegDate:        2015-05-14\nUpdated:        2015-05-14\nRef:            https://rdap.arin.net/registry/ip/157.240.0.0\nOrgName:        Facebook, Inc.\nOrgId:          THEFA-3\nAddress:        1601 Willow Rd.\nCity:           Menlo Park\nStateProv:      CAPostalCode:     94025\nCountry:        US\nRegDate:        2004-08-11\nUpdated:        2012-04-17\nRef:            https://rdap.arin.net/registry/entity/THEFA-3\nOrgAbuseHandle: OPERA82-ARIN\nOrgAbuseName:   Operations\nOrgAbusePhone:  +1-650-543-4800\nOrgAbuseEmail:  noc@fb.com\nOrgAbuseRef:    https://rdap.arin.net/registry/entity/OPERA82-ARIN\nOrgTechHandle: OPERA82-ARIN\nOrgTechName:   Operations\nOrgTechPhone:  +1-650-543-4800\nOrgTechEmail:  noc@fb.com\nOrgTechRef:    https://rdap.arin.net/registry/entity/OPERA82-ARIN\n```", "```\n$ **whois -h whois.cymru.com 157.240.2.20**\nAS      | IP               | AS Name\n32934   | 157.240.2.20     | FACEBOOK, US\n$ **whois -h whois.cymru.com 157.240.2.27**\nAS      | IP               | AS Name\n32934   | 157.240.2.27     | FACEBOOK, US\n$ **whois -h whois.cymru.com 157.240.2.35**\nAS      | IP               | AS Name\n32934   | 157.240.2.35     | FACEBOOK, US\n```", "```\nX509v3 Subject Alternative Name: DNS:*.facebook.com DNS:*.facebook.net DNS:*.fbcdn.net DNS:*.fbsbx.com DNS:*.messenger.com DNS:facebook.com DNS:messenger.com DNS:*.m.facebook.com DNS:*.xx.fbcdn.net DNS:*.xy.fbcdn.net DNS:*.xz.fbcdn.net\n```", "```\nsort -u wordlist1.txt wordlist2.txt\n```", "```\ngobuster dns -d `target_domain` -w `wordlist` \n```", "```\n$ **nmap scanme.nmap.org**\nNmap scan report for scanme.nmap.org (45.33.32.156)\nHost is up (0.086s latency).\nOther addresses for scanme.nmap.org (not scanned): 2600:3c01::f03c:91ff:fe18:bb2f\nNot shown: 993 closed ports\nPORT STATE SERVICE\n22/tcp open ssh\n25/tcp filtered smtp\n80/tcp open http\n135/tcp filtered msrpc\n445/tcp filtered microsoft-ds\n9929/tcp open nping-echo\n31337/tcp open Elite\nNmap done: 1 IP address (1 host up) scanned in 230.83 seconds\n```", "```\n$ **./dirsearch.py -u scanme.nmap.org -e php**\nExtensions: php | HTTP method: get | Threads: 10 | Wordlist size: 6023\nError Log: /tools/dirsearch/logs/errors.log\nTarget: scanme.nmap.org\n[12:31:11] Starting:\n[12:31:13] 403 -  290B  - /.htusers\n[12:31:15] 301 -  316B  - /.svn  ->  http://scanme.nmap.org/.svn/\n[12:31:15] 403 -  287B  - /.svn/\n[12:31:15] 403 -  298B  - /.svn/all-wcprops\n[12:31:15] 403 -  294B  - /.svn/entries\n[12:31:15] 403 -  297B  - /.svn/prop-base/\n[12:31:15] 403 -  296B  - /.svn/pristine/\n[12:31:15] 403 -  291B  - /.svn/tmp/\n[12:31:15] 403 -  315B  - /.svn/text-base/index.php.svn-base\n[12:31:15] 403 -  293B  - /.svn/props/\n[12:31:15] 403 -  297B  - /.svn/text-base/\n[12:31:40] 301 -  318B  - /images  ->  http://scanme.nmap.org/images/\n[12:31:40] 200 -   7KB  - /index\n[12:31:40] 200 -   7KB  - /index.html\n[12:31:53] 403 -  295B  - /server-status\n[12:31:53] 403 -  296B  - /server-status/\n[12:31:54] 301 -  318B  - /shared  ->  http://scanme.nmap.org/shared/\nTask Completed \n```", "```\ngobuster dir -u `target_url` -w `wordlist`\n```", "```\nsite:s3.amazonaws.com `COMPANY_NAME`\nsite:amazonaws.com `COMPANY_NAME`\n```", "```\namazonaws s3 `COMPANY_NAME`\namazonaws bucket `COMPANY_NAME`\namazonaws `COMPANY_NAME`\ns3 `COMPANY_NAME`\n```", "```\npip install awscli\n```", "```\naws s3 ls s3://`BUCKET_NAME`/\n```", "```\naws s3 cp s3://`BUCKET_NAME`/`FILE_NAME/path/to/local/directory`\n```", "```\naws s3 cp TEST_FILE s3://`BUCKET_NAME`/\n```", "```\naws s3 rm s3://`BUCKET_NAME`/TEST_FILE\n```", "```\n$ **nmap scanme.nmap.org -sV**\nStarting Nmap 7.60 ( https://nmap.org )\nNmap scan report for scanme.nmap.org (45.33.32.156)Host is up (0.065s latency).\nOther addresses for scanme.nmap.org (not scanned): 2600:3c01::f03c:91ff:fe18:bb2f\nNot shown: 992 closed ports\nPORT STATE SERVICE VERSION\n22/tcp open ssh **OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0)**\n25/tcp filtered smtp\n80/tcp open http **Apache httpd 2.4.7 ((Ubuntu))**\n135/tcp filtered msrpc\n139/tcp filtered netbios-ssn\n445/tcp filtered microsoft-ds\n9929/tcp open nping-echo **Nping echo**\n31337/tcp open tcpwrapped\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nService detection performed. Please report any incorrect results at https://nmap.org/submit/.\nNmap done: 1 IP address (1 host up) scanned in 9.19 seconds\n```", "```\nServer: Apache/2.0.6 (Ubuntu)\nX-Powered-By: PHP/5.0.1\nX-Generator: Drupal 8\nX-Drupal-Dynamic-Cache: UNCACHEABLE\nSet-Cookie: PHPSESSID=abcde;\n```", "```\n#!/bin/bash\nnmap scanme.nmap.org\n/PATH/TO/dirsearch.py -u scanme.nmap.org -e php\n```", "```\n#!/bin/bash\nnmap $1\n/PATH/TO/dirsearch.py -u $1 -e php\n```", "```\nexport PATH=\"PATH_TO_DIRSEARCH:$PATH\"\n```", "```\n#!/bin/bash\nnmap $1\ndirsearch.py -u $1 -e php\n```", "```\n$ ./recon.sh\n```", "```\npermission denied: ./recon.sh\n```", "```\n$ chmod +x recon.sh\n```", "```\n$ chmod 700 recon.sh\n```", "```\n$ **./recon.sh scanme.nmap.org**\nStarting Nmap 7.60 ( https://nmap.org )\nNmap scan report for scanme.nmap.org (45.33.32.156)\nHost is up (0.062s latency).\nOther addresses for scanme.nmap.org (not scanned): 2600:3c01::f03c:91ff:fe18:bb2f\nNot shown: 992 closed ports\nPORT      STATE    SERVICE\n22/tcp    open     ssh\n25/tcp    filtered smtp\n80/tcp    open     http\n135/tcp   filtered msrpc\n139/tcp   filtered netbios-ssn\n445/tcp   filtered microsoft-ds\n9929/tcp  open     nping-echo\n31337/tcp open     Elite\nNmap done: 1 IP address (1 host up) scanned in 2.16 seconds\nExtensions: php | HTTP method: get | Threads: 10 | Wordlist size: 6023\nError Log: /Users/vickieli/tools/dirsearch/logs/errors.log\nTarget: scanme.nmap.org\n[11:14:30] Starting:\n[11:14:32] 403 -  295B  - /.htaccessOLD2\n[11:14:32] 403 -  294B  - /.htaccessOLD\n[11:14:33] 301 -  316B  - /.svn  ->  http://scanme.nmap.org/.svn/\n[11:14:33] 403 -  298B  - /.svn/all-wcprops\n[11:14:33] 403 -  294B  - /.svn/entries\n[11:14:33] 403 -  297B  - /.svn/prop-base/\n[11:14:33] 403 -  296B  - /.svn/pristine/\n[11:14:33] 403 -  315B  - /.svn/text-base/index.php.svn-base\n[11:14:33] 403 -  297B  - /.svn/text-base/\n[11:14:33] 403 -  293B  - /.svn/props/\n[11:14:33] 403 -  291B  - /.svn/tmp/\n[11:14:55] 301 -  318B  - /images  ->  http://scanme.nmap.org/images/ \n[11:14:56] 200 -    7KB - /index\n[11:14:56] 200 -    7KB - /index.html[11:15:08] 403 -  296B  - /server-status/\n[11:15:08] 403 -  295B  - /server-status\n[11:15:08] 301 -  318B  - /shared  ->  http://scanme.nmap.org/shared/\nTask Completed\n```", "```\n#!/bin/bash\necho \"Creating directory $1_recon.\" 1\nmkdir $1_recon 2\nnmap $1 > $1_recon/nmap 3\necho \"The results of nmap scan are stored in $1_recon/nmap.\"\n/PATH/TO/dirsearch.py -u $1 -e php 4 --simple-report=$1_recon/dirsearch\necho \"The results of dirsearch scan are stored in $1_recon/dirsearch.\"\n```", "```\n#!/bin/bash\nPATH_TO_DIRSEARCH=\"/Users/vickieli/tools/dirsearch\"\nDOMAIN=$1\nDIRECTORY=${DOMAIN}_recon 1\necho \"Creating directory $DIRECTORY.\"\nmkdir $DIRECTORYnmap $DOMAIN > $DIRECTORY/nmap\necho \"The results of nmap scan are stored in $DIRECTORY/nmap.\"\n$PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php –simple-report=$DIRECTORY/dirsearch 2\necho \"The results of dirsearch scan are stored in $DIRECTORY/dirsearch.\"\n```", "```\n#!/bin/bash\nPATH_TO_DIRSEARCH=\"/Users/vickieli/tools/dirsearch\"\nTODAY=$(date) 1\necho \"This scan was created on $TODAY\" 2\nDOMAIN=$1\nDIRECTORY=${DOMAIN}_recon\necho \"Creating directory $DIRECTORY.\"\nmkdir $DIRECTORY\nnmap $DOMAIN > $DIRECTORY/nmap\necho \"The results of nmap scan are stored in $DIRECTORY/nmap.\"\n$PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php --simple-report=$DIRECTORY/dirsearch\necho \"The results of dirsearch scan are stored in $DIRECTORY/dirsearch.\"\n```", "```\nif [ `condition 1` ]\nthen # Do if condition 1 is satisfied\nelif [ `condition 2` ]\nthen # Do if condition 2 is satisfied, and condition 1 is not satisfied\nelse # Do something else if neither condition is satisfied\nfi\n```", "```\n$ ./recon.sh scanmme.nmap.org MODE\n```", "```\n#!/bin/bash\nPATH_TO_DIRSEARCH=\"/Users/vickieli/tools/dirsearch\"\nTODAY=$(date)\necho \"This scan was created on $TODAY\"\nDIRECTORY=${DOMAIN}_recon\necho \"Creating directory $DIRECTORY.\"\nmkdir $DIRECTORY \nif [ $2 == \"nmap-only\" ] 1\nthen nmap $DOMAIN > $DIRECTORY/nmap 2 echo \"The results of nmap scan are stored in $DIRECTORY/nmap.\"\nelif [ $2 == \"dirsearch-only\" ] 3\nthen   $PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php –simple-report=$DIRECTORY/dirsearch 4 echo \"The results of dirsearch scan are stored in $DIRECTORY/dirsearch.\"\nelse 5 nmap $DOMAIN > $DIRECTORY/nmap 6 echo \"The results of nmap scan are stored in $DIRECTORY/nmap.\" $PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php --simple-report=$DIRECTORY/dirsearch echo \"The results of dirsearch scan are stored in $DIRECTORY/dirsearch.\"\nfi\n```", "```\n$ ./recon.sh scanme.nmap.org nmap-only\n$ ./recon.sh scanme.nmap.org dirsearch-only\n```", "```\n$ ./recon.sh scanme.nmap.org nmap-only\n$ ./recon.sh scanme.nmap.org dirsearch-only\n$ ./recon.sh scanme.nmap.org crt-only\n```", "```\ncase $`VARIABLE_NAME` in case1) `Do something` ;; case2) `Do something` ;;  caseN) `Do something` ;; *)        Default case, this case is executed if no other case matches. ;; \nesac\n```", "```\n#!/bin/bash\nPATH_TO_DIRSEARCH=\"/Users/vickieli/tools/dirsearch\"\nTODAY=$(date)\necho \"This scan was created on $TODAY\"\nDOMAIN=$1\nDIRECTORY=${DOMAIN}_recon\necho \"Creating directory $DIRECTORY.\"\nmkdir $DIRECTORY\ncase $2 in nmap-only) nmap $DOMAIN > $DIRECTORY/nmap echo \"The results of nmap scan are stored in $DIRECTORY/nmap.\" ;; dirsearch-only) $PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php --simple-report=$DIRECTORY/dirsearch echo \"The results of dirsearch scan are stored in $DIRECTORY/dirsearch.\" ;;          crt-only)        curl \"https://crt.sh/?q=$DOMAIN&output=json\" -o $DIRECTORY/crt 1 echo \"The results of cert parsing is stored in $DIRECTORY/crt.\" ;; *) nmap $DOMAIN > $DIRECTORY/nmap echo \"The results of nmap scan are stored in $DIRECTORY/nmap.\" $PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php --simple-report=$DIRECTORY/dirsearch echo \"The results of dirsearch scan are stored in $DIRECTORY/dirsearch.\" curl \"https://crt.sh/?q=$DOMAIN&output=json\" -o $DIRECTORY/crt echo \"The results of cert parsing is stored in $DIRECTORY/crt.\" ;;\nesac\n```", "```\n`FUNCTION_NAME()`\n{ `DO_SOMETHING`\n}\n```", "```\n#!/bin/bash\nPATH_TO_DIRSEARCH=\"/Users/vickieli/tools/dirsearch\"\nTODAY=$(date)\necho \"This scan was created on $TODAY\"\nDOMAIN=$1\nDIRECTORY=${DOMAIN}_recon\necho \"Creating directory $DIRECTORY.\"\nmkdir $DIRECTORY\nnmap_scan() 1\n{ nmap $DOMAIN > $DIRECTORY/nmap echo \"The results of nmap scan are stored in $DIRECTORY/nmap.\"\n}\ndirsearch_scan() 2\n{ $PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php --simple-report=$DIRECTORY/dirsearch echo \"The results of dirsearch scan are stored in $DIRECTORY/dirsearch.\"\n}\ncrt_scan() 3\n{ curl \"https://crt.sh/?q=$DOMAIN&output=json\" -o $DIRECTORY/crt echo \"The results of cert parsing is stored in $DIRECTORY/crt.\"\n}\ncase $2 in 4 nmap-only) nmap_scan ;; dirsearch-only) dirsearch_scan ;;          crt-only)        crt_scan ;; *)        nmap_scan dirsearch_scan crt_scan ;; \nesac\n```", "```\nnmap_scan()\n{ nmap $1 > $DIRECTORY/nmap  echo \"The results of nmap scan are stored in $DIRECTORY/nmap.\"\n}\nnmap_scan\n```", "```\ngrep password file.txt\n```", "```\n$ grep 80 TARGET_DIRECTORY/nmap\n80/tcp open http\n```", "```\nStarting Nmap 7.60 ( https://nmap.org )\nNmap scan report for scanme.nmap.org (45.33.32.156)\nHost is up (0.065s latency).\nOther addresses for scanme.nmap.org (not scanned): 2600:3c01::f03c:91ff:fe18:bb2f\nNot shown: 992 closed ports\nPORT STATE SERVICE\n22/tcp open ssh\n25/tcp filtered smtp\n80/tcp open http\n135/tcp filtered msrpc\n139/tcp filtered netbios-ssn\n445/tcp filtered microsoft-ds\n9929/tcp open nping-echo\n31337/tcp open Elite\nNmap done: 1 IP address (1 host up) scanned in 2.43 seconds\n```", "```\nPORT STATE SERVICE\n22/tcp open ssh\n25/tcp filtered smtp\n80/tcp open http\n135/tcp filtered msrpc\n139/tcp filtered netbios-ssn\n445/tcp filtered microsoft-ds\n9929/tcp open nping-echo\n31337/tcp open Elite\n```", "```\ngrep -E \"^\\S+\\s+\\S+\\s+\\S+$\" DIRECTORY/nmap > DIRECTORY/nmap_cleaned\n```", "```\n\"^\\S+\\s+\\S+\\s+\\S+$\"\n```", "```\nPORT STATE SERVICE\n22/tcp open ssh\n25/tcp filtered smtp\n80/tcp open http\n135/tcp filtered msrpc\n139/tcp filtered netbios-ssn\n445/tcp filtered microsoft-ds\n9929/tcp open nping-echo\n31337/tcp open Elite\n```", "```\n\"^\\s*\\S+\\s+\\S+\\s+\\S+\\s*$\"\n```", "```\n$ jq -r \".[] | .name_value\" $DOMAIN/crt\n```", "```\n#!/bin/bash\nPATH_TO_DIRSEARCH=\"/Users/vickieli/tools/dirsearch\"\nDOMAIN=$1\nDIRECTORY=${DOMAIN}_recon\necho \"Creating directory $DIRECTORY.\"\nmkdir $DIRECTORY\nnmap_scan()\n{ nmap $DOMAIN > $DIRECTORY/nmap echo \"The results of nmap scan are stored in $DIRECTORY/nmap.\"\n}\ndirsearch_scan()\n{ $PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php --simple-report=$DIRECTORY/dirsearch echo \"The results of dirsearch scan are stored in $DIRECTORY/dirsearch.\"\n}\ncrt_scan()\n{ curl \"https://crt.sh/?q=$DOMAIN&output=json\" -o $DIRECTORY/crt echo \"The results of cert parsing is stored in $DIRECTORY/crt.\"\n}\ncase $2 in nmap-only) nmap_scan ;; dirsearch-only) dirsearch_scan ;; crt-only) crt_scan ;; *) nmap_scan dirsearch_scan crt_scan ;; \nesac\necho \"Generating recon report from output files...\"\nTODAY=$(date)\necho \"This scan was created on $TODAY\" > $DIRECTORY/report 1\necho \"Results for Nmap:\" >> $DIRECTORY/report\ngrep -E \"^\\s*\\S+\\s+\\S+\\s+\\S+\\s*$\" $DIRECTORY/nmap >> $DIRECTORY/report 2\necho \"Results for Dirsearch:\" >> $DIRECTORY/report\ncat $DIRECTORY/dirsearch >> $DIRECTORY/report 3\necho \"Results for crt.sh:\" >> $DIRECTORY/report\njq -r \".[] | .name_value\" $DIRECTORY/crt >> $DIRECTORY/report 4\n```", "```\n./recon.sh facebook.com fbcdn.net nmap-only\n```", "```\ngetopts `OPTSTRING` `NAME`\n```", "```\ngetopts \"m:\" OPTION\nMODE=$OPTARG\n```", "```\n./recon.sh -m nmap-only facebook.com fbcdn.net\n```", "```\nfor i in `LIST_OF_VALUES`\ndo `DO SOMETHING`\ndone\n```", "```\n1 for i in \"${@:$OPTIND:$#}\"\ndo # Do the scans for $i\ndone\n```", "```\n\"${INPUT_ARRAY:START_INDEX:END_INDEX}\"\n```", "```\n#!/bin/bash\nPATH_TO_DIRSEARCH=\"/Users/vickieli/tools/dirsearch\"\nnmap_scan()\n{ nmap $DOMAIN > $DIRECTORY/nmap echo \"The results of nmap scan are stored in $DIRECTORY/nmap.\"\n}\ndirsearch_scan()\n{ $PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php --simple-report=$DIRECTORY/dirsearch echo \"The results of dirsearch scan are stored in $DIRECTORY/dirsearch.\"\n}\ncrt_scan()\n{ curl \"https://crt.sh/?q=$DOMAIN&output=json\" -o $DIRECTORY/crt echo \"The results of cert parsing is stored in $DIRECTORY/crt.\"\n}\ngetopts \"m:\" OPTION\nMODE=$OPTARG\nfor i in \"${@:$OPTIND:$#}\" 1\ndo DOMAIN=$i DIRECTORY=${DOMAIN}_recon echo \"Creating directory $DIRECTORY.\" mkdir $DIRECTORY case $MODE in nmap-only) nmap_scan ;; dirsearch-only) dirsearch_scan ;; crt-only) crt_scan ;; *) nmap_scan dirsearch_scan crt_scan ;;      esac echo \"Generating recon report for $DOMAIN...\" TODAY=$(date) echo \"This scan was created on $TODAY\" > $DIRECTORY/report if [ -f $DIRECTORY/nmap ];then 2 echo \"Results for Nmap:\" >> $DIRECTORY/report grep -E \"^\\s*\\S+\\s+\\S+\\s+\\S+\\s*$\" $DIRECTORY/nmap >> $DIRECTORY/report fi if [ -f $DIRECTORY/dirsearch ];then 3 echo \"Results for Dirsearch:\" >> $DIRECTORY/report cat $DIRECTORY/dirsearch >> $DIRECTORY/report fi if [ -f $DIRECTORY/crt ];then 4 echo \"Results for crt.sh:\" >> $DIRECTORY/report jq -r \".[] | .name_value\" $DIRECTORY/crt >> $DIRECTORY/report fi done 5\n```", "```\nif [ $3 -eq 1 ]\n```", "```\nif [ $3 -ne 1 ]\n```", "```\nif [ $3 -gt 1 ]\nif [ $3 -ge 1 ]\nif [ $3 -lt 1 ]\nif [ $3 -le 1 ]\n```", "```\nif [ -z \"\" ]\nif [ -n \"abc\" ]\n```", "```\nif [ -d /bin]\n```", "```\nif [ -f /bin/bash ]\n```", "```\nif [ -r /bin/bash ]\n```", "```\nif [ -w /bin/bash ]\n```", "```\nif [ -x /bin/bash ]\n```", "```\nif [ $3 -gt 1 ] && [ $3 -lt 3 ]\n```", "```\nif [ $3 -gt 1 ] || [ $3 -lt 0 ]\n```", "```\n#!/bin/bash\nnmap_scan()\n{ nmap $DOMAIN > $DIRECTORY/nmap echo \"The results of nmap scan are stored in $DIRECTORY/nmap.\"\n}\ndirsearch_scan()\n{ $PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php --simple-report=$DIRECTORY/dirsearch echo \"The results of dirsearch scan are stored in $DIRECTORY/dirsearch.\"\n}\ncrt_scan()\n{ curl \"https://crt.sh/?q=$DOMAIN&output=json\" -o $DIRECTORY/crt echo \"The results of cert parsing is stored in $DIRECTORY/crt.\"\n}\n```", "```\n#!/bin/bash\nsource ./scan.lib\nPATH_TO_DIRSEARCH=\"/Users/vickieli/tools/dirsearch\"\ngetopts \"m:\" OPTION\nMODE=$OPTARG\nfor i in \"${@:$OPTIND:$#}\"\ndo DOMAIN=$i DIRECTORY=${DOMAIN}_recon echo \"Creating directory $DIRECTORY.\" mkdir $DIRECTORY case $MODE in nmap-only) nmap_scan ;; dirsearch-only) dirsearch_scan ;;  crt-only)  crt_scan ;; *)        nmap_scan dirsearch_scan crt_scan ;;  esac echo \"Generating recon report for $DOMAIN...\" TODAY=$(date) echo \"This scan was created on $TODAY\" > $DIRECTORY/report if [ -f $DIRECTORY/nmap ];then echo \"Results for Nmap:\" >> $DIRECTORY/report grep -E \"^\\s*\\S+\\s+\\S+\\s+\\S+\\s*$\" $DIRECTORY/nmap >> $DIRECTORY/report fi if [ -f $DIRECTORY/dirsearch ];then echo \"Results for Dirsearch:\" >> $DIRECTORY/report cat $DIRECTORY/dirsearch >> $DIRECTORY/report fi if [ -f $DIRECTORY/crt ];then echo \"Results for crt.sh:\" >> $DIRECTORY/report jq -r \".[] | .name_value\" $DIRECTORY/crt >> $DIRECTORY/report fi\ndone\n```", "```\n./recon.sh -i -m nmap-only\n```", "```\necho \"Please enter a domain!\"\nread $DOMAIN\n```", "```\nwhile `CONDITION`\ndo `DO SOMETHING`\ndone\n```", "```\nwhile [ $INPUT != \"quit\" ];do echo \"Please enter a domain!\" read INPUT  if [ $INPUT != \"quit\" ];then scan_domain $INPUT report_domain $INPUT fi\ndone\n```", "```\nwhile getopts \"m:i\" OPTION; do case $OPTION in m)   MODE=$OPTARG ;;  i)   INTERACTIVE=true ;; esac\ndone\n```", "```\n#!/bin/bash\nsource ./scan.lib\nwhile getopts \"m:i\" OPTION; do case $OPTION in m)   MODE=$OPTARG ;;  i)   INTERACTIVE=true ;; esac\ndone\nscan_domain(){ DOMAIN=$1 DIRECTORY=${DOMAIN}_recon echo \"Creating directory $DIRECTORY.\" mkdir $DIRECTORY case $MODE in nmap-only) nmap_scan ;; dirsearch-only) dirsearch_scan ;; crt-only) crt_scan ;; *)        nmap_scan dirsearch_scan crt_scan ;;      esac\n}\nreport_domain(){ DOMAIN=$1 DIRECTORY=${DOMAIN}_recon echo \"Generating recon report for $DOMAIN...\" TODAY=$(date) echo \"This scan was created on $TODAY\" > $DIRECTORY/report if [ -f $DIRECTORY/nmap ];then echo \"Results for Nmap:\" >> $DIRECTORY/report grep -E \"^\\s*\\S+\\s+\\S+\\s+\\S+\\s*$\" $DIRECTORY/nmap >> $DIRECTORY/report fi if [ -f $DIRECTORY/dirsearch ];then echo \"Results for Dirsearch:\" >> $DIRECTORY/report cat $DIRECTORY/dirsearch >> $DIRECTORY/report fi if [ -f $DIRECTORY/crt ];then echo \"Results for crt.sh:\" >> $DIRECTORY/report jq -r \".[] | .name_value\" $DIRECTORY/crt >> $DIRECTORY/report fi\n}\nif [ $INTERACTIVE ];then 1 INPUT=\"BLANK\" while [ $INPUT != \"quit\" ];do 2 echo \"Please enter a domain!\" read INPUT  if [ $INPUT != \"quit\" ];then 3 scan_domain $INPUT report_domain $INPUT fi done\nelse for i in \"${@:$OPTIND:$#}\";do scan_domain $i report_domain $i  done\nfi\n```", "```\n#!/bin/sh\nchmod 777 script.sh\nif [ \"$?\" -ne \"0\" ]; then echo \"Chmod failed. You might not have permissions to do that!\"\nfi\n```", "```\nexport `VARIABLE_NAME`=`VARIABLE_VALUE`\n```", "```\nVAR=\"hello!\"\n```", "```\n$ ls *.txt\n```", "```\necho `whoami`\n```", "```\n$ echo \"abc '*' 123\"\n```", "```\n$ echo \"\\\" is a double quote. \\$ is a dollar sign. \\` is a backtick. \\\\ is a backslash.\"\n```", "```\n\" is a double quote. $ is a dollar sign. ` is a backtick. \\ is a backslash.\n```", "```\nchmod 777 \\\nscript.sh\n```", "```\nchmod 777 script.sh\n```", "```\ncrontab -e\n```", "```\nA B C D E `command_to_be_executed`\nA: Minute (0 – 59)\nB: Hour (0 – 23)\nC: Day (1 – 31)\nD: Month (1 – 12)\nE: Weekday (0 – 7) (Sunday is 0 or 7, Monday is 1...)\n```", "```\n30 21 * * * ./scan.sh\n```", "```\n30 21 * * * run-parts /Users/vickie/scripts/security\n```", "```\ngit diff `SCAN_1` `SCAN_2`\n```", "```\n#!/bin/bash\nDOMAIN=$1\nDIRECTORY=${DOMAIN}_recon\necho \"Checking for new changes about the target: $DOMAIN.\\n Found these new things.\"\ngit diff <SCAN AT TIME 1> <SCAN AT TIME 2>\n```", "```\n30 21 * * * ./scan_diff.sh facebook.com\n```", "```\ngit init\ngit remote add origin https://`PATH_TO_THE_REPOSITORY`\n```", "```\n30 21 * * * ./recon.sh facebook.com\n40 21 * * * git add *; git commit -m \"new scan\"; git push -u origin master\n```"]