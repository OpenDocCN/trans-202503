- en: 'APPENDIX A: COMPONENTS'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**THIS APPENDIX GIVES YOU SOME MORE INFORMATION ON THE COMPONENTS USED IN THE
    PROJECTS IN THIS BOOK. EACH COMPONENT IS ACCOMPANIED BY A PHOTO AND A FEW DETAILS
    FOR QUICK REFERENCE AND IDENTIFICATION, AND I’VE INCLUDED A HANDY LIST OF RETAILERS
    TO BUY THE PARTS FROM. YOU’LL ALSO GET A QUICK LESSON ON READING RESISTOR VALUES.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**COMPONENTS GUIDE**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here’s a guide to the components you’ll use, with a few details that you might
    find useful. The components are listed in the order in which they appear in the
    book. Many of the items can be found with a simple search on sites like eBay or
    Amazon, but a list of specialist retailers is also provided on [page 240](app01.xhtml#page_240).
  prefs: []
  type: TYPE_NORMAL
- en: '**Arduino Uno R3**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The Arduino Uno R3 is the main component for the book and the brain for all
    our projects.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0230-01.jpg) | • Quantity: 1• Connections: 14• Projects:
    All except [Project 25](ch25.xhtml#ch25) |'
  prefs: []
  type: TYPE_TB
- en: '**9V Battery Pack**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The 9V battery pack plugs into the Arduino to power your projects. You connect
    the batteries and plug the jack into the port in the Arduino, as discussed in
    “[Power](ch00.xhtml#ch00lev2sec02)” on [page 3](ch00.xhtml#page_3). Note that
    the Arduino can also be powered through the USB cable.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0230-02.jpg) | • Quantity: 1• Connections: 1• Projects:
    Optional for all |'
  prefs: []
  type: TYPE_TB
- en: '**Breadboard**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The breadboard is a prototyping board used to connect components and create
    your projects. See “[Breadboards](ch00.xhtml#ch00lev2sec03)” on [page 4](ch00.xhtml#page_4)
    for more information.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0230-03.jpg) | • Quantity: 2 full-size boards, 1 half-size
    board, 1 mini board• Connections: 940 on a full board, 420 on a half board, 170
    on a mini board• Projects: All except [Project 7](ch07.xhtml#ch07) |'
  prefs: []
  type: TYPE_TB
- en: '**LED**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: An LED emits light when a small current is passed through it. It looks like
    a small light bulb with two legs. The longer leg is the positive connection. LEDs
    generally require a resistor or they may burn out. LEDs are polarized, meaning
    current flows only in one direction.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0231-01.jpg) | • Quantity: 40 (10 each of red, blue,
    yellow, green)• Connections: 2• Projects: 1–6, 8, 9, 17, 18, 19, 21, 22, 23, 25
    |'
  prefs: []
  type: TYPE_TB
- en: '**Resistor**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Resistors restrict the amount of current that can flow through a circuit to
    prevent components from overloading. They look like cylinders with colored bands
    and a wire from either end. The value is indicated by a color code—see “[Decoding
    Resistor Values](app01.xhtml#app01lev1sec03)” on [page 241](app01.xhtml#page_241)
    for more details. Check this carefully, as it can be easy to choose the wrong
    value. Resistors come in two-, four-, and five-band varieties, so be aware that,
    for example, a four-band 220-ohm resistor can look slightly different from a five-band
    resistor of the same value.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0231-02.jpg) | • Quantity: 30 220-ohm, 10 330-ohm, 1
    10k-ohm, 1 1m-ohm resistors• Connections: 2• Projects: 1–4, 6, 8, 9, 16, 17, 18,
    19, 22, 23, 24, 25 |'
  prefs: []
  type: TYPE_TB
- en: '**Pushbutton**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The pushbutton is a simple switch that makes a connection when pushed. This
    switch connects a circuit when pushed in, but will spring back when released and
    break the connection. It is also known as a momentary switch. Pushbuttons vary
    in size, but most will have four pins.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0231-03.jpg) | • Quantity: 4• Connections: 4• Projects:
    2, 8, 15, 16, 17, 25 |'
  prefs: []
  type: TYPE_TB
- en: '**Potentiometer**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A potentiometer is a resistor whose value you can vary to manipulate the voltage
    flowing through it. It has a knob that you can turn and three pins at the bottom.
    The center pin is the control pin, with power to either side (it doesn’t matter
    which way they are connected). It’s commonly used to control an output such as
    the volume on a radio.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0232-01.jpg) | • Quantity: 1 50k-ohm potentiometer• Connections:
    3• Projects: 2, 3, 4, 12, 13, 14, 15, 17 |'
  prefs: []
  type: TYPE_TB
- en: '**HL-69 Soil Sensor**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A soil sensor measures the moisture content of soil. It has two prongs and two
    pins at the top. The sensor used in the book is the HL-69 soil hygrometer. It
    comes with a driver module that you connect to your Arduino, rather than connecting
    straight to the sensor.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0232-02.jpg) | • Quantity: 1• Connections: 2• Project:
    5 |'
  prefs: []
  type: TYPE_TB
- en: '**Piezo Buzzer**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The piezo buzzer is a very basic speaker. A pulse of current causes it to click
    extremely quickly, and a stream of pulses will emit a tone. It often looks like
    a small black box with two wires. Taken out of the case, it looks like a small
    gold disc. It’s very cheap and used in inexpensive toys for noise generation (in
    sirens, for instance). It can also be used as a noise sensor, as shown in [Project
    9](ch09.xhtml#ch09).
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0232-03.jpg) | • Quantity: 1• Connections: 2• Projects:
    5, 7, 8, 9, 15, 17, 18, 19, 21, 23 |'
  prefs: []
  type: TYPE_TB
- en: '**Servomotor**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A servomotor is a motor with an arm that you can position to specific angles
    by sending the servo a coded signal. It is a small box with three wires and an
    output shaft, which can have an attachment (known as a horn). The red wire is
    POWER or +5V, the black/brown wire is GROUND or GND, and the orange/white wire
    is SIGNAL, which connects to your Arduino analog pin. The Tower Pro 9g servos
    used in this book will turn 180 degrees, but others are continuous and can turn
    the full 360 degrees.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0233-01.jpg) | • Quantity: 2• Connections: 3• Projects:
    9, 10, 11, 18, 20, 22, 23 |'
  prefs: []
  type: TYPE_TB
- en: '**Joystick**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'A joystick records an analog input that can then be read to give a digital
    output. It’s basically two potentiometers supplying a signal for two axes: left/right
    and up/down. It has lots of applications, like gaming or controlling a servomotor.'
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0233-02.jpg) | • Quantity: 1• Connections: 5• Project:
    10 |'
  prefs: []
  type: TYPE_TB
- en: '**Infrared LED Receiver**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'An infrared (IR) LED receiver picks up infrared signals from, for example,
    a remote control. It is an LED in a small casing with three legs: OUT, GND, and
    +5V (positive power). It’s polarized so it needs to be connected in the right
    way. Check the data sheet for your receiver, just in case the connections are
    different.'
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0234-01.jpg) | • Quantity: 1• Connections: 3• Project:
    11 |'
  prefs: []
  type: TYPE_TB
- en: '**LCD Screen**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: An LCD screen is a display screen for outputting characters. Screens come in
    various dimensions. The one shown here is an HD44780 (16 characters × 2 lines)
    and has 16 connections. An LCD screen consists of two sheets of polarizing material
    with a liquid crystal solution between them; current passing through the crystal
    creates an image.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0234-02.jpg) | • Quantity: 1• Connections: 16• Projects:
    12, 13, 14, 15 |'
  prefs: []
  type: TYPE_TB
- en: '**DHT11 Humidity Sensor**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The DHT11 sensor measures humidity and temperature. It is a small blue or white
    plastic box with four pins, though it’s sometimes mounted on a module board that
    has only three pins. This book uses the DHT11 sensor, and we use only three of
    the pins: +5V, DATA, and GND.'
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0234-03.jpg) | • Quantity: 1• Connections: 4 (but we’ll
    use only 3)• Project: 13 |'
  prefs: []
  type: TYPE_TB
- en: '**Tilt Ball Switch**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A tilt ball switch is a casing with a metal ball inside that makes a connection
    when in an upright position. Tilt the switch, and the connection is broken.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0234-04.jpg) | • Quantity: 1• Connections: 2• Project:
    14 |'
  prefs: []
  type: TYPE_TB
- en: '**RGB LED**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: An RGB LED module is three colors in one—red, green, and blue. By combining
    the colors, you can make any color of the rainbow. It is a clear LED with four
    legs, sometimes mounted on a module with built-in resistors, as shown. You will
    need to use resistors to limit the current or the LED will burn out. The longest
    leg will be either the common cathode or anode.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0235-01.jpg) | • Quantity: 1• Connections: 4• Project:
    15 |'
  prefs: []
  type: TYPE_TB
- en: '**Seven-Segment LED Display**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A seven-segment LED display shows a digit or character using LED segments. They’re
    often used to display numbers for counters, clocks, or timers. You can get single-digit
    to eight-digit displays, and four-digit displays are commonly used for digital
    clocks.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0235-02.jpg) | • Quantity: 1• Connections: 10–12• Projects:
    16, 17 |'
  prefs: []
  type: TYPE_TB
- en: '**Four-Digit, Seven-Segment Serial Display**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This is a four-digit version of the seven-segment LED, with an additional built-in
    circuit so it can be controlled with very few connections. This serial module
    is the SparkFun version and comes in different colors. There are 10 connections,
    but it can be used with only 3 (VCC, GND, and RX) on the Arduino.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0235-03.jpg) | • Quantity: 1• Connections: 10 (but we’ll
    use only 3)• Project: 17 |'
  prefs: []
  type: TYPE_TB
- en: '**Ultrasonic Sensor**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: An ultrasonic sensor sends out a signal (often referred to as a *ping*), which
    bounces off an object and is returned to the sensor. Distance is calculated from
    the time the signal takes to return. The sensor used in this book is the HC-SR04
    ultrasonic sensor. It is a module board with two round sensors and four pins.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0236-01.jpg) | • Quantity: 1• Connections: 4• Projects:
    18, 20 |'
  prefs: []
  type: TYPE_TB
- en: '**Photoresistor**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A photoresistor, also referred to as a light-dependent resistor or diode, produces
    a variable resistance depending on the amount of light falling on it and is used
    to detect light levels. There are different styles, but it’s usually a small,
    clear oval with wavy lines and two legs. You will need to calibrate it to determine
    light levels before using it in a program.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0236-02.jpg) | • Quantity: 1• Connections: 2• Project:
    19 |'
  prefs: []
  type: TYPE_TB
- en: '**RC V959 Missile Launcher**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Produced for radio-controlled helicopters, the WLToys RC V959 missile launcher
    is a mini Gatling gun that can fire six plastic rockets in quick succession. It
    has four wires, but we use only the yellow and white for continuous firing.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0236-03.jpg) | • Quantity: 1• Connections: 4 (but we’ll
    use only 2)• Project: 20 |'
  prefs: []
  type: TYPE_TB
- en: '**PIR Sensor**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The PIR (passive infrared) sensor detects movement within its range. The book
    uses the HC SR501, the most commonly available PIR sensor. The module pictured
    has a golf ball–type lens on the front and three connections: +5V, OUTPUT, and
    GND. The orange cubes are potentiometers that change the distance range and output
    timing.'
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0237-01.jpg) | • Quantity: 1• Connections: 3• Project:
    21 |'
  prefs: []
  type: TYPE_TB
- en: '**Keypad**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A 4×4 keypad is basically a series of switches. The example shown here has 16
    pushbuttons connected in series; a 12-button version is also available. Of the
    eight connections, four control the rows and four control the columns. The Arduino
    will replicate the number of the pressed button.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0237-02.jpg) | • Quantity: 1• Connections: 8• Project:
    22 |'
  prefs: []
  type: TYPE_TB
- en: '**RFID Reader**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: An RFID (radio frequency identification) module reads RFID cards and key fobs
    to allow or deny actions depending on the access level of the card. It is a small
    board with eight pins and a built-in antenna. The module used in the book is the
    Mifare RFID-RC522 module, which usually comes with a card and fob.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0237-03.jpg) | • Quantity: 1• Connections: 8• Project:
    23 |'
  prefs: []
  type: TYPE_TB
- en: '**RGB Matrix**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'An 8×8 RGB matrix is a series of 64 LEDs that can change through red, green,
    and blue to create the colors of the rainbow. There are 32 pins on the matrix:
    8 are for the common anode of each LED, 8 control the color red, 8 control green,
    and 8 control blue. Resistors are required for each pin controlling a color.'
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0238-01.jpg) | • Quantity: 1• Connections: 32• Project:
    24 |'
  prefs: []
  type: TYPE_TB
- en: '**Shift Register**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A shift register is a small integrated circuit and sequential logic counter
    that allows the Arduino to make more connections by “shifting” and storing data.
    It’s a small black chip with 16 legs. At one end, you’ll find a dot or semicircle—pin
    1 is to the left of this marker. The electronic die in [Project 16](ch16.xhtml#ch16)
    uses a 74HC595 shift register.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0238-02.jpg) | • Quantity: 1• Connections: 16• Projects:
    16, 24 |'
  prefs: []
  type: TYPE_TB
- en: '**ATmega328p Chip**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The ATMEL ATmega328p chip is the brain of the Arduino; it carries out the instructions
    from an uploaded sketch. It’s a small black chip with 32 legs. At one end you’ll
    find a dot or semicircle—pin 1 is to the left of this marker.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0238-03.jpg) | • Quantity: 1• Connections: 32• Project:
    25 |'
  prefs: []
  type: TYPE_TB
- en: '**16 MHz Crystal Oscillator**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The 16 MHz crystal oscillator allows the Arduino to calculate time. It is a
    small metal casing with two legs and requires a capacitor on each leg to help
    smooth voltage to the crystal. The frequency of the crystal is printed on the
    front.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0239-01.jpg) | • Quantity: 1• Connections: 2• Project:
    25 |'
  prefs: []
  type: TYPE_TB
- en: '**5V Regulator**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The L7805cv 5V regulator takes a voltage between 7 and 11 volts and steps it
    down to a constant 5 volts.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0239-02.jpg) | • Quantity: 1• Connections: 3• Project:
    25 |'
  prefs: []
  type: TYPE_TB
- en: '**Capacitor**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Capacitors can store a small amount of electricity for later use and can be
    used to smooth voltage output and flow. They look like small cylinders with two
    legs, and the value is usually printed on the side. Capacitors have polarity and
    need to be inserted correctly. The long leg is positive, and the short leg is
    negative; this is generally indicated on the cylinder. There are various types
    available; the one shown here is an aluminum 100μF electrolytic capacitor.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0239-03.jpg) | • Quantity: 2• Connections: 2• Project:
    25 |'
  prefs: []
  type: TYPE_TB
- en: '**Disc Capacitor**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The 22pf disc capacitor is another type of capacitor that can store a small
    amount of electricity for later use. It looks like a small disc with two legs,
    and the value is usually printed on the front. There are various types available;
    the one shown here is a ceramic version.
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0240-01.jpg) | • Quantity: 2• Connections: 2• Project:
    25 |'
  prefs: []
  type: TYPE_TB
- en: '**Battery Clip**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The PP3 9V battery clip is a simple connector for a 9V battery. It’s a small
    black clip that has two wires: black for ground and red for positive.'
  prefs: []
  type: TYPE_NORMAL
- en: '| ![image](../images/f0240-02.jpg) | • Quantity: 1• Connections: 2• Project:
    25 |'
  prefs: []
  type: TYPE_TB
- en: '**RETAILER LIST**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Most electronic components can be found on generic sites like eBay or Amazon,
    but if you have trouble finding anything, the retailers listed here can likely
    help you out.
  prefs: []
  type: TYPE_NORMAL
- en: '**US Retailers**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Adafruit** *[https://www.adafruit.com/](https://www.adafruit.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**DigiKey** *[http://www.digikey.com/](http://www.digikey.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Jameco Electronics** *[http://www.jameco.com/](http://www.jameco.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Little Bird Electronics** *[http://www.littlebirdelectronics.com/](http://www.littlebirdelectronics.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**MCM** *[http://www.mcmelectronics.com/](http://www.mcmelectronics.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Newark element14** *[http://www.newark.com/](http://www.newark.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**RadioShack** *[http://www.radioshack.com/](http://www.radioshack.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**RS Components** *[http://www.rs-components.com/](http://www.rs-components.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Seeed Studio** *[http://www.seeedstudio.com/depot/](http://www.seeedstudio.com/depot/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**SparkFun** *[https://www.sparkfun.com/](https://www.sparkfun.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**European Retailers**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Electronic Sweet Pea’s** *[http://www.sweetpeas.se/](http://www.sweetpeas.se/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Element 14** *[http://www.element14.com/](http://www.element14.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Farnell** *[http://www.farnell.com/](http://www.farnell.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Jameco Electronics** *[http://www.jameco.com/](http://www.jameco.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**UK Retailers**'
  prefs: []
  type: TYPE_NORMAL
- en: '**4tronix** *[http://www.4tronix.co.uk/store/](http://www.4tronix.co.uk/store/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cool Components** *[http://www.coolcomponents.co.uk/](http://www.coolcomponents.co.uk/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**CPC** *[http://cpc.farnell.com](http://cpc.farnell.com)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Hobby Components** *[https://www.hobbycomponents.com/](https://www.hobbycomponents.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mallinson Electrical** *[http://www.mallinson-electrical.com/shop/](http://www.mallinson-electrical.com/shop/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Maplin** *[http://www.maplin.co.uk/](http://www.maplin.co.uk/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Oomlout** *[http://oomlout.co.uk/](http://oomlout.co.uk/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**The Pi Hut** *[http://thepihut.com/](http://thepihut.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Proto-pic** *[http://proto-pic.co.uk/](http://proto-pic.co.uk/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Rapid Electronics** *[http://www.rapidonline.com/](http://www.rapidonline.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**RS** *[http://uk.rs-online.com/web/](http://uk.rs-online.com/web/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Spiratronics** *[http://spiratronics.com/](http://spiratronics.com/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**DECODING RESISTOR VALUES**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In most of projects in this book we’ve used *resistors*, electrical components
    that limit the amount of current allowed through a circuit (measured in ohms).
    They are used to protect components, like LEDs, from overloading and burning out.
    The value of a resistor is identified by colored bands on the body. Resistors
    can have four, five, or six colored bands.
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to be able to determine the value of a resistor so that you know
    you’re using the correct one in your project. Let’s try to determine the value
    of the four-band resistor shown in [Figure A-1](app01.xhtml#app01fig01).
  prefs: []
  type: TYPE_NORMAL
- en: '**FIGURE A-1:**'
  prefs: []
  type: TYPE_NORMAL
- en: A four-band resistor
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0a-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Viewing the resistor with the silver or gold band on the right, note the order
    of the colors from left to right. If the resistor has no silver or gold band,
    make sure the side with the three colored bands is on the left.
  prefs: []
  type: TYPE_NORMAL
- en: Use [Table A-1](app01.xhtml#app01tab01) to determine the value of the resistor.
  prefs: []
  type: TYPE_NORMAL
- en: '**TABLE A-1:**'
  prefs: []
  type: TYPE_NORMAL
- en: Calculating resistor values
  prefs: []
  type: TYPE_NORMAL
- en: '| **COLOR** | **FIRST BAND** | **SECOND BAND** | **THIRD BAND** | **MULTIPLIER**
    | **TOLERANCE** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Black | 0 | 0 | 0 | 1Ω |  |'
  prefs: []
  type: TYPE_TB
- en: '| Brown | 1 | 1 | 1 | 10Ω | +/–1% |'
  prefs: []
  type: TYPE_TB
- en: '| Red | 2 | 2 | 2 | 100Ω | +/–2% |'
  prefs: []
  type: TYPE_TB
- en: '| Orange | 3 | 3 | 3 | 1KΩ |  |'
  prefs: []
  type: TYPE_TB
- en: '| Yellow | 4 | 4 | 4 | 10KΩ |  |'
  prefs: []
  type: TYPE_TB
- en: '| Green | 5 | 5 | 5 | 100KΩ | +/–0.5% |'
  prefs: []
  type: TYPE_TB
- en: '| Blue | 6 | 6 | 6 | 1MΩ | +/–0.25% |'
  prefs: []
  type: TYPE_TB
- en: '| Violet | 7 | 7 | 7 | 10MΩ | +/–0.10% |'
  prefs: []
  type: TYPE_TB
- en: '| Gray | 8 | 8 | 8 |  | +/–0.05% |'
  prefs: []
  type: TYPE_TB
- en: '| White | 9 | 9 | 9 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Gold |  |  |  | 0.1Ω | +/–5% |'
  prefs: []
  type: TYPE_TB
- en: '| Silver |  |  |  | 0.01Ω | +/–10% |'
  prefs: []
  type: TYPE_TB
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*The band that denotes the tolerance is most commonly silver or gold, though
    it can be any color that has a percentage listed in the Tolerance column. If you
    have a resistor with a tolerance band that isn’t silver or gold, there should
    be a small gap between the value bands and the tolerance band so you can tell
    them apart.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The values that correspond to the first and second bands give you the numerical
    value, the third band tells you how many zeros to add to that number, and the
    fourth band tells you the *tolerance*—that is, how much the actual value can vary
    from the intended value. For the resistor in [Figure A-1](app01.xhtml#app01fig01):'
  prefs: []
  type: TYPE_NORMAL
- en: • First band is brown (1) = 1.
  prefs: []
  type: TYPE_NORMAL
- en: • Second band is black (0) = 0.
  prefs: []
  type: TYPE_NORMAL
- en: • Third band is red (2) = 00 (2 is the number of zeros).
  prefs: []
  type: TYPE_NORMAL
- en: • Fourth band is gold, so the tolerance (accuracy) is +/– 5 percent.
  prefs: []
  type: TYPE_NORMAL
- en: So this resistor is 1,000 ohms or 1 kilohm, with a tolerance of 5 percent, meaning
    that the actual value can be up to 5 percent more or less than 1 kilohm. We can
    do the same calculation for a five- or six-band resistor.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re ever unsure of a resistor’s value, a quick online search of the colored
    bands on the resistor’s body will help; just make sure to list the colors in the
    correct order, reading them from left to right, with the tolerance band on the
    right.
  prefs: []
  type: TYPE_NORMAL
