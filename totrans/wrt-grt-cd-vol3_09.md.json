["```\nconsider{ comma-separated-list-of-operators }\n\nignore{ comma-separated-list-of-operators }\n```", "```\nObject3->msg1();                  // Inside example\n\nObject4->msg2();                  // Inside Object3::msg1\n\nassert( condition == TRUE );      // Inside Object3::msg1\n```", "```\n// This loop appears inside Object3::msg1\n\nfor(;;)\n\n{\n\n      Object4->msg2();\n\n} // endfor\n```", "```\nwhile(1)\n\n{\n\n      Object4->msg2()\n\n} // end while\n```", "```\n// This code appears inside Object3::msg1\n\nfor( i = 1; i<=10; ++i )\n\n{\n\n      Object4->msg2();\n\n} // end for\n```", "```\n// This code appears inside Object3::msg1\n\nwhile( cond == TRUE )\n\n{\n\n      Object4->msg2();\n\n} // end while\n```", "```\n// This code appears inside Object3::msg1\n\ndo\n\n{\n\n      Object4->msg2();\n\n} while( cond == TRUE );\n```", "```\n// This code appears inside Object3::msg1\n\nwhile( cond == TRUE )\n\n{\n\n     Object4->msg2();\n\n     if( bcnt >= 10 )\n\n     {\n\n          Object4->msg3();\n\n          break;\n\n     } // end if\n\n     Object4->msg4();\n\n} // end while loop\n```", "```\n// Assumption: Class2 is Object2's data type. Because control\n\n// transfers into the Object2 sequence at the top of its \n\n// lifeline, example must be a member function of Object2/Class2\n\nvoid Class2::example( void )\n\n{\n\n      Object3->msg1();\n\n} // end example\n\n--snip--\n\n//    This code appears in Object3::msg1 \n\nif( cond == TRUE )\n\n{\n\n      Object4->msg2();\n\n} // end if\n```", "```\n// Assumption: Class2 is Object2's data type. Because control\n\n// transfers into the Object2 sequence at the top of its\n\n// lifeline, example must be a member function of Object2/Class2\n\nvoid Class2::example( void )\n\n{\n\n      Object3->msg1();\n\n} // end example\n\n--snip--\n\n//    This code appears in Object3::msg1 \n\nif( cond1 == TRUE )\n\n{\n\n      Object4->msg2a();\n\n}\n\nelse if( cond2 == TRUE )\n\n{\n\n      Object4->msg2b();\n\n}\n\nelse if( cond3 == TRUE )\n\n{\n\n      Object3->msg2c();\n\n}\n\nelse\n\n{\n\n      Object4->msg2d();\n\n} // end if\n```", "```\n// Assumption: Class2 is Object2's data type. Because control\n\n// transfers into the Object2 sequence at the top of its\n\n// lifeline, example must be a member function of Object2/Class2\n\nvoid Class2::example( void )\n\n{\n\n      Object3->msg1();\n\n} // end example\n```"]