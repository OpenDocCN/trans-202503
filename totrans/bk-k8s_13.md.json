["```\nroot@host01:~# curl https://192.168.61.11:6443/\ncurl: (60) SSL certificate problem: unable to get local issuer certificate\nMore details here: https://curl.se/docs/sslcerts.html\n...\n```", "```\nroot@host01:~# curl -kv https://192.168.61.11:6443/\n...\n* Server certificate:\n*  subject: CN=kube-apiserver\n...\n*  issuer: CN=kubernetes\n...\n```", "```\nroot@host01:~# cp /etc/kubernetes/pki/ca.crt .\n```", "```\nroot@host01:~# openssl x509 -in ca.crt -text\nCertificate:\n...\n        Issuer: CN = kubernetes\n...\n        Subject: CN = kubernetes\n```", "```\nroot@host01:~# curl --cacert ca.crt https://192.168.61.11:6443/\n{\n...\n  \"status\": \"Failure\",\n  \"message\": \"forbidden: User \\\"system:anonymous\\\" cannot get path \\\"/\\\"\",\n...\n  \"code\": 403\n}\n```", "```\nroot@host01:~# kubeadm certs check-expiration\n...\nCERTIFICATE                ...  RESIDUAL TIME   CERTIFICATE AUTHORITY ...\nadmin.conf                 ...  363d                                  ...\napiserver                  ...  363d            ca                    ...\napiserver-etcd-client      ...  363d            etcd-ca               ...\napiserver-kubelet-client   ...  363d            ca                    ...\ncontroller-manager.conf    ...  363d                                  ...\netcd-healthcheck-client    ...  363d            etcd-ca               ...\netcd-peer                  ...  363d            etcd-ca               ...\netcd-server                ...  363d            etcd-ca               ...\nfront-proxy-client         ...  363d            front-proxy-ca        ...\nscheduler.conf             ...  363d                                  ...\n...\n```", "```\nroot@host01:~# echo $KUBECONFIG\n/etc/kubernetes/admin.conf\n```", "```\nroot@host01:~# kubeadm kubeconfig user --client-name=me \\\n  --config /etc/kubernetes/kubeadm-init.yaml > kubeconfig\n```", "```\nroot@host01:~# cat kubeconfig\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: ...\n    server: https://192.168.61.10:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: me\n  name: me@kubernetes\ncurrent-context: me@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: me\n  user:\n    client-certificate-data: ...\n    client-key-data: ...\n```", "```\nroot@host01:~# KUBECONFIG=kubeconfig kubectl get pods\nError from server (Forbidden): pods is forbidden: User \"me\" cannot list \n  resource \"pods\" in API group \"\" in the namespace \"default\"\n```", "```\nroot@host01:~# TOKEN=$(kubeadm token create)\nroot@host01:~# echo $TOKEN\npqcnd6.4wawyqgkfaet06zm\n```", "```\nroot@host01:~# kubectl -n kube-system get secret\nNAME                    TYPE                           DATA   AGE\n...\nbootstrap-token-pqcnd6  bootstrap.kubernetes.io/token  6      64s\n...\n```", "```\nroot@host01:~# curl --cacert ca.crt \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  https://192.168.61.11:6443/apis/certificates.k8s.io/v1/certificatesigningrequests\n{\n  \"kind\": \"CertificateSigningRequestList\",\n \"apiVersion\": \"certificates.k8s.io/v1\",\n  \"metadata\": {\n    \"resourceVersion\": \"21241\"\n  },\n  \"items\": [\n...\n  ]\n}\n```", "```\nroot@host01:~# kubectl create namespace sample\nnamespace/sample created\n```", "```\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: read-pods\n  namespace: sample\n```", "```\nroot@host01:~# kubectl apply -f /opt/read-pods-sa.yaml\nserviceaccount/read-pods created\n```", "```\nroot@host01:~# kubectl -n sample get serviceaccounts\nNAME        SECRETS   AGE\ndefault     1         27s\nread-pods   1         8s\nroot@host01:~# kubectl -n sample get secrets\nNAME                    TYPE                                  DATA   AGE\ndefault-token-mzwpt     kubernetes.io/service-account-token   3      43s\nread-pods-token-m4scq   kubernetes.io/service-account-token   3      25s\n```", "```\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: pod-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"pods\"]\n  verbs: [\"get\", \"watch\", \"list\"]\n```", "```\n- apiGroups: [\"\", \"apps\"]\n  resources: [\"pods\", \"deployments\", \"statefulsets\"]\n  verbs: [\"get\", \"watch\", \"list\"]\n```", "```\nroot@host01:~# kubectl apply -f /opt/pod-reader.yaml\nclusterrole.rbac.authorization.k8s.io/pod-reader created\n```", "```\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: read-pods\n  namespace: sample\nsubjects:\n- kind: ServiceAccount\n  name: read-pods\n  namespace: sample\nroleRef:\n  kind: ClusterRole\n  name: pod-reader\n  apiGroup: rbac.authorization.k8s.io\n```", "```\nroot@host01:~# kubectl apply -f /opt/read-pods-bind.yaml\nrolebinding.rbac.authorization.k8s.io/read-pods created\n```", "```\n---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: read-pods\n  namespace: sample\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: read-pods\n  template:\n    metadata:\n      labels:\n        app: read-pods\n    spec:\n      containers:\n      - name: read-pods\n        image: alpine\n        command: [\"/bin/sleep\", \"infinity\"]\n      serviceAccountName: read-pods\n```", "```\nroot@host01:~# kubectl apply -f /opt/read-pods-deploy.yaml\ndeployment.apps/read-pods created\n```", "```\nroot@host01:~# kubectl -n sample get pods\nNAME                        READY   STATUS    RESTARTS   AGE\nread-pods-9d5565548-fbwjb   1/1     Running   0          6s\nroot@host01:~# kubectl -n sample exec -ti read-pods-9d5565548-fbwjb -- /bin/sh\n/ #\n```", "```\n/ # cd /run/secrets/kubernetes.io/serviceaccount\n/run/secrets/kubernetes.io/serviceaccount # ls -l\ntotal 0\nlrwxrwxrwx    1 root     root  ...  ca.crt -> ..data/ca.crt\nlrwxrwxrwx    1 root     root  ...  namespace -> ..data/namespace\nlrwxrwxrwx    1 root     root  ...  token -> ..data/token\n```", "```\n/run/secrets/kubernetes.io/serviceaccount # TOKEN=$(cat token)\n```", "```\ndefault/run/secrets/kubernetes.io/serviceaccount # apk add curl\n...\nOK: 8 MiB in 19 packages\n```", "```\n/run/secrets/kubernetes.io/serviceaccount # curl --cacert ca.crt \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  https://kubernetes.default.svc/api/v1/namespaces/sample/pods\n  \"kind\": \"PodList\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"resourceVersion\": \"566610\"\n  },\n  \"items\": [\n    {\n      \"metadata\": {\n        \"name\": \"read-pods-9d5565548-fbwjb\",\n...\n  ]\n}\n```", "```\n/run/secrets/kubernetes.io/serviceaccount # curl --cacert ca.crt \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  https://kubernetes.default.svc/api/v1/namespaces/kube-system/pods\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n  },\n  \"status\": \"Failure\",\n  \"message\": \"pods is forbidden: User \n    \\\"system:serviceaccount:default:read-pods\\\" cannot list resource \n    \\\"pods\\\" in API group \\\"\\\" in the namespace \\\"kube-system\\\"\",\n  \"reason\": \"Forbidden\",\n  \"details\": {\n    \"kind\": \"pods\"\n  },\n  \"code\": 403\n}\n```", "```\n/run/secrets/kubernetes.io/serviceaccount # curl --cacert ca.crt \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  https://kubernetes.default.svc/apis/apps/v1/namespaces/sample/deploy\nments\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n  },\n  \"status\": \"Failure\",\n  \"message\": \"deploy.apps is forbidden: User \n    \\\"system:serviceaccount:default:read-pods\\\" cannot list resource \n    \\\"deploy\\\" in API group \\\"apps\\\" in the namespace \\\"sample\\\"\",\n  \"reason\": \"Forbidden\",\n  \"details\": {\n    \"group\": \"apps\",\n    \"kind\": \"deploy\"\n  },\n \"code\": 403\n}\n```", "```\n/run/secrets/kubernetes.io/serviceaccount # exit\n```", "```\nroot@host01:~# kubectl get clusterrole edit -o yaml\n...\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\n...\nrules:\n...\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  - pods/attach\n  - pods/exec\n  - pods/portforward\n  - pods/proxy\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n...\n```", "```\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: editor\n  namespace: sample\nsubjects:\n- kind: User\n  name: me\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole \n  name: edit\n  apiGroup: rbac.authorization.k8s.io\n```", "```\nroot@host01:~# kubectl apply -f /opt/edit-bind.yaml\nrolebinding.rbac.authorization.k8s.io/editor created\n```", "```\nroot@host01:~# KUBECONFIG=kubeconfig kubectl -n sample get pods\nNAME                        READY   STATUS    RESTARTS   AGE\nread-pods-9d5565548-fbwjb   1/1     Running   0          54m\nroot@host01:~# KUBECONFIG=kubeconfig kubectl delete -f /opt/read-pods-deploy.yaml\ndeployment.apps \"read-pods\" deleted\n```", "```\nroot@host01:~# KUBECONFIG=kubeconfig kubectl get -n kube-system pods\nError from server (Forbidden): pods is forbidden: User \"me\" cannot list \n  resource \"pods\" in API group \"\" in the namespace \"kube-system\"\n```"]