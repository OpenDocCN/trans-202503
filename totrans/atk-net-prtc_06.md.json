["```\nMOV EAX, [ESI + EDI * 8 + 0x50]   ; Read 32-bit value from memory address\n```", "```\n   int port = 12345;\n   const char* ip = \"1.2.3.4\";\n   sockaddr_in addr = {0};\n\n➊ int s = socket(AF_INET, SOCK_STREAM, 0);\n\n   addr.sin_family = PF_INET;\n➋ addr.sin_port = htons(port);\n➌ inet_pton(AF_INET, ip, &addr.sin_addr);\n➍ if(connect(s, (sockaddr*) &addr, sizeof(addr)) == 0)\n   {\n       char buf[1024];\n       ➎ int len = recv(s, buf, sizeof(buf), 0);\n\n       ➏ send(s, buf, len, 0);\n   }\n\n   close(s);\n```", "```\n   sockaddr_in bind_addr = {0};\n\n   int s = socket(AF_INET, SOCK_STREAM, 0);\n\n   bind_addr.sin_family = AF_INET;\n   bind_addr.sin_port = htons(12345);\n➊ inet_pton(\"0.0.0.0\", &bind_addr.sin_addr);\n\n➋ bind(s, (sockaddr*)&bind_addr, sizeof(bind_addr));\n➌ listen(s, 10);\n sockaddr_in client_addr;\n   int socksize = sizeof(client_addr);\n➍ int newsock = accept(s, (sockaddr*)&client_addr, &socksize);\n\n   // Do something with the new socket\n```", "```\ninflate 1.2.8 Copyright 1995-2013 Mark Adler\n```", "```\nvoid md5_init( md5_context *ctx )\n{\n    ctx->state[0] = 0x67452301;\n    ctx->state[1] = 0xEFCDAB89;\n    ctx->state[2] = 0x98BADCFE;\n    ctx->state[3] = 0x10325476;\n}\n```"]