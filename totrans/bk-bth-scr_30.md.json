["```\nif \"%var1%\" equ \"A\" and \"%var2%\" equ \"B\" (\n   > con echo This is junk code.\n) \n```", "```\nif \"%var1%\" equ \"A\" or \"%var2%\" equ \"B\" (\n   > con echo This is more junk code.\n) \n```", "```\nif \"%var1%\" equ \"A\" (\n    if \"%var2%\" equ \"B\" (\n      > con echo Nesting works but is oh so uninspired.\n)  ) \n```", "```\nif \"%var1%-%var2%\" equ \"A-B\" (\n   > con echo This if command has an AND operator even if the AND is implied.\n) \n```", "```\nif /i \"%writer%%coworker%%admin%\" equ \"jackbobbysteve\" (\n   > con echo These variables and values are smushed together.\n)\n\nif /i \"%writer%-%coworker%-%admin%\" equ \"jack-bobby-steve\" (\n   > con echo We can all agree this is far more readable.\n) \n```", "```\nfor %%p in (ND SD) do (\n   if \"%postalCode%\" equ \"%%p\" (\n      > con echo This is an OR operator of a variable and multiple values.\n)  ) \n```", "```\nfor %%p in (Cleese Gilliam Jones Chapman Idle Palin) do (\n   if /i \"%name%\" equ \"%%p\" (\n      > con echo %name% is a Python\n)  ) \n```", "```\n for %%i in (%var1% %var2%) do (\n    if \"A\" equ \"%%i\" (\n       > con echo This OR operator compares a value to multiple variables.\n       goto :OrDone\n)  )\n:OrDone \n```", "```\n for %%i in (\"%var1%\" \"%var2%\") do (\n    if \"A\" equ \"%%~i\" (\n       > con echo This OR operator compares a value to multiple variables.\n       goto :OrDone\n )  )\n:OrDone \n```", "```\nif \"%var1%\" equ \"A\" or \"%var2%\" equ \"%var3%\" (\n   > con echo This is one last example of junk code.\n) \n```", "```\nif \"%var1%\" equ \"A\" (\n   > con echo This executes for only one of multiple conditions.\n) else if \"%var2%\" equ \"%var3%\" (\n   > con echo This really needs to be the same code as what's above.\n) \n```", "```\nif \"%var1%\" equ \"A\" (\n   call :CommonLogic\n) else if \"%var2%\" equ \"%var3%\" (\n   call :CommonLogic\n) \n```", "```\n for %%i in (\"%var1%:A\" \"%var2%:%var3%\") do (\n    for /F \"tokens=1-2 delims=:\" %%j in (\"%%~i\") do (\n       if \"%%j\" equ \"%%k\" (\n          > con echo A complex OR conditional clause has evaluated to true^^!\n          goto :IfOrDone\n )  )  )\n:IfOrDone \n```", "```\nif \"%var1%-%var2%\" equ \"A-B\" (\n   > con echo Both are true.\n) else (\n   > con echo One of these variables doesn't match the value, or both don't.\n) \n```", "```\nset result=NoMatchFound\nfor %%p in (ND SD) do (\n   if \"%postalCode%\" equ \"%%p\" (\n      set result=Match\n)  ) \n```", "```\n for %%p in (ND SD) do (\n    if \"%postalCode%\" equ \"%%p\" (\n       set result=Match\n       goto :OrDone\n )  )\n set result=NoMatchFound\n:OrDone \n```"]