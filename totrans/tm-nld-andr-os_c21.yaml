- en: '21'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Location, Location, Location
  prefs: []
  type: TYPE_NORMAL
- en: '![g21001](image_fi/502680c21/g21001.png)'
  prefs: []
  type: TYPE_IMG
- en: Charles Mendis and Bounce
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the most compelling mobile apps is Maps. The ability to see where you
    are and navigate to where you’d rather be is one of the true killer apps for mobile
    phones in general. But once upon a time, before Android 1.0, this app didn’t exist.
    Android had to staff a team to make it happen.
  prefs: []
  type: TYPE_NORMAL
- en: Meanwhile, another engineer at Google, Charles Mendis, had an idea for a different
    app that needed mapping technology.
  prefs: []
  type: TYPE_NORMAL
- en: Charles Mendis worked in the banking industry in Australia, but was encouraged
    to apply to Google by a friend of his. The friend ended up at Amazon, while Charles
    joined Google in 2006\. “I joined as an opportunity to see the USA. I’d never
    been. My wife and I had gotten married and we wanted to travel around and see
    the world. This seemed like a great way to live in the USA and see the country.
    The plan was to move back to Sydney after four years to start a family.” That
    was many years ago, and Charles still lives in California and still works at Google.
  prefs: []
  type: TYPE_NORMAL
- en: 'Charles started on the Ads team. “When you first started, you had a choice
    of two things: you choose Search or Ads.^([1](#c21-footnote-1)) Did you want to
    do the Search thing, or did you want to make money? I was allocated to AdSense.”'
  prefs: []
  type: TYPE_NORMAL
- en: Charles wasn’t particularly interested in mobile technology at the time. “I
    didn’t have a mobile phone at the time. I never liked mobile phones; they were
    a pain. People could just hassle you whenever they wanted. Who wanted that?”
  prefs: []
  type: TYPE_NORMAL
- en: But the following year, Charles’s wife became pregnant with their first child,
    which gave Charles an idea for an app. “I wanted to know where she was. If I had
    to go pick her up to take her to the hospital, I wanted to be able to see the
    location.” He wanted to build an app that would give him this information.
  prefs: []
  type: TYPE_NORMAL
- en: In the Spring of 2007, he managed to get some hardware from the Android team.
    “I harassed Ryan Gibson and Brian Jones, and they gave me a couple of Android
    devices.
  prefs: []
  type: TYPE_NORMAL
- en: “I wanted to get familiar with Android development, so I convinced the team
    I was working with, the AdSense front end, to join as a developer program. Ryan
    had this challenge, where they wanted people to write apps and the winners would
    get more Sooner devices. I wanted a few more devices,^([2](#c21-footnote-2)) because
    I wanted my wife to have one and for me to have one. So we built a game called
    *Spades*.^([3](#c21-footnote-3)) It was a network multiplayer game so four people
    could join and play a Spades game. I used to play with the same group at my house
    on Fridays.”
  prefs: []
  type: TYPE_NORMAL
- en: The team wrote the Spades app in a couple of months.
  prefs: []
  type: TYPE_NORMAL
- en: “After we built the app, we never ever played the game again. I’d be harassing
    them to test the app, and they were just like, ‘I hate this game, I never want
    to play it. Don’t want to play this game again, in any shape or form.’
  prefs: []
  type: TYPE_NORMAL
- en: “But the good thing is that we got third place, and we got a bunch of devices
    as part of participating.”
  prefs: []
  type: TYPE_NORMAL
- en: It was early August of 2007\. Charles had the devices he needed for his team,
    and he also had experience in writing Android apps. Now he could write the location
    app he originally had in mind, to track friends’ locations. He called it *Bounce*.
  prefs: []
  type: TYPE_NORMAL
- en: “We imagined people bouncing around. At any time, I could see where you were.
    The problem is, how do I get the location? Back then [on the Sooner device], we
    didn’t have GPS. So I bought these Bluetooth GPS pucks from Amazon. Bluetooth
    didn’t really work in Android. It was there, but there were no APIs.” That is,
    the system had Bluetooth capability, but there was no way to access the functionality
    from an application, so Bounce couldn’t use Bluetooth to communicate with the
    GPS pucks.
  prefs: []
  type: TYPE_NORMAL
- en: However, an application could issue a command to the system, just like a command
    that you might type into the DOS shell on Windows or the Terminal console on a
    Mac.
  prefs: []
  type: TYPE_NORMAL
- en: “There was one really long complex command that would effectively set up a Bluetooth
    connection to your GPS puck, all to work around the fact that we didn’t have GPS.
    Then I could read the continuous stream of the GPS data written out to Bluetooth.”
  prefs: []
  type: TYPE_NORMAL
- en: So now Charles had the location data from the GPS puck through Bluetooth. But
    what to do with the stream of data? He didn’t want to write a server and log the
    location; he just wanted to use it to send real-time locations back and forth
    with friends.
  prefs: []
  type: TYPE_NORMAL
- en: “We started using SMS as our transfer protocol and our server. You would have
    a device with a GPS puck and I would have one. When I opened the app, I could
    say ‘request [friend’s] location.’ It would send an SMS to your device and the
    Bounce app would intercept that SMS and say, ‘Is Charles one of my friends? If
    he is, let me send my GPS location back.’
  prefs: []
  type: TYPE_NORMAL
- en: “So we had a basic version, where my wife could see my location.”
  prefs: []
  type: TYPE_NORMAL
- en: On September 15th, there was going to be an executive review for a go/no-go
    decision for launching the Android SDK. Eric Schmidt, Larry Page, and Sergey Brin
    would all be there. Andy Rubin was presenting, along with Steve Horowitz, and
    they asked Charles to bring his Bounce demo.
  prefs: []
  type: TYPE_NORMAL
- en: That morning, the demo still wasn’t complete. Charles and team had added a feature
    to Bounce they called *Memory Lane*, which would show your location history. But
    the feature had come online only recently, and since then he had only been at
    work and (occasionally) home. He needed to add some actual location history to
    demonstrate that feature, so he got in his car and drove around the area to add
    some data points on the way into the office.
  prefs: []
  type: TYPE_NORMAL
- en: At 9:00 AM, he was ready to go. “I’m just making sure Bluetooth stuff’s paired
    and then I walk into the meeting. Eric’s at the head of the table, Larry and Sergey
    are sitting in their usual chairs. Jonathan Rosenberg. It was pretty packed. The
    whole team is there. I was sitting in the back, and then Andy Rubin started. ‘We’re
    going to talk about what Android is, and at the end we’re going to have some demos.’
  prefs: []
  type: TYPE_NORMAL
- en: “Eric’s like, ‘Let’s just skip to the demos.’
  prefs: []
  type: TYPE_NORMAL
- en: '“They turned to me: ‘Okay, Charles, you’re up.’”'
  prefs: []
  type: TYPE_NORMAL
- en: Charles showed them Bounce and then spent the rest of the meeting answering
    their questions about what it was like developing for Android at that time.
  prefs: []
  type: TYPE_NORMAL
- en: At the end, Eric told Andy that they were approved to launch.^([4](#c21-footnote-4))
    Which, two months later, they did.
  prefs: []
  type: TYPE_NORMAL
- en: “After the meeting, Andy turned to Steve and said ‘That guy’s joining my team.
    Make it happen.’ Then Steve told me, ‘Hey you’re joining the Android team!’
  prefs: []
  type: TYPE_NORMAL
- en: “I was like, ‘Actually, I’m pretty happy working on AdSense.’” Charles had just
    become the Technical Lead for his team and things were good. “But Steve talked
    to me and was pretty good at selling me on it. A few weeks later, I joined the
    Android team.”
  prefs: []
  type: TYPE_NORMAL
- en: There was originally a plan to show off Bounce at the launch event in November.
    By then, Bounce was using the Google Talk connection that other Google services
    were using, which was better than the SMS hack it had been using. But Google Talk
    was not very stable at that time, so it would often drop the connection and the
    apps on either side couldn’t do anything about it. In the end, Steve decided not
    to demo Bounce to avoid the possibility of failure in front of the press.
  prefs: []
  type: TYPE_NORMAL
- en: Eventually, Charles needed to turn Bounce from a demo into a product. The first
    thing he did was to sort out that Google Talk connection. Charles worked with
    Wei Huang, and they eventually got it working for Bounce and for the rest of the
    Google services apps.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another piece that Bounce needed to improve was location services. The GPS
    pucks that Charles used for the demo were just a workaround for the early Sooner
    device that didn’t have GPS. At that executive meeting in September, Sergey suggested
    that he pick up location from cell tower and Wi-Fi data. This approach was already
    in the works: Charles had started working with another team in the same building
    that was implementing the Maps feature *My Location* (also called the “blue dot”).
    That technology uses data on cell towers and Wi-Fi routers to place the blue dot,
    with the size of the surrounding circle indicating the uncertainty radius (since
    cell and Wi-Fi location is not as exact as GPS).'
  prefs: []
  type: TYPE_NORMAL
- en: But Charles also needed to plan for other devices with more built-in location
    capabilities. The G1 device actually had GPS hardware, so Bounce could use that
    data directly when it was available.
  prefs: []
  type: TYPE_NORMAL
- en: 'Charles worked with Mike Lockwood, who was writing support for GPS and other
    hardware sensors. But Charles had a problem when using GPS on the device: “It
    was really power hungry. And really slow.” The solution was for location services
    to use the lighter-weight and more approximate cell/Wi-Fi data in general, but
    it would spin up GPS when the user was directly using a mapping application to
    get more accurate location data. This approach avoided the power drain of having
    the GPS hardware constantly running, with the advantage of getting more accurate
    location information when the user clearly wanted it.'
  prefs: []
  type: TYPE_NORMAL
- en: The final thing that Bounce needed was a name. Bounce was a code name, but products
    need real, trademarkable, non-infringing names when they launch, so the team,
    er, bounced around some ideas.
  prefs: []
  type: TYPE_NORMAL
- en: '“We had a team at Google: all they do is name things. We went to them; they
    had a bunch of names. A lot of them were copyrighted. We said, ‘Let’s just go
    for a descriptive thing called Friend Finder.’ And then someone pointed us at
    this adult dating site that was called Adult Friend Finder. So we weren’t going
    to go anywhere near that.”'
  prefs: []
  type: TYPE_NORMAL
- en: The team was stuck without a name. Then they talked to Larry Page, just a couple
    of weeks before they launched. “Larry said ‘What about Latitude? You know, freedom,
    movement . . . and it’s tied to location.’ So Larry came up with the name.”
  prefs: []
  type: TYPE_NORMAL
- en: Apparently being a Google founder and executive wasn’t enough work for Larry;
    he also named products.
  prefs: []
  type: TYPE_NORMAL
- en: By this point, Latitude was integrated as a feature in Maps, as opposed to a
    separate app. It didn’t make the 1.0 release, because there was higher-priority
    work to be done for the initial release. But it launched a few months later, in
    February of 2009, simultaneously on Android, BlackBerry, Windows, Symbian, and
    on the web.
  prefs: []
  type: TYPE_NORMAL
- en: Maps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '“Apps were a little bit controversial because of the ownership,” said Steve
    Horowitz. “For example: Maps. Maps was like the star mobile app for Google. Actually,
    all Google really *had* in mobile was Maps. So we wanted to write Maps, or bring
    Maps over [from the mobile team], but the mobile team weren’t really big believers
    [in Android]. Eventually we convinced them to assign an engineer to help port
    Maps to the Android OS. He [Adam Bliss] came over from the Maps team and was instrumental
    in getting the Maps app running under Android.”'
  prefs: []
  type: TYPE_NORMAL
- en: Bob Lee shared an office with Adam. “He was creating the first version of Maps
    on Android. We had a prototype of a G1 screen. He made this demo; it was like
    the first time it was a full screen map. You could pan around on the big screen.
    Andy [Rubin] gave him the first G1 prototype within the team because of that.”
  prefs: []
  type: TYPE_NORMAL
- en: In late 2007, Adam was joined by Charles, who set aside his Bounce app to focus
    on shipping Maps. “I joined Android to work on [Bounce], but then pretty soon
    that got killed because we had far higher priority things to do. We needed the
    Maps app before we had the shiny feature of location tracking.”
  prefs: []
  type: TYPE_NORMAL
- en: Maps wasn’t all that Charles worked on. Like the rest of the Android team, he
    did whatever needed doing. “I did a lot of the Dialog APIs, and worked on ListView,
    TextView, and basics in the system server. Whenever Dianne was overloaded, whatever
    few bugs of hers I could fix, or Jason Parks, or Jeff Hamilton, or Mike Cleron.
    I ended up being a kind of a firefighter, wherever was needed. The SMS app, MMS
    app, Gmail app, did a bunch of stuff. But mainly on the Maps app with Adam. But
    I also wanted the MapView API and the Location API, because we needed the Location
    APIs [for Bounce].”
  prefs: []
  type: TYPE_NORMAL
- en: About a year after he joined Android (around the time Android 1.0 shipped),
    Charles switched to the Maps team and became the lead. “There was a Maps team
    I was working with on the My Location stuff. I wanted to say ‘Hey, we should take
    the Maps app and we should merge with that team and actually expand the features
    of the Maps app.’ Because if you look back then, Maps ran on Windows Mobile, Symbian,
    and BlackBerry. BlackBerry was kind of the king back then. That was most of the
    volume. It had far more features there, like transit features. Because they had
    like 30–80 people across the world working on that app, while it was just myself
    and Adam working on this [on Android]. But we were building on the same APIs,
    we were using their server APIs. So at the end, after a lot of discussions, I
    moved from the Android team to the Maps team [along with Adam Bliss]. I stayed
    in building 44\. I just moved my desk a few cubicles over.”
  prefs: []
  type: TYPE_NORMAL
- en: Part of moving to that team was becoming the overall lead of mobile maps (for
    Android and the other platforms). But leading that team didn’t mean getting his
    way. “Back then, I was trying to convince everyone, ‘Let’s stop working on Symbian,
    Windows Mobile, and BlackBerry and let’s move to Android because I think it’s
    going to be the future.’ And everyone’s like, ‘You’re crazy! We have no users
    of Android. Look at how many BlackBerries are shipping every month! It’s more
    than you’re going to ship in a year.’
  prefs: []
  type: TYPE_NORMAL
- en: “In the end, we decided to move from the code base we built for Android into
    what we called the ‘unified code base.’ So we dumbed down and didn’t use all of
    the Android APIs. You couldn’t use HashMap, you could only use a Vector. You couldn’t
    use a LinkedList, you could only use a Vector. Basically, Vector was the only
    data structure you had.
  prefs: []
  type: TYPE_NORMAL
- en: “We moved to that code base, which gave us a lot of features on Android, so
    the Android users suddenly had more of a full-featured Maps app. But I couldn’t
    use all of the features of Android.”
  prefs: []
  type: TYPE_NORMAL
- en: Finally, after the Droid launched in late 2009 and Android started to get a
    large user base, the conversation on the Maps team changed. “That’s when I could
    finally go back to the team, with the growth of Android, and start shifting us
    from Symbian, Windows Mobile, and BlackBerry onto Android.
  prefs: []
  type: TYPE_NORMAL
- en: “I remember when I took over the team. It was two years later I convinced them
    to be all in on Android. Till then, it was like ‘No, we have to support all the
    platforms.’ But after Droid in particular, our user base started to grow so much.
    We started to be able to do Wi-Fi scans, cell scans. When I started, I remember
    the blue circle, which shows the uncertainty radius, would be at 800 meters. Within
    a year or two, we managed to get just the cell one to under 300 meters and the
    Wi-Fi from about 300 to 75 meters. So just the data collection^([5](#c21-footnote-5))
    from Android driving that really helped get the blue dot much much tighter.”
  prefs: []
  type: TYPE_NORMAL
- en: Navigation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: “At the same time I joined the Maps team,” said Charles, “I started working
    on turn-by-turn navigation. Back then, you would buy Garmin and you would pay
    money. Or even on an iPhone you would pay $30/month for that. We felt like we
    could do this amazing experience.”
  prefs: []
  type: TYPE_NORMAL
- en: 'But another problem had to be solved first: the data format that the Maps app
    was using. The maps that were displayed in the app at that time were basically
    just static pictures, which were problematic both in terms of usability and size.
    “We were using raster maps, which were PNGs.^([6](#c21-footnote-6)) If you rotated
    the map, the text was upside down. If you wanted to tilt the map, you couldn’t.”
    Also, the images used for the maps were large and required large bandwidth to
    download.'
  prefs: []
  type: TYPE_NORMAL
- en: Keith Ito, then in the Seattle office, was working on turn-by-turn navigation.
    To address the data problem, he worked on a new way of displaying maps, using
    vectors.^([7](#c21-footnote-7)) Vectors are a way of describing the graphics of
    an image (like a map) with geometry instead of a picture. Rather than sending
    down map images (with text embedded in that picture), the server sent down a geometric
    description that would be drawn by the device at the appropriate resolution and
    rotation. And it would do so with far less data than the PNG image maps required.
  prefs: []
  type: TYPE_NORMAL
- en: 'Keith built a demo of these new vector-based maps and sent it to Charles, in
    Mountain View, who took it to Andy’s office: “Larry was in the office. I showed
    them the vector maps. You could tilt and zoom. Before, we had discrete zoom levels.
    Now you could zoom in a little or a lot, and the text wouldn’t distort.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'But there was a trade-off: performance. “To do it on a G1 was so hard because
    we were rendering it.” That is, it requires more effort and time to draw a map’s
    geometry, vector by vector, than it does to display an image. But it was a thousand
    times less data.'
  prefs: []
  type: TYPE_NORMAL
- en: Andy knew that it would be important for the upcoming Verizon device. “Turn-by-turn
    navigation, on Droid, became one of the marquee features.” Keith continued working
    with Charles on both productizing vector maps and on the turn-by-turn navigation
    feature.
  prefs: []
  type: TYPE_NORMAL
- en: There were still hurdles to cross in launching the feature on the Droid. For
    one thing, Verizon already had an existing application, VZ Navigator, that they
    charged money for and wanted to continue offering. But the feature did make it
    onto the Droid^([8](#c21-footnote-8)) and out into the world. Turn-by-turn helped
    drive not only navigation and Maps usage overall, but also Droid sales. People
    realized that they could use their phones, with their existing data plans, to
    get to where they needed to go.
  prefs: []
  type: TYPE_NORMAL
