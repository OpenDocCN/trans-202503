["```\n#lang racket\n```", "```\n> (+ 1 2 3) ; this is an input, the following is an output\n6\n```", "```\n#lang racket\n\n(define (piscis x y r b)\n  (let* ([y (- y r)]\n         [2r (* 2 r)]\n         [yi (sqrt (- (sqr r) (sqr x)))] ; y-intersection\n         [π pi]\n      ➊ [ϕ (asin (/ yi r))]\n      ➋ [θ (- π ϕ)]\n      ➌ [path (new dc-path%)])\n   (send dc set-brush b)\n➍ (send path move-to 0 (- yi))\n➎ (send path arc (- x r)     y 2r 2r  θ    (+ π  ϕ))\n➏ (send path arc (- (- x) r) y 2r 2r (- ϕ) ϕ)\n➐ (send dc draw-path path)))\n```"]