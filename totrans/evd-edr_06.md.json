["```\nNTSTATUS FLTAPI FltRegisterFilter(\n [in] PDRIVER_OBJECT   Driver,\n [in] const FLT_REGISTRATION *Registration,\n [out] PFLT_FILTER   *RetFilter\n);\n```", "```\ntypedef struct _FLT_REGISTRATION {\n USHORT          Size;\n USHORT          Version; FLT_REGISTRATION_FLAGS     Flags;\n const FLT_CONTEXT_REGISTRATION    *ContextRegistration;\n const FLT_OPERATION_REGISTRATION    *OperationRegistration;\n PFLT_FILTER_UNLOAD_CALLBACK    FilterUnloadCallback;\n PFLT_INSTANCE_SETUP_CALLBACK   InstanceSetupCallback;\n PFLT_INSTANCE_QUERY_TEARDOWN_CALLBACK  InstanceQueryTeardownCallback;\n PFLT_INSTANCE_TEARDOWN_CALLBACK    InstanceTeardownStartCallback;\n PFLT_INSTANCE_TEARDOWN_CALLBACK    InstanceTeardownCompleteCallback;\n PFLT_GENERATE_FILE_NAME      GenerateFileNameCallback;\n PFLT_NORMALIZE_NAME_COMPONENT    NormalizeNameComponentCallback;\n PFLT_NORMALIZE_CONTEXT_CLEANUP    NormalizeContextCleanupCallback;\n PFLT_TRANSACTION_NOTIFICATION_CALLBACK  TransactionNotificationCallback;\n PFLT_NORMALIZE_NAME_COMPONENT_EX   NormalizeNameComponentExCallback;\n PFLT_SECTION_CONFLICT_NOTIFICATION_CALLBACK  SectionNotificationCallback;\n} FLT_REGISTRATION, *PFLT_REGISTRATION;\n```", "```\ntypedef struct _FLT_OPERATION_REGISTRATION {\n UCHAR       MajorFunction;\n FLT_OPERATION_REGISTRATION_FLAGS Flags;\n PFLT_PRE_OPERATION_CALLBACK  PreOperation;\n PFLT_POST_OPERATION_CALLBACK  PostOperation;\n PVOID       Reserved1;\n} FLT_OPERATION_REGISTRATION, *PFLT_OPERATION_REGISTRATION;\n```", "```\nPFLT_PRE_OPERATION_CALLBACK PfltPreOperationCallback;\n\nFLT_PREOP_CALLBACK_STATUS PfltPreOperationCallback(\n [in, out] PFLT_CALLBACK_DATA Data,\n [in]  PCFLT_RELATED_OBJECTS FltObjects,\n [out]  PVOID *CompletionContext\n)\n{...}\n```", "```\nPFLT_POST_OPERATION_CALLBACK PfltPostOperationCallback;\n\nFLT_POSTOP_CALLBACK_STATUS PfltPostOperationCallback(\n [in, out]  PFLT_CALLBACK_DATA Data,\n [in]   PCFLT_RELATED_OBJECTS FltObjects,\n [in, optional] PVOID CompletionContext,\n [in]   FLT_POST_OPERATION_FLAGS Flags\n)\n{...}\n```", "```\nconst FLT_OPERATION_REGISTRATION Callbacks[] = {\n {IRP_MJ_CREATE, 0, MyPreCreate, MyPostCreate},\n {IRP_MJ_READ, 0, MyPreRead, NULL},\n {IRP_MJ_WRITE, 0, MyPreWrite, NULL},\n {IRP_MJ_OPERATION_END}\n};\n```", "```\nPS > **Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\WdFilter\\\" | Select *** \n**-Exclude PS* | fl**\n\nDependOnService : {FltMgr}\nDescription  : @%ProgramFiles%\\Windows Defender\\MpAsDesc.dll,-340\nDisplayName  : @%ProgramFiles%\\Windows Defender\\MpAsDesc.dll,-330\nErrorControl  : 1\nGroup    : FSFilter Anti-Virus\nImagePath   : system32\\drivers\\wd\\WdFilter.sys\nStart    : 0\nSupportedFeatures : 7\nType    : 2 PS > **Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\WdFilter\\Instances\\**\n**WdFilter Instance\" | Select * -Exclude PS* | fl**\n\nAltitude : 328010\nFlags : 0\n```", "```\nDetectMojoMismatch(string mojoPipeName)\n{\n pid = GetCurrentProcessId();\n tid = GetCurrentThreadId(); ❶ if (!mojoPipeName.beginsWith(\"mojo. \" + pid + \".\" + tid + \".\"))\n\n  {\n  // Bad Mojo pipe found\n  }\n}\n```", "```\nPS > **Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\SysmonDrv\" | Select *** \n**-Exclude PS* | fl**\n\nType   : 1\nStart  : 0\nErrorControl : 1\nImagePath : SysmonDrv.sys\nDisplayName : SysmonDrv\nDescription : System Monitor driver\n\nPS > **Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\SysmonDrv\\Instances\\**\n**Sysmon Instance\\\" | Select * -Exclude PS* | fl**\n\nAltitude : 385201\nFlags : 0\n```", "```\nPFLT_PRE_OPERATION_CALLBACK EvilPreWriteCallback;\n\nFLT_PREOP_CALLBACK_STATUS EvilPreWriteCallback(\n [in, out] PFLT_CALLBACK_DATA Data,\n [in] PCFLT_RELATED_OBJECTS FltObjects,\n [out] PVOID *CompletionContext\n)\n{\n `--snip--`\n}\n```", "```\nFLT_PREOP_CALLBACK_STATUS EvilPreWriteCallback(\n  [in, out] PFLT_CALLBACK_DATA Data,\n  [in]  PCFLT_RELATED_OBJECTS FltObjects,\n  [out]  PVOID *CompletionContext\n)\n{\n `--snip--`\n  if (IsThisMyEvilProcess(PsGetCurrentProcessId())\n  {\n        `--snip--`\n     ❶  Data->IoStatus.Status = STATUS_SUCCESS;\n        return FLT_PREOP_COMPLETE\n    }\n `--snip--`\n}\n```"]