- en: '**8**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**MONITORING, LOGS, AND ALERTS**'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00015.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: A paradox exists for penetration testers in that we are frequently trying to
    evade detection while simultaneously hoping the defenders stop us in our tracks.
    An offensive security professional’s job is not only to find and explain vulnerabilities
    in our clients’ systems but also to make those charged with monitoring and securing
    the enterprise better at what they do. Penetration tests can help determine where
    the gaps are in defenders’ rules and alerts and also keep defenders sharp and
    well-practiced in case a real adversary arrives.
  prefs: []
  type: TYPE_NORMAL
- en: This final chapter is a departure from the pentest techniques and tools covered
    in the previous chapters. I describe monitoring tools, logs, and alerts that defenders
    should be reviewing to detect the kinds of attacker movements described in the
    rest of the book. If a blue team is making use of these resources, it will be
    much harder for an attacker to make headway without being found and evicted.
  prefs: []
  type: TYPE_NORMAL
- en: I begin with Azure Security Center (ASC), an Azure feature that consolidates
    security recommendations and events from different services and systems. Then
    I describe the Operations Management Suite (OMS), which collects events and provides
    centralized management of systems in Azure, corporate networks, and other cloud
    providers. Next, I cover the Secure DevOps Kit, a package of scripts to secure
    a subscription, enable important alerts, and provide continuous assurance. Finally,
    we look at collecting Azure service logs outside of management tools.
  prefs: []
  type: TYPE_NORMAL
- en: '**Azure Security Center**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Azure Security Center is a service offering in Azure that condenses key security
    information into a single view. By consolidating this data, Security Center enables
    administrators without the support of full-time security staff to quickly validate
    the security of their services. Teams that do include defense personnel can cover
    more subscriptions and free up staff to spend more time being proactive. Not having
    Azure Security Center enabled in a subscription is a pentester’s finding in and
    of itself.
  prefs: []
  type: TYPE_NORMAL
- en: While previously limited to security events from Azure services, Security Center
    began accepting events from non-Azure-based systems in mid-2017\. This is referred
    to as *hybrid security* and is available to users of Azure Security Center’s paid
    tier of service. Azure Security Center analyzes logs from external systems that
    are imported to OMS workspaces, which are described in “[Setting Up OMS](part0017.html#lev185)”
    on [page 169](part0017.html#page_169).
  prefs: []
  type: TYPE_NORMAL
- en: 'Security Center has two main components: detection and prevention. *Detection*
    flags potentially illicit activity made against the subscription’s resources,
    and *prevention* examines the configurations of services to identify missing security
    controls. Let’s examine both in more depth.'
  prefs: []
  type: TYPE_NORMAL
- en: '***Utilizing Security Center’s Detection Capabilities***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A key requirement for any defender is threat detection and alerting. Security
    Center monitors VMs and SQL databases by reviewing logs and installing a small
    monitoring agent on the VMs. When Security Center detects an anomaly, an alert
    is generated in the Security Center pane within the Azure portal, as shown in
    [Figure 8-1](part0017.html#ch08fig1). Optionally, Security Center can generate
    and send an email to designated security contacts or the subscription owners.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Threat detection capabilities are only enabled for customers using the paid
    (Standard) tier of Security Center, which has a monthly charge based on the number
    of VMs and databases in the subscription. The Security Center tier is set at a
    subscription level, so individual resources cannot be opted in or out of the service.
    If a client wants threat detection for production workloads but balks at paying
    Security Center’s fees for test systems, then consider having them split resources
    into two subscriptions—one using Security Center’s paid option and one using the
    free edition. Ideally, Security Center would monitor all nodes, but security recommendations
    must often compete with budgetary realities.*'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00061.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 8-1: Azure Security Center main view with alerts*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Security Center alerts on a variety of threats, from host-based detections
    to network events. Here’s a list of some of the alerts available:'
  prefs: []
  type: TYPE_NORMAL
- en: Brute-force login attempts to Remote Desktop
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brute-force login attempts to SSH
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Presence of a binary with a name that matches known malware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Execution of a binary with a known-malware signature
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When a binary performs a suspicious action (determined through heuristics)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SQL injection attempts against databases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition to noting the resource where the alert was triggered, Security Center
    also provides details about the event and recommendations for how to remediate
    the problem, as shown in [Figure 8-2](part0017.html#ch08fig2). Here, an administrator
    can see the name of the suspicious program, where it was run, who ran it, why
    it is considered dangerous, and steps for how to correct the problem.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00062.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 8-2: Azure Security Center detection alert*'
  prefs: []
  type: TYPE_NORMAL
- en: One often-overlooked security benefit of running services in the cloud is that
    the cloud provider can watch for trends across all of their services. They can
    then use this information to better detect threats against their customers’ resources.
    For example, Microsoft tracks IP addresses of known cybercrime groups and monitors
    Azure VMs for outbound traffic to these systems in order to detect attacker command-and-control
    communications. With Azure Security Center, Microsoft can add new alerts over
    time as new hacking and detection techniques emerge, and these updates take effect
    immediately for Azure customers without any intervention needed.
  prefs: []
  type: TYPE_NORMAL
- en: '***Utilizing Security Center’s Prevention Capabilities***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Aside from alerting, Security Center also provides proactive security advice
    for a number of services. The recommendations aren’t a replacement for proper
    planning, threat modeling, and security assessments but rather are preventive
    tips that can help eliminate some of the most prevalent security mistakes. Prevention
    advice is included in both the free and paid tiers of Security Center.
  prefs: []
  type: TYPE_NORMAL
- en: For example, Security Center will check to make sure VMs are fully patched and
    are running endpoint protection software. It will also suggest applying Azure
    Disk Encryption to VMs, which would prevent the offline VHD analysis attack described
    in [Chapter 5](part0014.html#ch05). Outside of VMs, Security Center will check
    that encryption is enabled for Azure SQL databases and storage accounts to protect
    data at rest, as shown in [Figure 8-3](part0017.html#ch08fig3).
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00063.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 8-3: Azure Security Center preventive recommendations for SQL and storage*'
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, prevention alerts can help make sure security doesn’t regress
    over time as users deploy new resources or as services undergo maintenance. If
    an administrator neglects a VM and fails to install patches, it will be very obvious
    because the compute status tile on the Azure Security Center blade’s main page
    will turn red with alerts. If an engineer temporarily disables a firewall for
    troubleshooting, this triggers an alert. But perhaps most importantly, if a new
    security feature is added to Azure that the client hasn’t used before, Security
    Center will alert the client that their services are no longer making use of every
    available protection. Given the quick pace of Azure updates, following all current
    best-practices is hard, but Azure Security Center can help take this task off
    of an administrator’s plate.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you discover uncorrected prevention alerts during an assessment, you should
    discuss this with the client. Here are some explanations the client might provide:'
  prefs: []
  type: TYPE_NORMAL
- en: They don’t bother, or have time, to look at Security Center.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They believe a particular alert isn’t important or applicable, or they have
    resolved the concern through some other control.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They feel resolving an alert would be too expensive, or the fix wouldn’t be
    compatible with their deployment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They think Azure is triggering a false positive.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Have a deeper conversation to really understand what’s happening in any of these
    cases. If the client is ignoring Security Center entirely, I’d be concerned they
    aren’t properly prioritizing security. Security Center is one of the easier security
    tools on the market to use, and they should be using it. If they believe they
    solved an alert some other way, you should confirm that their fix does indeed
    address the threats implied by the alert. If the customer has done a cost-benefit
    assessment and decided that the solutions for the flagged risks are too expensive,
    that can be hard to argue with, but in those cases, be sure the customer understands
    the exact nature of the threats they are accepting.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, if an alert is a false positive, let the customer know they can click
    an alert and select **Dismiss** to hide it. They can also disable an entire category
    of prevention policies within a subscription by going to Security Center, selecting
    **Security Policy**, clicking a subscription name, clicking **Prevention Policy**,
    and then toggling any ruleset to **Off**. However, they should be absolutely sure
    that it’s really a false positive. In that case, they might also consider submitting
    feedback to Microsoft. To date, I have yet to encounter a legitimate false positive
    in Security Center’s preventive ruleset.
  prefs: []
  type: TYPE_NORMAL
- en: '**Operations Management Suite**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Azure Security Center is built to give IT administrators a view of security-related
    issues in their services. Although that’s great for seeing a summary of threats
    in one view, it means that teams need to look elsewhere to review non-security-related
    events or perform non-security-related administrative tasks. To address the difficulty
    of managing systems across multiple environments, Microsoft offers Operations
    Management Suite (OMS), a cloud-based platform that can aggregate logs, alerts,
    and automation from both on-premises and cloud-hosted systems and services.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Microsoft has added many of the security features that were originally exclusive
    to OMS into Azure Security Center, including the ability to query logs from systems
    outside of Azure. This gives defenders the ability to use a single blade to monitor
    their entire environment. However, these features can still be accessed via OMS
    as well, and both systems utilize the same OMS workspaces.*'
  prefs: []
  type: TYPE_NORMAL
- en: OMS allows users to enable various solutions, or modules, to provide specific
    capabilities. One of the core solutions is Security and Compliance, which monitors
    the state of antimalware services on hosts, threats against systems, and patch
    levels. OMS also has other solutions that can increase security awareness, such
    as Active Directory health checks, Azure Network Security Group analytics, SQL
    Server assessments, and Key Vault analytics. There are also non-security-related
    solutions in OMS, such as the automation component used to enable Azure Automation
    Hybrid Workers, which you saw in [Chapter 7](part0016.html#ch07).
  prefs: []
  type: TYPE_NORMAL
- en: '***Setting Up OMS***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Because OMS ties the management of multiple environments together, it requires
    some setup. To use OMS to monitor services, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Create an OMS workspace at *[https://mms.microsoft.com/](https://mms.microsoft.com/)*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enable any desired solutions in the OMS workspace.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enable Log Analytics for any Azure services OMS will monitor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install an agent on any non-Azure servers to be monitored.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: First, the administrator creates a *workspace*, which is OMS’s equivalent to
    an Azure subscription. Multiple people can share a workspace, and companies can
    choose to have more than one workspace if they want to split up the management
    of different systems to different groups of people.
  prefs: []
  type: TYPE_NORMAL
- en: Second, the administrator needs to add *solutions* to their workspace. Each
    solution represents a different type of log, agent, or service that OMS can use.
    Within the subscription, there is a *gallery*, which is represented by a shopping
    bag icon and contains dozens of available solutions. OMS users can click any solution
    to get a more detailed description of its capabilities and any associated costs,
    if it has any, or to enable the solution in their workspace. Workspaces can contain
    as many solutions as users need. [Figure 8-4](part0017.html#ch08fig4) shows some
    of the offerings in the gallery.
  prefs: []
  type: TYPE_NORMAL
- en: Third, service logs need to be forwarded to OMS for any Azure-specific solutions
    that an administrator enables. For OMS to be able to analyze logs, it needs access
    to them, but Azure’s logs aren’t automatically made available to OMS. Instead,
    an administrator with the necessary rights in both the Azure subscription and
    the OMS workspace must log in to the Azure portal and enable log forwarding for
    each resource managed in OMS. Although this can be somewhat tedious when first
    configuring OMS, it allows administrators to select individual instances of services
    within a subscription for monitoring; this prevents over-sharing of data, allows
    different services to have logs sent to different workspaces (for example, test
    services logs go to one workspace while production logs go to another), and prevents
    OMS from becoming cluttered with logs from resources a customer doesn’t want to
    track.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00064.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 8-4: Operations Management Suite gallery*'
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable these logs, the administrator performs the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigates to the service within Azure that corresponds to the OMS solution they
    enabled.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Selects an instance of that service and then clicks the **Diagnostics logs**
    tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enables the diagnostic log, if it isn’t already on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Specifies a name for the log—often the name of the resource.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Checks the box **Send to Log Analytics**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clicks the **Log Analytics Configure** button and then selects one of the OMS
    workspaces listed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Checks any boxes indicating what type of logs to collect, such as Audit logs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clicks **Save**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At this point, logs should be flowing to OMS, which will begin analyzing them
    and displaying results after a short delay. An example of enabling log forwarding
    to OMS for a Key Vault instance is shown in [Figure 8-5](part0017.html#ch08fig5).
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00065.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 8-5: Enabling Log Analytics for a Key Vault resource*'
  prefs: []
  type: TYPE_NORMAL
- en: The final step to setting up OMS is to enable data collection from non-Azure
    systems. This includes on-premises servers and VMs running in other cloud providers.
    For these systems, Azure offers Windows and Linux agent applications that run
    as a service and forward any relevant data to OMS for analysis and alerting. OMS
    users can download these agents by clicking the **Settings** button in OMS, selecting
    **Connected Sources**, and then clicking the **Download agent** button in the
    Windows Servers and Linux Servers tabs. These pages also provide agent ID values
    and OMS keys, which are used during the agent installation to direct the logs
    to the correct workspace.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to agents, OMS users can also download an OMS Gateway application
    from the Connected Sources page. This application allows agents installed on servers—in
    a restricted network environment with no outbound internet access—to forward their
    logs to a central gateway, which then passes the logs on to OMS. You can find
    more information about the connectivity requirements of OMS at *[https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-oms-gateway/](https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-oms-gateway/)*.
  prefs: []
  type: TYPE_NORMAL
- en: '***Reviewing Alerts in OMS***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Once fully configured and receiving log data, OMS should begin to display log
    status on the workspace home page. This is useful to see how many hosts are checking
    in, but it isn’t the best view for tracking down events. For that, OMS has two
    other panes: My Dashboard and Log Search.'
  prefs: []
  type: TYPE_NORMAL
- en: The My Dashboard pane allows users to select individual metrics available from
    the enabled solutions and add them to the dashboard. Users can then rearrange
    them and opt for different visualizations for the data, such as bar graphs, line
    graphs, or counts. This way, an OMS user can determine what particular events
    are important to them and see only relevant data in the portal. Users can also
    share dashboards or create multiple dashboards using the View Designer page in
    OMS.
  prefs: []
  type: TYPE_NORMAL
- en: Log Search, an aggregate of all incoming data to the OMS workspace, allows users
    to search for specific events. The search pane uses Microsoft’s Azure Log Analytics
    Query language, which allows a user to query based on resource, event type, time
    range, platform, and more. Fortunately for users not interested in learning a
    new language, OMS offers filter options to the left of the results to further
    scope the data—much like a consumer might filter product attributes on a shopping
    website. Users can start with a wildcard search (*) to show all records, then
    filter them with the GUI, as shown in [Figure 8-6](part0017.html#ch08fig6).
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00066.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 8-6: Log Search and filtering in OMS*'
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Log Search is also accessible within Azure Security Center by clicking **Search**
    from the left menu bar. OMS and Security Center both contain the same workspaces
    and events, and they use the same query language, so you should get the same results
    regardless of how you access Log Search.*'
  prefs: []
  type: TYPE_NORMAL
- en: Although the OMS portal is a great place to keep an eye on trends across environments,
    security personnel need to know when an attack occurs, even if they’re away from
    their screens. For this, OMS has the ability to perform actions when a certain
    event occurs or a metric goes outside a specified threshold. These actions include
    sending emails, triggering a webhook to make an API call to another service, and
    creating tickets in popular IT Service Management (ITSM) tools like ServiceNow,
    System Center Service Manager, Provance, and Cherwell.
  prefs: []
  type: TYPE_NORMAL
- en: To create an alert, an OMS user can create a query in Log Search that matches
    the desired conditions for the alert. Alternatively, they can click any graph
    in the dashboard and then click the **Alert** button in the top menu. This will
    open an alert rule creation window that allows the user to specify the exact conditions
    of the alert and the actions that should be taken, as shown in [Figure 8-7](part0017.html#ch08fig7).
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00067.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 8-7: Alert creation in OMS*'
  prefs: []
  type: TYPE_NORMAL
- en: The user creating the rule can specify how critical they deem the alert. They
    can also set a cool-off period to prevent the rule from triggering continually.
    Between the custom dashboards, queries, and alerting options, OMS users can stay
    apprised of events and trends in their environments.
  prefs: []
  type: TYPE_NORMAL
- en: '**Secure DevOps Kit**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Secure DevOps Kit is a group of scripts designed to help developers turn
    on key security controls in an efficient, consistent way. These scripts were created
    within Microsoft’s IT organization as a result of considerable research and testing
    by its cloud security team. The kit is written in PowerShell and requires the
    workstation where it is run to have the Azure PowerShell tools already installed.
    To get the toolkit, open a PowerShell prompt and run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Once the toolkit has finished downloading, run the cmdlet Get-AzSKSubscriptionSecurityStatus,
    specifying a subscription ID. This will examine a number of attributes in the
    specified subscription, such as the number of subscription administrators, unresolved
    ASC alerts, use of classic resources, and whether designated security contacts
    for the subscription have been provided. [Listing 8-1](part0017.html#ch08list1)
    shows `Get-AzSKSubscriptionSecurityStatus` running on a subscription.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*Listing 8-1: Secure DevOps Kit examining the security settings of a subscription*'
  prefs: []
  type: TYPE_NORMAL
- en: This will list the tests being run and the number of tests that pass, fail,
    or need manual verification, as well as provide a path to the output log. Results
    are logged to a CSV file, which contains the pass/fail status of each control
    as well as recommended steps that can be taken to become compliant. For example,
    if critical alert notifications aren’t enabled, the results will suggest running
    `Set-AzSKAlerts` to enable them.
  prefs: []
  type: TYPE_NORMAL
- en: Next, run the Get-AzSKAzureServicesSecurityStatus cmdlet. This command works
    just like the `Get-AzSKAzureSubscriptionSecurityStatus` cmdlet, except instead
    of validating the security of the subscription’s configuration, it checks the
    security of each service running inside the subscription. The results are written
    to the screen and to a CSV file just as they are for the subscription security
    check.
  prefs: []
  type: TYPE_NORMAL
- en: Although these one-time checks of Azure settings are a good start, there is
    a good chance the subscription and its services may become less secure over time.
    This could happen if an administrator accidently disables a security setting,
    if new resources are deployed and aren’t set up for monitoring, or if a new security
    feature is added to Azure but isn’t retroactively applied to existing resources.
    To handle these cases, the Secure DevOps Kit also offers a Continuous Assurance
    component.
  prefs: []
  type: TYPE_NORMAL
- en: 'Continuous Assurance uses Azure Automation to create a runbook that validates
    the security of any specified resource groups once a day. The results are stored
    in an OMS workspace so administrators can track their resources’ security posture
    over time. To enable Continuous Assurance, run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Be sure to specify an existing OMS workspace and its associated access key,
    as well as any resource groups that should be monitored. Once the command completes,
    the automation job will take several hours before results are available in OMS.
  prefs: []
  type: TYPE_NORMAL
- en: Other features available in the Secure DevOps Kit may also be helpful, depending
    on your client’s environment. For more information, see *[https://github.com/azsk/DevOpsKit-docs/](https://github.com/azsk/DevOpsKit-docs/)*.
  prefs: []
  type: TYPE_NORMAL
- en: '**Custom Log Handling**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Both OMS and Security Center are good choices for clients looking for first-party
    Microsoft solutions to managing and monitoring their services, but these solutions
    might not be a perfect fit for every customer. Some enterprises may want to integrate
    logs into other monitoring tools they use already; that way, they’ll have everything
    in a single place. Or maybe they’re using a service in a novel way or have threat
    concerns unique to their business—the kind of events not accounted for in any
    commercial product—that need to be addressed in a custom solution. Some customers
    might want to monitor newly released Azure services that don’t yet have corresponding
    solutions in OMS. And others may have unique regulatory requirements that dictate
    a long period of log data retention. For these clients, Azure does provide the
    ability to save logs for just about every service, usually to a storage account.
  prefs: []
  type: TYPE_NORMAL
- en: Service logs are usually off by default. Users must enable them on a per-resource
    basis in the Azure portal. This is to save customer expense, because logs are
    written to storage accounts, which are billed by the amount of space used. The
    location of this setting differs by service; for services with OMS log forwarding,
    the option should be on the same Diagnostics Log page. For other services, it’s
    sometimes labeled Diagnostics, Alerts, Metrics, Logging, or Activity Log.
  prefs: []
  type: TYPE_NORMAL
- en: On most of these settings blades, there is a checkbox to save the logs to a
    storage account that, once checked, will display a drop-down menu for selecting
    the desired storage account—very much like configuring Log Analytics for OMS.
    For some services, like virtual machines, you first need to view the log in the
    service’s Activity Log page, click **Export**, and then choose the destination
    storage account, as shown in [Figure 8-8](part0017.html#ch08fig8).
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/00068.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 8-8: Exporting VM logs to Azure Storage*'
  prefs: []
  type: TYPE_NORMAL
- en: After the logs for various services are being saved to a storage account, users
    can retrieve them with PowerShell, a storage account library, or any of the numerous
    storage account client applications discussed in [Chapter 4](part0013.html#ch04).
    Many services write the logs as flat files into blob storage, though some use
    table storage to save their records. Unfortunately, there isn’t a consistent format
    used by all services, so a developer will need to parse the logs for any services
    of interest and create a custom solution based on the organization’s needs.
  prefs: []
  type: TYPE_NORMAL
- en: Penetration testers should occasionally review the logs before and after carrying
    out an operation or using a new tool to better understand how much activity is
    currently being recorded and detected. If you find events that end up in logs
    but aren’t exposed in Azure Security Center or OMS, make your client aware of
    this gap and notify Microsoft. You can do so at *[https://feedback.azure.com/](https://feedback.azure.com/)*
    or through the product support link in the Azure Portal. If your client is a Premier
    customer, they can submit feedback through their technical account manager.
  prefs: []
  type: TYPE_NORMAL
- en: '**Summary**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this chapter, we reviewed the various ways clients can configure alerts for
    security events in Azure, as well as audit their resources to ensure they are
    following best practices. We started with Azure Security Center, which is a good
    option for those who want to focus specifically on securing Azure, because it
    offers both alerts and configuration recommendations for a variety of Azure services.
    For users wanting to manage multiple environments, we explored Operations Management
    Suite, which can also alert on security events, but unlike Security Center, it
    can perform health checks, monitor on-premises servers, and even automate management
    duties on servers. Next, you saw how the Secure DevOps Kit could verify whether
    crucial security settings are properly configured for an Azure subscription. Finally,
    we examined how to retrieve logs from Azure that developers can review by hand
    or use in custom management tools.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for joining me on this walk through a cloud. May your engagements
    be legal, enjoyable, appreciated, and ever increasing in difficulty.
  prefs: []
  type: TYPE_NORMAL
