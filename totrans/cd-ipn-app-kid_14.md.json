["```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n➋\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nimport UIKit\n\nimport\n CoreData\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n➊\n let\n newBirthday = Birthday\n (firstName: firstName, \n    // ← Remove this code\n\n      lastName: lastName, birthdate: birthdate)         // ← Remove this code\n\n➋\n delegate\n ?.addBirthdayViewController\n (self\n , \n          // ← Remove this code\n\n      didAddBirthday: newBirthday)                     // ← Remove this code\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nlet firstName = firstNameTextField.text ?? \"\"\n\nlet lastName = lastNameTextField.text ?? \"\"\n\nlet birthdate = birthdatePicker.date\n\nlet\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\nlet\n context = appDelegate.persistentContainer\n .viewContext\n\ndismiss(animated: true, completion: nil)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n let appDelegate = UIApplication.shared.delegate as! AppDelegate\n\n  let context = appDelegate.persistentContainer.viewContext\n\n➊\n let\n newBirthday = Birthday\n (context: context)\n\n➋\n newBirthday.firstName\n = firstName\n\n➌\n newBirthday.lastName\n = lastName\n\n➍\n newBirthday.birthdate\n = birthdate as\n NSDate\n ?\n\n➎\n newBirthday.birthdayId\n = UUID\n ().uuidString\n\n➏\n if\n let\n uniqueId = newBirthday.birthdayId\n {\n\n      print\n (\"The birthdayId is\n \\(\n uniqueId)\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nThe birthdayId is 79E2B0EF-2AD5-4382-A38C-4911454515F1\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  if let uniqueId = newBirthday.birthdayId {\n\n      print(\"The birthdayId is \\(uniqueId)\")\n\n  }\n\n➊\n do\n {\n\n    ➋\n try\n context.save\n ()\n\n➌\n } catch\n let\n error {\n\n    ➍\n print\n (\"Could not save because of\n \\(\n error).\"\n )\n\n  }\n\n  dismiss(animated: true, completion: nil)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nfunc\n save() throws\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  override func viewDidLoad() {\n\n      --*snip*\n --\n\n  }\n\n➊\n override\n func\n viewWillAppear(_\n animated: Bool\n ) {\n\n    ➋\n super\n .viewWillAppear\n (animated)\n\n    ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n    ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n    ➎\n let\n fetchRequest = Birthday\n .fetchRequest\n () as\n NSFetchRequest\n <Birthday\n >\n\n      do\n {\n\n        ➏\n birthdays = try\n context.fetch\n (fetchRequest)\n\n      } catch\n let\n error {\n\n          print\n (\"Could not fetch because of error:\n \\(\n error).\"\n )\n\n      }\n\n    ➐\n tableView\n .reloadData\n ()\n\n  }\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nprotocol\n AddBirthdayViewControllerDelegate {                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                            // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n   // ← Remove\n\n        didAddBirthday birthday: Birthday\n )                        // ← Remove\n\n}                                                                 // ← Remove\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nvar\n delegate: AddBirthdayViewControllerDelegate\n ?  // ← Remove\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n\n    , AddBirthdayViewControllerDelegate\n\n            // ← Remove\n\n    {\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\nclass\n BirthdaysTableViewController: UITableViewController\n {\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n// MARK: - AddBirthdayViewControllerDelegate\n                      // ← Remove\n\n    func\n addBirthdayViewController(_\n\n                           // ← Remove\n\n        addBirthdayViewController: AddBirthdayViewController\n , \n // ← Remove\n\n        didAddBirthday birthday: Birthday\n ) {                     // ← Remove\n\n        birthdays\n .append\n (birthday)                               // ← Remove\n\n        tableView\n .reloadData\n ()                                   // ← Remove\n\n}                                                                // ← Remove\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n// MARK: - Navigation\n                                           // ← Remove\n\n    // In a storyboard-based application, you will often want\n   // ← Remove\n\n    // to do a little preparation before navigation\n             // ← Remove\n\n    override func\n prepare(for segue: UIStoryboardSegue\n , \n      // ← Remove\n\n        sender: Any\n ?) {                                        // ← Remove\n\n        // Get the new view controller\n                          // ← Remove\n\n        // using segue.destinationViewController\n                // ← Remove\n\n        let\n navigationController = segue.destination\n as\n ! \n     // ← Remove\n\n            UINavigationController\n                              // ← Remove\n\n        let\n addBirthdayViewController = \n                      // ← Remove\n\n            navigationController.topViewController\n as\n ! \n       // ← Remove\n\n            AddBirthdayViewController\n                           // ← Remove\n\n        addBirthdayViewController.delegate = self\n               // ← Remove\n\n}                                                              // ← Remove\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func tableView(_ tableView: UITableView,\n\n    cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n\n    let cell = tableView.dequeueReusableCell(withIdentifier:\n\n        \"birthdayCellIdentifier\", for: indexPath)\n\n    let birthday = birthdays[indexPath.row]\n\n    cell.textLabel\n ?.text = birthday.firstName\n + \" \"\n + \n // ← Remove\n\n        birthday.lastName\n                                 // ← Remove\n\n    cell.detailTextLabel\n ?.text\n = \n                       // ← Remove\n\n        dateFormatter\n .string(from: birthday.birthdate\n )   // ← Remove\n\n    return cell\n\n}\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n  let birthday = birthdays[indexPath.row]\n\n➊\n let\n firstName = birthday.firstName\n ?? \"\"\n\n➋\n let\n lastName = birthday.lastName\n ?? \"\"\n\n  cell.textLabel\n ?.text\n = firstName + \" \"\n + lastName\n\n➌\n if\n let\n date = birthday.birthdate\n as\n Date?\n {\n\n    ➍\n cell.detailTextLabel\n ?.text\n = dateFormatter\n .string\n (from: date)\n\n  } else\n {\n\n    ➎\n cell.detailTextLabel\n ?.text\n = \"\"\n\n  }\n\n  return cell\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func viewWillAppear(_ animated: Bool) {\n\n    --*snip*\n --\n\n    let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>\n\n      ➊\n let\n sortDescriptor1 = NSSortDescriptor\n (key: \"lastName\"\n , ascending: true\n )\n\n      ➋\n let\n sortDescriptor2 = NSSortDescriptor\n (key: \"firstName\"\n , ascending: true\n )\n\n      ➌\n fetchRequest.sortDescriptors\n = [sortDescriptor1, sortDescriptor2]\n\n    do {\n\n        birthdays = try context.fetch(fetchRequest)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func\n tableView(_\n tableView: UITableView\n , \n\n    canEditRowAt indexPath: IndexPath\n ) -> Bool\n {\n\n    return true\n\n}\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\n// Override to support editing the table view\n\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n    if\n editingStyle == .delete\n {                           // ← Remove\n\n        // Delete the row from the data source\n              // ← Remove\n\n        tableView.deleteRows(at: [\n indexPath], with: .fade\n ) // ← Remove\n\n     } else\n if\n editingStyle == .insert\n {                    // ← Remove\n\n        // Create a new instance of the appropriate class, // ← Remove\n\n        // insert it into the array, and add a new row\n      // ← Remove\n\n        // to the table view\n                                // ← Remove\n\n    }                                                      // ← Remove\n\n}\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\noverride func tableView(_ tableView: UITableView, commit editingStyle: ![](Image00184.jpg)\n\n    UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {\n\n  ➊\n if\n birthdays\n .count\n > indexPath.row\n {\n\n      ➋\n let\n birthday = birthdays\n [indexPath.row\n ]\n\n      ➌\n let\n appDelegate = UIApplication\n .shared\n .delegate\n as\n ! AppDelegate\n\n      ➍\n let\n context = appDelegate.persistentContainer\n .viewContext\n\n      ➎\n context.delete\n (birthday)\n\n      ➏\n birthdays\n .remove\n (at: indexPath.row\n )\n\n      ➐\n tableView.deleteRows\n (at: [indexPath], with: .fade\n )\n\n    }\n\n}\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```", "```\ncontext.delete(birthday)\n\nbirthdays.remove(at: indexPath.row)\n\ndo\n {\n\n    try\n context.save\n ()\n\n} catch\n let\n error {\n\n    print\n (\"Could not save\n \\(\n error).\"\n )\n\n}\n\ntableView.deleteRows(at: [indexPath], with: .fade)\n\n```"]