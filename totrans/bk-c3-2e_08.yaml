- en: '**8**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**8**'
- en: '**BACKGROUND IMAGES**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**背景图片**'
- en: '![Image](graphics/common-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/common-01.jpg)'
- en: Adding decorative elements to make our websites more visually appealing used
    to be surprisingly resource- and time-intensive. Even seemingly simple graphical
    effects, such as two background images on the same element, required a lot of
    unnecessary markup, and this in turn made pages slower to render and harder to
    maintain.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让我们的网站更具视觉吸引力，往网页添加装饰元素曾经是一个非常消耗资源和时间的过程。即便是看似简单的图形效果，比如在同一个元素上使用两个背景图片，也需要大量不必要的标记，这反过来使得页面渲染变慢，维护也变得更加困难。
- en: CSS3 introduces a number of new and extended properties that are aimed at decorating
    elements much more simply, and the browser makers have been quick to implement
    them and to add a number of their own implementations as well. Over the next few
    chapters, we’ll take a look at the new range of features that we can use to prettify
    our pages, from background images to decorative borders and new color effects.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3 引入了许多新的和扩展的属性，旨在使元素装饰变得更加简单，浏览器厂商也迅速实现了这些特性，并且加入了许多自家的实现。在接下来的几章中，我们将一一探讨新的功能特性，从背景图片到装饰性边框，再到新的颜色效果。
- en: I’ll begin by taking you on a walk through the Backgrounds and Borders Module
    (*[http://www.w3.org/TR/css3-background/](http://www.w3.org/TR/css3-background/)*).
    Because of high demand from web developers, the new properties it brings are already
    well implemented by browsers. Internet Explorer 9 fully implemented the properties
    and changes listed in this chapter, as have—in most cases—all of the other major
    modern browsers, so unless otherwise stated in the text you can presume widespread
    support.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我将首先带你走一遍背景与边框模块（* [http://www.w3.org/TR/css3-background/](http://www.w3.org/TR/css3-background/)*）。由于网页开发者的需求很大，它所带来的新属性已经得到了浏览器的广泛实现。Internet
    Explorer 9 完全实现了本章列出的属性和变化，其他主流现代浏览器也都实现了这些特性，因此，除非文中另有说明，你可以假设这些属性得到广泛支持。
- en: As the Backgrounds and Borders Module is quite extensive, I’ll break it over
    two chapters and start with a look at background image properties. Background
    images have been part of CSS for many years, but unlike previous versions, in
    CSS3, you can apply multiple images to elements, and you can resize those images
    on the fly. Just these two new features alone would be enough to please most of
    us, but the specification goes further to provide more control over image placement
    and tiling.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 由于背景与边框模块相当庞大，我将其分为两章进行讲解，首先从背景图片属性开始。背景图片已经是 CSS 的一部分多年，但与之前的版本不同，在 CSS3 中，你可以对元素应用多个图片，并且可以动态调整这些图片的大小。仅这两个新特性就足以让我们大多数人感到高兴，但该规范更进一步，提供了对图片位置和平铺方式的更多控制。
- en: '**Updates to Existing Background Properties**'
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**现有背景属性的更新**'
- en: Many of the other CSS3 modules bring new properties and even whole new concepts
    to CSS, but the strength of the Backgrounds and Borders Module is the way it extends
    existing properties to make them more powerful and useful. That’s not to say this
    module has no novelties—it certainly does, and I’ll come to them shortly. But
    the subtleties shine, and in this section, I want to talk about the extensions
    and changes to properties you’ll be familiar with from CSS2.1.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 许多其他的 CSS3 模块引入了新的属性，甚至是全新的概念，但背景与边框模块的强大之处在于它扩展了现有的属性，使其更强大且更有用。虽然这个模块并非没有创新—它当然有，而且我很快就会介绍—但其中的细微变化才是亮点，在这一节中，我将讲解你在
    CSS2.1 中熟悉的属性的扩展和变动。
- en: '***background-position***'
  id: totrans-9
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***background-position***'
- en: 'The `background-position` property in CSS2.1 accepts two values: either a keyword
    for each side of the box (`top`, `right`, and so on), or length or percentage
    values that set a position relative to the top-left corner of the element to which
    it’s applied. This is okay for many tasks but doesn’t really provide the fine
    control that we desire when laying out pages.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CSS2.1 中，`background-position` 属性接受两个值：每个盒子边缘的关键字（如 `top`、`right` 等），或者设置相对于应用该属性的元素左上角的长度或百分比值。虽然这对于许多任务来说已经足够，但当我们进行页面布局时，它并没有提供我们所期望的精细控制。
- en: 'In CSS3, the property now accepts up to four values: you can use keywords to
    specify a side and then length or percentage values for relative distance from
    that side. Take a look at this example code:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CSS3 中，该属性现在最多接受四个值：你可以使用关键字指定一侧，然后使用长度或百分比值来表示相对该侧的距离。来看一下这个示例代码：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The background image on the element `*.foo*` will be positioned 10em from the
    right and 50% from the bottom. This positioning would have been very difficult
    in CSS2.1; you had to know the widths of all the elements involved and that they
    didn’t change.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 元素`*.foo*`上的背景图像将位于从右边10em的位置和从底部50%的位置。这种定位在CSS2.1中非常困难；你必须知道所有涉及元素的宽度，并且这些宽度不能变化。
- en: '***background-attachment***'
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***background-attachment***'
- en: The way that a background image scrolls in the viewport is determined by the
    `background-attachment` property. The permitted values in CSS2.1 are `scroll`
    (the default), which means the image doesn’t scroll with the element it’s applied
    to but does scroll with the viewport, and `fixed`, which means the image doesn’t
    scroll with either its element or the viewport.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 背景图像在视口中滚动的方式由`background-attachment`属性决定。CSS2.1中允许的值有`scroll`（默认值），意味着图像不会与应用该属性的元素一起滚动，而是与视口一起滚动；`fixed`，意味着图像既不与元素滚动，也不与视口滚动。
- en: A new value of `local` is introduced in CSS3; this value allows an image to
    scroll with both its element and the viewport. This is nigh-impossible to demonstrate
    in a static book, so I urge you to take a look at example file 8-a on the book’s
    companion website (*[http://thebookofcss3.com/](http://thebookofcss3.com/)*).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS3中引入了一个新的值`local`；这个值允许图像同时与其元素和视口一起滚动。这在静态书籍中几乎无法演示，所以我建议你查看书籍附带网站上的示例文件8-a（*[http://thebookofcss3.com/](http://thebookofcss3.com/)*）。
- en: The new value is supported in IE9+ and all other major modern desktop browsers.
    Mobile browsers, however, tend to use different viewport layout mechanisms in
    which fixed elements don’t really work, so you’ll likely get unexpected (or, no)
    behavior in those.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 新的值在IE9+及所有其他主要现代桌面浏览器中得到支持。然而，移动浏览器往往使用不同的视口布局机制，在这些机制中，固定元素并不真正起作用，因此你可能会在这些浏览器中遇到意外的（或根本没有）行为。
- en: '***background-repeat***'
  id: totrans-18
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***background-repeat***'
- en: 'In CSS2.1, the `background-repeat` property accepts one of four possible values:
    `no-repeat`, `repeat`, `repeat-x`, and `repeat-y`. With these values, you can
    tile images either horizontally or vertically (or both) across an element, but
    they don’t allow for any finer control than that. CSS3, however, extends the usefulness
    of the property in two ways: a pair of new properties and a tweak to the syntax.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS2.1中，`background-repeat`属性接受四个可能的值之一：`no-repeat`、`repeat`、`repeat-x`和`repeat-y`。使用这些值，你可以在元素上水平或垂直（或两者）平铺图像，但它们并不提供比这更细致的控制。然而，CSS3通过两种方式扩展了这个属性的功能：一对新的属性和语法上的一个调整。
- en: The first of the new properties is `space`, which sets the background image
    to repeat across its containing element as many times as possible without clipping
    the image. All of the repetitions (except the first and last) are then equally
    spaced, so the image is evenly distributed.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 新的属性之一是`space`，它设置背景图像在其包含元素中尽可能多地重复，而不剪裁图像。所有重复的图像（除了第一个和最后一个）之间的间隔是均等的，因此图像是均匀分布的。
- en: The second is `round`, which likewise sets the background image to repeat as
    many times as possible without clipping, but instead of equally spacing the repetitions,
    the images scales so a whole number of images fills the containing element.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个是`round`，它同样将背景图像设置为尽可能多地重复而不剪裁，但与均匀间隔重复不同，图像会缩放，以便完整的图像数填充包含元素。
- en: 'To compare the difference between the two, I’ve put together an example in
    which a different `background-repeat` value is applied to two elements, using
    the following code:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了比较这两者之间的区别，我准备了一个示例，其中将不同的`background-repeat`值应用于两个元素，使用以下代码：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[Figure 8-1](ch08.html#ch08fig1) displays the results. The element on the left
    is for reference; it has the default `background-repeat` value of `repeat` and
    shows the behavior you would currently expect. The element in the middle has a
    value of `space`, and the maximum number of images that can be tiled without clipping
    or scaling are displayed with empty space between them. Finally, the element on
    the right has a value of `round`, which calculates the maximum whole number that
    can fit in the containing element both horizontally and vertically, scaling the
    image as required.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[图8-1](ch08.html#ch08fig1)展示了结果。左侧的元素作为参考，具有默认的`background-repeat`值`repeat`，并展示了你当前期望的行为。中间的元素的值为`space`，显示出在不剪裁或缩放的情况下，可以重复的最大图像数量，并且它们之间有空隙。最后，右侧的元素的值为`round`，它计算出可以在水平和垂直方向上适应包含元素的最大整数，并根据需要缩放图像。'
- en: Internet Explorer 9+ and Chrome are currently the only browsers to implement
    these keywords correctly. Safari recognizes them but makes them both behave incorrectly,
    as if `no-repeat` were applied. Firefox ignores them and uses the previous cascaded
    or inherited value.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，只有 Internet Explorer 9+ 和 Chrome 正确实现了这些关键词。Safari 识别它们，但会使它们表现不正确，就像应用了
    `no-repeat` 一样。Firefox 会忽略它们，并使用之前的级联或继承值。
- en: '![Image](graphics/f08-01.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f08-01.jpg)'
- en: '*Figure 8-1:* `*background-repeat*` *values:* `*repeat*` *(left),* `*space*`
    *(center), and* `*round*` *(right)*^([1](footnote.html#footnote3))'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-1：`*background-repeat*` *的值：`*repeat*` *(左边)，`*space*` *(中间)，和 `*round*`
    *(右边)*^([1](footnote.html#footnote3))*'
- en: 'I also mentioned a change to the syntax. You can control tiling on the two
    different axes independently, as the property now accepts two values. The first
    value controls tiling on the horizontal axis, the second on the vertical. So if
    you want a background image to repeat with rounding on the vertical and spacing
    on the horizontal, you use this code:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我还提到了一些语法的变化。现在，你可以分别控制两个轴上的平铺，因为该属性现在接受两个值。第一个值控制水平轴上的平铺，第二个值控制垂直轴上的平铺。所以，如果你希望背景图像在垂直方向上重复并带有圆角，而在水平方向上具有间距，可以使用以下代码：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The result is shown in [Figure 8-2](ch08.html#ch08fig2).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如[图 8-2](ch08.html#ch08fig2)所示。
- en: '![Image](graphics/f08-02.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f08-02.jpg)'
- en: '*Figure 8-2: Different* `*background-repeat*` *values applied to the horizontal
    and vertical*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-2：应用于水平和垂直方向的不同 `*background-repeat*` 值*'
- en: '**Multiple Background Images**'
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**多个背景图像**'
- en: The first new feature in the Backgrounds and Borders Module isn’t a new property
    but an extension of an existing one—or, rather, several existing ones. Using CSS2.1,
    you could only apply a single background image to an element, but in CSS3, (almost
    all of) the `background-*` properties now accept multiple values, so you can add
    many background images to one element.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 背景和边框模块中的第一个新特性不是新属性，而是对现有属性的扩展——或者说，是对多个现有属性的扩展。使用 CSS2.1 时，你只能为元素应用单一的背景图像，但在
    CSS3 中，（几乎所有的）`background-*` 属性现在接受多个值，因此你可以为一个元素添加多个背景图像。
- en: 'To do this, you need just list the values separated by commas. For example,
    here’s the syntax with `background-image`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，你只需要将各个值用逗号分隔。例如，这是使用 `background-image` 的语法：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'For each background layer you create, you can add appropriate values to all
    of the relevant `background-*` properties. Here’s a real-world example:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你创建的每个背景图层，你可以为所有相关的 `background-*` 属性添加适当的值。以下是一个实际的例子：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can see how this looks in [Figure 8-3](ch08.html#ch08fig3). The layers
    are created in reverse order—that is, the first layer in the list becomes the
    topmost layer, and so on. In my example code, *monkey.svg* is a layer above *landscape.jpg*.
    The `background-position` property follows the same order: The landscape is positioned
    at `50%` left and `50%` top (the horizontal and vertical center) of its containing
    element and the monkey at `95%` left and `85%` top.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[图 8-3](ch08.html#ch08fig3)中看到它的效果。图层是按相反的顺序创建的——也就是说，列表中的第一个图层变成最上面的图层，依此类推。在我的示例代码中，*monkey.svg*
    是位于 *landscape.jpg* 上方的图层。`background-position` 属性遵循相同的顺序：风景图像位于其容器元素的水平和垂直中心，即
    `50%` 左和 `50%` 上，而猴子图像位于 `95%` 左和 `85%` 上。
- en: '![Image](graphics/f08-03.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片](graphics/f08-03.jpg)'
- en: '*Figure 8-3: Two background images on the same element^([2](footnote.html#footnote4))*'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-3：同一元素上的两个背景图像^([2](footnote.html#footnote4))*'
- en: Note that I’ve only given `background-repeat` one value; if a property has fewer
    values than there are background layers, the values will repeat. In this example
    that means `no-repeat` will be applied to all background layers.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我只给了 `background-repeat` 一个值；如果一个属性的值比背景图层少，那么这些值会重复。在这个例子中，这意味着 `no-repeat`
    会应用于所有背景图层。
- en: 'You can use multiple values with the `background` shorthand property; as with
    the individual properties, you only need to provide a comma-separated list. To
    get the same result seen in [Figure 8-3](ch08.html#ch08fig3), I can also use this
    code:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `background` 简写属性来设置多个值；与单独的属性一样，你只需要提供一个用逗号分隔的值列表。为了得到与[图 8-3](ch08.html#ch08fig3)中相同的效果，我也可以使用以下代码：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'I mentioned at the start of this section that almost all background properties
    can have multiple values. `background-color` is the exception, however, as the
    color layer will always be stacked below all other background layers. If you want
    to specify a background color when using the shorthand property, you must place
    it in the last instance of the comma-separated list. In the case of my example
    code that would be in the instance with the landscape picture:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我在本节开始时提到，几乎所有的背景属性都可以有多个值。然而，`background-color`是个例外，因为颜色层始终会堆叠在所有其他背景层下方。如果你想在使用简写属性时指定背景颜色，必须将其放在逗号分隔列表中的最后一个实例中。以我的示例代码为例，它将位于包含风景图片的那个实例中：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Dynamically Scaled Background Images**'
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**动态缩放背景图片**'
- en: 'A new property to CSS3 is `background-size`. This property, as you can probably
    guess, allows you to set the size of the background images. Here’s the syntax:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3中的新属性是`background-size`。顾名思义，这个属性允许你设置背景图像的大小。其语法如下：
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This property’s value can be a pair of lengths or percentages, a single length
    or percentage, or a keyword. If a pair is used, the syntax is as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性的值可以是两个长度或百分比的组合，一个长度或百分比，或者一个关键字。如果使用一对值，语法如下：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To resize a background image to be 100px wide and 200px high, you use:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要将背景图像调整为宽100px、高200px，可以使用：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The length can be any standard unit of measurement. If you use percentages,
    the dimension is based on the containing element, *not* the background image.
    So a width and height of `100%`, for example, will stretch the background image
    to fill the container. To make the image appear at its natural size, use the `auto`
    keyword.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 长度可以是任何标准的测量单位。如果使用百分比，尺寸是基于包含元素的，*而不是*背景图像。因此，`100%`的宽度和高度，例如，将会把背景图像拉伸以填满容器。要使图像按自然尺寸显示，请使用`auto`关键字。
- en: 'If you only specify a single value, that value is considered the width, and
    the height is then assigned the default value of `auto`. Therefore, these two
    examples are exactly equivalent:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果只指定一个值，该值将被视为宽度，且高度将被赋予默认值`auto`。因此，以下这两个示例是完全等效的：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You can use your newly learned multiple background method with `background-size`
    as well. For example, let’s revisit [Figure 8-3](ch08.html#ch08fig3), but repeat
    the monkey image a few more times, adding different values to the `background-position`
    and `background-size` properties. Here’s the code:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用你新学到的多重背景方法与`background-size`一起使用。例如，让我们重新查看[图 8-3](ch08.html#ch08fig3)，但重复猴子图像几次，并为`background-position`和`background-size`属性添加不同的值。下面是代码：
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[Figure 8-4](ch08.html#ch08fig4) shows this method in action. One monkey has
    a vertical `background-size` of 80%, the next 15%, and the last, 50%; in all cases,
    the horizontal size has been set to `auto` to keep the image in proportion.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 8-4](ch08.html#ch08fig4)展示了这种方法的应用。第一只猴子的`background-size`是80%，第二只猴子是15%，最后一只猴子是50%；在所有情况下，水平大小都被设置为`auto`，以保持图像的比例。'
- en: '![Image](graphics/f08-04.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f08-04.jpg)'
- en: '*Figure 8-4: Example of multiple resized background images*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-4：多重缩放背景图像的示例*'
- en: 'As well as length values, two keywords are available: `contain` and `cover`.
    The `contain` keyword sets the image to scale (proportionately) as large as possible,
    without exceeding either the height or width of the containing element; `cover`
    sets the image to scale to the size of either the height or width of the containing
    element, whichever is larger.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 除了长度值之外，还可以使用两个关键字：`contain`和`cover`。`contain`关键字使图像按比例缩放到尽可能大，但不超过包含元素的高度或宽度；`cover`使图像缩放到包含元素的高度或宽度，取较大的值。
- en: 'Take a look at the following code to see what I mean:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下以下代码，看看我的意思：
- en: '[PRE12]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: I used two elements, with classes of `monkey-1` and `monkey-2`, and set different
    keyword values for `background-size` on each. The result is shown in [Figure 8-5](ch08.html#ch08fig5).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了两个元素，分别设置了类`monkey-1`和`monkey-2`，并为每个元素的`background-size`设置了不同的关键字值。结果如[图
    8-5](ch08.html#ch08fig5)所示。
- en: '![Image](graphics/f08-05.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f08-05.jpg)'
- en: '*Figure 8-5:* `*background-size*` *keywords:* `*contain*` *(left) and* `*cover*`
    *(right)*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-5:* `*background-size*` *关键字：* `*contain*` *(左) 和* `*cover*` *(右)*'
- en: The box on the left has the `contain` keyword value, so the background image
    fills the box vertically (the shortest length); the box on the right has the `cover`
    keyword value, so the background image fills the box horizontally (the longest
    length) and is cropped at the top and bottom.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧的盒子使用了`contain`关键字值，因此背景图片垂直填充盒子（最短的长度）；右侧的盒子使用了`cover`关键字值，因此背景图片水平填充盒子（最长的长度），并在顶部和底部被裁剪。
- en: '**Background Clip and Origin**'
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**背景裁剪与起始点**'
- en: In CSS2, the position of a background image is defined relative to the outer
    limit of its containing element’s padding, and any overflow extends underneath
    its border. CSS3 introduces two new properties that provide more granular control
    over this placement.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS2中，背景图像的位置是相对于其包含元素的外部填充边界来定义的，任何溢出都会延伸到边框下方。CSS3引入了两个新的属性，可以更细致地控制这种位置。
- en: 'The first property is `background-clip`, which sets the section of the box
    model that becomes the limit of where the background (either color or image) is
    displayed. Here’s the syntax:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个属性是`background-clip`，它设置了盒子模型的某个部分，成为背景（无论是颜色还是图像）显示的限制区域。下面是语法：
- en: '[PRE13]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The `*box*` value can be one of three keywords: `border-box`, `content-box`,
    or `padding-box`. `border-box`, the default value, displays the background behind
    the border (you can see it if you use a transparent or semi-opaque border color).
    A value of `padding-box` displays the background only up to, and not behind, the
    border. `content-box` means the background stops at the element’s padding.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`*box*`值可以是三个关键字之一：`border-box`、`content-box`或`padding-box`。`border-box`是默认值，背景显示在边框后面（如果使用透明或半透明边框颜色，你可以看到它）。`padding-box`值使背景仅显示到边框前，不能显示在边框后。`content-box`意味着背景仅在元素的填充区域内显示。'
- en: 'I’ll illustrate the difference using the following code:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用以下代码来说明不同的区别：
- en: '[PRE14]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: I’ve used three `h2` elements with classes of `brdr`, `pdding`, and `cntnt`,
    respectively. [Figure 8-6](ch08.html#ch08fig6) illustrates the difference between
    the values.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了三个`h2`元素，分别具有`brdr`、`pdding`和`cntnt`类。[图 8-6](ch08.html#ch08fig6)展示了不同值之间的差异。
- en: '![Image](graphics/f08-06.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![Image](graphics/f08-06.jpg)'
- en: '*Figure 8-6: Showing the effect of different values on the* `*background-clip*`
    *property:* `*border-box*` *(left),* `*padding-box*` *(center), and* `*content-box*`
    *(right)*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8-6：展示不同值对`*background-clip*`属性的影响：*`*border-box*`*（左）、`*padding-box*`*（中）、和`*content-box*`*（右）*'
- en: I’ve used a semi-opaque border (I’ll explain how in [Chapter 10](ch10.html#ch10))
    so you can see the image paint beneath it in the box on the left, which has the
    `border-box` value. The central box has the `padding-box` value, and as you can
    see, the background stops at the limit of the padding. In the box on the right,
    the value is `content-box`, so the background does not show behind the padding.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了半透明的边框（我将在[第10章](ch10.html#ch10)中解释如何做到这一点），因此你可以在左侧的盒子中看到背景图像涂抹在边框下方，该盒子使用的是`border-box`值。中间的盒子使用的是`padding-box`值，正如你所见，背景在填充的边界处停止。在右侧的盒子中，值为`content-box`，因此背景不会显示在填充区域后面。
- en: 'The second property that gives you more granular control is `background-origin`.
    Using `background-origin`, you can set the point where the background is calculated
    to begin. As I mentioned before, CSS2 background positions are calculated relative
    to the limit of the padding, but `background-origin` lets you change that. Here’s
    the syntax:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个可以让你更细致控制的属性是`background-origin`。使用`background-origin`，你可以设置背景开始计算的位置。正如我之前提到的，CSS2中的背景位置是相对于填充的边界计算的，但`background-origin`允许你改变这一点。下面是语法：
- en: '[PRE15]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The `*box*` value accepts the same keywords as you’ve just seen in `background-clip`:
    `border-box`, `content-box`, and `padding-box`. I’ll explain the different results
    using this code:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`*box*`值接受与`background-clip`中相同的关键字：`border-box`、`content-box`和`padding-box`。我将使用以下代码解释不同的结果：'
- en: '[PRE16]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The effects of the different values are illustrated in [Figure 8-7](ch08.html#ch08fig7).
    As you can see, the monkey is in a different position in each box because the
    `background-position` is calculated relative to a different point in each box
    (I’ve added a background grid to make it a little easier to see).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 不同值的效果如[图 8-7](ch08.html#ch08fig7)所示。如你所见，由于`background-position`是相对于每个盒子的不同点计算的，猴子在每个盒子中的位置不同（我已添加背景网格，使其更容易查看）。
- en: The `background-position` is always set at `0 100%,` which is the bottom left.
    The point from which the bottom left is measured changes depending on the `background-origin`
    value, however. In the first box, the background originates at the limit of the
    border; in the second, from the limit of the padding; and in the third, from the
    limit of the content box.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](graphics/f08-07.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
- en: '*Figure 8-7: The* `*background-origin*` *property with values of* `*border-box*`
    *(left),* `*padding-box*` *(center), and* `*content-box*` *(right)*'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: 'A couple of things to bear in mind: First, this property has no effect if the
    `background-position` is set to `fixed`. Second, both `background-clip` and `background-origin`
    accept multiple values, using the same syntax shown in “[Multiple Background Images](ch08.html#ch08leve1sec94)”
    on [page 88](ch08.html#page_88).'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '**Updated Background Shortcut**'
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `background` shortcut property has been updated to include values for the
    `background-size`, `background-clip`, and `background-origin` properties. Values
    for `background-size` should immediately follow those for `background-position`
    and be separated by a forward slash, like so:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In this case, the background image, *bar.png*, will be positioned at the dead
    center of the element, with a width set to 50% of the element and an automatic
    height.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: 'For `background-clip` and `background-origin`, if only one box value (`border-box`,
    `padding-box`, or `content-box`) is present, both properties will be set to that
    value. If two box values are supplied, the first will be set on `background-origin`
    and the second on `background-clip`. As an illustration, take this shorthand code:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In this case, the origin of the background image will be the padding box, and
    the image will be clipped to the content box.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '**Summary**'
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The new features introduced in this chapter are a big step toward the stated
    aim of CSS: to separate a page’s content from its presentation. More flexibility
    with background images means fewer required elements to create the effects we
    want, and the more nonessential markup we can remove from our documents, the easier
    our pages will be to maintain and the better it will be for semantics.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, I’ve covered only half of what the Backgrounds and Borders
    module offers, so in the next chapter I’ll cover the other half—which, as you
    can probably guess by the title “Border and Box Effects,” relates to borders.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '**Background Images: Browser Support**'
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '|  | **Chrome** | **Firefox** | **Safari** | **IE** |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
- en: '| `background-position` (edge values) | Yes | Yes | Yes | Yes |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
- en: '| `background-attachment` | Yes | Yes | Yes | IE10 |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
- en: '| `background-repeat` (new values) | Yes | No | No^([*](ch08.html#footnote27a))
    | Yes |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
- en: '| `background-repeat` (two values) | Yes | Yes | Yes | Yes |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
- en: '| Multiple background images | Yes | Yes | Yes | Yes |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
- en: '| `background-size` | Yes | Yes | Yes | Yes |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
- en: '| Updated `background` property | Yes | Yes | Yes | Yes |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
- en: '| `background-clip` | Yes | Yes | Yes | Yes |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
- en: '| `background-origin` | Yes | Yes | Yes | Yes |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| `background-origin` | 是 | 是 | 是 | 是 |'
- en: '[*](ch08.html#footnote_27a) The values are recognized but don’t display correctly.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[*](ch08.html#footnote_27a) 这些值被识别，但未正确显示。'
