["```\ndb.locations.insert([\n    {\n        address: \"6220 Avenue U\",\n        zipcode: \"NY 11234\",\n        borough: \"Brooklyn\",\n        cuisine: \"Cafe\",\n        grade: \"A\",\n        name: \"The Roasted Bean\",\n        on_wishlist: [],\n        location_id: \"56018\",\n    },\n`--snip--`\n    {\n        address: \"405 Lexington Avenue\",\n        zipcode: \"NY 10174\",\n        borough: \"Manhattan\",\n        cuisine: \"American\",\n        grade: \"A\",\n        name: \"The Diner At The Corner\",\n        on_wishlist: [],\n        location_id: \"63426\",\n    }\n]); \n```", "```\nversion: \"3.0\"\nservices:\n    backend:\n        container_name: foodfinder-backend\n        image: mongo:latest\n        restart: always\n environment:\n            DB_NAME: foodfinder\n            MONGO_INITDB_DATABASE: foodfinder\n        ports:\n            - 27017:27017\n        volumes:\n            - \"./.docker/foodfinder-backend/seed-mongodb.js:\n/docker-entrypoint-initdb.d/seed-mongodb.js\"\n            - mongodb_data_container:/data/db\n\nvolumes:\n    mongodb_data_container: \n```", "```\n$ **docker compose up**\n[+] Running 2/2\n ⠿ Network foodfinder_default                      Created                 0.1s\n ⠿ Container foodfinder-backend                    Created                 0.3s\nAttaching to foodfinder-backend\n\nfoodfinder-backend  | /usr/local/bin/docker-entrypoint.sh: running /docker\n                    /entrypoint-initdb.d/seed-mongodb.js \n```", "```\n$ **docker compose down**\n[+] Running 2/2\n ⠿ Container foodfinder-backend                     Removed                 0.0s\n ⠿ Network foodfinder_default                       Removed \n```", "```\n`--snip--`\nservices:\n\n    application:\n        container_name: foodfinder-application\n        image: node:lts-alpine\n        ports:\n            - \"3000:3000\"\n        volumes:\n            - ./code:/home/node/code\n        working_dir: /home/node/code/\n        depends_on:\n            - backend\n        environment:\n            - HOST=0.0.0.0\n            - CHOKIDAR_USEPOLLING=true\n            - CHOKIDAR_INTERVAL=100\n        tty: true\n    backend:\n`--snip--` \n```", "```\n$ **docker compose up**\n\n[+] Running 3/3\n ⠿ Network foodfinder_default                      Created                 0.1s\n ⠿ Container foodfinder-backend                    Created                 0.3s\n ⠿ Container foodfinder-application                Created                 0.3s\nAttaching to foodfinder-application, foodfinder-backend\n`--snip--`\nfoodfinder-application  | Welcome to Node.js ...\n`--snip--` \n```", "```\n/home/node/code# **docker exec -it foodfinder-application \\**\n**npx create-next-app@latest foodfinder-application \\**\n**--typescript --use-npm**\nNeed to install the following packages:\n  create-next-app\nOk to proceed? (y)\n✔ Would you like to use ESLint with this project? ... No / Yes\nCreating a new Next.js app in /home/node/code/foodfinder-application.\n\nSuccess! Created foodfinder-application at /home/node/code/foodfinder-application \n```", "```\n`--snip--`\nservices:\n`--snip--`\n    **application:**\n`--snip--`\n        volumes:\n            - ./code:/home/node/code\n        working_dir: /home/node/code/**foodfinder-application**\n`--snip--`\n **command: \"npm run dev\"**\n`--snip--` \n```", "```\n$ **docker compose up**\n[+] Running 3/3\n ⠿ Network foodfinder_default                      Created    0.1s\n ⠿ Container foodfinder-backend                    Created    0.3s\n ⠿ Container foodfinder-application                Created    0.3s\nAttaching to foodfinder-application, foodfinder-backend\nfoodfinder-application  |\nfoodfinder-application  | > foodfinder-application@0.1.0 dev\nfoodfinder-application  | > next dev\nfoodfinder-application  |\nfoodfinder-application  | ready - started server on 0.0.0.0:3000,\nfoodfinder-application  | url: foodfinder-application  | http://localhost:3000\nfoodfinder-application  | info  - Loaded env from /home/node/code/foodfinder-\nfoodfinder-application  | application/.env.local \n```", "```\nservices:\n`--snip--`\n    **application:**\n`--snip--`\n **user: ${MY_USER}**\n`--snip--` \n```", "```\nMY_USER=$(id -u):$(id -g) docker compose up\n```"]