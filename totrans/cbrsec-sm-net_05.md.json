["```\n$ `ssh` `user``@``your_server_IP`\n\n```", "```\n$ `sudo apt install openvpn -y`\n\n```", "```\n$ `sudo apt install easy-rsa -y`\n\n```", "```\n$ `cd /usr/share/easy-rsa/`\n$ `sudo cp vars.example vars`\n\n```", "```\n$ `sudo nano vars`\n\n```", "```\n`--snip--`\n#set_var EASYRSA_REQ_COUNTRY    \"US\"\n#set_var EASYRSA_REQ_PROVINCE   \"California\"\n#set_var EASYRSA_REQ_CITY       \"San Francisco\"\n#set_var EASYRSA_REQ_ORG        \"Copyleft Certificate Co\"\n#set_var EASYRSA_REQ_EMAIL      \"me@example.net\"\n#set_var EASYRSA_REQ_OU         \"My Organizational Unit\"\n`--snip--`\n\n```", "```\n`--snip--`\nset_var EASYRSA_REQ_COUNTRY    \"AU\"\nset_var EASYRSA_REQ_PROVINCE   \"Queensland\"\nset_var EASYRSA_REQ_CITY       \"Brisbane\"\nset_var EASYRSA_REQ_ORG        \"Smithco\"\nset_var EASYRSA_REQ_EMAIL      \"john@smithco.net\"\nset_var EASYRSA_REQ_OU         \"Cyber Unit\"\n`--snip--`\n\n```", "```\n$ `sudo ./easyrsa init-pki`\n`--snip--`\nYour newly created PKI dir is: /usr/share/easy-rsa/pki\n$ `sudo ./easyrsa build-ca nopass`\n`--snip--`\nCA creation complete and you may now import and sign cert requests.\nYour new CA certificate file for publishing is at:\n/usr/share/easy-rsa/pki/ca.crt\n\n```", "```\n$ `cd /usr/share/easy-rsa`\n$ `sudo ./easyrsa init-pki`\n\n```", "```\n$ `sudo ./easyrsa gen-req server nopass`\nUsing SSL: openssl OpenSSL 1.1.1f 31 Mar 2020\nGenerating a RSA private key\n.................................+++++\n........................................+++++\nwriting new private key to '/usr/share/easy-rsa/pki/private/server.key.2ljAQtgUYY'\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCommon Name (eg: your user, host, or server name) [server]:\nKeypair and certificate request completed. Your files are:\nreq: /usr/share/easy-rsa/pki/reqs/server.req\nkey: /usr/share/easy-rsa/pki/private/server.key\n\n```", "```\n$ `sudo cp /usr/share/easy-rsa/pki/private/server.key /etc/openvpn/`\n\n```", "```\n$ `sudo rsync -ruhP /usr/share/easy-rsa/pki/reqs/server.req` `user``@``CA``_``ip``:/tmp/`\n\n```", "```\n$ `ssh` `user``@``CA_ip`\n$ `cd /usr/share/easy-rsa/`\n$ `sudo ./easyrsa import-req /tmp/server.req` ❶ `server`\n$ `sudo ./easyrsa sign-req` ❷ `server`\n\n```", "```\n$ `sudo rsync -ruhP /usr/share/easy-rsa/pki/issued/server.crt` `user``@``vpn_ip``:/tmp/`\n$ `sudo rsync -ruhP /usr/share/easy-rsa/pki/ca.crt` `user``@``vpn_ip``:/tmp/`\n\n```", "```\n$ `sudo mv /tmp/server.crt /etc/openvpn/`\n$ `sudo mv /tmp/ca.crt /etc/openvpn/`\n\n```", "```\n$ `cd /usr/share/easy-rsa/`\n$ `sudo ./easyrsa` ❶ `gen-dh`\n$ `sudo` ❷ `openvpn --genkey secret ta.key`\n$ `sudo cp /usr/share/easy-rsa/ta.key /etc/openvpn/`\n$ `sudo cp /usr/share/easy-rsa/pki/dh.pem /etc/openvpn/`\n\n```", "```\n$ `sudo cp /usr/share/easy-rsa/ta.key /etc/openvpn/`\n$ `sudo cp /usr/share/easy-rsa/pki/dh.pem /etc/openvpn/`\n\n```", "```\n$ `sudo mkdir -p /etc/openvpn/client-configs/keys/`\n\n```", "```\n$ `cd /usr/share/easy-rsa/`\n$ `sudo ./easyrsa gen-req` ❶ `myclient` `nopass`\n$ `sudo cp /usr/share/easy-rsa/pki/private/``myclient``.key \\`\n`    /etc/openvpn/client-configs/keys/`\n$ `sudo rsync -ruhP /usr/share/easy-rsa/pki/reqs/``myclient``.req` `user``@``CA_ip``:/tmp/`\n\n```", "```\n$ `cd /usr/share/easy-rsa/`\n\n```", "```\n$ `sudo ./easyrsa import-req /tmp/``myclient``.req` `myclient`\n$ `sudo ./easyrsa sign-req client` `myclient`\n\n```", "```\n$ `sudo cp /usr/share/easy-rsa/ta.key /etc/openvpn/client-configs/keys/`\n$ `sudo mv /tmp/``myclient``.crt /etc/openvpn/client-configs/keys/`\n$ `sudo cp /etc/openvpn/ca.crt /etc/openvpn/client-configs/keys/`\n\n```", "```\n$ `sudo nano /etc/openvpn/server.conf`\n\n```", "```\n`--snip--`\nport 1194\n`--snip--`\n`;`proto tcp\nproto udp\n`--snip--`\n\n```", "```\n`--snip--`\nca `ca.crt`\ncert `server.crt`\nkey `server.key`\n`--snip--`\n\n```", "```\n`--snip--`\n`#`dh dh2048.pem\n`dh dh.pem`\n`--snip--`\n\n```", "```\n`--snip--`\npush \"redirect-gateway def1 bypass-dhcp\"\n`--snip--`\npush \"dhcp-option DNS 208.67.222.222\"\npush \"dhcp-option DNS 208.67.220.220\"\n`--snip--`\n\n```", "```\n`--snip--`\ntls-auth ta.key 0\n`--snip--`\ncipher AES-256-CBC\n`auth SHA256`\n`--snip--`\n\n```", "```\n`--snip--`\nuser nobody\ngroup nogroup\n`--snip--`\n\n```", "```\n$ `sudo sysctl -w net.ipv4.ip_forward=1`\n\n```", "```\n$ `sudo sysctl -p`\nnet.ipv4.ip_forward = 1\n\n```", "```\n$ `ip route | grep -i default`\ndefault via 202.182.98.1 dev `ens3` proto dhcp src 202.182.98.40 metric 100\n\n```", "```\n$ `sudo nano /etc/ufw/before.rules`\n\n```", "```\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s `10.8.0.0/24`-o `ens3` -j MASQUERADE\nCOMMIT\n\n```", "```\n$ `sudo ufw default allow FORWARD`\n\n```", "```\n$ `sudo ufw allow 1194/udp`\n\n```", "```\n$ `sudo ufw allow OpenSSH`\n\n```", "```\n$ `sudo ufw disable`\n$ `sudo ufw enable`\n\n```", "```\n$ `sudo systemctl start openvpn@``server`\n\n```", "```\n$ `sudo systemctl status openvpn@``server`\n\n```", "```\n$ `sudo systemctl enable openvpn@``server`\n\n```", "```\n$ `sudo mkdir -p /etc/openvpn/client-configs/files/`\n$ `sudo cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf \\`\n`    /etc/openvpn/client-configs/base.conf`\n$ `nano /etc/openvpn/client-configs/base.conf`\n\n```", "```\n`--snip--`\n;proto tcp\n`proto udp`\n`--snip--`\nremote `vpn_ip` `1194`\n;remote `vpn_ip` `1194`\n`--snip--`\n\n```", "```\n`--snip--`\nuser nobody\ngroup nogroup\n`--snip--`\n\n```", "```\n`--snip--`\n`#`ca ca.crt\n`#`cert client.crt\n`#`key client.key\n`--snip--`\n\n```", "```\n`--snip--`\n`#`tls-auth ta.key 1\n`--snip--`\n\n```", "```\n`--snip--`\n`cipher AES-256-CBC`\n`auth SHA256`\n`--snip--`\n\n```", "```\n`--snip--`\nkey-direction 1\n\n```", "```\n$ `sudo touch /etc/openvpn/client-configs/client_config.sh`\n$ `sudo chmod +x /etc/openvpn/client-configs/client_config.sh`\n$ `sudo nano /etc/openvpn/client-configs/client_config.sh`\n\n```", "```\n#!/bin/bash\nKEY_DIR=/etc/openvpn/client-configs/keys\nOUTPUT_DIR=/etc/openvpn/client-configs/files\nBASE_CONFIG=/etc/openvpn/client-configs/base.conf\ncat ${BASE_CONFIG} \\\n    <(echo -e '<ca>') ${KEY_DIR}/ca.crt \\\n    <(echo -e '</ca>\\n<cert>') ${KEY_DIR}/${1}.crt \\\n    <(echo -e '</cert>\\n<key>') ${KEY_DIR}/${1}.key \\\n    <(echo -e '</key>\\n<tls-auth>') ${KEY_DIR}/ta.key \\\n    <(echo -e '</tls-auth>') > $ {OUTPUT_DIR}/${1}.ovpn\n\n```", "```\n$ `cd /etc/openvpn/client-configs/`\n$ `sudo ./client_config.sh` `myclient`\n$ `ls -lah /etc/openvpn/client-configs/files/`\ntotal 20\ndrwxrwxr-x 2 test test 4096 Apr 28 23:22 ./\ndrwxrwxr-x 4 test test 4096 Apr 28 23:21 ../\n-rw-rw-r-- 1 test test 11842 Apr 28 23:22 `myclient``.ovpn`\n\n```", "```\n$ `rsync -ruhP` `user@vpn_ip:``/etc/openvpn/client-configs/files/``myclient``.ovpn ./`\n\n```", "```\n$ `sudo apt install openvpn -y`\n\n```", "```\n$ `sudo openvpn` `myclient``.ovpn`\n\n```", "```\n$ `ssh` `user@your_server_IP`\n\n```", "```\n$ `sudo apt install wireguard -y`\n\n```", "```\n$ `umask 077`\n\n```", "```\n$ `wg genkey | sudo tee /etc/wireguard/private.key`\n\n```", "```\n$ `sudo nano /etc/wireguard/wg0.conf`\n\n```", "```\n`[Interface]`\n`PrivateKey =` `your_private_key`\n`Address =` `10.8.0.1/24`\n`ListenPort =` `26535`\n`SaveConfig = true`\n\n```", "```\n$ `sudo sysctl -w net.ipv4.ip_forward=1`\n$ `sudo sysctl -p`\n\n```", "```\n$ `ip route | grep -i default`\ndefault via 172.16.90.1 dev `ens33` proto dhcp metric 100\n\n```", "```\n$ `sudo nano /etc/wireguard/wg0.conf`\n`--snip--`\nSaveConfig = true\n`PostUp = ufw route allow in on wg0 out on` `ens33`\n`PostUp = iptables -t nat -I POSTROUTING -o` `ens33` `-j MASQUERADE`\n`PreDown = ufw route delete allow in on wg0 out on` `ens33`\n`PreDown = iptables -t nat -D POSTROUTING -o` `ens33` `-j MASQUERADE`\n\n```", "```\n$ `sudo ufw allow` `26535``/udp`\n\n```", "```\n$ `sudo ufw allow ssh`\n\n```", "```\n$ `sudo ufw disable`\n$ `sudo ufw enable`\n\n```", "```\n$ `resolvectl dns ens33`\n\n```", "```\n$ `sudo systemctl enable wg-quick@wg0.service`\n$ `sudo systemctl start wg-quick@wg0.service`\n\n```", "```\n$ `sudo systemctl status wg-quick@wg0.service`\n\n```", "```\n    `--snip--`\n    `Address =` `10.8.0.2`\n    `DNS =` `108.61.10.10`\n    `[Peer]`\n    `PublicKey =` `server_public_key`\n    `AllowedIPs =` `0.0.0.0/0`\n    `Endpoint =` `server_public_ip:listening_port`\n\n    ```", "```\n    $ `sudo systemctl stop wg-quick@wg0.service`\n\n    ```", "```\n    $ `sudo nano /etc/wireguard/wg0.conf`\n\n    ```", "```\n    `--snip--`\n    `[Peer]`\n    `PublicKey =` `client_public_key`\n    `AllowedIPs =` `10.8.0.2`\n\n    ```", "```\n    $ `sudo systemctl start wg-quick@wg0.service`\n    $ `sudo systemctl status wg-quick@wg0.service`\n\n    ```", "```\n    $ `ping 10.8.0.1`\n    PING 10.8.0.1 (10.8.0.1): 56 data bytes\n    64 bytes from 10.8.0.1: icmp_seq=0 ttl=57 time=43.969 ms\n    64 bytes from 10.8.0.1: icmp_seq=0 ttl=57 time=43.969 ms\n    64 bytes from 10.8.0.1: icmp_seq=0 ttl=57 time=43.969 ms\n    64 bytes from 10.8.0.1: icmp_seq=0 ttl=57 time=43.969 ms\n    --- 10.8.0.1 ping statistics ---\n    4 packets transmitted, 4 packets received, 0.0% packet loss\n    round-trip min/avg/max/stddev = 43.969/43.969/43.969/0 ms\n\n    ```", "```\n    $ `sudo apt install wireguard resolvconf -y`\n\n    ```", "```\n    $ `wg genkey | sudo tee /etc/wireguard/private.key`\n    $ `sudo cat /etc/wireguard/private.key | wg pubkey | sudo tee \\`\n    `     /etc/wireguard/public.key`\n\n    ```", "```\n    $ `sudo nano /etc/wireguard/wg0.conf`\n    `[Interface]`\n    `PrivateKey =` `client_private_key`\n    `Address =` `10.8.0.3`\n    `DNS =` `108.61.10.10`\n    `[Peer]`\n    `PublicKey =` `server_public_key`\n    `AllowedIPs =` `0.0.0.0/0`\n    `Endpoint =` `server_public_ip:listening_port`\n\n    ```", "```\n    $ `sudo systemctl stop wg-quick@wg0.service`\n\n    ```", "```\n    $ `sudo nano /etc/wireguard/wg0.conf`\n\n    ```", "```\n    `--snip--`\n    `[Peer]`\n    `PublicKey =` `client_public_key`\n    `AllowedIPs =` `10.8.0.3`\n\n    ```", "```\n    $ `sudo systemctl start wg-quick@wg0.service`\n    $ `sudo systemctl status wg-quick@wg0.service`\n\n    ```", "```\n    $ `wg-quick up wg0`\n\n    ```", "```\n    $ `wg-quick down wg0`\n\n    ```"]