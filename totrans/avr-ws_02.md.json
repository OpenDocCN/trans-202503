["```\n\n      C:\\>\n      `avrdude -p t85 -c usbasp -B 4` \n\n      avrdude: set SCK frequency to 187500 Hz\n\n      avrdude: AVR device initialized and ready to accept instructions\n\n      Reading | ################################################## | 100% 0.03s\n\n      avrdude: Device signature = 0x1e930b\n\n      avrdude: safemode: Fuses OK\n\n      avrdude done.  Thank you.\n\n      C:\\>\n\n```", "```\n\n      C:\\>\n      `avrdude -p t85 -c usbasp -B 4` \n\n      avrdude: set SCK frequency to 187500 Hz\n\n      avrdude: error: programm enable: target doesn’t answer. 1\n\n      avrdude: initialization failed, rc=-1\n\n      Double-check connections and try again, or use -F to override this check\n\n      avrdude done.  Thank you.\n\n      C:\\>\n\n```", "```\n\n      C:\\>\n      `make flash` \n\n      avrdude -c USBasp  -p attiny85 -B 4 -U flash:w:main.hex:i\n\n      avrdude: set SCK frequency to 187500 Hz\n\n      avrdude: AVR device initialized and ready to accept instructions\n\n      Reading | ################################################## | 100% 0.02s\n\n      avrdude: Device signature = 0x1e930b\n\n      avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed\n\n      To disable this feature, specify the -D option.\n\n      avrdude: erasing chip\n\n      avrdude: set SCK frequency to 187500 Hz\n\n      avrdude: reading input file \"main.hex\"\n\n      avrdude: writing flash (108 bytes):\n\n      Writing | ################################################## | 100% 0.05s\n\n      avrdude: 108 bytes of flash written\n\n      avrdude: verifying flash memory against main.hex:\n\n      avrdude: load data flash data from input file main.hex:\n\n      avrdude: input file main.hex contains 108 bytes\n\n      avrdude: reading on-chip flash data:\n\n      Reading | ################################################## | 100% 0.06s\n\n      avrdude: verifying . . .\n\n      avrdude: 108 bytes of flash verified\n\n      avrdude: safemode: Fuses OK\n\n      avrdude done.  Thank you.\n\n      C:\\>\n\n```", "```\n\n      ❶ // Project 0 - Blinking an LED\n\n      ❷ #include <avr/io.h>\n\n      #include <util/delay.h>\n\n      ❸ int main(void)\n\n      {\n\n      ❹ DDRB = 0b00001000; // Set PB3 as output\n\n      ❺ while(1)\n\n      {\n\n      PORTB = 0b11111111;\n\n      _delay_ms(1000);\n\n      PORTB = 0b00000000;\n\n      _delay_ms(1000);\n\n      }\n\n      return 0;\n\n      }\n\n```", "```\n\n      // Project 0 - Blinking an LED\n\n```", "```\n\n      /*\n\n      Project 0\n\n      Blinking an LED\n\n      by Mary Smith, created 20/10/2022\n\n      */\n\n```", "```\n\n      avr-gcc -Wall -Os -Iusbdrv -DF_CPU=1000000 -mmcu=attiny85 -c main.c -o main.o\n\n      main.c: In function 'main':\n\n      main.c:17: error: 'return' undeclared (first use in this function)\n\n      main.c:17: error: (Each undeclared identifier is reported only once\n\n      main.c:17: error: for each function it appears in.)\n\n      main.c:17: error: expected ';' before numeric constant\n\n      make: *** [main.o] Error 1\n\n      C:>\n\n```", "```\n\n      // Project 0 - Blinking an LED\n\n      #include <avr/io.h>\n\n      #include <util/delay.h>\n\n      int main(void)\n\n      {\n\n      ❶ DDRB = 0b00001000;\n\n      for(;;)\n\n      {\n\n      _delay_ms(1000);\n\n      PORTB = 0b11111111;\n\n      _delay_ms(1000);\n\n      PORTB = 0b00000000;\n\n      }\n\n      return 0;\n\n      }\n\n```", "```\n\n      DDRB = 0b11111111;\n\n```", "```\n\n      // Bits: 76543210\n\n      // Pins: 44132765\n\n      DDRB = 0b00000010;\n\n```", "```\n\n      // Bits: 76543210\n\n      // Pins: 44132765\n\n      DDRB = 0b00001000;\n\n```", "```\n\n      PORTB = 0b11111111;\n\n```", "```\n\n      PORTB = 0b00000000;\n\n```", "```\n\n      // Bits:   76543210\n\n      // Pins:   44132765\n\n      PORTB = 0b00010001;\n\n```", "```\n\n      // Project 1 - Experimenting with ATtiny85 Digital Outputs\n\n      #include <avr/io.h>\n\n      #include <util/delay.h>\n\n      int main(void)\n\n      {\n\n      ❶ DDRB = 0b11111111; // Set pins as outputs\n\n      for(;;)\n\n      {\n\n      ❷ _delay_ms(250);\n\n      ❸ PORTB = 0b00011111;\n\n      _delay_ms(250);\n\n      ❹ PORTB = 0b00000000;\n\n      }\n\n      return 0;\n\n      }\n\n```", "```\n\n      C:\\>\n      `avrdude -p m328p -c usbasp -B 4` \n\n      avrdude: set SCK frequency to 187500 Hz\n\n      avrdude: AVR device initialized and ready to accept instructions\n\n      Reading | ################################################## | 100% 0.03s\n\n      avrdude: Device signature = 0x1e950f\n\n      avrdude: safemode: Fuses OK\n\n      avrdude done.  Thank you.\n\n      C:\\>\n\n```", "```\n\n      // Project 2 - Experimenting with ATmega328P-PU Digital Outputs\n\n      #include <avr/io.h>\n\n      #include <util/delay.h>\n\n      int main(void)\n\n      {\n\n      DDRB = 0b11111111; // Set PORTB register as outputs\n\n      for(;;)\n\n      {\n\n      _delay_ms(250);\n\n      ❶ PORTB = 0b11111111;\n\n      _delay_ms(250);\n\n      ❷ PORTB = 0b00000000;\n\n      }\n\n      return 0;\n\n      }\n\n```", "```\n\n      PORTB = 0b11110000;\n\n```", "```\n\n      PORTB = 0b00001111;\n\n```", "```\n\n      // Project 3 - Bit-Shifting Digital Outputs\n\n      #include <avr/io.h>\n\n      #include <util/delay.h>\n\n      ❶ #define TIME 100 // Delay in milliseconds\n\n      int main(void)\n\n      {\n\n      ❷ uint8_t i;         // 8-bit integer variable \"i\"\n\n      DDRB = 0b11111111; // Set PORTB register as outputs\n\n      while (1)\n\n      {\n\n      ❸ for (i = 0; i < 8; i++)\n\n      {\n\n      ❹ _delay_ms(TIME);\n\n      PORTB = 0b00000001 << i;\n\n      }\n\n      ❺ for (i = 1; i < 7; i++)\n\n      {\n\n      _delay_ms(TIME);\n\n      PORTB = 0b10000000 >> i;\n\n      }\n\n      }\n\n      return 0;\n\n      }\n\n```", "```\n\n      for (i = 0; i < 8; i++)\n\n      {\n\n      _delay_ms(TIME);\n\n      PORTB = 0b00000001 << i;\n\n      }\n\n```", "```\n\n      PORTB = 0b00000001;\n\n      PORTB = 0b00000010;\n\n      PORTB = 0b00000100;\n\n      PORTB = 0b00001000;\n\n      PORTB = 0b00010000;\n\n      PORTB = 0b00100000;\n\n      PORTB = 0b01000000;\n\n      PORTB = 0b10000000;\n\n```", "```\n\n      PORTB = 0b00000001;\n\n      PORTB = 0b00000001 << 1; // equivalent to 0b00000010\n\n      PORTB = 0b00000001 << 2; // equivalent to 0b00000100\n\n```", "```\n\n      ~0b00001111 = 0b11110000\n\n```", "```\n\n      for(;;)\n\n      {\n\n      PORTB = 0b00001111;    // PORTB pins 3, 2, 1, and 0 turned on\n\n      _delay_ms(250);\n\n      PORTB = ~0b00001111;   // PORTB pins 7, 6, 5, and 4 turned on\n\n      _delay_ms(250);\n\n      }\n\n```", "```\n\n      0b00100010 &\n\n      0b10101011\n\n      = 0b00100010\n\n```", "```\n\n      // Project 5 - AND & Demonstration\n\n      #include <avr/io.h>\n\n      #include <util/delay.h>\n\n      #define TIME 5              // Delay in milliseconds\n\n      int main(void)\n\n      {\n\n      uint8_t i;                // 8-bit integer variable \"i\"\n\n      DDRB = 0b11111111;        // Set PORTB register as outputs\n\n      for(;;)\n\n      {\n\n      for (i = 0; i < 256; i++)\n\n      {\n\n      _delay_ms(TIME);\n\n      PORTB = 0b11111111 & i; // Displays value of i in binary using LEDs\n\n      }\n\n      }\n\n      return 0;\n\n      }\n\n```", "```\n\n      0b00100110 |\n\n      0b10101011\n\n      = 0b10101111\n\n```", "```\n\n      // Project 6 - Experimenting with OR\n\n      #include <avr/io.h>\n\n      #include <util/delay.h>\n\n      #define TIME 50      // Delay in milliseconds\n\n      int main(void)\n\n      {\n\n      uint8_t i;         // 8-bit integer variable \"i\"\n\n      DDRB = 0b11111111; // Set PORTB register as outputs\n\n      for(;;)\n\n      {\n\n      for (i = 0; i < 255; i++)\n\n      {\n\n      _delay_ms(TIME);\n\n      PORTB = 0b00001111 | i;\n\n      }\n\n      }\n\n      return 0;\n\n      }\n\n```", "```\n\n      0b00100110 ^\n\n      0b10101011\n\n      = 0b10001101\n\n```", "```\n\n      // Project 7 - Experimenting with XOR\n\n      #include <avr/io.h>\n\n      #include <util/delay.h>\n\n      #define TIME 250     // Delay in milliseconds\n\n      int main(void)\n\n      {\n\n      uint8_t i;         // 8-bit integer variable \"i\"\n\n      DDRB = 0b11111111; // Set PORTB register as outputs\n\n      for(;;)\n\n      {\n\n      for (i = 0; i < 255; i++)\n\n      {\n\n      _delay_ms(TIME);\n\n      PORTB = 0b11111111 ^ i;\n\n      }\n\n      }\n\n      return 0;\n\n      }\n\n```"]