- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](image_fi/book_art/chapterart.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The first time I, Colleen, confronted my own hesitancy with math was when geometry
    provided a solution to an art class problem I faced: translating a flat painting
    onto a curved vase. Straight lines from my friend’s canvas didn’t behave the same
    way on the curved vase. Distances between points on the painting grew or shrank
    with the curvature. We’d stumbled upon the differences between the geometry we’d
    learned in class (where geometry behaved like the canvas painting) and the geometry
    of real-world objects like the vase. Real-world data often behaves more like the
    vase than the canvas painting. As an industry data scientist, I’ve worked with
    many non-data-science professionals who want to learn new data science methods
    but either haven’t encountered a lot of math or coding in their career path or
    have a lingering fear of math from prior educational experiences. Math-heavy papers
    without coding examples often limit the toolsets other professionals can use to
    solve important problems in their own fields.'
  prefs: []
  type: TYPE_NORMAL
- en: Math is simply another language with which to understand the world around us;
    like any language, it’s possible to learn. This book is focused on geometry, but
    it is not a math textbook. We avoid proofs, rarely use equations, and try to simplify
    the math behind the algorithms as much as possible to make these tools accessible
    to a wider audience. If you are more mathematically advanced and want the full
    mathematical theory, we provide references at the end of the book.
  prefs: []
  type: TYPE_NORMAL
- en: Geometry underlies every single machine learning algorithm and problem setup,
    and thousands of geometry-based algorithms exist today. This book focuses on a
    few dozen algorithms in use now, with preference given to those with packages
    to implement them in R. If you want to understand how geometry relates to algorithms,
    how to implement geometry-based algorithms with code, or how to think about problems
    you encounter through the lens of geometry, keep reading.
  prefs: []
  type: TYPE_NORMAL
- en: Who Is This Book For?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Though this book is for anyone anywhere who wants a hands-on guide to network
    science, geometry-based aspects of machine learning, and topology-based algorithms,
    some background in statistics, machine learning, and a programming language (R
    or Python, ideally) will be helpful. This book was designed for the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Healthcare professionals working with small sets of patient data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Math students looking for an applied side of what they’re learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Small-business owners who want to use their data to drive sales
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Physicists or chemists interested in using topological data analysis for a research
    project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Curious sociologists who are wary of proof-based texts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Statisticians or data scientists looking to beef up their toolsets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Educators looking for practical examples to show their students
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Engineers branching out into machine learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We’ll be surveying many areas of science and business in our examples and will
    cover dozens of algorithms shaping data science today. Each chapter will focus
    on the intuition behind the algorithms discussed and will provide examples of
    how to use those algorithms to solve a problem using the R programming language.
    While the book is written with examples presented in R, our downloadable repository
    ([https://nostarch.com/download/ShapeofData_PythonCode.zip](https://nostarch.com/download/ShapeofData_PythonCode.zip))
    includes R and Python code for examples where Python has an analogous function
    to support users of both languages. Feel free to skip around to sections most
    relevant to your interests.
  prefs: []
  type: TYPE_NORMAL
- en: About This Book
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This book starts with an introduction to geometry in machine learning. Topics
    relevant to geometry-based algorithms are built through a series of network science
    chapters that transition into metric geometry, geometry- and topology-based algorithms,
    and some newer implementations of these algorithms in natural language processing,
    distributed computing, and quantum computing. Here’s a quick overview of the chapters
    in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 1: The Geometric Structure of Data Details how machine learning algorithms
    can be examined from a geometric perspective with examples from medical and image
    data'
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 2: The Geometric Structure of Networks Introduces network data metrics,
    structure, and types through examples of social networks'
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 3: Network Analysis Introduces supervised and unsupervised learning
    on network data, network-based clustering algorithms, comparisons of different
    networks, and disease spread across networks'
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 4: Network Filtration Moves from network data to simplicial complex
    data, extends network metrics to higher-dimensional interactions, and introduces
    hole-counting in objects like networks'
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 5: Geometry in Data Science Provides an overview on the curse of dimensionality,
    the role of distance metrics in machine learning, dimensionality reduction and
    data visualization, and applications to time series and probability distributions'
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 6: Newer Applications of Geometry in Machine Learning Details several
    geometry-based algorithms, including supervised learning in educational data,
    geometry-based disaster planning, and activity preference ranking'
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 7: Tools for Topological Data Analysis Focuses on topology-based unsupervised
    learning algorithms and their application to student data'
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 8: Homotopy Algorithms Introduces an algorithm related to path planning
    and small data analysis'
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 9: Final Project: Analyzing Text Data Focuses on a text dataset, a
    deep learning algorithm used in text embedding, and analytics of processed text
    data through algorithms from previous chapters'
  prefs: []
  type: TYPE_NORMAL
- en: 'Chapter 10: Multicore and Quantum Computing Dives into distributed computing
    solutions and quantum algorithms, including a quantum network science example
    and a quantum image analytics algorithm'
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and Installing R
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We’ll be using the R programming language in this book. R is easy to install
    and compatible with macOS, Linux, and Windows operating systems. You can choose
    the download for your system at [https://cloud.r-project.org](https://cloud.r-project.org).
    You might be prompted to click a link for your geographic location (or a general
    cloud connection option). If you haven’t installed R before, you can choose the
    first-time installation of the base, which is the first download option on the
    R for Windows page.
  prefs: []
  type: TYPE_NORMAL
- en: Once you click the first-time option, you should see a screen that will give
    you an option to download R for Windows.
  prefs: []
  type: TYPE_NORMAL
- en: After R downloads, you’ll follow the installation instructions that your system
    provides as a prompt. This will vary slightly depending on the operating system.
    However, the installation guide will take you through the steps needed to set
    up R.
  prefs: []
  type: TYPE_NORMAL
- en: You may want to publish your projects or connect R with other open source projects,
    such as Python. RStudio provides a comfortable interface with options to connect
    R more easily with other platforms. You can find RStudio’s download at [https://www.rstudio.com](https://www.rstudio.com).
    Once you download RStudio, simply follow your operating system’s command prompts
    to install with the configurations that work best for your use case.
  prefs: []
  type: TYPE_NORMAL
- en: Installing R Packages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: R has several options for installing new packages on your system. The command
    line option is probably the easiest. You’ll use the `install.packages("``package_name``")`
    option, where `package_name` is the name of the package you want to install, such
    as `install.packages("mboost")` to install the mboost package. From there, you
    may be asked to choose your geographic location for the download. The package
    will then download (and download any package dependencies that are not already
    on your machine).
  prefs: []
  type: TYPE_NORMAL
- en: You can also use your graphical user interface (GUI) to install a package. This
    might be preferable if you want to browse available packages rather than install
    just one specific package to meet your needs. You can select **Install package(s)**
    from the Packages menu option after you launch R on your machine.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll be prompted to select your location, and the installation will happen
    as it would with the command line option for package installation.
  prefs: []
  type: TYPE_NORMAL
- en: Getting Help with R
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: R has many useful features if you need help with a function or a package in
    your code. The `help()` function allows you to get information about a function
    or package that you have installed in R. Adding the package name after the function
    (such as `help(glmboost, "mboost")` for help with the generalized linear modeling
    boosted regression function through the mboost package) will pull up information
    about a package not yet installed in your machine so that you can understand what
    the function does before deciding to install the new package. This is helpful
    if you’re looking for something specific but not sure that what you’re finding
    online is exactly what you need. In lieu of using the `help()` function, you can
    add a question mark before the function name (such as `?glmboost`).
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also browse for vignettes demonstrating how to use functions in a package
    using the command `browseVignettes()`, which will pull up vignettes for each package
    you have installed in R. If you want a vignette for a specific package, you can
    name that package like so: `browseVignettes(package="mboost")`. Many packages
    come with a good overview of how to apply the package’s functions to an example
    dataset.'
  prefs: []
  type: TYPE_NORMAL
- en: R has a broad user base, and internet searches or coding forums can provide
    additional resources for specific issues related to a package. There are also
    many good tutorials that overview the basic programming concepts and common functions
    in R. If you are less familiar with programming, you may want to go through a
    free tutorial on R programming or work with data in R before attempting the code
    in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Because R is an evolving language with new packages added and removed regularly,
    we encourage you to keep up with developments via package websites and web searches.
    Packages that are discontinued can still be installed and used as legacy packages
    but require some caution, as they aren’t updated by the package author. We’ll
    see one of these in this book with an example of how to install a legacy package.
    Similarly, new packages are developed regularly, and you should find and use new
    packages in the field of geometry as they become available.
  prefs: []
  type: TYPE_NORMAL
- en: Support for Python Users
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While this book presents examples in R code, our downloadable repository ([https://nostarch.com/download/ShapeofData_PythonCode.zip](https://nostarch.com/download/ShapeofData_PythonCode.zip))
    includes translations to Python packages and functions where possible. Most examples
    have a Python translation for Python users. However, some translations do not
    exist or include only the packages that do not install correctly on some operating
    systems. We encourage you to develop Python applications if they do not currently
    exist, and it is likely that more support in Python will become available for
    methods in this book (and methods developed in the future).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Mathematics can be intimidating for some people, but it forms the foundation
    of a lot of hot topics in machine learning and technology these days. Understanding
    the geometry behind the buzzwords will give you a deeper understanding of how
    the algorithms function and how they can be used to solve problems. You might
    even have some fun along the way.
  prefs: []
  type: TYPE_NORMAL
- en: We love helping people learn about geometry and machine learning. Feel free
    to connect with us or contact us on LinkedIn ([https://www.linkedin.com/in/colleenmfarrelly](https://www.linkedin.com/in/colleenmfarrelly)).
  prefs: []
  type: TYPE_NORMAL
- en: This book will introduce you to geometry one step at a time. You’ll probably
    have questions, wrestle with concepts, or try an example of your own based on
    what you read. Data science is a process. Getting help when you are stuck is a
    natural part of learning data science. Eventually, you’ll find your own preferred
    methods of working through a problem you encounter.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
