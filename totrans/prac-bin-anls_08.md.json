["```\n   $ gdb /bin/ls\n   GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1\n   ...\n   Reading symbols from /bin/ls...(no debugging symbols found)...done.\n➊ (gdb) info files\n   Symbols from \"/bin/ls\".\n   Local exec file:\n          `/bin/ls', file type elf64-x86-64.\n➋        Entry point: 0x4049a0\n          0x0000000000400238 - 0x0000000000400254 is .interp\n          0x0000000000400254 - 0x0000000000400274 is .note.ABI-tag\n          0x0000000000400274 - 0x0000000000400298 is .note.gnu.build-id\n          0x0000000000400298 - 0x0000000000400358 is .gnu.hash\n          0x0000000000400358 - 0x0000000000401030 is .dynsym\n          0x0000000000401030 - 0x000000000040160c is .dynstr\n          0x000000000040160c - 0x000000000040171e is .gnu.version\n          0x0000000000401720 - 0x0000000000401790 is .gnu.version_r\n          0x0000000000401790 - 0x0000000000401838 is .rela.dyn\n          0x0000000000401838 - 0x00000000004022b8 is .rela.plt\n          0x00000000004022b8 - 0x00000000004022d2 is .init\n          0x00000000004022e0 - 0x00000000004029f0 is .plt\n          0x00000000004029f0 - 0x00000000004029f8 is .plt.got\n          0x0000000000402a00 - 0x0000000000413c89 is .text\n          0x0000000000413c8c - 0x0000000000413c95 is .fini\n          0x0000000000413ca0 - 0x000000000041a654 is .rodata\n          0x000000000041a654 - 0x000000000041ae60 is .eh_frame_hdr\n          0x000000000041ae60 - 0x000000000041dae4 is .eh_frame\n          0x000000000061de00 - 0x000000000061de08 is .init_array\n          0x000000000061de08 - 0x000000000061de10 is .fini_array\n          0x000000000061de10 - 0x000000000061de18 is .jcr\n          0x000000000061de18 - 0x000000000061dff8 is .dynamic\n          0x000000000061dff8 - 0x000000000061e000 is .got\n          0x000000000061e000 - 0x000000000061e398 is .got.plt\n          0x000000000061e3a0 - 0x000000000061e600 is .data\n          0x000000000061e600 - 0x000000000061f368 is .bss\n➌ (gdb) b *0x4049a0\n   Breakpoint 1 at 0x4049a0\n➍ (gdb) set pagination off\n➎ (gdb) set logging on\n   Copying output to gdb.txt.\n   (gdb) set logging redirect on\n   Redirecting output to gdb.txt.\n➏ (gdb) run\n➐ (gdb) display/i $pc\n➑ (gdb) while 1\n➑ >si\n   >end\n   chapter1 chapter2 chapter3 chapter4 chapter5\n   chapter6 chapter7 chapter8 chapter9 chapter10\n   chapter11 chapter12 chapter13 inc\n   (gdb)\n```", "```\n➊ $ wc -l gdb.txt\n   614390 gdb.txt\n➋ $ head -n 20 gdb.txt\n   Starting program: /bin/ls\n   [Thread debugging using libthread_db enabled]\n   Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\n   Breakpoint 1, 0x00000000004049a0 in ?? ()\n➌ 1: x/i $pc\n   => 0x4049a0:          xor     %ebp,%ebp\n   0x00000000004049a2   in ?? ()\n   1: x/i $pc\n   => 0x4049a2:          mov     %rdx,%r9\n   0x00000000004049a5   in ?? ()\n   1: x/i $pc\n   => 0x4049a5:          pop     %rsi\n   0x00000000004049a6   in ?? ()\n   1: x/i $pc\n   => 0x4049a6:          mov     %rsp,%rdx\n   0x00000000004049a9   in ?? ()\n   1: x/i $pc\n   => 0x4049a9:          and     $0xfffffffffffffff0,%rsp\n   0x00000000004049ad   in ?? ()\n```", "```\n$ egrep '^=> 0x[0-9a-f]+:' gdb.txt | head -n 20\n=> 0x4049a0:        xor    %ebp,%ebp\n=> 0x4049a2:        mov    %rdx,%r9\n=> 0x4049a5:        pop    %rsi\n=> 0x4049a6:        mov    %rsp,%rdx\n=> 0x4049a9:        and    $0xfffffffffffffff0,%rsp\n=> 0x4049ad:        push   %rax\n=> 0x4049ae:        push   %rsp\n=> 0x4049af:        mov    $0x413c50,%r8\n=> 0x4049b6:        mov    $0x413be0,%rcx\n=> 0x4049bd:        mov    $0x402a00,%rdi\n=> 0x4049c4:        callq  0x402640 <__libc_start_main@plt>\n=> 0x4022e0:        pushq  0x21bd22(%rip)         # 0x61e008\n=> 0x4022e6:        jmpq   *0x21bd24(%rip)        # 0x61e010\n=> 0x413be0:        push   %r15\n=> 0x413be2:        push   %r14\n=> 0x413be4:        mov    %edi,%r15d\n=> 0x413be7:        push   %r13\n=> 0x413be9:        push   %r12\n=> 0x413beb:        lea    0x20a20e(%rip),%r12   # 0x61de00\n=> 0x413bf2:        push   %rbp\n```", "```\nPROGRAM := foo\n\ntest: test1 test2 test3 # ...\n\ntest1:\n        $(PROGRAM) < input > output\n        diff correct output\n\n# ...\n```", "```\nmake test PROGRAM=\"gdb foo\"\n```", "```\n➊ x = int(argv[0])\n   y = int(argv[1])\n\n➋ z = x + y\n➌ if(x < 5)\n       foo(x, y, z)\n➍ else\n       bar(x, y, z)\n```", "```\nccf->user = pwd->pw_uid;\n```", "```\nmov eax,DWORD PTR [rax+0x10]\nmov DWORD PTR [rbx+0x60],eax\n```", "```\na[24] = b[4];\n```", "```\nmov eax,DWORD PTR [rsi+0x10]\nmov DWORD PTR [rdi+0x60],eax\n```", "```\n➊ void **__usercall sub_4047D4<eax>(int a1<ebp>)\n   {\n➋    int   v1; // eax@1\n      int   v2; // ebp@1\n      int   v3; // ecx@4\n      int   v5; // ST10_4@6\n      int   i; // [sp+0h] [bp-10h]@3\n\n➌    v2 = a1 + 12;\n      v1 = *(_DWORD *)(v2 - 524);\n      *(_DWORD *)(v2 - 540) = *(_DWORD *)(v2 - 520);\n➍     if ( v1 == 1 )\n         goto LABEL_5;\n       if ( v1 != 2 )\n       {\n➎      for ( i = v2 - 472; ; i = v2 - 472 )\n       {\n         *(_DWORD *)(v2 - 524) = 0;\n➏       sub_7A5950(i);\n         v3 = *(_DWORD *)(v2 - 540);\n         *(_DWORD *)(v2 - 524) = -1;\n         sub_9DD410(v3);\n   LABEL_5:\n          ;\n        }\n     }\n     *(_DWORD *)(v2 - 472) = &off_B98EC8;\n     *(_DWORD *)(v2 - 56) = off_B991E4;\n     *(_DWORD *)(v2 - 524) = 2;\n     sub_58CB80(v2 - 56);\n     *(_DWORD *)(v2 - 524) = 0;\n     sub_7A5950(v2 - 472);\n     v5 = *(_DWORD *)(v2 - 540);\n     *(_DWORD *)(v2 - 524) = -1;\n     sub_9DD410(v5);\n➐   return &off_AE1854;\n   }\n```", "```\n➊ IRSB {\n➋    t0:Ity_I64 t1:Ity_I64 t2:Ity_I64 t3:Ity_I64\n➌    00   |   ------ IMark(0x40339f, 3, 0) ------\n➍    01   |   t2 = GET:I64(rax)\n      02   |   t1 = GET:I64(rdx)\n➎    03   |   t0 = Add64(t2,t1)\n➏    04   |   PUT(cc_op) = 0x0000000000000004\n      05   |   PUT(cc_dep1) = t2\n      06   |   PUT(cc_dep2) = t1 \n➐    07   |   PUT(rax) = t0\n➑    08   |   PUT(pc) = 0x00000000004033a2\n      09   |   t3 = GET:I64(pc) \n➒   NEXT: PUT(rip) = t3; Ijk_Boring\n   }\n```", "```\n   #include <stdio.h>\n\n   static void\n➊ dead(int x)\n   {\n➋    if(x == 5) {\n        printf(\"Never reached\\n\");\n     }\n   }\n\n   int\n   main(int argc, char *argv[])\n   {\n➌   dead(4);\n     return 0;\n   }\n```", "```\nx = unsigned_int(argv[0]) #  ➊x ∊ [0,∞]\nx = x + 5                 #  ➋x ∊ [5,∞]\nx = x + 10                #  ➌x ∊ [15,∞]\n```", "```\n    0:   [BB1]\n    1:   [BB1,BB2]\n    2:   [BB1]\n    3:   [BB1,BB3]\n    4:   [BB1,BB3,BB5]\n➊   5:   [BB1,BB3,BB5,BB3]                 *cycle found*\n    6:   [BB1,BB3,BB5]\n    7:   [BB1,BB3,BB5,BB7]\n    8:   [BB1,BB3,BB5,BB7,BB4]\n    9:   [BB1,BB3,BB5,BB7,BB4,BB6]\n➋  10:  [BB1,BB3,BB5,BB7,BB4,BB6,BB7]      *cycle found*\n...\n```", "```\n1:  x = int(argv[0])\n2:  y = int(argv[1])\n3:\n4:  z = x +   y\n5:  while(x   <  5) {\n6:    x = x   +  1\n7:    y = y   +  2\n8:    z = z   +  x\n9:    z = z   +  y\n10:   z = z  *   5\n11: }\n12:\n13: print(x)\n14: print(y)\n15: print(z)\n```"]