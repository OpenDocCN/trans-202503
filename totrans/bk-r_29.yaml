- en: '**24**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**24**'
- en: '**GOING FURTHER WITH THE GRAMMAR OF GRAPHICS**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步探索图形语法**'
- en: '![image](../images/common-01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common-01.jpg)'
- en: You covered the basics of the `ggplot2` package—which offers an alternative
    to traditional R graphics—in [Section 7.4](ch07.xhtml#ch07lev1sec26) and throughout
    [Chapter 14](ch14.xhtml#ch14). In this chapter, you’ll look at a couple of this
    package’s more popular and useful features, as well as its relatively young cousin,
    `ggvis`, which provides an interactive, browser-based experience.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你在[第7.4节](ch07.xhtml#ch07lev1sec26)和[第14章](ch14.xhtml#ch14)中已经了解了 `ggplot2`
    包的基础知识——这是传统 R 图形的替代方案。在本章中，你将了解这个包的几个更受欢迎和有用的功能，以及它相对年轻的“表亲”`ggvis`，后者提供了一个交互式的基于浏览器的体验。
- en: '**24.1 ggplot or qplot?**'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**24.1 使用 ggplot 还是 qplot？**'
- en: 'So far when creating the relatively simple `ggplot2` graphics, you’ve used
    the `qplot` function to initialize the visual object. In fact, the more general
    `ggplot` command is the core function of `ggplot2`. There are several key differences
    between these two initialization functions:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在创建相对简单的 `ggplot2` 图形时，你已经使用了 `qplot` 函数来初始化视觉对象。实际上，更通用的 `ggplot` 命令是
    `ggplot2` 的核心功能。这两个初始化函数之间有几个关键的区别：
- en: • `qplot` is a shortcut version of `ggplot`; it’s used if you just want a quick
    look at your data or if you’re working directly in the R console.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: • `qplot` 是 `ggplot` 的简化版；如果你只想快速查看数据，或者在直接使用 R 控制台时，它非常适用。
- en: • `qplot` is designed to be reminiscent of the base R `plot` function—you pass
    it *x*- and *y*-coordinate vectors and then tell it what to do. By contrast, `ggplot`
    prefers its data argument as a data frame object, and you tell it what to do by
    explicitly adding geom layers.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: • `qplot` 设计上让人联想到基础 R 的 `plot` 函数——你传入 *x* 和 *y* 坐标向量，然后告诉它该做什么。相比之下，`ggplot`
    更倾向于将数据参数作为数据框对象，并通过显式地添加几何层来告诉它该做什么。
- en: • A call to `qplot` alone can produce a graphic. When using `ggplot`, layers
    have to be added before anything becomes visible.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: • 单独调用 `qplot` 就可以生成一个图形。而使用 `ggplot` 时，必须先添加图层，才能看到任何内容。
- en: • To access the full power and flexibility of `ggplot2` graphics, `ggplot` is
    the recommended function; this comes at the cost of providing a little more explicit
    instruction than `qplot` requires.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: • 要访问 `ggplot2` 图形的全部功能和灵活性，推荐使用 `ggplot` 函数；这需要提供比 `qplot` 更多的显式指令。
- en: All in all, you can create most plots using either `qplot` or `ggplot`. Many
    users make the decision based on the form their data are in (in other words, a
    data frame or as separate vectors in the global environment) and whether they
    want polished visuals (for example, for publication purposes) or just a quick
    look at the data while working directly in the console.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，你可以使用 `qplot` 或 `ggplot` 创建大多数图形。许多用户根据数据的形式（换句话说，是数据框还是全局环境中的单独向量）以及他们是否希望图形更精美（例如用于出版）或只是想快速查看数据（直接在控制台中操作）来做出决定。
- en: 'As a quick example of the difference in syntax, flip back to the code on [page
    297](ch14.xhtml#page_297) used to create the histogram on the right of [Figure
    14-5](ch14.xhtml#ch14fig5). You could argue that the numerous modifications made
    to that particular plot warrant a more compartmentalized approach than `qplot`
    offers. Load `ggplot2` with a call to `library("ggplot2")` and create the following
    three objects:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 作为语法差异的快速示例，可以翻回[第297页](ch14.xhtml#page_297)上创建右侧[图14-5](ch14.xhtml#ch14fig5)直方图的代码。你可以说，对该图形所做的众多修改，确实需要比
    `qplot` 所提供的更为模块化的方法。加载 `ggplot2` 包，并调用 `library("ggplot2")`，然后创建以下三个对象：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The first object, `gg.static`, represents the part of the plot that will stay
    the same throughout, say, if you wanted to experiment with adding other features
    later. Note that the call to `ggplot` differs from `qplot` in that the first argument
    is the entire data frame of interest, allowing access to all data columns within
    the frame for any subsequent geoms or annotations. You then add the `ggtitle`
    and `labs` functions to set the main title and the horizontal axis title. The
    second object, `mtcars.mm`, stores the horsepower mean and median as a “dummy”
    data frame. The mean and median lines are then superimposed on the histogram by
    the third object, `gg.lines`, which is a single call to the `geom_vline` function
    with the same content used in the earlier code, albeit in a slightly modified
    form to stay true to the initial use of `ggplot`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个对象`gg.static`表示图形中始终保持不变的部分，比如如果你稍后想要实验性地添加其他特征。请注意，`ggplot`的调用与`qplot`不同，前者的第一个参数是整个数据框，这样可以访问数据框中的所有数据列，以便后续的所有几何对象或注释使用。然后，你可以添加`ggtitle`和`labs`函数来设置主标题和横轴标题。第二个对象`mtcars.mm`存储了马力的均值和中位数，作为一个“虚拟”数据框。最后，通过第三个对象`gg.lines`，将均值和中位数的线叠加到直方图上，`gg.lines`是对`geom_vline`函数的单一调用，使用的内容与早期代码中相同，只是在形式上稍作修改，以保持与最初使用`ggplot`的一致性。
- en: 'Nothing is displayed until you make a call that prints the `ggplot2` object
    (as noted in [Section 7.4](ch07.xhtml#ch07lev1sec26)). The following call reproduces
    the image on the right of [Figure 14-5](ch14.xhtml#ch14fig5):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在你调用打印`ggplot2`对象的命令之前，什么都不会显示（如[第7.4节](ch07.xhtml#ch07lev1sec26)中所述）。以下调用将重现[图
    14-5](ch14.xhtml#ch14fig5)右侧的图像：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The pieces are put together in much the same way as for the creation of [Figure
    14-5](ch14.xhtml#ch14fig5): the addition of the `geom_histogram` layer to `gg.static`
    invokes the plot, and the addition of `gg.lines` with changes to the default line
    types made with `scale_linetype_manual` marks off the mean and median. If you
    wanted to produce the histogram without these lines, you would simply print the
    `gg.static` object plus `geom_histogram`.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这些部分的组合方式与[图 14-5](ch14.xhtml#ch14fig5)的创建方法非常相似：将`geom_histogram`层添加到`gg.static`中以调用图形，而将`gg.lines`添加并通过`scale_linetype_manual`修改默认线条类型以标记均值和中位数。如果你想要生成没有这些线条的直方图，只需打印`gg.static`对象加上`geom_histogram`即可。
- en: 'As you get more experienced with `ggplot2`, you’ll find yourself leaning toward
    either `ggplot` or `qplot`, depending on the application. The help file in `?ggplot`
    provides a good description of the typical ways `ggplot` is used and how it stacks
    up against `qplot`. For further information, refer to *ggplot2: Elegant Graphics
    for Data Analysis* by Wickham ([2009](ref.xhtml#ref72)). I’ll use `ggplot` for
    the rest of the plots in this chapter to provide some examples of the syntax of
    the `ggplot` command to compare with the earlier uses of `qplot`.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '随着你对`ggplot2`的熟练度提高，你会发现自己根据应用的不同更倾向于使用`ggplot`或`qplot`。`?ggplot`中的帮助文件提供了对`ggplot`的典型用法的良好描述，并与`qplot`进行了对比。有关更多信息，请参考Wickham的《*ggplot2:
    数据分析的优雅图形*》（[2009](ref.xhtml#ref72)）。我将在本章余下的图形中使用`ggplot`，以提供一些`ggplot`命令语法的示例，并与之前使用`qplot`的情况进行比较。'
- en: '**24.2 Smoothing and Shading**'
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**24.2 平滑和阴影**'
- en: Data visualization using the `ggplot2` package is particularly powerful when
    you want to split features of the plot by one or more categorical variables. This
    is especially apparent when you’re enhancing your plot with features that are
    more difficult to achieve using base R commands.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ggplot2`包进行数据可视化在你想按一个或多个分类变量拆分图形特征时特别强大。特别是在你用更难通过基础R命令实现的功能来增强图形时，这一点尤为明显。
- en: '***24.2.1 Adding LOESS Trends***'
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***24.2.1 添加LOESS趋势***'
- en: When you’re looking at raw data, it’s sometimes difficult to get an overall
    impression of trends without fitting a parametric model (for example, via linear
    regression), which means making assumptions about the nature of these trends.
    This is where *nonparametric smoothing* comes in—you can use certain methods to
    determine how your data appear to behave without fitting a specific model. These
    methods are a flexible aid for interpreting overall trends, whatever their form,
    but the trade-off is that you’re not provided with any specific numeric details
    of the relationships between response and predictors (since you’re not estimating
    any coefficients such as slopes or intercepts) and you lose any reliable ability
    to extrapolate.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当你查看原始数据时，有时很难在不拟合参数模型（例如，通过线性回归）的情况下获得整体趋势的印象，这意味着你需要对这些趋势的性质做出假设。这就是*非参数平滑*的作用——你可以使用某些方法来确定数据的表现方式，而无需拟合特定的模型。这些方法是解释整体趋势的灵活工具，无论它们的形式如何，但其权衡之处在于，你无法提供响应变量和预测变量之间关系的任何具体数值细节（因为你没有估计任何系数，如斜率或截距），而且你也失去了任何可靠的外推能力。
- en: '*Locally weighted scatterplot smoothing (LOESS or LOWESS)* is a nonparametric
    smoothing technique that produces the smoothed trend by using regression methods
    on localized subsets of the data, step-by-step over the entire range of the explanatory
    variable.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*局部加权散点图平滑（LOESS 或 LOWESS）* 是一种非参数平滑技术，通过对数据的局部子集使用回归方法，逐步地在解释变量的整个范围内产生平滑趋势。'
- en: '**NOTE**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*For theoretical details, [Chapter 6](ch06.xhtml#ch06) of* Applied Nonparametric
    Regression *([Härdle, 1990](ref.xhtml#ref29)), as well as [Chapters 2](ch02.xhtml#ch02)
    and [3](ch03.xhtml#ch03) of* Introduction to Nonparametric Regression *([Takezawa,
    2006](ref.xhtml#ref64)), provide clear discussions of LOESS smoothers.*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*有关理论细节，[第 6 章](ch06.xhtml#ch06) 的《应用非参数回归*（[Härdle, 1990](ref.xhtml#ref29))，以及《非参数回归导论*（[Takezawa,
    2006](ref.xhtml#ref64))的[第 2 章](ch02.xhtml#ch02) 和[第 3 章](ch03.xhtml#ch03) 提供了
    LOESS 平滑器的清晰讨论。*'
- en: 'For an illustration, load the `MASS` package and return your attention to the
    `survey` data frame. First, create a new data frame object with any missing values
    deleted to avoid default warning messages:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了举例说明，加载 `MASS` 包并返回注意到 `survey` 数据框。首先，创建一个新的数据框对象，删除任何缺失值，以避免默认的警告消息：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Then, after loading `ggplot2`, execute the following to produce the image on
    the left of [Figure 24-1](ch24.xhtml#ch24fig1).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，加载 `ggplot2` 后，执行以下命令生成[图 24-1](ch24.xhtml#ch24fig1)左侧的图像。
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The call to `ggplot` initializes the object and sets the default mapping of
    handspan on the *x*-axis and height on the *y*-axis. The addition of `geom_point`
    adds the points, using color and point type to differentiate between males and
    females. The addition of `geom_smooth` superimposes the LOESS smoother. By default,
    a 95 percent confidence interval for the estimated trend is marked off by a transparent
    gray-shaded area.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `ggplot` 会初始化对象并设置默认的映射：手掌跨度作为 *x* 轴，身高作为 *y* 轴。添加 `geom_point` 会添加点，并使用颜色和点类型来区分男性和女性。添加
    `geom_smooth` 会叠加 LOESS 平滑曲线。默认情况下，估算趋势的 95% 置信区间会通过一个透明的灰色阴影区域标出。
- en: '![image](../images/f24-01.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f24-01.jpg)'
- en: '*Figure 24-1: Showcasing* `ggplot2` *(left) and base R graphics (right) for
    display of nonparametrically estimated trends via LOESS*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 24-1：展示* `ggplot2` *（左）和基础 R 图形（右）用于显示通过 LOESS 估算的非参数趋势*'
- en: 'Now I’ll demonstrate how to produce a similar result using base R graphics.
    Although there are base R functions, such as `scatter.smooth`, that can produce
    a scatterplot with the smoothed trend relatively quickly, to be able to do things
    such as shade in the confidence interval region, it’s helpful to be able to build
    the plot up piece by piece. Compare the relative ease of the `ggplot2` approach
    with the following base R code, which produces the image on the right of [Figure
    24-1](ch24.xhtml#ch24fig1):'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我将演示如何使用基础 R 图形生成类似的结果。尽管有基础 R 函数，如 `scatter.smooth`，可以相对快速地生成带有平滑趋势的散点图，但为了能够做一些例如给置信区间区域加阴影的操作，能够一步步构建图形是非常有用的。请比较以下基础
    R 代码与 `ggplot2` 方法的相对简便性，后者生成了[图 24-1](ch24.xhtml#ch24fig1)右侧的图像：
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The first line plots the raw data, and the second line uses the built-in `loess`
    function to provide the smoothed trend—the syntax is identical to that of `lm`.
    Just as with linear models fitted by `lm`, for drawing to begin, you need to set
    up a fine sequence of values of the *x*-axis variable at which to obtain the point
    estimates and their standard errors; this is achieved with `seq` in the third
    line, followed by `predict` in the fourth line with the `se` argument set to `TRUE`.
    This results in the object `sm`, a list with components `$fit` and `$se` as usual.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行绘制了原始数据，第二行使用内置的 `loess` 函数提供了平滑的趋势——语法与 `lm` 完全相同。就像使用 `lm` 拟合的线性模型一样，在开始绘制之前，你需要为
    *x* 轴变量设置一个精细的数值序列，用于获取点估计及其标准误差；这在第三行通过 `seq` 实现，然后在第四行使用 `predict`，并将 `se` 参数设置为
    `TRUE`。这样会得到一个对象 `sm`，它是一个包含 `$fit` 和 `$se` 组件的列表。
- en: The smoothed trend is then drawn, using `sm$fit` in a call to `lines`. Finally,
    a rough 95 percent confidence interval is calculated for each of the predicted
    values as the `sm$fit` elements plus and minus twice the corresponding standard
    errors in `sm$se`. This is done directly in the call to `polygon`, which draws
    the gray band based on the vertices formed by the confidence interval (therein,
    the `rev` command is used to reverse the entries in the given `handseq` vector).
    You need to instruct the gray-filled shape to be transparent with a call to the
    ready-to-use `adjustcolor` command (the argument `alpha.f` takes a value from
    0, which is fully transparent, to 1, which is fully opaque); setting `alpha.f=0.5`
    sets 50 percent opacity of the specified `"gray"`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，平滑的趋势会通过 `sm$fit` 调用 `lines` 来绘制。最后，为每个预测值计算一个粗略的 95% 置信区间，计算方式是将 `sm$fit`
    元素加上和减去 `sm$se` 中相应标准误差的两倍。这是在调用 `polygon` 时直接完成的，它根据置信区间形成的顶点绘制了灰色带（其中，`rev`
    命令用于反转给定 `handseq` 向量中的条目）。你需要通过调用现成的 `adjustcolor` 命令，指示灰色填充形状透明（`alpha.f` 参数的值从
    0（完全透明）到 1（完全不透明）不等）；设置 `alpha.f=0.5` 就设置了指定的 `"gray"` 的 50% 透明度。
- en: 'All that, and a legend hasn’t been put in yet! This example certainly exposes
    the extra effort the base R version of the image requires, not just in terms of
    the length of the script but also for the whole process of thinking about its
    construction (for example, putting together the vertices of a polygon for the
    confidence region appropriately and remembering to adjust the opacity of the filled
    shape to prevent any preplotted content being covered up). This becomes even more
    apparent the moment you become a little more ambitious with such features. Suppose
    you wanted to superimpose smoothers for each sex separately; this would require
    separate estimation of the LOESS functions and a rethink of the plotting strategy.
    However, this addition is simple in `ggplot2` terms, simply requiring a change
    in the aesthetic mapping of the relevant geom. The following code produces [Figure
    24-2](ch24.xhtml#ch24fig2):'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切，还没有添加图例！这个例子确实揭示了基础 R 版本的图像所需的额外努力，不仅体现在脚本的长度上，还体现在整个思考构建过程（例如，正确地将多边形的顶点组合起来以形成置信区域，并记得调整填充形状的透明度，以防止任何预绘制的内容被遮盖）上。当你在这些功能上稍微变得更有雄心时，这一点变得更加明显。假设你想分别为每个性别叠加平滑线；这将需要分别估计
    LOESS 函数并重新考虑绘图策略。然而，在 `ggplot2` 中，这个添加非常简单，只需要改变相关几何体的美学映射。以下代码生成了[图 24-2](ch24.xhtml#ch24fig2)：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: All that’s happened is that the aesthetic mapping for color and point type (`col=Sex`
    and `shape=Sex`, respectively) has shifted so that instead of being specific to
    the plotted points only, it’s part of the default mapping declared in the initialization
    call to `ggplot`. Any layer added afterward (that doesn’t reassign the mapping)
    will follow this default, as is the case for both `geom_point` and `geom_smooth`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所发生的唯一变化是，颜色和点的类型（`col=Sex` 和 `shape=Sex`）的美学映射发生了变化，因此，它不再仅限于绘制的点，而是成为了在初始化调用
    `ggplot` 时声明的默认映射的一部分。任何后续添加的图层（如果没有重新分配映射）都将遵循这个默认设置，就像 `geom_point` 和 `geom_smooth`
    一样。
- en: '**NOTE**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*The implementation of LOESS and other trend smoothers depends on you specifying
    the amount of smoothing you want; this is controlled by the proportion of the
    data to use as each localized weighted subset, for each step/location in the estimation
    procedure. A larger proportion leads to a smoother, less variable trend estimate
    than a smaller proportion. This value, referred to as the* span*, can be set by
    the optional argument* `span` *in either* `loess` *or* `geom_smooth`*. For quick
    data exploration, however, the default value of 0.75 is usually adequate. You
    can try experimenting with this on the example plots in this section to see the
    effects on the respective trends.*'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*LOESS 和其他趋势平滑方法的实现取决于你指定的平滑程度；这由用于每个步骤/位置的局部加权子集的数据比例控制。在估计过程中，较大的比例会导致更平滑、变化较小的趋势估计，而较小的比例则会产生更具变化性的趋势估计。这个值称为*
    span*，可以通过 `loess` 或 `geom_smooth` 中的可选参数* `span` *来设置。然而，对于快速的数据探索，默认值 0.75 通常是足够的。你可以尝试在本节中的示例图中进行实验，看看它对各自趋势的影响。*'
- en: '![image](../images/f24-02.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f24-02.jpg)'
- en: '*Figure 24-2: Illustrating separate LOESS smoothers for categorical subsets
    of data, a result of a simple change in aesthetic mapping, with* `ggplot2` *functionality*'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 24-2：说明对数据的类别子集分别应用 LOESS 平滑方法，结果是简单的美学映射变化，使用* `ggplot2` *功能*'
- en: '***24.2.2 Constructing Smooth Density Estimates***'
  id: totrans-43
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***24.2.2 构建平滑密度估计***'
- en: The idea of smoothing isn’t limited to scatterplot trends. *Kernel density estimation
    (KDE)* is a method for producing a smooth estimate of a probability density function,
    based on observed data. Briefly, KDE involves assigning a scaled probability function
    (the *kernel*) to each observation in a data set and summing them all to give
    an impression of the distribution of the data set as a whole. It’s basically a
    sophisticated version of a histogram. For theoretical details, the text by Wand
    and Jones ([1995](ref.xhtml#ref70)) is a good reference.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 平滑的思想不仅限于散点图趋势。*核密度估计（KDE）* 是一种基于观测数据生成概率密度函数平滑估计的方法。简而言之，KDE 的过程是为数据集中的每一个观测值分配一个缩放的概率函数（即
    *核*），并将这些核加总，以呈现数据集整体的分布。这基本上是直方图的一个高级版本。有关理论细节，Wand 和 Jones（[1995](ref.xhtml#ref70)）的著作是一个很好的参考。
- en: 'To illustrate this method, consider the built-in `airquality` data frame; enter
    `?airquality` at the prompt to open the documentation, which tells you it contains
    a number of measurements taken of the air in New York over several months. A basic
    plot of the kernel estimate of the density of the temperature measurements is
    provided with the following line and shown on the left of [Figure 24-3](ch24.xhtml#ch24fig3):'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这种方法，考虑使用内置的 `airquality` 数据框；在提示符下输入 `?airquality` 打开文档，它会告诉你该数据框包含了纽约市在几个月内测量的空气质量数据。使用以下代码绘制温度数据的核密度估计基本图，并显示在[图
    24-3](ch24.xhtml#ch24fig3)的左侧：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Such a plot is relatively easy to create with base R graphics as well, using
    the built-in `density` command to implement KDE for a given data vector. However,
    `ggplot2` lets you dress up the plot using aesthetic mappings with relative ease—a
    big draw for fans of `ggplot2`. For example, suppose you want to visualize the
    density estimates for temperature separately according to the month of observation.
    First, execute the following code:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的图表也可以通过基础 R 图形轻松创建，使用内置的 `density` 命令对给定的数据向量实现 KDE。然而，`ggplot2` 允许你通过美学映射轻松装饰图表，这对
    `ggplot2` 的爱好者来说是一个很大的吸引力。例如，假设你想根据观测的月份分别可视化温度的密度估计。首先，执行以下代码：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![image](../images/f24-03.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f24-03.jpg)'
- en: '*Figure 24-3: Visualizing temperature distributions in the* `airquality` *data
    frame via KDE, using* `ggplot2` *functionality*'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 24-3：通过 KDE 可视化* `airquality` *数据框中的温度分布，使用* `ggplot2` *功能*'
- en: 'This has created a copy of the `airquality` data frame in your workspace and
    recoded the originally numeric `Month` vector as a factor vector (as required
    for `ggplot2` mappings), labeling the entries appropriately. Then, using `air`,
    the following code produces the right-hand plot in [Figure 24-3](ch24.xhtml#ch24fig3):'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这会在你的工作区中创建一个 `airquality` 数据框的副本，并将原本是数字型的 `Month` 向量重新编码为因子向量（这是 `ggplot2`
    映射所要求的），并为条目适当地标注。然后，使用 `air`，以下代码生成了[图 24-3](ch24.xhtml#ch24fig3)右侧的图：
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The different densities are clearly identified by different color fills, set
    using `fill=Month` in `aes` in the plot initialization mapped out by `ggplot`.
    You additionally supply `alpha=0.4` to `geom_density` to set 40 percent opacity
    so you can see all five curves clearly. The remaining calls to `ggtitle` and `labs`
    simply tidy up the main and axis titles. Features of the distributions of these
    measurements are as you might expect—temperatures for July, the hottest month,
    are centered over a far higher range of values than, say, those for May.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的密度通过不同的颜色填充来清晰标识，这在`ggplot`初始化时通过`aes`中的`fill=Month`设置。你还可以将`alpha=0.4`传递给`geom_density`，设置40%的透明度，以便清楚地看到所有五条曲线。剩余的`ggtitle`和`labs`调用则简洁地整理了主标题和坐标轴标题。这些测量值的分布特征正如你所预期的那样——例如，七月是最热的月份，温度集中在比五月高得多的范围内。
- en: '**NOTE**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*Just like LOESS techniques, the precise appearance of kernel-estimated probability
    density function is dependent on the amount of smoothing employed. Like the binwidth
    in the construction of a histogram, the quantity of interest in KDE is referred
    to as the* bandwidth *or* smoothing parameter*—a larger bandwidth imposes greater
    smoothing over the range of the data. By default, the bandwidth is automatically
    chosen using a data-driven technique in these examples. This default level of
    smoothing is generally acceptable for simple exploration of your data.*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*就像LOESS技术一样，核估计的概率密度函数的精确外观依赖于所使用的平滑程度。就像构建直方图时的binwidth一样，KDE中的兴趣量称为*带宽*或*平滑参数*——更大的带宽在数据范围内施加更大的平滑。在这些示例中，带宽的默认选择是通过数据驱动的技术自动选择的。这种默认的平滑级别通常适用于数据的简单探索。*'
- en: '**24.3 Multiple Plots and Variable-Mapped Facets**'
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**24.3 多图和变量映射的面板**'
- en: In [Section 23.1.4](ch23.xhtml#ch23lev2sec225), you saw different ways in which
    several traditional R plots can be viewed or laid out in a single graphics device.
    The same methods, such as setting `mfrow` in a call to `par` or compartmentalizing
    the device using `layout`, can’t be used for `ggplot2` graphics. There are other
    functions, though, that allow independent `ggplot2` plots to populate a single
    device. True to form, `ggplot2` also offers a convenient way to consider multiple-plot
    graphics using facets, where the images are all drawn in one go.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第23.1.4节](ch23.xhtml#ch23lev2sec225)中，你看到了几种传统R图形如何在一个图形设备中查看或布局的不同方法。类似的方式，例如在调用`par`时设置`mfrow`或使用`layout`对设备进行分区，无法应用于`ggplot2`图形。不过，仍有其他函数可以让独立的`ggplot2`图形填充一个设备。与其一贯的风格一致，`ggplot2`还提供了一种方便的方法，通过面板来处理多图形，其中所有图形都可以一次性绘制。
- en: '***24.3.1 Independent Plots***'
  id: totrans-58
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***24.3.1 独立图形***'
- en: First, let’s say you have several `ggplot2` plots that you’ve created independently
    of one another and that you’d like to arrange as a single image. A quick way to
    do this is to use the `grid.arrange` function provided in the contributed `gridExtra`
    package ([Auguie, 2012](ref.xhtml#ref05)). Install the package by running `install.packages("gridExtra")`
    at the prompt (you’ll need an Internet connection).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，假设你已经独立创建了多个`ggplot2`图形，并希望将它们安排为一张单一的图像。实现这一点的快速方法是使用贡献包`gridExtra`中提供的`grid.arrange`函数
    ([Auguie, 2012](ref.xhtml#ref05))。通过在提示符下运行`install.packages("gridExtra")`来安装该包（你需要有互联网连接）。
- en: 'To illustrate the use of `grid.arrange`, continue with the `air` object—the
    copy of `airquality` you created in [Section 24.2](ch24.xhtml#ch24lev1sec83) with
    the factor `Month` column. Now, consider the following three `ggplot2` objects,
    which I’ll explain further in a moment:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明如何使用`grid.arrange`，继续使用`air`对象——你在[第24.2节](ch24.xhtml#ch24lev1sec83)中创建的带有`Month`列的`airquality`副本。现在，考虑以下三个`ggplot2`对象，我稍后会进一步解释：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Execute `library("gridExtra")` to load the required package. To view `gg1`,
    `gg2`, and `gg3` in one window, simply call the following, which produces [Figure
    24-4](ch24.xhtml#ch24fig4):'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`library("gridExtra")`来加载所需的包。要在一个窗口中查看`gg1`、`gg2`和`gg3`，只需调用以下代码，这将生成[图24-4](ch24.xhtml#ch24fig4)：
- en: '[PRE10]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note that you’ll likely see some warning messages telling you there are missing
    values in the `air` data frame and recommending to resize the window containing
    the plots.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你可能会看到一些警告信息，告诉你`air`数据框中有缺失值，并建议调整显示图形的窗口大小。
- en: '![image](../images/f24-04.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f24-04.jpg)'
- en: '*Figure 24-4: A series of three* `ggplot2` *graphics of the* `airquality` *data,
    plotted in the same device window via* `grid.arrange` *in the* `gridExtra` *package.
    Top: A time series of the temperatures by day, distinguishing between months and
    wind speed, with an overall LOESS trend with a 95 percent CI. Middle: Kernel density
    estimates of the distributions of solar radiation by month. Bottom: A scatterplot
    of temperature by wind speed, using color to delineate month and point size to
    reference ozone level. Separately fitted simple linear models of temperature on
    wind speed, split by month, along with 90 percent CIs, are superimposed.*'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '*图24-4：一系列三幅*`ggplot2`*图形，展示了*`airquality`*数据，通过*`grid.arrange`*在*`gridExtra`*包中绘制在同一设备窗口中。顶部：按天的温度时间序列，区分月份和风速，带有整体LOESS趋势和95%置信区间。中部：按月分布的太阳辐射的核密度估计。底部：温度与风速的散点图，使用颜色区分月份，点大小参考臭氧水平。温度与风速的简单线性回归模型分别拟合，按月份划分，并叠加90%置信区间。'
- en: As you can see, `grid.arrange` is easy to use—you simply create your `ggplot2`
    images first and store them as objects, then provide them directly to the arrangement
    function. `grid.arrange` decides how to produce the final layout based on the
    number of objects you give it (in this case, it’s a column of the three plots).
    You can control the order of the plots by changing the order in which the objects
    are supplied. There are more optional arguments, which you can read about in the
    documentation file `?grid.arrange`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，`grid.arrange`非常易于使用——你只需首先创建你的`ggplot2`图像并将它们存储为对象，然后将它们直接传递给排列函数。`grid.arrange`根据你提供的对象数量来决定如何生成最终布局（在这个例子中，是三幅图的列排布）。你可以通过改变传入对象的顺序来控制图表的排列顺序。还有更多可选的参数，你可以在文档文件`?grid.arrange`中阅读详细内容。
- en: The plots `gg1`, `gg2`, and `gg3` also provide an opportunity to discuss even
    more `ggplot2` capabilities. Since there’s a lot going on, especially in `gg1`
    and `gg3`, I’ll discuss the code for each object separately.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图表`gg1`、`gg2`和`gg3`也为我们提供了讨论更多`ggplot2`功能的机会。由于特别是在`gg1`和`gg3`中涉及的内容较多，我将分别讨论每个对象的代码。
- en: '`gg1` The first plot is of the daily temperature. In setting the default aesthetics
    in `ggplot`, I create a sequence of integers matching the number of rows in `air`,
    to be paired with the relevant `Temp` element. Then `geom_line` and `geom_point`
    add the interconnecting lines and the raw observations themselves, to be added
    to the default aesthetic mapping. The interconnecting lines are set to change
    color according to `Month`. The raw observations also change color according to
    `Month`, and the point sizes change to be proportional to the wind speed readings.
    I include an overall LOESS smoother with its default color changed to `"black"`.
    I remain with the default mapping here—I don’t want separate smoothed trends for
    each month. The final addition of `labs` merely clarifies the axis titles as you’ve
    already seen it used.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`gg1` 第一个图表显示的是每日温度。在`ggplot`中设置默认美学时，我创建了一个整数序列，与`air`中的行数相匹配，并与相关的`Temp`元素配对。然后，`geom_line`和`geom_point`添加了连接线和原始观测数据，并被加入到默认的美学映射中。连接线的颜色根据`Month`变化。原始观测数据的颜色也根据`Month`变化，点的大小与风速读数成正比。我包括了一个整体的LOESS平滑曲线，其默认颜色被更改为`"black"`。我在这里保留默认映射——我不希望每个月都有单独的平滑趋势。最后，添加`labs`仅仅是为了澄清轴标题，正如你已经看到的那样。'
- en: '`gg2` The second plot is a variant of the plot on the right of [Figure 24-3](ch24.xhtml#ch24fig3).
    This time, it shows the estimated densities of the solar radiation readings (in
    angstroms). The opacity is set, as you saw earlier, using `alpha` in `geom_density`.
    It’s also worth noting that I used `expression` in `labs` to approximate the angstrom
    unit symbol, Å, using `ring(A)`.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`gg2` 第二个图表是[图24-3](ch24.xhtml#ch24fig3)右侧图表的变体。这一次，它显示了太阳辐射读数的估计密度（单位为埃）。正如你之前看到的，透明度是通过`geom_density`中的`alpha`设置的。值得注意的是，我在`labs`中使用了`expression`来近似表示埃单位符号Å，使用了`ring(A)`。'
- en: '`gg3` The last is a scatterplot of temperature by wind speed, where you can
    see a negative relationship. The color, again to be assigned to each month, is
    also set as the default aesthetic mapping in `ggplot`. In the call to `geom_point`,
    the aesthetic enhancement is instructed to plot point size as proportional to
    the ozone reading (this is to ensure correct formatting of the corresponding legend,
    in light of the next addition). Here you can see a different kind of use for `geom_smooth`.
    In setting `method="lm"`, the line (or lines) I want superimposed correspond to
    simple linear model fits according to the `x` and `y` aesthetic mappings as predictor
    and response, respectively. Additionally including the factor `Month` in the default
    mapping ensures separate simple linear models are fitted for the temperature on
    wind speed data for each month and colored appropriately (it’s important to note
    that the plotted lines do not reflect a multiple linear model that includes all
    the variables used in the plot). Light, transparent 90 percent CIs are included
    with each regression (`level=0.9` and `alpha=0.2`), and setting `fullrange=FALSE`
    restricts each regression line only to the width of the observed data for each
    month.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`gg3` 最后一张是温度与风速的散点图，其中可以看到负相关关系。颜色（再次为每个月分配）也设置为`ggplot`中的默认美学映射。在调用`geom_point`时，美学增强指示点的大小与臭氧读数成比例（这是为了确保相应图例的正确格式化，考虑到接下来的内容）。在这里，你可以看到`geom_smooth`的另一种使用方式。在设置`method="lm"`时，我想要叠加的线条（或多条线）是根据`x`和`y`美学映射分别作为预测变量和响应变量拟合的简单线性模型。此外，默认映射中包括因子`Month`，确保为每个月的温度与风速数据分别拟合简单线性模型，并进行适当的着色（需要注意的是，绘制的线条并不反映包含图中所有变量的多元线性模型）。每个回归都包括透明度为90%的置信区间（`level=0.9`
    和 `alpha=0.2`），并且通过设置`fullrange=FALSE`，每条回归线的范围仅限于每个月观测数据的宽度。'
- en: '***24.3.2 Facets Mapped to a Categorical Variable***'
  id: totrans-72
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***24.3.2 映射到类别变量的面板***'
- en: If you want independently created `ggplot2` graphics to appear in the same window,
    `grid.arrange` is arguably the best way to deal with them. However, the `ggplot2`
    package offers a flexible alternative to quickly view multiple plots. Often, when
    exploring a data set, you’ll want to create several plots of the same variables
    based on the levels of one or more important categorical variables. This behavior,
    referred to as *faceting*, is familiar territory for `ggplot2` using either the
    `facet_wrap` or the `facet_grid` command.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望独立创建的`ggplot2`图形出现在同一窗口中，`grid.arrange`无疑是处理它们的最佳方式。然而，`ggplot2`包提供了一种灵活的替代方法，可以快速查看多个图形。在探索数据集时，你可能希望根据一个或多个重要类别变量的级别创建多个相同变量的图形。这种行为被称为*面板化*，使用`ggplot2`的`facet_wrap`或`facet_grid`命令是这一领域的常见方法。
- en: 'Let’s focus on the simplest case where you have one categorical variable. Remaining
    with the `air` data frame object, the following line creates a `ggplot2` object
    of the density plots of the New York temperatures shown on the right of [Figure
    24-3](ch24.xhtml#ch24fig3):'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们专注于最简单的情况，即你只有一个类别变量。继续使用`air`数据框对象，以下代码行创建了一个`ggplot2`对象，该对象显示了右侧[图24-3](ch24.xhtml#ch24fig3)中纽约气温的密度图：
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Rather than view all density estimates together, you can create a plot of each
    one separately, displaying them in the same device, with the following three uses
    of `facet_wrap`; the results are at the top left, top right, and bottom of [Figure
    24-5](ch24.xhtml#ch24fig5).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 与其将所有密度估计一起查看，不如将每个密度估计分别绘制出来，并显示在同一个设备中，使用以下三种`facet_wrap`方式；结果如[图24-5](ch24.xhtml#ch24fig5)所示，分别位于左上角、右上角和底部。
- en: '[PRE12]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![image](../images/f24-05.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f24-05.jpg)'
- en: '*Figure 24-5: Three examples of using* `facet_wrap` *to display kernel density
    estimates of the temperature data, split by month*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '*图24-5：使用* `facet_wrap` *显示按月划分的温度数据的核密度估计的三种示例*'
- en: The `facet_wrap` function automates the layout of the multiple plots; a formula
    specifies the faceting variable. In all the previous plots, this is set to `~Month`,
    to be read as “by Month.” The code for the first visualization, given at the top
    left, offers no additional arguments, and without arguments the *x-*and *y*-axes
    of each facet are fixed, so you can compare the plots on the same scale. If you
    don’t want that, you can instruct the axes to be “free,” which means each plot
    is produced on scales specific to its own contents. You can see this in the second
    plot, at the top right in [Figure 24-5](ch24.xhtml#ch24fig5), the line of code
    for which specifies `scales="free"`. You can also opt to free only the horizontal
    or vertical axis with `scales="free_x"` or `scales="free_y"`, respectively. Finally,
    note that facet placement can be tailored by using the `nrow` and `ncol` arguments.
    In the third plot, setting `nrow=1` instructs R to place the plots in one row
    only, giving the horizontal arrangement on the bottom of [Figure 24-5](ch24.xhtml#ch24fig5).
    For further details on placement, you can find the documentation for this command
    at `?facet_wrap`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`facet_wrap`函数自动排列多个图形；公式指定了分面变量。在之前的所有图形中，这个变量被设置为`~Month`，表示“按月份分面”。位于左上角的第一张图的代码没有添加其他参数，并且没有参数时，*x*轴和*y*轴的范围是固定的，这样你可以在相同的尺度上比较图形。如果你不希望如此，你可以指示坐标轴为“自由”，意味着每个图形会根据其自身内容在独立的尺度上显示。你可以在第二张图中看到这一点，位于[图24-5](ch24.xhtml#ch24fig5)的右上角，其代码指定了`scales="free"`。你也可以选择仅将水平或垂直轴设为自由，分别使用`scales="free_x"`或`scales="free_y"`。最后，请注意，通过使用`nrow`和`ncol`参数可以定制分面位置。在第三张图中，设置`nrow=1`指示R将图形仅放置在一行中，生成[图24-5](ch24.xhtml#ch24fig5)底部的水平排列。有关位置的更多细节，你可以在`?facet_wrap`文档中找到相关信息。'
- en: 'The alternative to `facet_wrap`, `facet_grid`, does much the same thing but
    isn’t able to wrap the plots if you’re faceting by only one categorical variable.
    The formula `var1` ~ var2 is interpreted as “facet by `var1` as rows and by `var2`
    as columns.” If you are indeed interested in faceting by only one grouping variable
    in either columns or rows, then simply replace either `var1` or `var2` with a
    dot (`.`). The third image in [Figure 24-5](ch24.xhtml#ch24fig5), for example,
    can just as easily be achieved via `facet_grid` as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`facet_wrap`的替代方法，`facet_grid`，执行的操作大致相同，但如果仅通过一个分类变量进行分面时，无法将图形进行换行。公式`var1`
    ~ var2的含义是“按`var1`进行行分面，按`var2`进行列分面”。如果你确实只希望通过一个分组变量进行列或行的分面，只需将`var1`或`var2`中的一个替换为点（`.`）。例如，[图24-5](ch24.xhtml#ch24fig5)中的第三张图可以通过`facet_grid`轻松实现，如下所示：'
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The next example, however, shows `facet_grid` in action with two grouping variables.
    Turn your attention again to the `diabetes` data frame in the `faraway` package.
    After loading the package, the following code creates the object with `diab` as
    the data frame of interest and with missing-value rows deleted, producing [Figure
    24-6](ch24.xhtml#ch24fig6):'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，下一个例子展示了`facet_grid`在两个分组变量下的应用。再次关注`faraway`包中的`diabetes`数据框。在加载该包后，以下代码创建了包含`diab`数据框的对象，并删除了缺失值行，从而生成[图24-6](ch24.xhtml#ch24fig6)：
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The initial call to `ggplot` tells R to use `diab` and plot total cholesterol
    against age. Then an addition of `geom_point` sets the shape, size, and color
    of each plotted point to change according to the county location, the weight,
    and the height of the individuals, respectively (as you’ve already seen for point
    size based on a continuous variable, point color is also automatically changed
    to vary on a continuum if the correspondingly mapped aesthetic variable isn’t
    a factor).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 初始调用`ggplot`命令告诉R使用`diab`数据框，并绘制总胆固醇与年龄的关系。接着，添加`geom_point`设置每个点的形状、大小和颜色，分别根据县位置、体重和身高的不同而变化（如你已经看到的，基于连续变量的点大小，点的颜色也会自动根据映射的美学变量变化，如果该变量不是因子的话）。
- en: '![image](../images/f24-06.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f24-06.jpg)'
- en: '*Figure 24-6: Illustrating two-way faceting in* `ggplot2`*, using the* `diabetes`
    *data frame from the* `faraway` *package. Plots of cholesterol level against age,
    along with simple linear model fits, are faceted according to sex (rows) and body
    frame type (columns). Points are colored and sized according to weight and height,
    respectively, and two different point types differentiate the two county locations
    in Virginia of the study participants.*'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: 'So far, those commands have still defined only a single scatterplot. With the
    addition of the call to `facet_grid`, the formula `gender~frame` separates the
    plots into a different scatterplot for males/females (as rows) and for each of
    the three body frame types: small/medium/large (as columns). You set simple linear
    model fits to accompany each plot based on the default aesthetic mapping (cholesterol
    on age) with a call to `geom_smooth`, and a final call to `labs` clarifies the
    vertical axis title.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: The plots themselves reveal, generally, some of the trends you’ll have picked
    up on an earlier analysis of these data ([Section 21.5.2](ch21.xhtml#ch21lev2sec203)).
    Increasing age tends to be associated with an increase in mean cholesterol, though
    that relationship seems, at least visually, less prominent for males. The overall
    smaller size of the points in the small frame column on the left makes sense—those
    with a smaller frame will typically weigh less than those with larger frames.
    There is also a tendency for the plots on the bottom row (females) to be of a
    darker shade than those along the top row—indicating that on average females are
    typically shorter than males. Any differences between the participants from the
    two counties, however, is difficult to discern—there doesn’t seem to be a systematic
    departure of the pattern of the Buckingham symbols (•) from that of the Louisa
    symbols (▴). (Remember, though, if you’re trying to understand the complex, potentially
    interactive relationships in your multivariate data, fitting an appropriate statistical
    model is preferable over plots alone.)
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: These elegant plots serve to further highlight the relative ease with which
    the `ggplot2` package can produce complex graphics—typically involving partitioning
    the observations by one or more factors—both in terms of an individual image or
    an arrangement of images. Although similar plots are of course still possible
    using base R methods, that approach demands a somewhat finer or lower-level handling
    of the details of your data subsets, as well as any varying aesthetic features.
    This doesn’t mean base R graphics are redundant or should be ignored (you’ll see
    some nice new plots achieved with traditional commands in [Chapter 25](ch25.xhtml#ch25))—it’s
    just that you can create certain graphical displays with less coding effort (and
    usually a prettier end result) by utilizing Wickham’s well-received implementation
    of the grammar of graphics.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise 24.1**'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Load the `MASS` package and inspect the help file for the `UScereal` data. This
    data frame provides nutritional and other information concerning breakfast cereals
    for sale in the United States in the early 1990s.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: Create a copy of the data frame; name it `cereal`. To ease plotting, collapse
    the `mfr` column (manufacturer) of `cereal` to be a factor with only three levels,
    with the corresponding labels `"General Mills"`, `"Kelloggs"`, and `"Other"`.
    Also, convert the `shelf` variable (shelf number from floor) to a factor.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using `cereal`, construct and store two `ggplot` objects.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A scatterplot of calories on protein. Points should be colored according to
    shelf position and shaped according to manufacturer. Include simple linear regression
    lines for calories on protein, split according to shelf position. Ensure tidy
    axis and legend titles.
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A set of kernel estimates of calories, with filled color differentiating shelf
    positions. Use 50 percent opaque fills, and again ensure tidy axis and legend
    titles.
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Arrange the two plots in (b) on a single device.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Produce a faceted graphic of calories on protein, with each panel corresponding
    to a manufacturer as defined in your `cereal` object. A LOESS smoother with a
    90 percent span should be superimposed upon each scatterplot. In addition, the
    points should be colored according to sugar content, sized according to sodium
    content, and shaped according to shelf position.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Load the `car` package (downloading and installing it first if you haven’t already)
    and consider the `Salaries` object—a data frame detailing the salaries (in US
    dollars) of 397 academics working in the United States during the 2008–2009 school
    year ([Fox and Weisberg, 2011](ref.xhtml#ref25)). An inspection of the help file
    `?Salaries` informs you of the present variables, which, in addition to the salary
    figure, include each academic’s rank, sex, and research discipline (as factors)
    as well as the number of years of service.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Produce a `ggplot` object, named `gg1`, of a scatterplot of salary on the vertical
    axis against years of service on the horizontal axis. Color should be used to
    distinguish between males and females, along with sex-specific LOESS trends, and
    ensure axis and legend titles are understandable. View your plot.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create the following three additional plot objects, again ensuring tidy axis
    and legend titles. Name the following `gg2`, `gg3`, and `gg4`, respectively:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Side-by-side boxplots of salary, split by rank. Each boxplot should be further
    split up according to sex (this can be done simply in the default aesthetic mapping—try
    assigning the sex variable to either `col` or `fill`).
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Side-by-side boxplots of salary, split by discipline, with each discipline split
    further by sex using color or fill.
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Kernel density estimates of salary, using 30 percent opaque fills to distinguish
    rank.
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Display your four plot objects (`gg1`, `gg2`, `gg3`, and `gg4`) from (e) and
    (f) in a single device.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Finally, plot the following:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A series of kernel density estimates of salary using 70 percent opaque fills
    to distinguish between males and females, faceted by academic rank.
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scatterplots of salary on years of service, using color to distinguish between
    males and females, faceted by discipline as rows and by academic rank as columns.
    Each scatterplot should have a sex-specific simple linear regression line with
    confidence band superimposed and have free horizontal scales.
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '**24.4 Interactive Tools in ggvis**'
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To wrap up this chapter, I’ll touch on a relatively new addition to the “gg”
    family, `ggvis`, by Chang and Wickham ([2015](ref.xhtml#ref10)). The package enables
    you to design flexible statistical plots that the end user can interact with.
    The results are provided as web graphics. You’ll see the image pop up as a new
    tab in your default web browser (if you’re using the RStudio IDE—see [Appendix
    B](app01.xhtml#app01)—the `ggvis` graphics are embedded within the Viewer pane).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: As a cautionary note, be aware that `ggvis` is, at the time of writing, still
    under development by its authors. New functionality is being added and bugs addressed.
    If you’re interested in the functionality, visit the `ggvis` website at *[http://ggvis.rstudio.com/](http://ggvis.rstudio.com/)*.
    The site contains a beginner-friendly tutorial and recipe book of things that
    are currently possible. Here, I’ll just give you an overview of `ggvis`.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: 'Install the `ggvis` package along with its dependencies and then load it with
    a call to `library("ggvis")`. Also make sure you have access to the student survey
    data, `survey`, by loading the `MASS` package. Create the following object to
    be used in the upcoming examples:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The common way to begin a `ggvis` graphic is to declare the data frame of interest,
    followed by a call to `ggvis` that defines the variables to be used and then to
    pile on the layers. When you use the variables from the data frame, they must
    be prefaced by a `~`, which explicitly tells R that you’re referring to a column
    of that data frame and not another object of the same name somewhere else. To
    add functions in the object definition, you don’t use `+` as in `ggplot2`, but
    `%>%` (called a *pipe*). The equivalents of the `geom_` functions in `ggplot2`
    are prefaced by `layer_` in `ggvis`.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s start with a simple static plot. The topmost image of [Figure 24-7](ch24.xhtml#ch24fig7),
    a histogram of the height measurements, can be obtained with the following execution:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `surv` data frame is declared, and then you pipe to `ggvis`, which instructs
    the `~Height` variable to be mapped to the *x*-axis. Last, a pipe to `layer_histograms`
    produces the graphic, which assigns a default binwidth based on the range of the
    *x*-mapped data.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: So what? You’ve already created lot of histograms. But wouldn’t it be great
    if you could play with the value of the binwidth without needing to create static
    plot after static plot? The `input_` collection of commands in `ggvis` allows
    you to instruct the resulting graphic to take interactive input. Consider the
    following code; [Figure 24-7](ch24.xhtml#ch24fig7) shows my result.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 那又怎样？你已经创建了很多直方图。但如果你能够在不需要一个又一个静态图的情况下调整 binwidth 的值，那不是更好吗？`ggvis` 中的 `input_`
    命令集允许你指示生成的图形接受交互输入。参考以下代码；[图 24-7](ch24.xhtml#ch24fig7) 展示了我的结果。
- en: '[PRE17]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![image](../images/f24-07.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f24-07.jpg)'
- en: '*Figure 24-7: Histograms of the height observations from the* `survey` *data
    frame, using* `ggvis`*. Top: Default static plot. Bottom: The result of incorporating
    a slider button tied to the binwidth—the user can interact with, and immediately
    see, the effect of altering the bins.*'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 24-7：来自* `survey` *数据框的身高观察值的直方图，使用* `ggvis` *。上图：默认静态图。下图：包含与 binwidth
    关联的滑动按钮的结果——用户可以与之互动，并立即看到更改 bins 的效果。*'
- en: Here, the `width` argument that controls the feature of interest is instructed
    to take the result of `input_slider`, which sets up an interactive slider button.
    The range of the slider values for `width` is set as `1` to `15` (inclusive),
    and the optional argument `label` provides a title for the interactive gadget.
    Last, using `fill` in `layer_histogram` sets the color of the bars. Note the particular
    assignment `fill:="gray"` uses `:=`, not just `=`. The `=` alone is used in `ggvis`
    for mapping variables, that is, when the feature of interest is to be passed a
    variable subject to change, essentially like an aesthetic mapping in `ggplot2`.
    The combination of `:=` should be interpreted as a set constant, that is, when
    you simply intend to universally fix a certain feature.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，控制感兴趣特征的 `width` 参数被设置为 `input_slider` 的结果，从而设置了一个交互式滑动按钮。`width` 的滑动值范围设置为
    `1` 到 `15`（包括15），可选的 `label` 参数为交互式工具提供了标题。最后，使用 `layer_histogram` 中的 `fill` 设置条形的颜色。请注意，特定的赋值
    `fill:="gray"` 使用的是 `:=`，而不是 `=`。单独使用 `=` 在 `ggvis` 中用于变量映射，即当感兴趣的特征需要传递一个可变的变量时，本质上类似于
    `ggplot2` 中的美学映射。`:=` 的组合应被理解为一个常量设置，也就是说，当你简单地打算全局固定某个特征时。
- en: Once the code successfully executes, you can experiment with sliding the button
    for smaller and larger binwidths. It’s interesting to gauge just how much your
    interpretation of the distribution changes along with it. As the text printed
    out beneath the executed commands in the console tells you, you have to exit the
    interactive plot to use R again. Pressing ESC will terminate the interactivity
    and return control to the user at the prompt.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦代码成功执行，你可以尝试滑动按钮来调整更小或更大的 binwidth。观察你的分布图解释随着调整而变化的情况很有意思。如同控制台中执行命令下方输出的文字所示，你必须退出交互式图形才能再次使用
    R。按下 ESC 键将终止交互并将控制权交回给用户。
- en: Other kinds of interactive abilities include `input_select` (for a drop-down
    menu), `input_radiobuttons` (radio button options), and `input_checkbox` (for
    checkboxes). You can even set up interactive text or numeric input boxes with
    `input_numeric`. See the relevant help files or the `ggvis` website for further
    details.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 其他类型的交互功能包括 `input_select`（用于下拉菜单）、`input_radiobuttons`（单选按钮选项）和 `input_checkbox`（用于复选框）。你甚至可以使用
    `input_numeric` 设置交互式文本或数字输入框。有关更多详细信息，请参阅相关帮助文件或 `ggvis` 网站。
- en: 'As another example based on the `surv` data frame, let’s try a scatterplot.
    Starting again with a simple static plot, run the following:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 作为另一个基于 `surv` 数据框的示例，我们尝试一个散点图。从一个简单的静态图开始，运行以下代码：
- en: '[PRE18]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: I won’t show this result here, but you can see from the call to `ggvis` that
    you’ll be plotting height against handspan and that you’re universally enlarging
    the points as well as setting a universal level of 30 percent opacity. The last
    pipe to `layer_points` produces the image. As with the static plot of the histogram,
    since there’s no interactivity, you don’t need to “exit” the plot—you’re returned
    control at the console prompt immediately.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里不会展示这个结果，但你可以从 `ggvis` 的调用中看到，你将绘制身高与手掌跨度之间的关系，并且你会普遍放大点的大小，同时设置 30% 不透明度的全局水平。最后一条管道传递给
    `layer_points` 生成图像。与静态直方图的情形一样，由于没有交互性，你无需“退出”图形——控制权会立即返回到控制台提示符处。
- en: 'For a more interesting graphic, try this:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果想要更有趣的图形，可以尝试如下：
- en: '[PRE19]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: First, three objects are created for the interactive bits. A set of radio buttons
    specifies the color of the plotted points according to one of three possible categorical
    variables (`Sex`, `Smoke`, or `Exer`), and two slider buttons control the point
    size and opacity. Note that when you intend to use variables from the data frame
    as ingredients for interactive behavior, you need to supply their exact names
    as a vector of character strings and set the optional `map=as.name`; this is done
    when defining the `filler` object. In the subsequent call to `ggvis`, you pass
    `filler` to `fill`, using `=`. The two slider buttons in the objects `sizer` and
    `opacityer` are passed to the relevant arguments with `:=` since they don’t depend
    on variables in the data frame. The call to `layer_points` generates the plot,
    and additional pipes to `add_axis` and `add_legend` simply tidy up the *x*-axis
    and legend titles from their defaults.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为交互部分创建三个对象。一组单选按钮指定根据三个可能的类别变量之一（`Sex`、`Smoke` 或 `Exer`）来设置绘制点的颜色，两个滑块按钮控制点的大小和透明度。注意，当你打算使用数据框中的变量作为交互行为的要素时，需要将它们的精确名称作为字符字符串向量提供，并设置可选的
    `map=as.name`；这是在定义 `filler` 对象时完成的。在随后的 `ggvis` 调用中，使用 `=` 将 `filler` 传递给 `fill`。对象
    `sizer` 和 `opacityer` 中的两个滑块按钮通过 `:=` 传递给相关参数，因为它们不依赖于数据框中的变量。调用 `layer_points`
    生成图形，接下来的管道操作 `add_axis` 和 `add_legend` 仅仅是将 *x* 轴和图例标题从默认值调整为更整洁的形式。
- en: The top of [Figure 24-8](ch24.xhtml#ch24fig8) shows a screenshot of the result,
    where I’ve selected the point color to vary according to the exercise frequency
    variable, reduced the point size, and chosen a moderate-to-high level of opacity.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 24-8](ch24.xhtml#ch24fig8) 的顶部展示了结果的截图，我已选择点的颜色根据运动频率变量变化，减少了点的大小，并选择了中到高透明度。'
- en: '![image](../images/f24-08.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f24-08.jpg)'
- en: '*Figure 24-8: Two examples of* `ggvis` *scatterplots of height on handspan
    of the student survey data. Top: Color (fill) changed using radio buttons based
    on sex, smoking status, or exercise frequency and slider buttons for point size
    and opacity. Bottom: Splitting points by sex using color and superimposing sex-specific
    LOESS smoothers and corresponding CIs; their smoothing span is controllable via
    a slider button.*'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 24-8：* `ggvis` *散点图的两个例子，展示了学生调查数据中的身高与手掌跨度关系。顶部：通过单选按钮根据性别、吸烟状态或运动频率更改颜色（填充），并使用滑块按钮调整点的大小和透明度。底部：通过颜色将点按性别划分，并叠加性别特定的
    LOESS 平滑曲线及相应的置信区间；其平滑跨度可以通过滑块按钮进行控制。*'
- en: 'Finally, let’s produce the same scatterplot but settle on using sex to color
    the points. You can add separate LOESS smoothers to males and females and dynamically
    control the degree of smoothing using a slider button. This last example, a screenshot
    of which appears on the bottom of [Figure 24-8](ch24.xhtml#ch24fig8), is the result
    of executing the following code:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们生成相同的散点图，但选择使用性别来为点着色。你可以为男性和女性分别添加 LOESS 平滑曲线，并使用滑块按钮动态控制平滑的程度。这个最后的例子，其截图出现在
    [图 24-8](ch24.xhtml#ch24fig8) 的底部，是执行以下代码的结果：
- en: '[PRE20]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: LOESS smoothers are added with the `layer_smooths` command, whose `span` argument,
    the target parameter of interest, is assigned an `input_slider`. Its range of
    possible values is set as usual, and the optional `value` argument (also applicable
    in other `input_` functions) sets the starting value when the plot is first initialized.
    Additionally, the `se=TRUE` argument to `layer_smooths` ensures 95 percent CIs
    accompany the smoothed trends. Note that the pipe to `layer_smooths` is preempted
    by a pipe through `group_by(Sex)`. Without it, the smoothers would simply be applied
    to the `x` and `y` data as a whole (also note, at the time of writing, you don’t
    preface the variable name with `~` in `group_by`).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: LOESS 平滑曲线通过 `layer_smooths` 命令添加，其 `span` 参数，即感兴趣的目标参数，分配给一个 `input_slider`。其可能的值范围按常规设置，可选的
    `value` 参数（在其他 `input_` 函数中也适用）设置初始值，当图形首次初始化时使用。此外，`se=TRUE` 参数确保 95% 的置信区间与平滑趋势一同显示。请注意，管道操作
    `layer_smooths` 被 `group_by(Sex)` 的管道操作所预先处理。如果没有这个，平滑曲线将仅应用于 `x` 和 `y` 数据的整体（另外需要注意的是，在写作时，你在
    `group_by` 中不需要为变量名加上 `~`）。
- en: As such, `ggvis` shows great potential for a more dynamic experience for visual
    data exploration. These tools are especially useful in activities such as presentations
    or website designs, where you can offer your audience an interactive appreciation
    of your data in a grammar of graphics style. If you’re interested in using these
    tools, I strongly encourage you to keep abreast of developments at the `ggvis`
    website.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，`ggvis`展示了用于动态数据可视化探索的巨大潜力。这些工具在演示或网站设计等活动中特别有用，因为你可以为观众提供一种图形语法风格的交互式数据展示。如果你有兴趣使用这些工具，我强烈建议你关注`ggvis`网站的最新动态。
- en: '**Exercise 24.2**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习24.2**'
- en: Ensure the `car` and `ggvis` packages are loaded. Revisit the `Salaries` data
    frame you looked at in [Exercise 24.1](ch24.xhtml#ch24exc1); inspect the help
    file `?Salaries` to remind yourself of the present variables.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 确保加载了`car`和`ggvis`包。重新查看你在[练习24.1](ch24.xhtml#ch24exc1)中查看过的`Salaries`数据框；查看帮助文件`?Salaries`，以回顾当前的变量。
- en: Produce an interactive scatterplot of salary on the vertical axis and the years
    of service on the horizontal axis. Employ radio buttons to color points according
    to either academic rank, research discipline, or sex. Use pipes to `add_legend`
    and `add_axis` to omit a legend title and to tidy up the axis titles, respectively.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成一个交互式散点图，纵轴为薪资，横轴为工作年限。使用单选按钮根据学术职称、研究领域或性别来为点上色。使用管道操作符`add_legend`和`add_axis`，分别去除图例标题并整理坐标轴标题。
- en: A pipe to `layer_densities` (which you’ve not yet met) is used to produce kernel
    density estimates, similar to those appearing in [Figure 24-5](ch24.xhtml#ch24fig5).
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用管道操作符`layer_densities`（你尚未接触过）生成核密度估计，类似于[图24-5](ch24.xhtml#ch24fig5)中出现的估计。
- en: Use `ggvis` to create a static plot of kernel density estimates of salary distributions,
    split up according to academic rank. To do this, assign the salary variable to
    `x` and the rank variable to `fill`, followed by a pipe to `group_by` to explicitly
    instruct grouping by the rank variable. Lastly, piping to `layer_densities` (just
    use all default argument values in this instance) will generate the graphic. Your
    result should resemble the `gg4` object from [Exercise 24.1](ch24.xhtml#ch24exc1).
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`ggvis`创建一个静态图，展示按照学术职称分组的薪资分布的核密度估计。为此，将薪资变量分配给`x`，将职称变量分配给`fill`，然后使用管道操作符`group_by`显式指定按职称变量分组。最后，使用管道操作符`layer_densities`（在此情况下使用所有默认参数值）生成图形。你的结果应该类似于[练习24.1](ch24.xhtml#ch24exc1)中的`gg4`对象。
- en: Just like the `width` argument to `layer_histograms` is used to control the
    appearance of a histogram, the `adjust` argument in `layer_densities` is used
    to control the degree of smoothness of the kernel estimates. Reproduce the rank-specific
    kernel estimates from the previous plot, but this time, the graphic should be
    interactive—implement a slider button with a range of 0.2 to 2 and a label of
    `"Smoothness"` to control the smoothing adjustment. At your discretion, either
    suppress or clarify the axis and legend titles of the result.
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像`layer_histograms`中的`width`参数用于控制直方图外观一样，`layer_densities`中的`adjust`参数用于控制核密度估计的平滑程度。重新生成前一个图中的职称特定核密度估计，但这次图形应为交互式——实现一个滑块按钮，范围从0.2到2，标签为“平滑度”，以控制平滑调整。根据需要，可以选择抑制或明确显示结果中的坐标轴和图例标题。
- en: 'Ensure you have the `MASS` package loaded, once more gaining access to the
    `UScereal` data frame. If you haven’t already done so, inspect the help file `?UScereal`
    and re-create the `cereal` object exactly as specified in [Exercise 24.1](ch24.xhtml#ch24exc1)
    (a). Then do the following:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 确保已经加载了`MASS`包，这样可以再次访问`UScereal`数据框。如果还没有做过此操作，请查看帮助文件`?UScereal`，并按照[练习24.1](ch24.xhtml#ch24exc1)（a）中指定的方式重新创建`cereal`对象。然后执行以下操作：
- en: Set up an object for radio buttons to choose among the manufacturer, the shelf,
    and the vitamins variables. Make sure the labels for each radio button are clear,
    and set up an appropriate title label for what will form the collection of options
    to color the points. Name the object `filler`.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置一个对象，供单选按钮选择制造商、货架和维生素变量。确保每个单选按钮的标签清晰，并设置一个适当的标题标签，用于形成将点上色的选项集合。将该对象命名为`filler`。
- en: Borrowing the `sizer` and `opacityer` objects created in [Section 24.4](ch24.xhtml#ch24lev1sec85)
    and using the object you just created in (c) to control `fill`, create an interactive
    scatterplot of calories on protein. Tidy up the axis titles and suppress the legend
    title for the point color fill. The result should essentially be the same, in
    terms of functionality, as the graphic appearing as the topmost screenshot in
    [Figure 24-8](ch24.xhtml#ch24fig8).
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new object for the same radio buttons as specified in (c) that will
    control the shape of the points (in other words, the characters used to plot points).
    Modify the title label accordingly. Name this object `shaper`.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Finally, re-create the interactive scatterplot of calories on protein exactly
    as in (d), but this time additionally assigning `shaper` from (e) to the `shape`
    modifier in your call to `ggvis`. To prevent the legends for the two sets of radio
    buttons from overlapping each other, you need to add the following pipes to your
    code:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: add_legend("shape",title="",
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: properties=legend_props(legend=list(y=100)))
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: and
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: set_options(duration=0)
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The first simply moves the legend for the `shape` modifier vertically downward,
    and the second eliminates the slight “animation delay” that occurs by default
    when switching between options in the interactive graphic. Once more, use additional
    calls to `add_axis` and `add_legend` to clarify or suppress axis and legend titles.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Important Code in This Chapter**'
  id: totrans-154
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '| **Function/operator** | **Brief description** | **First occurrence** |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
- en: '| `ggplot` | Initialize `ggplot2` plot | [Section 24.1](ch24.xhtml#ch24lev1sec82),
    [p. 610](ch24.xhtml#page_610) |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
- en: '| `geom_smooth` | Trend line geom | [Section 24.2.1](ch24.xhtml#ch24lev2sec238),
    [p. 612](ch24.xhtml#page_612) |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
- en: '| `loess` | Calculate LOESS (base R) | [Section 24.2.1](ch24.xhtml#ch24lev2sec238),
    [p. 612](ch24.xhtml#page_612) |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
- en: '| `rev` | Reverse vector elements | [Section 24.2.1](ch24.xhtml#ch24lev2sec238),
    [p. 612](ch24.xhtml#page_612) |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
- en: '| `adjustcolor` | Alter color opacity (base R) | [Section 24.2.1](ch24.xhtml#ch24lev2sec238),
    [p. 612](ch24.xhtml#page_612) |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
- en: '| `geom_density` | Kernel density geom | [Section 24.2.2](ch24.xhtml#ch24lev2sec239),
    [p. 614](ch24.xhtml#page_614) |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
- en: '| `ggtitle` | Add `ggplot2` title | [Section 24.2.2](ch24.xhtml#ch24lev2sec239),
    [p. 615](ch24.xhtml#page_615) |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
- en: '| `grid.arrange` | Multiple `ggplot2` plots | [Section 24.3.1](ch24.xhtml#ch24lev2sec240),
    [p. 616](ch24.xhtml#page_616) |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
- en: '| `facet_wrap` | One-factor faceting | [Section 24.3.2](ch24.xhtml#ch24lev2sec241),
    [p. 619](ch24.xhtml#page_619) |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
- en: '| `facet_grid` | Two-factor faceting | [Section 24.3.2](ch24.xhtml#ch24lev2sec241),
    [p. 620](ch24.xhtml#page_620) |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
- en: '| `ggvis` | Initialize `ggvis` plot | [Section 24.4](ch24.xhtml#ch24lev1sec85),
    [p. 624](ch24.xhtml#page_624) |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
- en: '| `%>%` | Pipe to `ggvis` layer | [Section 24.4](ch24.xhtml#ch24lev1sec85),
    [p. 624](ch24.xhtml#page_624) |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
- en: '| `layer_histograms ggvis` | histogram layer | [Section 24.4](ch24.xhtml#ch24lev1sec85),
    [p. 624](ch24.xhtml#page_624) |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
- en: '| `input_slider` | Interactive slider | [Section 24.4](ch24.xhtml#ch24lev1sec85),
    [p. 624](ch24.xhtml#page_624) |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
- en: '| `:=` | Constant `ggvis` assignment | [Section 24.4](ch24.xhtml#ch24lev1sec85),
    [p. 624](ch24.xhtml#page_624) |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
- en: '| `layer_points ggvis` | points layer | [Section 24.4](ch24.xhtml#ch24lev1sec85),
    [p. 626](ch24.xhtml#page_626) |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
- en: '| `input_radiobuttons` | Interactive buttons | [Section 24.4](ch24.xhtml#ch24lev1sec85),
    [p. 626](ch24.xhtml#page_626) |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
- en: '| `add_legend` | Add/alter `ggvis` legend | [Section 24.4](ch24.xhtml#ch24lev1sec85),
    [p. 626](ch24.xhtml#page_626) |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
- en: '| `layer_smooths ggvis` | trend line layer | [Section 24.4](ch24.xhtml#ch24lev1sec85),
    [p. 627](ch24.xhtml#page_627) |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
- en: '| `add_axis` | Add/alter `ggvis` axis | [Section 24.4](ch24.xhtml#ch24lev1sec85),
    [p. 627](ch24.xhtml#page_627) |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
