["```\n   /*\n   Library originally added 18 Apr 2008 by David A. Mellis\n     library modified 5 Jul 2009 by Limor Fried (http://www.ladyada.net)\n     example added 9 Jul 2009 by Tom Igoe\n     modified 22 Nov 2010 by Tom Igoe\n     This example code is in the public domain.\n     http://www.arduino.cc/en/Tutorial/LiquidCrystal\n\n   LiquidCrystal Library - scrollDisplayLeft() and scrollDisplayRight()\n\n   Demonstrates the use of a 16x2 LCD display. The LiquidCrystal\n   library works with all LCD displays that are compatible with the\n   Hitachi HD44780 driver. There are many of them out there, and you\n   can usually tell them by the 16-pin interface.\n\n   This sketch prints \"Arduino Sketch\" to the LCD and uses the\n   scrollDisplayLeft() and scrollDisplayRight() methods to scroll\n   the text.\n   */\n\n   // Include the library code\n   #include <LiquidCrystal.h>\n\n   // Initialize the library with the numbers of the interface pins\n➊ LiquidCrystal lcd(7, 8, 9, 10, 11, 12);\n\n   void setup() {\n     // Set up the LCD's number of columns and rows\n     lcd.begin(16, 2);\n     // Print a message to the LCD\n➋   lcd.print(\"Arduino Sketch\");\n     delay(1000);\n   }\n\n   void loop() {\n     // Scroll 13 positions (string length) to the left\n     // to move it offscreen left\n     for (int positionCounter = 0; positionCounter < 13;\n   positionCounter++) {\n       // Scroll one position left\n       lcd.scrollDisplayLeft();\n       // Wait a bit\n       delay(150);\n     }\n     // Scroll 29 positions (string length + display length) to the right\n     // to move it offscreen right\n     for (int positionCounter = 0; positionCounter < 29;\n   positionCounter++) {\n       // Scroll one position right\n       lcd.scrollDisplayRight();\n       // Wait a bit\n       delay(150);\n     }\n     // Scroll 16 positions (display length + string length) to the left\n     // to move it back to center\n     for (int positionCounter = 0; positionCounter < 16;\n   positionCounter++) {\n       // Scroll one position left\n       lcd.scrollDisplayLeft();\n       // Wait a bit\n       delay(150);\n     }\n     // Delay at the end of the full loop\n     delay(1000);\n   }\n```", "```\n/* Example testing sketch for various DHT humidity/temperature\nsensors. Written by ladyada, public domain. */\n\n#include <LiquidCrystal.h>\n#include \"DHT.h\" // Call the DHT library\n#define DHTPIN 8 // Pin connected to DHT\nLiquidCrystal lcd(12, 11, 5, 4, 3, 2);\n#define DHTTYPE DHT11  // Define the type of DHT module\nDHT dht(DHTPIN, DHTTYPE); // Command to the DHT.h library\n\nvoid setup() {\n  dht.begin(); // Start the sensor\n  lcd.begin(16, 2); // LCD screen is 16 characters by 2 lines\n}\n\nvoid loop() {\n  float h = dht.readHumidity(); // Value for humidity\n  float t = dht.readTemperature(); // Value for temperature\n  t = t * 9 / 5 + 32; // Change reading from Celsius to Fahrenheit\n  if (isnan(t) || isnan(h)) { // Check that DHT sensor is working\n    lcd.setCursor(0, 0);\n    lcd.print(\"Failed to read from DHT\");  // If DHT is not working,\n                                           // display this\n  } else { // Otherwise show the readings on the screen\n    lcd.clear();\n    lcd.setCursor(0, 0);\n    lcd.print(\"Humidity: \");\n    lcd.print(h);\n    lcd.print(\"%\");\n    lcd.setCursor(0, 1);\n    lcd.print(\"Temp: \");\n    lcd.print(t);\n    lcd.print(\"f\");\n  }\n}\n```", "```\n/* Created 13 September 2012 by Scott Fitzgerald\n   http://arduino.cc/starterKit\n   This example code is part of the public domain\n*/\n\n#include <LiquidCrystal.h>\n\nLiquidCrystal lcd(12, 11, 5, 4, 3, 2); // Pins attached to LCD screen\n\nconst int switchPin = 6; // Pin attached to tilt switch\nint switchState = 0;\nint prevSwitchState = 0;\nint reply;\n\nvoid setup() {\n  lcd.begin(16, 2);\n  pinMode(switchPin, INPUT);   // Set tilt switch pin as an input\n  lcd.print(\"FORTUNE TELLER\"); // Print this on line 1\n  lcd.setCursor(0, 1);\n  lcd.print(\"Ask a Question\"); // Print this on line 2\n}\n\nvoid loop() {\n  switchState = digitalRead(switchPin); // Read tilt switch pin\n  if (switchState != prevSwitchState) {\n    if (switchState == LOW) { // If circuit is broken, give answer\n      reply = random(8); // Reply is 1 of 8 random cases as below\n      lcd.clear();\n      lcd.setCursor(0, 0);\n      lcd.print(\"The answer is: \"); // Print this to the screen\n      lcd.setCursor(0, 1);\n\n      switch (reply) { // Reply will be one of the following cases\n        case 0:\n          lcd.print(\"Yes\");\n          break;\n\n        case 1:\n          lcd.print(\"Probably\");\n          break;\n\n        case 2:\n          lcd.print(\"Definitely\");\n          break;\n\n        case 3:\n          lcd.print(\"Don't be silly\");\n          break;\n\n        case 4:\n          lcd.print(\"Of course\");\n          break;\n\n        case 5:\n          lcd.print(\"Ask again\");\n          break;\n\n        case 6:\n          lcd.print(\"Doubtful\");\n          break;\n\n        case 7:\n          lcd.print(\"No\");\n          break;\n      }\n    }\n  }\n   prevSwitchState = switchState; // Reset the switch\n}\n```", "```\nPSE = random(500, 1200);\n```", "```\n// Created by Steven De Lannoy and reproduced with kind permission\n// http://www.wingbike.nl\n// Used an RGB LED with a common anode (3 cathodes: R, G, B)\n#include <LiquidCrystal.h>\nLiquidCrystal lcd(12, 11, 5, 4, 3, 2);\nint LEDR = 8;   // Pin connected to red LED\nint LEDB = 7;   // Pin connected to blue LED\nint LEDGr = 6;  // Pin connected to green LED\nint Button = 9; // Pin connected to pushbutton\nint COLOR;      // Variable color\nint Beep;\nint PSE;        // Variable pause\nint TME;        // Time\nint RTME = 0;   // Reaction time\n\nvoid setup() {\n  lcd.begin(16, 2);\n  pinMode(LEDR, OUTPUT);   // Set LED pins as output\n  pinMode(LEDB, OUTPUT);\n  pinMode(LEDGr, OUTPUT);\n  pinMode(Button, INPUT);  // Set pushbutton as input\n  digitalWrite(LEDR, LOW); // Switch on all LED colors\n  digitalWrite(LEDB, LOW);\n  digitalWrite(LEDGr, LOW);\n}\n\nvoid loop() {\n  lcd.clear(); // Clear screen\n  lcd.print(\"Hold Button to\"); // Display message on LCD screen\n  lcd.setCursor(0, 1); // Move to second line\n  lcd.print(\"start.\");\n  while (digitalRead(Button) == LOW) { // Test does not start until\n                                       // button is pushed (and held)\n    tone(13, 1200, 30);\n    delay(1400);\n    noTone(13);\n  }\n lcd.clear();\n  digitalWrite(LEDR, HIGH); // Switch off start light\n  digitalWrite(LEDB, HIGH);\n  digitalWrite(LEDGr, HIGH);\n  randomSeed(analogRead(0)); // Random noise from pin 0\n  COLOR = random(1, 4); // Generate random color\n  PSE = random(500, 1200); // Set random pause duration between lights\n  // Repeat this loop while color is green or blue AND pushbutton\n  // is held\n  while (COLOR != 1 && digitalRead(Button) == HIGH) {\n    digitalWrite(LEDGr, HIGH);\n    digitalWrite(LEDB, HIGH);\n    delay(PSE);\n    randomSeed(analogRead(0));\n    Beep = random(1, 4); // Select random beep from buzzer\n                         // (buzzer beeps 1 in 3 times)\n    PSE = random(750, 1200); // Select random pause duration between\n                             // lights (to increase surprise effect)\n    if (Beep == 1) {\n      tone(13, 1600, 350);\n      delay(750);\n      noTone(13);\n    }\n    if (COLOR == 2) {\n      digitalWrite(LEDGr, LOW);\n    }\n    if (COLOR == 3) {\n      digitalWrite(LEDB, LOW);\n    }\n    delay(PSE);\n    randomSeed(analogRead(0));\n    COLOR = random(1, 4); // Select random color\n  }\n  // Execute this loop if color is red\n  if (COLOR == 1 && digitalRead(Button) == HIGH) {\n    digitalWrite(LEDGr, HIGH);\n    digitalWrite(LEDB, HIGH);\n    delay(PSE);\n    TME = millis(); // Record time since program has started\n    digitalWrite(LEDR, LOW);\n    while (digitalRead(Button) == HIGH) { // Runs until button is\n                                          // released, recording the\n                                          // reaction time\n      delay(1);\n    }\n    lcd.display();\n    RTME = millis() - TME; // Reaction time in ms\n    lcd.print(\"Reaction Time:\"); // Display on LCD screen\n    lcd.setCursor(0, 1);\n    lcd.print(RTME);\n  }\n\n  // Execute if color is NOT red but the pushbutton is released\n  if (COLOR != 1) {\n    lcd.print(\"Released too\");\n    lcd.setCursor(0, 1); // Move to second line\n    lcd.print(\"soon!!!\");\n    tone(13, 3000, 1500);\n    delay(500);\n    noTone(13);\n  }\n  // Test does not restart until the button is pushed once\n  while (digitalRead(Button) == LOW) {\n    delay(10);\n  }\n  digitalWrite(LEDR, LOW); // Reset all lights to begin again\n  digitalWrite(LEDB, LOW);\n  digitalWrite(LEDGr, LOW);\n  lcd.clear();\n  lcd.print(\"Hold Button to\");\n  lcd.setCursor(0, 1);\n  lcd.print(\"start.\");\n  int Time = 0;\n  delay(1000);\n}\n```"]