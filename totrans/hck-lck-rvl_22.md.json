["```\n>>> **import** **httpx**\n>>> **r =** **httpx.get(\"https://example.com\")**\n>>> **print(r.text)**\n<!doctype html>\n<html>\n<head>\n    <title>Example Domain</title>\n`--snip--`\n</head>\n\n<body>\n<div>\n    <h1>Example Domain</h1>\n    <p>This domain is for use in illustrative examples in documents. You may use this\n    domain in literature without prior coordination or asking for permission.</p>\n    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n</div>\n</body>\n</html>\n```", "```\nimport httpx\nimport click\n\n@click.command()\n@click.argument(\"gab_username\") ❶\ndef main(gab_username):\n    \"\"\"Download a user's posts from Gab\"\"\"\n\n    # Get information about the user\n    r = httpx.get(f\"https://gab.com/api/v1/account_by_username/{gab_username}\") ❷\n    user_info = r.json() if \"error\" in user_info:\n        print(user_info[\"error\"])\n        return\n\n    # Display some user info\n    click.echo(f\"Display name: {user_info['display_name']}\") \n    click.echo(f\"{user_info['followers_count']:,} followers, {user_info['following_count']:,} following, {user_info['statuses_count']:,} posts\") ❸\n    print()\n\n    # Get this user's posts\n    r = httpx.get(f\"https://gab.com/api/v1/accounts/{user_info['id']}/statuses\") ❹\n    posts = r.json()\n    for post in posts:\n        if post[\"reblog\"]:\n            print(f\"repost @{post['reblog']['account']['username']}: {post['reblog']['created_at']}: {post['reblog']['content']}\")\n        else:\n            print(f\"{post['created_at']}: {post['content']}\")\n\nif __name__ == \"__main__\":\n    main()\n```", "```\nmicah@trapdoor appendix-b % **python3** **httpx-example.py** **a**\nDisplay name: Andrew Torba\n3,803,381 followers, 2,662 following, 67,317 posts\n\n2022-12-07T04:56:56.989Z: Is it really so crazy to think that I care nothing\nat all about a particular historical atrocity that happened on another\ncontinent 80 years ago when there is a genocide of babies happening right\nhere, right now, today?\nrepost @ScipioAmericanus: 2022-12-07T04:50:37.560Z: Jews literally believe\nthat they can reject God because they're justified according to the flesh and\ntheir own laws. Wicked stuff.\n`--snip--`\n```", "```\n>>> **import** **httpx**\n>>> **from bs4 import BeautifulSoup**\n>>> **r =** **httpx.get(\"https://example.com\")**\n```", "```\n>>> **soup = BeautifulSoup(r.text, \"html.parser\")**\n>>> **print(soup.title.text)**\nExample Domain\n>>> **paragraph = soup.find(\"p\")**\n>>> **print(paragraph.text)**\nThis domain is for use in illustrative examples in documents. You may use this\n    domain in literature without prior coordination or asking for permission.\n>>> **for link in soup.find_all(\"a\"):**\n...      **print(link.get(\"href\"))**\n...\nhttps://www.iana.org/domains/example\n```", "```\n<tr **class=\"athing\"** id=\"34466985\">\n  <td class=\"title\" valign=\"top\" align=\"right\"><span class=\"rank\">4.</span></td>\n  <td class=\"votelinks\" valign=\"top\">\n    <center>\n      <a id=\"up_34466985\" href=\"vote?id=34466985&amp;how=up&amp;goto=news\">\n      <div class=\"votearrow\" title=\"upvote\"></div></a>\n    </center>\n  </td>\n  <td class=\"title\">\n    <span class=\"titleline\">\n      <a href=\"https://people.ece.cornell.edu/land/courses/ece4760/RP2040/C_SDK_DMA_machine/DMA_machine_rp2040.html\">\n        Direct Memory Access computing machine RP2040\n      </a>\n      <span class=\"sitebit comhead\"> (<a href=\"from?site=cornell.edu\">\n        <span class=\"sitestr\">cornell.edu</span></a>)\n      </span>\n    </span>\n  </td>\n</tr>\n```", "```\nimport csv\nimport time\nimport httpx\nfrom bs4 import BeautifulSoup\n\ndef main():\n    with open(\"output.csv\", \"w\") as f:\n        writer = csv.DictWriter(f, fieldnames=[\"Title\", \"URL\"])\n        writer.writeheader()\n\n        for page_number in range(1, 6):\n            print(f\"LOADING PAGE {page_number}\")\n            r = httpx.get(f\"https://news.ycombinator.com/?p={page_number}\")\n            print(\"\")\n\n            soup = BeautifulSoup(r.text, \"html.parser\")\n            for table_row in soup.find_all(\"tr\", class_=\"athing\"):\n                table_cells = table_row.find_all(\"td\")\n                last_cell = table_cells[-1] link = last_cell.find(\"a\")\n                link_url = link.get(\"href\")\n\n                print(link.text)\n                print(link_url)\n                print(\"\")\n\n                writer.writerow({\"Title\": link.text, \"URL\": link_url})\n\n            time.sleep(1)\nif __name__ == \"__main__\":\n    main()\n```", "```\nmicah@trapdoor appendix-b % **python3 bs4-example.py**\nLOADING PAGE 1\n\nBuy Hi-Resolution Satellite Images of Any Place on Earth\nhttps://www.skyfi.com/pricing\n\nThe McMurdo Webcams\nhttps://www.usap.gov/videoclipsandmaps/mcmwebcam.cfm\n\n`--snip--`\nLOADING PAGE 2\n\nThoughts on the Python Packaging Ecosystem\nhttps://pradyunsg.me/blog/2023/01/21/thoughts-on-python-packaging/\n`--snip--`\n```", "```\n**python -m pip install selenium**\n```", "```\n**python3 -m pip install selenium**\n```", "```\n**brew install geckodriver**\n```", "```\n**python3 -m pip install selenium**\n```", "```\n**sudo apt update**\n**sudo apt install firefox-geckodriver**\n```", "```\n>>> **from selenium import webdriver**\n>>> **driver = webdriver.Firefox()**\n>>> **driver.get(\"****https://github.com/micahflee/hacks-leaks-and-revelations\")**\n>>> **print(driver.title)**\nGitHub - micahflee/hacks-leaks-and-revelations: Code that goes along with the Hacks, Leaks, and Revelations book\n>>> **driver.quit()**\n```", "```\nimport click\nimport time\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\n\n@click.command()\n@click.argument(\"location\")\n@click.argument(\"screenshot_filename\", type=click.Path(exists=False))\ndef main(location, screenshot_filename):\n    driver = webdriver.Firefox()\n    driver.implicitly_wait(10)\n\n    driver.get(\"https://maps.google.com\")\n    search_box = driver.find_element(By.ID, \"searchboxinput\")\n    search_box.clear()\n    search_box.send_keys(location)\n    search_box.send_keys(Keys.RETURN)\n\n    body = driver.find_element(By.TAG_NAME, \"body\")\n    body.send_keys(Keys.ADD)\n    body.send_keys(Keys.ADD)\n\n    minimap = driver.find_element(By.ID, \"minimap\")\n    buttons = minimap.find_elements(By.TAG_NAME, \"button\")\n    buttons[2].click()\n\n    time.sleep(2)\n    driver.save_screenshot(screenshot_filename)\n    driver.quit()\n\nif __name__ == \"__main__\":\n    main()\n```", "```\n**python3 selenium-example.py \"great pyramid of giza\" giza.png**\n```"]