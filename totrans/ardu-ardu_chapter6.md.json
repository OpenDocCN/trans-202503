["```\n// Project #20 - Arduino self power off\n\n❶ void turnOff()\n{\n    digitalWrite(12, LOW);\n}\n\nvoid setup()\n{\n    pinMode(12, OUTPUT);\n    pinMode(13, OUTPUT);\n    digitalWrite(12, HIGH);\n}\n\nvoid loop()\n{\n  ❷ digitalWrite(13, HIGH);\n    delay(5000);\n  ❸ digitalWrite(13, LOW);\n    delay(1000);\n  ❹ turnOff();\n} \n```", "```\n❶ #include <Wire.h>\n#include <DS3231.h>\nDS3231 RTC;\n\n❷ bool century = false;\nbool h12Flag = false;\nbool pmFlag = false;\n// Change the following for your own time\nbyte year = `22`;\nbyte month = `9`;\nbyte date = `2`;\nbyte hour = `11`;\nbyte minute = `8`;\nbyte second = `0`;\n\nvoid setTimeData()\n{\n    RTC.setYear(year);\n    RTC.setMonth(month);\n    RTC.setDate(date);\n    RTC.setHour(hour);\n    RTC.setMinute(minute);\n    RTC.setSecond(second);\n    RTC.setClockMode(false); // Set clock to 24 hour\n}\n\nvoid setup()\n{\n    Wire.begin();\n  ❸ //setTimeData(); // Set time and date\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    // Display data on Serial Monitor\n    Serial.print(RTC.getDate());\n    Serial.print(\"/\");\n    Serial.print(RTC.getMonth(century));\n    Serial.print(\"/20\");\n    Serial.print(RTC.getYear());\n    Serial.print(\" - \");\n    Serial.print(RTC.getHour(h12Flag, pmFlag));\n    Serial.print(\":\");\n  ❹ if (RTC.getMinute() < 10)\n    {\n        Serial.print(\"0\");\n    }\n    Serial.print(RTC.getMinute());\n    Serial.print(\":\");\n  ❺ if (RTC.getSecond() < 10)\n    {\n        Serial.print(\"0\");\n    }\n    Serial.println(RTC.getSecond());\n    delay(1000);\n} \n```", "```\n// Project #21 - Arduino event logger\n\n❶ #include <Wire.h>\n#include <DS3231.h>\nDS3231 RTC;\n#include <SD.h>\n#define offPin 9\n\n❷ bool century = false;\nbool h12Flag = false;\nbool pmFlag = false;\nbyte year = `22`;\nbyte month = `9`;\nbyte date = `2`;\nbyte hour = `11`;\nbyte minute = `8`;\nbyte second = `0`;\n\nvoid setTimeData()\n{\n    RTC.setYear(year);\n    RTC.setMonth(month);\n    RTC.setDate(date);\n    RTC.setHour(hour);\n    RTC.setMinute(minute);\n    RTC.setSecond(second);\n    RTC.setClockMode(false); // Set clock to 24 hour\n}\n\nvoid turnOff()\n{\n    digitalWrite(offPin, LOW);\n}\n\nvoid logEvent()\n{\n    // Create the file for writing\n    File dataFile = SD.open(\"DATA.TXT\", FILE_WRITE);\n    // If the file is ready, write to it:\n    if (dataFile)\n    {\n        dataFile.print(\"Event occurred on: \");\n        dataFile.print(RTC.getDate());\n        dataFile.print(\"/\");\n        dataFile.print(RTC.getMonth(century));\n        dataFile.print(\"/20\");\n        dataFile.print(RTC.getYear());\n        dataFile.print(\" - \");\n        dataFile.print(RTC.getHour(h12Flag, pmFlag));\n        dataFile.print(\":\");\n        if (RTC.getMinute() < 10) {\n            dataFile.print(\"0\");\n        }\n        dataFile.print(RTC.getMinute());\n        dataFile.print(\":\");\n        if (RTC.getSecond() < 10) {\n            dataFile.print(\"0\");\n        }\n    dataFile.println(RTC.getSecond());\n    dataFile.close(); // Close the file once the system has finished with it\n    }\n}\n\nvoid setup()\n{\n    Wire.begin();\n    //setTimeData(); // Set time and date\n    pinMode(offPin, OUTPUT);\n    digitalWrite(offPin, HIGH);\n    pinMode(10, OUTPUT);\n    // Check that the memory card exists and is usable\n    if (!SD.begin(10))\n    {\n        // Stop sketch:\n        return;\n    }\n}\n\n❸ void loop()\n{\n    logEvent(); // Log event to SD card\n    delay(1000); // Wait a moment\n    turnOff();\n} \n```"]