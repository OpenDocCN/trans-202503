["```\nroot@host01:~# kubectl get storageclass\nNAME      PROVISIONER         RECLAIMPOLICY  VOLUMEBINDINGMODE  ALLOWVOLUMEEXPANSION ...\nlonghorn  driver.longhorn.io  Delete         Immediate          true                 ...\n```", "```\nroot@host01:~# crictl ps --name 'longhorn.*|csi.*'\nCONTAINER     ... STATE    NAME ...\nc8347a513f71e ... Running  csi-provisioner ...\n47f950a3e8dbf ... Running  csi-provisioner ...\n3aad0fef7454e ... Running  longhorn-csi-plugin ...\n9bfb61f786afa ... Running  csi-snapshotter ...\n24a2994a264a1 ... Running  csi-snapshotter ...\n7ee4c748b4c02 ... Running  csi-snapshotter ...\n8d92886fdacda ... Running  csi-resizer ...\n9868014407fe0 ... Running  csi-resizer ...\n408d16181af51 ... Running  csi-attacher ...\n0c6c341debb0c ... Running  longhorn-driver-deployer ...\nba328a9d0aaf2 ... Running  longhorn-manager ...\nc39e5c4fee3bb ... Running  longhorn-ui ...\n```", "```\nroot@host01:~# CID=$(crictl ps -q --name csi-attacher)\nroot@host01:~# crictl inspect $CID\n{\n...\n    \"mounts\": [\n      {\n        \"containerPath\": \"/csi/\",\n ➊ \"hostPath\": \"/var/lib/kubelet/plugins/driver.longhorn.io\",\n        \"propagation\": \"PROPAGATION_PRIVATE\",\n        \"readonly\": false,\n        \"selinuxRelabel\": false\n      }\n...\n      \"envs\": [\n        {\n          \"key\": \"ADDRESS\",\n       ➋ \"value\": \"/csi/csi.sock\"\n        },\n...\n}\n```", "```\nroot@host01:~# ls -l /var/lib/kubelet/plugins/driver.longhorn.io\ntotal 0\nsrwxr-xr-x 1 root root 0 Feb 18 20:17 csi.sock\n```", "```\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: postgres\nspec:\n  serviceName: postgres\n  replicas: 2\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      containers:\n      - name: postgres\n        image: postgres\n        env:\n        - name: POSTGRES_PASSWORD\n       ➊ value: \"supersecret\"\n        - name: PGDATA\n       ➋ value: /data/pgdata\n        volumeMounts:\n        - name: postgres-volume\n       ➌ mountPath: /data\n  volumeClaimTemplates:\n  - metadata:\n      name: postgres-volume\n    spec:\n      storageClassName: longhorn\n      accessModes:\n        - ReadWriteOnce\n      resources:\n        requests:\n          storage: 1Gi\n```", "```\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgres\nspec:\n  clusterIP: None\n  selector:\n    app: postgres\n```", "```\nroot@host01:~# kubectl apply -f /opt/pgsql-set.yaml \nservice/postgres created\nstatefulset.apps/postgres created\n```", "```\nroot@host01:~# kubectl get pods\nNAME         READY   STATUS    RESTARTS   AGE\npostgres-0   1/1     Running   0          97s\npostgres-1   1/1     Running   0          51s\n```", "```\nroot@host01:~# kubectl exec -ti postgres-0 -- /bin/sh\n# findmnt /data\nTARGET SOURCE                         FSTYPE OPTIONS\n/data  /dev/longhorn/pvc-83becdac-... ext4   rw,relatime\n# exit\n```", "```\nroot@host01:~# kubectl get svc\nNAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nkubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   54m\npostgres     ClusterIP   None         <none>        <none>    19m\n```", "```\nroot@host01:~# kubectl run -ti --image=alpine --restart=Never alpine\nIf you don't see a command prompt, try pressing enter.\n/ #\n```", "```\n/ # ping -c 1 postgres-0.postgres.default.svc\nPING postgres-0.postgres.default.svc (172.31.239.198): 56 data bytes\n64 bytes from 172.31.239.198: seq=0 ttl=63 time=0.093 ms\n...\n/# ping -c 1 postgres-1.postgres.default.svc\nPING postgres-1.postgres.default.svc (172.31.239.199): 56 data bytes\n64 bytes from 172.31.239.199: seq=0 ttl=63 time=0.300 ms\n...\n# exit\n```", "```\nroot@host01:~# kubectl get pvc\nNAME                         STATUS   VOLUME      ...   CAPACITY   ...\npostgres-volume-postgres-0   Bound    pvc-83becdac...   1Gi        ...\npostgres-volume-postgres-1   Bound    pvc-0d850889...   1Gi        ...\n```", "```\nroot@host01:~# kubectl delete -f /opt/pgsql-set.yaml \nservice \"postgres\" deleted\nstatefulset.apps \"postgres\" deleted\nroot@host01:~# kubectl get pvc\nNAME                         STATUS   VOLUME      ...   CAPACITY   ...\npostgres-volume-postgres-0   Bound    pvc-83becdac...   1Gi        ...\npostgres-volume-postgres-1   Bound    pvc-0d850889...   1Gi        ...\n```", "```\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: nginx-storage\nspec:\n  storageClassName: longhorn\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 100Mi\n```", "```\nroot@host01:~# kubectl apply -f /opt/pvc.yaml \npersistentvolumeclaim/nginx-storage created\nroot@host01:~# kubectl get pv\nNAME         ...  CAPACITY ... STATUS  CLAIM                               STORAGECLASS ...\npvc-0b50e5b4-...  1Gi      ... Bound   default/postgres-volume-postgres-1  longhorn     ...\npvc-ad092ba9-...  1Gi      ... Bound   default/postgres-volume-postgres-0  longhorn     ...\npvc-cb671684-...  100Mi    ... Bound   default/nginx-storage               longhorn     ...\n```", "```\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: manual\nspec:\n  storageClassName: manual\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 100Mi\n```", "```\nroot@host01:~# kubectl apply -f /opt/pvc-man.yaml \npersistentvolumeclaim/manual created\nroot@host01:~# kubectl get pvc\nNAME                         STATUS    ... STORAGECLASS   AGE\nmanual                       Pending   ... manual         6s\n...\nroot@host01:~# kubectl get pv\nNAME                                       ...\npvc-0b50e5b4-9889-4c8d-a651-df78fa2bc764   ...\npvc-ad092ba9-cf30-4b7d-af01-ff02a5924db7   ...\npvc-cb671684-1719-4c33-9dd8-bcbbf24523b4   ...\n```", "```\n---\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: manual\nspec:\n  claimRef:\n    name: manual\n    namespace: default\n  accessModes:\n    - ReadWriteOnce\n  capacity:\n    storage: 100Mi\n  csi:\n    driver: driver.longhorn.io\n    volumeHandle: manual\n```", "```\nroot@host01:~# kubectl apply -f /opt/pv.yaml \npersistentvolume/manual created\n```", "```\nroot@host01:~# kubectl get pv manual\nNAME     CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   ...\nmanual   100Mi      RWO            Retain           Bound    ...\n```", "```\nroot@host01:~# kubectl get pvc manual\nNAME     STATUS   VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE\nmanual   Bound    manual   100Mi      RWO            manual         2m20s\n```", "```\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        volumeMounts:\n       ➊ - name: html\n            mountPath: /usr/share/nginx/html\n      volumes:\n     ➋ - name: html\n persistentVolumeClaim:\n            claimName: nginx-storage\n```", "```\nroot@host01:~# kubectl apply -f /opt/nginx.yaml \ndeployment.apps/nginx created\n```", "```\nroot@host01:~# IP=$(kubectl get po -l app=nginx -o jsonpath='{..podIP}')\nroot@host01:~# curl -v http://$IP\n...\n* Connected to 172.31.25.200 (172.31.25.200) port 80 (#0)\n> GET / HTTP/1.1\n...\n< HTTP/1.1 403 Forbidden\n```", "```\nroot@host01:~# POD=$(kubectl get po -l app=nginx -o jsonpath='{..metadata.name}')\nroot@host01:~# kubectl cp /opt/index.html $POD:/usr/share/nginx/html\n```", "```\nroot@host01:~# curl -v http://$IP\n...\n* Connected to 172.31.239.210 (172.31.239.210) port 80 (#0)\n> GET / HTTP/1.1\n...\n< HTTP/1.1 200 OK\n...\n<html>\n  <head>\n    <title>Hello, World</title>\n  </head>\n  <body>\n    <h1>Hello, World!</h1>\n  </body>\n</html>\n...\n```", "```\nroot@host01:~# kubectl scale --replicas=3 deployment/nginx\ndeployment.apps/nginx scaled\n```", "```\nroot@host01:~# kubectl get pods\nNAME                    READY   STATUS              RESTARTS   AGE\n...\nnginx-db4f4d5d9-7q7rd   0/1     ContainerCreating   0          46s\nnginx-db4f4d5d9-gbqxm   0/1     ContainerCreating   0          46s\nnginx-db4f4d5d9-vrzr4   1/1     Running             0          10m\n```", "```\nroot@host01:~# kubectl describe pod/nginx-db4f4d5d9-7q7rd\nName:           nginx-db4f4d5d9-7q7rd\n...\nStatus:         Pending\nEvents:\n  Type     Reason              Age   From                     Message\n  ----     ------              ----  ----                     -------\n...\n  Warning  FailedAttachVolume  110s  attachdetach-controller  Multi-Attach \n    error for volume \"pvc-cb671684-1719-4c33-9dd8-bcbbf24523b4\" Volume is \n    already used by pod(s) nginx-db4f4d5d9-vrzr4\n```", "```\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: storage\nspec:\n  storageClassName: longhorn\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Mi\n```", "```\nroot@host01:~# kubectl delete deploy/nginx pvc/storage\ndeployment.apps \"nginx\" deleted\npersistentvolumeclaim \"storage\" deleted\nroot@host01:~# kubectl apply -f /opt/pvc-rwx.yaml \npersistentvolumeclaim/storage created\nroot@host01:~# kubectl apply -f /opt/nginx.yaml \ndeployment.apps/nginx created\n```", "```\nroot@host01:~# kubectl get pods\nNAME                    READY   STATUS      RESTARTS   AGE\n...\nnginx-db4f4d5d9-6thzs   1/1     Running     0          44s\n```", "```\nroot@host01:~# POD=$(kubectl get po -l app=nginx -o jsonpath='{..metadata.name}')\nroot@host01:~# kubectl cp /opt/index.html $POD:/usr/share/nginx/html\n... no output ...\n```", "```\nroot@host01:~# kubectl scale --replicas=3 deploy nginx\ndeployment.apps/nginx scaled\nroot@host01:~# kubectl get po\nNAME                    READY   STATUS      RESTARTS   AGE\n...\nnginx-db4f4d5d9-2j629   1/1     Running     0          23s\nnginx-db4f4d5d9-6thzs   1/1     Running     0          5m19s\nnginx-db4f4d5d9-7r5qj   1/1     Running     0          23s\n```", "```\nroot@host01:~# IP=$(kubectl get po nginx-db4f4d5d9-2j629 -o jsonpath='{..podIP}')\nroot@host01:~# curl http://$IP\n<html>\n  <head>\n    <title>Hello, World</title>\n  </head>\n  <body>\n    <h1>Hello, World!</h1>\n  </body>\n</html>\n```"]