- en: '9'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Wearable Timing Bracer by Mike Hord
  prefs: []
  type: TYPE_NORMAL
- en: In this project, you’ll make a glowing wrist timer that’s perfect for a LARP
    costume.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0167-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: I have a lot of friends who participate in *live action roleplaying (LARP)*
    games. As a concept it’s similar to tabletop roleplaying, except there are no
    turns, there’s no dice, and everything happening around you has a component of
    reality to it.
  prefs: []
  type: TYPE_NORMAL
- en: One of the elements of the game is timed effects; for instance, a spell may
    put you to sleep for 10 minutes, pin you in place for 1 minute, or make you laugh
    uncontrollably for 5 minutes. Since the game takes place in a fantasy wonderland,
    using a wristwatch to time an effect is an anachronism that detracts from the
    sense of the game. Players need a way to keep time that’s aesthetically unobtrusive.
    To address this, in this project we’ll build a bracer (or wristguard) with mystical
    glowing gems that also tells you how much longer an effect will last. As a bonus,
    we’ll make it connectable to your smartphone, so you can set the timer duration
    without reprogramming the project!
  prefs: []
  type: TYPE_NORMAL
- en: The bracer has four gems on it, each of which, when pressed, starts a timer.
    By default the timers last for one, five, or ten minutes. The gems pulse-glow
    for the duration of the effect, turning off when the timer runs out.
  prefs: []
  type: TYPE_NORMAL
- en: '**GET THE PARTS**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This project includes both sewing and electronics. I’ve separated the supplies
    into two lists for convenience. You can find the craft supplies at any reasonably
    well-stocked sewing supply or fabric store.
  prefs: []
  type: TYPE_NORMAL
- en: '**Components**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: LilyPad Simblee board (SparkFun P/N 13633)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4 LilyPad pixel boards (SparkFun P/N 13264)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4 LilyPad button boards (SparkFun P/N 08776)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1,000 mAh lithium polymer ion battery pack (SparkFun P/N 13813)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LilyPad FTDI basic board (SparkFun P/N 10275)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mini-B USB cable (SparkFun P/N 11301)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conductive thread (SparkFun P/N 13814)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Crafting Supplies**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Grommet kit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ribbon, lace, or other attractive string-like material; I’m using parachute
    cord
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sundry sewing supplies, like thread and a sewing needle
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flexible fabric glue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clear or translucent gemstones or beads, about 1/2 to 1 inch in size
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Used gift card or expired credit card
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5 to 10 precut sheets of felt (9 × 12 inches)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1/3 yard of faux leather
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tools**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Hammer (for setting grommets)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scissors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**BUILD IT**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Since the measurements for the crafting portion will vary according to preference
    and the wearer’s size, much of this project requires a “try it and see” approach.
  prefs: []
  type: TYPE_NORMAL
- en: 'I’m also assuming that you’re comfortable enough with sewing that I don’t need
    to explain every step of the sewing portion. If you’ve never done an e-textiles
    project before, I suggest that you first check out these excellent tutorials to
    help with the fundamentals:'
  prefs: []
  type: TYPE_NORMAL
- en: '***[https://www.sparkfun.com/tutorials/313](https://www.sparkfun.com/tutorials/313)***
    This very useful video tutorial explains basic e-textile stitching practice.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***[https://www.sparkfun.com/tutorials/306](https://www.sparkfun.com/tutorials/306)***
    We’ll use the technique in this tutorial to make the buttons that activate our
    timers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***[https://learn.sparkfun.com/tutorials/dungeons-and-dragons-dice-gauntlet](https://learn.sparkfun.com/tutorials/dungeons-and-dragons-dice-gauntlet)***
    This project makes a similar style of costume garment, but uses it to conceal
    a dice-rolling mechanism instead of a timer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The final bracer will have three layers: the top layer is the leather-like
    material, the middle layer contains the piece of material with the circuitry,
    and the bottom layer is another layer of felt or fabric. Let’s get started.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cut out the fabric pieces.** [Figure 9-1](ch09.xhtml#ch09fig1) shows the
    approximate shape you need. The exact measurements depend on how big you want
    your bracer to be, although you should try to make it as big as possible to accommodate
    the electronics. Try a few different shapes and dimensions using paper or scrap
    fabric until you find one that feels right.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you find the shape and size you like, cut out two pieces of that shape
    from felt and one piece from faux leather. Make the leather piece slightly bigger
    all around, so it conceals the felt pieces beneath it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![image](../images/f0170-01.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**FIGURE 9-1:** The approximate shape to cut out of the felt and faux leather'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Lay out some electronics.** Now you’ll experiment with how to place your
    electronics on the felt bracer shape. You need to find a position that feels comfortable
    for you.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: First, you need to orient the LilyPad Simblee board with the six-pin header
    pointing toward an edge, so you can access these pins for programming and charging.
    Second, the pixel boards (I’ll refer to them as LEDs for short) should form a
    straight line down the center of the bracer, for aesthetic reasons. [Figure 9-2](ch09.xhtml#ch09fig2)
    shows how I set up mine.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: At this stage, you’re laying out only the LEDs, the battery, and the Simblee
    board. You’ll add the buttons later.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![image](../images/f0171-01.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**FIGURE 9-2:** Line up the electronics in the middle of the form.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Sew in the conducting power threads for the LEDs.** Using conductive thread,
    first you’ll sew in place the positive (+) and negative (–) power threads for
    the LEDs. You’ll need one power thread along one side of the electronics connected
    to all the positive pads, and one along the other side connected to all the negative
    pads. See [Figure 9-3](ch09.xhtml#ch09fig3) for an idea of the threading.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/f0171-02.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**FIGURE 9-3:** The positive and negative power threads for the LEDs'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Pay attention to the orientation of the LEDs! Make sure you sew the negative
    pad on the Simblee to the negative pads on the LEDs. When you’re certain you have
    everything laid out correctly, sew the pads in place with the conductive thread,
    making sure the stitches are long and have a fair amount of space between them
    like in [Figure 9-3](ch09.xhtml#ch09fig3). In the next step you’ll have to pass
    another thread over the negative thread, and it’s easiest to do that by passing
    it between two stitches. The piece of felt that you sew the electronics onto is
    going to be the middle layer, just under the faux leather piece.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Sew the data thread from the Simblee board to the LEDs.** Now you’ll need
    to link the LEDs to the Simblee board, so the Simblee can control them. [Figure
    9-4](ch09.xhtml#ch09fig4) shows how to sew the conductive thread.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/f0172-01.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**FIGURE 9-4:** Connecting the Simblee board to the LEDs'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In [Figure 9-4](ch09.xhtml#ch09fig4) I’ve used dashed yellow lines to more clearly
    show the path of the data thread from the Simblee board pad, labeled pad 3 on
    the board, to the first LED, and the threads that connect the LEDs consecutively.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note that the data thread crosses over the negative power thread, as I mentioned
    in the previous step. You must make sure that the two threads don’t touch, or
    your project will short out. To accomplish this, pass the data thread over the
    negative power thread in the space between two stitches.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Cut holes in the felt under each LED board.** Each LED needs one button under
    it so that when you press down on the LED it actuates the switch. To make the
    best connection, cut a small hole in the felt under the center of each LED so
    the LED board touches the button directly, without any felt between. But take
    care not to cut too large a hole; you don’t want to accidentally cut through one
    of the threads you’ve already placed, or weaken the felt around one so that it
    tears through!'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Place, sew down, and thread the button boards.** Place one button board beneath
    each LED so the button is facing the back of the LED board. There should be exactly
    one button board under each LED, as shown in [Figure 9-5](ch09.xhtml#ch09fig5).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Again, I’ve highlighted the thread paths with yellow. The long thread across
    the top is the negative power thread from the other side of the felt, which you
    laid down earlier.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![image](../images/f0173-01.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**FIGURE 9-5:** Threading the button boards to the bracer'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Stitch conductive thread from one side of each button board to the negative
    power thread that you laid down earlier. Unlike LED boards, the button boards
    don’t have polarity, so you can thread either end to the negative power thread.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, run a thread from the other side of each button to the Simblee board,
    as shown in [Figure 9-5](ch09.xhtml#ch09fig5). Stitch the closest button to pad
    15, the next to pad 12, the next to 11, and the last to 9\. Be extremely careful
    about where these threads cross the positive power thread from earlier. You need
    to make *very* certain that the threads don’t touch; otherwise that button won’t
    work, and it’ll be a huge inconvenience to fix.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Glue the backing material to the button boards.** Now cut up the old gift
    card, or some similar stiff material, into squares approximately the size of the
    LED boards’ diameter. Glue one of these to the back of each button board, as shown
    in [Figure 9-6](ch09.xhtml#ch09fig6).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/f0173-02.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**FIGURE 9-6:** The squares of card material glued to the back of each button
    board'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: I used a fabric glue specially designed to flex. These squares provide a solid
    backing for the buttons to press against so they will actuate rather than sinking
    into the layers below them. This step is important and should not be skipped.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Stitch together the layers and place the grommets.** The piece of material
    you’ve been working with forms the middle layer; the top layer is the leather-like
    material, and the bottom layer is another layer of felt or fabric. Stitch the
    three layers together along one edge, as shown in [Figure 9-7](ch09.xhtml#ch09fig7).
    Be sure to use regular, nonconductive thread.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/f0174-01.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**FIGURE 9-7:** Sewing the layers together and placing the grommets'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once you’ve stitched the edge of the layers together, you can place the grommets
    on that edge. Follow the instructions on the grommet kit package for these. Then
    repeat the sewing and grommeting on the other side.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Cut holes over the LEDs.** Expose the LEDs by cutting a small hole in the
    leather over each one. If you’d like, you can also glue down a translucent gemstone
    or bead over each hole for a flashier appearance. I used 3D-printed gemstones
    with a mushroom backing. If you want to 3D-print these gemstones yourself, you
    can find the files in the book’s resources at *[https://nostarch.com/LEDHandbook/](https://nostarch.com/LEDHandbook/)*.
    Thanks to Youmagine user jensa (*[https://www.youmagine.com/jensa/designs](https://www.youmagine.com/jensa/designs)*)
    for providing the original “emerald gemstone” design. [Figure 9-8](ch09.xhtml#ch09fig8)
    shows the completed project.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/f0175-01.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**FIGURE 9-8:** The complete bracer with gemstones in place over the LEDs'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: When the bracer is ready to wear, thread your ribbon or cord through the grommets
    to lace the bracer onto your wrist.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Pressing on an LED, or a translucent decoration if you’ve added them, should
    produce a nice “click” as the button actuates. If it doesn’t, add more layers
    of card to the back of the button board until the button is sufficiently sturdy.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**CODE IT**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s take a look at the code. The full code is quite long—more than 500 lines—so
    I’ve included only the most interesting parts of it here. Download the code in
    the book’s resources at *[https://nostarch.com/LEDHandbook/](https://nostarch.com/LEDHandbook/)*,
    and read the comments in the following code listing to see how it works in general.
  prefs: []
  type: TYPE_NORMAL
- en: Support for the Simblee is not built into the Arduino IDE, so you’ll need to
    add it yourself. Follow the instructions for doing so in the Setting Up Arduino
    tutorial at *[https://learn.sparkfun.com/tutorials/simblee-concepts](https://learn.sparkfun.com/tutorials/simblee-concepts)*.
    That page will walk you through all the pertinent steps for programming the Simblee.
    This is where you’ll need the FTDI basic board and the USB cable.
  prefs: []
  type: TYPE_NORMAL
- en: The code is a lot simpler than its length would suggest. It sets up four independent
    timers, which can be triggered or reset by pressing the buttons hiding under the
    LEDs, then creates a pulsing effect on the LED corresponding to a running timer.
    The lion’s share of the code is actually the same code, replicated four times,
    once for each timer. At the end is all the necessary UI setup code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**USE IT**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You’ll need to download the Simblee *For Mobile* app to your smartphone to change
    the timing settings. This app acts like a browser for Simblee-based projects.
    It’s available for both iPhone and Android and is free to download.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the app is pretty simple: when your bracer is powered up and your Simblee
    has been programmed with the project code, open the For Mobile app and you should
    see a list item titled “Bracer of Time.” Touch that list item to bring up the
    interface for the bracer, shown in [Figure 9-9](ch09.xhtml#ch09fig9), where you
    can enter the desired delay in seconds for each timer, as well as store the values
    in flash memory on the bracer so they persist after power down.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0181-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 9-9:** The bracer interface'
  prefs: []
  type: TYPE_NORMAL
- en: '**SUMMARY**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You should now have a complete magical timing bracer! I hope you find some need
    for it.
  prefs: []
  type: TYPE_NORMAL
- en: I recommend looking through the full code and the comments left there. You’ll
    find some useful tricks for linearizing the output of an LED, so that it appears
    to fade smoothly and evenly from all the way off to all the way on, as well as
    some goodies about executing code in a loop without a lot of busy waiting. You
    can find a lot more information on the GitHub page for this project at *[http://www.github.com/mhord/bracer_of_time/](http://www.github.com/mhord/bracer_of_time/)*.
    All the resources, including the full code, are available at *[https://nostarch.com/LEDHandbook/](https://nostarch.com/LEDHandbook/)*.
  prefs: []
  type: TYPE_NORMAL
