["```\nsecretFile = open(\"secretFile.txt\", \"w\")\n```", "```\nsecretFile = open(\"/secrets/secretFile.txt\", \"w\")\n```", "```\n   secretFile = open(\"secretFile.txt\", \"w\")\n   secretFile.write(\"This is a secret file. Shhh! Don't tell anyone.\")\n➊ secretFile.close()\n```", "```\n   secretFile = open(\"secretFile.txt\", \"r\")\n\n➊ print(secretFile.read())\n   secretFile.close()\n```", "```\nCool\nDance\nParty\n```", "```\nsecretFile = open(\"secretFile.txt\", \"r\")\n\nprint(secretFile.readline())\nprint(secretFile.readline())\nprint(secretFile.readline())\n\nsecretFile.close()\n```", "```\n➊ toDoFile =\n\n➋ toDoList = \"\"\n\n➌ toDoItem = input(\"Enter a to-do list item: \")\n\n➍ while toDoItem != \"exit\":\n➎     toDoList = toDoList + toDoItem + \"\\n\"\n       toDoItem = input(\"Enter a to-do list item: \")\n\n➏ # Write the to-do list to the file\n➐ # Close the file\n```", "```\n   from mcpi.minecraft import Minecraft\n   mc = Minecraft.create()\n\n➊ toDoList =\n\n   for line in toDoList:\n➋     # Output \"line\" to the chat\n```", "```\n➊ import pickle\n\n   locations = {'John': 'Forest', 'Phillipa': 'Mountains', 'Pete': 'City'}\n\n➋ secretFile= open(\"secretFile.txt\", \"wb\")\n➌ pickle.dump(locations, secretFile)\n```", "```\n   import pickle\n\n➊ secretFile= open(\"secretFile.txt\", \"rb\")\n   locations = pickle.load(secretFile)\n```", "```\nprint(locations['Phillipa'])\n```", "```\n➊ from pickle import dump\n\n   locations = {'John': 'Forest', 'Phillipa': 'Mountains', 'Pete': 'City'}\n\n   secretFile= open(\"secretFile\", \"wb\")\n➋ dump(locations, secretFile)\n```", "```\n➊ from pickle import dump, load\n   locations = {'John': 'Forest', 'Phillipa': 'Mountains', 'Pete': 'City'}\n\n   secretFile= open(\"secretFile\", \"wb\")\n➋ dump(locations, secretFile)\n\n➌ locations = load(secretFile)\n   print(locations['Phillipa'])\n```", "```\n➊ from pickle import *\n   locations = {'John': 'Forest', 'Phillipa': 'Mountains', 'Pete': 'City'}\n\n   secretFile= open(\"secretFile\", \"wb\")\n➋ dump(locations, secretFile)\n\n➌ locations = load(secretFile)\n   print(locations['Phillipa'])\n```", "```\nimport pickle as p\n```", "```\np.dump(locations, secretFile)\n```", "```\n   from mcpi.minecraft import Minecraft\n   mc = Minecraft.create()\n\n   import pickle\n\n   def sortPair(val1, val2):\n       if val1 > val2:\n           return val2, val1\n       else:\n           return val1, val2\n\n➊ def copyStructure(x1, y1, z1, x2, y2, z2):\n       x1, x2 = sortPair(x1, x2)\n       y1, y2 = sortPair(y1, y2)\n       z1, z2 = sortPair(z1, z2)\n\n       width = x2 - x1\n       height = y2 - y1\n       length = z2 - z1\n\n       structure = []\n\n       print(\"Please wait...\" )\n\n       # Copy the structure\n       for row in range(height):\n           structure.append([])\n           for column in range(width):\n               structure[row].append([])\n               for depth in range(length):\n➋                 block = mc.getBlock(x1 + column, y1 + row, z1 + depth)\n                   structure[row][column].append(block)\n\n       return structure\n\n➌ # Get the position of the first corner\n   input(\"Move to the first position and press ENTER in this window\")\n   pos1 = mc.player.getTilePos()\n\n   x1 = pos1.x\n   y1 = pos1.y\n   z1 = pos1.z\n\n➍ # Get the position of the second corner\n   input(\"Move to the opposite corner and press ENTER in this window\")\n   pos2 = mc.player.getTilePos()\n\n   x2 = pos2.x\n   y2 = pos2.y\n   z2 = pos2.z\n\n➎ structure = copyStructure( x1, y1, z1, x2, y2, z2)\n\n➏ # Store the structure in a file\n```", "```\n   from mcpi.minecraft import Minecraft\n   mc = Minecraft.create()\n\n   import pickle\n\n➊ def buildStructure(x, y, z, structure):\n       xStart = x\n       zStart = z\n       for row in structure:\n           for column in row:\n               for block in column:\n                   mc.setBlock(x, y, z, block.id, block.data)\n                   z += 1\n               x += 1\n               z = zStart\n           y += 1\n           x = xStart\n\n   # Open and load the structure file\n➋ structure =\n\n➌ pos = mc.player.getTilePos()\n   x = pos.x\n   y = pos.y\n   z = pos.z\n➍ buildStructure(x, y, z, structure)\n```", "```\nimport shelve\nshelveFile = shelve.open(\"locationsFile.db\")\n```", "```\nimport shelve\nshelveFile = shelve.open(\"locationsFile.db\")\nshelveFile['Beatrice'] = 'Submarine'\nshelveFile.close()\n```", "```\nimport shelve\nshelveFile = shelve.open('locationsFile.db')\nshelveFile['Beatrice'] = 'Headquarters'\nshelveFile.close()\n```", "```\nimport shelve\nshelveFile = shelve.open('locationsFile.db')\nprint(shelveFile['Beatrice'])\n```", "```\n➊ import pickle\n\n   --snip--\n\n   # Name the structure\n➋ structureName = input(\"What do you want to call the structure?\")\n   # Store the structure in a file\n➌ pickleFile = open(\"pickleFile\", \"wb\")\n➍ pickleFile.dump(structure)\n```", "```\n➊ import pickle\n\n   --snip--\n\n➋ structure = pickle.load(\"pickleFile\")\n➌ structureName = input(\"Enter the structure's name\")\n\n   pos = mc.player.getTilePos()\n   x = pos.x\n   y = pos.y\n   z = pos.z\n\n➍ buildStructure(x, y, z, structureDictionary[structureName])\n```", "```\n> pip install Flask\n```", "```\n$ sudo pip install Flask\n```", "```\n   from flask import Flask\n➊ app = Flask(__name__)\n\n➋ @app.route(\"/\")\n   def showName():\n➌     return \"Craig Richardson\"\n\n➍ app.run()\n```", "```\n* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n```"]