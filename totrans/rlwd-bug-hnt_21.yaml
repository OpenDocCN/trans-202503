- en: '**A'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: TOOLS**
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/common.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This appendix contains a laundry list of hacking tools. Some of these tools
    allow you to automate your recon process, and others help you discover applications
    to attack. This list is not meant to be exhaustive; it only reflects tools I commonly
    use or know that other hackers use regularly. Also keep in mind that none of these
    tools should replace observation or intuitive thinking. Michiel Prins, co-founder
    of HackerOne, deserves credit for helping develop the initial version of this
    list and providing advice on how to effectively use tools when I started hacking.
  prefs: []
  type: TYPE_NORMAL
- en: '**Web Proxies**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Web proxies capture your web traffic so you can analyze requests sent and responses
    received. Several of these tools are available free of charge, although professional
    versions of such tools have additional features.
  prefs: []
  type: TYPE_NORMAL
- en: '**Burp Suite**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Burp Suite (*[https://portswigger.net/burp/](https://portswigger.net/burp/)*)
    is an integrated platform for security testing. The most helpful of the tools
    in the platform, and the one I use 90 percent of the time, is Burp’s web proxy.
    Recall from the bug reports in the book that the proxy allows you to monitor your
    traffic, intercept requests in real time, modify them, and then forward them.
    Burp has an extensive set of tools, but these are the ones I find most noteworthy:'
  prefs: []
  type: TYPE_NORMAL
- en: An application-aware Spider for crawling content and functionality (either passively
    or actively)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A web scanner for automating vulnerability detection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A repeater for manipulating and resending individual requests
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extensions to build additional functionality on the platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Burp is available for free with limited access to its tools, although you can
    also buy a Pro version for an annual subscription. I recommend starting with the
    free version until you understand how to use it. When you’re steadily finding
    vulnerabilities, buy the Pro edition to make your life easier.
  prefs: []
  type: TYPE_NORMAL
- en: '**Charles**'
  prefs: []
  type: TYPE_NORMAL
- en: Charles (*[https://www.charlesproxy.com/](https://www.charlesproxy.com/)*) is
    an HTTP proxy, an HTTP monitor, and a reverse proxy tool that enables a developer
    to view HTTP and SSL/HTTPS traffic. With it, you can view requests, responses,
    and HTTP headers (which contain cookies and caching information).
  prefs: []
  type: TYPE_NORMAL
- en: '**Fiddler**'
  prefs: []
  type: TYPE_NORMAL
- en: Fiddler (*[https://www.telerik.com/fiddler/](https://www.telerik.com/fiddler/)*)
    is another lightweight proxy you can use to monitor your traffic, but the stable
    version is only available for Windows. Mac and Linux versions are available in
    beta at the time of this writing.
  prefs: []
  type: TYPE_NORMAL
- en: '**Wireshark**'
  prefs: []
  type: TYPE_NORMAL
- en: Wireshark (*[https://www.wireshark.org/](https://www.wireshark.org/)*) is a
    network protocol analyzer that lets you see what is happening on your network
    in detail. Wireshark is most useful when you’re trying to monitor traffic that
    can’t be proxied via Burp or ZAP. If you’re just starting out, using Burp Suite
    might be best if the site is only communicating over HTTP/HTTPS.
  prefs: []
  type: TYPE_NORMAL
- en: '**ZAP Proxy**'
  prefs: []
  type: TYPE_NORMAL
- en: The OWASP Zed Attack Proxy (ZAP) is a free, community-based, open source platform
    similar to Burp. It’s available at *[https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project](https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project)*.
    It also has a variety of tools, including a proxy, repeater, scanner, directory/file
    brute-forcer, and so on. In addition, it supports add-ons so you can create additional
    functionality if you’re so inclined. The website has some useful information to
    help you get started.
  prefs: []
  type: TYPE_NORMAL
- en: '**Subdomain Enumeration**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Websites often have subdomains that are hard to discover through manual work.
    Brute-forcing subdomains can help you identify a program’s additional attack surface.
  prefs: []
  type: TYPE_NORMAL
- en: '**Amass**'
  prefs: []
  type: TYPE_NORMAL
- en: The OWASP Amass tool (*[https://github.com/OWASP/Amass](https://github.com/OWASP/Amass)*)
    obtains subdomain names by scraping data sources, using recursive brute-forcing,
    crawling web archives, permuting or altering names, and using reverse DNS sweeping.
    Amass also uses the IP addresses obtained during resolution to discover associated
    netblocks and autonomous system numbers (ASNs). It then uses that information
    to build maps of the target networks.
  prefs: []
  type: TYPE_NORMAL
- en: '**[crt.sh](http://crt.sh)**'
  prefs: []
  type: TYPE_NORMAL
- en: The [crt.sh](http://crt.sh) website (*[https://crt.sh/](https://crt.sh/)*) allows
    you to browse certificate transparency logs so you can find subdomains associated
    with certificates. Certificate registration can reveal any other subdomains a
    site is using. You can use the website directly or the tool SubFinder, which parses
    results from [crt.sh](http://crt.sh).
  prefs: []
  type: TYPE_NORMAL
- en: '**Knockpy**'
  prefs: []
  type: TYPE_NORMAL
- en: Knockpy (*[https://github.com/guelfoweb/knock/](https://github.com/guelfoweb/knock/)*)
    is a Python tool designed to iterate over a word list to identify a company’s
    subdomains. Identifying subdomains gives you a larger testable surface and increases
    the chances of finding a successful vulnerability.
  prefs: []
  type: TYPE_NORMAL
- en: '**SubFinder**'
  prefs: []
  type: TYPE_NORMAL
- en: SubFinder (*[https://github.com/subfinder/subfinder/](https://github.com/subfinder/subfinder/)*)
    is a subdomain discovery tool written in Go that discovers valid website subdomains
    by using passive online sources. It has a simple modular architecture and is meant
    to replace a similar tool, Sublist3r. SubFinder uses passive sources, search engines,
    pastebins, internet archives, and so on to find subdomains. When it finds subdomains,
    it uses a permutation module inspired by the tool altdns to generate permutations
    and a powerful brute-forcing engine to resolve them. It can also perform plain
    brute-forcing if needed. The tool is highly customizable, and the code is built
    using a modular approach, making it easy to add functionality and remove errors.
  prefs: []
  type: TYPE_NORMAL
- en: '**Discovery**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you’ve identified a program’s attack surface, the next step is to enumerate
    files and directories. Doing so can help you find hidden functionality, sensitive
    files, credentials, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '**Gobuster**'
  prefs: []
  type: TYPE_NORMAL
- en: Gobuster (*[https://github.com/OJ/gobuster/](https://github.com/OJ/gobuster/)*)
    is a tool you can use to brute-force URIs (directories and files) and DNS subdomains
    using wildcard support. It’s extremely fast, customizable, and easy to use.
  prefs: []
  type: TYPE_NORMAL
- en: '**SecLists**'
  prefs: []
  type: TYPE_NORMAL
- en: Although technically not a tool in and of itself, SecLists (*[https://github.com/danielmiessler/SecLists/](https://github.com/danielmiessler/SecLists/)*)
    is a collection of word lists you can use while hacking. The lists include usernames,
    passwords, URLs, fuzzing strings, common directories/files/subdomains, and so
    on.
  prefs: []
  type: TYPE_NORMAL
- en: '**Wfuzz**'
  prefs: []
  type: TYPE_NORMAL
- en: Wfuzz (*[https://github.com/xmendez/wfuzz/](https://github.com/xmendez/wfuzz/)*)
    allows you to inject any input in any field of an HTTP request. Using Wfuzz, you
    can perform complex attacks on a web application’s different components, such
    as its parameters, authentication, forms, directories or files, headers, and so
    on. You can also use Wfuzz as a vulnerability scanner when supported with plug-ins.
  prefs: []
  type: TYPE_NORMAL
- en: '**Screenshotting**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In some cases, your attack surface will be too large for you to test every aspect
    of it. When you need to check a long list of websites or subdomains, you can use
    automatic screenshot tools. These tools allow you to visually inspect websites
    without visiting each one.
  prefs: []
  type: TYPE_NORMAL
- en: '**EyeWitness**'
  prefs: []
  type: TYPE_NORMAL
- en: EyeWitness (*[https://github.com/FortyNorthSecurity/EyeWitness/](https://github.com/FortyNorthSecurity/EyeWitness/)*)
    is designed to take screenshots of websites, provide server header information,
    and identify default credentials when possible. It’s a great tool for detecting
    which services are running on common HTTP and HTTPS ports, and you can use it
    with other tools, like Nmap, to quickly enumerate hacking targets.
  prefs: []
  type: TYPE_NORMAL
- en: '**Gowitness**'
  prefs: []
  type: TYPE_NORMAL
- en: Gowitness (*[https://github.com/sensepost/gowitness/](https://github.com/sensepost/gowitness/)*)
    is a website screenshot utility written in Go. It uses Chrome Headless to generate
    screenshots of web interfaces using the command line. The project is inspired
    by the EyeWitness tool.
  prefs: []
  type: TYPE_NORMAL
- en: '**HTTPScreenShot**'
  prefs: []
  type: TYPE_NORMAL
- en: HTTPScreenShot (*[https://github.com/breenmachine/httpscreenshot/](https://github.com/breenmachine/httpscreenshot/)*)
    is a tool for grabbing screenshots and the HTML of large numbers of websites.
    HTTPScreenShot accepts IPs as a list of URLs to screenshot. It can also brute-force
    subdomains, add them to the list of URLs to be screenshotted, and cluster results
    for easier review.
  prefs: []
  type: TYPE_NORMAL
- en: '**Port Scanning**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In addition to finding URLs and subdomains, you’ll need to figure out what ports
    are available and what applications a server is running.
  prefs: []
  type: TYPE_NORMAL
- en: '**Masscan**'
  prefs: []
  type: TYPE_NORMAL
- en: Masscan (*[https://github.com/robertdavidgraham/masscan/](https://github.com/robertdavidgraham/masscan/)*)
    claims to be the world’s fastest internet port scanner. It can scan the entire
    internet in less than six minutes, transmitting 10 million packets per second.
    It produces results similar to Nmap, only faster. In addition, Masscan allows
    you to scan arbitrary address ranges and port ranges.
  prefs: []
  type: TYPE_NORMAL
- en: '**Nmap**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Nmap (*[https://nmap.org/](https://nmap.org/)*) is a free and open source utility
    for network discovery and security auditing. Nmap uses raw IP packets to determine:'
  prefs: []
  type: TYPE_NORMAL
- en: Which hosts are available on a network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which services (along with the application name and version) those hosts are
    offering
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which operating systems (and versions) they’re running
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What type of packet filters or firewalls are in use
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Nmap site has a robust list of installation instructions for Windows, Mac,
    and Linux. In addition to port scanning, Nmap also includes scripts to build additional
    functionality. One script I commonly use is `http-enum` to enumerate files and
    directories on servers after port scanning them.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reconnaissance**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: After you’ve found the URIs, subdomains, and ports of websites you can test,
    you’ll need to learn more about the technologies they use and the other parts
    of the internet they’re connected to. The following tools will help you do this.
  prefs: []
  type: TYPE_NORMAL
- en: '**BuiltWith**'
  prefs: []
  type: TYPE_NORMAL
- en: BuiltWith (*[http://builtwith.com/](http://builtwith.com/)*) helps you fingerprint
    different technologies used on a target. According to its site, it can check for
    more than 18,000 types of internet technologies, including analytics, hosting,
    the CMS type, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '**Censys**'
  prefs: []
  type: TYPE_NORMAL
- en: Censys (*[https://censys.io/](https://censys.io/)*) collects data on hosts and
    websites through daily ZMap and ZGrab scans of the IPv4 address space. It maintains
    a database of how hosts and websites are configured. Unfortunately, Censys recently
    implemented a paid model, which is expensive to use for large-scale hacking, but
    the free tier can still be helpful.
  prefs: []
  type: TYPE_NORMAL
- en: '**Google Dorks**'
  prefs: []
  type: TYPE_NORMAL
- en: Google Dorking (*[https://www.exploit-db.com/google-hacking-database/](https://www.exploit-db.com/google-hacking-database/)*)
    refers to using advanced syntaxes that Google provides to find information not
    readily available when navigating a website manually. This information can include
    finding vulnerable files, opportunities for external resource loading, and other
    attack surfaces.
  prefs: []
  type: TYPE_NORMAL
- en: '**Shodan**'
  prefs: []
  type: TYPE_NORMAL
- en: Shodan (*[https://www.shodan.io/](https://www.shodan.io/)*) is a search engine
    for the internet of things. Shodan can help you discover which devices are connected
    to the internet, where they’re located, and who is using them. This is particularly
    helpful when you’re exploring a potential target and trying to learn as much about
    the target’s infrastructure as you can.
  prefs: []
  type: TYPE_NORMAL
- en: '**What CMS**'
  prefs: []
  type: TYPE_NORMAL
- en: 'What CMS (*[http://www.whatcms.org/](http://www.whatcms.org/)*) allows you
    to enter a URL and returns the content management system (CMS) the site is most
    likely using. Finding the type of CMS a site is using is helpful because:'
  prefs: []
  type: TYPE_NORMAL
- en: Knowing which CMS a site uses gives you insight into the site code’s structure.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the CMS is open source, you can browse the code for vulnerabilities and test
    them on the site.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The site might be outdated and vulnerable to disclosed security vulnerabilities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hacking Tools**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using hacking tools, you can automate not only the discovery and enumeration
    process, but also the processes for finding vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bucket Finder**'
  prefs: []
  type: TYPE_NORMAL
- en: Bucket Finder (*[https://digi.ninja/files/bucket_finder_1.1.tar.bz2](https://digi.ninja/files/bucket_finder_1.1.tar.bz2)*)
    searches for readable buckets and lists all the files in them. It can also quickly
    find buckets that exist but don’t allow you to list files. When you find these
    bucket types, you can try using the AWS CLI described in the bug report “HackerOne
    S3 Buckets Open” on [page 223](app02.xhtml#page_223).
  prefs: []
  type: TYPE_NORMAL
- en: '**CyberChef**'
  prefs: []
  type: TYPE_NORMAL
- en: CyberChef (*[https://gchq.github.io/CyberChef/](https://gchq.github.io/CyberChef/)*)
    is a Swiss army knife of encoding and decoding tools.
  prefs: []
  type: TYPE_NORMAL
- en: '**Gitrob**'
  prefs: []
  type: TYPE_NORMAL
- en: Gitrob (*[https://github.com/michenriksen/gitrob/](https://github.com/michenriksen/gitrob/)*)
    helps you find potentially sensitive files that have been pushed to public repositories
    on GitHub. Gitrob clones repositories belonging to a user or organization down
    to a configurable depth and iterates through the commit history and flag files
    that match signatures for potentially sensitive files. It presents its findings
    via a web interface for easy browsing and analysis.
  prefs: []
  type: TYPE_NORMAL
- en: '**Online Hash Crack**'
  prefs: []
  type: TYPE_NORMAL
- en: Online Hash Crack (*[https://www.onlinehashcrack.com/](https://www.onlinehashcrack.com/)*)
    attempts to recover passwords in hash form, WPA dumps, and MS Office encrypted
    files. It supports the identification of more than 250 hash types and is useful
    when you want to identify the type of hash a website uses.
  prefs: []
  type: TYPE_NORMAL
- en: '**sqlmap**'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the open source penetration tool sqlmap (*[http://sqlmap.org/](http://sqlmap.org/)*)
    to automate the process of detecting and exploiting SQL injection vulnerabilities.
    The website has a list of features, including support for the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A wide range of database types, such as MySQL, Oracle, PostgreSQL, MS SQL Server,
    and others
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Six SQL injection techniques
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User, password hash, privilege, role, database, table, and column enumeration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**XSSHunter**'
  prefs: []
  type: TYPE_NORMAL
- en: XSSHunter (*[https://xsshunter.com/](https://xsshunter.com/)*) helps you find
    blind XSS vulnerabilities. After signing up for XSSHunter, you get an *xss.ht*
    short domain that identifies your XSS and hosts your payload. When the XSS fires,
    it automatically collects information about where it occurred and sends you an
    email notification.
  prefs: []
  type: TYPE_NORMAL
- en: '**Ysoserial**'
  prefs: []
  type: TYPE_NORMAL
- en: Ysoserial (*[https://github.com/frohoff/ysoserial/](https://github.com/frohoff/ysoserial/)*)
    is a proof-of-concept tool for generating payloads that exploit unsafe Java object
    deserialization.
  prefs: []
  type: TYPE_NORMAL
- en: '**Mobile**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Although most of the bugs in this book were found through web browsers, in some
    cases, you’ll need to analyze mobile apps as part of your testing. Being able
    to break down and analyze the apps’s components will help you learn how they work
    and how they might be vulnerable.
  prefs: []
  type: TYPE_NORMAL
- en: '**dex2jar**'
  prefs: []
  type: TYPE_NORMAL
- en: The dex2jar (*[https://sourceforge.net/projects/dex2jar/](https://sourceforge.net/projects/dex2jar/)*)
    set of mobile hacking tools converts dalvik executables (*.dex* files) to Java
    *.jar* files, which makes auditing Android APKs much easier.
  prefs: []
  type: TYPE_NORMAL
- en: '**Hopper**'
  prefs: []
  type: TYPE_NORMAL
- en: Hopper (*[https://www.hopperapp.com/](https://www.hopperapp.com/)*) is a reverse
    engineering tool that lets you disassemble, decompile, and debug applications.
    It’s useful for auditing iOS applications.
  prefs: []
  type: TYPE_NORMAL
- en: '**JD-GUI**'
  prefs: []
  type: TYPE_NORMAL
- en: JD-GUI (*[https://github.com/java-decompiler/jd-gui/](https://github.com/java-decompiler/jd-gui/)*)
    helps you explore Android apps. It’s a stand-alone graphical utility that displays
    Java sources from *CLASS* files.
  prefs: []
  type: TYPE_NORMAL
- en: '**Browser Plug-Ins**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Firefox has several browser plug-ins you can use in combination with your other
    tools. Although I’ve covered only the Firefox versions of the tools here, there
    might be equivalent tools you can use on other browsers.
  prefs: []
  type: TYPE_NORMAL
- en: '**FoxyProxy**'
  prefs: []
  type: TYPE_NORMAL
- en: FoxyProxy is an advanced proxy management add-on for Firefox. It improves Firefox’s
    built-in proxy capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: '**User Agent Switcher**'
  prefs: []
  type: TYPE_NORMAL
- en: User Agent Switcher adds a menu and toolbar button in the Firefox browser that
    allows you to switch your user agent. You can use this feature to spoof your browser
    while performing some attacks.
  prefs: []
  type: TYPE_NORMAL
- en: '**Wappalyzer**'
  prefs: []
  type: TYPE_NORMAL
- en: Wappalyzer helps you identify the technologies a site uses, such as CloudFlare,
    Frameworks, JavaScript libraries, and so on.
  prefs: []
  type: TYPE_NORMAL
